<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-27T01:48:26Z</updated>
  <subtitle>Weekly Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>alanhaggai/Net-COLOURlovers</title>
    <updated>2022-11-27T01:48:26Z</updated>
    <id>tag:github.com,2022-11-27:/alanhaggai/Net-COLOURlovers</id>
    <link href="https://github.com/alanhaggai/Net-COLOURlovers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Interface to COLOURlovers.com&#39;s API&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>ddclient/ddclient</title>
    <updated>2022-11-27T01:48:26Z</updated>
    <id>tag:github.com,2022-11-27:/ddclient/ddclient</id>
    <link href="https://github.com/ddclient/ddclient" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is the new home for ddclient. Ddclient is a Perl client used to update dynamic DNS entries for accounts on &#39;Dynamic DNS Network Services&#39; free DNS service. It currently supports a lot of different routers and a few different services.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DDCLIENT&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;ddclient&lt;/code&gt; is a Perl client used to update dynamic DNS entries for accounts on many dynamic DNS services.&lt;/p&gt; &#xA;&lt;h2&gt;Supported services&lt;/h2&gt; &#xA;&lt;p&gt;Dynamic DNS services currently supported include:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;DynDNS.com  - See http://www.dyndns.com for details on obtaining a free account.&#xA;Zoneedit    - See http://www.zoneedit.com for details.&#xA;EasyDNS     - See http://www.easydns.com for details.&#xA;NameCheap   - See http://www.namecheap.com for details&#xA;DslReports  - See http://www.dslreports.com for details&#xA;Sitelutions - See http://www.sitelutions.com for details&#xA;Loopia      - See http://www.loopia.se for details&#xA;Noip        - See http://www.noip.com/ for details&#xA;Freedns     - See http://freedns.afraid.org/ for details&#xA;ChangeIP    - See http://www.changeip.com/ for details&#xA;nsupdate    - See nsupdate(1) and ddns-confgen(8) for details&#xA;CloudFlare  - See https://www.cloudflare.com/ for details&#xA;GoDaddy     - See https://www.godaddy.com/ for details&#xA;Google      - See http://www.google.com/domains for details&#xA;Duckdns     - See https://duckdns.org/ for details&#xA;Freemyip    - See https://freemyip.com for details&#xA;woima.fi    - See https://woima.fi/ for details&#xA;Yandex      - See https://domain.yandex.com/ for details&#xA;DNS Made Easy - See https://dnsmadeeasy.com/ for details&#xA;DonDominio  - See https://www.dondominio.com for details&#xA;NearlyFreeSpeech.net - See https://www.nearlyfreespeech.net/services/dns for details&#xA;OVH         - See https://www.ovh.com for details&#xA;ClouDNS     - See https://www.cloudns.net&#xA;dinahosting - See https://dinahosting.com&#xA;Gandi       - See https://gandi.net&#xA;dnsexit     - See https://dnsexit.com/ for details&#xA;1984.is     - See https://www.1984.is/product/freedns/ for details&#xA;Njal.la     - See https://njal.la/docs/ddns/&#xA;regfish.de  - See https://www.regfish.de/domains/dyndns/ for details&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;ddclient&lt;/code&gt; now supports many cable and DSL broadband routers.&lt;/p&gt; &#xA;&lt;p&gt;Comments, suggestions and requests: use the issues on &lt;a href=&#34;https://github.com/ddclient/ddclient/issues/new&#34;&gt;https://github.com/ddclient/ddclient/issues/new&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The code was originally written by Paul Burry and is now hosted and maintained through github.com. Please check out &lt;a href=&#34;http://ddclient.net&#34;&gt;http://ddclient.net&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;REQUIREMENTS&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An account from a supported dynamic DNS service provider&lt;/li&gt; &#xA; &lt;li&gt;Perl v5.10.1 or later &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;IO::Socket::SSL&lt;/code&gt; perl library for ssl-support&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;JSON::PP&lt;/code&gt; perl library for JSON support&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;IO::Socket::INET6&lt;/code&gt; perl library for ipv6-support&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Linux, macOS, or any other Unix-ish system&lt;/li&gt; &#xA; &lt;li&gt;An implementation of &lt;code&gt;make&lt;/code&gt; (such as &lt;a href=&#34;https://www.gnu.org/software/make/&#34;&gt;GNU Make&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;If you are installing from a clone of the Git repository, you will also need &lt;a href=&#34;https://www.gnu.org/software/autoconf/&#34;&gt;GNU Autoconf&lt;/a&gt; and &lt;a href=&#34;https://www.gnu.org/software/automake/&#34;&gt;GNU Automake&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;DOWNLOAD&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ddclient/ddclient/releases&#34;&gt;https://github.com/ddclient/ddclient/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;INSTALLATION&lt;/h2&gt; &#xA;&lt;h3&gt;Distribution Package&lt;/h3&gt; &#xA;&lt;a href=&#34;https://repology.org/project/ddclient/versions&#34;&gt; &lt;img src=&#34;https://repology.org/badge/vertical-allrepos/ddclient.svg?sanitize=true&#34; alt=&#34;Packaging status&#34; align=&#34;right&#34;&gt; &lt;/a&gt; The easiest way to install ddclient is to install a package offered by your operating system. See the image to the right for a list of distributions with a ddclient package. &#xA;&lt;h3&gt;Manual Installation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Extract the distribution tarball (&lt;code&gt;.tar.gz&lt;/code&gt; file) and &lt;code&gt;cd&lt;/code&gt; into the directory:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;tar xvfa ddclient-3.XX.X.tar.gz&#xA;cd ddclient-3.XX.X&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(If you are installing from a clone of the Git repository, you must run &lt;code&gt;./autogen&lt;/code&gt; before continuing to the next step.)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the following commands to build and install:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./configure \&#xA;    --prefix=/usr \&#xA;    --sysconfdir=/etc/ddclient \&#xA;    --localstatedir=/var&#xA;make&#xA;make VERBOSE=1 check&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Edit &lt;code&gt;/etc/ddclient/ddclient.conf&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;systemd&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp sample-etc_systemd.service /etc/systemd/system/ddclient.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;enable automatic startup when booting&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;systemctl enable ddclient.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;start the first time by hand&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;systemctl start ddclient.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Redhat style rc files and daemon-mode&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp sample-etc_rc.d_init.d_ddclient /etc/rc.d/init.d/ddclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;enable automatic startup when booting. also check your distribution&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/sbin/chkconfig --add ddclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;start the first time by hand&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/etc/rc.d/init.d/ddclient start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Alpine style rc files and daemon-mode&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp sample-etc_rc.d_init.d_ddclient.alpine /etc/init.d/ddclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;enable automatic startup when booting&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rc-update add ddclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;make sure you have perl installed&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apk add perl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;start the first time by hand&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rc-service ddclient start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Ubuntu style rc files and daemon-mode&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp sample-etc_rc.d_init.d_ddclient.ubuntu /etc/init.d/ddclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;enable automatic startup when booting&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;update-rc.d ddclient defaults&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;make sure you have perl and the required modules installed&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt-get install perl libdata-validate-ip-perl libio-socket-ssl-perl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;if you plan to use cloudflare or feedns you need the perl json module&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt-get install libjson-pp-perl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;for IPv6 you also need to instal the perl io-socket-inet6 module&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt install libio-socket-inet6-perl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;start the first time by hand&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;service ddclient start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;FreeBSD style rc files and daemon mode&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir -p /usr/local/etc/rc.d&#xA;cp sample-etc_rc.d_ddclient.freebsd /usr/local/etc/rc.d/ddclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;enable automatic startup when booting&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sysrc ddclient_enable=YES&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;make sure you have perl and the required modules installed&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pkg install perl5 p5-Data-Validate-IP p5-IO-Socket-SSL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;if you plan to use cloudflare or feedns you need the perl json module&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pkg install p5-JSON-PP&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;start the service manually for the first time&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;service ddclient start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are not using daemon-mode, configure cron and dhcp or ppp as described below.&lt;/p&gt; &#xA;&lt;h2&gt;TROUBLESHOOTING&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;enable debugging and verbose messages: &lt;code&gt;$ ddclient -daemon=0 -debug -verbose -noquiet&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Do you need to specify a proxy? If so, just add a &lt;code&gt;proxy=your.isp.proxy&lt;/code&gt; to the ddclient.conf file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Define the IP address of your router with &lt;code&gt;fw=xxx.xxx.xxx.xxx&lt;/code&gt; in &lt;code&gt;/etc/ddclient/ddclient.conf&lt;/code&gt; and then try &lt;code&gt;$ ddclient -daemon=0 -query&lt;/code&gt; to see if the router status web page can be understood.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Need support for another router/firewall? Define the router status page yourself with: &lt;code&gt;fw=url-to-your-router&lt;/code&gt;&#39;s-status-page &lt;code&gt;fw-skip=any-string-preceding-your-IP-address&lt;/code&gt;&lt;/p&gt; &lt;p&gt;ddclient does something like this to provide builtin support for common routers. For example, the Linksys routers could have been added with:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;fw=192.168.1.1/Status.htm&#xA;fw-skip=WAN.*?IP Address&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OR Send me the output from: &lt;code&gt;$ ddclient -geturl {fw-ip-status-url} [-login login [-password password]]&lt;/code&gt; and I&#39;ll add it to the next release!&lt;/p&gt; &#xA;&lt;p&gt;ie. for my fw/router I used: &lt;code&gt;$ ddclient -geturl 192.168.1.254/status.htm&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Some broadband routers require the use of a password when ddclient accesses its status page to determine the router&#39;s WAN IP address. If this is the case for your router, add&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;fw-login=your-router-login&#xA;fw-password=your-router-password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to the beginning of your ddclient.conf file. Note that some routers use either &#39;root&#39; or &#39;admin&#39; as their login while some others accept anything.&lt;/p&gt; &#xA;&lt;h2&gt;USING DDCLIENT WITH &lt;code&gt;ppp&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you are using a ppp connection, you can easily update your DynDNS entry with each connection, with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;## configure pppd to update DynDNS with each connection&#xA;cp sample-etc_ppp_ip-up.local /etc/ppp/ip-up.local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you may just configure ddclient to operate as a daemon and monitor your ppp interface.&lt;/p&gt; &#xA;&lt;h2&gt;USING DDCLIENT WITH &lt;code&gt;cron&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you have not configured ddclient to use daemon-mode, you&#39;ll need to configure cron to force an update once a month so that the dns entry will not become stale.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;## configure cron to force an update twice a month&#xA;cp sample-etc_cron.d_ddclient /etc/cron.d/ddclient&#xA;vi /etc/cron.d/ddclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;USING DDCLIENT WITH &lt;code&gt;dhcpcd-1.3.17&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you are using dhcpcd-1.3.17 or thereabouts, you can easily update your DynDNS entry automatically every time your lease is obtained or renewed by creating an executable file named: &lt;code&gt;/etc/dhcpc/dhcpcd-{your-interface}.exe&lt;/code&gt; ie.: &lt;code&gt;cp sample-etc_dhcpc_dhcpcd-eth0.exe /etc/dhcpc/dhcpcd-{your-interface}.exe&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;In my case, it is named dhcpcd-eth0.exe and contains the lines:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;#!/bin/sh&#xA;PATH=/usr/bin:/root/bin:${PATH}&#xA;logger -t dhcpcd IP address changed to $1&#xA;ddclient -proxy fasthttp.sympatico.ca -wildcard -ip $1 | logger -t ddclient&#xA;exit 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Other DHCP clients may have another method of calling out to programs for updating DNS entries.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you may just configure ddclient to operate as a daemon and monitor your ethernet interface.&lt;/p&gt; &#xA;&lt;h2&gt;USING DDCLIENT WITH &lt;code&gt;dhclient&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you are using the ISC DHCP client (dhclient), you can update your DynDNS entry automatically every time your lease is obtained or renewed by creating an executable file named: &lt;code&gt;/etc/dhclient-exit-hooks&lt;/code&gt; ie.: &lt;code&gt;cp sample-etc_dhclient-exit-hooks /etc/dhclient-exit-hooks&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Edit &lt;code&gt;/etc/dhclient-exit-hooks&lt;/code&gt; to change any options required.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you may just configure ddclient to operate as a daemon and monitor your ethernet interface.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>caballero/RepeatEvolution</title>
    <updated>2022-11-27T01:48:26Z</updated>
    <id>tag:github.com,2022-11-27:/caballero/RepeatEvolution</id>
    <link href="https://github.com/caballero/RepeatEvolution" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Synthetic evolution of repeat consensi&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RepeatEvolution&lt;/h1&gt; &#xA;&lt;p&gt;Synthetic evolution of repeat consensi&lt;/p&gt;</summary>
  </entry>
</feed>