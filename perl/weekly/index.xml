<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-01T02:18:04Z</updated>
  <subtitle>Weekly Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>FelixKrueger/TrimGalore</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/FelixKrueger/TrimGalore</id>
    <link href="https://github.com/FelixKrueger/TrimGalore" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A wrapper around Cutadapt and FastQC to consistently apply adapter and quality trimming to FastQ files, with extra functionality for RRBS data&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Trim Galore&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Trim Galore&lt;/em&gt; is a wrapper around &lt;a href=&#34;https://github.com/marcelm/cutadapt&#34;&gt;Cutadapt&lt;/a&gt; and &lt;a href=&#34;http://www.bioinformatics.babraham.ac.uk/projects/fastqc/&#34;&gt;FastQC&lt;/a&gt; to consistently apply adapter and quality trimming to FastQ files, with extra functionality for RRBS data.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://zenodo.org/badge/latestdoi/62039322&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/62039322.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/FelixKrueger/TrimGalore&#34;&gt;&lt;img src=&#34;https://travis-ci.org/FelixKrueger/TrimGalore.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bioconda.github.io/recipes/trim-galore/README.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?sanitize=true&#34; alt=&#34;install with bioconda&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://quay.io/repository/biocontainers/trim-galore&#34;&gt;&lt;img src=&#34;https://quay.io/repository/biocontainers/trim-galore/status&#34; alt=&#34;container ready&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Trim Galore&lt;/em&gt; is a a Perl wrapper around two tools: &lt;a href=&#34;https://github.com/marcelm/cutadapt&#34;&gt;Cutadapt&lt;/a&gt; and &lt;a href=&#34;http://www.bioinformatics.babraham.ac.uk/projects/fastqc/&#34;&gt;FastQC&lt;/a&gt;. To use, ensure that these two pieces of software are available and copy the &lt;code&gt;trim_galore&lt;/code&gt; script to a location available on the &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Check that cutadapt is installed&#xA;cutadapt --version&#xA;# Check that FastQC is installed&#xA;fastqc -v&#xA;# Install Trim Galore&#xA;curl -fsSL https://github.com/FelixKrueger/TrimGalore/archive/0.6.6.tar.gz -o trim_galore.tar.gz&#xA;tar xvzf trim_galore.tar.gz&#xA;# Run Trim Galore&#xA;~/TrimGalore-0.6.6/trim_galore&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For instructions on how to use &lt;em&gt;Trim Galore&lt;/em&gt;, please see the &lt;a href=&#34;https://raw.githubusercontent.com/FelixKrueger/TrimGalore/master/Docs/Trim_Galore_User_Guide.md&#34;&gt;User Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Trim Galore&lt;/em&gt; was developed at The Babraham Institute by &lt;a href=&#34;https://github.com/FelixKrueger/&#34;&gt;@FelixKrueger&lt;/a&gt;. You can find it&#39;s project page here: &lt;a href=&#34;http://www.bioinformatics.babraham.ac.uk/projects/trim_galore/&#34;&gt;bioinformatics.babraham.ac.uk&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>trinityrnaseq/trinityrnaseq</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/trinityrnaseq/trinityrnaseq</id>
    <link href="https://github.com/trinityrnaseq/trinityrnaseq" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Trinity RNA-Seq de novo transcriptome assembly&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;trinityrnaseq&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/trinityrnaseq/trinityrnaseq&#34;&gt;&lt;img src=&#34;https://travis-ci.org/trinityrnaseq/trinityrnaseq.svg?branch=devel&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bioconda.github.io/recipes/trinity/README.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat-square&#34; alt=&#34;install with bioconda&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Trinity RNA-Seq de novo transcriptome assembly see the main webpage &lt;a href=&#34;http://trinityrnaseq.github.io&#34;&gt;http://trinityrnaseq.github.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We encourage you to contribute to Trinity! Please check out the &lt;a href=&#34;https://github.com/trinityrnaseq/trinityrnaseq/wiki/Contributing&#34;&gt;Contributing&lt;/a&gt; for the guidelines.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Oreomeow/checkinpanel</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/Oreomeow/checkinpanel</id>
    <link href="https://github.com/Oreomeow/checkinpanel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一个主要运行在 𝐞𝐥𝐞𝐜𝐕𝟐𝐏 或 𝐪𝐢𝐧𝐠𝐥𝐨𝐧𝐠 等定时面板，同时支持系统运行环境的签到项目（环境：𝑷𝒚𝒕𝒉𝒐𝒏 3.8+ / 𝑵𝒐𝒅𝒆.𝒋𝒔 10+ / 𝑩𝒂𝒔𝒉 4+ / 𝑶𝒑𝒆𝒏𝑱𝑫𝑲8 / 𝑷𝒆𝒓𝒍5）&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1 align=&#34;center&#34;&gt;定时面板上的签到盒&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/Oreomeow/checkinpanel/stargazers&#34;&gt;&lt;img alt=&#34;GitHub Repo stars&#34; src=&#34;https://img.shields.io/github/stars/Oreomeow/checkinpanel?color=yellow&amp;amp;logo=riseup&amp;amp;logoColor=yellow&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Oreomeow/checkinpanel/network/members&#34;&gt;&lt;img alt=&#34;GitHub forks&#34; src=&#34;https://img.shields.io/github/forks/Oreomeow/checkinpanel?color=orange&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Oreomeow/checkinpanel/issues&#34;&gt;&lt;img alt=&#34;GitHub issues&#34; src=&#34;https://img.shields.io/github/issues/Oreomeow/checkinpanel?color=red&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/joinchat/muGNhnaZglQ0N2Q1&#34;&gt;&lt;img alt=&#34;Telegram&#34; src=&#34;https://img.shields.io/badge/chat-telegram-blue.svg?logo=telegram&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Oreomeow/checkinpanel/search?l=python&#34;&gt;&lt;img alt=&#34;GitHub code size in bytes&#34; src=&#34;https://img.shields.io/github/languages/code-size/Oreomeow/checkinpanel?color=blueviolet&amp;amp;logo=visual%20studio%20code&amp;amp;logoColor=informational&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/psf/black&#34;&gt;&lt;img alt=&#34;Code style: black&#34; src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?logo=python&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://scrutinizer-ci.com/g/Oreomeow/checkinpanel/?branch=master&#34;&gt;&lt;img alt=&#34;Scrutinizer code quality (GitHub/Bitbucket)&#34; src=&#34;https://img.shields.io/scrutinizer/quality/g/Oreomeow/checkinpanel?logo=Scrutinizer&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Oreomeow/checkinpanel/commits&#34;&gt;&lt;img alt=&#34;GitHub last commit&#34; src=&#34;https://img.shields.io/github/last-commit/Oreomeow/checkinpanel?color=success&amp;amp;logo=github&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;简介&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;一个主要运行在 &lt;a href=&#34;https://github.com/elecV2/elecV2P.git&#34;&gt;𝐞𝐥𝐞𝐜𝐕𝟐𝐏&lt;/a&gt; 或 &lt;a href=&#34;https://github.com/whyour/qinglong.git&#34;&gt;𝐪𝐢𝐧𝐠𝐥𝐨𝐧𝐠&lt;/a&gt; 等定时面板，同时支持系统运行环境的签到项目&lt;/p&gt; &#xA; &lt;p&gt;环境：𝑷𝒚𝒕𝒉𝒐𝒏 3.8+ / 𝑵𝒐𝒅𝒆.𝒋𝒔 10+ / 𝑩𝒂𝒔𝒉 4+ / 𝑶𝒑𝒆𝒏𝑱𝑫𝑲8 / 𝑷𝒆𝒓𝒍5&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;注意&lt;/h2&gt; &#xA;&lt;p&gt;不回答任何关于依赖安装失败的问题，包括且不限于 pip 无法找到 tomli 依赖等，请仔细阅读项目 README&lt;/p&gt; &#xA;&lt;h2&gt;特别声明&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;本仓库发布的脚本及其中涉及的任何解锁和解密分析脚本，仅用于测试和学习研究，禁止用于商业用途，不能保证其合法性、准确性、完整性和有效性，请根据情况自行判断。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;本项目内所有资源文件，禁止任何公众号、自媒体进行任何形式的转载、发布。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;本人对任何脚本问题概不负责，包括但不限于由任何脚本错误导致的任何损失或损害。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;间接使用脚本的任何用户，包括但不限于建立 VPS 或在某些行为违反国家/地区法律或相关法规的情况下进行传播，本人对于由此引起的任何隐私泄漏或其他后果概不负责。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;请勿将本仓库的任何内容用于商业或非法目的，否则后果自负。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果任何单位或个人认为该项目的脚本可能涉嫌侵犯其权利，则应及时通知并提供身份证明、所有权证明，我们将在收到认证文件后删除相关脚本。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;任何以任何方式查看此项目的人或直接或间接使用该项目的任何脚本的使用者都应仔细阅读此声明。本人保留随时更改或补充此免责声明的权利。一旦使用并复制了任何相关脚本或 checkinpanel 项目的规则，则视为您已接受此免责声明。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;您必须在下载后的 24 小时内从计算机或手机中完全删除以上内容&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;&lt;strong&gt;您使用或者复制了本仓库且本人制作的任何脚本，则视为 &lt;code&gt;已接受&lt;/code&gt; 此声明，请仔细阅读&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;𝐞𝐥𝐞𝐜𝐕𝟐𝐏 使用方法&lt;/h2&gt; &#xA;&lt;h3&gt;1. 添加任务&lt;/h3&gt; &#xA;&lt;p&gt;TASK -&amp;gt; 添加订阅任务 -&amp;gt; 修改名称、更新方式、任务 -&amp;gt; 获取内容 -&amp;gt; 全部添加&lt;/p&gt; &#xA;&lt;p&gt;名称：签到项目&lt;/p&gt; &#xA;&lt;p&gt;同名任务更新方式： &lt;code&gt;替换&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;任务：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;https://raw.githubusercontent.com/Oreomeow/checkinpanel/master/dailycheckin.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. 抓包配置&lt;/h3&gt; &#xA;&lt;p&gt;下载 &lt;a href=&#34;https://raw.githubusercontent.com/Oreomeow/checkinpanel/master/check.sample.toml&#34;&gt;check.sample.toml&lt;/a&gt;，根据注释说明进行抓包并配置&lt;/p&gt; &#xA;&lt;h3&gt;3. 上传配置&lt;/h3&gt; &#xA;&lt;p&gt;将 &lt;code&gt;check.sample.toml&lt;/code&gt; 重命名为 &lt;code&gt;check.toml&lt;/code&gt; 后放入 &lt;code&gt;script/Lists&lt;/code&gt; 文件夹&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;OVERVIEW -&amp;gt; EFSS 文件管理界面 -&amp;gt; 是否开启 EFSS 功能：开启 -&amp;gt; 目录：&lt;code&gt;./script/Lists&lt;/code&gt; -&amp;gt; 选择文件：&lt;code&gt;check.toml&lt;/code&gt; -&amp;gt; 开始上传&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;elecV2P 3.4.6 已支持在线编辑，右键文件即可&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4. 配置通知&lt;/h3&gt; &#xA;&lt;h4&gt;4.1 JSMANAGE -&amp;gt; store/cookie 常量储存管理填写通知环境变量&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;变量 / key&lt;/th&gt; &#xA;   &lt;th&gt;描述&lt;/th&gt; &#xA;   &lt;th&gt;支持语言&lt;/th&gt; &#xA;   &lt;th&gt;参考 / value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HITOKOTO&lt;/td&gt; &#xA;   &lt;td&gt;一言&lt;/td&gt; &#xA;   &lt;td&gt;PY&lt;/td&gt; &#xA;   &lt;td&gt;true 为开启，false 为关闭，默认关闭&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BARK_PUSH&lt;/td&gt; &#xA;   &lt;td&gt;bark 设备码&lt;/td&gt; &#xA;   &lt;td&gt;JS PY&lt;/td&gt; &#xA;   &lt;td&gt;BARK 推送使用，填写 URL 即可，例如： &lt;code&gt;https://api.day.app/DxHcxxxxxRxxxxxxcm&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BARK_ARCHIVE&lt;/td&gt; &#xA;   &lt;td&gt;* bark 存档&lt;/td&gt; &#xA;   &lt;td&gt;PY&lt;/td&gt; &#xA;   &lt;td&gt;是否存档&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BARK_GROUP&lt;/td&gt; &#xA;   &lt;td&gt;* bark 消息分组&lt;/td&gt; &#xA;   &lt;td&gt;JS PY&lt;/td&gt; &#xA;   &lt;td&gt;消息分组&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BARK_SOUND&lt;/td&gt; &#xA;   &lt;td&gt;* bark 声音&lt;/td&gt; &#xA;   &lt;td&gt;JS PY&lt;/td&gt; &#xA;   &lt;td&gt;例如： &lt;code&gt;choo&lt;/code&gt; ，具体值 bark-推送铃声-查看所有铃声&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CONSOLE&lt;/td&gt; &#xA;   &lt;td&gt;控制台输出&lt;/td&gt; &#xA;   &lt;td&gt;PY&lt;/td&gt; &#xA;   &lt;td&gt;true 为开启，false 为关闭，默认关闭&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DD_BOT_SECRET&lt;/td&gt; &#xA;   &lt;td&gt;钉钉机器人&lt;/td&gt; &#xA;   &lt;td&gt;JS PY SH&lt;/td&gt; &#xA;   &lt;td&gt;钉钉推送&lt;a href=&#34;https://ding-doc.dingtalk.com/doc#/serverapi2/qf2nxq&#34;&gt;官方文档&lt;/a&gt;密钥，机器人安全设置页面，加签一栏下面显示的 &lt;code&gt;SEC&lt;/code&gt; 开头的字符串，注：填写了 &lt;code&gt;DD_BOT_TOKEN&lt;/code&gt; 和 &lt;code&gt;DD_BOT_SECRET&lt;/code&gt; ，钉钉机器人安全设置只需勾选 &lt;code&gt;加签&lt;/code&gt; 即可，其他选项不要勾选&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DD_BOT_TOKEN&lt;/td&gt; &#xA;   &lt;td&gt;钉钉机器人&lt;/td&gt; &#xA;   &lt;td&gt;JS PY SH&lt;/td&gt; &#xA;   &lt;td&gt;钉钉推送&lt;a href=&#34;https://ding-doc.dingtalk.com/doc#/serverapi2/qf2nxq&#34;&gt;官方文档&lt;/a&gt;，只需 &lt;code&gt;https://oapi.dingtalk.com/robot/send?access_token=XXX&lt;/code&gt; 等于符号后面的 &lt;code&gt;XXX&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FSKEY&lt;/td&gt; &#xA;   &lt;td&gt;飞书&lt;/td&gt; &#xA;   &lt;td&gt;PY&lt;/td&gt; &#xA;   &lt;td&gt;飞书&lt;a href=&#34;https://open.feishu.cn/document/ukTMukTMukTM/ucTM5YjL3ETO24yNxkjN&#34;&gt;官方文档&lt;/a&gt;，只需 &lt;code&gt;https://open.feishu.cn/open-apis/bot/v2/hook/xxxxxx&lt;/code&gt; 的 &lt;code&gt;xxxxxx&lt;/code&gt; 部分&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GOBOT_URL&lt;/td&gt; &#xA;   &lt;td&gt;go-cqhttp&lt;/td&gt; &#xA;   &lt;td&gt;JS PY&lt;/td&gt; &#xA;   &lt;td&gt;例如：推送到个人QQ： &lt;code&gt;http://127.0.0.1/send_private_msg&lt;/code&gt; 群： &lt;code&gt;http://127.0.0.1/send_group_msg&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GOBOT_QQ&lt;/td&gt; &#xA;   &lt;td&gt;go-cqhttp 的推送群或者用户&lt;/td&gt; &#xA;   &lt;td&gt;JS PY&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;GOBOT_URL&lt;/code&gt; 设置 &lt;code&gt;/send_private_msg&lt;/code&gt; 时填入 &lt;code&gt;user_id=个人QQ&lt;/code&gt; ； &lt;code&gt;/send_group_msg&lt;/code&gt; 时填入 &lt;code&gt;group_id=QQ群&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GOBOT_TOKEN&lt;/td&gt; &#xA;   &lt;td&gt;* go-cqhttp 的 access_token&lt;/td&gt; &#xA;   &lt;td&gt;JS PY&lt;/td&gt; &#xA;   &lt;td&gt;go-cqhttp 文件设置的访问密钥&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IGOT_PUSH_TOKEN&lt;/td&gt; &#xA;   &lt;td&gt;iGot 聚合推送&lt;/td&gt; &#xA;   &lt;td&gt;JS PY&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://wahao.github.io/Bark-MP-helper&#34;&gt;参考文档&lt;/a&gt;，支持多方式推送&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PUSH_KEY&lt;/td&gt; &#xA;   &lt;td&gt;server 酱&lt;/td&gt; &#xA;   &lt;td&gt;JS PY SH&lt;/td&gt; &#xA;   &lt;td&gt;server 酱推送&lt;a href=&#34;https://sc.ftqq.com/3.version&#34;&gt;官方文档&lt;/a&gt;，JS 和 PY 推送兼容新旧版本&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PUSH_TURBO_KEY&lt;/td&gt; &#xA;   &lt;td&gt;server 酱 Turbo 版&lt;/td&gt; &#xA;   &lt;td&gt;SH&lt;/td&gt; &#xA;   &lt;td&gt;server 酱 TURBO 推送&lt;a href=&#34;https://sct.ftqq.com/sendkey&#34;&gt;官方文档&lt;/a&gt;，仅支持 SH&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PUSH_PLUS_TOKEN&lt;/td&gt; &#xA;   &lt;td&gt;pushplus 用户令牌&lt;/td&gt; &#xA;   &lt;td&gt;JS PY SH&lt;/td&gt; &#xA;   &lt;td&gt;可直接加到请求地址后，如： &lt;code&gt;http://www.pushplus.plus/send/{token}&lt;/code&gt; &lt;a href=&#34;https://www.pushplus.plus/doc/&#34;&gt;官方文档&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PUSH_PLUS_USER&lt;/td&gt; &#xA;   &lt;td&gt;* pushplus 群组编码&lt;/td&gt; &#xA;   &lt;td&gt;JS PY&lt;/td&gt; &#xA;   &lt;td&gt;一对多推送下面 -&amp;gt; 您的群组（如无则新建） -&amp;gt; 群组编码 1. 需订阅者扫描二维码 2. 如果您是创建群组所属人，也需点击“查看二维码”扫描绑定，否则不能接受群组消息推送&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;QMSG_KEY&lt;/td&gt; &#xA;   &lt;td&gt;qmsg 酱&lt;/td&gt; &#xA;   &lt;td&gt;JS PY SH&lt;/td&gt; &#xA;   &lt;td&gt;qmsg 酱推送&lt;a href=&#34;https://qmsg.zendee.cn/index.html&#34;&gt;官方文档&lt;/a&gt;，填写 &lt;code&gt;KEY&lt;/code&gt; 代码即可&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;QMSG_TYPE&lt;/td&gt; &#xA;   &lt;td&gt;* qmsg 酱推送类型&lt;/td&gt; &#xA;   &lt;td&gt;JS PY&lt;/td&gt; &#xA;   &lt;td&gt;qmsg 酱推送&lt;a href=&#34;https://qmsg.zendee.cn/index.html&#34;&gt;官方文档&lt;/a&gt;，如果需要推送到群填写 &lt;code&gt;group&lt;/code&gt; ，其他的都推送到 QQ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;QYWX_AM&lt;/td&gt; &#xA;   &lt;td&gt;企业微信应用&lt;/td&gt; &#xA;   &lt;td&gt;JS PY&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://note.youdao.com/s/HMiudGkb&#34;&gt;参考文档&lt;/a&gt;，依次填入 corpid, corpsecret, touser(注：多个成员ID使用 | 隔开), agentid, media_id(选填，不填默认文本消息类型)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;QYWX_KEY&lt;/td&gt; &#xA;   &lt;td&gt;企业微信机器人&lt;/td&gt; &#xA;   &lt;td&gt;JS PY&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://work.weixin.qq.com/api/doc/90000/90136/91770&#34;&gt;官方文档&lt;/a&gt;，只需 &lt;code&gt;https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=693a91f6-7xxx-4bc4-97a0-0ec2sifa5aaa&lt;/code&gt; key= 后面部分&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SRE_TOKEN&lt;/td&gt; &#xA;   &lt;td&gt;push.jwks123.com&lt;/td&gt; &#xA;   &lt;td&gt;SH&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://push.jwks123.com&#34;&gt;官网&lt;/a&gt;关注公众号后再次点击获取令牌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TG_BOT_TOKEN&lt;/td&gt; &#xA;   &lt;td&gt;tg 机器人&lt;/td&gt; &#xA;   &lt;td&gt;JS PY SH&lt;/td&gt; &#xA;   &lt;td&gt;申请 &lt;a href=&#34;https://t.me/BotFather&#34;&gt;@BotFather&lt;/a&gt; 的 Token，如 &lt;code&gt;10xxx4:AAFcqxxxxgER5uw&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TG_USER_ID&lt;/td&gt; &#xA;   &lt;td&gt;tg 机器人&lt;/td&gt; &#xA;   &lt;td&gt;JS PY SH&lt;/td&gt; &#xA;   &lt;td&gt;给 &lt;a href=&#34;https://t.me/getidsbot&#34;&gt;@getidsbot&lt;/a&gt; 发送 /start 获取到的纯数字 ID，如 &lt;code&gt;1434078534&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TG_API_HOST&lt;/td&gt; &#xA;   &lt;td&gt;* tg 代理 api&lt;/td&gt; &#xA;   &lt;td&gt;JS PY&lt;/td&gt; &#xA;   &lt;td&gt;Telegram api 自建的反向代理地址 例子：反向代理地址 &lt;code&gt;http://aaa.bbb.ccc&lt;/code&gt; 则填写 aaa.bbb.ccc &lt;a href=&#34;https://shimo.im/docs/JD38CJDQtYy3yTd8/read&#34;&gt;简略搭建教程&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TG_PROXY_AUTH&lt;/td&gt; &#xA;   &lt;td&gt;* tg 代理认证参数&lt;/td&gt; &#xA;   &lt;td&gt;JS&lt;/td&gt; &#xA;   &lt;td&gt;username:password，如 &lt;code&gt;Oreo:123456&lt;/code&gt; ，&lt;code&gt;TG_PROXY_HOST&lt;/code&gt; 中填了可不填&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TG_PROXY_HOST&lt;/td&gt; &#xA;   &lt;td&gt;* tg 机器人代理 IP 地址&lt;/td&gt; &#xA;   &lt;td&gt;JS PY&lt;/td&gt; &#xA;   &lt;td&gt;代理类型为 http，比如您代理是 &lt;code&gt;http://127.0.0.1:1080&lt;/code&gt; ，则填写 &lt;code&gt;127.0.0.1&lt;/code&gt; ，有密码例子: &lt;code&gt;username:password@127.0.0.1&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TG_PROXY_PORT&lt;/td&gt; &#xA;   &lt;td&gt;* tg 机器人代理端口&lt;/td&gt; &#xA;   &lt;td&gt;JS PY&lt;/td&gt; &#xA;   &lt;td&gt;代理端口号，代理类型为 http，比如您代理是 &lt;code&gt;http://127.0.0.1:1080&lt;/code&gt; ，则填写 &lt;code&gt;1080&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;* 表示选填&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h4&gt;4.2 另一种通知配置方式（当和 4.1 中值重复时，以 4.1 值为准）&lt;/h4&gt; &#xA;&lt;p&gt;下载项目中的&lt;a href=&#34;https://github.com/Oreomeow/checkinpanel/raw/master/notify.sample.toml&#34;&gt;推送配置文件&lt;/a&gt;到&lt;strong&gt;配置文件夹&lt;/strong&gt;，按照上述说明修改配置文件中的值并改名为 &lt;code&gt;notify.toml&lt;/code&gt; ，你可以&lt;strong&gt;自由地删除&lt;/strong&gt;该文件中某些不需要的值（注意语法）。&lt;/p&gt; &#xA;&lt;p&gt;使用了配置文件后，你可以将配置文件放在持久化位置，不受脚本更新、重置容器的影响。&lt;/p&gt; &#xA;&lt;p&gt;如果想自定义配置文件的位置和文件名，请设置通知环境变量 &lt;code&gt;NOTIFY_CONFIG_PATH&lt;/code&gt; ， 例如 &lt;code&gt;/usr/local/app/script/notify.toml&lt;/code&gt; 。建议保持 &lt;code&gt;toml&lt;/code&gt; 的后缀，防止编辑器的误解。&lt;/p&gt; &#xA;&lt;p&gt;关于 toml 的语法参考：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/toml-lang/toml&#34;&gt;toml-lang/toml&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/50412485&#34;&gt;中文知乎介绍&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://toml.io/cn/v1.0.0&#34;&gt;TOML 教程中文版&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;4.3 通知说明&lt;/h4&gt; &#xA;&lt;p&gt;本通知调用了项目中的 &lt;a href=&#34;https://raw.githubusercontent.com/Oreomeow/checkinpanel/master/notify_mtr.py&#34;&gt;𝒏𝒐𝒕𝒊𝒇𝒚_𝒎𝒕𝒓.𝒑𝒚&lt;/a&gt; 。如果你想在&lt;strong&gt;你自己的项目中&lt;/strong&gt;使用这个通知脚本，将它拷贝并调用对应的通知函数即可。&lt;/p&gt; &#xA;&lt;p&gt;在非容器环境中，通知环境变量使用 系统的环境变量 或者 &lt;strong&gt;你通过 &lt;code&gt;NOTIFY_CONFIG_PATH&lt;/code&gt; 环境变量指定的配置文件&lt;/strong&gt; 进行配置。&lt;/p&gt; &#xA;&lt;p&gt;特别的，如果你想要创建一个基于 python 的 elecV2P 或者 qinglong 项目，并有意愿使用 &lt;code&gt;toml&lt;/code&gt; 文件，那么强烈建议你拷贝&lt;a href=&#34;https://raw.githubusercontent.com/Oreomeow/checkinpanel/master/notify_mtr.py&#34;&gt;此文件&lt;/a&gt;，如此可以大幅度降低用户脚本的配置难度和升级难度。&lt;/p&gt; &#xA;&lt;p&gt;如果只希望使用 &lt;code&gt;json&lt;/code&gt; 模块和单纯获取环境变量方法，那么可以拷贝 &lt;a href=&#34;https://raw.githubusercontent.com/Oreomeow/checkinpanel/master/notify_mtr_env.py&#34;&gt;𝒏𝒐𝒕𝒊𝒇𝒚_𝒎𝒕𝒓_𝒆𝒏𝒗.𝒑𝒚&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;5. 检查依赖&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;运行 &lt;code&gt;签到依赖&lt;/code&gt; 任务后的日志&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/oSs9xK&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/11/23/oSs9xK.png&#34; alt=&#34;oSs9xK.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果任务列表安装不成功，参考 &lt;a href=&#34;https://github.com/Oreomeow/checkinpanel/issues/12&#34;&gt;#12&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;𝐪𝐢𝐧𝐠𝐥𝐨𝐧𝐠 使用方法&lt;/h2&gt; &#xA;&lt;h3&gt;1. ssh 进入容器&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker exec -it qinglong bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;修改 &lt;code&gt;qinglong&lt;/code&gt; 为你的青龙容器名称&lt;/p&gt; &#xA;&lt;h3&gt;2. 拉取仓库&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;解决 Shell 脚本无法拉取问题&lt;/strong&gt;：将以下代码在 &lt;code&gt;config.sh&lt;/code&gt; 相应位置替换&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;## ql repo命令拉取脚本时需要拉取的文件后缀，直接写文件后缀名即可&#xA;RepoFileExtensions=&#34;js pl py sh ts&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;可添加定时任务，名称、时间自定&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ql repo https://github.com/Oreomeow/checkinpanel.git &#34;api_|ck_|ins_&#34; &#34;^checkin&#34; &#34;^notify|^utils|cpm&#34; &#34;master&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. 安装依赖&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;运行 &lt;code&gt;签到依赖&lt;/code&gt; 任务&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Oreomeow/checkinpanel/issues/43&#34;&gt;截图&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;依赖持久化配置&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;签到依赖&lt;/code&gt; 任务保持定时运行即可&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4. 拷贝文件&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cp /ql/repo/Oreomeow_checkinpanel_master/check.sample.toml /ql/config/check.toml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;通知配置文件（可选）&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cp /ql/repo/Oreomeow_checkinpanel_master/notify.sample.toml /ql/config/notify.toml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;5. 配置通知&lt;/h3&gt; &#xA;&lt;p&gt;参见上文中的&lt;a href=&#34;#https://github.com/Oreomeow/checkinpanel/blob/master/README.md#4%E9%85%8D%E7%BD%AE%E9%80%9A%E7%9F%A5&#34;&gt;配置通知&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;特别的：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;如果你已经配置了 &lt;code&gt;config.sh&lt;/code&gt;， 那么你可以不需要做任何改变。&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;如果使用环境变量，请在 qinglong 面板中配置。&lt;/li&gt; &#xA; &lt;li&gt;如果使用配置文件，请修改 &lt;code&gt;/ql/config/notify.toml&lt;/code&gt; 文件。&lt;/li&gt; &#xA; &lt;li&gt;当然你也可以在 qinglong 面板中配置 &lt;code&gt;NOTIFY_CONFIG_PATH&lt;/code&gt; 环境变量为配置文件指定其他位置。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;6. 抓包配置&lt;/h3&gt; &#xA;&lt;p&gt;不出意外的话可以在青龙面板的配置文件下找到 &lt;code&gt;check.toml&lt;/code&gt; 文件&lt;/p&gt; &#xA;&lt;p&gt;根据&lt;a href=&#34;https://github.com/Oreomeow/checkinpanel/raw/master/check.sample.toml&#34;&gt;注释说明&lt;/a&gt;进行抓包并配置&lt;/p&gt; &#xA;&lt;h2&gt;补充说明&lt;/h2&gt; &#xA;&lt;h3&gt;1. &lt;strong&gt;添加了葫芦侠的签到配置&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;参数说明： &lt;code&gt;HLX.username&lt;/code&gt; ：用户名 &lt;code&gt;HLX.password&lt;/code&gt; ：密码的 MD5 32 位小写加密&lt;a href=&#34;https://md5jiami.bmcx.com/&#34;&gt;生成&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2. &lt;strong&gt;添加了网易云游戏的签到配置&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cg.163.com/#/mobile&#34;&gt;官网&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;参数说明： &lt;code&gt;GAME163.authorization&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;登录后抓取签到请求（一般请求的请求头也有这个字段）&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/4tfx5F&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/09/22/4tfx5F.png&#34; alt=&#34;4tfx5F.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3. &lt;strong&gt;Shell 脚本配置&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;目前 Shell 脚本只有一个 SSPanel 签到，如需使用请参考 &lt;code&gt;env.sample&lt;/code&gt; 配置 &lt;code&gt;.env&lt;/code&gt; 后放入 &lt;code&gt;script/Lists&lt;/code&gt; 或 &lt;code&gt;/ql/config&lt;/code&gt; 文件夹&lt;/li&gt; &#xA; &lt;li&gt;支持自定义配置文件路径 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;环境变量 / store KEY 名称：&lt;code&gt;ENV_PATH&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;参考值 / VALUE：&lt;code&gt;/usr/local/app/script/.env&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4. &lt;strong&gt;添加了欢太商城的签到配置&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hwkxk/HeytapTask/wiki/%E6%AC%A2%E5%A4%AA%E5%95%86%E5%9F%8EHttpCanary%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B&#34;&gt;欢太商城 HttpCanary 抓包教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;部分域名屏蔽境外 IP 访问，所以本项目不适于在 非中国 IP 代理网络下 / Github Actions / 境外 VPS 上运行！&lt;/li&gt; &#xA; &lt;li&gt;从未在欢太商城做过任务，请先手动进入任务中心完成一下任务再使用，否则可能无法获取到任务列表数据导致出错！@YYplus&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;5. &lt;strong&gt;添加了时光相册的签到配置&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/4tWaFg&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/09/22/4tWaFg.png&#34; alt=&#34;4tWaFg.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;6. &lt;strong&gt;EUserv 在未开启登录验证时有效&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://apitruecaptcha.org/api&#34;&gt;True Captcha&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如图注册账号后获取 &lt;code&gt;userid&lt;/code&gt; 和 &lt;code&gt;apikey&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/5e9nF1&#34;&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/10/11/5e9nF1.png&#34; alt=&#34;5e9nF1.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;其他说明&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;请自行修改执行时间。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;elecV2P 运行 &lt;code&gt;手动更新&lt;/code&gt; 任务可强制同步本仓库。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;大部分脚本移植于 &lt;a href=&#34;https://github.com/Sitoi/dailycheckin&#34;&gt;Sitoi&lt;/a&gt;，Sitoi 于 2021 年 9 月 3 日 &lt;a href=&#34;https://files.pythonhosted.org/packages/ee/8d/b49624a4d11c51f4e3dfb98f622d0c1ffe5d6315ad39452859ea8703206f/dailycheckin-0.1.7.tar.gz&#34;&gt;dailycheckin-0.1.7&lt;/a&gt; 版本适配了青龙，&lt;a href=&#34;https://sitoi.gitee.io/dailycheckin/qinglong/&#34;&gt;使用教程&lt;/a&gt;与本仓库教程不相同，切勿使用本仓库 &lt;a href=&#34;https://github.com/Oreomeow/checkinpanel&#34;&gt;checkinpanel&lt;/a&gt; 的同时去问大佬。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2021 年 9 月 13 日起不再更新 &lt;code&gt;.json&lt;/code&gt; 后缀的配置文件。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2021 年 9 月 23 日起重新初始化项目，原本文件移到&lt;a href=&#34;https://github.com/Oreomeow/ck_bak&#34;&gt;这里&lt;/a&gt;，上述仓库不再进行更新，期望稳定的用户可以切换到上述仓库。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;2021 年 11 月 17 日起由 &lt;code&gt;JSON5&lt;/code&gt; 配置转为更为友好的 &lt;code&gt;TOML&lt;/code&gt; 配置。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;计划说明&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 𝑷𝒚𝒕𝒉𝒐𝒏 | &lt;strong&gt;api&lt;/strong&gt; | LeetCode 每日一题 | 每日一句 | 天气预报 | 每日新闻 | &lt;del&gt;爱企查e卡监控&lt;/del&gt; | Hax 监控 | RSS 订阅&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 𝑷𝒚𝒕𝒉𝒐𝒏 | &lt;strong&gt;多账号&lt;/strong&gt; | AcFun | 百度搜索资源平台 | Bilibili | 天翼云盘 | CSDN | 多看阅读 | 恩山论坛 | Fa米家 | 网易云游戏 | 葫芦侠 | &lt;del&gt;爱奇艺&lt;/del&gt; | 全民K歌 | MEIZU 社区 | &lt;del&gt;芒果 TV&lt;/del&gt; | 小米运动 | 网易云音乐 | 一加手机社区官方论坛 | 哔咔漫画 | 吾爱破解 | 什么值得买 | 百度贴吧 | V2EX | &lt;del&gt;腾讯视频&lt;/del&gt; | 微博 | &lt;del&gt;联通沃邮箱&lt;/del&gt; | 哔咔网单 | 王者营地 | 有道云笔记 | 智友邦 | 机场签到 | 欢太商城 | NGA | 掘金 | GLaDOS | HiFiNi | 时光相册 | &lt;del&gt;联通营业厅&lt;/del&gt; | 无忧行 | FreeNom | EUserv | Site | SF 轻小说 | 在线工具 | CCAVA | &lt;del&gt;企鹅电竞&lt;/del&gt; | &lt;del&gt;联想乐云&lt;/del&gt; | WPS | HOSTLOC | &lt;del&gt;Epic&lt;/del&gt; | &lt;del&gt;Hax 续期提醒&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 𝑺𝒉𝒆𝒍𝒍 | &lt;strong&gt;多账号&lt;/strong&gt; | SSPanel 签到 | 国内加速&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 𝑱𝒂𝒗𝒂𝑺𝒄𝒓𝒊𝒑𝒕 | &lt;strong&gt;多账号&lt;/strong&gt; | 什么值得买任务版 | 爱企查 | 网易蜗牛读书 | 联想商城&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 𝑱𝒂𝒗𝒂 | Bilibili 助手&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 𝑷𝒆𝒓𝒍 | JSON5toTOML 工具&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;项目完成情况&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 多账号补全&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 配置文件由严格的 &lt;code&gt;.json&lt;/code&gt; 向支持注释的 &lt;code&gt;.json5&lt;/code&gt; 过渡，再向更友好的 &lt;code&gt;.toml&lt;/code&gt; 过渡&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 更多环境适配&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 配置文件支持自定义路径&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 通知多线程&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 通知输出优化&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 通知方式增加，如飞书&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Shell 消息推送、环境检查单列&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 项目重新初始化，更新日志规范化&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 依赖安装重构&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; cron 随机&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 任务多合一执行&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; CK 检测判断是否跳出&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;测试情况&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;状态&lt;/th&gt; &#xA;   &lt;th&gt;名称&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;国内加速 | Hax 监控 | LeetCode 每日一题 | 每日一句 | 天气预报 | 每日新闻 | RSS 订阅 | 机场签到 | 爱企查 | 百度搜索资源平台 | Bilibili | Bilibili 助手 | CCAVA | 天翼云盘 | CSDN | 网易蜗牛读书 | 多看阅读 | 恩山论坛 | EUserv | 时光相册 | Fa米家 | FreeNom | GLaDOS | 网易云游戏 | HiFiNi | 葫芦侠 | HOSTLOC | JSON5toTOML 工具 | 掘金 | 全民K歌 | 联想商城 | MEIZU 社区 | 小米运动 | 网易云音乐 | NGA | 一加手机社区官方论坛 | 吾爱破解 | SF 轻小说 | Site | 什么值得买 | 什么值得买任务版 | SSPanel 签到 | 百度贴吧 | 在线工具 | V2EX | 微博 | WPS | 王者营地 | 有道云笔记&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;无忧行 | 哔咔漫画 | 哔咔网单 | 智友邦&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;致谢&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Wenmoux/&#34;&gt;@𝐰𝐞𝐧𝐦𝐨𝐮𝐱&lt;/a&gt; --------------- 𝗰𝗵𝗲𝗰𝗸𝗯𝗼𝘅&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Sitoi&#34;&gt;@𝐒𝐢𝐭𝐨𝐢&lt;/a&gt; -------------------- 𝗱𝗮𝗶𝗹𝘆𝗰𝗵𝗲𝗰𝗸𝗶𝗻&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yuxian158&#34;&gt;@𝐲𝐮𝐱𝐢𝐚𝐧𝟏𝟓𝟖&lt;/a&gt; ----------- 𝗾𝗹-𝗰𝗵𝗲𝗰𝗸𝗯𝗼𝘅&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/isecret&#34;&gt;@𝐢𝐬𝐞𝐜𝐫𝐞𝐭&lt;/a&gt; --------------- 𝗦𝗦𝗣𝗮𝗻𝗲𝗹 𝗦𝗵𝗲𝗹𝗹&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hwkxk&#34;&gt;@𝐡𝐰𝐤𝐱𝐤&lt;/a&gt; ----------------------- 𝗛𝗲𝘆𝗧𝗮𝗽&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/luminoleon&#34;&gt;@𝐥𝐮𝐦𝐢𝐧𝐨𝐥𝐞𝐨𝐧&lt;/a&gt; ---- 𝗲𝗽𝗶𝗰𝗴𝗮𝗺𝗲𝘀-𝗰𝗹𝗮𝗶𝗺𝗲𝗿&lt;/p&gt; &#xA;&lt;p&gt;@𝑶𝒕𝒉𝒆𝒓𝒔 -------------- 𝔰𝔠𝔯𝔦𝔭𝔱 𝔠𝔬𝔪𝔪𝔢𝔫𝔱𝔰&lt;/p&gt; &#xA;&lt;h2&gt;历史 Star 数&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/Oreomeow/checkinpanel&#34;&gt;&lt;img src=&#34;https://starchart.cc/Oreomeow/checkinpanel.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>maxmind/MaxMind-DB</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/maxmind/MaxMind-DB</id>
    <link href="https://github.com/maxmind/MaxMind-DB" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Spec and test data for the MaxMind DB file format&lt;/p&gt;&lt;hr&gt;&lt;p&gt;MaxMind DB is a binary file format that stores data indexed by IP address subnets (IPv4 or IPv6).&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the spec for that format.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ko-ichi-h/khcoder</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/ko-ichi-h/khcoder</id>
    <link href="https://github.com/ko-ichi-h/khcoder" rel="alternate"></link>
    <summary type="html">&lt;p&gt;KH Coder: for Quantitative Content Analysis or Text Mining&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;KH Coder: for Quantitative Content Analysis or Text Mining&lt;/h1&gt; &#xA;&lt;h2&gt;Web&lt;/h2&gt; &#xA;&lt;p&gt;Japanese: &lt;a href=&#34;http://khcoder.net&#34;&gt;http://khcoder.net&lt;/a&gt; &lt;br&gt; English: &lt;a href=&#34;http://khcoder.net/en&#34;&gt;http://khcoder.net/en&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;KH Coder is a free software for &lt;strong&gt;quantitative content analysis&lt;/strong&gt; or &lt;strong&gt;text mining&lt;/strong&gt;. It is also utilized for computational linguistics. You can analyze Catalan, Chinese (simplified), Dutch, English, French, German, Italian, Japanese, Korean, Portuguese, Russian, Slovenian and Spanish text with KH Coder.&lt;/p&gt; &#xA;&lt;p&gt;Screenshots: &lt;a href=&#34;https://goo.gl/photos/ixn1sTM3jm8o11bP8&#34;&gt;https://goo.gl/photos/ixn1sTM3jm8o11bP8&lt;/a&gt; &lt;br&gt; Official book (in Japanese): &lt;a href=&#34;https://amzn.to/3LdRHMJ&#34;&gt;https://amzn.to/3LdRHMJ&lt;/a&gt; &amp;amp; &lt;a href=&#34;http://amzn.to/2wHFxKg&#34;&gt;http://amzn.to/2wHFxKg&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!--&#xA;Changelog:&#xA;https://translate.google.com/translate?hl=en&amp;sl=ja&amp;tl=en&amp;u=http%3A%2F%2Fkhcoder.net%2Fversions.html&amp;sandbox=1&#xA;--&gt; &#xA;&lt;h2&gt;How to run source code of KH Coder on Windows&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download &amp;amp; install Perl: &lt;a href=&#34;http://strawberryperl.com/&#34;&gt;http://strawberryperl.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;(Fork and) clone this repository&lt;/li&gt; &#xA; &lt;li&gt;Download released *.exe file (Winzip self-extractor) of KH Coder 3&lt;/li&gt; &#xA; &lt;li&gt;Unzip the downloaded file into the clone directory&lt;/li&gt; &#xA; &lt;li&gt;Open command prompt window and go to the clone directory, type &#34;perl kh_coder.pl&#34;, and hit &#34;Enter&#34; key&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;When you get errors like &#34;Can&#39;t locate &lt;strong&gt;Jcode&lt;/strong&gt;.pm in @INC&#34;, you need to install Perl module called &#34;&lt;strong&gt;Jcode&lt;/strong&gt;&#34;. To install it, type &#34;cpanm &lt;strong&gt;Jcode&lt;/strong&gt;&#34; and hit &#34;Enter&#34; key on your command prompt window.&lt;/p&gt; &#xA;&lt;p&gt;Above procedure is for people who want to develop or modify KH Coder. If you want to just try or use KH Coder, you don&#39;t need Perl. Please just download and unzip released *.exe file, then double click extracted &#34;kh_coder.exe&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;On Linux or other Un*x like system&lt;/h2&gt; &#xA;&lt;p&gt;You need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MySQL&lt;/li&gt; &#xA; &lt;li&gt;Perl (and some Perl modules)&lt;/li&gt; &#xA; &lt;li&gt;R (and some R packages)&lt;/li&gt; &#xA; &lt;li&gt;Morphological Analysis and POS Tagging software &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ChaSen or MeCab for analyzing Japanese text&lt;/li&gt; &#xA;   &lt;li&gt;FreeLing or Stanford POS Tagger for analyzing English text&lt;/li&gt; &#xA;   &lt;li&gt;FreeLing for analyzing Catalan, French, German, Italian, Portuguese, Russian or Spanish text&lt;/li&gt; &#xA;   &lt;li&gt;MeCab and HanDic for analyzing Korean text&lt;/li&gt; &#xA;   &lt;li&gt;Stanford Word Segmenter and Stanford POS Tagger for analyzing Chinese text&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ko-ichi-h/khcoder/issues/91&#34;&gt;issue #91&lt;/a&gt;, &lt;a href=&#34;https://github.com/ko-ichi-h/khcoder/raw/master/doc_contrib/Vagrantfile&#34;&gt;doc_contrib/Vagrantfile&lt;/a&gt; and &lt;a href=&#34;https://github.com/ko-ichi-h/khcoder/raw/master/doc_contrib/FedoraInstallation.md&#34;&gt;doc_contrib/FedoraInstallation.md&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;GNU GPL version 2 or later&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>thoughtbot/rcm</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/thoughtbot/rcm</id>
    <link href="https://github.com/thoughtbot/rcm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;rc file (dotfile) management&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;rcm&lt;/h1&gt; &#xA;&lt;p&gt;This is a management suite for dotfiles. &lt;strong&gt;See &lt;a href=&#34;http://thoughtbot.github.io/rcm/rcm.7.html&#34;&gt;the tutorial&lt;/a&gt; to get started quickly.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;It assumes that you have a separate dotfiles directory, or are interested in creating one.&lt;/p&gt; &#xA;&lt;p&gt;The programs provided are &lt;a href=&#34;http://thoughtbot.github.io/rcm/rcup.1.html&#34;&gt;rcup(1)&lt;/a&gt;, &lt;a href=&#34;http://thoughtbot.github.io/rcm/mkrc.1.html&#34;&gt;mkrc(1)&lt;/a&gt;, &lt;a href=&#34;http://thoughtbot.github.io/rcm/rcdn.1.html&#34;&gt;rcdn(1)&lt;/a&gt;, and &lt;a href=&#34;http://thoughtbot.github.io/rcm/lsrc.1.html&#34;&gt;lsrc(1)&lt;/a&gt;. They are explained in &lt;a href=&#34;http://thoughtbot.github.io/rcm/rcm.7.html&#34;&gt;the tutorial&lt;/a&gt; and configured using &lt;a href=&#34;http://thoughtbot.github.io/rcm/rcrc.5.html&#34;&gt;rcrc(5)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Alpine Linux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apk add rcm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Arch Linux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://aur.archlinux.org/packages/rcm/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Debian (see further down for Ubuntu):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo wget -q https://apt.thoughtbot.com/thoughtbot.gpg.key -O /etc/apt/trusted.gpg.d/thoughtbot.gpg&#xA;echo &#34;deb https://apt.thoughtbot.com/debian/ stable main&#34; | sudo tee /etc/apt/sources.list.d/thoughtbot.list&#xA;sudo apt-get update&#xA;sudo apt-get install rcm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Fedora:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo dnf install rcm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;FreeBSD:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo pkg install rcm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Gentoo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;emerge app-admin/rcm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Korora:&lt;/p&gt; &#xA;&lt;p&gt;64-bit Korora 23:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo dnf copr enable seeitcoming/rcm fedora-23-x86_64&#xA;sudo dnf install rcm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Korora is similar to Fedora but with &lt;a href=&#34;https://kororaproject.org/about/news/when-adding-a-copr-repo-to-korora-fails&#34;&gt;an additional version and architecture specification&lt;/a&gt;. Replace &lt;code&gt;fedora-23-x86_64&lt;/code&gt; as appropriate.&lt;/p&gt; &#xA;&lt;p&gt;macOS with Homebrew:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install rcm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;macOS with MacPorts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;port install rcm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OpenBSD:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;doas pkg_add rcm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;openSUSE/RHEL/CentOS: &lt;a href=&#34;http://software.opensuse.org/download.html?project=utilities&amp;amp;package=rcm&#34;&gt;instructions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ubuntu (19.04 or later):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt update&#xA;sudo apt install rcm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Ubuntu (12.04, 14.04, 16.04, 18.04, or 18.10):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install software-properties-common&#xA;sudo add-apt-repository ppa:martin-frost/thoughtbot-rcm&#xA;sudo apt-get update&#xA;sudo apt-get install rcm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Void Linux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo xbps-install -S rcm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Elsewhere:&lt;/p&gt; &#xA;&lt;p&gt;This uses the standard GNU autotools, so it&#39;s the normal dance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -LO https://thoughtbot.github.io/rcm/dist/rcm-1.3.4.tar.gz &amp;amp;&amp;amp;&#xA;&#xA;# Use sha256sum with GNU coreutils, sha256 on BSD and macOS&#xA;sha=$(sha256sum rcm-1.3.4.tar.gz | cut -f1 -d&#39; &#39;) &amp;amp;&amp;amp;&#xA;[ &#34;$sha&#34; = &#34;9b11ae37449cf4d234ec6d1348479bfed3253daba11f7e9e774059865b66c24a&#34; ] &amp;amp;&amp;amp;&#xA;&#xA;tar -xvf rcm-1.3.4.tar.gz &amp;amp;&amp;amp;&#xA;cd rcm-1.3.4 &amp;amp;&amp;amp;&#xA;&#xA;./configure &amp;amp;&amp;amp;&#xA;make &amp;amp;&amp;amp;&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more, see &lt;code&gt;INSTALL&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Programs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://thoughtbot.github.io/rcm/rcup.1.html&#34;&gt;rcup(1)&lt;/a&gt; is the main program. It is used to install and update dotfiles, with support for tags, host-specific files, and multiple source directories.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://thoughtbot.github.io/rcm/rcdn.1.html&#34;&gt;rcdn(1)&lt;/a&gt; is the opposite of &lt;a href=&#34;http://thoughtbot.github.io/rcm/rcup.1.html&#34;&gt;rcup(1)&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://thoughtbot.github.io/rcm/mkrc.1.html&#34;&gt;mkrc(1)&lt;/a&gt; is for introducing a dotfile into your dotfiles directory, with support for tags and multiple source directories.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://thoughtbot.github.io/rcm/lsrc.1.html&#34;&gt;lsrc(1)&lt;/a&gt; shows you all your dotfiles and where they would be symlinked to. It is used by &lt;a href=&#34;http://thoughtbot.github.io/rcm/rcup.1.html&#34;&gt;rcup(1)&lt;/a&gt; but is provided for your own use, too.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests welcome; see &lt;code&gt;CONTRIBUTING.md&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2013 Mike Burns. BSD license. Copyright 2014-2015 thoughtbot. BSD license.&lt;/p&gt; &#xA;&lt;h2&gt;About thoughtbot&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://presskit.thoughtbot.com/images/thoughtbot-logo-for-readmes.svg?sanitize=true&#34; alt=&#34;thoughtbot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;RCM is maintained and funded by thoughtbot, inc. The names and logos for thoughtbot are trademarks of thoughtbot, inc.&lt;/p&gt; &#xA;&lt;p&gt;We adore open source software. See &lt;a href=&#34;https://thoughtbot.com/community?utm_source=github&#34;&gt;our other projects&lt;/a&gt;. We are &lt;a href=&#34;https://thoughtbot.com/hire-us?utm_source=github&#34;&gt;available for hire&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tseemann/snippy</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/tseemann/snippy</id>
    <link href="https://github.com/tseemann/snippy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;✂️ ⚡ Rapid haploid variant calling and core genome alignment&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/tseemann/snippy&#34;&gt;&lt;img src=&#34;https://travis-ci.org/tseemann/snippy.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPL%20v2-blue.svg?sanitize=true&#34; alt=&#34;License: GPL v2&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/Language-Perl_5-steelblue.svg?sanitize=true&#34; alt=&#34;Don&#39;t judge me&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Snippy&lt;/h1&gt; &#xA;&lt;p&gt;Rapid haploid variant calling and core genome alignment&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/torstenseemann&#34;&gt;Torsten Seemann&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Synopsis&lt;/h2&gt; &#xA;&lt;p&gt;Snippy finds SNPs between a haploid reference genome and your NGS sequence reads. It will find both substitutions (snps) and insertions/deletions (indels). It will use as many CPUs as you can give it on a single computer (tested to 64 cores). It is designed with speed in mind, and produces a consistent set of output files in a single folder. It can then take a set of Snippy results using the same reference and generate a core SNP alignment (and ultimately a phylogenomic tree).&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;% snippy --cpus 16 --outdir mysnps --ref Listeria.gbk --R1 FDA_R1.fastq.gz --R2 FDA_R2.fastq.gz&#xA;&amp;lt;cut&amp;gt;&#xA;Walltime used: 3 min, 42 sec&#xA;Results folder: mysnps&#xA;Done.&#xA;&#xA;% ls mysnps&#xA;snps.vcf snps.bed snps.gff snps.csv snps.tab snps.html &#xA;snps.bam snps.txt reference/ ...&#xA;&#xA;% head -5 mysnps/snps.tab&#xA;CHROM  POS     TYPE    REF   ALT    EVIDENCE        FTYPE STRAND NT_POS AA_POS LOCUS_TAG GENE PRODUCT EFFECT&#xA;chr      5958  snp     A     G      G:44 A:0        CDS   +      41/600 13/200 ECO_0001  dnaA replication protein DnaA missense_variant c.548A&amp;gt;C p.Lys183Thr&#xA;chr     35524  snp     G     T      T:73 G:1 C:1    tRNA  -   &#xA;chr     45722  ins     ATT   ATTT   ATTT:43 ATT:1   CDS   -                    ECO_0045  gyrA DNA gyrase&#xA;chr    100541  del     CAAA  CAA    CAA:38 CAAA:1   CDS   +                    ECO_0179      hypothetical protein&#xA;plas      619  complex GATC  AATA   GATC:28 AATA:0  &#xA;plas     3221  mnp     GA    CT     CT:39 CT:0      CDS   +                    ECO_p012  rep  hypothetical protein&#xA;&#xA;% snippy-core --prefix core mysnps1 mysnps2 mysnps3 mysnps4 &#xA;Loaded 4 SNP tables.&#xA;Found 2814 core SNPs from 96615 SNPs.&#xA;&#xA;% ls core.*&#xA;core.aln core.tab core.tab core.txt core.vcf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;Conda&lt;/h2&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;https://bioconda.github.io/user/install.html&#34;&gt;Bioconda&lt;/a&gt; then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda install -c conda-forge -c bioconda -c defaults snippy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Homebrew&lt;/h2&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;http://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; (MacOS) or &lt;a href=&#34;http://linuxbrew.sh/&#34;&gt;LinuxBrew&lt;/a&gt; (Linux) then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install brewsci/bio/snippy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Source&lt;/h2&gt; &#xA;&lt;p&gt;This will install the latest version direct from Github. You&#39;ll need to add Snippy&#39;s &lt;code&gt;bin&lt;/code&gt; directory to your &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd $HOME&#xA;git clone https://github.com/tseemann/snippy.git&#xA;$HOME/snippy/bin/snippy --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Check installation&lt;/h1&gt; &#xA;&lt;p&gt;Ensure you have the desired version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;snippy --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check that all dependencies are installed and working:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;snippy --check&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Calling SNPs&lt;/h1&gt; &#xA;&lt;h2&gt;Input Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a reference genome in FASTA or GENBANK format (can be in multiple contigs)&lt;/li&gt; &#xA; &lt;li&gt;sequence read file(s) in FASTQ or FASTA format (can be .gz compressed) format&lt;/li&gt; &#xA; &lt;li&gt;a folder to put the results in&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Output Files&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Extension&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.tab&lt;/td&gt; &#xA;   &lt;td&gt;A simple &lt;a href=&#34;http://en.wikipedia.org/wiki/Tab-separated_values&#34;&gt;tab-separated&lt;/a&gt; summary of all the variants&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.csv&lt;/td&gt; &#xA;   &lt;td&gt;A &lt;a href=&#34;http://en.wikipedia.org/wiki/Comma-separated_values&#34;&gt;comma-separated&lt;/a&gt; version of the .tab file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.html&lt;/td&gt; &#xA;   &lt;td&gt;A &lt;a href=&#34;http://en.wikipedia.org/wiki/HTML&#34;&gt;HTML&lt;/a&gt; version of the .tab file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.vcf&lt;/td&gt; &#xA;   &lt;td&gt;The final annotated variants in &lt;a href=&#34;http://en.wikipedia.org/wiki/Variant_Call_Format&#34;&gt;VCF&lt;/a&gt; format&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.bed&lt;/td&gt; &#xA;   &lt;td&gt;The variants in &lt;a href=&#34;http://genome.ucsc.edu/FAQ/FAQformat.html#format1&#34;&gt;BED&lt;/a&gt; format&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.gff&lt;/td&gt; &#xA;   &lt;td&gt;The variants in &lt;a href=&#34;http://www.sequenceontology.org/gff3.shtml&#34;&gt;GFF3&lt;/a&gt; format&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.bam&lt;/td&gt; &#xA;   &lt;td&gt;The alignments in &lt;a href=&#34;http://en.wikipedia.org/wiki/SAMtools&#34;&gt;BAM&lt;/a&gt; format. Includes unmapped, multimapping reads. Excludes duplicates.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.bam.bai&lt;/td&gt; &#xA;   &lt;td&gt;Index for the .bam file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.log&lt;/td&gt; &#xA;   &lt;td&gt;A log file with the commands run and their outputs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.aligned.fa&lt;/td&gt; &#xA;   &lt;td&gt;A version of the reference but with &lt;code&gt;-&lt;/code&gt; at position with &lt;code&gt;depth=0&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt; for &lt;code&gt;0 &amp;lt; depth &amp;lt; --mincov&lt;/code&gt; (&lt;strong&gt;does not have variants&lt;/strong&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.consensus.fa&lt;/td&gt; &#xA;   &lt;td&gt;A version of the reference genome with &lt;em&gt;all&lt;/em&gt; variants instantiated&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.consensus.subs.fa&lt;/td&gt; &#xA;   &lt;td&gt;A version of the reference genome with &lt;em&gt;only substitution&lt;/em&gt; variants instantiated&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.raw.vcf&lt;/td&gt; &#xA;   &lt;td&gt;The unfiltered variant calls from Freebayes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.filt.vcf&lt;/td&gt; &#xA;   &lt;td&gt;The filtered variant calls from Freebayes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.vcf.gz&lt;/td&gt; &#xA;   &lt;td&gt;Compressed .vcf file via &lt;a href=&#34;http://blastedbio.blogspot.com.au/2011/11/bgzf-blocked-bigger-better-gzip.html&#34;&gt;BGZIP&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.vcf.gz.csi&lt;/td&gt; &#xA;   &lt;td&gt;Index for the .vcf.gz via &lt;code&gt;bcftools index&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; &lt;span&gt;❌&lt;/span&gt; Snippy 4.x does &lt;strong&gt;NOT&lt;/strong&gt; produce the following files that Snippy 3.x did&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Extension&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.vcf.gz.tbi&lt;/td&gt; &#xA;   &lt;td&gt;Index for the .vcf.gz via &lt;a href=&#34;http://bioinformatics.oxfordjournals.org/content/27/5/718.full&#34;&gt;TABIX&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.depth.gz&lt;/td&gt; &#xA;   &lt;td&gt;Output of &lt;code&gt;samtools depth -aa&lt;/code&gt; for the &lt;code&gt;.bam&lt;/code&gt; file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.depth.gz.tbi&lt;/td&gt; &#xA;   &lt;td&gt;Index for the &lt;code&gt;.depth.gz&lt;/code&gt; file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Columns in the TAB/CSV/HTML formats&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CHROM&lt;/td&gt; &#xA;   &lt;td&gt;The sequence the variant was found in eg. the name after the &lt;code&gt;&amp;gt;&lt;/code&gt; in the FASTA reference&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;POS&lt;/td&gt; &#xA;   &lt;td&gt;Position in the sequence, counting from 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TYPE&lt;/td&gt; &#xA;   &lt;td&gt;The variant type: snp msp ins del complex&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;REF&lt;/td&gt; &#xA;   &lt;td&gt;The nucleotide(s) in the reference&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ALT&lt;/td&gt; &#xA;   &lt;td&gt;The alternate nucleotide(s) supported by the reads&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EVIDENCE&lt;/td&gt; &#xA;   &lt;td&gt;Frequency counts for REF and ALT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If you supply a Genbank file as the &lt;code&gt;--reference&lt;/code&gt; rather than a FASTA file, Snippy will fill in these extra columns by using the genome annotation to tell you which feature was affected by the variant:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FTYPE&lt;/td&gt; &#xA;   &lt;td&gt;Class of feature affected: CDS tRNA rRNA ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;STRAND&lt;/td&gt; &#xA;   &lt;td&gt;Strand the feature was on: + - .&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NT_POS&lt;/td&gt; &#xA;   &lt;td&gt;Nucleotide position of the variant withinthe feature / Length in nt&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AA_POS&lt;/td&gt; &#xA;   &lt;td&gt;Residue position / Length in aa (only if FTYPE is CDS)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LOCUS_TAG&lt;/td&gt; &#xA;   &lt;td&gt;The &lt;code&gt;/locus_tag&lt;/code&gt; of the feature (if it existed)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GENE&lt;/td&gt; &#xA;   &lt;td&gt;The &lt;code&gt;/gene&lt;/code&gt; tag of the feature (if it existed)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PRODUCT&lt;/td&gt; &#xA;   &lt;td&gt;The &lt;code&gt;/product&lt;/code&gt; tag of the feature (if it existed)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EFFECT&lt;/td&gt; &#xA;   &lt;td&gt;The &lt;code&gt;snpEff&lt;/code&gt; annotated consequence of this variant (ANN tag in .vcf)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Variant Types&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;snp&lt;/td&gt; &#xA;   &lt;td&gt;Single Nucleotide Polymorphism&lt;/td&gt; &#xA;   &lt;td&gt;A =&amp;gt; T&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mnp&lt;/td&gt; &#xA;   &lt;td&gt;Multiple Nuclotide Polymorphism&lt;/td&gt; &#xA;   &lt;td&gt;GC =&amp;gt; AT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ins&lt;/td&gt; &#xA;   &lt;td&gt;Insertion&lt;/td&gt; &#xA;   &lt;td&gt;ATT =&amp;gt; AGTT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;del&lt;/td&gt; &#xA;   &lt;td&gt;Deletion&lt;/td&gt; &#xA;   &lt;td&gt;ACGG =&amp;gt; ACG&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;complex&lt;/td&gt; &#xA;   &lt;td&gt;Combination of snp/mnp&lt;/td&gt; &#xA;   &lt;td&gt;ATTC =&amp;gt; GTTA&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;The variant caller&lt;/h2&gt; &#xA;&lt;p&gt;The variant calling is done by &lt;a href=&#34;https://github.com/ekg/freebayes&#34;&gt;Freebayes&lt;/a&gt;. The key parameters under user control are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--mincov&lt;/code&gt; - the minimum number of reads covering a site to be considered (default=10)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--minfrac&lt;/code&gt; - the minimum proportion of those reads which must differ from the reference&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--minqual&lt;/code&gt; - the minimum VCF variant call &#34;quality&#34; (default=100)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Looking at variants in detail with &lt;code&gt;snippy-vcf_report&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you run Snippy with the &lt;code&gt;--report&lt;/code&gt; option it will automatically run &lt;code&gt;snippy-vcf_report&lt;/code&gt; and generate a &lt;code&gt;snps.report.txt&lt;/code&gt; which has a section like this for each SNP in &lt;code&gt;snps.vcf&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&#xA;&amp;gt;LBB_contig000001:10332 snp A=&amp;gt;T DP=7 Q=66.3052 [7]&#xA;&#xA;         10301     10311     10321     10331     10341     10351     10361&#xA;tcttctccgagaagggaatataatttaaaaaaattcttaaataattcccttccctcccgttataaaaattcttcgcttat&#xA;........................................T.......................................&#xA;,,,,,,  ,,,,,,,,,,,,,,,,,,,,,t,,,,,,,,,,t,,t,,,,,,,,,,,,,,,,g,,,,,,,g,,,,,,,,,t,&#xA;,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, .......T..................A............A.......&#xA;.........................A........A.....T...........    .........C..............&#xA;.....A.....................C..C........CT.................TA.............&#xA;,a,,,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,t,t,,,g,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,&#xA;,,,,,ga,,,,,,,c,,,,,,,t,,,,,,,,,,g,,,,,,t,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,&#xA;                            ............T.C..............G...............G......&#xA;                                                    ,,,,,,,g,,,,,,,,g,,,,,,,,,,,&#xA;                                                           g,,,,,,,,,,,,,,,,,,,,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you wish to generate this report &lt;em&gt;after&lt;/em&gt; you have run Snippy, you can run it directly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd snippydir&#xA;snippy-vcf_report --cpus 8 --auto &amp;gt; snps.report.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want a HTML version for viewing in a web browser, use the &lt;code&gt;--html&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd snippydir&#xA;snippy-vcf_report --html --cpus 16 --auto &amp;gt; snps.report.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It works by running &lt;code&gt;samtools tview&lt;/code&gt; for each variant, which can be very slow if you have 1000s of variants. Using &lt;code&gt;--cpus&lt;/code&gt; as high as possible is recommended.&lt;/p&gt; &#xA;&lt;h2&gt;Options&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--rgid&lt;/code&gt; will set the Read Group (&lt;code&gt;RG&lt;/code&gt;) ID (&lt;code&gt;ID&lt;/code&gt;) and Sample (&lt;code&gt;SM&lt;/code&gt;) in the BAM and VCF file. If not supplied, it will will use the &lt;code&gt;--outdir&lt;/code&gt; folder name for both &lt;code&gt;ID&lt;/code&gt; and &lt;code&gt;SM&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--mapqual&lt;/code&gt; is the minimum mapping quality to accept in variant calling. BWA MEM using &lt;code&gt;60&lt;/code&gt; to mean a read is &#34;uniquely mapped&#34;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--basequal&lt;/code&gt; is minimum quality a nucleotide needs to be used in variant calling. We use &lt;code&gt;13&lt;/code&gt; which corresponds to error probability of ~5%. It is a traditional SAMtools value.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--maxsoft&lt;/code&gt; is how many bases of an alignment to allow to be soft-clipped before discarding the alignment. This is to encourage global over local alignment, and is passed to the &lt;code&gt;samclip&lt;/code&gt; tool.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--mincov&lt;/code&gt; and &lt;code&gt;--minfrac&lt;/code&gt; are used to apply hard thresholds to the variant calling beyond the existing statistical measure.. The optimal values depend on your sequencing depth and contamination rate. Values of 10 and 0.9 are commonly used.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--targets&lt;/code&gt; takes a BED file and only calls variants in those regions. Not normally needed unless you are only interested in variants in specific locii (eg. AMR genes) but are still performing WGS rather than amplicon sequencing.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;--contigs&lt;/code&gt; allows you to call SNPs from contigs rather than reads. It shreds the contigs into synthetic reads, as to put the calls on even footing with other read samples in a multi-sample analysis.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Core SNP phylogeny&lt;/h1&gt; &#xA;&lt;p&gt;If you call SNPs for multiple isolates from the same reference, you can produce an alignment of &#34;core SNPs&#34; which can be used to build a high-resolution phylogeny (ignoring possible recombination). A &#34;core site&#34; is a genomic position that is present in &lt;em&gt;all&lt;/em&gt; the samples. A core site can have the same nucleotide in every sample (&#34;monomorphic&#34;) or some samples can be different (&#34;polymorphic&#34; or &#34;variant&#34;). If we ignore the complications of &#34;ins&#34;, &#34;del&#34; variant types, and just use variant sites, these are the &#34;core SNP genome&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;Input Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a set of Snippy folders which used the same &lt;code&gt;--ref&lt;/code&gt; sequence.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Using &lt;code&gt;snippy-multi&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To simplify running a set of isolate sequences (reads or contigs) against the same reference, you can use the &lt;code&gt;snippy-multi&lt;/code&gt; script. This script requires a &lt;em&gt;tab separated&lt;/em&gt; input file as follows, and can handle paired-end reads, single-end reads, and assembled contigs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# input.tab = ID R1 [R2]&#xA;Isolate1&#x9;/path/to/R1.fq.gz&#x9;/path/to/R2.fq.gz&#xA;Isolate1b&#x9;/path/to/R1.fastq.gz&#x9;/path/to/R2.fastq.gz&#xA;Isolate1c&#x9;/path/to/R1.fa&#x9;&#x9;/path/to/R2.fa&#xA;# single end reads supported too&#xA;Isolate2&#x9;/path/to/SE.fq.gz&#xA;Isolate2b&#x9;/path/to/iontorrent.fastq&#xA;# or already assembled contigs if you don&#39;t have reads&#xA;Isolate3&#x9;/path/to/contigs.fa&#xA;Isolate3b&#x9;/path/to/reference.fna.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then one would run this to generate the output script. The first parameter should be the &lt;code&gt;input.tab&lt;/code&gt; file. The remaining parameters should be any remaining shared &lt;code&gt;snippy&lt;/code&gt; parameters. The &lt;code&gt;ID&lt;/code&gt; will be used for each isolate&#39;s &lt;code&gt;--outdir&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% snippy-multi input.tab --ref Reference.gbk --cpus 16 &amp;gt; runme.sh&#xA;&#xA;% less runme.sh   # check the script makes sense&#xA;&#xA;% sh ./runme.sh   # leave it running over lunch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It will also run &lt;code&gt;snippy-core&lt;/code&gt; at the end to generate the core genome SNP alignment files &lt;code&gt;core.*&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Output Files&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Extension&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.aln&lt;/td&gt; &#xA;   &lt;td&gt;A core SNP alignment in the &lt;code&gt;--aformat&lt;/code&gt; format (default FASTA)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.full.aln&lt;/td&gt; &#xA;   &lt;td&gt;A whole genome SNP alignment (includes invariant sites)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.tab&lt;/td&gt; &#xA;   &lt;td&gt;Tab-separated columnar list of &lt;strong&gt;core&lt;/strong&gt; SNP sites with alleles but NO annotations&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.vcf&lt;/td&gt; &#xA;   &lt;td&gt;Multi-sample VCF file with genotype &lt;code&gt;GT&lt;/code&gt; tags for all discovered alleles&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.txt&lt;/td&gt; &#xA;   &lt;td&gt;Tab-separated columnar list of alignment/core-size statistics&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.ref.fa&lt;/td&gt; &#xA;   &lt;td&gt;FASTA version/copy of the &lt;code&gt;--ref&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.self_mask.bed&lt;/td&gt; &#xA;   &lt;td&gt;BED file generated if &lt;code&gt;--mask auto&lt;/code&gt; is used.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Why is &lt;code&gt;core.full.aln&lt;/code&gt; an alphabet soup?&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;core.full.aln&lt;/code&gt; file is a FASTA formatted mutliple sequence alignment file. It has one sequence for the reference, and one for each sample participating in the core genome calculation. Each sequence has the same length as the reference sequence.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Character&lt;/th&gt; &#xA;   &lt;th&gt;Meaning&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ATGC&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Same as the reference&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;atgc&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Different from the reference&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Zero coverage in this sample &lt;strong&gt;or&lt;/strong&gt; a deletion relative to the reference&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;N&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Low coverage in this sample (based on &lt;code&gt;--mincov&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;X&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Masked region of reference (from &lt;code&gt;--mask&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;n&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Heterozygous or poor quality genotype (has &lt;code&gt;GT=0/1&lt;/code&gt; or &lt;code&gt;QUAL &amp;lt; --minqual&lt;/code&gt; in &lt;code&gt;snps.raw.vcf&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;You can remove all the &#34;weird&#34; characters and replace them with &lt;code&gt;N&lt;/code&gt; using the included &lt;code&gt;snippy-clean_full_aln&lt;/code&gt;. This is useful when you need to pass it to a tree-building or recombination-removal tool:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% snippy-clean_full_aln core.full.aln &amp;gt; clean.full.aln&#xA;% run_gubbins.py -p gubbins clean.full.aln&#xA;% snp-sites -c gubbins.filtered_polymorphic_sites.fasta &amp;gt; clean.core.aln&#xA;% FastTree -gtr -nt clean.core.aln &amp;gt; clean.core.tree&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Options&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you want to mask certain regions of the genome, you can provide a BED file with the &lt;code&gt;--mask&lt;/code&gt; parameter. Any SNPs in those regions will be excluded. This is common for genomes like &lt;em&gt;M.tuberculosis&lt;/em&gt; where pesky repetitive PE/PPE/PGRS genes cause false positives, or masking phage regions. A &lt;code&gt;--mask&lt;/code&gt; bed file for &lt;em&gt;M.tb&lt;/em&gt; is provided with Snippy in the &lt;code&gt;etc/Mtb_NC_000962.3_mask.bed&lt;/code&gt; folder. It is derived from the XLSX file from &lt;a href=&#34;https://gph.niid.go.jp/tgs-tb/&#34;&gt;https://gph.niid.go.jp/tgs-tb/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you use the &lt;code&gt;snippy --cleanup&lt;/code&gt; option the reference files will be deleted. This means &lt;code&gt;snippy-core&lt;/code&gt; can not &#34;auto-find&#34; the reference. In this case you simply use &lt;code&gt;snippy-core --reference REF&lt;/code&gt; to provide the reference in FASTA format.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Advanced usage&lt;/h1&gt; &#xA;&lt;h2&gt;Increasing speed when too many reads&lt;/h2&gt; &#xA;&lt;p&gt;Sometimes you will have far more sequencing depth that you need to call SNPs. A common problem is a whole MiSeq flowcell for a single bacterial isolate, where 25 million reads results in genome depth as high as 2000x. This makes Snippy far slower than it needs to be, as most SNPs will be recovered with 50-100x depth. If you know you have 10 times as much data as you need, Snippy can randomly sub-sample your FASTQ data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# have 1000x depth, only need 100x so sample at 10%&#xA;snippy --subsample 0.1  ...&#xA;&amp;lt;snip&amp;gt;&#xA;Sub-sampling reads at rate 0.1&#xA;&amp;lt;snip&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Only calling SNPs in particular regions&lt;/h2&gt; &#xA;&lt;p&gt;If you are looking for specific SNPs, say AMR releated ones in particular genes in your reference genome, you can save much time by only calling variants there. Just put the regions of interest into a BED file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;snippy --targets sites.bed ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Finding SNPs between contigs&lt;/h2&gt; &#xA;&lt;p&gt;Sometimes one of your samples is only available as contigs, without corresponding FASTQ reads. You can still use these contigs with Snippy to find variants against a reference. It does this by shredding the contigs into 250 bp single-end reads at &lt;code&gt;2 &amp;amp;times; --mincov&lt;/code&gt; uniform coverage.&lt;/p&gt; &#xA;&lt;p&gt;To use this feature, instead of providing &lt;code&gt;--R1&lt;/code&gt; and &lt;code&gt;--R2&lt;/code&gt; you use the &lt;code&gt;--ctgs&lt;/code&gt; option with the contigs file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% ls&#xA;ref.gbk mutant.fasta&#xA;&#xA;% snippy --outdir mut1 --ref ref.gbk --ctgs mut1.fasta&#xA;Shredding mut1.fasta into pseudo-reads.&#xA;Identified 257 variants.&#xA;&#xA;% snippy --outdir mut2 --ref ref.gbk --ctgs mut2.fasta&#xA;Shredding mut2.fasta into pseudo-reads.&#xA;Identified 413 variants.&#xA;&#xA;% snippy-core mut1 mut2 &#xA;Found 129 core SNPs from 541 variant sites.&#xA;&#xA;% ls&#xA;core.aln core.full.aln ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This output folder is completely compatible with &lt;code&gt;snippy-core&lt;/code&gt; so you can mix FASTQ and contig based &lt;code&gt;snippy&lt;/code&gt; output folders to produce alignments.&lt;/p&gt; &#xA;&lt;h2&gt;Correcting assembly errors&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;em&gt;de novo&lt;/em&gt; assembly process attempts to reconstruct the reads into the original DNA sequences they were derived from. These reconstructed sequences are called &lt;em&gt;contigs&lt;/em&gt; or &lt;em&gt;scaffolds&lt;/em&gt;. For various reasons, small errors can be introduced into the assembled contigs which are not supported by the original reads used in the assembly process.&lt;/p&gt; &#xA;&lt;p&gt;A common strategy is to align the reads back to the contigs to check for discrepancies. These errors appear as variants (SNPs and indels). If we can &lt;em&gt;reverse&lt;/em&gt; these variants than we can &#34;correct&#34; the contigs to match the evidence provided by the original reads. Obviously this strategy can go wrong if one is not careful about &lt;em&gt;how&lt;/em&gt; the read alignment is performed and which variants are accepted.&lt;/p&gt; &#xA;&lt;p&gt;Snippy is able to help with this contig correction process. In fact, it produces a &lt;code&gt;snps.consensus.fa&lt;/code&gt; FASTA file which is the &lt;code&gt;ref.fa&lt;/code&gt; input file provided but with the discovered variants in &lt;code&gt;snps.vcf&lt;/code&gt; applied!&lt;/p&gt; &#xA;&lt;p&gt;However, Snippy is not perfect and sometimes finds questionable variants. Typically you would make a copy of &lt;code&gt;snps.vcf&lt;/code&gt; (let&#39;s call it &lt;code&gt;corrections.vcf&lt;/code&gt;) and remove those lines corresponding to variants we don&#39;t trust. For example, when correcting Roche 454 and PacBio SMRT contigs, we primarily expect to find homopolymer errors and hence expect to see &lt;code&gt;ins&lt;/code&gt; more than &lt;code&gt;snp&lt;/code&gt; type variants.&lt;/p&gt; &#xA;&lt;p&gt;In this case you need to run the correcting process manually using these steps:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% cd snippy-outdir&#xA;% cp snps.vcf corrections.vcf&#xA;% $EDITOR corrections.vcf&#xA;% bgzip -c corrections.vcf &amp;gt; corrections.vcf.gz&#xA;% tabix -p vcf corrections.vcf.gz&#xA;% vcf-consensus corrections.vcf.gz &amp;lt; ref.fa &amp;gt; corrected.fa&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may wish to &lt;em&gt;iterate&lt;/em&gt; this process by using &lt;code&gt;corrected.fa&lt;/code&gt; as a new &lt;code&gt;--ref&lt;/code&gt; for a repeated run of Snippy. Sometimes correcting one error allows BWA to align things it couldn&#39;t before, and new errors are uncovered.&lt;/p&gt; &#xA;&lt;p&gt;Snippy may not be the best way to correct assemblies - you should consider dedicated tools such as &lt;a href=&#34;http://www.broadinstitute.org/software/pilon/&#34;&gt;PILON&lt;/a&gt; or &lt;a href=&#34;http://icorn.sourceforge.net/&#34;&gt;iCorn2&lt;/a&gt;, or adjust the Quiver parameters (for Pacbio data).&lt;/p&gt; &#xA;&lt;h2&gt;Unmapped Reads&lt;/h2&gt; &#xA;&lt;p&gt;Sometimes you are interested in the reads which did &lt;em&gt;not&lt;/em&gt; align to the reference genome. These reads represent DNA that was novel to &lt;em&gt;your&lt;/em&gt; sample which is potentially interesting. A standard strategy is to &lt;em&gt;de novo&lt;/em&gt; assemble the unmapped reads to discover these novel DNA elements, which often comprise mobile genetic elements such as plasmids.&lt;/p&gt; &#xA;&lt;p&gt;By default, Snippy does &lt;strong&gt;not&lt;/strong&gt; keep the unmapped reads, not even in the BAM file. If you wish to keep them, use the &lt;code&gt;--unmapped&lt;/code&gt; option and the unaligned reads will be saved to a compressed FASTQ file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% snippy --outdir out --unmapped ....&#xA;&#xA;% ls out/&#xA;snps.unmapped.fastq.gz ....&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Information&lt;/h1&gt; &#xA;&lt;h2&gt;Etymology&lt;/h2&gt; &#xA;&lt;p&gt;The name Snippy is a combination of &lt;a href=&#34;http://en.wikipedia.org/wiki/Single-nucleotide_polymorphism&#34;&gt;SNP&lt;/a&gt; (pronounced &#34;snip&#34;) , &lt;a href=&#34;http://www.thefreedictionary.com/snappy&#34;&gt;snappy&lt;/a&gt; (meaning &#34;quick&#34;) and &lt;a href=&#34;http://en.wikipedia.org/wiki/Skippy_the_Bush_Kangaroo&#34;&gt;Skippy the Bush Kangaroo&lt;/a&gt; (to represent its Australian origin)&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Snippy is free software, released under the &lt;a href=&#34;https://raw.githubusercontent.com/tseemann/snippy/master/LICENSE&#34;&gt;GPL (version 2)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;Please submit suggestions and bug reports to the &lt;a href=&#34;https://github.com/tseemann/snippy/issues&#34;&gt;Issue Tracker&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;perl &amp;gt;= 5.18&lt;/li&gt; &#xA; &lt;li&gt;bioperl &amp;gt;= 1.7&lt;/li&gt; &#xA; &lt;li&gt;bwa mem &amp;gt;= 0.7.12&lt;/li&gt; &#xA; &lt;li&gt;minimap2 &amp;gt;= 2.0&lt;/li&gt; &#xA; &lt;li&gt;samtools &amp;gt;= 1.7&lt;/li&gt; &#xA; &lt;li&gt;bcftools &amp;gt;= 1.7&lt;/li&gt; &#xA; &lt;li&gt;bedtools &amp;gt;= 2.0&lt;/li&gt; &#xA; &lt;li&gt;GNU parallel &amp;gt;= 2013xxxx&lt;/li&gt; &#xA; &lt;li&gt;freebayes &amp;gt;= 1.1 (freebayes, freebayes-parallel, fasta_generate_regions.py)&lt;/li&gt; &#xA; &lt;li&gt;vcflib &amp;gt;= 1.0 (vcfstreamsort, vcfuniq, vcffirstheader)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://genome.sph.umich.edu/wiki/Vt&#34;&gt;vt&lt;/a&gt; &amp;gt;= 0.5&lt;/li&gt; &#xA; &lt;li&gt;snpEff &amp;gt;= 4.3&lt;/li&gt; &#xA; &lt;li&gt;samclip &amp;gt;= 0.2&lt;/li&gt; &#xA; &lt;li&gt;seqtk &amp;gt;= 1.2&lt;/li&gt; &#xA; &lt;li&gt;snp-sites &amp;gt;= 2.0&lt;/li&gt; &#xA; &lt;li&gt;any2fasta &amp;gt;= 0.4&lt;/li&gt; &#xA; &lt;li&gt;wgsim &amp;gt;= 1.8 (for testing only - &lt;code&gt;wgsim&lt;/code&gt; command)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Bundled binaries&lt;/h2&gt; &#xA;&lt;p&gt;For Linux (compiled on Ubuntu 16.04 LTS) and macOS (compiled on High Sierra Brew) some of the binaries, JARs and scripts are included.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>get-iplayer/get_iplayer</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/get-iplayer/get_iplayer</id>
    <link href="https://github.com/get-iplayer/get_iplayer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A utility for downloading TV and radio programmes from BBC iPlayer and BBC Sounds&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;get_iplayer: BBC iPlayer/BBC Sounds Indexing Tool and PVR&lt;/h2&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Downloads TV and radio programmes from BBC iPlayer/BBC Sounds&lt;/li&gt; &#xA; &lt;li&gt;Allows multiple programmes to be downloaded using a single command&lt;/li&gt; &#xA; &lt;li&gt;Indexing of most available iPlayer/Sounds catch-up programmes from previous 30 days (not Red Button, iPlayer Exclusive, or Podcast-only)&lt;/li&gt; &#xA; &lt;li&gt;Caching of programme index with automatic updating&lt;/li&gt; &#xA; &lt;li&gt;Regex search on programme name&lt;/li&gt; &#xA; &lt;li&gt;Regex search on programme description and episode title&lt;/li&gt; &#xA; &lt;li&gt;Filter search results by channel&lt;/li&gt; &#xA; &lt;li&gt;Direct download via programme ID or URL&lt;/li&gt; &#xA; &lt;li&gt;PVR capability (may be used with cron or Task Scheduler)&lt;/li&gt; &#xA; &lt;li&gt;HTTP proxy support&lt;/li&gt; &#xA; &lt;li&gt;Perl 5.16+ required, plus LWP, LWP::Protocol::https, XML::LibXML, Mojolicious, and CGI modules&lt;/li&gt; &#xA; &lt;li&gt;Requires ffmpeg for conversion to MP4 and AtomicParsley for metadata tagging&lt;/li&gt; &#xA; &lt;li&gt;Runs on Linux/BSD (Ubuntu, Fedora, OpenBSD and others), macOS (10.10+), Windows (7/8/10)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;get_iplayer can only search for programmes that were scheduled for broadcast on BBC linear services within the previous 30 days, even if some are available for more than 30 days on the iPlayer/Sounds sites. Red button programmes, iPlayer box sets, web-only content, and BBC podcasts are not searchable. Programmes that are still available after 30 days must be located on the iPlayer/Sounds sites and downloaded directly via PID or URL.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;get_iplayer does not support downloading news/sport videos, other embedded media, archive programmes, special collections, educational material, programme clips or any content other than whole episodes of programmes scheduled for broadcast on BBC linear services within the previous 30 days. However, it is generally possible to download other content such as red button programmes, iPlayer box sets, or podcasts directly via PID or URL. get_iplayer DOES NOT support live recording from BBC channels.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/get-iplayer/get_iplayer/wiki&#34;&gt;https://github.com/get-iplayer/get_iplayer/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/get-iplayer/get_iplayer/wiki/installation&#34;&gt;https://github.com/get-iplayer/get_iplayer/wiki/installation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;get_iplayer --help&#xA;get_iplayer --basic-help&#xA;get_iplayer --long-help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;List all TV programmes (&lt;code&gt;--type=tv&lt;/code&gt; set by default):&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer &#34;.*&#34;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Search output appears in this format:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  ...&#xA;  208:  Doctor Who: Series 7 Part 2 - 1. The Bells of Saint John, BBC One, b01rryzz&#xA;  209:  Doctor Who: Series 7 Part 2 - 2. The Rings Of Akhaten, BBC One, b01rx0lj&#xA;  210:  Doctor Who: Series 7 Part 2 - 3. Cold War, BBC One, b01s1cz7&#xA;  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Format = &lt;code&gt;&amp;lt;index&amp;gt;: &amp;lt;name&amp;gt; - &amp;lt;episode&amp;gt;, &amp;lt;channel&amp;gt;, &amp;lt;pid&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;List all TV programmes with long descriptions:&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --long &#34;.*&#34;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;List all radio programmes:&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --type=radio &#34;.*&#34;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;List all TV programmes with &#34;doctor who&#34; in the name (matching is case-insensitive):&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer &#34;doctor who&#34;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;List all TV and radio programmes with &#34;doctor who&#34; in the name:&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --type tv,radio &#34;doctor who&#34;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;List all BBC One programmes:&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --channel=&#34;BBC One&#34; &#34;.*&#34;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;List Radio 4 and Radio 4 Extra programmes with &#34;Book at Bedtime&#34; in the title:&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --type=radio --channel=&#34;Radio 4&#34; &#34;Book at Bedtime&#34;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;List only Radio 4 programmes with &#34;Book at Bedtime&#34; in the title:&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --type=radio --channel=&#34;Radio 4$&#34; &#34;Book at Bedtime&#34;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;(The &lt;code&gt;$&lt;/code&gt; regular expression metacharacter matches &#34;Radio 4&#34; only at the end of the channel name, thus avoiding matches against &#34;Radio 4 Extra&#34;)&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Record TV programme number 208 (index from search results) in HD, with fallback to lower quality if not available:&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --get 208&lt;/code&gt; [default setting]&lt;/p&gt; &lt;p&gt;or&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --get 208 --tv-quality=hd,sd,web,mobile&lt;/code&gt; [explicit setting]&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Record TV programme number 208 in lower resolution only (704x396@50):&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --get 208 --tv-quality=web&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Record TV programme number 208 and download subtitles in SubRip (SRT) format:&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --get 208 --subtitles&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Record multiple TV programmes (using index numbers from search results):&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --get 208 209 210&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Record a TV programme using its iPlayer URL:&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer https://www.bbc.co.uk/iplayer/episode/b01sc0wf/Doctors_Series_15_Perfect/&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Record a TV programme using the PID (b01sc0wf) from its iPlayer URL:&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --pid=b01sc0wf&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Record a radio programme using its Sounds URL:&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer https://www.bbc.co.uk/sounds/play/b07gcv34&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Record a radio programme using the PID (b07gcv34) from its Sounds URL in high quality (320k), with fallback to lower quality if not available (default setting):&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --pid=b07gcv34&lt;/code&gt; [default setting]&lt;/p&gt; &lt;p&gt;OR&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --pid=b07gcv34 --radio-quality=high,std,med,low&lt;/code&gt; [explicit setting]&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Record a radio programme using the PID (b07gcv34) from its Sounds URL with lower bit rate only (96k):&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --pid=b07gcv34 --radio-quality=med&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Record multiple radio programmes (using PIDs from Sounds URLs):&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --pid=b07gcv34,b07h60ld&lt;/code&gt; [comma-separated list]&lt;/p&gt; &lt;p&gt;OR&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --pid=b07gcv34 --pid=b07h60ld&lt;/code&gt; [multiple arguments]&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;NOTE: Sometimes you may not be able to download a listed programme immediately after broadcast (usually available within 24hrs of airing). Some BBC programmes may not be available from iPlayer/Sounds.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ThePrimeagen/.dotfiles</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/ThePrimeagen/.dotfiles</id>
    <link href="https://github.com/ThePrimeagen/.dotfiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;.dotfiles&lt;/h1&gt; &#xA;&lt;h3&gt;Kinesis Advantage 360&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Will there be a travel case?&lt;/li&gt; &#xA; &lt;li&gt;Will there be blank key caps?&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>goblin/hercules_controller</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/goblin/hercules_controller</id>
    <link href="https://github.com/goblin/hercules_controller" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple script that controlls MPlayer with a Hercules DJ Control MP3 - a USB MIDI controller&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This is hercules_controller, a simple script to control mplayer with a hercules dj control mp3.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s quite hacky and likely not very stable or tested, but feel free to use and/or modify it to your needs - it&#39;s meant to be quite simple, as it&#39;s only really a small perl script.&lt;/p&gt; &#xA;&lt;p&gt;The controls might look funny, but that&#39;s kinda what I currently like :-)&lt;/p&gt; &#xA;&lt;p&gt;Requires a CPAN module MIDI::ALSA, as well as hdj_mod kernel module (driver for the controller).&lt;/p&gt; &#xA;&lt;p&gt;USAGE&lt;/p&gt; &#xA;&lt;p&gt;To use it, first create a named pipe like such:&lt;/p&gt; &#xA;&lt;p&gt;$ mkfifo ~/.mplayer/pipe&lt;/p&gt; &#xA;&lt;p&gt;then put this in ~/.mplayer/config:&lt;/p&gt; &#xA;&lt;p&gt;input=file=/home/goblin/.mplayer/pipe&lt;/p&gt; &#xA;&lt;p&gt;Then run the script like this:&lt;/p&gt; &#xA;&lt;p&gt;$ ./mplayer_ctrl.pl ~/.mplayer/pipe 32&lt;/p&gt; &#xA;&lt;p&gt;where 32 is the ALSA-MIDI number of your hercules controller. Optionally you can skip the last argument and manually connect the script to your hercules using something like qjackctl&#39;s Connections/ALSA tab.&lt;/p&gt; &#xA;&lt;p&gt;DONATIONS If you really like it, you can donate some bitcoins to: 18BuNrN9aJ1zKBF9XSNAnicRDMdHNHKhkk&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>inaes-tic/pkg-firefox</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/inaes-tic/pkg-firefox</id>
    <link href="https://github.com/inaes-tic/pkg-firefox" rel="alternate"></link>
    <summary type="html">&lt;p&gt;identidad visual de firefox&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>openSUSE/obs-build</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/openSUSE/obs-build</id>
    <link href="https://github.com/openSUSE/obs-build" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OBS build script, can be used with OBS or stand alone&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This repository provides the &lt;code&gt;build&lt;/code&gt; tool to build binary packages in a a safe and reproducible way. It can be used standalone or within the &lt;a href=&#34;http://openbuildservice.org&#34;&gt;Open Build Service&lt;/a&gt; (OBS).&lt;/p&gt; &#xA;&lt;p&gt;Latest packages for &lt;code&gt;obs-build&lt;/code&gt; are available from &lt;a href=&#34;https://software.opensuse.org/download/package?package=obs-build&amp;amp;project=openSUSE%3ATools&#34;&gt;openSUSE:Tools downloads&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://opensuse.github.io/obs-build/pbuild.html&#34;&gt;Documentation is available here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Supported build environments&lt;/h1&gt; &#xA;&lt;h2&gt;Unsecure&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;chroot&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;LXC&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Secure but with limited reproducibility&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nspawn&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Secure and with full reproducibility&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;KVM&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;XEN&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ZVM&lt;/code&gt; (&lt;strong&gt;S390&lt;/strong&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Experimental support&lt;/h2&gt; &#xA;&lt;p&gt;In addition, there is currently experimental support for&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;UML&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PVM&lt;/code&gt; (&lt;strong&gt;PowerPC&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://openstack.org&#34;&gt;OpenStack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://ec2.amazon.com&#34;&gt;Amazon EC2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;For hardware emulation there are&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;qemu&lt;/code&gt;, which runs a &lt;code&gt;QEMU&lt;/code&gt; system emulator inside of &lt;code&gt;KVM&lt;/code&gt;. This can be considered also secure and reproducible.&lt;/li&gt; &#xA; &lt;li&gt;The &#34;emulator&#34; VM can be used to run builds using any other emulator via a wrapper script.&lt;/li&gt; &#xA; &lt;li&gt;A &lt;code&gt;QEMU&lt;/code&gt; user land emulation is also possible. This would give higher speed, but requires a preparation inside of the base distribution for this mode.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Supported build formats&lt;/h1&gt; &#xA;&lt;h2&gt;Major distribution package formats&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;spec&lt;/code&gt; to &lt;code&gt;rpm&lt;/code&gt;, e.g. &lt;a href=&#34;http://suse.com&#34;&gt;SUSE&lt;/a&gt;, &lt;a href=&#34;http://getfedora.org&#34;&gt;Fedora&lt;/a&gt;, &lt;a href=&#34;http://redhat.com&#34;&gt;RedHat&lt;/a&gt;, &lt;a href=&#34;http://centos.org&#34;&gt;CentOS&lt;/a&gt;, &lt;a href=&#34;http://mageia.org&#34;&gt;Mandriva&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dsc&lt;/code&gt; to &lt;code&gt;deb&lt;/code&gt;, e.g. &lt;a href=&#34;http://debian.org&#34;&gt;Debian&lt;/a&gt;, &lt;a href=&#34;http://ubuntu.com&#34;&gt;Ubuntu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PKGBUILD&lt;/code&gt; to &lt;code&gt;pkg&lt;/code&gt;, e.g. &lt;a href=&#34;http://archlinux.org&#34;&gt;Arch Linux&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Image formats&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Dockerfile&lt;/code&gt;—&lt;a href=&#34;http://docker.com&#34;&gt;Docker&lt;/a&gt; container via &lt;code&gt;docker&lt;/code&gt; or &lt;code&gt;podman&lt;/code&gt; tooling)&lt;/li&gt; &#xA; &lt;li&gt;kiwi appliances—This includes a &lt;a href=&#34;http://documentation.suse.com/kiwi/9/html/kiwi/image-types.html&#34;&gt;long list of formats&lt;/a&gt; supported by the kiwi tool From live USB stick images, network deployment images, VM images to docker containers&lt;/li&gt; &#xA; &lt;li&gt;SUSE Product—&lt;a href=&#34;http://suse.com&#34;&gt;SUSE&lt;/a&gt; product media builds&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;SimpleImage&lt;/em&gt;—&lt;code&gt;chroot&lt;/code&gt; &lt;code&gt;tar&lt;/code&gt; ball based on &lt;code&gt;rpm&lt;/code&gt; spec file syntax&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://debian.org&#34;&gt;Debian&lt;/a&gt; &lt;em&gt;Livebuild&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Preinstallimages&lt;/em&gt;—for speeding up builds esp. inside of &lt;a href=&#34;http://openbuildservice.org/&#34;&gt;OBS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Desktop Image formats&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;AppImage&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;FlatPak&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Snapcraft&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Special modes and formats&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;debbuild&lt;/code&gt;: build &lt;a href=&#34;http://debian.org&#34;&gt;debian&lt;/a&gt; &lt;code&gt;deb&lt;/code&gt;s from &lt;code&gt;rpm&lt;/code&gt; spec files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;debbootstrap&lt;/code&gt;: &lt;a href=&#34;http://debian.org&#34;&gt;debian&lt;/a&gt; builds using &lt;code&gt;debootstrap&lt;/code&gt; as the engine&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mock&lt;/code&gt;: &lt;code&gt;rpm&lt;/code&gt; spec file build using &lt;a href=&#34;https://github.com/rpm-software-management/mock&#34;&gt;&lt;code&gt;mock&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;collax&lt;/code&gt;: &lt;a href=&#34;http://debian.org&#34;&gt;debian&lt;/a&gt; package variation&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fissile&lt;/code&gt;: &lt;code&gt;docker&lt;/code&gt; images based on &lt;code&gt;BOSH&lt;/code&gt; dev releases&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;helm&lt;/code&gt;: &lt;code&gt;helm&lt;/code&gt; charts&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;modulemd&lt;/code&gt;: &lt;code&gt;modulemd&lt;/code&gt; rpm-md extensions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--help&lt;/code&gt; option for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cmatsuoka/asciiquarium</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/cmatsuoka/asciiquarium</id>
    <link href="https://github.com/cmatsuoka/asciiquarium" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Enjoy the mysteries of the sea from the safety of your own terminal!&lt;/p&gt;&lt;hr&gt;&lt;pre&gt;&lt;code&gt;                          Asciiquarium v1.1&#xA;                by Kirk Baucom &amp;lt;kbaucom@schizoid.com&amp;gt;&#xA;                      http://www.robobunny.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Asciiquarium is an aquarium/sea animation in ASCII art.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Asciiquarium is a single perl script, so all you have to do is make sure it&#39;s executable and put it somewhere convenient, like /usr/local/bin or /usr/local/games.&lt;/p&gt; &#xA;&lt;h2&gt;Ubuntu&lt;/h2&gt; &#xA;&lt;p&gt;Out-of-the-box ubuntu doesn&#39;t satisfy the Requirements below, so here&#39;s how to get them:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Get perl&#39;s curses package which is available from apt: sudo apt-get install libcurses-perl&lt;/li&gt; &#xA; &lt;li&gt;Run cpan at the shell. Agree to the defaults for everything. To leave cpan, type quit&lt;/li&gt; &#xA; &lt;li&gt;Type sudo cpan Term::Animation&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;You must have the Term::Animation module, which you can get from &lt;a href=&#34;http://www.cpan.org&#34;&gt;http://www.cpan.org&lt;/a&gt;. The Term::Animation module also requires the Curses module, which you can also get from CPAN. This program will only run on platforms that have a Curses library (so it won&#39;t work on Windows, but you might get it to run under cygwin).&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Command line arguments: -c &#34;classic&#34; mode, only show species from Asciiquarium 1.0&lt;/p&gt; &#xA;&lt;p&gt;While running: q quit r redraw (will recreate all entities) p toggle pause&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;New fish species backported from the Android live wallpaper and other minor improvements by Claudio Matsuoka.&lt;/p&gt; &#xA;&lt;p&gt;Pretty much all of the ASCII art was done by Joan Stark: &lt;a href=&#34;http://www.geocities.com/SoHo/7373/&#34;&gt;http://www.geocities.com/SoHo/7373/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Anything that she didn&#39;t do, I don&#39;t have a source for.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mshock/BCPlib</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/mshock/BCPlib</id>
    <link href="https://github.com/mshock/BCPlib" rel="alternate"></link>
    <summary type="html">&lt;p&gt;BCPlib Perl Module - Perl interface to Windows BCP command w/ SQL ops focus&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BCPlib&lt;/h1&gt; &#xA;&lt;p&gt;BCPlib Perl Module - Perl interface to Windows BCP command w/ SQL ops focus&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bingos/poe-component-irc-plugin-role</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/bingos/poe-component-irc-plugin-role</id>
    <link href="https://github.com/bingos/poe-component-irc-plugin-role" rel="alternate"></link>
    <summary type="html">&lt;p&gt;(perl) A Moose role for POE::Component::IRC plugins&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>AlDanial/cloc</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/AlDanial/cloc</id>
    <link href="https://github.com/AlDanial/cloc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;cloc counts blank lines, comment lines, and physical lines of source code in many programming languages.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a name=&#34;___top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;cloc&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Count Lines of Code&lt;/em&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;cloc counts blank lines, comment lines, and physical lines of source code in many programming languages.&lt;/p&gt; &#xA;&lt;p&gt;Latest release: v1.92 (Dec. 5, 2021)&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/AlDanial/cloc/graphs/contributors&#34; alt=&#34;Contributors&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/AlDanial/cloc&#34;&gt;&lt;/a&gt; &#xA;&lt;a href=&#34;https://zenodo.org/badge/latestdoi/42029482&#34;&gt; &lt;img src=&#34;https://zenodo.org/badge/42029482.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt; &#xA;&lt;img src=&#34;https://img.shields.io/badge/Maintained%3F-yes-green.svg&gt;&#34;&gt; &#xA;&lt;p&gt;cloc moved to GitHub in September 2015 after being hosted at &lt;a href=&#34;http://cloc.sourceforge.net/&#34;&gt;http://cloc.sourceforge.net/&lt;/a&gt; since August 2006.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#quick-start-&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#overview-&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AlDanial/cloc/releases/latest&#34;&gt;Download&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#install-via-package-manager&#34;&gt;Install via package manager&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#stable-release&#34;&gt;Stable release&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#development-version&#34;&gt;Development version&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#license-&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#why-use-cloc-&#34;&gt;Why Use cloc?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#other-counters-&#34;&gt;Other Counters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#building-a-windows-executable-&#34;&gt;Building a Windows Executable&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#basic-use-&#34;&gt;Basic Use&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#options-&#34;&gt;Options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#recognized-languages-&#34;&gt;Recognized Languages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#how-it-works-&#34;&gt;How it Works&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#advanced-use-&#34;&gt;Advanced Use&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#remove-comments-from-source-code-&#34;&gt;Remove Comments from Source Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#work-with-compressed-archives-&#34;&gt;Work with Compressed Archives&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#differences-&#34;&gt;Differences&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#create-custom-language-definitions-&#34;&gt;Create Custom Language Definitions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#combine-reports-&#34;&gt;Combine Reports&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#sql-&#34;&gt;SQL&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#custom-column-output-&#34;&gt;Custom Column Output&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#wrapping-cloc-in-other-scripts-&#34;&gt;Wrapping cloc in other scripts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#git-and-UTF8-pathnames-&#34;&gt;git and UTF8 pathnames&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#third-generation-language-scale-factors-&#34;&gt;Third Generation Language Scale Factors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#optionstxt-configuration-file-&#34;&gt;options.txt configuration file&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#complex-regular-subexpression-recursion-limit-&#34;&gt;Complex regular subexpression recursion limit &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#limitations-&#34;&gt;Limitations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#requesting-support-for-additional-languages-&#34;&gt;Requesting Support for Additional Languages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#reporting-problems-&#34;&gt;Reporting Problems&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#citation-&#34;&gt;Citation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#acknowledgments-&#34;&gt;Acknowledgments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#copyright-&#34;&gt;Copyright&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;Quick_Start&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Quick Start ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Step 1: Download cloc (several methods, see below) or run cloc&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#Docker-&#34;&gt;docker image&lt;/a&gt;. The Windows executable has no requirements. The source version of cloc requires a Perl interpreter, and the Docker version of cloc requires a Docker installation.&lt;/p&gt; &#xA;&lt;p&gt;Step 2: Open a terminal (&lt;code&gt;cmd.exe&lt;/code&gt; on Windows).&lt;/p&gt; &#xA;&lt;p&gt;Step 3: Invoke cloc to count your source files, directories, archives, or git commits. The executable name differs depending on whether you use the development source version (&lt;code&gt;cloc&lt;/code&gt;), source for a released version (&lt;code&gt;cloc-1.92.pl&lt;/code&gt;) or a Windows executable (&lt;code&gt;cloc-1.92.exe&lt;/code&gt;). On this page, &lt;code&gt;cloc&lt;/code&gt; is the generic term used to refer to any of these.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;a file&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; cloc hello.c&#xA;       1 text file.&#xA;       1 unique file.&#xA;       0 files ignored.&#xA;&#xA;https://github.com/AlDanial/cloc v 1.65  T=0.04 s (28.3 files/s, 340.0 lines/s)&#xA;-------------------------------------------------------------------------------&#xA;Language                     files          blank        comment           code&#xA;-------------------------------------------------------------------------------&#xA;C                                1              0              7              5&#xA;-------------------------------------------------------------------------------&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;a directory&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; cloc gcc-5.2.0/gcc/c&#xA;      16 text files.&#xA;      15 unique files.&#xA;       3 files ignored.&#xA;&#xA;https://github.com/AlDanial/cloc v 1.65  T=0.23 s (57.1 files/s, 188914.0 lines/s)&#xA;-------------------------------------------------------------------------------&#xA;Language                     files          blank        comment           code&#xA;-------------------------------------------------------------------------------&#xA;C                               10           4680           6621          30812&#xA;C/C++ Header                     3             99            286            496&#xA;-------------------------------------------------------------------------------&#xA;SUM:                            13           4779           6907          31308&#xA;-------------------------------------------------------------------------------&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;an archive&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;We&#39;ll pull cloc&#39;s source zip file from GitHub, then count the contents:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; wget https://github.com/AlDanial/cloc/archive/master.zip&#xA;&#xA;prompt&amp;gt; cloc master.zip&#xA;https://github.com/AlDanial/cloc v 1.65  T=0.07 s (26.8 files/s, 141370.3 lines/s)&#xA;-------------------------------------------------------------------------------&#xA;Language                     files          blank        comment           code&#xA;-------------------------------------------------------------------------------&#xA;Perl                             2            725           1103           8713&#xA;-------------------------------------------------------------------------------&#xA;SUM:                             2            725           1103           8713&#xA;-------------------------------------------------------------------------------&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;a git repository, using a specific commit&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This example uses code from &lt;a href=&#34;https://pypi.python.org/pypi/pudb&#34;&gt;PuDB&lt;/a&gt;, a fantastic Python debugger.&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; git clone http://git.tiker.net/trees/pudb.git&#xA;&#xA;prompt&amp;gt; cd pudb&#xA;&#xA;prompt&amp;gt; cloc 6be804e07a5db&#xA;      48 text files.&#xA;      48 unique files.&#xA;      15 files ignored.&#xA;&#xA;github.com/AlDanial/cloc v 1.73  T=0.15 s (223.1 files/s, 46159.0 lines/s)&#xA;-------------------------------------------------------------------------------&#xA;Language                     files          blank        comment           code&#xA;-------------------------------------------------------------------------------&#xA;Python                          28           1519            728           4659&#xA;YAML                             2              9              2             75&#xA;Bourne Shell                     3              6              0             17&#xA;make                             1              4              6             10&#xA;-------------------------------------------------------------------------------&#xA;SUM:                            34           1538            736           4761&#xA;-------------------------------------------------------------------------------&#xA;&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;each subdirectory of a particular directory&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Say you have a directory with three different git-managed projects, Project0, Project1, and Project2. You can use your shell&#39;s looping capability to count the code in each. This example uses bash (scroll down for cmd.exe example):&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; for d in ./*/ ; do (cd &#34;$d&#34; &amp;amp;&amp;amp; echo &#34;$d&#34; &amp;amp;&amp;amp; cloc --vcs git); done&#xA;./Project0/&#xA;7 text files.&#xA;       7 unique files.&#xA;       1 file ignored.&#xA;&#xA;github.com/AlDanial/cloc v 1.71  T=0.02 s (390.2 files/s, 25687.6 lines/s)&#xA;-------------------------------------------------------------------------------&#xA;Language                     files          blank        comment           code&#xA;-------------------------------------------------------------------------------&#xA;D                                4             61             32            251&#xA;Markdown                         1              9              0             38&#xA;make                             1              0              0              4&#xA;-------------------------------------------------------------------------------&#xA;SUM:                             6             70             32            293&#xA;-------------------------------------------------------------------------------&#xA;./Project1/&#xA;       7 text files.&#xA;       7 unique files.&#xA;       0 files ignored.&#xA;&#xA;github.com/AlDanial/cloc v 1.71  T=0.02 s (293.0 files/s, 52107.1 lines/s)&#xA;-------------------------------------------------------------------------------&#xA;Language                     files          blank        comment           code&#xA;-------------------------------------------------------------------------------&#xA;Go                               7            165            282            798&#xA;-------------------------------------------------------------------------------&#xA;SUM:                             7            165            282            798&#xA;-------------------------------------------------------------------------------&#xA;./Project2/&#xA;      49 text files.&#xA;      47 unique files.&#xA;      13 files ignored.&#xA;&#xA;github.com/AlDanial/cloc v 1.71  T=0.10 s (399.5 files/s, 70409.4 lines/s)&#xA;-------------------------------------------------------------------------------&#xA;Language                     files          blank        comment           code&#xA;-------------------------------------------------------------------------------&#xA;Python                          33           1226           1026           3017&#xA;C                                4            327            337            888&#xA;Markdown                         1             11              0             28&#xA;YAML                             1              0              2             12&#xA;-------------------------------------------------------------------------------&#xA;SUM:                            39           1564           1365           3945&#xA;-------------------------------------------------------------------------------&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;each subdirectory of a particular directory (Windows/cmd.exe)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;for /D %I in (.\*) do cd %I &amp;amp;&amp;amp; cloc --vcs git &amp;amp;&amp;amp; cd ..&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;Overview&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Overview ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;cloc counts blank lines, comment lines, and physical lines of source code in &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#Languages&#34;&gt;many programming languages&lt;/a&gt;. Given two versions of a code base, cloc can compute differences in blank, comment, and source lines. It is written entirely in Perl with no dependencies outside the standard distribution of Perl v5.6 and higher (code from some external modules is &lt;a href=&#34;https://github.com/AlDanial/cloc#regexp_common&#34;&gt;embedded within cloc&lt;/a&gt;) and so is quite portable. cloc is known to run on many flavors of Linux, FreeBSD, NetBSD, OpenBSD, macOS, AIX, HP-UX, Solaris, IRIX, z/OS, and Windows. (To run the Perl source version of cloc on Windows one needs &lt;a href=&#34;http://www.activestate.com/activeperl&#34;&gt;ActiveState Perl&lt;/a&gt; 5.6.1 or higher, &lt;a href=&#34;http://strawberryperl.com/&#34;&gt;Strawberry Perl&lt;/a&gt;, Windows Subsystem for Linux, &lt;a href=&#34;http://www.cygwin.com/&#34;&gt;Cygwin&lt;/a&gt;, &lt;a href=&#34;http://mobaxterm.mobatek.net/&#34;&gt;MobaXTerm&lt;/a&gt; with the Perl plug-in installed, or a mingw environment and terminal such as provided by &lt;a href=&#34;https://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt;. Alternatively one can use the Windows binary of cloc generated with &lt;a href=&#34;http://search.cpan.org/~rschupp/PAR-Packer-1.019/lib/pp.pm&#34;&gt;PAR::Packer&lt;/a&gt; to run on Windows computers that have neither Perl nor Cygwin.)&lt;/p&gt; &#xA;&lt;p&gt;In addition to counting code in individual text files, directories, and git repositories, cloc can also count code in archive files such as &lt;code&gt;.tar&lt;/code&gt; (including compressed versions), &lt;code&gt;.zip&lt;/code&gt;, Python wheel &lt;code&gt;.whl&lt;/code&gt;, Jupyter notebook &lt;code&gt;.ipynb&lt;/code&gt;, source RPMs &lt;code&gt;.rpm&lt;/code&gt; or &lt;code&gt;.src&lt;/code&gt; (requires &lt;code&gt;rpm2cpio&lt;/code&gt;), and Debian &lt;code&gt;.deb&lt;/code&gt; files (requires &lt;code&gt;dpkg-deb&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;cloc contains code from David Wheeler&#39;s &lt;a href=&#34;http://www.dwheeler.com/sloccount/&#34;&gt;SLOCCount&lt;/a&gt;, Damian Conway and Abigail&#39;s Perl module &lt;a href=&#34;http://search.cpan.org/%7Eabigail/Regexp-Common-2.120/lib/Regexp/Common.pm&#34;&gt;Regexp::Common&lt;/a&gt;, Sean M. Burke&#39;s Perl module &lt;a href=&#34;http://search.cpan.org/%7Esburke/Win32-Autoglob-1.01/Autoglob.pm&#34;&gt;Win32::Autoglob&lt;/a&gt;, and Tye McQueen&#39;s Perl module &lt;a href=&#34;http://search.cpan.org/%7Etyemq/Algorithm-Diff-1.1902/lib/Algorithm/Diff.pm&#34;&gt;Algorithm::Diff&lt;/a&gt;. Language scale factors were derived from Mayes Consulting, LLC web site &lt;a href=&#34;http://softwareestimator.com/IndustryData2.htm&#34;&gt;http://softwareestimator.com/IndustryData2.htm&lt;/a&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;Docker&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Run via docker&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm -v $PWD:/tmp aldanial/cloc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install via package manager&lt;/h2&gt; &#xA;&lt;p&gt;Depending your operating system, one of these installation methods may work for you (all but the last two entries for Windows require a Perl interpreter):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install -g cloc              # https://www.npmjs.com/package/cloc&#xA;sudo apt install cloc            # Debian, Ubuntu&#xA;sudo yum install cloc            # Red Hat, Fedora&#xA;sudo dnf install cloc            # Fedora 22 or later&#xA;sudo pacman -S cloc              # Arch&#xA;sudo emerge -av dev-util/cloc    # Gentoo https://packages.gentoo.org/packages/dev-util/cloc&#xA;sudo apk add cloc                # Alpine Linux&#xA;doas pkg_add cloc                # OpenBSD&#xA;sudo pkg install cloc            # FreeBSD&#xA;sudo port install cloc           # macOS with MacPorts&#xA;brew install cloc                # macOS with Homebrew&#xA;choco install cloc               # Windows with Chocolatey&#xA;scoop install cloc               # Windows with Scoop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I don&#39;t control any of these packages. If you encounter a bug in cloc using one of the above packages, try with cloc pulled from the latest stable release here on GitHub (link follows below) before submitting a problem report. &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;Stable&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stable release&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/AlDanial/cloc/releases/latest&#34;&gt;https://github.com/AlDanial/cloc/releases/latest&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;Dev&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Development version&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/AlDanial/cloc/raw/master/cloc&#34;&gt;https://github.com/AlDanial/cloc/raw/master/cloc&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;License ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;cloc is licensed under the &lt;a href=&#34;http://www.gnu.org/licenses/gpl-2.0.html&#34;&gt;GNU General Public License, v 2&lt;/a&gt;, excluding portions which are copied from other sources. Code copied from the Regexp::Common, Win32::Autoglob, and Algorithm::Diff Perl modules is subject to the &lt;a href=&#34;http://www.opensource.org/licenses/artistic-license-2.0.php&#34;&gt;Artistic License&lt;/a&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;why_use&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Why Use cloc? ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;cloc has many features that make it easy to use, thorough, extensible, and portable:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Exists as a single, self-contained file that requires minimal installation effort---just download the file and run it.&lt;/li&gt; &#xA; &lt;li&gt;Can read language comment definitions from a file and thus potentially work with computer languages that do not yet exist.&lt;/li&gt; &#xA; &lt;li&gt;Allows results from multiple runs to be summed together by language and by project.&lt;/li&gt; &#xA; &lt;li&gt;Can produce results in a variety of formats: plain text, SQL, JSON, XML, YAML, comma separated values.&lt;/li&gt; &#xA; &lt;li&gt;Can count code within compressed archives (tar balls, Zip files, Java .ear files).&lt;/li&gt; &#xA; &lt;li&gt;Has numerous troubleshooting options.&lt;/li&gt; &#xA; &lt;li&gt;Handles file and directory names with spaces and other unusual characters.&lt;/li&gt; &#xA; &lt;li&gt;Has no dependencies outside the standard Perl distribution.&lt;/li&gt; &#xA; &lt;li&gt;Runs on Linux, FreeBSD, NetBSD, OpenBSD, macOS, AIX, HP-UX, Solaris, IRIX, and z/OS systems that have Perl 5.6 or higher. The source version runs on Windows with either ActiveState Perl, Strawberry Perl, Cygwin, or MobaXTerm+Perl plugin. Alternatively on Windows one can run the Windows binary which has no dependencies. &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a name=&#34;Other_Counters&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Other Counters ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;If cloc does not suit your needs here are other freely available counters to consider:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cgag/loc/&#34;&gt;loc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JoaoDanielRufino/gcloc&#34;&gt;gcloc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hhatto/gocloc/&#34;&gt;gocloc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/blackducksoftware/ohcount/&#34;&gt;Ohcount&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/boyter/scc/&#34;&gt;scc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.google.com/archive/p/sclc/&#34;&gt;sclc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.dwheeler.com/sloccount/&#34;&gt;SLOCCount&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.sonarsource.org/&#34;&gt;Sonar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Aaronepower/tokei/&#34;&gt;tokei&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://csse.usc.edu/ucc_new/wordpress/&#34;&gt;Unified Code Count&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Other references:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;QSM&#39;s &lt;a href=&#34;http://www.qsm.com/CodeCounters.html&#34;&gt;directory&lt;/a&gt; of code counting tools.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;http://en.wikipedia.org/wiki/Source_lines_of_code&#34;&gt;Wikipedia entry&lt;/a&gt; for source code line counts. &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;a name=&#34;regexp_common&#34;&gt;Regexp::Common, Digest::MD5, Win32::Autoglob, Algorithm::Diff&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Although cloc does not need Perl modules outside those found in the standard distribution, cloc does rely on a few external modules. Code from three of these external modules--Regexp::Common, Win32::Autoglob, and Algorithm::Diff--is embedded within cloc. A fourth module, Digest::MD5, is used only if it is available. If cloc finds Regexp::Common or Algorithm::Diff installed locally it will use those installation. If it doesn&#39;t, cloc will install the parts of Regexp::Common and/or Algorithm:Diff it needs to temporary directories that are created at the start of a cloc run then removed when the run is complete. The necessary code from Regexp::Common v2.120 and Algorithm::Diff v1.1902 are embedded within the cloc source code (see subroutines &lt;code&gt;Install_Regexp_Common()&lt;/code&gt; and &lt;code&gt;Install_Algorithm_Diff()&lt;/code&gt; ). Only three lines are needed from Win32::Autoglob and these are included directly in cloc.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, cloc will use Digest::MD5 to validate uniqueness among equally-sized input files if Digest::MD5 is installed locally.&lt;/p&gt; &#xA;&lt;p&gt;A parallel processing option, &lt;tt&gt;--processes=&lt;i&gt;N&lt;/i&gt;&lt;/tt&gt;, was introduced with cloc version 1.76 to enable faster runs on multi-core machines. However, to use it, one must have the module Parallel::ForkManager installed. This module does not work reliably on Windows so parallel processing will only work on Unix-like operating systems.&lt;/p&gt; &#xA;&lt;p&gt;The Windows binary is built on a computer that has both Regexp::Common and Digest::MD5 installed locally. &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;building_exe&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Building a Windows Executable ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;The Windows downloads &lt;tt&gt;cloc-1.92.exe&lt;/tt&gt;, &lt;tt&gt;cloc-1.90.exe&lt;/tt&gt; and &lt;tt&gt;cloc-1.88.exe&lt;/tt&gt; were built on a 64 bit Windows 10 computer using &lt;a href=&#34;http://strawberryperl.com/&#34;&gt;Strawberry Perl&lt;/a&gt; 5.30.2 and &lt;a href=&#34;http://search.cpan.org/~rschupp/PAR-Packer-1.050/lib/pp.pm&#34;&gt;PAR::Packer&lt;/a&gt; to build the &lt;code&gt;.exe&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Release 1.86 was built on a 64 bit Windows 10 virtual machine downloaded from &lt;a href=&#34;https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/&#34;&gt;https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/&lt;/a&gt;; releases 1.74 through 1.84 were was built on a 32 bit Windows 7 virtual machine using Strawberry Perl 5.26.1.1, while 1.70 and 1.72 were built with Strawberry Perl 5.24.0.1 on an Amazon Web Services t2.micro instance running Microsoft Windows Server 2008 (32 bit for 1.70 and 1.72; 64 bit for 1.74). Release 1.66 was built on a 32 bit Windows 7 VirtualBox image. Windows executables of cloc versions 1.60 and earlier were built with &lt;a href=&#34;http://www.indigostar.com/perl2exe/&#34;&gt;perl2exe&lt;/a&gt; on a 32 bit Windows XP computer. A small modification was made to the cloc source code before passing it to perl2exe; lines 87 and 88 were uncommented:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;&lt;font color=&#34;gray&#34;&gt;85&lt;/font&gt;  # Uncomment next two lines when building Windows executable with perl2exe&#xA;&lt;font color=&#34;gray&#34;&gt;86&lt;/font&gt;  # or if running on a system that already has Regexp::Common.&#xA;&lt;font color=&#34;gray&#34;&gt;87&lt;/font&gt;  &lt;font color=&#34;red&#34;&gt;#use Regexp::Common;&lt;/font&gt;&#xA;&lt;font color=&#34;gray&#34;&gt;88&lt;/font&gt;  &lt;font color=&#34;red&#34;&gt;#$HAVE_Rexexp_Common = 1;&lt;/font&gt;&#xA;&lt;/pre&gt; &#xA;&lt;h4&gt;Is the Windows executable safe to run? Does it have malware?&lt;/h4&gt; &#xA;&lt;p&gt;Ideally, no one would need the Windows executable because they have a Perl interpreter installed on their machines and can run the cloc source file. On centrally-managed corporate Windows machines, however, this this may be difficult or impossible.&lt;/p&gt; &#xA;&lt;p&gt;The Windows executable distributed with cloc is provided as a best-effort of a virus and malware-free &lt;code&gt;.exe&lt;/code&gt;. You are encouraged to run your own virus scanners against the executable and also check sites such &lt;a href=&#34;https://www.virustotal.com/&#34;&gt;https://www.virustotal.com/&lt;/a&gt; . The entries for recent versions are:&lt;/p&gt; &#xA;&lt;p&gt;cloc-1.92.exe: &lt;a href=&#34;https://www.virustotal.com/gui/file/2668fcf8609c431e8934fe9e1866bc620c58d198c4eb262f1d3ef31ef4a690f7&#34;&gt;https://www.virustotal.com/gui/file/2668fcf8609c431e8934fe9e1866bc620c58d198c4eb262f1d3ef31ef4a690f7&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc-1.90.exe: &lt;a href=&#34;https://www.virustotal.com/gui/file/d655caae55486f9bac39f7e3c7b7553bcfcfe2b88914c79bfc328055f22b8a37/detection&#34;&gt;https://www.virustotal.com/gui/file/d655caae55486f9bac39f7e3c7b7553bcfcfe2b88914c79bfc328055f22b8a37/detection&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc-1.88.exe: &lt;a href=&#34;https://www.virustotal.com/gui/file/97d5d2631d1cccdbfd99267ab8a4cf5968816bbe52c0f9324e72e768857f642d/detection&#34;&gt;https://www.virustotal.com/gui/file/97d5d2631d1cccdbfd99267ab8a4cf5968816bbe52c0f9324e72e768857f642d/detection&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc-1.86.exe: &lt;a href=&#34;https://www.virustotal.com/gui/file/1b2e189df1834411b34534db446330d1c379b4bc008af3042ee9ade818c6a1c8/detection&#34;&gt;https://www.virustotal.com/gui/file/1b2e189df1834411b34534db446330d1c379b4bc008af3042ee9ade818c6a1c8/detection&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc-1.84.exe: &lt;a href=&#34;https://www.virustotal.com/gui/file/e73d490c1e4ae2f50ee174005614029b4fa2610dcb76988714839d7be68479af/detection&#34;&gt;https://www.virustotal.com/gui/file/e73d490c1e4ae2f50ee174005614029b4fa2610dcb76988714839d7be68479af/detection&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc-1.82.exe: &lt;a href=&#34;https://www.virustotal.com/#/file/2e5fb443fdefd776d7b6b136a25e5ee2048991e735042897dbd0bf92efb16563/detection&#34;&gt;https://www.virustotal.com/#/file/2e5fb443fdefd776d7b6b136a25e5ee2048991e735042897dbd0bf92efb16563/detection&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc-1.80.exe: &lt;a href=&#34;https://www.virustotal.com/#/file/9e547b01c946aa818ffad43b9ebaf05d3da08ed6ca876ef2b6847be3bf1cf8be/detection&#34;&gt;https://www.virustotal.com/#/file/9e547b01c946aa818ffad43b9ebaf05d3da08ed6ca876ef2b6847be3bf1cf8be/detection&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc-1.78.exe: &lt;a href=&#34;https://www.virustotal.com/#/file/256ade3df82fa92febf2553853ed1106d96c604794606e86efd00d55664dd44f/detection&#34;&gt;https://www.virustotal.com/#/file/256ade3df82fa92febf2553853ed1106d96c604794606e86efd00d55664dd44f/detection&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc-1.76.exe: &lt;a href=&#34;https://www.virustotal.com/#/url/c1b9b9fe909f91429f95d41e9a9928ab7c58b21351b3acd4249def2a61acd39d/detection&#34;&gt;https://www.virustotal.com/#/url/c1b9b9fe909f91429f95d41e9a9928ab7c58b21351b3acd4249def2a61acd39d/detection&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc-1.74_x86.exe: &lt;a href=&#34;https://www.virustotal.com/#/file/b73dece71f6d3199d90d55db53a588e1393c8dbf84231a7e1be2ce3c5a0ec75b/detection&#34;&gt;https://www.virustotal.com/#/file/b73dece71f6d3199d90d55db53a588e1393c8dbf84231a7e1be2ce3c5a0ec75b/detection&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc 1.72 exe: &lt;a href=&#34;https://www.virustotal.com/en/url/8fd2af5cd972f648d7a2d7917bc202492012484c3a6f0b48c8fd60a8d395c98c/analysis/&#34;&gt;https://www.virustotal.com/en/url/8fd2af5cd972f648d7a2d7917bc202492012484c3a6f0b48c8fd60a8d395c98c/analysis/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc 1.70 exe: &lt;a href=&#34;https://www.virustotal.com/en/url/63edef209099a93aa0be1a220dc7c4c7ed045064d801e6d5daa84ee624fc0b4a/analysis/&#34;&gt;https://www.virustotal.com/en/url/63edef209099a93aa0be1a220dc7c4c7ed045064d801e6d5daa84ee624fc0b4a/analysis/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc 1.68 exe: &lt;a href=&#34;https://www.virustotal.com/en/file/c484fc58615fc3b0d5569b9063ec1532980281c3155e4a19099b11ef1c24443b/analysis/&#34;&gt;https://www.virustotal.com/en/file/c484fc58615fc3b0d5569b9063ec1532980281c3155e4a19099b11ef1c24443b/analysis/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc 1.66 exe: &lt;a href=&#34;https://www.virustotal.com/en/file/54d6662e59b04be793dd10fa5e5edf7747cf0c0cc32f71eb67a3cf8e7a171d81/analysis/1453601367/&#34;&gt;https://www.virustotal.com/en/file/54d6662e59b04be793dd10fa5e5edf7747cf0c0cc32f71eb67a3cf8e7a171d81/analysis/1453601367/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Why is the Windows executable so large?&lt;/h4&gt; &#xA;&lt;p&gt;Windows executables of cloc versions 1.60 and earlier, created with perl2exe as noted above, are about 1.6 MB, while versions 1.62 and 1.54, created with &lt;code&gt;PAR::Packer&lt;/code&gt;, are 11 MB. Version 1.66, built with a newer version of &lt;code&gt;PAR::Packer&lt;/code&gt;, is about 5.5 MB. Why are the &lt;code&gt;PAR::Packer&lt;/code&gt;, executables so much larger than those built with perl2exe? My theory is that perl2exe uses smarter tree pruning logic than &lt;code&gt;PAR::Packer&lt;/code&gt;, but that&#39;s pure speculation.&lt;/p&gt; &#xA;&lt;h4&gt;Create your own executable&lt;/h4&gt; &#xA;&lt;p&gt;The most robust option for creating a Windows executable of cloc is to use &lt;a href=&#34;http://www.activestate.com/perl-dev-kit&#34;&gt;ActiveState&#39;s Perl Development Kit&lt;/a&gt;. It includes a utility, &lt;code&gt;perlapp&lt;/code&gt;, which can build stand-alone Windows, Mac, and Linux binaries of Perl source code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.indigostar.com/perl2exe/&#34;&gt;perl2exe&lt;/a&gt; will also do the trick. If you do have &lt;code&gt;perl2exe&lt;/code&gt;, modify lines 84-87 in the cloc source code for a minor code modification that is necessary to make a cloc Windows executable.&lt;/p&gt; &#xA;&lt;p&gt;Otherwise, to build a Windows executable with &lt;code&gt;pp&lt;/code&gt; from &lt;code&gt;PAR::Packer&lt;/code&gt;, first install a Windows-based Perl distribution (for example Strawberry Perl or ActivePerl) following their instructions. Next, open a command prompt, aka a DOS window and install the PAR::Packer module. Finally, invoke the newly installed &lt;code&gt;pp&lt;/code&gt; command with the cloc source code to create an &lt;code&gt;.exe&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;C:&amp;gt; cpan -i Digest::MD5&#xA;C:&amp;gt; cpan -i Regexp::Common&#xA;C:&amp;gt; cpan -i Algorithm::Diff&#xA;C:&amp;gt; cpan -i PAR::Packer&#xA;C:&amp;gt; pp -M Digest::MD5 -c -x -o cloc-1.92.exe cloc-1.92.pl&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;A variation on the instructions above is if you installed the portable version of Strawberry Perl, you will need to run &lt;code&gt;portableshell.bat&lt;/code&gt; first to properly set up your environment.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;Basic_Use&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Basic Use ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;cloc is a command line program that takes file, directory, and/or archive names as inputs. Here&#39;s an example of running cloc against the Perl v5.22.0 source distribution:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; cloc perl-5.22.0.tar.gz&#xA;    5605 text files.&#xA;    5386 unique files.&#xA;    2176 files ignored.&#xA;&#xA;https://github.com/AlDanial/cloc v 1.65  T=25.49 s (134.7 files/s, 51980.3 lines/s)&#xA;-----------------------------------------------------------------------------------&#xA;Language                         files          blank        comment           code&#xA;-----------------------------------------------------------------------------------&#xA;Perl                              2892         136396         184362         536445&#xA;C                                  130          24676          33684         155648&#xA;C/C++ Header                       148           9766          16569         147858&#xA;Bourne Shell                       112           4044           6796          42668&#xA;Pascal                               8            458           1603           8592&#xA;XML                                 33            142              0           2410&#xA;YAML                                49             20             15           2078&#xA;C++                                 10            313            277           2033&#xA;make                                 4            426            488           1986&#xA;Prolog                              12            438              2           1146&#xA;JSON                                14              1              0           1037&#xA;yacc                                 1             85             76            998&#xA;Windows Message File                 1            102             11            489&#xA;DOS Batch                           14             92             41            389&#xA;Windows Resource File                3             10              0             85&#xA;D                                    1              5              7              8&#xA;Lisp                                 2              0              3              4&#xA;-----------------------------------------------------------------------------------&#xA;SUM:                              3434         176974         243934         903874&#xA;-----------------------------------------------------------------------------------&#xA;&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;To run cloc on Windows computers, open up a command (aka DOS) window and invoke cloc.exe from the command line there. Alternatively, try ClocViewer, the GUI wrapper around cloc found at &lt;a href=&#34;https://github.com/Roemer/ClocViewer&#34;&gt;https://github.com/Roemer/ClocViewer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://github.com/jmensch1/codeflower&#34;&gt;https://github.com/jmensch1/codeflower&lt;/a&gt; for a graphical rendering of cloc results. &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;Options&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Options ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; cloc --help&#xA;&#xA;Usage: cloc [options] &amp;lt;file(s)/dir(s)/git hash(es)&amp;gt; | &amp;lt;set 1&amp;gt; &amp;lt;set 2&amp;gt; | &amp;lt;report files&amp;gt;&#xA;&#xA; Count, or compute differences of, physical lines of source code in the&#xA; given files (may be archives such as compressed tarballs or zip files,&#xA; or git commit hashes or branch names) and/or recursively below the&#xA; given directories.&#xA;&#xA; Input Options&#xA;   --extract-with=&amp;lt;cmd&amp;gt;      This option is only needed if cloc is unable&#xA;                             to figure out how to extract the contents of&#xA;                             the input file(s) by itself.&#xA;                             Use &amp;lt;cmd&amp;gt; to extract binary archive files (e.g.:&#xA;                             .tar.gz, .zip, .Z).  Use the literal &#39;&amp;gt;FILE&amp;lt;&#39; as&#xA;                             a stand-in for the actual file(s) to be&#xA;                             extracted.  For example, to count lines of code&#xA;                             in the input files&#xA;                                gcc-4.2.tar.gz  perl-5.8.8.tar.gz&#xA;                             on Unix use&#xA;                               --extract-with=&#39;gzip -dc &amp;gt;FILE&amp;lt; | tar xf -&#39;&#xA;                             or, if you have GNU tar,&#xA;                               --extract-with=&#39;tar zxf &amp;gt;FILE&amp;lt;&#39;&#xA;                             and on Windows use, for example:&#xA;                               --extract-with=&#34;\&#34;c:\Program Files\WinZip\WinZip32.exe\&#34; -e -o &amp;gt;FILE&amp;lt; .&#34;&#xA;                             (if WinZip is installed there).&#xA;   --list-file=&amp;lt;file&amp;gt;        Take the list of file and/or directory names to&#xA;                             process from &amp;lt;file&amp;gt;, which has one file/directory&#xA;                             name per line.  Only exact matches are counted;&#xA;                             relative path names will be resolved starting from&#xA;                             the directory where cloc is invoked.  Set &amp;lt;file&amp;gt;&#xA;                             to - to read file names from a STDIN pipe.&#xA;                             See also --exclude-list-file.&#xA;   --diff-list-file=&amp;lt;file&amp;gt;   Take the pairs of file names to be diff&#39;ed from&#xA;                             &amp;lt;file&amp;gt;, whose format matches the output of&#xA;                             --diff-alignment.  (Run with that option to&#xA;                             see a sample.)  The language identifier at the&#xA;                             end of each line is ignored.  This enables --diff&#xA;                             mode and bypasses file pair alignment logic.&#xA;   --vcs=&amp;lt;VCS&amp;gt;               Invoke a system call to &amp;lt;VCS&amp;gt; to obtain a list of&#xA;                             files to work on.  If &amp;lt;VCS&amp;gt; is &#39;git&#39;, then will&#xA;                             invoke &#39;git ls-files&#39; to get a file list and&#xA;                             &#39;git submodule status&#39; to get a list of submodules&#xA;                             whose contents will be ignored.  See also --git&#xA;                             which accepts git commit hashes and branch names.&#xA;                             If &amp;lt;VCS&amp;gt; is &#39;svn&#39; then will invoke &#39;svn list -R&#39;.&#xA;                             The primary benefit is that cloc will then skip&#xA;                             files explicitly excluded by the versioning tool&#xA;                             in question, ie, those in .gitignore or have the&#xA;                             svn:ignore property.&#xA;                             Alternatively &amp;lt;VCS&amp;gt; may be any system command&#xA;                             that generates a list of files.&#xA;                             Note:  cloc must be in a directory which can read&#xA;                             the files as they are returned by &amp;lt;VCS&amp;gt;.  cloc will&#xA;                             not download files from remote repositories.&#xA;                             &#39;svn list -R&#39; may refer to a remote repository&#xA;                             to obtain file names (and therefore may require&#xA;                             authentication to the remote repository), but&#xA;                             the files themselves must be local.&#xA;                             Setting &amp;lt;VCS&amp;gt; to &#39;auto&#39; selects between &#39;git&#39;&#xA;                             and &#39;svn&#39; (or neither) depending on the presence&#xA;                             of a .git or .svn subdirectory below the directory&#xA;                             where cloc is invoked.&#xA;   --unicode                 Check binary files to see if they contain Unicode&#xA;                             expanded ASCII text.  This causes performance to&#xA;                             drop noticeably.&#xA;&#xA; Processing Options&#xA;   --autoconf                Count .in files (as processed by GNU autoconf) of&#xA;                             recognized languages.  See also --no-autogen.&#xA;   --by-file                 Report results for every source file encountered.&#xA;   --by-file-by-lang         Report results for every source file encountered&#xA;                             in addition to reporting by language.&#xA;   --config &amp;lt;file&amp;gt;           Read command line switches from &amp;lt;file&amp;gt; instead of&#xA;                             the default location of /home/al/.config/cloc/options.txt.&#xA;                             The file should contain one switch, along with&#xA;                             arguments (if any), per line.  Blank lines and lines&#xA;                             beginning with &#39;#&#39; are skipped.  Options given on&#xA;                             the command line take priority over entries read from&#xA;                             the file.&#xA;   --count-and-diff &amp;lt;set1&amp;gt; &amp;lt;set2&amp;gt;&#xA;                             First perform direct code counts of source file(s)&#xA;                             of &amp;lt;set1&amp;gt; and &amp;lt;set2&amp;gt; separately, then perform a diff&#xA;                             of these.  Inputs may be pairs of files, directories,&#xA;                             or archives.  If --out or --report-file is given,&#xA;                             three output files will be created, one for each&#xA;                             of the two counts and one for the diff.  See also&#xA;                             --diff, --diff-alignment, --diff-timeout,&#xA;                             --ignore-case, --ignore-whitespace.&#xA;   --diff &amp;lt;set1&amp;gt; &amp;lt;set2&amp;gt;      Compute differences in code and comments between&#xA;                             source file(s) of &amp;lt;set1&amp;gt; and &amp;lt;set2&amp;gt;.  The inputs&#xA;                             may be any mix of files, directories, archives,&#xA;                             or git commit hashes.  Use --diff-alignment to&#xA;                             generate a list showing which file pairs where&#xA;                             compared.  When comparing git branches, only files&#xA;                             which have changed in either commit are compared.&#xA;                             See also --git, --count-and-diff, --diff-alignment,&#xA;                             --diff-list-file, --diff-timeout, --ignore-case,&#xA;                             --ignore-whitespace.&#xA;   --diff-timeout &amp;lt;N&amp;gt;        Ignore files which take more than &amp;lt;N&amp;gt; seconds&#xA;                             to process.  Default is 10 seconds.  Setting &amp;lt;N&amp;gt;&#xA;                             to 0 allows unlimited time.  (Large files with many&#xA;                             repeated lines can cause Algorithm::Diff::sdiff()&#xA;                             to take hours.) See also --timeout.&#xA;   --docstring-as-code       cloc considers docstrings to be comments, but this is&#xA;                             not always correct as docstrings represent regular&#xA;                             strings when they appear on the right hand side of an&#xA;                             assignment or as function arguments.  This switch&#xA;                             forces docstrings to be counted as code.&#xA;   --follow-links            [Unix only] Follow symbolic links to directories&#xA;                             (sym links to files are always followed).&#xA;                             See also --stat.&#xA;   --force-lang=&amp;lt;lang&amp;gt;[,&amp;lt;ext&amp;gt;]&#xA;                             Process all files that have a &amp;lt;ext&amp;gt; extension&#xA;                             with the counter for language &amp;lt;lang&amp;gt;.  For&#xA;                             example, to count all .f files with the&#xA;                             Fortran 90 counter (which expects files to&#xA;                             end with .f90) instead of the default Fortran 77&#xA;                             counter, use&#xA;                               --force-lang=&#34;Fortran 90&#34;,f&#xA;                             If &amp;lt;ext&amp;gt; is omitted, every file will be counted&#xA;                             with the &amp;lt;lang&amp;gt; counter.  This option can be&#xA;                             specified multiple times (but that is only&#xA;                             useful when &amp;lt;ext&amp;gt; is given each time).&#xA;                             See also --script-lang, --lang-no-ext.&#xA;   --force-lang-def=&amp;lt;file&amp;gt;   Load language processing filters from &amp;lt;file&amp;gt;,&#xA;                             then use these filters instead of the built-in&#xA;                             filters.  Note:  languages which map to the same&#xA;                             file extension (for example:&#xA;                             MATLAB/Mathematica/Objective-C/MUMPS/Mercury;&#xA;                             Pascal/PHP; Lisp/OpenCL; Lisp/Julia; Perl/Prolog)&#xA;                             will be ignored as these require additional&#xA;                             processing that is not expressed in language&#xA;                             definition files.  Use --read-lang-def to define&#xA;                             new language filters without replacing built-in&#xA;                             filters (see also --write-lang-def,&#xA;                             --write-lang-def-incl-dup).&#xA;   --git                     Forces the inputs to be interpreted as git targets&#xA;                             (commit hashes, branch names, et cetera) if these&#xA;                             are not first identified as file or directory&#xA;                             names.  This option overrides the --vcs=git logic&#xA;                             if this is given; in other words, --git gets its&#xA;                             list of files to work on directly from git using&#xA;                             the hash or branch name rather than from&#xA;                             &#39;git ls-files&#39;.  This option can be used with&#xA;                             --diff to perform line count diffs between git&#xA;                             commits, or between a git commit and a file,&#xA;                             directory, or archive.  Use -v/--verbose to see&#xA;                             the git system commands cloc issues.&#xA;   --git-diff-rel            Same as --git --diff, or just --diff if the inputs&#xA;                             are recognized as git targets.  Only files which&#xA;                             have changed in either commit are compared.&#xA;   --git-diff-all            Git diff strategy #2:  compare all files in the&#xA;                             repository between the two commits.&#xA;   --ignore-whitespace       Ignore horizontal white space when comparing files&#xA;                             with --diff.  See also --ignore-case.&#xA;   --ignore-case             Ignore changes in case within file contents;&#xA;                             consider upper- and lowercase letters equivalent&#xA;                             when comparing files with --diff.  See also&#xA;                             --ignore-whitespace.&#xA;   --ignore-case-ext         Ignore case of file name extensions.  This will&#xA;                             cause problems counting some languages&#xA;                             (specifically, .c and .C are associated with C and&#xA;                             C++; this switch would count .C files as C rather&#xA;                             than C++ on *nix operating systems).  File name&#xA;                             case insensitivity is always true on Windows.&#xA;   --lang-no-ext=&amp;lt;lang&amp;gt;      Count files without extensions using the &amp;lt;lang&amp;gt;&#xA;                             counter.  This option overrides internal logic&#xA;                             for files without extensions (where such files&#xA;                             are checked against known scripting languages&#xA;                             by examining the first line for #!).  See also&#xA;                             --force-lang, --script-lang.&#xA;   --max-file-size=&amp;lt;MB&amp;gt;      Skip files larger than &amp;lt;MB&amp;gt; megabytes when&#xA;                             traversing directories.  By default, &amp;lt;MB&amp;gt;=100.&#xA;                             cloc&#39;s memory requirement is roughly twenty times&#xA;                             larger than the largest file so running with&#xA;                             files larger than 100 MB on a computer with less&#xA;                             than 2 GB of memory will cause problems.&#xA;                             Note:  this check does not apply to files&#xA;                             explicitly passed as command line arguments.&#xA;   --no-autogen[=list]       Ignore files generated by code-production systems&#xA;                             such as GNU autoconf.  To see a list of these files&#xA;                             (then exit), run with --no-autogen list&#xA;                             See also --autoconf.&#xA;   --original-dir            [Only effective in combination with&#xA;                             --strip-comments]  Write the stripped files&#xA;                             to the same directory as the original files.&#xA;   --read-binary-files       Process binary files in addition to text files.&#xA;                             This is usually a bad idea and should only be&#xA;                             attempted with text files that have embedded&#xA;                             binary data.&#xA;   --read-lang-def=&amp;lt;file&amp;gt;    Load new language processing filters from &amp;lt;file&amp;gt;&#xA;                             and merge them with those already known to cloc.&#xA;                             If &amp;lt;file&amp;gt; defines a language cloc already knows&#xA;                             about, cloc&#39;s definition will take precedence.&#xA;                             Use --force-lang-def to over-ride cloc&#39;s&#xA;                             definitions (see also --write-lang-def,&#xA;                             --write-lang-def-incl-dup).&#xA;   --script-lang=&amp;lt;lang&amp;gt;,&amp;lt;s&amp;gt;  Process all files that invoke &amp;lt;s&amp;gt; as a #!&#xA;                             scripting language with the counter for language&#xA;                             &amp;lt;lang&amp;gt;.  For example, files that begin with&#xA;                                #!/usr/local/bin/perl5.8.8&#xA;                             will be counted with the Perl counter by using&#xA;                                --script-lang=Perl,perl5.8.8&#xA;                             The language name is case insensitive but the&#xA;                             name of the script language executable, &amp;lt;s&amp;gt;,&#xA;                             must have the right case.  This option can be&#xA;                             specified multiple times.  See also --force-lang,&#xA;                             --lang-no-ext.&#xA;   --sdir=&amp;lt;dir&amp;gt;              Use &amp;lt;dir&amp;gt; as the scratch directory instead of&#xA;                             letting File::Temp chose the location.  Files&#xA;                             written to this location are not removed at&#xA;                             the end of the run (as they are with File::Temp).&#xA;   --skip-uniqueness         Skip the file uniqueness check.  This will give&#xA;                             a performance boost at the expense of counting&#xA;                             files with identical contents multiple times&#xA;                             (if such duplicates exist).&#xA;   --stat                    Some file systems (AFS, CD-ROM, FAT, HPFS, SMB)&#xA;                             do not have directory &#39;nlink&#39; counts that match&#xA;                             the number of its subdirectories.  Consequently&#xA;                             cloc may undercount or completely skip the&#xA;                             contents of such file systems.  This switch forces&#xA;                             File::Find to stat directories to obtain the&#xA;                             correct count.  File search speed will decrease.&#xA;                             See also --follow-links.&#xA;   --stdin-name=&amp;lt;file&amp;gt;       Give a file name to use to determine the language&#xA;                             for standard input.  (Use - as the input name to&#xA;                             receive source code via STDIN.)&#xA;   --strip-comments=&amp;lt;ext&amp;gt;    For each file processed, write to the current&#xA;                             directory a version of the file which has blank&#xA;                             and commented lines removed (in-line comments&#xA;                             persist).  The name of each stripped file is the&#xA;                             original file name with .&amp;lt;ext&amp;gt; appended to it.&#xA;                             It is written to the current directory unless&#xA;                             --original-dir is on.&#xA;   --strip-str-comments      Replace comment markers embedded in strings with&#xA;                             &#39;xx&#39;.  This attempts to work around a limitation&#xA;                             in Regexp::Common::Comment where comment markers&#xA;                             embedded in strings are seen as actual comment&#xA;                             markers and not strings, often resulting in a&#xA;                             &#39;Complex regular subexpression recursion limit&#39;&#xA;                             warning and incorrect counts.  There are two&#xA;                             disadvantages to using this switch:  1/code count&#xA;                             performance drops, and 2/code generated with&#xA;                             --strip-comments will contain different strings&#xA;                             where ever embedded comments are found.&#xA;   --sum-reports             Input arguments are report files previously&#xA;                             created with the --report-file option in plain&#xA;                             format (eg. not JSON, YAML, XML, or SQL).&#xA;                             Makes a cumulative set of results containing the&#xA;                             sum of data from the individual report files.&#xA;   --timeout &amp;lt;N&amp;gt;             Ignore files which take more than &amp;lt;N&amp;gt; seconds&#xA;                             to process at any of the language&#39;s filter stages.&#xA;                             The default maximum number of seconds spent on a&#xA;                             filter stage is the number of lines in the file&#xA;                             divided by one thousand.  Setting &amp;lt;N&amp;gt; to 0 allows&#xA;                             unlimited time.  See also --diff-timeout.&#xA;   --processes=NUM           [Available only on systems with a recent version&#xA;                             of the Parallel::ForkManager module.  Not&#xA;                             available on Windows.] Sets the maximum number of&#xA;                             cores that cloc uses.  The default value of 0&#xA;                             disables multiprocessing.&#xA;   --unix                    Override the operating system autodetection&#xA;                             logic and run in UNIX mode.  See also&#xA;                             --windows, --show-os.&#xA;   --use-sloccount           If SLOCCount is installed, use its compiled&#xA;                             executables c_count, java_count, pascal_count,&#xA;                             php_count, and xml_count instead of cloc&#39;s&#xA;                             counters.  SLOCCount&#39;s compiled counters are&#xA;                             substantially faster than cloc&#39;s and may give&#xA;                             a performance improvement when counting projects&#xA;                             with large files.  However, these cloc-specific&#xA;                             features will not be available: --diff,&#xA;                             --count-and-diff, --strip-comments, --unicode.&#xA;   --windows                 Override the operating system autodetection&#xA;                             logic and run in Microsoft Windows mode.&#xA;                             See also --unix, --show-os.&#xA;&#xA; Filter Options&#xA;   --exclude-content=&amp;lt;regex&amp;gt; Exclude files containing text that matches the given&#xA;                             regular expression.&#xA;   --exclude-dir=&amp;lt;D1&amp;gt;[,D2,]  Exclude the given comma separated directories&#xA;                             D1, D2, D3, et cetera, from being scanned.  For&#xA;                             example  --exclude-dir=.cache,test  will skip&#xA;                             all files and subdirectories that have /.cache/&#xA;                             or /test/ as their parent directory.&#xA;                             Directories named .bzr, .cvs, .hg, .git, .svn,&#xA;                             and .snapshot are always excluded.&#xA;                             This option only works with individual directory&#xA;                             names so including file path separators is not&#xA;                             allowed.  Use --fullpath and --not-match-d=&amp;lt;regex&amp;gt;&#xA;                             to supply a regex matching multiple subdirectories.&#xA;   --exclude-ext=&amp;lt;ext1&amp;gt;[,&amp;lt;ext2&amp;gt;[...]]&#xA;                             Do not count files having the given file name&#xA;                             extensions.&#xA;   --exclude-lang=&amp;lt;L1&amp;gt;[,L2[...]]&#xA;                             Exclude the given comma separated languages&#xA;                             L1, L2, L3, et cetera, from being counted.&#xA;   --exclude-list-file=&amp;lt;file&amp;gt;  Ignore files and/or directories whose names&#xA;                             appear in &amp;lt;file&amp;gt;.  &amp;lt;file&amp;gt; should have one file&#xA;                             name per line.  Only exact matches are ignored;&#xA;                             relative path names will be resolved starting from&#xA;                             the directory where cloc is invoked.&#xA;                             See also --list-file.&#xA;   --fullpath                Modifies the behavior of --match-f, --not-match-f,&#xA;                             and --not-match-d to include the file&#39;s path&#xA;                             in the regex, not just the file&#39;s basename.&#xA;                             (This does not expand each file to include its&#xA;                             absolute path, instead it uses as much of&#xA;                             the path as is passed in to cloc.)&#xA;                             Note:  --match-d always looks at the full&#xA;                             path and therefore is unaffected by --fullpath.&#xA;   --include-ext=&amp;lt;ext1&amp;gt;[,ext2[...]]&#xA;                             Count only languages having the given comma&#xA;                             separated file extensions.  Use --show-ext to&#xA;                             see the recognized extensions.&#xA;   --include-lang=&amp;lt;L1&amp;gt;[,L2[...]]&#xA;                             Count only the given comma separated languages&#xA;                             L1, L2, L3, et cetera.  Use --show-lang to see&#xA;                             the list of recognized languages.&#xA;   --match-d=&amp;lt;regex&amp;gt;         Only count files in directories matching the Perl&#xA;                             regex.  For example&#xA;                               --match-d=&#39;/(src|include)/&#39;&#xA;                             only counts files in directories containing&#xA;                             /src/ or /include/.  Unlike --not-match-d,&#xA;                             --match-f, and --not-match-f, --match-d always&#xA;                             compares the fully qualified path against the&#xA;                             regex.&#xA;   --not-match-d=&amp;lt;regex&amp;gt;     Count all files except those in directories&#xA;                             matching the Perl regex.  Only the trailing&#xA;                             directory name is compared, for example, when&#xA;                             counting in /usr/local/lib, only &#39;lib&#39; is&#xA;                             compared to the regex.&#xA;                             Add --fullpath to compare parent directories to&#xA;                             the regex.&#xA;                             Do not include file path separators at the&#xA;                             beginning or end of the regex.&#xA;   --match-f=&amp;lt;regex&amp;gt;         Only count files whose basenames match the Perl&#xA;                             regex.  For example&#xA;                               --match-f=&#39;^[Ww]idget&#39;&#xA;                             only counts files that start with Widget or widget.&#xA;                             Add --fullpath to include parent directories&#xA;                             in the regex instead of just the basename.&#xA;   --not-match-f=&amp;lt;regex&amp;gt;     Count all files except those whose basenames&#xA;                             match the Perl regex.  Add --fullpath to include&#xA;                             parent directories in the regex instead of just&#xA;                             the basename.&#xA;   --skip-archive=&amp;lt;regex&amp;gt;    Ignore files that end with the given Perl regular&#xA;                             expression.  For example, if given&#xA;                               --skip-archive=&#39;(zip|tar(.(gz|Z|bz2|xz|7z))?)&#39;&#xA;                             the code will skip files that end with .zip,&#xA;                             .tar, .tar.gz, .tar.Z, .tar.bz2, .tar.xz, and&#xA;                             .tar.7z.&#xA;   --skip-win-hidden         On Windows, ignore hidden files.&#xA;&#xA; Debug Options&#xA;   --categorized=&amp;lt;file&amp;gt;      Save names of categorized files to &amp;lt;file&amp;gt;.&#xA;   --counted=&amp;lt;file&amp;gt;          Save names of processed source files to &amp;lt;file&amp;gt;.&#xA;   --diff-alignment=&amp;lt;file&amp;gt;   Write to &amp;lt;file&amp;gt; a list of files and file pairs&#xA;                             showing which files were added, removed, and/or&#xA;                             compared during a run with --diff.  This switch&#xA;                             forces the --diff mode on.&#xA;   --explain=&amp;lt;lang&amp;gt;          Print the filters used to remove comments for&#xA;                             language &amp;lt;lang&amp;gt; and exit.  In some cases the&#xA;                             filters refer to Perl subroutines rather than&#xA;                             regular expressions.  An examination of the&#xA;                             source code may be needed for further explanation.&#xA;   --help                    Print this usage information and exit.&#xA;   --found=&amp;lt;file&amp;gt;            Save names of every file found to &amp;lt;file&amp;gt;.&#xA;   --ignored=&amp;lt;file&amp;gt;          Save names of ignored files and the reason they&#xA;                             were ignored to &amp;lt;file&amp;gt;.&#xA;   --print-filter-stages     Print processed source code before and after&#xA;                             each filter is applied.&#xA;   --show-ext[=&amp;lt;ext&amp;gt;]        Print information about all known (or just the&#xA;                             given) file extensions and exit.&#xA;   --show-lang[=&amp;lt;lang&amp;gt;]      Print information about all known (or just the&#xA;                             given) languages and exit.&#xA;   --show-os                 Print the value of the operating system mode&#xA;                             and exit.  See also --unix, --windows.&#xA;   -v[=&amp;lt;n&amp;gt;]                  Verbose switch (optional numeric value).&#xA;   -verbose[=&amp;lt;n&amp;gt;]            Long form of -v.&#xA;   --version                 Print the version of this program and exit.&#xA;   --write-lang-def=&amp;lt;file&amp;gt;   Writes to &amp;lt;file&amp;gt; the language processing filters&#xA;                             then exits.  Useful as a first step to creating&#xA;                             custom language definitions. Note: languages which&#xA;                             map to the same file extension will be excluded.&#xA;                             (See also --force-lang-def, --read-lang-def).&#xA;   --write-lang-def-incl-dup=&amp;lt;file&amp;gt;&#xA;                             Same as --write-lang-def, but includes duplicated&#xA;                             extensions.  This generates a problematic language&#xA;                             definition file because cloc will refuse to use&#xA;                             it until duplicates are removed.&#xA;&#xA; Output Options&#xA;   --3                       Print third-generation language output.&#xA;                             (This option can cause report summation to fail&#xA;                             if some reports were produced with this option&#xA;                             while others were produced without it.)&#xA;   --by-percent  X           Instead of comment and blank line counts, show&#xA;                             these values as percentages based on the value&#xA;                             of X in the denominator:&#xA;                                X = &#39;c&#39;   -&amp;gt; # lines of code&#xA;                                X = &#39;cm&#39;  -&amp;gt; # lines of code + comments&#xA;                                X = &#39;cb&#39;  -&amp;gt; # lines of code + blanks&#xA;                                X = &#39;cmb&#39; -&amp;gt; # lines of code + comments + blanks&#xA;                             For example, if using method &#39;c&#39; and your code&#xA;                             has twice as many lines of comments as lines&#xA;                             of code, the value in the comment column will&#xA;                             be 200%.  The code column remains a line count.&#xA;   --csv                     Write the results as comma separated values.&#xA;   --csv-delimiter=&amp;lt;C&amp;gt;       Use the character &amp;lt;C&amp;gt; as the delimiter for comma&#xA;                             separated files instead of ,.  This switch forces --csv to be on.&#xA;   --file-encoding=&amp;lt;E&amp;gt;       Write output files using the &amp;lt;E&amp;gt; encoding instead of&#xA;                             the default ASCII (&amp;lt;E&amp;gt; = &#39;UTF-7&#39;).  Examples: &#39;UTF-16&#39;,&#xA;                             &#39;euc-kr&#39;, &#39;iso-8859-16&#39;.  Known encodings can be&#xA;                             printed with&#xA;                               perl -MEncode -e &#39;print join(&#34;\n&#34;, Encode-&amp;gt;encodings(&#34;:all&#34;)), &#34;\n&#34;&#39;&#xA;   --hide-rate               Do not show line and file processing rates in the&#xA;                             output header. This makes output deterministic.&#xA;   --json                    Write the results as JavaScript Object Notation&#xA;                             (JSON) formatted output.&#xA;   --md                      Write the results as Markdown-formatted text.&#xA;   --out=&amp;lt;file&amp;gt;              Synonym for --report-file=&amp;lt;file&amp;gt;.&#xA;   --progress-rate=&amp;lt;n&amp;gt;       Show progress update after every &amp;lt;n&amp;gt; files are&#xA;                             processed (default &amp;lt;n&amp;gt;=100).  Set &amp;lt;n&amp;gt; to 0 to&#xA;                             suppress progress output (useful when redirecting&#xA;                             output to STDOUT).&#xA;   --quiet                   Suppress all information messages except for&#xA;                             the final report.&#xA;   --report-file=&amp;lt;file&amp;gt;      Write the results to &amp;lt;file&amp;gt; instead of STDOUT.&#xA;   --sql=&amp;lt;file&amp;gt;              Write results as SQL create and insert statements&#xA;                             which can be read by a database program such as&#xA;                             SQLite.  If &amp;lt;file&amp;gt; is -, output is sent to STDOUT.&#xA;   --sql-append              Append SQL insert statements to the file specified&#xA;                             by --sql and do not generate table creation&#xA;                             statements.  Only valid with the --sql option.&#xA;   --sql-project=&amp;lt;name&amp;gt;      Use &amp;lt;name&amp;gt; as the project identifier for the&#xA;                             current run.  Only valid with the --sql option.&#xA;   --sql-style=&amp;lt;style&amp;gt;       Write SQL statements in the given style instead&#xA;                             of the default SQLite format.  Styles include&#xA;                             &#39;Oracle&#39; and &#39;Named_Columns&#39;.&#xA;   --sum-one                 For plain text reports, show the SUM: output line&#xA;                             even if only one input file is processed.&#xA;   --xml                     Write the results in XML.&#xA;   --xsl=&amp;lt;file&amp;gt;              Reference &amp;lt;file&amp;gt; as an XSL stylesheet within&#xA;                             the XML output.  If &amp;lt;file&amp;gt; is 1 (numeric one),&#xA;                             writes a default stylesheet, cloc.xsl (or&#xA;                             cloc-diff.xsl if --diff is also given).&#xA;                             This switch forces --xml on.&#xA;   --yaml                    Write the results in YAML.&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;Languages&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Recognized Languages ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; cloc --show-lang&#xA;&#xA;ABAP                       (abap)&#xA;ActionScript               (as)&#xA;Ada                        (ada, adb, ads, pad)&#xA;ADSO/IDSM                  (adso)&#xA;Agda                       (agda, lagda)&#xA;AMPLE                      (ample, dofile, startup)&#xA;Ant                        (build.xml, build.xml)&#xA;ANTLR Grammar              (g, g4)&#xA;Apex Class                 (cls)&#xA;Apex Trigger               (trigger)&#xA;APL                        (apl, apla, aplc, aplf, apli, apln, aplo, dyalog, dyapp, mipage)&#xA;Arduino Sketch             (ino, pde)&#xA;AsciiDoc                   (adoc, asciidoc)&#xA;ASP                        (asa, ashx, asp, axd)&#xA;ASP.NET                    (asax, ascx, asmx, aspx, master, sitemap, webinfo)&#xA;AspectJ                    (aj)&#xA;Assembly                   (a51, asm, nasm, S, s)&#xA;AutoHotkey                 (ahk, ahkl)&#xA;awk                        (auk, awk, gawk, mawk, nawk)&#xA;Bazel                      (BUILD)&#xA;BizTalk Orchestration      (odx)&#xA;BizTalk Pipeline           (btp)&#xA;Blade                      (blade, blade.php)&#xA;Bourne Again Shell         (bash)&#xA;Bourne Shell               (sh)&#xA;BrightScript               (brs)&#xA;builder                    (xml.builder)&#xA;C                          (c, cats, ec, idc, pgc)&#xA;C Shell                    (csh, tcsh)&#xA;C#                         (cs)&#xA;C# Designer                (designer.cs)&#xA;C++                        (C, c++, cc, CPP, cpp, cxx, h++, inl, ipp, pcc, tcc, tpp)&#xA;C/C++ Header               (H, h, hh, hpp, hxx)&#xA;Cake Build Script          (cake)&#xA;CCS                        (ccs)&#xA;Chapel                     (chpl)&#xA;Clean                      (dcl, icl)&#xA;Clojure                    (boot, cl2, clj, cljs.hl, cljscm, cljx, hic, riemann.config)&#xA;ClojureC                   (cljc)&#xA;ClojureScript              (cljs)&#xA;CMake                      (cmake, cmake.in, CMakeLists.txt)&#xA;COBOL                      (CBL, cbl, ccp, COB, cob, cobol, cpy)&#xA;CoffeeScript               (_coffee, cakefile, cjsx, coffee, iced)&#xA;ColdFusion                 (cfm, cfml)&#xA;ColdFusion CFScript        (cfc)&#xA;Coq                        (v)&#xA;Crystal                    (cr)&#xA;CSON                       (cson)&#xA;CSS                        (css)&#xA;CSV                        (csv)&#xA;Cucumber                   (feature)&#xA;CUDA                       (cu, cuh)&#xA;Cython                     (pxd, pxi, pyx)&#xA;D                          (d)&#xA;DAL                        (da)&#xA;Dart                       (dart)&#xA;Delphi Form                (dfm)&#xA;dhall                      (dhall)&#xA;DIET                       (dt)&#xA;diff                       (diff, patch)&#xA;DITA                       (dita)&#xA;Dockerfile                 (Dockerfile, dockerfile)&#xA;DOORS Extension Language   (dxl)&#xA;DOS Batch                  (BAT, bat, BTM, btm, CMD, cmd)&#xA;Drools                     (drl)&#xA;DTD                        (dtd)&#xA;dtrace                     (d)&#xA;ECPP                       (ecpp)&#xA;EEx                        (eex)&#xA;EJS                        (ejs)&#xA;Elixir                     (ex, exs)&#xA;Elm                        (elm)&#xA;Embedded Crystal           (ecr)&#xA;ERB                        (ERB, erb)&#xA;Erlang                     (app.src, emakefile, erl, hrl, rebar.config, rebar.config.lock, rebar.lock, xrl, yrl)&#xA;Expect                     (exp)&#xA;F#                         (fsi, fs, fs)&#xA;F# Script                  (fsx)&#xA;Fennel                     (fnl)&#xA;Fish Shell                 (fish)&#xA;Flatbuffers                (fbs)&#xA;Focus                      (focexec)&#xA;Forth                      (4th, e4, f83, fb, forth, fpm, fr, frt, ft, fth, rx, fs, f, for)&#xA;Fortran 77                 (F, F77, f77, FOR, FTN, ftn, pfo, f, for)&#xA;Fortran 90                 (F90, f90)&#xA;Fortran 95                 (F95, f95)&#xA;Freemarker Template        (ftl)&#xA;FXML                       (fxml)&#xA;GDScript                   (gd)&#xA;Gencat NLS                 (msg)&#xA;Glade                      (glade, ui)&#xA;Gleam                      (gleam)&#xA;GLSL                       (comp, fp, frag, frg, fsh, fshader, geo, geom, glsl, glslv, gshader, tesc, tese, vert, vrx, vsh, vshader)&#xA;Go                         (go)&#xA;Godot Resource             (tres)&#xA;Godot Scene                (tscn)&#xA;Gradle                     (gradle, gradle.kts)&#xA;Grails                     (gsp)&#xA;GraphQL                    (gql, graphql, graphqls)&#xA;Groovy                     (gant, groovy, grt, gtpl, gvy, jenkinsfile)&#xA;Haml                       (haml, haml.deface)&#xA;Handlebars                 (handlebars, hbs)&#xA;Harbour                    (hb)&#xA;Haskell                    (hs, hsc, lhs)&#xA;Haxe                       (hx, hxsl)&#xA;HCL                        (hcl, nomad, tf, tfvars)&#xA;HLSL                       (cg, cginc, fxh, hlsl, hlsli, shader)&#xA;Hoon                       (hoon)&#xA;HTML                       (htm, html, html.hl, xht)&#xA;IDL                        (dlm, idl, pro)&#xA;Idris                      (idr)&#xA;Igor Pro                   (ipf)&#xA;Imba                       (imba)&#xA;INI                        (buildozer.spec, ini, lektorproject, prefs)&#xA;InstallShield              (ism)&#xA;IPL                        (ipl)&#xA;Java                       (java)&#xA;JavaScript                 (_js, bones, es6, jake, jakefile, js, jsb, jscad, jsfl, jsm, jss, mjs, njs, pac, sjs, ssjs, xsjs, xsjslib)&#xA;JavaServer Faces           (jsf)&#xA;JCL                        (jcl)&#xA;Jinja Template             (jinja, jinja2)&#xA;JSON                       (arcconfig, avsc, composer.lock, geojson, gltf, har, htmlhintrc, json, json-tmlanguage, jsonl, mcmeta, mcmod.info, tern-config, tern-project, tfstate, tfstate.backup, topojson, watchmanconfig, webapp, webmanifest, yyp)&#xA;JSON5                      (json5)&#xA;JSP                        (jsp, jspf)&#xA;JSX                        (jsx)&#xA;Julia                      (jl)&#xA;Juniper Junos              (junos)&#xA;Jupyter Notebook           (ipynb)&#xA;Kermit                     (ksc)&#xA;Korn Shell                 (ksh)&#xA;Kotlin                     (kt, ktm, kts)&#xA;Lean                       (hlean, lean)&#xA;LESS                       (less)&#xA;lex                        (l, lex)&#xA;LFE                        (lfe)&#xA;liquid                     (liquid)&#xA;Lisp                       (asd, el, lisp, lsp, cl, jl)&#xA;Literate Idris             (lidr)&#xA;LiveLink OScript           (oscript)&#xA;LLVM IR                    (ll)&#xA;Logos                      (x, xm)&#xA;Logtalk                    (lgt, logtalk)&#xA;Lua                        (lua, nse, p8, pd_lua, rbxs, wlua)&#xA;m4                         (ac, m4)&#xA;make                       (am, Gnumakefile, gnumakefile, Makefile, makefile, mk)&#xA;Mako                       (mako, mao)&#xA;Markdown                   (contents.lr, markdown, md, mdown, mdwn, mdx, mkd, mkdn, mkdown, ronn, workbook)&#xA;Mathematica                (cdf, ma, mathematica, mt, nbp, wl, wlt, m)&#xA;MATLAB                     (m)&#xA;Maven                      (pom, pom.xml)&#xA;Meson                      (meson.build)&#xA;Metal                      (metal)&#xA;Modula3                    (i3, ig, m3, mg)&#xA;Mojo                       (mojom)&#xA;MSBuild script             (btproj, csproj, msbuild, vcproj, wdproj, wixproj)&#xA;MUMPS                      (mps, m)&#xA;Mustache                   (mustache)&#xA;MXML                       (mxml)&#xA;NAnt script                (build)&#xA;NASTRAN DMAP               (dmap)&#xA;Nemerle                    (n)&#xA;Nim                        (nim, nim.cfg, nimble, nimrod, nims)&#xA;Nix                        (nix)&#xA;Objective-C                (m)&#xA;Objective-C++              (mm)&#xA;OCaml                      (eliom, eliomi, ml, ml4, mli, mll, mly)&#xA;Odin                       (odin)&#xA;OpenCL                     (cl)&#xA;Oracle Forms               (fmt)&#xA;Oracle PL/SQL              (bod, fnc, prc, spc, trg)&#xA;Oracle Reports             (rex)&#xA;Pascal                     (dpr, lpr, p, pas, pascal)&#xA;Pascal/Puppet              (pp)&#xA;Patran Command Language    (pcl, ses)&#xA;Perl                       (ack, al, cpanfile, makefile.pl, perl, ph, plh, plx, pm, psgi, rexfile, pl, p6)&#xA;PHP                        (aw, ctp, phakefile, php, php3, php4, php5, php_cs, php_cs.dist, phps, phpt, phtml)&#xA;PHP/Pascal                 (inc)&#xA;Pig Latin                  (pig)&#xA;PL/I                       (pl1)&#xA;PL/M                       (lit, plm)&#xA;PlantUML                   (puml)&#xA;PO File                    (po)&#xA;PowerBuilder               (pbt, sra, srf, srm, srs, sru, srw)&#xA;PowerShell                 (ps1, psd1, psm1)&#xA;ProGuard                   (pro)&#xA;Prolog                     (P, prolog, yap, pl, p6, pro)&#xA;Properties                 (properties)&#xA;Protocol Buffers           (proto)&#xA;Pug                        (jade, pug)&#xA;PureScript                 (purs)&#xA;Python                     (buck, build.bazel, gclient, gyp, gypi, lmi, py, py3, pyde, pyi, pyp, pyt, pyw, sconscript, sconstruct, snakefile, tac, workspace, wscript, wsgi, xpy)&#xA;QML                        (qbs, qml)&#xA;Qt                         (ui)&#xA;Qt Linguist                (ts)&#xA;Qt Project                 (pro)&#xA;R                          (expr-dist, R, r, rd, rprofile, rsx)&#xA;Racket                     (rkt, rktd, rktl, scrbl)&#xA;Raku                       (pm6, raku, rakumod)&#xA;Raku/Prolog                (P6, p6)&#xA;RAML                       (raml)&#xA;RapydScript                (pyj)&#xA;Razor                      (cshtml, razor)&#xA;ReasonML                   (re, rei)&#xA;ReScript                   (res, resi)&#xA;reStructuredText           (rest, rest.txt, rst, rst.txt)&#xA;Rexx                       (pprx, rexx)&#xA;Ring                       (rform, rh, ring)&#xA;Rmd                        (Rmd)&#xA;RobotFramework             (robot)&#xA;Ruby                       (appraisals, berksfile, brewfile, builder, buildfile, capfile, dangerfile, deliverfile, eye, fastfile, gemfile, gemfile.lock, gemspec, god, guardfile, irbrc, jarfile, jbuilder, mavenfile, mspec, podfile, podspec, pryrc, puppetfile, rabl, rake, rb, rbuild, rbw, rbx, ru, snapfile, thor, thorfile, vagrantfile, watchr)&#xA;Ruby HTML                  (rhtml)&#xA;Rust                       (rs, rs.in)&#xA;SaltStack                  (sls)&#xA;SAS                        (sas)&#xA;Sass                       (sass)&#xA;Scala                      (kojo, sbt, scala)&#xA;Scheme                     (sc, sch, scm, sld, sps, ss, sls)&#xA;SCSS                       (scss)&#xA;sed                        (sed)&#xA;SKILL                      (il)&#xA;SKILL++                    (ils)&#xA;Slice                      (ice)&#xA;Slim                       (slim)&#xA;Smalltalk                  (st, cs)&#xA;Smarty                     (smarty, tpl)&#xA;Softbridge Basic           (SBL, sbl)&#xA;Solidity                   (sol)&#xA;SparForte                  (sp)&#xA;Specman e                  (e)&#xA;SQL                        (cql, mysql, psql, SQL, sql, tab, udf, viw)&#xA;SQL Data                   (data.sql)&#xA;SQL Stored Procedure       (spc.sql, spoc.sql, sproc.sql, udf.sql)&#xA;Squirrel                   (nut)&#xA;Standard ML                (fun, sig, sml)&#xA;Starlark                   (bazel, bzl)&#xA;Stata                      (ado, DO, do, doh, ihlp, mata, matah, sthlp)&#xA;Stylus                     (styl)&#xA;SugarSS                    (sss)&#xA;Svelte                     (svelte)&#xA;SVG                        (SVG, svg)&#xA;Swift                      (swift)&#xA;SWIG                       (i)&#xA;TableGen                   (tb)&#xA;Tcl/Tk                     (itk, tcl, tk)&#xA;Teamcenter met             (met)&#xA;Teamcenter mth             (mth)&#xA;TeX                        (aux, bbx, bib, bst, cbx, dtx, ins, lbx, ltx, mkii, mkiv, mkvi, sty, tex, cls)&#xA;Thrift                     (thrift)&#xA;TITAN Project File Information (tpd)&#xA;Titanium Style Sheet       (tss)&#xA;TNSDL                      (cii, cin, in1, in2, in3, in4, inf, interface, rou, sdl, sdt, spd, ssc, sst)&#xA;TOML                       (toml)&#xA;TTCN                       (ttcn, ttcn2, ttcn3, ttcnpp)&#xA;Twig                       (twig)&#xA;TypeScript                 (tsx, ts)&#xA;Umka                       (um)&#xA;Unity-Prefab               (mat, prefab)&#xA;Vala                       (vala)&#xA;Vala Header                (vapi)&#xA;VB for Applications        (VBA, vba)&#xA;Velocity Template Language (vm)&#xA;Verilog-SystemVerilog      (sv, svh, v)&#xA;VHDL                       (VHD, vhd, VHDL, vhdl, vhf, vhi, vho, vhs, vht, vhw)&#xA;vim script                 (vim)&#xA;Visual Basic               (BAS, bas, ctl, dsr, frm, FRX, frx, VBHTML, vbhtml, vbp, vbw, cls)&#xA;Visual Basic .NET          (VB, vb, vbproj)&#xA;Visual Basic Script        (VBS, vbs)&#xA;Visual Fox Pro             (SCA, sca)&#xA;Visual Studio Solution     (sln)&#xA;Visualforce Component      (component)&#xA;Visualforce Page           (page)&#xA;Vuejs Component            (vue)&#xA;Web Services Description   (wsdl)&#xA;WebAssembly                (wast, wat)&#xA;Windows Message File       (mc)&#xA;Windows Module Definition  (def)&#xA;Windows Resource File      (rc, rc2)&#xA;WiX include                (wxi)&#xA;WiX source                 (wxs)&#xA;WiX string localization    (wxl)&#xA;WXML                       (wxml)&#xA;WXSS                       (wxss)&#xA;XAML                       (xaml)&#xA;xBase                      (prg, prw)&#xA;xBase Header               (ch)&#xA;XHTML                      (xhtml)&#xA;XMI                        (XMI, xmi)&#xA;XML                        (adml, admx, ant, app.config, axml, builds, ccproj, ccxml, classpath, clixml, cproject, cscfg, csdef, csl, ct, depproj, ditamap, ditaval, dll.config, dotsettings, filters, fsproj, gmx, grxml, iml, ivy, jelly, jsproj, kml, launch, mdpolicy, mjml, natvis, ndproj, nproj, nuget.config, nuspec, odd, osm, packages.config, pkgproj, plist, proj, project, props, ps1xml, psc1, pt, rdf, resx, rss, scxml, settings.stylecop, sfproj, shproj, srdf, storyboard, sttheme, sublime-snippet, targets, tmcommand, tml, tmlanguage, tmpreferences, tmsnippet, tmtheme, urdf, ux, vcxproj, vsixmanifest, vssettings, vstemplate, vxml, web.config, web.debug.config, web.release.config, wsf, x3d, xacro, xib, xlf, xliff, XML, xml, xml.dist, xproj, xspec, xul, zcml)&#xA;XQuery                     (xq, xql, xqm, xquery, xqy)&#xA;XSD                        (XSD, xsd)&#xA;XSLT                       (XSL, xsl, XSLT, xslt)&#xA;Xtend                      (xtend)&#xA;yacc                       (y, yacc)&#xA;YAML                       (clang-format, clang-tidy, gemrc, glide.lock, mir, reek, rviz, sublime-syntax, syntax, yaml, yaml-tmlanguage, yml, yml.mysql)&#xA;Zig                        (zig)&#xA;zsh                        (zsh)&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;The above list can be customized by reading language definitions from a file with the &lt;code&gt;--read-lang-def&lt;/code&gt; or &lt;code&gt;--force-lang-def&lt;/code&gt; options.&lt;/p&gt; &#xA;&lt;p&gt;These file extensions map to multiple languages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;cl&lt;/code&gt; files could be Lisp or OpenCL&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cls&lt;/code&gt; files could be Visual Basic, TeX or Apex Class&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cs&lt;/code&gt; files could be C# or Smalltalk&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;d&lt;/code&gt; files could be D or dtrace&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;f&lt;/code&gt; files could be Fortran 77 or Forth&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fnc&lt;/code&gt; files could be Oracle PL or SQL&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;for&lt;/code&gt; files could be Fortran 77 or Forth&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fs&lt;/code&gt; files could be F# or Forth&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;inc&lt;/code&gt; files could be PHP or Pascal&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;itk&lt;/code&gt; files could be Tcl or Tk&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jl&lt;/code&gt; files could be Lisp or Julia&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lit&lt;/code&gt; files could be PL or M&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;m&lt;/code&gt; files could be MATLAB, Mathematica, Objective-C, MUMPS or Mercury&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;p6&lt;/code&gt; files could be Perl or Prolog&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pl&lt;/code&gt; files could be Perl or Prolog&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PL&lt;/code&gt; files could be Perl or Prolog&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pp&lt;/code&gt; files could be Pascal or Puppet&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pro&lt;/code&gt; files could be IDL, Qt Project, Prolog or ProGuard&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ts&lt;/code&gt; files could be TypeScript or Qt Linguist&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ui&lt;/code&gt; files could be Qt or Glade&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v&lt;/code&gt; files could be Verilog-SystemVerilog or Coq&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;cloc has subroutines that attempt to identify the correct language based on the file&#39;s contents for these special cases. Language identification accuracy is a function of how much code the file contains; .m files with just one or two lines for example, seldom have enough information to correctly distinguish between MATLAB, Mercury, MUMPS, or Objective-C.&lt;/p&gt; &#xA;&lt;p&gt;Languages with file extension collisions are difficult to customize with &lt;code&gt;--read-lang-def&lt;/code&gt; or &lt;code&gt;--force-lang-def&lt;/code&gt; as they have no mechanism to identify languages with common extensions. In this situation one must modify the cloc source code. &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;How_it_works&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;How It Works ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;cloc&#39;s method of operation resembles SLOCCount&#39;s: First, create a list of files to consider. Next, attempt to determine whether or not found files contain recognized computer language source code. Finally, for files identified as source files, invoke language-specific routines to count the number of source lines.&lt;/p&gt; &#xA;&lt;p&gt;A more detailed description:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If the input file is an archive (such as a .tar.gz or .zip file), create a temporary directory and expand the archive there using a system call to an appropriate underlying utility (tar, bzip2, unzip, etc) then add this temporary directory as one of the inputs. (This works more reliably on Unix than on Windows.)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use File::Find to recursively descend the input directories and make a list of candidate file names. Ignore binary and zero-sized files.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure the files in the candidate list have unique contents (first by comparing file sizes, then, for similarly sized files, compare MD5 hashes of the file contents with Digest::MD5). For each set of identical files, remove all but the first copy, as determined by a lexical sort, of identical files from the set. The removed files are not included in the report. (The &lt;code&gt;--skip-uniqueness&lt;/code&gt; switch disables the uniqueness tests and forces all copies of files to be included in the report.) See also the &lt;code&gt;--ignored=&lt;/code&gt; switch to see which files were ignored and why.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Scan the candidate file list for file extensions which cloc associates with programming languages (see the &lt;code&gt;--show-lang&lt;/code&gt; and &lt;code&gt;--show-ext&lt;/code&gt; options). Files which match are classified as containing source code for that language. Each file without an extensions is opened and its first line read to see if it is a Unix shell script (anything that begins with #!). If it is shell script, the file is classified by that scripting language (if the language is recognized). If the file does not have a recognized extension or is not a recognized scripting language, the file is ignored.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;All remaining files in the candidate list should now be source files for known programming languages. For each of these files:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Read the entire file into memory.&lt;/li&gt; &#xA;   &lt;li&gt;Count the number of lines (= L&lt;sub&gt;original&lt;/sub&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;Remove blank lines, then count again (= L&lt;sub&gt;non_blank&lt;/sub&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;Loop over the comment filters defined for this language. (For example, C++ has two filters: (1) remove lines that start with optional whitespace followed by // and (2) remove text between /* and */) Apply each filter to the code to remove comments. Count the left over lines (= L&lt;sub&gt;code&lt;/sub&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;Save the counts for this language: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;blank lines = L&lt;sub&gt;original&lt;/sub&gt; - L&lt;sub&gt;non_blank&lt;/sub&gt;&lt;/li&gt; &#xA;     &lt;li&gt;comment lines = L&lt;sub&gt;non_blank&lt;/sub&gt; - L&lt;sub&gt;code&lt;/sub&gt;&lt;/li&gt; &#xA;     &lt;li&gt;code lines = L&lt;sub&gt;code&lt;/sub&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The options modify the algorithm slightly. The &lt;code&gt;--read-lang-def&lt;/code&gt; option for example allows the user to read definitions of comment filters, known file extensions, and known scripting languages from a file. The code for this option is processed between Steps 2 and 3. &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;Advanced_Use&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Advanced Use ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;strip_comments&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Remove Comments from Source Code ▲&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;How can you tell if cloc correctly identifies comments? One way to convince yourself cloc is doing the right thing is to use its &lt;code&gt;--strip-comments&lt;/code&gt; option to remove comments and blank lines from files, then compare the stripped-down files to originals.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s try this out with the SQLite amalgamation, a C file containing all code needed to build the SQLite library along with a header file:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; tar zxf sqlite-amalgamation-3.5.6.tar.gz&#xA;prompt&amp;gt; cd sqlite-3.5.6/&#xA;prompt&amp;gt; cloc --strip-comments=nc sqlite.c&#xA;       1 text file.&#xA;       1 unique file.&#xA;Wrote sqlite3.c.nc&#xA;       0 files ignored.&#xA;&#xA;http://cloc.sourceforge.net v 1.03  T=1.0 s (1.0 files/s, 82895.0 lines/s)&#xA;-------------------------------------------------------------------------------&#xA;Language          files     blank   comment      code    scale   3rd gen. equiv&#xA;-------------------------------------------------------------------------------&#xA;C                     1      5167     26827     50901 x   0.77 =       39193.77&#xA;-------------------------------------------------------------------------------&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;The extension argument given to --strip-comments is arbitrary; here nc was used as an abbreviation for &#34;no comments&#34;.&lt;/p&gt; &#xA;&lt;p&gt;cloc removed over 31,000 lines from the file:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; wc -l sqlite3.c sqlite3.c.nc&#xA;  82895 sqlite3.c&#xA;  50901 sqlite3.c.nc&#xA; 133796 total&#xA;prompt&amp;gt; echo &#34;82895 - 50901&#34; | bc&#xA;31994&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;We can now compare the original file, sqlite3.c and the one stripped of comments, sqlite3.c.nc with tools like diff or vimdiff and see what exactly cloc considered comments and blank lines. A rigorous proof that the stripped-down file contains the same C code as the original is to compile these files and compare checksums of the resulting object files.&lt;/p&gt; &#xA;&lt;p&gt;First, the original source file:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; gcc -c sqlite3.c&#xA;prompt&amp;gt; md5sum sqlite3.o&#xA;cce5f1a2ea27c7e44b2e1047e2588b49  sqlite3.o&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Next, the version without comments:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; mv sqlite3.c.nc sqlite3.c&#xA;prompt&amp;gt; gcc -c sqlite3.c&#xA;prompt&amp;gt; md5sum sqlite3.o&#xA;cce5f1a2ea27c7e44b2e1047e2588b49  sqlite3.o&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;cloc removed over 31,000 lines of comments and blanks but did not modify the source code in any significant way since the resulting object file matches the original. &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;compressed_arch&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Work with Compressed Archives ▲&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Versions of cloc before v1.07 required an &lt;code&gt;--extract-with=CMD&lt;/code&gt; option to tell cloc how to expand an archive file. Beginning with v1.07 this is extraction is attempted automatically. At the moment the automatic extraction method works reasonably well on Unix-type OS&#39;s for the following file types: &lt;code&gt;.tar.gz&lt;/code&gt;, &lt;code&gt;.tar.bz2&lt;/code&gt;, &lt;code&gt;.tar.xz&lt;/code&gt;, &lt;code&gt;.tgz&lt;/code&gt;, &lt;code&gt;.zip&lt;/code&gt;, &lt;code&gt;.ear&lt;/code&gt;, &lt;code&gt;.deb&lt;/code&gt;. Some of these extensions work on Windows if one has WinZip installed in the default location (&lt;code&gt;C:\Program Files\WinZip\WinZip32.exe&lt;/code&gt;). Additionally, with newer versions of WinZip, the [http://www.winzip.com/downcl.htm](command line add-on) is needed for correct operation; in this case one would invoke cloc with something like &lt;br&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA; --extract-with=&#34;\&#34;c:\Program Files\WinZip\wzunzip\&#34; -e -o &amp;gt;FILE&amp;lt; .&#34;&#xA; &#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Ref. &lt;a href=&#34;http://sourceforge.net/projects/cloc/forums/forum/600963/topic/4021070?message=8938196&#34;&gt;http://sourceforge.net/projects/cloc/forums/forum/600963/topic/4021070?message=8938196&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In situations where the automatic extraction fails, one can try the &lt;code&gt;--extract-with=CMD&lt;/code&gt; option to count lines of code within tar files, Zip files, or other compressed archives for which one has an extraction tool. cloc takes the user-provided extraction command and expands the archive to a temporary directory (created with File::Temp), counts the lines of code in the temporary directory, then removes that directory. While not especially helpful when dealing with a single compressed archive (after all, if you&#39;re going to type the extraction command anyway why not just manually expand the archive?) this option is handy for working with several archives at once.&lt;/p&gt; &#xA;&lt;p&gt;For example, say you have the following source tarballs on a Unix machine&lt;br&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perl-5.8.5.tar.gz&#xA;Python-2.4.2.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and you want to count all the code within them. The command would be&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;cloc --extract-with=&#39;gzip -dc &amp;gt;FILE&amp;lt; | tar xf -&#39; perl-5.8.5.tar.gz Python-2.4.2.tar.gz&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;If that Unix machine has GNU tar (which can uncompress and extract in one step) the command can be shortened to&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;cloc --extract-with=&#39;tar zxf &amp;gt;FILE&amp;lt;&#39; perl-5.8.5.tar.gz Python-2.4.2.tar.gz&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;On a Windows computer with WinZip installed in &lt;code&gt;c:\Program Files\WinZip&lt;/code&gt; the command would look like&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;cloc.exe --extract-with=&#34;\&#34;c:\Program Files\WinZip\WinZip32.exe\&#34; -e -o &amp;gt;FILE&amp;lt; .&#34; perl-5.8.5.tar.gz Python-2.4.2.tar.gz&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Java &lt;code&gt;.ear&lt;/code&gt; files are Zip files that contain additional Zip files. cloc can handle nested compressed archives without difficulty--provided all such files are compressed and archived in the same way. Examples of counting a Java &lt;code&gt;.ear&lt;/code&gt; file in Unix and Windows:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cloc --extract-with=&#34;unzip -d . &amp;gt;FILE&amp;lt; &#34; Project.ear&#xA;&lt;i&gt;DOS&amp;gt;&lt;/i&gt; cloc.exe --extract-with=&#34;\&#34;c:\Program Files\WinZip\WinZip32.exe\&#34; -e -o &amp;gt;FILE&amp;lt; .&#34; Project.ear&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;diff&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Differences ▲&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;--diff&lt;/code&gt; switch allows one to measure the relative change in source code and comments between two versions of a file, directory, or archive. Differences reveal much more than absolute code counts of two file versions. For example, say a source file has 100 lines and its developer delivers a newer version with 102 lines. Did the developer add two comment lines, or delete seventeen source lines and add fourteen source lines and five comment lines, or did the developer do a complete rewrite, discarding all 100 original lines and adding 102 lines of all new source? The diff option tells how many lines of source were added, removed, modified or stayed the same, and how many lines of comments were added, removed, modified or stayed the same.&lt;/p&gt; &#xA;&lt;p&gt;Differences in blank lines are handled much more coarsely because these are stripped by cloc early on. Unless a file pair is identical, cloc will report only differences in absolute counts of blank lines. In other words, one can expect to see only entries for &#39;added&#39; if the second file has more blanks than the first, and &#39;removed&#39; if the situation is reversed. The entry for &#39;same&#39; will be non-zero only when the two files are identical.&lt;/p&gt; &#xA;&lt;p&gt;In addition to file pairs, one can give cloc pairs of directories, or pairs of file archives, or a file archive and a directory. cloc will try to align file pairs within the directories or archives and compare diffs for each pair. For example, to see what changed between GCC 4.4.0 and 4.5.0 one could do&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;cloc --diff gcc-4.4.0.tar.bz2  gcc-4.5.0.tar.bz2&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Be prepared to wait a while for the results though; the &lt;code&gt;--diff&lt;/code&gt; option runs much more slowly than an absolute code count.&lt;/p&gt; &#xA;&lt;p&gt;To see how cloc aligns files between the two archives, use the &lt;code&gt;--diff-alignment&lt;/code&gt; option&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;cloc --diff-alignment=align.txt gcc-4.4.0.tar.bz2  gcc-4.5.0.tar.bz2&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;to produce the file &lt;code&gt;align.txt&lt;/code&gt; which shows the file pairs as well as files added and deleted. The symbols &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; before each file pair indicate if the files are identical (&lt;code&gt;==&lt;/code&gt;) or if they have different content (&lt;code&gt;!=&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s sample output showing the difference between the Python 2.6.6 and 2.7 releases:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;i&gt;prompt&amp;gt;&lt;/i&gt; cloc --diff Python-2.7.9.tgz Python-2.7.10.tar.xz&#xA;    4315 text files.&#xA;    4313 text files.s&#xA;    2173 files ignored.&#xA;&#xA;4 errors:&#xA;Diff error, exceeded timeout:  /tmp/8ToGAnB9Y1/Python-2.7.9/Mac/Modules/qt/_Qtmodule.c&#xA;Diff error, exceeded timeout:  /tmp/M6ldvsGaoq/Python-2.7.10/Mac/Modules/qt/_Qtmodule.c&#xA;Diff error (quoted comments?):  /tmp/8ToGAnB9Y1/Python-2.7.9/Mac/Modules/qd/qdsupport.py&#xA;Diff error (quoted comments?):  /tmp/M6ldvsGaoq/Python-2.7.10/Mac/Modules/qd/qdsupport.py&#xA;&#xA;https://github.com/AlDanial/cloc v 1.65  T=298.59 s (0.0 files/s, 0.0 lines/s)&#xA;-----------------------------------------------------------------------------&#xA;Language                   files          blank        comment           code&#xA;-----------------------------------------------------------------------------&#xA;Visual Basic&#xA; same                          2              0              1             12&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;make&#xA; same                         11              0            340           2952&#xA; modified                      1              0              0              1&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;diff&#xA; same                          1              0             87            105&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;CSS&#xA; same                          0              0             19            327&#xA; modified                      1              0              0              1&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;Objective-C&#xA; same                          7              0             61            635&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;NAnt script&#xA; same                          2              0              0             30&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;XML&#xA; same                          3              0              2             72&#xA; modified                      1              0              0              1&#xA; added                         0              0              0              1&#xA; removed                       0              1              0              0&#xA;Windows Resource File&#xA; same                          3              0             56            206&#xA; modified                      1              0              0              1&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;Expect&#xA; same                          6              0            161            565&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;HTML&#xA; same                         14              0             11           2344&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;vim script&#xA; same                          1              0              7            106&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;C++&#xA; same                          2              0             18            128&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;Windows Module Definition&#xA; same                          7              0            187           2080&#xA; modified                      2              0              0              0&#xA; added                         0              0              0              1&#xA; removed                       0              1              0              2&#xA;Prolog&#xA; same                          1              0              0             24&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;Javascript&#xA; same                          3              0             49            229&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;Assembly&#xA; same                         51              0           6794          12298&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;Bourne Shell&#xA; same                         41              0           7698          45024&#xA; modified                      1              0              0              3&#xA; added                         0             13              2             64&#xA; removed                       0              0              0              0&#xA;DOS Batch&#xA; same                         29              0            107            494&#xA; modified                      1              0              0              9&#xA; added                         0              1              0              3&#xA; removed                       0              0              0              0&#xA;MSBuild script&#xA; same                         77              0              3          38910&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;Python&#xA; same                       1947              0         109012         430335&#xA; modified                    192              0             94            950&#xA; added                         2            323            283           2532&#xA; removed                       2             55             58            646&#xA;m4&#xA; same                         18              0            191          15352&#xA; modified                      1              0              0              2&#xA; added                         1             31              0            205&#xA; removed                       0              0              0              0&#xA;C&#xA; same                        505              0          37439         347837&#xA; modified                     45              0             13            218&#xA; added                         0             90             33            795&#xA; removed                       0              9              2            148&#xA;C/C++ Header&#xA; same                        255              0          10361          66635&#xA; modified                      5              0              5              7&#xA; added                         0              1              3            300&#xA; removed                       0              0              0              0&#xA;---------------------------------------------------------------------&#xA;SUM:&#xA; same                       2986              0         172604         966700&#xA; modified                    251              0            112           1193&#xA; added                         3            459            321           3901&#xA; removed                       2             66             60            796&#xA;---------------------------------------------------------------------&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;A pair of errors occurred. The first pair was caused by timing out when computing diffs of the file &lt;code&gt;Python-X/Mac/Modules/qt/_Qtmodule.c&lt;/code&gt; in each Python version. This file has &amp;gt; 26,000 lines of C code and takes more than 10 seconds--the default maximum duration for diff&#39;ing a single file--on my slow computer. (Note: this refers to performing differences with the &lt;code&gt;sdiff()&lt;/code&gt; function in the Perl &lt;code&gt;Algorithm::Diff&lt;/code&gt; module, not the command line &lt;code&gt;diff&lt;/code&gt; utility.) This error can be overcome by raising the time to, say, 20 seconds with &lt;code&gt;--diff-timeout 20&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The second error is more problematic. The files &lt;code&gt;Python-X/Mac/Modules/qd/qdsupport.py&lt;/code&gt; include Python docstring (text between pairs of triple quotes) containing C comments. cloc treats docstrings as comments and handles them by first converting them to C comments, then using the C comment removing regular expression. Nested C comments yield erroneous results however.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;custom_lang&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Create Custom Language Definitions ▲&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;cloc can write its language comment definitions to a file or can read comment definitions from a file, overriding the built-in definitions. This can be useful when you want to use cloc to count lines of a language not yet included, to change association of file extensions to languages, or to modify the way existing languages are counted.&lt;/p&gt; &#xA;&lt;p&gt;The easiest way to create a custom language definition file is to make cloc write its definitions to a file, then modify that file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cloc --write-lang-def=my_definitions.txt&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;creates the file &lt;code&gt;my_definitions.txt&lt;/code&gt; which can be modified then read back in with either the &lt;code&gt;--read-lang-def&lt;/code&gt; or &lt;code&gt;--force-lang-def&lt;/code&gt; option. The difference between the options is former merges language definitions from the given file in with cloc&#39;s internal definitions with cloc&#39;s taking precedence if there are overlaps. The &lt;code&gt;--force-lang-def&lt;/code&gt; option, on the other hand, replaces cloc&#39;s definitions completely. This option has a disadvantage in preventing cloc from counting &lt;a class=&#34;u&#34; href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#extcollision&#34; name=&#34;extcollision&#34;&gt; languages whose extensions map to multiple languages &lt;/a&gt; as these languages require additional logic that is not easily expressed in a definitions file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cloc --read-lang-def=my_definitions.txt  &lt;i&gt;file1 file2 dir1 ...&lt;/i&gt;&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Each language entry has four parts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The language name starting in column 1.&lt;/li&gt; &#xA; &lt;li&gt;One or more comment &lt;em&gt;filters&lt;/em&gt; starting in column 5.&lt;/li&gt; &#xA; &lt;li&gt;One or more filename extensions starting in column 5.&lt;/li&gt; &#xA; &lt;li&gt;A 3rd generation scale factor starting in column 5. This entry must be provided but its value is not important unless you want to compare your language to a hypothetical third generation programming language.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A filter defines a method to remove comment text from the source file. For example the entry for C++ looks like this&lt;/p&gt; &#xA;&lt;pre&gt;C++&#xA;    filter call_regexp_common C++&#xA;    filter remove_inline //.*$&#xA;    extension C&#xA;    extension c++&#xA;    extension cc&#xA;    extension cpp&#xA;    extension cxx&#xA;    extension pcc&#xA;    3rd_gen_scale 1.51&#xA;    end_of_line_continuation \\$&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;C++ has two filters: first, remove lines matching Regexp::Common&#39;s C++ comment regex. The second filter using remove_inline is currently unused. Its intent is to identify lines with both code and comments and it may be implemented in the future.&lt;/p&gt; &#xA;&lt;p&gt;A more complete discussion of the different filter options may appear here in the future. The output of cloc&#39;s &lt;code&gt;--write-lang-def&lt;/code&gt; option should provide enough examples for motivated individuals to modify or extend cloc&#39;s language definitions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;combine_reports&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Combine Reports ▲&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you manage multiple software projects you might be interested in seeing line counts by project, not just by language. Say you manage three software projects called MariaDB, PostgreSQL, and SQLite. The teams responsible for each of these projects run cloc on their source code and provide you with the output. For example MariaDB team does&lt;/p&gt; &#xA;&lt;pre&gt;cloc --out mariadb-10.1.txt mariadb-server-10.1.zip&lt;/pre&gt; &#xA;&lt;p&gt;and provides you with the file &lt;code&gt;mariadb-10.1.txt&lt;/code&gt;. The contents of the three files you get are&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cat mariadb-10.1.txt&#xA;https://github.com/AlDanial/cloc v 1.65  T=45.36 s (110.5 files/s, 66411.4 lines/s)&#xA;-----------------------------------------------------------------------------------&#xA;Language                         files          blank        comment           code&#xA;-----------------------------------------------------------------------------------&#xA;C++                               1613         225338         290077         983026&#xA;C                                  853          62442          73017         715018&#xA;C/C++ Header                      1327          48300         114577         209394&#xA;Bourne Shell                       256          10224          10810          61943&#xA;Perl                               147          10342           8305          35562&#xA;Pascal                             107           4907           5237          32541&#xA;HTML                                56            195              6          16489&#xA;Javascript                           5           3309           3019          15540&#xA;m4                                  30           1599            359          14215&#xA;CMake                              190           1919           4097          12206&#xA;XML                                 35            648             56           5210&#xA;Ruby                                59            619            184           4998&#xA;Puppet                              10              0              1           3848&#xA;make                               134            724            360           3631&#xA;SQL                                 23            306            377           3405&#xA;Python                              34            371            122           2545&#xA;Bourne Again Shell                  27            299            380           1604&#xA;Windows Module Definition           37             27             13           1211&#xA;lex                                  4            394            166            991&#xA;yacc                                 2            152             64            810&#xA;DOS Batch                           19             89             82            700&#xA;Prolog                               1              9             40            448&#xA;RobotFramework                       1              0              0            441&#xA;CSS                                  2             33            155            393&#xA;JSON                                 5              0              0            359&#xA;dtrace                               9             59            179            306&#xA;Windows Resource File               10             61             89            250&#xA;Assembly                             2             70            284            237&#xA;WiX source                           1             18             10            155&#xA;Visual Basic                         6              0              0             88&#xA;YAML                                 2              4              4             65&#xA;PHP                                  1             11              2             24&#xA;SKILL                                1              8             15             16&#xA;sed                                  2              0              0             16&#xA;Windows Message File                 1              2              8              6&#xA;diff                                 1              1              4              4&#xA;D                                    1              4             11              4&#xA;-----------------------------------------------------------------------------------&#xA;SUM:                              5014         372484         512110        2127699&#xA;-----------------------------------------------------------------------------------&#xA;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cat sqlite-3081101.txt&#xA;https://github.com/AlDanial/cloc v 1.65  T=1.22 s (3.3 files/s, 143783.6 lines/s)&#xA;-------------------------------------------------------------------------------&#xA;Language                     files          blank        comment           code&#xA;-------------------------------------------------------------------------------&#xA;C                                2          11059          53924         101454&#xA;C/C++ Header                     2            211           6630           1546&#xA;-------------------------------------------------------------------------------&#xA;SUM:                             4          11270          60554         103000&#xA;-------------------------------------------------------------------------------&#xA;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cat postgresql-9.4.4.txt&#xA;https://github.com/AlDanial/cloc v 1.65  T=22.46 s (172.0 files/s, 96721.6 lines/s)&#xA;-----------------------------------------------------------------------------------&#xA;Language                         files          blank        comment           code&#xA;-----------------------------------------------------------------------------------&#xA;HTML                              1254           3725              0         785991&#xA;C                                 1139         139289         244045         736519&#xA;C/C++ Header                       667          12277          32488          57014&#xA;SQL                                410          13400           8745          51926&#xA;yacc                                 8           3163           2669          28491&#xA;Bourne Shell                        41           2647           2440          17170&#xA;Perl                                81           1702           1308           9456&#xA;lex                                  9            792           1631           4285&#xA;make                               205           1525           1554           4114&#xA;m4                                  12            218             25           1642&#xA;Windows Module Definition           13              4             17           1152&#xA;XSLT                                 5             76             55            294&#xA;DOS Batch                            7             29             30             92&#xA;CSS                                  1             20              7             69&#xA;Assembly                             3             17             38             69&#xA;D                                    1             14             14             66&#xA;Windows Resource File                3              4              0             62&#xA;Lisp                                 1              1              1             16&#xA;sed                                  1              1              7             15&#xA;Python                               1              5              0             13&#xA;Bourne Again Shell                   1              8              6             10&#xA;Windows Message File                 1              0              0              5&#xA;-----------------------------------------------------------------------------------&#xA;SUM:                              3864         178917         295080        1698471&#xA;-----------------------------------------------------------------------------------&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;While these three files are interesting, you also want to see the combined counts from all projects. That can be done with cloc&#39;s &lt;code&gt;--sum_reports&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cloc --sum-reports --out=databases mariadb-10.1.txt  sqlite-3081101.txt  postgresql-9.4.4.txt&#xA;Wrote databases.lang&#xA;Wrote databases.file&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;The report combination produces two output files, one for sums by programming language (&lt;code&gt;databases.lang&lt;/code&gt;) and one by project (&lt;code&gt;databases.file&lt;/code&gt;). Their contents are&lt;/p&gt; &#xA;&lt;pre&gt;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cat databases.lang&#xA;https://github.com/AlDanial/cloc v 1.65&#xA;--------------------------------------------------------------------------------&#xA;Language                      files          blank        comment           code&#xA;--------------------------------------------------------------------------------&#xA;C                              1994         212790         370986        1552991&#xA;C++                            1613         225338         290077         983026&#xA;HTML                           1310           3920              6         802480&#xA;C/C++ Header                   1996          60788         153695         267954&#xA;Bourne Shell                    297          12871          13250          79113&#xA;SQL                             433          13706           9122          55331&#xA;Perl                            228          12044           9613          45018&#xA;Pascal                          107           4907           5237          32541&#xA;yacc                             10           3315           2733          29301&#xA;m4                               42           1817            384          15857&#xA;Javascript                        5           3309           3019          15540&#xA;CMake                           190           1919           4097          12206&#xA;make                            339           2249           1914           7745&#xA;lex                              13           1186           1797           5276&#xA;XML                              35            648             56           5210&#xA;Ruby                             59            619            184           4998&#xA;Puppet                           10              0              1           3848&#xA;Python                           35            376            122           2558&#xA;Windows Module Definition        50             31             30           2363&#xA;Bourne Again Shell               28            307            386           1614&#xA;DOS Batch                        26            118            112            792&#xA;CSS                               3             53            162            462&#xA;Prolog                            1              9             40            448&#xA;RobotFramework                    1              0              0            441&#xA;JSON                              5              0              0            359&#xA;Windows Resource File            13             65             89            312&#xA;Assembly                          5             87            322            306&#xA;dtrace                            9             59            179            306&#xA;XSLT                              5             76             55            294&#xA;WiX source                        1             18             10            155&#xA;Visual Basic                      6              0              0             88&#xA;D                                 2             18             25             70&#xA;YAML                              2              4              4             65&#xA;sed                               3              1              7             31&#xA;PHP                               1             11              2             24&#xA;SKILL                             1              8             15             16&#xA;Lisp                              1              1              1             16&#xA;Windows Message File              2              2              8             11&#xA;diff                              1              1              4              4&#xA;--------------------------------------------------------------------------------&#xA;SUM:                           8882         562671         867744        3929170&#xA;--------------------------------------------------------------------------------&#xA;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cat databases.file&#xA;----------------------------------------------------------------------------------&#xA;File                            files          blank        comment           code&#xA;----------------------------------------------------------------------------------&#xA;mariadb-10.1.txt                 5014         372484         512110        2127699&#xA;postgresql-9.4.4.txt             3864         178917         295080        1698471&#xA;sqlite-3081101.txt                  4          11270          60554         103000&#xA;----------------------------------------------------------------------------------&#xA;SUM:                             8882         562671         867744        3929170&#xA;----------------------------------------------------------------------------------&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Report files themselves can be summed together. Say you also manage development of Perl and Python and you want to keep track of those line counts separately from your database projects. First create reports for Perl and Python separately:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;cloc --out perl-5.22.0.txt   perl-5.22.0.tar.gz&#xA;cloc --out python-2.7.10.txt Python-2.7.10.tar.xz&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;then sum these together with&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cloc --sum-reports --out script_lang perl-5.22.0.txt python-2.7.10.txt&#xA;Wrote script_lang.lang&#xA;Wrote script_lang.file&#xA;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cat script_lang.lang&#xA;https://github.com/AlDanial/cloc v 1.65&#xA;-------------------------------------------------------------------------------&#xA;Language                     files          blank        comment           code&#xA;-------------------------------------------------------------------------------&#xA;Perl                          2892         136396         184362         536445&#xA;C                              680          75566          71211         531203&#xA;Python                        2141          89642         109524         434015&#xA;C/C++ Header                   408          16433          26938         214800&#xA;Bourne Shell                   154          11088          14496          87759&#xA;MSBuild script                  77              0              3          38910&#xA;m4                              20           1604            191          15559&#xA;Assembly                        51           3775           6794          12298&#xA;Pascal                           8            458           1603           8592&#xA;make                            16            897            828           4939&#xA;XML                             37            198              2           2484&#xA;HTML                            14            393             11           2344&#xA;C++                             12            338            295           2161&#xA;Windows Module Definition        9            171            187           2081&#xA;YAML                            49             20             15           2078&#xA;Prolog                          12            438              2           1146&#xA;JSON                            14              1              0           1037&#xA;yacc                             1             85             76            998&#xA;DOS Batch                       44            199            148            895&#xA;Objective-C                      7             98             61            635&#xA;Expect                           6            104            161            565&#xA;Windows Message File             1            102             11            489&#xA;CSS                              1             98             19            328&#xA;Windows Resource File            7             55             56            292&#xA;Javascript                       3             31             49            229&#xA;vim script                       1             36              7            106&#xA;diff                             1             17             87            105&#xA;NAnt script                      2              1              0             30&#xA;IDL                              1              0              0             24&#xA;Visual Basic                     2              1              1             12&#xA;D                                1              5              7              8&#xA;Lisp                             2              0              3              4&#xA;-------------------------------------------------------------------------------&#xA;SUM:                          6674         338250         417148        1902571&#xA;-------------------------------------------------------------------------------&#xA;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cat script_lang.file&#xA;-------------------------------------------------------------------------------&#xA;File                         files          blank        comment           code&#xA;-------------------------------------------------------------------------------&#xA;python-2.7.10.txt             3240         161276         173214         998697&#xA;perl-5.22.0.txt               3434         176974         243934         903874&#xA;-------------------------------------------------------------------------------&#xA;SUM:                          6674         338250         417148        1902571&#xA;-------------------------------------------------------------------------------&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, combine the combination files:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cloc --sum-reports --report_file=everything databases.lang script_lang.lang&#xA;Wrote everything.lang&#xA;Wrote everything.file&#xA;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cat everything.lang&#xA;https://github.com/AlDanial/cloc v 1.65&#xA;---------------------------------------------------------------------------------&#xA;Language                       files          blank        comment           code&#xA;---------------------------------------------------------------------------------&#xA;C                               2674         288356         442197        2084194&#xA;C++                             1625         225676         290372         985187&#xA;HTML                            1324           4313             17         804824&#xA;Perl                            3120         148440         193975         581463&#xA;C/C++ Header                    2404          77221         180633         482754&#xA;Python                          2176          90018         109646         436573&#xA;Bourne Shell                     451          23959          27746         166872&#xA;SQL                              433          13706           9122          55331&#xA;Pascal                           115           5365           6840          41133&#xA;MSBuild script                    77              0              3          38910&#xA;m4                                62           3421            575          31416&#xA;yacc                              11           3400           2809          30299&#xA;Javascript                         8           3340           3068          15769&#xA;make                             355           3146           2742          12684&#xA;Assembly                          56           3862           7116          12604&#xA;CMake                            190           1919           4097          12206&#xA;XML                               72            846             58           7694&#xA;lex                               13           1186           1797           5276&#xA;Ruby                              59            619            184           4998&#xA;Windows Module Definition         59            202            217           4444&#xA;Puppet                            10              0              1           3848&#xA;YAML                              51             24             19           2143&#xA;DOS Batch                         70            317            260           1687&#xA;Bourne Again Shell                28            307            386           1614&#xA;Prolog                            13            447             42           1594&#xA;JSON                              19              1              0           1396&#xA;CSS                                4            151            181            790&#xA;Objective-C                        7             98             61            635&#xA;Windows Resource File             20            120            145            604&#xA;Expect                             6            104            161            565&#xA;Windows Message File               3            104             19            500&#xA;RobotFramework                     1              0              0            441&#xA;dtrace                             9             59            179            306&#xA;XSLT                               5             76             55            294&#xA;WiX source                         1             18             10            155&#xA;diff                               2             18             91            109&#xA;vim script                         1             36              7            106&#xA;Visual Basic                       8              1              1            100&#xA;D                                  3             23             32             78&#xA;sed                                3              1              7             31&#xA;NAnt script                        2              1              0             30&#xA;IDL                                1              0              0             24&#xA;PHP                                1             11              2             24&#xA;Lisp                               3              1              4             20&#xA;SKILL                              1              8             15             16&#xA;---------------------------------------------------------------------------------&#xA;SUM:                           15556         900921        1284892        5831741&#xA;---------------------------------------------------------------------------------&#xA;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cat everything.file&#xA;-------------------------------------------------------------------------------&#xA;File                         files          blank        comment           code&#xA;-------------------------------------------------------------------------------&#xA;databases.lang                8882         562671         867744        3929170&#xA;script_lang.lang              6674         338250         417148        1902571&#xA;-------------------------------------------------------------------------------&#xA;SUM:                         15556         900921        1284892        5831741&#xA;-------------------------------------------------------------------------------&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;One limitation of the &lt;code&gt;--sum-reports&lt;/code&gt; feature is that the individual counts must be saved in the plain text format. Counts saved as XML, JSON, YAML, or SQL will produce errors if used in a summation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;sql&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;SQL ▲&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Cloc can write results in the form of SQL table create and insert statements for use with relational database programs such as SQLite, MySQL, PostgreSQL, Oracle, or Microsoft SQL. Once the code count information is in a database, the information can be interrogated and displayed in interesting ways.&lt;/p&gt; &#xA;&lt;p&gt;A database created from cloc SQL output has two tables, &lt;strong&gt;metadata&lt;/strong&gt; and &lt;strong&gt;t&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;p&gt;Table &lt;strong&gt;metadata&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Field&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;timestamp&lt;/td&gt; &#xA;   &lt;td&gt;text&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;project&lt;/td&gt; &#xA;   &lt;td&gt;text&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;elapsed_s&lt;/td&gt; &#xA;   &lt;td&gt;text&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Table &lt;strong&gt;t&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Field&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;project&lt;/td&gt; &#xA;   &lt;td&gt;text&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;language&lt;/td&gt; &#xA;   &lt;td&gt;text&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;file&lt;/td&gt; &#xA;   &lt;td&gt;text&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nBlank&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nComment&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nCode&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nScaled&lt;/td&gt; &#xA;   &lt;td&gt;real&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The &lt;strong&gt;metadata&lt;/strong&gt; table contains information about when the cloc run was made. The &lt;code&gt;--sql-append&lt;/code&gt; switch allows one to combine many runs in a single database; each run adds a row to the metadata table. The code count information resides in table &lt;strong&gt;t&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s repeat the code count examples of Perl, Python, SQLite, MySQL and PostgreSQL tarballs shown in the &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#combine_reports&#34;&gt;Combine Reports&lt;/a&gt; example above, this time using the SQL output options and the &lt;a href=&#34;http://www.sqlite.org/&#34;&gt;SQLite&lt;/a&gt; database engine.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;--sql&lt;/code&gt; switch tells cloc to generate output in the form of SQL table &lt;code&gt;create&lt;/code&gt; and &lt;code&gt;insert&lt;/code&gt; commands. The switch takes an argument of a file name to write these SQL statements into, or, if the argument is 1 (numeric one), streams output to STDOUT. Since the SQLite command line program, &lt;code&gt;sqlite3&lt;/code&gt;, can read commands from STDIN, we can dispense with storing SQL statements to a file and use &lt;code&gt;--sql 1&lt;/code&gt; to pipe data directly into the SQLite executable:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;cloc --sql 1 --sql-project mariadb mariadb-server-10.1.zip | sqlite3 code.db&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;--sql-project mariadb&lt;/code&gt; part is optional; there&#39;s no need to specify a project name when working with just one code base. However, since we&#39;ll be adding code counts from four other tarballs, we&#39;ll only be able to identify data by input source if we supply a project name for each run.&lt;/p&gt; &#xA;&lt;p&gt;Now that we have a database we will need to pass in the &lt;code&gt;--sql-append&lt;/code&gt; switch to tell cloc not to wipe out this database but instead add more data:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;cloc --sql 1 --sql-project postgresql --sql-append postgresql-9.4.4.tar.bz2        | sqlite3 code.db&#xA;cloc --sql 1 --sql-project sqlite     --sql-append sqlite-amalgamation-3081101.zip | sqlite3 code.db&#xA;cloc --sql 1 --sql-project python     --sql-append Python-2.7.10.tar.xz            | sqlite3 code.db&#xA;cloc --sql 1 --sql-project perl       --sql-append perl-5.22.0.tar.gz              | sqlite3 code.db&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Now the fun begins--we have a database, &lt;code&gt;code.db&lt;/code&gt;, with lots of information about the five projects and can query it for all manner of interesting facts.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Which is the longest file over all projects?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; sqlite3 code.db &#39;select project,file,nBlank+nComment+nCode as nL from t&#xA;                                 where nL = (select max(nBlank+nComment+nCode) from t)&#39;&#xA;&#xA;sqlite|sqlite-amalgamation-3081101/sqlite3.c|161623&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;sqlite3&lt;/code&gt;&#39;s default output format leaves a bit to be desired. We can add an option to the program&#39;s rc file, &lt;code&gt;~/.sqliterc&lt;/code&gt;, to show column headers:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;  .header on&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;One might be tempted to also include&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;  .mode column&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;in &lt;code&gt;~/.sqliterc&lt;/code&gt; but this causes problems when the output has more than one row since the widths of entries in the first row govern the maximum width for all subsequent rows. Often this leads to truncated output--not at all desirable. One option is to write a custom SQLite output formatter such as &lt;code&gt;sqlite_formatter&lt;/code&gt;, included with cloc.&lt;/p&gt; &#xA;&lt;p&gt;To use it, simply pass &lt;code&gt;sqlite3&lt;/code&gt;&#39;s STDOUT into &lt;code&gt;sqlite_formatter&lt;/code&gt; via a pipe:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; sqlite3 code.db &#39;select project,file,nBlank+nComment+nCode as nL from t&#xA;                         where nL = (select max(nBlank+nComment+nCode) from t)&#39; | ./sqlite_formatter&#xA;  &lt;font color=&#34;darkgreen&#34;&gt;&#xA;  -- Loading resources from ~/.sqliterc&#xA;  Project File                                  nL&#xA;  _______ _____________________________________ ______&#xA;  sqlite  sqlite-amalgamation-3081101/sqlite3.c 161623&#xA;  &lt;/font&gt;&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;If the &#34;Project File&#34; line doesn&#39;t appear, add &lt;code&gt;.header on&lt;/code&gt; to your &lt;code&gt;~/.sqliterc&lt;/code&gt; file as explained above.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;What is the longest file over all projects?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; sqlite3 code.db &#39;select project,file,nBlank+nComment+nCode as nL from t&#xA;                         where nL = (select max(nBlank+nComment+nCode) from t)&#39; | sqlite_formatter&#xA;&#xA;Project File                                  nL&#xA;_______ _____________________________________ ______&#xA;sqlite  sqlite-amalgamation-3081101/sqlite3.c 161623&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;What is the longest file in each project?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; sqlite3 code.db &#39;select project,file,max(nBlank+nComment+nCode) as nL from t&#xA;                          group by project order by nL;&#39; | sqlite_formatter&#xA;&#xA;Project    File                                                             nL&#xA;__________ ________________________________________________________________ ______&#xA;python     Python-2.7.10/Mac/Modules/qt/_Qtmodule.c                          28091&#xA;postgresql postgresql-9.4.4/src/interfaces/ecpg/preproc/preproc.c            54623&#xA;mariadb    server-10.1/storage/mroonga/vendor/groonga/lib/nfkc.c             80246&#xA;perl       perl-5.22.0/cpan/Locale-Codes/lib/Locale/Codes/Language_Codes.pm 100747&#xA;sqlite     sqlite-amalgamation-3081101/sqlite3.c                            161623&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Which files in each project have the most code lines?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; sqlite3 code.db &#39;select project,file,max(nCode) as nL from t&#xA;                         group by project order by nL desc;&#39; | sqlite_formatter&#xA;&#xA;Project    File                                                             nL&#xA;__________ ________________________________________________________________ ______&#xA;perl       perl-5.22.0/cpan/Locale-Codes/lib/Locale/Codes/Language_Codes.pm 100735&#xA;sqlite     sqlite-amalgamation-3081101/sqlite3.c                             97469&#xA;mariadb    server-10.1/storage/mroonga/vendor/groonga/lib/nfkc.c             80221&#xA;postgresql postgresql-9.4.4/src/interfaces/ecpg/preproc/preproc.c            45297&#xA;python     Python-2.7.10/Mac/Modules/qt/_Qtmodule.c                          26705&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Which C source files with more than 300 lines have a comment ratio below 1%?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; sqlite3 code.db &#39;select project, file, nCode, nComment,&#xA;                         (100.0*nComment)/(nComment+nCode) as comment_ratio from t&#xA;                         where language=&#34;C&#34; and nCode &amp;gt; 300 and&#xA;                         comment_ratio &amp;lt; 1 order by comment_ratio;&#39; | sqlite_formatter&#xA;&#xA;Project    File                                                                                            nCode nComment comment_ratio&#xA;__________ _______________________________________________________________________________________________ _____ ________ __________________&#xA;mariadb    server-10.1/storage/mroonga/vendor/groonga/lib/nfkc.c                                           80221       14 0.0174487443135789&#xA;python     Python-2.7.10/Python/graminit.c                                                                  2175        1 0.0459558823529412&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_turkish.c                            2095        1 0.0477099236641221&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_french.c                             1211        1 0.0825082508250825&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_1_french.c                        1201        1 0.0831946755407654&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_hungarian.c                          1182        1 0.084530853761623&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_1_hungarian.c                     1178        1 0.0848176420695505&#xA;mariadb    server-10.1/strings/ctype-eucjpms.c                                                             67466       60 0.0888546633889169&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_english.c                            1072        1 0.0931966449207828&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_1_english.c                       1064        1 0.0938967136150235&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_spanish.c                            1053        1 0.094876660341556&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_1_spanish.c                       1049        1 0.0952380952380952&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_italian.c                            1031        1 0.0968992248062016&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_1_italian.c                       1023        1 0.09765625&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_portuguese.c                          981        1 0.10183299389002&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_1_portuguese.c                     975        1 0.102459016393443&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_romanian.c                            967        1 0.103305785123967&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_2_romanian.c                       961        1 0.103950103950104&#xA;mariadb    server-10.1/strings/ctype-ujis.c                                                                67177       79 0.117461639110265&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_finnish.c                             720        1 0.13869625520111&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_porter.c                              717        1 0.139275766016713&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_1_finnish.c                        714        1 0.13986013986014&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_1_porter.c                         711        1 0.140449438202247&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_KOI8_R_russian.c                            660        1 0.151285930408472&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_russian.c                             654        1 0.152671755725191&#xA;python     Python-2.7.10/Mac/Modules/qt/_Qtmodule.c                                                        26705       42 0.157026956294164&#xA;python     Python-2.7.10/Mac/Modules/icn/_Icnmodule.c                                                       1521        3 0.196850393700787&#xA;mariadb    server-10.1/strings/ctype-extra.c                                                                8282       18 0.216867469879518&#xA;postgresql postgresql-9.4.4/src/bin/psql/sql_help.c                                                         3576        8 0.223214285714286&#xA;mariadb    server-10.1/strings/ctype-sjis.c                                                                34006       86 0.252258594391646&#xA;python     Python-2.7.10/Python/Python-ast.c                                                                6554       17 0.258712524729874&#xA;mariadb    server-10.1/strings/ctype-cp932.c                                                               34609       92 0.265122042592432&#xA;perl       perl-5.22.0/keywords.c                                                                           2815        8 0.283386468296139&#xA;python     Python-2.7.10/Mac/Modules/menu/_Menumodule.c                                                     3263       10 0.305530094714329&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_dutch.c                               596        2 0.334448160535117&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_1_dutch.c                          586        2 0.340136054421769&#xA;mariadb    server-10.1/strings/ctype-gbk.c                                                                 10684       38 0.354411490393583&#xA;python     Python-2.7.10/Mac/Modules/qd/_Qdmodule.c                                                         6694       24 0.357249181303959&#xA;python     Python-2.7.10/Mac/Modules/win/_Winmodule.c                                                       3056       11 0.358656667753505&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_german.c                              476        2 0.418410041841004&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_1_german.c                         470        2 0.423728813559322&#xA;mariadb    server-10.1/strings/ctype-euc_kr.c                                                               9956       44 0.44&#xA;postgresql postgresql-9.4.4/src/backend/utils/fmgrtab.c                                                     4815       23 0.475403059115337&#xA;python     Python-2.7.10/Mac/Modules/ctl/_Ctlmodule.c                                                       5442       28 0.511882998171846&#xA;python     Python-2.7.10/Mac/Modules/ae/_AEmodule.c                                                         1347        7 0.51698670605613&#xA;python     Python-2.7.10/Mac/Modules/app/_Appmodule.c                                                       1712        9 0.52295177222545&#xA;mariadb    server-10.1/strings/ctype-gb2312.c                                                               6377       35 0.54585152838428&#xA;mariadb    server-10.1/storage/tokudb/ft-index/third_party/xz-4.999.9beta/src/liblzma/lzma/fastpos_table.c   516        3 0.578034682080925&#xA;python     Python-2.7.10/Mac/Modules/evt/_Evtmodule.c                                                        504        3 0.591715976331361&#xA;python     Python-2.7.10/Modules/expat/xmlrole.c                                                            1256        8 0.632911392405063&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_danish.c                              312        2 0.636942675159236&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_1_danish.c                         310        2 0.641025641025641&#xA;python     Python-2.7.10/Mac/Modules/res/_Resmodule.c                                                       1621       12 0.734843845682792&#xA;python     Python-2.7.10/Mac/Modules/drag/_Dragmodule.c                                                     1046        8 0.759013282732448&#xA;python     Python-2.7.10/Mac/Modules/list/_Listmodule.c                                                     1021        8 0.777453838678329&#xA;python     Python-2.7.10/Mac/Modules/te/_TEmodule.c                                                         1198       10 0.827814569536424&#xA;python     Python-2.7.10/Mac/Modules/cg/_CGmodule.c                                                         1190       10 0.833333333333333&#xA;python     Python-2.7.10/Modules/clmodule.c                                                                 2379       23 0.957535387177352&#xA;python     Python-2.7.10/Mac/Modules/folder/_Foldermodule.c                                                  306        3 0.970873786407767&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;What are the ten longest files (based on code lines) that have no comments at all? Exclude header, .html, and YAML files.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; sqlite3 code.db &#39;select project, file, nCode from t&#xA;                         where nComment = 0 and&#xA;                         language not in (&#34;C/C++ Header&#34;, &#34;YAML&#34;, &#34;HTML&#34;)&#xA;                         order by nCode desc limit 10;&#39; | sqlite_formatter&#xA;&#xA;Project File                                                                 nCode&#xA;_______ ____________________________________________________________________ _____&#xA;perl    perl-5.22.0/cpan/Unicode-Collate/Collate/Locale/ja.pl                 1938&#xA;python  Python-2.7.10/PCbuild/pythoncore.vcproj                               1889&#xA;python  Python-2.7.10/PC/VS8.0/pythoncore.vcproj                              1889&#xA;mariadb server-10.1/mysql-test/extra/binlog_tests/mysqlbinlog_row_engine.inc  1862&#xA;perl    perl-5.22.0/cpan/Unicode-Collate/Collate/Locale/zh_strk.pl            1589&#xA;perl    perl-5.22.0/cpan/Unicode-Collate/Collate/Locale/zh_zhu.pl             1563&#xA;mariadb server-10.1/storage/mroonga/vendor/groonga/configure.ac               1526&#xA;perl    perl-5.22.0/cpan/Unicode-Collate/Collate/Locale/zh_pin.pl             1505&#xA;mariadb server-10.1/mysql-test/suite/funcs_1/storedproc/storedproc_02.inc     1465&#xA;python  Python-2.7.10/PC/VS8.0/_bsddb.vcproj                                  1463&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;What are the most popular languages (in terms of lines of code) in each project?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; sqlite3 code.db &#39;select project, language, sum(nCode) as SumCode from t&#xA;                         group by project,language&#xA;                         order by project,SumCode desc;&#39; | sqlite_formatter&#xA;Project    Language                  SumCode&#xA;__________ _________________________ _______&#xA;mariadb    C++                        983026&#xA;mariadb    C                          715018&#xA;mariadb    C/C++ Header               209394&#xA;mariadb    Bourne Shell                61943&#xA;mariadb    Perl                        35562&#xA;mariadb    Pascal                      32541&#xA;mariadb    HTML                        16489&#xA;mariadb    Javascript                  15540&#xA;mariadb    m4                          14215&#xA;mariadb    CMake                       12206&#xA;mariadb    XML                          5210&#xA;mariadb    Ruby                         4998&#xA;mariadb    Puppet                       3848&#xA;mariadb    make                         3631&#xA;mariadb    SQL                          3405&#xA;mariadb    Python                       2545&#xA;mariadb    Bourne Again Shell           1604&#xA;mariadb    Windows Module Definition    1211&#xA;mariadb    lex                           991&#xA;mariadb    yacc                          810&#xA;mariadb    DOS Batch                     700&#xA;mariadb    Prolog                        448&#xA;mariadb    RobotFramework                441&#xA;mariadb    CSS                           393&#xA;mariadb    JSON                          359&#xA;mariadb    dtrace                        306&#xA;mariadb    Windows Resource File         250&#xA;mariadb    Assembly                      237&#xA;mariadb    WiX source                    155&#xA;mariadb    Visual Basic                   88&#xA;mariadb    YAML                           65&#xA;mariadb    PHP                            24&#xA;mariadb    SKILL                          16&#xA;mariadb    sed                            16&#xA;mariadb    Windows Message File            6&#xA;mariadb    D                               4&#xA;mariadb    diff                            4&#xA;perl       Perl                       536445&#xA;perl       C                          155648&#xA;perl       C/C++ Header               147858&#xA;perl       Bourne Shell                42668&#xA;perl       Pascal                       8592&#xA;perl       XML                          2410&#xA;perl       YAML                         2078&#xA;perl       C++                          2033&#xA;perl       make                         1986&#xA;perl       Prolog                       1146&#xA;perl       JSON                         1037&#xA;perl       yacc                          998&#xA;perl       Windows Message File          489&#xA;perl       DOS Batch                     389&#xA;perl       Windows Resource File          85&#xA;perl       D                               8&#xA;perl       Lisp                            4&#xA;postgresql HTML                       785991&#xA;postgresql C                          736519&#xA;postgresql C/C++ Header                57014&#xA;postgresql SQL                         51926&#xA;postgresql yacc                        28491&#xA;postgresql Bourne Shell                17170&#xA;postgresql Perl                         9456&#xA;postgresql lex                          4285&#xA;postgresql make                         4114&#xA;postgresql m4                           1642&#xA;postgresql Windows Module Definition    1152&#xA;postgresql XSLT                          294&#xA;postgresql DOS Batch                      92&#xA;postgresql Assembly                       69&#xA;postgresql CSS                            69&#xA;postgresql D                              66&#xA;postgresql Windows Resource File          62&#xA;postgresql Lisp                           16&#xA;postgresql sed                            15&#xA;postgresql Python                         13&#xA;postgresql Bourne Again Shell             10&#xA;postgresql Windows Message File            5&#xA;python     Python                     434015&#xA;python     C                          375555&#xA;python     C/C++ Header                66942&#xA;python     Bourne Shell                45091&#xA;python     MSBuild script              38910&#xA;python     m4                          15559&#xA;python     Assembly                    12298&#xA;python     make                         2953&#xA;python     HTML                         2344&#xA;python     Windows Module Definition    2081&#xA;python     Objective-C                   635&#xA;python     Expect                        565&#xA;python     DOS Batch                     506&#xA;python     CSS                           328&#xA;python     Javascript                    229&#xA;python     Windows Resource File         207&#xA;python     C++                           128&#xA;python     vim script                    106&#xA;python     diff                          105&#xA;python     XML                            74&#xA;python     NAnt script                    30&#xA;python     Prolog                         24&#xA;python     Visual Basic                   12&#xA;sqlite     C                          101454&#xA;sqlite     C/C++ Header                 1546&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;custom_column_output&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Custom Column Output ▲&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Cloc&#39;s default output is a text table with five columns: language, file count, number of blank lines, number of comment lines and number of code lines. The switches &lt;code&gt;--by-file&lt;/code&gt;, &lt;code&gt;--3&lt;/code&gt;, and &lt;code&gt;--by-percent&lt;/code&gt; generate additional information but sometimes even those are insufficient.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;--sql&lt;/code&gt; option described in the previous section offers the ability to create custom output. This section has a pair of examples that show how to create custom columns. The first example includes an extra column, &lt;strong&gt;Total&lt;/strong&gt;, which is the sum of the numbers of blank, comment, and code lines. The second shows how to include the language name when running with &lt;code&gt;--by-file&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example 1: Add a &#34;Totals&#34; column.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The first step is to run cloc and save the output to a relational database, SQLite in this case:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;cloc --sql 1 --sql-project x yaml-cpp-yaml-cpp-0.5.3.tar.gz | sqlite3 counts.db&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;(the tar file comes from the &lt;a href=&#34;https://github.com/jbeder/yaml-cpp&#34;&gt;YAML-C++&lt;/a&gt; project).&lt;/p&gt; &#xA;&lt;p&gt;Second, we craft an SQL query that returns the regular cloc output plus an extra column for totals, then save the SQL statement to a file, &lt;code&gt;query_with_totals.sql&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;-- file query_with_totals.sql&#xA;select Language, count(File)   as files                       ,&#xA;                 sum(nBlank)   as blank                       ,&#xA;                 sum(nComment) as comment                     ,&#xA;                 sum(nCode)    as code                        ,&#xA;                 sum(nBlank)+sum(nComment)+sum(nCode) as Total&#xA;    from t group by Language order by code desc;&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Third, we run this query through SQLite using the &lt;code&gt;counts.db&lt;/code&gt; database. We&#39;ll include the &lt;code&gt;-header&lt;/code&gt; switch so that SQLite prints the column names:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;&amp;gt; cat query_with_totals.sql | sqlite3 -header counts.db&#xA;Language|files|blank|comment|code|Total&#xA;C++|141|12786|17359|60378|90523&#xA;C/C++ Header|110|8566|17420|51502|77488&#xA;Bourne Shell|10|6351|6779|38264|51394&#xA;m4|11|2037|260|17980|20277&#xA;Python|30|1613|2486|4602|8701&#xA;MSBuild script|11|0|0|1711|1711&#xA;CMake|7|155|285|606|1046&#xA;make|5|127|173|464|764&#xA;Markdown|2|30|0|39|69&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;The extra column for &lt;strong&gt;Total&lt;/strong&gt; is there but the format is unappealing. Running the output through &lt;code&gt;sqlite_formatter&lt;/code&gt; yields the desired result:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;&amp;gt; cat query_with_totals.sql | sqlite3 -header counts.db | sqlite_formatter&#xA;Language       files blank comment code  Total&#xA;______________ _____ _____ _______ _____ _____&#xA;C++              141 12786   17359 60378 90523&#xA;C/C++ Header     110  8566   17420 51502 77488&#xA;Bourne Shell      10  6351    6779 38264 51394&#xA;m4                11  2037     260 17980 20277&#xA;Python            30  1613    2486  4602  8701&#xA;MSBuild script    11     0       0  1711  1711&#xA;CMake              7   155     285   606  1046&#xA;make               5   127     173   464   764&#xA;Markdown           2    30       0    39    69&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;The next section, &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#wrapping-cloc-in-other-scripts-&#34;&gt;Wrapping cloc in other scripts&lt;/a&gt;, shows one way these commands can be combined into a new utility program.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example 2: Include a column for &#34;Language&#34; when running with &lt;code&gt;--by-file&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Output from &lt;code&gt;--by-file&lt;/code&gt; omits each file&#39;s language to save screen real estate; file paths for large projects can be long and including an extra 20 or so characters for a Language column can be excessive.&lt;/p&gt; &#xA;&lt;p&gt;As an example, here are the first few lines of output using the same code base as in Example 1:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;&amp;gt; cloc --by-file yaml-cpp-yaml-cpp-0.5.3.tar.gz&#xA;github.com/AlDanial/cloc v 1.81  T=1.14 s (287.9 files/s, 221854.9 lines/s)&#xA;--------------------------------------------------------------------------------------------------------------------------------------------&#xA;File                                                                                                     blank        comment           code&#xA;--------------------------------------------------------------------------------------------------------------------------------------------&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/configure                                                        2580           2264          13691&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/configure                                                  2541           2235          13446&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/fused-src/gtest/gtest.h                                    1972           4681          13408&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/fused-src/gmock/gmock.h                                          1585           3397           9216&#xA;yaml-cpp-yaml-cpp-0.5.3/test/integration/gen_emitter_test.cpp                                              999              0           8760&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/aclocal.m4                                                        987            100           8712&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/m4/libtool.m4                                               760             65           7176&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/build-aux/ltmain.sh                                         959           1533           7169&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/fused-src/gmock-gtest-all.cc                                     1514           3539           6390&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/fused-src/gtest/gtest-all.cc                               1312           2896           5384&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/test/gtest_unittest.cc                                     1226           1091           5098&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/include/gtest/internal/gtest-param-util-generated.h         349            235           4559&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;The absence of language identification for each file is a bit disappointing, but this can be remedied with a custom column solution.&lt;/p&gt; &#xA;&lt;p&gt;The first step, creating a database, matches that from Example 1 so we&#39;ll go straight to the second step of creating the desired SQL query. We&#39;ll store this one in the file &lt;code&gt;by_file_with_language.sql&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;-- file by_file_with_language.sql&#xA;select File, Language, nBlank   as blank  ,&#xA;                       nComment as comment,&#xA;                       nCode    as code&#xA;    from t order by code desc;&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Our desired extra column appears when we pass this custom SQL query through our database:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;&amp;gt; cat by_file_with_language.sql | sqlite3 -header counts.db | sqlite_formatter&#xA;File                                                                                               Language       blank comment code&#xA;__________________________________________________________________________________________________ ______________ _____ _______ _____&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/configure                                                 Bourne Shell    2580    2264 13691&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/configure                                           Bourne Shell    2541    2235 13446&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/fused-src/gtest/gtest.h                             C/C++ Header    1972    4681 13408&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/fused-src/gmock/gmock.h                                   C/C++ Header    1585    3397  9216&#xA;yaml-cpp-yaml-cpp-0.5.3/test/integration/gen_emitter_test.cpp                                      C++              999       0  8760&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/aclocal.m4                                                m4               987     100  8712&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/m4/libtool.m4                                       m4               760      65  7176&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/build-aux/ltmain.sh                                 Bourne Shell     959    1533  7169&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/fused-src/gmock-gtest-all.cc                              C++             1514    3539  6390&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/fused-src/gtest/gtest-all.cc                        C++             1312    2896  5384&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/test/gtest_unittest.cc                              C++             1226    1091  5098&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/include/gtest/internal/gtest-param-util-generated.h C/C++ Header     349     235  4559&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;wrapping_cloc_in_other_scripts&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt; * &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#wrapping-cloc-in-other-scripts-&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Wrapping cloc in other scripts ▲&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;More complex code counting solutions are possible by wrapping cloc in scripts or programs. The &#34;total lines&#34; column from example 1 of &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#custom-column-output-&#34;&gt;Custom Column Output&lt;/a&gt; could be simplified to a single command with this shell script (on Linux):&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;#!/bin/sh&#xA;#&#xA;# These commands must be in the user&#39;s $PATH:&#xA;#   cloc&#xA;#   sqlite3&#xA;#   sqlite_formatter&#xA;#&#xA;if test $# -eq 0 ; then&#xA;    echo &#34;Usage: $0  [cloc arguments]&#34;&#xA;    echo &#34;       Run cloc to count lines of code with an additional&#34;&#xA;    echo &#34;       output column for total lines (code+comment+blank).&#34;&#xA;    exit&#xA;fi&#xA;DBFILE=`tempfile`&#xA;cloc --sql 1 --sql-project x $@ | sqlite3 ${DBFILE}&#xA;SQL=&#34;select Language, count(File)   as files                       ,&#xA;                      sum(nBlank)   as blank                       ,&#xA;                      sum(nComment) as comment                     ,&#xA;                      sum(nCode)    as code                        ,&#xA;                      sum(nBlank)+sum(nComment)+sum(nCode) as Total&#xA;         from t group by Language order by code desc;&#xA;&#34;&#xA;echo ${SQL} | sqlite3 -header ${DBFILE} | sqlite_formatter&#xA;rm ${DBFILE}&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Saving the lines above to &lt;code&gt;total_columns.sh&lt;/code&gt; and making it executable (&lt;code&gt;chmod +x total_columns.sh&lt;/code&gt;) would let us do&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;./total_columns.sh yaml-cpp-yaml-cpp-0.5.3.tar.gz&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;to directly get&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;Language       files blank comment code  Total&#xA;______________ _____ _____ _______ _____ _____&#xA;C++              141 12786   17359 60378 90523&#xA;C/C++ Header     110  8566   17420 51502 77488&#xA;Bourne Shell      10  6351    6779 38264 51394&#xA;m4                11  2037     260 17980 20277&#xA;Python            30  1613    2486  4602  8701&#xA;MSBuild script    11     0       0  1711  1711&#xA;CMake              7   155     285   606  1046&#xA;make               5   127     173   464   764&#xA;Markdown           2    30       0    39    69&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Other examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Count code from a specific branch of a web-hosted git repository and send the results as a .csv email attachment: &lt;a href=&#34;https://github.com/dannyloweatx/checkmarx&#34;&gt;https://github.com/dannyloweatx/checkmarx&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;git_and_UTF8_pathnames&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;git and UTF8 pathnames ▲&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;cloc&#39;s &lt;code&gt;--git&lt;/code&gt; option may fail if you work with directory or file names with UTF-8 characters (for example, see &lt;a href=&#34;https://github.com/AlDanial/cloc/issues/457&#34;&gt;issue 457&lt;/a&gt;). The solution, &lt;a href=&#34;https://stackoverflow.com/questions/22827239/how-to-make-git-properly-display-utf-8-encoded-pathnames-in-the-console-window&#34;&gt;https://stackoverflow.com/questions/22827239/how-to-make-git-properly-display-utf-8-encoded-pathnames-in-the-console-window&lt;/a&gt;, is to apply this git configuration command:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;git config --global core.quotepath off&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Your console&#39;s font will need to be capable of displaying Unicode characters.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;scale_factors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Third Generation Language Scale Factors ▲&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;cloc versions before 1.50 by default computed, for the provided inputs, a rough estimate of how many lines of code would be needed to write the same code in a hypothetical third-generation computer language. To produce this output one must now use the &lt;code&gt;--3&lt;/code&gt; switch.&lt;/p&gt; &#xA;&lt;p&gt;Scale factors were derived from the 2006 version of language gearing ratios listed at Mayes Consulting web site, &lt;a href=&#34;http://softwareestimator.com/IndustryData2.htm&#34;&gt;http://softwareestimator.com/IndustryData2.htm&lt;/a&gt;, using this equation:&lt;/p&gt; &#xA;&lt;p&gt;cloc scale factor for language X = 3rd generation default gearing ratio / language X gearing ratio&lt;/p&gt; &#xA;&lt;p&gt;For example, cloc 3rd generation scale factor for DOS Batch = 80 / 128 = 0.625.&lt;/p&gt; &#xA;&lt;p&gt;The biggest flaw with this approach is that gearing ratios are defined for logical lines of source code not physical lines (which cloc counts). The values in cloc&#39;s &#39;scale&#39; and &#39;3rd gen. equiv.&#39; columns should be taken with a large grain of salt.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;options_txt&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;options.txt configuration file ▲&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you find yourself using the same command line switches every time you invoke cloc, you can save some typing by adding those switches to the &lt;code&gt;options.txt&lt;/code&gt; runtime configuration file. cloc will look for this file in the following default locations:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;# Linux, NetBSD, FreeBSD, macOS:&#xA;/home/USERNAME/.config/cloc/options.txt&#xA;&#xA;# Windows&#xA;C:\Users\USERNAME\AppData\cloc\options.txt&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Place each switch and arguments, if any, on a line by itself. Lines prefixed with &lt;code&gt;#&lt;/code&gt; symbol are ignored as comments and blank lines are skipped. Leading hyphens on the switches are optional. Here&#39;s a sample file:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;# options.txt&#xA;--vcs git&#xA;v      # verbose level 1&#xA;exclude-ext svg,html&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;The path to the &lt;code&gt;options.txt&lt;/code&gt; file can also be specified with the &lt;code&gt;--config FILE&lt;/code&gt; switch.&lt;/p&gt; &#xA;&lt;p&gt;Finally, if cloc finds an &lt;code&gt;options.txt&lt;/code&gt; file in the same directory as files given by any of these switches (in the listed priority), it will use that configuration file from that location:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;--list-file&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--exclude-list-file&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--read-lang-def&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--force-lang-def&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--diff-list-file&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Run with &lt;code&gt;--verbose&lt;/code&gt; to have cloc tell you which, if any, &lt;code&gt;options.txt&lt;/code&gt; file it uses.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;complex_regex_recursion&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Complex regular subexpression recursion limit ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;cloc relies on the Regexp::Common module&#39;s regular expressions to remove comments from source code. If comments are malformed, for example the &lt;code&gt;/*&lt;/code&gt; start comment marker appears in a C program without a corresponding &lt;code&gt;*/&lt;/code&gt; marker, the regular expression engine could enter a recursive loop, eventually triggering the warning &lt;code&gt;Complex regular subexpression recursion limit&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The most common cause for this warning is the existence of comment markers in string literals. While language compilers and interpreters are smart enough to recognize that &lt;code&gt;&#34;/*&#34;&lt;/code&gt; (for example) is a string and not a comment, cloc is fooled. File path globs, as in this line of JavaScript&lt;/p&gt; &#xA;&lt;pre&gt;var paths = globArray(&#34;**/*.js&#34;, {cwd: srcPath});&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;are frequent culprits.&lt;/p&gt; &#xA;&lt;p&gt;In an attempt to overcome this problem, a different algorithm which removes comment markers in strings can be enabled with the &lt;code&gt;--strip-str-comments&lt;/code&gt; switch. Doing so, however, has drawbacks: cloc will run more slowly and the output of &lt;code&gt;--strip-comments&lt;/code&gt; will contain strings that no longer match the input source.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;Limitations&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Limitations ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Identifying comments within source code is trickier than one might expect. Many languages would need a complete parser to be counted correctly. cloc does not attempt to parse any of the languages it aims to count and therefore is an imperfect tool. The following are known problems:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; Lines containing both source code and comments are counted as lines of code. &lt;/li&gt; &#xA; &lt;li&gt; Comment markers within strings or &lt;a href=&#34;http://www.faqs.org/docs/abs/HTML/here-docs.html&#34;&gt;here-documents&lt;/a&gt; are treated as actual comment markers and not string literals. For example the following lines of C code &lt;pre&gt;printf(&#34; /* &#34;);&#xA;for (i = 0; i &amp;lt; 100; i++) {&#xA;    a += i;&#xA;}&#xA;printf(&#34; */ &#34;);&#xA;&lt;/pre&gt; look to cloc like this: &lt;pre&gt;printf(&#34; xxxxxxx&#xA;xxxxxxx&#xA;xxxxxxx&#xA;xxxxxxx&#xA;xxxxxxx     &#34;);&#xA;&lt;/pre&gt; where &lt;tt&gt;xxxxxxx&lt;/tt&gt; represents cloc&#39;s view of commented text. Therefore cloc counts the five lines as two lines of C code and three lines of comments (lines with both code and comment are counted as code). &lt;p&gt;If you suspect your code has such strings, use the switch &lt;code&gt;--strip-str-comments&lt;/code&gt; to switch to the algorithm which removes embedded comment markers. Its use will render the five lines above as&lt;/p&gt; &lt;pre&gt;printf(&#34;  &#34;);&#xA;for (i = 0; i &amp;lt; 100; i++) {&#xA;    a += i;&#xA;}&#xA;printf(&#34;  &#34;);&#xA;&lt;/pre&gt; &lt;p&gt;and therefore return a count of five lines of code. See the &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#complex-regular-subexpression-recursion-limit-&#34;&gt;previous section&lt;/a&gt; on drawbacks to using &lt;code&gt;--strip-str-comments&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; Embedded languages are not recognized. For example, an HTML file containing JavaScript will be counted entirely as HTML. &lt;/li&gt; &#xA; &lt;li&gt; Python docstrings can serve several purposes. They may contain documentation, comment out blocks of code, or they can be regular strings (when they appear on the right hand side of an assignment or as a function argument). cloc is unable to infer the meaning of docstrings by context; by default cloc treats all docstrings as comments. The switch &lt;tt&gt;--docstring-as-code&lt;/tt&gt; treats all docstrings as code. &lt;/li&gt; &#xA; &lt;li&gt; Language definition files read with &lt;tt&gt;--read-lang-def&lt;/tt&gt; or &lt;tt&gt;--force-lang-def&lt;/tt&gt; must be plain ASCII text files. &lt;/li&gt; &#xA; &lt;li&gt; cloc treats compiler pragma&#39;s, for example &lt;tt&gt;#if&lt;/tt&gt; / &lt;tt&gt;#endif&lt;/tt&gt;, as code even if these are used to block lines of source from being compiled; the blocked lines still contribute to the code count. &lt;/li&gt; &#xA; &lt;li&gt; On Windows, cloc will fail with &lt;tt&gt;Can&#39;t cd to ... No such file or directory at &#xA;   &lt;embedded&gt;&#xA;    /File/Find.pm&#xA;   &lt;/embedded&gt;&lt;/tt&gt; if the code being scanned has file paths longer than 255 characters. A work-around is to run cloc from the Windows Subsystem for Linux (WSL). &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;AdditionalLanguages&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Requesting Support for Additional Languages ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;If cloc does not recognize a language you are interested in counting, create a &lt;a href=&#34;https://github.com/AlDanial/cloc/issues&#34;&gt;GitHub issue&lt;/a&gt; requesting support for your language. Include this information:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; File extensions associated with the language. If the language does not rely on file extensions and instead works with fixed file names or with `#!` style program invocations, explain what those are.&lt;/li&gt; &#xA; &lt;li&gt; A description of how comments are defined.&lt;/li&gt; &#xA; &lt;li&gt; Links to sample code.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;reporting_problems&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Reporting Problems ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;If you encounter a problem with cloc, first check to see if you&#39;re running with the latest version of the tool:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;  cloc --version&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;If the version is older than the most recent release at &lt;a href=&#34;https://github.com/AlDanial/cloc/releases&#34;&gt;https://github.com/AlDanial/cloc/releases&lt;/a&gt;, download the latest version and see if it solves your problem.&lt;/p&gt; &#xA;&lt;p&gt;If the problem happens with the latest release, submit a new issue at &lt;a href=&#34;https://github.com/AlDanial/cloc/issues&#34;&gt;https://github.com/AlDanial/cloc/issues&lt;/a&gt; &lt;em&gt;only&lt;/em&gt; if you can supply enough information for anyone reading the issue report to reproduce the problem. That means providing&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; the operating system you&#39;re running on&lt;/li&gt; &#xA; &lt;li&gt; the cloc command with all options&lt;/li&gt; &#xA; &lt;li&gt; the code you are counting (URL to a public git repo or zip file or tar file, et cetera)&lt;/li&gt; &#xA;&lt;/ol&gt; The last item is generally problematic. If the code base is proprietary or amounts to more than a few dozen kilobytes, you&#39;ll need to try to reconstruct similar inputs or demonstrate the problem with an existing public code base. &#xA;&lt;p&gt;Problem reports that cannot be reproduced will be ignored and eventually closed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;citation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Citation ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Please use the following bibtex entry to cite cloc in a publication:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;@software{adanial_cloc,&#xA;  author       = {Albert Danial},&#xA;  title        = {cloc: v1.92},&#xA;  month        = dec,&#xA;  year         = 2021,&#xA;  publisher    = {Zenodo},&#xA;  version      = {v1.92},&#xA;  doi          = {10.5281/zenodo.5760077},&#xA;  url          = {https://doi.org/10.5281/zenodo.5760077}&#xA;}&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;(Update the version number and corresponding year if this entry is outdated.)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;Acknowledgments&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Acknowledgments ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wolframroesler&#34;&gt;Wolfram Rösler&lt;/a&gt; provided most of the code examples in the test suite. These examples come from his &lt;a href=&#34;http://helloworldcollection.de/&#34;&gt;Hello World collection&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Ismet Kursunoglu found errors with the MUMPS counter and provided access to a computer with a large body of MUMPS code to test cloc.&lt;/p&gt; &#xA;&lt;p&gt;Tod Huggins gave helpful suggestions for the Visual Basic filters.&lt;/p&gt; &#xA;&lt;p&gt;Anton Demichev found a flaw with the JSP counter in cloc v0.76 and wrote the XML output generator for the &lt;code&gt;--xml&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;Reuben Thomas pointed out that ISO C99 allows &lt;code&gt;//&lt;/code&gt; as a comment marker, provided code for the &lt;code&gt;--no3&lt;/code&gt; and &lt;code&gt;--stdin-name&lt;/code&gt; options, counting the m4 language, and suggested several user-interface enhancements.&lt;/p&gt; &#xA;&lt;p&gt;Michael Bello provided code for the &lt;code&gt;--opt-match-f&lt;/code&gt;, &lt;code&gt;--opt-not-match-f&lt;/code&gt;, &lt;code&gt;--opt-match-d&lt;/code&gt;, and &lt;code&gt;--opt-not-match-d&lt;/code&gt; options.&lt;/p&gt; &#xA;&lt;p&gt;Mahboob Hussain inspired the &lt;code&gt;--original-dir&lt;/code&gt; and &lt;code&gt;--skip-uniqueness&lt;/code&gt; options, found a bug in the duplicate file detection logic and improved the JSP filter.&lt;/p&gt; &#xA;&lt;p&gt;Randy Sharo found and fixed an uninitialized variable bug for shell scripts having only one line.&lt;/p&gt; &#xA;&lt;p&gt;Steven Baker found and fixed a problem with the YAML output generator.&lt;/p&gt; &#xA;&lt;p&gt;Greg Toth provided code to improve blank line detection in COBOL.&lt;/p&gt; &#xA;&lt;p&gt;Joel Oliveira provided code to let &lt;code&gt;--exclude-list-file&lt;/code&gt; handle directory name exclusion.&lt;/p&gt; &#xA;&lt;p&gt;Blazej Kroll provided code to produce an XSLT file, &lt;code&gt;cloc-diff.xsl&lt;/code&gt;, when producing XML output for the &lt;code&gt;--diff&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;Denis Silakov enhanced the code which generates &lt;code&gt;cloc.xsl&lt;/code&gt; when using &lt;code&gt;--by-file&lt;/code&gt; and &lt;code&gt;--by-file-by-lang&lt;/code&gt; options, and provided an XSL file that works with &lt;code&gt;--diff&lt;/code&gt; output.&lt;/p&gt; &#xA;&lt;p&gt;Andy (&lt;a href=&#34;mailto:awalshe@sf.net&#34;&gt;awalshe@sf.net&lt;/a&gt;) provided code to fix several bugs: correct output of &lt;code&gt;--counted&lt;/code&gt; so that only files that are used in the code count appear and that results are shown by language rather than file name; allow &lt;code&gt;--diff&lt;/code&gt; output from multiple runs to be summed together with &lt;code&gt;--sum-reports&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Jari Aalto created the initial version of &lt;code&gt;cloc.1.pod&lt;/code&gt; and maintains the Debian package for cloc.&lt;/p&gt; &#xA;&lt;p&gt;Mikkel Christiansen (&lt;a href=&#34;mailto:mikkels@gmail.com&#34;&gt;mikkels@gmail.com&lt;/a&gt;) provided counter definitions for Clojure and ClojureScript.&lt;/p&gt; &#xA;&lt;p&gt;Vera Djuraskovic from &lt;a href=&#34;http://webhostinggeeks.com/&#34;&gt;Webhostinggeeks.com&lt;/a&gt; provided the &lt;a href=&#34;http://science.webhostinggeeks.com/cloc&#34;&gt;Serbo-Croatian&lt;/a&gt; translation.&lt;/p&gt; &#xA;&lt;p&gt;Gill Ajoft of &lt;a href=&#34;http://www.ajoft.com&#34;&gt;Ajoft Softwares&lt;/a&gt; provided the &lt;a href=&#34;http://www.ajoft.com/wpaper/aj-cloc.html&#34;&gt;Bulgarian&lt;/a&gt; translation.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;http://newknowledgez.com/&#34;&gt;Knowledge Team&lt;/a&gt; provided the &lt;a href=&#34;http://newknowledgez.com/cloc.html&#34;&gt;Slovakian&lt;/a&gt; translation.&lt;/p&gt; &#xA;&lt;p&gt;Erik Gooven Arellano Casillas provided an update to the MXML counter to recognize ActionScript comments.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://g14n.info&#34;&gt;Gianluca Casati&lt;/a&gt; created the &lt;a href=&#34;https://metacpan.org/pod/App::cloc&#34;&gt;cloc CPAN package&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- broken link&#xA;Mary Stefanova provided the&#xA;[Polish](http://www.trevister.com/blog/cloc.html)&#xA;translation. ---&gt; &#xA;&lt;p&gt;Ryan Lindeman implemented the &lt;code&gt;--by-percent&lt;/code&gt; feature.&lt;/p&gt; &#xA;&lt;p&gt;Kent C. Dodds, &lt;a href=&#34;https://twitter.com/kentcdodd&#34;&gt;@kentcdodds&lt;/a&gt;, created and maintains the npm package of cloc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://kudoybook.com&#34;&gt;Viktoria Parnak&lt;/a&gt; provided the &lt;a href=&#34;http://blog.kudoybook.com/cloc/&#34;&gt;Ukrainian&lt;/a&gt; translation.&lt;/p&gt; &#xA;&lt;p&gt;Natalie Harmann provided the &lt;a href=&#34;http://www.besteonderdelen.nl/blog/?p=5426&#34;&gt;Belarussian&lt;/a&gt; translation.&lt;/p&gt; &#xA;&lt;p&gt;Nithyal at &lt;a href=&#34;http://healthcareadministrationdegree.co/&#34;&gt;Healthcare Administration Portal&lt;/a&gt; provided the &lt;a href=&#34;http://healthcareadministrationdegree.co/socialwork/aldanial-cloc/&#34;&gt;Tamil&lt;/a&gt; translation.&lt;/p&gt; &#xA;&lt;p&gt;Patricia Motosan provided the &lt;a href=&#34;http://www.bildelestore.dk/blog/cloc-contele-de-linii-de-cod/&#34;&gt;Romanian&lt;/a&gt; translation.&lt;/p&gt; &#xA;&lt;!-- broken link&#xA;The [Garcinia Cambogia Review Team](http://www.garciniacambogiareviews.ca/)&#xA;provided the&#xA;[Arabic translation](http://www.garciniacambogiareviews.ca/translations/aldanial-cloc/). ---&gt; &#xA;&lt;p&gt;Gajk Melikyan provided the provided the &lt;a href=&#34;http://students.studybay.com/?p=34&#34;&gt;Armenian translation&lt;/a&gt; for &lt;a href=&#34;http://studybay.com&#34;&gt;http://studybay.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.forallworld.com/cloc-grof-sornyi-kodot/&#34;&gt;Hungarian translation&lt;/a&gt; courtesy of &lt;a href=&#34;http://www.forallworld.com/&#34;&gt;Zsolt Boros&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/stsnel&#34;&gt;Sietse Snel&lt;/a&gt; implemented the parallel processing capability available with the &lt;tt&gt;--processes=&lt;i&gt;N&lt;/i&gt;&lt;/tt&gt; switch.&lt;/p&gt; &#xA;&lt;p&gt;The development of cloc was partially funded by the Northrop Grumman Corporation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;Copyright&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Copyright ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Copyright (c) 2006-2018, &lt;a href=&#34;https://github.com/AlDanial&#34;&gt;Al Danial&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PiratenHi/Mitgliederverwaltung</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/PiratenHi/Mitgliederverwaltung</id>
    <link href="https://github.com/PiratenHi/Mitgliederverwaltung" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Skripte für die Mitgliederverwaltung&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>darold/ora2pg</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/darold/ora2pg</id>
    <link href="https://github.com/darold/ora2pg" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ora2Pg is a free tool used to migrate an Oracle database to a PostgreSQL compatible schema. It connects your Oracle database, scan it automatically and extracts its structure or data, it then generates SQL scripts that you can load into PostgreSQL.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;NAME Ora2Pg - Oracle to PostgreSQL database schema converter&lt;/p&gt; &#xA;&lt;p&gt;DESCRIPTION Ora2Pg is a free tool used to migrate an Oracle database to a PostgreSQL compatible schema. It connects your Oracle database, scans it automatically and extracts its structure or data, then generates SQL scripts that you can load into your PostgreSQL database.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Ora2Pg can be used for anything from reverse engineering Oracle database&#xA;to huge enterprise database migration or simply replicating some Oracle&#xA;data into a PostgreSQL database. It is really easy to use and doesn&#39;t&#xA;require any Oracle database knowledge other than providing the&#xA;parameters needed to connect to the Oracle database.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;FEATURES Ora2Pg consist of a Perl script (ora2pg) and a Perl module (Ora2Pg.pm), the only thing you have to modify is the configuration file ora2pg.conf by setting the DSN to the Oracle database and optionally the name of a schema. Once that&#39;s done you just have to set the type of export you want: TABLE with constraints, VIEW, MVIEW, TABLESPACE, SEQUENCE, INDEXES, TRIGGER, GRANT, FUNCTION, PROCEDURE, PACKAGE, PARTITION, TYPE, INSERT or COPY, FDW, QUERY, KETTLE, SYNONYM.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;By default Ora2Pg exports to a file that you can load into PostgreSQL&#xA;with the psql client, but you can also import directly into a PostgreSQL&#xA;database by setting its DSN into the configuration file. With all&#xA;configuration options of ora2pg.conf you have full control of what&#xA;should be exported and how.&#xA;&#xA;Features included:&#xA;&#xA;        - Export full database schema (tables, views, sequences, indexes), with&#xA;          unique, primary, foreign key and check constraints.&#xA;        - Export grants/privileges for users and groups.&#xA;        - Export range/list partitions and sub partitions.&#xA;        - Export a table selection (by specifying the table names).&#xA;        - Export Oracle schema to a PostgreSQL 8.4+ schema.&#xA;        - Export predefined functions, triggers, procedures, packages and&#xA;          package bodies.&#xA;        - Export full data or following a WHERE clause.&#xA;        - Full support of Oracle BLOB object as PG BYTEA.&#xA;        - Export Oracle views as PG tables.&#xA;        - Export Oracle user defined types.&#xA;        - Provide some basic automatic conversion of PLSQL code to PLPGSQL.&#xA;        - Works on any platform.&#xA;        - Export Oracle tables as foreign data wrapper tables.&#xA;        - Export materialized view.&#xA;        - Show a  report of an Oracle database content.&#xA;        - Migration cost assessment of an Oracle database.&#xA;        - Migration difficulty level assessment of an Oracle database.&#xA;        - Migration cost assessment of PL/SQL code from a file.&#xA;        - Migration cost assessment of Oracle SQL queries stored in a file.&#xA;        - Generate XML ktr files to be used with Penthalo Data Integrator (Kettle)&#xA;        - Export Oracle locator and spatial geometries into PostGis.&#xA;        - Export DBLINK as Oracle FDW.&#xA;        - Export SYNONYMS as views.&#xA;        - Export DIRECTORY as external table or directory for external_file extension.&#xA;        - Full MySQL export just like Oracle database.&#xA;        - Dispatch a list of SQL orders over multiple PostgreSQL connections&#xA;        - Perform a diff between Oracle and PostgreSQL database for test purpose.&#xA;&#xA;Ora2Pg does its best to automatically convert your Oracle database to&#xA;PostgreSQL but there&#39;s still manual works to do. The Oracle specific&#xA;PL/SQL code generated for functions, procedures, packages and triggers&#xA;has to be reviewed to match the PostgreSQL syntax. You will find some&#xA;useful recommendations on porting Oracle PL/SQL code to PostgreSQL&#xA;PL/PGSQL at &#34;Converting from other Databases to PostgreSQL&#34;, section:&#xA;Oracle (http://wiki.postgresql.org/wiki/Main_Page).&#xA;&#xA;See http://ora2pg.darold.net/report.html for a HTML sample of an Oracle&#xA;database migration report.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;INSTALLATION All Perl modules can always be found at CPAN (&lt;a href=&#34;http://search.cpan.org/&#34;&gt;http://search.cpan.org/&lt;/a&gt;). Just type the full name of the module (ex: DBD::Oracle) into the search input box, it will brings you the page for download.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Releases of Ora2Pg stay at SF.net&#xA;(https://sourceforge.net/projects/ora2pg/).&#xA;&#xA;Under Windows you should install Strawberry Perl&#xA;(http://strawberryperl.com/) and the OSes corresponding Oracle clients.&#xA;Since version 5.32 this Perl distribution include pre-compiled driver of&#xA;DBD::Oracle and DBD::Pg.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Requirement The Oracle Instant Client or a full Oracle installation must be installed on the system. You can download the RPM from Oracle download center:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    rpm -ivh oracle-instantclient12.2-basic-12.2.0.1.0-1.x86_64.rpm&#xA;    rpm -ivh oracle-instantclient12.2-devel-12.2.0.1.0-1.x86_64.rpm&#xA;    rpm -ivh oracle-instantclient12.2-jdbc-12.2.0.1.0-1.x86_64.rpm&#xA;    rpm -ivh oracle-instantclient12.2-sqlplus-12.2.0.1.0-1.x86_64.rpm&#xA;&#xA;or simply download the corresponding ZIP archives from Oracle download&#xA;center and install them where you want, for example:&#xA;/opt/oracle/instantclient_12_2/&#xA;&#xA;You also need a modern Perl distribution (perl 5.10 and more). To&#xA;connect to a database and proceed to his migration you need the DBI Perl&#xA;module &amp;gt; 1.614. To migrate an Oracle database you need the DBD::Oracle&#xA;Perl modules to be installed. To migrate a MySQL database you need the&#xA;DBD::MySQL Perl modules. These modules are used to connect to the&#xA;database but they are not mandatory if you want to migrate DDL input&#xA;files.&#xA;&#xA;To install DBD::Oracle and have it working you need to have the Oracle&#xA;client libraries installed and the ORACLE_HOME environment variable must&#xA;be defined.&#xA;&#xA;If you plan to export a MySQL database you need to install the Perl&#xA;module DBD::mysql which requires that the mysql client libraries are&#xA;installed.&#xA;&#xA;On some Perl distribution you may need to install the Time::HiRes Perl&#xA;module.&#xA;&#xA;If your distribution doesn&#39;t include these Perl modules you can install&#xA;them using CPAN:&#xA;&#xA;        perl -MCPAN -e &#39;install DBD::Oracle&#39;&#xA;        perl -MCPAN -e &#39;install DBD::MySQL&#39;&#xA;        perl -MCPAN -e &#39;install Time::HiRes&#39;&#xA;&#xA;otherwise use the packages provided by your distribution.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optional By default Ora2Pg dumps export to flat files, to load them into your PostgreSQL database you need the PostgreSQL client (psql). If you don&#39;t have it on the host running Ora2Pg you can always transfer these files to a host with the psql client installed. If you prefer to load export &#39;on the fly&#39;, the perl module DBD::Pg is required.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Ora2Pg allows you to dump all output in a compressed gzip file, to do&#xA;that you need the Compress::Zlib Perl module or if you prefer using&#xA;bzip2 compression, the program bzip2 must be available in your PATH.&#xA;&#xA;If your distribution doesn&#39;t include these Perl modules you can install&#xA;them using CPAN:&#xA;&#xA;        perl -MCPAN -e &#39;install DBD::Pg&#39;&#xA;        perl -MCPAN -e &#39;install Compress::Zlib&#39;&#xA;&#xA;otherwise use the packages provided by your distribution.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Installing Ora2Pg Like any other Perl Module Ora2Pg can be installed with the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        tar xjf ora2pg-x.x.tar.bz2&#xA;        cd ora2pg-x.x/&#xA;        perl Makefile.PL&#xA;        make &amp;amp;&amp;amp; make install&#xA;&#xA;This will install Ora2Pg.pm into your site Perl repository, ora2pg into&#xA;/usr/local/bin/ and ora2pg.conf into /etc/ora2pg/.&#xA;&#xA;On Windows(tm) OSes you may use instead:&#xA;&#xA;        perl Makefile.PL&#xA;        gmake &amp;amp;&amp;amp; gmake install&#xA;&#xA;This will install scripts and libraries into your Perl site installation&#xA;directory and the ora2pg.conf file as well as all documentation files&#xA;into C:\ora2pg\&#xA;&#xA;To install ora2pg in a different directory than the default one, simply&#xA;use this command:&#xA;&#xA;        perl Makefile.PL PREFIX=&amp;lt;your_install_dir&amp;gt;&#xA;        make &amp;amp;&amp;amp; make install&#xA;&#xA;then set PERL5LIB to the path to your installation directory before&#xA;using Ora2Pg.&#xA;&#xA;        export PERL5LIB=&amp;lt;your_install_dir&amp;gt;&#xA;        ora2pg -c config/ora2pg.conf -t TABLE -b outdir/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Packaging If you want to build the binary package for your preferred Linux distribution take a look at the packaging/ directory of the source tarball. There is everything to build RPM, Slackware and Debian packages. See README file in that directory.&lt;/p&gt; &#xA;&lt;p&gt;Installing DBD::Oracle Ora2Pg needs the Perl module DBD::Oracle for connectivity to an Oracle database from perl DBI. To get DBD::Oracle get it from CPAN a perl module repository.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;After setting ORACLE_HOME and LD_LIBRARY_PATH environment variables as&#xA;root user, install DBD::Oracle. Proceed as follow:&#xA;&#xA;        export LD_LIBRARY_PATH=/usr/lib/oracle/12.2/client64/lib&#xA;        export ORACLE_HOME=/usr/lib/oracle/12.2/client64&#xA;        perl -MCPAN -e &#39;install DBD::Oracle&#39;&#xA;&#xA;If you are running for the first time it will ask many questions; you&#xA;can keep defaults by pressing ENTER key, but you need to give one&#xA;appropriate mirror site for CPAN to download the modules. Install&#xA;through CPAN manually if the above doesn&#39;t work:&#xA;&#xA;        #perl -MCPAN -e shell&#xA;        cpan&amp;gt; get DBD::Oracle&#xA;        cpan&amp;gt; quit&#xA;        cd ~/.cpan/build/DBD-Oracle*&#xA;        export LD_LIBRARY_PATH=/usr/lib/oracle/11.2/client64/lib&#xA;        export ORACLE_HOME=/usr/lib/oracle/11.2/client64&#xA;        perl Makefile.PL&#xA;        make&#xA;        make install&#xA;&#xA;Installing DBD::Oracle require that the three Oracle packages:&#xA;instant-client, SDK and SQLplus are installed as well as the libaio1&#xA;library.&#xA;&#xA;If you are using Instant Client from ZIP archives, the LD_LIBRARY_PATH&#xA;and ORACLE_HOME will be the same and must be set to the directory where&#xA;you have installed the files. For example:&#xA;/opt/oracle/instantclient_12_2/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;CONFIGURATION Ora2Pg configuration can be as simple as choosing the Oracle database to export and choose the export type. This can be done in a minute.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;By reading this documentation you will also be able to:&#xA;&#xA;        - Select only certain tables and/or column for export.&#xA;        - Rename some tables and/or column during export.&#xA;        - Select data to export following a WHERE clause per table.&#xA;        - Delay database constraints during data loading.&#xA;        - Compress exported data to save disk space.&#xA;        - and much more.&#xA;&#xA;The full control of the Oracle database migration is taken though a&#xA;single configuration file named ora2pg.conf. The format of this file&#xA;consist in a directive name in upper case followed by tab character and&#xA;a value. Comments are lines beginning with a #.&#xA;&#xA;There&#39;s no specific order to place the configuration directives, they&#xA;are set at the time they are read in the configuration file.&#xA;&#xA;For configuration directives that just take a single value, you can use&#xA;them multiple time in the configuration file but only the last&#xA;occurrence found in the file will be used. For configuration directives&#xA;that allow a list of value, you can use it multiple time, the values&#xA;will be appended to the list. If you use the IMPORT directive to load a&#xA;custom configuration file, directives defined in this file will be&#xA;stores from the place the IMPORT directive is found, so it is better to&#xA;put it at the end of the configuration file.&#xA;&#xA;Values set in command line options will override values from the&#xA;configuration file.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Ora2Pg usage First of all be sure that libraries and binaries path include the Oracle Instant Client installation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        export LD_LIBRARY_PATH=/usr/lib/oracle/11.2/client64/lib&#xA;        export PATH=&#34;/usr/lib/oracle/11.2/client64/bin:$PATH&#34;&#xA;&#xA;By default Ora2Pg will look for /etc/ora2pg/ora2pg.conf configuration&#xA;file, if the file exist you can simply execute:&#xA;&#xA;        /usr/local/bin/ora2pg&#xA;&#xA;or under Windows(tm) run ora2pg.bat file, located in your perl bin&#xA;directory. Windows(tm) users may also find a template configuration file&#xA;in C:\ora2pg&#xA;&#xA;If you want to call another configuration file, just give the path as&#xA;command line argument:&#xA;&#xA;        /usr/local/bin/ora2pg -c /etc/ora2pg/new_ora2pg.conf&#xA;&#xA;Here are all command line parameters available when using ora2pg:&#xA;&#xA;Usage: ora2pg [-dhpqv --estimate_cost --dump_as_html] [--option value]&#xA;&#xA;    -a | --allow str  : Comma separated list of objects to allow from export.&#xA;                        Can be used with SHOW_COLUMN too.&#xA;    -b | --basedir dir: Set the default output directory, where files&#xA;                        resulting from exports will be stored.&#xA;    -c | --conf file  : Set an alternate configuration file other than the&#xA;                        default /etc/ora2pg/ora2pg.conf.&#xA;    -d | --debug      : Enable verbose output.&#xA;    -D | --data_type str : Allow custom type replacement at command line.&#xA;    -e | --exclude str: Comma separated list of objects to exclude from export.&#xA;                        Can be used with SHOW_COLUMN too.&#xA;    -h | --help       : Print this short help.&#xA;    -g | --grant_object type : Extract privilege from the given object type.&#xA;                        See possible values with GRANT_OBJECT configuration.&#xA;    -i | --input file : File containing Oracle PL/SQL code to convert with&#xA;                        no Oracle database connection initiated.&#xA;    -j | --jobs num   : Number of parallel process to send data to PostgreSQL.&#xA;    -J | --copies num : Number of parallel connections to extract data from Oracle.&#xA;    -l | --log file   : Set a log file. Default is stdout.&#xA;    -L | --limit num  : Number of tuples extracted from Oracle and stored in&#xA;                        memory before writing, default: 10000.&#xA;    -m | --mysql      : Export a MySQL database instead of an Oracle schema.&#xA;    -n | --namespace schema : Set the Oracle schema to extract from.&#xA;    -N | --pg_schema schema : Set PostgreSQL&#39;s search_path.&#xA;    -o | --out file   : Set the path to the output file where SQL will&#xA;                        be written. Default: output.sql in running directory.&#xA;    -p | --plsql      : Enable PLSQL to PLPGSQL code conversion.&#xA;    -P | --parallel num: Number of parallel tables to extract at the same time.&#xA;    -q | --quiet      : Disable progress bar.&#xA;    -r | --relative   : use \ir instead of \i in the psql scripts generated.&#xA;    -s | --source DSN : Allow to set the Oracle DBI datasource.&#xA;    -S | --scn    SCN : Allow to set the Oracle System Change Number (SCN)&#xA;    -t | --type export: Set the export type. It will override the one&#xA;                        given in the configuration file (TYPE).&#xA;    -T | --temp_dir dir: Set a distinct temporary directory when two&#xA;                         or more ora2pg are run in parallel.&#xA;    -u | --user name  : Set the Oracle database connection user.&#xA;                        ORA2PG_USER environment variable can be used instead.&#xA;    -v | --version    : Show Ora2Pg Version and exit.&#xA;    -w | --password pwd : Set the password of the Oracle database user.&#xA;                        ORA2PG_PASSWD environment variable can be used instead.&#xA;    -W | --where clause : Set the WHERE clause to apply to the Oracle query to&#xA;                          retrieve data. Can be used multiple time.&#xA;    --forceowner      : Force ora2pg to set tables and sequences owner like in&#xA;                  Oracle database. If the value is set to a username this one&#xA;                  will be used as the objects owner. By default it&#39;s the user&#xA;                  used to connect to the Pg database that will be the owner.&#xA;    --nls_lang code: Set the Oracle NLS_LANG client encoding.&#xA;    --client_encoding code: Set the PostgreSQL client encoding.&#xA;    --view_as_table str: Comma separated list of views to export as table.&#xA;    --estimate_cost   : Activate the migration cost evaluation with SHOW_REPORT&#xA;    --cost_unit_value minutes: Number of minutes for a cost evaluation unit.&#xA;                  default: 5 minutes, corresponds to a migration conducted by a&#xA;                  PostgreSQL expert. Set it to 10 if this is your first migration.&#xA;   --dump_as_html     : Force ora2pg to dump report in HTML, used only with&#xA;                        SHOW_REPORT. Default is to dump report as simple text.&#xA;   --dump_as_csv      : As above but force ora2pg to dump report in CSV.&#xA;   --dump_as_sheet    : Report migration assessment with one CSV line per database.&#xA;   --init_project name: Initialise a typical ora2pg project tree. Top directory&#xA;                        will be created under project base dir.&#xA;   --project_base dir : Define the base dir for ora2pg project trees. Default&#xA;                        is current directory.&#xA;   --print_header     : Used with --dump_as_sheet to print the CSV header&#xA;                        especially for the first run of ora2pg.&#xA;   --human_days_limit num : Set the number of human-days limit where the migration&#xA;                        assessment level switch from B to C. Default is set to&#xA;                        5 human-days.&#xA;   --audit_user list  : Comma separated list of usernames to filter queries in&#xA;                        the DBA_AUDIT_TRAIL table. Used only with SHOW_REPORT&#xA;                        and QUERY export type.&#xA;   --pg_dsn DSN       : Set the datasource to PostgreSQL for direct import.&#xA;   --pg_user name     : Set the PostgreSQL user to use.&#xA;   --pg_pwd password  : Set the PostgreSQL password to use.&#xA;   --count_rows       : Force ora2pg to perform a real row count in TEST action.&#xA;   --no_header        : Do not append Ora2Pg header to output file&#xA;   --oracle_speed     : Use to know at which speed Oracle is able to send&#xA;                        data. No data will be processed or written.&#xA;   --ora2pg_speed     : Use to know at which speed Ora2Pg is able to send&#xA;                        transformed data. Nothing will be written.&#xA;   --blob_to_lo       : export BLOB as large objects, can only be used with&#xA;                        action SHOW_COLUMN, TABLE and INSERT.&#xA;   --cdc_ready        : use current SCN per table to export data and register&#xA;                        them into a file named TABLES_SCN.log&#xA;   --lo_import        : use psql \lo_import command to import BLOB as large&#xA;                        object. Can be use to import data with COPY and import&#xA;                        large object manually in a second pass. It is recquired&#xA;                        for BLOB &amp;gt; 1GB. See documentation for more explanation.&#xA;&#xA;See full documentation at https://ora2pg.darold.net/ for more help or&#xA;see manpage with &#39;man ora2pg&#39;.&#xA;&#xA;ora2pg will return 0 on success, 1 on error. It will return 2 when a&#xA;child process has been interrupted and you&#39;ve gotten the warning&#xA;message: &#34;WARNING: an error occurs during data export. Please check&#xA;what&#39;s happen.&#34; Most of the time this is an OOM issue, first try&#xA;reducing DATA_LIMIT value.&#xA;&#xA;For developers, it is possible to add your own custom option(s) in the&#xA;Perl script ora2pg as any configuration directive from ora2pg.conf can&#xA;be passed in lower case to the new Ora2Pg object instance. See ora2pg&#xA;code on how to add your own option.&#xA;&#xA;Note that performance might be improved by updating stats on oracle:&#xA;&#xA;        BEGIN&#xA;        DBMS_STATS.GATHER_SCHEMA_STATS&#xA;        DBMS_STATS.GATHER_DATABASE_STATS &#xA;        DBMS_STATS.GATHER_DICTIONARY_STATS&#xA;        END;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generate a migration template The two options --project_base and --init_project when used indicate to ora2pg that he has to create a project template with a work tree, a configuration file and a script to export all objects from the Oracle database. Here a sample of the command usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        ora2pg --project_base /app/migration/ --init_project test_project&#xA;        Creating project test_project.&#xA;        /app/migration/test_project/&#xA;                schema/&#xA;                        dblinks/&#xA;                        directories/&#xA;                        functions/&#xA;                        grants/&#xA;                        mviews/&#xA;                        packages/&#xA;                        partitions/&#xA;                        procedures/&#xA;                        sequences/&#xA;                        synonyms/&#xA;                        tables/&#xA;                        tablespaces/&#xA;                        triggers/&#xA;                        types/&#xA;                        views/&#xA;                sources/&#xA;                        functions/&#xA;                        mviews/&#xA;                        packages/&#xA;                        partitions/&#xA;                        procedures/&#xA;                        triggers/&#xA;                        types/&#xA;                        views/&#xA;                data/&#xA;                config/&#xA;                reports/&#xA;&#xA;        Generating generic configuration file&#xA;        Creating script export_schema.sh to automate all exports.&#xA;        Creating script import_all.sh to automate all imports.&#xA;&#xA;It create a generic config file where you just have to define the Oracle&#xA;database connection and a shell script called export_schema.sh. The&#xA;sources/ directory will contains the Oracle code, the schema/ will&#xA;contains the code ported to PostgreSQL. The reports/ directory will&#xA;contains the html reports with the migration cost assessment.&#xA;&#xA;If you want to use your own default config file, use the -c option to&#xA;give the path to that file. Rename it with .dist suffix if you want&#xA;ora2pg to apply the generic configuration values otherwise, the&#xA;configuration file will be copied untouched.&#xA;&#xA;Once you have set the connection to the Oracle Database you can execute&#xA;the script export_schema.sh that will export all object type from your&#xA;Oracle database and output DDL files into the schema&#39;s subdirectories.&#xA;At end of the export it will give you the command to export data later&#xA;when the import of the schema will be done and verified.&#xA;&#xA;You can choose to load the DDL files generated manually or use the&#xA;second script import_all.sh to import those file interactively. If this&#xA;kind of migration is not something current for you it&#39;s recommended you&#xA;to use those scripts.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Oracle database connection There&#39;s 5 configuration directives to control the access to the Oracle database.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ORACLE_HOME&#xA;    Used to set ORACLE_HOME environment variable to the Oracle libraries&#xA;    required by the DBD::Oracle Perl module.&#xA;&#xA;ORACLE_DSN&#xA;    This directive is used to set the data source name in the form&#xA;    standard DBI DSN. For example:&#xA;&#xA;            dbi:Oracle:host=oradb_host.myhost.com;sid=DB_SID;port=1521&#xA;&#xA;    or&#xA;&#xA;            dbi:Oracle:DB_SID&#xA;&#xA;    On 18c this could be for example:&#xA;&#xA;            dbi:Oracle:host=192.168.1.29;service_name=pdb1;port=1521&#xA;&#xA;    for the second notation the SID should be declared in the well known&#xA;    file $ORACLE_HOME/network/admin/tnsnames.ora or in the path given to&#xA;    the TNS_ADMIN environment variable.&#xA;&#xA;    For MySQL the DSN will lool like this:&#xA;&#xA;            dbi:mysql:host=192.168.1.10;database=sakila;port=3306&#xA;&#xA;    the &#39;sid&#39; part is replaced by &#39;database&#39;.&#xA;&#xA;ORACLE_USER et ORACLE_PWD&#xA;    These two directives are used to define the user and password for&#xA;    the Oracle database connection. Note that if you can it is better to&#xA;    login as Oracle super admin to avoid grants problem during the&#xA;    database scan and be sure that nothing is missing.&#xA;&#xA;    If you do not supply a credential with ORACLE_PWD and you have&#xA;    installed the Term::ReadKey Perl module, Ora2Pg will ask for the&#xA;    password interactively. If ORACLE_USER is not set it will be asked&#xA;    interactively too.&#xA;&#xA;    To connect to a local ORACLE instance with connections &#34;as sysdba&#34;&#xA;    you have to set ORACLE_USER to &#34;/&#34; and an empty password.&#xA;&#xA;USER_GRANTS&#xA;    Set this directive to 1 if you connect the Oracle database as simple&#xA;    user and do not have enough grants to extract things from the&#xA;    DBA_... tables. It will use tables ALL_... instead.&#xA;&#xA;    Warning: if you use export type GRANT, you must set this&#xA;    configuration option to 0 or it will not work.&#xA;&#xA;TRANSACTION&#xA;    This directive may be used if you want to change the default&#xA;    isolation level of the data export transaction. Default is now to&#xA;    set the level to a serializable transaction to ensure data&#xA;    consistency. The allowed values for this directive are:&#xA;&#xA;            readonly: &#39;SET TRANSACTION READ ONLY&#39;,&#xA;            readwrite: &#39;SET TRANSACTION READ WRITE&#39;,&#xA;            serializable: &#39;SET TRANSACTION ISOLATION LEVEL SERIALIZABLE&#39;&#xA;            committed: &#39;SET TRANSACTION ISOLATION LEVEL READ COMMITTED&#39;,&#xA;&#xA;    Releases before 6.2 used to set the isolation level to READ ONLY&#xA;    transaction but in some case this was breaking data consistency so&#xA;    now default is set to SERIALIZABLE.&#xA;&#xA;INPUT_FILE&#xA;    This directive did not control the Oracle database connection or&#xA;    unless it purely disables the use of any Oracle database by&#xA;    accepting a file as argument. Set this directive to a file&#xA;    containing PL/SQL Oracle Code like function, procedure or full&#xA;    package body to prevent Ora2Pg from connecting to an Oracle database&#xA;    and just apply his conversion tool to the content of the file. This&#xA;    can be used with the most of export types: TABLE, TRIGGER,&#xA;    PROCEDURE, VIEW, FUNCTION or PACKAGE, etc.&#xA;&#xA;ORA_INITIAL_COMMAND&#xA;    This directive can be used to send an initial command to Oracle,&#xA;    just after the connection. For example to unlock a policy before&#xA;    reading objects or to set some session parameters. This directive&#xA;    can be used multiple times.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Data encryption with Oracle server If your Oracle Client config file already includes the encryption method, then DBD:Oracle uses those settings to encrypt the connection while you extract the data. For example if you have configured the Oracle Client config file (sqlnet.or or .sqlnet) with the following information:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        # Configure encryption of connections to Oracle&#xA;        SQLNET.ENCRYPTION_CLIENT = required&#xA;        SQLNET.ENCRYPTION_TYPES_CLIENT = (AES256, RC4_256)&#xA;        SQLNET.CRYPTO_SEED = &#39;should be 10-70 random characters&#39;&#xA;&#xA;Any tool that uses the Oracle client to talk to the database will be&#xA;encrypted if you setup session encryption like above.&#xA;&#xA;For example, Perl&#39;s DBI uses DBD-Oracle, which uses the Oracle client&#xA;for actually handling database communication. If the installation of&#xA;Oracle client used by Perl is setup to request encrypted connections,&#xA;then your Perl connection to an Oracle database will also be encrypted.&#xA;&#xA;Full details at&#xA;https://kb.berkeley.edu/jivekb/entry.jspa?externalID=1005&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Testing connection Once you have set the Oracle database DSN you can execute ora2pg to see if it works:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        ora2pg -t SHOW_VERSION -c config/ora2pg.conf&#xA;&#xA;will show the Oracle database server version. Take some time here to&#xA;test your installation as most problems take place here, the other&#xA;configuration steps are more technical.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Troubleshooting If the output.sql file has not exported anything other than the Pg transaction header and footer there&#39;s two possible reasons. The perl script ora2pg dump an ORA-XXX error, that mean that your DSN or login information are wrong, check the error and your settings and try again. The perl script says nothing and the output file is empty: the user lacks permission to extract something from the database. Try to connect to Oracle as super user or take a look at directive USER_GRANTS above and at next section, especially the SCHEMA directive.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;LOGFILE&#xA;    By default all messages are sent to the standard output. If you give&#xA;    a file path to that directive, all output will be appended to this&#xA;    file.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Oracle schema to export The Oracle database export can be limited to a specific Schema or Namespace, this can be mandatory following the database connection user.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;SCHEMA&#xA;    This directive is used to set the schema name to use during export.&#xA;    For example:&#xA;&#xA;            SCHEMA  APPS&#xA;&#xA;    will extract objects associated to the APPS schema.&#xA;&#xA;    When no schema name is provided and EXPORT_SCHEMA is enabled, Ora2Pg&#xA;    will export all objects from all schema of the Oracle instance with&#xA;    their names prefixed with the schema name.&#xA;&#xA;EXPORT_SCHEMA&#xA;    By default the Oracle schema is not exported into the PostgreSQL&#xA;    database and all objects are created under the default Pg namespace.&#xA;    If you want to also export this schema and create all objects under&#xA;    this namespace, set the EXPORT_SCHEMA directive to 1. This will set&#xA;    the schema search_path at top of export SQL file to the schema name&#xA;    set in the SCHEMA directive with the default pg_catalog schema. If&#xA;    you want to change this path, use the directive PG_SCHEMA.&#xA;&#xA;CREATE_SCHEMA&#xA;    Enable/disable the CREATE SCHEMA SQL order at starting of the output&#xA;    file. It is enable by default and concern on TABLE export type.&#xA;&#xA;COMPILE_SCHEMA&#xA;    By default Ora2Pg will only export valid PL/SQL code. You can force&#xA;    Oracle to compile again the invalidated code to get a chance to have&#xA;    it obtain the valid status and then be able to export it.&#xA;&#xA;    Enable this directive to force Oracle to compile schema before&#xA;    exporting code. When this directive is enabled and SCHEMA is set to&#xA;    a specific schema name, only invalid objects in this schema will be&#xA;    recompiled. If SCHEMA is not set then all schema will be recompiled.&#xA;    To force recompile invalid object in a specific schema, set&#xA;    COMPILE_SCHEMA to the schema name you want to recompile.&#xA;&#xA;    This will ask to Oracle to validate the PL/SQL that could have been&#xA;    invalidate after a export/import for example. The &#39;VALID&#39; or&#xA;    &#39;INVALID&#39; status applies to functions, procedures, packages and user&#xA;    defined types.&#xA;&#xA;EXPORT_INVALID&#xA;    If the above configuration directive is not enough to validate your&#xA;    PL/SQL code enable this configuration directive to allow export of&#xA;    all PL/SQL code even if it is marked as invalid. The &#39;VALID&#39; or&#xA;    &#39;INVALID&#39; status applies to functions, procedures, packages and user&#xA;    defined types.&#xA;&#xA;PG_SCHEMA&#xA;    Allow you to defined/force the PostgreSQL schema to use. By default&#xA;    if you set EXPORT_SCHEMA to 1 the PostgreSQL search_path will be set&#xA;    to the schema name exported set as value of the SCHEMA directive.&#xA;&#xA;    The value can be a comma delimited list of schema name but not when&#xA;    using TABLE export type because in this case it will generate the&#xA;    CREATE SCHEMA statement and it doesn&#39;t support multiple schema name.&#xA;    For example, if you set PG_SCHEMA to something like &#34;user_schema,&#xA;    public&#34;, the search path will be set like this:&#xA;&#xA;            SET search_path = user_schema, public;&#xA;&#xA;    forcing the use of an other schema (here user_schema) than the one&#xA;    from Oracle schema set in the SCHEMA directive.&#xA;&#xA;    You can also set the default search_path for the PostgreSQL user you&#xA;    are using to connect to the destination database by using:&#xA;&#xA;            ALTER ROLE username SET search_path TO user_schema, public;&#xA;&#xA;    in this case you don&#39;t have to set PG_SCHEMA.&#xA;&#xA;SYSUSERS&#xA;    Without explicit schema, Ora2Pg will export all objects that not&#xA;    belongs to system schema or role:&#xA;&#xA;            SYSTEM,CTXSYS,DBSNMP,EXFSYS,LBACSYS,MDSYS,MGMT_VIEW,&#xA;            OLAPSYS,ORDDATA,OWBSYS,ORDPLUGINS,ORDSYS,OUTLN,&#xA;            SI_INFORMTN_SCHEMA,SYS,SYSMAN,WK_TEST,WKSYS,WKPROXY,&#xA;            WMSYS,XDB,APEX_PUBLIC_USER,DIP,FLOWS_020100,FLOWS_030000,&#xA;            FLOWS_040100,FLOWS_010600,FLOWS_FILES,MDDATA,ORACLE_OCM,&#xA;            SPATIAL_CSW_ADMIN_USR,SPATIAL_WFS_ADMIN_USR,XS$NULL,PERFSTAT,&#xA;            SQLTXPLAIN,DMSYS,TSMSYS,WKSYS,APEX_040000,APEX_040200,&#xA;            DVSYS,OJVMSYS,GSMADMIN_INTERNAL,APPQOSSYS,DVSYS,DVF,&#xA;            AUDSYS,APEX_030200,MGMT_VIEW,ODM,ODM_MTR,TRACESRV,MTMSYS,&#xA;            OWBSYS_AUDIT,WEBSYS,WK_PROXY,OSE$HTTP$ADMIN,&#xA;            AURORA$JIS$UTILITY$,AURORA$ORB$UNAUTHENTICATED,&#xA;            DBMS_PRIVILEGE_CAPTURE,CSMIG,MGDSYS,SDE,DBSFWUSER&#xA;&#xA;    Following your Oracle installation you may have several other system&#xA;    role defined. To append these users to the schema exclusion list,&#xA;    just set the SYSUSERS configuration directive to a comma-separated&#xA;    list of system user to exclude. For example:&#xA;&#xA;            SYSUSERS        INTERNAL,SYSDBA,BI,HR,IX,OE,PM,SH&#xA;&#xA;    will add users INTERNAL and SYSDBA to the schema exclusion list.&#xA;&#xA;FORCE_OWNER&#xA;    By default the owner of the database objects is the one you&#39;re using&#xA;    to connect to PostgreSQL using the psql command. If you use an other&#xA;    user (postgres for example) you can force Ora2Pg to set the object&#xA;    owner to be the one used in the Oracle database by setting the&#xA;    directive to 1, or to a completely different username by setting the&#xA;    directive value to that username.&#xA;&#xA;FORCE_SECURITY_INVOKER&#xA;    Ora2Pg use the function&#39;s security privileges set in Oracle and it&#xA;    is often defined as SECURITY DEFINER. If you want to override those&#xA;    security privileges for all functions and use SECURITY DEFINER&#xA;    instead, enable this directive.&#xA;&#xA;USE_TABLESPACE&#xA;    When enabled this directive force ora2pg to export all tables,&#xA;    indexes constraint and indexes using the tablespace name defined in&#xA;    Oracle database. This works only with tablespace that are not TEMP,&#xA;    USERS and SYSTEM.&#xA;&#xA;WITH_OID&#xA;    Activating this directive will force Ora2Pg to add WITH (OIDS) when&#xA;    creating tables or views as tables. Default is same as PostgreSQL,&#xA;    disabled.&#xA;&#xA;LOOK_FORWARD_FUNCTION&#xA;    List of schema to get functions/procedures meta information that are&#xA;    used in the current schema export. When replacing call to function&#xA;    with OUT parameters, if a function is declared in an other package&#xA;    then the function call rewriting can not be done because Ora2Pg only&#xA;    knows about functions declared in the current schema. By setting a&#xA;    comma separated list of schema as value of this directive, Ora2Pg&#xA;    will look forward in these packages for all&#xA;    functions/procedures/packages declaration before proceeding to&#xA;    current schema export.&#xA;&#xA;NO_FUNCTION_METADATA&#xA;    Force Ora2Pg to not look for function declaration. Note that this&#xA;    will prevent Ora2Pg to rewrite function replacement call if needed.&#xA;    Do not enable it unless looking forward at function breaks other&#xA;    export.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Export type The export action is perform following a single configuration directive &#39;TYPE&#39;, some other add more control on what should be really exported.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TYPE&#xA;    Here are the different values of the TYPE directive, default is&#xA;    TABLE:&#xA;&#xA;            - TABLE: Extract all tables with indexes, primary keys, unique keys,&#xA;              foreign keys and check constraints.&#xA;            - VIEW: Extract only views.&#xA;            - GRANT: Extract roles converted to Pg groups, users and grants on all&#xA;              objects.&#xA;            - SEQUENCE: Extract all sequence and their last position.&#xA;            - TABLESPACE: Extract storage spaces for tables and indexes (Pg &amp;gt;= v8).&#xA;            - TRIGGER: Extract triggers defined following actions.&#xA;            - FUNCTION: Extract functions.&#xA;            - PROCEDURE: Extract procedures.&#xA;            - PACKAGE: Extract packages and package bodies.&#xA;            - INSERT: Extract data as INSERT statement.&#xA;            - COPY: Extract data as COPY statement.&#xA;            - PARTITION: Extract range and list Oracle partitions with subpartitions.&#xA;            - TYPE: Extract user defined Oracle type.&#xA;            - FDW: Export Oracle tables as foreign table for oracle_fdw.&#xA;            - MVIEW: Export materialized view.&#xA;            - QUERY: Try to automatically convert Oracle SQL queries.&#xA;            - KETTLE: Generate XML ktr template files to be used by Kettle.&#xA;            - DBLINK: Generate oracle foreign data wrapper server to use as dblink.&#xA;            - SYNONYM: Export Oracle&#39;s synonyms as views on other schema&#39;s objects.&#xA;            - DIRECTORY: Export Oracle&#39;s directories as external_file extension objects.&#xA;            - LOAD: Dispatch a list of queries over multiple PostgreSQl connections.&#xA;            - TEST: perform a diff between Oracle and PostgreSQL database.&#xA;            - TEST_COUNT: perform a row count diff between Oracle and PostgreSQL table.&#xA;            - TEST_VIEW: perform a count on both side of number of rows returned by views.&#xA;            - TEST_DATA: perform data validation check on rows at both sides.&#xA;&#xA;    Only one type of export can be perform at the same time so the TYPE&#xA;    directive must be unique. If you have more than one only the last&#xA;    found in the file will be registered.&#xA;&#xA;    Some export type can not or should not be load directly into the&#xA;    PostgreSQL database and still require little manual editing. This is&#xA;    the case for GRANT, TABLESPACE, TRIGGER, FUNCTION, PROCEDURE, TYPE,&#xA;    QUERY and PACKAGE export types especially if you have PLSQL code or&#xA;    Oracle specific SQL in it.&#xA;&#xA;    For TABLESPACE you must ensure that file path exist on the system&#xA;    and for SYNONYM you may ensure that the object&#39;s owners and schemas&#xA;    correspond to the new PostgreSQL database design.&#xA;&#xA;    Note that you can chained multiple export by giving to the TYPE&#xA;    directive a comma-separated list of export type, but in this case&#xA;    you must not use COPY or INSERT with other export type.&#xA;&#xA;    Ora2Pg will convert Oracle partition using table inheritance,&#xA;    trigger and functions. See document at Pg site:&#xA;    http://www.postgresql.org/docs/current/interactive/ddl-partitioning.&#xA;    html&#xA;&#xA;    The TYPE export allow export of user defined Oracle type. If you&#xA;    don&#39;t use the --plsql command line parameter it simply dump Oracle&#xA;    user type asis else Ora2Pg will try to convert it to PostgreSQL&#xA;    syntax.&#xA;&#xA;    The KETTLE export type requires that the Oracle and PostgreSQL DNS&#xA;    are defined.&#xA;&#xA;    Since Ora2Pg v8.1 there&#39;s three new export types:&#xA;&#xA;            SHOW_VERSION : display Oracle version&#xA;            SHOW_SCHEMA  : display the list of schema available in the database.&#xA;            SHOW_TABLE   : display the list of tables available.&#xA;            SHOW_COLUMN  : display the list of tables columns available and the&#xA;                    Ora2PG conversion type from Oracle to PostgreSQL that will be&#xA;                    applied. It will also warn you if there&#39;s PostgreSQL reserved&#xA;                    words in Oracle object names.&#xA;&#xA;    Here is an example of the SHOW_COLUMN output:&#xA;&#xA;            [2] TABLE CURRENT_SCHEMA (1 rows) (Warning: &#39;CURRENT_SCHEMA&#39; is a reserved word in PostgreSQL)&#xA;                    CONSTRAINT : NUMBER(22) =&amp;gt; bigint (Warning: &#39;CONSTRAINT&#39; is a reserved word in PostgreSQL)&#xA;                    FREEZE : VARCHAR2(25) =&amp;gt; varchar(25) (Warning: &#39;FREEZE&#39; is a reserved word in PostgreSQL)&#xA;            ...&#xA;            [6] TABLE LOCATIONS (23 rows)&#xA;                    LOCATION_ID : NUMBER(4) =&amp;gt; smallint&#xA;                    STREET_ADDRESS : VARCHAR2(40) =&amp;gt; varchar(40)&#xA;                    POSTAL_CODE : VARCHAR2(12) =&amp;gt; varchar(12)&#xA;                    CITY : VARCHAR2(30) =&amp;gt; varchar(30)&#xA;                    STATE_PROVINCE : VARCHAR2(25) =&amp;gt; varchar(25)&#xA;                    COUNTRY_ID : CHAR(2) =&amp;gt; char(2)&#xA;&#xA;    Those extraction keywords are use to only display the requested&#xA;    information and exit. This allows you to quickly know on what you&#xA;    are going to work.&#xA;&#xA;    The SHOW_COLUMN allow an other ora2pg command line option: &#39;--allow&#xA;    relname&#39; or &#39;-a relname&#39; to limit the displayed information to the&#xA;    given table.&#xA;&#xA;    The SHOW_ENCODING export type will display the NLS_LANG and&#xA;    CLIENT_ENCODING values that Ora2Pg will used and the real encoding&#xA;    of the Oracle database with the corresponding client encoding that&#xA;    could be used with PostgreSQL&#xA;&#xA;    Since release v8.12, Ora2Pg allow you to export your Oracle Table&#xA;    definition to be use with the oracle_fdw foreign data wrapper. By&#xA;    using type FDW your Oracle tables will be exported as follow:&#xA;&#xA;            CREATE FOREIGN TABLE oratab (&#xA;                    id        integer           NOT NULL,&#xA;                    text      character varying(30),&#xA;                    floating  double precision  NOT NULL&#xA;            ) SERVER oradb OPTIONS (table &#39;ORATAB&#39;);&#xA;&#xA;    Now you can use the table like a regular PostgreSQL table.&#xA;&#xA;    See http://pgxn.org/dist/oracle_fdw/ for more information on this&#xA;    foreign data wrapper.&#xA;&#xA;    Release 10 adds a new export type destined to evaluate the content&#xA;    of the database to migrate, in terms of objects and cost to end the&#xA;    migration:&#xA;&#xA;            SHOW_REPORT  : show a detailed report of the Oracle database content.&#xA;&#xA;    Here is a sample of report: http://ora2pg.darold.net/report.html&#xA;&#xA;    There also a more advanced report with migration cost. See the&#xA;    dedicated chapter about Migration Cost Evaluation.&#xA;&#xA;ESTIMATE_COST&#xA;    Activate the migration cost evaluation. Must only be used with&#xA;    SHOW_REPORT, FUNCTION, PROCEDURE, PACKAGE and QUERY export type.&#xA;    Default is disabled. You may want to use the --estimate_cost command&#xA;    line option instead to activate this functionality. Note that&#xA;    enabling this directive will force PLSQL_PGSQL activation.&#xA;&#xA;COST_UNIT_VALUE&#xA;    Set the value in minutes of the migration cost evaluation unit.&#xA;    Default is five minutes per unit. See --cost_unit_value to change&#xA;    the unit value at command line.&#xA;&#xA;DUMP_AS_HTML&#xA;    By default when using SHOW_REPORT the migration report is generated&#xA;    as simple text, enabling this directive will force ora2pg to create&#xA;    a report in HTML format.&#xA;&#xA;    See http://ora2pg.darold.net/report.html for a sample report.&#xA;&#xA;HUMAN_DAYS_LIMIT&#xA;    Use this directive to redefined the number of human-days limit where&#xA;    the migration assessment level must switch from B to C. Default is&#xA;    set to 10 human-days.&#xA;&#xA;JOBS&#xA;    This configuration directive adds multiprocess support to COPY,&#xA;    FUNCTION and PROCEDURE export type, the value is the number of&#xA;    process to use. Default is multiprocess disable.&#xA;&#xA;    This directive is used to set the number of cores to used to&#xA;    parallelize data import into PostgreSQL. During FUNCTION or&#xA;    PROCEDURE export type each function will be translated to plpgsql&#xA;    using a new process, the performances gain can be very important&#xA;    when you have tons of function to convert.&#xA;&#xA;    There&#39;s no limitation in parallel processing than the number of&#xA;    cores and the PostgreSQL I/O performance capabilities.&#xA;&#xA;    Doesn&#39;t work under Windows Operating System, it is simply disabled.&#xA;&#xA;ORACLE_COPIES&#xA;    This configuration directive adds multiprocess support to extract&#xA;    data from Oracle. The value is the number of process to use to&#xA;    parallelize the select query. Default is parallel query disable.&#xA;&#xA;    The parallelism is built on splitting the query following of the&#xA;    number of cores given as value to ORACLE_COPIES as follow:&#xA;&#xA;            SELECT * FROM MYTABLE WHERE ABS(MOD(COLUMN, ORACLE_COPIES)) = CUR_PROC&#xA;&#xA;    where COLUMN is a technical key like a primary or unique key where&#xA;    split will be based and the current core used by the query&#xA;    (CUR_PROC).&#xA;&#xA;    Doesn&#39;t work under Windows Operating System, it is simply disabled.&#xA;&#xA;DEFINED_PK&#xA;    This directive is used to defined the technical key to used to split&#xA;    the query between number of cores set with the ORACLE_COPIES&#xA;    variable. For example:&#xA;&#xA;            DEFINED_PK      EMPLOYEES:employee_id&#xA;&#xA;    The parallel query that will be used supposing that -J or&#xA;    ORACLE_COPIES is set to 8:&#xA;&#xA;            SELECT * FROM EMPLOYEES WHERE ABS(MOD(employee_id, 8)) = N&#xA;&#xA;    where N is the current process forked starting from 0.&#xA;&#xA;PARALLEL_TABLES&#xA;    This directive is used to defined the number of tables that will be&#xA;    processed in parallel for data extraction. The limit is the number&#xA;    of cores on your machine. Ora2Pg will open one database connection&#xA;    for each parallel table extraction. This directive, when upper than&#xA;    1, will invalidate ORACLE_COPIES but not JOBS, so the real number of&#xA;    process that will be used is PARALLEL_TABLES * JOBS.&#xA;&#xA;    Note that this directive when set upper that 1 will also&#xA;    automatically enable the FILE_PER_TABLE directive if your are&#xA;    exporting to files. This is used to export tables and views in&#xA;    separate files.&#xA;&#xA;DEFAULT_PARALLELISM_DEGREE&#xA;    You can force Ora2Pg to use /*+ PARALLEL(tbname, degree) */ hint in&#xA;    each query used to export data from Oracle by setting a value upper&#xA;    than 1 to this directive. A value of 0 or 1 disable the use of&#xA;    parallel hint. Default is disabled.&#xA;&#xA;FDW_SERVER&#xA;    This directive is used to set the name of the foreign data server&#xA;    that is used in the &#34;CREATE SERVER name FOREIGN DATA WRAPPER&#xA;    oracle_fdw ...&#34; command. This name will then be used in the &#34;CREATE&#xA;    FOREIGN TABLE ...&#34; SQL commands and to import data using oracle_fdw.&#xA;    Default is no foreign server defined. This only concerns export type&#xA;    FDW, COPY and INSERT. For export type FDW the default value is orcl.&#xA;&#xA;ORACLE_FDW_TRANSFORM&#xA;    Use this directive to precise which transformation should be applied&#xA;    to a column when exporting data. Value must be a semicolon separated&#xA;    list of&#xA;&#xA;       TABLE[COLUMN_NAME, &amp;lt;replace code in SELECT target list&amp;gt;]&#xA;&#xA;    For example to replace string &#39;Oracle&#39; by &#39;PostgreSQL&#39; in a varchar2&#xA;    column use the following.&#xA;&#xA;       ORACLE_FDW_TRANSFORM   ERROR_LOG_SAMPLE[DBMS_TYPE:regexp_replace(&#34;DBMS_TYPE&#34;,&#39;Oracle&#39;,&#39;PostgreSQL&#39;)]&#xA;&#xA;DROP_FOREIGN_SCHEMA&#xA;    By default Ora2Pg drops the temporary schema ora2pg_fdw_import used&#xA;    to import the Oracle foreign schema before each new import. If you&#xA;    want to preserve the existing schema because of modifications or the&#xA;    use of a third party server, disable this directive.&#xA;&#xA;EXTERNAL_TO_FDW&#xA;    This directive, enabled by default, allow to export Oracle&#39;s&#xA;    External Tables as file_fdw foreign tables. To not export these&#xA;    tables at all, set the directive to 0.&#xA;&#xA;INTERNAL_DATE_MAX&#xA;    Internal timestamp retrieves from custom type are extracted in the&#xA;    following format: 01-JAN-77 12.00.00.000000 AM. It is impossible to&#xA;    know the exact century that must be used, so by default any year&#xA;    below 49 will be added to 2000 and others to 1900. You can use this&#xA;    directive to change the default value 49. this is only relevant if&#xA;    you have user defined type with a column timestamp.&#xA;&#xA;AUDIT_USER&#xA;    Set the comma separated list of username that must be used to filter&#xA;    queries from the DBA_AUDIT_TRAIL table. Default is to not scan this&#xA;    table and to never look for queries. This parameter is used only&#xA;    with SHOW_REPORT and QUERY export type with no input file for&#xA;    queries. Note that queries will be normalized before output unlike&#xA;    when a file is given at input using the -i option or INPUT&#xA;    directive.&#xA;&#xA;FUNCTION_CHECK&#xA;    Disable this directive if you want to disable check_function_bodies.&#xA;&#xA;            SET check_function_bodies = false;&#xA;&#xA;    It disables validation of the function body string during CREATE&#xA;    FUNCTION. Default is to use de postgresql.conf setting that enable&#xA;    it by default.&#xA;&#xA;ENABLE_BLOB_EXPORT&#xA;    Exporting BLOB takes time, in some circumstances you may want to&#xA;    export all data except the BLOB columns. In this case disable this&#xA;    directive and the BLOB columns will not be included into data&#xA;    export. Take care that the target bytea column do not have a NOT&#xA;    NULL constraint.&#xA;&#xA;DATA_EXPORT_ORDER&#xA;    By default data export order will be done by sorting on table name.&#xA;    If you have huge tables at end of alphabetic order and you are using&#xA;    multiprocess, it can be better to set the sort order on size so that&#xA;    multiple small tables can be processed before the largest tables&#xA;    finish. In this case set this directive to size. Possible values are&#xA;    name and size. Note that export type SHOW_TABLE and SHOW_COLUMN will&#xA;    use this sort order too, not only COPY or INSERT export type.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Limiting objects to export You may want to export only a part of an Oracle database, here are a set of configuration directives that will allow you to control what parts of the database should be exported.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ALLOW&#xA;    This directive allows you to set a list of objects on which the&#xA;    export must be limited, excluding all other objects in the same type&#xA;    of export. The value is a space or comma-separated list of objects&#xA;    name to export. You can include valid regex into the list. For&#xA;    example:&#xA;&#xA;            ALLOW           EMPLOYEES SALE_.* COUNTRIES .*_GEOM_SEQ&#xA;&#xA;    will export objects with name EMPLOYEES, COUNTRIES, all objects&#xA;    beginning with &#39;SALE_&#39; and all objects with a name ending by&#xA;    &#39;_GEOM_SEQ&#39;. The object depends of the export type. Note that regex&#xA;    will not works with 8i database, you must use the % placeholder&#xA;    instead, Ora2Pg will use the LIKE operator.&#xA;&#xA;    This is the manner to declare global filters that will be used with&#xA;    the current export type. You can also use extended filters that will&#xA;    be applied on specific objects or only on their related export type.&#xA;    For example:&#xA;&#xA;            ora2pg -p -c ora2pg.conf -t TRIGGER -a &#39;TABLE[employees]&#39;&#xA;&#xA;    will limit export of trigger to those defined on table employees. If&#xA;    you want to extract all triggers but not some INSTEAD OF triggers:&#xA;&#xA;            ora2pg -c ora2pg.conf -t TRIGGER -e &#39;VIEW[trg_view_.*]&#39;&#xA;&#xA;    Or a more complex form:&#xA;&#xA;            ora2pg -p -c ora2pg.conf -t TABLE -a &#39;TABLE[EMPLOYEES]&#39; \&#xA;                    -e &#39;INDEX[emp_.*];CKEY[emp_salary_min]&#39;&#xA;&#xA;    This command will export the definition of the employee table but&#xA;    will exclude all index beginning with &#39;emp_&#39; and the CHECK&#xA;    constraint called &#39;emp_salary_min&#39;.&#xA;&#xA;    When exporting partition you can exclude some partition tables by&#xA;    using&#xA;&#xA;            ora2pg -p -c ora2pg.conf -t PARTITION -e &#39;PARTITION[PART_199.* PART_198.*]&#39;&#xA;&#xA;    This will exclude partitioned tables for year 1980 to 1999 from the&#xA;    export but not the main partition table. The trigger will also be&#xA;    adapted to exclude those table.&#xA;&#xA;    With GRANT export you can use this extended form to exclude some&#xA;    users from the export or limit the export to some others:&#xA;&#xA;            ora2pg -p -c ora2pg.conf -t GRANT -a &#39;USER1 USER2&#39;&#xA;&#xA;    or&#xA;&#xA;            ora2pg -p -c ora2pg.conf -t GRANT -a &#39;GRANT[USER1 USER2]&#39;&#xA;&#xA;    will limit export grants to users USER1 and USER2. But if you don&#39;t&#xA;    want to export grants on some functions for these users, for&#xA;    example:&#xA;&#xA;            ora2pg -p -c ora2pg.conf -t GRANT -a &#39;USER1 USER2&#39; -e &#39;FUNCTION[adm_.*];PROCEDURE[adm_.*]&#39;&#xA;&#xA;    Advanced filters may need some learning.&#xA;&#xA;    Oracle doesn&#39;t allow the use of lookahead expression so you may want&#xA;    to exclude some object that match the ALLOW regexp you have defined.&#xA;    For example if you want to export all table starting with E but not&#xA;    those starting with EXP it is not possible to do that in a single&#xA;    expression. This is why you can start a regular expression with the&#xA;    ! character to exclude object matching the regexp given just after.&#xA;    Our previous example can be written as follow:&#xA;&#xA;            ALLOW   E.* !EXP.*&#xA;&#xA;    it will be translated into:&#xA;&#xA;             REGEXP_LIKE(..., &#39;^E.*$&#39;) AND NOT REGEXP_LIKE(..., &#39;^EXP.*$&#39;)&#xA;&#xA;    in the object search expression.&#xA;&#xA;EXCLUDE&#xA;    This directive is the opposite of the previous, it allow you to&#xA;    define a space or comma-separated list of object name to exclude&#xA;    from the export. You can include valid regex into the list. For&#xA;    example:&#xA;&#xA;            EXCLUDE         EMPLOYEES TMP_.* COUNTRIES&#xA;&#xA;    will exclude object with name EMPLOYEES, COUNTRIES and all tables&#xA;    beginning with &#39;tmp_&#39;.&#xA;&#xA;    For example, you can ban from export some unwanted function with&#xA;    this directive:&#xA;&#xA;            EXCLUDE         write_to_.* send_mail_.*&#xA;&#xA;    this example will exclude all functions, procedures or functions in&#xA;    a package with the name beginning with those regex. Note that regex&#xA;    will not work with 8i database, you must use the % placeholder&#xA;    instead, Ora2Pg will use the NOT LIKE operator.&#xA;&#xA;    See above (directive &#39;ALLOW&#39;) for the extended syntax.&#xA;&#xA;NO_EXCLUDED_TABLE&#xA;    By default Ora2Pg exclude from export some Oracle &#34;garbage&#34; tables&#xA;    that should never be part of an export. This behavior generates a&#xA;    lot of REGEXP_LIKE expressions which are slowing down the export&#xA;    when looking at tables. To disable this behavior enable this&#xA;    directive, you will have to exclude or clean up later by yourself&#xA;    the unwanted tables. The regexp used to exclude the table are&#xA;    defined in the array @EXCLUDED_TABLES in lib/Ora2Pg.pm. Note this is&#xA;    behavior is independant to the EXCLUDE configuration directive.&#xA;&#xA;VIEW_AS_TABLE&#xA;    Set which view to export as table. By default none. Value must be a&#xA;    list of view name or regexp separated by space or comma. If the&#xA;    object name is a view and the export type is TABLE, the view will be&#xA;    exported as a create table statement. If export type is COPY or&#xA;    INSERT, the corresponding data will be exported.&#xA;&#xA;    See chapter &#34;Exporting views as PostgreSQL table&#34; for more details.&#xA;&#xA;NO_VIEW_ORDERING&#xA;    By default Ora2Pg try to order views to avoid error at import time&#xA;    with nested views. With a huge number of views this can take a very&#xA;    long time, you can bypass this ordering by enabling this directive.&#xA;&#xA;GRANT_OBJECT&#xA;    When exporting GRANTs you can specify a comma separated list of&#xA;    objects for which privilege will be exported. Default is export for&#xA;    all objects. Here are the possibles values TABLE, VIEW, MATERIALIZED&#xA;    VIEW, SEQUENCE, PROCEDURE, FUNCTION, PACKAGE BODY, TYPE, SYNONYM,&#xA;    DIRECTORY. Only one object type is allowed at a time. For example&#xA;    set it to TABLE if you just want to export privilege on tables. You&#xA;    can use the -g option to overwrite it.&#xA;&#xA;    When used this directive prevent the export of users unless it is&#xA;    set to USER. In this case only users definitions are exported.&#xA;&#xA;WHERE&#xA;    This directive allows you to specify a WHERE clause filter when&#xA;    dumping the contents of tables. Value is constructs as follows:&#xA;    TABLE_NAME[WHERE_CLAUSE], or if you have only one where clause for&#xA;    each table just put the where clause as the value. Both are possible&#xA;    too. Here are some examples:&#xA;&#xA;            # Global where clause applying to all tables included in the export&#xA;            WHERE  1=1&#xA;&#xA;            # Apply the where clause only on table TABLE_NAME&#xA;            WHERE  TABLE_NAME[ID1=&#39;001&#39;]&#xA;&#xA;            # Applies two different clause on tables TABLE_NAME and OTHER_TABLE&#xA;            # and a generic where clause on DATE_CREATE to all other tables&#xA;            WHERE  TABLE_NAME[ID1=&#39;001&#39; OR ID1=&#39;002] DATE_CREATE &amp;gt; &#39;2001-01-01&#39; OTHER_TABLE[NAME=&#39;test&#39;]&#xA;&#xA;    Any where clause not included into a table name bracket clause will&#xA;    be applied to all exported table including the tables defined in the&#xA;    where clause. These WHERE clauses are very useful if you want to&#xA;    archive some data or at the opposite only export some recent data.&#xA;&#xA;    To be able to quickly test data import it is useful to limit data&#xA;    export to the first thousand tuples of each table. For Oracle define&#xA;    the following clause:&#xA;&#xA;            WHERE   ROWNUM &amp;lt; 1000&#xA;&#xA;    and for MySQL, use the following:&#xA;&#xA;            WHERE   1=1 LIMIT 1,1000&#xA;&#xA;    This can also be restricted to some tables data export.&#xA;&#xA;    Command line option -W or --where will override this directive for&#xA;    the global part and per table if the table names is the same.&#xA;&#xA;TOP_MAX&#xA;    This directive is used to limit the number of item shown in the top&#xA;    N lists like the top list of tables per number of rows and the top&#xA;    list of largest tables in megabytes. By default it is set to 10&#xA;    items.&#xA;&#xA;LOG_ON_ERROR&#xA;    Enable this directive if you want to continue direct data import on&#xA;    error. When Ora2Pg received an error in the COPY or INSERT statement&#xA;    from PostgreSQL it will log the statement to a file called&#xA;    TABLENAME_error.log in the output directory and continue to next&#xA;    bulk of data. Like this you can try to fix the statement and&#xA;    manually reload the error log file. Default is disabled: abort&#xA;    import on error.&#xA;&#xA;REPLACE_QUERY&#xA;    Sometime you may want to extract data from an Oracle table but you&#xA;    need a custom query for that. Not just a &#34;SELECT * FROM table&#34; like&#xA;    Ora2Pg do but a more complex query. This directive allows you to&#xA;    overwrite the query used by Ora2Pg to extract data. The format is&#xA;    TABLENAME[SQL_QUERY]. If you have multiple table to extract by&#xA;    replacing the Ora2Pg query, you can define multiple REPLACE_QUERY&#xA;    lines.&#xA;&#xA;            REPLACE_QUERY   EMPLOYEES[SELECT e.id,e.fisrtname,lastname FROM EMPLOYEES e JOIN EMP_UPDT u ON (e.id=u.id AND u.cdate&amp;gt;&#39;2014-08-01 00:00:00&#39;)]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Control of Full Text Search export Several directives can be used to control the way Ora2Pg will export the Oracle&#39;s Text search indexes. By default CONTEXT indexes will be exported to PostgreSQL FTS indexes but CTXCAT indexes will be exported as indexes using the pg_trgm extension.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;CONTEXT_AS_TRGM&#xA;    Force Ora2Pg to translate Oracle Text indexes into PostgreSQL&#xA;    indexes using pg_trgm extension. Default is to translate CONTEXT&#xA;    indexes into FTS indexes and CTXCAT indexes using pg_trgm. Most of&#xA;    the time using pg_trgm is enough, this is why this directive stand&#xA;    for. You need to create the pg_trgm extension into the destination&#xA;    database before importing the objects:&#xA;&#xA;            CREATE EXTENSION pg_trgm;&#xA;&#xA;FTS_INDEX_ONLY&#xA;    By default Ora2Pg creates a function-based index to translate Oracle&#xA;    Text indexes.&#xA;&#xA;            CREATE INDEX ON t_document&#xA;                    USING gin(to_tsvector(&#39;pg_catalog.french&#39;, title));&#xA;&#xA;    You will have to rewrite the CONTAIN() clause using to_tsvector(),&#xA;    example:&#xA;&#xA;            SELECT id,title FROM t_document&#xA;                    WHERE to_tsvector(title)) @@ to_tsquery(&#39;search_word&#39;);&#xA;&#xA;    To force Ora2Pg to create an extra tsvector column with a dedicated&#xA;    triggers for FTS indexes, disable this directive. In this case,&#xA;    Ora2Pg will add the column as follow: ALTER TABLE t_document ADD&#xA;    COLUMN tsv_title tsvector; Then update the column to compute FTS&#xA;    vectors if data have been loaded before UPDATE t_document SET&#xA;    tsv_title = to_tsvector(&#39;pg_catalog.french&#39;, coalesce(title,&#39;&#39;)); To&#xA;    automatically update the column when a modification in the title&#xA;    column appears, Ora2Pg adds the following trigger:&#xA;&#xA;            CREATE FUNCTION tsv_t_document_title() RETURNS trigger AS $$&#xA;            BEGIN&#xA;                   IF TG_OP = &#39;INSERT&#39; OR new.title != old.title THEN&#xA;                           new.tsv_title :=&#xA;                           to_tsvector(&#39;pg_catalog.french&#39;, coalesce(new.title,&#39;&#39;));&#xA;                   END IF;&#xA;                   return new;&#xA;            END&#xA;            $$ LANGUAGE plpgsql;&#xA;            CREATE TRIGGER trig_tsv_t_document_title BEFORE INSERT OR UPDATE&#xA;             ON t_document&#xA;             FOR EACH ROW EXECUTE PROCEDURE tsv_t_document_title();&#xA;&#xA;    When the Oracle text index is defined over multiple column, Ora2Pg&#xA;    will use setweight() to set a weight in the order of the column&#xA;    declaration.&#xA;&#xA;FTS_CONFIG&#xA;    Use this directive to force text search configuration to use. When&#xA;    it is not set, Ora2Pg will autodetect the stemmer used by Oracle for&#xA;    each index and pg_catalog.english if the information is not found.&#xA;&#xA;USE_UNACCENT&#xA;    If you want to perform your text search in an accent insensitive&#xA;    way, enable this directive. Ora2Pg will create an helper function&#xA;    over unaccent() and creates the pg_trgm indexes using this function.&#xA;    With FTS Ora2Pg will redefine your text search configuration, for&#xA;    example:&#xA;&#xA;          CREATE TEXT SEARCH CONFIGURATION fr (COPY = french); &#xA;          ALTER TEXT SEARCH CONFIGURATION fr&#xA;                  ALTER MAPPING FOR hword, hword_part, word WITH unaccent, french_stem;&#xA;&#xA;    then set the FTS_CONFIG ora2pg.conf directive to fr instead of&#xA;    pg_catalog.english.&#xA;&#xA;    When enabled, Ora2pg will create the wrapper function:&#xA;&#xA;          CREATE OR REPLACE FUNCTION unaccent_immutable(text)&#xA;          RETURNS text AS&#xA;          $$&#xA;              SELECT public.unaccent(&#39;public.unaccent&#39;, $1);&#xA;          $$ LANGUAGE sql IMMUTABLE&#xA;             COST 1;&#xA;&#xA;    the indexes are exported as follow:&#xA;&#xA;          CREATE INDEX t_document_title_unaccent_trgm_idx ON t_document &#xA;              USING gin (unaccent_immutable(title) gin_trgm_ops);&#xA;&#xA;    In your queries you will need to use the same function in the search&#xA;    to be able to use the function-based index. Example:&#xA;&#xA;            SELECT * FROM t_document&#xA;                    WHERE unaccent_immutable(title) LIKE &#39;%donnees%&#39;;&#xA;&#xA;USE_LOWER_UNACCENT&#xA;    Same as above but call lower() in the unaccent_immutable() function:&#xA;&#xA;          CREATE OR REPLACE FUNCTION unaccent_immutable(text)&#xA;          RETURNS text AS&#xA;          $$&#xA;              SELECT lower(public.unaccent(&#39;public.unaccent&#39;, $1));&#xA;          $$ LANGUAGE sql IMMUTABLE;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Modifying object structure One of the great usage of Ora2Pg is its flexibility to replicate Oracle database into PostgreSQL database with a different structure or schema. There&#39;s three configuration directives that allow you to map those differences.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;REORDERING_COLUMNS&#xA;    Enable this directive to reordering columns and minimized the&#xA;    footprint on disc, so that more rows fit on a data page, which is&#xA;    the most important factor for speed. Default is disabled, that mean&#xA;    the same order than in Oracle tables definition, that&#39;s should be&#xA;    enough for most usage. This directive is only used with TABLE&#xA;    export.&#xA;&#xA;MODIFY_STRUCT&#xA;    This directive allows you to limit the columns to extract for a&#xA;    given table. The value consist in a space-separated list of table&#xA;    name with a set of column between parenthesis as follow:&#xA;&#xA;            MODIFY_STRUCT   NOM_TABLE(nomcol1,nomcol2,...) ...&#xA;&#xA;    for example:&#xA;&#xA;            MODIFY_STRUCT   T_TEST1(id,dossier) T_TEST2(id,fichier)&#xA;&#xA;    This will only extract columns &#39;id&#39; and &#39;dossier&#39; from table T_TEST1&#xA;    and columns &#39;id&#39; and &#39;fichier&#39; from the T_TEST2 table. This&#xA;    directive can only be used with TABLE, COPY or INSERT export. With&#xA;    TABLE export create table DDL will respect the new list of columns&#xA;    and all indexes or foreign key pointing to or from a column removed&#xA;    will not be exported.&#xA;&#xA;REPLACE_TABLES&#xA;    This directive allows you to remap a list of Oracle table name to a&#xA;    PostgreSQL table name during export. The value is a list of&#xA;    space-separated values with the following structure:&#xA;&#xA;            REPLACE_TABLES  ORIG_TBNAME1:DEST_TBNAME1 ORIG_TBNAME2:DEST_TBNAME2&#xA;&#xA;    Oracle tables ORIG_TBNAME1 and ORIG_TBNAME2 will be respectively&#xA;    renamed into DEST_TBNAME1 and DEST_TBNAME2&#xA;&#xA;REPLACE_COLS&#xA;    Like table name, the name of the column can be remapped to a&#xA;    different name using the following syntax:&#xA;&#xA;            REPLACE_COLS    ORIG_TBNAME(ORIG_COLNAME1:NEW_COLNAME1,ORIG_COLNAME2:NEW_COLNAME2)&#xA;&#xA;    For example:&#xA;&#xA;            REPLACE_COLS    T_TEST(dico:dictionary,dossier:folder)&#xA;&#xA;    will rename Oracle columns &#39;dico&#39; and &#39;dossier&#39; from table T_TEST&#xA;    into new name &#39;dictionary&#39; and &#39;folder&#39;.&#xA;&#xA;REPLACE_AS_BOOLEAN&#xA;    If you want to change the type of some Oracle columns into&#xA;    PostgreSQL boolean during the export you can define here a list of&#xA;    tables and column separated by space as follow.&#xA;&#xA;            REPLACE_AS_BOOLEAN     TB_NAME1:COL_NAME1 TB_NAME1:COL_NAME2 TB_NAME2:COL_NAME2&#xA;&#xA;    The values set in the boolean columns list will be replaced with the&#xA;    &#39;t&#39; and &#39;f&#39; following the default replacement values and those&#xA;    additionally set in directive BOOLEAN_VALUES.&#xA;&#xA;    Note that if you have modified the table name with REPLACE_TABLES&#xA;    and/or the column&#39;s name, you need to use the name of the original&#xA;    table and/or column.&#xA;&#xA;            REPLACE_COLS            TB_NAME1(OLD_COL_NAME1:NEW_COL_NAME1)&#xA;            REPLACE_AS_BOOLEAN      TB_NAME1:OLD_COL_NAME1&#xA;&#xA;    You can also give a type and a precision to automatically convert&#xA;    all fields of that type as a boolean. For example:&#xA;&#xA;            REPLACE_AS_BOOLEAN      NUMBER:1 CHAR:1 TB_NAME1:COL_NAME1 TB_NAME1:COL_NAME2&#xA;&#xA;    will also replace any field of type number(1) or char(1) as a&#xA;    boolean in all exported tables.&#xA;&#xA;BOOLEAN_VALUES&#xA;    Use this to add additional definition of the possible boolean values&#xA;    used in Oracle fields. You must set a space-separated list of&#xA;    TRUE:FALSE values. By default here are the values recognized by&#xA;    Ora2Pg:&#xA;&#xA;            BOOLEAN_VALUES          yes:no y:n 1:0 true:false enabled:disabled&#xA;&#xA;    Any values defined here will be added to the default list.&#xA;&#xA;REPLACE_ZERO_DATE&#xA;    When Ora2Pg find a &#34;zero&#34; date: 0000-00-00 00:00:00 it is replaced&#xA;    by a NULL. This could be a problem if your column is defined with&#xA;    NOT NULL constraint. If you can not remove the constraint, use this&#xA;    directive to set an arbitral date that will be used instead. You can&#xA;    also use -INFINITY if you don&#39;t want to use a fake date.&#xA;&#xA;INDEXES_SUFFIX&#xA;    Add the given value as suffix to indexes names. Useful if you have&#xA;    indexes with same name as tables. For example:&#xA;&#xA;            INDEXES_SUFFIX          _idx&#xA;&#xA;    will add _idx at ed of all index name. Not so common but can help.&#xA;&#xA;INDEXES_RENAMING&#xA;    Enable this directive to rename all indexes using&#xA;    tablename_columns_names. Could be very useful for database that have&#xA;    multiple time the same index name or that use the same name than a&#xA;    table, which is not allowed by PostgreSQL Disabled by default.&#xA;&#xA;USE_INDEX_OPCLASS&#xA;    Operator classes text_pattern_ops, varchar_pattern_ops, and&#xA;    bpchar_pattern_ops support B-tree indexes on the corresponding&#xA;    types. The difference from the default operator classes is that the&#xA;    values are compared strictly character by character rather than&#xA;    according to the locale-specific collation rules. This makes these&#xA;    operator classes suitable for use by queries involving pattern&#xA;    matching expressions (LIKE or POSIX regular expressions) when the&#xA;    database does not use the standard &#34;C&#34; locale. If you enable, with&#xA;    value 1, this will force Ora2Pg to export all indexes defined on&#xA;    varchar2() and char() columns using those operators. If you set it&#xA;    to a value greater than 1 it will only change indexes on columns&#xA;    where the character limit is greater or equal than this value. For&#xA;    example, set it to 128 to create these kind of indexes on columns of&#xA;    type varchar2(N) where N &amp;gt;= 128.&#xA;&#xA;PREFIX_PARTITION&#xA;    Enable this directive if you want that your partition table name&#xA;    will be exported using the parent table name. Disabled by default.&#xA;    If you have multiple partitioned table, when exported to PostgreSQL&#xA;    some partitions could have the same name but different parent&#xA;    tables. This is not allowed, table name must be unique.&#xA;&#xA;PREFIX_SUB_PARTITION&#xA;    Enable this directive if you want that your subpartition table name&#xA;    will be exported using the parent partition name. Enabled by&#xA;    default. If the partition names are a part of the subpartition&#xA;    names, you should enable this directive.&#xA;&#xA;DISABLE_PARTITION&#xA;    If you don&#39;t want to reproduce the partitioning like in Oracle and&#xA;    want to export all partitioned Oracle data into the main single&#xA;    table in PostgreSQL enable this directive. Ora2Pg will export all&#xA;    data into the main table name. Default is to use partitioning,&#xA;    Ora2Pg will export data from each partition and import them into the&#xA;    PostgreSQL dedicated partition table.&#xA;&#xA;DISABLE_UNLOGGED&#xA;    By default Ora2Pg export Oracle tables with the NOLOGGING attribute&#xA;    as UNLOGGED tables. You may want to fully disable this feature&#xA;    because you will lose all data from unlogged tables in case of a&#xA;    PostgreSQL crash. Set it to 1 to export all tables as normal tables.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Oracle Spatial to PostGis Ora2Pg fully export Spatial object from Oracle database. There&#39;s some configuration directives that could be used to control the export.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;AUTODETECT_SPATIAL_TYPE&#xA;    By default Ora2Pg is looking at indexes to see the spatial&#xA;    constraint type and dimensions defined under Oracle. Those&#xA;    constraints are passed as at index creation using for example:&#xA;&#xA;            CREATE INDEX ... INDEXTYPE IS MDSYS.SPATIAL_INDEX&#xA;            PARAMETERS(&#39;sdo_indx_dims=2, layer_gtype=point&#39;);&#xA;&#xA;    If those Oracle constraints parameters are not set, the default is&#xA;    to export those columns as generic type GEOMETRY to be able to&#xA;    receive any spatial type.&#xA;&#xA;    The AUTODETECT_SPATIAL_TYPE directive allows to force Ora2Pg to&#xA;    autodetect the real spatial type and dimension used in a spatial&#xA;    column otherwise a non- constrained &#34;geometry&#34; type is used.&#xA;    Enabling this feature will force Ora2Pg to scan a sample of 50000&#xA;    column to look at the GTYPE used. You can increase or reduce the&#xA;    sample size by setting the value of AUTODETECT_SPATIAL_TYPE to the&#xA;    desired number of line to scan. The directive is enabled by default.&#xA;&#xA;    For example, in the case of a column named shape and defined with&#xA;    Oracle type SDO_GEOMETRY, with AUTODETECT_SPATIAL_TYPE disabled it&#xA;    will be converted as:&#xA;&#xA;        shape geometry(GEOMETRY) or shape geometry(GEOMETRYZ, 4326)&#xA;&#xA;    and if the directive is enabled and the column just contains a&#xA;    single geometry type that use a single dimension:&#xA;&#xA;        shape geometry(POLYGON, 4326) or shape geometry(POLYGONZ, 4326)&#xA;&#xA;    with a two or three dimensional polygon.&#xA;&#xA;CONVERT_SRID&#xA;    This directive allows you to control the automatically conversion of&#xA;    Oracle SRID to standard EPSG. If enabled, Ora2Pg will use the Oracle&#xA;    function sdo_cs.map_oracle_srid_to_epsg() to convert all SRID.&#xA;    Enabled by default.&#xA;&#xA;    If the SDO_SRID returned by Oracle is NULL, it will be replaced by&#xA;    the default value 8307 converted to its EPSG value: 4326 (see&#xA;    DEFAULT_SRID).&#xA;&#xA;    If the value is upper than 1, all SRID will be forced to this value,&#xA;    in this case DEFAULT_SRID will not be used when Oracle returns a&#xA;    null value and the value will be forced to CONVERT_SRID.&#xA;&#xA;    Note that it is also possible to set the EPSG value on Oracle side&#xA;    when sdo_cs.map_oracle_srid_to_epsg() return NULL if your want to&#xA;    force the value:&#xA;&#xA;      system@db&amp;gt; UPDATE sdo_coord_ref_sys SET legacy_code=41014 WHERE srid = 27572;&#xA;&#xA;DEFAULT_SRID&#xA;    Use this directive to override the default EPSG SRID to used: 4326.&#xA;    Can be overwritten by CONVERT_SRID, see above.&#xA;&#xA;GEOMETRY_EXTRACT_TYPE&#xA;    This directive can take three values: WKT (default), WKB and&#xA;    INTERNAL. When it is set to WKT, Ora2Pg will use&#xA;    SDO_UTIL.TO_WKTGEOMETRY() to extract the geometry data. When it is&#xA;    set to WKB, Ora2Pg will use the binary output using&#xA;    SDO_UTIL.TO_WKBGEOMETRY(). If those two extract type are calls at&#xA;    Oracle side, they are slow and you can easily reach Out Of Memory&#xA;    when you have lot of rows. Also WKB is not able to export 3D&#xA;    geometry and some geometries like CURVEPOLYGON. In this case you may&#xA;    use the INTERNAL extraction type. It will use a Pure Perl library to&#xA;    convert the SDO_GEOMETRY data into a WKT representation, the&#xA;    translation is done on Ora2Pg side. This is a work in progress,&#xA;    please validate your exported data geometries before use. Default&#xA;    spatial object extraction type is INTERNAL.&#xA;&#xA;POSTGIS_SCHEMA&#xA;    Use this directive to add a specific schema to the search path to&#xA;    look for PostGis functions.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;PostgreSQL Import By default conversion to PostgreSQL format is written to file &#39;output.sql&#39;. The command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        psql mydb &amp;lt; output.sql&#xA;&#xA;will import content of file output.sql into PostgreSQL mydb database.&#xA;&#xA;DATA_LIMIT&#xA;    When you are performing INSERT/COPY export Ora2Pg proceed by chunks&#xA;    of DATA_LIMIT tuples for speed improvement. Tuples are stored in&#xA;    memory before being written to disk, so if you want speed and have&#xA;    enough system resources you can grow this limit to an upper value&#xA;    for example: 100000 or 1000000. Before release 7.0 a value of 0 mean&#xA;    no limit so that all tuples are stored in memory before being&#xA;    flushed to disk. In 7.x branch this has been remove and chunk will&#xA;    be set to the default: 10000&#xA;&#xA;BLOB_LIMIT&#xA;    When Ora2Pg detect a table with some BLOB it will automatically&#xA;    reduce the value of this directive by dividing it by 10 until his&#xA;    value is below 1000. You can control this value by setting&#xA;    BLOB_LIMIT. Exporting BLOB use lot of resources, setting it to a too&#xA;    high value can produce OOM.&#xA;&#xA;OUTPUT&#xA;    The Ora2Pg output filename can be changed with this directive.&#xA;    Default value is output.sql. if you set the file name with extension&#xA;    .gz or .bz2 the output will be automatically compressed. This&#xA;    require that the Compress::Zlib Perl module is installed if the&#xA;    filename extension is .gz and that the bzip2 system command is&#xA;    installed for the .bz2 extension.&#xA;&#xA;OUTPUT_DIR&#xA;    Since release 7.0, you can define a base directory where the file&#xA;    will be written. The directory must exists.&#xA;&#xA;BZIP2&#xA;    This directive allows you to specify the full path to the bzip2&#xA;    program if it can not be found in the PATH environment variable.&#xA;&#xA;FILE_PER_CONSTRAINT&#xA;    Allow object constraints to be saved in a separate file during&#xA;    schema export. The file will be named CONSTRAINTS_OUTPUT, where&#xA;    OUTPUT is the value of the corresponding configuration directive.&#xA;    You can use .gz xor .bz2 extension to enable compression. Default is&#xA;    to save all data in the OUTPUT file. This directive is usable only&#xA;    with TABLE export type.&#xA;&#xA;    The constraints can be imported quickly into PostgreSQL using the&#xA;    LOAD export type to parallelize their creation over multiple (-j or&#xA;    JOBS) connections.&#xA;&#xA;FILE_PER_INDEX&#xA;    Allow indexes to be saved in a separate file during schema export.&#xA;    The file will be named INDEXES_OUTPUT, where OUTPUT is the value of&#xA;    the corresponding configuration directive. You can use .gz xor .bz2&#xA;    file extension to enable compression. Default is to save all data in&#xA;    the OUTPUT file. This directive is usable only with TABLE AND&#xA;    TABLESPACE export type. With the TABLESPACE export, it is used to&#xA;    write &#34;ALTER INDEX ... TABLESPACE ...&#34; into a separate file named&#xA;    TBSP_INDEXES_OUTPUT that can be loaded at end of the migration after&#xA;    the indexes creation to move the indexes.&#xA;&#xA;    The indexes can be imported quickly into PostgreSQL using the LOAD&#xA;    export type to parallelize their creation over multiple (-j or JOBS)&#xA;    connections.&#xA;&#xA;FILE_PER_FKEYS&#xA;    Allow foreign key declaration to be saved in a separate file during&#xA;    schema export. By default foreign keys are exported into the main&#xA;    output file or in the CONSTRAINT_output.sql file. When enabled&#xA;    foreign keys will be exported into a file named FKEYS_output.sql&#xA;&#xA;FILE_PER_TABLE&#xA;    Allow data export to be saved in one file per table/view. The files&#xA;    will be named as tablename_OUTPUT, where OUTPUT is the value of the&#xA;    corresponding configuration directive. You can still use .gz xor&#xA;    .bz2 extension in the OUTPUT directive to enable compression.&#xA;    Default 0 will save all data in one file, set it to 1 to enable this&#xA;    feature. This is usable only during INSERT or COPY export type.&#xA;&#xA;FILE_PER_FUNCTION&#xA;    Allow functions, procedures and triggers to be saved in one file per&#xA;    object. The files will be named as objectname_OUTPUT. Where OUTPUT&#xA;    is the value of the corresponding configuration directive. You can&#xA;    still use .gz xor .bz2 extension in the OUTPUT directive to enable&#xA;    compression. Default 0 will save all in one single file, set it to 1&#xA;    to enable this feature. This is usable only during the corresponding&#xA;    export type, the package body export has a special behavior.&#xA;&#xA;    When export type is PACKAGE and you&#39;ve enabled this directive,&#xA;    Ora2Pg will create a directory per package, named with the lower&#xA;    case name of the package, and will create one file per&#xA;    function/procedure into that directory. If the configuration&#xA;    directive is not enabled, it will create one file per package as&#xA;    packagename_OUTPUT, where OUTPUT is the value of the corresponding&#xA;    directive.&#xA;&#xA;TRUNCATE_TABLE&#xA;    If this directive is set to 1, a TRUNCATE TABLE instruction will be&#xA;    add before loading data. This is usable only during INSERT or COPY&#xA;    export type.&#xA;&#xA;    When activated, the instruction will be added only if there&#39;s no&#xA;    global DELETE clause or not one specific to the current table (see&#xA;    below).&#xA;&#xA;DELETE&#xA;    Support for include a DELETE FROM ... WHERE clause filter before&#xA;    importing data and perform a delete of some lines instead of&#xA;    truncating tables. Value is construct as follow:&#xA;    TABLE_NAME[DELETE_WHERE_CLAUSE], or if you have only one where&#xA;    clause for all tables just put the delete clause as single value.&#xA;    Both are possible too. Here are some examples:&#xA;&#xA;            DELETE  1=1    # Apply to all tables and delete all tuples&#xA;            DELETE  TABLE_TEST[ID1=&#39;001&#39;]   # Apply only on table TABLE_TEST&#xA;            DELETE  TABLE_TEST[ID1=&#39;001&#39; OR ID1=&#39;002] DATE_CREATE &amp;gt; &#39;2001-01-01&#39; TABLE_INFO[NAME=&#39;test&#39;]&#xA;&#xA;    The last applies two different delete where clause on tables&#xA;    TABLE_TEST and TABLE_INFO and a generic delete where clause on&#xA;    DATE_CREATE to all other tables. If TRUNCATE_TABLE is enabled it&#xA;    will be applied to all tables not covered by the DELETE definition.&#xA;&#xA;    These DELETE clauses might be useful with regular &#34;updates&#34;.&#xA;&#xA;STOP_ON_ERROR&#xA;    Set this parameter to 0 to not include the call to \set&#xA;    ON_ERROR_STOP ON in all SQL scripts generated by Ora2Pg. By default&#xA;    this order is always present so that the script will immediately&#xA;    abort when an error is encountered.&#xA;&#xA;COPY_FREEZE&#xA;    Enable this directive to use COPY FREEZE instead of a simple COPY to&#xA;    export data with rows already frozen. This is intended as a&#xA;    performance option for initial data loading. Rows will be frozen&#xA;    only if the table being loaded has been created or truncated in the&#xA;    current sub-transaction. This will only work with export to file and&#xA;    when -J or ORACLE_COPIES is not set or default to 1. It can be used&#xA;    with direct import into PostgreSQL under the same condition but -j&#xA;    or JOBS must also be unset or default to 1.&#xA;&#xA;CREATE_OR_REPLACE&#xA;    By default Ora2Pg uses CREATE OR REPLACE in functions and views DDL,&#xA;    if you need not to override existing functions or views disable this&#xA;    configuration directive, DDL will not include OR REPLACE.&#xA;&#xA;DROP_IF_EXISTS&#xA;    To add a DROP &amp;lt;OBJECT&amp;gt; IF EXISTS before creating the object, enable&#xA;    this directive. Can be useful in an iterative work. Default is&#xA;    disabled.&#xA;&#xA;EXPORT_GTT&#xA;    PostgreSQL do not supports Global Temporary Table natively but you&#xA;    can use the pgtt extension to emulate this behavior. Enable this&#xA;    directive to export global temporary table.&#xA;&#xA;NO_HEADER&#xA;    Enabling this directive will prevent Ora2Pg to print his header into&#xA;    output files. Only the translated code will be written.&#xA;&#xA;PSQL_RELATIVE_PATH&#xA;    By default Ora2Pg use \i psql command to execute generated SQL files&#xA;    if you want to use a relative path following the script execution&#xA;    file enabling this option will use \ir. See psql help for more&#xA;    information.&#xA;&#xA;DATA_VALIDATION_ROWS&#xA;    Number of rows that must be retrieved on both side for data&#xA;    validation. Default it to compare the 10000 first rows. A value of 0&#xA;    mean compare all rows.&#xA;&#xA;DATA_VALIDATION_ORDERING&#xA;    Order of rows between both sides are different once the data have&#xA;    been modified. In this case data must be ordered using a primary key&#xA;    or a unique index, that mean that a table without such object can&#xA;    not be compared. If the validation is done just after the data&#xA;    migration without any data modification the validation can be done&#xA;    on all tables without any ordering.&#xA;&#xA;DATA_VALIDATION_ERROR&#xA;    Stop validating data from a table after a certain amount of row&#xA;    mistmatch. Default is to stop after 10 rows validation errors.&#xA;&#xA;When using Ora2Pg export type INSERT or COPY to dump data to file and&#xA;that FILE_PER_TABLE is enabled, you will be warned that Ora2Pg will not&#xA;export data again if the file already exists. This is to prevent&#xA;downloading twice table with huge amount of data. To force the download&#xA;of data from these tables you have to remove the existing output file&#xA;first.&#xA;&#xA;If you want to import data on the fly to the PostgreSQL database you&#xA;have three configuration directives to set the PostgreSQL database&#xA;connection. This is only possible with COPY or INSERT export type as for&#xA;database schema there&#39;s no real interest to do that.&#xA;&#xA;PG_DSN&#xA;    Use this directive to set the PostgreSQL data source namespace using&#xA;    DBD::Pg Perl module as follow:&#xA;&#xA;            dbi:Pg:dbname=pgdb;host=localhost;port=5432&#xA;&#xA;    will connect to database &#39;pgdb&#39; on localhost at tcp port 5432.&#xA;&#xA;    Note that this directive is only used for data export, other export&#xA;    need to be imported manually through the use og psql or any other&#xA;    PostgreSQL client.&#xA;&#xA;    To use SSL encrypted connection you must add sslmode=require to the&#xA;    connection string like follow:&#xA;&#xA;            dbi:Pg:dbname=pgdb;host=localhost;port=5432;sslmode=require&#xA;&#xA;PG_USER and PG_PWD&#xA;    These two directives are used to set the login user and password.&#xA;&#xA;    If you do not supply a credential with PG_PWD and you have installed&#xA;    the Term::ReadKey Perl module, Ora2Pg will ask for the password&#xA;    interactively. If PG_USER is not set it will be asked interactively&#xA;    too.&#xA;&#xA;SYNCHRONOUS_COMMIT&#xA;    Specifies whether transaction commit will wait for WAL records to be&#xA;    written to disk before the command returns a &#34;success&#34; indication to&#xA;    the client. This is the equivalent to set synchronous_commit&#xA;    directive of postgresql.conf file. This is only used when you load&#xA;    data directly to PostgreSQL, the default is off to disable&#xA;    synchronous commit to gain speed at writing data. Some modified&#xA;    version of PostgreSQL, like greenplum, do not have this setting, so&#xA;    in this set this directive to 1, ora2pg will not try to change the&#xA;    setting.&#xA;&#xA;PG_INITIAL_COMMAND&#xA;    This directive can be used to send an initial command to PostgreSQL,&#xA;    just after the connection. For example to set some session&#xA;    parameters. This directive can be used multiple times.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Column type control PG_NUMERIC_TYPE If set to 1 replace portable numeric type into PostgreSQL internal type. Oracle data type NUMBER(p,s) is approximatively converted to real and float PostgreSQL data type. If you have monetary fields or don&#39;t want rounding issues with the extra decimals you should preserve the same numeric(p,s) PostgreSQL data type. Do that only if you need exactness because using numeric(p,s) is slower than using real or double.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PG_INTEGER_TYPE&#xA;    If set to 1 replace portable numeric type into PostgreSQL internal&#xA;    type. Oracle data type NUMBER(p) or NUMBER are converted to&#xA;    smallint, integer or bigint PostgreSQL data type following the value&#xA;    of the precision. If NUMBER without precision are set to&#xA;    DEFAULT_NUMERIC (see below).&#xA;&#xA;DEFAULT_NUMERIC&#xA;    NUMBER without precision are converted by default to bigint only if&#xA;    PG_INTEGER_TYPE is true. You can overwrite this value to any PG&#xA;    type, like integer or float.&#xA;&#xA;DATA_TYPE&#xA;    If you&#39;re experiencing any problem in data type schema conversion&#xA;    with this directive you can take full control of the correspondence&#xA;    between Oracle and PostgreSQL types to redefine data type&#xA;    translation used in Ora2pg. The syntax is a comma-separated list of&#xA;    &#34;Oracle datatype:Postgresql datatype&#34;. Here are the default list&#xA;    used:&#xA;&#xA;            DATA_TYPE       VARCHAR2:varchar,NVARCHAR2:varchar,DATE:timestamp,LONG:text,LONG RAW:bytea,CLOB:text,NCLOB:text,BLOB:bytea,BFILE:bytea,RAW(16):uuid,RAW(32):uuid,RAW:bytea,UROWID:oid,ROWID:oid,FLOAT:double precision,DEC:decimal,DECIMAL:decimal,DOUBLE PRECISION:double precision,INT:integer,INTEGER:integer,REAL:real,SMALLINT:smallint,BINARY_FLOAT:double precision,BINARY_DOUBLE:double precision,TIMESTAMP:timestamp,XMLTYPE:xml,BINARY_INTEGER:integer,PLS_INTEGER:integer,TIMESTAMP WITH TIME ZONE:timestamp with time zone,TIMESTAMP WITH LOCAL TIME ZONE:timestamp with time zone&#xA;&#xA;    The directive and the list definition must be a single line.&#xA;&#xA;    Note that when a RAW(16) and RAW(32) columns is found or that the&#xA;    RAW column has &#34;SYS_GUID()&#34; as default value Ora2Pg will&#xA;    automatically translate the type of the column into uuid which might&#xA;    be the right translation in most of the case. In this case data will&#xA;    be automatically migrated as PostgreSQL uuid data type provided by&#xA;    the &#34;uuid-ossp&#34; extension.&#xA;&#xA;    If you want to replace a type with a precision and scale you need to&#xA;    escape the coma with a backslash. For example, if you want to&#xA;    replace all NUMBER(*,0) into bigint instead of numeric(38) add the&#xA;    following:&#xA;&#xA;           DATA_TYPE       NUMBER(*\,0):bigint&#xA;&#xA;    You don&#39;t have to recopy all default type conversion but just the&#xA;    one you want to rewrite.&#xA;&#xA;    There&#39;s a special case with BFILE when they are converted to type&#xA;    TEXT, they will just contains the full path to the external file. If&#xA;    you set the destination type to BYTEA, the default, Ora2Pg will&#xA;    export the content of the BFILE as bytea. The third case is when you&#xA;    set the destination type to EFILE, in this case, Ora2Pg will export&#xA;    it as an EFILE record: (DIRECTORY, FILENAME). Use the DIRECTORY&#xA;    export type to export the existing directories as well as privileges&#xA;    on those directories.&#xA;&#xA;    There&#39;s no SQL function available to retrieve the path to the BFILE.&#xA;    Ora2Pg have to create one using the DBMS_LOB package.&#xA;&#xA;            CREATE OR REPLACE FUNCTION ora2pg_get_bfilename( p_bfile IN BFILE )&#xA;            RETURN VARCHAR2&#xA;            AS&#xA;                l_dir   VARCHAR2(4000);&#xA;                l_fname VARCHAR2(4000);&#xA;                l_path  VARCHAR2(4000);&#xA;            BEGIN&#xA;                dbms_lob.FILEGETNAME( p_bfile, l_dir, l_fname );&#xA;                SELECT directory_path INTO l_path FROM all_directories&#xA;                    WHERE directory_name = l_dir;&#xA;                l_dir := rtrim(l_path,&#39;/&#39;);&#xA;                RETURN l_dir || &#39;/&#39; || l_fname;&#xA;            END;&#xA;&#xA;    This function is only created if Ora2Pg found a table with a BFILE&#xA;    column and that the destination type is TEXT. The function is&#xA;    dropped at the end of the export. This concern both, COPY and INSERT&#xA;    export type.&#xA;&#xA;    There&#39;s no SQL function available to retrieve BFILE as an EFILE&#xA;    record, then Ora2Pg have to create one using the DBMS_LOB package.&#xA;&#xA;            CREATE OR REPLACE FUNCTION ora2pg_get_efile( p_bfile IN BFILE )&#xA;            RETURN VARCHAR2&#xA;            AS&#xA;                l_dir   VARCHAR2(4000);&#xA;                l_fname VARCHAR2(4000);&#xA;            BEGIN&#xA;                dbms_lob.FILEGETNAME( p_bfile, l_dir, l_fname );&#xA;                RETURN &#39;(&#39; || l_dir || &#39;,&#39; || l_fnamei || &#39;)&#39;;&#xA;            END;&#xA;&#xA;    This function is only created if Ora2Pg found a table with a BFILE&#xA;    column and that the destination type is EFILE. The function is&#xA;    dropped at the end of the export. This concern both, COPY and INSERT&#xA;    export type.&#xA;&#xA;    To set the destination type, use the DATA_TYPE configuration&#xA;    directive:&#xA;&#xA;            DATA_TYPE       BFILE:EFILE&#xA;&#xA;    for example.&#xA;&#xA;    The EFILE type is a user defined type created by the PostgreSQL&#xA;    extension external_file that can be found here:&#xA;    https://github.com/darold/external_file This is a port of the BFILE&#xA;    Oracle type to PostgreSQL.&#xA;&#xA;    There&#39;s no SQL function available to retrieve the content of a&#xA;    BFILE. Ora2Pg have to create one using the DBMS_LOB package.&#xA;&#xA;            CREATE OR REPLACE FUNCTION ora2pg_get_bfile( p_bfile IN BFILE ) RETURN&#xA;            BLOB&#xA;              AS&#xA;                    filecontent BLOB := NULL;&#xA;                    src_file BFILE := NULL;&#xA;                    l_step PLS_INTEGER := 12000;&#xA;                    l_dir   VARCHAR2(4000);&#xA;                    l_fname VARCHAR2(4000);&#xA;                    offset NUMBER := 1;&#xA;              BEGIN&#xA;                IF p_bfile IS NULL THEN&#xA;                  RETURN NULL;&#xA;                END IF;&#xA;&#xA;                DBMS_LOB.FILEGETNAME( p_bfile, l_dir, l_fname );&#xA;                src_file := BFILENAME( l_dir, l_fname );&#xA;                IF src_file IS NULL THEN&#xA;                    RETURN NULL;&#xA;                END IF;&#xA;&#xA;                DBMS_LOB.FILEOPEN(src_file, DBMS_LOB.FILE_READONLY);&#xA;                DBMS_LOB.CREATETEMPORARY(filecontent, true);&#xA;                DBMS_LOB.LOADBLOBFROMFILE (filecontent, src_file, DBMS_LOB.LOBMAXSIZE, offset, offset);&#xA;                DBMS_LOB.FILECLOSE(src_file);&#xA;                RETURN filecontent;&#xA;            END;&#xA;&#xA;    This function is only created if Ora2Pg found a table with a BFILE&#xA;    column and that the destination type is bytea (the default). The&#xA;    function is dropped at the end of the export. This concern both,&#xA;    COPY and INSERT export type.&#xA;&#xA;    About the ROWID and UROWID, they are converted into OID by &#34;logical&#34;&#xA;    default but this will through an error at data import. There is no&#xA;    equivalent data type so you might want to use the DATA_TYPE&#xA;    directive to change the corresponding type in PostgreSQL. You should&#xA;    consider replacing this data type by a bigserial (autoincremented&#xA;    sequence), text or uuid data type.&#xA;&#xA;MODIFY_TYPE&#xA;    Sometimes you need to force the destination type, for example a&#xA;    column exported as timestamp by Ora2Pg can be forced into type date.&#xA;    Value is a comma-separated list of TABLE:COLUMN:TYPE structure. If&#xA;    you need to use comma or space inside type definition you will have&#xA;    to backslash them.&#xA;&#xA;            MODIFY_TYPE     TABLE1:COL3:varchar,TABLE1:COL4:decimal(9\,6)&#xA;&#xA;    Type of table1.col3 will be replaced by a varchar and table1.col4 by&#xA;    a decimal with precision and scale.&#xA;&#xA;    If the column&#39;s type is a user defined type Ora2Pg will autodetect&#xA;    the composite type and will export its data using ROW(). Some Oracle&#xA;    user defined types are just array of a native type, in this case you&#xA;    may want to transform this column in simple array of a PostgreSQL&#xA;    native type. To do so, just redefine the destination type as wanted&#xA;    and Ora2Pg will also transform the data as an array. For example,&#xA;    with the following definition in Oracle:&#xA;&#xA;            CREATE OR REPLACE TYPE mem_type IS VARRAY(10) of VARCHAR2(15);&#xA;            CREATE TABLE club (Name VARCHAR2(10),&#xA;                    Address VARCHAR2(20),&#xA;                    City VARCHAR2(20),&#xA;                    Phone VARCHAR2(8),&#xA;                    Members mem_type&#xA;            );&#xA;&#xA;    custom type &#34;mem_type&#34; is just a string array and can be translated&#xA;    into the following in PostgreSQL:&#xA;&#xA;            CREATE TABLE club (&#xA;                    name varchar(10),&#xA;                    address varchar(20),&#xA;                    city varchar(20),&#xA;                    phone varchar(8),&#xA;                    members text[]&#xA;            ) ;&#xA;&#xA;    To do so, just use the directive as follow:&#xA;&#xA;            MODIFY_TYPE     CLUB:MEMBERS:text[]&#xA;&#xA;    Ora2Pg will take care to transform all data of this column in the&#xA;    correct format. Only arrays of characters and numerics types are&#xA;    supported.&#xA;&#xA;TO_NUMBER_CONVERSION&#xA;    By default Oracle call to function TO_NUMBER will be translated as a&#xA;    cast into numeric. For example, TO_NUMBER(&#39;10.1234&#39;) is converted&#xA;    into PostgreSQL call to_number(&#39;10.1234&#39;)::numeric. If you want you&#xA;    can cast the call to integer or bigint by changing the value of the&#xA;    configuration directive. If you need better control of the format,&#xA;    just set it as value, for example: TO_NUMBER_CONVERSION&#xA;    99999999999999999999.9999999999 will convert the code above as:&#xA;    TO_NUMBER(&#39;10.1234&#39;, &#39;99999999999999999999.9999999999&#39;) Any value of&#xA;    the directive that it is not numeric, integer or bigint will be&#xA;    taken as a mask format. If set to none, no conversion will be done.&#xA;&#xA;VARCHAR_TO_TEXT&#xA;    By default varchar2 without size constraint are tranlated into text.&#xA;    If you want to keep the varchar name, disable this directive.&#xA;&#xA;FORCE_IDENTITY_BIGINT&#xA;    Usually identity column must be bigint to correspond to an auto&#xA;    increment sequence so Ora2Pg always force it to be a bigint. If, for&#xA;    any reason you want Ora2Pg to respect the DATA_TYPE you have set for&#xA;    identity column then disable this directive.&#xA;&#xA;TO_CHAR_NOTIMEZONE&#xA;    If you want Ora2Pg to remove any timezone information into the&#xA;    format part of the TO_CHAR() function, enable this directive.&#xA;    Disabled by default.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Taking export under control The following other configuration directives interact directly with the export process and give you fine granularity in database export control.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;SKIP&#xA;    For TABLE export you may not want to export all schema constraints,&#xA;    the SKIP configuration directive allows you to specify a&#xA;    space-separated list of constraints that should not be exported.&#xA;    Possible values are:&#xA;&#xA;            - fkeys: turn off foreign key constraints&#xA;            - pkeys: turn off primary keys&#xA;            - ukeys: turn off unique column constraints&#xA;            - indexes: turn off all other index types&#xA;            - checks: turn off check constraints&#xA;&#xA;    For example:&#xA;&#xA;            SKIP    indexes,checks&#xA;&#xA;    will removed indexes and check constraints from export.&#xA;&#xA;PKEY_IN_CREATE&#xA;    Enable this directive if you want to add primary key definition&#xA;    inside the create table statement. If disabled (the default) primary&#xA;    key definition will be added with an alter table statement. Enable&#xA;    it if you are exporting to GreenPlum PostgreSQL database.&#xA;&#xA;KEEP_PKEY_NAMES&#xA;    By default names of the primary and unique key in the source Oracle&#xA;    database are ignored and key names are autogenerated in the target&#xA;    PostgreSQL database with the PostgreSQL internal default naming&#xA;    rules. If you want to preserve Oracle primary and unique key names&#xA;    set this option to 1.&#xA;&#xA;FKEY_ADD_UPDATE&#xA;    This directive allows you to add an ON UPDATE CASCADE option to a&#xA;    foreign key when a ON DELETE CASCADE is defined or always. Oracle do&#xA;    not support this feature, you have to use trigger to operate the ON&#xA;    UPDATE CASCADE. As PostgreSQL has this feature, you can choose how&#xA;    to add the foreign key option. There are three values to this&#xA;    directive: never, the default that mean that foreign keys will be&#xA;    declared exactly like in Oracle. The second value is delete, that&#xA;    mean that the ON UPDATE CASCADE option will be added only if the ON&#xA;    DELETE CASCADE is already defined on the foreign Keys. The last&#xA;    value, always, will force all foreign keys to be defined using the&#xA;    update option.&#xA;&#xA;FKEY_DEFERRABLE&#xA;    When exporting tables, Ora2Pg normally exports constraints as they&#xA;    are, if they are non-deferrable they are exported as non-deferrable.&#xA;    However, non-deferrable constraints will probably cause problems&#xA;    when attempting to import data to Pg. The FKEY_DEFERRABLE option set&#xA;    to 1 will cause all foreign key constraints to be exported as&#xA;    deferrable.&#xA;&#xA;DEFER_FKEY&#xA;    In addition to exporting data when the DEFER_FKEY option set to 1,&#xA;    it will add a command to defer all foreign key constraints during&#xA;    data export and the import will be done in a single transaction.&#xA;    This will work only if foreign keys have been exported as deferrable&#xA;    and you are not using direct import to PostgreSQL (PG_DSN is not&#xA;    defined). Constraints will then be checked at the end of the&#xA;    transaction.&#xA;&#xA;    This directive can also be enabled if you want to force all foreign&#xA;    keys to be created as deferrable and initially deferred during&#xA;    schema export (TABLE export type).&#xA;&#xA;DROP_FKEY&#xA;    If deferring foreign keys is not possible due to the amount of data&#xA;    in a single transaction, you&#39;ve not exported foreign keys as&#xA;    deferrable or you are using direct import to PostgreSQL, you can use&#xA;    the DROP_FKEY directive.&#xA;&#xA;    It will drop all foreign keys before all data import and recreate&#xA;    them at the end of the import.&#xA;&#xA;DROP_INDEXES&#xA;    This directive allows you to gain lot of speed improvement during&#xA;    data import by removing all indexes that are not an automatic index&#xA;    (indexes of primary keys) and recreate them at the end of data&#xA;    import. Of course it is far better to not import indexes and&#xA;    constraints before having imported all data.&#xA;&#xA;DISABLE_TRIGGERS&#xA;    This directive is used to disable triggers on all tables in COPY or&#xA;    INSERT export modes. Available values are USER (disable user-defined&#xA;    triggers only) and ALL (includes RI system triggers). Default is 0:&#xA;    do not add SQL statements to disable trigger before data import.&#xA;&#xA;    If you want to disable triggers during data migration, set the value&#xA;    to USER if your are connected as non superuser and ALL if you are&#xA;    connected as PostgreSQL superuser. A value of 1 is equal to USER.&#xA;&#xA;DISABLE_SEQUENCE&#xA;    If set to 1 it disables alter of sequences on all tables during COPY&#xA;    or INSERT export mode. This is used to prevent the update of&#xA;    sequence during data migration. Default is 0, alter sequences.&#xA;&#xA;NOESCAPE&#xA;    By default all data that are not of type date or time are escaped.&#xA;    If you experience any problem with that you can set it to 1 to&#xA;    disable character escaping during data export. This directive is&#xA;    only used during a COPY export. See STANDARD_CONFORMING_STRINGS for&#xA;    enabling/disabling escape with INSERT statements.&#xA;&#xA;STANDARD_CONFORMING_STRINGS&#xA;    This controls whether ordinary string literals (&#39;...&#39;) treat&#xA;    backslashes literally, as specified in SQL standard. This was the&#xA;    default before Ora2Pg v8.5 so that all strings was escaped first,&#xA;    now this is currently on, causing Ora2Pg to use the escape string&#xA;    syntax (E&#39;...&#39;) if this parameter is not set to 0. This is the exact&#xA;    behavior of the same option in PostgreSQL. This directive is only&#xA;    used during data export to build INSERT statements. See NOESCAPE for&#xA;    enabling/disabling escape in COPY statements.&#xA;&#xA;TRIM_TYPE&#xA;    If you want to convert CHAR(n) from Oracle into varchar(n) or text&#xA;    on PostgreSQL using directive DATA_TYPE, you might want to do some&#xA;    trimming on the data. By default Ora2Pg will auto-detect this&#xA;    conversion and remove any whitespace at both leading and trailing&#xA;    position. If you just want to remove the leadings character set the&#xA;    value to LEADING. If you just want to remove the trailing character,&#xA;    set the value to TRAILING. Default value is BOTH.&#xA;&#xA;TRIM_CHAR&#xA;    The default trimming character is space, use this directive if you&#xA;    need to change the character that will be removed. For example, set&#xA;    it to - if you have leading - in the char(n) field. To use space as&#xA;    trimming charger, comment this directive, this is the default value.&#xA;&#xA;PRESERVE_CASE&#xA;    If you want to preserve the case of Oracle object name set this&#xA;    directive to 1. By default Ora2Pg will convert all Oracle object&#xA;    names to lower case. I do not recommend to enable this unless you&#xA;    will always have to double-quote object names on all your SQL&#xA;    scripts.&#xA;&#xA;ORA_RESERVED_WORDS&#xA;    Allow escaping of column name using Oracle reserved words. Value is&#xA;    a list of comma-separated reserved word. Default:&#xA;    audit,comment,references.&#xA;&#xA;USE_RESERVED_WORDS&#xA;    Enable this directive if you have table or column names that are a&#xA;    reserved word for PostgreSQL. Ora2Pg will double quote the name of&#xA;    the object.&#xA;&#xA;GEN_USER_PWD&#xA;    Set this directive to 1 to replace default password by a random&#xA;    password for all extracted user during a GRANT export.&#xA;&#xA;PG_SUPPORTS_MVIEW&#xA;    Since PostgreSQL 9.3, materialized view are supported with the SQL&#xA;    syntax &#39;CREATE MATERIALIZED VIEW&#39;. To force Ora2Pg to use the native&#xA;    PostgreSQL support you must enable this configuration - enable by&#xA;    default. If you want to use the old style with table and a set of&#xA;    function, you should disable it.&#xA;&#xA;PG_SUPPORTS_IFEXISTS&#xA;    PostgreSQL version below 9.x do not support IF EXISTS in DDL&#xA;    statements. Disabling the directive with value 0 will prevent Ora2Pg&#xA;    to add those keywords in all generated statements. Default value is&#xA;    1, enabled.&#xA;&#xA;PG_VERSION&#xA;    Set the PostgreSQL major version number of the target database. Ex:&#xA;    9.6 or 13 Default is current major version at time of a new release.&#xA;    This replace the old and deprecadted PG_SUPPORTS_* configuration&#xA;    directives described bellow.&#xA;&#xA;PG_SUPPORTS_ROLE (Deprecated)&#xA;    This option is deprecated since Ora2Pg release v7.3.&#xA;&#xA;    By default Oracle roles are translated into PostgreSQL groups. If&#xA;    you have PostgreSQL 8.1 or more consider the use of ROLES and set&#xA;    this directive to 1 to export roles.&#xA;&#xA;PG_SUPPORTS_INOUT (Deprecated)&#xA;    This option is deprecated since Ora2Pg release v7.3.&#xA;&#xA;    If set to 0, all IN, OUT or INOUT parameters will not be used into&#xA;    the generated PostgreSQL function declarations (disable it for&#xA;    PostgreSQL database version lower than 8.1), This is now enable by&#xA;    default.&#xA;&#xA;PG_SUPPORTS_DEFAULT&#xA;    This directive enable or disable the use of default parameter value&#xA;    in function export. Until PostgreSQL 8.4 such a default value was&#xA;    not supported, this feature is now enable by default.&#xA;&#xA;PG_SUPPORTS_WHEN (Deprecated)&#xA;    Add support to WHEN clause on triggers as PostgreSQL v9.0 now&#xA;    support it. This directive is enabled by default, set it to 0&#xA;    disable this feature.&#xA;&#xA;PG_SUPPORTS_INSTEADOF (Deprecated)&#xA;    Add support to INSTEAD OF usage on triggers (used with PG &amp;gt;= 9.1),&#xA;    if this directive is disabled the INSTEAD OF triggers will be&#xA;    rewritten as Pg rules.&#xA;&#xA;PG_SUPPORTS_CHECKOPTION&#xA;    When enabled, export views with CHECK OPTION. Disable it if you have&#xA;    PostgreSQL version prior to 9.4. Default: 1, enabled.&#xA;&#xA;PG_SUPPORTS_IFEXISTS&#xA;    If disabled, do not export object with IF EXISTS statements. Enabled&#xA;    by default.&#xA;&#xA;PG_SUPPORTS_PARTITION&#xA;    PostgreSQL version prior to 10.0 do not have native partitioning.&#xA;    Enable this directive if you want to use declarative partitioning.&#xA;    Enable by default.&#xA;&#xA;PG_SUPPORTS_SUBSTR&#xA;    Some versions of PostgreSQL like Redshift doesn&#39;t support substr()&#xA;    and it need to be replaced by a call to substring(). In this case,&#xA;    disable it.&#xA;&#xA;PG_SUPPORTS_NAMED_OPERATOR&#xA;    Disable this directive if you are using PG &amp;lt; 9.5, PL/SQL operator&#xA;    used in named parameter =&amp;gt; will be replaced by PostgreSQL&#xA;    proprietary operator := Enable by default.&#xA;&#xA;PG_SUPPORTS_IDENTITY&#xA;    Enable this directive if you have PostgreSQL &amp;gt;= 10 to use IDENTITY&#xA;    columns instead of serial or bigserial data type. If&#xA;    PG_SUPPORTS_IDENTITY is disabled and there is IDENTITY column in the&#xA;    Oracle table, they are exported as serial or bigserial columns. When&#xA;    it is enabled they are exported as IDENTITY columns like:&#xA;&#xA;          CREATE TABLE identity_test_tab (&#xA;                  id bigint GENERATED ALWAYS AS IDENTITY,&#xA;                  description varchar(30)&#xA;          ) ;&#xA;&#xA;    If there is non default sequence options set in Oracle, they will be&#xA;    appended after the IDENTITY keyword. Additionally in both cases,&#xA;    Ora2Pg will create a file AUTOINCREMENT_output.sql with a embedded&#xA;    function to update the associated sequences with the restart value&#xA;    set to &#34;SELECT max(colname)+1 FROM tablename&#34;. Of course this file&#xA;    must be imported after data import otherwise sequence will be kept&#xA;    to start value. Enabled by default.&#xA;&#xA;PG_SUPPORTS_PROCEDURE&#xA;    PostgreSQL v11 adds support of PROCEDURE, enable it if you use such&#xA;    version.&#xA;&#xA;BITMAP_AS_GIN&#xA;    Use btree_gin extension to create bitmap like index with pg &amp;gt;= 9.4&#xA;    You will need to create the extension by yourself: create extension&#xA;    btree_gin; Default is to create GIN index, when disabled, a btree&#xA;    index will be created&#xA;&#xA;PG_BACKGROUND&#xA;    Use pg_background extension to create an autonomous transaction&#xA;    instead of using a dblink wrapper. With pg &amp;gt;= 9.5 only. Default is&#xA;    to use dblink. See https://github.com/vibhorkum/pg_background about&#xA;    this extension.&#xA;&#xA;DBLINK_CONN&#xA;    By default if you have an autonomous transaction translated using&#xA;    dblink extension instead of pg_background the connection is defined&#xA;    using the values set with PG_DSN, PG_USER and PG_PWD. If you want to&#xA;    fully override the connection string use this directive as follow to&#xA;    set the connection in the autonomous transaction wrapper function.&#xA;    For example:&#xA;&#xA;            DBLINK_CONN    port=5432 dbname=pgdb host=localhost user=pguser password=pgpass&#xA;&#xA;LONGREADLEN&#xA;    Use this directive to set the database handle&#39;s &#39;LongReadLen&#39;&#xA;    attribute to a value that will be the larger than the expected size&#xA;    of the LOBs. The default is 1MB witch may not be enough to extract&#xA;    BLOBs or CLOBs. If the size of the LOB exceeds the &#39;LongReadLen&#39;&#xA;    DBD::Oracle will return a &#39;ORA-24345: A Truncation&#39; error. Default:&#xA;    1023*1024 bytes.&#xA;&#xA;    Take a look at this page to learn more:&#xA;    http://search.cpan.org/~pythian/DBD-Oracle-1.22/Oracle.pm#Data_Inter&#xA;    face_for_Persistent_LOBs&#xA;&#xA;    Important note: If you increase the value of this directive take&#xA;    care that DATA_LIMIT will probably needs to be reduced. Even if you&#xA;    only have a 1MB blob, trying to read 10000 of them (the default&#xA;    DATA_LIMIT) all at once will require 10GB of memory. You may extract&#xA;    data from those table separately and set a DATA_LIMIT to 500 or&#xA;    lower, otherwise you may experience some out of memory.&#xA;&#xA;LONGTRUNKOK&#xA;    If you want to bypass the &#39;ORA-24345: A Truncation&#39; error, set this&#xA;    directive to 1, it will truncate the data extracted to the&#xA;    LongReadLen value. Disable by default so that you will be warned if&#xA;    your LongReadLen value is not high enough.&#xA;&#xA;USE_LOB_LOCATOR&#xA;    Disable this if you want to load full content of BLOB and CLOB and&#xA;    not use LOB locators. In this case you will have to set LONGREADLEN&#xA;    to the right value. Note that this will not improve speed of BLOB&#xA;    export as most of the time is always consumed by the bytea escaping&#xA;    and in this case export is done line by line and not by chunk of&#xA;    DATA_LIMIT rows. For more information on how it works, see&#xA;    http://search.cpan.org/~pythian/DBD-Oracle-1.74/lib/DBD/Oracle.pm#Da&#xA;    ta_Interface_for_LOB_Locators&#xA;&#xA;    Default is enabled, it use LOB locators.&#xA;&#xA;LOB_CHUNK_SIZE&#xA;    Oracle recommends reading from and writing to a LOB in batches using&#xA;    a multiple of the LOB chunk size. This chunk size defaults to 8k&#xA;    (8192). Recent tests shown that the best performances can be reach&#xA;    with higher value like 512K or 4Mb.&#xA;&#xA;    A quick benchmark with 30120 rows with different size of BLOB&#xA;    (200x5Mb, 19800x212k, 10000x942K, 100x17Mb, 20x156Mb), with&#xA;    DATA_LIMIT=100, LONGREADLEN=170Mb and a total table size of 20GB&#xA;    gives:&#xA;&#xA;           no lob locator  : 22m46,218s (1365 sec., avg: 22 recs/sec)&#xA;           chunk size 8k   : 15m50,886s (951 sec., avg: 31 recs/sec)&#xA;           chunk size 512k : 1m28,161s (88 sec., avg: 342 recs/sec)&#xA;           chunk size 4Mb  : 1m23,717s (83 sec., avg: 362 recs/sec)&#xA;&#xA;    In conclusion it can be more than 10 time faster with LOB_CHUNK_SIZE&#xA;    set to 4Mb. Depending of the size of most BLOB you may want to&#xA;    adjust the value here. For example if you have a majority of small&#xA;    lobs bellow 8K, using 8192 is better to not waste space. Default&#xA;    value for LOB_CHUNK_SIZE is 512000.&#xA;&#xA;XML_PRETTY&#xA;    Force the use getStringVal() instead of getClobVal() for XML data&#xA;    export. Default is 1, enabled for backward compatibility. Set it to&#xA;    0 to use extract method a la CLOB. Note that XML value extracted&#xA;    with getStringVal() must not exceed VARCHAR2 size limit (4000)&#xA;    otherwise it will return an error.&#xA;&#xA;ENABLE_MICROSECOND&#xA;    Set it to O if you want to disable export of millisecond from Oracle&#xA;    timestamp columns. By default milliseconds are exported with the use&#xA;    of following format:&#xA;&#xA;            &#39;YYYY-MM-DD HH24:MI:SS.FF&#39;&#xA;&#xA;    Disabling will force the use of the following Oracle format:&#xA;&#xA;            to_char(..., &#39;YYYY-MM-DD HH24:MI:SS&#39;)&#xA;&#xA;    By default milliseconds are exported.&#xA;&#xA;DISABLE_COMMENT&#xA;    Set this to 1 if you don&#39;t want to export comment associated to&#xA;    tables and columns definition. Default is enabled.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Control MySQL export behavior MYSQL_PIPES_AS_CONCAT Enable this if double pipe and double ampersand (|| and &amp;amp;&amp;amp;) should not be taken as equivalent to OR and AND. It depend of the variable @sql_mode, Use it only if Ora2Pg fail on auto detecting this behavior.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;MYSQL_INTERNAL_EXTRACT_FORMAT&#xA;    Enable this directive if you want EXTRACT() replacement to use the&#xA;    internal format returned as an integer, for example DD HH24:MM:SS&#xA;    will be replaced with format; DDHH24MMSS::bigint, this depend of&#xA;    your apps usage.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Special options to handle character encoding NLS_LANG and NLS_NCHAR By default Ora2Pg will set NLS_LANG to AMERICAN_AMERICA.AL32UTF8 and NLS_NCHAR to AL32UTF8. It is not recommended to change those settings but in some case it could be useful. Using your own settings with those configuration directive will change the client encoding at Oracle side by setting the environment variables $ENV{NLS_LANG} and $ENV{NLS_NCHAR}.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;BINMODE&#xA;    By default Ora2Pg will force Perl to use utf8 I/O encoding. This is&#xA;    done through a call to the Perl pragma:&#xA;&#xA;            use open &#39;:utf8&#39;;&#xA;&#xA;    You can override this encoding by using the BINMODE directive, for&#xA;    example you can set it to :locale to use your locale or iso-8859-7,&#xA;    it will respectively use&#xA;&#xA;            use open &#39;:locale&#39;;&#xA;            use open &#39;:encoding(iso-8859-7)&#39;;&#xA;&#xA;    If you have change the NLS_LANG in non UTF8 encoding, you might want&#xA;    to set this directive. See http://perldoc.perl.org/5.14.2/open.html&#xA;    for more information. Most of the time, leave this directive&#xA;    commented.&#xA;&#xA;CLIENT_ENCODING&#xA;    By default PostgreSQL client encoding is automatically set to UTF8&#xA;    to avoid encoding issue. If you have changed the value of NLS_LANG&#xA;    you might have to change the encoding of the PostgreSQL client.&#xA;&#xA;    You can take a look at the PostgreSQL supported character sets here:&#xA;    http://www.postgresql.org/docs/9.0/static/multibyte.html&#xA;&#xA;FORCE_PLSQL_ENCODING&#xA;    To force utf8 encoding of the PL/SQL code exported, enable this&#xA;    directive. Could be helpful in some rare condition.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;PLSQL to PLPGSQL conversion Automatic code conversion from Oracle PLSQL to PostgreSQL PLPGSQL is a work in progress in Ora2Pg and surely you will always have manual work. The Perl code used for automatic conversion is all stored in a specific Perl Module named Ora2Pg/PLSQL.pm feel free to modify/add you own code and send me patches. The main work in on function, procedure, package and package body headers and parameters rewrite.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;PLSQL_PGSQL&#xA;    Enable/disable PLSQL to PLPGSQL conversion. Enabled by default.&#xA;&#xA;NULL_EQUAL_EMPTY&#xA;    Ora2Pg can replace all conditions with a test on NULL by a call to&#xA;    the coalesce() function to mimic the Oracle behavior where empty&#xA;    string are considered equal to NULL.&#xA;&#xA;            (field1 IS NULL) is replaced by (coalesce(field1::text, &#39;&#39;) = &#39;&#39;)&#xA;            (field2 IS NOT NULL) is replaced by (field2 IS NOT NULL AND field2::text &amp;lt;&amp;gt; &#39;&#39;)&#xA;&#xA;    You might want this replacement to be sure that your application&#xA;    will have the same behavior but if you have control on you&#xA;    application a better way is to change it to transform empty string&#xA;    into NULL because PostgreSQL makes the difference.&#xA;&#xA;EMPTY_LOB_NULL&#xA;    Force empty_clob() and empty_blob() to be exported as NULL instead&#xA;    as empty string for the first one and &#39;\x&#39; for the second. If NULL&#xA;    is allowed in your column this might improve data export speed if&#xA;    you have lot of empty lob. Default is to preserve the exact data&#xA;    from Oracle.&#xA;&#xA;PACKAGE_AS_SCHEMA&#xA;    If you don&#39;t want to export package as schema but as simple&#xA;    functions you might also want to replace all call to&#xA;    package_name.function_name. If you disable the PACKAGE_AS_SCHEMA&#xA;    directive then Ora2Pg will replace all call to&#xA;    package_name.function_name() by package_name_function_name().&#xA;    Default is to use a schema to emulate package.&#xA;&#xA;    The replacement will be done in all kind of DDL or code that is&#xA;    parsed by the PLSQL to PLPGSQL converter. PLSQL_PGSQL must be&#xA;    enabled or -p used in command line.&#xA;&#xA;REWRITE_OUTER_JOIN&#xA;    Enable this directive if the rewrite of Oracle native syntax (+) of&#xA;    OUTER JOIN is broken. This will force Ora2Pg to not rewrite such&#xA;    code, default is to try to rewrite simple form of right outer join&#xA;    for the moment.&#xA;&#xA;UUID_FUNCTION&#xA;    By default Ora2Pg will convert call to SYS_GUID() Oracle function&#xA;    with a call to uuid_generate_v4 from uuid-ossp extension. You can&#xA;    redefined it to use the gen_random_uuid function from pgcrypto&#xA;    extension by changing the function name. Default to&#xA;    uuid_generate_v4.&#xA;&#xA;    Note that when a RAW(16) and RAW(32) columns is found or that the&#xA;    RAW column has &#34;SYS_GUID()&#34; as default value Ora2Pg will&#xA;    automatically translate the type of the column into uuid which might&#xA;    be the right translation in most of the case. In this case data will&#xA;    be automatically migrated as PostgreSQL uuid data type provided by&#xA;    the &#34;uuid-ossp&#34; extension.&#xA;&#xA;FUNCTION_STABLE&#xA;    By default Oracle functions are marked as STABLE as they can not&#xA;    modify data unless when used in PL/SQL with variable assignment or&#xA;    as conditional expression. You can force Ora2Pg to create these&#xA;    function as VOLATILE by disabling this configuration directive.&#xA;&#xA;COMMENT_COMMIT_ROLLBACK&#xA;    By default call to COMMIT/ROLLBACK are kept untouched by Ora2Pg to&#xA;    force the user to review the logic of the function. Once it is fixed&#xA;    in Oracle source code or you want to comment this calls enable the&#xA;    following directive.&#xA;&#xA;COMMENT_SAVEPOINT&#xA;    It is common to see SAVEPOINT call inside PL/SQL procedure together&#xA;    with a ROLLBACK TO savepoint_name. When COMMENT_COMMIT_ROLLBACK is&#xA;    enabled you may want to also comment SAVEPOINT calls, in this case&#xA;    enable it.&#xA;&#xA;STRING_CONSTANT_REGEXP&#xA;    Ora2Pg replace all string constant during the pl/sql to plpgsql&#xA;    translation, string constant are all text include between single&#xA;    quote. If you have some string placeholder used in dynamic call to&#xA;    queries you can set a list of regexp to be temporary replaced to not&#xA;    break the parser. For example:&#xA;&#xA;            STRING_CONSTANT_REGEXP         &amp;lt;placeholder value=&#34;.*&#34;&amp;gt;&#xA;&#xA;    The list of regexp must use the semi colon as separator.&#xA;&#xA;ALTERNATIVE_QUOTING_REGEXP&#xA;    To support the Alternative Quoting Mechanism (&#39;Q&#39; or &#39;q&#39;) for String&#xA;    Literals set the regexp with the text capture to use to extract the&#xA;    text part. For example with a variable declared as&#xA;&#xA;            c_sample VARCHAR2(100 CHAR) := q&#39;{This doesn&#39;t work.}&#39;;&#xA;&#xA;    the regexp to use must be:&#xA;&#xA;            ALTERNATIVE_QUOTING_REGEXP     q&#39;{(.*)}&#39;&#xA;&#xA;    ora2pg will use the $$ delimiter, with the example the result will&#xA;    be:&#xA;&#xA;            c_sample varchar(100) := $$This doesn&#39;t work.$$;&#xA;&#xA;    The value of this configuration directive can be a list of regexp&#xA;    separated by a semi colon. The capture part (between parenthesis) is&#xA;    mandatory in each regexp if you want to restore the string constant.&#xA;&#xA;USE_ORAFCE&#xA;    If you want to use functions defined in the Orafce library and&#xA;    prevent Ora2Pg to translate call to these functions, enable this&#xA;    directive. The Orafce library can be found here:&#xA;    https://github.com/orafce/orafce&#xA;&#xA;    By default Ora2pg rewrite add_month(), add_year(), date_trunc() and&#xA;    to_char() functions, but you may prefer to use the orafce version of&#xA;    these function that do not need any code transformation.&#xA;&#xA;AUTONOMOUS_TRANSACTION&#xA;    Enable translation of autonomous transactions into a wrapper&#xA;    function using dblink or pg_background extension. If you don&#39;t want&#xA;    to use this translation and just want the function to be exported as&#xA;    a normal one without the pragma call, disable this directive.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Materialized view Materialized views are exported as snapshot &#34;Snapshot Materialized Views&#34; as PostgreSQL only supports full refresh.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;If you want to import the materialized views in PostgreSQL prior to 9.3&#xA;you have to set configuration directive PG_SUPPORTS_MVIEW to 0. In this&#xA;case Ora2Pg will export all materialized views as explain in this&#xA;document:&#xA;&#xA;        http://tech.jonathangardner.net/wiki/PostgreSQL/Materialized_Views.&#xA;&#xA;When exporting materialized view Ora2Pg will first add the SQL code to&#xA;create the &#34;materialized_views&#34; table:&#xA;&#xA;        CREATE TABLE materialized_views (&#xA;                mview_name text NOT NULL PRIMARY KEY,&#xA;                view_name text NOT NULL,&#xA;                iname text,&#xA;                last_refresh TIMESTAMP WITH TIME ZONE&#xA;        );&#xA;&#xA;all materialized views will have an entry in this table. It then adds&#xA;the plpgsql code to create tree functions:&#xA;&#xA;        create_materialized_view(text, text, text) used to create a materialized view&#xA;        drop_materialized_view(text) used to delete a materialized view&#xA;        refresh_full_materialized_view(text) used to refresh a view&#xA;&#xA;then it adds the SQL code to create the view and the materialized view:&#xA;&#xA;        CREATE VIEW mviewname_mview AS&#xA;        SELECT ... FROM ...;&#xA;&#xA;        SELECT create_materialized_view(&#39;mviewname&#39;,&#39;mviewname_mview&#39;, change with the name of the column to used for the index);&#xA;&#xA;The first argument is the name of the materialized view, the second the&#xA;name of the view on which the materialized view is based and the third&#xA;is the column name on which the index should be build (aka most of the&#xA;time the primary key). This column is not automatically deduced so you&#xA;need to replace its name.&#xA;&#xA;As said above Ora2Pg only supports snapshot materialized views so the&#xA;table will be entirely refreshed by issuing first a truncate of the&#xA;table and then by load again all data from the view:&#xA;&#xA;         refresh_full_materialized_view(&#39;mviewname&#39;);&#xA;&#xA;To drop the materialized view you just have to call the&#xA;drop_materialized_view() function with the name of the materialized view&#xA;as parameter.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Other configuration directives DEBUG Set it to 1 will enable verbose output.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;IMPORT&#xA;    You can define common Ora2Pg configuration directives into a single&#xA;    file that can be imported into other configuration files with the&#xA;    IMPORT configuration directive as follow:&#xA;&#xA;            IMPORT  commonfile.conf&#xA;&#xA;    will import all configuration directives defined into&#xA;    commonfile.conf into the current configuration file.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Exporting views as PostgreSQL tables You can export any Oracle view as a PostgreSQL table simply by setting TYPE configuration option to TABLE to have the corresponding create table statement. Or use type COPY or INSERT to export the corresponding data. To allow that you have to specify your views in the VIEW_AS_TABLE configuration option.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Then if Ora2Pg finds the view it will extract its schema (if TYPE=TABLE)&#xA;into a PG create table form, then it will extract the data (if TYPE=COPY&#xA;or INSERT) following the view schema.&#xA;&#xA;For example, with the following view:&#xA;&#xA;        CREATE OR REPLACE VIEW product_prices (category_id, product_count, low_price, high_price) AS&#xA;        SELECT  category_id, COUNT(*) as product_count,&#xA;            MIN(list_price) as low_price,&#xA;            MAX(list_price) as high_price&#xA;         FROM   product_information&#xA;        GROUP BY category_id;&#xA;&#xA;Setting VIEW_AS_TABLE to product_prices and using export type TABLE,&#xA;will force Ora2Pg to detect columns returned types and to generate a&#xA;create table statement:&#xA;&#xA;        CREATE TABLE product_prices (&#xA;                category_id bigint,&#xA;                product_count integer,&#xA;                low_price numeric,&#xA;                high_price numeric&#xA;        );&#xA;&#xA;Data will be loaded following the COPY or INSERT export type and the&#xA;view declaration.&#xA;&#xA;You can use the ALLOW and EXCLUDE directive in addition to filter other&#xA;objects to export.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Export as Kettle transformation XML files The KETTLE export type is useful if you want to use Penthalo Data Integrator (Kettle) to import data to PostgreSQL. With this type of export Ora2Pg will generate one XML Kettle transformation files (.ktr) per table and add a line to manually execute the transformation in the output.sql file. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        ora2pg -c ora2pg.conf -t KETTLE -j 12 -a MYTABLE -o load_mydata.sh&#xA;&#xA;will generate one file called &#39;HR.MYTABLE.ktr&#39; and add a line to the&#xA;output file (load_mydata.sh):&#xA;&#xA;        #!/bin/sh&#xA;&#xA;        KETTLE_TEMPLATE_PATH=&#39;.&#39;&#xA;&#xA;        JAVAMAXMEM=4096 ./pan.sh -file $KETTLE_TEMPLATE_PATH/HR.MYTABLE.ktr -level Detailed&#xA;&#xA;The -j 12 option will create a template with 12 processes to insert data&#xA;into PostgreSQL. It is also possible to specify the number of parallel&#xA;queries used to extract data from the Oracle with the -J command line&#xA;option as follow:&#xA;&#xA;        ora2pg -c ora2pg.conf -t KETTLE -J 4 -j 12 -a EMPLOYEES -o load_mydata.sh&#xA;&#xA;This is only possible if you have defined the technical key to used to&#xA;split the query between cores in the DEFINED_PKEY configuration&#xA;directive. For example:&#xA;&#xA;        DEFINED_PK      EMPLOYEES:employee_id&#xA;&#xA;will force the number of Oracle connection copies to 4 and defined the&#xA;SQL query as follow in the Kettle XML transformation file:&#xA;&#xA;        &amp;lt;sql&amp;gt;SELECT * FROM HR.EMPLOYEES WHERE ABS(MOD(employee_id,${Internal.Step.Unique.Count}))=${Internal.Step.Unique.Number}&amp;lt;/sql&amp;gt;&#xA;&#xA;The KETTLE export type requires that the Oracle and PostgreSQL DSN are&#xA;defined. You can also activate the TRUNCATE_TABLE directive to force a&#xA;truncation of the table before data import.&#xA;&#xA;The KETTLE export type is an original work of Marc Cousin.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Migration cost assessment Estimating the cost of a migration process from Oracle to PostgreSQL is not easy. To obtain a good assessment of this migration cost, Ora2Pg will inspect all database objects, all functions and stored procedures to detect if there&#39;s still some objects and PL/SQL code that can not be automatically converted by Ora2Pg.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Ora2Pg has a content analysis mode that inspect the Oracle database to&#xA;generate a text report on what the Oracle database contains and what can&#xA;not be exported.&#xA;&#xA;To activate the &#34;analysis and report&#34; mode, you have to use the export&#xA;de type SHOW_REPORT like in the following command:&#xA;&#xA;        ora2pg -t SHOW_REPORT&#xA;&#xA;Here is a sample report obtained with this command:&#xA;&#xA;        --------------------------------------&#xA;        Ora2Pg: Oracle Database Content Report&#xA;        --------------------------------------&#xA;        Version Oracle Database 10g Enterprise Edition Release 10.2.0.1.0&#xA;        Schema  HR&#xA;        Size  880.00 MB&#xA;     &#xA;        --------------------------------------&#xA;        Object  Number  Invalid Comments&#xA;        --------------------------------------&#xA;        CLUSTER   2 0 Clusters are not supported and will not be exported.&#xA;        FUNCTION  40  0 Total size of function code: 81992.&#xA;        INDEX     435 0 232 index(es) are concerned by the export, others are automatically generated and will&#xA;                                        do so on PostgreSQL. 1 bitmap index(es). 230 b-tree index(es). 1 reversed b-tree index(es)&#xA;                                        Note that bitmap index(es) will be exported as b-tree index(es) if any. Cluster, domain,&#xA;                                        bitmap join and IOT indexes will not be exported at all. Reverse indexes are not exported&#xA;                                        too, you may use a trigram-based index (see pg_trgm) or a reverse() function based index&#xA;                                        and search. You may also use &#39;varchar_pattern_ops&#39;, &#39;text_pattern_ops&#39; or &#39;bpchar_pattern_ops&#39;&#xA;                                        operators in your indexes to improve search with the LIKE operator respectively into&#xA;                                        varchar, text or char columns.&#xA;        MATERIALIZED VIEW 1 0 All materialized view will be exported as snapshot materialized views, they&#xA;                                        are only updated when fully refreshed.&#xA;        PACKAGE BODY  2 1 Total size of package code: 20700.&#xA;        PROCEDURE 7 0 Total size of procedure code: 19198.&#xA;        SEQUENCE  160 0 Sequences are fully supported, but all call to sequence_name.NEXTVAL or sequence_name.CURRVAL&#xA;                                        will be transformed into NEXTVAL(&#39;sequence_name&#39;) or CURRVAL(&#39;sequence_name&#39;).&#xA;        TABLE     265 0 1 external table(s) will be exported as standard table. See EXTERNAL_TO_FDW configuration&#xA;                                        directive to export as file_fdw foreign tables or use COPY in your code if you just&#xA;                                        want to load data from external files. 2 binary columns. 4 unknown types.&#xA;        TABLE PARTITION 8 0 Partitions are exported using table inheritance and check constraint. 1 HASH partitions.&#xA;                                        2 LIST partitions. 6 RANGE partitions. Note that Hash partitions are not supported.&#xA;        TRIGGER   30  0 Total size of trigger code: 21677.&#xA;        TYPE      7 1 5 type(s) are concerned by the export, others are not supported. 2 Nested Tables.&#xA;                                        2 Object type. 1 Subtype. 1 Type Boby. 1 Type inherited. 1 Varrays. Note that Type&#xA;                                        inherited and Subtype are converted as table, type inheritance is not supported.&#xA;        TYPE BODY 0 3 Export of type with member method are not supported, they will not be exported.&#xA;        VIEW      7 0 Views are fully supported, but if you have updatable views you will need to use&#xA;                                        INSTEAD OF triggers.&#xA;        DATABASE LINK 1 0 Database links will not be exported. You may try the dblink perl contrib module or use&#xA;                                        the SQL/MED PostgreSQL features with the different Foreign Data Wrapper (FDW) extensions.&#xA;                                    &#xA;        Note: Invalid code will not be exported unless the EXPORT_INVALID configuration directive is activated.&#xA;&#xA;Once the database can be analysed, Ora2Pg, by his ability to convert SQL&#xA;and PL/SQL code from Oracle syntax to PostgreSQL, can go further by&#xA;estimating the code difficulties and estimate the time necessary to&#xA;operate a full database migration.&#xA;&#xA;To estimate the migration cost in man-days, Ora2Pg allow you to use a&#xA;configuration directive called ESTIMATE_COST that you can also enabled&#xA;at command line:&#xA;&#xA;        --estimate_cost&#xA;&#xA;This feature can only be used with the SHOW_REPORT, FUNCTION, PROCEDURE,&#xA;PACKAGE and QUERY export type.&#xA;&#xA;        ora2pg -t SHOW_REPORT  --estimate_cost&#xA;&#xA;The generated report is same as above but with a new &#39;Estimated cost&#39;&#xA;column as follow:&#xA;&#xA;        --------------------------------------&#xA;        Ora2Pg: Oracle Database Content Report&#xA;        --------------------------------------&#xA;        Version Oracle Database 10g Express Edition Release 10.2.0.1.0&#xA;        Schema  HR&#xA;        Size  890.00 MB&#xA;     &#xA;        --------------------------------------&#xA;        Object  Number  Invalid Estimated cost  Comments&#xA;        --------------------------------------&#xA;        DATABASE LINK  3 0 9 Database links will be exported as SQL/MED PostgreSQL&#39;s Foreign Data Wrapper (FDW) extensions&#xA;                                        using oracle_fdw.&#xA;        FUNCTION  2 0 7 Total size of function code: 369 bytes. HIGH_SALARY: 2, VALIDATE_SSN: 3.&#xA;        INDEX 21  0 11  11 index(es) are concerned by the export, others are automatically generated and will do so&#xA;                                        on PostgreSQL. 11 b-tree index(es). Note that bitmap index(es) will be exported as b-tree&#xA;                                        index(es) if any. Cluster, domain, bitmap join and IOT indexes will not be exported at all.&#xA;                                        Reverse indexes are not exported too, you may use a trigram-based index (see pg_trgm) or a&#xA;                                        reverse() function based index and search. You may also use &#39;varchar_pattern_ops&#39;, &#39;text_pattern_ops&#39;&#xA;                                        or &#39;bpchar_pattern_ops&#39; operators in your indexes to improve search with the LIKE operator&#xA;                                        respectively into varchar, text or char columns.&#xA;        JOB 0 0 0 Job are not exported. You may set external cron job with them.&#xA;        MATERIALIZED VIEW 1 0 3 All materialized view will be exported as snapshot materialized views, they&#xA;                                                are only updated when fully refreshed.&#xA;        PACKAGE BODY  0 2 54  Total size of package code: 2487 bytes. Number of procedures and functions found&#xA;                                                inside those packages: 7. two_proc.get_table: 10, emp_mgmt.create_dept: 4,&#xA;                                                emp_mgmt.hire: 13, emp_mgmt.increase_comm: 4, emp_mgmt.increase_sal: 4,&#xA;                                                emp_mgmt.remove_dept: 3, emp_mgmt.remove_emp: 2.&#xA;        PROCEDURE 4 0 39  Total size of procedure code: 2436 bytes. TEST_COMMENTAIRE: 2, SECURE_DML: 3,&#xA;                                                PHD_GET_TABLE: 24, ADD_JOB_HISTORY: 6.&#xA;        SEQUENCE  3 0 0 Sequences are fully supported, but all call to sequence_name.NEXTVAL or sequence_name.CURRVAL&#xA;                                                will be transformed into NEXTVAL(&#39;sequence_name&#39;) or CURRVAL(&#39;sequence_name&#39;).&#xA;        SYNONYM   3 0 4 SYNONYMs will be exported as views. SYNONYMs do not exists with PostgreSQL but a common workaround&#xA;                                                is to use views or set the PostgreSQL search_path in your session to access&#xA;                                                object outside the current schema.&#xA;                                                user1.emp_details_view_v is an alias to hr.emp_details_view.&#xA;                                                user1.emp_table is an alias to hr.employees@other_server.&#xA;                                                user1.offices is an alias to hr.locations.&#xA;        TABLE 17  0 8.5 1 external table(s) will be exported as standard table. See EXTERNAL_TO_FDW configuration&#xA;                                        directive to export as file_fdw foreign tables or use COPY in your code if you just want to&#xA;                                        load data from external files. 2 binary columns. 4 unknown types.&#xA;        TRIGGER 1 1 4 Total size of trigger code: 123 bytes. UPDATE_JOB_HISTORY: 2.&#xA;        TYPE  7 1 5 5 type(s) are concerned by the export, others are not supported. 2 Nested Tables. 2 Object type.&#xA;                                        1 Subtype. 1 Type Boby. 1 Type inherited. 1 Varrays. Note that Type inherited and Subtype are&#xA;                                        converted as table, type inheritance is not supported.&#xA;        TYPE BODY 0 3 30  Export of type with member method are not supported, they will not be exported.&#xA;        VIEW  1 1 1 Views are fully supported, but if you have updatable views you will need to use INSTEAD OF triggers.&#xA;        --------------------------------------&#xA;        Total 65  8 162.5 162.5 cost migration units means approximatively 2 man day(s).&#xA;&#xA;The last line shows the total estimated migration code in man-days&#xA;following the number of migration units estimated for each object. This&#xA;migration unit represent around five minutes for a PostgreSQL expert. If&#xA;this is your first migration you can get it higher with the&#xA;configuration directive COST_UNIT_VALUE or the --cost_unit_value command&#xA;line option:&#xA;&#xA;        ora2pg -t SHOW_REPORT  --estimate_cost --cost_unit_value 10&#xA;&#xA;Ora2Pg is also able to give you a migration difficulty level assessment,&#xA;here a sample:&#xA;&#xA;Migration level: B-5&#xA;&#xA;    Migration levels:&#xA;        A - Migration that might be run automatically&#xA;        B - Migration with code rewrite and a human-days cost up to 5 days&#xA;        C - Migration with code rewrite and a human-days cost above 5 days&#xA;    Technical levels:&#xA;        1 = trivial: no stored functions and no triggers&#xA;        2 = easy: no stored functions but with triggers, no manual rewriting&#xA;        3 = simple: stored functions and/or triggers, no manual rewriting&#xA;        4 = manual: no stored functions but with triggers or views with code rewriting&#xA;        5 = difficult: stored functions and/or triggers with code rewriting&#xA;&#xA;This assessment consist in a letter A or B to specify if the migration&#xA;needs manual rewriting or not. And a number from 1 up to 5 to give you a&#xA;technical difficulty level. You have an additional option&#xA;--human_days_limit to specify the number of human-days limit where the&#xA;migration level should be set to C to indicate that it need a huge&#xA;amount of work and a full project management with migration support.&#xA;Default is 10 human-days. You can use the configuration directive&#xA;HUMAN_DAYS_LIMIT to change this default value permanently.&#xA;&#xA;This feature has been developed to help you or your boss to decide which&#xA;database to migrate first and the team that must be mobilized to operate&#xA;the migration.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Global Oracle and MySQL migration assessment Ora2Pg come with a script ora2pg_scanner that can be used when you have a huge number of instances and schema to scan for migration assessment.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: ora2pg_scanner -l CSVFILE [-o OUTDIR]&#xA;&#xA;   -b | --binpath DIR: full path to directory where the ora2pg binary stays.&#xA;                Might be useful only on Windows OS.&#xA;   -c | --config FILE: set custom configuration file to use otherwise ora2pg&#xA;                will use the default: /etc/ora2pg/ora2pg.conf.&#xA;   -l | --list FILE : CSV file containing a list of databases to scan with&#xA;                all required information. The first line of the file&#xA;                can contain the following header that describes the&#xA;                format that must be used:&#xA;&#xA;                &#34;type&#34;,&#34;schema/database&#34;,&#34;dsn&#34;,&#34;user&#34;,&#34;password&#34;&#xA;&#xA;   -o | --outdir DIR : (optional) by default all reports will be dumped to a&#xA;                directory named &#39;output&#39;, it will be created automatically.&#xA;                If you want to change the name of this directory, set the name&#xA;                at second argument.&#xA;&#xA;   -t | --test : just try all connections by retrieving the required schema&#xA;                 or database name. Useful to validate your CSV list file.&#xA;   -u | --unit MIN : redefine globally the migration cost unit value in minutes.&#xA;                 Default is taken from the ora2pg.conf (default 5 minutes).&#xA;&#xA;   Here is a full example of a CSV databases list file:&#xA;&#xA;        &#34;type&#34;,&#34;schema/database&#34;,&#34;dsn&#34;,&#34;user&#34;,&#34;password&#34;&#xA;        &#34;MYSQL&#34;,&#34;sakila&#34;,&#34;dbi:mysql:host=192.168.1.10;database=sakila;port=3306&#34;,&#34;root&#34;,&#34;secret&#34;&#xA;        &#34;ORACLE&#34;,&#34;HR&#34;,&#34;dbi:Oracle:host=192.168.1.10;sid=XE;port=1521&#34;,&#34;system&#34;,&#34;manager&#34;&#xA;&#xA;   The CSV field separator must be a comma.&#xA;&#xA;   Note that if you want to scan all schemas from an Oracle instance you just&#xA;   have to leave the schema field empty, Ora2Pg will automatically detect all&#xA;   available schemas and generate a report for each one. Of course you need to&#xA;   use a connection user with enough privileges to be able to scan all schemas.&#xA;   For example:&#xA;&#xA;        &#34;ORACLE&#34;,&#34;&#34;,&#34;dbi:Oracle:host=192.168.1.10;sid=XE;port=1521&#34;,&#34;system&#34;,&#34;manager&#34;&#xA;&#xA;   will generate a report for all schema in the XE instance. Note that in this&#xA;   case the SCHEMA directive in ora2pg.conf must not be set.&#xA;&#xA;It will generate a CSV file with the assessment result, one line per&#xA;schema or database and a detailed HTML report for each database scanned.&#xA;&#xA;Hint: Use the -t | --test option before to test all your connections in&#xA;your CSV file.&#xA;&#xA;For Windows users you must use the -b command line option to set the&#xA;directory where ora2pg_scanner stays otherwise the ora2pg command calls&#xA;will fail.&#xA;&#xA;In the migration assessment details about functions Ora2Pg always&#xA;include per default 2 migration units for TEST and 1 unit for SIZE per&#xA;1000 characters in the code. This mean that by default it will add 15&#xA;minutes in the migration assessment per function. Obviously if you have&#xA;unitary tests or very simple functions this will not represent the real&#xA;migration time.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Migration assessment method Migration unit scores given to each type of Oracle database object are defined in the Perl library lib/Ora2Pg/PLSQL.pm in the %OBJECT_SCORE variable definition.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;The number of PL/SQL lines associated to a migration unit is also&#xA;defined in this file in the $SIZE_SCORE variable value.&#xA;&#xA;The number of migration units associated to each PL/SQL code&#xA;difficulties can be found in the same Perl library lib/Ora2Pg/PLSQL.pm&#xA;in the hash %UNCOVERED_SCORE initialization.&#xA;&#xA;This assessment method is a work in progress so I&#39;m expecting feedbacks&#xA;on migration experiences to polish the scores/units attributed in those&#xA;variables.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Improving indexes and constraints creation speed Using the LOAD export type and a file containing SQL orders to perform, it is possible to dispatch those orders over multiple PostgreSQL connections. To be able to use this feature, the PG_DSN, PG_USER and PG_PWD must be set. Then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        ora2pg -t LOAD -c config/ora2pg.conf -i schema/tables/INDEXES_table.sql -j 4&#xA;&#xA;will dispatch indexes creation over 4 simultaneous PostgreSQL&#xA;connections.&#xA;&#xA;This will considerably accelerate this part of the migration process&#xA;with huge data size.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Exporting LONG RAW If you still have columns defined as LONG RAW, Ora2Pg will not be able to export these kind of data. The OCI library fail to export them and always return the same first record. To be able to export the data you need to transform the field as BLOB by creating a temporary table before migrating data. For example, the Oracle table:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        SQL&amp;gt; DESC TEST_LONGRAW&#xA;         Name                 NULL ?   Type&#xA;         -------------------- -------- ----------------------------&#xA;         ID                            NUMBER&#xA;         C1                            LONG RAW&#xA;&#xA;need to be &#34;translated&#34; into a table using BLOB as follow:&#xA;&#xA;        CREATE TABLE test_blob (id NUMBER, c1 BLOB);&#xA;&#xA;And then copy the data with the following INSERT query:&#xA;&#xA;        INSERT INTO test_blob SELECT id, to_lob(c1) FROM test_longraw;&#xA;&#xA;Then you just have to exclude the original table from the export (see&#xA;EXCLUDE directive) and to renamed the new temporary table on the fly&#xA;using the REPLACE_TABLES configuration directive.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Global variables Oracle allow the use of global variables defined in packages. Ora2Pg will export these variables for PostgreSQL as user defined custom variables available in a session. Oracle variables assignment are exported as call to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    PERFORM set_config(&#39;pkgname.varname&#39;, value, false);&#xA;&#xA;Use of these variables in the code is replaced by:&#xA;&#xA;    current_setting(&#39;pkgname.varname&#39;)::global_variables_type;&#xA;&#xA;where global_variables_type is the type of the variable extracted from&#xA;the package definition.&#xA;&#xA;If the variable is a constant or have a default value assigned at&#xA;declaration, Ora2Pg will create a file global_variables.conf with the&#xA;definition to include in the postgresql.conf file so that their values&#xA;will already be set at database connection. Note that the value can&#xA;always modified by the user so you can not have exactly a constant.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Hints Converting your queries with Oracle style outer join (+) syntax to ANSI standard SQL at the Oracle side can save you lot of time for the migration. You can use TOAD Query Builder can re-write these using the proper ANSI syntax, see: &lt;a href=&#34;http://www.toadworld.com/products/toad-for-oracle/f/10/t/9518.aspx&#34;&gt;http://www.toadworld.com/products/toad-for-oracle/f/10/t/9518.aspx&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;There&#39;s also an alternative with SQL Developer Data Modeler, see&#xA;http://www.thatjeffsmith.com/archive/2012/01/sql-developer-data-modeler-&#xA;quick-tip-use-oracle-join-syntax-or-ansi/&#xA;&#xA;Toad is also able to rewrite the native Oracle DECODE() syntax into ANSI&#xA;standard SQL CASE statement. You can find some slide about this in a&#xA;presentation given at PgConf.RU:&#xA;http://ora2pg.darold.net/slides/ora2pg_the_hard_way.pdf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Test the migration The type of action called TEST allow you to check that all objects from Oracle database have been created under PostgreSQL. Of course PG_DSN must be set to be able to check PostgreSQL side.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Note that this feature respect the schema name limitation if&#xA;EXPORT_SCHEMA and SCHEMA or PG_SCHEMA are defined. If only EXPORT_SCHEMA&#xA;is set all schemes from Oracle and PostgreSQL are scanned. You can&#xA;filter to a single schema using SCHEMA and/or PG_SCHEMA but you can not&#xA;filter on a list of schema. To test a list of schema you will have to&#xA;repeat the calls to Ora2Pg by specifying a single schema each time.&#xA;&#xA;For example command:&#xA;&#xA;        ora2pg -t TEST -c config/ora2pg.conf &amp;gt; migration_diff.txt&#xA;&#xA;Will create a file containing the report of all object and row count on&#xA;both side, Oracle and PostgreSQL, with an error section giving you the&#xA;detail of the differences for each kind of object. Here is a sample&#xA;result:&#xA;&#xA;        [TEST INDEXES COUNT]&#xA;        ORACLEDB:DEPARTMENTS:2&#xA;        POSTGRES:departments:1&#xA;        ORACLEDB:EMPLOYEES:6&#xA;        POSTGRES:employees:6&#xA;        [ERRORS INDEXES COUNT]&#xA;        Table departments doesn&#39;t have the same number of indexes in Oracle (2) and in PostgreSQL (1).&#xA;&#xA;        [TEST UNIQUE CONSTRAINTS COUNT]&#xA;        ORACLEDB:DEPARTMENTS:1&#xA;        POSTGRES:departments:1&#xA;        ORACLEDB:EMPLOYEES:1&#xA;        POSTGRES:employees:1&#xA;        [ERRORS UNIQUE CONSTRAINTS COUNT]&#xA;        OK, Oracle and PostgreSQL have the same number of unique constraints.&#xA;&#xA;        [TEST PRIMARY KEYS COUNT]&#xA;        ORACLEDB:DEPARTMENTS:1&#xA;        POSTGRES:departments:1&#xA;        ORACLEDB:EMPLOYEES:1&#xA;        POSTGRES:employees:1&#xA;        [ERRORS PRIMARY KEYS COUNT]&#xA;        OK, Oracle and PostgreSQL have the same number of primary keys.&#xA;&#xA;        [TEST CHECK CONSTRAINTS COUNT]&#xA;        ORACLEDB:DEPARTMENTS:1&#xA;        POSTGRES:departments:1&#xA;        ORACLEDB:EMPLOYEES:1&#xA;        POSTGRES:employees:1&#xA;        [ERRORS CHECK CONSTRAINTS COUNT]&#xA;        OK, Oracle and PostgreSQL have the same number of check constraints.&#xA;&#xA;        [TEST NOT NULL CONSTRAINTS COUNT]&#xA;        ORACLEDB:DEPARTMENTS:1&#xA;        POSTGRES:departments:1&#xA;        ORACLEDB:EMPLOYEES:1&#xA;        POSTGRES:employees:1&#xA;        [ERRORS NOT NULL CONSTRAINTS COUNT]&#xA;        OK, Oracle and PostgreSQL have the same number of not null constraints.&#xA;&#xA;        [TEST COLUMN DEFAULT VALUE COUNT]&#xA;        ORACLEDB:DEPARTMENTS:1&#xA;        POSTGRES:departments:1&#xA;        ORACLEDB:EMPLOYEES:1&#xA;        POSTGRES:employees:1&#xA;        [ERRORS COLUMN DEFAULT VALUE COUNT]&#xA;        OK, Oracle and PostgreSQL have the same number of column default value.&#xA;&#xA;        [TEST IDENTITY COLUMN COUNT]&#xA;        ORACLEDB:DEPARTMENTS:1&#xA;        POSTGRES:departments:1&#xA;        ORACLEDB:EMPLOYEES:0&#xA;        POSTGRES:employees:0&#xA;        [ERRORS IDENTITY COLUMN COUNT]&#xA;        OK, Oracle and PostgreSQL have the same number of identity column.&#xA;&#xA;        [TEST FOREIGN KEYS COUNT]&#xA;        ORACLEDB:DEPARTMENTS:0&#xA;        POSTGRES:departments:0&#xA;        ORACLEDB:EMPLOYEES:1&#xA;        POSTGRES:employees:1&#xA;        [ERRORS FOREIGN KEYS COUNT]&#xA;        OK, Oracle and PostgreSQL have the same number of foreign keys.&#xA;&#xA;        [TEST TABLE COUNT]&#xA;        ORACLEDB:TABLE:2&#xA;        POSTGRES:TABLE:2&#xA;        [ERRORS TABLE COUNT]&#xA;        OK, Oracle and PostgreSQL have the same number of TABLE.&#xA;&#xA;        [TEST TABLE TRIGGERS COUNT]&#xA;        ORACLEDB:DEPARTMENTS:0&#xA;        POSTGRES:departments:0&#xA;        ORACLEDB:EMPLOYEES:1&#xA;        POSTGRES:employees:1&#xA;        [ERRORS TABLE TRIGGERS COUNT]&#xA;        OK, Oracle and PostgreSQL have the same number of table triggers.&#xA;&#xA;        [TEST TRIGGER COUNT]&#xA;        ORACLEDB:TRIGGER:2&#xA;        POSTGRES:TRIGGER:2&#xA;        [ERRORS TRIGGER COUNT]&#xA;        OK, Oracle and PostgreSQL have the same number of TRIGGER.&#xA;&#xA;        [TEST VIEW COUNT]&#xA;        ORACLEDB:VIEW:1&#xA;        POSTGRES:VIEW:1&#xA;        [ERRORS VIEW COUNT]&#xA;        OK, Oracle and PostgreSQL have the same number of VIEW.&#xA;&#xA;        [TEST MVIEW COUNT]&#xA;        ORACLEDB:MVIEW:0&#xA;        POSTGRES:MVIEW:0&#xA;        [ERRORS MVIEW COUNT]&#xA;        OK, Oracle and PostgreSQL have the same number of MVIEW.&#xA;&#xA;        [TEST SEQUENCE COUNT]&#xA;        ORACLEDB:SEQUENCE:1&#xA;        POSTGRES:SEQUENCE:0&#xA;        [ERRORS SEQUENCE COUNT]&#xA;        SEQUENCE does not have the same count in Oracle (1) and in PostgreSQL (0).&#xA;&#xA;        [TEST TYPE COUNT]&#xA;        ORACLEDB:TYPE:1&#xA;        POSTGRES:TYPE:0&#xA;        [ERRORS TYPE COUNT]&#xA;        TYPE does not have the same count in Oracle (1) and in PostgreSQL (0).&#xA;&#xA;        [TEST FDW COUNT]&#xA;        ORACLEDB:FDW:0&#xA;        POSTGRES:FDW:0&#xA;        [ERRORS FDW COUNT]&#xA;        OK, Oracle and PostgreSQL have the same number of FDW.&#xA;&#xA;        [TEST FUNCTION COUNT]&#xA;        ORACLEDB:FUNCTION:3&#xA;        POSTGRES:FUNCTION:3&#xA;        [ERRORS FUNCTION COUNT]&#xA;        OK, Oracle and PostgreSQL have the same number of functions.&#xA;&#xA;        [TEST SEQUENCE VALUES]&#xA;        ORACLEDB:EMPLOYEES_NUM_SEQ:1285&#xA;        POSTGRES:employees_num_seq:1285&#xA;        [ERRORS SEQUENCE VALUES COUNT]&#xA;        OK, Oracle and PostgreSQL have the same values for sequences&#xA;&#xA;        [TEST ROWS COUNT]&#xA;        ORACLEDB:DEPARTMENTS:27&#xA;        POSTGRES:departments:27&#xA;        ORACLEDB:EMPLOYEES:854&#xA;        POSTGRES:employees:854&#xA;        [ERRORS ROWS COUNT]&#xA;        OK, Oracle and PostgreSQL have the same number of rows.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Data validation Data validation consists in comparing data retrieved from a foreign table pointing to the source Oracle table and a local PostgreSQL table resulting from the data export.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;To run data validation you can use a direct connection like any other&#xA;Ora2Pg action but you can also use the oracle_fdw or mysql_fdw extension&#xA;provided that FDW_SERVER and PG_DSN configuration directives are set.&#xA;&#xA;By default Ora2Pg will extract the 10000 first rows from both side, you&#xA;can change this value using directive DATA_VALIDATION_ROWS. When it is&#xA;set to zero all rows of the tables will be compared.&#xA;&#xA;Data validation requires that the table has a primary key or unique&#xA;index and that the key columns is not a LOB. Rows will be sorted using&#xA;this unique key. Due to differences in sort behavior between Oracle and&#xA;PostgreSQL, if the collation of unique key columns in PostgreSQL is not&#xA;&#39;C&#39;, the sort order can be different compared to Oracle. In this case&#xA;the data validation will fail.&#xA;&#xA;Data validation must be done before any data is modified.&#xA;&#xA;Ora2Pg will stop comparing two tables after DATA_VALIDATION_ROWS is&#xA;reached or that 10 errors has been encountered, result is dumped in a&#xA;file named &#34;data_validation.log&#34; written in the current directory by&#xA;default. The number of error before stopping the diff between rows can&#xA;be controlled using the configuration directive DATA_VALIDATION_ERROR.&#xA;All rows in errors are printed to the output file for your analyze.&#xA;&#xA;It is possible to parallelize data validation by using -P option or the&#xA;corresponding configuration directive PARALLEL_TABLES in ora2pg.conf.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use of System Change Number (SCN) Ora2Pg is able to export data as of a specific SCN. You can set it at command line using the -S or --scn option. You can give a specific SCN or if you want to use the current SCN at first connection time set the value to &#39;current&#39;. In this last case the connection user has the &#34;SELECT ANY DICTIONARY&#34; or the &#34;SELECT_CATALOG_ROLE&#34; role, the current SCN is looked at the v$database view.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Example of use:&#xA;&#xA;    ora2pg -c ora2pg.conf -t COPY --scn 16605281&#xA;&#xA;This adds the following clause to the query used to retrieve data for&#xA;example:&#xA;&#xA;    AS OF SCN 16605281&#xA;&#xA;You can also use th --scn option to use the Oracle flashback capabality&#xA;by specifying a timestamp expression instead of a SCN. For example:&#xA;&#xA;    ora2pg -c ora2pg.conf -t COPY --scn &#34;TO_TIMESTAMP(&#39;2021-12-01 00:00:00&#39;, &#39;YYYY-MM-DD HH:MI:SS&#39;)&#34;&#xA;&#xA;This will add the following clause to the query used to retrieve data:&#xA;&#xA;    AS OF TIMESTAMP TO_TIMESTAMP(&#39;2021-12-01 00:00:00&#39;, &#39;YYYY-MM-DD HH:MI:SS&#39;)&#xA;&#xA;or for example to only retrive yesterday&#39;s data:&#xA;&#xA;    ora2pg -c ora2pg.conf -t COPY --scn &#34;SYSDATE - 1&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Change Data Capture (CDC) Ora2Pg do not have such feature which allow to import data and to only apply changes after the first import. But you can use the --cdc_ready option to export data with registration of the SCN at the time of the table export. All SCN per tables are written to a file name TABLES_SCN.log. This SCN can be used with a CDC tool.&lt;/p&gt; &#xA;&lt;p&gt;Importing BLOB as large objects By default Ora2Pg imports Oracle BLOB as bytea, the destination column is created using the bytea data type. If you want to use large object instead of bytea, just add the --blob_to_lo option to the ora2pg command. It will create the destination column as data type Oid and will save the BLOB as a large object using the lo_from_bytea() function. The Oid returned by the call to lo_from_bytea() is inserted in the destination column instead of a bytea. Because of the use of the function this option can only be used with actions SHOW_COLUMN, TABLE and INSERT. Action COPY is not allowed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;If you want to use COPY or have huge size BLOB ( &amp;gt; 1GB) than can not be&#xA;imported using lo_from_bytea() you can add option --lo_import to the&#xA;ora2pg command. This will allow to import data in two passes.&#xA;&#xA;1) Export data using COPY or INSERT will set the Oid destination column&#xA;for BLOB to value 0 and save the BLOB value into a dedicated file. It&#xA;will also create a Shell script to import the BLOB files into the&#xA;database using psql command \lo_import and to update the table Oid&#xA;column to the returned large object Oid. The script is named&#xA;lo_import-TABLENAME.sh&#xA;&#xA;2) Execute all scripts lo_import-TABLENAME.sh after setting the&#xA;environment variables PGDATABASE and optionally PGHOST, PGPORT, PGUSER,&#xA;etc. if they do not correspond to the default values for libpq.&#xA;&#xA;You might also execute manually a VACUUM FULL on the table to remove the&#xA;bloat created by the table update.&#xA;&#xA;Limitation: the table must have a primary key, it is used to set the&#xA;WHERE clause to update the Oid column after the large object import.&#xA;Importing BLOB using this second method (--lo_import) is very slow so it&#xA;should be reserved to rows where the BLOB &amp;gt; 1GB for all other rows use&#xA;the option --blob_to_lo. To filter the rows you can use the WHERE&#xA;configuration directive in ora2pg.conf.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;SUPPORT Author / Maintainer Gilles Darold &#xA; &lt;gilles at darold dot net&gt;&lt;/gilles&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Please report any bugs, patches, help, etc. to &amp;lt;gilles AT darold DOT&#xA;net&amp;gt;.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Feature request If you need new features let me know at &#xA; &lt;gilles at darold dot net&gt;&#xA;  . This help a lot to develop a better/useful tool.&#xA; &lt;/gilles&gt;&lt;/p&gt; &#xA;&lt;p&gt;How to contribute ? Any contribution to build a better tool is welcome, you just have to send me your ideas, features request or patches and there will be applied.&lt;/p&gt; &#xA;&lt;p&gt;LICENSE Copyright (c) 2000-2022 Gilles Darold - All rights reserved.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        This program is free software: you can redistribute it and/or modify&#xA;        it under the terms of the GNU General Public License as published by&#xA;        the Free Software Foundation, either version 3 of the License, or&#xA;        any later version.&#xA;&#xA;        This program is distributed in the hope that it will be useful,&#xA;        but WITHOUT ANY WARRANTY; without even the implied warranty of&#xA;        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xA;        GNU General Public License for more details.&#xA;&#xA;        You should have received a copy of the GNU General Public License&#xA;        along with this program.  If not, see &amp;lt; http://www.gnu.org/licenses/ &amp;gt;.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ACKNOWLEDGEMENT I must thanks a lot all the great contributors, see changelog for all acknowledgments.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>taiju/mt-plugin-mtpodviewer</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/taiju/mt-plugin-mtpodviewer</id>
    <link href="https://github.com/taiju/mt-plugin-mtpodviewer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A MovableType plugin.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;=encoding utf8&lt;/p&gt; &#xA;&lt;p&gt;=head1 NAME&lt;/p&gt; &#xA;&lt;p&gt;=begin html&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://f.hatena.ne.jp/jdg/20121004112532&#34;&gt;&lt;img src=&#34;http://img.f.hatena.ne.jp/images/fotolife/j/jdg/20121004/20121004112532.png&#34; alt=&#34;20121004112532&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;=end html&lt;/p&gt; &#xA;&lt;p&gt;MTPodViewer - MovableTypeのモジュール用POD Viewer&lt;/p&gt; &#xA;&lt;p&gt;=head1 INSTALL&lt;/p&gt; &#xA;&lt;p&gt;=over 4&lt;/p&gt; &#xA;&lt;p&gt;=item 1&lt;/p&gt; &#xA;&lt;p&gt;mt-plugin-mtpodviewer/plugins/MTPodViewer/をあなたの{MT_HOME}/plugins/にコピーします。&lt;/p&gt; &#xA;&lt;p&gt;=item 2&lt;/p&gt; &#xA;&lt;p&gt;mt-plugin-mtpodviewer/mt-static/plugins/MTPodViewer/をあなたのmt-static/plugins/にコピーします。&lt;/p&gt; &#xA;&lt;p&gt;=back&lt;/p&gt; &#xA;&lt;p&gt;=head1 SETTINGS&lt;/p&gt; &#xA;&lt;p&gt;システムのプライン設定で、ログイン必須かログイン不要かを「Yes」か「No」を指定することで設定できます。&lt;/p&gt; &#xA;&lt;p&gt;既定値は、ログイン必須の「Yes」です。&lt;/p&gt; &#xA;&lt;p&gt;=head1 USAGE&lt;/p&gt; &#xA;&lt;p&gt;下記のようなURLでアクセスできます。&lt;/p&gt; &#xA;&lt;p&gt;http://{YOUR_WEBSITE}/{YOUR_MTHOME}/plugins/MTPodViewer/mtpodviewer.cgi&lt;/p&gt; &#xA;&lt;p&gt;=head1 HOWTOFIND&lt;/p&gt; &#xA;&lt;p&gt;検索ボックスで検索するキーワードは少しだけ特殊です。 例えば、B&lt;a href=&#34;MT::Template::Context&#34;&gt;MT::Template::Context&lt;/a&gt;のPODを見たい場合は、B&#xA; &lt;template-context&gt;&#xA;  と検索します。&#xA; &lt;/template-context&gt;&lt;/p&gt; &#xA;&lt;p&gt;すべて小文字で、モジュールの階層の区切りは - (ハイフン)を使います。&lt;/p&gt; &#xA;&lt;p&gt;B&amp;lt;MT(.pm)&amp;gt;以外は、すべてlib/MT/の下層にあるため、mtというプレフィクスは省略するようにしました。&lt;/p&gt; &#xA;&lt;p&gt;唯一の例外は、B&amp;lt;MT(.pm)&amp;gt;で、検索キーワードは、B&#xA; &lt;mt&gt;&#xA;  になります。&#xA; &lt;/mt&gt;&lt;/p&gt; &#xA;&lt;p&gt;=head2 Examples&lt;/p&gt; &#xA;&lt;p&gt;検索したいモジュールと検索キーワードの例です。&lt;/p&gt; &#xA;&lt;p&gt;B&lt;a href=&#34;MT::Mail&#34;&gt;MT::Mail&lt;/a&gt; =&amp;gt; B&#xA; &lt;mail&gt;&lt;/mail&gt;&lt;/p&gt; &#xA;&lt;p&gt;B&lt;a href=&#34;MT::App&#34;&gt;MT::App&lt;/a&gt; =&amp;gt; B&#xA; &lt;app&gt;&lt;/app&gt;&lt;/p&gt; &#xA;&lt;p&gt;B&lt;a href=&#34;MT::App::CMS&#34;&gt;MT::App::CMS&lt;/a&gt; =&amp;gt; B&#xA; &lt;app-cms&gt;&lt;/app-cms&gt;&lt;/p&gt; &#xA;&lt;p&gt;B&lt;a href=&#34;MT::Template::Tags::Entry&#34;&gt;MT::Template::Tags::Entry&lt;/a&gt; =&amp;gt; B&#xA; &lt;template-tags-entry&gt;&lt;/template-tags-entry&gt;&lt;/p&gt; &#xA;&lt;p&gt;=head1 DEMOSITE&lt;/p&gt; &#xA;&lt;p&gt;下記がデモサイトのURLです。ログイン不要の設定にしてあります。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://higashizm.sakura.ne.jp/mt/plugins/MTPodViewer/mtpodviewer.cgi&#34;&gt;http://higashizm.sakura.ne.jp/mt/plugins/MTPodViewer/mtpodviewer.cgi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;=head1 AUTHOR&lt;/p&gt; &#xA;&lt;p&gt;HIGASHI Taiju E&#xA; &lt;lt&gt;&#xA;  &lt;a href=&#34;mailto:higashi@taiju.infoE&#34;&gt;higashi@taiju.infoE&lt;/a&gt;&#xA;  &lt;gt&gt;&lt;/gt&gt;&#xA; &lt;/lt&gt;&lt;/p&gt; &#xA;&lt;p&gt;=head1 LICENSE&lt;/p&gt; &#xA;&lt;p&gt;このライブラリはフリーソフトウェアです。 あなたはこれを再配布、および、または変更することができます。 Perlと同じ条件の元で。&lt;/p&gt; &#xA;&lt;p&gt;=cut&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>exiftool/exiftool</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/exiftool/exiftool</id>
    <link href="https://github.com/exiftool/exiftool" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ExifTool meta information reader/writer&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;ExifTool by Phil Harvey (philharvey66 at gmail.com)&lt;/h2&gt; &#xA;&lt;p&gt;ExifTool is a customizable set of Perl modules plus a full-featured command-line application for reading and writing meta information in a wide variety of files, including the maker note information of many digital cameras by various manufacturers such as Canon, Casio, DJI, FLIR, FujiFilm, GE, HP, JVC/Victor, Kodak, Leaf, Minolta/Konica-Minolta, Nikon, Nintendo, Olympus/Epson, Panasonic/Leica, Pentax/Asahi, Phase One, Reconyx, Ricoh, Samsung, Sanyo, Sigma/Foveon and Sony.&lt;/p&gt; &#xA;&lt;p&gt;Below is a list of file types and meta information formats currently supported by ExifTool (r = read, w = write, c = create):&lt;/p&gt; &#xA;&lt;p&gt;File Types ------------+-------------+-------------+-------------+------------ 360 r/w | DR4 r/w/c | JNG r/w | O r | RAW r/w 3FR r | DSS r | JP2 r/w | ODP r | RIFF r 3G2 r/w | DV r | JPEG r/w | ODS r | RSRC r 3GP r/w | DVB r/w | JSON r | ODT r | RTF r A r | DVR-MS r | JXL r | OFR r | RW2 r/w AA r | DYLIB r | K25 r | OGG r | RWL r/w AAE r | EIP r | KDC r | OGV r | RWZ r AAX r/w | EPS r/w | KEY r | ONP r | RM r ACR r | EPUB r | LA r | OPUS r | SEQ r AFM r | ERF r/w | LFP r | ORF r/w | SKETCH r AI r/w | EXE r | LIF r | ORI r/w | SO r AIFF r | EXIF r/w/c | LNK r | OTF r | SR2 r/w APE r | EXR r | LRV r/w | PAC r | SRF r ARQ r/w | EXV r/w/c | M2TS r | PAGES r | SRW r/w ARW r/w | F4A/V r/w | M4A/V r/w | PBM r/w | SVG r ASF r | FFF r/w | MACOS r | PCD r | SWF r AVI r | FITS r | MAX r | PCX r | THM r/w AVIF r/w | FLA r | MEF r/w | PDB r | TIFF r/w AZW r | FLAC r | MIE r/w/ | PDF r/w | TORRENT r BMP r | FLIF r/w | MIFF r c | PEF r/w | TTC r BPG r | FLV r | MKA r | PFA r | TTF r BTF r | FPF r | MKS r | PFB r | TXT r CHM r | FPX r | MKV r | PFM r | VCF r COS r | GIF r/w | MNG r/w | PGF r | VRD r/w/c CR2 r/w | GPR r/w | MOBI r | PGM r/w | VSD r CR3 r/w | GZ r | MODD r | PLIST r | WAV r CRM r/w | HDP r/w | MOI r | PICT r | WDP r/w CRW r/w | HDR r | MOS r/w | PMP r | WEBP r CS1 r/w | HEIC r/w | MOV r/w | PNG r/w | WEBM r CSV r | HEIF r/w | MP3 r | PPM r/w | WMA r CZI r | HTML r | MP4 r/w | PPT r | WMV r DCM r | ICC r/w/c | MPC r | PPTX r | WTV r DCP r/w | ICS r | MPG r | PS r/w | WV r DCR r | IDML r | MPO r/w | PSB r/w | X3F r/w DFONT r | IIQ r/w | MQV r/w | PSD r/w | XCF r DIVX r | IND r/w | MRC r | PSP r | XLS r DJVU r | INSP r/w | MRW r/w | QTIF r/w | XLSX r DLL r | INSV r | MXF r | R3D r | XMP r/w/c DNG r/w | INX r | NEF r/w | RA r | ZIP r DOC r | ISO r | NKSC r/w | RAF r/w | DOCX r | ITC r | NRW r/w | RAM r | DPX r | J2C r | NUMBERS r | RAR r |&lt;/p&gt; &#xA;&lt;p&gt;Meta Information ----------------------+----------------------+--------------------- EXIF r/w/c | CIFF r/w | Ricoh RMETA r GPS r/w/c | AFCP r/w | Picture Info r IPTC r/w/c | Kodak Meta r/w | Adobe APP14 r XMP r/w/c | FotoStation r/w | MPF r MakerNotes r/w/c | PhotoMechanic r/w | Stim r Photoshop IRB r/w/c | JPEG 2000 r | DPX r ICC Profile r/w/c | DICOM r | APE r MIE r/w/c | Flash r | Vorbis r JFIF r/w/c | FlashPix r | SPIFF r Ducky APP12 r/w/c | QuickTime r | DjVu r PDF r/w/c | Matroska r | M2TS r PNG r/w/c | MXF r | PE/COFF r Canon VRD r/w/c | PrintIM r | AVCHD r Nikon Capture r/w/c | FLAC r | ZIP r GeoTIFF r/w/c | ID3 r | (and more)&lt;/p&gt; &#xA;&lt;p&gt;See html/index.html for more details about ExifTool features.&lt;/p&gt; &#xA;&lt;p&gt;ExifTool can be downloaded from&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://exiftool.org/&#34;&gt;https://exiftool.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;RUNNING&lt;/p&gt; &#xA;&lt;p&gt;The exiftool script can be run right away without the need to install Image::ExifTool. For example, from within the exiftool directory you can extract the information from one of the included test files by typing:&lt;/p&gt; &#xA;&lt;p&gt;./exiftool t/images/ExifTool.jpg&lt;/p&gt; &#xA;&lt;p&gt;If you move the exiftool script to a different directory, you must also either move the contents of the lib directory or install the Image::ExifTool package so the script can find the necessary libraries.&lt;/p&gt; &#xA;&lt;p&gt;Note: If you are using the Windows cmd shell, you may need to rename &#39;exiftool&#39; to &#39;exiftool.pl&#39; to run it directly from the command line. Alternatively, you can run exiftool with the command &#39;perl exiftool&#39;.&lt;/p&gt; &#xA;&lt;p&gt;IF YOU ARE STILL CONFUSED&lt;/p&gt; &#xA;&lt;p&gt;The exiftool script is a command line application. You run it by typing commands in a terminal window. The first step is to determine the name of the directory where you downloaded the ExifTool distribution package. Assuming, for example, you downloaded it to a folder called &#34;Desktop&#34; in your home directory, then you would type the following commands in a terminal window to extract and run ExifTool:&lt;/p&gt; &#xA;&lt;p&gt;cd ~/Desktop gzip -dc Image-ExifTool-12.41.tar.gz | tar -xf - cd Image-ExifTool-12.41 ./exiftool t/images/ExifTool.jpg&lt;/p&gt; &#xA;&lt;p&gt;Note: These commands extract meta information from one of the test images. To use one of your images instead, enter the full path name of your file in place of &#34;t/images/ExifTool.jpg&#34;.&lt;/p&gt; &#xA;&lt;p&gt;INSTALLATION&lt;/p&gt; &#xA;&lt;p&gt;You can install the Image::ExifTool package to make it available for use by other Perl scripts by typing the following:&lt;/p&gt; &#xA;&lt;p&gt;perl Makefile.PL make make test make install&lt;/p&gt; &#xA;&lt;p&gt;Notes: i) You need root access for the last step above.&lt;/p&gt; &#xA;&lt;p&gt;ii) Some Perl installations (like the standard OSX installation) may not contain the necessary files to complete the first step above. But no worries: You can install ExifTool manually by moving &#39;exiftool&#39; and the &#39;lib&#39; directory to any directory in your current PATH (ie. /usr/bin).&lt;/p&gt; &#xA;&lt;p&gt;iii) In Windows, &#34;dmake&#34; or &#34;nmake&#34; may be used if &#34;make&#34; is not available.&lt;/p&gt; &#xA;&lt;p&gt;(Also see html/install.html for more help with installation.)&lt;/p&gt; &#xA;&lt;p&gt;DEPENDENCIES&lt;/p&gt; &#xA;&lt;p&gt;Requires Perl version 5.004 or later. No other special libraries are required, however the following modules are recommended for decoding compressed and/or encrypted information from the indicated file types, and for calculating digest values and providing other features listed below:&lt;/p&gt; &#xA;&lt;p&gt;Archive::Zip (ZIP, DOCX, PPTX, XLSX, ODP, ODS, ODT, EIP, iWork) Compress::Zlib (DNG, PNG, PDF, DCM, MIE and SWF files) Digest::MD5 (PDF files, IPTC information, and JPG Extended XMP) Digest::SHA (PDF with AES-256 encryption) IO::Compress::Bzip2 (RWZ files) Time::HiRes (for generating ProcessingTime tag) POSIX::strptime (for inverse date/time conversion) Time::Piece (alternative to POSIX::strptime) Unicode::LineBreak (for column alignment of alternate-language output) Win32::API (for proper handling of Windows file times) Win32::FindFile (for Windows Unicode directory support, app only) Win32API::File (for Windows Unicode file names and file times) IO::Compress::RawDeflate (for writing FLIF images) IO::Uncompress::RawInflate (for reading FLIF images)&lt;/p&gt; &#xA;&lt;p&gt;COPYRIGHT AND LICENSE&lt;/p&gt; &#xA;&lt;p&gt;Copyright 2003-2022, Phil Harvey&lt;/p&gt; &#xA;&lt;p&gt;This is free software; you can redistribute it and/or modify it under the same terms as Perl itself.&lt;/p&gt; &#xA;&lt;p&gt;DISTRIBUTION FILES&lt;/p&gt; &#xA;&lt;p&gt;Below is a list of the files/directories included in the full ExifTool distribution package:&lt;/p&gt; &#xA;&lt;p&gt;Changes - Revision history MANIFEST - Full list of distribution files META.json - Standard CPAN dependency file (JSON format) META.yml - Standard CPAN dependency file (YAML format) Makefile.PL - Makefile for installation README - This file arg_files/ - Argument files to convert metadata formats: exif2iptc.args - Arguments for converting EXIF to IPTC exif2xmp.args - Arguments for converting EXIF to XMP gps2xmp.args - Arguments for converting GPS to XMP iptc2exif.args - Arguments for converting IPTC to EXIF iptc2xmp.args - Arguments for converting IPTC to XMP iptcCore.args - Complete list of IPTC Core XMP tags pdf2xmp.args - Arguments for converting PDF to XMP xmp2exif.args - Arguments for converting XMP to EXIF xmp2gps.args - Arguments for converting XMP to GPS xmp2iptc.args - Arguments for converting XMP to IPTC xmp2pdf.args - Arguments for converting XMP to PDF config_files/ - Sample ExifTool configuration files: acdsee.config - Definitions for writing ACDSee XMP regions age.config - Calculate Age of person in photo bibble.config - Definitions for writing Bibble XMP tags convert_regions.config - Convert between MWG, MP and IPTC regions cuepointlist.config - Extract cue points and labels as a list depthmap.config - Extract Google DepthMap images example.config - General example showing config features fotoware.config - Definitions for writing Fotoware XMP tags gps2utm.config - Generate UTM coordinate tags from GPS info gpsdatetime.config - Make GPSDateTime from CreateDate+SampleTime nksc.config - Decode tags in Nikon ViewNX NKSC files photoshop_paths.config - For extracting or copying Photoshop paths picasa_faces.config - Convert from Picasa to MWG/MP face regions rotate_regions.config - Rotate MWG and MP region tags tiff_version.config - Determine the version of a TIFF file time_zone.config - Calculate time zone from EXIF tags exiftool - The exiftool application (Perl script) fmt_files/ - Output formatting example files: gpx.fmt - Format file for creating GPX track gpx_wpt.fmt - Format file for creating GPX waypoints kml.fmt - Format file for creating KML placemarks kml_track.fmt - Format file for creating KML track html/ - HTML documentation html/TagNames/ - HTML tag name documentation lib/ - ExifTool Perl library modules perl-Image-ExifTool.spec - Red Hat Packaging Manager specification file t/ - Verification test code t/images/ - Verification test images&lt;/p&gt; &#xA;&lt;p&gt;ADDITIONAL INFORMATION&lt;/p&gt; &#xA;&lt;p&gt;Read the following files included in the full distribution for more information:&lt;/p&gt; &#xA;&lt;p&gt;html/index.html - Main ExifTool documentation html/install.html - Installation instructions html/history.html - Revision history html/ExifTool.html - API documentation html/TagNames/index.html - Tag name documentation html/geotag.html - Geotag feature html/faq.html - Frequently asked questions html/filename.html - Renaming/moving files html/metafiles.html - Working with metadata sidecar files html/struct.html - Working with structured XMP information lib/Image/ExifTool/README - ExifTool library modules documentation&lt;/p&gt; &#xA;&lt;p&gt;and if you have installed Image::ExifTool, you can also consult perldoc or the man pages:&lt;/p&gt; &#xA;&lt;p&gt;perldoc exiftool perldoc Image::ExifTool perldoc Image::ExifTool::TagNames&lt;/p&gt; &#xA;&lt;p&gt;man exiftool man Image::ExifTool man Image::ExifTool::TagNames&lt;/p&gt; &#xA;&lt;p&gt;Note: If the man pages don&#39;t work, it is probably because your man path is not set to include the installed documentation. See &#34;man man&#34; for information about how to set the man path.&lt;/p&gt; &#xA;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>Perl/perl5</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/Perl/perl5</id>
    <link href="https://github.com/Perl/perl5" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🐫 The Perl programming language&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Perl is Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022 by Larry Wall and others. All rights reserved.&lt;/p&gt; &#xA;&lt;h1&gt;ABOUT PERL&lt;/h1&gt; &#xA;&lt;p&gt;Perl is a general-purpose programming language originally developed for text manipulation and now used for a wide range of tasks including system administration, web development, network programming, GUI development, and more.&lt;/p&gt; &#xA;&lt;p&gt;The language is intended to be practical (easy to use, efficient, complete) rather than beautiful (tiny, elegant, minimal). Its major features are that it&#39;s easy to use, supports both procedural and object-oriented (OO) programming, has powerful built-in support for text processing, and has one of the world&#39;s most impressive collections of third-party modules.&lt;/p&gt; &#xA;&lt;p&gt;For an introduction to the language&#39;s features, see pod/perlintro.pod.&lt;/p&gt; &#xA;&lt;p&gt;For a discussion of the important changes in this release, see pod/perldelta.pod.&lt;/p&gt; &#xA;&lt;p&gt;There are also many Perl books available, covering a wide variety of topics, from various publishers. See pod/perlbook.pod for more information.&lt;/p&gt; &#xA;&lt;h1&gt;INSTALLATION&lt;/h1&gt; &#xA;&lt;p&gt;If you&#39;re using a relatively modern operating system and want to install this version of Perl locally, run the following commands:&lt;/p&gt; &#xA;&lt;p&gt;./Configure -des -Dprefix=$HOME/localperl make test make install&lt;/p&gt; &#xA;&lt;p&gt;This will configure and compile perl for your platform, run the regression tests, and install perl in a subdirectory &#34;localperl&#34; of your home directory.&lt;/p&gt; &#xA;&lt;p&gt;If you run into any trouble whatsoever or you need to install a customized version of Perl, you should read the detailed instructions in the &#34;INSTALL&#34; file that came with this distribution. Additionally, there are a number of &#34;README&#34; files with hints and tips about building and using Perl on a wide variety of platforms, some more common than others.&lt;/p&gt; &#xA;&lt;p&gt;Once you have Perl installed, a wealth of documentation is available to you through the &#39;perldoc&#39; tool. To get started, run this command:&lt;/p&gt; &#xA;&lt;p&gt;perldoc perl&lt;/p&gt; &#xA;&lt;h1&gt;IF YOU RUN INTO TROUBLE&lt;/h1&gt; &#xA;&lt;p&gt;Perl is a large and complex system that&#39;s used for everything from knitting to rocket science. If you run into trouble, it&#39;s quite likely that someone else has already solved the problem you&#39;re facing. Once you&#39;ve exhausted the documentation, please report bugs to us at the GitHub issue tracker at &lt;a href=&#34;https://github.com/Perl/perl5/issues&#34;&gt;https://github.com/Perl/perl5/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;While it was current when we made it available, Perl is constantly evolving and there may be a more recent version that fixes bugs you&#39;ve run into or adds new features that you might find useful.&lt;/p&gt; &#xA;&lt;p&gt;You can always find the latest version of perl on a CPAN (Comprehensive Perl Archive Network) site near you at &lt;a href=&#34;https://www.cpan.org/src/&#34;&gt;https://www.cpan.org/src/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to submit a simple patch to the perl source, see the &#34;SUPER QUICK PATCH GUIDE&#34; in pod/perlhack.pod.&lt;/p&gt; &#xA;&lt;p&gt;Just a personal note: I want you to know that I create nice things like this because it pleases the Author of my story. If this bothers you, then your notion of Authorship needs some revision. But you can use perl anyway. :-)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;The author.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;LICENSING&lt;/h1&gt; &#xA;&lt;p&gt;This program is free software; you can redistribute it and/or modify it under the terms of either:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;a) the GNU General Public License as published by the Free&#xA;Software Foundation; either version 1, or (at your option) any&#xA;later version, or&#xA;&#xA;b) the &#34;Artistic License&#34; which comes with this Kit.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See either the GNU General Public License or the Artistic License for more details.&lt;/p&gt; &#xA;&lt;p&gt;You should have received a copy of the Artistic License with this Kit, in the file named &#34;Artistic&#34;. If not, I&#39;ll be glad to provide one.&lt;/p&gt; &#xA;&lt;p&gt;You should also have received a copy of the GNU General Public License along with this program in the file named &#34;Copying&#34;. If not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA or visit their web page on the internet at &lt;a href=&#34;https://www.gnu.org/copyleft/gpl.html&#34;&gt;https://www.gnu.org/copyleft/gpl.html&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For those of you that choose to use the GNU General Public License, my interpretation of the GNU General Public License is that no Perl script falls under the terms of the GPL unless you explicitly put said script under the terms of the GPL yourself. Furthermore, any object code linked with perl does not automatically fall under the terms of the GPL, provided such object code only adds definitions of subroutines and variables, and does not otherwise impair the resulting interpreter from executing any standard Perl script. I consider linking in C subroutines in this manner to be the moral equivalent of defining subroutines in the Perl language itself. You may sell such an object file as proprietary provided that you provide or offer to provide the Perl source, as specified by the GNU General Public License. (This is merely an alternate way of specifying input to the program.) You may also sell a binary produced by the dumping of a running Perl script that belongs to you, provided that you provide or offer to provide the Perl source as specified by the GPL. (The fact that a Perl interpreter and your code are in the same binary file is, in this case, a form of mere aggregation.) This is my interpretation of the GPL. If you still have concerns or difficulties understanding my intent, feel free to contact me. Of course, the Artistic License spells all this out for your protection, so you may prefer to use that.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>elastic/elasticsearch-perl-compat</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/elastic/elasticsearch-perl-compat</id>
    <link href="https://github.com/elastic/elasticsearch-perl-compat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A compat layer for migrating from ElasticSearch.pm to the new Elasticsearch.pm&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>fangly/Math-Random-MT-Perl</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/fangly/Math-Random-MT-Perl</id>
    <link href="https://github.com/fangly/Math-Random-MT-Perl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pure Perl version of the Math::Random::MT module to generate random numbers using the Mersenne-Twister algorithm&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Math-Random-MT-Perl version 1.10&lt;/h1&gt; &#xA;&lt;p&gt;Pure Perl implementation of the Mersenne Twister algorithm as implemented in C/XS in Math::Random::MT. The Mersenne Twister is a 32 bit pseudorandom number generator developed by Makoto Matsumoto and Takuji Nishimura. It is characterised by a very uniform distribution but is not cryptographically secure.&lt;/p&gt; &#xA;&lt;p&gt;The interface is the same as that of Math::Random::MT. The output is identical to the C/XS version. The tests are straight out of Math::Random::MT and they all pass. A script in /t called validate.pl tests the output of this module against the C version. No differences in output were detected in 10e8 trials with a single seed or 10e8 trials with 1000 random seeds.&lt;/p&gt; &#xA;&lt;p&gt;The only good reason to use this module is if you can&#39;t install Math::Random::MT or you want code to cut and paste into a project.&lt;/p&gt; &#xA;&lt;p&gt;SPEED&lt;/p&gt; &#xA;&lt;p&gt;Runs around 1/3-1/2 as fast as Math::Random::MT, however that still means a Benchmark random number generation speed of 100,000/sec on modest hardware, so this is unlikely to cause a significant bottleneck in most circumstances.&lt;/p&gt; &#xA;&lt;p&gt;INSTALLATION&lt;/p&gt; &#xA;&lt;p&gt;To install this module type the following:&lt;/p&gt; &#xA;&lt;p&gt;perl Makefile.PL make make test make install&lt;/p&gt; &#xA;&lt;p&gt;Instead of make, use dmake or nmake on Win32.&lt;/p&gt; &#xA;&lt;p&gt;DEPENDENCIES&lt;/p&gt; &#xA;&lt;p&gt;None&lt;/p&gt; &#xA;&lt;p&gt;COPYRIGHT AND LICENCE&lt;/p&gt; &#xA;&lt;p&gt;Copyright (C) 2008 by Dr James Freeman&lt;/p&gt; &#xA;&lt;p&gt;This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself, either Perl version 5.8.8 or, at your option, any later version of Perl 5 you may have available.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>regru/API-CPanel</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/regru/API-CPanel</id>
    <link href="https://github.com/regru/API-CPanel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;API-CPanel&lt;/h1&gt; &#xA;&lt;p&gt;The README is used to introduce the module and provide instructions on how to install the module, any machine dependencies it may have (for example C compilers and installed libraries) and any other information that should be provided before the module is installed.&lt;/p&gt; &#xA;&lt;p&gt;A README file is required for CPAN modules since CPAN extracts the README file from a module distribution so that people browsing the archive can use it get an idea of the modules uses. It is usually a good idea to provide version information here so that people can decide whether fixes for the module are worth downloading.&lt;/p&gt; &#xA;&lt;p&gt;INSTALLATION&lt;/p&gt; &#xA;&lt;p&gt;To install this module type the following:&lt;/p&gt; &#xA;&lt;p&gt;perl Makefile.PL make make test make install&lt;/p&gt; &#xA;&lt;p&gt;DEPENDENCIES&lt;/p&gt; &#xA;&lt;p&gt;This module requires these other modules and libraries:&lt;/p&gt; &#xA;&lt;p&gt;COPYRIGHT AND LICENCE&lt;/p&gt; &#xA;&lt;p&gt;Put the correct copyright and licence information here.&lt;/p&gt; &#xA;&lt;p&gt;Copyright (C) 2010 by Vlasov Konstantin&lt;/p&gt; &#xA;&lt;p&gt;This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself, either Perl version 5.10.1 or, at your option, any later version of Perl 5 you may have available.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ysasaki/p5-apache2-data-section-simple</title>
    <updated>2022-06-01T02:18:04Z</updated>
    <id>tag:github.com,2022-06-01:/ysasaki/p5-apache2-data-section-simple</id>
    <link href="https://github.com/ysasaki/p5-apache2-data-section-simple" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Data::Section::Simple for ModPerl::Registry&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache2-Data-Section-Simple version 0.02&lt;/h1&gt; &#xA;&lt;p&gt;Data::Section::Simple for ModPerl::Registry&lt;/p&gt; &#xA;&lt;p&gt;INSTALLATION&lt;/p&gt; &#xA;&lt;p&gt;To install this module type the following:&lt;/p&gt; &#xA;&lt;p&gt;git checkout &lt;a href=&#34;https://github.com/ysasaki/p5-apache2-data-section-simple.git&#34;&gt;https://github.com/ysasaki/p5-apache2-data-section-simple.git&lt;/a&gt; cd p5-apache2-data-section-simple cpanm .&lt;/p&gt; &#xA;&lt;p&gt;DEPENDENCIES&lt;/p&gt; &#xA;&lt;p&gt;This module requires these other modules and libraries:&lt;/p&gt; &#xA;&lt;p&gt;Apache2::RequestUtil&lt;/p&gt; &#xA;&lt;p&gt;COPYRIGHT AND LICENCE&lt;/p&gt; &#xA;&lt;p&gt;Copyright (C) 2012 Yoshihiro Sasaki&lt;/p&gt; &#xA;&lt;p&gt;This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself.&lt;/p&gt;</summary>
  </entry>
</feed>