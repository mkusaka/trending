<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-28T01:57:10Z</updated>
  <subtitle>Weekly Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>binary-com/perl</title>
    <updated>2024-01-28T01:57:10Z</updated>
    <id>tag:github.com,2024-01-28:/binary-com/perl</id>
    <link href="https://github.com/binary-com/perl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Custom compiled perl for Binary.com&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;perl&lt;/h1&gt; &#xA;&lt;p&gt;Custom compiled perl for Binary.com&lt;/p&gt; &#xA;&lt;h1&gt;compiling steps&lt;/h1&gt; &#xA;&lt;p&gt;Download source code from &lt;a href=&#34;http://www.cpan.org/src/5.0/perl-5.26.2.tar.gz&#34;&gt;http://www.cpan.org/src/5.0/perl-5.26.2.tar.gz&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We defined &lt;code&gt;-Dusesitecustomize&lt;/code&gt; and removed &lt;code&gt;-Dusethreads&lt;/code&gt;. Most of other parameters are copied from &lt;code&gt;perl -V | grep config_args&lt;/code&gt; Run following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./Configure -Dusesitecustomize -Dinc_version_list=none -Dprefix=/home/git/binary-com/perl -Dvendorprefix=/home/git/regentmarkets/cpan/local -Dvendorlib=/home/git/regentmarkets/cpan/local/lib/perl5 -Dvendorarch=/home/git/regentmarkets/cpan/local/lib/perl5/x86_64-linux -Duselargefiles -Dccflags=&#34;-DDEBIAN -D_FORTIFY_SOURCE=2 -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security&#34; -Dldflags=&#34; -Wl,-z,relro&#34; -Dlddlflags=&#34;-shared -Wl,-z,relro&#34; -Dcccdlflags=&#34;-fPIC&#34; -Duse64bitint -Dman1ext=1 -Dman3ext=3perl -Dpager=/usr/bin/sensible-pager -Uafs -Ud_csh -Ud_ualarm -Uusesfio -Uusenm -Uuseithreads -Uusemultiplicity -Ui_libutil -DDEBUGGING=-g -Doptimize=-O2 -Duseshrplib -des&#xA;make&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>kids-first/kf-annotation-tools</title>
    <updated>2024-01-28T01:57:10Z</updated>
    <id>tag:github.com,2024-01-28:/kids-first/kf-annotation-tools</id>
    <link href="https://github.com/kids-first/kf-annotation-tools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repo contains commonly share annotation tools. Meant to be generally used as a git submodule for other variant calling workflows to centralize and simplify code development and maintainance.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kids First Annotation&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/d3b-center/d3b-research-workflows/raw/master/doc/kfdrc-logo-sm.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;This repo contains workflows and tools for variant annotation. It can be used as standalone or, if set up properly, as a git submodule for other variant call workflows. This design allows for less code maintenance and greater ease of use&lt;/p&gt; &#xA;&lt;h2&gt;Germline SNV Annotation&lt;/h2&gt; &#xA;&lt;p&gt;This workflow is for annotating germline variants. Tools and recommended refs found &lt;a href=&#34;https://raw.githubusercontent.com/kids-first/kf-annotation-tools/master/docs/GERMLINE_SNV_ANNOT_README.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jnorell/smtpprox-loopprevent</title>
    <updated>2024-01-28T01:57:10Z</updated>
    <id>tag:github.com,2024-01-28:/jnorell/smtpprox-loopprevent</id>
    <link href="https://github.com/jnorell/smtpprox-loopprevent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Transparent SMTP proxy to prevent mail forwarding loops&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;smtpprox-loopprevent&lt;/h1&gt; &#xA;&lt;p&gt;Transparent SMTP proxy to prevent mail forwarding loops&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;smtpprox-loopprevent&lt;/code&gt; is a transparent SMTP proxy which compares message recipient addresses against Delivered-To headers and rejects the message if there is a match. It was written to be used as a Postfix before-queue filter.&lt;/p&gt; &#xA;&lt;h2&gt;Reason and Background&lt;/h2&gt; &#xA;&lt;p&gt;Postfix already catches these same mail loops, so why bother? In short because some recent spam has been filling our mail queues with undeliverable bounce messages.&lt;/p&gt; &#xA;&lt;p&gt;We use amavisd-new as an after-queue content_filter. So a one smtpd takes the message at SMTP time and sticks it in queue. It is then passed to amavisd-new, which scans and delivers the message to a second (post-queue) smtpd for delivery.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re going to reject mail, you want that first smtpd to reject it at SMTP time whenever possible. If it makes it to the second smtpd, it has to generate a bounce message, as SMTP has completed. And if you can&#39;t deliver the bounce message it sits in your queue. Build up thousands of those and you start to have issues. And the backscatter isn&#39;t nice.&lt;/p&gt; &#xA;&lt;p&gt;So that&#39;s exactly what we&#39;ve seen the last week or so, thousands of undeliverable bounce messages filling our queues. The diagnostic-code says &#34;mail forwarding loop for user@domain&#34;. Upon examination, this spam has a forged Delivered-To: header added before we even receive it.&lt;/p&gt; &#xA;&lt;p&gt;Mail destined to &lt;em&gt;user@domain&lt;/em&gt;, with a &lt;em&gt;Delivered-To: user@domain&lt;/em&gt; header? That&#39;s exactly what a mail loop looks like, and why postfix rejects it. All well and good - we just need to move that rejection into SMTP, rather than generating bounces.&lt;/p&gt; &#xA;&lt;p&gt;Postfix header_checks don&#39;t seem to have the envelope information available, so they won&#39;t work. Postfix policy daemons have envelope info, but not access to the message headers. So a before-queue content filter is the only place I see to get at both and have SMTP rejection available.&lt;/p&gt; &#xA;&lt;h2&gt;What Harm Can It Do?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;smtpprox-loopprevent&lt;/em&gt; employs a simple policy that should work for many sites, but do understand the implications of using it on yours. Again, it rejects a message if &lt;em&gt;any&lt;/em&gt; of the recipient addresses match a &lt;em&gt;Delivered-To&lt;/em&gt; header.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2012 Jesse Norell &amp;lt;jesse@kci.net&amp;gt;&#xA;Copyright 2012 Kentec Communications, Inc.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;This program is free software: you can redistribute it and/or modify&#xA;it under the terms of the GNU General Public License as published by&#xA;the Free Software Foundation, either version 3 of the License, or&#xA;(at your option) any later version.&#xA;&#xA;This program is distributed in the hope that it will be useful,&#xA;but WITHOUT ANY WARRANTY; without even the implied warranty of&#xA;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xA;GNU General Public License for more details.&#xA;&#xA;You should have received a copy of the GNU General Public License&#xA;along with this program.  If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>