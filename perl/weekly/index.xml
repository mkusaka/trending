<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-03T01:49:42Z</updated>
  <subtitle>Weekly Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>trizen/sidef</title>
    <updated>2024-03-03T01:49:42Z</updated>
    <id>tag:github.com,2024-03-03:/trizen/sidef</id>
    <link href="https://github.com/trizen/sidef" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A modern object-oriented programming language implemented in Perl.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Sidef Programming Language&lt;/h1&gt; &#xA;&lt;p&gt;Sidef is a modern, high-level programming language designed for versatile general-purpose applications, drawing inspiration from the principles of Ruby, Raku, and Julia.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;            **   **         ****   *           *********   *********&#xA;          * * ** * *        ****   **          ** ** **    ** ** **&#xA;           **   **          ****   ***         *********   *  *  *&#xA;  **        **        **    ****   *  *        ******      ******&#xA;* * *     * * *     * * *   ****   ** **       ** **       ** **&#xA; **        **        **     ****   ******      ******      *  *&#xA;       **   **              ****   *  *  *     *********   ***&#xA;     * * ** * *             ****   ** ** **    ** ** **    **&#xA;      **   **               ****   *********   *********   *&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Key features of Sidef include:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Object-oriented programming&lt;/li&gt; &#xA;   &lt;li&gt;Functional programming&lt;/li&gt; &#xA;   &lt;li&gt;Functional pattern matching&lt;/li&gt; &#xA;   &lt;li&gt;Optional lazy evaluation&lt;/li&gt; &#xA;   &lt;li&gt;Multiple dispatch&lt;/li&gt; &#xA;   &lt;li&gt;Lexical scoping&lt;/li&gt; &#xA;   &lt;li&gt;Lexical closures&lt;/li&gt; &#xA;   &lt;li&gt;Keyword arguments&lt;/li&gt; &#xA;   &lt;li&gt;Regular expressions&lt;/li&gt; &#xA;   &lt;li&gt;Seamless integration with Perl modules&lt;/li&gt; &#xA;   &lt;li&gt;Optional dynamic type checking&lt;/li&gt; &#xA;   &lt;li&gt;Robust support for big integers, rationals, floats, and complex numbers&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Resources&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codeberg.org/trizen/sidef/src/branch/master/TUTORIAL.md&#34;&gt;Beginner&#39;s Tutorial&lt;/a&gt; (&lt;a href=&#34;https://github.com/trizen/sidef/releases/download/24.01/sidef-tutorial.pdf&#34;&gt;PDF&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codeberg.org/trizen/sidef/src/branch/master/NUMBER_THEORY_TUTORIAL.md&#34;&gt;Number Theory Tutorial&lt;/a&gt; (&lt;a href=&#34;https://github.com/trizen/sidef/releases/download/24.01/sidef-number-theory.pdf&#34;&gt;PDF&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;RosettaCode: &lt;a href=&#34;https://rosettacode.org/wiki/Sidef&#34;&gt;Sidef&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gitbook: &lt;a href=&#34;https://trizen.gitbook.io/sidef-lang/&#34;&gt;Sidef-lang&lt;/a&gt; (&lt;a href=&#34;https://trizen.gitbooks.io/sidef-lang&#34;&gt;legacy&lt;/a&gt;) (&lt;a href=&#34;https://github.com/trizen/sidef/releases/download/24.01/sidef-book.pdf&#34;&gt;PDF&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Questions &amp;amp; Answers&lt;/h3&gt; &#xA;&lt;p&gt;For assistance or inquiries regarding Sidef, please visit the dedicated &lt;a href=&#34;https://github.com/trizen/sidef/discussions/categories/q-a&#34;&gt;discussion forum&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;EXAMPLES&lt;/h2&gt; &#xA;&lt;h3&gt;The &lt;a href=&#34;https://en.wikipedia.org/wiki/Fixed-point_combinator#Fixed-point_combinators_in_lambda_calculus&#34;&gt;Y combinator&lt;/a&gt;:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;var y = -&amp;gt;(f) {-&amp;gt;(g) {g(g)}(-&amp;gt;(g) { f(-&amp;gt;(*args) {g(g)(args...)})})}&#xA;&#xA;var fac = -&amp;gt;(f) { -&amp;gt;(n) { n &amp;lt; 2 ? 1 : (n * f(n-1)) } }&#xA;say 10.of { |i| y(fac)(i) }     #=&amp;gt; [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880]&#xA;&#xA;var fib = -&amp;gt;(f) { -&amp;gt;(n) { n &amp;lt; 2 ? n : (f(n-2) + f(n-1)) } }&#xA;say 10.of { |i| y(fib)(i) }     #=&amp;gt; [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;ASCII generation of the &lt;a href=&#34;https://en.wikipedia.org/wiki/Sierpinski_triangle&#34;&gt;Sierpinski triangle&lt;/a&gt;:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;func sierpinski_triangle(n) {&#xA;    var triangle = [&#39;*&#39;]&#xA;    { |i|&#xA;        var sp = (&#39; &#39; * 2**i)&#xA;        triangle = (triangle.map {|x| sp + x + sp} +&#xA;                    triangle.map {|x| x + &#39; &#39; + x})&#xA;    } * n&#xA;    triangle.join(&#34;\n&#34;)&#xA;}&#xA;&#xA;say sierpinski_triangle(4)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;               *&#xA;              * *&#xA;             *   *&#xA;            * * * *&#xA;           *       *&#xA;          * *     * *&#xA;         *   *   *   *&#xA;        * * * * * * * *&#xA;       *               *&#xA;      * *             * *&#xA;     *   *           *   *&#xA;    * * * *         * * * *&#xA;   *       *       *       *&#xA;  * *     * *     * *     * *&#xA; *   *   *   *   *   *   *   *&#xA;* * * * * * * * * * * * * * * *&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;ASCII generation of the &lt;a href=&#34;https://en.wikipedia.org/wiki/Mandelbrot_set&#34;&gt;Mandelbrot set&lt;/a&gt;:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;func mandelbrot(z, r=20) {&#xA;    var c = z&#xA;    r.times {&#xA;        z = (z*z + c)&#xA;        return true if (z.abs &amp;gt; 2)&#xA;    }&#xA;    return false&#xA;}&#xA;&#xA;for y in (1 `downto` -1 `by` 0.05) {&#xA;    for x in (-2 `upto` 0.5 `by` 0.0315) {&#xA;        print(mandelbrot(Complex(x, y)) ? &#39; &#39; : &#39;#&#39;)&#xA;    }&#xA;    print &#34;\n&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;&#xA;                                                            #&#xA;                                                        #  ###  #&#xA;                                                        ########&#xA;                                                       #########&#xA;                                                         ######&#xA;                                             ##    ## ############  #&#xA;                                              ### ###################      #&#xA;                                              #############################&#xA;                                              ############################&#xA;                                          ################################&#xA;                                           ################################&#xA;                                         #################################### #&#xA;                          #     #        ###################################&#xA;                          ###########    ###################################&#xA;                           ###########   #####################################&#xA;                         ############## ####################################&#xA;                        ####################################################&#xA;                     ######################################################&#xA;#########################################################################&#xA;                     ######################################################&#xA;                        ####################################################&#xA;                         ############## ####################################&#xA;                           ###########   #####################################&#xA;                          ###########    ###################################&#xA;                          #     #        ###################################&#xA;                                         #################################### #&#xA;                                           ################################&#xA;                                          ################################&#xA;                                              ############################&#xA;                                              #############################&#xA;                                              ### ###################      #&#xA;                                             ##    ## ############  #&#xA;                                                         ######&#xA;                                                       #########&#xA;                                                        ########&#xA;                                                        #  ###  #&#xA;                                                            #&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Additional Examples&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To explore further examples, kindly refer to: &lt;a href=&#34;https://github.com/trizen/sidef-scripts&#34;&gt;https://github.com/trizen/sidef-scripts&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;INTERACTIVE MODE&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/614513/39590990-123bd3ea-4f0b-11e8-9717-abc0ec48622e.png&#34; alt=&#34;sidef&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;TRY IT ONLINE&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tio.run/#sidef&#34;&gt;https://tio.run/#sidef&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;AVAILABILITY&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;CPAN&lt;/strong&gt;: &lt;a href=&#34;https://metacpan.org/release/Sidef&#34;&gt;https://metacpan.org/release/Sidef&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;PKGS&lt;/strong&gt;: &lt;a href=&#34;https://pkgs.org/download/perl-Sidef&#34;&gt;https://pkgs.org/download/perl-Sidef&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Arch Linux&lt;/strong&gt;: &lt;a href=&#34;https://aur.archlinux.org/packages/sidef/&#34;&gt;https://aur.archlinux.org/packages/sidef/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Slackware&lt;/strong&gt;: &lt;a href=&#34;https://slackbuilds.org/repository/15.0/perl/perl-Sidef/&#34;&gt;https://slackbuilds.org/repository/15.0/perl/perl-Sidef/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;LICENSE AND COPYRIGHT&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Copyright (C) 2013-2024 Daniel Șuteu, Ioana Fălcușan&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This program is free software; you can redistribute it and/or modify it under the terms of the &lt;em&gt;Artistic License (2.0)&lt;/em&gt;. You may obtain a copy of the full license at:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.perlfoundation.org/artistic-license-20.html&#34;&gt;https://www.perlfoundation.org/artistic-license-20.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Any use, modification, and distribution of the Standard or Modified Versions is governed by this Artistic License. By using, modifying or distributing the Package, you accept this license. Do not use, modify, or distribute the Package, if you do not accept this license.&lt;/p&gt; &#xA;&lt;p&gt;If your Modified Version has been derived from a Modified Version made by someone other than you, you are nevertheless required to ensure that your Modified Version complies with the requirements of this license.&lt;/p&gt; &#xA;&lt;p&gt;This license does not grant you the right to use any trademark, service mark, tradename, or logo of the Copyright Holder.&lt;/p&gt; &#xA;&lt;p&gt;This license includes the non-exclusive, worldwide, free-of-charge patent license to make, have made, use, offer to sell, sell, import and otherwise transfer the Package with respect to any patent claims licensable by the Copyright Holder that are necessarily infringed by the Package. If you institute patent litigation (including a cross-claim or counterclaim) against any party alleging that the Package constitutes direct or contributory patent infringement, then this Artistic License to you shall terminate on the date that such litigation is filed.&lt;/p&gt; &#xA;&lt;p&gt;Disclaimer of Warranty: THE PACKAGE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS &#34;AS IS&#39; AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES. THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT ARE DISCLAIMED TO THE EXTENT PERMITTED BY YOUR LOCAL LAW. UNLESS REQUIRED BY LAW, NO COPYRIGHT HOLDER OR CONTRIBUTOR WILL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING IN ANY WAY OUT OF THE USE OF THE PACKAGE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>philippe44/lms-deezer</title>
    <updated>2024-03-03T01:49:42Z</updated>
    <id>tag:github.com,2024-03-03:/philippe44/lms-deezer</id>
    <link href="https://github.com/philippe44/lms-deezer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>lstein/MP3-PodcastFetch</title>
    <updated>2024-03-03T01:49:42Z</updated>
    <id>tag:github.com,2024-03-03:/lstein/MP3-PodcastFetch</id>
    <link href="https://github.com/lstein/MP3-PodcastFetch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;pre&gt;&lt;code&gt;&#x9; MP3::PodcastFetch and fetch_pods.pl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Author: Lincoln D. Stein &lt;a href=&#34;mailto:lstein@cshl.edu&#34;&gt;lstein@cshl.edu&lt;/a&gt; First Release Date: January 1, 2007&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;Fetch_pods.pl is a Perl script to fetch and maintain a directory of podcast subscriptions. Information about which podcasts to fetch are stored in a configuration file. You control how many podcast files to keep, where to keep them, whether to rationalize their ID3 tags, and whether to delete older files. This script will also create playlists for recently-fetched podcasts.&lt;/p&gt; &#xA;&lt;p&gt;MP3::PodcastFetch is a set of Perl modules used for the backend of this script. You can use this library to write your own Podcast maintenance system.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install, you will need Perl version 5.8 or higher and recent versions of the following additional modules, all of which can be found on CPAN (&lt;a href=&#34;http://www.cpan.org&#34;&gt;www.cpan.org&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;p&gt;LWP Date::Parse HTML::Parser Config::IniFiles&lt;/p&gt; &#xA;&lt;p&gt;In addition, if you wish to update the ID3 tags in downloaded podcasts, you will need one or more of the following ID3-writing libraries (also on CPAN):&lt;/p&gt; &#xA;&lt;p&gt;Audio::TagLib (from CPAN, also requires taglib from &lt;a href=&#34;http://developer.kde.org/~wheeler/taglib.html&#34;&gt;http://developer.kde.org/~wheeler/taglib.html&lt;/a&gt;) MP3::Tag (from CPAN) MP3::Info (from CPAN)&lt;/p&gt; &#xA;&lt;p&gt;Audio::TagLib is the most capable of the libraries, and is able to write tags through ID3 version 2.4. ID3::Tag can write tags through ID3 version 2.3, while MP3::Info can only write version 1 tags. Audio::TagLib is a bit more trouble to install because it requires the taglib C++ library to be installed first, but I recommend using it, if you can.&lt;/p&gt; &#xA;&lt;p&gt;If you do not have any of these libraries installed, then you will still be able to download podcasts, but you will not be able to normalize their ID3 tags.&lt;/p&gt; &#xA;&lt;p&gt;Now run the following commands from the top level of this distribution:&lt;/p&gt; &#xA;&lt;p&gt;% perl Build.PL % ./Build % ./Build test % ./Build install&lt;/p&gt; &#xA;&lt;p&gt;You may need to perform the last step as the superuser. Run &#34;perldoc Module::Build&#34; for information on how to odify the build and install process, such as how to specify a non-standard installation location.&lt;/p&gt; &#xA;&lt;p&gt;The build process will install the command fetch_pods.pl somewhere on your executable path. Please run the command &#34;perldoc fetch_pods.pl&#34; to learn about how to configure and run the fetch_pods.pl script. Use &#34;perldoc MP3::PodcastFetch&#34; to learn more about the underlying Perl library.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;The source code for this module is maintained on GitHub at &lt;a href=&#34;https://github.com/lstein/MP3-PodcastFetch&#34;&gt;https://github.com/lstein/MP3-PodcastFetch&lt;/a&gt;. You are encouraged to check out the latest improvements to the source code and to contribute your own ideas and features.&lt;/p&gt;</summary>
  </entry>
</feed>