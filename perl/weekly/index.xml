<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-07T02:00:53Z</updated>
  <subtitle>Weekly Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fangly/Math-Random-MT-Perl</title>
    <updated>2024-04-07T02:00:53Z</updated>
    <id>tag:github.com,2024-04-07:/fangly/Math-Random-MT-Perl</id>
    <link href="https://github.com/fangly/Math-Random-MT-Perl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pure Perl version of the Math::Random::MT module to generate random numbers using the Mersenne-Twister algorithm&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Math-Random-MT-Perl version 1.10&lt;/h1&gt; &#xA;&lt;p&gt;Pure Perl implementation of the Mersenne Twister algorithm as implemented in C/XS in Math::Random::MT. The Mersenne Twister is a 32 bit pseudorandom number generator developed by Makoto Matsumoto and Takuji Nishimura. It is characterised by a very uniform distribution but is not cryptographically secure.&lt;/p&gt; &#xA;&lt;p&gt;The interface is the same as that of Math::Random::MT. The output is identical to the C/XS version. The tests are straight out of Math::Random::MT and they all pass. A script in /t called validate.pl tests the output of this module against the C version. No differences in output were detected in 10e8 trials with a single seed or 10e8 trials with 1000 random seeds.&lt;/p&gt; &#xA;&lt;p&gt;The only good reason to use this module is if you can&#39;t install Math::Random::MT or you want code to cut and paste into a project.&lt;/p&gt; &#xA;&lt;p&gt;SPEED&lt;/p&gt; &#xA;&lt;p&gt;Runs around 1/3-1/2 as fast as Math::Random::MT, however that still means a Benchmark random number generation speed of 100,000/sec on modest hardware, so this is unlikely to cause a significant bottleneck in most circumstances.&lt;/p&gt; &#xA;&lt;p&gt;INSTALLATION&lt;/p&gt; &#xA;&lt;p&gt;To install this module type the following:&lt;/p&gt; &#xA;&lt;p&gt;perl Makefile.PL make make test make install&lt;/p&gt; &#xA;&lt;p&gt;Instead of make, use dmake or nmake on Win32.&lt;/p&gt; &#xA;&lt;p&gt;DEPENDENCIES&lt;/p&gt; &#xA;&lt;p&gt;None&lt;/p&gt; &#xA;&lt;p&gt;COPYRIGHT AND LICENCE&lt;/p&gt; &#xA;&lt;p&gt;Copyright (C) 2008 by Dr James Freeman&lt;/p&gt; &#xA;&lt;p&gt;This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself, either Perl version 5.8.8 or, at your option, any later version of Perl 5 you may have available.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>federated-life/twilio-webcrawler</title>
    <updated>2024-04-07T02:00:53Z</updated>
    <id>tag:github.com,2024-04-07:/federated-life/twilio-webcrawler</id>
    <link href="https://github.com/federated-life/twilio-webcrawler" rel="alternate"></link>
    <summary type="html">&lt;p&gt;counts shenanigans&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;====================================================== Description: A webcrawler to search twilio.com &amp;amp; all pages linked to on twilio.com on the twilio domain for the word &#39;shenanigans&#39;, case insensitive. Author: Jeffrey Sweeney Date: 4/4/2012&lt;/h1&gt; &#xA;&lt;p&gt;System Dependencies: perl runtime WWW::Mechanize library ($&amp;gt; cpanm WWW::Mechanize)&lt;/p&gt; &#xA;&lt;p&gt;Usage: chmod +x shenanigans.pl shenanigans.pl&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>xkdcc/RemoteExcelMgt</title>
    <updated>2024-04-07T02:00:53Z</updated>
    <id>tag:github.com,2024-04-07:/xkdcc/RemoteExcelMgt</id>
    <link href="https://github.com/xkdcc/RemoteExcelMgt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;To remote update team&#39;s LOC_Machines_List.xls.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;RemoteExcelMgt.pl&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2012 - 2013 Brant Chen (&lt;a href=&#34;mailto:brantchen2008@gmail.com&#34;&gt;brantchen2008@gmail.com&lt;/a&gt; and &lt;a href=&#34;mailto:xkdcc@163.com&#34;&gt;xkdcc@163.com&lt;/a&gt;), All Rights Reserved&lt;/p&gt; &#xA;&lt;p&gt;##SYNOPSIS&lt;/p&gt; &#xA;&lt;p&gt;To remote update team&#39;s LOC_Machines_List.xls. Of course, you can have a try on any other Excle file.&lt;/p&gt; &#xA;&lt;p&gt;##REQUIREMENTS&lt;/p&gt; &#xA;&lt;p&gt;Need modules from CPAN:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Spreadsheet::ParseExcel&lt;/li&gt; &#xA; &lt;li&gt;Spreadsheet::ParseExcel::SaveParser;&lt;/li&gt; &#xA; &lt;li&gt;Spreadsheet::WriteExcel&lt;/li&gt; &#xA; &lt;li&gt;Text::ASCIITable&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;##DESCRIPTION&lt;/p&gt; &#xA;&lt;p&gt;Testing under ActivePerl 5.16.3.1603.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;FTP to remote system, write down modified date/time.&lt;/li&gt; &#xA; &lt;li&gt;Download the specified Excel.&lt;/li&gt; &#xA; &lt;li&gt;Modify specified cells.&lt;/li&gt; &#xA; &lt;li&gt;Call a VBA method which build-in this Excel to produce a html file.&lt;/li&gt; &#xA; &lt;li&gt;Check remote Excel file&#39;s modfied date/time: &amp;lt;1&amp;gt; If remote one&#39;s time is older, update local copy (Excel and html) to overwrite the remote ones. &amp;lt;2&amp;gt; If remote one&#39;s time is newer, give warning and choice.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;##USAGE&lt;/p&gt; &#xA;&lt;p&gt;This perl script will provide a CMD MENU. Esc means return to previous menu at any time.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perl RemoteExcelMgt.pl&#xA;Main menu:&#xA;1. Download files by FTP&#xA;2. Upload files to FTP &#xA;3. Operations on local excel file&#xA;&#xA;Sub menu of &#34;1&#34;:&#xA;1. Given FTP IP/Username/Password to log on.&#xA;   This will in a FTP shell, you could navigate to your destination and download Files.&#xA;   This will check whether newer/older files if Net::FTP module doesn&#39;t do it.&#xA;&#xA;Sub menu of &#34;2&#34;:&#xA;1. Given FTP IP/User Name/Password to log on. (It will provide related credentials you used for conveniences.)&#xA;   This will in a FTP shell, you could navigate to your destination and upload Files.&#xA;   This will check whether newer/older if Net::FTP module doesn&#39;t do it. &#xA;   &#xA;Sub menu of &#34;3&#34;:&#xA;1. Give path to local excel file. Check file/path.&#xA;   If OK, list all sheet names.&#xA;2. Type sheet index, will print sheet with index.&#xA;3. Set range(for example, r_1, r_3, c_3, c_5. For more details, please check code), then print range.&#xA;4. Specify which cells you want to modify one by one.&#xA;   For example, (r_3, c_1), or (r3) (means you want to modify r3 from your given col start index, for example, (r3,c3). (r3,c4), (r3,c5))&#xA;   Provide esx to cancel operations; &#xA;   Provide &#34;stop fill out rest cells&#34; to submit your changes even you didn&#39;t complete fill out all the cells in your specified range.&#xA;   Ask whether to preview.&#xA;   Ask whether submit&#xA;   Print range after submit changes.&#xA;   Provide one-time undo after submit.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;###Welcome to Brant Blog &lt;a href=&#34;http://www.brantchen.com&#34;&gt;&lt;img src=&#34;http://brant-public.qiniudn.com/site-Logo215x100-Brant%20Blog.png&#34; alt=&#34;Brant&#39;s Blog&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;###Follow Me on Social Networking &lt;a href=&#34;http://google.com/+BrantChenGo&#34;&gt;&lt;img src=&#34;http://brant-public.qiniudn.com/googleplus1@2x.png&#34; alt=&#34;Brant&#39;s Google+&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://cn.linkedin.com/pub/brant-chen/9/6a9/a03/&#34;&gt;&lt;img src=&#34;http://brant-public.qiniudn.com/linkedin@2x.png&#34; alt=&#34;Brant&#39;s LinkedIn&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.facebook.com/brantchen2008&#34;&gt;&lt;img src=&#34;http://brant-public.qiniudn.com/facebook@2x.png&#34; alt=&#34;Brant&#39;s Facebook&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/brantchen2008&#34;&gt;&lt;img src=&#34;http://brant-public.qiniudn.com/icon-twitter-2x.png&#34; alt=&#34;Brant&#39;s Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>