<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-11T01:45:47Z</updated>
  <subtitle>Weekly Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>koknat/callGraph</title>
    <updated>2022-09-11T01:45:47Z</updated>
    <id>tag:github.com,2022-09-11:/koknat/callGraph</id>
    <link href="https://github.com/koknat/callGraph" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A multi-language tool which parses source code for function definitions and calls&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Generate static call graphs for multiple languages&lt;/h2&gt; &#xA;&lt;p&gt;A call graph shows how functions call each other within a program.&lt;br&gt; Each oval represents a function, and each arrow indicates a function call.&lt;br&gt; In the diagram below, the main program is represented by node MAIN. It calls 6 functions, one of which calls 9 other functions.&lt;br&gt; &lt;br&gt; &#39;callGraph&#39; parses source code for function definitions and calls, generates a call graph image, and displays it on screen.&lt;br&gt; Supported languages are: awk, bash, basic, dart, fortran, go, lua, javascript, julia, kotlin, matlab, perl, pascal, php, python, R, raku, ruby, rust, scala, swift, and tcl.&lt;br&gt; &lt;br&gt; c/c++/java are not supported, since their complex and varied syntax requires heavy machinery.&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/koknat/callGraph/main/callGraph.png&#34; alt=&#34;&amp;quot;Sample output&amp;quot;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage:&#xA;&#x9;callGraph  &amp;lt;files&amp;gt;  &amp;lt;options&amp;gt;&#xA;&#xA;&#x9;If your script calls helper modules, and you want the call graph to display the modules&#39; functions,&#xA;&#x9;&#x9;list the modules explicitly on the command line:&#xA;&#x9;callGraph script.pl path/moduleA.pm path/moduleB.pm&#xA;&#x9;&#xA;Options:&#xA;&#x9;-language &amp;lt;lang&amp;gt;           By default, filename extensions are parsed for .pl .pm .tcl .py, etc.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   If those are not found, the first line of the script (#! shebang) is inspected.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   If neither of those give clues, use this option to specify &#39;pl&#39;, &#39;tcl&#39;, &#39;py&#39;, etc&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   This option is required if a directory is scanned&#xA;&#xA;&#x9;-start &amp;lt;function&amp;gt;          Specify function(s) as starting point instead of the main code.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   These are displayed in green.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   This is useful when parsing a large script, as the generated graph can be huge.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   In addition, the calls leading to this function are charted.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   Functions which are not reachable from one of the starting points&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; are not charted.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   -start __MAIN__  can be very useful when multiple source files&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; are specified on the command line&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  The filename can be included as well:&#xA;                            &#x9;&#x9;&#x9;&#x9;&#x9;-start &amp;lt;file&amp;gt;:&amp;lt;function&amp;gt;&#xA;&#xA;&#x9;-ignore &amp;lt;regex&amp;gt;            Specify function(s) to ignore.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   This is useful when pruning the output of a large graph.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   In particular, use it to remove logging or other helper functions which are&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; called by many functions, and only clutter up the graph.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   To ignore multiple functions, use this regex format:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   -ignore &#39;(abc|xyz)&#39;&#xA;&#xA;&#x9;-output &amp;lt;filename&amp;gt;         Specify an output filename&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   By default, the .png file is named according to the first filename.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   If a filename ending in .dot is given,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; only the intermediate .dot file is created.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   If a filename ending in .svg is given, svg format is used&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   If a filename ending in .pdf is given, pdf format is used&#xA;&#xA;&#x9;-noShow                    By default, the .png file is displayed.  This option prevents that behavior.&#xA;&#xA;&#x9;-fullPath                  By default, the script strips off the path name of the input file(s).&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   This option prevents that behavior.&#xA;&#xA;&#x9;-writeSubsetCode &amp;lt;file&amp;gt;    Create an output source code file which includes only the functions&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; included in the graph.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   This can be useful when trying to comprehend a large legacy code.&#xA;&#xA;&#x9;-ymlOut &amp;lt;file&amp;gt;             Create an output YAML file which describes the following for each function:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   * which functions call it&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   * which functions it calls&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   This can be useful to create your own automation or custom formatting&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#xA;&#x9;-ymlIn &amp;lt;file&amp;gt;              Use your intermediate file instead of parsing source files&#xA;&#xA;&#x9;-verbose                   Provides 2 additional functionalities:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   1) Displays the external scripts referenced within each function&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   2) For Perl/TCL, attempts to list the global variables&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;used in each function call in the graph.&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  Global variables are arguably not the best design paradigm,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;but they are found extensively in real-world legacy scripts.&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  Perl:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &#39;my&#39; variables will affect this determination (use strict).&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  Does not distinguish between $var, @var and %var.&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  TCL:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  Variables declared as &#39;global&#39; but not used, are marked with a &#39;*&#39;&#xA;&#xA;&#xA;Usage examples:&#xA;&#x9;callGraph  example.pl example_helper_lib.pm&#xA;&#x9;callGraph  example.py&#xA;&#x9;callGraph  &amp;lt;directory&amp;gt; -language &#39;go&#39;&#xA;&#xA;Algorithm:&#xA;&#x9;callGraph uses a simple line-by-line algorithm, using regexes to find function definitions and calls.&#xA;&#x9;Function definitions can be detected easily, since they start with identifiers such as:&#xA;&#x9;&#x9;&#39;sub&#39;, &#39;def&#39;, &#39;proc&#39;, &#39;function&#39;, &#39;func&#39;, &#39;fun&#39;, or &#39;fn&#39;&#xA;&#x9;Function definitions end with &#39;}&#39; or &#39;end&#39; at the same nesting level as the definition.&#xA;&#x9;Function calls are a bit more tricky, since built-in function calls look exactly like user function calls.&#xA;&#x9;&#x9;To solve this, the algorithm first assumes that anything matching &#39;word(...)&#39; is a function call,&#xA;&#x9;&#x9;and then discards any calls which do not have corresponding definitions.&#xA;&#x9;For example, Perl:&#xA;&#x9;&#x9;sub funcA {&#xA;&#x9;&#x9;&#x9;...&#xA;&#x9;&#x9;&#x9;if ($x) {&#xA;&#x9;&#x9;&#x9;&#x9;print($y);&#xA;&#x9;&#x9;&#x9;&#x9;funcB($y);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;...&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;sub funcB {&#xA;&#x9;&#x9;&#x9;...&#xA;&#x9;&#x9;}&#xA;&#x9;Since this is not a true parser, the formatting must be consistent so that nesting can be determined.&#xA;&#x9;If your Perl script does not follow this rule, consider running it through &#39;perltidy&#39; first.&#xA;&#x9;Also, don&#39;t expect miracles such as parsing dynamic function calls.&#xA;&#x9;Caveats aside, it seems to work well on garden-variety scripts spanning tens of thousands of lines,&#xA;&#x9;&#x9;and has helped me unravel large pieces of legacy code to implement urgent bug fixes.&#xA;    &#xA;Acknowledgements:&#xA;    This code borrows core functionality from https://github.com/cobber/perl_call_graph&#xA;&#xA;Requirements:&#xA;    GraphViz and the Perl GraphViz library must be installed:&#xA;        sudo apt install graphviz&#xA;        sudo apt install make&#xA;        sudo cpan install GraphViz&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>openfoodfacts/openfoodfacts-server</title>
    <updated>2022-09-11T01:45:47Z</updated>
    <id>tag:github.com,2022-09-11:/openfoodfacts/openfoodfacts-server</id>
    <link href="https://github.com/openfoodfacts/openfoodfacts-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open Food Facts database and web interface - üê™ü¶ã Perl, CSS and JS coders welcome üòä For helping in Python, see Robotoff&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://static.openfoodfacts.org/images/logos/off-logo-horizontal-dark.png?refresh_github_cache=1&#34;&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://static.openfoodfacts.org/images/logos/off-logo-horizontal-light.png?refresh_github_cache=1&#34;&gt; &#xA; &lt;img height=&#34;48&#34; src=&#34;https://static.openfoodfacts.org/images/logos/off-logo-horizontal-light.svg?sanitize=true&#34;&gt; &#xA;&lt;/picture&gt; &#xA;&lt;h1&gt;Open Food Facts - Product Opener (Web Server)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://opensource.box.com/badges&#34;&gt;&lt;img src=&#34;http://opensource.box.com/badges/active.svg?sanitize=true&#34; alt=&#34;Project Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://translate.openfoodfacts.org/&#34;&gt;&lt;img src=&#34;https://d322cqt584bo4o.cloudfront.net/openfoodfacts/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codetriage.com/openfoodfacts/openfoodfacts-server&#34;&gt;&lt;img src=&#34;https://www.codetriage.com/openfoodfacts/openfoodfacts-server/badges/users.svg?sanitize=true&#34; alt=&#34;Open Source Helpers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/openfoodfacts/openfoodfacts-server/main/#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/openfoodfacts-server/backers/badge.svg?sanitize=true&#34; alt=&#34;Backers on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/openfoodfacts/openfoodfacts-server/main/#sponsors&#34;&gt;&lt;img src=&#34;https://opencollective.com/openfoodfacts-server/sponsors/badge.svg?sanitize=true&#34; alt=&#34;Sponsors on Open Collective&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tests&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/openfoodfacts/openfoodfacts-server/actions/workflows/perlcritic.yml&#34;&gt;&lt;img src=&#34;https://github.com/openfoodfacts/openfoodfacts-server/actions/workflows/perlcritic.yml/badge.svg?sanitize=true&#34; alt=&#34;Perl::Critic&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/openfoodfacts/openfoodfacts-server/actions/workflows/pull_request.yml&#34;&gt;&lt;img src=&#34;https://github.com/openfoodfacts/openfoodfacts-server/actions/workflows/pull_request.yml/badge.svg?sanitize=true&#34; alt=&#34;Pull Requests&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is Product Opener?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Product Opener&lt;/strong&gt; is the server software for &lt;strong&gt;Open Food Facts&lt;/strong&gt; and &lt;strong&gt;Open Beauty Facts&lt;/strong&gt;. It is released under the AGPL license and is being developed in Perl, HTML and JavaScript as &lt;a href=&#34;https://en.wikipedia.org/wiki/Free_and_open-source_software&#34;&gt;Free and Open-Source Software&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It works together with &lt;a href=&#34;https://github.com/openfoodfacts/robotoff&#34;&gt;Robotoff&lt;/a&gt;, Open Food Facts&#39; AI system (in Python, which can also be installed locally) and the &lt;a href=&#34;https://github.com/openfoodfacts/smooth-app&#34;&gt;Open Food Facts apps&lt;/a&gt; (which can work with your local instance after enabling dev mode)&lt;/p&gt; &#xA;&lt;h2&gt;What is Open Food Facts?&lt;/h2&gt; &#xA;&lt;h3&gt;A food product database&lt;/h3&gt; &#xA;&lt;p&gt;Open Food Facts is a database of food products with ingredients, allergens, nutritional facts and all the tidbits of information that is available on various product labels.&lt;/p&gt; &#xA;&lt;h3&gt;Made by everyone&lt;/h3&gt; &#xA;&lt;p&gt;Open Food Facts is a non-profit association of volunteers. 25.000+ contributors like you have added 1.7 million + products from 150 countries using our Android, iPhone or Windows Phone app or their camera to scan barcodes and upload pictures of products and their labels.&lt;/p&gt; &#xA;&lt;h3&gt;For everyone&lt;/h3&gt; &#xA;&lt;p&gt;Data about food is of public interest and has to be open (i.e available to everyone). The complete database is published as open data and can be reused by anyone and for any use. Check-out the cool reuses or make your own!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://world.openfoodfacts.org&#34;&gt;https://world.openfoodfacts.org&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Priorities&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please list priority issues here&lt;/li&gt; &#xA; &lt;li&gt;Please add roadmaps here&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openfoodfacts/openfoodfacts-server/labels/P1&#34;&gt;P1 problems&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openfoodfacts/openfoodfacts-server/labels/P1%20candidate&#34;&gt;P1 candidates&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- ## Libraries used --&gt; &#xA;&lt;h2&gt;How do I get started?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join us on Slack at &lt;a href=&#34;https://openfoodfacts.slack.com/&#34;&gt;https://openfoodfacts.slack.com/&lt;/a&gt; in the channels: &lt;code&gt;#api&lt;/code&gt;, &lt;code&gt;#productopener&lt;/code&gt;, &lt;code&gt;#dev&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Developer documentation: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openfoodfacts/openfoodfacts-server/main/docs/introduction/dev-environment-quick-start-guide.md&#34;&gt;Quick start guide (Docker)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openfoodfacts/openfoodfacts-server/main/docs/how-to-guides/docker-developer-guide.md&#34;&gt;Developer guide (Docker)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openfoodfacts/openfoodfacts-server/main/docs/how-to-guides/use-gitpod.md&#34;&gt;Developer guide (Gitpod)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://wiki.openfoodfacts.org/Product_Opener/Installation&#34;&gt;Manual installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Configuration [TBA]&lt;/li&gt; &#xA;   &lt;li&gt;Dependencies [TBA]&lt;/li&gt; &#xA;   &lt;li&gt;Database configuration [TBA]&lt;/li&gt; &#xA;   &lt;li&gt;How to run tests [TBA]&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openfoodfacts.github.io/api-documentation/&#34;&gt;API Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note: documentation follows the &lt;a href=&#34;https://diataxis.fr/&#34;&gt;Di√°taxis Framework&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contribution guidelines&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re new to Open-Source, we recommend you to check out our &lt;a href=&#34;https://github.com/openfoodfacts/openfoodfacts-server/raw/master/CONTRIBUTING.md&#34;&gt;&lt;em&gt;Contributing Guidelines&lt;/em&gt;&lt;/a&gt;. Feel free to fork the project and send us a pull request.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Writing tests&lt;/li&gt; &#xA; &lt;li&gt;Code review&lt;/li&gt; &#xA; &lt;li&gt;Other guidelines&lt;/li&gt; &#xA; &lt;li&gt;Please add new features to the CHANGELOG.md file before or after merge to make testing easier&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reporting problems or asking for a feature&lt;/h2&gt; &#xA;&lt;p&gt;Have a bug or a feature request? Please search for existing and closed issues. If your problem or idea is not addressed yet, please &lt;a href=&#34;https://github.com/openfoodfacts/openfoodfacts-server/issues&#34;&gt;open a new issue&lt;/a&gt;. You can ask directly in the discussion room if you&#39;re not sure&lt;/p&gt; &#xA;&lt;h2&gt;Translate Open Food Facts in your language&lt;/h2&gt; &#xA;&lt;p&gt;You can help translate the Open Food Facts web version and the app at : &lt;a href=&#34;https://translate.openfoodfacts.org/&#34;&gt;https://translate.openfoodfacts.org/&lt;/a&gt; (no technical knowledge required, takes a minute to signup)&lt;/p&gt; &#xA;&lt;h2&gt;Helping with HTML and CSS&lt;/h2&gt; &#xA;&lt;p&gt;We have [&lt;a href=&#34;https://github.com/openfoodfacts/openfoodfacts-server/tree/master/templates&#34;&gt;templatized&lt;/a&gt;] Product Opener, we use Gulp and NPM, but you&#39;ll need to run the Product Opener docker to be able to see the result (see the How do I get set up? section).&lt;/p&gt; &#xA;&lt;h3&gt;Who do I talk to?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join our discussion room at &lt;a href=&#34;https://slack.openfoodfacts.org/&#34;&gt;https://slack.openfoodfacts.org/&lt;/a&gt; Make sure to join the #productopener and #productopener-alerts channels. St√©phane, Pierre, Charles or Hangy will be around to help you get started.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&#34;https://github.com/openfoodfacts/openfoodfacts-server/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=openfoodfacts/openfoodfacts-server&amp;amp;columns=16&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Backers&lt;/h2&gt; &#xA;&lt;p&gt;Thank you to all our backers! üôè [&lt;a href=&#34;https://opencollective.com/openfoodfacts-server#backer&#34;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/openfoodfacts-server#backers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/openfoodfacts-server/backers.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href=&#34;https://opencollective.com/openfoodfacts-server#sponsor&#34;&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/openfoodfacts-server/sponsor/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/openfoodfacts-server/sponsor/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/openfoodfacts-server/sponsor/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/openfoodfacts-server/sponsor/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/openfoodfacts-server/sponsor/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/openfoodfacts-server/sponsor/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/openfoodfacts-server/sponsor/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/openfoodfacts-server/sponsor/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/openfoodfacts-server/sponsor/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/openfoodfacts-server/sponsor/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/openfoodfacts-server/sponsor/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/openfoodfacts-server/sponsor/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/openfoodfacts-server/sponsor/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/openfoodfacts-server/sponsor/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/openfoodfacts-server/sponsor/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/openfoodfacts-server/sponsor/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/openfoodfacts-server/sponsor/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/openfoodfacts-server/sponsor/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/openfoodfacts-server/sponsor/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/openfoodfacts-server/sponsor/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nlnet.nl/&#34;&gt;&lt;img style=&#34;height:100px&#34; src=&#34;https://static.openfoodfacts.org/images/misc/nlnet_logo.svg?sanitize=true&#34; alt=&#34;Logo NLnet: abstract logo of four people seen from above Logo NGI Zero: letterlogo shaped like a tag&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Open Food Facts Personal Search project was funded through the &lt;a href=&#34;https://nlnet.nl/discovery/&#34;&gt;NGI0 Discovery&lt;/a&gt; Fund, a fund established by NLnet with financial support from the European Commission&#39;s &lt;a href=&#34;https://ngi.eu&#34;&gt;Next Generation Internet&lt;/a&gt; programme.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SpiderLabs/owasp-modsecurity-crs</title>
    <updated>2022-09-11T01:45:47Z</updated>
    <id>tag:github.com,2022-09-11:/SpiderLabs/owasp-modsecurity-crs</id>
    <link href="https://github.com/SpiderLabs/owasp-modsecurity-crs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OWASP ModSecurity Core Rule Set (CRS) Project (Official Repository)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/travis/spiderlabs/owasp-modsecurity-crs/v3.3/dev?label=v3.3%2Fdev&#34; alt=&#34;Travis build v3.3/dev&#34;&gt; &lt;img src=&#34;https://img.shields.io/travis/spiderlabs/owasp-modsecurity-crs/v3.2/dev?label=v3.2%2Fdev&#34; alt=&#34;Travis build v3.2/dev&#34;&gt; &lt;img src=&#34;https://img.shields.io/travis/spiderlabs/owasp-modsecurity-crs/v3.1/dev?label=v3.1%2Fdev&#34; alt=&#34;Travis build v3.1/dev&#34;&gt; &lt;a href=&#34;https://www.owasp.org/index.php/OWASP_Project_Inventory#tab=Flagship_Projects&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/owasp-flagship%20project-38a047.svg?sanitize=true&#34; alt=&#34;OWASP Flagship&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/1390&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/1390/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;CRS migrated to a new &lt;span&gt;üè†&lt;/span&gt; !&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The OWASP ModSecurity Core Rule Set (CRS) has moved to &lt;a href=&#34;https://github.com/coreruleset/coreruleset&#34;&gt;https://github.com/coreruleset/coreruleset&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A note on this change:&lt;/p&gt; &#xA;&lt;p&gt;This project started at Trustwave SpiderLabs over ten years ago, it was created with the idea of making a free ruleset that anyone can use to get started with ModSecurity. Over time it has grown into a community maintained project that no longer needs our direct support- which is the best you can hope for with such a project: Apart from growing a community dedicated fully to maintaining the CRS project, it also freed us up to focus fully on maintaining ModSecurity the engine.&lt;/p&gt; &#xA;&lt;p&gt;Given that Trustwave SpiderLabs hasn&#39;t been the maintainer of the project for a few years now it made sense for it to have its own home on GitHub. As such, in coordination with the CRS team it has moved to the following location: &lt;a href=&#34;https://github.com/coreruleset/coreruleset&#34;&gt;https://github.com/coreruleset/coreruleset&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project is now archived to retain its history and make sure that no links are broken but it will &lt;strong&gt;NOT&lt;/strong&gt; be maintained at this location so if you&#39;re working directly with GitHub make sure to update your scripts and environments accordingly.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;- Trustwave SpiderLabs&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;OWASP ModSecurity Core Rule Set (CRS)&lt;/h1&gt; &#xA;&lt;p&gt;The OWASP ModSecurity Core Rule Set (CRS) is a set of generic attack detection rules for use with ModSecurity or compatible web application firewalls. The CRS aims to protect web applications from a wide range of attacks, including the OWASP Top Ten, with a minimum of false alerts.&lt;/p&gt; &#xA;&lt;h2&gt;CRS Resources&lt;/h2&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://coreruleset.org/&#34;&gt;OWASP ModSecurity Core Rule Set page&lt;/a&gt; to get introduced to the CRS and view resources on installation, configuration, and working with the CRS.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to the CRS&lt;/h2&gt; &#xA;&lt;p&gt;We strive to make the OWASP ModSecurity CRS accessible to a wide audience of beginner and experienced users. We are interested in hearing any bug reports, false positive alert reports, evasions, usability issues, and suggestions for new detections.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SpiderLabs/owasp-modsecurity-crs/issues&#34;&gt;Create an issue on GitHub&lt;/a&gt; to report a false positive or false negative (evasion). Please include your installed version and the relevant portions of your ModSecurity audit log.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://groups.google.com/a/owasp.org/forum/#!forum/modsecurity-core-rule-set-project&#34;&gt;Sign up for our Google Group&lt;/a&gt; to ask general usage questions and participate in discussions on the CRS. Also &lt;a href=&#34;https://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/index&#34;&gt;here&lt;/a&gt; you can find the archives for the previous mailing list.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://owaspslack.com&#34;&gt;Join the #coreruleset channel on OWASP Slack&lt;/a&gt; to chat about the CRS.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2006-2019 Trustwave and contributors. All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;The OWASP ModSecurity Core Rule Set is distributed under Apache Software License (ASL) version 2. Please see the enclosed LICENSE file for full details.&lt;/p&gt;</summary>
  </entry>
</feed>