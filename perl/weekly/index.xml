<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-29T02:03:08Z</updated>
  <subtitle>Weekly Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>DGFiP/Test-Compta-Demat</title>
    <updated>2023-01-29T02:03:08Z</updated>
    <id>tag:github.com,2023-01-29:/DGFiP/Test-Compta-Demat</id>
    <link href="https://github.com/DGFiP/Test-Compta-Demat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ce logiciel permet de contrôler le respect des normes des fichiers d&#39;écritures comptables (FEC) conformément aux dispositions de l&#39;article A.47 A-1 du livre des procédures fiscales.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Test-Compta-Demat&lt;/h1&gt; &#xA;&lt;p&gt;Copyright 2014 Direction Générale des Finances Publiques - France&lt;/p&gt; &#xA;&lt;p&gt;Ce logiciel permet de contrôler le respect des normes des fichiers d&#39;écritures comptables (FEC) conformément aux dispositions de l&#39;article A.47 A-1 du livre des procédures fiscales.&lt;/p&gt; &#xA;&lt;p&gt;Ce logiciel est régi par la licence CeCILL V2.1 soumise au droit français et respectant les principes de diffusion des logiciels libres. Vous pouvez utiliser, modifier et/ou redistribuer ce programme sous les conditions de la licence CeCILL V2.1 telle que diffusée par le CEA, le CNRS et l&#39;INRIA sur le site &#34;&lt;a href=&#34;http://www.cecill.info&#34;&gt;http://www.cecill.info&lt;/a&gt;&#34;.&lt;/p&gt; &#xA;&lt;h1&gt;Récupération des sources du programme&lt;/h1&gt; &#xA;&lt;p&gt;Pour les visualiser se rendre dans le dossier src/. Les sources utilisées sont disponibles pour adaptation sur des environnements différents. Pour cela, cloner le dépôt git (cf doc de git).&lt;/p&gt; &#xA;&lt;h1&gt;Récupération des distributions Windows&lt;/h1&gt; &#xA;&lt;p&gt;Le programme est disponible sous la forme d&#39;une distribution exécutable livrée dans une archive autoextractive.&lt;/p&gt; &#xA;&lt;h2&gt;Version windows 32 bits&lt;/h2&gt; &#xA;&lt;p&gt;Cliquer sur release pour voir les exécutables windows puis cliquer sur le bouton vert qui correspond à la version windows (x86.exe) pour le télécharger.&lt;/p&gt; &#xA;&lt;h2&gt;Version spécifique pour windows 64 bits :&lt;/h2&gt; &#xA;&lt;p&gt;Cliquer sur release pour voir les exécutables windows puis cliquer sur le bouton vert qui correspond à la version windows en 64 bits (x86_64.exe) pour le télécharger.&lt;/p&gt; &#xA;&lt;h1&gt;Documentations&lt;/h1&gt; &#xA;&lt;p&gt;voir le contenu du dossier doc : pour visualiser un pdf, il faut le télécharger (cliquer sur View Raw) puis ouvrir le fichier téléchargé.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rocky/Perl-Syntax</title>
    <updated>2023-01-29T02:03:08Z</updated>
    <id>tag:github.com,2023-01-29:/rocky/Perl-Syntax</id>
    <link href="https://github.com/rocky/Perl-Syntax" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Perl module for syntax checking a string or Perl file. Like perl -c, but with more control over output&lt;/p&gt;&lt;hr&gt;&lt;p&gt;=pod&lt;/p&gt; &#xA;&lt;p&gt;=head1 Name&lt;/p&gt; &#xA;&lt;p&gt;Perl::Syntax -- Syntax Check Perl files and strings&lt;/p&gt; &#xA;&lt;p&gt;=head1 Summary&lt;/p&gt; &#xA;&lt;p&gt;This module syntax checks Perl files and strings. It is identical to running C&amp;lt;perl -c ...&amp;gt;, but output doesn&#39;t go by default to STDOUT.&lt;/p&gt; &#xA;&lt;p&gt;You run his like this from a command line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ perl -MPerl::Syntax perl-program.pl&#xA;$ perl -MPerl::Syntax -e &#39;your perl code&#39; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which is like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ perl -c perl-program.pl 2&amp;gt;/dev/null&#xA;$ perl -MPerl::Syntax -e &#39;your perl code&#39; 2&amp;gt;/dev/null&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or from inside Perl:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; system($^X, &#39;-M&#39;, &#39;Perl::Syntax&#39;, $perl_program);&#xA; system(&#34;$^X -M Perl::Syntax $perl_program&#34;);&#xA; # check $? &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, no output is produced. You will get a zero return code if everything checks out or nonzero if there was a syntax error.&lt;/p&gt; &#xA;&lt;p&gt;To capture output to a file, you can specify a file name by adding an equal sign after &#34;Perl::Syntax&#34; like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perl -MPerl::Syntax=/tmp/output-file.txt perl-program.pl &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or inside PerL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; system($^X, &#39;-M&#39;, &#39;Perl::Syntax=/tmp/outfile-file.txt&#39;, $perl_program);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;File I&amp;lt;/tmp/output-file.txt&amp;gt; will have either the messages Perl normally produces on C&#xA; &lt;stderr&gt;&#xA;  :&#xA; &lt;/stderr&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;XXXX syntax OK&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;syntax error at XXXX line DDDD ...&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;=head1 Examples&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; use English;&#xA; my @prefix = ($EXECUTABLE_NAME, &#39;-MPerl::Syntax&#39;);&#xA;&#xA; # test this Perl code to see if it is syntactically correct;&#xA; system(@prefix, __FILE__); &#xA; print &#34;Yep, we&#39;re good&#34; unless $? &amp;gt;&amp;gt; 8;&#xA;&#xA; # test of invalid Perl code: &#xA; system(@prefix, &#39;-e&#39;, &#39;$Incomplete + $Expression +&#39;; &#xA; print &#34;Try again&#34; if $? &amp;gt;&amp;gt; 8;&#xA;&#xA; # Show capturing output&#xA; system($EXECUTABLE_NAME, &#39;-MPerl::Syntax=/tmp/Syntax.log&#39;, __FILE__);&#xA; # results are in /tmp/Syntax.log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;=head1 Bugs/Caveats&lt;/p&gt; &#xA;&lt;p&gt;There doesn&#39;t seem to be much benefit here over using C&amp;lt;perl -c&amp;gt; with C&#xA; &lt;stderr&gt;&#xA;   redirected. What I really want is a kind of eval that just does the syntax checking.&#xA; &lt;/stderr&gt;&lt;/p&gt; &#xA;&lt;p&gt;=head1 Author&lt;/p&gt; &#xA;&lt;p&gt;Rocky Bernstein&lt;/p&gt; &#xA;&lt;p&gt;=head1 See Also&lt;/p&gt; &#xA;&lt;p&gt;C&amp;lt;-c&amp;gt; switch from L&amp;lt;perlrun#Command-Switches&amp;gt;&lt;/p&gt; &#xA;&lt;p&gt;=head1 Copyright&lt;/p&gt; &#xA;&lt;p&gt;Copyright (C) 2012 Rocky Bernstein &lt;a href=&#34;mailto:rocky@cpan.org&#34;&gt;rocky@cpan.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This program is distributed WITHOUT ANY WARRANTY, including but not limited to the implied warranties of merchantability or fitness for a particular purpose.&lt;/p&gt; &#xA;&lt;p&gt;The program is free software. You may distribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation (either version 2 or any later version) and the Perl Artistic License as published by O&#39;Reilly Media, Inc. Please open the files named gpl-2.0.txt and Artistic for a copy of these licenses.&lt;/p&gt; &#xA;&lt;p&gt;=cut&lt;/p&gt;</summary>
  </entry>
</feed>