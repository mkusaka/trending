<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-09T01:45:17Z</updated>
  <subtitle>Weekly Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cosimo/perl5-imager-skindetector</title>
    <updated>2022-10-09T01:45:17Z</updated>
    <id>tag:github.com,2022-10-09:/cosimo/perl5-imager-skindetector</id>
    <link href="https://github.com/cosimo/perl5-imager-skindetector" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Source repository for Perl5 Imager::SkinDetector CPAN module&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Imager-SkinDetector&lt;/p&gt; &#xA;&lt;p&gt;Have you ever needed to know if an image has some amount of skin tone color? Did you find some tool to do it? Free software? If so, please tell me which one!&lt;/p&gt; &#xA;&lt;p&gt;If not, welcome to Imager-SkinDetector. It uses Imager as processing engine, so it has a decent speed. Don&#39;t expect miracles, though.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;m planning to use this as part of a set of tools to automatically classify images as nudity or &#34;containing skin&#34;. It&#39;s only a plan. I might succeed one day. Most probably I won&#39;t. :-)&lt;/p&gt; &#xA;&lt;p&gt;Feel free to provide feedback and code.&lt;/p&gt; &#xA;&lt;p&gt;INSTALLATION&lt;/p&gt; &#xA;&lt;p&gt;To install this module, run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perl Makefile.PL&#xA;make&#xA;make test&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;SUPPORT AND DOCUMENTATION&lt;/p&gt; &#xA;&lt;p&gt;After installing, you can find documentation for this module with the perldoc command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perldoc Imager::SkinDetector&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also look for information at:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;RT, CPAN&#39;s request tracker&#xA;    http://rt.cpan.org/NoAuth/Bugs.html?Dist=Imager-SkinDetector&#xA;&#xA;AnnoCPAN, Annotated CPAN documentation&#xA;    http://annocpan.org/dist/Imager-SkinDetector&#xA;&#xA;CPAN Ratings&#xA;    http://cpanratings.perl.org/d/Imager-SkinDetector&#xA;&#xA;Search CPAN&#xA;    http://search.cpan.org/dist/Imager-SkinDetector&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;COPYRIGHT AND LICENCE&lt;/p&gt; &#xA;&lt;p&gt;Copyright (C) 2008 Cosimo Streppone, &lt;a href=&#34;mailto:cosimo@cpan.org&#34;&gt;cosimo@cpan.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>binary-com/translations-websockets-api</title>
    <updated>2022-10-09T01:45:17Z</updated>
    <id>tag:github.com,2022-10-09:/binary-com/translations-websockets-api</id>
    <link href="https://github.com/binary-com/translations-websockets-api" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Language files for Binary.com Websockets API service&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;translations-websockets-api&lt;/h1&gt; &#xA;&lt;p&gt;Language files for Binary.com Websockets API service&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Stantheman/KJVTweeter</title>
    <updated>2022-10-09T01:45:17Z</updated>
    <id>tag:github.com,2022-10-09:/Stantheman/KJVTweeter</id>
    <link href="https://github.com/Stantheman/KJVTweeter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tiny set of scripts to automatically tweet verses of the bible shorter than 141 characters&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;KJV Tweeter&lt;/h1&gt; &#xA;&lt;p&gt;KJVTweeter takes every tweetable verse from the King James Version translation of the Bible and tweets it. The source file is available here: &lt;a href=&#34;http://av1611.com/misc/KJV.zip&#34;&gt;http://av1611.com/misc/KJV.zip&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This was originally hacked together with some perl and bash one-liners. I made it a tiny more presentable because I think it&#39;s a neat project. You can follow the live version of this code online at &lt;a href=&#34;https://twitter.com/#!/KJVtweeter&#34;&gt;https://twitter.com/#!/KJVtweeter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Initial Setup&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget http://av1611.com/misc/KJV.zip&#xA;unzip -p KJV.zip | ./parser.pl | sort -R -o random_bible.txt &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From here, you&#39;d add a cronjob to run the tweet_bible.sh script at whatever interval you want.&lt;/p&gt; &#xA;&lt;h2&gt;Gripes&lt;/h2&gt; &#xA;&lt;p&gt;Unzip doesn&#39;t have an option to take input from STDIN. Funzip is supposed to be the answer.&lt;/p&gt;</summary>
  </entry>
</feed>