<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-01T01:48:10Z</updated>
  <subtitle>Weekly Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>liske/needrestart</title>
    <updated>2024-12-01T01:48:10Z</updated>
    <id>tag:github.com,2024-12-01:/liske/needrestart</id>
    <link href="https://github.com/liske/needrestart" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Restart daemons after library updates.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;needrestart&lt;/h1&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;needrestart&lt;/em&gt; checks which daemons need to be restarted after library upgrades. It is inspired by &lt;em&gt;checkrestart&lt;/em&gt; from the &lt;em&gt;debian-goodies&lt;/em&gt; package.&lt;/p&gt; &#xA;&lt;p&gt;There are some hook scripts in the &lt;code&gt;ex/&lt;/code&gt; directory (to be used with &lt;em&gt;apt&lt;/em&gt; and &lt;em&gt;dpkg&lt;/em&gt;. The scripts will call &lt;em&gt;needrestart&lt;/em&gt; after any package installation/upgrades.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;needrestart&lt;/em&gt; should work on GNU/Linux. It has limited functionality on GNU/kFreeBSD since &lt;code&gt;/proc/&amp;lt;pid&amp;gt;/maps&lt;/code&gt; does not show removed file links.&lt;/p&gt; &#xA;&lt;h2&gt;Restarting Services&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;needrestart&lt;/em&gt; supports but does not require systemd (available since v0.6). If systemd is used you should use libpam-systemd, too. If needrestart detects systemd it will assume that libpam-systemd is used and relies on cgroup names to detect if a process belongs to a user session or a daemon. If you do not use libpam-systemd you should set $nrconf{has_pam_systemd} to 0 within needrestart.conf.&lt;/p&gt; &#xA;&lt;p&gt;If systemd is not available or does not return a service name &lt;em&gt;needrestart&lt;/em&gt; uses hooks to identify the corresponding System V init script. The shipped hooks support the following package managers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;dpkg&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;rpm&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;pacman&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;em&gt;service&lt;/em&gt; command is used to run the traditional System V init script.&lt;/p&gt; &#xA;&lt;h2&gt;Frontends&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;needrestart&lt;/em&gt; uses a modular approach based on perl packages providing the user interface. The following frontends are shipped:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;NeedRestart::UI::Debconf&lt;/em&gt; using &lt;em&gt;debconf&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;NeedRestart::UI::stdio&lt;/em&gt; fallback using stdio interaction&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Kernel &amp;amp; Microcode&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;needrestart&lt;/em&gt; 0.8 brings a obsolete kernel detection feature. Since &lt;em&gt;needrestart&lt;/em&gt; 3.5 it is possible to filter kernel image filenames (required on &lt;a href=&#34;https://raw.githubusercontent.com/liske/needrestart/master/README.raspberry.md&#34;&gt;Raspberry Pi&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;In &lt;em&gt;needrestart&lt;/em&gt; 3.0 a &lt;a href=&#34;https://raw.githubusercontent.com/liske/needrestart/master/README.uCode.md&#34;&gt;processor microcode update detection feature&lt;/a&gt; for Intel CPUs has been added. Since &lt;em&gt;needrestart&lt;/em&gt; 3.5 the AMD CPU support has been added.&lt;/p&gt; &#xA;&lt;h2&gt;Interpreters&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;needrestart&lt;/em&gt; 0.8 brings an &lt;a href=&#34;https://raw.githubusercontent.com/liske/needrestart/master/README.Interp.md&#34;&gt;interpreter scanning feature&lt;/a&gt;. Interpreters not only map binary (shared) objects but also use plaintext source files. The interpreter detection tries to check for outdated source files since they may contain security issues, too. This is only a heuristic and might fail to detect all relevant source files. The following interpreter scanners are shipped:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;NeedRestart::Interp::Java&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;NeedRestart::Interp::Perl&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;NeedRestart::Interp::Python&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;NeedRestart::Interp::Ruby&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Containers&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;needrestart&lt;/em&gt; 2.1 &lt;a href=&#34;https://raw.githubusercontent.com/liske/needrestart/master/README.Cont.md&#34;&gt;detects some container technologies&lt;/a&gt;. If a process is part of a container it might not be possible to restart it using Sys-V/systemd.&lt;/p&gt; &#xA;&lt;p&gt;There are special perl packages (NeedRestart::CONT::*) implementing the container detection and restarting. The following container detectors are shipped:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;NeedRestart::CONT::docker&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;NeedRestart::CONT::LXC&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;NeedRestart::CONT::machined&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Batch Mode&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;needrestart&lt;/em&gt; can be run in &lt;a href=&#34;https://raw.githubusercontent.com/liske/needrestart/master/README.batch.md&#34;&gt;batch mode&lt;/a&gt; to use the results within other programs or scripts.&lt;/p&gt; &#xA;&lt;p&gt;There is also a &lt;a href=&#34;https://raw.githubusercontent.com/liske/needrestart/master/README.nagios.md&#34;&gt;nagios plugin mode&lt;/a&gt; available.&lt;/p&gt;</summary>
  </entry>
</feed>