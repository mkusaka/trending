<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-03T01:57:16Z</updated>
  <subtitle>Weekly Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>smfreegard/DecodeShortURLs</title>
    <updated>2023-09-03T01:57:16Z</updated>
    <id>tag:github.com,2023-09-03:/smfreegard/DecodeShortURLs</id>
    <link href="https://github.com/smfreegard/DecodeShortURLs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SpamAssassin DecodeShortURLs plug-in repository&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NOTE: this plugin is be merged into SpamAssassin, so it will no longer be updated here.&lt;/h1&gt; &#xA;&lt;h1&gt;DecodeShortURLs&lt;/h1&gt; &#xA;&lt;p&gt;This is a plugin for SpamAssassin.&lt;/p&gt; &#xA;&lt;p&gt;This plugin looks for URLs shortened by a list of URL shortening services and upon finding a matching URL will connect using to the shortening service and do an HTTP HEAD lookup and retrieve the location header which points to the actual shortened URL, it then adds this URL to the list of URIs extracted by SpamAssassin which can then be accessed by other plug-ins, such as URIDNSBL.&lt;/p&gt; &#xA;&lt;p&gt;This plugin also sets the rule HAS_SHORT_URL if any matching short URLs are found.&lt;/p&gt; &#xA;&lt;p&gt;Regular &#39;uri&#39; rules can be used to detect and score links disabled by the shortening service for abuse and URL_BITLY_BLOCKED is supplied as an example. It should be safe to score this rule highly on a match as experience shows that bit.ly only blocks access to a URL if it has seen consistent abuse and problem reports.&lt;/p&gt; &#xA;&lt;p&gt;As of version 0.3 this plug-in will follow &#39;chained&#39; shorteners e.g.&lt;/p&gt; &#xA;&lt;p&gt;short URL -&amp;gt; short URL -&amp;gt; short URL -&amp;gt; real URL&lt;/p&gt; &#xA;&lt;p&gt;If this form of chaining is found, then the rule &#39;SHORT_URL_CHAINED&#39; will be fired. If a loop is detected then &#39;SHORT_URL_LOOP&#39; will be fired. This plug-in limits the number of chained shorteners to a maximim of 10 at which point it will fire the rule &#39;SHORT_URL_MAXCHAIN&#39; and go no further.&lt;/p&gt; &#xA;&lt;p&gt;If a shortener returns a &#39;404 Not Found&#39; result for the short URL then the rule &#39;SHORT_URL_404&#39; will be fired.&lt;/p&gt; &#xA;&lt;p&gt;If a shortener does not return an HTTP redirect, then a dynamic rule will be fired: &#39;SHORT_&amp;lt;SHORTENER&amp;gt;_&amp;lt;CODE&amp;gt;&#39; where &amp;lt;SHORTENER&amp;gt; is the uppercase name of the shortener with dots converted to underscores. e.g.: &#39;SHORT_T_CO_200&#39; This is to handle the case of t.co which now returns an HTTP 200 and an abuse page instead of redirecting to an abuse page like every other shortener does...&lt;/p&gt; &#xA;&lt;h2&gt;NOTES&lt;/h2&gt; &#xA;&lt;p&gt;This plugin runs the parsed_metadata hook with a priority of -1 so that it may modify the parsed URI list prior to the URIDNSBL plugin which runs as priority 0.&lt;/p&gt; &#xA;&lt;p&gt;Currently the plugin queries a maximum of 10 distinct shortened URLs with a maximum timeout of 5 seconds per lookup.&lt;/p&gt; &#xA;&lt;h2&gt;ACKNOWLEDGEMENTS&lt;/h2&gt; &#xA;&lt;p&gt;A lot of this plugin has been hacked together by using other plugins as examples. The author would particularly like to tip his hat to Karsten Br√§ckelmann for the _add_uri_detail_list() function that he stole from GUDO.pm for which this plugin would not be possible due to the SpamAssassin API making no provision for adding to the base list of extracted URIs and the author not knowing enough about Perl to be able to achieve this without a good example from someone that does ;-)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cpini/CGI-App</title>
    <updated>2023-09-03T01:57:16Z</updated>
    <id>tag:github.com,2023-09-03:/cpini/CGI-App</id>
    <link href="https://github.com/cpini/CGI-App" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Base framework for a quick start Template Toolkit and CGI Application structured solution&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CGI-App&lt;/h1&gt; &#xA;&lt;p&gt;Base framework for a quick start Template Toolkit and CGI Application structured solution&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>chiamingyen/wwwServer</title>
    <updated>2023-09-03T01:57:16Z</updated>
    <id>tag:github.com,2023-09-03:/chiamingyen/wwwServer</id>
    <link href="https://github.com/chiamingyen/wwwServer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;wwwServer&lt;/h1&gt; &#xA;&lt;p&gt;Mongoose and nginx www servers for windows.&lt;/p&gt;</summary>
  </entry>
</feed>