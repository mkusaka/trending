<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-20T01:45:38Z</updated>
  <subtitle>Weekly Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ribasushi/patchup-Perl5-DBD-InterBase</title>
    <updated>2022-11-20T01:45:38Z</updated>
    <id>tag:github.com,2022-11-20:/ribasushi/patchup-Perl5-DBD-InterBase</id>
    <link href="https://github.com/ribasushi/patchup-Perl5-DBD-InterBase" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;DBD::InterBase -- DBI driver for Firebird and InterBase RDBMS server.&lt;/p&gt; &#xA;&lt;p&gt;$Id: README 360 2005-09-12 03:25:30Z edpratomo $&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 1999-2005 Edwin Pratomo Portions Copyright (c) 2001-2005 Daniel Ritz&lt;/p&gt; &#xA;&lt;p&gt;You may distribute under the terms of either the GNU General Public License or the Artistic License, as specified in the Perl README file.&lt;/p&gt; &#xA;&lt;p&gt;PLEASE READ THE ENTIRE README FILE CAREFULLY !&lt;/p&gt; &#xA;&lt;p&gt;WARNING: THIS IS BETA SOFTWARE. Your mileage may vary.&lt;/p&gt; &#xA;&lt;p&gt;REQUIREMENTS:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Perl 5.004 installed&lt;/li&gt; &#xA; &lt;li&gt;Perl DBI (1.41 and higher)&lt;/li&gt; &#xA; &lt;li&gt;Firebird (2.1 and higher)&lt;/li&gt; &#xA; &lt;li&gt;A C compiler &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;UN*X GCC 2.95.2 (tested, older may or may not work) or other capable&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Windows&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Strawberry perl comes with it&#39;s own compiler (mingw)&lt;/li&gt; &#xA;     &lt;li&gt;or Microsoft Express VC++ 9.0 (2008)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;BEFORE&lt;/em&gt; BUILDING, TESTING AND INSTALLING this you will need to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Build, test and install Perl 5 (at least 5.004). It is very important to TEST it and INSTALL it!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build, test and install the DBI module (at least DBI 1.41). It is very important to TEST it and INSTALL it!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Remember to &lt;em&gt;read&lt;/em&gt; the DBI README file!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure that Firebird server is running (for testing telnet localhost 3050)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;BUILDING: Win32/Win64 with Strawberry type &#39;make&#39; from the console&lt;/p&gt; &#xA;&lt;p&gt;Win32/Win64 with MS compiler: type &#39;nmake&#39;, not just &#39;make&#39;&lt;/p&gt; &#xA;&lt;p&gt;To Configure and build the DBD: perl Makefile.PL (when asked to specify a test database, please specify a non-existing file) make&lt;/p&gt; &#xA;&lt;p&gt;TESTING&lt;/p&gt; &#xA;&lt;p&gt;make test make install (if the tests look okay)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>backuppc/backuppc</title>
    <updated>2022-11-20T01:45:38Z</updated>
    <id>tag:github.com,2022-11-20:/backuppc/backuppc</id>
    <link href="https://github.com/backuppc/backuppc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;BackupPC is a high-performance, enterprise-grade system for backing up to a server&#39;s disk.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://backuppc.github.io/backuppc/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/backuppc/backuppc/master/images/logo320.png&#34; alt=&#34;BackupPC&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;BackupPC is a high-performance, enterprise-grade system for backing up to a server&#39;s disk.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;The latest version of BackupPC can be fetched from:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/backuppc/backuppc/releases&#34;&gt;github.com/backuppc/backuppc/releases&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You&#39;ll need to install the perl module BackupPC::XS, available from:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/backuppc/backuppc-xs/releases&#34;&gt;github.com/backuppc/backuppc-xs/releases&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;and the server-side rsync from:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/backuppc/rsync-bpc/releases&#34;&gt;github.com/backuppc/rsync-bpc/releases&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you will use SMB for WinXX clients, you will need smbclient and nmblookup from the Samba distribution.&lt;/p&gt; &#xA;&lt;p&gt;To install BackupPC run these commands as root:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tar zxf BackupPC-__VERSION__.tar.gz&#xA;cd BackupPC-__VERSION__&#xA;perl configure.pl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will automatically determine some system information and prompt you for install paths. Do &lt;code&gt;perldoc configure.pl&lt;/code&gt; to see the various options that configure.pl provides.&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;BackupPC is a high-performance, enterprise-grade system for backing up Linux, WinXX, and MacOS PCs and laptops to a server&#39;s disk. BackupPC is highly configurable and easy to install and maintain.&lt;/p&gt; &#xA;&lt;p&gt;Given the ever decreasing cost of disks and raid systems, it is now practical and cost effective to backup a large number of machines onto a server&#39;s local disk or network storage. This is what BackupPC does. For some sites, this might be the complete backup solution. For other sites, additional permanent archives could be created by periodically backing up the server to tape. A variety of Open Source systems are available for doing backup to tape.&lt;/p&gt; &#xA;&lt;p&gt;BackupPC is written in Perl and extracts backup data via SMB (using Samba), rsync, or tar over ssh/rsh/nfs. It is robust, reliable, well documented and freely available as Open Source on &lt;a href=&#34;https://github.com/backuppc/backuppc/&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;A clever pooling scheme minimizes disk storage and disk IO. Identical files across multiple backups of the same or different PCs are stored only once resulting in substantial savings in disk storage.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;One example of disk use: 95 laptops with each full backup averaging 3.6GB each, and each incremental averaging about 0.3GB. Storing three weekly full backups and six incremental backups per laptop is around 1200GB of raw data, but because of pooling and compression only 150GB is needed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;No client-side software is needed. The standard smb protocol is used to extract backup data on WinXX clients. On *nix clients, either rsync or tar over ssh/rsh/nfs is used to backup the data. Various alternatives are possible: rsync can also be used with WinXX by running rsyncd/cygwin. Similarly, smb could be used to backup *nix file systems if they are exported as smb shares.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A powerful http/cgi user interface allows administrators to view log files, configuration, current status and allows users to initiate and cancel backups and browse and restore files from backups.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Flexible restore options. Single files can be downloaded from any backup directly from the CGI interface. Zip or Tar archives for selected files or directories from any backup can also be downloaded from the CGI interface. Finally, direct restore to the client machine (using SMB, rsync or tar) for selected files or directories is also supported from the CGI interface.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Supports mobile environments where laptops are only intermittently connected to the network and have dynamic IP addresses (DHCP).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Flexible configuration parameters allow multiple backups to be performed in parallel, specification of which shares to backup, which directories to backup or not backup, various schedules for full and incremental backups, schedules for email reminders to users and so on. Configuration parameters can be set system-wide or also on a per-PC basis.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Users are sent periodic email reminders if their PC has not recently been backed up. Email content, timing and policies are configurable.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Tested on Linux and Solaris hosts, and Linux, Win95, Win98, Win2000 and WinXP clients.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Detailed documentation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open Source hosted by GitHub and freely available under GPL.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Packaging Help Needed&lt;/h2&gt; &#xA;&lt;p&gt;BackupPC 4.x doesn&#39;t have packages available for all the main linux distros. If you are willing to create and support packaging BackupPC 4.x for your favorite linux distro, please step up and help! Feel free to create a git issue indicating your interest.&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;p&gt;Complete documentation is available in this release in doc/BackupPC.pod or doc/BackupPC.html. You can read doc/BackupPC.pod with perldoc and doc/BackupPC.html with any browser. You can also see the documentation and general information at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://backuppc.github.io/backuppc&#34;&gt;backuppc.github.io/backuppc&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The source code is available on Github at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/backuppc&#34;&gt;github.com/backuppc&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;and releases are available on github:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/backuppc/backuppc/releases&#34;&gt;github.com/backuppc/backuppc/releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/backuppc/backuppc-xs/releases&#34;&gt;github.com/backuppc/backuppc-xs/releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/backuppc/rsync-bpc/releases&#34;&gt;github.com/backuppc/rsync-bpc/releases&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;or SourceForge:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sourceforge.net/projects/backuppc/files&#34;&gt;sourceforge.net/projects/backuppc/files&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You are encouraged to subscribe to any of the mail lists available on sourceforge.net:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://lists.sourceforge.net/lists/listinfo/backuppc-announce&#34;&gt;lists.sourceforge.net/lists/listinfo/backuppc-announce&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://lists.sourceforge.net/lists/listinfo/backuppc-users&#34;&gt;lists.sourceforge.net/lists/listinfo/backuppc-users&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://lists.sourceforge.net/lists/listinfo/backuppc-devel&#34;&gt;lists.sourceforge.net/lists/listinfo/backuppc-devel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The backuppc-announce list is moderated and is used only for important announcements (eg: new versions). It is low traffic. You only need to subscribe to one of users and announce: backuppc-users also receives any messages on backuppc-announce.&lt;/p&gt; &#xA;&lt;p&gt;The backuppc-devel list is only for developers who are working on BackupPC. Do not post questions or support requests there. But detailed technical discussions should happen on this list.&lt;/p&gt; &#xA;&lt;p&gt;To post a message to the backuppc-users list, send an email to&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:backuppc-users@lists.sourceforge.net&#34;&gt;backuppc-users@lists.sourceforge.net&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Do not send subscription requests to this address!&lt;/p&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (C) 2001-2020 Craig Barratt. All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License.&lt;/p&gt; &#xA;&lt;p&gt;See the LICENSE file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Zimbra/zm-build</title>
    <updated>2022-11-20T01:45:38Z</updated>
    <id>tag:github.com,2022-11-20:/Zimbra/zm-build</id>
    <link href="https://github.com/Zimbra/zm-build" rel="alternate"></link>
    <summary type="html">&lt;p&gt;zm-build for Zimbra Collaboration Suite, FOSS Edition&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;zm-build&lt;/h1&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains the build script and supporting files required to create a &lt;a href=&#34;https://en.wikipedia.org/wiki/Free_and_open-source_software&#34;&gt;FOSS&lt;/a&gt; build of the &lt;a href=&#34;https://www.zimbra.com/&#34;&gt;Zimbra Collaboration Suite&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;build.pl&lt;/code&gt; - Invoke this script to produce a build. See the &lt;em&gt;Building&lt;/em&gt; section below for an example.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;instructions/&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;FOSS_remote_list.pl&lt;/code&gt; - Maps between remote label and URL&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;FOSS_repo_list.pl&lt;/code&gt; - Specifies which branches (or tags) are checked out to build each component repository.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;FOSS_staging_list.pl&lt;/code&gt; - defines the staging order and details.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup with Zimbra Development Images (used for building)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Set up docker on your box&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can then pull and run using development images (built from Zimbra/zm-base-os.git)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In case you need to customize the images for your purposes, you could maintain your own Dockerfile such as this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  $ cat Dockerfile&#xA;  FROM zimbra/zm-base-os:devcore-ubuntu-16.04&#xA;  RUN sudo apt-get install emacs my-special-tool etc..&#xA;  RUN ...&#xA;&#xA;  $ docker build -t myuser/my-devcore-ubuntu-16 .&#xA;  $ docker run -it myuser/my-devcore-ubuntu-16 bash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Ubuntu 16.04&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it zimbra/zm-base-os:devcore-ubuntu-16.04 bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ubuntu 14.04&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it zimbra/zm-base-os:devcore-ubuntu-14.04 bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ubuntu 12.04&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it zimbra/zm-base-os:devcore-ubuntu-12.04 bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CentOS 7&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it zimbra/zm-base-os:devcore-centos-7 bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CentOS 6&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it zimbra/zm-base-os:devcore-centos-6 bash&#xA;&#xA;# some tools are installed inside /home/build/.zm-dev-tools/, zm-build automatically sources this path.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setup (traditional)&lt;/h2&gt; &#xA;&lt;h3&gt;Ubuntu 16.04&lt;/h3&gt; &#xA;&lt;p&gt;The following steps assume that your are starting with a clean VM and are logged in as a non-root user with &lt;code&gt;sudo&lt;/code&gt; privileges.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get update&#xA;sudo apt-get install software-properties-common openjdk-8-jdk ant ant-optional ant-contrib ruby git maven build-essential debhelper&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ubuntu 14.04&lt;/h3&gt; &#xA;&lt;p&gt;The following steps assume that your are starting with a clean VM and are logged in as a non-root user with &lt;code&gt;sudo&lt;/code&gt; privileges.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install software-properties-common &#xA;sudo add-apt-repository ppa:openjdk-r/ppa&#xA;sudo apt-get update&#xA;sudo update-ca-certificates -f&#xA;sudo apt-get install openjdk-8-jdk ant ant-optional ant-contrib ruby git maven build-essential&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ubuntu 12.04&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install python-software-properties software-properties-common&#xA;sudo add-apt-repository ppa:openjdk-r/ppa&#xA;sudo apt-get update&#xA;sudo update-ca-certificates -f&#xA;sudo apt-get install openjdk-8-jdk ant ant-optional ant-contrib ruby git maven build-essential zlib1g-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CentOS 7&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo yum groupinstall &#39;Development Tools&#39;&#xA;sudo yum install java-1.8.0-openjdk ant ant-junit ruby git maven cpan wget perl-IPC-Cmd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CentOS 6&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo yum groupinstall &#39;Development Tools&#39;&#xA;sudo yum remove java-1.7.0-openjdk java-1.6.0-openjdk ant&#xA;sudo yum install java-1.8.0-openjdk java-1.8.0-openjdk-devel ruby git cpan wget&#xA;# install specific perl modules&#xA;sudo cpan IPC::Cmd&#xA;cd /tmp&#xA;# install maven&#xA;wget http://mirror.metrocast.net/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz&#xA;sudo tar -xf apache-maven-3.3.9-bin.tar.gz&#xA;sudo mv apache-maven-3.3.9 /opt&#xA;echo &#39;export PATH=&#34;/opt/apache-maven-3.3.9/bin:$PATH&#34;&#39; | sudo tee -a /etc/profile.d/maven.sh&#xA;# install current version of ant&#xA;wget https://www.apache.org/dist/ant/binaries/apache-ant-1.9.9-bin.zip&#xA;sudo unzip apache-ant-1.9.9-bin.zip&#xA;sudo mv apache-ant-1.9.9 /opt&#xA;echo &#39;export PATH=&#34;/opt/apache-ant-1.9.9/bin:$PATH&#34;&#39; | sudo tee -a /etc/profile.d/ant.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Create a directory for your build and check-out the &lt;code&gt;zm-build&lt;/code&gt; repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir installer-build&#xA;cd installer-build&#xA;git clone https://github.com/Zimbra/zm-build.git&#xA;cd zm-build&#xA;git checkout origin/develop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build a specific patch example 9.0.0.p25 run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir installer-build&#xA;cd installer-build&#xA;git clone --depth 1 --branch 9.0.0.p25 git@github.com:Zimbra/zm-build.git&#xA;cd zm-build&#xA;ENV_CACHE_CLEAR_FLAG=true ./build.pl --ant-options -DskipTests=true --git-default-tag=9.0.0.p25,9.0.0.p24.1,9.0.0.p24,9.0.0.p23,9.0.0.p22,9.0.0.p21,9.0.0.p20,9.0.0.p19,9.0.0.p18,9.0.0.p17,9.0.0.p16,9.0.0.p15,9.0.0.p14,9.0.0.p13,9.0.0.p12,9.0.0.p11,9.0.0.p10,9.0.0.p9,9.0.0.p8,9.0.0.p7,9.0.0.p6.1,9.0.0.p6,9.0.0.p5,9.0.0.p4,9.0.0.p3,9.0.0.p2,9.0.0.p1,9.0.0 --build-release-no=9.0.0 --build-type=FOSS --build-release=NIKOLATESLA --build-release-candidate=GA --build-thirdparty-server=files.zimbra.com --build-no=3969 --no-interactive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;build.pl&lt;/code&gt; command is used to build the product. Run it with the &lt;code&gt;-h&lt;/code&gt; option for help:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: ./build.pl &amp;lt;options&amp;gt;&#xA;Supported options:&#xA;   --build-no=i&#xA;   --build-ts=i&#xA;   --build-artifacts-base-dir=s&#xA;   --build-sources-base-dir=s&#xA;   --build-release=s&#xA;   --build-release-no=s&#xA;   --build-release-candidate=s&#xA;   --build-type=s&#xA;   --build-thirdparty-server=s&#xA;   --build-prod-flag!&#xA;   --build-debug-flag!&#xA;   --build-dev-tool-base-dir=s&#xA;   --interactive!&#xA;   --git-overrides=s%&#xA;   --git-default-tag=s&#xA;   --git-default-remote=s&#xA;   --git-default-branch=s&#xA;   --stop-after-checkout!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You &lt;em&gt;can&lt;/em&gt; specify all the options on the command-line, as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./build.pl --build-no=1713 --build-ts=`date +&#39;%Y%m%d%H%M%S&#39;` \&#xA;  --build-release=JUDASPRIEST --build-release-no=8.7.6 \&#xA;  --build-release-candidate=GA --build-type=FOSS \&#xA;  --build-thirdparty-server=files.zimbra.com --no-interactive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The completed build will be archived into a &lt;code&gt;*.tgz&lt;/code&gt; file that is stored in the appropriate platform and release-specific subdirectory of the &lt;code&gt;BUILDS&lt;/code&gt; directory. The above command, run on an Ubuntu 16.04 machine, created the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$HOME/installer_build/BUILDS/UBUNTU16_64/JUDASPRIEST-876/20170322153033_FOSS/zm-build/zcs-8.7.6_1713.UBUNTU16_64.20170322153033.tgz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also specify any or all of the required options by placing them in a file called &lt;code&gt;config.build&lt;/code&gt;. This file should be at the top level of the &lt;code&gt;zm-build&lt;/code&gt; directory. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;BUILD_NO                    = 1713&#xA;BUILD_RELEASE               = JUDASPRIEST&#xA;BUILD_RELEASE_NO            = 8.7.6&#xA;BUILD_RELEASE_CANDIDATE     = GA&#xA;BUILD_TYPE                  = FOSS&#xA;BUILD_THIRDPARTY_SERVER     = files.zimbra.com&#xA;INTERACTIVE                 = 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then just run &lt;code&gt;./build.pl&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The above command, run on a CentOS 7 machine with the options as shown in &lt;code&gt;config.build&lt;/code&gt;, created the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$HOME/installer-build/BUILDS/RHEL7_64/JUDASPRIEST-876/20170323061131_FOSS/zm-build/zcs-8.7.6_GA_1713.RHEL7_64.20170323061131.tgz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;The following is a walk-through of the basic steps required to do ZCS development. The first step is to simply install a current FOSS build on the machine that you wish to use. The instructions that follow assume that this has been done.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create &lt;code&gt;/home/zimbra&lt;/code&gt; and make &lt;code&gt;zimbra&lt;/code&gt; the owner.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; sudo mkdir /home/zimbra&#xA; sudo chown zimbra:zimbra /home/zimbra&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;ant&lt;/code&gt;, and &lt;code&gt;ant-contrib&lt;/code&gt; by whichever method is appropriate for your distro:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; sudo apt-get install git ant ant-contrib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or&lt;/p&gt; &lt;pre&gt;&lt;code&gt; sudo yum install git ant ant-contrib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure &lt;code&gt;/opt/zimbra/.ssh/config&lt;/code&gt; to use your ssh key for the git remotes that you need to access.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Perform the following edits on &lt;code&gt;/opt/zimbra/.bash_profile&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Comment-out &lt;code&gt;export LANG=C&lt;/code&gt; and &lt;code&gt;export LC_ALL=C&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Add export &lt;code&gt;LANG=en_US.UTF-8&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Add export &lt;code&gt;ANT_OPTS=-Ddev.home=/home/zimbra&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Change permissions on files and folders that you will be updating; e.g.,&lt;/p&gt; &lt;pre&gt;&lt;code&gt; sudo chmod -R o+w /opt/zimbra/lib/&#xA; sudo chmod -R o+w /opt/zimbra/jetty/&#xA; sudo chown zimbra:zimbra /opt/zimbra&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you run &lt;code&gt;zmfixperms&lt;/code&gt;, some of these permissions will be overwritten.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add file &lt;code&gt;/opt/zimbra/.gitconfig&lt;/code&gt; and update as needed. At a minimum:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; [user]&#xA; &#x9;email = YOUR-EMAIL-ADDRESS&#xA; &#x9;name = YOUR-FIRST-AND-LAST-NAME&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;As the &lt;code&gt;zimbra&lt;/code&gt; user, create a base directory under &lt;code&gt;/home/zimbra&lt;/code&gt; from which to work.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; cd /home/zimbra&#xA; mkdir zcs&#xA; cd zcs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now you can clone any repositories that you require and get to work.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Email Delivery&lt;/h2&gt; &#xA;&lt;p&gt;If you want email delivery to work, set up a DNS server on your host machine or another VM and configure &lt;code&gt;zimbraDNSMasterIP&lt;/code&gt; to point to it. To configure &lt;code&gt;zimbraDNSMasterIP&lt;/code&gt;, do the following as the &lt;code&gt;zimbra&lt;/code&gt; user:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;zmprov ms `zmhostname` zimbraDNSMasterIP DNS-SERVER-IP-ADDRESS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may receive the following error when trying to send email:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;No SMTP hosts available for domain&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If this occurs, you need to manually configure &lt;code&gt;zimbraSmtpHostname&lt;/code&gt; for your domain(s). To configure &lt;code&gt;zimbraSmtpHostname&lt;/code&gt;, do the following as the &lt;code&gt;zimbra&lt;/code&gt; user:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;zmprov md DOMAIN-NAME zimbraSmtpHostname `zmhostname`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;zm-mailbox example&lt;/h2&gt; &#xA;&lt;p&gt;As the &lt;code&gt;zimbra&lt;/code&gt; user, &lt;code&gt;cd /home/zimbra/zcs&lt;/code&gt;. Then clone the &lt;code&gt;zm-mailbox&lt;/code&gt; repository from github&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:Zimbra/zm-mailbox.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following sub-directories &lt;code&gt;zm-mailbox&lt;/code&gt; build and deploy separately:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;client&#xA;common&#xA;milter-conf&#xA;native&#xA;soap&#xA;store&#xA;store-conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The top-level &lt;code&gt;build.xml&lt;/code&gt; is used by the &lt;code&gt;zm-build&lt;/code&gt; scripts to create an installer package. You will not use that for normal development. There are build-order dependencies between the above-listed deployment targets. These can be determined by inspection of the &lt;code&gt;ivy.xml&lt;/code&gt; files within each subdirectory.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;grep &#39;org=&#34;zimbra&#34;&#39; store/ivy.xml&#xA;&#xA;&amp;lt;dependency org=&#34;zimbra&#34; name=&#34;zm-common&#34; rev=&#34;latest.integration&#34;/&amp;gt;&#xA;&amp;lt;dependency org=&#34;zimbra&#34; name=&#34;zm-soap&#34; rev=&#34;latest.integration&#34;/&amp;gt;&#xA;&amp;lt;dependency org=&#34;zimbra&#34; name=&#34;zm-client&#34; rev=&#34;latest.integration&#34;/&amp;gt;&#xA;&amp;lt;dependency org=&#34;zimbra&#34; name=&#34;zm-native&#34; rev=&#34;latest.integration&#34;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here you can see that the deployment target, &lt;code&gt;zm-store&lt;/code&gt; (the &lt;code&gt;store&lt;/code&gt; subdirectory), depends upon &lt;code&gt;common&lt;/code&gt;, &lt;code&gt;soap&lt;/code&gt;, &lt;code&gt;client&lt;/code&gt;, and &lt;code&gt;native&lt;/code&gt;. Here is the current ordering dependencies among all of the &lt;code&gt;zm-mailbox&lt;/code&gt; deployment targets. The higher-numbered deployment targets depend upon the lower-numbered ones. Note that &lt;code&gt;milter-conf&lt;/code&gt; and &lt;code&gt;store-conf&lt;/code&gt; have no cross-dependencies.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;native&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;common&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;soap&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;client&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;store&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;So, from the &lt;code&gt;native&lt;/code&gt; sub-directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ant -Dzimbra.buildinfo.version=8.7.6_GA clean compile publish-local deploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Comments:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The requirement to include &lt;code&gt;-Dzimbra.buildinfo.version=8.7.6_GA&lt;/code&gt; to ant is due to a change that was made when the FOSS code was moved to GitHub. You can also just add that option to your &lt;code&gt;ANT_OPTS&lt;/code&gt; enviroment variable that you defined in &lt;code&gt;$HOME/.bash_profile&lt;/code&gt; as follows:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;export ANT_OPTS=&#34;-Ddev.home=/home/zimbra -Dzimbra.buildinfo.version=8.7.6_GA&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you do that, then you can omit that &lt;code&gt;-D...&lt;/code&gt; argument to the &lt;code&gt;ant&lt;/code&gt; command and future examples will reflect that.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;publish-local&lt;/code&gt; target adds the artifact to &lt;code&gt;/home/zimbra/.zcs-deps&lt;/code&gt;, which is included in the Ivy resolution path.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;deploy&lt;/code&gt; target installs the artifact to its run-time location and restarts the appropriate service(s). This will allow you to test your changes.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then, from the &lt;code&gt;common&lt;/code&gt;, &lt;code&gt;soap&lt;/code&gt;, &lt;code&gt;client&lt;/code&gt;, and &lt;code&gt;store&lt;/code&gt; sub-directories (in that order):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ant clean compile publish-local deploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Adding a new LDAP Attribute&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARNING:It is absolutely imperative to avoid duplicate IDs for attributes. Unfortunately, that currently isn&#39;t a trivial thing to do. Need to check Zimbra 8 and Zimbra X along with all development branches. If customers get different setups using different IDs, this makes future upgrade scenarios a complete nightmare&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Start by cloning &lt;em&gt;both&lt;/em&gt; the &lt;code&gt;zm-ldap-utilites&lt;/code&gt; and the &lt;code&gt;zm-mailbox&lt;/code&gt; repositories from GitHub. Check out the appropriate branch of each. Then proceed as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Add your new attribute to &lt;code&gt;zm-mailbox/store/conf/attrs/zimbra-attrs.xml&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;From &lt;code&gt;zm-common/store&lt;/code&gt; invoke the following command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  ant generate-getters&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Do the following as &lt;code&gt;root&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  chmod -R o+w /opt/zimbra/common/etc/openldap/schema&#xA;  chmod o+w /opt/zimbra/conf/zimbra.ldif&#xA;  chmod +w /opt/zimbra/conf/attrs/zimbra-attrs.xml&#xA;  chmod -R o+w /opt/zimbra/common/etc/openldap/zimbra&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Back as the &lt;code&gt;zimbra&lt;/code&gt; user, invoke the following command from &lt;code&gt;zm-mailbox/common&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  ant deploy publish-local&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Then from the &lt;code&gt;zm-mailbox/store&lt;/code&gt; directory:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  ant deploy update-ldap-schema&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Your ZCS development server should now be running with the new attribute(s). You can test that by querying them and modifying them with &lt;code&gt;zmprov&lt;/code&gt;. You can &lt;code&gt;git add ...&lt;/code&gt; and &lt;code&gt;git commit&lt;/code&gt; your changes now.&lt;/p&gt;</summary>
  </entry>
</feed>