<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-06T01:48:24Z</updated>
  <subtitle>Weekly Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cvillalonga/CC-22-23</title>
    <updated>2022-11-06T01:48:24Z</updated>
    <id>tag:github.com,2022-11-06:/cvillalonga/CC-22-23</id>
    <link href="https://github.com/cvillalonga/CC-22-23" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cloud Computing: Fundamentos e Infraestructuras, Máster Universitario en Ingeniería Informática, ETSIIT, Universidad de Granada&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cloud Computing: Fundamentos e Infraestructuras - Prácticas&lt;/h1&gt; &#xA;&lt;p&gt;Este es el repositorio de prácticas de la asignatura de Cloud Computing: Fundamentos e Infraestructuras.&lt;/p&gt; &#xA;&lt;h2&gt;Proyecto (Prácticas de Laboratorio)&lt;/h2&gt; &#xA;&lt;p&gt;Las actividades prácticas de la asignatura se basan en una metodología docente de aprendizaje basado en proyectos. Se trata de llevar a cabo un proyecto de libre elección por parte del alumnado para poner en práctica los conocimientos adquiridos en la parte teórica de la asignatura.&lt;/p&gt; &#xA;&lt;p&gt;El proyecto se realiza siguiendo una serie de hitos establecidos por el profesorado y que permiten guiar el desarrollo del mismo.&lt;/p&gt; &#xA;&lt;p&gt;Las clases prácticas se desarrollan con un equipo informático donde el alumnado realiza su proyecto de forma autónoma y se dedican a resolver dudas bajo demanda.&lt;/p&gt; &#xA;&lt;p&gt;Para cada uno de los hitos se entregará el código y la documentación describiendo los avances del proyecto y las posibles cuestiones planteadas por el profesorado. Asimismo, al final del curso el alumnado realizará una exposición oral del proyecto realizado. Se evaluará la calidad y adecuación del código y la documentación, la originalidad de las herramientas usadas en el proyecto, y la calidad de la exposición del proyecto.&lt;/p&gt; &#xA;&lt;h2&gt;Hitos&lt;/h2&gt; &#xA;&lt;p&gt;Los hitos para la realización del proyecto son los siguientes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://jj.github.io/CC/documentos/proyecto/0.Repositorio&#34;&gt;Hito 0: Descripción del problema a resolver usando correctamente git y GitHub&lt;/a&gt;. Fecha límite de entrega: 2 de noviembre de 2022.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jj.github.io/CC/documentos/proyecto/1.Infraestructura&#34;&gt;Hito 1: Concretando y planificando el proyecto&lt;/a&gt;. Fecha límite de entrega: 9 de noviembre de 2022.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jj.github.io/CC/documentos/proyecto/2.Tests&#34;&gt;Hito 2: Tests&lt;/a&gt;. Fecha límite de entrega: 23 de noviembre de 2022.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jj.github.io/CC/documentos/proyecto/3.Docker&#34;&gt;Hito 3: Creación de un contenedor para pruebas&lt;/a&gt;. Fecha límite de entrega: 7 de diciembre de 2022.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jj.github.io/CC/documentos/proyecto/4.CI&#34;&gt;Hito 4: Integración continua&lt;/a&gt;. Fecha límite de entrega: 21 de diciembre de 2022.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jj.github.io/CC/documentos/proyecto/5.Microservicio&#34;&gt;Hito 5: Diseño y test de un microservicio&lt;/a&gt;. Fecha límite de entrega: 18 de enero de 2023.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jj.github.io/CC/documentos/proyecto/6.Compose&#34;&gt;Hito 6: Composición de servicios&lt;/a&gt;. Fecha límite de entrega: 25 de enero de 2023.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Se entregan los &lt;a href=&#34;https://raw.githubusercontent.com/cvillalonga/CC-22-23/master/proyectos/README.md&#34;&gt;hitos del proyecto actualizando los ficheros de hitos y haciendo un pull request&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Enlaces al material de prácticas&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cvillalonga/CC-22-23/master/sesiones/README.md&#34;&gt;Programación y objetivos de las diferentes sesiones de prácticas&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Puedes consultar &lt;a href=&#34;http://jj.github.io/CC&#34;&gt;los apuntes de la asignatura de cursos anteriores&lt;/a&gt; para ayudarte en la realización del proyecto de práticas.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>brentgwalker/spider.io-Top-Websites-Test</title>
    <updated>2022-11-06T01:48:24Z</updated>
    <id>tag:github.com,2022-11-06:/brentgwalker/spider.io-Top-Websites-Test</id>
    <link href="https://github.com/brentgwalker/spider.io-Top-Websites-Test" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A script to determine potentially nefarious sites linked to in top 100,000 sites.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This project is a response to Problem 1 from the spider.io test questions.&lt;/p&gt; &#xA;&lt;p&gt;The project consists of two pieces: the main perl script (&#34;test1.pl&#34;), together with an associated module, containing various subroutines (&#34;Test1.pm&#34;).&lt;/p&gt; &#xA;&lt;p&gt;The script downloads the daily list of the top 1,000,000 websites generated by Alexa.com from the link: &lt;a href=&#34;http://s3.amazonaws.com/alexa-static/top-1m.csv.zip&#34;&gt;http://s3.amazonaws.com/alexa-static/top-1m.csv.zip&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;It uncompresses this, and extracts the top 100,000 sites.&lt;/p&gt; &#xA;&lt;p&gt;It then uses the database of &#34;bugs&#34; maintained by the developers of the Ghostery plugin (&lt;a href=&#34;http://www.ghostery.com&#34;&gt;www.ghostery.com&lt;/a&gt;). This database is available at: &lt;a href=&#34;http://www.ghostery.com/update/all?format=json&#34;&gt;http://www.ghostery.com/update/all?format=json&lt;/a&gt;. This file is downloaded to &#34;bugs.js&#34; in the local directory.&lt;/p&gt; &#xA;&lt;p&gt;The bugs file is parsed for the list of bugs currently known to Ghostery. For each bug, Ghostery has an information page located at a link of the form: &lt;a href=&#34;http://www.ghostery.com/apps/Bug_Name&#34;&gt;http://www.ghostery.com/apps/Bug_Name&lt;/a&gt;. These data files contain a listing of example websites on which the bug has been found. The script goes through the list of bugs from the Ghostery database, and for each downloads the Ghostery information page. It then parses the downloaded information page to extract the list of example sites for each bug. For each bug, the examples listed by Ghostery are then cross-referenced with the list of top 100,000 sites. The bugs which have an example appearing in the top sites list are then printed.&lt;/p&gt; &#xA;&lt;p&gt;The outputs of the code are two files: &#34;top100000.txt&#34;, which simply contains a list of the top 100,000 sites extracted from the Alexa csv file; and &#34;bugs_in_top_100000_websites.txt&#34;, which is a list of the bugs about which Ghostery knows that appear on the top 100,000 sites.&lt;/p&gt; &#xA;&lt;p&gt;The script will not overwrite existing copies of the top 1 million sites &#34;top-1m.csv.zip&#34;, the Ghostery bugs database (&#34;bug.js&#34;), or any of the downloaded bug webpages (&#34;Bug_Name.html&#34;). All these files are left behind after running the script.&lt;/p&gt; &#xA;&lt;p&gt;Brent Walker, Feb. 2012.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dbolser/GCal-Upcoming</title>
    <updated>2022-11-06T01:48:24Z</updated>
    <id>tag:github.com,2022-11-06:/dbolser/GCal-Upcoming</id>
    <link href="https://github.com/dbolser/GCal-Upcoming" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The aim is to email myself a list of all events in my calendar(s), along with &#39;days until...&#39;, to help me plan for upcoming events better.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;BROKEN AND CAN&#39;T BE FIXED!&lt;/p&gt; &#xA;&lt;p&gt;Minimally working version&lt;/p&gt; &#xA;&lt;p&gt;For installing deps, see: &lt;a href=&#34;http://goo.gl/iiYns&#34;&gt;http://goo.gl/iiYns&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more info, see: &lt;a href=&#34;http://goo.gl/BZQw8&#34;&gt;http://goo.gl/BZQw8&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;TODO:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Handle all day vs. specifc appointments better (calculation of &#39;days until&#39; needs to take the difference into account). Trivial to do, I just ain&#39;t done it yet.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Handle multi-day events better (currently there is no end date given, and the &#39;days until&#39; goes negative during the event). Again, should be easy.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Allow calendar information to be put in a config file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support multiple calendars properly.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>