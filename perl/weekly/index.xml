<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-10T02:18:46Z</updated>
  <subtitle>Weekly Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Unity-Technologies/MonoDevelop.UnityMode-Build</title>
    <updated>2022-07-10T02:18:46Z</updated>
    <id>tag:github.com,2022-07-10:/Unity-Technologies/MonoDevelop.UnityMode-Build</id>
    <link href="https://github.com/Unity-Technologies/MonoDevelop.UnityMode-Build" rel="alternate"></link>
    <summary type="html">&lt;p&gt;build script and dependencies for building a unitymode-monodevelop&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>awakecoding/FreeRDP-Manuals</title>
    <updated>2022-07-10T02:18:46Z</updated>
    <id>tag:github.com,2022-07-10:/awakecoding/FreeRDP-Manuals</id>
    <link href="https://github.com/awakecoding/FreeRDP-Manuals" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FreeRDP Manuals&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>adrienverge/openfortivpn</title>
    <updated>2022-07-10T02:18:46Z</updated>
    <id>tag:github.com,2022-07-10:/adrienverge/openfortivpn</id>
    <link href="https://github.com/adrienverge/openfortivpn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Client for PPP+SSL VPN tunnel services&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;openfortivpn&lt;/h1&gt; &#xA;&lt;p&gt;openfortivpn is a client for PPP+SSL VPN tunnel services. It spawns a pppd process and operates the communication between the gateway and this process.&lt;/p&gt; &#xA;&lt;p&gt;It is compatible with Fortinet VPNs.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;man openfortivpn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Simply connect to a VPN:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;openfortivpn vpn-gateway:8443 --username=foo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Connect to a VPN using an authentication realm:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;openfortivpn vpn-gateway:8443 --username=foo --realm=bar&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Store password securely with a pinentry program:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;openfortivpn vpn-gateway:8443 --username=foo --pinentry=pinentry-mac&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Connect with a user certificate and no password:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;openfortivpn vpn-gateway:8443 --username= --password= --user-cert=cert.pem --user-key=key.pem&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Don&#39;t set IP routes and don&#39;t add VPN nameservers to &lt;code&gt;/etc/resolv.conf&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;openfortivpn vpn-gateway:8443 -u foo --no-routes --no-dns --pppd-no-peerdns&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Using a configuration file:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;openfortivpn -c /etc/openfortivpn/my-config&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;With &lt;code&gt;/etc/openfortivpn/my-config&lt;/code&gt; containing:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;host = vpn-gateway&#xA;port = 8443&#xA;username = foo&#xA;set-dns = 0&#xA;pppd-use-peerdns = 0&#xA;# X509 certificate sha256 sum, trust only this one!&#xA;trusted-cert = e46d4aff08ba6914e64daa85bc6112a422fa7ce16631bff0b592a28556f993db&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For the full list of config options, see the &lt;code&gt;CONFIGURATION&lt;/code&gt; section of&lt;/p&gt; &lt;pre&gt;&lt;code&gt;man openfortivpn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Smartcard&lt;/h2&gt; &#xA;&lt;p&gt;Smartcard support needs &lt;code&gt;openssl pkcs engine&lt;/code&gt; and &lt;code&gt;opensc&lt;/code&gt; to be installed. The pkcs11-engine from libp11 needs to be compiled with p11-kit-devel installed. Check &lt;a href=&#34;https://github.com/adrienverge/openfortivpn/issues/464&#34;&gt;#464&lt;/a&gt; for a discussion of known issues in this area.&lt;/p&gt; &#xA;&lt;p&gt;To make use of your smartcard put at least &lt;code&gt;pkcs11:&lt;/code&gt; to the user-cert config or commandline option. It takes the full or a partial PKCS#11 token URI.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;user-cert = pkcs11:&#xA;user-cert = pkcs11:token=someuser&#xA;user-cert = pkcs11:model=PKCS%2315%20emulated;manufacturer=piv_II;serial=012345678;token=someuser&#xA;username =&#xA;password =&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In most cases &lt;code&gt;user-cert = pkcs11:&lt;/code&gt; will do it, but if needed you can get the token-URI with &lt;code&gt;p11tool --list-token-urls&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Multiple readers are currently not supported.&lt;/p&gt; &#xA;&lt;p&gt;Smartcard support has been tested with Yubikey under Linux, but other PIV enabled smartcards may work too. On Mac OS X Mojave it is known that the pkcs engine-by-id is not found.&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;h3&gt;Installing existing packages&lt;/h3&gt; &#xA;&lt;p&gt;Some Linux distributions provide &lt;code&gt;openfortivpn&lt;/code&gt; packages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apps.fedoraproject.org/packages/openfortivpn&#34;&gt;Fedora / CentOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://software.opensuse.org/package/openfortivpn&#34;&gt;openSUSE / SLE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://packages.gentoo.org/packages/net-vpn/openfortivpn&#34;&gt;Gentoo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/NixOS/nixpkgs/tree/master/pkgs/tools/networking/openfortivpn&#34;&gt;NixOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.archlinux.org/packages/community/x86_64/openfortivpn&#34;&gt;Arch Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://packages.debian.org/stable/openfortivpn&#34;&gt;Debian&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://packages.ubuntu.com/search?keywords=openfortivpn&#34;&gt;Ubuntu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.getsol.us/source/openfortivpn/&#34;&gt;Solus&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On macOS both &lt;a href=&#34;https://formulae.brew.sh/formula/openfortivpn&#34;&gt;Homebrew&lt;/a&gt; and &lt;a href=&#34;https://ports.macports.org/port/openfortivpn&#34;&gt;MacPorts&lt;/a&gt; provide an &lt;code&gt;openfortivpn&lt;/code&gt; package. Either &lt;a href=&#34;https://brew.sh/&#34;&gt;install Homebrew&lt;/a&gt; then install openfortivpn:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Install &#39;Homebrew&#39;&#xA;/usr/bin/ruby -e &#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&#34;&#xA;&#xA;# Install &#39;openfortivpn&#39;&#xA;brew install openfortivpn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or &lt;a href=&#34;https://www.macports.org/install.php&#34;&gt;install MacPorts&lt;/a&gt; then install openfortivpn:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Install &#39;openfortivpn&#39;&#xA;sudo port install openfortivpn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A more complete overview can be obtained from &lt;a href=&#34;https://repology.org/project/openfortivpn/versions&#34;&gt;repology&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Building and installing from source&lt;/h3&gt; &#xA;&lt;p&gt;For other distros, you&#39;ll need to build and install from source:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install build dependencies.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;RHEL/CentOS/Fedora: &lt;code&gt;gcc&lt;/code&gt; &lt;code&gt;automake&lt;/code&gt; &lt;code&gt;autoconf&lt;/code&gt; &lt;code&gt;openssl-devel&lt;/code&gt; &lt;code&gt;make&lt;/code&gt; &lt;code&gt;pkg-config&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Debian/Ubuntu: &lt;code&gt;gcc&lt;/code&gt; &lt;code&gt;automake&lt;/code&gt; &lt;code&gt;autoconf&lt;/code&gt; &lt;code&gt;libssl-dev&lt;/code&gt; &lt;code&gt;make&lt;/code&gt; &lt;code&gt;pkg-config&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Arch Linux: &lt;code&gt;gcc&lt;/code&gt; &lt;code&gt;automake&lt;/code&gt; &lt;code&gt;autoconf&lt;/code&gt; &lt;code&gt;openssl&lt;/code&gt; &lt;code&gt;pkg-config&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Gentoo Linux: &lt;code&gt;net-dialup/ppp&lt;/code&gt; &lt;code&gt;pkg-config&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;openSUSE: &lt;code&gt;gcc&lt;/code&gt; &lt;code&gt;automake&lt;/code&gt; &lt;code&gt;autoconf&lt;/code&gt; &lt;code&gt;libopenssl-devel&lt;/code&gt; &lt;code&gt;pkg-config&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;macOS (Homebrew): &lt;code&gt;automake&lt;/code&gt; &lt;code&gt;autoconf&lt;/code&gt; &lt;code&gt;openssl@1.1&lt;/code&gt; &lt;code&gt;pkg-config&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;FreeBSD: &lt;code&gt;automake&lt;/code&gt; &lt;code&gt;autoconf&lt;/code&gt; &lt;code&gt;libressl&lt;/code&gt; &lt;code&gt;pkgconf&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;On Linux, if you manage your kernel yourself, ensure to compile those modules:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;CONFIG_PPP=m&#xA;CONFIG_PPP_ASYNC=m&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;On macOS, install &#39;Homebrew&#39; to install the build dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Install &#39;Homebrew&#39;&#xA;/usr/bin/ruby -e &#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&#34;&#xA;&#xA;# Install Dependencies&#xA;brew install automake autoconf openssl@1.1 pkg-config&#xA;&#xA;# You may need to make this openssl available to compilers and pkg-config&#xA;export LDFLAGS=&#34;-L/usr/local/opt/openssl/lib $LDFLAGS&#34;&#xA;export CPPFLAGS=&#34;-I/usr/local/opt/openssl/include $CPPFLAGS&#34;&#xA;export PKG_CONFIG_PATH=&#34;/usr/local/opt/openssl/lib/pkgconfig:$PKG_CONFIG_PATH&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build and install.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./autogen.sh&#xA;./configure --prefix=/usr/local --sysconfdir=/etc&#xA;make&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you need to specify the openssl location you can set the &lt;code&gt;$PKG_CONFIG_PATH&lt;/code&gt; environment variable. For fine-tuning check the available configure arguments with &lt;code&gt;./configure --help&lt;/code&gt; especially when you are cross compiling.&lt;/p&gt; &lt;p&gt;Finally, install runtime dependency &lt;code&gt;ppp&lt;/code&gt; or &lt;code&gt;pppd&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Running as root?&lt;/h2&gt; &#xA;&lt;p&gt;openfortivpn needs elevated privileges at three steps during tunnel set up:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;when spawning a &lt;code&gt;/usr/sbin/pppd&lt;/code&gt; process;&lt;/li&gt; &#xA; &lt;li&gt;when setting IP routes through VPN (when the tunnel is up);&lt;/li&gt; &#xA; &lt;li&gt;when adding nameservers to &lt;code&gt;/etc/resolv.conf&lt;/code&gt; (when the tunnel is up).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For these reasons, you need to use &lt;code&gt;sudo openfortivpn&lt;/code&gt;. If you need it to be usable by non-sudoer users, you might consider adding an entry in &lt;code&gt;/etc/sudoers&lt;/code&gt; or a file under &lt;code&gt;/etc/sudoers.d&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example: &lt;code&gt;visudo -f /etc/sudoers.d/openfortivpn&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Cmnd_Alias  OPENFORTIVPN = /usr/bin/openfortivpn&#xA;&#xA;%adm       ALL = (ALL) OPENFORTIVPN&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Adapt the above example by changing the &lt;code&gt;openfortivpn&lt;/code&gt; path or choosing a group different from &lt;code&gt;adm&lt;/code&gt; - such as a dedicated &lt;code&gt;openfortivpn&lt;/code&gt; group.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: Make sure only trusted users can run openfortivpn as root! As described in &lt;a href=&#34;https://github.com/adrienverge/openfortivpn/issues/54&#34;&gt;#54&lt;/a&gt;, a malicious user could use &lt;code&gt;--pppd-plugin&lt;/code&gt; and &lt;code&gt;--pppd-log&lt;/code&gt; options to divert the program&#39;s behaviour.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to make pull requests!&lt;/p&gt; &#xA;&lt;p&gt;C coding style should follow the &lt;a href=&#34;http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/process/coding-style.rst?id=refs/heads/master&#34;&gt;Linux kernel Documentation/CodingStyle&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>