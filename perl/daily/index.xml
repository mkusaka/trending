<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-01T01:36:37Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ironcamel/Graph-Easy</title>
    <updated>2023-01-01T01:36:37Z</updated>
    <id>tag:github.com,2023-01-01:/ironcamel/Graph-Easy</id>
    <link href="https://github.com/ironcamel/Graph-Easy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Convert or render graphs (as ASCII, HTML, SVG or via Graphviz)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Graph-Easy&lt;/h1&gt; &#xA;&lt;p&gt;This module lets you create graphs (nodes/vertices connected by edges/arcs, not pie charts!) and then lay them out on a flat surface.&lt;/p&gt; &#xA;&lt;p&gt;Once laid out, the graph can be converted into various output formats like ASCII art, HTML or SVG. You can also output the graph in graphviz format and let dot/neato/circo etc. do the layout for you.&lt;/p&gt; &#xA;&lt;p&gt;Graphs can be either generated by Perl code, parsed from a simple text format that is human readable and maintainable, or parsed from Graphviz code.&lt;/p&gt; &#xA;&lt;p&gt;For instance this input:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[ Bonn ] -&amp;gt; [ Berlin ]&#xA;[ Berlin ] -&amp;gt; [ Frankfurt ] { border: 1px dotted black; }&#xA;[ Frankfurt ] -&amp;gt; [ Dresden ]&#xA;[ Berlin ] ..&amp;gt; [ Potsdam ]&#xA;[ Potsdam ] =&amp;gt; [ Cottbus ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;would be rendered in ASCII as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;+------+     +--------+      .............     +---------+&#xA;| Bonn | --&amp;gt; | Berlin |  --&amp;gt; : Frankfurt : --&amp;gt; | Dresden |&#xA;+------+     +--------+      .............     +---------+&#xA;               :&#xA;               :&#xA;               v&#xA;             +---------+     +---------+&#xA;             | Potsdam | ==&amp;gt; | Cottbus |&#xA;             +---------+     +---------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The HTML or SVG output would look similiar except be more pretty :o)&lt;/p&gt; &#xA;&lt;h1&gt;Manual&lt;/h1&gt; &#xA;&lt;p&gt;The manual is contained in the extra package Graph::Easy::Manual, which also contains a Pod2HTML converter, that can handle embedded graphs in POD files.&lt;/p&gt; &#xA;&lt;p&gt;You can also view the manual online at:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://bloodgate.com/perl/graph/manual/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Many more examples and documentation, especially on integrating this into a Mediawiki installation, can be found at:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://bloodgate.com/perl/graph/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Have fun!&lt;/p&gt; &#xA;&lt;h1&gt;SVG Output&lt;/h1&gt; &#xA;&lt;p&gt;You also might want to install Graph::Easy::As_svg from CPAN, it provides you with the ability to generate SVG (Scalable Vector Graphics) files.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;See INSTALL on how to install this module.&lt;/p&gt; &#xA;&lt;h1&gt;AUTHOR&lt;/h1&gt; &#xA;&lt;p&gt;Copyright (C) 2004 - 2008 by Tels &lt;a href=&#34;http://bloodgate.com/&#34;&gt;http://bloodgate.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This library is free software; you can redistribute it and/or modify it under the same terms of the GPL version 2.&lt;/p&gt; &#xA;&lt;p&gt;This module was formerly known as Graph-Simple, but has been renamed because it can also easily create non-simple graphs.&lt;/p&gt;</summary>
  </entry>
</feed>