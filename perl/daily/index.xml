<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-25T01:49:46Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>binary-com/perl-Perl-Critic-Policy-Subroutines-ProhibitAmbiguousFunctionCalls</title>
    <updated>2022-07-25T01:49:46Z</updated>
    <id>tag:github.com,2022-07-25:/binary-com/perl-Perl-Critic-Policy-Subroutines-ProhibitAmbiguousFunctionCalls</id>
    <link href="https://github.com/binary-com/perl-Perl-Critic-Policy-Subroutines-ProhibitAmbiguousFunctionCalls" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;perl-Perl-Critic-Policy-Subroutines-ProhibitAmbiguousFunctionCalls&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/binary-com/perl-Perl-Critic-Policy-Subroutines-ProhibitAmbiguousFunctionCalls&#34;&gt;&lt;img src=&#34;https://travis-ci.org/binary-com/perl-Perl-Critic-Policy-Subroutines-ProhibitAmbiguousFunctionCalls.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/binary-com/perl-Perl-Critic-Policy-Subroutines-ProhibitAmbiguousFunctionCalls&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/binary-com/perl-Perl-Critic-Policy-Subroutines-ProhibitAmbiguousFunctionCalls/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Perl::Critic policy that checks for ambiguous function calls&lt;/p&gt; &#xA;&lt;h4&gt;INSTALLATION&lt;/h4&gt; &#xA;&lt;p&gt;To install this module, run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perl Makefile.PL&#xA;make&#xA;make test&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;SUPPORT AND DOCUMENTATION&lt;/h4&gt; &#xA;&lt;p&gt;After installing, you can find documentation for this module with the perldoc command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perldoc Perl::Critic::Policy::Subroutines::ProhibitAmbiguousFunctionCalls&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also look for information at:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Github issue tracker (report bugs here)&#xA;    https://github.com/binary-com/perl-Perl-Critic-Policy-Subroutines-ProhibitAmbiguousFunctionCalls/issues    &#xA;&#xA;AnnoCPAN, Annotated CPAN documentation&#xA;    http://annocpan.org/dist/Perl-Critic-Policy-Subroutines-ProhibitAmbiguousFunctionCalls&#xA;&#xA;CPAN Ratings&#xA;    http://cpanratings.perl.org/d/Perl-Critic-Policy-Subroutines-ProhibitAmbiguousFunctionCalls&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;####COPYRIGHT&lt;/p&gt; &#xA;&lt;p&gt;Copyright (C) 2018 binary.com&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>binary-com/perl-Math-Business-Lookback</title>
    <updated>2022-07-25T01:49:46Z</updated>
    <id>tag:github.com,2022-07-25:/binary-com/perl-Math-Business-Lookback</id>
    <link href="https://github.com/binary-com/perl-Math-Business-Lookback" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NAME&lt;/h1&gt; &#xA;&lt;p&gt;Math::Business::Lookback&lt;/p&gt; &#xA;&lt;h1&gt;SYNOPSIS&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;use Math::Business::Lookback;&#xA;&#xA;# price of a Lookback Fixed Call option&#xA;&#xA;my $price_lbfixedcall_option = Math::Business::Lookback::lbfixedcall(&#xA;    1.35,       # stock price&#xA;    1.36,       # barrier&#xA;    (7/365),    # time&#xA;    0.002,      # payout currency interest rate (0.05 = 5%)&#xA;    0.001,      # quanto drift adjustment (0.05 = 5%)&#xA;    0.11,       # volatility (0.3 = 30%)&#xA;    1.39,       # maximum spot&#xA;    undef       # minimum spot&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;DESCRIPTION&lt;/h1&gt; &#xA;&lt;p&gt;Prices lookback options using the GBM model, all closed formulas.&lt;/p&gt; &#xA;&lt;h1&gt;SUBROUTINES&lt;/h1&gt; &#xA;&lt;h2&gt;lbfloatcall&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;USAGE&#xA;my $price = lbfloatcall($S, $K, $t, $r_q, $mu, $sigma, $S_max, $S_min)&#xA;&#xA;DESCRIPTION&#xA;Price of a Lookback Float Call&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;lbfloatput&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;USAGE&#xA;my $price = lbfloatcall($S, $K, $t, $r_q, $mu, $sigma, $S_max, $S_min)&#xA;&#xA;DESCRIPTION&#xA;Price of a Lookback Float Put&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;lbfixedcall&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;USAGE&#xA;my $price = lbfixedcall($S, $K, $t, $r_q, $mu, $sigma, $S_max, $S_min)&#xA;&#xA;DESCRIPTION&#xA;Price of a Lookback Fixed Call&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;lbfixedput&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;USAGE&#xA;my $price = lbfixedput($S, $K, $t, $r_q, $mu, $sigma, $S_max, $S_min)&#xA;&#xA;DESCRIPTION&#xA;Price of a Lookback Fixed Put&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;lbhighlow&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;USAGE&#xA;my $price = lbhighlow($S, $K, $t, $r_q, $mu, $sigma, $S_max, $S_min)&#xA;&#xA;DESCRIPTION&#xA;Price of a Lookback High Low&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;d1_function&lt;/h2&gt; &#xA;&lt;p&gt;returns the d1 term common to many BlackScholes formulae.&lt;/p&gt; &#xA;&lt;h2&gt;l_max&lt;/h2&gt; &#xA;&lt;p&gt;This is a common function use to calculate the lookbacks options price. See [1] for details.&lt;/p&gt; &#xA;&lt;h2&gt;l_min&lt;/h2&gt; &#xA;&lt;p&gt;This is a common function use to calculate the lookbacks options price. See [1] for details.&lt;/p&gt; &#xA;&lt;h1&gt;DEPENDENCIES&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;* Math::CDF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;SOURCE CODE&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://github.com/binary-com/perl-Math-Business-Lookback&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;REFERENCES&lt;/h1&gt; &#xA;&lt;p&gt;[1] Espen Gaarder Haug, PhD The Complete Guide to Option Pricing Formulas p141-p144&lt;/p&gt; &#xA;&lt;h1&gt;AUTHOR&lt;/h1&gt; &#xA;&lt;p&gt;binary.com, &lt;code&gt;&amp;lt;shahrizal at binary.com&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;BUGS&lt;/h1&gt; &#xA;&lt;p&gt;Please report any bugs or feature requests to&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;bug-math-business-lookbacks at rt.cpan.org&lt;/code&gt;, or through the web&lt;/p&gt; &#xA;&lt;p&gt;interface at&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Math-Business-Lookback&#34;&gt;http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Math-Business-Lookback&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;I will be notified, and then you&#39;ll automatically be notified of progress on&lt;/p&gt; &#xA;&lt;p&gt;your bug as I make changes.&lt;/p&gt; &#xA;&lt;h1&gt;SUPPORT&lt;/h1&gt; &#xA;&lt;p&gt;You can find documentation for this module with the perldoc command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perldoc Math::Business::Lookback&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also look for information at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RT: CPAN&#39;s request tracker (report bugs here)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://rt.cpan.org/NoAuth/Bugs.html?Dist=Math-Business-Lookback&#34;&gt;http://rt.cpan.org/NoAuth/Bugs.html?Dist=Math-Business-Lookback&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AnnoCPAN: Annotated CPAN documentation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://annocpan.org/dist/Math-Business-Lookback&#34;&gt;http://annocpan.org/dist/Math-Business-Lookback&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CPAN Ratings&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://cpanratings.perl.org/d/Math-Business-Lookback&#34;&gt;http://cpanratings.perl.org/d/Math-Business-Lookback&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Search CPAN&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://search.cpan.org/dist/Math-Business-Lookback/&#34;&gt;http://search.cpan.org/dist/Math-Business-Lookback/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>binary-com/perl-WebService-Async-CustomerIO</title>
    <updated>2022-07-25T01:49:46Z</updated>
    <id>tag:github.com,2022-07-25:/binary-com/perl-WebService-Async-CustomerIO</id>
    <link href="https://github.com/binary-com/perl-WebService-Async-CustomerIO" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Unofficial support for the customer.io API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;perl-WebService-Async-CustomerIO&lt;/h1&gt; &#xA;&lt;p&gt;Unofficial support for the customer.io API&lt;/p&gt; &#xA;&lt;h1&gt;Using&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;use WebService::Async::CustomerIO;&#xA;&#xA;my $api_client = WebService::Async::CustomerIO-&amp;gt;new(&#xA;    site_id=&amp;gt;&#39;YOUR_SITE_ID&#39;, api_key=&amp;gt;&#39;YOUR_API_KEY&#39;&#xA;);&#xA;&#xA;my $customer = $api-&amp;gt;new_customer(&#xA;    id =&amp;gt; &#39;some_uniq_id&#39;,&#xA;    email =&amp;gt; &#39;xxx@example.com&#39;,&#xA;    created_at =&amp;gt; $timestamp,&#xA;    attributes =&amp;gt; {&#xA;        new_test_attr =&amp;gt; &#39;test_value&#39;,&#xA;    }&#xA;);&#xA;&#xA;$customer-&amp;gt;upsert-&amp;gt;then({ print &#34;Customer added\n&#34; });&#xA;&#xA;&#xA;### Emmiting events for customer&#xA;$customer-&amp;gt;emit_event(&#39;registration&#39;);&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>