<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-07T01:52:24Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Zimbra/zm-build</title>
    <updated>2022-06-07T01:52:24Z</updated>
    <id>tag:github.com,2022-06-07:/Zimbra/zm-build</id>
    <link href="https://github.com/Zimbra/zm-build" rel="alternate"></link>
    <summary type="html">&lt;p&gt;zm-build for Zimbra Collaboration Suite, FOSS Edition&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;zm-build&lt;/h1&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains the build script and supporting files required to create a &lt;a href=&#34;https://en.wikipedia.org/wiki/Free_and_open-source_software&#34;&gt;FOSS&lt;/a&gt; build of the &lt;a href=&#34;https://www.zimbra.com/&#34;&gt;Zimbra Collaboration Suite&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;build.pl&lt;/code&gt; - Invoke this script to produce a build. See the &lt;em&gt;Building&lt;/em&gt; section below for an example.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;instructions/&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;FOSS_remote_list.pl&lt;/code&gt; - Maps between remote label and URL&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;FOSS_repo_list.pl&lt;/code&gt; - Specifies which branches (or tags) are checked out to build each component repository.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;FOSS_staging_list.pl&lt;/code&gt; - defines the staging order and details.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup with Zimbra Development Images (used for building)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Set up docker on your box&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can then pull and run using development images (built from Zimbra/zm-base-os.git)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In case you need to customize the images for your purposes, you could maintain your own Dockerfile such as this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  $ cat Dockerfile&#xA;  FROM zimbra/zm-base-os:devcore-ubuntu-16.04&#xA;  RUN sudo apt-get install emacs my-special-tool etc..&#xA;  RUN ...&#xA;&#xA;  $ docker build -t myuser/my-devcore-ubuntu-16 .&#xA;  $ docker run -it myuser/my-devcore-ubuntu-16 bash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Ubuntu 16.04&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it zimbra/zm-base-os:devcore-ubuntu-16.04 bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ubuntu 14.04&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it zimbra/zm-base-os:devcore-ubuntu-14.04 bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ubuntu 12.04&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it zimbra/zm-base-os:devcore-ubuntu-12.04 bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CentOS 7&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it zimbra/zm-base-os:devcore-centos-7 bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CentOS 6&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it zimbra/zm-base-os:devcore-centos-6 bash&#xA;&#xA;# some tools are installed inside /home/build/.zm-dev-tools/, zm-build automatically sources this path.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setup (traditional)&lt;/h2&gt; &#xA;&lt;h3&gt;Ubuntu 16.04&lt;/h3&gt; &#xA;&lt;p&gt;The following steps assume that your are starting with a clean VM and are logged in as a non-root user with &lt;code&gt;sudo&lt;/code&gt; privileges.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get update&#xA;sudo apt-get install software-properties-common openjdk-8-jdk ant ant-optional ant-contrib ruby git maven build-essential debhelper&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ubuntu 14.04&lt;/h3&gt; &#xA;&lt;p&gt;The following steps assume that your are starting with a clean VM and are logged in as a non-root user with &lt;code&gt;sudo&lt;/code&gt; privileges.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install software-properties-common &#xA;sudo add-apt-repository ppa:openjdk-r/ppa&#xA;sudo apt-get update&#xA;sudo update-ca-certificates -f&#xA;sudo apt-get install openjdk-8-jdk ant ant-optional ant-contrib ruby git maven build-essential&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ubuntu 12.04&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install python-software-properties software-properties-common&#xA;sudo add-apt-repository ppa:openjdk-r/ppa&#xA;sudo apt-get update&#xA;sudo update-ca-certificates -f&#xA;sudo apt-get install openjdk-8-jdk ant ant-optional ant-contrib ruby git maven build-essential zlib1g-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CentOS 7&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo yum groupinstall &#39;Development Tools&#39;&#xA;sudo yum install java-1.8.0-openjdk ant ant-junit ruby git maven cpan wget perl-IPC-Cmd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CentOS 6&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo yum groupinstall &#39;Development Tools&#39;&#xA;sudo yum remove java-1.7.0-openjdk java-1.6.0-openjdk ant&#xA;sudo yum install java-1.8.0-openjdk java-1.8.0-openjdk-devel ruby git cpan wget&#xA;# install specific perl modules&#xA;sudo cpan IPC::Cmd&#xA;cd /tmp&#xA;# install maven&#xA;wget http://mirror.metrocast.net/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz&#xA;sudo tar -xf apache-maven-3.3.9-bin.tar.gz&#xA;sudo mv apache-maven-3.3.9 /opt&#xA;echo &#39;export PATH=&#34;/opt/apache-maven-3.3.9/bin:$PATH&#34;&#39; | sudo tee -a /etc/profile.d/maven.sh&#xA;# install current version of ant&#xA;wget https://www.apache.org/dist/ant/binaries/apache-ant-1.9.9-bin.zip&#xA;sudo unzip apache-ant-1.9.9-bin.zip&#xA;sudo mv apache-ant-1.9.9 /opt&#xA;echo &#39;export PATH=&#34;/opt/apache-ant-1.9.9/bin:$PATH&#34;&#39; | sudo tee -a /etc/profile.d/ant.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Create a directory for your build and check-out the &lt;code&gt;zm-build&lt;/code&gt; repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir installer-build&#xA;cd installer-build&#xA;git clone https://github.com/Zimbra/zm-build.git&#xA;cd zm-build&#xA;git checkout origin/develop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;build.pl&lt;/code&gt; command is used to build the product. Run it with the &lt;code&gt;-h&lt;/code&gt; option for help:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: ./build.pl &amp;lt;options&amp;gt;&#xA;Supported options:&#xA;   --build-no=i&#xA;   --build-ts=i&#xA;   --build-artifacts-base-dir=s&#xA;   --build-sources-base-dir=s&#xA;   --build-release=s&#xA;   --build-release-no=s&#xA;   --build-release-candidate=s&#xA;   --build-type=s&#xA;   --build-thirdparty-server=s&#xA;   --build-prod-flag!&#xA;   --build-debug-flag!&#xA;   --build-dev-tool-base-dir=s&#xA;   --interactive!&#xA;   --git-overrides=s%&#xA;   --git-default-tag=s&#xA;   --git-default-remote=s&#xA;   --git-default-branch=s&#xA;   --stop-after-checkout!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You &lt;em&gt;can&lt;/em&gt; specify all the options on the command-line, as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./build.pl --build-no=1713 --build-ts=`date +&#39;%Y%m%d%H%M%S&#39;` \&#xA;  --build-release=JUDASPRIEST --build-release-no=8.7.6 \&#xA;  --build-release-candidate=GA --build-type=FOSS \&#xA;  --build-thirdparty-server=files.zimbra.com --no-interactive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The completed build will be archived into a &lt;code&gt;*.tgz&lt;/code&gt; file that is stored in the appropriate platform and release-specific subdirectory of the &lt;code&gt;BUILDS&lt;/code&gt; directory. The above command, run on an Ubuntu 16.04 machine, created the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$HOME/installer_build/BUILDS/UBUNTU16_64/JUDASPRIEST-876/20170322153033_FOSS/zm-build/zcs-8.7.6_1713.UBUNTU16_64.20170322153033.tgz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also specify any or all of the required options by placing them in a file called &lt;code&gt;config.build&lt;/code&gt;. This file should be at the top level of the &lt;code&gt;zm-build&lt;/code&gt; directory. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;BUILD_NO                    = 1713&#xA;BUILD_RELEASE               = JUDASPRIEST&#xA;BUILD_RELEASE_NO            = 8.7.6&#xA;BUILD_RELEASE_CANDIDATE     = GA&#xA;BUILD_TYPE                  = FOSS&#xA;BUILD_THIRDPARTY_SERVER     = files.zimbra.com&#xA;INTERACTIVE                 = 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then just run &lt;code&gt;./build.pl&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The above command, run on a CentOS 7 machine with the options as shown in &lt;code&gt;config.build&lt;/code&gt;, created the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$HOME/installer-build/BUILDS/RHEL7_64/JUDASPRIEST-876/20170323061131_FOSS/zm-build/zcs-8.7.6_GA_1713.RHEL7_64.20170323061131.tgz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;The following is a walk-through of the basic steps required to do ZCS development. The first step is to simply install a current FOSS build on the machine that you wish to use. The instructions that follow assume that this has been done.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create &lt;code&gt;/home/zimbra&lt;/code&gt; and make &lt;code&gt;zimbra&lt;/code&gt; the owner.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; sudo mkdir /home/zimbra&#xA; sudo chown zimbra:zimbra /home/zimbra&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;ant&lt;/code&gt;, and &lt;code&gt;ant-contrib&lt;/code&gt; by whichever method is appropriate for your distro:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; sudo apt-get install git ant ant-contrib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or&lt;/p&gt; &lt;pre&gt;&lt;code&gt; sudo yum install git ant ant-contrib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure &lt;code&gt;/opt/zimbra/.ssh/config&lt;/code&gt; to use your ssh key for the git remotes that you need to access.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Perform the following edits on &lt;code&gt;/opt/zimbra/.bash_profile&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Comment-out &lt;code&gt;export LANG=C&lt;/code&gt; and &lt;code&gt;export LC_ALL=C&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Add export &lt;code&gt;LANG=en_US.UTF-8&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Add export &lt;code&gt;ANT_OPTS=-Ddev.home=/home/zimbra&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Change permissions on files and folders that you will be updating; e.g.,&lt;/p&gt; &lt;pre&gt;&lt;code&gt; sudo chmod -R o+w /opt/zimbra/lib/&#xA; sudo chmod -R o+w /opt/zimbra/jetty/&#xA; sudo chown zimbra:zimbra /opt/zimbra&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you run &lt;code&gt;zmfixperms&lt;/code&gt;, some of these permissions will be overwritten.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add file &lt;code&gt;/opt/zimbra/.gitconfig&lt;/code&gt; and update as needed. At a minimum:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; [user]&#xA; &#x9;email = YOUR-EMAIL-ADDRESS&#xA; &#x9;name = YOUR-FIRST-AND-LAST-NAME&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;As the &lt;code&gt;zimbra&lt;/code&gt; user, create a base directory under &lt;code&gt;/home/zimbra&lt;/code&gt; from which to work.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; cd /home/zimbra&#xA; mkdir zcs&#xA; cd zcs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now you can clone any repositories that you require and get to work.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Email Delivery&lt;/h2&gt; &#xA;&lt;p&gt;If you want email delivery to work, set up a DNS server on your host machine or another VM and configure &lt;code&gt;zimbraDNSMasterIP&lt;/code&gt; to point to it. To configure &lt;code&gt;zimbraDNSMasterIP&lt;/code&gt;, do the following as the &lt;code&gt;zimbra&lt;/code&gt; user:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;zmprov ms `zmhostname` zimbraDNSMasterIP DNS-SERVER-IP-ADDRESS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may receive the following error when trying to send email:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;No SMTP hosts available for domain&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If this occurs, you need to manually configure &lt;code&gt;zimbraSmtpHostname&lt;/code&gt; for your domain(s). To configure &lt;code&gt;zimbraSmtpHostname&lt;/code&gt;, do the following as the &lt;code&gt;zimbra&lt;/code&gt; user:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;zmprov md DOMAIN-NAME zimbraSmtpHostname `zmhostname`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;zm-mailbox example&lt;/h2&gt; &#xA;&lt;p&gt;As the &lt;code&gt;zimbra&lt;/code&gt; user, &lt;code&gt;cd /home/zimbra/zcs&lt;/code&gt;. Then clone the &lt;code&gt;zm-mailbox&lt;/code&gt; repository from github&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:Zimbra/zm-mailbox.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following sub-directories &lt;code&gt;zm-mailbox&lt;/code&gt; build and deploy separately:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;client&#xA;common&#xA;milter-conf&#xA;native&#xA;soap&#xA;store&#xA;store-conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The top-level &lt;code&gt;build.xml&lt;/code&gt; is used by the &lt;code&gt;zm-build&lt;/code&gt; scripts to create an installer package. You will not use that for normal development. There are build-order dependencies between the above-listed deployment targets. These can be determined by inspection of the &lt;code&gt;ivy.xml&lt;/code&gt; files within each subdirectory.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;grep &#39;org=&#34;zimbra&#34;&#39; store/ivy.xml&#xA;&#xA;&amp;lt;dependency org=&#34;zimbra&#34; name=&#34;zm-common&#34; rev=&#34;latest.integration&#34;/&amp;gt;&#xA;&amp;lt;dependency org=&#34;zimbra&#34; name=&#34;zm-soap&#34; rev=&#34;latest.integration&#34;/&amp;gt;&#xA;&amp;lt;dependency org=&#34;zimbra&#34; name=&#34;zm-client&#34; rev=&#34;latest.integration&#34;/&amp;gt;&#xA;&amp;lt;dependency org=&#34;zimbra&#34; name=&#34;zm-native&#34; rev=&#34;latest.integration&#34;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here you can see that the deployment target, &lt;code&gt;zm-store&lt;/code&gt; (the &lt;code&gt;store&lt;/code&gt; subdirectory), depends upon &lt;code&gt;common&lt;/code&gt;, &lt;code&gt;soap&lt;/code&gt;, &lt;code&gt;client&lt;/code&gt;, and &lt;code&gt;native&lt;/code&gt;. Here is the current ordering dependencies among all of the &lt;code&gt;zm-mailbox&lt;/code&gt; deployment targets. The higher-numbered deployment targets depend upon the lower-numbered ones. Note that &lt;code&gt;milter-conf&lt;/code&gt; and &lt;code&gt;store-conf&lt;/code&gt; have no cross-dependencies.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;native&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;common&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;soap&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;client&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;store&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;So, from the &lt;code&gt;native&lt;/code&gt; sub-directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ant -Dzimbra.buildinfo.version=8.7.6_GA clean compile publish-local deploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Comments:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The requirement to include &lt;code&gt;-Dzimbra.buildinfo.version=8.7.6_GA&lt;/code&gt; to ant is due to a change that was made when the FOSS code was moved to GitHub. You can also just add that option to your &lt;code&gt;ANT_OPTS&lt;/code&gt; enviroment variable that you defined in &lt;code&gt;$HOME/.bash_profile&lt;/code&gt; as follows:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;export ANT_OPTS=&#34;-Ddev.home=/home/zimbra -Dzimbra.buildinfo.version=8.7.6_GA&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you do that, then you can omit that &lt;code&gt;-D...&lt;/code&gt; argument to the &lt;code&gt;ant&lt;/code&gt; command and future examples will reflect that.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;publish-local&lt;/code&gt; target adds the artifact to &lt;code&gt;/home/zimbra/.zcs-deps&lt;/code&gt;, which is included in the Ivy resolution path.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;deploy&lt;/code&gt; target installs the artifact to its run-time location and restarts the appropriate service(s). This will allow you to test your changes.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then, from the &lt;code&gt;common&lt;/code&gt;, &lt;code&gt;soap&lt;/code&gt;, &lt;code&gt;client&lt;/code&gt;, and &lt;code&gt;store&lt;/code&gt; sub-directories (in that order):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ant clean compile publish-local deploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Adding a new LDAP Attribute&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARNING:It is absolutely imperative to avoid duplicate IDs for attributes. Unfortunately, that currently isn&#39;t a trivial thing to do. Need to check Zimbra 8 and Zimbra X along with all development branches. If customers get different setups using different IDs, this makes future upgrade scenarios a complete nightmare&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Start by cloning &lt;em&gt;both&lt;/em&gt; the &lt;code&gt;zm-ldap-utilites&lt;/code&gt; and the &lt;code&gt;zm-mailbox&lt;/code&gt; repositories from GitHub. Check out the appropriate branch of each. Then proceed as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Add your new attribute to &lt;code&gt;zm-mailbox/store/conf/attrs/zimbra-attrs.xml&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;From &lt;code&gt;zm-common/store&lt;/code&gt; invoke the following command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  ant generate-getters&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Do the following as &lt;code&gt;root&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  chmod -R o+w /opt/zimbra/common/etc/openldap/schema&#xA;  chmod o+w /opt/zimbra/conf/zimbra.ldif&#xA;  chmod +w /opt/zimbra/conf/attrs/zimbra-attrs.xml&#xA;  chmod -R o+w /opt/zimbra/common/etc/openldap/zimbra&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Back as the &lt;code&gt;zimbra&lt;/code&gt; user, invoke the following command from &lt;code&gt;zm-mailbox/common&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  ant deploy publish-local&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Then from the &lt;code&gt;zm-mailbox/store&lt;/code&gt; directory:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  ant deploy update-ldap-schema&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Your ZCS development server should now be running with the new attribute(s). You can test that by querying them and modifying them with &lt;code&gt;zmprov&lt;/code&gt;. You can &lt;code&gt;git add ...&lt;/code&gt; and &lt;code&gt;git commit&lt;/code&gt; your changes now.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Moham3dRiahi/Th3inspector</title>
    <updated>2022-06-07T01:52:24Z</updated>
    <id>tag:github.com,2022-06-07:/Moham3dRiahi/Th3inspector</id>
    <link href="https://github.com/Moham3dRiahi/Th3inspector" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Th3Inspector 🕵️ Best Tool For Information Gathering 🔎&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Th3inspector Tool 🕵️&lt;/h2&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;120&#34; height=&#34;120&#34; src=&#34;https://i.imgur.com/63TSBiM.png&#34;&gt; &#xA;&lt;p&gt;Th3inspector 🕵️ best tool for Information Gathering 🔎&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;⭐ All in one tool for Information Gathering ⭐ &lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/Moham3dRiahi/Th3inspector&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Th3inspector-1.9-brightgreen.svg?sanitize=true&#34; alt=&#34;Version&#34; data-canonical-src=&#34;https://img.shields.io/badge/Th3inspector-1.9-brightgreen.svg?maxAge=259200&#34; style=&#34;max-width:100%;&#34;&gt;&lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/Moham3dRiahi/Th3inspector&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Supported%20OS-Linux%2FWindows%2FmacOS-brightgreengreen.svg?sanitize=true&#34; alt=&#34;Build&#34; data-canonical-src=&#34;https://img.shields.io/badge/Supported%20OS-Linux%2FWindows%2FmacOS-brightgreengreen.svg&#34; style=&#34;max-width:100%;&#34;&gt;&lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/Moham3dRiahi/Th3inspector/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/l/doctrine/orm.svg?sanitize=true&#34; alt=&#34;Build&#34; data-canonical-src=&#34;https://img.shields.io/packagist/l/doctrine/orm.svg&#34; style=&#34;max-width:100%;&#34;&gt;&lt;/a&gt;&#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;Th3inspector 🕵️ best tool for Information Gathering 🔎&lt;/h4&gt; &#xA;&lt;img src=&#34;https://i.imgur.com/Q81YJCU.png&#34; data-canonical-src=&#34;https://i.imgur.com/niFwcaM.png&#34; width=&#34;700&#34; height=&#34;470&#34;&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;img src=&#34;https://i.imgur.com/4Gh978u.jpg&#34; width=&#34;117&#34; height=&#34;156&#34;&gt; &lt;img src=&#34;https://i.imgur.com/iaPxfRW.jpg&#34; width=&#34;32%&#34;&gt; &lt;img src=&#34;https://i.imgur.com/NG03FY8.jpg&#34; width=&#34;32%&#34;&gt; &lt;img src=&#34;https://i.imgur.com/NYU2bYb.jpg&#34; width=&#34;32%&#34;&gt; &lt;img src=&#34;https://i.imgur.com/77MVBFF.jpg&#34; width=&#34;400&#34; height=&#34;156&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Video&lt;/h2&gt; &#xA;&lt;a href=&#34;https://youtu.be/ZvsIbhRPSrI&#34;&gt;&lt;img src=&#34;https://i.imgur.com/ytHi4WB.jpg&#34; style=&#34;max-width:100%;&#34;&gt;&lt;/a&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Short Form&lt;/th&gt; &#xA;   &lt;th&gt;Long Form&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-i&lt;/td&gt; &#xA;   &lt;td&gt;--info&lt;/td&gt; &#xA;   &lt;td&gt;Website Information&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-n&lt;/td&gt; &#xA;   &lt;td&gt;--number&lt;/td&gt; &#xA;   &lt;td&gt;Phone Number Information&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-mx&lt;/td&gt; &#xA;   &lt;td&gt;--mailserver&lt;/td&gt; &#xA;   &lt;td&gt;Find IP Address And E-mail Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-w&lt;/td&gt; &#xA;   &lt;td&gt;--whois&lt;/td&gt; &#xA;   &lt;td&gt;Domain Whois Lookup&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-l&lt;/td&gt; &#xA;   &lt;td&gt;--location&lt;/td&gt; &#xA;   &lt;td&gt;Find Website/IP Address Location&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-c&lt;/td&gt; &#xA;   &lt;td&gt;--cloudflare&lt;/td&gt; &#xA;   &lt;td&gt;Bypass CloudFlare&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-a&lt;/td&gt; &#xA;   &lt;td&gt;--age&lt;/td&gt; &#xA;   &lt;td&gt;Domain Age Checker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-ua&lt;/td&gt; &#xA;   &lt;td&gt;--useragent&lt;/td&gt; &#xA;   &lt;td&gt;User Agent Info&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-p&lt;/td&gt; &#xA;   &lt;td&gt;--port&lt;/td&gt; &#xA;   &lt;td&gt;Check Active Services On Resource&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-b&lt;/td&gt; &#xA;   &lt;td&gt;--bin&lt;/td&gt; &#xA;   &lt;td&gt;Credit Card Bin Checker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-s&lt;/td&gt; &#xA;   &lt;td&gt;--subdomain&lt;/td&gt; &#xA;   &lt;td&gt;Subdomain Scanner&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-e&lt;/td&gt; &#xA;   &lt;td&gt;--email&lt;/td&gt; &#xA;   &lt;td&gt;E-mail Address Checker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-cms&lt;/td&gt; &#xA;   &lt;td&gt;--cms&lt;/td&gt; &#xA;   &lt;td&gt;Content Management System Checker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-h&lt;/td&gt; &#xA;   &lt;td&gt;--help&lt;/td&gt; &#xA;   &lt;td&gt;show the help message and exit&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To list all the basic options and switches use -h switch:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;perl Th3inspector.pl -h&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To Get Website Information:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;perl Th3inspector.pl -i example.com&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To Get Phone Number Information :&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;perl Th3inspector.pl -n xxxxxxx&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To Find IP Address And E-mail Server:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;perl Th3inspector.pl -mx example.com&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To Find Website Or IP Address Location :&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;perl Th3inspector.pl -l example.com&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To Get Real IP Of Website Using CloudFlare Protection&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;perl Th3inspector.pl -c example.com&lt;/code&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;p&gt;Found XATTACKER cool? just drop a THANK YOU this will motivate me to create more exciting stuffs for you&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;📧 Contact&lt;/h2&gt; &#xA;&lt;h3&gt;You Want Ask About All My Tools Or Buy Tools/Exploits Private Add Me On : &lt;/h3&gt;&#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;a href=&#34;https://t.me/moham3driahi&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/TELEGRAM-moham3driahi-blue&#34; alt=&#34;Version&#34; data-canonical-src=&#34;https://img.shields.io/badge/TELEGRAM-moham3driahi-blue&#34; style=&#34;max-width:100%;&#34;&gt;&lt;/a&gt;   &#xA;&lt;a href=&#34;https://icq.im/moham3driahi&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/ICQ-moham3driahi-brightgreen &#34; alt=&#34;Version&#34; data-canonical-src=&#34;https://img.shields.io/badge/ICQ-moham3driahi-brightgreen &#34; style=&#34;max-width:100%;&#34;&gt;&lt;/a&gt;   &#xA;&lt;a href=&#34;mailto:mohamedriahi@gmail.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Mail-moham3driahi%40gmail.com-red &#34; style=&#34;max-width:100%;&#34;&gt;&lt;/a&gt;  &#xA;&lt;hr&gt; &#xA;&lt;h2&gt; ✨ Finally Don&#39;t Miss Out My New Telegram Channel for Private Tools &amp;amp;&amp;amp; Methods And Updates ✨ &lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/moham3driahi_tools&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Channel-Private%20Hacking%20Tools-red &#34; alt=&#34;Version&#34; data-canonical-src=&#34;https://img.shields.io/badge/Channel-Private%20Hacking%20Tools-red &#34; style=&#34;max-width:100%;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation &lt;a href=&#34;https://wikipedia.org/wiki/Linux&#34;&gt;Linux&lt;/a&gt; &lt;a href=&#34;https://fr.wikipedia.org/wiki/Linux&#34;&gt;&lt;img src=&#34;http://icons.iconarchive.com/icons/dakirby309/simply-styled/32/OS-Linux-icon.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Moham3dRiahi/Th3inspector.git&#xA;cd Th3inspector&#xA;chmod +x install.sh &amp;amp;&amp;amp; ./install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation &lt;a href=&#34;https://wikipedia.org/wiki/Android&#34;&gt;Android&lt;/a&gt; &lt;a href=&#34;https://fr.wikipedia.org/wiki/Android&#34;&gt;&lt;img src=&#34;https://cdn1.iconfinder.com/data/icons/logotypes/32/android-32.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Download &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.termux&#34;&gt;Termux&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Moham3dRiahi/Th3inspector.git&#xA;cd Th3inspector&#xA;chmod +x install.sh &amp;amp;&amp;amp; ./install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation &lt;a href=&#34;https://wikipedia.org/wiki/Microsoft_Windows&#34;&gt;Windows &lt;/a&gt;&lt;a href=&#34;https://fr.wikipedia.org/wiki/Microsoft_Windows&#34;&gt;&lt;img src=&#34;http://icons.iconarchive.com/icons/tatice/cristal-intense/32/Windows-icon.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Download Perl&#xA;Download Th3inspector&#xA;cpan install JSON&#xA;Extract Th3inspector into Desktop&#xA;Open CMD and type the following commands:&#xA;cd Desktop/Th3inspector-master/&#xA;perl Th3inspector.pl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Version&lt;/h2&gt; &#xA;&lt;strong&gt;Current version is 1.9&lt;/strong&gt; &#xA;&lt;strong&gt;What&#39;s New &lt;/strong&gt; &#xA;&lt;p&gt;• speed up&lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt;• Bug fixes&lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>smxi/inxi</title>
    <updated>2022-06-07T01:52:24Z</updated>
    <id>tag:github.com,2022-06-07:/smxi/inxi</id>
    <link href="https://github.com/smxi/inxi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;inxi is a full featured CLI system information tool. It is available in most Linux distribution repositories, and does its best to support the BSDs.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;README for inxi - a command line system information tool&lt;/p&gt; &#xA;&lt;p&gt;The new faster, more powerful Perl inxi is here! File all issue reports with the master branch. All support for versions prior to 3.0 is now ended, sorry.&lt;/p&gt; &#xA;&lt;p&gt;Make sure to update to the current inxi from the master branch before filing any issue reports. The code in pre 2.9 versions literally no longer exists in inxi 3. Bugs from earlier versions cannot usually be solved in the new version since the pre 2.9 and the 2.9 and later versions are completely different internally.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;DONATE&lt;/h2&gt; &#xA;&lt;p&gt;Help support the project with a one time or a sustaining donation.&lt;/p&gt; &#xA;&lt;p&gt;Paypal: &lt;a href=&#34;https://www.paypal.com/donate/?hosted_button_id=77DQVM6A4L5E2&#34;&gt;https://www.paypal.com/donate/?hosted_button_id=77DQVM6A4L5E2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Open Collective: &lt;a href=&#34;https://opencollective.com/inxi&#34;&gt;https://opencollective.com/inxi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;================================================================================ DEVELOPMENT AND ISSUES&lt;/h2&gt; &#xA;&lt;p&gt;Make inxi better! Expand supported hardware and OS data, fix broken items!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;HELP PROJECT DEVELOPMENT! SUBMIT A DEBUGGER DATASET&lt;/h2&gt; &#xA;&lt;p&gt;This is easy to do, and only takes a few seconds. These datasets really help the project add and debug features. You will generally also be asked to provide this data for non trivial issue reports.&lt;/p&gt; &#xA;&lt;p&gt;Note that the following options are present:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Generate local gz&#39;ed debugger dataset. Leaves gz on your system: inxi version &amp;gt;= 3: inxi --debug 20&lt;/li&gt; &#xA; &lt;li&gt;Generate, upload gz&#39;ed debugger dataset. Leaves gz on your system: inxi version &amp;gt;= 3: inxi --debug 21&lt;/li&gt; &#xA; &lt;li&gt;Generate, upload, delete gz&#39;ed debugger dataset: inxi version &amp;gt;= 3: inxi --debug 22&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can run these as regular user, or root/sudo, which will gather a bit more data, like from dmidecode, and other tools that need superuser permissions to run.&lt;/p&gt; &#xA;&lt;p&gt;ARM (plus MIPS, SPARC, PowerPC) and BSD datasets are particularly appreciated because we simply do not have enough of those.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;FILE AN ISSUE IF YOU FIND SOMETHING MISSING, BROKEN, OR FOR AN ENHANCEMENT&lt;/h2&gt; &#xA;&lt;p&gt;inxi strives to support the widest range of operating systems and hardware, from the most simple consumer desktops, to the most advanced professional hardware and servers.&lt;/p&gt; &#xA;&lt;p&gt;The issues you post help maintain or expand that support, and are always appreciated since user data and feedback is what keeps inxi working and supporting the latest (or not so latest) hardware and operating systems.&lt;/p&gt; &#xA;&lt;p&gt;See INXI VERSION/SUPPORT/ISSUES/BUGS INFORMATION for more about issues/support.&lt;/p&gt; &#xA;&lt;p&gt;See BSD/UNIX below for qualifications re BSDs, and OSX in particular.&lt;/p&gt; &#xA;&lt;h2&gt;================================================================================ SOURCE VERSION CONTROL&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/smxi/inxi&#34;&gt;https://github.com/smxi/inxi&lt;/a&gt; MAIN BRANCH: master DEVELOPMENT BRANCHES: inxi-perl, one, two&lt;/p&gt; &#xA;&lt;p&gt;inxi-perl is the dev branch, the others are rarely if ever used. inxi itself has the built in feature to be able to update itself from anywhere, including these branches, which is very useful for development and debugging on various user systems.&lt;/p&gt; &#xA;&lt;p&gt;PULL REQUESTS: Please talk to me before starting to work on patches of any reasonable complexity. inxi is hard to work on, and you have to understand how it works before submitting patches, unless it&#39;s a trivial bug fix. Please: NEVER even think about looking at or using previous inxi commits, previous to the current master version, as a base for a patch. If you do, your patch / pull request will probably be rejected. Developers, get your version from the inxi-perl branch, pinxi, otherwise you may not be current to actual development versions. inxi-perl pinxi is always equal to or ahead of master branch inxi.&lt;/p&gt; &#xA;&lt;p&gt;Man page updates, doc page updates, etc, of course, are easy and will probably be accepted, as long as they are properly formatted and logically coherent.&lt;/p&gt; &#xA;&lt;p&gt;When under active development, inxi releases early, and releases often.&lt;/p&gt; &#xA;&lt;p&gt;PACKAGERS: inxi has one and only one &#39;release&#39;, and that is the current commit/version in the master branch (plus pinxi inxi-perl branch, of course, but those should never be packaged).&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;MASTER BRANCH&lt;/h2&gt; &#xA;&lt;p&gt;This is the only supported branch, and the current latest commit/version is the only supported &#39;release&#39;. There are no &#39;releases&#39; of inxi beyond the current commit/version in master. All past versions are not supported.&lt;/p&gt; &#xA;&lt;p&gt;git clone &lt;a href=&#34;https://github.com/smxi/inxi&#34;&gt;https://github.com/smxi/inxi&lt;/a&gt; --branch master --single-branch&lt;/p&gt; &#xA;&lt;p&gt;OR direct fast and easy install:&lt;/p&gt; &#xA;&lt;p&gt;wget -O inxi &lt;a href=&#34;https://github.com/smxi/inxi/raw/master/inxi&#34;&gt;https://github.com/smxi/inxi/raw/master/inxi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;OR easy to remember shortcut (which redirects to github):&lt;/p&gt; &#xA;&lt;p&gt;wget -O inxi &lt;a href=&#34;https://smxi.org/inxi&#34;&gt;https://smxi.org/inxi&lt;/a&gt; wget -O inxi smxi.org/inxi&lt;/p&gt; &#xA;&lt;p&gt;NOTE: Just because github calls tagged commits &#39;Releases&#39; does not mean they are releases! I can&#39;t change the words on the tag page. They are tagged commits, period. A tag is a pointer to a commit, and has no further meaning.&lt;/p&gt; &#xA;&lt;p&gt;If your distribution has blocked -U self updater and you want a newer version:&lt;/p&gt; &#xA;&lt;p&gt;Open /etc/inxi.conf and change false to true: B_ALLOW_UPDATE=true&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;DEVELOPMENT BRANCH&lt;/h2&gt; &#xA;&lt;p&gt;All active development is now done on the inxi-perl branch (pinxi):&lt;/p&gt; &#xA;&lt;p&gt;git clone &lt;a href=&#34;https://github.com/smxi/inxi&#34;&gt;https://github.com/smxi/inxi&lt;/a&gt; --branch inxi-perl --single-branch&lt;/p&gt; &#xA;&lt;p&gt;OR direct fast and easy install:&lt;/p&gt; &#xA;&lt;p&gt;wget -O pinxi &lt;a href=&#34;https://github.com/smxi/inxi/raw/inxi-perl/pinxi&#34;&gt;https://github.com/smxi/inxi/raw/inxi-perl/pinxi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;OR easy to remember shortcut (which redirects to github):&lt;/p&gt; &#xA;&lt;p&gt;wget -O pinxi &lt;a href=&#34;https://smxi.org/pinxi&#34;&gt;https://smxi.org/pinxi&lt;/a&gt; wget -O pinxi smxi.org/pinxi&lt;/p&gt; &#xA;&lt;p&gt;Once new features have been debugged, tested, and are reasonably stable, pinxi is copied to inxi in the master branch.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s a good idea to check with pinxi if you want to make sure your issue has not been corrected, since pinxi is always equal to or ahead of inxi.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;LEGACY INXI (in inxi-legacy repo)&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to look at the Gawk/Bash version of inxi, you can find it in the inxi-legacy repo, as binxi in the /inxi-legacy directory:&lt;/p&gt; &#xA;&lt;p&gt;Direct fast and easy install:&lt;/p&gt; &#xA;&lt;p&gt;wget -O binxi &lt;a href=&#34;https://github.com/smxi/inxi-legacy/raw/master/inxi-legacy/binxi&#34;&gt;https://github.com/smxi/inxi-legacy/raw/master/inxi-legacy/binxi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;OR easy to remember shortcut (which redirects to github):&lt;/p&gt; &#xA;&lt;p&gt;wget -O binxi &lt;a href=&#34;https://smxi.org/binxi&#34;&gt;https://smxi.org/binxi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This version will not be maintained, and it&#39;s unlikely that any time will be spent on it in the future, but it is there in case it&#39;s of use or interest to anyone.&lt;/p&gt; &#xA;&lt;p&gt;This was kept for a long time as the inxi-legacy branch of inxi, but was moved to the inxi-legacy repo 2021-09-24.&lt;/p&gt; &#xA;&lt;h2&gt;================================================================================ SUPPORT INFO&lt;/h2&gt; &#xA;&lt;p&gt;Do not ask for basic help that reading the inxi -h / --help menus, or man page would show you, and do not ask for features to be added that inxi already has. Also do not ask for support if your distro won&#39;t update its inxi version, some are bad about that.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;DOCUMENTATION&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://smxi.org/docs/inxi.htm&#34;&gt;https://smxi.org/docs/inxi.htm&lt;/a&gt; (smxi.org/docs/ is easier to remember, and is one click away from inxi.htm). The one page wiki on github is only a pointer to the real resources.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/smxi/inxi/tree/inxi-perl/docs&#34;&gt;https://github.com/smxi/inxi/tree/inxi-perl/docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Contains specific Perl inxi documentation, of interest mostly to developers. Includes internal inxi tools, values, configuration items. Also has useful information about Perl version support, including the list of Core modules that &lt;em&gt;should&lt;/em&gt; be included in a distribution&#39;s core modules, but which are unfortunately sometimes removed.&lt;/p&gt; &#xA;&lt;p&gt;INXI CONFIGURATION: &lt;a href=&#34;https://smxi.org/docs/inxi-configuration.htm&#34;&gt;https://smxi.org/docs/inxi-configuration.htm&lt;/a&gt; HTML MAN PAGE: &lt;a href=&#34;https://smxi.org/docs/inxi-man.htm&#34;&gt;https://smxi.org/docs/inxi-man.htm&lt;/a&gt; INXI OPTIONS PAGE: &lt;a href=&#34;https://smxi.org/docs/inxi-options.htm&#34;&gt;https://smxi.org/docs/inxi-options.htm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;NOTE: Check the inxi version number on each doc page to see which version will support the options listed. The man and options page also link to a legacy version, pre 2.9.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;IRC&lt;/h2&gt; &#xA;&lt;p&gt;You can go to: irc.oftc.net or irc.libera.chat channel #smxi&lt;/p&gt; &#xA;&lt;p&gt;but be prepared to wait around for a while to get a response. Generally it&#39;s better to use github issues.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;ISSUES&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/smxi/inxi/issues&#34;&gt;https://github.com/smxi/inxi/issues&lt;/a&gt; No issues accepted for non current inxi versions. See below for more on that. Unfortunately as of 2.9, no support or issues can be accepted for older inxi&#39;s because inxi 2.9 (Perl) and newer is a full rewrite, and legacy inxi is not being supported since our time here on earth is finite (plus of course, one reason for the rewrite was to never have to work with Gawk-&amp;gt;Bash again!).&lt;/p&gt; &#xA;&lt;p&gt;Sys Admin type inxi users always get the first level of support. ie, convince us you run real systems and networks, and your issue shoots to the top of the line. As do any real bugs.&lt;/p&gt; &#xA;&lt;p&gt;Failure to supply requested debugger data will lead To a distinct lack of interest on our part to help you with a bug. ie, saying, oh, it doesn&#39;t work, doesn&#39;t cut it, unless it&#39;s obvious why.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;SUPPORT FORUMS&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://techpatterns.com/forums/forum-33.html&#34;&gt;https://techpatterns.com/forums/forum-33.html&lt;/a&gt; This is the best place to place support issues that may be complicated.&lt;/p&gt; &#xA;&lt;p&gt;If you are developer, use: DEVELOPER FORUMS: &lt;a href=&#34;https://techpatterns.com/forums/forum-32.html&#34;&gt;https://techpatterns.com/forums/forum-32.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;================================================================================ ABOUT INXI&lt;/h2&gt; &#xA;&lt;p&gt;inxi is a command line system information tool. It was forked from the ancient and mindbendingly perverse yet ingenius infobash, by locsmif.&lt;/p&gt; &#xA;&lt;p&gt;That was a buggy, impossible to update or maintain piece of software, so the fork fixed those core issues, and made it flexible enough to expand the utility of the original ideas. Locmsif has given his thumbs up to inxi, so don&#39;t be fooled by legacy infobash stuff you may see out there.&lt;/p&gt; &#xA;&lt;p&gt;inxi is lower case, except when I create a text header here in a file like this, but it&#39;s always lower case. Sometimes to follow convention I will use upper case inxi to start a sentence, but i find it a bad idea since invariably, someone will repeat that and type it in as the command name, then someone will copy that, and complain that the command: Inxi doesn&#39;t exist...&lt;/p&gt; &#xA;&lt;p&gt;The primary purpose of inxi is for support, and sys admin use. inxi is used widely for forum and IRC support, which is I believe it&#39;s most common function.&lt;/p&gt; &#xA;&lt;p&gt;If you are piping output to paste or post (or writing to file), inxi now automatically turns off color codes, so the inxi 2.3.xx and older suggestion to use -c 0 to turn off colors is no longer required.&lt;/p&gt; &#xA;&lt;p&gt;inxi strives to be as accurate as possible, but some things, like memory/ram data, depend on radically unreliable system self reporting based on OEM filling out data correctly, which doesn&#39;t often happen, so in those cases, you want to confirm things like ram capacity with a reputable hardware source, like crucial.com, which has the best ram hardware tool I know of.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;COMMITMENT TO LONG TERM STABILITY&lt;/h2&gt; &#xA;&lt;p&gt;The core mission of inxi is to always work on all systems all the time. Well, all systems with the core tools inxi requires to operate installed.&lt;/p&gt; &#xA;&lt;p&gt;What this means is this: you can have a 10 year old box, or probably 15, not sure, and you can install today&#39;s inxi on it, and it will run. It won&#39;t run fast, but it will run. I test inxi on a 200 MHz laptop from about 1998 to keep it honest. That&#39;s also what was used to optimize the code at some points, since differences appear as seconds, not 10ths or 100ths of seconds on old systems like that.&lt;/p&gt; &#xA;&lt;p&gt;inxi is being written, and tested, on Perl as old as 5.08, and will work on any system that runs Perl 5.08 or later. Pre 2.9.0 Gawk/Bash inxi will also run on any system no matter how old, within reason, so there should be no difference.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;FEATURES AND FUNCTIONALITY&lt;/h2&gt; &#xA;&lt;p&gt;inxi&#39;s functionality continues to grow over time, but it&#39;s also important to understand that each core new feature usually requires about 30 days work to get it stable. So new features are not trivial things, nor is it acceptable to submit a patch that works only on your personal system.&lt;/p&gt; &#xA;&lt;p&gt;One inxi feature (-s, sensors data), took about 2 hours to get working in the alpha test on the local dev system, but then to handle the massive chaos that is actual user sensors output and system variations, it took several rewrites and about 30 days to get somewhat reliable for about 98% or so of inxi users. So if your patch is rejected, it&#39;s likely because you have not thought it through adequately, have not done adequate testing cross system and platform, etc.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;SUPPORTED VERSIONS / DISTRO VERSIONS&lt;/h2&gt; &#xA;&lt;p&gt;Important: the only version of inxi that is supported is the latest current master branch version/commit. No issue reports or bug reports will be accepted for anything other than current master branch. No merges, attempts to patch old code from old versions, will be considered or accepted. If you are not updated to the latest inxi, do not file a bug report since it&#39;s probably been fixed ages ago. If your distro isn&#39;t packaging a current inxi, then file a bug report with your packager, not here.&lt;/p&gt; &#xA;&lt;p&gt;inxi is &#39;rolling release&#39; software, just like Debian Sid, Gentoo, or Arch Linux are rolling release GNU/Linux distributions, with no &#39;release points&#39;.&lt;/p&gt; &#xA;&lt;p&gt;Distributions should never feel any advantage comes from using old inxi versions because inxi has as a core promise to you, the end user, that it will never require new tools to run. New tools may be required for a new feature, but that will always be handled internally by inxi, and will not cause any operational failures. This is a promise, and I will never as long as I run this project violate that core inxi requirement. Old inxi is NOT more stable than current inxi, it&#39;s just old, and lacking in bug fixes and features. For pre 2.9 versions, it&#39;s also significantly slower, and with fewer features.&lt;/p&gt; &#xA;&lt;p&gt;Your distro not updating inxi ever, then failing to show something that is fixed in current inxi is not a bug, and please do not post it here. File the issue with your distro, not here. Updating inxi in a package pool will NEVER make anything break or fail, period. It has no version based dependencies, just software, like Perl 5.xx, lspci, etc. There is never a valid reason to not update inxi in a package pool of any distro in the world (with one single known exception, the Slackware based Puppy Linux release, which ships without the full Perl language. The Debian based one works fine).&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;SEMANTIC VERSION NUMBERING&lt;/h2&gt; &#xA;&lt;p&gt;inxi uses &#39;semantic&#39; version numbering, where the version numbers actually mean something.&lt;/p&gt; &#xA;&lt;p&gt;The version number follows these guidelines:&lt;/p&gt; &#xA;&lt;p&gt;Using example 3.2.28-6&lt;/p&gt; &#xA;&lt;p&gt;The first digit(s), &#34;3&#34;, is a major version, and almost never changes. Only a huge milestone, or if inxi reaches 3.9.xx, when it will simply move up to 4.0.0 just to keep it clean, would cause a change.&lt;/p&gt; &#xA;&lt;p&gt;The second digit(s), &#34;2&#34;, means a new real feature has been added. Not a tweaked existing feature, an actual new feature, which usually also has a new argument option letter attached. The second number goes from 0 to 9, and then rolls over the first after 9.&lt;/p&gt; &#xA;&lt;p&gt;The third, &#34;28&#34;, is for everything not covered by 1 and 2, can cover bug fixes, tweaks to existing features to add support for something, full on refactors of existing features, pretty much anything where you want the end user to know that they are not up to date. The third goes from 0 to 99, then rolls over the second.&lt;/p&gt; &#xA;&lt;p&gt;The fourth, &#34;6&#34;, is extra information about certain types of inxi updates. I don&#39;t usually use this last one in master branch, but you will see it in branches one,two, inxi-perl, inxi-legacy since that is used to confirm remote test system patch version updates.&lt;/p&gt; &#xA;&lt;p&gt;The fourth number, when used, will be alpha-numeric, a common version would be, in say, branch one: 2.2.28-b1-02, in other words: branch 1 patch version 2.&lt;/p&gt; &#xA;&lt;p&gt;In the past, now and then the 4th, or &#39;patch&#39;, number, was used in trunk/master branches of inxi, but I&#39;ve pretty much stopped doing that because it&#39;s confusing.&lt;/p&gt; &#xA;&lt;p&gt;inxi does not use the fiction of date based versioning because that imparts no useful information to the end user, when you look at say, 2.2.28, and you last had 2.2.11, you can know with some certainty that inxi has no major new features, just refactors or expansion of existing logic, enhancements, fine tunings, and bug fixes. And if you see one with 2.3.2, you will know that there is a new feature, almost, but not always, linked to one or more new line output items. Sometimes a the changes in the third number can be quite significant, sometimes it&#39;s a one line code or bug fix.&lt;/p&gt; &#xA;&lt;p&gt;A move to a new full version number, like the rewrite of inxi to Perl, would reflect in first version say, 2.9.01, then after a period of testing, where most little glitches are fixed, a move to 3.0.0. These almost never happen. I do not expect for example version 4.0 to ever happen after 3.0 (early 2018), unless so many new features are added that it actually hits 3.9, then it would roll over to 4.&lt;/p&gt; &#xA;&lt;h2&gt;================================================================================ BSD / UNIX&lt;/h2&gt; &#xA;&lt;p&gt;BSD support is not as complete as GNU/Linux support due to the fact some of the data simply is not available, or is structured in a way that makes it unique to each BSD, or is difficult to process. This fragmentation makes supporting BSDs far more difficult than it should be in the 21st century.&lt;/p&gt; &#xA;&lt;p&gt;The BSD support in inxi is a slowly evolving process. Evolving in the strict technical sense of evolutionary fitness, following fitness for purpose, that is (like OpenBSD&#39;s focus on security and high quality code, for instance), not as in progressing forwards. Features are being added as new data sources and types are discovered, and others are being dropped, as prior data sources degenerate or mutate to a point where trying to deal with them stops being interesting.&lt;/p&gt; &#xA;&lt;p&gt;Once it starts growing evident that a particular branch has hit a dead end and no longer warrants the time required to follow it to its extinction, support will be reduced to basically maintenance mode. In other words, inxi follows this evolutionary process, and does not try to revive dead or dying branches, since that&#39;s a waste of time.&lt;/p&gt; &#xA;&lt;p&gt;Note that due to time/practicality constraints, in general, only the original BSD branches will be supported: OpenBSD+derived; FreeBSD+derived; NetBSD+derived (in that order of priority, with a steep curve down from first to last). With the caveat that since it&#39;s my time being volunteered here, if the BSD in question has basically no users, or has bad tools, or no usable tools, or inconsistent or unreliable tools, or bad / weak data, or, worst, no actual clear reason to exist, I&#39;m not willing to spend time on it as a general rule.&lt;/p&gt; &#xA;&lt;p&gt;Other UNIX variants will generally only get the work required to make internal BSD flags get set and to remove visible output errors. I am not interested in them at all, zero. They are at this point basically historical artifacts, of interest only to computer museums as far as I&#39;m concerned.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;TRUE BSDs&lt;/h2&gt; &#xA;&lt;p&gt;All BSD issue reports unless trivial and obvious will require 1 of two things:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;a full --debug 21 data dump so I don&#39;t have to spend days trying to get the information I need to resolve the issue, file by painful file, from the issue poster. This is only the start of the process, and realistically requires 2. to complete it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;direct SSH access to at least a comparable live BSD version/system, that is, if the issue is on a laptop, access has to be granted to the laptop, or a similar one.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Option 2 is far preferred because in terms of my finite time on this planet of ours, the fact is, if I don&#39;t have direct (or SSH) access, I can&#39;t get much done, and the little I can get done will take 10 to 1000x longer than it should. That&#39;s my time spent (and sadly, with BSDs, largely wasted), not yours.&lt;/p&gt; &#xA;&lt;p&gt;I decided I have to adopt this much more strict policy with BSDs after wasting untold hours on trying to get good BSD support, only to see that support break a few years down the road as the data inxi relied on changed structure or syntax, or the tools changed, or whatever else makes the BSDs such a challenge to support. In the end, I realized, the only BSDs that are well supported are ones that I have had direct access to for debugging and testing.&lt;/p&gt; &#xA;&lt;p&gt;I will always accept patches that are well done, if they do not break GNU/Linux, and extend BSD support, or add new BSD features, and follow the internal inxi logic, and aren&#39;t too long. inxi sets initial internal flags to identify that it is a BSD system vs a GNU/Linux system, and preloads some data structures for BSD use, so make sure you understand what inxi is doing before you get into it.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;APPLE CORPORATION OSX&lt;/h2&gt; &#xA;&lt;p&gt;Non-free/libre OSX is in my view a BSD in name only. It is the least Unix-like operating system I&#39;ve ever seen that claims to be a Unix, its tools are mutated, its data randomly and non-standardly organized, and it totally fails to respect the &#39;spirit&#39; of Unix, even though it might pass some random tests that certify a system as a &#39;Unix&#39;.&lt;/p&gt; &#xA;&lt;p&gt;If you want me to use my time on OSX features or issues, you have to pay me, because Apple is all about money, not freedom (that&#39;s what the &#39;free&#39; in &#39;free software&#39; is referring to, not cost), and I&#39;m not donating my finite time in support of non-free operating systems, particularly not one with a market capitalization hovering around 1 trillion dollars, with usually well north of 100 billion dollars in liquid assetts.&lt;/p&gt; &#xA;&lt;h2&gt;================================================================================ MICROSOFT CORPORATION WINDOWS&lt;/h2&gt; &#xA;&lt;p&gt;To be quite clear, support for Windows will never happen, I don&#39;t care about Windows, and don&#39;t want to waste a second of my time on it. I also don&#39;t care about cygwin issues, beyond maybe hyper basic issues that can be handled with a line or two of code. inxi isn&#39;t going to ruin itself by trying to handle the silly Microsoft path separator , and obviously there&#39;s zero chance of my trying to support PowerShell or whatever else they come up with.&lt;/p&gt; &#xA;&lt;p&gt;While I would consider doing Apple stuff if you paid my hourly full market rates, in advance, I would not consider touching Windows for any amount of money. My best advice there is, fork inxi, and do it yourself if you want it. You&#39;ll soon run screaming from the project however, once you realize what a nightmare you&#39;ve stepped into.&lt;/p&gt; &#xA;&lt;p&gt;If you are interested in something like inxi for Windows, I suggest, rather than forking inxi, you just start out from scratch, and build the features up one by one, that will lead to much better code.&lt;/p&gt; &#xA;&lt;h3&gt;EOF&lt;/h3&gt;</summary>
  </entry>
</feed>