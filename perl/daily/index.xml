<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-08T01:42:18Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>moznion/Test--LimitDecimalPlaces</title>
    <updated>2023-01-08T01:42:18Z</updated>
    <id>tag:github.com,2023-01-08:/moznion/Test--LimitDecimalPlaces</id>
    <link href="https://github.com/moznion/Test--LimitDecimalPlaces" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Test module for floating-point number by limiting number of decimal places.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;=encoding utf8&lt;/p&gt; &#xA;&lt;p&gt;=head1 NAME&lt;/p&gt; &#xA;&lt;p&gt;Test::LimitDecimalPlaces - Compare numerical values by limiting number of decimal places&lt;/p&gt; &#xA;&lt;p&gt;=head1 VERSION&lt;/p&gt; &#xA;&lt;p&gt;This document describes Test::LimitDecimalPlaces version 0.01&lt;/p&gt; &#xA;&lt;p&gt;=head1 SYNOPSIS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;use Test::LimitDecimalPlaces tests =&amp;gt; 5; # Can specify the test plan.&#xA;&#xA;# Equality test by default number of decimal places&#xA;limit_ok(1.2345678, 1.2345678, &#39;Test the same floating-point values.&#39;);&#xA;&#xA;# Inequality test by default number of decimal places&#xA;limit_not_ok( 0.0000001, 0.0000002, &#39;Test different values&#39; );&#xA;&#xA;# Equality test by specified number of decimal places&#xA;limit_ok_by(0.00000001, 0.000000006, 8, &#39;Test similar value.&#39;) .&#34;\n&#34;; # number of decimal places is 8&#xA;&#xA;# Inequality test by specified number of decimal places&#xA;limit_not_ok_by( 0.00000001, 0.00000002, 8, &#39;Test different values.&#39; ); # number of decimal places is 8&#xA;&#xA;# Compare arrays&#xA;my @x = ( 0, 1, 0.1, 0.0000001, 0.0000001 );&#xA;my @y = ( 0, 1, 0.1, 0.0000001, 0.00000006 );&#xA;limit_ok(\@x, \@y, &#39;Compare arrays.&#39;);&#xA;&#xA;# Set a different default number of decimal places&#xA;use Test::LimitDecimalPlaces num_of_digits =&amp;gt; 6, tests =&amp;gt; 1;&#xA;limit_ok(1.234567, 1.234566, &#39;Test the similar floating-point values.&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;=head1 DESCRIPTION&lt;/p&gt; &#xA;&lt;p&gt;If compare floating point numbers normally, we cannot get the correct result on some environment. This module was made to solve this problem.&lt;/p&gt; &#xA;&lt;p&gt;This module provides test functions that can compare numerical values by limiting number of decimal places. These functions are using splintf() internally to limit number of decimal places.&lt;/p&gt; &#xA;&lt;p&gt;=head1 USAGE&lt;/p&gt; &#xA;&lt;p&gt;=over 4&lt;/p&gt; &#xA;&lt;p&gt;=item use Test::LimitDecimalPlaces;&lt;/p&gt; &#xA;&lt;p&gt;Use with no args, then number of decimal places to limit defaults 7.&lt;/p&gt; &#xA;&lt;p&gt;=item use Test::LimitDecimalPlaces num_of_digits =&amp;gt; 6;&lt;/p&gt; &#xA;&lt;p&gt;Use with argument of &#39;num_of_digits&#39;, then default number of decimal places to limit is set specified number.&lt;/p&gt; &#xA;&lt;p&gt;This parameter must be a number greater than or equal to zero.&lt;/p&gt; &#xA;&lt;p&gt;=item With test plan&lt;/p&gt; &#xA;&lt;p&gt;This module can specify test plan. Like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;use Test::LimitDecimalPlaces tests =&amp;gt; 1;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And this module can specify own options with test plan. Like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;use Test::LimitDecimalPlaces num_of_digits =&amp;gt; 6, tests =&amp;gt; 1;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Test::LimitDecimalPlaces-specific option must come first.&lt;/p&gt; &#xA;&lt;p&gt;=back&lt;/p&gt; &#xA;&lt;p&gt;=head1 FUNCTIONS&lt;/p&gt; &#xA;&lt;p&gt;=over 4&lt;/p&gt; &#xA;&lt;p&gt;=item limit_ok&lt;/p&gt; &#xA;&lt;p&gt;limit_ok($x, $y, &#39;Description of test&#39;);&lt;/p&gt; &#xA;&lt;p&gt;limit_ok(@x, @y, &#39;Description of test&#39;);&lt;/p&gt; &#xA;&lt;p&gt;This function compares and check equality between given values by limiting default number of decimal places.&lt;/p&gt; &#xA;&lt;p&gt;=item limit_ok_by&lt;/p&gt; &#xA;&lt;p&gt;limit_ok_by($x, $y, $num_of_digits, &#39;Description of test&#39;);&lt;/p&gt; &#xA;&lt;p&gt;limit_ok_by(@x, @y, $num_of_digits, &#39;Description of test&#39;);&lt;/p&gt; &#xA;&lt;p&gt;Action of this function is almost the same as limit_ok().&lt;/p&gt; &#xA;&lt;p&gt;But this function uses specified number of decimal places ($num_of_digits in case of the above instance).&lt;/p&gt; &#xA;&lt;p&gt;=item limit_not_ok&lt;/p&gt; &#xA;&lt;p&gt;limit_not_ok($x, $y, &#39;Description of test&#39;);&lt;/p&gt; &#xA;&lt;p&gt;limit_not_ok(@x, @y, &#39;Description of test&#39;);&lt;/p&gt; &#xA;&lt;p&gt;This function compares and check inequality between given values by limiting default number of decimal places.&lt;/p&gt; &#xA;&lt;p&gt;=item limit_not_ok_by&lt;/p&gt; &#xA;&lt;p&gt;limit_not_ok_by($x, $y, $num_of_digits, &#39;Description of test&#39;);&lt;/p&gt; &#xA;&lt;p&gt;limit_not_ok_by(@x, @y, $num_of_digits, &#39;Description of test&#39;);&lt;/p&gt; &#xA;&lt;p&gt;Action of this function is almost the same as limit_not_ok().&lt;/p&gt; &#xA;&lt;p&gt;But this function uses specified number of decimal places ($num_of_digits in case of the above instance).&lt;/p&gt; &#xA;&lt;p&gt;=back&lt;/p&gt; &#xA;&lt;p&gt;=head1 CONFIGURATION AND ENVIRONMENT&lt;/p&gt; &#xA;&lt;p&gt;Test::LimitDecimalPlaces requires no configuration files or environment variables.&lt;/p&gt; &#xA;&lt;p&gt;=head1 DEPENDENCIES&lt;/p&gt; &#xA;&lt;p&gt;Test::Exception (version 0.31 or later)&lt;/p&gt; &#xA;&lt;p&gt;=head1 INCOMPATIBILITIES&lt;/p&gt; &#xA;&lt;p&gt;None reported.&lt;/p&gt; &#xA;&lt;p&gt;=head1 BUGS AND LIMITATIONS&lt;/p&gt; &#xA;&lt;p&gt;No bugs have been reported.&lt;/p&gt; &#xA;&lt;p&gt;Please report any bugs or feature requests to C&lt;a href=&#34;mailto:bug-test-limitdecimalplaces@rt.cpan.org&#34;&gt;bug-test-limitdecimalplaces@rt.cpan.org&lt;/a&gt;, or through the web interface at L&lt;a href=&#34;http://rt.cpan.org&#34;&gt;http://rt.cpan.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;=head1 AUTHOR&lt;/p&gt; &#xA;&lt;p&gt;moznion C&amp;lt;&amp;lt; &lt;a href=&#34;mailto:moznion@gmail.com&#34;&gt;moznion@gmail.com&lt;/a&gt; &amp;gt;&amp;gt;&lt;/p&gt; &#xA;&lt;p&gt;=head1 LICENCE AND COPYRIGHT&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2012, moznion C&amp;lt;&amp;lt; &lt;a href=&#34;mailto:moznion@gmail.com&#34;&gt;moznion@gmail.com&lt;/a&gt; &amp;gt;&amp;gt;. All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;This module is free software; you can redistribute it and/or modify it under the same terms as Perl itself. See L&#xA; &lt;perlartistic&gt;&#xA;  .&#xA; &lt;/perlartistic&gt;&lt;/p&gt; &#xA;&lt;p&gt;=head1 DISCLAIMER OF WARRANTY&lt;/p&gt; &#xA;&lt;p&gt;BECAUSE THIS SOFTWARE IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE SOFTWARE, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE SOFTWARE &#34;AS IS&#34; WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE SOFTWARE IS WITH YOU. SHOULD THE SOFTWARE PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR, OR CORRECTION.&lt;/p&gt; &#xA;&lt;p&gt;IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE SOFTWARE AS PERMITTED BY THE ABOVE LICENCE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE SOFTWARE (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE SOFTWARE TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.&lt;/p&gt;</summary>
  </entry>
</feed>