<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-09T01:41:12Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>openSUSE/qem-dashboard</title>
    <updated>2023-01-09T01:41:12Z</updated>
    <id>tag:github.com,2023-01-09:/openSUSE/qem-dashboard</id>
    <link href="https://github.com/openSUSE/qem-dashboard" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A graphical user interface add-on for openSUSE/qem-bot&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;QEM Dashboard&lt;/h1&gt; &#xA;&lt;p&gt;The QEM Dashboard is a graphical user interface addon for &lt;a href=&#34;https://github.com/openSUSE/qem-bot&#34;&gt;qem-bot&lt;/a&gt;. It can show the current state for all incidents that are being processed. To help identify which tests are currently blocking which incidents.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To get started all you need is an empty PostgreSQL database and the following dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo zypper in -C postgresql-server postgresql-contrib&#xA;$ sudo zypper in -C perl-Mojolicious perl-Mojolicious-Plugin-Webpack \&#xA;  perl-Mojo-Pg perl-Cpanel-JSON-XS perl-JSON-Validator perl-IO-Socket-SSL nodejs16&#xA;$ npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Update the config file &lt;code&gt;dashboard.yml&lt;/code&gt; to point to your PostgreSQL database (and other services where appropriate):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;---&#xA;secrets:&#xA;  - some_secret_to_protect_sessions&#xA;pg: postgresql://postgres@127.0.0.1:5432/postgres&#xA;rabbitmq: amqp://user:password@rabbit.suse.de:5672&#xA;tokens:&#xA;  - a_secret_token_openQABot_will_use&#xA;status: 0&#xA;openqa:&#xA;  url: https://openqa.opensuse.org&#xA;obs:&#xA;  url: https://build.opensuse.org&#xA;smelt:&#xA;  url: https://smelt.suse.de&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And finally use the &lt;code&gt;mojo webpack&lt;/code&gt; development web server to make the web application available under &lt;code&gt;http://127.0.0.1:3000&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mojo webpack script/dashboard&#xA;Web application available at http://127.0.0.1:3000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;This project lives on GitHub at &lt;a href=&#34;https://github.com/openSUSE/qem-dashboard&#34;&gt;https://github.com/openSUSE/qem-dashboard&lt;/a&gt;. Feel free to add issues or send pull requests there.&lt;/p&gt; &#xA;&lt;h3&gt;Rules for Commits&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For git commit messages use the rules stated on &lt;a href=&#34;http://chris.beams.io/posts/git-commit/&#34;&gt;How to Write a Git Commit Message&lt;/a&gt; as a reference&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If this is too much hassle for you feel free to provide incomplete pull requests for consideration or create an issue with a code change proposal.&lt;/p&gt; &#xA;&lt;h3&gt;Local Testing&lt;/h3&gt; &#xA;&lt;p&gt;To execute all tests a PostgreSQL instance is needed and needs to specified in the environment variable &lt;code&gt;TEST_ONLINE&lt;/code&gt;. For a local PostgreSQL instance with a username and password one could call:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TEST_ONLINE=postgresql://postgres:postgres@localhost:5432/postgres prove -l t/*.t t/*.t.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;http://www.gnu.org/licenses/gpl-2.0.html&#34;&gt;GPLv2 license&lt;/a&gt;, see the COPYING file for details.&lt;/p&gt;</summary>
  </entry>
</feed>