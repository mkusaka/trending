<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-06T01:49:14Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tseemann/abricate</title>
    <updated>2022-07-06T01:49:14Z</updated>
    <id>tag:github.com,2022-07-06:/tseemann/abricate</id>
    <link href="https://github.com/tseemann/abricate" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üîé üíä Mass screening of contigs for antimicrobial and virulence genes&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/tseemann/abricate&#34;&gt;&lt;img src=&#34;https://travis-ci.org/tseemann/abricate.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPL%20v2-blue.svg?sanitize=true&#34; alt=&#34;License: GPL v2&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/Language-Perl_5-steelblue.svg?sanitize=true&#34; alt=&#34;Don&#39;t judge me&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ABRicate&lt;/h1&gt; &#xA;&lt;p&gt;Mass screening of contigs for antimicrobial resistance or virulence genes. It comes bundled with multiple databases: NCBI, CARD, ARG-ANNOT, Resfinder, MEGARES, EcOH, PlasmidFinder, Ecoli_VF and VFDB.&lt;/p&gt; &#xA;&lt;h2&gt;Is this the right tool for me?&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;It only supports contigs, not FASTQ reads&lt;/li&gt; &#xA; &lt;li&gt;It only detects acquired resistance genes, &lt;strong&gt;NOT&lt;/strong&gt; point mutations&lt;/li&gt; &#xA; &lt;li&gt;It uses a DNA sequence database, not protein&lt;/li&gt; &#xA; &lt;li&gt;It needs BLAST+ &amp;gt;= 2.7 and &lt;code&gt;any2fasta&lt;/code&gt; to be installed&lt;/li&gt; &#xA; &lt;li&gt;It&#39;s written in Perl &lt;span&gt;üê´&lt;/span&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you are happy with the above, then please continue! Otherwise consider using &lt;a href=&#34;https://github.com/sanger-pathogens/ariba&#34;&gt;Ariba&lt;/a&gt;, &lt;a href=&#34;https://cge.cbs.dtu.dk/services/ResFinder/&#34;&gt;Resfinder&lt;/a&gt;, &lt;a href=&#34;https://card.mcmaster.ca/analyze/rgi&#34;&gt;RGI&lt;/a&gt;, &lt;a href=&#34;https://github.com/katholt/srst2&#34;&gt;SRST2&lt;/a&gt;, &lt;a href=&#34;https://github.com/ncbi/amr#ncbi-antimicrobial-resistance-gene-finder-amrfinderplus&#34;&gt;AMRFinderPlus&lt;/a&gt;, &lt;em&gt;etc.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;% abricate 6159.fasta&#xA;Using database resfinder:  2130 sequences -  Mar 17, 2017&#xA;Processing: 6159.fna&#xA;Found 3 genes in 6159.fna&#xA;#FILE     SEQUENCE     START   END     STRAND GENE     COVERAGE     COVERAGE_MAP     GAPS  %COVERAGE  %IDENTITY  DATABASE  ACCESSION  PRODUCT        RESISTANCE&#xA;6159.fna  NC_017338.1  39177   41186   +      mecA_15  1-2010/2010  ===============  0/0   100.00     100.000    ncbi      AB505628   n/a&#x9;     FUSIDIC_ACID&#xA;6159.fna  NC_017338.1  727191  728356  -      norA_1   1-1166/1167  ===============  0/0   99.91      92.367     ncbi      M97169     n/a            FOSFOMYCIN&#xA;6159.fna  NC_017339.1  10150   10995   +      blaZ_32  1-846/846    ===============  0/0   100.00     100.000    ncbi      AP004832   betalactamase  BETA-LACTAM;PENICILLIN&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Brew&lt;/h3&gt; &#xA;&lt;p&gt;If you are using the &lt;a href=&#34;http://brew.sh/&#34;&gt;MacOS Homebrew&lt;/a&gt; or &lt;a href=&#34;http://brew.sh/linuxbrew/&#34;&gt;LinuxBrew&lt;/a&gt; packaging system:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install brewsci/bio/abricate&#xA;abricate --check&#xA;abricate --list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Bioconda&lt;/h3&gt; &#xA;&lt;p&gt;If you use &lt;a href=&#34;https://conda.io/docs/install/quick.html&#34;&gt;Conda&lt;/a&gt; follow the instructions to add the &lt;a href=&#34;https://bioconda.github.io/&#34;&gt;Bioconda channel&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda install -c conda-forge -c bioconda -c defaults abricate&#xA;abricate --check&#xA;abricate --list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Source&lt;/h3&gt; &#xA;&lt;p&gt;If you install from source, Abricate has the following package dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;any2fasta&lt;/code&gt; for sequence file format conversion&lt;/li&gt; &#xA; &lt;li&gt;BLAST+ &amp;gt;2.7.0 for &lt;code&gt;blastn&lt;/code&gt;, &lt;code&gt;makeblastdb&lt;/code&gt;, &lt;code&gt;blastdbcmd&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Perl modules: &lt;code&gt;LWP::Simple&lt;/code&gt;, &lt;code&gt;Bio::Perl&lt;/code&gt;, &lt;code&gt;JSON&lt;/code&gt;, &lt;code&gt;Path::Tiny&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;git&lt;/code&gt;, &lt;code&gt;unzip&lt;/code&gt;, &lt;code&gt;gzip&lt;/code&gt; for updating databases&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Most of these are easy to install on an Ubuntu-based system:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install bioperl ncbi-blast+ gzip unzip git \&#xA;  libjson-perl libtext-csv-perl libpath-tiny-perl liblwp-protocol-https-perl libwww-perl&#xA;git clone https://github.com/tseemann/abricate.git&#xA;./abricate/bin/abricate --check&#xA;./abricate/bin/abricate --setupdb&#xA;./abricate/bin/abricate ./abricate/test/assembly.fa&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Input&lt;/h2&gt; &#xA;&lt;p&gt;Abricate takes any sequence file that &lt;code&gt;any2fasta&lt;/code&gt; can convert to FASTA files (eg. Genbank, EMBL), and they can be optionally &lt;code&gt;gzip&lt;/code&gt; or &lt;code&gt;bzip2&lt;/code&gt; compressed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;abricate assembly.fa &#xA;abricate assembly.fa.gz&#xA;abricate assembly.gbk &#xA;abricate assembly.gbk.bz2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It can take multiple files at once too:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;abricate assembly.*&#xA;abricate /mnt/ncbi/bacteria/*.gbk.gz &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can provide it a &#34;file of file names&#34; (a &#34;FOFN&#34;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% cat test/fofn.txt&#xA;&#xA;assembly.fa&#xA;assembly.fa.gz&#xA;assembly.gbk&#xA;assembly.gbk.bz2&#xA;&#xA;% abricate --fofn test/fofn.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It does not accept raw FASTQ reads; please use &lt;a href=&#34;https://github.com/sanger-pathogens/ariba&#34;&gt;Ariba&lt;/a&gt; or &lt;a href=&#34;https://github.com/katholt/srst2&#34;&gt;SRTS2&lt;/a&gt; for that.&lt;/p&gt; &#xA;&lt;h2&gt;Output&lt;/h2&gt; &#xA;&lt;p&gt;Abricate produces a tap-separated output file with the following columns:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Column&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FILE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Ecoli.fna&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The filename this hit came from&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SEQUENCE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;contig000324&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The sequence in the filename&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;START&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;23423&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Start coordinate in the sequence&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;END&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;24117&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;End coordinate&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;STRAND&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;+&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Strand + or -&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GENE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tet(M)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;AMR gene name&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;COVERAGE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1-1920/1920&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;What proportion of the gene is in our sequence&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;COVERAGE_MAP&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;===============&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A visual represenation of the hit. &lt;code&gt;=&lt;/code&gt;=aligned, &lt;code&gt;.&lt;/code&gt;=unaligned, &lt;code&gt;/&lt;/code&gt;=has_gaps&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GAPS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1/4&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Openings / gaps in subject and query - possible psuedogene?&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;%COVERAGE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;100.00%&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Proportion of gene covered&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;%IDENTITY&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;99.95%&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Proportion of exact nucleotide matches&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DATABASE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ncbi&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The database this sequence comes from&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ACCESSION&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;NC_009632:49744-50476&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The genomic source of the sequence&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PRODUCT&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;aminoglycoside O-phosphotransferase APH(3&#39;)-IIIa&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Gene product (if available)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RESISTANCE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;TETRACYCLINE;FUSIDIC_ACID&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;putative antibiotic resistance phenotype, &lt;code&gt;;&lt;/code&gt;-separated&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Caveats&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Does not find mutational resistance, only acquired genes.&lt;/li&gt; &#xA; &lt;li&gt;Gap reporting incomplete&lt;/li&gt; &#xA; &lt;li&gt;Sometimes two heavily overlapping genes will be reported for the same locus&lt;/li&gt; &#xA; &lt;li&gt;Possible coverage calculation issues&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Databases&lt;/h2&gt; &#xA;&lt;p&gt;ABRicate comes with some pre-downloaded databases:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ncbi.nlm.nih.gov/bioproject/PRJNA313047&#34;&gt;NCBI AMRFinderPlus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://card.mcmaster.ca/&#34;&gt;CARD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cge.cbs.dtu.dk/services/ResFinder/&#34;&gt;Resfinder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://en.mediterranee-infection.com/article.php?laref=283%26titre=arg-annot&#34;&gt;ARG-ANNOT&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://megares.meglab.org/&#34;&gt;MEGARES&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/katholt/srst2/tree/master/data&#34;&gt;EcOH&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cge.cbs.dtu.dk/services/PlasmidFinder/&#34;&gt;PlasmidFinder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.mgc.ac.cn/VFs/&#34;&gt;VFDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/phac-nml/ecoli_vf&#34;&gt;Ecoli_VF&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can check what you have installed with the &lt;code&gt;--list&lt;/code&gt; command. This lists the available databases in TSV (or CSV with &lt;code&gt;--csv&lt;/code&gt;) and three columns:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% abricate --list&#xA;&#xA;DATABASE       SEQUENCES  DBTYPE  DATE&#xA;argannot       1749       nucl    2019-Jul-28&#xA;card           2241       nucl    2019-Jul-28&#xA;ecoh           597        nucl    2019-Jul-28&#xA;ecoli_vf       2701       nucl    2019-Jul-28&#xA;megares        6635       nucl    2020-Feb-20&#xA;ncbi           4324       nucl    2019-Jul-28&#xA;plasmidfinder  263        nucl    2019-Jul-28&#xA;resfinder      2434       nucl    2019-Jul-28&#xA;vfdb           2597       nucl    2019-Jul-28&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The default database is &lt;code&gt;ncbi&lt;/code&gt;. You can choose a different database using the &lt;code&gt;--db&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% abricate --db vfdb --quiet 6159.fa&#xA;&#xA;6159.fna  NC_017338.1  2724620  2726149  aur      1-1530/1530     ===============  0/0    100.00     99.346     vfdb      NP_647375&#x9;zinc metalloproteinase aureolysin&#xA;6159.fna  NC_017338.1  2766595  2767155  icaR     1-561/561       ===============  0/0    100.00     98.930     vfdb      NP_647402&#x9;N-acetylglucosaminyltransferase&#xA;6159.fna  NC_017338.1  2767319  2768557  icaA     1-1239/1239     ===============  0/0    100.00     99.677     vfdb      NP_647403&#x9;n/a&#xA;6159.fna  NC_017338.1  2768521  2768826  icaD     1-306/306       ===============  0/0    100.00     99.020     vfdb      NP_647404&#x9;n/a&#xA;6159.fna  NC_017338.1  2768823  2769695  icaB     1-873/873       ===============  0/0    100.00     99.542     vfdb      NP_647405&#x9;n/a&#xA;6159.fna  NC_017338.1  2769682  2770734  icaC     1-1053/1053     ===============  0/0    100.00     98.955     vfdb      NP_647406&#x9;n/a&#xA;6159.fna  NC_017338.1  2771040  2773085  lip      1-2046/2046     ===============  0/0    100.00     98.778     vfdb      NP_647407&#x9;triacylglycerol lipase precursor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Combining reports across samples&lt;/h2&gt; &#xA;&lt;p&gt;ABRicate can combine results into a simple matrix of gene presence/absence. An absent gene is denoted &lt;code&gt;.&lt;/code&gt; and a present gene is represented by its &#39;%COVERAGE`. This can be individual abricate reports, or a combined one.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Run abricate on each .fa file&#xA;% abricate 1.fna &amp;gt; 1.tab&#xA;% abricate 2.fna &amp;gt; 2.tab&#xA;&#xA;# Combine&#xA;% abricate --summary 1.tab 2.tab&#xA;&#xA;#FILE     NUM_FOUND  aac(6&#39;)-aph(2&#39;&#39;)_1  aadD_1  blaZ_32  blaZ_36  erm(A)_1  mecA_15  norA_1  spc_1  tet(M)_7&#xA;1.tab     8          100.00              100.00  .        100.00   100.00    100.00   99.91   100.00  100.00&#xA;2.tab     3          .                   .       100.00   .        .         100.00   99.91   .       .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or if you ran everything in a single report, it will work too.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% abricate *.fna &amp;gt; results.tab&#xA;% abricate --summary results.tab &amp;gt; summary.tab&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Updating the databases&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;# force download of latest version&#xA;% abricate-get_db --db ncbi --force&#xA;&#xA;# re-use existing download and just regenerate the database&#xA;% abricate-get_db --db ncbi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Making your own database&lt;/h2&gt; &#xA;&lt;p&gt;Let&#39;s say you want to make your own database called &lt;code&gt;tinyamr&lt;/code&gt;. All you need is a FASTA file of nucleotide sequences, say &lt;code&gt;tinyamr.fa&lt;/code&gt;. Ideally the sequence IDs would have the format &lt;code&gt;&amp;gt;DB~~~ID~~~ACC~~~RESISTANCES DESC&lt;/code&gt; where &lt;code&gt;DB&lt;/code&gt; is &lt;code&gt;tinyamr&lt;/code&gt;, &lt;code&gt;ID&lt;/code&gt; is the gene name, &lt;code&gt;ACC&lt;/code&gt; is an accession number of the sequence source, &lt;code&gt;RESISTANCES&lt;/code&gt; is the phenotype(s) to report, and &lt;code&gt;DESC&lt;/code&gt; can be any textual description.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% cd /path/to/abricate/db     # this is the --datadir default option&#xA;% mkdir tinyamr&#xA;% cp /path/to/tinyamr.fa sequences&#xA;% head -n 1 sequences&#xA;&amp;gt;tinyamr~~~GENE_ID~~~GENE_ACC~~RESISTANCES some description here&#xA;% abricate --setupdb&#xA;% # or just do this: makeblastdb -in sequences -title tinyamr -dbtype nucl -hash_index&#xA;&#xA;% abricate --list&#xA;DATABASE  SEQUENCES  DBTYPE  DATE&#xA;tinyamr   173        nucl    2019-Aug-28&#xA;&#xA;% abricate --db tinyamr screen_this.fasta&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Etymology&lt;/h2&gt; &#xA;&lt;p&gt;The name &#34;ABRicate&#34; was chosen as the first 3 letters are a common acronym for &#34;Anti-Biotic Resistance&#34;. It also has the form of an English &lt;em&gt;verb&lt;/em&gt;, which suggests the tool actual taking &#34;action&#34; against the problem of antibiotic resistance. It is also relatively unique in &lt;a href=&#34;https://www.google.com.au/search?q=abricate&#34;&gt;Google&lt;/a&gt;, and is unlikely to receive an infamous &lt;a href=&#34;http://www.acgt.me/blog/2014/12/1/time-for-a-new-jabba-award-for-just-another-bogus-bioinformatics-acronym&#34;&gt;JABBA Award&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you publish the results of Abricate please cite both the software &lt;em&gt;and&lt;/em&gt; the appropriate database you used with &lt;code&gt;--db&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Seemann T, &lt;em&gt;Abricate&lt;/em&gt;, &lt;strong&gt;Github&lt;/strong&gt; &lt;code&gt;https://github.com/tseemann/abricate&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;NCBI AMRFinderPlus - &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6811410&#34;&gt;doi: 10.1128/AAC.00483-19&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CARD - &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pubmed/27789705&#34;&gt;doi:10.1093/nar/gkw1004&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Resfinder - &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pubmed/22782487&#34;&gt;doi:10.1093/jac/dks261&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ARG-ANNOT - &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pubmed/24145532&#34;&gt;doi:10.1128/AAC.01310-13&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;VFDB - &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pubmed/26578559&#34;&gt;doi:10.1093/nar/gkv1239&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;PlasmidFinder - &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pubmed/24777092&#34;&gt;doi:10.1128/AAC.02412-14&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;EcOH - &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/&#34;&gt;doi:10.1099/mgen.0.000064&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MEGARES 2.00 - &lt;a href=&#34;https://academic.oup.com/nar/article/48/D1/D561/5624973&#34;&gt;doi:10.1093/nar/gkz1010&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;Please report problems to the &lt;a href=&#34;https://github.com/tseemann/abricate/issues&#34;&gt;Issues Page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tseemann/abricate/master/LICENSE&#34;&gt;GPLv2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;Torsten Seemann | &lt;a href=&#34;https://twitter.com/torstenseemann&#34;&gt;@torstenseemann&lt;/a&gt; | &lt;a href=&#34;http://thegenomefactory.blogspot.com/&#34;&gt;blog&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bagder/everything-curl</title>
    <updated>2022-07-06T01:49:14Z</updated>
    <id>tag:github.com,2022-07-06:/bagder/everything-curl</id>
    <link href="https://github.com/bagder/everything-curl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The book documenting the curl project, the curl tool, libcurl and more. Simply put: everything curl.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Everything curl&lt;/em&gt; is an extensive guide for all things curl. The project, the command-line tool, the library, how everything started and how it came to be the useful tool it is today. It explains how we work on developing it further, what it takes to use it, how you can contribute with code or bug reports and why millions of existing users use it.&lt;/p&gt; &#xA;&lt;p&gt;This book is meant to be interesting and useful to both casual readers and somewhat more experienced developers. It offers something for everyone to pick and choose from.&lt;/p&gt; &#xA;&lt;p&gt;Do not try to read it from front to back. Read the chapters or content you are curious about and flip back and forth as you see fit.&lt;/p&gt; &#xA;&lt;p&gt;I hope to run this book project as I do all other projects I work on: in the open, completely free to download and read. I want it to be free for anyone to comment on, and available for everyone to contribute to and help out with.&lt;/p&gt; &#xA;&lt;p&gt;Send your bug reports, pull requests or critiques to me and I will improve this book accordingly.&lt;/p&gt; &#xA;&lt;p&gt;This book will never be finished. I intend to keep working on it. While I may at some point consider it fairly complete, covering most aspects of the project (even if only that seems like an insurmountable goal), the curl project will continue to move so there will always be things to update in the book as well.&lt;/p&gt; &#xA;&lt;p&gt;This book project started at the end of September 2015.&lt;/p&gt; &#xA;&lt;h2&gt;Site&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://everything.curl.dev&#34;&gt;https://everything.curl.dev&lt;/a&gt; is the home of this book. It features accessible links to read the book online in a web version, or download a PDF version for offline reading. Unfortunately, the previously provided ebook formats are no longer provided by gitbook.com that we use to produce the book.&lt;/p&gt; &#xA;&lt;p&gt;(The &#34;export PDF&#34; option menu is only visible if the used web browser is wide enough.)&lt;/p&gt; &#xA;&lt;h2&gt;Content&lt;/h2&gt; &#xA;&lt;p&gt;All book content is hosted on GitHub in the &lt;a href=&#34;https://github.com/bagder/everything-curl&#34;&gt;https://github.com/bagder/everything-curl&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;With the hope of becoming just a co-author of this material, I am Daniel Stenberg. I founded the curl project and I am a developer at heart‚Äîfor fun and profit. I live and work in Stockholm, Sweden.&lt;/p&gt; &#xA;&lt;p&gt;All there is to know about Daniel can be found on &lt;a href=&#34;https://daniel.haxx.se/&#34;&gt;daniel.haxx.se&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;If you find mistakes, omissions, errors or blatant lies in this document, please send us a refreshed version of the affected paragraph and we will amend and update. We give credits to and recognize everyone who helps out!&lt;/p&gt; &#xA;&lt;p&gt;Preferably, you could submit &lt;a href=&#34;https://github.com/bagder/everything-curl/issues&#34;&gt;errors&lt;/a&gt; or &lt;a href=&#34;https://github.com/bagder/everything-curl/pulls&#34;&gt;pull requests&lt;/a&gt; on the book&#39;s GitHub page.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Lots of people have reported bugs, improved sections or otherwise helped making this book the success it is. These friends include the following:&lt;/p&gt; &#xA;&lt;p&gt;AaronChen0 on github, alawvt on github, Amin Khoshnood, amnkh on github, Anders Roxell, Angad Gill, Aris (Karim) Merchant, auktis on github, Ben Bodenmiller Ben Peachey, bookofportals on github, Bruno Baguette, Carlton Gibson, Chris DeLuca, Citizen Esosa, Dan Fandrich, Daniel Brown, Daniel Sabsay, David Piano, DrDoom74 at GitHub, Emil Hessman, enachos71 on github, ethomag on github, Fabian Keil, faterer on github, Frank Dana, Frank Hassanabad, Gautham B A, Geir Hauge, Harry Wright, Helena Udd, Hubert Lin, i-ky on github, infinnovation-dev on GitHub, Jay Ottinger, Jay Satiro, Jeroen Ooms, Johan Wigert, John Simpson, JohnCoconut on github, Jonas Forsberg, Josh Vanderhook, JoyIfBam5, KJM on github, knorr3 on github, lowttl on github, Luca Niccoli, Manuel on github, Marius ≈Ωilƒónas, Mark Koester, Martin van den Nieuwelaar, mehandes on github, Michael Kaufmann, Ms2ger, Nick Travers, Nicolas Brassard, Oscar on github, Oskar K√∂√∂k, Patrik Lundin, RekGRpth on github, Ryan McQuen, Saravanan Musuwathi Kesavan, Senthil Kumaran, Shusen Liu, Sonia Hamilton, Spiros Georgaras, Stephen, Steve Holme, Stian Hvatum, strupo on github, Viktor Szakats, Vitaliy T, Wayne Lai, Wieland Hoffmann, Ë∞≠‰πùÈºé&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This document is licensed under the &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34;&gt;Creative Commons Attribution 4.0 license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>toritori0318/p5-Yogafire</title>
    <updated>2022-07-06T01:49:14Z</updated>
    <id>tag:github.com,2022-07-06:/toritori0318/p5-Yogafire</id>
    <link href="https://github.com/toritori0318/p5-Yogafire" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Collection of tools useful for AWS(ec2)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Yogafire&lt;/h1&gt; &#xA;&lt;p&gt;Collection of tools useful for AWS(ec2).&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;cpanm &lt;a href=&#34;https://github.com/toritori0318/p5-Yogafire/tarball/master&#34;&gt;https://github.com/toritori0318/p5-Yogafire/tarball/master&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Commands&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Common commands:&#xA;                config: Yogafire Config Manager&#xA;                   use: Use profile&#xA;&#xA;Instance commands:&#xA;  change-instance-type: EC2 Change Instance Type&#xA;                   cmd: Execute remote command&#xA;       copy-and-launch: EC2 Copy and launch&#xA;          create-image: EC2 Create Image&#xA;         expand-volume: EC2 Expand Volume&#xA;                   get: Rsync get file from remote. (rsync -avuc)&#xA;             get-noopt: Rsync get file from remote.&#xA;                  info: EC2 Instance Infomation&#xA;                    ls: EC2 List Instance&#xA;                   put: Rsync put local file to remote.(rsync -avuc)&#xA;             put-noopt: Rsync put local file to remote.&#xA;                reboot: EC2 Reboot Instances&#xA;                   ssh: EC2 SSH Instance&#xA;              ssh-tmux: EC2 SSH Instance&#xA;                 start: EC2 Start Instances&#xA;                  stop: EC2 Stop Instances&#xA;             terminate: EC2 Terminate Instance&#xA;&#xA;Image commands:&#xA;                ls-ami: Image List&#xA;         run-instances: Running Instance&#xA;&#xA;Vpc commands:&#xA;             vpc-graph: VPC Graph View&#xA;              vpc-info: VPC List vpcs&#xA;&#xA;Plugin commands:&#xA;       all-region-info: All Region Info&#xA;            amiwatcher: EC2 image status watcher&#xA;            aws-status: Show AWS Status&#xA;       ec2-params-dump: EC2 Parameter Dumper&#xA;            ec2watcher: EC2 instance status watcher&#xA;                 hosts: Operation for hosts file&#xA;         instance-type: Show Instance Types&#xA;                region: Show AWS Regions&#xA;                render: Render Tool&#xA;             scale-ec2: Update EC2 Count&#xA;    show-copy-snapshot: Image List&#xA;             sshconfig: Operation for sshconfig&#xA;               summary: EC2 instance summary report&#xA;       update-ec2-tags: Update EC2 Tags&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tutorial&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://d.hatena.ne.jp/tori243/20130102/1357142925&#34;&gt;http://d.hatena.ne.jp/tori243/20130102/1357142925&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>