<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-06T01:39:07Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TheBeastofwar/linuxhacker</title>
    <updated>2024-02-06T01:39:07Z</updated>
    <id>tag:github.com,2024-02-06:/TheBeastofwar/linuxhacker</id>
    <link href="https://github.com/TheBeastofwar/linuxhacker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一款linux 内网渗透辅助工具&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;linuxhacker&lt;/h1&gt; &#xA;&lt;h2&gt;使用方法&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;  _ _                  _                _             &#xA; | (_)_ __  _   ___  _| |__   __ _  ___| | _____ _ __ &#xA; | | | &#39;_ \| | | \ \/ / &#39;_ \ / _` |/ __| |/ / _ \ &#39;__|&#xA; | | | | | | |_| |&amp;gt;  &amp;lt;| | | | (_| | (__|   &amp;lt;  __/ |   &#xA; |_|_|_| |_|\__,_/_/\_\_| |_|\__,_|\___|_|\_\___|_|&#xA;    &#x9;&#x9;&#x9;&#x9;version: 1.1.0&#xA;&#xA;Usage: linuxhacker -p [plugin] -c [choice] -q [other]&#xA;Options:&#xA;-p&#x9;choose the plugin&#xA;-c&#x9;choose the choice for the corresponding plugin&#xA;-q&#x9;other parameter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;插件:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;env_check/1 选项: docker(检查是否处于docker环境),vm(检查是否处于虚拟机中)&lt;/li&gt; &#xA; &lt;li&gt;privilege_check/2 选项: suid,sudo,cap,kernel&lt;/li&gt; &#xA; &lt;li&gt;maintance/3 选项: ssh_soft_link/ssh1,ssh_public_key/ssh2,ssh_key_logger/ssh3,ssh_stealth_login/ssh4,cron,file&lt;/li&gt; &#xA; &lt;li&gt;ssh_soft_link/ssh1 ssh软链接权限维持&lt;/li&gt; &#xA; &lt;li&gt;ssh_public_key/ssh2 ssh写公钥权限维持&lt;/li&gt; &#xA; &lt;li&gt;ssh_key_logger/ssh3 ssh key logger可以记录下别人ssh登录的密码&lt;/li&gt; &#xA; &lt;li&gt;ssh_stealth_login/ssh4 ssh隐身登录,w,last等命令查找不到&lt;/li&gt; &#xA; &lt;li&gt;cron 计划任务提权&lt;/li&gt; &#xA; &lt;li&gt;file 更改文件的atime,mtiem,实现webshell和一些恶意代码的权限维持 &lt;img src=&#34;https://github.com/TheBeastofwar/linuxhacker/assets/117450378/da5e7746-a74b-4f97-9a93-c40159d67536&#34; alt=&#34;7AOX{AWGI{Z}%99KQ8J76&#34;&gt; &lt;img src=&#34;https://github.com/TheBeastofwar/linuxhacker/assets/117450378/7e2f3549-90d3-410e-a4c6-d8e3a74d5c68&#34; alt=&#34;XF8~C6G2(KEBC8(`~K)E7MG&#34;&gt; &lt;img src=&#34;https://github.com/TheBeastofwar/linuxhacker/assets/117450378/a43b5abe-5016-4b70-87fc-3f8358875fa9&#34; alt=&#34;U~NJTH%OHJ5K IXLHKK9G6&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;详细使用方法&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;linuxhacker -p 1 -c docker&lt;/li&gt; &#xA; &lt;li&gt;linuxhacker -p 1 -c vm&lt;/li&gt; &#xA; &lt;li&gt;linuxhacker -p 2 -c suid -q /usr/sbin (如果没有-q,则默认/usr/bin)&lt;/li&gt; &#xA; &lt;li&gt;linuxhacker -p 2 -c sudo&lt;/li&gt; &#xA; &lt;li&gt;linuxhacker -p 2 -c cap -q /usr/sbin (如果没有-q,则默认/usr/bin)&lt;/li&gt; &#xA; &lt;li&gt;linuxhacker -p 3 -c ssh1 -q &#34;user port&#34;(输入ssh软链接的user和port,用空格相隔)&lt;/li&gt; &#xA; &lt;li&gt;linuxhacker -p 3 -c ssh2 -q &#34;publickey&#34;(输入ssh写公钥的公钥)&lt;/li&gt; &#xA; &lt;li&gt;linuxhacker -p 3 -c ssh3 (ssh key logger)&lt;/li&gt; &#xA; &lt;li&gt;linuxhacker -p 3 -c ssh4 (ssh 隐身登录)&lt;/li&gt; &#xA; &lt;li&gt;linuxhacker -p 3 -c file -q &#34;/var/www/html/index.php /var/www/html/shell.php&#34;(将/var/www/html/shell.php的atime和ctime改为和/var/www/html/index.php一样)&lt;/li&gt; &#xA; &lt;li&gt;linuxhacker -p 3 -c cron -q &#34;/etc/crontab#* * * * * root /root/test.sh&#34;(用#间隔)&lt;/li&gt; &#xA; &lt;li&gt;linuxhacker -p 3 -c command -q &#34;/usr/bin/whoami#/tmp#whoami ; /home/hacker.sh&#34;(用#间隔)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;免责声明&lt;/h2&gt; &#xA;&lt;p&gt;本工具仅面向&lt;strong&gt;合法授权&lt;/strong&gt;的企业安全建设行为，如您需要测试本工具的可用性，请自行搭建靶机环境。 在使用本工具进行检测时，您应确保该行为符合当地的法律法规，并且已经取得了足够的授权。&lt;strong&gt;请勿对非授权目标进行扫描。&lt;/strong&gt; 如您在使用本工具的过程中存在任何非法行为，您需自行承担相应后果，我们将不承担任何法律及连带责任。 在安装并使用本工具前，请您&lt;strong&gt;务必审慎阅读、充分理解各条款内容&lt;/strong&gt;，限制、免责条款或者其他涉及您重大权益的条款可能会以加粗、加下划线等形式提示您重点注意。 除非您已充分阅读、完全理解并接受本协议所有条款，否则，请您不要安装并使用本工具。您的使用行为或者您以其他任何明示或者默示方式表示接受本协议的，即视为您已阅读并同意本协议的约束。&lt;/p&gt; &#xA;&lt;h2&gt;开发日志&lt;/h2&gt; &#xA;&lt;h3&gt;2023 11.12 v1.0.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可探测当前linux系统所处环境(是否是docker,vm等)&lt;/li&gt; &#xA; &lt;li&gt;可探测当前linux系统的各种提权方法(suid,sudo等)&lt;/li&gt; &#xA; &lt;li&gt;自带一些权限维持的模块&lt;/li&gt; &#xA; &lt;li&gt;遗留问题:1.需要将perl写的内核漏洞探测工具用go重构 2.suid,sudo,capilities的if语句有中屎山代码的感觉 3.需要更改让部分模块的输入从fmt.Scanln改为直接Options传参,这样在使用webshell管理工具的时候能方便些&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2023 11.18 v1.1.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;将交互型输入改为在命令行用-q参数输入&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>