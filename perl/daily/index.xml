<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-29T01:34:59Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>shah/docs-generator</title>
    <updated>2022-12-29T01:34:59Z</updated>
    <id>tag:github.com,2022-12-29:/shah/docs-generator</id>
    <link href="https://github.com/shah/docs-generator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Document generator for files with special naming conventions.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This script generates an arbitrary number of files using file names with random data that follow a specific naming convention.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;The &lt;em&gt;generate.pl&lt;/em&gt; script&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The perl app that generates all the test data. It reads data from the randomizable-data directory and then randomly puts that data together into file names and then writes out sample files in the generated-files directory.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;The &lt;em&gt;randomizable-data&lt;/em&gt; directory&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This folder contains simple text files that include the values that should be used for random data. Each file has a header line that describes what data is present and then each line of a particular data file has as many values as the randomizer in generate.pl should use. You can add as many values in each files as you&#39;d like, and you can add as many files as you like if you need new &#34;data types&#34; to put into your generated file names.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;The &lt;em&gt;generated-files&lt;/em&gt; folder&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The folder in which all the files are generated; you should delete the contents of this folder (not the actual folder, though) before re-running the script.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>manakai/perl-web-datetime</title>
    <updated>2022-12-29T01:34:59Z</updated>
    <id>tag:github.com,2022-12-29:/manakai/perl-web-datetime</id>
    <link href="https://github.com/manakai/perl-web-datetime" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;=encoding UTF-8&lt;/p&gt; &#xA;&lt;p&gt;=head1 NAME&lt;/p&gt; &#xA;&lt;p&gt;perl-web-datetime - Date and time for Web&lt;/p&gt; &#xA;&lt;p&gt;=head1 DESCRIPTION&lt;/p&gt; &#xA;&lt;p&gt;The perl-web-datetime package contains modules for handling date and time values in the context of Web-related protocols and formats.&lt;/p&gt; &#xA;&lt;p&gt;=head1 MODULES&lt;/p&gt; &#xA;&lt;p&gt;Following modules are available:&lt;/p&gt; &#xA;&lt;p&gt;=over 4&lt;/p&gt; &#xA;&lt;p&gt;=item L&lt;a href=&#34;Web::DateTime::Parser&#34;&gt;Web::DateTime::Parser&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Parser for date and time string values, which can also be used for conformance checking of those values.&lt;/p&gt; &#xA;&lt;p&gt;=item L&lt;a href=&#34;Web::DateTime&#34;&gt;Web::DateTime&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Parsed date and time object, which has component accessors, serializers, and cast methods.&lt;/p&gt; &#xA;&lt;p&gt;=item L&lt;a href=&#34;Web::DateTime::TimeZone&#34;&gt;Web::DateTime::TimeZone&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Parsed time zone object, which has component accessors and a serializer.&lt;/p&gt; &#xA;&lt;p&gt;=item L&lt;a href=&#34;Web::DateTime::Duration&#34;&gt;Web::DateTime::Duration&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Parsed duration object, which has component accessors and serializers.&lt;/p&gt; &#xA;&lt;p&gt;=item L&lt;a href=&#34;Web::DateTime::WeeklyTimeRange&#34;&gt;Web::DateTime::WeeklyTimeRange&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Parsed weekly time range object, which has a serializer.&lt;/p&gt; &#xA;&lt;p&gt;=item L&lt;a href=&#34;Web::DateTime::Clock&#34;&gt;Web::DateTime::Clock&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Clocks.&lt;/p&gt; &#xA;&lt;p&gt;=back&lt;/p&gt; &#xA;&lt;p&gt;=head1 SPECIFICATIONS&lt;/p&gt; &#xA;&lt;p&gt;Date and time formats defined by following specifications and protocols are supported (for details, see documentation of relevant modules):&lt;/p&gt; &#xA;&lt;p&gt;HTML, Schema.org, Data-Vocabulary.org, HTTP, Cookies, JavaScript, Atom 0.3, Atom 1.0, RSS 1.0, RSS 2.0, OGP, RDF, PKIX.&lt;/p&gt; &#xA;&lt;p&gt;=head1 SEE ALSO&lt;/p&gt; &#xA;&lt;p&gt;SuikaWiki:Webの日時形式 &lt;a href=&#34;https://wiki.suikawiki.org/n/Web%E3%81%AE%E6%97%A5%E6%99%82%E5%BD%A2%E5%BC%8F&#34;&gt;https://wiki.suikawiki.org/n/Web%E3%81%AE%E6%97%A5%E6%99%82%E5%BD%A2%E5%BC%8F&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;=head1 AUTHOR&lt;/p&gt; &#xA;&lt;p&gt;Wakaba &lt;a href=&#34;mailto:wakaba@suikawiki.org&#34;&gt;wakaba@suikawiki.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;=head1 LICENSE&lt;/p&gt; &#xA;&lt;p&gt;Copyright 2008-2016 Wakaba &lt;a href=&#34;mailto:wakaba@suikawiki.org&#34;&gt;wakaba@suikawiki.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.&lt;/p&gt; &#xA;&lt;p&gt;=cut&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>shoptime/tks</title>
    <updated>2022-12-29T01:34:59Z</updated>
    <id>tag:github.com,2022-12-29:/shoptime/tks</id>
    <link href="https://github.com/shoptime/tks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Timekeeping sucks. TKS makes it suck less.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TKS: Time Keeping Sucks&lt;/h1&gt; &#xA;&lt;p&gt;Everyone knows that timekeeping sucks. TKS is designed to make it suck less. You can keep track of your time in a human-readable file, then run a script to import the data straight into your timekeeping system.&lt;/p&gt; &#xA;&lt;p&gt;TKS has several nice features, such as vim syntax highlighting for the timekeeping file, debian packaged for easy installation, a checking mode where you can see what TKS will do without committing the data to WRMS and automatic commenting out of timesheet entries committed to WRMS.&lt;/p&gt; &#xA;&lt;p&gt;TKS is written by Nigel McNie and Martyn Smith.&lt;/p&gt; &#xA;&lt;p&gt;You can find out more about TKS on the wikipage:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://wiki.wgtn.cat-it.co.nz/wiki/TKS&#34;&gt;http://wiki.wgtn.cat-it.co.nz/wiki/TKS&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To install, type `make&#39; to build a debian package in the parent directory, and install that.&lt;/p&gt; &#xA;&lt;p&gt;TKS is copyright (C) 2008 - 2009, Catalyst IT Ltd.&lt;/p&gt; &#xA;&lt;p&gt;This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt; &#xA;&lt;p&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.&lt;/p&gt; &#xA;&lt;p&gt;You should have received a copy of the GNU General Public License along with this program. If not, see &lt;a href=&#34;http://www.gnu.org/licenses/&#34;&gt;http://www.gnu.org/licenses/&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>