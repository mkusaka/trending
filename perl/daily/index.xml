<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-06T01:34:59Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rabbitXIII/cmsc423-proj4</title>
    <updated>2023-01-06T01:34:59Z</updated>
    <id>tag:github.com,2023-01-06:/rabbitXIII/cmsc423-proj4</id>
    <link href="https://github.com/rabbitXIII/cmsc423-proj4" rel="alternate"></link>
    <summary type="html">&lt;p&gt;hash-overlapper for AMOS. project 4 for bioinformatics algorithms class&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Project 4 Rohit Gopal&lt;/p&gt; &#xA;&lt;p&gt;CMSC423 0101&lt;/p&gt; &#xA;&lt;p&gt;The files included for this submission are: proj4_rgopal.pl README run_pipeline.sh&lt;/p&gt; &#xA;&lt;p&gt;For everything all inclusive:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Assumptions:&#xA;&#x9;Current directory contains..&#xA;&#xA;&#x9;proj4_rgopal.pl &#xA;&#x9;toAmos_new &#xA;&#x9;bank-transact &#xA;&#x9;tigger &#xA;&#x9;make-consensus &#xA;&#x9;bank2fasta &#xA;&#xA;&#xA;Command:&#xA;&#x9;./run_pipeline [INPUT_SEQUENCES] [OUTPUT_FASTA]&#xA;&#x9;&#xA;&#x9;INPUT_SEQUENCES is a file of many reads&#xA;&#x9;OUTPUT_FASTA is the resulting finished consensus &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To Run the Project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Assumptions:&#xA;&#x9;HOXD2 Matrix&#xA;&#x9;proj4_rgopal.pl&#xA;&#x9;Fasta file with many sequences&#x9;&#xA;&#xA;Command:&#xA;&#xA;./proj4_rgopal.pl [sequences fasta] [hoxd2 file] [output ovl] [gap_start] [gap_extend] [minimum idenitity%] [min overlap between seqeunces] [max hang]&#xA;&#xA;&#xA;For example:&#xA;&#xA;&#x9;./proj4_rgopal.pl ../amos/small/crp177.seq ../cmsc423-proj3/testcases/HOXD2.txt my_output.ovl -2000 -200 98 45 60&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you so choose, you can also run the script with only the first three fields. The default values will kick in as follows:&lt;/p&gt; &#xA;&lt;p&gt;gap_start -2000 gap_extend -200 min identity% 98 min overlap 45 max hang 60&lt;/p&gt; &#xA;&lt;p&gt;Notes: This script is VERY slow... the SW Algorithm is likely very slow and needs to be optimized and some of the data structures are used out of convenience, but could impact performance It doesn&#39;t help that perl isn&#39;t too quick either. One option would be to just spawn processes every time we want to do a SW Alignment. The only issue here was that Parallel::ForkManager couldn&#39;t be used, since Parallel doesn&#39;t seem to be installed on the grace servers. :(&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fasheng/vimwiki2org</title>
    <updated>2023-01-06T01:34:59Z</updated>
    <id>tag:github.com,2023-01-06:/fasheng/vimwiki2org</id>
    <link href="https://github.com/fasheng/vimwiki2org" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Convert VimWiki files to Emacs Org-Mode&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;description&lt;/h2&gt; &#xA;&lt;p&gt;vimwiki2org.pl is a simple tool to convert vimwiki file to emacs org-mode file&lt;/p&gt; &#xA;&lt;h2&gt;usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;vimwiki2org.pl index.wiki [file ...]&#xA;vimwiki2org.pl [options] -- index.wiki [file ...]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;print help message&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  vimwiki2org.pl --help&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;show man page&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  vimwiki2org.pl --man&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;convert the example vimwikie files to a org-mode file&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  vimwiki2org.pl /usr/share/vimwiki2org/example/index.wiki &amp;gt; vimwiki.org&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;convert vimwikie files, give the diary index file&#39;s relative path, and will check and append the lonely files in the same folder or sub folders with the main index file&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  vimwiki2org.pl -d diary/diary.wiki -L fix -- index.wiki &amp;gt; vimwiki.org&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;install and uninstall&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;depends&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;perl 5.14&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;compatibility&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;test ok on vimwiki 2.0.1.stu&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;install&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  make install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;uninstall&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  make uninstall&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;binary files&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;/usr/bin/vimwiki2org&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;a wrapper to run the main script vimwiki2org.pl&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>