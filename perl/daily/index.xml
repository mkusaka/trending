<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-15T01:49:57Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pluiez/NLLB-inference</title>
    <updated>2022-07-15T01:49:57Z</updated>
    <id>tag:github.com,2022-07-15:/pluiez/NLLB-inference</id>
    <link href="https://github.com/pluiez/NLLB-inference" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NLLB-inference&lt;/h1&gt; &#xA;&lt;p&gt;A convenient script for running &lt;a href=&#34;https://github.com/facebookresearch/fairseq/tree/nllb/examples/nllb/modeling&#34;&gt;NLLB&lt;/a&gt; generation/inference without tangling with the config files.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Get the &lt;a href=&#34;https://github.com/facebookresearch/fairseq/tree/nllb/examples/nllb/modeling#open-sourced-models-and-metrics&#34;&gt;NLLB checkpoint&lt;/a&gt; and then find the code mapping for your languages from &lt;a href=&#34;https://github.com/facebookresearch/flores/tree/main/flores200#languages-in-flores-200&#34;&gt;Languages in FLORES-200&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt;: the following script only deals with dense model with params ranged from 600M to 3.3B, and inference with MoE requires extra arguments. The file size of the MoE model is 337G, actually most people don&#39;t have the resources to get such a large model running at least in a short term.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;clone or update the &lt;a href=&#34;https://github.com/facebookresearch/fairseq&#34;&gt;fairseq&lt;/a&gt; repo, then switch to NLLB branch.&lt;/li&gt; &#xA; &lt;li&gt;install &lt;a href=&#34;https://github.com/google/sentencepiece&#34;&gt;sentencepiece&lt;/a&gt; for command line usage.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Pre-Processing and Inference&lt;/h3&gt; &#xA;&lt;p&gt;The following is an example translation from Chinese to English using Distilled-600M checkpoint:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bash translate.sh /path/to/checkpoints/checkpoint.NLLB-200-Distilled-600M.pt zho_Hans eng_Latn &amp;lt;&amp;lt;&amp;lt; &#39;感谢Facebook为大规模多语言机器翻译做出的开源贡献&#39;&#xA;S-0     __zho_Hans__ ▁ 感谢 Facebook 为 大 规模 多 语言 机 器 翻 译 做 出的 开 源 贡献&#xA;W-0     1.238   seconds&#xA;H-0     -0.5970411896705627     ▁Thanks ▁to ▁Facebook ▁for ▁its ▁open - so urce ▁contribution ▁to ▁large - s cale ▁mul til ingu al ▁machine ▁translation&#xA;D-0     -0.5970411896705627     ▁Thanks ▁to ▁Facebook ▁for ▁its ▁open - so urce ▁contribution ▁to ▁large - s cale ▁mul til ingu al ▁machine ▁translation&#xA;P-0     -0.1890 -1.8898 -0.2183 -0.3387 -0.5034 -1.0127 -1.3067 -1.7645 -0.1620 -0.0765 -0.7432 -0.3358 -2.9018 -0.4164 -0.1267 -0.0749 -0.4482 -0.0686 -0.0824 -0.1171 -0.1867 -0.3008 -0.4675&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Post-Processing&lt;/h3&gt; &#xA;&lt;p&gt;The postprocessing script is not included here, you can follow the 2 steps below to postprocess the output:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;spm_decode&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sed &#39;s/^&amp;lt;MINED_DATA&amp;gt; //g&#39;&lt;/code&gt; to remove the potential dataset tag token.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>sjohnston/tools</title>
    <updated>2022-07-15T01:49:57Z</updated>
    <id>tag:github.com,2022-07-15:/sjohnston/tools</id>
    <link href="https://github.com/sjohnston/tools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;misc tools&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>cosimo/perl5-imager-skindetector</title>
    <updated>2022-07-15T01:49:57Z</updated>
    <id>tag:github.com,2022-07-15:/cosimo/perl5-imager-skindetector</id>
    <link href="https://github.com/cosimo/perl5-imager-skindetector" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Source repository for Perl5 Imager::SkinDetector CPAN module&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Imager-SkinDetector&lt;/p&gt; &#xA;&lt;p&gt;Have you ever needed to know if an image has some amount of skin tone color? Did you find some tool to do it? Free software? If so, please tell me which one!&lt;/p&gt; &#xA;&lt;p&gt;If not, welcome to Imager-SkinDetector. It uses Imager as processing engine, so it has a decent speed. Don&#39;t expect miracles, though.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;m planning to use this as part of a set of tools to automatically classify images as nudity or &#34;containing skin&#34;. It&#39;s only a plan. I might succeed one day. Most probably I won&#39;t. :-)&lt;/p&gt; &#xA;&lt;p&gt;Feel free to provide feedback and code.&lt;/p&gt; &#xA;&lt;p&gt;INSTALLATION&lt;/p&gt; &#xA;&lt;p&gt;To install this module, run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perl Makefile.PL&#xA;make&#xA;make test&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;SUPPORT AND DOCUMENTATION&lt;/p&gt; &#xA;&lt;p&gt;After installing, you can find documentation for this module with the perldoc command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perldoc Imager::SkinDetector&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also look for information at:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;RT, CPAN&#39;s request tracker&#xA;    http://rt.cpan.org/NoAuth/Bugs.html?Dist=Imager-SkinDetector&#xA;&#xA;AnnoCPAN, Annotated CPAN documentation&#xA;    http://annocpan.org/dist/Imager-SkinDetector&#xA;&#xA;CPAN Ratings&#xA;    http://cpanratings.perl.org/d/Imager-SkinDetector&#xA;&#xA;Search CPAN&#xA;    http://search.cpan.org/dist/Imager-SkinDetector&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;COPYRIGHT AND LICENCE&lt;/p&gt; &#xA;&lt;p&gt;Copyright (C) 2008 Cosimo Streppone, &lt;a href=&#34;mailto:cosimo@cpan.org&#34;&gt;cosimo@cpan.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.&lt;/p&gt;</summary>
  </entry>
</feed>