<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-31T01:49:17Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>qt/qtqa</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/qt/qtqa</id>
    <link href="https://github.com/qt/qtqa" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Qt QA Scripts&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>sullo/nikto</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/sullo/nikto</id>
    <link href="https://github.com/sullo/nikto" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Nikto web server scanner&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;nikto&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.patreon.com/sullo&#34;&gt;&lt;img src=&#34;https://cirt.net/images/patreon.png&#34; alt=&#34;alt text&#34; title=&#34;Become a patron of Nikto!&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Nikto web server scanner - &lt;a href=&#34;https://cirt.net/Nikto2&#34;&gt;https://cirt.net/Nikto2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Full documentation - &lt;a href=&#34;https://github.com/sullo/nikto/wiki&#34;&gt;https://github.com/sullo/nikto/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run normally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/sullo/nikto&#xA;# Main script is in program/&#xA;cd nikto/program&#xA;# Run using the shebang interpreter&#xA;./nikto.pl -h http://www.example.com&#xA;# Run using perl (if you forget to chmod)&#xA;perl nikto.pl -h http://www.example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run as a Docker container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/sullo/nikto.git&#xA;cd nikto&#xA;docker build -t sullo/nikto .&#xA;# Call it without arguments to display the full help&#xA;docker run --rm sullo/nikto&#xA;# Basic usage&#xA;docker run --rm sullo/nikto -h http://www.example.com&#xA;# To save the report in a specific format, mount /tmp as a volume:&#xA;docker run --rm -v $(pwd):/tmp sullo/nikto -h http://www.example.com -o /tmp/out.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Basic usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;   Options:&#xA;       -ask+               Whether to ask about submitting updates&#xA;                               yes   Ask about each (default)&#xA;                               no    Don&#39;t ask, don&#39;t send&#xA;                               auto  Don&#39;t ask, just send&#xA;       -Cgidirs+           Scan these CGI dirs: &#34;none&#34;, &#34;all&#34;, or values like &#34;/cgi/ /cgi-a/&#34;&#xA;       -config+            Use this config file&#xA;       -Display+           Turn on/off display outputs:&#xA;                               1     Show redirects&#xA;                               2     Show cookies received&#xA;                               3     Show all 200/OK responses&#xA;                               4     Show URLs which require authentication&#xA;                               D     Debug output&#xA;                               E     Display all HTTP errors&#xA;                               P     Print progress to STDOUT&#xA;                               S     Scrub output of IPs and hostnames&#xA;                               V     Verbose output&#xA;       -dbcheck           Check database and other key files for syntax errors&#xA;       -evasion+          Encoding technique:&#xA;                               1     Random URI encoding (non-UTF8)&#xA;                               2     Directory self-reference (/./)&#xA;                               3     Premature URL ending&#xA;                               4     Prepend long random string&#xA;                               5     Fake parameter&#xA;                               6     TAB as request spacer&#xA;                               7     Change the case of the URL&#xA;                               8     Use Windows directory separator (\)&#xA;                               A     Use a carriage return (0x0d) as a request spacer&#xA;                               B     Use binary value 0x0b as a request spacer&#xA;        -Format+           Save file (-o) format:&#xA;                               csv   Comma-separated-value&#xA;                               htm   HTML Format&#xA;                               msf+  Log to Metasploit&#xA;                               nbe   Nessus NBE format&#xA;                               txt   Plain text&#xA;                               xml   XML Format&#xA;                               (if not specified the format will be taken from the file extension passed to -output)&#xA;       -Help              Extended help information&#xA;       -host+             Target host&#xA;       -IgnoreCode        Ignore Codes--treat as negative responses&#xA;       -id+               Host authentication to use, format is id:pass or id:pass:realm&#xA;       -key+              Client certificate key file&#xA;       -list-plugins      List all available plugins, perform no testing&#xA;       -maxtime+          Maximum testing time per host&#xA;       -mutate+           Guess additional file names:&#xA;                               1     Test all files with all root directories&#xA;                               2     Guess for password file names&#xA;                               3     Enumerate user names via Apache (/~user type requests)&#xA;                               4     Enumerate user names via cgiwrap (/cgi-bin/cgiwrap/~user type requests)&#xA;                               5     Attempt to brute force sub-domain names, assume that the host name is the parent domain&#xA;                               6     Attempt to guess directory names from the supplied dictionary file&#xA;       -mutate-options    Provide information for mutates&#xA;       -nointeractive     Disables interactive features&#xA;       -nolookup          Disables DNS lookups&#xA;       -nossl             Disables the use of SSL&#xA;       -no404             Disables nikto attempting to guess a 404 page&#xA;       -output+           Write output to this file (&#39;.&#39; for auto-name)&#xA;       -Pause+            Pause between tests (seconds, integer or float)&#xA;       -Plugins+          List of plugins to run (default: ALL)&#xA;       -port+             Port to use (default 80)&#xA;       -RSAcert+          Client certificate file&#xA;       -root+             Prepend root value to all requests, format is /directory&#xA;       -Save              Save positive responses to this directory (&#39;.&#39; for auto-name)&#xA;       -ssl               Force ssl mode on port&#xA;       -Tuning+           Scan tuning:&#xA;                               1     Interesting File / Seen in logs&#xA;                               2     Misconfiguration / Default File&#xA;                               3     Information Disclosure&#xA;                               4     Injection (XSS/Script/HTML)&#xA;                               5     Remote File Retrieval - Inside Web Root&#xA;                               6     Denial of Service&#xA;                               7     Remote File Retrieval - Server Wide&#xA;                               8     Command Execution / Remote Shell&#xA;                               9     SQL Injection&#xA;                               0     File Upload&#xA;                               a     Authentication Bypass&#xA;                               b     Software Identification&#xA;                               c     Remote Source Inclusion&#xA;                               x     Reverse Tuning Options (i.e., include all except specified)&#xA;       -timeout+          Timeout for requests (default 10 seconds)&#xA;       -Userdbs           Load only user databases, not the standard databases&#xA;                               all   Disable standard dbs and load only user dbs&#xA;                               tests Disable only db_tests and load udb_tests&#xA;       -until             Run until the specified time or duration&#xA;       -update            Update databases and plugins from CIRT.net&#xA;       -useproxy          Use the proxy defined in nikto.conf&#xA;       -Version           Print plugin and database versions&#xA;       -vhost+            Virtual host (for Host header)&#xA;              + requires a value&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Copyright (C) 2001 Chris Sullo&lt;/p&gt; &#xA;&lt;p&gt;This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; version 2 of the License only.&lt;/p&gt; &#xA;&lt;p&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.&lt;/p&gt; &#xA;&lt;p&gt;You should have received a copy of the GNU General Public License along with this program; if not, write to Free Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>get-iplayer/get_iplayer</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/get-iplayer/get_iplayer</id>
    <link href="https://github.com/get-iplayer/get_iplayer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A utility for downloading TV and radio programmes from BBC iPlayer and BBC Sounds&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;get_iplayer: BBC iPlayer/BBC Sounds Indexing Tool and PVR&lt;/h2&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Downloads TV and radio programmes from BBC iPlayer/BBC Sounds&lt;/li&gt; &#xA; &lt;li&gt;Allows multiple programmes to be downloaded using a single command&lt;/li&gt; &#xA; &lt;li&gt;Indexing of most available iPlayer/Sounds catch-up programmes from previous 30 days (not Red Button, iPlayer Exclusive, or Podcast-only)&lt;/li&gt; &#xA; &lt;li&gt;Caching of programme index with automatic updating&lt;/li&gt; &#xA; &lt;li&gt;Regex search on programme name&lt;/li&gt; &#xA; &lt;li&gt;Regex search on programme description and episode title&lt;/li&gt; &#xA; &lt;li&gt;Filter search results by channel&lt;/li&gt; &#xA; &lt;li&gt;Direct download via programme ID or URL&lt;/li&gt; &#xA; &lt;li&gt;PVR capability (may be used with cron or Task Scheduler)&lt;/li&gt; &#xA; &lt;li&gt;HTTP proxy support&lt;/li&gt; &#xA; &lt;li&gt;Perl 5.16+ required, plus LWP, LWP::Protocol::https, XML::LibXML, Mojolicious, and CGI modules&lt;/li&gt; &#xA; &lt;li&gt;Requires ffmpeg for conversion to MP4 and AtomicParsley for metadata tagging&lt;/li&gt; &#xA; &lt;li&gt;Runs on Linux/BSD (Ubuntu, Fedora, OpenBSD and others), macOS (10.10+), Windows (7/8/10)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;get_iplayer can only search for programmes that were scheduled for broadcast on BBC linear services within the previous 30 days, even if some are available for more than 30 days on the iPlayer/Sounds sites. Red button programmes, iPlayer box sets, web-only content, and BBC podcasts are not searchable. Programmes that are still available after 30 days must be located on the iPlayer/Sounds sites and downloaded directly via PID or URL.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;get_iplayer does not support downloading news/sport videos, other embedded media, archive programmes, special collections, educational material, programme clips or any content other than whole episodes of programmes scheduled for broadcast on BBC linear services within the previous 30 days. However, it is generally possible to download other content such as red button programmes, iPlayer box sets, or podcasts directly via PID or URL. get_iplayer DOES NOT support live recording from BBC channels.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/get-iplayer/get_iplayer/wiki&#34;&gt;https://github.com/get-iplayer/get_iplayer/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/get-iplayer/get_iplayer/wiki/installation&#34;&gt;https://github.com/get-iplayer/get_iplayer/wiki/installation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;get_iplayer --help&#xA;get_iplayer --basic-help&#xA;get_iplayer --long-help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;List all TV programmes (&lt;code&gt;--type=tv&lt;/code&gt; set by default):&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer &#34;.*&#34;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Search output appears in this format:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  ...&#xA;  208:  Doctor Who: Series 7 Part 2 - 1. The Bells of Saint John, BBC One, b01rryzz&#xA;  209:  Doctor Who: Series 7 Part 2 - 2. The Rings Of Akhaten, BBC One, b01rx0lj&#xA;  210:  Doctor Who: Series 7 Part 2 - 3. Cold War, BBC One, b01s1cz7&#xA;  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Format = &lt;code&gt;&amp;lt;index&amp;gt;: &amp;lt;name&amp;gt; - &amp;lt;episode&amp;gt;, &amp;lt;channel&amp;gt;, &amp;lt;pid&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;List all TV programmes with long descriptions:&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --long &#34;.*&#34;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;List all radio programmes:&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --type=radio &#34;.*&#34;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;List all TV programmes with &#34;doctor who&#34; in the name (matching is case-insensitive):&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer &#34;doctor who&#34;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;List all TV and radio programmes with &#34;doctor who&#34; in the name:&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --type tv,radio &#34;doctor who&#34;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;List all BBC One programmes:&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --channel=&#34;BBC One&#34; &#34;.*&#34;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;List Radio 4 and Radio 4 Extra programmes with &#34;Book at Bedtime&#34; in the title:&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --type=radio --channel=&#34;Radio 4&#34; &#34;Book at Bedtime&#34;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;List only Radio 4 programmes with &#34;Book at Bedtime&#34; in the title:&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --type=radio --channel=&#34;Radio 4$&#34; &#34;Book at Bedtime&#34;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;(The &lt;code&gt;$&lt;/code&gt; regular expression metacharacter matches &#34;Radio 4&#34; only at the end of the channel name, thus avoiding matches against &#34;Radio 4 Extra&#34;)&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Record TV programme number 208 (index from search results) in HD, with fallback to lower quality if not available:&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --get 208&lt;/code&gt; [default setting]&lt;/p&gt; &lt;p&gt;or&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --get 208 --tv-quality=hd,sd,web,mobile&lt;/code&gt; [explicit setting]&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Record TV programme number 208 in lower resolution only (704x396@50):&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --get 208 --tv-quality=web&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Record TV programme number 208 and download subtitles in SubRip (SRT) format:&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --get 208 --subtitles&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Record multiple TV programmes (using index numbers from search results):&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --get 208 209 210&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Record a TV programme using its iPlayer URL:&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer https://www.bbc.co.uk/iplayer/episode/b01sc0wf/Doctors_Series_15_Perfect/&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Record a TV programme using the PID (b01sc0wf) from its iPlayer URL:&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --pid=b01sc0wf&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Record a radio programme using its Sounds URL:&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer https://www.bbc.co.uk/sounds/play/b07gcv34&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Record a radio programme using the PID (b07gcv34) from its Sounds URL in high quality (320k), with fallback to lower quality if not available (default setting):&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --pid=b07gcv34&lt;/code&gt; [default setting]&lt;/p&gt; &lt;p&gt;OR&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --pid=b07gcv34 --radio-quality=high,std,med,low&lt;/code&gt; [explicit setting]&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Record a radio programme using the PID (b07gcv34) from its Sounds URL with lower bit rate only (96k):&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --pid=b07gcv34 --radio-quality=med&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Record multiple radio programmes (using PIDs from Sounds URLs):&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --pid=b07gcv34,b07h60ld&lt;/code&gt; [comma-separated list]&lt;/p&gt; &lt;p&gt;OR&lt;/p&gt; &lt;p&gt;&lt;code&gt;get_iplayer --pid=b07gcv34 --pid=b07h60ld&lt;/code&gt; [multiple arguments]&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;NOTE: Sometimes you may not be able to download a listed programme immediately after broadcast (usually available within 24hrs of airing). Some BBC programmes may not be available from iPlayer/Sounds.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Moham3dRiahi/Th3inspector</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/Moham3dRiahi/Th3inspector</id>
    <link href="https://github.com/Moham3dRiahi/Th3inspector" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Th3Inspector 🕵️ Best Tool For Information Gathering 🔎&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Th3inspector Tool 🕵️&lt;/h2&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;120&#34; height=&#34;120&#34; src=&#34;https://i.imgur.com/63TSBiM.png&#34;&gt; &#xA;&lt;p&gt;Th3inspector 🕵️ best tool for Information Gathering 🔎&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;⭐ All in one tool for Information Gathering ⭐ &lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/Moham3dRiahi/Th3inspector&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Th3inspector-1.9-brightgreen.svg?sanitize=true&#34; alt=&#34;Version&#34; data-canonical-src=&#34;https://img.shields.io/badge/Th3inspector-1.9-brightgreen.svg?maxAge=259200&#34; style=&#34;max-width:100%;&#34;&gt;&lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/Moham3dRiahi/Th3inspector&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Supported%20OS-Linux%2FWindows%2FmacOS-brightgreengreen.svg?sanitize=true&#34; alt=&#34;Build&#34; data-canonical-src=&#34;https://img.shields.io/badge/Supported%20OS-Linux%2FWindows%2FmacOS-brightgreengreen.svg&#34; style=&#34;max-width:100%;&#34;&gt;&lt;/a&gt; &#xA;&lt;a href=&#34;https://github.com/Moham3dRiahi/Th3inspector/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/packagist/l/doctrine/orm.svg?sanitize=true&#34; alt=&#34;Build&#34; data-canonical-src=&#34;https://img.shields.io/packagist/l/doctrine/orm.svg&#34; style=&#34;max-width:100%;&#34;&gt;&lt;/a&gt;&#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;Th3inspector 🕵️ best tool for Information Gathering 🔎&lt;/h4&gt; &#xA;&lt;img src=&#34;https://i.imgur.com/Q81YJCU.png&#34; data-canonical-src=&#34;https://i.imgur.com/niFwcaM.png&#34; width=&#34;700&#34; height=&#34;470&#34;&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;img src=&#34;https://i.imgur.com/4Gh978u.jpg&#34; width=&#34;117&#34; height=&#34;156&#34;&gt; &lt;img src=&#34;https://i.imgur.com/iaPxfRW.jpg&#34; width=&#34;32%&#34;&gt; &lt;img src=&#34;https://i.imgur.com/NG03FY8.jpg&#34; width=&#34;32%&#34;&gt; &lt;img src=&#34;https://i.imgur.com/NYU2bYb.jpg&#34; width=&#34;32%&#34;&gt; &lt;img src=&#34;https://i.imgur.com/77MVBFF.jpg&#34; width=&#34;400&#34; height=&#34;156&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Video&lt;/h2&gt; &#xA;&lt;a href=&#34;https://youtu.be/ZvsIbhRPSrI&#34;&gt;&lt;img src=&#34;https://i.imgur.com/ytHi4WB.jpg&#34; style=&#34;max-width:100%;&#34;&gt;&lt;/a&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Short Form&lt;/th&gt; &#xA;   &lt;th&gt;Long Form&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-i&lt;/td&gt; &#xA;   &lt;td&gt;--info&lt;/td&gt; &#xA;   &lt;td&gt;Website Information&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-n&lt;/td&gt; &#xA;   &lt;td&gt;--number&lt;/td&gt; &#xA;   &lt;td&gt;Phone Number Information&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-mx&lt;/td&gt; &#xA;   &lt;td&gt;--mailserver&lt;/td&gt; &#xA;   &lt;td&gt;Find IP Address And E-mail Server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-w&lt;/td&gt; &#xA;   &lt;td&gt;--whois&lt;/td&gt; &#xA;   &lt;td&gt;Domain Whois Lookup&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-l&lt;/td&gt; &#xA;   &lt;td&gt;--location&lt;/td&gt; &#xA;   &lt;td&gt;Find Website/IP Address Location&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-c&lt;/td&gt; &#xA;   &lt;td&gt;--cloudflare&lt;/td&gt; &#xA;   &lt;td&gt;Bypass CloudFlare&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-a&lt;/td&gt; &#xA;   &lt;td&gt;--age&lt;/td&gt; &#xA;   &lt;td&gt;Domain Age Checker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-ua&lt;/td&gt; &#xA;   &lt;td&gt;--useragent&lt;/td&gt; &#xA;   &lt;td&gt;User Agent Info&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-p&lt;/td&gt; &#xA;   &lt;td&gt;--port&lt;/td&gt; &#xA;   &lt;td&gt;Check Active Services On Resource&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-b&lt;/td&gt; &#xA;   &lt;td&gt;--bin&lt;/td&gt; &#xA;   &lt;td&gt;Credit Card Bin Checker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-s&lt;/td&gt; &#xA;   &lt;td&gt;--subdomain&lt;/td&gt; &#xA;   &lt;td&gt;Subdomain Scanner&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-e&lt;/td&gt; &#xA;   &lt;td&gt;--email&lt;/td&gt; &#xA;   &lt;td&gt;E-mail Address Checker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-cms&lt;/td&gt; &#xA;   &lt;td&gt;--cms&lt;/td&gt; &#xA;   &lt;td&gt;Content Management System Checker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-h&lt;/td&gt; &#xA;   &lt;td&gt;--help&lt;/td&gt; &#xA;   &lt;td&gt;show the help message and exit&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To list all the basic options and switches use -h switch:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;perl Th3inspector.pl -h&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To Get Website Information:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;perl Th3inspector.pl -i example.com&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To Get Phone Number Information :&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;perl Th3inspector.pl -n xxxxxxx&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To Find IP Address And E-mail Server:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;perl Th3inspector.pl -mx example.com&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To Find Website Or IP Address Location :&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;perl Th3inspector.pl -l example.com&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To Get Real IP Of Website Using CloudFlare Protection&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;perl Th3inspector.pl -c example.com&lt;/code&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;p&gt;Found XATTACKER cool? just drop a THANK YOU this will motivate me to create more exciting stuffs for you&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;📧 Contact&lt;/h2&gt; &#xA;&lt;h3&gt;You Want Ask About All My Tools Or Buy Tools/Exploits Private Add Me On : &lt;/h3&gt;&#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;a href=&#34;https://t.me/moham3driahi&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/TELEGRAM-moham3driahi-blue&#34; alt=&#34;Version&#34; data-canonical-src=&#34;https://img.shields.io/badge/TELEGRAM-moham3driahi-blue&#34; style=&#34;max-width:100%;&#34;&gt;&lt;/a&gt;   &#xA;&lt;a href=&#34;https://icq.im/moham3driahi&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/ICQ-moham3driahi-brightgreen &#34; alt=&#34;Version&#34; data-canonical-src=&#34;https://img.shields.io/badge/ICQ-moham3driahi-brightgreen &#34; style=&#34;max-width:100%;&#34;&gt;&lt;/a&gt;   &#xA;&lt;a href=&#34;mailto:mohamedriahi@gmail.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Mail-moham3driahi%40gmail.com-red &#34; style=&#34;max-width:100%;&#34;&gt;&lt;/a&gt;  &#xA;&lt;hr&gt; &#xA;&lt;h2&gt; ✨ Finally Don&#39;t Miss Out My New Telegram Channel for Private Tools &amp;amp;&amp;amp; Methods And Updates ✨ &lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/moham3driahi_tools&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Channel-Private%20Hacking%20Tools-red &#34; alt=&#34;Version&#34; data-canonical-src=&#34;https://img.shields.io/badge/Channel-Private%20Hacking%20Tools-red &#34; style=&#34;max-width:100%;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation &lt;a href=&#34;https://wikipedia.org/wiki/Linux&#34;&gt;Linux&lt;/a&gt; &lt;a href=&#34;https://fr.wikipedia.org/wiki/Linux&#34;&gt;&lt;img src=&#34;http://icons.iconarchive.com/icons/dakirby309/simply-styled/32/OS-Linux-icon.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Moham3dRiahi/Th3inspector.git&#xA;cd Th3inspector&#xA;chmod +x install.sh &amp;amp;&amp;amp; ./install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation &lt;a href=&#34;https://wikipedia.org/wiki/Android&#34;&gt;Android&lt;/a&gt; &lt;a href=&#34;https://fr.wikipedia.org/wiki/Android&#34;&gt;&lt;img src=&#34;https://cdn1.iconfinder.com/data/icons/logotypes/32/android-32.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Download &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.termux&#34;&gt;Termux&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Moham3dRiahi/Th3inspector.git&#xA;cd Th3inspector&#xA;chmod +x install.sh &amp;amp;&amp;amp; ./install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation &lt;a href=&#34;https://wikipedia.org/wiki/Microsoft_Windows&#34;&gt;Windows &lt;/a&gt;&lt;a href=&#34;https://fr.wikipedia.org/wiki/Microsoft_Windows&#34;&gt;&lt;img src=&#34;http://icons.iconarchive.com/icons/tatice/cristal-intense/32/Windows-icon.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Download Perl&#xA;Download Th3inspector&#xA;cpan install JSON&#xA;Extract Th3inspector into Desktop&#xA;Open CMD and type the following commands:&#xA;cd Desktop/Th3inspector-master/&#xA;perl Th3inspector.pl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Version&lt;/h2&gt; &#xA;&lt;strong&gt;Current version is 1.9&lt;/strong&gt; &#xA;&lt;strong&gt;What&#39;s New &lt;/strong&gt; &#xA;&lt;p&gt;• speed up&lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt;• Bug fixes&lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jimsalterjrs/sanoid</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/jimsalterjrs/sanoid</id>
    <link href="https://github.com/jimsalterjrs/sanoid" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Policy-driven snapshot management and replication tools. Using ZFS for underlying next-gen storage. (Btrfs support plans are shelved unless and until btrfs becomes reliable.) Primarily intended for Linux, but BSD use is supported and reasonably frequently tested.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;http://www.openoid.net/wp-content/themes/openoid/images/sanoid_logo.png&#34; alt=&#34;sanoid logo&#34; title=&#34;sanoid logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://openoid.net/gplv3-127x51.png&#34; width=&#34;127&#34; height=&#34;51&#34; align=&#34;right&#34;&gt;Sanoid is a policy-driven snapshot management tool for ZFS filesystems. When combined with the Linux KVM hypervisor, you can use it to make your systems &lt;a href=&#34;http://openoid.net/transcend&#34; target=&#34;_blank&#34;&gt;functionally immortal&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://youtu.be/ZgowLNBsu00&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://www.openoid.net/sanoid_video_launcher.png&#34; alt=&#34;sanoid rollback demo&#34; title=&#34;sanoid rollback demo&#34;&gt;&lt;/a&gt;&lt;br clear=&#34;all&#34;&gt;&lt;sup&gt;(Real time demo: rolling back a full-scale cryptomalware infection in seconds!)&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;p&gt;More prosaically, you can use Sanoid to create, automatically thin, and monitor snapshots and pool health from a single eminently human-readable TOML config file at /etc/sanoid/sanoid.conf. (Sanoid also requires a &#34;defaults&#34; file located at /etc/sanoid/sanoid.defaults.conf, which is not user-editable.) A typical Sanoid system would have a single cron job but see INSTALL.md fore more details:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;* * * * * TZ=UTC /usr/local/bin/sanoid --cron&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Note&lt;/code&gt;: Using UTC as timezone is recommend to prevent problems with daylight saving times&lt;/p&gt; &#xA;&lt;p&gt;And its /etc/sanoid/sanoid.conf might look something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[data/home]&#xA;&#x9;use_template = production&#xA;[data/images]&#xA;&#x9;use_template = production&#xA;&#x9;recursive = yes&#xA;&#x9;process_children_only = yes&#xA;[data/images/win7]&#xA;&#x9;hourly = 4&#xA;&#xA;#############################&#xA;# templates below this line #&#xA;#############################&#xA;&#xA;[template_production]&#xA;        frequently = 0&#xA;        hourly = 36&#xA;        daily = 30&#xA;        monthly = 3&#xA;        yearly = 0&#xA;        autosnap = yes&#xA;        autoprune = yes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which would be enough to tell sanoid to take and keep 36 hourly snapshots, 30 dailies, 3 monthlies, and no yearlies for all datasets under data/images (but not data/images itself, since process_children_only is set). Except in the case of data/images/win7, which follows the same template (since it&#39;s a child of data/images) but only keeps 4 hourlies for whatever reason.&lt;/p&gt; &#xA;&lt;p&gt;For more full details on sanoid.conf settings see &lt;a href=&#34;https://github.com/jimsalterjrs/sanoid/wiki/Sanoid#options&#34;&gt;Wiki page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Be aware that if you don&#39;t specify some interval options the defaults will be used (from /etc/sanoid/sanoid.defaults.conf)&lt;/p&gt; &#xA;&lt;h5&gt;Sanoid Command Line Options&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;--cron&lt;/p&gt; &lt;p&gt;This will process your sanoid.conf file, create snapshots, then purge expired ones.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--configdir&lt;/p&gt; &lt;p&gt;Specify a location for the config file named sanoid.conf. Defaults to /etc/sanoid&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--cache-dir&lt;/p&gt; &lt;p&gt;Specify a directory to store the zfs snapshot cache. Defaults to /var/cache/sanoid&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--run-dir&lt;/p&gt; &lt;p&gt;Specify a directory for temporary files such as lock files. Defaults to /var/run/sanoid&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--take-snapshots&lt;/p&gt; &lt;p&gt;This will process your sanoid.conf file, create snapshots, but it will NOT purge expired ones. (Note that snapshots taken are atomic in an individual dataset context, &lt;i&gt;not&lt;/i&gt; a global context - snapshots of pool/dataset1 and pool/dataset2 will each be internally consistent and atomic, but one may be a few filesystem transactions &#34;newer&#34; than the other.)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--prune-snapshots&lt;/p&gt; &lt;p&gt;This will process your sanoid.conf file, it will NOT create snapshots, but it will purge expired ones.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--force-prune&lt;/p&gt; &lt;p&gt;Purges expired snapshots even if a send/recv is in progress&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--monitor-snapshots&lt;/p&gt; &lt;p&gt;This option is designed to be run by a Nagios monitoring system. It reports on the health of your snapshots.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--monitor-health&lt;/p&gt; &lt;p&gt;This option is designed to be run by a Nagios monitoring system. It reports on the health of the zpool your filesystems are on. It only monitors filesystems that are configured in the sanoid.conf file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--monitor-capacity&lt;/p&gt; &lt;p&gt;This option is designed to be run by a Nagios monitoring system. It reports on the capacity of the zpool your filesystems are on. It only monitors pools that are configured in the sanoid.conf file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--force-update&lt;/p&gt; &lt;p&gt;This clears out sanoid&#39;s zfs snapshot listing cache. This is normally not needed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--version&lt;/p&gt; &lt;p&gt;This prints the version number, and exits.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--quiet&lt;/p&gt; &lt;p&gt;Supress non-error output.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--verbose&lt;/p&gt; &lt;p&gt;This prints additional information during the sanoid run.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--debug&lt;/p&gt; &lt;p&gt;This prints out quite alot of additional information during a sanoid run, and is normally not needed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--readonly&lt;/p&gt; &lt;p&gt;Skip creation/deletion of snapshots (Simulate).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--help&lt;/p&gt; &lt;p&gt;Show help message.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Sanoid script hooks&lt;/h3&gt; &#xA;&lt;p&gt;There are three script types which can optionally be executed at various stages in the lifecycle of a snapshot:&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;pre_snapshot_script&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Will be executed before the snapshot(s) of a single dataset are taken. The following environment variables are passed:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Env vars&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SANOID_SCRIPT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The type of script being executed, one of &lt;code&gt;pre&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, or &lt;code&gt;prune&lt;/code&gt;. Allows for one script to be used for multiple tasks&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SANOID_TARGET&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DEPRECATED&lt;/strong&gt; The dataset about to be snapshot (only the first dataset will be provided)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SANOID_TARGETS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Comma separated list of all datasets to be snapshoted (currently only a single dataset, multiple datasets will be possible later with atomic groups)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SANOID_SNAPNAME&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DEPRECATED&lt;/strong&gt; The name of the snapshot that will be taken (only the first name will be provided, does not include the dataset name)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SANOID_SNAPNAMES&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Comma separated list of all snapshot names that will be taken (does not include the dataset name)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SANOID_TYPES&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Comma separated list of all snapshot types to be taken (yearly, monthly, weekly, daily, hourly, frequently)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If the script returns a non-zero exit code, the snapshot(s) will not be taken unless &lt;code&gt;no_inconsistent_snapshot&lt;/code&gt; is false.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;post_snapshot_script&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Will be executed when:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The pre-snapshot script succeeded or&lt;/li&gt; &#xA; &lt;li&gt;The pre-snapshot script failed and &lt;code&gt;force_post_snapshot_script&lt;/code&gt; is true.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Env vars&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SANOID_SCRIPT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;as above&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SANOID_TARGET&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DEPRECATED&lt;/strong&gt; as above&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SANOID_TARGETS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;as above&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SANOID_SNAPNAME&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DEPRECATED&lt;/strong&gt; as above&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SANOID_SNAPNAMES&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;as above&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SANOID_TYPES&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;as above&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SANOID_PRE_FAILURE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This will indicate if the pre-snapshot script failed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;&lt;code&gt;pruning_script&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Will be executed after a snapshot is successfully deleted. The following environment variables will be passed:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Env vars&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SANOID_SCRIPT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;as above&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SANOID_TARGET&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;as above&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SANOID_SNAPNAME&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;as above&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;example&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;sanoid.conf&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;...&#xA;[sanoid-test-0]&#xA;&#x9;use_template = production&#xA;&#x9;recursive = yes&#xA;&#x9;pre_snapshot_script = /tmp/debug.sh&#xA;&#x9;post_snapshot_script = /tmp/debug.sh&#xA;&#x9;pruning_script = /tmp/debug.sh&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;verbose sanoid output&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;...&#xA;executing pre_snapshot_script &#39;/tmp/debug.sh&#39; on dataset &#39;sanoid-test-0&#39;&#xA;taking snapshot sanoid-test-0@autosnap_2020-02-12_14:49:33_yearly&#xA;taking snapshot sanoid-test-0@autosnap_2020-02-12_14:49:33_monthly&#xA;taking snapshot sanoid-test-0@autosnap_2020-02-12_14:49:33_daily&#xA;taking snapshot sanoid-test-0@autosnap_2020-02-12_14:49:33_hourly&#xA;executing post_snapshot_script &#39;/tmp/debug.sh&#39; on dataset &#39;sanoid-test-0&#39;&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;pre script env variables&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;SANOID_SCRIPT=pre&#xA;SANOID_TARGET=sanoid-test-0/b/bb&#xA;SANOID_TARGETS=sanoid-test-0/b/bb&#xA;SANOID_SNAPNAME=autosnap_2020-02-12_14:49:32_yearly&#xA;SANOID_SNAPNAMES=autosnap_2020-02-12_14:49:32_yearly,autosnap_2020-02-12_14:49:32_monthly,autosnap_2020-02-12_14:49:32_daily,autosnap_2020-02-12_14:49:32_hourly&#xA;SANOID_TYPES=yearly,monthly,daily,hourly&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;post script env variables&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;SANOID_SCRIPT=post&#xA;SANOID_TARGET=sanoid-test-0/b/bb&#xA;SANOID_TARGETS=sanoid-test-0/b/bb&#xA;SANOID_SNAPNAME=autosnap_2020-02-12_14:49:32_yearly&#xA;SANOID_SNAPNAMES=autosnap_2020-02-12_14:49:32_yearly,autosnap_2020-02-12_14:49:32_monthly,autosnap_2020-02-12_14:49:32_daily,autosnap_2020-02-12_14:49:32_hourly&#xA;SANOID_TYPES=yearly,monthly,daily,hourly&#xA;SANOID_PRE_FAILURE=0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Syncoid&lt;/h1&gt; &#xA;&lt;p&gt;Sanoid also includes a replication tool, syncoid, which facilitates the asynchronous incremental replication of ZFS filesystems. A typical syncoid command might look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;syncoid data/images/vm backup/images/vm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which would replicate the specified ZFS filesystem (aka dataset) from the data pool to the backup pool on the local system, or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;syncoid data/images/vm root@remotehost:backup/images/vm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which would push-replicate the specified ZFS filesystem from the local host to remotehost over an SSH tunnel, or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;syncoid root@remotehost:data/images/vm backup/images/vm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Which would pull-replicate the filesystem from the remote host to the local system over an SSH tunnel.&lt;/p&gt; &#xA;&lt;p&gt;Syncoid supports recursive replication (replication of a dataset and all its child datasets) and uses mbuffer buffering, lzop compression, and pv progress bars if the utilities are available on the systems used. If ZFS supports resumeable send/receive streams on both the source and target those will be enabled as default.&lt;/p&gt; &#xA;&lt;p&gt;As of 1.4.18, syncoid also automatically supports and enables resume of interrupted replication when both source and target support this feature.&lt;/p&gt; &#xA;&lt;h5&gt;Syncoid Dataset Properties&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;syncoid:sync&lt;/p&gt; &lt;p&gt;Available values:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;true&lt;/code&gt; (default if unset)&lt;/p&gt; &lt;p&gt;This dataset will be synchronised to all hosts.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;false&lt;/code&gt;&lt;/p&gt; &lt;p&gt;This dataset will not be synchronised to any hosts - it will be skipped. This can be useful for preventing certain datasets from being transferred when recursively handling a tree.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;host1,host2,...&lt;/code&gt;&lt;/p&gt; &lt;p&gt;A comma separated list of hosts. This dataset will only be synchronised by hosts listed in the property.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: this check is performed by the host running &lt;code&gt;syncoid&lt;/code&gt;, thus the local hostname must be present for inclusion during a push operation // the remote hostname must be present for a pull.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: this will also prevent syncoid from handling the dataset if given explicitly on the command line.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: syncing a child of a no-sync dataset will currently result in a critical error.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: empty properties will be handled as if they were unset.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Syncoid Command Line Options&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;[source]&lt;/p&gt; &lt;p&gt;This is the source dataset. It can be either local or remote.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[destination]&lt;/p&gt; &lt;p&gt;This is the destination dataset. It can be either local or remote.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--identifier=&lt;/p&gt; &lt;p&gt;Adds the given identifier to the snapshot name after &#34;syncoid_&#34; prefix and before the hostname. This enables the use case of reliable replication to multiple targets from the same host. The following chars are allowed: a-z, A-Z, 0-9, _, -, : and . .&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;-r --recursive&lt;/p&gt; &lt;p&gt;This will also transfer child datasets.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--skip-parent&lt;/p&gt; &lt;p&gt;This will skip the syncing of the parent dataset. Does nothing without &#39;--recursive&#39; option.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--compress &#xA;   &lt;compression type&gt;&lt;/compression&gt;&lt;/p&gt; &lt;p&gt;Currently accepted options: gzip, pigz-fast, pigz-slow, zstd-fast, zstd-slow, lz4, xz, lzo (default) &amp;amp; none. If the selected compression method is unavailable on the source and destination, no compression will be used.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--source-bwlimit &amp;lt;limit t|g|m|k&amp;gt;&lt;/p&gt; &lt;p&gt;This is the bandwidth limit in bytes (kbytes, mbytes, etc) per second imposed upon the source. This is mainly used if the target does not have mbuffer installed, but bandwidth limits are desired.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--target-bwlimit &amp;lt;limit t|g|m|k&amp;gt;&lt;/p&gt; &lt;p&gt;This is the bandwidth limit in bytes (kbytes, mbytesm etc) per second imposed upon the target. This is mainly used if the source does not have mbuffer installed, but bandwidth limits are desired.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--no-command-checks&lt;/p&gt; &lt;p&gt;Does not check the existence of commands before attempting the transfer, providing administrators a way to run the tool with minimal overhead and maximum speed, at risk of potentially failed replication, or other possible edge cases. It assumes all programs are available, and should not be used in most situations. This is an not an officially supported run mode.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--no-stream&lt;/p&gt; &lt;p&gt;This argument tells syncoid to use -i incrementals, not -I. This updates the target with the newest snapshot from the source, without replicating the intermediate snapshots in between. (If used for an initial synchronization, will do a full replication from newest snapshot and exit immediately, rather than starting with the oldest and then doing an immediate -i to the newest.)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--no-sync-snap&lt;/p&gt; &lt;p&gt;This argument tells syncoid to restrict itself to existing snapshots, instead of creating a semi-ephemeral syncoid snapshot at execution time. Especially useful in multi-target (A-&amp;gt;B, A-&amp;gt;C) replication schemes, where you might otherwise accumulate a large number of foreign syncoid snapshots.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--keep-sync-snap&lt;/p&gt; &lt;p&gt;This argument tells syncoid to skip pruning old snapshots created and used by syncoid for replication if &#39;--no-sync-snap&#39; isn&#39;t specified.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--create-bookmark&lt;/p&gt; &lt;p&gt;This argument tells syncoid to create a zfs bookmark for the newest snapshot after it got replicated successfully. The bookmark name will be equal to the snapshot name. Only works in combination with the --no-sync-snap option. This can be very useful for irregular replication where the last matching snapshot on the source was already deleted but the bookmark remains so a replication is still possible.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--preserve-recordsize&lt;/p&gt; &lt;p&gt;This argument tells syncoid to set the recordsize on the target before writing any data to it matching the one set on the replication src. This only applies to initial sends.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--no-clone-rollback&lt;/p&gt; &lt;p&gt;Do not rollback clones on target&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--no-rollback&lt;/p&gt; &lt;p&gt;Do not rollback anything (clones or snapshots) on target host&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--exclude=REGEX&lt;/p&gt; &lt;p&gt;The given regular expression will be matched against all datasets which would be synced by this run and excludes them. This argument can be specified multiple times.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--no-resume&lt;/p&gt; &lt;p&gt;This argument tells syncoid to not use resumeable zfs send/receive streams.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--force-delete&lt;/p&gt; &lt;p&gt;Remove target datasets recursively (WARNING: this will also affect child datasets with matching snapshots/bookmarks), if there are no matching snapshots/bookmarks.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--no-clone-handling&lt;/p&gt; &lt;p&gt;This argument tells syncoid to not recreate clones on the targe on initial sync and doing a normal replication instead.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--dumpsnaps&lt;/p&gt; &lt;p&gt;This prints a list of snapshots during the run.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--no-privilege-elevation&lt;/p&gt; &lt;p&gt;Bypass the root check and assume syncoid has the necessary permissions (for use with ZFS permission delegation).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--sshport&lt;/p&gt; &lt;p&gt;Allow sync to/from boxes running SSH on non-standard ports.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--sshcipher&lt;/p&gt; &lt;p&gt;Instruct ssh to use a particular cipher set.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--sshoption&lt;/p&gt; &lt;p&gt;Passes option to ssh. This argument can be specified multiple times.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--sshkey&lt;/p&gt; &lt;p&gt;Use specified identity file as per ssh -i.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--quiet&lt;/p&gt; &lt;p&gt;Supress non-error output.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--debug&lt;/p&gt; &lt;p&gt;This prints out quite alot of additional information during a sanoid run, and is normally not needed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--help&lt;/p&gt; &lt;p&gt;Show help message.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--version&lt;/p&gt; &lt;p&gt;Print the version and exit.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;--monitor-version&lt;/p&gt; &lt;p&gt;This doesn&#39;t do anything right now.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note that the sync snapshots syncoid creates are not atomic in a global context: sync snapshots of pool/dataset1 and pool/dataset2 will each be internally consistent, but one may be a few filesystem transactions &#34;newer&#34; than the other. (This does not affect the consistency of snapshots already taken in other ways, which syncoid replicates in the overall stream unless --no-stream is specified. So if you want to manually zfs snapshot -R pool@1 before replicating with syncoid, the global atomicity of pool/dataset1@1 and pool/dataset2@1 will still be intact.)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>winterheart/broadcom-bt-firmware</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/winterheart/broadcom-bt-firmware</id>
    <link href="https://github.com/winterheart/broadcom-bt-firmware" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repository for various Broadcom Bluetooth firmware&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Broadcom Bluetooth firmware for Linux kernel&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/broadcom-bt-firmware/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/tiny-repos/broadcom-bt-firmware.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;This package intentended to provide firmware of Broadcom WIDCOMM® Bluetooth devices (including BCM20702, BCM20703, BCM43142 chipsets and other) for Linux kernel. Since February 2017, Broadcom ships their drivers directly to Windows Update service. They can be &lt;a href=&#34;http://www.catalog.update.microsoft.com/Search.aspx?q=Broadcom+bluetooth&#34;&gt;downloaded here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Security considerations&lt;/h2&gt; &#xA;&lt;p&gt;Recently several vulnerabilities have been discovered in the Bluetooth stack such as &lt;a href=&#34;https://www.kb.cert.org/vuls/id/304725/&#34;&gt;CVE-2018-5383&lt;/a&gt;, &lt;a href=&#34;https://www.kb.cert.org/vuls/id/918987/&#34;&gt;CVE-2019-9506&lt;/a&gt; (KNOB), &lt;a href=&#34;https://www.kb.cert.org/vuls/id/647177/&#34;&gt;CVE-2020-10135&lt;/a&gt; (BIAS) and more. Since Broadcom has stopped active support for its consumer devices, your system may be subject to security risks. You will have to use these devices &lt;strong&gt;at your own risk&lt;/strong&gt;. As a repository maintainer, I cannot provide security fixes.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Check your Linux distribution &lt;a href=&#34;https://repology.org/project/broadcom-bt-firmware/versions&#34;&gt;repositories&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There are &lt;a href=&#34;https://github.com/winterheart/broadcom-bt-firmware/releases&#34;&gt;autogenerated DEB and RPM packages&lt;/a&gt; for RedHat and Debian based distributions.&lt;/p&gt; &#xA;&lt;h2&gt;Detection and manual installation&lt;/h2&gt; &#xA;&lt;p&gt;When you inserting Broadcom Bluetooth device you prefered Linux distribution may not load it properly.&lt;/p&gt; &#xA;&lt;p&gt;You may list all Bluetooth devices like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dmesg | grep -i bluetooth # Shows all Bluetooth driver info&#xA;dmesg | grep -i bluetooth | grep -i firmware # Shows Bluetooth firmware issues&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The output may look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Bluetooth: hci1: BCM: chip id 63&#xA;Bluetooth: hci1: BCM20702A&#xA;Bluetooth: hci1: BCM20702A1 (001.002.014) build 0000&#xA;bluetooth hci1: Direct firmware load for brcm/BCM20702A1-0b05-17cb.hcd failed with error -2&#xA;Bluetooth: hci1: BCM: Patch brcm/BCM20702A1-0b05-17cb.hcd not found&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As you can see, you need &lt;code&gt;brcm/BCM20702A1-0b05-17cb.hcd&lt;/code&gt; firmware.&lt;/p&gt; &#xA;&lt;p&gt;Place required &lt;code&gt;.hcd&lt;/code&gt; file to &lt;code&gt;/lib/firmware/brcm&lt;/code&gt; and reboot your computer. After reboot you will see that firmware successfully loaded:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Bluetooth: hci1: BCM: chip id 63&#xA;Bluetooth: hci1: BCM20702A&#xA;Bluetooth: hci1: BCM20702A1 (001.002.014) build 0000&#xA;Bluetooth: hci1: BCM20702A1 (001.002.014) build 1467&#xA;Bluetooth: hci1: Broadcom Bluetooth Device&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Congratulations, now your bluetooth device successfully loaded. Now go to Bluez for futher configuration.&lt;/p&gt; &#xA;&lt;h2&gt;Incorrect names for devices&lt;/h2&gt; &#xA;&lt;p&gt;There may be incorrect naming between presented firmware name and name requested from Linux kernel. For example, system may request &lt;code&gt;BCM4354A2-13d3-3485.hcd&lt;/code&gt; but actually this is &lt;code&gt;BCM4356A2-13d3-3485.hcd&lt;/code&gt;. This is happens because incorrect naming in Linux kernel. Just rename file to name that need to kernel. Here quick naming convertion:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Original name&lt;/th&gt; &#xA;   &lt;th&gt;Requested by Linux&lt;/th&gt; &#xA;   &lt;th&gt;Notes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BCM4356A2&lt;/td&gt; &#xA;   &lt;td&gt;BCM4354A2&lt;/td&gt; &#xA;   &lt;td&gt;Fixed in Linux kernel 5.8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Notes about combined WiFi+Bluetooth devices&lt;/h2&gt; &#xA;&lt;p&gt;Some Bluetooth controller (for example, BCM4354 and BCM4356) are integrated to WiFi chipset (this can be BCM43XX 802.11ac Wireless Network Adapter or just simple generic Broadcom PCIE Wireless). These devices requires two kinds of firmware - first for WiFi, and second for Bluetooth. Without WiFi firmware Bluetooth will not initialize and &lt;a href=&#34;https://github.com/winterheart/broadcom-bt-firmware/issues/3#issuecomment-318512097&#34;&gt;will not work properly&lt;/a&gt;. Firmware for WiFi already included to kernel, but you may need to do additional work to &lt;a href=&#34;https://wireless.wiki.kernel.org/en/users/drivers/brcm80211#broadcom_brcmfmac_driver&#34;&gt;place correct NVRAM&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here example how it can looks (note about &lt;code&gt;brcm/brcmfmac4356-pcie.txt&lt;/code&gt; loading - this is your customized NVRAM):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;usbcore: registered new interface driver brcmfmac&#xA;brcmfmac 0000:02:00.0: firmware: direct-loading firmware brcm/brcmfmac4356-pcie.bin&#xA;brcmfmac 0000:02:00.0: firmware: direct-loading firmware brcm/brcmfmac4356-pcie.txt&#xA;Bluetooth: hci0: BCM: chip id 101&#xA;Bluetooth: hci0: N360-11&#xA;Bluetooth: hci0: BCM4354A2 (001.003.015) build 0000&#xA;bluetooth hci0: firmware: direct-loading firmware brcm/BCM4354A2-13d3-3485.hcd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Firmware files are licensed under &lt;a href=&#34;https://raw.githubusercontent.com/winterheart/broadcom-bt-firmware/master/LICENSE.broadcom_bcm20702&#34;&gt;Broadcom WIDCOMM Bluetooth Software License Agreement&lt;/a&gt;. Other parts of project are licensed under standard &lt;a href=&#34;https://raw.githubusercontent.com/winterheart/broadcom-bt-firmware/master/LICENSE.MIT.txt&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported devices&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/winterheart/broadcom-bt-firmware/master/DEVICES.md&#34;&gt;DEVICES file&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rsnapshot/rsnapshot</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/rsnapshot/rsnapshot</id>
    <link href="https://github.com/rsnapshot/rsnapshot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;a tool for backing up your data using rsync (if you want to get help, use https://lists.sourceforge.net/lists/listinfo/rsnapshot-discuss)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RSNAPSHOT &lt;a href=&#34;https://travis-ci.org/rsnapshot/rsnapshot&#34;&gt;&lt;img src=&#34;https://api.travis-ci.org/rsnapshot/rsnapshot.png?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;rsnapshot comes with ABSOLUTELY NO WARRANTY. This is free software, and you are welcome to redistribute it under certain conditions. See the GNU General Public Licence for details.&lt;/p&gt; &#xA;&lt;p&gt;rsnapshot is a filesystem snapshot utility based on rsync. rsnapshot makes it easy to make periodic snapshots of local machines, and remote machines over ssh. The code makes extensive use of hard links whenever possible, to greatly reduce the disk space required.&lt;/p&gt; &#xA;&lt;p&gt;It is written entirely in perl with no module dependencies, and has been tested with versions 5.004 through 5.24.3. It should work on any reasonably modern UNIX compatible OS. It has been tested successfully on the following operating systems:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Debian: 3.0 (woody), 9.9 (stretch)&lt;/li&gt; &#xA; &lt;li&gt;Redhat: 7.x, 8.0&lt;/li&gt; &#xA; &lt;li&gt;RedHat Enterprise Linux: 3.0 ES, 5, 6, 7&lt;/li&gt; &#xA; &lt;li&gt;Fedora Core: 1, 3&lt;/li&gt; &#xA; &lt;li&gt;Fedora: 17, 18&lt;/li&gt; &#xA; &lt;li&gt;CentOS: 3, 4, 5, 6, 7&lt;/li&gt; &#xA; &lt;li&gt;WhiteBox Enterprise Linux 3.0&lt;/li&gt; &#xA; &lt;li&gt;Slackware 9.0&lt;/li&gt; &#xA; &lt;li&gt;SuSE: 9.0&lt;/li&gt; &#xA; &lt;li&gt;Gentoo Linux&lt;/li&gt; &#xA; &lt;li&gt;FreeBSD 4.9-STABLE&lt;/li&gt; &#xA; &lt;li&gt;OpenBSD 3.x&lt;/li&gt; &#xA; &lt;li&gt;Solaris 8 (SPARC and x86)&lt;/li&gt; &#xA; &lt;li&gt;Mac OS X&lt;/li&gt; &#xA; &lt;li&gt;IRIX 6.5&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If this is your first experience with rsnapshot, you may want to read the man page which will give you a detailed walk-through on how to get rsnapshot up and running and also serve as a reference of all available commands.&lt;/p&gt; &#xA;&lt;p&gt;If you are upgrading from version 1.1.6 or earlier, make sure you read the file &lt;a href=&#34;https://raw.githubusercontent.com/rsnapshot/rsnapshot/master/docs/Upgrading_from_1.1&#34;&gt;Upgrading from 1.1&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For installation or upgrade instructions please read the &lt;a href=&#34;https://raw.githubusercontent.com/rsnapshot/rsnapshot/master/INSTALL.md&#34;&gt;INSTALL&lt;/a&gt; doc.&lt;/p&gt; &#xA;&lt;p&gt;If you want to work on improving rsnapshot please read the &lt;a href=&#34;https://raw.githubusercontent.com/rsnapshot/rsnapshot/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; doc.&lt;/p&gt; &#xA;&lt;p&gt;If you want to ask a question or have a general discussion use the &lt;a href=&#34;https://lists.sourceforge.net/lists/listinfo/rsnapshot-discuss&#34;&gt;Mailing List&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;COMPATIBILITY NOTICES (Please read)&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Note that systems which use GNU cp version 5.9 or later will have problems with rsnapshot versions up to and including 1.2.3, if &lt;code&gt;cmd_cp&lt;/code&gt; is enabled (and points at the later gnu cp). This is no longer a problem since rsnapshot 1.2.9, as it strips off trailing slashes when running cp.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you have rsync version 2.5.7 or later, you may want to enable the link_dest parameter in the rsnapshot.conf file.&lt;/p&gt; &lt;p&gt;If you are running Linux but do not have the problem above, you should enable the &lt;code&gt;cmd_cp&lt;/code&gt; parameter in rsnapshot.conf (especially if you do not have link_dest enabled).&lt;/p&gt; &lt;p&gt;Be advised that currently &lt;code&gt;link_dest&lt;/code&gt; doesn&#39;t do well with unavailable hosts. Specifically, if a remote host is unavailable using &lt;code&gt;link_dest&lt;/code&gt;, there will be no latest backup of that machine, and a full re-sync will be required when it becomes available. Using the other methods, the last good snapshot will be preserved, preventing the need for a re-sync. We hope to streamline this in the future.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;CONFIGURATION&lt;/h2&gt; &#xA;&lt;p&gt;Once you have installed rsnapshot, you will need to configure it. The default configuration file is /etc/rsnapshot.conf, although the exact path may be different depending on how the program was installed. If this file does not exist, copy &lt;code&gt;/etc/rsnapshot.conf.default&lt;/code&gt; over to &lt;code&gt;/etc/rsnapshot.conf&lt;/code&gt; and edit it to suit your tastes. See the man page for the full list of configuration options.&lt;/p&gt; &#xA;&lt;p&gt;When &lt;code&gt;/etc/rsnapshot.conf&lt;/code&gt; contains your chosen settings, do a quick sanity check to make sure everything is ready to go:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ rsnapshot configtest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If this works, you can see essentially what will happen when you run it for real by executing the following command (where interval is &lt;code&gt;alpha&lt;/code&gt;, &lt;code&gt;beta&lt;/code&gt;, &lt;code&gt;etc&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ rsnapshot -t [interval]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you are happy with everything, the final step is to setup a cron job to automate your backups. Here is a quick example which makes backups every four hours, and beta backups for a week:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;0 */4 * * *     /usr/local/bin/rsnapshot alpha&#xA;50 23 * * *     /usr/local/bin/rsnapshot beta&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the previous example, there will be six &lt;code&gt;alpha&lt;/code&gt; snapshots taken each day (at 0,4,8,12,16, and 20 hours). There will also be beta snapshots taken every night at 11:50PM. The number of snapshots that are saved depends on the &#34;interval&#34; settings in /etc/rsnapshot.conf.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;interval&#x9;alpha&#x9;&#x9;6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This means that every time &lt;code&gt;rsnapshot alpha&lt;/code&gt; is run, it will make a new snapshot, rotate the old ones, and retain the most recent six (&lt;code&gt;alpha.0&lt;/code&gt; - &lt;code&gt;alpha.5&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;If you prefer instead to have three levels of backups (which we&#39;ll call &lt;code&gt;beta&lt;/code&gt;, &lt;code&gt;gamma&lt;/code&gt; and &lt;code&gt;delta&lt;/code&gt;), you might set up cron like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;00 00 * * *     /usr/local/bin/rsnapshot beta&#xA;00 23 * * 6     /usr/local/bin/rsnapshot gamma&#xA;00 22 1 * *     /usr/local/bin/rsnapshot delta&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This specifies a &lt;code&gt;beta&lt;/code&gt; rsnapshot at midnight, a &lt;code&gt;gamma&lt;/code&gt; snapshot on Saturdays at 11:00pm and a &lt;code&gt;delta&lt;/code&gt; rsnapshot at 10pm on the first day of each month.&lt;/p&gt; &#xA;&lt;p&gt;Note that the backups are done from the highest interval first (in this case &lt;code&gt;delta&lt;/code&gt;) and go down to the lowest interval. If you are not having cron invoke the &lt;code&gt;alpha&lt;/code&gt; snapshot interval, then you must also ensure that &lt;code&gt;alpha&lt;/code&gt; is not listed as one of your intervals in rsnapshot.conf (for example, comment out alpha, so that &lt;code&gt;beta&lt;/code&gt; becomes the lowest interval).&lt;/p&gt; &#xA;&lt;p&gt;Remember that it is only the lowest interval which actually does the rsync to back up the relevant source directories, the higher intervals just rotate snapshots around. Unless you have enabled &lt;code&gt;sync_first&lt;/code&gt; in your configuration-file, in which case only the &lt;code&gt;sync&lt;/code&gt; pseudo-interval does the actual rsync, and all real intervals just rotate snapshots.&lt;/p&gt; &#xA;&lt;p&gt;For the full documentation, type &lt;code&gt;man rsnapshot&lt;/code&gt; once it is installed. The &lt;a href=&#34;https://raw.githubusercontent.com/rsnapshot/rsnapshot/master/docs/HOWTOs/rsnapshot-HOWTO.en.html&#34;&gt;HOWTO&lt;/a&gt; also has a detailed overview of how to install and configure rsnapshot, and things like how to set it up so users can restore their own files.&lt;/p&gt; &#xA;&lt;p&gt;If you plan on using the &lt;code&gt;backup_script&lt;/code&gt; parameter in your backup scheme, take a look at the &lt;code&gt;utils/&lt;/code&gt;-directory in the source distribution for several example scripts. The &lt;code&gt;utils/rsnapreport.pl&lt;/code&gt; script is well worth a look.&lt;/p&gt; &#xA;&lt;h2&gt;AUTHORS&lt;/h2&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://raw.githubusercontent.com/rsnapshot/rsnapshot/master/AUTHORS&#34;&gt;AUTHORS&lt;/a&gt; file for the complete list of contributors.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>StefanSchroeder/Golang-Regex-Tutorial</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/StefanSchroeder/Golang-Regex-Tutorial</id>
    <link href="https://github.com/StefanSchroeder/Golang-Regex-Tutorial" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Golang - Regular Expression Tutorial&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;&lt;img src=&#34;https://licensebuttons.net/l/by-nc-sa/4.0/80x15.png&#34; alt=&#34;License: CC BY-NC-SA 4.0&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Golang-Regex-Tutorial&lt;/h1&gt; &#xA;&lt;p&gt;Golang - Regular Expression Tutorial&lt;/p&gt; &#xA;&lt;p&gt;This is a regular expression tutorial for Go, the language.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/StefanSchroeder/Golang-Regex-Tutorial/master/01-chapter0.markdown&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/StefanSchroeder/Golang-Regex-Tutorial/master/01-chapter1.markdown&#34;&gt;Part 1: The basics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/StefanSchroeder/Golang-Regex-Tutorial/master/01-chapter2.markdown&#34;&gt;Part 2: Advanced&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/StefanSchroeder/Golang-Regex-Tutorial/master/01-chapter3.markdown&#34;&gt;Part 3: Cookbook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/StefanSchroeder/Golang-Regex-Tutorial/master/01-chapter4.markdown&#34;&gt;Part 4: Alternatives&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Go to &lt;a href=&#34;http://www.golang.org&#34;&gt;http://www.golang.org&lt;/a&gt; for more information about Go.&lt;/p&gt; &#xA;&lt;p&gt;This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 License.&lt;/p&gt; &#xA;&lt;p&gt;I am planning to setup gh-pages: &lt;a href=&#34;http://stefanschroeder.github.io/Golang-Regex-Tutorial/&#34;&gt;http://stefanschroeder.github.io/Golang-Regex-Tutorial/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/StefanSchroeder/Golang-Regex-Tutorial/master/zh/&#34;&gt;A Chinese version translated&lt;/a&gt; by &lt;a href=&#34;https://github.com/gingerhot&#34;&gt;B1nj0y&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>so-fancy/diff-so-fancy</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/so-fancy/diff-so-fancy</id>
    <link href="https://github.com/so-fancy/diff-so-fancy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Good-lookin&#39; diffs. Actually… nah… The best-lookin&#39; diffs. 🎉&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;diff-so-fancy &lt;a href=&#34;https://circleci.com/gh/so-fancy/diff-so-fancy&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/so-fancy/diff-so-fancy.svg?style=shield&#34; alt=&#34;Circle CI build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/so-fancy/diff-so-fancy&#34;&gt;&lt;img src=&#34;https://travis-ci.org/so-fancy/diff-so-fancy.svg?branch=master&#34; alt=&#34;TravisCI build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/stevemao/diff-so-fancy/branch/master&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/so-fancy/diff-so-fancy?branch=master&amp;amp;svg=true&#34; alt=&#34;AppVeyor build&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;diff-so-fancy&lt;/code&gt; strives to make your diffs &lt;strong&gt;human&lt;/strong&gt; readable instead of machine readable. This helps improve code quality and helps you spot defects faster.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshot&lt;/h2&gt; &#xA;&lt;p&gt;Vanilla &lt;code&gt;git diff&lt;/code&gt; vs &lt;code&gt;git&lt;/code&gt; and &lt;code&gt;diff-so-fancy&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/3429760/32387617-44c873da-c082-11e7-829c-6160b853adcb.png&#34; alt=&#34;diff-highlight vs diff-so-fancy&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Installation is as simple as cloning this repo and then putting the &lt;code&gt;diff-so-fancy&lt;/code&gt; script in to your &lt;code&gt;$PATH&lt;/code&gt;. The &lt;code&gt;lib/&lt;/code&gt; directory will need to be kept relative to the core script.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;diff-so-fancy&lt;/code&gt; is also available from the &lt;a href=&#34;https://www.npmjs.com/package/diff-so-fancy&#34;&gt;NPM registry&lt;/a&gt;, &lt;a href=&#34;https://formulae.brew.sh/formula/diff-so-fancy&#34;&gt;brew&lt;/a&gt;, and as a package on &lt;a href=&#34;https://github.com/NixOS/nixpkgs/raw/master/pkgs/applications/version-management/git-and-tools/diff-so-fancy/default.nix&#34;&gt;Nix&lt;/a&gt;, in the &lt;a href=&#34;https://archlinux.org/packages/community/any/diff-so-fancy/&#34;&gt;Arch community repo&lt;/a&gt;, and &lt;a href=&#34;https://github.com/aos/dsf-debian&#34;&gt;ppa:aos for Debian/Ubuntu Linux&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Issues relating to packaging (&#39;installation does not work&#39;, &#39;version is out of date&#39;, etc.) should be directed to those packages&#39; own repositories/issue trackers where applicable.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Windows users may need to install &lt;a href=&#34;https://sourceforge.net/projects/mingw/files/&#34;&gt;MinGW&lt;/a&gt; or the &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install-win10&#34;&gt;Windows subsystem for Linux&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;With git&lt;/h3&gt; &#xA;&lt;p&gt;Configure git to use &lt;code&gt;diff-so-fancy&lt;/code&gt; for all diff output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --global core.pager &#34;diff-so-fancy | less --tabs=4 -RFX&#34;&#xA;git config --global interactive.diffFilter &#34;diff-so-fancy --patch&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Improved colors for the highlighted bits&lt;/h3&gt; &#xA;&lt;p&gt;The default Git colors are not optimal. The colors used for the screenshot above were:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --global color.ui true&#xA;&#xA;git config --global color.diff-highlight.oldNormal    &#34;red bold&#34;&#xA;git config --global color.diff-highlight.oldHighlight &#34;red bold 52&#34;&#xA;git config --global color.diff-highlight.newNormal    &#34;green bold&#34;&#xA;git config --global color.diff-highlight.newHighlight &#34;green bold 22&#34;&#xA;&#xA;git config --global color.diff.meta       &#34;11&#34;&#xA;git config --global color.diff.frag       &#34;magenta bold&#34;&#xA;git config --global color.diff.func       &#34;146 bold&#34;&#xA;git config --global color.diff.commit     &#34;yellow bold&#34;&#xA;git config --global color.diff.old        &#34;red bold&#34;&#xA;git config --global color.diff.new        &#34;green bold&#34;&#xA;git config --global color.diff.whitespace &#34;red reverse&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;With diff&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;code&gt;-u&lt;/code&gt; with &lt;code&gt;diff&lt;/code&gt; for unified output, and pipe the output to &lt;code&gt;diff-so-fancy&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;diff -u file_a file_b | diff-so-fancy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Options&lt;/h2&gt; &#xA;&lt;h3&gt;markEmptyLines&lt;/h3&gt; &#xA;&lt;p&gt;Should the first block of an empty line be colored. (Default: true)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --bool --global diff-so-fancy.markEmptyLines false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;changeHunkIndicators&lt;/h3&gt; &#xA;&lt;p&gt;Simplify git header chunks to a more human readable format. (Default: true)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --bool --global diff-so-fancy.changeHunkIndicators false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;stripLeadingSymbols&lt;/h3&gt; &#xA;&lt;p&gt;Should the pesky &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; at line-start be removed. (Default: true)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --bool --global diff-so-fancy.stripLeadingSymbols false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;useUnicodeRuler&lt;/h3&gt; &#xA;&lt;p&gt;By default, the separator for the file header uses Unicode line-drawing characters. If this is causing output errors on your terminal, set this to &lt;code&gt;false&lt;/code&gt; to use ASCII characters instead. (Default: true)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --bool --global diff-so-fancy.useUnicodeRuler false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;rulerWidth&lt;/h3&gt; &#xA;&lt;p&gt;By default, the separator for the file header spans the full width of the terminal. Use this setting to set the width of the file header manually.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --global diff-so-fancy.rulerWidth 47    # git log&#39;s commit header width&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;The diff-so-fancy team&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Person&lt;/th&gt; &#xA;   &lt;th&gt;Role&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;@scottchiefbaker&lt;/td&gt; &#xA;   &lt;td&gt;Project lead&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;@OJFord&lt;/td&gt; &#xA;   &lt;td&gt;Bug triage&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;@GenieTim&lt;/td&gt; &#xA;   &lt;td&gt;Travis OSX fixes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;@AOS&lt;/td&gt; &#xA;   &lt;td&gt;Debian packager&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;@Stevemao/@Paul Irish&lt;/td&gt; &#xA;   &lt;td&gt;NPM release team&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are quite welcome, and should target the &lt;a href=&#34;https://github.com/so-fancy/diff-so-fancy/tree/next&#34;&gt;&lt;code&gt;next&lt;/code&gt; branch&lt;/a&gt;. We are also looking for any feedback or ideas on how to make &lt;code&gt;diff-so-fancy&lt;/code&gt; even &lt;em&gt;fancier&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Other documentation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/so-fancy/diff-so-fancy/master/pro-tips.md&#34;&gt;Pro-tips on advanced usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/so-fancy/diff-so-fancy/master/reporting-bugs.md&#34;&gt;Reporting Bugs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/so-fancy/diff-so-fancy/master/hacking-and-testing.md&#34;&gt;Hacking and Testing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/so-fancy/diff-so-fancy/master/history.md&#34;&gt;History&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Alternatives&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dandavison/delta&#34;&gt;https://github.com/dandavison/delta&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ThePrimeagen/.dotfiles</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/ThePrimeagen/.dotfiles</id>
    <link href="https://github.com/ThePrimeagen/.dotfiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;.dotfiles&lt;/h1&gt; &#xA;&lt;h3&gt;Kinesis Advantage 360&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Will there be a travel case?&lt;/li&gt; &#xA; &lt;li&gt;Will there be blank key caps?&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>OpenKore/openkore</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/OpenKore/openkore</id>
    <link href="https://github.com/OpenKore/openkore" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A free/open source client and automation tool for Ragnarok Online&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/b/b5/Kore_2g_logo.png&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/language-Perl-blue.svg?sanitize=true&#34; alt=&#34;Language&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/stars/OpenKore/openkore&#34; alt=&#34;Stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/OpenKore/openkore?label=Fork&#34; alt=&#34;Fork&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/watchers/OpenKore/openkore?label=Watch&#34; alt=&#34;Watch&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/issues/OpenKore/openkore&#34; alt=&#34;Issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-pr/OpenKore/openkore.svg?sanitize=true&#34; alt=&#34;Pull Requests&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/OpenKore/openkore.svg?sanitize=true&#34; alt=&#34;Contributors&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/OpenKore/openkore/CI&#34; alt=&#34;Github_Workflow_status&#34;&gt; &lt;img src=&#34;https://github.com/OpenKore/openkore/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Github_Workflow_CI&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OpenKore is a custom client and intelligent automated assistant for Ragnarok Online.&lt;/li&gt; &#xA; &lt;li&gt;It is a &lt;strong&gt;free&lt;/strong&gt;, open source and cross-platform program &lt;em&gt;(Linux, Windows and MacOS are supported)&lt;/em&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;To run OpenKore you will need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openkore.com/wiki/How_to_run_OpenKore#Requirements&#34;&gt;Read the Requirements page on our wiki&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OpenKore/openkore/archive/master.zip&#34;&gt;Download OpenKore&lt;/a&gt; and extract it. Alternatively, you could press the &lt;strong&gt;Windows Key + R&lt;/strong&gt;, type in &lt;code&gt;cmd&lt;/code&gt; &amp;amp; enter. Run the following command in the cmd to clone. &lt;em&gt;&lt;strong&gt;Note: &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; required.&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/OpenKore/openkore.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Configure OpenKore: &lt;a href=&#34;https://openkore.com/wiki/Category:Control&#34;&gt;documentation&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run openkore.pl &lt;em&gt;(You can run start.exe or wxstart.exe if you use Windows)&lt;/em&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;F.A.Q. (Frequently Asked Questions)&lt;/h2&gt; &#xA;&lt;!-- Source: https://forums.openkore.com/viewtopic.php?f=0&amp;t=11287 --&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Have a problem?&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Update your openkore or download a new one.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Still having problems?&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Search in &lt;a href=&#34;https://openkore.com/wiki/&#34;&gt;Wiki&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Search in &lt;a href=&#34;https://forums.openkore.com/&#34;&gt;Forum&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Search in &lt;a href=&#34;https://github.com/openkore/openkore/issues?utf8=%E2%9C%93&amp;amp;q=&#34;&gt;Github issues&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cant find what you need? / Do not understand?&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ask in &lt;a href=&#34;https://webchat.freenode.net/#openkore&#34;&gt;IRC Channel&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Is it a problem in Openkore?&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Read &lt;a href=&#34;https://github.com/OpenKore/openkore#things-to-know&#34;&gt;things to know&lt;/a&gt; before &lt;a href=&#34;https://github.com/OpenKore/openkore/issues/new&#34;&gt;reporting&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Things to know&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure you&#39;ve read &lt;a href=&#34;https://github.com/OpenKore/openkore#faq-frequently-asked-questions&#34;&gt;FAQ&lt;/a&gt; especially to &lt;a href=&#34;https://github.com/OpenKore/openkore/commits/master&#34;&gt;run latest commit on master branch&lt;/a&gt; &amp;amp; checking &lt;a href=&#34;https://github.com/OpenKore/openkore/issues?utf8=%E2%9C%93&amp;amp;q=&#34;&gt;existed issue for your request.&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Please post in English.&lt;/li&gt; &#xA; &lt;li&gt;Please use the issue template.&lt;/li&gt; &#xA; &lt;li&gt;Please include informations about your server &amp;amp; any changes you did in your configuration.&lt;/li&gt; &#xA; &lt;li&gt;Briefly explain what happened, take a screenhot &amp;amp; include the error message &lt;em&gt;(If available)&lt;/em&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Please be advised any developers here are doing this on their free time. Please give some time for anyone to respond.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Status of botting on Official Servers&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Server&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Protection&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;   &lt;th&gt;Supporter&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.gnjoy.asia/&#34;&gt;aRO&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Asia RO&lt;/td&gt; &#xA;   &lt;td&gt;CheatDefender&lt;/td&gt; &#xA;   &lt;td&gt;Not working&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://ragnarok.uol.com.br/&#34;&gt;bRO&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Brazil RO&lt;/td&gt; &#xA;   &lt;td&gt;EAC&lt;/td&gt; &#xA;   &lt;td&gt;Not working&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://ro.zhaouc.com/&#34;&gt;cRO&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;China RO&lt;/td&gt; &#xA;   &lt;td&gt;nProtect&lt;/td&gt; &#xA;   &lt;td&gt;Botable&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://eu.4game.com/ro/&#34;&gt;euRO&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Europe RO&lt;/td&gt; &#xA;   &lt;td&gt;Frost Security&lt;/td&gt; &#xA;   &lt;td&gt;Not working&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://eu.4game.com/roprime/&#34;&gt;euRO-Prime&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Europe RO (Prime)&lt;/td&gt; &#xA;   &lt;td&gt;Frost Security&lt;/td&gt; &#xA;   &lt;td&gt;Not working&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://renewal.playragnarok.com/&#34;&gt;iRO Renewal&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;International RO&lt;/td&gt; &#xA;   &lt;td&gt;EAC&lt;/td&gt; &#xA;   &lt;td&gt;Not working&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.playragnarok.com/&#34;&gt;iRO TR&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;International RO (Transcendence)&lt;/td&gt; &#xA;   &lt;td&gt;EAC&lt;/td&gt; &#xA;   &lt;td&gt;Not working&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ro.gnjoy.id/&#34;&gt;idRO&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Indonesia RO&lt;/td&gt; &#xA;   &lt;td&gt;EAC&lt;/td&gt; &#xA;   &lt;td&gt;Not Working&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://roretro.gnjoy.id/&#34;&gt;idRO-Retro&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Indonesia RO (Retro)&lt;/td&gt; &#xA;   &lt;td&gt;Delphine&lt;/td&gt; &#xA;   &lt;td&gt;Not Working&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ragnarokonline.gungho.jp/&#34;&gt;jRO&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Japan RO&lt;/td&gt; &#xA;   &lt;td&gt;nProtect&lt;/td&gt; &#xA;   &lt;td&gt;Need Verification&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://ro.gnjoy.com/&#34;&gt;kRO&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Korea RO&lt;/td&gt; &#xA;   &lt;td&gt;nProtect&lt;/td&gt; &#xA;   &lt;td&gt;Botable&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://roz.gnjoy.com/&#34;&gt;kRO-Zero&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Korea RO (Zero)&lt;/td&gt; &#xA;   &lt;td&gt;nProtect&lt;/td&gt; &#xA;   &lt;td&gt;Botable&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ru.4game.com/roprime/&#34;&gt;ruRO-Prime&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Russia RO (Prime)&lt;/td&gt; &#xA;   &lt;td&gt;Frost Security&lt;/td&gt; &#xA;   &lt;td&gt;Not Working&lt;/td&gt; &#xA;   &lt;td&gt;ya4ept&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ro.gnjoy.in.th/&#34;&gt;tRO&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Thailand RO&lt;/td&gt; &#xA;   &lt;td&gt;EAC&lt;/td&gt; &#xA;   &lt;td&gt;Not Working&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://roc.gnjoy.in.th/&#34;&gt;tRO-Classic&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Thailand RO (Classic)&lt;/td&gt; &#xA;   &lt;td&gt;EAC&lt;/td&gt; &#xA;   &lt;td&gt;Not Working&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ro.gnjoy.com.tw/&#34;&gt;twRO&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Taiwan RO&lt;/td&gt; &#xA;   &lt;td&gt;CheatDefender&lt;/td&gt; &#xA;   &lt;td&gt;Not Working&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ro.vtcgame.vn/&#34;&gt;vRO&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Vietnam RO&lt;/td&gt; &#xA;   &lt;td&gt;nProtect&lt;/td&gt; &#xA;   &lt;td&gt;Not Working&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;OpenKore is developed by a &lt;a href=&#34;https://github.com/OpenKore/openkore/graphs/contributors&#34;&gt;team&lt;/a&gt; located around the world. Check out the &lt;a href=&#34;https://openkore.com/wiki/Manual&#34;&gt;documentation&lt;/a&gt; and if necessary, submit a pull request.&lt;/p&gt; &#xA;&lt;h2&gt;Contacts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openkore.com/wiki/&#34;&gt;OpenKore Wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forums.openkore.com/&#34;&gt;OpenKore forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://webchat.freenode.net/#openkore&#34;&gt;IRC Channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kiwiirc.com/client/irc.freenode.net/?nick=IRC-Source_?#openkore&#34;&gt;Connect IRC with Kiwiirc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://openkorebrasil.org/&#34;&gt;Brazilian Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://RO-fan.ru/&#34;&gt;Russian Community&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Warning&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Other communities or websites are not affiliated to openkore.com&lt;/p&gt; &#xA;&lt;h2&gt;Other Links&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://openkore.com/index.php/OpenKore&#34;&gt;Openkore History&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OpenKore/openkore/raw/master/LegacyChangelog.md&#34;&gt;Legacy Changelog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://openkore.com/index.php/Roadmap&#34;&gt;Openkore RoadMap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openkore.com/wiki/Category:Feature_Request&#34;&gt;Feature Requests and TODO Wiki&lt;/a&gt; and &lt;a href=&#34;https://github.com/OpenKore/openkore/issues?q=is%3Aopen+is%3Aissue+label%3A%22feature+request%22&#34;&gt;Feature Requests GitHub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This software is open source, licensed under the GNU General Public License, version 2. Basically, this means that you&#39;re free to use and allowed to modify and distribute this software. However, if you distribute modified versions, you &lt;strong&gt;MUST&lt;/strong&gt; also distribute the source code.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;http://www.gnu.org/licenses/gpl.html&#34;&gt;http://www.gnu.org/licenses/gpl.html&lt;/a&gt; for the full license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Difegue/LANraragi</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/Difegue/LANraragi</id>
    <link href="https://github.com/Difegue/LANraragi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Web application for archival and reading of manga/doujinshi. Lightweight and Docker-ready for NAS/servers.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/difegue/lanraragi/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/difegue/lanraragi.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Difegue/LANraragi/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/difegue/lanraragi/total.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Difegue/LANraragi/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/difegue/lanraragi.svg?label=latest%20release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://formulae.brew.sh/formula/lanraragi&#34;&gt;&lt;img src=&#34;https://img.shields.io/homebrew/v/lanraragi.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lrr.tvc-16.science/&#34;&gt;&lt;img src=&#34;https://img.shields.io/website/https/lrr.tvc-16.science.svg?label=demo%20website&amp;amp;up_message=online&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Difegue/LANraragi/actions&#34;&gt;&lt;img src=&#34;https://github.com/Difegue/LANraragi/actions/workflows/push-continuous-integration.yml/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/aRQxtbg&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/612709831744290847&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/Difegue/LANraragi/dev/public/favicon.ico&#34; width=&#34;128&#34;&gt; &#xA;&lt;h1&gt;LANraragi&lt;/h1&gt; &#xA;&lt;p&gt;Open source server for archival of comics/manga, running on Mojolicious + Redis.&lt;/p&gt; &#xA;&lt;h4&gt;💬 Talk with other fellow LANraragi Users on &lt;a href=&#34;https://discord.gg/aRQxtbg&#34;&gt;Discord&lt;/a&gt; or &lt;a href=&#34;https://github.com/Difegue/LANraragi/discussions&#34;&gt;Github Discussions&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://sugoi.gitbook.io/lanraragi/v/dev&#34;&gt;📄 Documentation&lt;/a&gt; | &lt;a href=&#34;https://github.com/Difegue/LANraragi/releases/latest&#34;&gt;⏬ Download&lt;/a&gt; | &lt;a href=&#34;https://lrr.tvc-16.science&#34;&gt;🎞 Demo&lt;/a&gt; | &lt;a href=&#34;https://nightly.link/Difegue/LANraragi/workflows/push-continous-delivery/dev&#34;&gt;🪟🌃 Windows Nightlies&lt;/a&gt; | &lt;a href=&#34;https://ko-fi.com/T6T2UP5N&#34;&gt;💵 Sponsor Development&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h2&gt;The 2021 User Survey results have landed!&lt;/h2&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://tvc-16.science/lrr-survey-3-results.html&#34;&gt;here&lt;/a&gt; for more info.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Main Page, Thumbnail View&lt;/th&gt; &#xA;   &lt;th&gt;Main Page, List View&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Difegue/LANraragi/dev/tools/_screenshots/archive_thumb.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Difegue/LANraragi/dev/tools/_screenshots/archive_thumb.png&#34; alt=&#34;archive_thumb&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Difegue/LANraragi/dev/tools/_screenshots/archive_list.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Difegue/LANraragi/dev/tools/_screenshots/archive_list.png&#34; alt=&#34;archive_list&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Archive Reader&lt;/th&gt; &#xA;   &lt;th&gt;Reader with overlay&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Difegue/LANraragi/dev/tools/_screenshots/reader.jpg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Difegue/LANraragi/dev/tools/_screenshots/reader.jpg&#34; alt=&#34;reader&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Difegue/LANraragi/dev/tools/_screenshots/reader_overlay.jpg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Difegue/LANraragi/dev/tools/_screenshots/reader_overlay.jpg&#34; alt=&#34;reader_overlay&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Configuration&lt;/th&gt; &#xA;   &lt;th&gt;Plugin Configuration&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Difegue/LANraragi/dev/tools/_screenshots/cfg.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Difegue/LANraragi/dev/tools/_screenshots/cfg.png&#34; alt=&#34;cfg&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Difegue/LANraragi/dev/tools/_screenshots/cfg_plugin.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Difegue/LANraragi/dev/tools/_screenshots/cfg_plugin.png&#34; alt=&#34;cfg_plugin&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Stores your comics in archive format. (zip/rar/targz/lzma/7z/xz/cbz/cbr/pdf supported, barebones support for epub)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Read archives directly from your web browser: the server reads from within compressed files using temporary folders.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Read your archives in dedicated reader software using the built-in OPDS Catalog&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the Client API to interact with LANraragi from other programs&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Two different user interfaces : compact archive list with thumbnails-on-hover, or thumbnail view.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Choose from 5 preinstalled responsive library styles, or add your own with CSS.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Full Tag support with Namespaces: Add your own or import them from other sources using Plugins.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Store archives in either arbitary or dynamic Categories to sort your Library easily&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Import metadata using Plugins automatically when archives are added to LANraragi.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download archives from the Internet directly to the server, while using the aforementioned automatic metadata import&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Backup your database as JSON to carry your tags over to another LANraragi instance.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Make a PR, get stickers™&lt;/h2&gt; &#xA;&lt;p&gt;Merged PRs to this repo(or $5+ donations) are eligible to get a dumb sticker pack &lt;a href=&#34;https://forms.office.com/Pages/ResponsePage.aspx?id=DQSIkWdsW0yxEjajBLZtrQAAAAAAAAAAAAN__osxt25URTdTUTVBVFRCTjlYWFJLMlEzRTJPUEhEVy4u&#34;&gt;shipped on the house.&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>maxmind/MaxMind-DB</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/maxmind/MaxMind-DB</id>
    <link href="https://github.com/maxmind/MaxMind-DB" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Spec and test data for the MaxMind DB file format&lt;/p&gt;&lt;hr&gt;&lt;p&gt;MaxMind DB is a binary file format that stores data indexed by IP address subnets (IPv4 or IPv6).&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the spec for that format.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>exiftool/exiftool</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/exiftool/exiftool</id>
    <link href="https://github.com/exiftool/exiftool" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ExifTool meta information reader/writer&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;ExifTool by Phil Harvey (philharvey66 at gmail.com)&lt;/h2&gt; &#xA;&lt;p&gt;ExifTool is a customizable set of Perl modules plus a full-featured command-line application for reading and writing meta information in a wide variety of files, including the maker note information of many digital cameras by various manufacturers such as Canon, Casio, DJI, FLIR, FujiFilm, GE, HP, JVC/Victor, Kodak, Leaf, Minolta/Konica-Minolta, Nikon, Nintendo, Olympus/Epson, Panasonic/Leica, Pentax/Asahi, Phase One, Reconyx, Ricoh, Samsung, Sanyo, Sigma/Foveon and Sony.&lt;/p&gt; &#xA;&lt;p&gt;Below is a list of file types and meta information formats currently supported by ExifTool (r = read, w = write, c = create):&lt;/p&gt; &#xA;&lt;p&gt;File Types ------------+-------------+-------------+-------------+------------ 360 r/w | DR4 r/w/c | JNG r/w | O r | RAW r/w 3FR r | DSS r | JP2 r/w | ODP r | RIFF r 3G2 r/w | DV r | JPEG r/w | ODS r | RSRC r 3GP r/w | DVB r/w | JSON r | ODT r | RTF r A r | DVR-MS r | JXL r | OFR r | RW2 r/w AA r | DYLIB r | K25 r | OGG r | RWL r/w AAE r | EIP r | KDC r | OGV r | RWZ r AAX r/w | EPS r/w | KEY r | ONP r | RM r ACR r | EPUB r | LA r | OPUS r | SEQ r AFM r | ERF r/w | LFP r | ORF r/w | SKETCH r AI r/w | EXE r | LIF r | ORI r/w | SO r AIFF r | EXIF r/w/c | LNK r | OTF r | SR2 r/w APE r | EXR r | LRV r/w | PAC r | SRF r ARQ r/w | EXV r/w/c | M2TS r | PAGES r | SRW r/w ARW r/w | F4A/V r/w | M4A/V r/w | PBM r/w | SVG r ASF r | FFF r/w | MACOS r | PCD r | SWF r AVI r | FITS r | MAX r | PCX r | THM r/w AVIF r/w | FLA r | MEF r/w | PDB r | TIFF r/w AZW r | FLAC r | MIE r/w/ | PDF r/w | TORRENT r BMP r | FLIF r/w | MIFF r c | PEF r/w | TTC r BPG r | FLV r | MKA r | PFA r | TTF r BTF r | FPF r | MKS r | PFB r | TXT r CHM r | FPX r | MKV r | PFM r | VCF r COS r | GIF r/w | MNG r/w | PGF r | VRD r/w/c CR2 r/w | GPR r/w | MOBI r | PGM r/w | VSD r CR3 r/w | GZ r | MODD r | PLIST r | WAV r CRM r/w | HDP r/w | MOI r | PICT r | WDP r/w CRW r/w | HDR r | MOS r/w | PMP r | WEBP r CS1 r/w | HEIC r/w | MOV r/w | PNG r/w | WEBM r CSV r | HEIF r/w | MP3 r | PPM r/w | WMA r CZI r | HTML r | MP4 r/w | PPT r | WMV r DCM r | ICC r/w/c | MPC r | PPTX r | WTV r DCP r/w | ICS r | MPG r | PS r/w | WV r DCR r | IDML r | MPO r/w | PSB r/w | X3F r/w DFONT r | IIQ r/w | MQV r/w | PSD r/w | XCF r DIVX r | IND r/w | MRC r | PSP r | XLS r DJVU r | INSP r/w | MRW r/w | QTIF r/w | XLSX r DLL r | INSV r | MXF r | R3D r | XMP r/w/c DNG r/w | INX r | NEF r/w | RA r | ZIP r DOC r | ISO r | NKSC r/w | RAF r/w | DOCX r | ITC r | NRW r/w | RAM r | DPX r | J2C r | NUMBERS r | RAR r |&lt;/p&gt; &#xA;&lt;p&gt;Meta Information ----------------------+----------------------+--------------------- EXIF r/w/c | CIFF r/w | Ricoh RMETA r GPS r/w/c | AFCP r/w | Picture Info r IPTC r/w/c | Kodak Meta r/w | Adobe APP14 r XMP r/w/c | FotoStation r/w | MPF r MakerNotes r/w/c | PhotoMechanic r/w | Stim r Photoshop IRB r/w/c | JPEG 2000 r | DPX r ICC Profile r/w/c | DICOM r | APE r MIE r/w/c | Flash r | Vorbis r JFIF r/w/c | FlashPix r | SPIFF r Ducky APP12 r/w/c | QuickTime r | DjVu r PDF r/w/c | Matroska r | M2TS r PNG r/w/c | MXF r | PE/COFF r Canon VRD r/w/c | PrintIM r | AVCHD r Nikon Capture r/w/c | FLAC r | ZIP r GeoTIFF r/w/c | ID3 r | (and more)&lt;/p&gt; &#xA;&lt;p&gt;See html/index.html for more details about ExifTool features.&lt;/p&gt; &#xA;&lt;p&gt;ExifTool can be downloaded from&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://exiftool.org/&#34;&gt;https://exiftool.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;RUNNING&lt;/p&gt; &#xA;&lt;p&gt;The exiftool script can be run right away without the need to install Image::ExifTool. For example, from within the exiftool directory you can extract the information from one of the included test files by typing:&lt;/p&gt; &#xA;&lt;p&gt;./exiftool t/images/ExifTool.jpg&lt;/p&gt; &#xA;&lt;p&gt;If you move the exiftool script to a different directory, you must also either move the contents of the lib directory or install the Image::ExifTool package so the script can find the necessary libraries.&lt;/p&gt; &#xA;&lt;p&gt;Note: If you are using the Windows cmd shell, you may need to rename &#39;exiftool&#39; to &#39;exiftool.pl&#39; to run it directly from the command line. Alternatively, you can run exiftool with the command &#39;perl exiftool&#39;.&lt;/p&gt; &#xA;&lt;p&gt;IF YOU ARE STILL CONFUSED&lt;/p&gt; &#xA;&lt;p&gt;The exiftool script is a command line application. You run it by typing commands in a terminal window. The first step is to determine the name of the directory where you downloaded the ExifTool distribution package. Assuming, for example, you downloaded it to a folder called &#34;Desktop&#34; in your home directory, then you would type the following commands in a terminal window to extract and run ExifTool:&lt;/p&gt; &#xA;&lt;p&gt;cd ~/Desktop gzip -dc Image-ExifTool-12.41.tar.gz | tar -xf - cd Image-ExifTool-12.41 ./exiftool t/images/ExifTool.jpg&lt;/p&gt; &#xA;&lt;p&gt;Note: These commands extract meta information from one of the test images. To use one of your images instead, enter the full path name of your file in place of &#34;t/images/ExifTool.jpg&#34;.&lt;/p&gt; &#xA;&lt;p&gt;INSTALLATION&lt;/p&gt; &#xA;&lt;p&gt;You can install the Image::ExifTool package to make it available for use by other Perl scripts by typing the following:&lt;/p&gt; &#xA;&lt;p&gt;perl Makefile.PL make make test make install&lt;/p&gt; &#xA;&lt;p&gt;Notes: i) You need root access for the last step above.&lt;/p&gt; &#xA;&lt;p&gt;ii) Some Perl installations (like the standard OSX installation) may not contain the necessary files to complete the first step above. But no worries: You can install ExifTool manually by moving &#39;exiftool&#39; and the &#39;lib&#39; directory to any directory in your current PATH (ie. /usr/bin).&lt;/p&gt; &#xA;&lt;p&gt;iii) In Windows, &#34;dmake&#34; or &#34;nmake&#34; may be used if &#34;make&#34; is not available.&lt;/p&gt; &#xA;&lt;p&gt;(Also see html/install.html for more help with installation.)&lt;/p&gt; &#xA;&lt;p&gt;DEPENDENCIES&lt;/p&gt; &#xA;&lt;p&gt;Requires Perl version 5.004 or later. No other special libraries are required, however the following modules are recommended for decoding compressed and/or encrypted information from the indicated file types, and for calculating digest values and providing other features listed below:&lt;/p&gt; &#xA;&lt;p&gt;Archive::Zip (ZIP, DOCX, PPTX, XLSX, ODP, ODS, ODT, EIP, iWork) Compress::Zlib (DNG, PNG, PDF, DCM, MIE and SWF files) Digest::MD5 (PDF files, IPTC information, and JPG Extended XMP) Digest::SHA (PDF with AES-256 encryption) IO::Compress::Bzip2 (RWZ files) Time::HiRes (for generating ProcessingTime tag) POSIX::strptime (for inverse date/time conversion) Time::Piece (alternative to POSIX::strptime) Unicode::LineBreak (for column alignment of alternate-language output) Win32::API (for proper handling of Windows file times) Win32::FindFile (for Windows Unicode directory support, app only) Win32API::File (for Windows Unicode file names and file times) IO::Compress::RawDeflate (for writing FLIF images) IO::Uncompress::RawInflate (for reading FLIF images)&lt;/p&gt; &#xA;&lt;p&gt;COPYRIGHT AND LICENSE&lt;/p&gt; &#xA;&lt;p&gt;Copyright 2003-2022, Phil Harvey&lt;/p&gt; &#xA;&lt;p&gt;This is free software; you can redistribute it and/or modify it under the same terms as Perl itself.&lt;/p&gt; &#xA;&lt;p&gt;DISTRIBUTION FILES&lt;/p&gt; &#xA;&lt;p&gt;Below is a list of the files/directories included in the full ExifTool distribution package:&lt;/p&gt; &#xA;&lt;p&gt;Changes - Revision history MANIFEST - Full list of distribution files META.json - Standard CPAN dependency file (JSON format) META.yml - Standard CPAN dependency file (YAML format) Makefile.PL - Makefile for installation README - This file arg_files/ - Argument files to convert metadata formats: exif2iptc.args - Arguments for converting EXIF to IPTC exif2xmp.args - Arguments for converting EXIF to XMP gps2xmp.args - Arguments for converting GPS to XMP iptc2exif.args - Arguments for converting IPTC to EXIF iptc2xmp.args - Arguments for converting IPTC to XMP iptcCore.args - Complete list of IPTC Core XMP tags pdf2xmp.args - Arguments for converting PDF to XMP xmp2exif.args - Arguments for converting XMP to EXIF xmp2gps.args - Arguments for converting XMP to GPS xmp2iptc.args - Arguments for converting XMP to IPTC xmp2pdf.args - Arguments for converting XMP to PDF config_files/ - Sample ExifTool configuration files: acdsee.config - Definitions for writing ACDSee XMP regions age.config - Calculate Age of person in photo bibble.config - Definitions for writing Bibble XMP tags convert_regions.config - Convert between MWG, MP and IPTC regions cuepointlist.config - Extract cue points and labels as a list depthmap.config - Extract Google DepthMap images example.config - General example showing config features fotoware.config - Definitions for writing Fotoware XMP tags gps2utm.config - Generate UTM coordinate tags from GPS info gpsdatetime.config - Make GPSDateTime from CreateDate+SampleTime nksc.config - Decode tags in Nikon ViewNX NKSC files photoshop_paths.config - For extracting or copying Photoshop paths picasa_faces.config - Convert from Picasa to MWG/MP face regions rotate_regions.config - Rotate MWG and MP region tags tiff_version.config - Determine the version of a TIFF file time_zone.config - Calculate time zone from EXIF tags exiftool - The exiftool application (Perl script) fmt_files/ - Output formatting example files: gpx.fmt - Format file for creating GPX track gpx_wpt.fmt - Format file for creating GPX waypoints kml.fmt - Format file for creating KML placemarks kml_track.fmt - Format file for creating KML track html/ - HTML documentation html/TagNames/ - HTML tag name documentation lib/ - ExifTool Perl library modules perl-Image-ExifTool.spec - Red Hat Packaging Manager specification file t/ - Verification test code t/images/ - Verification test images&lt;/p&gt; &#xA;&lt;p&gt;ADDITIONAL INFORMATION&lt;/p&gt; &#xA;&lt;p&gt;Read the following files included in the full distribution for more information:&lt;/p&gt; &#xA;&lt;p&gt;html/index.html - Main ExifTool documentation html/install.html - Installation instructions html/history.html - Revision history html/ExifTool.html - API documentation html/TagNames/index.html - Tag name documentation html/geotag.html - Geotag feature html/faq.html - Frequently asked questions html/filename.html - Renaming/moving files html/metafiles.html - Working with metadata sidecar files html/struct.html - Working with structured XMP information lib/Image/ExifTool/README - ExifTool library modules documentation&lt;/p&gt; &#xA;&lt;p&gt;and if you have installed Image::ExifTool, you can also consult perldoc or the man pages:&lt;/p&gt; &#xA;&lt;p&gt;perldoc exiftool perldoc Image::ExifTool perldoc Image::ExifTool::TagNames&lt;/p&gt; &#xA;&lt;p&gt;man exiftool man Image::ExifTool man Image::ExifTool::TagNames&lt;/p&gt; &#xA;&lt;p&gt;Note: If the man pages don&#39;t work, it is probably because your man path is not set to include the installed documentation. See &#34;man man&#34; for information about how to set the man path.&lt;/p&gt; &#xA;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>movabletype/movabletype</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/movabletype/movabletype</id>
    <link href="https://github.com/movabletype/movabletype" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Movable Type&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to Movable Type&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/movabletype/movabletype&#34;&gt;&lt;img src=&#34;https://travis-ci.org/movabletype/movabletype.svg?branch=develop&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/movabletype/movabletype/tree/develop&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/movabletype/movabletype/tree/develop.svg?style=svg&amp;amp;circle-token=698358bf40b4ca0bda1e4e9571ffce0cb5584d41&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/movabletype/movabletype?branch=develop&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/movabletype/movabletype/badge.svg?branch=develop&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thank you for choosing Movable Type, the premiere solution for your blogging and website management needs. This file will explain how to get up and running; click on the highlighted sections for more information on that subject.&lt;/p&gt; &#xA;&lt;h2&gt;Before You Begin&lt;/h2&gt; &#xA;&lt;p&gt;Movable Type requires the following applications:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Perl 5.10.1 or greater;&lt;/li&gt; &#xA; &lt;li&gt;A web server like nginx, Apache or Windows IIS;&lt;/li&gt; &#xA; &lt;li&gt;Access to a database like MySQL;&lt;/li&gt; &#xA; &lt;li&gt;The following Perl modules:&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/DBI&#34;&gt;DBI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Image::Size&#34;&gt;Image::Size&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/CGI::Cookie&#34;&gt;CGI::Cookie&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/HTML::Entities&#34;&gt;HTML::Entities&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Consult the CPAN documentation to learn how to &lt;a href=&#34;http://www.cpan.org/misc/cpan-faq.html#How_installed_modules&#34;&gt;determine if a Perl module is already installed&lt;/a&gt; and, if they are not, &lt;a href=&#34;http://www.cpan.org/misc/cpan-faq.html#How_install_Perl_modules&#34;&gt;how to install them&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Upgrading Movable Type&lt;/h2&gt; &#xA;&lt;p&gt;If you are upgrading to Movable Type 7 from a previous version, we recommend that you first back up your old installation. Database backup is especially important to restore your system in case of any trouble during the upgrade process. Upload Movable Type 7&#39;s files over the same files from the previous version of Movable Type. Access Movable Type as you normally do, and you will be taken through the upgrade process.&lt;/p&gt; &#xA;&lt;h2&gt;Installing Movable Type&lt;/h2&gt; &#xA;&lt;p&gt;Before you install Movable Type:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Upload all of Movable Type&#39;s files into a directory or folder accessible via your web browser. We recommend that you separate your published content from the Movable Type executable programs by placing each in a separate directory. Typically, the installation directory is called &#39;mt&#39; and is located in the root directory of your website or within an existing directory that is already configured to allow CGI script execution.&lt;/li&gt; &#xA; &lt;li&gt;Make sure that the &#39;mt&#39; directory containing the uploaded Movable Type files has been &lt;a href=&#34;http://httpd.apache.org/docs/2.0/howto/cgi.html#nonscriptalias&#34;&gt;enabled to execute CGI scripts&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Make sure that each .cgi file (e.g. mt.cgi, mt-search.cgi, etc.) found in the Movable Type directory has the &lt;a href=&#34;http://www.elated.com/articles/understanding-permissions/&#34;&gt;execute permission&lt;/a&gt; enabled.&lt;/li&gt; &#xA; &lt;li&gt;Open that folder in your web browser -- &lt;code&gt;i.e. http://www.mywebsite.com/mt/&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You should see a Movable Type welcome screen that will take you through the installation process. If the welcome screen does not appear, please consult Troubleshooting Movable Type below.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Troubleshooting Movable Type&lt;/h2&gt; &#xA;&lt;h3&gt;Setting up your static web path&lt;/h3&gt; &#xA;&lt;p&gt;Some web servers and configurations do not allow static files such as JavaScript, CSS and image files to be located inside of a directory where CGI scripts are located. If you installed Movable Type into a cgi-bin directory, you may need to relocate the &#39;mt-static&#39; directory to another web accessible location. Read our documentation on setting up your &lt;a href=&#34;https://movabletype.org/documentation/installation/file-system.html#static-directory&#34;&gt;mt-static directory&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Internal Server Errors&lt;/h3&gt; &#xA;&lt;p&gt;If you receive an &#34;Internal Server Error&#34; message, a configuration change may be required on your web server. Please consult our &lt;a href=&#34;https://www.movabletype.org/documentation/installation/&#34;&gt;installation guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Finding more help&lt;/h3&gt; &#xA;&lt;p&gt;Need additional information or support? Check out the &lt;a href=&#34;https://www.movabletype.org/documentation/installation/&#34;&gt;Detailed Installation Guide&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>DFHack/df-structures</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/DFHack/df-structures</id>
    <link href="https://github.com/DFHack/df-structures" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dwarf Fortress data structure descriptions&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DF-structures&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/DFHack/df-structures/actions?query=workflow%3ABuild&#34;&gt;&lt;img src=&#34;https://github.com/DFHack/df-structures/workflows/Build/badge.svg?event=push&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;DF-structures is the core information on which &lt;a href=&#34;https://github.com/DFHack/dfhack&#34;&gt;DFHack&lt;/a&gt; depends.&lt;/p&gt; &#xA;&lt;p&gt;For information on how to understand this format, see &lt;a href=&#34;https://raw.githubusercontent.com/DFHack/df-structures/master/SYNTAX.rst&#34;&gt;./SYNTAX.rst&lt;/a&gt;. For how to update for a new version of DF, see &lt;a href=&#34;https://raw.githubusercontent.com/DFHack/df-structures/master/how-to-update.rst&#34;&gt;./how-to-update.rst&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Originally dfhack used a file called &lt;code&gt;Memory.xml&lt;/code&gt; to describe data structures of the game. It explicitly listed addresses of known global variables, and offsets within structures to fields, not unlike the ini files used by Dwarf Therapist.&lt;/p&gt; &#xA;&lt;p&gt;However, as the number of known fields and objects grow, maintaining the explicit offset lists quickly becomes difficult, error prone, and inefficient.&lt;/p&gt; &#xA;&lt;p&gt;This format instead represents data structure layout purely via listing all fields in the correct order, exactly like a structure definition does in the C++ language itself. There is still a file with numeric data, but it only contains absolute addresses of global objects.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Logitech/slimserver</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/Logitech/slimserver</id>
    <link href="https://github.com/Logitech/slimserver" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Server for Logitech Squeezebox players. This server is also called Logitech Media Server&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Logitech Media Server&lt;/h1&gt; &#xA;&lt;p&gt;Logitech Media Server (aka. LMS, fka. SlimServer, SqueezeCenter, SqueezeboxServer, SliMP3) is the server software that powers audio players from &lt;a href=&#34;https://www.logi.com&#34;&gt;Logitech&lt;/a&gt; (formerly known as SlimDevices), including &lt;a href=&#34;http://wiki.slimdevices.com/index.php/Squeezebox_Family_Overview&#34;&gt;Squeezebox 3rd Generation, Squeezebox Boom, Squeezebox Receiver, Transporter, Squeezebox2, Squeezebox and SLIMP3&lt;/a&gt;, and many software emulators like &lt;a href=&#34;https://sourceforge.net/projects/lmsclients/files/&#34;&gt;Squeezelite and SqueezePlay&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;With the help of many plugins, Logitech Media Server can stream not only your local music collection, but content from many music services and internet radio stations to your players.&lt;/p&gt; &#xA;&lt;p&gt;Logitech Media Server is written in Perl. It runs on pretty much any platform that Perl runs on, including Linux, Mac OSX, Solaris and Windows.&lt;/p&gt; &#xA;&lt;h2&gt;SB Radio, SB Touch, SB Controller and Logitech Media Server 8+&lt;/h2&gt; &#xA;&lt;p&gt;Unfortunately the latest Squeezebox Radio/Touch/Controller firmwares (7.x) come with a bug which causes some irritation connecting to Logitech Media Server 8+. The version string comparison function fails to recognize 8.0.0 as more recent than 7.7.3. While the bug has been fixed years ago, the fixed firmware never got released. There&#39;s a workaround built in to Logitech Media Server 8+ now, but you might still get warnings in the log file or on the device.&lt;/p&gt; &#xA;&lt;p&gt;At this point in time we&#39;re unfortunately not able to build an official, fixed firmware for distribution. &lt;a href=&#34;https://forums.slimdevices.com/showthread.php?113479-Announce-Community-Firmware-for-Squeezebox-Radio-Touch-Controller-and-LMS-8&#34;&gt;The Squeezebox Community has come up with a custom firmware&lt;/a&gt; which, among other bugs, fixes this issue. If you feel confident enough, you can install that 3rd party provided firmware on your device.&lt;/p&gt; &#xA;&lt;p&gt;If you prefer not to replace the full firmware of your Squeezebox &lt;em&gt;Radio&lt;/em&gt; (only!), there&#39;s a patch available which you can easily install:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On the Squeezebox go to Settings/Advanced/Applet Installer. Make sure &#34;Recommended Applets Only&#34; is unchecked, then install the Patch Installer. The device will re-boot.&lt;/li&gt; &#xA; &lt;li&gt;Once it&#39;s back, go to Settings/Advanced/Patch Installer and install the &#34;Version Comparison Fix&#34;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Enjoy the music on your Squeezebox!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Zimbra/zm-build</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/Zimbra/zm-build</id>
    <link href="https://github.com/Zimbra/zm-build" rel="alternate"></link>
    <summary type="html">&lt;p&gt;zm-build for Zimbra Collaboration Suite, FOSS Edition&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;zm-build&lt;/h1&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains the build script and supporting files required to create a &lt;a href=&#34;https://en.wikipedia.org/wiki/Free_and_open-source_software&#34;&gt;FOSS&lt;/a&gt; build of the &lt;a href=&#34;https://www.zimbra.com/&#34;&gt;Zimbra Collaboration Suite&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;build.pl&lt;/code&gt; - Invoke this script to produce a build. See the &lt;em&gt;Building&lt;/em&gt; section below for an example.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;instructions/&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;FOSS_remote_list.pl&lt;/code&gt; - Maps between remote label and URL&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;FOSS_repo_list.pl&lt;/code&gt; - Specifies which branches (or tags) are checked out to build each component repository.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;FOSS_staging_list.pl&lt;/code&gt; - defines the staging order and details.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup with Zimbra Development Images (used for building)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Set up docker on your box&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can then pull and run using development images (built from Zimbra/zm-base-os.git)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In case you need to customze the images for your purposes, you could maintain your own Dockerfile such as this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  $ cat Dockerfile&#xA;  FROM zimbra/zm-base-os:devcore-ubuntu-16.04&#xA;  RUN sudo apt-get install emacs my-special-tool etc..&#xA;  RUN ...&#xA;&#xA;  $ docker build -t myuser/my-devcore-ubuntu-16 .&#xA;  $ docker run -it myuser/my-devcore-ubuntu-16 bash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Ubuntu 16.04&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it zimbra/zm-base-os:devcore-ubuntu-16.04 bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ubuntu 14.04&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it zimbra/zm-base-os:devcore-ubuntu-14.04 bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ubuntu 12.04&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it zimbra/zm-base-os:devcore-ubuntu-12.04 bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CentOS 7&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it zimbra/zm-base-os:devcore-centos-7 bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CentOS 6&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it zimbra/zm-base-os:devcore-centos-6 bash&#xA;&#xA;# some tools are installed inside /home/build/.zm-dev-tools/, zm-build automatically sources this path.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setup (traditional)&lt;/h2&gt; &#xA;&lt;h3&gt;Ubuntu 16.04&lt;/h3&gt; &#xA;&lt;p&gt;The following steps assume that your are starting with a clean VM and are logged in as a non-root user with &lt;code&gt;sudo&lt;/code&gt; privileges.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get update&#xA;sudo apt-get install software-properties-common openjdk-8-jdk ant ant-optional ant-contrib ruby git maven build-essential debhelper&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ubuntu 14.04&lt;/h3&gt; &#xA;&lt;p&gt;The following steps assume that your are starting with a clean VM and are logged in as a non-root user with &lt;code&gt;sudo&lt;/code&gt; privileges.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install software-properties-common &#xA;sudo add-apt-repository ppa:openjdk-r/ppa&#xA;sudo apt-get update&#xA;sudo update-ca-certificates -f&#xA;sudo apt-get install openjdk-8-jdk ant ant-optional ant-contrib ruby git maven build-essential&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ubuntu 12.04&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install python-software-properties software-properties-common&#xA;sudo add-apt-repository ppa:openjdk-r/ppa&#xA;sudo apt-get update&#xA;sudo update-ca-certificates -f&#xA;sudo apt-get install openjdk-8-jdk ant ant-optional ant-contrib ruby git maven build-essential zlib1g-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CentOS 7&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo yum groupinstall &#39;Development Tools&#39;&#xA;sudo yum install java-1.8.0-openjdk ant ant-junit ruby git maven cpan wget perl-IPC-Cmd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CentOS 6&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo yum groupinstall &#39;Development Tools&#39;&#xA;sudo yum remove java-1.7.0-openjdk java-1.6.0-openjdk ant&#xA;sudo yum install java-1.8.0-openjdk java-1.8.0-openjdk-devel ruby git cpan wget&#xA;# install specific perl modules&#xA;sudo cpan IPC::Cmd&#xA;cd /tmp&#xA;# install maven&#xA;wget http://mirror.metrocast.net/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz&#xA;sudo tar -xf apache-maven-3.3.9-bin.tar.gz&#xA;sudo mv apache-maven-3.3.9 /opt&#xA;echo &#39;export PATH=&#34;/opt/apache-maven-3.3.9/bin:$PATH&#34;&#39; | sudo tee -a /etc/profile.d/maven.sh&#xA;# install current version of ant&#xA;wget https://www.apache.org/dist/ant/binaries/apache-ant-1.9.9-bin.zip&#xA;sudo unzip apache-ant-1.9.9-bin.zip&#xA;sudo mv apache-ant-1.9.9 /opt&#xA;echo &#39;export PATH=&#34;/opt/apache-ant-1.9.9/bin:$PATH&#34;&#39; | sudo tee -a /etc/profile.d/ant.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Create a directory for your build and check-out the &lt;code&gt;zm-build&lt;/code&gt; repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir installer-build&#xA;cd installer-build&#xA;git clone https://github.com/Zimbra/zm-build.git&#xA;cd zm-build&#xA;git checkout origin/develop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;build.pl&lt;/code&gt; command is used to build the product. Run it with the &lt;code&gt;-h&lt;/code&gt; option for help:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: ./build.pl &amp;lt;options&amp;gt;&#xA;Supported options:&#xA;   --build-no=i&#xA;   --build-ts=i&#xA;   --build-artifacts-base-dir=s&#xA;   --build-sources-base-dir=s&#xA;   --build-release=s&#xA;   --build-release-no=s&#xA;   --build-release-candidate=s&#xA;   --build-type=s&#xA;   --build-thirdparty-server=s&#xA;   --build-prod-flag!&#xA;   --build-debug-flag!&#xA;   --build-dev-tool-base-dir=s&#xA;   --interactive!&#xA;   --git-overrides=s%&#xA;   --git-default-tag=s&#xA;   --git-default-remote=s&#xA;   --git-default-branch=s&#xA;   --stop-after-checkout!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You &lt;em&gt;can&lt;/em&gt; specify all the options on the command-line, as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./build.pl --build-no=1713 --build-ts=`date +&#39;%Y%m%d%H%M%S&#39;` \&#xA;  --build-release=JUDASPRIEST --build-release-no=8.7.6 \&#xA;  --build-release-candidate=GA --build-type=FOSS \&#xA;  --build-thirdparty-server=files.zimbra.com --no-interactive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The completed build will be archived into a &lt;code&gt;*.tgz&lt;/code&gt; file that is stored in the appropriate platform and release-specific subdirectory of the &lt;code&gt;BUILDS&lt;/code&gt; directory. The above command, run on an Ubuntu 16.04 machine, created the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$HOME/installer_build/BUILDS/UBUNTU16_64/JUDASPRIEST-876/20170322153033_FOSS/zm-build/zcs-8.7.6_1713.UBUNTU16_64.20170322153033.tgz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also specify any or all of the required options by placing them in a file called &lt;code&gt;config.build&lt;/code&gt;. This file should be at the top level of the &lt;code&gt;zm-build&lt;/code&gt; directory. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;BUILD_NO                    = 1713&#xA;BUILD_RELEASE               = JUDASPRIEST&#xA;BUILD_RELEASE_NO            = 8.7.6&#xA;BUILD_RELEASE_CANDIDATE     = GA&#xA;BUILD_TYPE                  = FOSS&#xA;BUILD_THIRDPARTY_SERVER     = files.zimbra.com&#xA;INTERACTIVE                 = 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then just run &lt;code&gt;./build.pl&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The above command, run on a CentOS 7 machine with the options as shown in &lt;code&gt;config.build&lt;/code&gt;, created the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$HOME/installer-build/BUILDS/RHEL7_64/JUDASPRIEST-876/20170323061131_FOSS/zm-build/zcs-8.7.6_GA_1713.RHEL7_64.20170323061131.tgz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;The following is a walk-through of the basic steps required to do ZCS development. The first step is to simply install a current FOSS build on the machine that you wish to use. The instructions that follow assume that this has been done.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create &lt;code&gt;/home/zimbra&lt;/code&gt; and make &lt;code&gt;zimbra&lt;/code&gt; the owner.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; sudo mkdir /home/zimbra&#xA; sudo chown zimbra:zimbra /home/zimbra&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;ant&lt;/code&gt;, and &lt;code&gt;ant-contrib&lt;/code&gt; by whichever method is appropriate for your distro:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; sudo apt-get install git ant ant-contrib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or&lt;/p&gt; &lt;pre&gt;&lt;code&gt; sudo yum install git ant ant-contrib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure &lt;code&gt;/opt/zimbra/.ssh/config&lt;/code&gt; to use your ssh key for the git remotes that you need to access.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Perform the following edits on &lt;code&gt;/opt/zimbra/.bash_profile&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Comment-out &lt;code&gt;export LANG=C&lt;/code&gt; and &lt;code&gt;export LC_ALL=C&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Add export &lt;code&gt;LANG=en_US.UTF-8&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Add export &lt;code&gt;ANT_OPTS=-Ddev.home=/home/zimbra&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Change permissions on files and folders that you will be updating; e.g.,&lt;/p&gt; &lt;pre&gt;&lt;code&gt; sudo chmod -R o+w /opt/zimbra/lib/&#xA; sudo chmod -R o+w /opt/zimbra/jetty/&#xA; sudo chown zimbra:zimbra /opt/zimbra&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you run &lt;code&gt;zmfixperms&lt;/code&gt;, some of these permissions will be overwritten.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add file &lt;code&gt;/opt/zimbra/.gitconfig&lt;/code&gt; and update as needed. At a minimum:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; [user]&#xA; &#x9;email = YOUR-EMAIL-ADDRESS&#xA; &#x9;name = YOUR-FIRST-AND-LAST-NAME&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;As the &lt;code&gt;zimbra&lt;/code&gt; user, create a base directory under &lt;code&gt;/home/zimbra&lt;/code&gt; from which to work.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; cd /home/zimbra&#xA; mkdir zcs&#xA; cd zcs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now you can clone any repositories that you require and get to work.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Email Delivery&lt;/h2&gt; &#xA;&lt;p&gt;If you want email delivery to work, set up a DNS server on your host machine or another VM and configure &lt;code&gt;zimbraDNSMasterIP&lt;/code&gt; to point to it. To configure &lt;code&gt;zimbraDNSMasterIP&lt;/code&gt;, do the following as the &lt;code&gt;zimbra&lt;/code&gt; user:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;zmprov ms `zmhostname` zimbraDNSMasterIP DNS-SERVER-IP-ADDRESS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may receive the following error when trying to send email:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;No SMTP hosts available for domain&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If this occurs, you need to manually configure &lt;code&gt;zimbraSmtpHostname&lt;/code&gt; for your domain(s). To configure &lt;code&gt;zimbraSmtpHostname&lt;/code&gt;, do the following as the &lt;code&gt;zimbra&lt;/code&gt; user:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;zmprov md DOMAIN-NAME zimbraSmtpHostname `zmhostname`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;zm-mailbox example&lt;/h2&gt; &#xA;&lt;p&gt;As the &lt;code&gt;zimbra&lt;/code&gt; user, &lt;code&gt;cd /home/zimbra/zcs&lt;/code&gt;. Then clone the &lt;code&gt;zm-mailbox&lt;/code&gt; repository from github&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:Zimbra/zm-mailbox.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following sub-directories &lt;code&gt;zm-mailbox&lt;/code&gt; build and deploy separately:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;client&#xA;common&#xA;milter-conf&#xA;native&#xA;soap&#xA;store&#xA;store-conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The top-level &lt;code&gt;build.xml&lt;/code&gt; is used by the &lt;code&gt;zm-build&lt;/code&gt; scripts to create an installer package. You will not use that for normal development. There are build-order dependencies between the above-listed deployment targets. These can be determined by inspection of the &lt;code&gt;ivy.xml&lt;/code&gt; files within each subdirectory.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;grep &#39;org=&#34;zimbra&#34;&#39; store/ivy.xml&#xA;&#xA;&amp;lt;dependency org=&#34;zimbra&#34; name=&#34;zm-common&#34; rev=&#34;latest.integration&#34;/&amp;gt;&#xA;&amp;lt;dependency org=&#34;zimbra&#34; name=&#34;zm-soap&#34; rev=&#34;latest.integration&#34;/&amp;gt;&#xA;&amp;lt;dependency org=&#34;zimbra&#34; name=&#34;zm-client&#34; rev=&#34;latest.integration&#34;/&amp;gt;&#xA;&amp;lt;dependency org=&#34;zimbra&#34; name=&#34;zm-native&#34; rev=&#34;latest.integration&#34;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here you can see that the deployment target, &lt;code&gt;zm-store&lt;/code&gt; (the &lt;code&gt;store&lt;/code&gt; subdirectory), depends upon &lt;code&gt;common&lt;/code&gt;, &lt;code&gt;soap&lt;/code&gt;, &lt;code&gt;client&lt;/code&gt;, and &lt;code&gt;native&lt;/code&gt;. Here is the current ordering dependencies among all of the &lt;code&gt;zm-mailbox&lt;/code&gt; deployment targets. The higher-numbered deployment targets depend upon the lower-numbered ones. Note that &lt;code&gt;milter-conf&lt;/code&gt; and &lt;code&gt;store-conf&lt;/code&gt; have no cross-dependencies.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;native&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;common&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;soap&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;client&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;store&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;So, from the &lt;code&gt;native&lt;/code&gt; sub-directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ant -Dzimbra.buildinfo.version=8.7.6_GA clean compile publish-local deploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Comments:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The requirement to include &lt;code&gt;-Dzimbra.buildinfo.version=8.7.6_GA&lt;/code&gt; to ant is due to a change that was made when the FOSS code was moved to GitHub. You can also just add that option to your &lt;code&gt;ANT_OPTS&lt;/code&gt; enviroment variable that you defined in &lt;code&gt;$HOME/.bash_profile&lt;/code&gt; as follows:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;export ANT_OPTS=&#34;-Ddev.home=/home/zimbra -Dzimbra.buildinfo.version=8.7.6_GA&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you do that, then you can omit that &lt;code&gt;-D...&lt;/code&gt; argument to the &lt;code&gt;ant&lt;/code&gt; command and future examples will reflect that.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;publish-local&lt;/code&gt; target adds the artifact to &lt;code&gt;/home/zimbra/.zcs-deps&lt;/code&gt;, which is included in the Ivy resolution path.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;deploy&lt;/code&gt; target installs the artifact to its run-time location and restarts the appropriate service(s). This will allow you to test your changes.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then, from the &lt;code&gt;common&lt;/code&gt;, &lt;code&gt;soap&lt;/code&gt;, &lt;code&gt;client&lt;/code&gt;, and &lt;code&gt;store&lt;/code&gt; sub-directories (in that order):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ant clean compile publish-local deploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Adding a new LDAP Attribute&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARNING:It is absolutely imperative to avoid duplicate IDs for attributes. Unfortunately, that currently isn&#39;t a trivial thing to do. Need to check Zimbra 8 and Zimbra X along with all development branches. If customers get different setups using different IDs, this makes future upgrade scenarios a complete nightmare&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Start by cloning &lt;em&gt;both&lt;/em&gt; the &lt;code&gt;zm-ldap-utilites&lt;/code&gt; and the &lt;code&gt;zm-mailbox&lt;/code&gt; repositories from GitHub. Check out the appropriate branch of each. Then proceed as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Add your new attribute to &lt;code&gt;zm-mailbox/store/conf/attrs/zimbra-attrs.xml&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;From &lt;code&gt;zm-common/store&lt;/code&gt; invoke the following command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  ant generate-getters&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Do the following as &lt;code&gt;root&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  chmod -R o+w /opt/zimbra/common/etc/openldap/schema&#xA;  chmod o+w /opt/zimbra/conf/zimbra.ldif&#xA;  chmod +w /opt/zimbra/conf/attrs/zimbra-attrs.xml&#xA;  chmod -R o+w /opt/zimbra/common/etc/openldap/zimbra&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Back as the &lt;code&gt;zimbra&lt;/code&gt; user, invoke the following command from &lt;code&gt;zm-mailbox/common&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  ant deploy publish-local&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Then from the &lt;code&gt;zm-mailbox/store&lt;/code&gt; directory:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  ant deploy update-ldap-schema&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Your ZCS development server should now be running with the new attribute(s). You can test that by querying them and modifying them with &lt;code&gt;zmprov&lt;/code&gt;. You can &lt;code&gt;git add ...&lt;/code&gt; and &lt;code&gt;git commit&lt;/code&gt; your changes now.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>qt/qtrepotools</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/qt/qtrepotools</id>
    <link href="https://github.com/qt/qtrepotools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Qt Repository Tools - git commands and hooks, etc.&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>brendangregg/FlameGraph</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/brendangregg/FlameGraph</id>
    <link href="https://github.com/brendangregg/FlameGraph" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Stack trace visualizer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flame Graphs visualize profiled code&lt;/h1&gt; &#xA;&lt;p&gt;Main Website: &lt;a href=&#34;http://www.brendangregg.com/flamegraphs.html&#34;&gt;http://www.brendangregg.com/flamegraphs.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Example (click to zoom):&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.brendangregg.com/FlameGraphs/cpu-bash-flamegraph.svg&#34;&gt;&lt;img src=&#34;http://www.brendangregg.com/FlameGraphs/cpu-bash-flamegraph.svg?sanitize=true&#34; alt=&#34;Example&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Click a box to zoom the Flame Graph to this stack frame only. To search and highlight all stack frames matching a regular expression, click the &lt;em&gt;search&lt;/em&gt; button in the upper right corner or press Ctrl-F. By default, search is case sensitive, but this can be toggled by pressing Ctrl-I or by clicking the &lt;em&gt;ic&lt;/em&gt; button in the upper right corner.&lt;/p&gt; &#xA;&lt;p&gt;Other sites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The Flame Graph article in ACMQ and CACM: &lt;a href=&#34;http://queue.acm.org/detail.cfm?id=2927301&#34;&gt;http://queue.acm.org/detail.cfm?id=2927301&lt;/a&gt; &lt;a href=&#34;http://cacm.acm.org/magazines/2016/6/202665-the-flame-graph/abstract&#34;&gt;http://cacm.acm.org/magazines/2016/6/202665-the-flame-graph/abstract&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CPU profiling using Linux perf_events, DTrace, SystemTap, or ktap: &lt;a href=&#34;http://www.brendangregg.com/FlameGraphs/cpuflamegraphs.html&#34;&gt;http://www.brendangregg.com/FlameGraphs/cpuflamegraphs.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CPU profiling using XCode Instruments: &lt;a href=&#34;http://schani.wordpress.com/2012/11/16/flame-graphs-for-instruments/&#34;&gt;http://schani.wordpress.com/2012/11/16/flame-graphs-for-instruments/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CPU profiling using Xperf.exe: &lt;a href=&#34;http://randomascii.wordpress.com/2013/03/26/summarizing-xperf-cpu-usage-with-flame-graphs/&#34;&gt;http://randomascii.wordpress.com/2013/03/26/summarizing-xperf-cpu-usage-with-flame-graphs/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Memory profiling: &lt;a href=&#34;http://www.brendangregg.com/FlameGraphs/memoryflamegraphs.html&#34;&gt;http://www.brendangregg.com/FlameGraphs/memoryflamegraphs.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Other examples, updates, and news: &lt;a href=&#34;http://www.brendangregg.com/flamegraphs.html#Updates&#34;&gt;http://www.brendangregg.com/flamegraphs.html#Updates&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Flame graphs can be created in three steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Capture stacks&lt;/li&gt; &#xA; &lt;li&gt;Fold stacks&lt;/li&gt; &#xA; &lt;li&gt;flamegraph.pl&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;1. Capture stacks&lt;/h1&gt; &#xA;&lt;p&gt;Stack samples can be captured using Linux perf_events, FreeBSD pmcstat (hwpmc), DTrace, SystemTap, and many other profilers. See the stackcollapse-* converters.&lt;/p&gt; &#xA;&lt;h3&gt;Linux perf_events&lt;/h3&gt; &#xA;&lt;p&gt;Using Linux perf_events (aka &#34;perf&#34;) to capture 60 seconds of 99 Hertz stack samples, both user- and kernel-level stacks, all processes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# perf record -F 99 -a -g -- sleep 60&#xA;# perf script &amp;gt; out.perf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now only capturing PID 181:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# perf record -F 99 -p 181 -g -- sleep 60&#xA;# perf script &amp;gt; out.perf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;DTrace&lt;/h3&gt; &#xA;&lt;p&gt;Using DTrace to capture 60 seconds of kernel stacks at 997 Hertz:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# dtrace -x stackframes=100 -n &#39;profile-997 /arg0/ { @[stack()] = count(); } tick-60s { exit(0); }&#39; -o out.kern_stacks&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using DTrace to capture 60 seconds of user-level stacks for PID 12345 at 97 Hertz:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# dtrace -x ustackframes=100 -n &#39;profile-97 /pid == 12345 &amp;amp;&amp;amp; arg1/ { @[ustack()] = count(); } tick-60s { exit(0); }&#39; -o out.user_stacks&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;60 seconds of user-level stacks, including time spent in-kernel, for PID 12345 at 97 Hertz:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# dtrace -x ustackframes=100 -n &#39;profile-97 /pid == 12345/ { @[ustack()] = count(); } tick-60s { exit(0); }&#39; -o out.user_stacks&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Switch &lt;code&gt;ustack()&lt;/code&gt; for &lt;code&gt;jstack()&lt;/code&gt; if the application has a ustack helper to include translated frames (eg, node.js frames; see: &lt;a href=&#34;http://dtrace.org/blogs/dap/2012/01/05/where-does-your-node-program-spend-its-time/&#34;&gt;http://dtrace.org/blogs/dap/2012/01/05/where-does-your-node-program-spend-its-time/&lt;/a&gt;). The rate for user-level stack collection is deliberately slower than kernel, which is especially important when using &lt;code&gt;jstack()&lt;/code&gt; as it performs additional work to translate frames.&lt;/p&gt; &#xA;&lt;h1&gt;2. Fold stacks&lt;/h1&gt; &#xA;&lt;p&gt;Use the stackcollapse programs to fold stack samples into single lines. The programs provided are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;stackcollapse.pl&lt;/code&gt;: for DTrace stacks&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stackcollapse-perf.pl&lt;/code&gt;: for Linux perf_events &#34;perf script&#34; output&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stackcollapse-pmc.pl&lt;/code&gt;: for FreeBSD pmcstat -G stacks&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stackcollapse-stap.pl&lt;/code&gt;: for SystemTap stacks&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stackcollapse-instruments.pl&lt;/code&gt;: for XCode Instruments&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stackcollapse-vtune.pl&lt;/code&gt;: for Intel VTune profiles&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stackcollapse-ljp.awk&lt;/code&gt;: for Lightweight Java Profiler&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stackcollapse-jstack.pl&lt;/code&gt;: for Java jstack(1) output&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stackcollapse-gdb.pl&lt;/code&gt;: for gdb(1) stacks&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stackcollapse-go.pl&lt;/code&gt;: for Golang pprof stacks&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stackcollapse-vsprof.pl&lt;/code&gt;: for Microsoft Visual Studio profiles&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stackcollapse-wcp.pl&lt;/code&gt;: for wallClockProfiler output&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Usage example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;For perf_events:&#xA;$ ./stackcollapse-perf.pl out.perf &amp;gt; out.folded&#xA;&#xA;For DTrace:&#xA;$ ./stackcollapse.pl out.kern_stacks &amp;gt; out.kern_folded&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The output looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;unix`_sys_sysenter_post_swapgs 1401&#xA;unix`_sys_sysenter_post_swapgs;genunix`close 5&#xA;unix`_sys_sysenter_post_swapgs;genunix`close;genunix`closeandsetf 85&#xA;unix`_sys_sysenter_post_swapgs;genunix`close;genunix`closeandsetf;c2audit`audit_closef 26&#xA;unix`_sys_sysenter_post_swapgs;genunix`close;genunix`closeandsetf;c2audit`audit_setf 5&#xA;unix`_sys_sysenter_post_swapgs;genunix`close;genunix`closeandsetf;genunix`audit_getstate 6&#xA;unix`_sys_sysenter_post_swapgs;genunix`close;genunix`closeandsetf;genunix`audit_unfalloc 2&#xA;unix`_sys_sysenter_post_swapgs;genunix`close;genunix`closeandsetf;genunix`closef 48&#xA;[...]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;3. flamegraph.pl&lt;/h1&gt; &#xA;&lt;p&gt;Use flamegraph.pl to render a SVG.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./flamegraph.pl out.kern_folded &amp;gt; kernel.svg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;An advantage of having the folded input file (and why this is separate to flamegraph.pl) is that you can use grep for functions of interest. Eg:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ grep cpuid out.kern_folded | ./flamegraph.pl &amp;gt; cpuid.svg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Provided Examples&lt;/h1&gt; &#xA;&lt;h3&gt;Linux perf_events&lt;/h3&gt; &#xA;&lt;p&gt;An example output from Linux &#34;perf script&#34; is included, gzip&#39;d, as example-perf-stacks.txt.gz. The resulting flame graph is example-perf.svg:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.brendangregg.com/FlameGraphs/example-perf.svg&#34;&gt;&lt;img src=&#34;http://www.brendangregg.com/FlameGraphs/example-perf.svg?sanitize=true&#34; alt=&#34;Example&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can create this using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gunzip -c example-perf-stacks.txt.gz | ./stackcollapse-perf.pl --all | ./flamegraph.pl --color=java --hash &amp;gt; example-perf.svg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This shows my typical workflow: I&#39;ll gzip profiles on the target, then copy them to my laptop for analysis. Since I have hundreds of profiles, I leave them gzip&#39;d!&lt;/p&gt; &#xA;&lt;p&gt;Since this profile included Java, I used the flamegraph.pl --color=java palette. I&#39;ve also used stackcollapse-perf.pl --all, which includes all annotations that help flamegraph.pl use separate colors for kernel and user level code. The resulting flame graph uses: green == Java, yellow == C++, red == user-mode native, orange == kernel.&lt;/p&gt; &#xA;&lt;p&gt;This profile was from an analysis of vert.x performance. The benchmark client, wrk, is also visible in the flame graph.&lt;/p&gt; &#xA;&lt;h3&gt;DTrace&lt;/h3&gt; &#xA;&lt;p&gt;An example output from DTrace is also included, example-dtrace-stacks.txt, and the resulting flame graph, example-dtrace.svg:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.brendangregg.com/FlameGraphs/example-dtrace.svg&#34;&gt;&lt;img src=&#34;http://www.brendangregg.com/FlameGraphs/example-dtrace.svg?sanitize=true&#34; alt=&#34;Example&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can generate this using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./stackcollapse.pl example-stacks.txt | ./flamegraph.pl &amp;gt; example.svg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This was from a particular performance investigation: the Flame Graph identified that CPU time was spent in the lofs module, and quantified that time.&lt;/p&gt; &#xA;&lt;h1&gt;Options&lt;/h1&gt; &#xA;&lt;p&gt;See the USAGE message (--help) for options:&lt;/p&gt; &#xA;&lt;p&gt;USAGE: ./flamegraph.pl [options] infile &amp;gt; outfile.svg&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--title TEXT     # change title text&#xA;--subtitle TEXT  # second level title (optional)&#xA;--width NUM      # width of image (default 1200)&#xA;--height NUM     # height of each frame (default 16)&#xA;--minwidth NUM   # omit smaller functions (default 0.1 pixels)&#xA;--fonttype FONT  # font type (default &#34;Verdana&#34;)&#xA;--fontsize NUM   # font size (default 12)&#xA;--countname TEXT # count type label (default &#34;samples&#34;)&#xA;--nametype TEXT  # name type label (default &#34;Function:&#34;)&#xA;--colors PALETTE # set color palette. choices are: hot (default), mem,&#xA;                 # io, wakeup, chain, java, js, perl, red, green, blue,&#xA;                 # aqua, yellow, purple, orange&#xA;--bgcolors COLOR # set background colors. gradient choices are yellow&#xA;                 # (default), blue, green, grey; flat colors use &#34;#rrggbb&#34;&#xA;--hash           # colors are keyed by function name hash&#xA;--cp             # use consistent palette (palette.map)&#xA;--reverse        # generate stack-reversed flame graph&#xA;--inverted       # icicle graph&#xA;--flamechart     # produce a flame chart (sort by time, do not merge stacks)&#xA;--negate         # switch differential hues (blue&amp;lt;-&amp;gt;red)&#xA;--notes TEXT     # add notes comment in SVG (for debugging)&#xA;--help           # this message&#xA;&#xA;eg,&#xA;./flamegraph.pl --title=&#34;Flame Graph: malloc()&#34; trace.txt &amp;gt; graph.svg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As suggested in the example, flame graphs can process traces of any event, such as malloc()s, provided stack traces are gathered.&lt;/p&gt; &#xA;&lt;h1&gt;Consistent Palette&lt;/h1&gt; &#xA;&lt;p&gt;If you use the &lt;code&gt;--cp&lt;/code&gt; option, it will use the $colors selection and randomly generate the palette like normal. Any future flamegraphs created using the &lt;code&gt;--cp&lt;/code&gt; option will use the same palette map. Any new symbols from future flamegraphs will have their colors randomly generated using the $colors selection.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t like the palette, just delete the palette.map file.&lt;/p&gt; &#xA;&lt;p&gt;This allows your to change your colorscheme between flamegraphs to make the differences REALLY stand out.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;p&gt;Say we have 2 captures, one with a problem, and one when it was working (whatever &#34;it&#34; is):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cat working.folded | ./flamegraph.pl --cp &amp;gt; working.svg&#xA;# this generates a palette.map, as per the normal random generated look.&#xA;&#xA;cat broken.folded | ./flamegraph.pl --cp --colors mem &amp;gt; broken.svg&#xA;# this svg will use the same palette.map for the same events, but a very&#xA;# different colorscheme for any new events.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Take a look at the demo directory for an example:&lt;/p&gt; &#xA;&lt;p&gt;palette-example-working.svg&lt;br&gt; palette-example-broken.svg&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>smxi/inxi</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/smxi/inxi</id>
    <link href="https://github.com/smxi/inxi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;inxi is a full featured CLI system information tool. It is available in most Linux distribution repositories, and does its best to support the BSDs.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;README for inxi - a command line system information tool&lt;/p&gt; &#xA;&lt;p&gt;The new faster, more powerful Perl inxi is here! File all issue reports with the master branch. All support for versions prior to 3.0 is now ended, sorry.&lt;/p&gt; &#xA;&lt;p&gt;Make sure to update to the current inxi from the master branch before filing any issue reports. The code in pre 2.9 versions literally no longer exists in inxi 3. Bugs from earlier versions cannot usually be solved in the new version since the pre 2.9 and the 2.9 and later versions are completely different internally.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;DONATE&lt;/h2&gt; &#xA;&lt;p&gt;Help support the project with a one time or a sustaining donation.&lt;/p&gt; &#xA;&lt;p&gt;Paypal: &lt;a href=&#34;https://www.paypal.com/donate/?hosted_button_id=77DQVM6A4L5E2&#34;&gt;https://www.paypal.com/donate/?hosted_button_id=77DQVM6A4L5E2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Open Collective: &lt;a href=&#34;https://opencollective.com/inxi&#34;&gt;https://opencollective.com/inxi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;================================================================================ DEVELOPMENT AND ISSUES&lt;/h2&gt; &#xA;&lt;p&gt;Make inxi better! Expand supported hardware and OS data, fix broken items!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;HELP PROJECT DEVELOPMENT! SUBMIT A DEBUGGER DATASET&lt;/h2&gt; &#xA;&lt;p&gt;This is easy to do, and only takes a few seconds. These datasets really help the project add and debug features. You will generally also be asked to provide this data for non trivial issue reports.&lt;/p&gt; &#xA;&lt;p&gt;Note that the following options are present:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Generate local gz&#39;ed debugger dataset. Leaves gz on your system: inxi version &amp;gt;= 3: inxi --debug 20&lt;/li&gt; &#xA; &lt;li&gt;Generate, upload gz&#39;ed debugger dataset. Leaves gz on your system: inxi version &amp;gt;= 3: inxi --debug 21&lt;/li&gt; &#xA; &lt;li&gt;Generate, upload, delete gz&#39;ed debugger dataset: inxi version &amp;gt;= 3: inxi --debug 22&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can run these as regular user, or root/sudo, which will gather a bit more data, like from dmidecode, and other tools that need superuser permissions to run.&lt;/p&gt; &#xA;&lt;p&gt;ARM (plus MIPS, SPARC, PowerPC) and BSD datasets are particularly appreciated because we simply do not have enough of those.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;FILE AN ISSUE IF YOU FIND SOMETHING MISSING, BROKEN, OR FOR AN ENHANCEMENT&lt;/h2&gt; &#xA;&lt;p&gt;inxi strives to support the widest range of operating systems and hardware, from the most simple consumer desktops, to the most advanced professional hardware and servers.&lt;/p&gt; &#xA;&lt;p&gt;The issues you post help maintain or expand that support, and are always appreciated since user data and feedback is what keeps inxi working and supporting the latest (or not so latest) hardware and operating systems.&lt;/p&gt; &#xA;&lt;p&gt;See INXI VERSION/SUPPORT/ISSUES/BUGS INFORMATION for more about issues/support.&lt;/p&gt; &#xA;&lt;p&gt;See BSD/UNIX below for qualifications re BSDs, and OSX in particular.&lt;/p&gt; &#xA;&lt;h2&gt;================================================================================ SOURCE VERSION CONTROL&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/smxi/inxi&#34;&gt;https://github.com/smxi/inxi&lt;/a&gt; MAIN BRANCH: master DEVELOPMENT BRANCHES: inxi-perl, one, two&lt;/p&gt; &#xA;&lt;p&gt;inxi-perl is the dev branch, the others are rarely if ever used. inxi itself has the built in feature to be able to update itself from anywhere, including these branches, which is very useful for development and debugging on various user systems.&lt;/p&gt; &#xA;&lt;p&gt;PULL REQUESTS: Please talk to me before starting to work on patches of any reasonable complexity. inxi is hard to work on, and you have to understand how it works before submitting patches, unless it&#39;s a trivial bug fix. Please: NEVER even think about looking at or using previous inxi commits, previous to the current master version, as a base for a patch. If you do, your patch / pull request will probably be rejected. Developers, get your version from the inxi-perl branch, pinxi, otherwise you may not be current to actual development versions. inxi-perl pinxi is always equal to or ahead of master branch inxi.&lt;/p&gt; &#xA;&lt;p&gt;Man page updates, doc page updates, etc, of course, are easy and will probably be accepted, as long as they are properly formatted and logically coherent.&lt;/p&gt; &#xA;&lt;p&gt;When under active development, inxi releases early, and releases often.&lt;/p&gt; &#xA;&lt;p&gt;PACKAGERS: inxi has one and only one &#39;release&#39;, and that is the current commit/version in the master branch (plus pinxi inxi-perl branch, of course, but those should never be packaged).&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;MASTER BRANCH&lt;/h2&gt; &#xA;&lt;p&gt;This is the only supported branch, and the current latest commit/version is the only supported &#39;release&#39;. There are no &#39;releases&#39; of inxi beyond the current commit/version in master. All past versions are not supported.&lt;/p&gt; &#xA;&lt;p&gt;git clone &lt;a href=&#34;https://github.com/smxi/inxi&#34;&gt;https://github.com/smxi/inxi&lt;/a&gt; --branch master --single-branch&lt;/p&gt; &#xA;&lt;p&gt;OR direct fast and easy install:&lt;/p&gt; &#xA;&lt;p&gt;wget -O inxi &lt;a href=&#34;https://github.com/smxi/inxi/raw/master/inxi&#34;&gt;https://github.com/smxi/inxi/raw/master/inxi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;OR easy to remember shortcut (which redirects to github):&lt;/p&gt; &#xA;&lt;p&gt;wget -O inxi &lt;a href=&#34;https://smxi.org/inxi&#34;&gt;https://smxi.org/inxi&lt;/a&gt; wget -O inxi smxi.org/inxi&lt;/p&gt; &#xA;&lt;p&gt;NOTE: Just because github calls tagged commits &#39;Releases&#39; does not mean they are releases! I can&#39;t change the words on the tag page. They are tagged commits, period. A tag is a pointer to a commit, and has no further meaning.&lt;/p&gt; &#xA;&lt;p&gt;If your distribution has blocked -U self updater and you want a newer version:&lt;/p&gt; &#xA;&lt;p&gt;Open /etc/inxi.conf and change false to true: B_ALLOW_UPDATE=true&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;DEVELOPMENT BRANCH&lt;/h2&gt; &#xA;&lt;p&gt;All active development is now done on the inxi-perl branch (pinxi):&lt;/p&gt; &#xA;&lt;p&gt;git clone &lt;a href=&#34;https://github.com/smxi/inxi&#34;&gt;https://github.com/smxi/inxi&lt;/a&gt; --branch inxi-perl --single-branch&lt;/p&gt; &#xA;&lt;p&gt;OR direct fast and easy install:&lt;/p&gt; &#xA;&lt;p&gt;wget -O pinxi &lt;a href=&#34;https://github.com/smxi/inxi/raw/inxi-perl/pinxi&#34;&gt;https://github.com/smxi/inxi/raw/inxi-perl/pinxi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;OR easy to remember shortcut (which redirects to github):&lt;/p&gt; &#xA;&lt;p&gt;wget -O pinxi &lt;a href=&#34;https://smxi.org/pinxi&#34;&gt;https://smxi.org/pinxi&lt;/a&gt; wget -O pinxi smxi.org/pinxi&lt;/p&gt; &#xA;&lt;p&gt;Once new features have been debugged, tested, and are reasonably stable, pinxi is copied to inxi in the master branch.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s a good idea to check with pinxi if you want to make sure your issue has not been corrected, since pinxi is always equal to or ahead of inxi.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;LEGACY INXI (in inxi-legacy repo)&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to look at the Gawk/Bash version of inxi, you can find it in the inxi-legacy repo, as binxi in the /inxi-legacy directory:&lt;/p&gt; &#xA;&lt;p&gt;Direct fast and easy install:&lt;/p&gt; &#xA;&lt;p&gt;wget -O binxi &lt;a href=&#34;https://github.com/smxi/inxi-legacy/raw/master/inxi-legacy/binxi&#34;&gt;https://github.com/smxi/inxi-legacy/raw/master/inxi-legacy/binxi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;OR easy to remember shortcut (which redirects to github):&lt;/p&gt; &#xA;&lt;p&gt;wget -O binxi &lt;a href=&#34;https://smxi.org/binxi&#34;&gt;https://smxi.org/binxi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This version will not be maintained, and it&#39;s unlikely that any time will be spent on it in the future, but it is there in case it&#39;s of use or interest to anyone.&lt;/p&gt; &#xA;&lt;p&gt;This was kept for a long time as the inxi-legacy branch of inxi, but was moved to the inxi-legacy repo 2021-09-24.&lt;/p&gt; &#xA;&lt;h2&gt;================================================================================ SUPPORT INFO&lt;/h2&gt; &#xA;&lt;p&gt;Do not ask for basic help that reading the inxi -h / --help menus, or man page would show you, and do not ask for features to be added that inxi already has. Also do not ask for support if your distro won&#39;t update its inxi version, some are bad about that.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;DOCUMENTATION&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://smxi.org/docs/inxi.htm&#34;&gt;https://smxi.org/docs/inxi.htm&lt;/a&gt; (smxi.org/docs/ is easier to remember, and is one click away from inxi.htm). The one page wiki on github is only a pointer to the real resources.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/smxi/inxi/tree/inxi-perl/docs&#34;&gt;https://github.com/smxi/inxi/tree/inxi-perl/docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Contains specific Perl inxi documentation, of interest mostly to developers. Includes internal inxi tools, values, configuration items. Also has useful information about Perl version support, including the list of Core modules that &lt;em&gt;should&lt;/em&gt; be included in a distribution&#39;s core modules, but which are unfortunately sometimes removed.&lt;/p&gt; &#xA;&lt;p&gt;INXI CONFIGURATION: &lt;a href=&#34;https://smxi.org/docs/inxi-configuration.htm&#34;&gt;https://smxi.org/docs/inxi-configuration.htm&lt;/a&gt; HTML MAN PAGE: &lt;a href=&#34;https://smxi.org/docs/inxi-man.htm&#34;&gt;https://smxi.org/docs/inxi-man.htm&lt;/a&gt; INXI OPTIONS PAGE: &lt;a href=&#34;https://smxi.org/docs/inxi-options.htm&#34;&gt;https://smxi.org/docs/inxi-options.htm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;NOTE: Check the inxi version number on each doc page to see which version will support the options listed. The man and options page also link to a legacy version, pre 2.9.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;IRC&lt;/h2&gt; &#xA;&lt;p&gt;You can go to: irc.oftc.net or irc.libera.chat channel #smxi&lt;/p&gt; &#xA;&lt;p&gt;but be prepared to wait around for a while to get a response. Generally it&#39;s better to use github issues.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;ISSUES&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/smxi/inxi/issues&#34;&gt;https://github.com/smxi/inxi/issues&lt;/a&gt; No issues accepted for non current inxi versions. See below for more on that. Unfortunately as of 2.9, no support or issues can be accepted for older inxi&#39;s because inxi 2.9 (Perl) and newer is a full rewrite, and legacy inxi is not being supported since our time here on earth is finite (plus of course, one reason for the rewrite was to never have to work with Gawk-&amp;gt;Bash again!).&lt;/p&gt; &#xA;&lt;p&gt;Sys Admin type inxi users always get the first level of support. ie, convince us you run real systems and networks, and your issue shoots to the top of the line. As do any real bugs.&lt;/p&gt; &#xA;&lt;p&gt;Failure to supply requested debugger data will lead To a distinct lack of interest on our part to help you with a bug. ie, saying, oh, it doesn&#39;t work, doesn&#39;t cut it, unless it&#39;s obvious why.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;SUPPORT FORUMS&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://techpatterns.com/forums/forum-33.html&#34;&gt;https://techpatterns.com/forums/forum-33.html&lt;/a&gt; This is the best place to place support issues that may be complicated.&lt;/p&gt; &#xA;&lt;p&gt;If you are developer, use: DEVELOPER FORUMS: &lt;a href=&#34;https://techpatterns.com/forums/forum-32.html&#34;&gt;https://techpatterns.com/forums/forum-32.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;================================================================================ ABOUT INXI&lt;/h2&gt; &#xA;&lt;p&gt;inxi is a command line system information tool. It was forked from the ancient and mindbendingly perverse yet ingenius infobash, by locsmif.&lt;/p&gt; &#xA;&lt;p&gt;That was a buggy, impossible to update or maintain piece of software, so the fork fixed those core issues, and made it flexible enough to expand the utility of the original ideas. Locmsif has given his thumbs up to inxi, so don&#39;t be fooled by legacy infobash stuff you may see out there.&lt;/p&gt; &#xA;&lt;p&gt;inxi is lower case, except when I create a text header here in a file like this, but it&#39;s always lower case. Sometimes to follow convention I will use upper case inxi to start a sentence, but i find it a bad idea since invariably, someone will repeat that and type it in as the command name, then someone will copy that, and complain that the command: Inxi doesn&#39;t exist...&lt;/p&gt; &#xA;&lt;p&gt;The primary purpose of inxi is for support, and sys admin use. inxi is used widely for forum and IRC support, which is I believe it&#39;s most common function.&lt;/p&gt; &#xA;&lt;p&gt;If you are piping output to paste or post (or writing to file), inxi now automatically turns off color codes, so the inxi 2.3.xx and older suggestion to use -c 0 to turn off colors is no longer required.&lt;/p&gt; &#xA;&lt;p&gt;inxi strives to be as accurate as possible, but some things, like memory/ram data, depend on radically unreliable system self reporting based on OEM filling out data correctly, which doesn&#39;t often happen, so in those cases, you want to confirm things like ram capacity with a reputable hardware source, like crucial.com, which has the best ram hardware tool I know of.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;COMMITMENT TO LONG TERM STABILITY&lt;/h2&gt; &#xA;&lt;p&gt;The core mission of inxi is to always work on all systems all the time. Well, all systems with the core tools inxi requires to operate installed.&lt;/p&gt; &#xA;&lt;p&gt;What this means is this: you can have a 10 year old box, or probably 15, not sure, and you can install today&#39;s inxi on it, and it will run. It won&#39;t run fast, but it will run. I test inxi on a 200 MHz laptop from about 1998 to keep it honest. That&#39;s also what was used to optimize the code at some points, since differences appear as seconds, not 10ths or 100ths of seconds on old systems like that.&lt;/p&gt; &#xA;&lt;p&gt;inxi is being written, and tested, on Perl as old as 5.08, and will work on any system that runs Perl 5.08 or later. Pre 2.9.0 Gawk/Bash inxi will also run on any system no matter how old, within reason, so there should be no difference.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;FEATURES AND FUNCTIONALITY&lt;/h2&gt; &#xA;&lt;p&gt;inxi&#39;s functionality continues to grow over time, but it&#39;s also important to understand that each core new feature usually requires about 30 days work to get it stable. So new features are not trivial things, nor is it acceptable to submit a patch that works only on your personal system.&lt;/p&gt; &#xA;&lt;p&gt;One inxi feature (-s, sensors data), took about 2 hours to get working in the alpha test on the local dev system, but then to handle the massive chaos that is actual user sensors output and system variations, it took several rewrites and about 30 days to get somewhat reliable for about 98% or so of inxi users. So if your patch is rejected, it&#39;s likely because you have not thought it through adequately, have not done adequate testing cross system and platform, etc.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;SUPPORTED VERSIONS / DISTRO VERSIONS&lt;/h2&gt; &#xA;&lt;p&gt;Important: the only version of inxi that is supported is the latest current master branch version/commit. No issue reports or bug reports will be accepted for anything other than current master branch. No merges, attempts to patch old code from old versions, will be considered or accepted. If you are not updated to the latest inxi, do not file a bug report since it&#39;s probably been fixed ages ago. If your distro isn&#39;t packaging a current inxi, then file a bug report with your packager, not here.&lt;/p&gt; &#xA;&lt;p&gt;inxi is &#39;rolling release&#39; software, just like Debian Sid, Gentoo, or Arch Linux are rolling release GNU/Linux distributions, with no &#39;release points&#39;.&lt;/p&gt; &#xA;&lt;p&gt;Distributions should never feel any advantage comes from using old inxi versions because inxi has as a core promise to you, the end user, that it will never require new tools to run. New tools may be required for a new feature, but that will always be handled internally by inxi, and will not cause any operational failures. This is a promise, and I will never as long as I run this project violate that core inxi requirement. Old inxi is NOT more stable than current inxi, it&#39;s just old, and lacking in bug fixes and features. For pre 2.9 versions, it&#39;s also significantly slower, and with fewer features.&lt;/p&gt; &#xA;&lt;p&gt;Your distro not updating inxi ever, then failing to show something that is fixed in current inxi is not a bug, and please do not post it here. File the issue with your distro, not here. Updating inxi in a package pool will NEVER make anything break or fail, period. It has no version based dependencies, just software, like Perl 5.xx, lspci, etc. There is never a valid reason to not update inxi in a package pool of any distro in the world (with one single known exception, the Slackware based Puppy Linux release, which ships without the full Perl language. The Debian based one works fine).&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;SEMANTIC VERSION NUMBERING&lt;/h2&gt; &#xA;&lt;p&gt;inxi uses &#39;semantic&#39; version numbering, where the version numbers actually mean something.&lt;/p&gt; &#xA;&lt;p&gt;The version number follows these guidelines:&lt;/p&gt; &#xA;&lt;p&gt;Using example 3.2.28-6&lt;/p&gt; &#xA;&lt;p&gt;The first digit(s), &#34;3&#34;, is a major version, and almost never changes. Only a huge milestone, or if inxi reaches 3.9.xx, when it will simply move up to 4.0.0 just to keep it clean, would cause a change.&lt;/p&gt; &#xA;&lt;p&gt;The second digit(s), &#34;2&#34;, means a new real feature has been added. Not a tweaked existing feature, an actual new feature, which usually also has a new argument option letter attached. The second number goes from 0 to 9, and then rolls over the first after 9.&lt;/p&gt; &#xA;&lt;p&gt;The third, &#34;28&#34;, is for everything not covered by 1 and 2, can cover bug fixes, tweaks to existing features to add support for something, full on refactors of existing features, pretty much anything where you want the end user to know that they are not up to date. The third goes from 0 to 99, then rolls over the second.&lt;/p&gt; &#xA;&lt;p&gt;The fourth, &#34;6&#34;, is extra information about certain types of inxi updates. I don&#39;t usually use this last one in master branch, but you will see it in branches one,two, inxi-perl, inxi-legacy since that is used to confirm remote test system patch version updates.&lt;/p&gt; &#xA;&lt;p&gt;The fourth number, when used, will be alpha-numeric, a common version would be, in say, branch one: 2.2.28-b1-02, in other words: branch 1 patch version 2.&lt;/p&gt; &#xA;&lt;p&gt;In the past, now and then the 4th, or &#39;patch&#39;, number, was used in trunk/master branches of inxi, but I&#39;ve pretty much stopped doing that because it&#39;s confusing.&lt;/p&gt; &#xA;&lt;p&gt;inxi does not use the fiction of date based versioning because that imparts no useful information to the end user, when you look at say, 2.2.28, and you last had 2.2.11, you can know with some certainty that inxi has no major new features, just refactors or expansion of existing logic, enhancements, fine tunings, and bug fixes. And if you see one with 2.3.2, you will know that there is a new feature, almost, but not always, linked to one or more new line output items. Sometimes a the changes in the third number can be quite significant, sometimes it&#39;s a one line code or bug fix.&lt;/p&gt; &#xA;&lt;p&gt;A move to a new full version number, like the rewrite of inxi to Perl, would reflect in first version say, 2.9.01, then after a period of testing, where most little glitches are fixed, a move to 3.0.0. These almost never happen. I do not expect for example version 4.0 to ever happen after 3.0 (early 2018), unless so many new features are added that it actually hits 3.9, then it would roll over to 4.&lt;/p&gt; &#xA;&lt;h2&gt;================================================================================ BSD / UNIX&lt;/h2&gt; &#xA;&lt;p&gt;BSD support is not as complete as GNU/Linux support due to the fact some of the data simply is not available, or is structured in a way that makes it unique to each BSD, or is difficult to process. This fragmentation makes supporting BSDs far more difficult than it should be in the 21st century.&lt;/p&gt; &#xA;&lt;p&gt;The BSD support in inxi is a slowly evolving process. Evolving in the strict technical sense of evolutionary fitness, following fitness for purpose, that is (like OpenBSD&#39;s focus on security and high quality code, for instance), not as in progressing forwards. Features are being added as new data sources and types are discovered, and others are being dropped, as prior data sources degenerate or mutate to a point where trying to deal with them stops being interesting.&lt;/p&gt; &#xA;&lt;p&gt;Once it starts growing evident that a particular branch has hit a dead end and no longer warrants the time required to follow it to its extinction, support will be reduced to basically maintenance mode. In other words, inxi follows this evolutionary process, and does not try to revive dead or dying branches, since that&#39;s a waste of time.&lt;/p&gt; &#xA;&lt;p&gt;Note that due to time/practicality constraints, in general, only the original BSD branches will be supported: OpenBSD+derived; FreeBSD+derived; NetBSD+derived (in that order of priority, with a steep curve down from first to last). With the caveat that since it&#39;s my time being volunteered here, if the BSD in question has basically no users, or has bad tools, or no usable tools, or inconsistent or unreliable tools, or bad / weak data, or, worst, no actual clear reason to exist, I&#39;m not willing to spend time on it as a general rule.&lt;/p&gt; &#xA;&lt;p&gt;Other UNIX variants will generally only get the work required to make internal BSD flags get set and to remove visible output errors. I am not interested in them at all, zero. They are at this point basically historical artifacts, of interest only to computer museums as far as I&#39;m concerned.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;TRUE BSDs&lt;/h2&gt; &#xA;&lt;p&gt;All BSD issue reports unless trivial and obvious will require 1 of two things:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;a full --debug 21 data dump so I don&#39;t have to spend days trying to get the information I need to resolve the issue, file by painful file, from the issue poster. This is only the start of the process, and realistically requires 2. to complete it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;direct SSH access to at least a comparable live BSD version/system, that is, if the issue is on a laptop, access has to be granted to the laptop, or a similar one.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Option 2 is far preferred because in terms of my finite time on this planet of ours, the fact is, if I don&#39;t have direct (or SSH) access, I can&#39;t get much done, and the little I can get done will take 10 to 1000x longer than it should. That&#39;s my time spent (and sadly, with BSDs, largely wasted), not yours.&lt;/p&gt; &#xA;&lt;p&gt;I decided I have to adopt this much more strict policy with BSDs after wasting untold hours on trying to get good BSD support, only to see that support break a few years down the road as the data inxi relied on changed structure or syntax, or the tools changed, or whatever else makes the BSDs such a challenge to support. In the end, I realized, the only BSDs that are well supported are ones that I have had direct access to for debugging and testing.&lt;/p&gt; &#xA;&lt;p&gt;I will always accept patches that are well done, if they do not break GNU/Linux, and extend BSD support, or add new BSD features, and follow the internal inxi logic, and aren&#39;t too long. inxi sets initial internal flags to identify that it is a BSD system vs a GNU/Linux system, and preloads some data structures for BSD use, so make sure you understand what inxi is doing before you get into it.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;APPLE CORPORATION OSX&lt;/h2&gt; &#xA;&lt;p&gt;Non-free/libre OSX is in my view a BSD in name only. It is the least Unix-like operating system I&#39;ve ever seen that claims to be a Unix, its tools are mutated, its data randomly and non-standardly organized, and it totally fails to respect the &#39;spirit&#39; of Unix, even though it might pass some random tests that certify a system as a &#39;Unix&#39;.&lt;/p&gt; &#xA;&lt;p&gt;If you want me to use my time on OSX features or issues, you have to pay me, because Apple is all about money, not freedom (that&#39;s what the &#39;free&#39; in &#39;free software&#39; is referring to, not cost), and I&#39;m not donating my finite time in support of non-free operating systems, particularly not one with a market capitalization hovering around 1 trillion dollars, with usually well north of 100 billion dollars in liquid assetts.&lt;/p&gt; &#xA;&lt;h2&gt;================================================================================ MICROSOFT CORPORATION WINDOWS&lt;/h2&gt; &#xA;&lt;p&gt;To be quite clear, support for Windows will never happen, I don&#39;t care about Windows, and don&#39;t want to waste a second of my time on it. I also don&#39;t care about cygwin issues, beyond maybe hyper basic issues that can be handled with a line or two of code. inxi isn&#39;t going to ruin itself by trying to handle the silly Microsoft path separator , and obviously there&#39;s zero chance of my trying to support PowerShell or whatever else they come up with.&lt;/p&gt; &#xA;&lt;p&gt;While I would consider doing Apple stuff if you paid my hourly full market rates, in advance, I would not consider touching Windows for any amount of money. My best advice there is, fork inxi, and do it yourself if you want it. You&#39;ll soon run screaming from the project however, once you realize what a nightmare you&#39;ve stepped into.&lt;/p&gt; &#xA;&lt;p&gt;If you are interested in something like inxi for Windows, I suggest, rather than forking inxi, you just start out from scratch, and build the features up one by one, that will lead to much better code.&lt;/p&gt; &#xA;&lt;h3&gt;EOF&lt;/h3&gt;</summary>
  </entry>
  <entry>
    <title>ddclient/ddclient</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/ddclient/ddclient</id>
    <link href="https://github.com/ddclient/ddclient" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is the new home for ddclient. Ddclient is a Perl client used to update dynamic DNS entries for accounts on &#39;Dynamic DNS Network Services&#39; free DNS service. It currently supports a lot of different routers and a few different services.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DDCLIENT v3.10.0&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;ddclient&lt;/code&gt; is a Perl client used to update dynamic DNS entries for accounts on many dynamic DNS services.&lt;/p&gt; &#xA;&lt;h2&gt;Supported services&lt;/h2&gt; &#xA;&lt;p&gt;Dynamic DNS services currently supported include:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;DynDNS.com  - See http://www.dyndns.com for details on obtaining a free account.&#xA;Zoneedit    - See http://www.zoneedit.com for details.&#xA;EasyDNS     - See http://www.easydns.com for details.&#xA;NameCheap   - See http://www.namecheap.com for details&#xA;DslReports  - See http://www.dslreports.com for details&#xA;Sitelutions - See http://www.sitelutions.com for details&#xA;Loopia      - See http://www.loopia.se for details&#xA;Noip        - See http://www.noip.com/ for details&#xA;Freedns     - See http://freedns.afraid.org/ for details&#xA;ChangeIP    - See http://www.changeip.com/ for details&#xA;nsupdate    - See nsupdate(1) and ddns-confgen(8) for details&#xA;CloudFlare  - See https://www.cloudflare.com/ for details&#xA;GoDaddy     - See https://www.godaddy.com/ for details&#xA;Google      - See http://www.google.com/domains for details&#xA;Duckdns     - See https://duckdns.org/ for details&#xA;Freemyip    - See https://freemyip.com for details&#xA;woima.fi    - See https://woima.fi/ for details&#xA;Yandex      - See https://domain.yandex.com/ for details&#xA;DNS Made Easy - See https://dnsmadeeasy.com/ for details&#xA;DonDominio  - See https://www.dondominio.com for details&#xA;NearlyFreeSpeech.net - See https://www.nearlyfreespeech.net/services/dns for details&#xA;OVH         - See https://www.ovh.com for details&#xA;ClouDNS     - See https://www.cloudns.net&#xA;dinahosting - See https://dinahosting.com&#xA;Gandi       - See https://gandi.net&#xA;dnsexit     - See https://dnsexit.com/ for details&#xA;1984.is     - See https://www.1984.is/product/freedns/ for details&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;ddclient&lt;/code&gt; now supports many cable and DSL broadband routers.&lt;/p&gt; &#xA;&lt;p&gt;Comments, suggestions and requests: use the issues on &lt;a href=&#34;https://github.com/ddclient/ddclient/issues/new&#34;&gt;https://github.com/ddclient/ddclient/issues/new&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The code was originally written by Paul Burry and is now hosted and maintained through github.com. Please check out &lt;a href=&#34;http://ddclient.net&#34;&gt;http://ddclient.net&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;REQUIREMENTS&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An account from a supported dynamic DNS service provider&lt;/li&gt; &#xA; &lt;li&gt;Perl v5.10.1 or later &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;IO::Socket::SSL&lt;/code&gt; perl library for ssl-support&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;JSON::PP&lt;/code&gt; perl library for JSON support&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;IO::Socket:INET6&lt;/code&gt; perl library for ipv6-support&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Linux, macOS, or any other Unix-ish system&lt;/li&gt; &#xA; &lt;li&gt;An implementation of &lt;code&gt;make&lt;/code&gt; (such as &lt;a href=&#34;https://www.gnu.org/software/make/&#34;&gt;GNU Make&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;If you are installing from a clone of the Git repository, you will also need &lt;a href=&#34;https://www.gnu.org/software/autoconf/&#34;&gt;GNU Autoconf&lt;/a&gt; and &lt;a href=&#34;https://www.gnu.org/software/automake/&#34;&gt;GNU Automake&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;DOWNLOAD&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ddclient/ddclient/releases&#34;&gt;https://github.com/ddclient/ddclient/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;INSTALLATION&lt;/h2&gt; &#xA;&lt;h3&gt;Distribution Package&lt;/h3&gt; &#xA;&lt;a href=&#34;https://repology.org/project/ddclient/versions&#34;&gt; &lt;img src=&#34;https://repology.org/badge/vertical-allrepos/ddclient.svg?sanitize=true&#34; alt=&#34;Packaging status&#34; align=&#34;right&#34;&gt; &lt;/a&gt; The easiest way to install ddclient is to install a package offered by your operating system. See the image to the right for a list of distributions with a ddclient package. &#xA;&lt;h3&gt;Manual Installation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Extract the distribution tarball (&lt;code&gt;.tar.gz&lt;/code&gt; file) and &lt;code&gt;cd&lt;/code&gt; into the directory:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;tar xvfa ddclient-3.10.0.tar.gz&#xA;cd ddclient-3.10.0&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(If you are installing from a clone of the Git repository, you must run &lt;code&gt;./autogen&lt;/code&gt; before continuing to the next step.)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the following commands to build and install:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./configure \&#xA;    --prefix=/usr \&#xA;    --sysconfdir=/etc/ddclient \&#xA;    --localstatedir=/var&#xA;make&#xA;make VERBOSE=1 check&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Edit &lt;code&gt;/etc/ddclient/ddclient.conf&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;systemd&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp sample-etc_systemd.service /etc/systemd/system/ddclient.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;enable automatic startup when booting&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;systemctl enable ddclient.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;start the first time by hand&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;systemctl start ddclient.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Redhat style rc files and daemon-mode&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp sample-etc_rc.d_init.d_ddclient /etc/rc.d/init.d/ddclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;enable automatic startup when booting. also check your distribution&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/sbin/chkconfig --add ddclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;start the first time by hand&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/etc/rc.d/init.d/ddclient start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Alpine style rc files and daemon-mode&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp sample-etc_rc.d_init.d_ddclient.alpine /etc/init.d/ddclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;enable automatic startup when booting&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rc-update add ddclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;make sure you have perl installed&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apk add perl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;start the first time by hand&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rc-service ddclient start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Ubuntu style rc files and daemon-mode&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp sample-etc_rc.d_init.d_ddclient.ubuntu /etc/init.d/ddclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;enable automatic startup when booting&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;update-rc.d ddclient defaults&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;make sure you have perl and the required modules installed&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt-get install perl libdata-validate-ip-perl libio-socket-ssl-perl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;if you plan to use cloudflare or feedns you need the perl json module&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt-get install libjson-pp-perl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;for IPv6 you also need to instal the perl io-socket-inet6 module&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt install libio-socket-inet6-perl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;start the first time by hand&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;service ddclient start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;FreeBSD style rc files and daemon mode&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir -p /usr/local/etc/rc.d&#xA;cp sample-etc_rc.d_ddclient.freebsd /usr/local/etc/rc.d/ddclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;enable automatic startup when booting&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sysrc ddclient_enable=YES&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;make sure you have perl and the required modules installed&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pkg install perl5 p5-Data-Validate-IP p5-IO-Socket-SSL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;if you plan to use cloudflare or feedns you need the perl json module&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pkg install p5-JSON-PP&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;start the service manually for the first time&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;service ddclient start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are not using daemon-mode, configure cron and dhcp or ppp as described below.&lt;/p&gt; &#xA;&lt;h2&gt;TROUBLESHOOTING&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;enable debugging and verbose messages: &lt;code&gt;$ ddclient -daemon=0 -debug -verbose -noquiet&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Do you need to specify a proxy? If so, just add a &lt;code&gt;proxy=your.isp.proxy&lt;/code&gt; to the ddclient.conf file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Define the IP address of your router with &lt;code&gt;fw=xxx.xxx.xxx.xxx&lt;/code&gt; in &lt;code&gt;/etc/ddclient/ddclient.conf&lt;/code&gt; and then try &lt;code&gt;$ ddclient -daemon=0 -query&lt;/code&gt; to see if the router status web page can be understood.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Need support for another router/firewall? Define the router status page yourself with: &lt;code&gt;fw=url-to-your-router&lt;/code&gt;&#39;s-status-page &lt;code&gt;fw-skip=any-string-preceding-your-IP-address&lt;/code&gt;&lt;/p&gt; &lt;p&gt;ddclient does something like this to provide builtin support for common routers. For example, the Linksys routers could have been added with:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;fw=192.168.1.1/Status.htm&#xA;fw-skip=WAN.*?IP Address&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OR Send me the output from: &lt;code&gt;$ ddclient -geturl {fw-ip-status-url} [-login login [-password password]]&lt;/code&gt; and I&#39;ll add it to the next release!&lt;/p&gt; &#xA;&lt;p&gt;ie. for my fw/router I used: &lt;code&gt;$ ddclient -geturl 192.168.1.254/status.htm&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Some broadband routers require the use of a password when ddclient accesses its status page to determine the router&#39;s WAN IP address. If this is the case for your router, add&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;fw-login=your-router-login&#xA;fw-password=your-router-password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to the beginning of your ddclient.conf file. Note that some routers use either &#39;root&#39; or &#39;admin&#39; as their login while some others accept anything.&lt;/p&gt; &#xA;&lt;h2&gt;USING DDCLIENT WITH &lt;code&gt;ppp&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you are using a ppp connection, you can easily update your DynDNS entry with each connection, with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;## configure pppd to update DynDNS with each connection&#xA;cp sample-etc_ppp_ip-up.local /etc/ppp/ip-up.local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you may just configure ddclient to operate as a daemon and monitor your ppp interface.&lt;/p&gt; &#xA;&lt;h2&gt;USING DDCLIENT WITH &lt;code&gt;cron&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you have not configured ddclient to use daemon-mode, you&#39;ll need to configure cron to force an update once a month so that the dns entry will not become stale.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;## configure cron to force an update twice a month&#xA;cp sample-etc_cron.d_ddclient /etc/cron.d/ddclient&#xA;vi /etc/cron.d/ddclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;USING DDCLIENT WITH &lt;code&gt;dhcpcd-1.3.17&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you are using dhcpcd-1.3.17 or thereabouts, you can easily update your DynDNS entry automatically every time your lease is obtained or renewed by creating an executable file named: &lt;code&gt;/etc/dhcpc/dhcpcd-{your-interface}.exe&lt;/code&gt; ie.: &lt;code&gt;cp sample-etc_dhcpc_dhcpcd-eth0.exe /etc/dhcpc/dhcpcd-{your-interface}.exe&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;In my case, it is named dhcpcd-eth0.exe and contains the lines:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;#!/bin/sh&#xA;PATH=/usr/bin:/root/bin:${PATH}&#xA;logger -t dhcpcd IP address changed to $1&#xA;ddclient -proxy fasthttp.sympatico.ca -wildcard -ip $1 | logger -t ddclient&#xA;exit 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Other DHCP clients may have another method of calling out to programs for updating DNS entries.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you may just configure ddclient to operate as a daemon and monitor your ethernet interface.&lt;/p&gt; &#xA;&lt;h2&gt;USING DDCLIENT WITH &lt;code&gt;dhclient&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you are using the ISC DHCP client (dhclient), you can update your DynDNS entry automatically every time your lease is obtained or renewed by creating an executable file named: &lt;code&gt;/etc/dhclient-exit-hooks&lt;/code&gt; ie.: &lt;code&gt;cp sample-etc_dhclient-exit-hooks /etc/dhclient-exit-hooks&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Edit &lt;code&gt;/etc/dhclient-exit-hooks&lt;/code&gt; to change any options required.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you may just configure ddclient to operate as a daemon and monitor your ethernet interface.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>AlDanial/cloc</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/AlDanial/cloc</id>
    <link href="https://github.com/AlDanial/cloc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;cloc counts blank lines, comment lines, and physical lines of source code in many programming languages.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a name=&#34;___top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;cloc&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Count Lines of Code&lt;/em&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;cloc counts blank lines, comment lines, and physical lines of source code in many programming languages.&lt;/p&gt; &#xA;&lt;p&gt;Latest release: v1.92 (Dec. 5, 2021)&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/AlDanial/cloc/graphs/contributors&#34; alt=&#34;Contributors&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/AlDanial/cloc&#34;&gt;&lt;/a&gt; &#xA;&lt;a href=&#34;https://zenodo.org/badge/latestdoi/42029482&#34;&gt; &lt;img src=&#34;https://zenodo.org/badge/42029482.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt; &#xA;&lt;img src=&#34;https://img.shields.io/badge/Maintained%3F-yes-green.svg&gt;&#34;&gt; &#xA;&lt;p&gt;cloc moved to GitHub in September 2015 after being hosted at &lt;a href=&#34;http://cloc.sourceforge.net/&#34;&gt;http://cloc.sourceforge.net/&lt;/a&gt; since August 2006.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#quick-start-&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#overview-&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AlDanial/cloc/releases/latest&#34;&gt;Download&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#install-via-package-manager&#34;&gt;Install via package manager&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#stable-release&#34;&gt;Stable release&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#development-version&#34;&gt;Development version&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#license-&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#why-use-cloc-&#34;&gt;Why Use cloc?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#other-counters-&#34;&gt;Other Counters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#building-a-windows-executable-&#34;&gt;Building a Windows Executable&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#basic-use-&#34;&gt;Basic Use&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#options-&#34;&gt;Options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#recognized-languages-&#34;&gt;Recognized Languages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#how-it-works-&#34;&gt;How it Works&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#advanced-use-&#34;&gt;Advanced Use&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#remove-comments-from-source-code-&#34;&gt;Remove Comments from Source Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#work-with-compressed-archives-&#34;&gt;Work with Compressed Archives&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#differences-&#34;&gt;Differences&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#create-custom-language-definitions-&#34;&gt;Create Custom Language Definitions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#combine-reports-&#34;&gt;Combine Reports&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#sql-&#34;&gt;SQL&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#custom-column-output-&#34;&gt;Custom Column Output&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#wrapping-cloc-in-other-scripts-&#34;&gt;Wrapping cloc in other scripts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#git-and-UTF8-pathnames-&#34;&gt;git and UTF8 pathnames&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#third-generation-language-scale-factors-&#34;&gt;Third Generation Language Scale Factors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#optionstxt-configuration-file-&#34;&gt;options.txt configuration file&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#complex-regular-subexpression-recursion-limit-&#34;&gt;Complex regular subexpression recursion limit &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#limitations-&#34;&gt;Limitations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#requesting-support-for-additional-languages-&#34;&gt;Requesting Support for Additional Languages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#reporting-problems-&#34;&gt;Reporting Problems&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#citation-&#34;&gt;Citation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#acknowledgments-&#34;&gt;Acknowledgments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#copyright-&#34;&gt;Copyright&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;Quick_Start&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Quick Start ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Step 1: Download cloc (several methods, see below) or run cloc&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#Docker-&#34;&gt;docker image&lt;/a&gt;. The Windows executable has no requirements. The source version of cloc requires a Perl interpreter, and the Docker version of cloc requires a Docker installation.&lt;/p&gt; &#xA;&lt;p&gt;Step 2: Open a terminal (&lt;code&gt;cmd.exe&lt;/code&gt; on Windows).&lt;/p&gt; &#xA;&lt;p&gt;Step 3: Invoke cloc to count your source files, directories, archives, or git commits. The executable name differs depending on whether you use the development source version (&lt;code&gt;cloc&lt;/code&gt;), source for a released version (&lt;code&gt;cloc-1.92.pl&lt;/code&gt;) or a Windows executable (&lt;code&gt;cloc-1.92.exe&lt;/code&gt;). On this page, &lt;code&gt;cloc&lt;/code&gt; is the generic term used to refer to any of these.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;a file&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; cloc hello.c&#xA;       1 text file.&#xA;       1 unique file.&#xA;       0 files ignored.&#xA;&#xA;https://github.com/AlDanial/cloc v 1.65  T=0.04 s (28.3 files/s, 340.0 lines/s)&#xA;-------------------------------------------------------------------------------&#xA;Language                     files          blank        comment           code&#xA;-------------------------------------------------------------------------------&#xA;C                                1              0              7              5&#xA;-------------------------------------------------------------------------------&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;a directory&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; cloc gcc-5.2.0/gcc/c&#xA;      16 text files.&#xA;      15 unique files.&#xA;       3 files ignored.&#xA;&#xA;https://github.com/AlDanial/cloc v 1.65  T=0.23 s (57.1 files/s, 188914.0 lines/s)&#xA;-------------------------------------------------------------------------------&#xA;Language                     files          blank        comment           code&#xA;-------------------------------------------------------------------------------&#xA;C                               10           4680           6621          30812&#xA;C/C++ Header                     3             99            286            496&#xA;-------------------------------------------------------------------------------&#xA;SUM:                            13           4779           6907          31308&#xA;-------------------------------------------------------------------------------&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;an archive&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;We&#39;ll pull cloc&#39;s source zip file from GitHub, then count the contents:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; wget https://github.com/AlDanial/cloc/archive/master.zip&#xA;&#xA;prompt&amp;gt; cloc master.zip&#xA;https://github.com/AlDanial/cloc v 1.65  T=0.07 s (26.8 files/s, 141370.3 lines/s)&#xA;-------------------------------------------------------------------------------&#xA;Language                     files          blank        comment           code&#xA;-------------------------------------------------------------------------------&#xA;Perl                             2            725           1103           8713&#xA;-------------------------------------------------------------------------------&#xA;SUM:                             2            725           1103           8713&#xA;-------------------------------------------------------------------------------&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;a git repository, using a specific commit&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This example uses code from &lt;a href=&#34;https://pypi.python.org/pypi/pudb&#34;&gt;PuDB&lt;/a&gt;, a fantastic Python debugger.&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; git clone http://git.tiker.net/trees/pudb.git&#xA;&#xA;prompt&amp;gt; cd pudb&#xA;&#xA;prompt&amp;gt; cloc 6be804e07a5db&#xA;      48 text files.&#xA;      48 unique files.&#xA;      15 files ignored.&#xA;&#xA;github.com/AlDanial/cloc v 1.73  T=0.15 s (223.1 files/s, 46159.0 lines/s)&#xA;-------------------------------------------------------------------------------&#xA;Language                     files          blank        comment           code&#xA;-------------------------------------------------------------------------------&#xA;Python                          28           1519            728           4659&#xA;YAML                             2              9              2             75&#xA;Bourne Shell                     3              6              0             17&#xA;make                             1              4              6             10&#xA;-------------------------------------------------------------------------------&#xA;SUM:                            34           1538            736           4761&#xA;-------------------------------------------------------------------------------&#xA;&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;each subdirectory of a particular directory&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Say you have a directory with three different git-managed projects, Project0, Project1, and Project2. You can use your shell&#39;s looping capability to count the code in each. This example uses bash (scroll down for cmd.exe example):&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; for d in ./*/ ; do (cd &#34;$d&#34; &amp;amp;&amp;amp; echo &#34;$d&#34; &amp;amp;&amp;amp; cloc --vcs git); done&#xA;./Project0/&#xA;7 text files.&#xA;       7 unique files.&#xA;       1 file ignored.&#xA;&#xA;github.com/AlDanial/cloc v 1.71  T=0.02 s (390.2 files/s, 25687.6 lines/s)&#xA;-------------------------------------------------------------------------------&#xA;Language                     files          blank        comment           code&#xA;-------------------------------------------------------------------------------&#xA;D                                4             61             32            251&#xA;Markdown                         1              9              0             38&#xA;make                             1              0              0              4&#xA;-------------------------------------------------------------------------------&#xA;SUM:                             6             70             32            293&#xA;-------------------------------------------------------------------------------&#xA;./Project1/&#xA;       7 text files.&#xA;       7 unique files.&#xA;       0 files ignored.&#xA;&#xA;github.com/AlDanial/cloc v 1.71  T=0.02 s (293.0 files/s, 52107.1 lines/s)&#xA;-------------------------------------------------------------------------------&#xA;Language                     files          blank        comment           code&#xA;-------------------------------------------------------------------------------&#xA;Go                               7            165            282            798&#xA;-------------------------------------------------------------------------------&#xA;SUM:                             7            165            282            798&#xA;-------------------------------------------------------------------------------&#xA;./Project2/&#xA;      49 text files.&#xA;      47 unique files.&#xA;      13 files ignored.&#xA;&#xA;github.com/AlDanial/cloc v 1.71  T=0.10 s (399.5 files/s, 70409.4 lines/s)&#xA;-------------------------------------------------------------------------------&#xA;Language                     files          blank        comment           code&#xA;-------------------------------------------------------------------------------&#xA;Python                          33           1226           1026           3017&#xA;C                                4            327            337            888&#xA;Markdown                         1             11              0             28&#xA;YAML                             1              0              2             12&#xA;-------------------------------------------------------------------------------&#xA;SUM:                            39           1564           1365           3945&#xA;-------------------------------------------------------------------------------&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;each subdirectory of a particular directory (Windows/cmd.exe)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;for /D %I in (.\*) do cd %I &amp;amp;&amp;amp; cloc --vcs git &amp;amp;&amp;amp; cd ..&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;Overview&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Overview ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;cloc counts blank lines, comment lines, and physical lines of source code in &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#Languages&#34;&gt;many programming languages&lt;/a&gt;. Given two versions of a code base, cloc can compute differences in blank, comment, and source lines. It is written entirely in Perl with no dependencies outside the standard distribution of Perl v5.6 and higher (code from some external modules is &lt;a href=&#34;https://github.com/AlDanial/cloc#regexp_common&#34;&gt;embedded within cloc&lt;/a&gt;) and so is quite portable. cloc is known to run on many flavors of Linux, FreeBSD, NetBSD, OpenBSD, macOS, AIX, HP-UX, Solaris, IRIX, z/OS, and Windows. (To run the Perl source version of cloc on Windows one needs &lt;a href=&#34;http://www.activestate.com/activeperl&#34;&gt;ActiveState Perl&lt;/a&gt; 5.6.1 or higher, &lt;a href=&#34;http://strawberryperl.com/&#34;&gt;Strawberry Perl&lt;/a&gt;, Windows Subsystem for Linux, &lt;a href=&#34;http://www.cygwin.com/&#34;&gt;Cygwin&lt;/a&gt;, &lt;a href=&#34;http://mobaxterm.mobatek.net/&#34;&gt;MobaXTerm&lt;/a&gt; with the Perl plug-in installed, or a mingw environment and terminal such as provided by &lt;a href=&#34;https://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt;. Alternatively one can use the Windows binary of cloc generated with &lt;a href=&#34;http://search.cpan.org/~rschupp/PAR-Packer-1.019/lib/pp.pm&#34;&gt;PAR::Packer&lt;/a&gt; to run on Windows computers that have neither Perl nor Cygwin.)&lt;/p&gt; &#xA;&lt;p&gt;In addition to counting code in individual text files, directories, and git repositories, cloc can also count code in archive files such as &lt;code&gt;.tar&lt;/code&gt; (including compressed versions), &lt;code&gt;.zip&lt;/code&gt;, Python wheel &lt;code&gt;.whl&lt;/code&gt;, Jupyter notebook &lt;code&gt;.ipynb&lt;/code&gt;, source RPMs &lt;code&gt;.rpm&lt;/code&gt; or &lt;code&gt;.src&lt;/code&gt; (requires &lt;code&gt;rpm2cpio&lt;/code&gt;), and Debian &lt;code&gt;.deb&lt;/code&gt; files (requires &lt;code&gt;dpkg-deb&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;cloc contains code from David Wheeler&#39;s &lt;a href=&#34;http://www.dwheeler.com/sloccount/&#34;&gt;SLOCCount&lt;/a&gt;, Damian Conway and Abigail&#39;s Perl module &lt;a href=&#34;http://search.cpan.org/%7Eabigail/Regexp-Common-2.120/lib/Regexp/Common.pm&#34;&gt;Regexp::Common&lt;/a&gt;, Sean M. Burke&#39;s Perl module &lt;a href=&#34;http://search.cpan.org/%7Esburke/Win32-Autoglob-1.01/Autoglob.pm&#34;&gt;Win32::Autoglob&lt;/a&gt;, and Tye McQueen&#39;s Perl module &lt;a href=&#34;http://search.cpan.org/%7Etyemq/Algorithm-Diff-1.1902/lib/Algorithm/Diff.pm&#34;&gt;Algorithm::Diff&lt;/a&gt;. Language scale factors were derived from Mayes Consulting, LLC web site &lt;a href=&#34;http://softwareestimator.com/IndustryData2.htm&#34;&gt;http://softwareestimator.com/IndustryData2.htm&lt;/a&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;Docker&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Run via docker&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm -v $PWD:/tmp aldanial/cloc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install via package manager&lt;/h2&gt; &#xA;&lt;p&gt;Depending your operating system, one of these installation methods may work for you (all but the last two entries for Windows require a Perl interpreter):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install -g cloc              # https://www.npmjs.com/package/cloc&#xA;sudo apt install cloc            # Debian, Ubuntu&#xA;sudo yum install cloc            # Red Hat, Fedora&#xA;sudo dnf install cloc            # Fedora 22 or later&#xA;sudo pacman -S cloc              # Arch&#xA;sudo emerge -av dev-util/cloc    # Gentoo https://packages.gentoo.org/packages/dev-util/cloc&#xA;sudo apk add cloc                # Alpine Linux&#xA;doas pkg_add cloc                # OpenBSD&#xA;sudo pkg install cloc            # FreeBSD&#xA;sudo port install cloc           # macOS with MacPorts&#xA;brew install cloc                # macOS with Homebrew&#xA;choco install cloc               # Windows with Chocolatey&#xA;scoop install cloc               # Windows with Scoop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I don&#39;t control any of these packages. If you encounter a bug in cloc using one of the above packages, try with cloc pulled from the latest stable release here on GitHub (link follows below) before submitting a problem report. &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;Stable&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stable release&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/AlDanial/cloc/releases/latest&#34;&gt;https://github.com/AlDanial/cloc/releases/latest&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;Dev&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Development version&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/AlDanial/cloc/raw/master/cloc&#34;&gt;https://github.com/AlDanial/cloc/raw/master/cloc&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;License ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;cloc is licensed under the &lt;a href=&#34;http://www.gnu.org/licenses/gpl-2.0.html&#34;&gt;GNU General Public License, v 2&lt;/a&gt;, excluding portions which are copied from other sources. Code copied from the Regexp::Common, Win32::Autoglob, and Algorithm::Diff Perl modules is subject to the &lt;a href=&#34;http://www.opensource.org/licenses/artistic-license-2.0.php&#34;&gt;Artistic License&lt;/a&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;why_use&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Why Use cloc? ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;cloc has many features that make it easy to use, thorough, extensible, and portable:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Exists as a single, self-contained file that requires minimal installation effort---just download the file and run it.&lt;/li&gt; &#xA; &lt;li&gt;Can read language comment definitions from a file and thus potentially work with computer languages that do not yet exist.&lt;/li&gt; &#xA; &lt;li&gt;Allows results from multiple runs to be summed together by language and by project.&lt;/li&gt; &#xA; &lt;li&gt;Can produce results in a variety of formats: plain text, SQL, JSON, XML, YAML, comma separated values.&lt;/li&gt; &#xA; &lt;li&gt;Can count code within compressed archives (tar balls, Zip files, Java .ear files).&lt;/li&gt; &#xA; &lt;li&gt;Has numerous troubleshooting options.&lt;/li&gt; &#xA; &lt;li&gt;Handles file and directory names with spaces and other unusual characters.&lt;/li&gt; &#xA; &lt;li&gt;Has no dependencies outside the standard Perl distribution.&lt;/li&gt; &#xA; &lt;li&gt;Runs on Linux, FreeBSD, NetBSD, OpenBSD, macOS, AIX, HP-UX, Solaris, IRIX, and z/OS systems that have Perl 5.6 or higher. The source version runs on Windows with either ActiveState Perl, Strawberry Perl, Cygwin, or MobaXTerm+Perl plugin. Alternatively on Windows one can run the Windows binary which has no dependencies. &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a name=&#34;Other_Counters&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Other Counters ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;If cloc does not suit your needs here are other freely available counters to consider:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cgag/loc/&#34;&gt;loc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hhatto/gocloc/&#34;&gt;gocloc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/blackducksoftware/ohcount/&#34;&gt;Ohcount&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/boyter/scc/&#34;&gt;scc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.google.com/archive/p/sclc/&#34;&gt;sclc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.dwheeler.com/sloccount/&#34;&gt;SLOCCount&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.sonarsource.org/&#34;&gt;Sonar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Aaronepower/tokei/&#34;&gt;tokei&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://csse.usc.edu/ucc_new/wordpress/&#34;&gt;Unified Code Count&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Other references:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;QSM&#39;s &lt;a href=&#34;http://www.qsm.com/CodeCounters.html&#34;&gt;directory&lt;/a&gt; of code counting tools.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;http://en.wikipedia.org/wiki/Source_lines_of_code&#34;&gt;Wikipedia entry&lt;/a&gt; for source code line counts. &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;a name=&#34;regexp_common&#34;&gt;Regexp::Common, Digest::MD5, Win32::Autoglob, Algorithm::Diff&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Although cloc does not need Perl modules outside those found in the standard distribution, cloc does rely on a few external modules. Code from three of these external modules--Regexp::Common, Win32::Autoglob, and Algorithm::Diff--is embedded within cloc. A fourth module, Digest::MD5, is used only if it is available. If cloc finds Regexp::Common or Algorithm::Diff installed locally it will use those installation. If it doesn&#39;t, cloc will install the parts of Regexp::Common and/or Algorithm:Diff it needs to temporary directories that are created at the start of a cloc run then removed when the run is complete. The necessary code from Regexp::Common v2.120 and Algorithm::Diff v1.1902 are embedded within the cloc source code (see subroutines &lt;code&gt;Install_Regexp_Common()&lt;/code&gt; and &lt;code&gt;Install_Algorithm_Diff()&lt;/code&gt; ). Only three lines are needed from Win32::Autoglob and these are included directly in cloc.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, cloc will use Digest::MD5 to validate uniqueness among equally-sized input files if Digest::MD5 is installed locally.&lt;/p&gt; &#xA;&lt;p&gt;A parallel processing option, &lt;tt&gt;--processes=&lt;i&gt;N&lt;/i&gt;&lt;/tt&gt;, was introduced with cloc version 1.76 to enable faster runs on multi-core machines. However, to use it, one must have the module Parallel::ForkManager installed. This module does not work reliably on Windows so parallel processing will only work on Unix-like operating systems.&lt;/p&gt; &#xA;&lt;p&gt;The Windows binary is built on a computer that has both Regexp::Common and Digest::MD5 installed locally. &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;building_exe&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Building a Windows Executable ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;The Windows downloads &lt;tt&gt;cloc-1.92.exe&lt;/tt&gt;, &lt;tt&gt;cloc-1.90.exe&lt;/tt&gt; and &lt;tt&gt;cloc-1.88.exe&lt;/tt&gt; were built on a 64 bit Windows 10 computer using &lt;a href=&#34;http://strawberryperl.com/&#34;&gt;Strawberry Perl&lt;/a&gt; 5.30.2 and &lt;a href=&#34;http://search.cpan.org/~rschupp/PAR-Packer-1.050/lib/pp.pm&#34;&gt;PAR::Packer&lt;/a&gt; to build the &lt;code&gt;.exe&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Release 1.86 was built on a 64 bit Windows 10 virtual machine downloaded from &lt;a href=&#34;https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/&#34;&gt;https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/&lt;/a&gt;; releases 1.74 through 1.84 were was built on a 32 bit Windows 7 virtual machine using Strawberry Perl 5.26.1.1, while 1.70 and 1.72 were built with Strawberry Perl 5.24.0.1 on an Amazon Web Services t2.micro instance running Microsoft Windows Server 2008 (32 bit for 1.70 and 1.72; 64 bit for 1.74). Release 1.66 was built on a 32 bit Windows 7 VirtualBox image. Windows executables of cloc versions 1.60 and earlier were built with &lt;a href=&#34;http://www.indigostar.com/perl2exe/&#34;&gt;perl2exe&lt;/a&gt; on a 32 bit Windows XP computer. A small modification was made to the cloc source code before passing it to perl2exe; lines 87 and 88 were uncommented:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;&lt;font color=&#34;gray&#34;&gt;85&lt;/font&gt;  # Uncomment next two lines when building Windows executable with perl2exe&#xA;&lt;font color=&#34;gray&#34;&gt;86&lt;/font&gt;  # or if running on a system that already has Regexp::Common.&#xA;&lt;font color=&#34;gray&#34;&gt;87&lt;/font&gt;  &lt;font color=&#34;red&#34;&gt;#use Regexp::Common;&lt;/font&gt;&#xA;&lt;font color=&#34;gray&#34;&gt;88&lt;/font&gt;  &lt;font color=&#34;red&#34;&gt;#$HAVE_Rexexp_Common = 1;&lt;/font&gt;&#xA;&lt;/pre&gt; &#xA;&lt;h4&gt;Is the Windows executable safe to run? Does it have malware?&lt;/h4&gt; &#xA;&lt;p&gt;Ideally, no one would need the Windows executable because they have a Perl interpreter installed on their machines and can run the cloc source file. On centrally-managed corporate Windows machines, however, this this may be difficult or impossible.&lt;/p&gt; &#xA;&lt;p&gt;The Windows executable distributed with cloc is provided as a best-effort of a virus and malware-free &lt;code&gt;.exe&lt;/code&gt;. You are encouraged to run your own virus scanners against the executable and also check sites such &lt;a href=&#34;https://www.virustotal.com/&#34;&gt;https://www.virustotal.com/&lt;/a&gt; . The entries for recent versions are:&lt;/p&gt; &#xA;&lt;p&gt;cloc-1.92.exe: &lt;a href=&#34;https://www.virustotal.com/gui/file/2668fcf8609c431e8934fe9e1866bc620c58d198c4eb262f1d3ef31ef4a690f7&#34;&gt;https://www.virustotal.com/gui/file/2668fcf8609c431e8934fe9e1866bc620c58d198c4eb262f1d3ef31ef4a690f7&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc-1.90.exe: &lt;a href=&#34;https://www.virustotal.com/gui/file/d655caae55486f9bac39f7e3c7b7553bcfcfe2b88914c79bfc328055f22b8a37/detection&#34;&gt;https://www.virustotal.com/gui/file/d655caae55486f9bac39f7e3c7b7553bcfcfe2b88914c79bfc328055f22b8a37/detection&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc-1.88.exe: &lt;a href=&#34;https://www.virustotal.com/gui/file/97d5d2631d1cccdbfd99267ab8a4cf5968816bbe52c0f9324e72e768857f642d/detection&#34;&gt;https://www.virustotal.com/gui/file/97d5d2631d1cccdbfd99267ab8a4cf5968816bbe52c0f9324e72e768857f642d/detection&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc-1.86.exe: &lt;a href=&#34;https://www.virustotal.com/gui/file/1b2e189df1834411b34534db446330d1c379b4bc008af3042ee9ade818c6a1c8/detection&#34;&gt;https://www.virustotal.com/gui/file/1b2e189df1834411b34534db446330d1c379b4bc008af3042ee9ade818c6a1c8/detection&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc-1.84.exe: &lt;a href=&#34;https://www.virustotal.com/gui/file/e73d490c1e4ae2f50ee174005614029b4fa2610dcb76988714839d7be68479af/detection&#34;&gt;https://www.virustotal.com/gui/file/e73d490c1e4ae2f50ee174005614029b4fa2610dcb76988714839d7be68479af/detection&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc-1.82.exe: &lt;a href=&#34;https://www.virustotal.com/#/file/2e5fb443fdefd776d7b6b136a25e5ee2048991e735042897dbd0bf92efb16563/detection&#34;&gt;https://www.virustotal.com/#/file/2e5fb443fdefd776d7b6b136a25e5ee2048991e735042897dbd0bf92efb16563/detection&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc-1.80.exe: &lt;a href=&#34;https://www.virustotal.com/#/file/9e547b01c946aa818ffad43b9ebaf05d3da08ed6ca876ef2b6847be3bf1cf8be/detection&#34;&gt;https://www.virustotal.com/#/file/9e547b01c946aa818ffad43b9ebaf05d3da08ed6ca876ef2b6847be3bf1cf8be/detection&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc-1.78.exe: &lt;a href=&#34;https://www.virustotal.com/#/file/256ade3df82fa92febf2553853ed1106d96c604794606e86efd00d55664dd44f/detection&#34;&gt;https://www.virustotal.com/#/file/256ade3df82fa92febf2553853ed1106d96c604794606e86efd00d55664dd44f/detection&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc-1.76.exe: &lt;a href=&#34;https://www.virustotal.com/#/url/c1b9b9fe909f91429f95d41e9a9928ab7c58b21351b3acd4249def2a61acd39d/detection&#34;&gt;https://www.virustotal.com/#/url/c1b9b9fe909f91429f95d41e9a9928ab7c58b21351b3acd4249def2a61acd39d/detection&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc-1.74_x86.exe: &lt;a href=&#34;https://www.virustotal.com/#/file/b73dece71f6d3199d90d55db53a588e1393c8dbf84231a7e1be2ce3c5a0ec75b/detection&#34;&gt;https://www.virustotal.com/#/file/b73dece71f6d3199d90d55db53a588e1393c8dbf84231a7e1be2ce3c5a0ec75b/detection&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc 1.72 exe: &lt;a href=&#34;https://www.virustotal.com/en/url/8fd2af5cd972f648d7a2d7917bc202492012484c3a6f0b48c8fd60a8d395c98c/analysis/&#34;&gt;https://www.virustotal.com/en/url/8fd2af5cd972f648d7a2d7917bc202492012484c3a6f0b48c8fd60a8d395c98c/analysis/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc 1.70 exe: &lt;a href=&#34;https://www.virustotal.com/en/url/63edef209099a93aa0be1a220dc7c4c7ed045064d801e6d5daa84ee624fc0b4a/analysis/&#34;&gt;https://www.virustotal.com/en/url/63edef209099a93aa0be1a220dc7c4c7ed045064d801e6d5daa84ee624fc0b4a/analysis/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc 1.68 exe: &lt;a href=&#34;https://www.virustotal.com/en/file/c484fc58615fc3b0d5569b9063ec1532980281c3155e4a19099b11ef1c24443b/analysis/&#34;&gt;https://www.virustotal.com/en/file/c484fc58615fc3b0d5569b9063ec1532980281c3155e4a19099b11ef1c24443b/analysis/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cloc 1.66 exe: &lt;a href=&#34;https://www.virustotal.com/en/file/54d6662e59b04be793dd10fa5e5edf7747cf0c0cc32f71eb67a3cf8e7a171d81/analysis/1453601367/&#34;&gt;https://www.virustotal.com/en/file/54d6662e59b04be793dd10fa5e5edf7747cf0c0cc32f71eb67a3cf8e7a171d81/analysis/1453601367/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Why is the Windows executable so large?&lt;/h4&gt; &#xA;&lt;p&gt;Windows executables of cloc versions 1.60 and earlier, created with perl2exe as noted above, are about 1.6 MB, while versions 1.62 and 1.54, created with &lt;code&gt;PAR::Packer&lt;/code&gt;, are 11 MB. Version 1.66, built with a newer version of &lt;code&gt;PAR::Packer&lt;/code&gt;, is about 5.5 MB. Why are the &lt;code&gt;PAR::Packer&lt;/code&gt;, executables so much larger than those built with perl2exe? My theory is that perl2exe uses smarter tree pruning logic than &lt;code&gt;PAR::Packer&lt;/code&gt;, but that&#39;s pure speculation.&lt;/p&gt; &#xA;&lt;h4&gt;Create your own executable&lt;/h4&gt; &#xA;&lt;p&gt;The most robust option for creating a Windows executable of cloc is to use &lt;a href=&#34;http://www.activestate.com/perl-dev-kit&#34;&gt;ActiveState&#39;s Perl Development Kit&lt;/a&gt;. It includes a utility, &lt;code&gt;perlapp&lt;/code&gt;, which can build stand-alone Windows, Mac, and Linux binaries of Perl source code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.indigostar.com/perl2exe/&#34;&gt;perl2exe&lt;/a&gt; will also do the trick. If you do have &lt;code&gt;perl2exe&lt;/code&gt;, modify lines 84-87 in the cloc source code for a minor code modification that is necessary to make a cloc Windows executable.&lt;/p&gt; &#xA;&lt;p&gt;Otherwise, to build a Windows executable with &lt;code&gt;pp&lt;/code&gt; from &lt;code&gt;PAR::Packer&lt;/code&gt;, first install a Windows-based Perl distribution (for example Strawberry Perl or ActivePerl) following their instructions. Next, open a command prompt, aka a DOS window and install the PAR::Packer module. Finally, invoke the newly installed &lt;code&gt;pp&lt;/code&gt; command with the cloc source code to create an &lt;code&gt;.exe&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;C:&amp;gt; cpan -i Digest::MD5&#xA;C:&amp;gt; cpan -i Regexp::Common&#xA;C:&amp;gt; cpan -i Algorithm::Diff&#xA;C:&amp;gt; cpan -i PAR::Packer&#xA;C:&amp;gt; pp -M Digest::MD5 -c -x -o cloc-1.92.exe cloc-1.92.pl&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;A variation on the instructions above is if you installed the portable version of Strawberry Perl, you will need to run &lt;code&gt;portableshell.bat&lt;/code&gt; first to properly set up your environment.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;Basic_Use&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Basic Use ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;cloc is a command line program that takes file, directory, and/or archive names as inputs. Here&#39;s an example of running cloc against the Perl v5.22.0 source distribution:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; cloc perl-5.22.0.tar.gz&#xA;    5605 text files.&#xA;    5386 unique files.&#xA;    2176 files ignored.&#xA;&#xA;https://github.com/AlDanial/cloc v 1.65  T=25.49 s (134.7 files/s, 51980.3 lines/s)&#xA;-----------------------------------------------------------------------------------&#xA;Language                         files          blank        comment           code&#xA;-----------------------------------------------------------------------------------&#xA;Perl                              2892         136396         184362         536445&#xA;C                                  130          24676          33684         155648&#xA;C/C++ Header                       148           9766          16569         147858&#xA;Bourne Shell                       112           4044           6796          42668&#xA;Pascal                               8            458           1603           8592&#xA;XML                                 33            142              0           2410&#xA;YAML                                49             20             15           2078&#xA;C++                                 10            313            277           2033&#xA;make                                 4            426            488           1986&#xA;Prolog                              12            438              2           1146&#xA;JSON                                14              1              0           1037&#xA;yacc                                 1             85             76            998&#xA;Windows Message File                 1            102             11            489&#xA;DOS Batch                           14             92             41            389&#xA;Windows Resource File                3             10              0             85&#xA;D                                    1              5              7              8&#xA;Lisp                                 2              0              3              4&#xA;-----------------------------------------------------------------------------------&#xA;SUM:                              3434         176974         243934         903874&#xA;-----------------------------------------------------------------------------------&#xA;&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;To run cloc on Windows computers, open up a command (aka DOS) window and invoke cloc.exe from the command line there. Alternatively, try ClocViewer, the GUI wrapper around cloc found at &lt;a href=&#34;https://github.com/Roemer/ClocViewer&#34;&gt;https://github.com/Roemer/ClocViewer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://github.com/jmensch1/codeflower&#34;&gt;https://github.com/jmensch1/codeflower&lt;/a&gt; for a graphical rendering of cloc results. &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;Options&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Options ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; cloc --help&#xA;&#xA;Usage: cloc [options] &amp;lt;file(s)/dir(s)/git hash(es)&amp;gt; | &amp;lt;set 1&amp;gt; &amp;lt;set 2&amp;gt; | &amp;lt;report files&amp;gt;&#xA;&#xA; Count, or compute differences of, physical lines of source code in the&#xA; given files (may be archives such as compressed tarballs or zip files,&#xA; or git commit hashes or branch names) and/or recursively below the&#xA; given directories.&#xA;&#xA; Input Options&#xA;   --extract-with=&amp;lt;cmd&amp;gt;      This option is only needed if cloc is unable&#xA;                             to figure out how to extract the contents of&#xA;                             the input file(s) by itself.&#xA;                             Use &amp;lt;cmd&amp;gt; to extract binary archive files (e.g.:&#xA;                             .tar.gz, .zip, .Z).  Use the literal &#39;&amp;gt;FILE&amp;lt;&#39; as&#xA;                             a stand-in for the actual file(s) to be&#xA;                             extracted.  For example, to count lines of code&#xA;                             in the input files&#xA;                                gcc-4.2.tar.gz  perl-5.8.8.tar.gz&#xA;                             on Unix use&#xA;                               --extract-with=&#39;gzip -dc &amp;gt;FILE&amp;lt; | tar xf -&#39;&#xA;                             or, if you have GNU tar,&#xA;                               --extract-with=&#39;tar zxf &amp;gt;FILE&amp;lt;&#39;&#xA;                             and on Windows use, for example:&#xA;                               --extract-with=&#34;\&#34;c:\Program Files\WinZip\WinZip32.exe\&#34; -e -o &amp;gt;FILE&amp;lt; .&#34;&#xA;                             (if WinZip is installed there).&#xA;   --list-file=&amp;lt;file&amp;gt;        Take the list of file and/or directory names to&#xA;                             process from &amp;lt;file&amp;gt;, which has one file/directory&#xA;                             name per line.  Only exact matches are counted;&#xA;                             relative path names will be resolved starting from&#xA;                             the directory where cloc is invoked.  Set &amp;lt;file&amp;gt;&#xA;                             to - to read file names from a STDIN pipe.&#xA;                             See also --exclude-list-file.&#xA;   --diff-list-file=&amp;lt;file&amp;gt;   Take the pairs of file names to be diff&#39;ed from&#xA;                             &amp;lt;file&amp;gt;, whose format matches the output of&#xA;                             --diff-alignment.  (Run with that option to&#xA;                             see a sample.)  The language identifier at the&#xA;                             end of each line is ignored.  This enables --diff&#xA;                             mode and bypasses file pair alignment logic.&#xA;   --vcs=&amp;lt;VCS&amp;gt;               Invoke a system call to &amp;lt;VCS&amp;gt; to obtain a list of&#xA;                             files to work on.  If &amp;lt;VCS&amp;gt; is &#39;git&#39;, then will&#xA;                             invoke &#39;git ls-files&#39; to get a file list and&#xA;                             &#39;git submodule status&#39; to get a list of submodules&#xA;                             whose contents will be ignored.  See also --git&#xA;                             which accepts git commit hashes and branch names.&#xA;                             If &amp;lt;VCS&amp;gt; is &#39;svn&#39; then will invoke &#39;svn list -R&#39;.&#xA;                             The primary benefit is that cloc will then skip&#xA;                             files explicitly excluded by the versioning tool&#xA;                             in question, ie, those in .gitignore or have the&#xA;                             svn:ignore property.&#xA;                             Alternatively &amp;lt;VCS&amp;gt; may be any system command&#xA;                             that generates a list of files.&#xA;                             Note:  cloc must be in a directory which can read&#xA;                             the files as they are returned by &amp;lt;VCS&amp;gt;.  cloc will&#xA;                             not download files from remote repositories.&#xA;                             &#39;svn list -R&#39; may refer to a remote repository&#xA;                             to obtain file names (and therefore may require&#xA;                             authentication to the remote repository), but&#xA;                             the files themselves must be local.&#xA;                             Setting &amp;lt;VCS&amp;gt; to &#39;auto&#39; selects between &#39;git&#39;&#xA;                             and &#39;svn&#39; (or neither) depending on the presence&#xA;                             of a .git or .svn subdirectory below the directory&#xA;                             where cloc is invoked.&#xA;   --unicode                 Check binary files to see if they contain Unicode&#xA;                             expanded ASCII text.  This causes performance to&#xA;                             drop noticeably.&#xA;&#xA; Processing Options&#xA;   --autoconf                Count .in files (as processed by GNU autoconf) of&#xA;                             recognized languages.  See also --no-autogen.&#xA;   --by-file                 Report results for every source file encountered.&#xA;   --by-file-by-lang         Report results for every source file encountered&#xA;                             in addition to reporting by language.&#xA;   --config &amp;lt;file&amp;gt;           Read command line switches from &amp;lt;file&amp;gt; instead of&#xA;                             the default location of /home/al/.config/cloc/options.txt.&#xA;                             The file should contain one switch, along with&#xA;                             arguments (if any), per line.  Blank lines and lines&#xA;                             beginning with &#39;#&#39; are skipped.  Options given on&#xA;                             the command line take priority over entries read from&#xA;                             the file.&#xA;   --count-and-diff &amp;lt;set1&amp;gt; &amp;lt;set2&amp;gt;&#xA;                             First perform direct code counts of source file(s)&#xA;                             of &amp;lt;set1&amp;gt; and &amp;lt;set2&amp;gt; separately, then perform a diff&#xA;                             of these.  Inputs may be pairs of files, directories,&#xA;                             or archives.  If --out or --report-file is given,&#xA;                             three output files will be created, one for each&#xA;                             of the two counts and one for the diff.  See also&#xA;                             --diff, --diff-alignment, --diff-timeout,&#xA;                             --ignore-case, --ignore-whitespace.&#xA;   --diff &amp;lt;set1&amp;gt; &amp;lt;set2&amp;gt;      Compute differences in code and comments between&#xA;                             source file(s) of &amp;lt;set1&amp;gt; and &amp;lt;set2&amp;gt;.  The inputs&#xA;                             may be any mix of files, directories, archives,&#xA;                             or git commit hashes.  Use --diff-alignment to&#xA;                             generate a list showing which file pairs where&#xA;                             compared.  When comparing git branches, only files&#xA;                             which have changed in either commit are compared.&#xA;                             See also --git, --count-and-diff, --diff-alignment,&#xA;                             --diff-list-file, --diff-timeout, --ignore-case,&#xA;                             --ignore-whitespace.&#xA;   --diff-timeout &amp;lt;N&amp;gt;        Ignore files which take more than &amp;lt;N&amp;gt; seconds&#xA;                             to process.  Default is 10 seconds.  Setting &amp;lt;N&amp;gt;&#xA;                             to 0 allows unlimited time.  (Large files with many&#xA;                             repeated lines can cause Algorithm::Diff::sdiff()&#xA;                             to take hours.) See also --timeout.&#xA;   --docstring-as-code       cloc considers docstrings to be comments, but this is&#xA;                             not always correct as docstrings represent regular&#xA;                             strings when they appear on the right hand side of an&#xA;                             assignment or as function arguments.  This switch&#xA;                             forces docstrings to be counted as code.&#xA;   --follow-links            [Unix only] Follow symbolic links to directories&#xA;                             (sym links to files are always followed).&#xA;                             See also --stat.&#xA;   --force-lang=&amp;lt;lang&amp;gt;[,&amp;lt;ext&amp;gt;]&#xA;                             Process all files that have a &amp;lt;ext&amp;gt; extension&#xA;                             with the counter for language &amp;lt;lang&amp;gt;.  For&#xA;                             example, to count all .f files with the&#xA;                             Fortran 90 counter (which expects files to&#xA;                             end with .f90) instead of the default Fortran 77&#xA;                             counter, use&#xA;                               --force-lang=&#34;Fortran 90&#34;,f&#xA;                             If &amp;lt;ext&amp;gt; is omitted, every file will be counted&#xA;                             with the &amp;lt;lang&amp;gt; counter.  This option can be&#xA;                             specified multiple times (but that is only&#xA;                             useful when &amp;lt;ext&amp;gt; is given each time).&#xA;                             See also --script-lang, --lang-no-ext.&#xA;   --force-lang-def=&amp;lt;file&amp;gt;   Load language processing filters from &amp;lt;file&amp;gt;,&#xA;                             then use these filters instead of the built-in&#xA;                             filters.  Note:  languages which map to the same&#xA;                             file extension (for example:&#xA;                             MATLAB/Mathematica/Objective-C/MUMPS/Mercury;&#xA;                             Pascal/PHP; Lisp/OpenCL; Lisp/Julia; Perl/Prolog)&#xA;                             will be ignored as these require additional&#xA;                             processing that is not expressed in language&#xA;                             definition files.  Use --read-lang-def to define&#xA;                             new language filters without replacing built-in&#xA;                             filters (see also --write-lang-def,&#xA;                             --write-lang-def-incl-dup).&#xA;   --git                     Forces the inputs to be interpreted as git targets&#xA;                             (commit hashes, branch names, et cetera) if these&#xA;                             are not first identified as file or directory&#xA;                             names.  This option overrides the --vcs=git logic&#xA;                             if this is given; in other words, --git gets its&#xA;                             list of files to work on directly from git using&#xA;                             the hash or branch name rather than from&#xA;                             &#39;git ls-files&#39;.  This option can be used with&#xA;                             --diff to perform line count diffs between git&#xA;                             commits, or between a git commit and a file,&#xA;                             directory, or archive.  Use -v/--verbose to see&#xA;                             the git system commands cloc issues.&#xA;   --git-diff-rel            Same as --git --diff, or just --diff if the inputs&#xA;                             are recognized as git targets.  Only files which&#xA;                             have changed in either commit are compared.&#xA;   --git-diff-all            Git diff strategy #2:  compare all files in the&#xA;                             repository between the two commits.&#xA;   --ignore-whitespace       Ignore horizontal white space when comparing files&#xA;                             with --diff.  See also --ignore-case.&#xA;   --ignore-case             Ignore changes in case within file contents;&#xA;                             consider upper- and lowercase letters equivalent&#xA;                             when comparing files with --diff.  See also&#xA;                             --ignore-whitespace.&#xA;   --ignore-case-ext         Ignore case of file name extensions.  This will&#xA;                             cause problems counting some languages&#xA;                             (specifically, .c and .C are associated with C and&#xA;                             C++; this switch would count .C files as C rather&#xA;                             than C++ on *nix operating systems).  File name&#xA;                             case insensitivity is always true on Windows.&#xA;   --lang-no-ext=&amp;lt;lang&amp;gt;      Count files without extensions using the &amp;lt;lang&amp;gt;&#xA;                             counter.  This option overrides internal logic&#xA;                             for files without extensions (where such files&#xA;                             are checked against known scripting languages&#xA;                             by examining the first line for #!).  See also&#xA;                             --force-lang, --script-lang.&#xA;   --max-file-size=&amp;lt;MB&amp;gt;      Skip files larger than &amp;lt;MB&amp;gt; megabytes when&#xA;                             traversing directories.  By default, &amp;lt;MB&amp;gt;=100.&#xA;                             cloc&#39;s memory requirement is roughly twenty times&#xA;                             larger than the largest file so running with&#xA;                             files larger than 100 MB on a computer with less&#xA;                             than 2 GB of memory will cause problems.&#xA;                             Note:  this check does not apply to files&#xA;                             explicitly passed as command line arguments.&#xA;   --no-autogen[=list]       Ignore files generated by code-production systems&#xA;                             such as GNU autoconf.  To see a list of these files&#xA;                             (then exit), run with --no-autogen list&#xA;                             See also --autoconf.&#xA;   --original-dir            [Only effective in combination with&#xA;                             --strip-comments]  Write the stripped files&#xA;                             to the same directory as the original files.&#xA;   --read-binary-files       Process binary files in addition to text files.&#xA;                             This is usually a bad idea and should only be&#xA;                             attempted with text files that have embedded&#xA;                             binary data.&#xA;   --read-lang-def=&amp;lt;file&amp;gt;    Load new language processing filters from &amp;lt;file&amp;gt;&#xA;                             and merge them with those already known to cloc.&#xA;                             If &amp;lt;file&amp;gt; defines a language cloc already knows&#xA;                             about, cloc&#39;s definition will take precedence.&#xA;                             Use --force-lang-def to over-ride cloc&#39;s&#xA;                             definitions (see also --write-lang-def,&#xA;                             --write-lang-def-incl-dup).&#xA;   --script-lang=&amp;lt;lang&amp;gt;,&amp;lt;s&amp;gt;  Process all files that invoke &amp;lt;s&amp;gt; as a #!&#xA;                             scripting language with the counter for language&#xA;                             &amp;lt;lang&amp;gt;.  For example, files that begin with&#xA;                                #!/usr/local/bin/perl5.8.8&#xA;                             will be counted with the Perl counter by using&#xA;                                --script-lang=Perl,perl5.8.8&#xA;                             The language name is case insensitive but the&#xA;                             name of the script language executable, &amp;lt;s&amp;gt;,&#xA;                             must have the right case.  This option can be&#xA;                             specified multiple times.  See also --force-lang,&#xA;                             --lang-no-ext.&#xA;   --sdir=&amp;lt;dir&amp;gt;              Use &amp;lt;dir&amp;gt; as the scratch directory instead of&#xA;                             letting File::Temp chose the location.  Files&#xA;                             written to this location are not removed at&#xA;                             the end of the run (as they are with File::Temp).&#xA;   --skip-uniqueness         Skip the file uniqueness check.  This will give&#xA;                             a performance boost at the expense of counting&#xA;                             files with identical contents multiple times&#xA;                             (if such duplicates exist).&#xA;   --stat                    Some file systems (AFS, CD-ROM, FAT, HPFS, SMB)&#xA;                             do not have directory &#39;nlink&#39; counts that match&#xA;                             the number of its subdirectories.  Consequently&#xA;                             cloc may undercount or completely skip the&#xA;                             contents of such file systems.  This switch forces&#xA;                             File::Find to stat directories to obtain the&#xA;                             correct count.  File search speed will decrease.&#xA;                             See also --follow-links.&#xA;   --stdin-name=&amp;lt;file&amp;gt;       Give a file name to use to determine the language&#xA;                             for standard input.  (Use - as the input name to&#xA;                             receive source code via STDIN.)&#xA;   --strip-comments=&amp;lt;ext&amp;gt;    For each file processed, write to the current&#xA;                             directory a version of the file which has blank&#xA;                             and commented lines removed (in-line comments&#xA;                             persist).  The name of each stripped file is the&#xA;                             original file name with .&amp;lt;ext&amp;gt; appended to it.&#xA;                             It is written to the current directory unless&#xA;                             --original-dir is on.&#xA;   --strip-str-comments      Replace comment markers embedded in strings with&#xA;                             &#39;xx&#39;.  This attempts to work around a limitation&#xA;                             in Regexp::Common::Comment where comment markers&#xA;                             embedded in strings are seen as actual comment&#xA;                             markers and not strings, often resulting in a&#xA;                             &#39;Complex regular subexpression recursion limit&#39;&#xA;                             warning and incorrect counts.  There are two&#xA;                             disadvantages to using this switch:  1/code count&#xA;                             performance drops, and 2/code generated with&#xA;                             --strip-comments will contain different strings&#xA;                             where ever embedded comments are found.&#xA;   --sum-reports             Input arguments are report files previously&#xA;                             created with the --report-file option in plain&#xA;                             format (eg. not JSON, YAML, XML, or SQL).&#xA;                             Makes a cumulative set of results containing the&#xA;                             sum of data from the individual report files.&#xA;   --timeout &amp;lt;N&amp;gt;             Ignore files which take more than &amp;lt;N&amp;gt; seconds&#xA;                             to process at any of the language&#39;s filter stages.&#xA;                             The default maximum number of seconds spent on a&#xA;                             filter stage is the number of lines in the file&#xA;                             divided by one thousand.  Setting &amp;lt;N&amp;gt; to 0 allows&#xA;                             unlimited time.  See also --diff-timeout.&#xA;   --processes=NUM           [Available only on systems with a recent version&#xA;                             of the Parallel::ForkManager module.  Not&#xA;                             available on Windows.] Sets the maximum number of&#xA;                             cores that cloc uses.  The default value of 0&#xA;                             disables multiprocessing.&#xA;   --unix                    Override the operating system autodetection&#xA;                             logic and run in UNIX mode.  See also&#xA;                             --windows, --show-os.&#xA;   --use-sloccount           If SLOCCount is installed, use its compiled&#xA;                             executables c_count, java_count, pascal_count,&#xA;                             php_count, and xml_count instead of cloc&#39;s&#xA;                             counters.  SLOCCount&#39;s compiled counters are&#xA;                             substantially faster than cloc&#39;s and may give&#xA;                             a performance improvement when counting projects&#xA;                             with large files.  However, these cloc-specific&#xA;                             features will not be available: --diff,&#xA;                             --count-and-diff, --strip-comments, --unicode.&#xA;   --windows                 Override the operating system autodetection&#xA;                             logic and run in Microsoft Windows mode.&#xA;                             See also --unix, --show-os.&#xA;&#xA; Filter Options&#xA;   --exclude-content=&amp;lt;regex&amp;gt; Exclude files containing text that matches the given&#xA;                             regular expression.&#xA;   --exclude-dir=&amp;lt;D1&amp;gt;[,D2,]  Exclude the given comma separated directories&#xA;                             D1, D2, D3, et cetera, from being scanned.  For&#xA;                             example  --exclude-dir=.cache,test  will skip&#xA;                             all files and subdirectories that have /.cache/&#xA;                             or /test/ as their parent directory.&#xA;                             Directories named .bzr, .cvs, .hg, .git, .svn,&#xA;                             and .snapshot are always excluded.&#xA;                             This option only works with individual directory&#xA;                             names so including file path separators is not&#xA;                             allowed.  Use --fullpath and --not-match-d=&amp;lt;regex&amp;gt;&#xA;                             to supply a regex matching multiple subdirectories.&#xA;   --exclude-ext=&amp;lt;ext1&amp;gt;[,&amp;lt;ext2&amp;gt;[...]]&#xA;                             Do not count files having the given file name&#xA;                             extensions.&#xA;   --exclude-lang=&amp;lt;L1&amp;gt;[,L2[...]]&#xA;                             Exclude the given comma separated languages&#xA;                             L1, L2, L3, et cetera, from being counted.&#xA;   --exclude-list-file=&amp;lt;file&amp;gt;  Ignore files and/or directories whose names&#xA;                             appear in &amp;lt;file&amp;gt;.  &amp;lt;file&amp;gt; should have one file&#xA;                             name per line.  Only exact matches are ignored;&#xA;                             relative path names will be resolved starting from&#xA;                             the directory where cloc is invoked.&#xA;                             See also --list-file.&#xA;   --fullpath                Modifies the behavior of --match-f, --not-match-f,&#xA;                             and --not-match-d to include the file&#39;s path&#xA;                             in the regex, not just the file&#39;s basename.&#xA;                             (This does not expand each file to include its&#xA;                             absolute path, instead it uses as much of&#xA;                             the path as is passed in to cloc.)&#xA;                             Note:  --match-d always looks at the full&#xA;                             path and therefore is unaffected by --fullpath.&#xA;   --include-ext=&amp;lt;ext1&amp;gt;[,ext2[...]]&#xA;                             Count only languages having the given comma&#xA;                             separated file extensions.  Use --show-ext to&#xA;                             see the recognized extensions.&#xA;   --include-lang=&amp;lt;L1&amp;gt;[,L2[...]]&#xA;                             Count only the given comma separated languages&#xA;                             L1, L2, L3, et cetera.  Use --show-lang to see&#xA;                             the list of recognized languages.&#xA;   --match-d=&amp;lt;regex&amp;gt;         Only count files in directories matching the Perl&#xA;                             regex.  For example&#xA;                               --match-d=&#39;/(src|include)/&#39;&#xA;                             only counts files in directories containing&#xA;                             /src/ or /include/.  Unlike --not-match-d,&#xA;                             --match-f, and --not-match-f, --match-d always&#xA;                             compares the fully qualified path against the&#xA;                             regex.&#xA;   --not-match-d=&amp;lt;regex&amp;gt;     Count all files except those in directories&#xA;                             matching the Perl regex.  Only the trailing&#xA;                             directory name is compared, for example, when&#xA;                             counting in /usr/local/lib, only &#39;lib&#39; is&#xA;                             compared to the regex.&#xA;                             Add --fullpath to compare parent directories to&#xA;                             the regex.&#xA;                             Do not include file path separators at the&#xA;                             beginning or end of the regex.&#xA;   --match-f=&amp;lt;regex&amp;gt;         Only count files whose basenames match the Perl&#xA;                             regex.  For example&#xA;                               --match-f=&#39;^[Ww]idget&#39;&#xA;                             only counts files that start with Widget or widget.&#xA;                             Add --fullpath to include parent directories&#xA;                             in the regex instead of just the basename.&#xA;   --not-match-f=&amp;lt;regex&amp;gt;     Count all files except those whose basenames&#xA;                             match the Perl regex.  Add --fullpath to include&#xA;                             parent directories in the regex instead of just&#xA;                             the basename.&#xA;   --skip-archive=&amp;lt;regex&amp;gt;    Ignore files that end with the given Perl regular&#xA;                             expression.  For example, if given&#xA;                               --skip-archive=&#39;(zip|tar(.(gz|Z|bz2|xz|7z))?)&#39;&#xA;                             the code will skip files that end with .zip,&#xA;                             .tar, .tar.gz, .tar.Z, .tar.bz2, .tar.xz, and&#xA;                             .tar.7z.&#xA;   --skip-win-hidden         On Windows, ignore hidden files.&#xA;&#xA; Debug Options&#xA;   --categorized=&amp;lt;file&amp;gt;      Save names of categorized files to &amp;lt;file&amp;gt;.&#xA;   --counted=&amp;lt;file&amp;gt;          Save names of processed source files to &amp;lt;file&amp;gt;.&#xA;   --diff-alignment=&amp;lt;file&amp;gt;   Write to &amp;lt;file&amp;gt; a list of files and file pairs&#xA;                             showing which files were added, removed, and/or&#xA;                             compared during a run with --diff.  This switch&#xA;                             forces the --diff mode on.&#xA;   --explain=&amp;lt;lang&amp;gt;          Print the filters used to remove comments for&#xA;                             language &amp;lt;lang&amp;gt; and exit.  In some cases the&#xA;                             filters refer to Perl subroutines rather than&#xA;                             regular expressions.  An examination of the&#xA;                             source code may be needed for further explanation.&#xA;   --help                    Print this usage information and exit.&#xA;   --found=&amp;lt;file&amp;gt;            Save names of every file found to &amp;lt;file&amp;gt;.&#xA;   --ignored=&amp;lt;file&amp;gt;          Save names of ignored files and the reason they&#xA;                             were ignored to &amp;lt;file&amp;gt;.&#xA;   --print-filter-stages     Print processed source code before and after&#xA;                             each filter is applied.&#xA;   --show-ext[=&amp;lt;ext&amp;gt;]        Print information about all known (or just the&#xA;                             given) file extensions and exit.&#xA;   --show-lang[=&amp;lt;lang&amp;gt;]      Print information about all known (or just the&#xA;                             given) languages and exit.&#xA;   --show-os                 Print the value of the operating system mode&#xA;                             and exit.  See also --unix, --windows.&#xA;   -v[=&amp;lt;n&amp;gt;]                  Verbose switch (optional numeric value).&#xA;   -verbose[=&amp;lt;n&amp;gt;]            Long form of -v.&#xA;   --version                 Print the version of this program and exit.&#xA;   --write-lang-def=&amp;lt;file&amp;gt;   Writes to &amp;lt;file&amp;gt; the language processing filters&#xA;                             then exits.  Useful as a first step to creating&#xA;                             custom language definitions. Note: languages which&#xA;                             map to the same file extension will be excluded.&#xA;                             (See also --force-lang-def, --read-lang-def).&#xA;   --write-lang-def-incl-dup=&amp;lt;file&amp;gt;&#xA;                             Same as --write-lang-def, but includes duplicated&#xA;                             extensions.  This generates a problematic language&#xA;                             definition file because cloc will refuse to use&#xA;                             it until duplicates are removed.&#xA;&#xA; Output Options&#xA;   --3                       Print third-generation language output.&#xA;                             (This option can cause report summation to fail&#xA;                             if some reports were produced with this option&#xA;                             while others were produced without it.)&#xA;   --by-percent  X           Instead of comment and blank line counts, show&#xA;                             these values as percentages based on the value&#xA;                             of X in the denominator:&#xA;                                X = &#39;c&#39;   -&amp;gt; # lines of code&#xA;                                X = &#39;cm&#39;  -&amp;gt; # lines of code + comments&#xA;                                X = &#39;cb&#39;  -&amp;gt; # lines of code + blanks&#xA;                                X = &#39;cmb&#39; -&amp;gt; # lines of code + comments + blanks&#xA;                             For example, if using method &#39;c&#39; and your code&#xA;                             has twice as many lines of comments as lines&#xA;                             of code, the value in the comment column will&#xA;                             be 200%.  The code column remains a line count.&#xA;   --csv                     Write the results as comma separated values.&#xA;   --csv-delimiter=&amp;lt;C&amp;gt;       Use the character &amp;lt;C&amp;gt; as the delimiter for comma&#xA;                             separated files instead of ,.  This switch forces --csv to be on.&#xA;   --file-encoding=&amp;lt;E&amp;gt;       Write output files using the &amp;lt;E&amp;gt; encoding instead of&#xA;                             the default ASCII (&amp;lt;E&amp;gt; = &#39;UTF-7&#39;).  Examples: &#39;UTF-16&#39;,&#xA;                             &#39;euc-kr&#39;, &#39;iso-8859-16&#39;.  Known encodings can be&#xA;                             printed with&#xA;                               perl -MEncode -e &#39;print join(&#34;\n&#34;, Encode-&amp;gt;encodings(&#34;:all&#34;)), &#34;\n&#34;&#39;&#xA;   --hide-rate               Do not show line and file processing rates in the&#xA;                             output header. This makes output deterministic.&#xA;   --json                    Write the results as JavaScript Object Notation&#xA;                             (JSON) formatted output.&#xA;   --md                      Write the results as Markdown-formatted text.&#xA;   --out=&amp;lt;file&amp;gt;              Synonym for --report-file=&amp;lt;file&amp;gt;.&#xA;   --progress-rate=&amp;lt;n&amp;gt;       Show progress update after every &amp;lt;n&amp;gt; files are&#xA;                             processed (default &amp;lt;n&amp;gt;=100).  Set &amp;lt;n&amp;gt; to 0 to&#xA;                             suppress progress output (useful when redirecting&#xA;                             output to STDOUT).&#xA;   --quiet                   Suppress all information messages except for&#xA;                             the final report.&#xA;   --report-file=&amp;lt;file&amp;gt;      Write the results to &amp;lt;file&amp;gt; instead of STDOUT.&#xA;   --sql=&amp;lt;file&amp;gt;              Write results as SQL create and insert statements&#xA;                             which can be read by a database program such as&#xA;                             SQLite.  If &amp;lt;file&amp;gt; is -, output is sent to STDOUT.&#xA;   --sql-append              Append SQL insert statements to the file specified&#xA;                             by --sql and do not generate table creation&#xA;                             statements.  Only valid with the --sql option.&#xA;   --sql-project=&amp;lt;name&amp;gt;      Use &amp;lt;name&amp;gt; as the project identifier for the&#xA;                             current run.  Only valid with the --sql option.&#xA;   --sql-style=&amp;lt;style&amp;gt;       Write SQL statements in the given style instead&#xA;                             of the default SQLite format.  Styles include&#xA;                             &#39;Oracle&#39; and &#39;Named_Columns&#39;.&#xA;   --sum-one                 For plain text reports, show the SUM: output line&#xA;                             even if only one input file is processed.&#xA;   --xml                     Write the results in XML.&#xA;   --xsl=&amp;lt;file&amp;gt;              Reference &amp;lt;file&amp;gt; as an XSL stylesheet within&#xA;                             the XML output.  If &amp;lt;file&amp;gt; is 1 (numeric one),&#xA;                             writes a default stylesheet, cloc.xsl (or&#xA;                             cloc-diff.xsl if --diff is also given).&#xA;                             This switch forces --xml on.&#xA;   --yaml                    Write the results in YAML.&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;Languages&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Recognized Languages ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; cloc --show-lang&#xA;&#xA;ABAP                       (abap)&#xA;ActionScript               (as)&#xA;Ada                        (ada, adb, ads, pad)&#xA;ADSO/IDSM                  (adso)&#xA;Agda                       (agda, lagda)&#xA;AMPLE                      (ample, dofile, startup)&#xA;Ant                        (build.xml, build.xml)&#xA;ANTLR Grammar              (g, g4)&#xA;Apex Class                 (cls)&#xA;Apex Trigger               (trigger)&#xA;APL                        (apl, apla, aplc, aplf, apli, apln, aplo, dyalog, dyapp, mipage)&#xA;Arduino Sketch             (ino, pde)&#xA;AsciiDoc                   (adoc, asciidoc)&#xA;ASP                        (asa, ashx, asp, axd)&#xA;ASP.NET                    (asax, ascx, asmx, aspx, master, sitemap, webinfo)&#xA;AspectJ                    (aj)&#xA;Assembly                   (a51, asm, nasm, S, s)&#xA;AutoHotkey                 (ahk, ahkl)&#xA;awk                        (auk, awk, gawk, mawk, nawk)&#xA;Bazel                      (BUILD)&#xA;BizTalk Orchestration      (odx)&#xA;BizTalk Pipeline           (btp)&#xA;Blade                      (blade, blade.php)&#xA;Bourne Again Shell         (bash)&#xA;Bourne Shell               (sh)&#xA;BrightScript               (brs)&#xA;builder                    (xml.builder)&#xA;C                          (c, cats, ec, idc, pgc)&#xA;C Shell                    (csh, tcsh)&#xA;C#                         (cs)&#xA;C# Designer                (designer.cs)&#xA;C++                        (C, c++, cc, CPP, cpp, cxx, h++, inl, ipp, pcc, tcc, tpp)&#xA;C/C++ Header               (H, h, hh, hpp, hxx)&#xA;Cake Build Script          (cake)&#xA;CCS                        (ccs)&#xA;Chapel                     (chpl)&#xA;Clean                      (dcl, icl)&#xA;Clojure                    (boot, cl2, clj, cljs.hl, cljscm, cljx, hic, riemann.config)&#xA;ClojureC                   (cljc)&#xA;ClojureScript              (cljs)&#xA;CMake                      (cmake, cmake.in, CMakeLists.txt)&#xA;COBOL                      (CBL, cbl, ccp, COB, cob, cobol, cpy)&#xA;CoffeeScript               (_coffee, cakefile, cjsx, coffee, iced)&#xA;ColdFusion                 (cfm, cfml)&#xA;ColdFusion CFScript        (cfc)&#xA;Coq                        (v)&#xA;Crystal                    (cr)&#xA;CSON                       (cson)&#xA;CSS                        (css)&#xA;CSV                        (csv)&#xA;Cucumber                   (feature)&#xA;CUDA                       (cu, cuh)&#xA;Cython                     (pxd, pxi, pyx)&#xA;D                          (d)&#xA;DAL                        (da)&#xA;Dart                       (dart)&#xA;Delphi Form                (dfm)&#xA;dhall                      (dhall)&#xA;DIET                       (dt)&#xA;diff                       (diff, patch)&#xA;DITA                       (dita)&#xA;Dockerfile                 (Dockerfile, dockerfile)&#xA;DOORS Extension Language   (dxl)&#xA;DOS Batch                  (BAT, bat, BTM, btm, CMD, cmd)&#xA;Drools                     (drl)&#xA;DTD                        (dtd)&#xA;dtrace                     (d)&#xA;ECPP                       (ecpp)&#xA;EEx                        (eex)&#xA;EJS                        (ejs)&#xA;Elixir                     (ex, exs)&#xA;Elm                        (elm)&#xA;Embedded Crystal           (ecr)&#xA;ERB                        (ERB, erb)&#xA;Erlang                     (app.src, emakefile, erl, hrl, rebar.config, rebar.config.lock, rebar.lock, xrl, yrl)&#xA;Expect                     (exp)&#xA;F#                         (fsi, fs, fs)&#xA;F# Script                  (fsx)&#xA;Fennel                     (fnl)&#xA;Fish Shell                 (fish)&#xA;Flatbuffers                (fbs)&#xA;Focus                      (focexec)&#xA;Forth                      (4th, e4, f83, fb, forth, fpm, fr, frt, ft, fth, rx, fs, f, for)&#xA;Fortran 77                 (F, F77, f77, FOR, FTN, ftn, pfo, f, for)&#xA;Fortran 90                 (F90, f90)&#xA;Fortran 95                 (F95, f95)&#xA;Freemarker Template        (ftl)&#xA;FXML                       (fxml)&#xA;GDScript                   (gd)&#xA;Gencat NLS                 (msg)&#xA;Glade                      (glade, ui)&#xA;Gleam                      (gleam)&#xA;GLSL                       (comp, fp, frag, frg, fsh, fshader, geo, geom, glsl, glslv, gshader, tesc, tese, vert, vrx, vsh, vshader)&#xA;Go                         (go)&#xA;Godot Resource             (tres)&#xA;Godot Scene                (tscn)&#xA;Gradle                     (gradle, gradle.kts)&#xA;Grails                     (gsp)&#xA;GraphQL                    (gql, graphql, graphqls)&#xA;Groovy                     (gant, groovy, grt, gtpl, gvy, jenkinsfile)&#xA;Haml                       (haml, haml.deface)&#xA;Handlebars                 (handlebars, hbs)&#xA;Harbour                    (hb)&#xA;Haskell                    (hs, hsc, lhs)&#xA;Haxe                       (hx, hxsl)&#xA;HCL                        (hcl, nomad, tf, tfvars)&#xA;HLSL                       (cg, cginc, fxh, hlsl, hlsli, shader)&#xA;Hoon                       (hoon)&#xA;HTML                       (htm, html, html.hl, xht)&#xA;IDL                        (dlm, idl, pro)&#xA;Idris                      (idr)&#xA;Igor Pro                   (ipf)&#xA;Imba                       (imba)&#xA;INI                        (buildozer.spec, ini, lektorproject, prefs)&#xA;InstallShield              (ism)&#xA;IPL                        (ipl)&#xA;Java                       (java)&#xA;JavaScript                 (_js, bones, es6, jake, jakefile, js, jsb, jscad, jsfl, jsm, jss, mjs, njs, pac, sjs, ssjs, xsjs, xsjslib)&#xA;JavaServer Faces           (jsf)&#xA;JCL                        (jcl)&#xA;Jinja Template             (jinja, jinja2)&#xA;JSON                       (arcconfig, avsc, composer.lock, geojson, gltf, har, htmlhintrc, json, json-tmlanguage, jsonl, mcmeta, mcmod.info, tern-config, tern-project, tfstate, tfstate.backup, topojson, watchmanconfig, webapp, webmanifest, yyp)&#xA;JSON5                      (json5)&#xA;JSP                        (jsp, jspf)&#xA;JSX                        (jsx)&#xA;Julia                      (jl)&#xA;Juniper Junos              (junos)&#xA;Jupyter Notebook           (ipynb)&#xA;Kermit                     (ksc)&#xA;Korn Shell                 (ksh)&#xA;Kotlin                     (kt, ktm, kts)&#xA;Lean                       (hlean, lean)&#xA;LESS                       (less)&#xA;lex                        (l, lex)&#xA;LFE                        (lfe)&#xA;liquid                     (liquid)&#xA;Lisp                       (asd, el, lisp, lsp, cl, jl)&#xA;Literate Idris             (lidr)&#xA;LiveLink OScript           (oscript)&#xA;LLVM IR                    (ll)&#xA;Logos                      (x, xm)&#xA;Logtalk                    (lgt, logtalk)&#xA;Lua                        (lua, nse, p8, pd_lua, rbxs, wlua)&#xA;m4                         (ac, m4)&#xA;make                       (am, Gnumakefile, gnumakefile, Makefile, makefile, mk)&#xA;Mako                       (mako, mao)&#xA;Markdown                   (contents.lr, markdown, md, mdown, mdwn, mdx, mkd, mkdn, mkdown, ronn, workbook)&#xA;Mathematica                (cdf, ma, mathematica, mt, nbp, wl, wlt, m)&#xA;MATLAB                     (m)&#xA;Maven                      (pom, pom.xml)&#xA;Meson                      (meson.build)&#xA;Metal                      (metal)&#xA;Modula3                    (i3, ig, m3, mg)&#xA;Mojo                       (mojom)&#xA;MSBuild script             (btproj, csproj, msbuild, vcproj, wdproj, wixproj)&#xA;MUMPS                      (mps, m)&#xA;Mustache                   (mustache)&#xA;MXML                       (mxml)&#xA;NAnt script                (build)&#xA;NASTRAN DMAP               (dmap)&#xA;Nemerle                    (n)&#xA;Nim                        (nim, nim.cfg, nimble, nimrod, nims)&#xA;Nix                        (nix)&#xA;Objective-C                (m)&#xA;Objective-C++              (mm)&#xA;OCaml                      (eliom, eliomi, ml, ml4, mli, mll, mly)&#xA;Odin                       (odin)&#xA;OpenCL                     (cl)&#xA;Oracle Forms               (fmt)&#xA;Oracle PL/SQL              (bod, fnc, prc, spc, trg)&#xA;Oracle Reports             (rex)&#xA;Pascal                     (dpr, lpr, p, pas, pascal)&#xA;Pascal/Puppet              (pp)&#xA;Patran Command Language    (pcl, ses)&#xA;Perl                       (ack, al, cpanfile, makefile.pl, perl, ph, plh, plx, pm, psgi, rexfile, pl, p6)&#xA;PHP                        (aw, ctp, phakefile, php, php3, php4, php5, php_cs, php_cs.dist, phps, phpt, phtml)&#xA;PHP/Pascal                 (inc)&#xA;Pig Latin                  (pig)&#xA;PL/I                       (pl1)&#xA;PL/M                       (lit, plm)&#xA;PlantUML                   (puml)&#xA;PO File                    (po)&#xA;PowerBuilder               (pbt, sra, srf, srm, srs, sru, srw)&#xA;PowerShell                 (ps1, psd1, psm1)&#xA;ProGuard                   (pro)&#xA;Prolog                     (P, prolog, yap, pl, p6, pro)&#xA;Properties                 (properties)&#xA;Protocol Buffers           (proto)&#xA;Pug                        (jade, pug)&#xA;PureScript                 (purs)&#xA;Python                     (buck, build.bazel, gclient, gyp, gypi, lmi, py, py3, pyde, pyi, pyp, pyt, pyw, sconscript, sconstruct, snakefile, tac, workspace, wscript, wsgi, xpy)&#xA;QML                        (qbs, qml)&#xA;Qt                         (ui)&#xA;Qt Linguist                (ts)&#xA;Qt Project                 (pro)&#xA;R                          (expr-dist, R, r, rd, rprofile, rsx)&#xA;Racket                     (rkt, rktd, rktl, scrbl)&#xA;Raku                       (pm6, raku, rakumod)&#xA;Raku/Prolog                (P6, p6)&#xA;RAML                       (raml)&#xA;RapydScript                (pyj)&#xA;Razor                      (cshtml, razor)&#xA;ReasonML                   (re, rei)&#xA;ReScript                   (res, resi)&#xA;reStructuredText           (rest, rest.txt, rst, rst.txt)&#xA;Rexx                       (pprx, rexx)&#xA;Ring                       (rform, rh, ring)&#xA;Rmd                        (Rmd)&#xA;RobotFramework             (robot)&#xA;Ruby                       (appraisals, berksfile, brewfile, builder, buildfile, capfile, dangerfile, deliverfile, eye, fastfile, gemfile, gemfile.lock, gemspec, god, guardfile, irbrc, jarfile, jbuilder, mavenfile, mspec, podfile, podspec, pryrc, puppetfile, rabl, rake, rb, rbuild, rbw, rbx, ru, snapfile, thor, thorfile, vagrantfile, watchr)&#xA;Ruby HTML                  (rhtml)&#xA;Rust                       (rs, rs.in)&#xA;SaltStack                  (sls)&#xA;SAS                        (sas)&#xA;Sass                       (sass)&#xA;Scala                      (kojo, sbt, scala)&#xA;Scheme                     (sc, sch, scm, sld, sps, ss, sls)&#xA;SCSS                       (scss)&#xA;sed                        (sed)&#xA;SKILL                      (il)&#xA;SKILL++                    (ils)&#xA;Slice                      (ice)&#xA;Slim                       (slim)&#xA;Smalltalk                  (st, cs)&#xA;Smarty                     (smarty, tpl)&#xA;Softbridge Basic           (SBL, sbl)&#xA;Solidity                   (sol)&#xA;SparForte                  (sp)&#xA;Specman e                  (e)&#xA;SQL                        (cql, mysql, psql, SQL, sql, tab, udf, viw)&#xA;SQL Data                   (data.sql)&#xA;SQL Stored Procedure       (spc.sql, spoc.sql, sproc.sql, udf.sql)&#xA;Squirrel                   (nut)&#xA;Standard ML                (fun, sig, sml)&#xA;Starlark                   (bazel, bzl)&#xA;Stata                      (ado, DO, do, doh, ihlp, mata, matah, sthlp)&#xA;Stylus                     (styl)&#xA;SugarSS                    (sss)&#xA;Svelte                     (svelte)&#xA;SVG                        (SVG, svg)&#xA;Swift                      (swift)&#xA;SWIG                       (i)&#xA;TableGen                   (tb)&#xA;Tcl/Tk                     (itk, tcl, tk)&#xA;Teamcenter met             (met)&#xA;Teamcenter mth             (mth)&#xA;TeX                        (aux, bbx, bib, bst, cbx, dtx, ins, lbx, ltx, mkii, mkiv, mkvi, sty, tex, cls)&#xA;Thrift                     (thrift)&#xA;TITAN Project File Information (tpd)&#xA;Titanium Style Sheet       (tss)&#xA;TNSDL                      (cii, cin, in1, in2, in3, in4, inf, interface, rou, sdl, sdt, spd, ssc, sst)&#xA;TOML                       (toml)&#xA;TTCN                       (ttcn, ttcn2, ttcn3, ttcnpp)&#xA;Twig                       (twig)&#xA;TypeScript                 (tsx, ts)&#xA;Umka                       (um)&#xA;Unity-Prefab               (mat, prefab)&#xA;Vala                       (vala)&#xA;Vala Header                (vapi)&#xA;VB for Applications        (VBA, vba)&#xA;Velocity Template Language (vm)&#xA;Verilog-SystemVerilog      (sv, svh, v)&#xA;VHDL                       (VHD, vhd, VHDL, vhdl, vhf, vhi, vho, vhs, vht, vhw)&#xA;vim script                 (vim)&#xA;Visual Basic               (BAS, bas, ctl, dsr, frm, FRX, frx, VBHTML, vbhtml, vbp, vbw, cls)&#xA;Visual Basic .NET          (VB, vb, vbproj)&#xA;Visual Basic Script        (VBS, vbs)&#xA;Visual Fox Pro             (SCA, sca)&#xA;Visual Studio Solution     (sln)&#xA;Visualforce Component      (component)&#xA;Visualforce Page           (page)&#xA;Vuejs Component            (vue)&#xA;Web Services Description   (wsdl)&#xA;WebAssembly                (wast, wat)&#xA;Windows Message File       (mc)&#xA;Windows Module Definition  (def)&#xA;Windows Resource File      (rc, rc2)&#xA;WiX include                (wxi)&#xA;WiX source                 (wxs)&#xA;WiX string localization    (wxl)&#xA;WXML                       (wxml)&#xA;WXSS                       (wxss)&#xA;XAML                       (xaml)&#xA;xBase                      (prg, prw)&#xA;xBase Header               (ch)&#xA;XHTML                      (xhtml)&#xA;XMI                        (XMI, xmi)&#xA;XML                        (adml, admx, ant, app.config, axml, builds, ccproj, ccxml, classpath, clixml, cproject, cscfg, csdef, csl, ct, depproj, ditamap, ditaval, dll.config, dotsettings, filters, fsproj, gmx, grxml, iml, ivy, jelly, jsproj, kml, launch, mdpolicy, mjml, natvis, ndproj, nproj, nuget.config, nuspec, odd, osm, packages.config, pkgproj, plist, proj, project, props, ps1xml, psc1, pt, rdf, resx, rss, scxml, settings.stylecop, sfproj, shproj, srdf, storyboard, sttheme, sublime-snippet, targets, tmcommand, tml, tmlanguage, tmpreferences, tmsnippet, tmtheme, urdf, ux, vcxproj, vsixmanifest, vssettings, vstemplate, vxml, web.config, web.debug.config, web.release.config, wsf, x3d, xacro, xib, xlf, xliff, XML, xml, xml.dist, xproj, xspec, xul, zcml)&#xA;XQuery                     (xq, xql, xqm, xquery, xqy)&#xA;XSD                        (XSD, xsd)&#xA;XSLT                       (XSL, xsl, XSLT, xslt)&#xA;Xtend                      (xtend)&#xA;yacc                       (y, yacc)&#xA;YAML                       (clang-format, clang-tidy, gemrc, glide.lock, mir, reek, rviz, sublime-syntax, syntax, yaml, yaml-tmlanguage, yml, yml.mysql)&#xA;Zig                        (zig)&#xA;zsh                        (zsh)&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;The above list can be customized by reading language definitions from a file with the &lt;code&gt;--read-lang-def&lt;/code&gt; or &lt;code&gt;--force-lang-def&lt;/code&gt; options.&lt;/p&gt; &#xA;&lt;p&gt;These file extensions map to multiple languages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;cl&lt;/code&gt; files could be Lisp or OpenCL&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cls&lt;/code&gt; files could be Visual Basic, TeX or Apex Class&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cs&lt;/code&gt; files could be C# or Smalltalk&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;d&lt;/code&gt; files could be D or dtrace&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;f&lt;/code&gt; files could be Fortran 77 or Forth&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fnc&lt;/code&gt; files could be Oracle PL or SQL&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;for&lt;/code&gt; files could be Fortran 77 or Forth&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fs&lt;/code&gt; files could be F# or Forth&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;inc&lt;/code&gt; files could be PHP or Pascal&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;itk&lt;/code&gt; files could be Tcl or Tk&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jl&lt;/code&gt; files could be Lisp or Julia&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lit&lt;/code&gt; files could be PL or M&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;m&lt;/code&gt; files could be MATLAB, Mathematica, Objective-C, MUMPS or Mercury&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;p6&lt;/code&gt; files could be Perl or Prolog&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pl&lt;/code&gt; files could be Perl or Prolog&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PL&lt;/code&gt; files could be Perl or Prolog&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pp&lt;/code&gt; files could be Pascal or Puppet&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pro&lt;/code&gt; files could be IDL, Qt Project, Prolog or ProGuard&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ts&lt;/code&gt; files could be TypeScript or Qt Linguist&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ui&lt;/code&gt; files could be Qt or Glade&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;v&lt;/code&gt; files could be Verilog-SystemVerilog or Coq&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;cloc has subroutines that attempt to identify the correct language based on the file&#39;s contents for these special cases. Language identification accuracy is a function of how much code the file contains; .m files with just one or two lines for example, seldom have enough information to correctly distinguish between MATLAB, Mercury, MUMPS, or Objective-C.&lt;/p&gt; &#xA;&lt;p&gt;Languages with file extension collisions are difficult to customize with &lt;code&gt;--read-lang-def&lt;/code&gt; or &lt;code&gt;--force-lang-def&lt;/code&gt; as they have no mechanism to identify languages with common extensions. In this situation one must modify the cloc source code. &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;How_it_works&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;How It Works ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;cloc&#39;s method of operation resembles SLOCCount&#39;s: First, create a list of files to consider. Next, attempt to determine whether or not found files contain recognized computer language source code. Finally, for files identified as source files, invoke language-specific routines to count the number of source lines.&lt;/p&gt; &#xA;&lt;p&gt;A more detailed description:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If the input file is an archive (such as a .tar.gz or .zip file), create a temporary directory and expand the archive there using a system call to an appropriate underlying utility (tar, bzip2, unzip, etc) then add this temporary directory as one of the inputs. (This works more reliably on Unix than on Windows.)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use File::Find to recursively descend the input directories and make a list of candidate file names. Ignore binary and zero-sized files.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure the files in the candidate list have unique contents (first by comparing file sizes, then, for similarly sized files, compare MD5 hashes of the file contents with Digest::MD5). For each set of identical files, remove all but the first copy, as determined by a lexical sort, of identical files from the set. The removed files are not included in the report. (The &lt;code&gt;--skip-uniqueness&lt;/code&gt; switch disables the uniqueness tests and forces all copies of files to be included in the report.) See also the &lt;code&gt;--ignored=&lt;/code&gt; switch to see which files were ignored and why.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Scan the candidate file list for file extensions which cloc associates with programming languages (see the &lt;code&gt;--show-lang&lt;/code&gt; and &lt;code&gt;--show-ext&lt;/code&gt; options). Files which match are classified as containing source code for that language. Each file without an extensions is opened and its first line read to see if it is a Unix shell script (anything that begins with #!). If it is shell script, the file is classified by that scripting language (if the language is recognized). If the file does not have a recognized extension or is not a recognized scripting language, the file is ignored.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;All remaining files in the candidate list should now be source files for known programming languages. For each of these files:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Read the entire file into memory.&lt;/li&gt; &#xA;   &lt;li&gt;Count the number of lines (= L&lt;sub&gt;original&lt;/sub&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;Remove blank lines, then count again (= L&lt;sub&gt;non_blank&lt;/sub&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;Loop over the comment filters defined for this language. (For example, C++ has two filters: (1) remove lines that start with optional whitespace followed by // and (2) remove text between /* and */) Apply each filter to the code to remove comments. Count the left over lines (= L&lt;sub&gt;code&lt;/sub&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;Save the counts for this language: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;blank lines = L&lt;sub&gt;original&lt;/sub&gt; - L&lt;sub&gt;non_blank&lt;/sub&gt;&lt;/li&gt; &#xA;     &lt;li&gt;comment lines = L&lt;sub&gt;non_blank&lt;/sub&gt; - L&lt;sub&gt;code&lt;/sub&gt;&lt;/li&gt; &#xA;     &lt;li&gt;code lines = L&lt;sub&gt;code&lt;/sub&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The options modify the algorithm slightly. The &lt;code&gt;--read-lang-def&lt;/code&gt; option for example allows the user to read definitions of comment filters, known file extensions, and known scripting languages from a file. The code for this option is processed between Steps 2 and 3. &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;Advanced_Use&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Advanced Use ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;strip_comments&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Remove Comments from Source Code ▲&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;How can you tell if cloc correctly identifies comments? One way to convince yourself cloc is doing the right thing is to use its &lt;code&gt;--strip-comments&lt;/code&gt; option to remove comments and blank lines from files, then compare the stripped-down files to originals.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s try this out with the SQLite amalgamation, a C file containing all code needed to build the SQLite library along with a header file:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; tar zxf sqlite-amalgamation-3.5.6.tar.gz&#xA;prompt&amp;gt; cd sqlite-3.5.6/&#xA;prompt&amp;gt; cloc --strip-comments=nc sqlite.c&#xA;       1 text file.&#xA;       1 unique file.&#xA;Wrote sqlite3.c.nc&#xA;       0 files ignored.&#xA;&#xA;http://cloc.sourceforge.net v 1.03  T=1.0 s (1.0 files/s, 82895.0 lines/s)&#xA;-------------------------------------------------------------------------------&#xA;Language          files     blank   comment      code    scale   3rd gen. equiv&#xA;-------------------------------------------------------------------------------&#xA;C                     1      5167     26827     50901 x   0.77 =       39193.77&#xA;-------------------------------------------------------------------------------&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;The extension argument given to --strip-comments is arbitrary; here nc was used as an abbreviation for &#34;no comments&#34;.&lt;/p&gt; &#xA;&lt;p&gt;cloc removed over 31,000 lines from the file:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; wc -l sqlite3.c sqlite3.c.nc&#xA;  82895 sqlite3.c&#xA;  50901 sqlite3.c.nc&#xA; 133796 total&#xA;prompt&amp;gt; echo &#34;82895 - 50901&#34; | bc&#xA;31994&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;We can now compare the original file, sqlite3.c and the one stripped of comments, sqlite3.c.nc with tools like diff or vimdiff and see what exactly cloc considered comments and blank lines. A rigorous proof that the stripped-down file contains the same C code as the original is to compile these files and compare checksums of the resulting object files.&lt;/p&gt; &#xA;&lt;p&gt;First, the original source file:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; gcc -c sqlite3.c&#xA;prompt&amp;gt; md5sum sqlite3.o&#xA;cce5f1a2ea27c7e44b2e1047e2588b49  sqlite3.o&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Next, the version without comments:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; mv sqlite3.c.nc sqlite3.c&#xA;prompt&amp;gt; gcc -c sqlite3.c&#xA;prompt&amp;gt; md5sum sqlite3.o&#xA;cce5f1a2ea27c7e44b2e1047e2588b49  sqlite3.o&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;cloc removed over 31,000 lines of comments and blanks but did not modify the source code in any significant way since the resulting object file matches the original. &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;compressed_arch&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Work with Compressed Archives ▲&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Versions of cloc before v1.07 required an &lt;code&gt;--extract-with=CMD&lt;/code&gt; option to tell cloc how to expand an archive file. Beginning with v1.07 this is extraction is attempted automatically. At the moment the automatic extraction method works reasonably well on Unix-type OS&#39;s for the following file types: &lt;code&gt;.tar.gz&lt;/code&gt;, &lt;code&gt;.tar.bz2&lt;/code&gt;, &lt;code&gt;.tar.xz&lt;/code&gt;, &lt;code&gt;.tgz&lt;/code&gt;, &lt;code&gt;.zip&lt;/code&gt;, &lt;code&gt;.ear&lt;/code&gt;, &lt;code&gt;.deb&lt;/code&gt;. Some of these extensions work on Windows if one has WinZip installed in the default location (&lt;code&gt;C:\Program Files\WinZip\WinZip32.exe&lt;/code&gt;). Additionally, with newer versions of WinZip, the [http://www.winzip.com/downcl.htm](command line add-on) is needed for correct operation; in this case one would invoke cloc with something like &lt;br&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA; --extract-with=&#34;\&#34;c:\Program Files\WinZip\wzunzip\&#34; -e -o &amp;gt;FILE&amp;lt; .&#34;&#xA; &#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Ref. &lt;a href=&#34;http://sourceforge.net/projects/cloc/forums/forum/600963/topic/4021070?message=8938196&#34;&gt;http://sourceforge.net/projects/cloc/forums/forum/600963/topic/4021070?message=8938196&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In situations where the automatic extraction fails, one can try the &lt;code&gt;--extract-with=CMD&lt;/code&gt; option to count lines of code within tar files, Zip files, or other compressed archives for which one has an extraction tool. cloc takes the user-provided extraction command and expands the archive to a temporary directory (created with File::Temp), counts the lines of code in the temporary directory, then removes that directory. While not especially helpful when dealing with a single compressed archive (after all, if you&#39;re going to type the extraction command anyway why not just manually expand the archive?) this option is handy for working with several archives at once.&lt;/p&gt; &#xA;&lt;p&gt;For example, say you have the following source tarballs on a Unix machine&lt;br&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perl-5.8.5.tar.gz&#xA;Python-2.4.2.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and you want to count all the code within them. The command would be&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;cloc --extract-with=&#39;gzip -dc &amp;gt;FILE&amp;lt; | tar xf -&#39; perl-5.8.5.tar.gz Python-2.4.2.tar.gz&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;If that Unix machine has GNU tar (which can uncompress and extract in one step) the command can be shortened to&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;cloc --extract-with=&#39;tar zxf &amp;gt;FILE&amp;lt;&#39; perl-5.8.5.tar.gz Python-2.4.2.tar.gz&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;On a Windows computer with WinZip installed in &lt;code&gt;c:\Program Files\WinZip&lt;/code&gt; the command would look like&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;cloc.exe --extract-with=&#34;\&#34;c:\Program Files\WinZip\WinZip32.exe\&#34; -e -o &amp;gt;FILE&amp;lt; .&#34; perl-5.8.5.tar.gz Python-2.4.2.tar.gz&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Java &lt;code&gt;.ear&lt;/code&gt; files are Zip files that contain additional Zip files. cloc can handle nested compressed archives without difficulty--provided all such files are compressed and archived in the same way. Examples of counting a Java &lt;code&gt;.ear&lt;/code&gt; file in Unix and Windows:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cloc --extract-with=&#34;unzip -d . &amp;gt;FILE&amp;lt; &#34; Project.ear&#xA;&lt;i&gt;DOS&amp;gt;&lt;/i&gt; cloc.exe --extract-with=&#34;\&#34;c:\Program Files\WinZip\WinZip32.exe\&#34; -e -o &amp;gt;FILE&amp;lt; .&#34; Project.ear&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;diff&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Differences ▲&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;--diff&lt;/code&gt; switch allows one to measure the relative change in source code and comments between two versions of a file, directory, or archive. Differences reveal much more than absolute code counts of two file versions. For example, say a source file has 100 lines and its developer delivers a newer version with 102 lines. Did the developer add two comment lines, or delete seventeen source lines and add fourteen source lines and five comment lines, or did the developer do a complete rewrite, discarding all 100 original lines and adding 102 lines of all new source? The diff option tells how many lines of source were added, removed, modified or stayed the same, and how many lines of comments were added, removed, modified or stayed the same.&lt;/p&gt; &#xA;&lt;p&gt;Differences in blank lines are handled much more coarsely because these are stripped by cloc early on. Unless a file pair is identical, cloc will report only differences in absolute counts of blank lines. In other words, one can expect to see only entries for &#39;added&#39; if the second file has more blanks than the first, and &#39;removed&#39; if the situation is reversed. The entry for &#39;same&#39; will be non-zero only when the two files are identical.&lt;/p&gt; &#xA;&lt;p&gt;In addition to file pairs, one can give cloc pairs of directories, or pairs of file archives, or a file archive and a directory. cloc will try to align file pairs within the directories or archives and compare diffs for each pair. For example, to see what changed between GCC 4.4.0 and 4.5.0 one could do&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;cloc --diff gcc-4.4.0.tar.bz2  gcc-4.5.0.tar.bz2&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Be prepared to wait a while for the results though; the &lt;code&gt;--diff&lt;/code&gt; option runs much more slowly than an absolute code count.&lt;/p&gt; &#xA;&lt;p&gt;To see how cloc aligns files between the two archives, use the &lt;code&gt;--diff-alignment&lt;/code&gt; option&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;cloc --diff-alignment=align.txt gcc-4.4.0.tar.bz2  gcc-4.5.0.tar.bz2&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;to produce the file &lt;code&gt;align.txt&lt;/code&gt; which shows the file pairs as well as files added and deleted. The symbols &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; before each file pair indicate if the files are identical (&lt;code&gt;==&lt;/code&gt;) or if they have different content (&lt;code&gt;!=&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s sample output showing the difference between the Python 2.6.6 and 2.7 releases:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;i&gt;prompt&amp;gt;&lt;/i&gt; cloc --diff Python-2.7.9.tgz Python-2.7.10.tar.xz&#xA;    4315 text files.&#xA;    4313 text files.s&#xA;    2173 files ignored.&#xA;&#xA;4 errors:&#xA;Diff error, exceeded timeout:  /tmp/8ToGAnB9Y1/Python-2.7.9/Mac/Modules/qt/_Qtmodule.c&#xA;Diff error, exceeded timeout:  /tmp/M6ldvsGaoq/Python-2.7.10/Mac/Modules/qt/_Qtmodule.c&#xA;Diff error (quoted comments?):  /tmp/8ToGAnB9Y1/Python-2.7.9/Mac/Modules/qd/qdsupport.py&#xA;Diff error (quoted comments?):  /tmp/M6ldvsGaoq/Python-2.7.10/Mac/Modules/qd/qdsupport.py&#xA;&#xA;https://github.com/AlDanial/cloc v 1.65  T=298.59 s (0.0 files/s, 0.0 lines/s)&#xA;-----------------------------------------------------------------------------&#xA;Language                   files          blank        comment           code&#xA;-----------------------------------------------------------------------------&#xA;Visual Basic&#xA; same                          2              0              1             12&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;make&#xA; same                         11              0            340           2952&#xA; modified                      1              0              0              1&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;diff&#xA; same                          1              0             87            105&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;CSS&#xA; same                          0              0             19            327&#xA; modified                      1              0              0              1&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;Objective-C&#xA; same                          7              0             61            635&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;NAnt script&#xA; same                          2              0              0             30&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;XML&#xA; same                          3              0              2             72&#xA; modified                      1              0              0              1&#xA; added                         0              0              0              1&#xA; removed                       0              1              0              0&#xA;Windows Resource File&#xA; same                          3              0             56            206&#xA; modified                      1              0              0              1&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;Expect&#xA; same                          6              0            161            565&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;HTML&#xA; same                         14              0             11           2344&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;vim script&#xA; same                          1              0              7            106&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;C++&#xA; same                          2              0             18            128&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;Windows Module Definition&#xA; same                          7              0            187           2080&#xA; modified                      2              0              0              0&#xA; added                         0              0              0              1&#xA; removed                       0              1              0              2&#xA;Prolog&#xA; same                          1              0              0             24&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;Javascript&#xA; same                          3              0             49            229&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;Assembly&#xA; same                         51              0           6794          12298&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;Bourne Shell&#xA; same                         41              0           7698          45024&#xA; modified                      1              0              0              3&#xA; added                         0             13              2             64&#xA; removed                       0              0              0              0&#xA;DOS Batch&#xA; same                         29              0            107            494&#xA; modified                      1              0              0              9&#xA; added                         0              1              0              3&#xA; removed                       0              0              0              0&#xA;MSBuild script&#xA; same                         77              0              3          38910&#xA; modified                      0              0              0              0&#xA; added                         0              0              0              0&#xA; removed                       0              0              0              0&#xA;Python&#xA; same                       1947              0         109012         430335&#xA; modified                    192              0             94            950&#xA; added                         2            323            283           2532&#xA; removed                       2             55             58            646&#xA;m4&#xA; same                         18              0            191          15352&#xA; modified                      1              0              0              2&#xA; added                         1             31              0            205&#xA; removed                       0              0              0              0&#xA;C&#xA; same                        505              0          37439         347837&#xA; modified                     45              0             13            218&#xA; added                         0             90             33            795&#xA; removed                       0              9              2            148&#xA;C/C++ Header&#xA; same                        255              0          10361          66635&#xA; modified                      5              0              5              7&#xA; added                         0              1              3            300&#xA; removed                       0              0              0              0&#xA;---------------------------------------------------------------------&#xA;SUM:&#xA; same                       2986              0         172604         966700&#xA; modified                    251              0            112           1193&#xA; added                         3            459            321           3901&#xA; removed                       2             66             60            796&#xA;---------------------------------------------------------------------&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;A pair of errors occurred. The first pair was caused by timing out when computing diffs of the file &lt;code&gt;Python-X/Mac/Modules/qt/_Qtmodule.c&lt;/code&gt; in each Python version. This file has &amp;gt; 26,000 lines of C code and takes more than 10 seconds--the default maximum duration for diff&#39;ing a single file--on my slow computer. (Note: this refers to performing differences with the &lt;code&gt;sdiff()&lt;/code&gt; function in the Perl &lt;code&gt;Algorithm::Diff&lt;/code&gt; module, not the command line &lt;code&gt;diff&lt;/code&gt; utility.) This error can be overcome by raising the time to, say, 20 seconds with &lt;code&gt;--diff-timeout 20&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The second error is more problematic. The files &lt;code&gt;Python-X/Mac/Modules/qd/qdsupport.py&lt;/code&gt; include Python docstring (text between pairs of triple quotes) containing C comments. cloc treats docstrings as comments and handles them by first converting them to C comments, then using the C comment removing regular expression. Nested C comments yield erroneous results however.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;custom_lang&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Create Custom Language Definitions ▲&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;cloc can write its language comment definitions to a file or can read comment definitions from a file, overriding the built-in definitions. This can be useful when you want to use cloc to count lines of a language not yet included, to change association of file extensions to languages, or to modify the way existing languages are counted.&lt;/p&gt; &#xA;&lt;p&gt;The easiest way to create a custom language definition file is to make cloc write its definitions to a file, then modify that file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cloc --write-lang-def=my_definitions.txt&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;creates the file &lt;code&gt;my_definitions.txt&lt;/code&gt; which can be modified then read back in with either the &lt;code&gt;--read-lang-def&lt;/code&gt; or &lt;code&gt;--force-lang-def&lt;/code&gt; option. The difference between the options is former merges language definitions from the given file in with cloc&#39;s internal definitions with cloc&#39;s taking precedence if there are overlaps. The &lt;code&gt;--force-lang-def&lt;/code&gt; option, on the other hand, replaces cloc&#39;s definitions completely. This option has a disadvantage in preventing cloc from counting &lt;a class=&#34;u&#34; href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#extcollision&#34; name=&#34;extcollision&#34;&gt; languages whose extensions map to multiple languages &lt;/a&gt; as these languages require additional logic that is not easily expressed in a definitions file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cloc --read-lang-def=my_definitions.txt  &lt;i&gt;file1 file2 dir1 ...&lt;/i&gt;&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Each language entry has four parts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The language name starting in column 1.&lt;/li&gt; &#xA; &lt;li&gt;One or more comment &lt;em&gt;filters&lt;/em&gt; starting in column 5.&lt;/li&gt; &#xA; &lt;li&gt;One or more filename extensions starting in column 5.&lt;/li&gt; &#xA; &lt;li&gt;A 3rd generation scale factor starting in column 5. This entry must be provided but its value is not important unless you want to compare your language to a hypothetical third generation programming language.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A filter defines a method to remove comment text from the source file. For example the entry for C++ looks like this&lt;/p&gt; &#xA;&lt;pre&gt;C++&#xA;    filter call_regexp_common C++&#xA;    filter remove_inline //.*$&#xA;    extension C&#xA;    extension c++&#xA;    extension cc&#xA;    extension cpp&#xA;    extension cxx&#xA;    extension pcc&#xA;    3rd_gen_scale 1.51&#xA;    end_of_line_continuation \\$&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;C++ has two filters: first, remove lines matching Regexp::Common&#39;s C++ comment regex. The second filter using remove_inline is currently unused. Its intent is to identify lines with both code and comments and it may be implemented in the future.&lt;/p&gt; &#xA;&lt;p&gt;A more complete discussion of the different filter options may appear here in the future. The output of cloc&#39;s &lt;code&gt;--write-lang-def&lt;/code&gt; option should provide enough examples for motivated individuals to modify or extend cloc&#39;s language definitions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;combine_reports&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Combine Reports ▲&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you manage multiple software projects you might be interested in seeing line counts by project, not just by language. Say you manage three software projects called MariaDB, PostgreSQL, and SQLite. The teams responsible for each of these projects run cloc on their source code and provide you with the output. For example MariaDB team does&lt;/p&gt; &#xA;&lt;pre&gt;cloc --out mariadb-10.1.txt mariadb-server-10.1.zip&lt;/pre&gt; &#xA;&lt;p&gt;and provides you with the file &lt;code&gt;mariadb-10.1.txt&lt;/code&gt;. The contents of the three files you get are&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cat mariadb-10.1.txt&#xA;https://github.com/AlDanial/cloc v 1.65  T=45.36 s (110.5 files/s, 66411.4 lines/s)&#xA;-----------------------------------------------------------------------------------&#xA;Language                         files          blank        comment           code&#xA;-----------------------------------------------------------------------------------&#xA;C++                               1613         225338         290077         983026&#xA;C                                  853          62442          73017         715018&#xA;C/C++ Header                      1327          48300         114577         209394&#xA;Bourne Shell                       256          10224          10810          61943&#xA;Perl                               147          10342           8305          35562&#xA;Pascal                             107           4907           5237          32541&#xA;HTML                                56            195              6          16489&#xA;Javascript                           5           3309           3019          15540&#xA;m4                                  30           1599            359          14215&#xA;CMake                              190           1919           4097          12206&#xA;XML                                 35            648             56           5210&#xA;Ruby                                59            619            184           4998&#xA;Puppet                              10              0              1           3848&#xA;make                               134            724            360           3631&#xA;SQL                                 23            306            377           3405&#xA;Python                              34            371            122           2545&#xA;Bourne Again Shell                  27            299            380           1604&#xA;Windows Module Definition           37             27             13           1211&#xA;lex                                  4            394            166            991&#xA;yacc                                 2            152             64            810&#xA;DOS Batch                           19             89             82            700&#xA;Prolog                               1              9             40            448&#xA;RobotFramework                       1              0              0            441&#xA;CSS                                  2             33            155            393&#xA;JSON                                 5              0              0            359&#xA;dtrace                               9             59            179            306&#xA;Windows Resource File               10             61             89            250&#xA;Assembly                             2             70            284            237&#xA;WiX source                           1             18             10            155&#xA;Visual Basic                         6              0              0             88&#xA;YAML                                 2              4              4             65&#xA;PHP                                  1             11              2             24&#xA;SKILL                                1              8             15             16&#xA;sed                                  2              0              0             16&#xA;Windows Message File                 1              2              8              6&#xA;diff                                 1              1              4              4&#xA;D                                    1              4             11              4&#xA;-----------------------------------------------------------------------------------&#xA;SUM:                              5014         372484         512110        2127699&#xA;-----------------------------------------------------------------------------------&#xA;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cat sqlite-3081101.txt&#xA;https://github.com/AlDanial/cloc v 1.65  T=1.22 s (3.3 files/s, 143783.6 lines/s)&#xA;-------------------------------------------------------------------------------&#xA;Language                     files          blank        comment           code&#xA;-------------------------------------------------------------------------------&#xA;C                                2          11059          53924         101454&#xA;C/C++ Header                     2            211           6630           1546&#xA;-------------------------------------------------------------------------------&#xA;SUM:                             4          11270          60554         103000&#xA;-------------------------------------------------------------------------------&#xA;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cat postgresql-9.4.4.txt&#xA;https://github.com/AlDanial/cloc v 1.65  T=22.46 s (172.0 files/s, 96721.6 lines/s)&#xA;-----------------------------------------------------------------------------------&#xA;Language                         files          blank        comment           code&#xA;-----------------------------------------------------------------------------------&#xA;HTML                              1254           3725              0         785991&#xA;C                                 1139         139289         244045         736519&#xA;C/C++ Header                       667          12277          32488          57014&#xA;SQL                                410          13400           8745          51926&#xA;yacc                                 8           3163           2669          28491&#xA;Bourne Shell                        41           2647           2440          17170&#xA;Perl                                81           1702           1308           9456&#xA;lex                                  9            792           1631           4285&#xA;make                               205           1525           1554           4114&#xA;m4                                  12            218             25           1642&#xA;Windows Module Definition           13              4             17           1152&#xA;XSLT                                 5             76             55            294&#xA;DOS Batch                            7             29             30             92&#xA;CSS                                  1             20              7             69&#xA;Assembly                             3             17             38             69&#xA;D                                    1             14             14             66&#xA;Windows Resource File                3              4              0             62&#xA;Lisp                                 1              1              1             16&#xA;sed                                  1              1              7             15&#xA;Python                               1              5              0             13&#xA;Bourne Again Shell                   1              8              6             10&#xA;Windows Message File                 1              0              0              5&#xA;-----------------------------------------------------------------------------------&#xA;SUM:                              3864         178917         295080        1698471&#xA;-----------------------------------------------------------------------------------&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;While these three files are interesting, you also want to see the combined counts from all projects. That can be done with cloc&#39;s &lt;code&gt;--sum_reports&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cloc --sum-reports --out=databases mariadb-10.1.txt  sqlite-3081101.txt  postgresql-9.4.4.txt&#xA;Wrote databases.lang&#xA;Wrote databases.file&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;The report combination produces two output files, one for sums by programming language (&lt;code&gt;databases.lang&lt;/code&gt;) and one by project (&lt;code&gt;databases.file&lt;/code&gt;). Their contents are&lt;/p&gt; &#xA;&lt;pre&gt;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cat databases.lang&#xA;https://github.com/AlDanial/cloc v 1.65&#xA;--------------------------------------------------------------------------------&#xA;Language                      files          blank        comment           code&#xA;--------------------------------------------------------------------------------&#xA;C                              1994         212790         370986        1552991&#xA;C++                            1613         225338         290077         983026&#xA;HTML                           1310           3920              6         802480&#xA;C/C++ Header                   1996          60788         153695         267954&#xA;Bourne Shell                    297          12871          13250          79113&#xA;SQL                             433          13706           9122          55331&#xA;Perl                            228          12044           9613          45018&#xA;Pascal                          107           4907           5237          32541&#xA;yacc                             10           3315           2733          29301&#xA;m4                               42           1817            384          15857&#xA;Javascript                        5           3309           3019          15540&#xA;CMake                           190           1919           4097          12206&#xA;make                            339           2249           1914           7745&#xA;lex                              13           1186           1797           5276&#xA;XML                              35            648             56           5210&#xA;Ruby                             59            619            184           4998&#xA;Puppet                           10              0              1           3848&#xA;Python                           35            376            122           2558&#xA;Windows Module Definition        50             31             30           2363&#xA;Bourne Again Shell               28            307            386           1614&#xA;DOS Batch                        26            118            112            792&#xA;CSS                               3             53            162            462&#xA;Prolog                            1              9             40            448&#xA;RobotFramework                    1              0              0            441&#xA;JSON                              5              0              0            359&#xA;Windows Resource File            13             65             89            312&#xA;Assembly                          5             87            322            306&#xA;dtrace                            9             59            179            306&#xA;XSLT                              5             76             55            294&#xA;WiX source                        1             18             10            155&#xA;Visual Basic                      6              0              0             88&#xA;D                                 2             18             25             70&#xA;YAML                              2              4              4             65&#xA;sed                               3              1              7             31&#xA;PHP                               1             11              2             24&#xA;SKILL                             1              8             15             16&#xA;Lisp                              1              1              1             16&#xA;Windows Message File              2              2              8             11&#xA;diff                              1              1              4              4&#xA;--------------------------------------------------------------------------------&#xA;SUM:                           8882         562671         867744        3929170&#xA;--------------------------------------------------------------------------------&#xA;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cat databases.file&#xA;----------------------------------------------------------------------------------&#xA;File                            files          blank        comment           code&#xA;----------------------------------------------------------------------------------&#xA;mariadb-10.1.txt                 5014         372484         512110        2127699&#xA;postgresql-9.4.4.txt             3864         178917         295080        1698471&#xA;sqlite-3081101.txt                  4          11270          60554         103000&#xA;----------------------------------------------------------------------------------&#xA;SUM:                             8882         562671         867744        3929170&#xA;----------------------------------------------------------------------------------&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Report files themselves can be summed together. Say you also manage development of Perl and Python and you want to keep track of those line counts separately from your database projects. First create reports for Perl and Python separately:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;cloc --out perl-5.22.0.txt   perl-5.22.0.tar.gz&#xA;cloc --out python-2.7.10.txt Python-2.7.10.tar.xz&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;then sum these together with&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cloc --sum-reports --out script_lang perl-5.22.0.txt python-2.7.10.txt&#xA;Wrote script_lang.lang&#xA;Wrote script_lang.file&#xA;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cat script_lang.lang&#xA;https://github.com/AlDanial/cloc v 1.65&#xA;-------------------------------------------------------------------------------&#xA;Language                     files          blank        comment           code&#xA;-------------------------------------------------------------------------------&#xA;Perl                          2892         136396         184362         536445&#xA;C                              680          75566          71211         531203&#xA;Python                        2141          89642         109524         434015&#xA;C/C++ Header                   408          16433          26938         214800&#xA;Bourne Shell                   154          11088          14496          87759&#xA;MSBuild script                  77              0              3          38910&#xA;m4                              20           1604            191          15559&#xA;Assembly                        51           3775           6794          12298&#xA;Pascal                           8            458           1603           8592&#xA;make                            16            897            828           4939&#xA;XML                             37            198              2           2484&#xA;HTML                            14            393             11           2344&#xA;C++                             12            338            295           2161&#xA;Windows Module Definition        9            171            187           2081&#xA;YAML                            49             20             15           2078&#xA;Prolog                          12            438              2           1146&#xA;JSON                            14              1              0           1037&#xA;yacc                             1             85             76            998&#xA;DOS Batch                       44            199            148            895&#xA;Objective-C                      7             98             61            635&#xA;Expect                           6            104            161            565&#xA;Windows Message File             1            102             11            489&#xA;CSS                              1             98             19            328&#xA;Windows Resource File            7             55             56            292&#xA;Javascript                       3             31             49            229&#xA;vim script                       1             36              7            106&#xA;diff                             1             17             87            105&#xA;NAnt script                      2              1              0             30&#xA;IDL                              1              0              0             24&#xA;Visual Basic                     2              1              1             12&#xA;D                                1              5              7              8&#xA;Lisp                             2              0              3              4&#xA;-------------------------------------------------------------------------------&#xA;SUM:                          6674         338250         417148        1902571&#xA;-------------------------------------------------------------------------------&#xA;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cat script_lang.file&#xA;-------------------------------------------------------------------------------&#xA;File                         files          blank        comment           code&#xA;-------------------------------------------------------------------------------&#xA;python-2.7.10.txt             3240         161276         173214         998697&#xA;perl-5.22.0.txt               3434         176974         243934         903874&#xA;-------------------------------------------------------------------------------&#xA;SUM:                          6674         338250         417148        1902571&#xA;-------------------------------------------------------------------------------&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, combine the combination files:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cloc --sum-reports --report_file=everything databases.lang script_lang.lang&#xA;Wrote everything.lang&#xA;Wrote everything.file&#xA;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cat everything.lang&#xA;https://github.com/AlDanial/cloc v 1.65&#xA;---------------------------------------------------------------------------------&#xA;Language                       files          blank        comment           code&#xA;---------------------------------------------------------------------------------&#xA;C                               2674         288356         442197        2084194&#xA;C++                             1625         225676         290372         985187&#xA;HTML                            1324           4313             17         804824&#xA;Perl                            3120         148440         193975         581463&#xA;C/C++ Header                    2404          77221         180633         482754&#xA;Python                          2176          90018         109646         436573&#xA;Bourne Shell                     451          23959          27746         166872&#xA;SQL                              433          13706           9122          55331&#xA;Pascal                           115           5365           6840          41133&#xA;MSBuild script                    77              0              3          38910&#xA;m4                                62           3421            575          31416&#xA;yacc                              11           3400           2809          30299&#xA;Javascript                         8           3340           3068          15769&#xA;make                             355           3146           2742          12684&#xA;Assembly                          56           3862           7116          12604&#xA;CMake                            190           1919           4097          12206&#xA;XML                               72            846             58           7694&#xA;lex                               13           1186           1797           5276&#xA;Ruby                              59            619            184           4998&#xA;Windows Module Definition         59            202            217           4444&#xA;Puppet                            10              0              1           3848&#xA;YAML                              51             24             19           2143&#xA;DOS Batch                         70            317            260           1687&#xA;Bourne Again Shell                28            307            386           1614&#xA;Prolog                            13            447             42           1594&#xA;JSON                              19              1              0           1396&#xA;CSS                                4            151            181            790&#xA;Objective-C                        7             98             61            635&#xA;Windows Resource File             20            120            145            604&#xA;Expect                             6            104            161            565&#xA;Windows Message File               3            104             19            500&#xA;RobotFramework                     1              0              0            441&#xA;dtrace                             9             59            179            306&#xA;XSLT                               5             76             55            294&#xA;WiX source                         1             18             10            155&#xA;diff                               2             18             91            109&#xA;vim script                         1             36              7            106&#xA;Visual Basic                       8              1              1            100&#xA;D                                  3             23             32             78&#xA;sed                                3              1              7             31&#xA;NAnt script                        2              1              0             30&#xA;IDL                                1              0              0             24&#xA;PHP                                1             11              2             24&#xA;Lisp                               3              1              4             20&#xA;SKILL                              1              8             15             16&#xA;---------------------------------------------------------------------------------&#xA;SUM:                           15556         900921        1284892        5831741&#xA;---------------------------------------------------------------------------------&#xA;&#xA;&lt;i&gt;Unix&amp;gt;&lt;/i&gt; cat everything.file&#xA;-------------------------------------------------------------------------------&#xA;File                         files          blank        comment           code&#xA;-------------------------------------------------------------------------------&#xA;databases.lang                8882         562671         867744        3929170&#xA;script_lang.lang              6674         338250         417148        1902571&#xA;-------------------------------------------------------------------------------&#xA;SUM:                         15556         900921        1284892        5831741&#xA;-------------------------------------------------------------------------------&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;One limitation of the &lt;code&gt;--sum-reports&lt;/code&gt; feature is that the individual counts must be saved in the plain text format. Counts saved as XML, JSON, YAML, or SQL will produce errors if used in a summation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;sql&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;SQL ▲&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Cloc can write results in the form of SQL table create and insert statements for use with relational database programs such as SQLite, MySQL, PostgreSQL, Oracle, or Microsoft SQL. Once the code count information is in a database, the information can be interrogated and displayed in interesting ways.&lt;/p&gt; &#xA;&lt;p&gt;A database created from cloc SQL output has two tables, &lt;strong&gt;metadata&lt;/strong&gt; and &lt;strong&gt;t&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;p&gt;Table &lt;strong&gt;metadata&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Field&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;timestamp&lt;/td&gt; &#xA;   &lt;td&gt;text&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;project&lt;/td&gt; &#xA;   &lt;td&gt;text&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;elapsed_s&lt;/td&gt; &#xA;   &lt;td&gt;text&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Table &lt;strong&gt;t&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Field&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;project&lt;/td&gt; &#xA;   &lt;td&gt;text&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;language&lt;/td&gt; &#xA;   &lt;td&gt;text&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;file&lt;/td&gt; &#xA;   &lt;td&gt;text&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nBlank&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nComment&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nCode&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nScaled&lt;/td&gt; &#xA;   &lt;td&gt;real&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The &lt;strong&gt;metadata&lt;/strong&gt; table contains information about when the cloc run was made. The &lt;code&gt;--sql-append&lt;/code&gt; switch allows one to combine many runs in a single database; each run adds a row to the metadata table. The code count information resides in table &lt;strong&gt;t&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s repeat the code count examples of Perl, Python, SQLite, MySQL and PostgreSQL tarballs shown in the &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#combine_reports&#34;&gt;Combine Reports&lt;/a&gt; example above, this time using the SQL output options and the &lt;a href=&#34;http://www.sqlite.org/&#34;&gt;SQLite&lt;/a&gt; database engine.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;--sql&lt;/code&gt; switch tells cloc to generate output in the form of SQL table &lt;code&gt;create&lt;/code&gt; and &lt;code&gt;insert&lt;/code&gt; commands. The switch takes an argument of a file name to write these SQL statements into, or, if the argument is 1 (numeric one), streams output to STDOUT. Since the SQLite command line program, &lt;code&gt;sqlite3&lt;/code&gt;, can read commands from STDIN, we can dispense with storing SQL statements to a file and use &lt;code&gt;--sql 1&lt;/code&gt; to pipe data directly into the SQLite executable:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;cloc --sql 1 --sql-project mariadb mariadb-server-10.1.zip | sqlite3 code.db&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;--sql-project mariadb&lt;/code&gt; part is optional; there&#39;s no need to specify a project name when working with just one code base. However, since we&#39;ll be adding code counts from four other tarballs, we&#39;ll only be able to identify data by input source if we supply a project name for each run.&lt;/p&gt; &#xA;&lt;p&gt;Now that we have a database we will need to pass in the &lt;code&gt;--sql-append&lt;/code&gt; switch to tell cloc not to wipe out this database but instead add more data:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;cloc --sql 1 --sql-project postgresql --sql-append postgresql-9.4.4.tar.bz2        | sqlite3 code.db&#xA;cloc --sql 1 --sql-project sqlite     --sql-append sqlite-amalgamation-3081101.zip | sqlite3 code.db&#xA;cloc --sql 1 --sql-project python     --sql-append Python-2.7.10.tar.xz            | sqlite3 code.db&#xA;cloc --sql 1 --sql-project perl       --sql-append perl-5.22.0.tar.gz              | sqlite3 code.db&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Now the fun begins--we have a database, &lt;code&gt;code.db&lt;/code&gt;, with lots of information about the five projects and can query it for all manner of interesting facts.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Which is the longest file over all projects?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; sqlite3 code.db &#39;select project,file,nBlank+nComment+nCode as nL from t&#xA;                                 where nL = (select max(nBlank+nComment+nCode) from t)&#39;&#xA;&#xA;sqlite|sqlite-amalgamation-3081101/sqlite3.c|161623&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;sqlite3&lt;/code&gt;&#39;s default output format leaves a bit to be desired. We can add an option to the program&#39;s rc file, &lt;code&gt;~/.sqliterc&lt;/code&gt;, to show column headers:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;  .header on&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;One might be tempted to also include&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;  .mode column&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;in &lt;code&gt;~/.sqliterc&lt;/code&gt; but this causes problems when the output has more than one row since the widths of entries in the first row govern the maximum width for all subsequent rows. Often this leads to truncated output--not at all desirable. One option is to write a custom SQLite output formatter such as &lt;code&gt;sqlite_formatter&lt;/code&gt;, included with cloc.&lt;/p&gt; &#xA;&lt;p&gt;To use it, simply pass &lt;code&gt;sqlite3&lt;/code&gt;&#39;s STDOUT into &lt;code&gt;sqlite_formatter&lt;/code&gt; via a pipe:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; sqlite3 code.db &#39;select project,file,nBlank+nComment+nCode as nL from t&#xA;                         where nL = (select max(nBlank+nComment+nCode) from t)&#39; | ./sqlite_formatter&#xA;  &lt;font color=&#34;darkgreen&#34;&gt;&#xA;  -- Loading resources from ~/.sqliterc&#xA;  Project File                                  nL&#xA;  _______ _____________________________________ ______&#xA;  sqlite  sqlite-amalgamation-3081101/sqlite3.c 161623&#xA;  &lt;/font&gt;&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;If the &#34;Project File&#34; line doesn&#39;t appear, add &lt;code&gt;.header on&lt;/code&gt; to your &lt;code&gt;~/.sqliterc&lt;/code&gt; file as explained above.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;What is the longest file over all projects?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; sqlite3 code.db &#39;select project,file,nBlank+nComment+nCode as nL from t&#xA;                         where nL = (select max(nBlank+nComment+nCode) from t)&#39; | sqlite_formatter&#xA;&#xA;Project File                                  nL&#xA;_______ _____________________________________ ______&#xA;sqlite  sqlite-amalgamation-3081101/sqlite3.c 161623&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;What is the longest file in each project?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; sqlite3 code.db &#39;select project,file,max(nBlank+nComment+nCode) as nL from t&#xA;                          group by project order by nL;&#39; | sqlite_formatter&#xA;&#xA;Project    File                                                             nL&#xA;__________ ________________________________________________________________ ______&#xA;python     Python-2.7.10/Mac/Modules/qt/_Qtmodule.c                          28091&#xA;postgresql postgresql-9.4.4/src/interfaces/ecpg/preproc/preproc.c            54623&#xA;mariadb    server-10.1/storage/mroonga/vendor/groonga/lib/nfkc.c             80246&#xA;perl       perl-5.22.0/cpan/Locale-Codes/lib/Locale/Codes/Language_Codes.pm 100747&#xA;sqlite     sqlite-amalgamation-3081101/sqlite3.c                            161623&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Which files in each project have the most code lines?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; sqlite3 code.db &#39;select project,file,max(nCode) as nL from t&#xA;                         group by project order by nL desc;&#39; | sqlite_formatter&#xA;&#xA;Project    File                                                             nL&#xA;__________ ________________________________________________________________ ______&#xA;perl       perl-5.22.0/cpan/Locale-Codes/lib/Locale/Codes/Language_Codes.pm 100735&#xA;sqlite     sqlite-amalgamation-3081101/sqlite3.c                             97469&#xA;mariadb    server-10.1/storage/mroonga/vendor/groonga/lib/nfkc.c             80221&#xA;postgresql postgresql-9.4.4/src/interfaces/ecpg/preproc/preproc.c            45297&#xA;python     Python-2.7.10/Mac/Modules/qt/_Qtmodule.c                          26705&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Which C source files with more than 300 lines have a comment ratio below 1%?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; sqlite3 code.db &#39;select project, file, nCode, nComment,&#xA;                         (100.0*nComment)/(nComment+nCode) as comment_ratio from t&#xA;                         where language=&#34;C&#34; and nCode &amp;gt; 300 and&#xA;                         comment_ratio &amp;lt; 1 order by comment_ratio;&#39; | sqlite_formatter&#xA;&#xA;Project    File                                                                                            nCode nComment comment_ratio&#xA;__________ _______________________________________________________________________________________________ _____ ________ __________________&#xA;mariadb    server-10.1/storage/mroonga/vendor/groonga/lib/nfkc.c                                           80221       14 0.0174487443135789&#xA;python     Python-2.7.10/Python/graminit.c                                                                  2175        1 0.0459558823529412&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_turkish.c                            2095        1 0.0477099236641221&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_french.c                             1211        1 0.0825082508250825&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_1_french.c                        1201        1 0.0831946755407654&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_hungarian.c                          1182        1 0.084530853761623&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_1_hungarian.c                     1178        1 0.0848176420695505&#xA;mariadb    server-10.1/strings/ctype-eucjpms.c                                                             67466       60 0.0888546633889169&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_english.c                            1072        1 0.0931966449207828&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_1_english.c                       1064        1 0.0938967136150235&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_spanish.c                            1053        1 0.094876660341556&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_1_spanish.c                       1049        1 0.0952380952380952&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_italian.c                            1031        1 0.0968992248062016&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_1_italian.c                       1023        1 0.09765625&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_portuguese.c                          981        1 0.10183299389002&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_1_portuguese.c                     975        1 0.102459016393443&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_romanian.c                            967        1 0.103305785123967&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_2_romanian.c                       961        1 0.103950103950104&#xA;mariadb    server-10.1/strings/ctype-ujis.c                                                                67177       79 0.117461639110265&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_finnish.c                             720        1 0.13869625520111&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_porter.c                              717        1 0.139275766016713&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_1_finnish.c                        714        1 0.13986013986014&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_1_porter.c                         711        1 0.140449438202247&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_KOI8_R_russian.c                            660        1 0.151285930408472&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_russian.c                             654        1 0.152671755725191&#xA;python     Python-2.7.10/Mac/Modules/qt/_Qtmodule.c                                                        26705       42 0.157026956294164&#xA;python     Python-2.7.10/Mac/Modules/icn/_Icnmodule.c                                                       1521        3 0.196850393700787&#xA;mariadb    server-10.1/strings/ctype-extra.c                                                                8282       18 0.216867469879518&#xA;postgresql postgresql-9.4.4/src/bin/psql/sql_help.c                                                         3576        8 0.223214285714286&#xA;mariadb    server-10.1/strings/ctype-sjis.c                                                                34006       86 0.252258594391646&#xA;python     Python-2.7.10/Python/Python-ast.c                                                                6554       17 0.258712524729874&#xA;mariadb    server-10.1/strings/ctype-cp932.c                                                               34609       92 0.265122042592432&#xA;perl       perl-5.22.0/keywords.c                                                                           2815        8 0.283386468296139&#xA;python     Python-2.7.10/Mac/Modules/menu/_Menumodule.c                                                     3263       10 0.305530094714329&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_dutch.c                               596        2 0.334448160535117&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_1_dutch.c                          586        2 0.340136054421769&#xA;mariadb    server-10.1/strings/ctype-gbk.c                                                                 10684       38 0.354411490393583&#xA;python     Python-2.7.10/Mac/Modules/qd/_Qdmodule.c                                                         6694       24 0.357249181303959&#xA;python     Python-2.7.10/Mac/Modules/win/_Winmodule.c                                                       3056       11 0.358656667753505&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_german.c                              476        2 0.418410041841004&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_1_german.c                         470        2 0.423728813559322&#xA;mariadb    server-10.1/strings/ctype-euc_kr.c                                                               9956       44 0.44&#xA;postgresql postgresql-9.4.4/src/backend/utils/fmgrtab.c                                                     4815       23 0.475403059115337&#xA;python     Python-2.7.10/Mac/Modules/ctl/_Ctlmodule.c                                                       5442       28 0.511882998171846&#xA;python     Python-2.7.10/Mac/Modules/ae/_AEmodule.c                                                         1347        7 0.51698670605613&#xA;python     Python-2.7.10/Mac/Modules/app/_Appmodule.c                                                       1712        9 0.52295177222545&#xA;mariadb    server-10.1/strings/ctype-gb2312.c                                                               6377       35 0.54585152838428&#xA;mariadb    server-10.1/storage/tokudb/ft-index/third_party/xz-4.999.9beta/src/liblzma/lzma/fastpos_table.c   516        3 0.578034682080925&#xA;python     Python-2.7.10/Mac/Modules/evt/_Evtmodule.c                                                        504        3 0.591715976331361&#xA;python     Python-2.7.10/Modules/expat/xmlrole.c                                                            1256        8 0.632911392405063&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_UTF_8_danish.c                              312        2 0.636942675159236&#xA;postgresql postgresql-9.4.4/src/backend/snowball/libstemmer/stem_ISO_8859_1_danish.c                         310        2 0.641025641025641&#xA;python     Python-2.7.10/Mac/Modules/res/_Resmodule.c                                                       1621       12 0.734843845682792&#xA;python     Python-2.7.10/Mac/Modules/drag/_Dragmodule.c                                                     1046        8 0.759013282732448&#xA;python     Python-2.7.10/Mac/Modules/list/_Listmodule.c                                                     1021        8 0.777453838678329&#xA;python     Python-2.7.10/Mac/Modules/te/_TEmodule.c                                                         1198       10 0.827814569536424&#xA;python     Python-2.7.10/Mac/Modules/cg/_CGmodule.c                                                         1190       10 0.833333333333333&#xA;python     Python-2.7.10/Modules/clmodule.c                                                                 2379       23 0.957535387177352&#xA;python     Python-2.7.10/Mac/Modules/folder/_Foldermodule.c                                                  306        3 0.970873786407767&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;What are the ten longest files (based on code lines) that have no comments at all? Exclude header, .html, and YAML files.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; sqlite3 code.db &#39;select project, file, nCode from t&#xA;                         where nComment = 0 and&#xA;                         language not in (&#34;C/C++ Header&#34;, &#34;YAML&#34;, &#34;HTML&#34;)&#xA;                         order by nCode desc limit 10;&#39; | sqlite_formatter&#xA;&#xA;Project File                                                                 nCode&#xA;_______ ____________________________________________________________________ _____&#xA;perl    perl-5.22.0/cpan/Unicode-Collate/Collate/Locale/ja.pl                 1938&#xA;python  Python-2.7.10/PCbuild/pythoncore.vcproj                               1889&#xA;python  Python-2.7.10/PC/VS8.0/pythoncore.vcproj                              1889&#xA;mariadb server-10.1/mysql-test/extra/binlog_tests/mysqlbinlog_row_engine.inc  1862&#xA;perl    perl-5.22.0/cpan/Unicode-Collate/Collate/Locale/zh_strk.pl            1589&#xA;perl    perl-5.22.0/cpan/Unicode-Collate/Collate/Locale/zh_zhu.pl             1563&#xA;mariadb server-10.1/storage/mroonga/vendor/groonga/configure.ac               1526&#xA;perl    perl-5.22.0/cpan/Unicode-Collate/Collate/Locale/zh_pin.pl             1505&#xA;mariadb server-10.1/mysql-test/suite/funcs_1/storedproc/storedproc_02.inc     1465&#xA;python  Python-2.7.10/PC/VS8.0/_bsddb.vcproj                                  1463&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;What are the most popular languages (in terms of lines of code) in each project?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;prompt&amp;gt; sqlite3 code.db &#39;select project, language, sum(nCode) as SumCode from t&#xA;                         group by project,language&#xA;                         order by project,SumCode desc;&#39; | sqlite_formatter&#xA;Project    Language                  SumCode&#xA;__________ _________________________ _______&#xA;mariadb    C++                        983026&#xA;mariadb    C                          715018&#xA;mariadb    C/C++ Header               209394&#xA;mariadb    Bourne Shell                61943&#xA;mariadb    Perl                        35562&#xA;mariadb    Pascal                      32541&#xA;mariadb    HTML                        16489&#xA;mariadb    Javascript                  15540&#xA;mariadb    m4                          14215&#xA;mariadb    CMake                       12206&#xA;mariadb    XML                          5210&#xA;mariadb    Ruby                         4998&#xA;mariadb    Puppet                       3848&#xA;mariadb    make                         3631&#xA;mariadb    SQL                          3405&#xA;mariadb    Python                       2545&#xA;mariadb    Bourne Again Shell           1604&#xA;mariadb    Windows Module Definition    1211&#xA;mariadb    lex                           991&#xA;mariadb    yacc                          810&#xA;mariadb    DOS Batch                     700&#xA;mariadb    Prolog                        448&#xA;mariadb    RobotFramework                441&#xA;mariadb    CSS                           393&#xA;mariadb    JSON                          359&#xA;mariadb    dtrace                        306&#xA;mariadb    Windows Resource File         250&#xA;mariadb    Assembly                      237&#xA;mariadb    WiX source                    155&#xA;mariadb    Visual Basic                   88&#xA;mariadb    YAML                           65&#xA;mariadb    PHP                            24&#xA;mariadb    SKILL                          16&#xA;mariadb    sed                            16&#xA;mariadb    Windows Message File            6&#xA;mariadb    D                               4&#xA;mariadb    diff                            4&#xA;perl       Perl                       536445&#xA;perl       C                          155648&#xA;perl       C/C++ Header               147858&#xA;perl       Bourne Shell                42668&#xA;perl       Pascal                       8592&#xA;perl       XML                          2410&#xA;perl       YAML                         2078&#xA;perl       C++                          2033&#xA;perl       make                         1986&#xA;perl       Prolog                       1146&#xA;perl       JSON                         1037&#xA;perl       yacc                          998&#xA;perl       Windows Message File          489&#xA;perl       DOS Batch                     389&#xA;perl       Windows Resource File          85&#xA;perl       D                               8&#xA;perl       Lisp                            4&#xA;postgresql HTML                       785991&#xA;postgresql C                          736519&#xA;postgresql C/C++ Header                57014&#xA;postgresql SQL                         51926&#xA;postgresql yacc                        28491&#xA;postgresql Bourne Shell                17170&#xA;postgresql Perl                         9456&#xA;postgresql lex                          4285&#xA;postgresql make                         4114&#xA;postgresql m4                           1642&#xA;postgresql Windows Module Definition    1152&#xA;postgresql XSLT                          294&#xA;postgresql DOS Batch                      92&#xA;postgresql Assembly                       69&#xA;postgresql CSS                            69&#xA;postgresql D                              66&#xA;postgresql Windows Resource File          62&#xA;postgresql Lisp                           16&#xA;postgresql sed                            15&#xA;postgresql Python                         13&#xA;postgresql Bourne Again Shell             10&#xA;postgresql Windows Message File            5&#xA;python     Python                     434015&#xA;python     C                          375555&#xA;python     C/C++ Header                66942&#xA;python     Bourne Shell                45091&#xA;python     MSBuild script              38910&#xA;python     m4                          15559&#xA;python     Assembly                    12298&#xA;python     make                         2953&#xA;python     HTML                         2344&#xA;python     Windows Module Definition    2081&#xA;python     Objective-C                   635&#xA;python     Expect                        565&#xA;python     DOS Batch                     506&#xA;python     CSS                           328&#xA;python     Javascript                    229&#xA;python     Windows Resource File         207&#xA;python     C++                           128&#xA;python     vim script                    106&#xA;python     diff                          105&#xA;python     XML                            74&#xA;python     NAnt script                    30&#xA;python     Prolog                         24&#xA;python     Visual Basic                   12&#xA;sqlite     C                          101454&#xA;sqlite     C/C++ Header                 1546&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;custom_column_output&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Custom Column Output ▲&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Cloc&#39;s default output is a text table with five columns: language, file count, number of blank lines, number of comment lines and number of code lines. The switches &lt;code&gt;--by-file&lt;/code&gt;, &lt;code&gt;--3&lt;/code&gt;, and &lt;code&gt;--by-percent&lt;/code&gt; generate additional information but sometimes even those are insufficient.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;--sql&lt;/code&gt; option described in the previous section offers the ability to create custom output. This section has a pair of examples that show how to create custom columns. The first example includes an extra column, &lt;strong&gt;Total&lt;/strong&gt;, which is the sum of the numbers of blank, comment, and code lines. The second shows how to include the language name when running with &lt;code&gt;--by-file&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example 1: Add a &#34;Totals&#34; column.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The first step is to run cloc and save the output to a relational database, SQLite in this case:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;cloc --sql 1 --sql-project x yaml-cpp-yaml-cpp-0.5.3.tar.gz | sqlite3 counts.db&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;(the tar file comes from the &lt;a href=&#34;https://github.com/jbeder/yaml-cpp&#34;&gt;YAML-C++&lt;/a&gt; project).&lt;/p&gt; &#xA;&lt;p&gt;Second, we craft an SQL query that returns the regular cloc output plus an extra column for totals, then save the SQL statement to a file, &lt;code&gt;query_with_totals.sql&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;-- file query_with_totals.sql&#xA;select Language, count(File)   as files                       ,&#xA;                 sum(nBlank)   as blank                       ,&#xA;                 sum(nComment) as comment                     ,&#xA;                 sum(nCode)    as code                        ,&#xA;                 sum(nBlank)+sum(nComment)+sum(nCode) as Total&#xA;    from t group by Language order by code desc;&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Third, we run this query through SQLite using the &lt;code&gt;counts.db&lt;/code&gt; database. We&#39;ll include the &lt;code&gt;-header&lt;/code&gt; switch so that SQLite prints the column names:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;&amp;gt; cat query_with_totals.sql | sqlite3 -header counts.db&#xA;Language|files|blank|comment|code|Total&#xA;C++|141|12786|17359|60378|90523&#xA;C/C++ Header|110|8566|17420|51502|77488&#xA;Bourne Shell|10|6351|6779|38264|51394&#xA;m4|11|2037|260|17980|20277&#xA;Python|30|1613|2486|4602|8701&#xA;MSBuild script|11|0|0|1711|1711&#xA;CMake|7|155|285|606|1046&#xA;make|5|127|173|464|764&#xA;Markdown|2|30|0|39|69&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;The extra column for &lt;strong&gt;Total&lt;/strong&gt; is there but the format is unappealing. Running the output through &lt;code&gt;sqlite_formatter&lt;/code&gt; yields the desired result:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;&amp;gt; cat query_with_totals.sql | sqlite3 -header counts.db | sqlite_formatter&#xA;Language       files blank comment code  Total&#xA;______________ _____ _____ _______ _____ _____&#xA;C++              141 12786   17359 60378 90523&#xA;C/C++ Header     110  8566   17420 51502 77488&#xA;Bourne Shell      10  6351    6779 38264 51394&#xA;m4                11  2037     260 17980 20277&#xA;Python            30  1613    2486  4602  8701&#xA;MSBuild script    11     0       0  1711  1711&#xA;CMake              7   155     285   606  1046&#xA;make               5   127     173   464   764&#xA;Markdown           2    30       0    39    69&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;The next section, &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#wrapping-cloc-in-other-scripts-&#34;&gt;Wrapping cloc in other scripts&lt;/a&gt;, shows one way these commands can be combined into a new utility program.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example 2: Include a column for &#34;Language&#34; when running with &lt;code&gt;--by-file&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Output from &lt;code&gt;--by-file&lt;/code&gt; omits each file&#39;s language to save screen real estate; file paths for large projects can be long and including an extra 20 or so characters for a Language column can be excessive.&lt;/p&gt; &#xA;&lt;p&gt;As an example, here are the first few lines of output using the same code base as in Example 1:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;&amp;gt; cloc --by-file yaml-cpp-yaml-cpp-0.5.3.tar.gz&#xA;github.com/AlDanial/cloc v 1.81  T=1.14 s (287.9 files/s, 221854.9 lines/s)&#xA;--------------------------------------------------------------------------------------------------------------------------------------------&#xA;File                                                                                                     blank        comment           code&#xA;--------------------------------------------------------------------------------------------------------------------------------------------&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/configure                                                        2580           2264          13691&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/configure                                                  2541           2235          13446&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/fused-src/gtest/gtest.h                                    1972           4681          13408&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/fused-src/gmock/gmock.h                                          1585           3397           9216&#xA;yaml-cpp-yaml-cpp-0.5.3/test/integration/gen_emitter_test.cpp                                              999              0           8760&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/aclocal.m4                                                        987            100           8712&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/m4/libtool.m4                                               760             65           7176&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/build-aux/ltmain.sh                                         959           1533           7169&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/fused-src/gmock-gtest-all.cc                                     1514           3539           6390&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/fused-src/gtest/gtest-all.cc                               1312           2896           5384&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/test/gtest_unittest.cc                                     1226           1091           5098&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/include/gtest/internal/gtest-param-util-generated.h         349            235           4559&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;The absence of language identification for each file is a bit disappointing, but this can be remedied with a custom column solution.&lt;/p&gt; &#xA;&lt;p&gt;The first step, creating a database, matches that from Example 1 so we&#39;ll go straight to the second step of creating the desired SQL query. We&#39;ll store this one in the file &lt;code&gt;by_file_with_language.sql&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;-- file by_file_with_language.sql&#xA;select File, Language, nBlank   as blank  ,&#xA;                       nComment as comment,&#xA;                       nCode    as code&#xA;    from t order by code desc;&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Our desired extra column appears when we pass this custom SQL query through our database:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;&amp;gt; cat by_file_with_language.sql | sqlite3 -header counts.db | sqlite_formatter&#xA;File                                                                                               Language       blank comment code&#xA;__________________________________________________________________________________________________ ______________ _____ _______ _____&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/configure                                                 Bourne Shell    2580    2264 13691&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/configure                                           Bourne Shell    2541    2235 13446&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/fused-src/gtest/gtest.h                             C/C++ Header    1972    4681 13408&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/fused-src/gmock/gmock.h                                   C/C++ Header    1585    3397  9216&#xA;yaml-cpp-yaml-cpp-0.5.3/test/integration/gen_emitter_test.cpp                                      C++              999       0  8760&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/aclocal.m4                                                m4               987     100  8712&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/m4/libtool.m4                                       m4               760      65  7176&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/build-aux/ltmain.sh                                 Bourne Shell     959    1533  7169&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/fused-src/gmock-gtest-all.cc                              C++             1514    3539  6390&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/fused-src/gtest/gtest-all.cc                        C++             1312    2896  5384&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/test/gtest_unittest.cc                              C++             1226    1091  5098&#xA;yaml-cpp-yaml-cpp-0.5.3/test/gmock-1.7.0/gtest/include/gtest/internal/gtest-param-util-generated.h C/C++ Header     349     235  4559&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;wrapping_cloc_in_other_scripts&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt; * &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#wrapping-cloc-in-other-scripts-&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Wrapping cloc in other scripts ▲&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;More complex code counting solutions are possible by wrapping cloc in scripts or programs. The &#34;total lines&#34; column from example 1 of &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#custom-column-output-&#34;&gt;Custom Column Output&lt;/a&gt; could be simplified to a single command with this shell script (on Linux):&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;#!/bin/sh&#xA;#&#xA;# These commands must be in the user&#39;s $PATH:&#xA;#   cloc&#xA;#   sqlite3&#xA;#   sqlite_formatter&#xA;#&#xA;if test $# -eq 0 ; then&#xA;    echo &#34;Usage: $0  [cloc arguments]&#34;&#xA;    echo &#34;       Run cloc to count lines of code with an additional&#34;&#xA;    echo &#34;       output column for total lines (code+comment+blank).&#34;&#xA;    exit&#xA;fi&#xA;DBFILE=`tempfile`&#xA;cloc --sql 1 --sql-project x $@ | sqlite3 ${DBFILE}&#xA;SQL=&#34;select Language, count(File)   as files                       ,&#xA;                      sum(nBlank)   as blank                       ,&#xA;                      sum(nComment) as comment                     ,&#xA;                      sum(nCode)    as code                        ,&#xA;                      sum(nBlank)+sum(nComment)+sum(nCode) as Total&#xA;         from t group by Language order by code desc;&#xA;&#34;&#xA;echo ${SQL} | sqlite3 -header ${DBFILE} | sqlite_formatter&#xA;rm ${DBFILE}&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Saving the lines above to &lt;code&gt;total_columns.sh&lt;/code&gt; and making it executable (&lt;code&gt;chmod +x total_columns.sh&lt;/code&gt;) would let us do&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;./total_columns.sh yaml-cpp-yaml-cpp-0.5.3.tar.gz&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;to directly get&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;Language       files blank comment code  Total&#xA;______________ _____ _____ _______ _____ _____&#xA;C++              141 12786   17359 60378 90523&#xA;C/C++ Header     110  8566   17420 51502 77488&#xA;Bourne Shell      10  6351    6779 38264 51394&#xA;m4                11  2037     260 17980 20277&#xA;Python            30  1613    2486  4602  8701&#xA;MSBuild script    11     0       0  1711  1711&#xA;CMake              7   155     285   606  1046&#xA;make               5   127     173   464   764&#xA;Markdown           2    30       0    39    69&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Other examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Count code from a specific branch of a web-hosted git repository and send the results as a .csv email attachment: &lt;a href=&#34;https://github.com/dannyloweatx/checkmarx&#34;&gt;https://github.com/dannyloweatx/checkmarx&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;git_and_UTF8_pathnames&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;git and UTF8 pathnames ▲&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;cloc&#39;s &lt;code&gt;--git&lt;/code&gt; option may fail if you work with directory or file names with UTF-8 characters (for example, see &lt;a href=&#34;https://github.com/AlDanial/cloc/issues/457&#34;&gt;issue 457&lt;/a&gt;). The solution, &lt;a href=&#34;https://stackoverflow.com/questions/22827239/how-to-make-git-properly-display-utf-8-encoded-pathnames-in-the-console-window&#34;&gt;https://stackoverflow.com/questions/22827239/how-to-make-git-properly-display-utf-8-encoded-pathnames-in-the-console-window&lt;/a&gt;, is to apply this git configuration command:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;git config --global core.quotepath off&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Your console&#39;s font will need to be capable of displaying Unicode characters.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;scale_factors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Third Generation Language Scale Factors ▲&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;cloc versions before 1.50 by default computed, for the provided inputs, a rough estimate of how many lines of code would be needed to write the same code in a hypothetical third-generation computer language. To produce this output one must now use the &lt;code&gt;--3&lt;/code&gt; switch.&lt;/p&gt; &#xA;&lt;p&gt;Scale factors were derived from the 2006 version of language gearing ratios listed at Mayes Consulting web site, &lt;a href=&#34;http://softwareestimator.com/IndustryData2.htm&#34;&gt;http://softwareestimator.com/IndustryData2.htm&lt;/a&gt;, using this equation:&lt;/p&gt; &#xA;&lt;p&gt;cloc scale factor for language X = 3rd generation default gearing ratio / language X gearing ratio&lt;/p&gt; &#xA;&lt;p&gt;For example, cloc 3rd generation scale factor for DOS Batch = 80 / 128 = 0.625.&lt;/p&gt; &#xA;&lt;p&gt;The biggest flaw with this approach is that gearing ratios are defined for logical lines of source code not physical lines (which cloc counts). The values in cloc&#39;s &#39;scale&#39; and &#39;3rd gen. equiv.&#39; columns should be taken with a large grain of salt.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;options_txt&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;options.txt configuration file ▲&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you find yourself using the same command line switches every time you invoke cloc, you can save some typing by adding those switches to the &lt;code&gt;options.txt&lt;/code&gt; runtime configuration file. cloc will look for this file in the following default locations:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;# Linux, NetBSD, FreeBSD, macOS:&#xA;/home/USERNAME/.config/cloc/options.txt&#xA;&#xA;# Windows&#xA;C:\Users\USERNAME\AppData\cloc\options.txt&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Place each switch and arguments, if any, on a line by itself. Lines prefixed with &lt;code&gt;#&lt;/code&gt; symbol are ignored as comments and blank lines are skipped. Leading hyphens on the switches are optional. Here&#39;s a sample file:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;# options.txt&#xA;--vcs git&#xA;v      # verbose level 1&#xA;exclude-ext svg,html&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;The path to the &lt;code&gt;options.txt&lt;/code&gt; file can also be specified with the &lt;code&gt;--config FILE&lt;/code&gt; switch.&lt;/p&gt; &#xA;&lt;p&gt;Finally, if cloc finds an &lt;code&gt;options.txt&lt;/code&gt; file in the same directory as files given by any of these switches (in the listed priority), it will use that configuration file from that location:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;--list-file&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--exclude-list-file&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--read-lang-def&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--force-lang-def&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--diff-list-file&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Run with &lt;code&gt;--verbose&lt;/code&gt; to have cloc tell you which, if any, &lt;code&gt;options.txt&lt;/code&gt; file it uses.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;complex_regex_recursion&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Complex regular subexpression recursion limit ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;cloc relies on the Regexp::Common module&#39;s regular expressions to remove comments from source code. If comments are malformed, for example the &lt;code&gt;/*&lt;/code&gt; start comment marker appears in a C program without a corresponding &lt;code&gt;*/&lt;/code&gt; marker, the regular expression engine could enter a recursive loop, eventually triggering the warning &lt;code&gt;Complex regular subexpression recursion limit&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The most common cause for this warning is the existence of comment markers in string literals. While language compilers and interpreters are smart enough to recognize that &lt;code&gt;&#34;/*&#34;&lt;/code&gt; (for example) is a string and not a comment, cloc is fooled. File path globs, as in this line of JavaScript&lt;/p&gt; &#xA;&lt;pre&gt;var paths = globArray(&#34;**/*.js&#34;, {cwd: srcPath});&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;are frequent culprits.&lt;/p&gt; &#xA;&lt;p&gt;In an attempt to overcome this problem, a different algorithm which removes comment markers in strings can be enabled with the &lt;code&gt;--strip-str-comments&lt;/code&gt; switch. Doing so, however, has drawbacks: cloc will run more slowly and the output of &lt;code&gt;--strip-comments&lt;/code&gt; will contain strings that no longer match the input source.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;Limitations&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Limitations ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Identifying comments within source code is trickier than one might expect. Many languages would need a complete parser to be counted correctly. cloc does not attempt to parse any of the languages it aims to count and therefore is an imperfect tool. The following are known problems:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; Lines containing both source code and comments are counted as lines of code. &lt;/li&gt; &#xA; &lt;li&gt; Comment markers within strings or &lt;a href=&#34;http://www.faqs.org/docs/abs/HTML/here-docs.html&#34;&gt;here-documents&lt;/a&gt; are treated as actual comment markers and not string literals. For example the following lines of C code &lt;pre&gt;printf(&#34; /* &#34;);&#xA;for (i = 0; i &amp;lt; 100; i++) {&#xA;    a += i;&#xA;}&#xA;printf(&#34; */ &#34;);&#xA;&lt;/pre&gt; look to cloc like this: &lt;pre&gt;printf(&#34; xxxxxxx&#xA;xxxxxxx&#xA;xxxxxxx&#xA;xxxxxxx&#xA;xxxxxxx     &#34;);&#xA;&lt;/pre&gt; where &lt;tt&gt;xxxxxxx&lt;/tt&gt; represents cloc&#39;s view of commented text. Therefore cloc counts the five lines as two lines of C code and three lines of comments (lines with both code and comment are counted as code). &lt;p&gt;If you suspect your code has such strings, use the switch &lt;code&gt;--strip-str-comments&lt;/code&gt; to switch to the algorithm which removes embedded comment markers. Its use will render the five lines above as&lt;/p&gt; &lt;pre&gt;printf(&#34;  &#34;);&#xA;for (i = 0; i &amp;lt; 100; i++) {&#xA;    a += i;&#xA;}&#xA;printf(&#34;  &#34;);&#xA;&lt;/pre&gt; &lt;p&gt;and therefore return a count of five lines of code. See the &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#complex-regular-subexpression-recursion-limit-&#34;&gt;previous section&lt;/a&gt; on drawbacks to using &lt;code&gt;--strip-str-comments&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; Embedded languages are not recognized. For example, an HTML file containing JavaScript will be counted entirely as HTML. &lt;/li&gt; &#xA; &lt;li&gt; Python docstrings can serve several purposes. They may contain documentation, comment out blocks of code, or they can be regular strings (when they appear on the right hand side of an assignment or as a function argument). cloc is unable to infer the meaning of docstrings by context; by default cloc treats all docstrings as comments. The switch &lt;tt&gt;--docstring-as-code&lt;/tt&gt; treats all docstrings as code. &lt;/li&gt; &#xA; &lt;li&gt; Language definition files read with &lt;tt&gt;--read-lang-def&lt;/tt&gt; or &lt;tt&gt;--force-lang-def&lt;/tt&gt; must be plain ASCII text files. &lt;/li&gt; &#xA; &lt;li&gt; cloc treats compiler pragma&#39;s, for example &lt;tt&gt;#if&lt;/tt&gt; / &lt;tt&gt;#endif&lt;/tt&gt;, as code even if these are used to block lines of source from being compiled; the blocked lines still contribute to the code count. &lt;/li&gt; &#xA; &lt;li&gt; On Windows, cloc will fail with &lt;tt&gt;Can&#39;t cd to ... No such file or directory at &#xA;   &lt;embedded&gt;&#xA;    /File/Find.pm&#xA;   &lt;/embedded&gt;&lt;/tt&gt; if the code being scanned has file paths longer than 255 characters. A work-around is to run cloc from the Windows Subsystem for Linux (WSL). &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;AdditionalLanguages&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Requesting Support for Additional Languages ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;If cloc does not recognize a language you are interested in counting, create a &lt;a href=&#34;https://github.com/AlDanial/cloc/issues&#34;&gt;GitHub issue&lt;/a&gt; requesting support for your language. Include this information:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; File extensions associated with the language. If the language does not rely on file extensions and instead works with fixed file names or with `#!` style program invocations, explain what those are.&lt;/li&gt; &#xA; &lt;li&gt; A description of how comments are defined.&lt;/li&gt; &#xA; &lt;li&gt; Links to sample code.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;reporting_problems&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Reporting Problems ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;If you encounter a problem with cloc, first check to see if you&#39;re running with the latest version of the tool:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;  cloc --version&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;If the version is older than the most recent release at &lt;a href=&#34;https://github.com/AlDanial/cloc/releases&#34;&gt;https://github.com/AlDanial/cloc/releases&lt;/a&gt;, download the latest version and see if it solves your problem.&lt;/p&gt; &#xA;&lt;p&gt;If the problem happens with the latest release, submit a new issue at &lt;a href=&#34;https://github.com/AlDanial/cloc/issues&#34;&gt;https://github.com/AlDanial/cloc/issues&lt;/a&gt; &lt;em&gt;only&lt;/em&gt; if you can supply enough information for anyone reading the issue report to reproduce the problem. That means providing&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; the operating system you&#39;re running on&lt;/li&gt; &#xA; &lt;li&gt; the cloc command with all options&lt;/li&gt; &#xA; &lt;li&gt; the code you are counting (URL to a public git repo or zip file or tar file, et cetera)&lt;/li&gt; &#xA;&lt;/ol&gt; The last item is generally problematic. If the code base is proprietary or amounts to more than a few dozen kilobytes, you&#39;ll need to try to reconstruct similar inputs or demonstrate the problem with an existing public code base. &#xA;&lt;p&gt;Problem reports that cannot be reproduced will be ignored and eventually closed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;citation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Citation ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Please use the following bibtex entry to cite cloc in a publication:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;@software{adanial_cloc,&#xA;  author       = {Albert Danial},&#xA;  title        = {cloc: v1.92},&#xA;  month        = dec,&#xA;  year         = 2021,&#xA;  publisher    = {Zenodo},&#xA;  version      = {v1.92},&#xA;  doi          = {10.5281/zenodo.5760077},&#xA;  url          = {https://doi.org/10.5281/zenodo.5760077}&#xA;}&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;(Update the version number and corresponding year if this entry is outdated.)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;Acknowledgments&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Acknowledgments ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wolframroesler&#34;&gt;Wolfram Rösler&lt;/a&gt; provided most of the code examples in the test suite. These examples come from his &lt;a href=&#34;http://helloworldcollection.de/&#34;&gt;Hello World collection&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Ismet Kursunoglu found errors with the MUMPS counter and provided access to a computer with a large body of MUMPS code to test cloc.&lt;/p&gt; &#xA;&lt;p&gt;Tod Huggins gave helpful suggestions for the Visual Basic filters.&lt;/p&gt; &#xA;&lt;p&gt;Anton Demichev found a flaw with the JSP counter in cloc v0.76 and wrote the XML output generator for the &lt;code&gt;--xml&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;Reuben Thomas pointed out that ISO C99 allows &lt;code&gt;//&lt;/code&gt; as a comment marker, provided code for the &lt;code&gt;--no3&lt;/code&gt; and &lt;code&gt;--stdin-name&lt;/code&gt; options, counting the m4 language, and suggested several user-interface enhancements.&lt;/p&gt; &#xA;&lt;p&gt;Michael Bello provided code for the &lt;code&gt;--opt-match-f&lt;/code&gt;, &lt;code&gt;--opt-not-match-f&lt;/code&gt;, &lt;code&gt;--opt-match-d&lt;/code&gt;, and &lt;code&gt;--opt-not-match-d&lt;/code&gt; options.&lt;/p&gt; &#xA;&lt;p&gt;Mahboob Hussain inspired the &lt;code&gt;--original-dir&lt;/code&gt; and &lt;code&gt;--skip-uniqueness&lt;/code&gt; options, found a bug in the duplicate file detection logic and improved the JSP filter.&lt;/p&gt; &#xA;&lt;p&gt;Randy Sharo found and fixed an uninitialized variable bug for shell scripts having only one line.&lt;/p&gt; &#xA;&lt;p&gt;Steven Baker found and fixed a problem with the YAML output generator.&lt;/p&gt; &#xA;&lt;p&gt;Greg Toth provided code to improve blank line detection in COBOL.&lt;/p&gt; &#xA;&lt;p&gt;Joel Oliveira provided code to let &lt;code&gt;--exclude-list-file&lt;/code&gt; handle directory name exclusion.&lt;/p&gt; &#xA;&lt;p&gt;Blazej Kroll provided code to produce an XSLT file, &lt;code&gt;cloc-diff.xsl&lt;/code&gt;, when producing XML output for the &lt;code&gt;--diff&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;Denis Silakov enhanced the code which generates &lt;code&gt;cloc.xsl&lt;/code&gt; when using &lt;code&gt;--by-file&lt;/code&gt; and &lt;code&gt;--by-file-by-lang&lt;/code&gt; options, and provided an XSL file that works with &lt;code&gt;--diff&lt;/code&gt; output.&lt;/p&gt; &#xA;&lt;p&gt;Andy (&lt;a href=&#34;mailto:awalshe@sf.net&#34;&gt;awalshe@sf.net&lt;/a&gt;) provided code to fix several bugs: correct output of &lt;code&gt;--counted&lt;/code&gt; so that only files that are used in the code count appear and that results are shown by language rather than file name; allow &lt;code&gt;--diff&lt;/code&gt; output from multiple runs to be summed together with &lt;code&gt;--sum-reports&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Jari Aalto created the initial version of &lt;code&gt;cloc.1.pod&lt;/code&gt; and maintains the Debian package for cloc.&lt;/p&gt; &#xA;&lt;p&gt;Mikkel Christiansen (&lt;a href=&#34;mailto:mikkels@gmail.com&#34;&gt;mikkels@gmail.com&lt;/a&gt;) provided counter definitions for Clojure and ClojureScript.&lt;/p&gt; &#xA;&lt;p&gt;Vera Djuraskovic from &lt;a href=&#34;http://webhostinggeeks.com/&#34;&gt;Webhostinggeeks.com&lt;/a&gt; provided the &lt;a href=&#34;http://science.webhostinggeeks.com/cloc&#34;&gt;Serbo-Croatian&lt;/a&gt; translation.&lt;/p&gt; &#xA;&lt;p&gt;Gill Ajoft of &lt;a href=&#34;http://www.ajoft.com&#34;&gt;Ajoft Softwares&lt;/a&gt; provided the &lt;a href=&#34;http://www.ajoft.com/wpaper/aj-cloc.html&#34;&gt;Bulgarian&lt;/a&gt; translation.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;http://newknowledgez.com/&#34;&gt;Knowledge Team&lt;/a&gt; provided the &lt;a href=&#34;http://newknowledgez.com/cloc.html&#34;&gt;Slovakian&lt;/a&gt; translation.&lt;/p&gt; &#xA;&lt;p&gt;Erik Gooven Arellano Casillas provided an update to the MXML counter to recognize ActionScript comments.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://g14n.info&#34;&gt;Gianluca Casati&lt;/a&gt; created the &lt;a href=&#34;https://metacpan.org/pod/App::cloc&#34;&gt;cloc CPAN package&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- broken link&#xA;Mary Stefanova provided the&#xA;[Polish](http://www.trevister.com/blog/cloc.html)&#xA;translation. ---&gt; &#xA;&lt;p&gt;Ryan Lindeman implemented the &lt;code&gt;--by-percent&lt;/code&gt; feature.&lt;/p&gt; &#xA;&lt;p&gt;Kent C. Dodds, &lt;a href=&#34;https://twitter.com/kentcdodd&#34;&gt;@kentcdodds&lt;/a&gt;, created and maintains the npm package of cloc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://kudoybook.com&#34;&gt;Viktoria Parnak&lt;/a&gt; provided the &lt;a href=&#34;http://blog.kudoybook.com/cloc/&#34;&gt;Ukrainian&lt;/a&gt; translation.&lt;/p&gt; &#xA;&lt;p&gt;Natalie Harmann provided the &lt;a href=&#34;http://www.besteonderdelen.nl/blog/?p=5426&#34;&gt;Belarussian&lt;/a&gt; translation.&lt;/p&gt; &#xA;&lt;p&gt;Nithyal at &lt;a href=&#34;http://healthcareadministrationdegree.co/&#34;&gt;Healthcare Administration Portal&lt;/a&gt; provided the &lt;a href=&#34;http://healthcareadministrationdegree.co/socialwork/aldanial-cloc/&#34;&gt;Tamil&lt;/a&gt; translation.&lt;/p&gt; &#xA;&lt;p&gt;Patricia Motosan provided the &lt;a href=&#34;http://www.bildelestore.dk/blog/cloc-contele-de-linii-de-cod/&#34;&gt;Romanian&lt;/a&gt; translation.&lt;/p&gt; &#xA;&lt;!-- broken link&#xA;The [Garcinia Cambogia Review Team](http://www.garciniacambogiareviews.ca/)&#xA;provided the&#xA;[Arabic translation](http://www.garciniacambogiareviews.ca/translations/aldanial-cloc/). ---&gt; &#xA;&lt;p&gt;Gajk Melikyan provided the provided the &lt;a href=&#34;http://students.studybay.com/?p=34&#34;&gt;Armenian translation&lt;/a&gt; for &lt;a href=&#34;http://studybay.com&#34;&gt;http://studybay.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.forallworld.com/cloc-grof-sornyi-kodot/&#34;&gt;Hungarian translation&lt;/a&gt; courtesy of &lt;a href=&#34;http://www.forallworld.com/&#34;&gt;Zsolt Boros&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/stsnel&#34;&gt;Sietse Snel&lt;/a&gt; implemented the parallel processing capability available with the &lt;tt&gt;--processes=&lt;i&gt;N&lt;/i&gt;&lt;/tt&gt; switch.&lt;/p&gt; &#xA;&lt;p&gt;The development of cloc was partially funded by the Northrop Grumman Corporation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt; &lt;a name=&#34;Copyright&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/%7B%7B%7B1&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/#___top&#34; title=&#34;click to go to top of document&#34;&gt;Copyright ▲&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Copyright (c) 2006-2018, &lt;a href=&#34;https://github.com/AlDanial&#34;&gt;Al Danial&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/AlDanial/cloc/master/1%7D%7D%7D&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>imapsync/imapsync</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/imapsync/imapsync</id>
    <link href="https://github.com/imapsync/imapsync" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Imapsync is an IMAP transfers tool. The purpose of imapsync is to migrate IMAP accounts or to backup IMAP accounts. IMAP is one of the three current standard protocols to access mailboxes, the two others are POP3 and HTTP with webmails, webmails are often tied to an IMAP server. Upstream website is&lt;/p&gt;&lt;hr&gt;&lt;p&gt;NAME&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;imapsync - Email IMAP tool for syncing, copying, migrating and archiving&#xA;email mailboxes between two imap servers, one way, and without&#xA;duplicates.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;VERSION&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;This documentation refers to Imapsync $Revision: 2.178 $&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;USAGE&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; To synchronize the source imap account&#xA;   &#34;test1&#34; on server &#34;test1.lamiral.info&#34; with password &#34;secret1&#34;&#xA; to the destination imap account&#xA;   &#34;test2&#34; on server &#34;test2.lamiral.info&#34; with password &#34;secret2&#34;&#xA; do:&#xA;&#xA;  imapsync \&#xA;   --host1 test1.lamiral.info --user1 test1 --password1 secret1 \&#xA;   --host2 test2.lamiral.info --user2 test2 --password2 secret2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;DESCRIPTION&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;We sometimes need to transfer mailboxes from one imap server to one&#xA;another.&#xA;&#xA;Imapsync command is a tool allowing incremental and recursive imap&#xA;transfers from one mailbox to another. If you don&#39;t understand the&#xA;previous sentence, it&#39;s normal, it&#39;s pedantic computer-oriented jargon.&#xA;&#xA;All folders are transferred, recursively, meaning the whole folder&#xA;hierarchy is taken, all messages in them, and all message flags (\Seen&#xA;\Answered \Flagged etc.) are synced too.&#xA;&#xA;Imapsync reduces the amount of data transferred by not transferring a&#xA;given message if it already resides on the destination side. Messages&#xA;that are on the destination side but not on the source side stay as they&#xA;are. See the --delete2 option to have strict sync and delete them.&#xA;&#xA;How imapsync know a message is already on both sides? Same specific&#xA;headers and the transfer is done only once. By default, the&#xA;identification headers are &#34;Message-Id:&#34; and &#34;Received:&#34; lines but this&#xA;choice can be changed with the --useheader option, most often a&#xA;duplicate problem is solved by using --useheader &#34;Message-Id&#34;&#xA;&#xA;All flags are preserved, unread messages will stay unread, read ones&#xA;will stay read, deleted will stay deleted. In the IMAP protocol, a&#xA;deleted message is not really deleted, it is marked \Deleted and can be&#xA;undelete. Real destruction comes with the EXPUNGE or UIDEXPUNGE IMAP&#xA;commands.&#xA;&#xA;You can abort the transfer at any time and restart it later, imapsync&#xA;works well with bad connections and interruptions, by design. On a&#xA;terminal hit Ctr-c twice within two seconds to abort the program. Hit&#xA;Ctr-c just once makes imapsync reconnect to both imap servers.&#xA;&#xA;How do you know the sync is finished and well done? When imapsync ends&#xA;by itself it mentions it with lines like those:&#xA;&#xA;  Exiting with return value 0 (EX_OK: successful termination) 0/50 nb_errors/max_errors PID 301&#xA;  Removing pidfile /tmp/imapsync.pid&#xA;  Log file is LOG_imapsync/2020_11_17_15_59_22_761_test1_test2.txt ( to change it, use --logfile filepath ; or use --nolog to turn off logging )&#xA;&#xA;If you don&#39;t have those lines it means that either the sync process is&#xA;still running (or eventually hanging indefinitely) or that it ended&#xA;without a whisper, a strong kill -9 on Linux for example.&#xA;&#xA;If you have those final lines then it means the sync process is properly&#xA;finished. It may have encountered problems though.&#xA;&#xA;A good synchronization is mentioned by some lines above the last ones,&#xA;especially those three lines:&#xA;&#xA;  The sync looks good, all 1745 identified messages in host1 are on host2.&#xA;  There is no unidentified message on host1.&#xA;  Detected 0 errors&#xA;&#xA;A classical scenario is synchronizing a mailbox B from another mailbox A&#xA;where you just want to keep a strict copy of A in B. Strict meaning all&#xA;messages in A will be in B but no more.&#xA;&#xA;For this, option --delete2 can be used, it deletes messages in the host2&#xA;folder B that are not in the host1 folder A. If you also need to destroy&#xA;host2 folders that are not in host1 then use --delete2folders. See also&#xA;--delete2foldersonly and --delete2foldersbutnot to set up exceptions on&#xA;folders to destroy. INBOX will never be destroyed, it&#39;s a mandatory&#xA;folder in IMAP so imapsync doesn&#39;t even try to remove it.&#xA;&#xA;A different scenario is to delete the messages from the source mailbox&#xA;after a successful transfer, it can be a good feature when migrating&#xA;mailboxes since messages will be only on one side. The source account&#xA;will only have messages that are not on the destination yet, ie,&#xA;messages that arrived after a sync or that failed to be transferred.&#xA;&#xA;In that case, use the --delete1 option. Option --delete1 implies also&#xA;the option --expunge1 so all messages marked deleted on host1 will be&#xA;deleted. In IMAP protocol deleting a message does not delete it, it&#xA;marks it with the flag \Deleted, allowing an undelete. Expunging a&#xA;folder removes, definitively, all the messages marked as \Deleted in&#xA;this folder.&#xA;&#xA;You can also decide to remove empty folders once all of their messages&#xA;have been transferred. Add --delete1emptyfolders to obtain this&#xA;behavior.&#xA;&#xA;Imapsync is not adequate for maintaining two active imap accounts in&#xA;synchronization when the user plays independently on both sides. Use&#xA;offlineimap (written by John Goerzen) or mbsync (written by Michael R.&#xA;Elkins) for a 2 ways synchronization.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; usage: imapsync [options]&#xA;&#xA;The standard options are the six values forming the credentials. Three&#xA;values on each side are needed in order to login into the IMAP servers.&#xA;These six values are a hostname, a username, and a password, two times.&#xA;&#xA;Conventions used in the following descriptions of the options:&#xA;&#xA; str means string&#xA; int means integer number&#xA; flo means float number&#xA; reg means regular expression&#xA; cmd means command&#xA;&#xA; --dry               : Makes imapsync doing nothing for real; it just print what&#xA;                       would be done without --dry.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/credentials&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --host1        str  : Source or &#34;from&#34; imap server.&#xA; --port1        int  : Port to connect on host1.&#xA;                       Optional since default ports are the&#xA;                       well known ports imap/143 or imaps/993.&#xA; --user1        str  : User to login on host1.&#xA; --password1    str  : Password of user1.&#xA;&#xA; --host2        str  : &#34;destination&#34; imap server.&#xA; --port2        int  : Port to connect on host2. Optional&#xA; --user2        str  : User to login on host2.&#xA; --password2    str  : Password of user2.&#xA;&#xA; --showpasswords     : Shows passwords on output instead of &#34;MASKED&#34;.&#xA;                       Useful to restart a complete run by just reading&#xA;                       the command line used in the log,&#xA;                       or to debug passwords.&#xA;                       It&#39;s not a secure practice at all!&#xA;&#xA; --passfile1    str  : Password file for the user1. It must contain the&#xA;                       password on the first line. This option avoids showing&#xA;                       the password on the command line like --password1 does.&#xA; --passfile2    str  : Password file for the user2.&#xA;&#xA;You can also pass the passwords in the environment variables&#xA;IMAPSYNC_PASSWORD1 and IMAPSYNC_PASSWORD2. If you don&#39;t pass the user1&#xA;password via --password1 nor --passfile1 nor $IMAPSYNC_PASSWORD1 then&#xA;imapsync will prompt to enter the password on the terminal. Same thing&#xA;for user2 password.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/encryption&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --nossl1            : Do not use a SSL connection on host1.&#xA; --ssl1              : Use a SSL connection on host1. On by default if possible.&#xA;&#xA; --nossl2            : Do not use a SSL connection on host2.&#xA; --ssl2              : Use a SSL connection on host2. On by default if possible.&#xA;&#xA; --notls1            : Do not use a TLS connection on host1.&#xA; --tls1              : Use a TLS connection on host1. On by default if possible.&#xA;&#xA; --notls2            : Do not use a TLS connection on host2.&#xA; --tls2              : Use a TLS connection on host2. On by default if possible.&#xA;&#xA; --debugssl     int  : SSL debug mode from 0 to 4.&#xA;&#xA; --sslargs1     str  : Pass any ssl parameter for host1 ssl or tls connection. Example:&#xA;                       --sslargs1 SSL_verify_mode=1 --sslargs1 SSL_version=SSLv3&#xA;                       See all possibilities in the new() method of IO::Socket::SSL&#xA;                       http://search.cpan.org/perldoc?IO::Socket::SSL#Description_Of_Methods&#xA; --sslargs2     str  : Pass any ssl parameter for host2 ssl or tls connection.&#xA;                       See --sslargs1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/authentication&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --authmech1    str  : Auth mechanism to use with host1:&#xA;                       PLAIN, LOGIN, CRAM-MD5 etc. Use UPPERCASE.&#xA; --authmech2    str  : Auth mechanism to use with host2. See --authmech1&#xA;&#xA; --authuser1    str  : User to auth with on host1 (admin user).&#xA;                       Avoid using --authmech1 SOMETHING with --authuser1.&#xA; --authuser2    str  : User to auth with on host2 (admin user).&#xA; --proxyauth1        : Use proxyauth on host1. Requires --authuser1.&#xA;                       Required by Sun/iPlanet/Netscape IMAP servers to&#xA;                       be able to use an administrative user.&#xA; --proxyauth2        : Use proxyauth on host2. Requires --authuser2.&#xA;&#xA; --authmd51          : Use MD5 authentication for host1.&#xA; --authmd52          : Use MD5 authentication for host2.&#xA; --domain1      str  : Domain on host1 (NTLM authentication).&#xA; --domain2      str  : Domain on host2 (NTLM authentication).&#xA;&#xA; --oauthaccesstoken1 str : The access token to authenticate with OAUTH2.&#xA;                       It will be combined with the --user1 value to form the &#xA;                       string to pass with XOAUTH2 authentication.&#xA;                       The password given by --password1 or --passfile1&#xA;                       is ignored.&#xA;                       Instead of the access token itself, the value can be a&#xA;                       file containing the access token on the first line.&#xA;                       If the value is a file, imapsync reads its first line&#xA;                       and take this line as the access token. The advantage&#xA;                       of the file is that if the access token changes then&#xA;                       imapsync can read it again when it needs to reconnect &#xA;                       during a run.&#xA;&#xA;&#xA; --oauthaccesstoken2 str : same thing as --oauthaccesstoken1 &#xA;&#xA; --oauthdirect1 str  : The direct string to pass with XOAUTH2 authentication.&#xA;                       The password given by --password1 or --passfile1 and &#xA;                       the user given by --user1 are ignored.&#xA;&#xA; --oauthdirect2 str  : same thing as oauthdirect1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/folders&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --folder       str  : Sync this folder.&#xA; --folder       str  : and this one, etc.&#xA; --folderrec    str  : Sync this folder recursively.&#xA; --folderrec    str  : and this one, etc.&#xA;&#xA; --folderfirst  str  : Sync this folder first. Ex. --folderfirst &#34;INBOX&#34;&#xA; --folderfirst  str  : then this one, etc.&#xA; --folderlast   str  : Sync this folder last. --folderlast &#34;[Gmail]/All Mail&#34;&#xA; --folderlast   str  : then this one, etc.&#xA;&#xA; --nomixfolders      : Do not merge folders when host1 is case-sensitive&#xA;                       while host2 is not (like Exchange). Only the first&#xA;                       similar folder is synced (example: with folders&#xA;                       &#34;Sent&#34;, &#34;SENT&#34; and &#34;sent&#34;&#xA;                       on host1 only &#34;Sent&#34; will be synced to host2).&#xA;&#xA; --skipemptyfolders  : Empty host1 folders are not created on host2.&#xA;&#xA; --include      reg  : Sync folders matching this regular expression&#xA; --include      reg  : or this one, etc.&#xA;                       If both --include --exclude options are used, then&#xA;                       include is done before.&#xA; --exclude      reg  : Skips folders matching this regular expression&#xA;                       Several folders to avoid:&#xA;                        --exclude &#39;fold1|fold2|f3&#39; skips fold1, fold2 and f3.&#xA; --exclude      reg  : or this one, etc.&#xA;&#xA; --automap           : guesses folders mapping, for folders well known as&#xA;                       &#34;Sent&#34;, &#34;Junk&#34;, &#34;Drafts&#34;, &#34;All&#34;, &#34;Archive&#34;, &#34;Flagged&#34;.&#xA;&#xA; --f1f2    str1=str2 : Force folder str1 to be synced to str2,&#xA;                       --f1f2 overrides --automap and --regextrans2.&#xA;                       Use several --f1f2 options to map several folders.&#xA;                       Option --f1f2 is a one to one only folder mapping,&#xA;                       str1 and str2 have to be full path folder names.&#xA;&#xA; --subfolder2   str  : Syncs the whole host1 folders hierarchy under the&#xA;                       host2 folder named str.&#xA;                       It does it internally by adding three&#xA;                       --regextrans2 options before all others.&#xA;                       Add --debug to see what&#39;s really going on.&#xA;&#xA; --subfolder1   str  : Syncs the host1 folders hierarchy which is under folder&#xA;                       str to the root hierarchy of host2.&#xA;                       It&#39;s the couterpart of a sync done by --subfolder2&#xA;                       when doing it in the reverse order.&#xA;                       Backup/Restore scenario:&#xA;                       Use --subfolder2 str for a backup to the folder str&#xA;                       on host2. Then use --subfolder1 str for restoring&#xA;                       from the folder str, after inverting&#xA;                       host1/host2 user1/user2 values.&#xA;&#xA;&#xA; --subscribed        : Transfers subscribed folders.&#xA; --subscribe         : Subscribe to the folders transferred on the&#xA;                       host2 that are subscribed on host1. On by default.&#xA; --subscribeall      : Subscribe to the folders transferred on the&#xA;                       host2 even if they are not subscribed on host1.&#xA;&#xA; --prefix1      str  : Remove prefix str to all destination folders,&#xA;                       usually &#34;INBOX.&#34; or &#34;INBOX/&#34; or an empty string &#34;&#34;.&#xA;                       imapsync guesses the prefix if host1 imap server&#xA;                       does not have NAMESPACE capability. So this option&#xA;                       should not be used most of the time.&#xA; --prefix2      str  : Add prefix to all host2 folders. See --prefix1&#xA;&#xA; --sep1         str  : Host1 separator. This option should not be used&#xA;                       most of the time.&#xA;                       Imapsync gets the separator from the server itself,&#xA;                       by using NAMESPACE, or it tries to guess it&#xA;                       from the folders listing (it counts&#xA;                       characters / . \\ \ in folder names and choose the&#xA;                       more frequent, or finally / if nothing is found.&#xA; --sep2         str  : Host2 separator. See --sep1&#xA;&#xA; --regextrans2  reg  : Apply the whole regex to each destination folders.&#xA; --regextrans2  reg  : and this one. etc.&#xA;                       When you play with the --regextrans2 option, first&#xA;                       add also the safe options --dry --justfolders&#xA;                       Then, when happy, remove --dry for a run, then&#xA;                       remove --justfolders for the next ones.&#xA;                       Have in mind that --regextrans2 is applied after&#xA;                       the automatic prefix and separator inversion.&#xA;                       For examples see:&#xA;                       https://imapsync.lamiral.info/FAQ.d/FAQ.Folders_Mapping.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/folders sizes&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --nofoldersizes     : Do not calculate the size of each folder at the&#xA;                       beginning of the sync. Default is to calculate them.&#xA; --nofoldersizesatend: Do not calculate the size of each folder at the&#xA;                       end of the sync. Default is to calculate them.&#xA; --justfoldersizes   : Exit after having printed the initial folder sizes.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/tmp&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --tmpdir       str  : Where to store temporary files and subdirectories.&#xA;                       Will be created if it doesn&#39;t exist.&#xA;                       Default is system specific, Unix is /tmp but&#xA;                       /tmp is often too small and deleted at reboot.&#xA;                       --tmpdir /var/tmp should be better.&#xA;&#xA; --pidfile      str  : The file where imapsync pid is written,&#xA;                       it can be dirname/filename complete path.&#xA;                       The default name is imapsync.pid in tmpdir.&#xA;&#xA; --pidfilelocking    : Abort if pidfile already exists. Useful to avoid&#xA;                       concurrent transfers on the same mailbox.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/log&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --nolog             : Turn off logging on file&#xA; --logfile      str  : Change the default log filename (can be dirname/filename).&#xA; --logdir       str  : Change the default log directory. Default is LOG_imapsync/&#xA;&#xA;The default logfile name is for example&#xA;&#xA; LOG_imapsync/2019_12_22_23_57_59_532_user1_user2.txt&#xA;&#xA;where:&#xA;&#xA; 2019_12_22_23_57_59_532 is nearly the date of the start&#xA; YYYY_MM_DD_HH_MM_SS_mmm&#xA; year_month_day_hour_minute_seconde_millisecond&#xA;&#xA;and user1 user2 are the --user1 --user2 values.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/messages&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --skipmess     reg  : Skips messages matching the regex.&#xA;                       Example: &#39;m/[\x80-\xff]/&#39; # to avoid 8bits messages.&#xA;                       --skipmess is applied before --regexmess&#xA; --skipmess     reg  : or this one, etc.&#xA;&#xA; --skipcrossduplicates : Avoid copying messages that are already copied&#xA;                         in another folder, good from Gmail to XYZ when&#xA;                         XYZ is not also Gmail.&#xA;                         Activated with --gmail1 unless --noskipcrossduplicates&#xA;&#xA; --debugcrossduplicates : Prints which messages (UIDs) are skipped with&#xA;                          --skipcrossduplicates and in what other folders&#xA;                          they are.&#xA;&#xA; --pipemess     cmd  : Apply this cmd command to each message content&#xA;                       before the copy.&#xA; --pipemess     cmd  : and this one, etc.&#xA;                       With several --pipemess, the output of each cmd&#xA;                       command (STDOUT) is given to the input (STDIN)&#xA;                       of the next command.&#xA;                       For example,&#xA;                       --pipemess cmd1 --pipemess cmd2 --pipemess cmd3&#xA;                       is like a Unix pipe:&#xA;                       &#34;cat message | cmd1 | cmd2 | cmd3&#34;&#xA;&#xA; --disarmreadreceipts : Disarms read receipts (host2 Exchange issue)&#xA;&#xA; --regexmess    reg  : Apply the whole regex to each message before transfer.&#xA;                       Example: &#39;s/\000/ /g&#39; # to replace null characters&#xA;                       by spaces.&#xA; --regexmess    reg  : and this one, etc.&#xA;&#xA; --truncmess    int  : truncates messages when their size exceed the int &#xA;                       value, specified in bytes. Good to sync too big &#xA;                       messages or to &#34;suppress&#34; attachments. &#xA;                       Have in mind that this way, messages become &#xA;                       uncoherent somehow.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/labels&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Gmail present labels as folders in imap. Imapsync can accelerate the&#xA;sync by syncing X-GM-LABELS, it will avoid to transfer messages when&#xA;they are already on host2 in another folder.&#xA;&#xA; --synclabels        : Syncs also Gmail labels when a message is copied to host2.&#xA;                       Activated by default with --gmail1 --gmail2 unless&#xA;                       --nosynclabels is added.&#xA;&#xA; --resynclabels      : Resyncs Gmail labels when a message is already on host2.&#xA;                       Activated by default with --gmail1 --gmail2 unless&#xA;                       --noresynclabels is added.&#xA;&#xA;For Gmail syncs, see also:&#xA;https://imapsync.lamiral.info/FAQ.d/FAQ.Gmail.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/flags&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; If you encounter flag problems see also:&#xA; https://imapsync.lamiral.info/FAQ.d/FAQ.Flags.txt&#xA;&#xA; --regexflag    reg  : Apply the whole regex to each flags list.&#xA;                       Example: &#39;s/&#34;Junk&#34;//g&#39; # to remove &#34;Junk&#34; flag.&#xA; --regexflag    reg  : then this one, etc.&#xA;&#xA; --resyncflags       : Resync flags for already transferred messages.&#xA;                       On by default.&#xA; --noresyncflags     : Do not resync flags for already transferred messages.&#xA;                       May be useful when a user has already started to play&#xA;                       with its host2 account.&#xA;&#xA; --filterbuggyflags  : Filter flags known to be buggy and generators of errors&#xA;                       &#34;BAD Invalid system flag&#34; or &#34;NO APPEND Invalid flag list&#34;.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/deletions&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --delete1           : Deletes messages on host1 server after a successful&#xA;                       transfer. Option --delete1 has the following behavior:&#xA;                       it marks messages as deleted with the IMAP flag&#xA;                       \Deleted, then messages are really deleted with an&#xA;                       EXPUNGE IMAP command. If expunging after each message&#xA;                       slows down too much the sync then use&#xA;                       --noexpungeaftereach to speed up, expunging will then be&#xA;                       done only twice per folder, one at the beginning and&#xA;                       one at the end of a folder sync.&#xA;&#xA; --expunge1          : Expunge messages on host1 just before syncing a folder.&#xA;                       Expunge is done per folder.&#xA;                       Expunge aims is to really delete messages marked deleted.&#xA;                       An expunge is also done after each message copied&#xA;                       if option --delete1 is set (unless --noexpungeaftereach).&#xA;&#xA; --noexpunge1        : Do not expunge messages on host1.&#xA;&#xA; --delete1emptyfolders : Deletes empty folders on host1, INBOX excepted.&#xA;                         Useful with --delete1 since what remains on host1&#xA;                         is only what failed to be synced.&#xA;&#xA; --delete2           : Delete messages in the host2 account that are not in&#xA;                       the host1 account. Useful for backup or pre-sync.&#xA;                       --delete2 implies --uidexpunge2&#xA;&#xA; --delete2duplicates : Deletes messages in host2 that are duplicates in host2.&#xA;                       Works only without --useuid since duplicates are&#xA;                       detected with an header part of each message.&#xA;                       NB: --delete2duplicates is far less violent than --delete2&#xA;                       since it removes only duplicates.&#xA;&#xA; --delete2folders    : Delete folders in host2 that are not in host1.&#xA;                       For safety, first try it like this, it is safe:&#xA;                       --delete2folders --dry --justfolders --nofoldersizes&#xA;                       and see what folders will be deleted.&#xA;&#xA; --delete2foldersonly   reg : Delete only folders matching the regex reg.&#xA;                              Example: --delete2foldersonly &#34;/^Junk$|^INBOX.Junk$/&#34;&#xA;                              This option activates --delete2folders&#xA;&#xA; --delete2foldersbutnot reg : Do not delete folders matching the regex rex.&#xA;                              Example: --delete2foldersbutnot &#34;/Tasks$|Contacts$|Foo$/&#34;&#xA;                              This option activates --delete2folders&#xA;&#xA; --noexpunge2        : Do not expunge messages on host2.&#xA; --nouidexpunge2     : Do not uidexpunge messages on the host2 account&#xA;                       that are not on the host1 account.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/dates&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; If you encounter problems with dates, see also:&#xA; https://imapsync.lamiral.info/FAQ.d/FAQ.Dates.txt&#xA;&#xA; --syncinternaldates : Sets the internal dates on host2 as the same as host1.&#xA;                       Turned on by default. Internal date is the date&#xA;                       a message arrived on a host (Unix mtime usually).&#xA; --idatefromheader   : Sets the internal dates on host2 as same as the&#xA;                       ones in &#34;Date:&#34; headers.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/message selection&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --maxsize      int  : Skip messages larger  (or equal) than  int  bytes&#xA; --minsize      int  : Skip messages smaller (or equal) than  int  bytes&#xA;&#xA; --maxage       int  : Skip messages older than  int days.&#xA;                       final stats (skipped) don&#39;t count older messages&#xA;                       see also --minage&#xA; --minage       int  : Skip messages newer than  int  days.&#xA;                       final stats (skipped) don&#39;t count newer messages&#xA;                       You can do (+ zone are the messages selected):&#xA;                       past|----maxage+++++++++++++++&amp;gt;now&#xA;                       past|+++++++++++++++minage----&amp;gt;now&#xA;                       past|----maxage+++++minage----&amp;gt;now (intersection)&#xA;                       past|++++minage-----maxage++++&amp;gt;now (union)&#xA;&#xA; --search       str  : Selects only messages returned by this IMAP SEARCH&#xA;                       command. Applied on both sides.&#xA;                       For a complete set of what can be search see&#xA;                       https://imapsync.lamiral.info/FAQ.d/FAQ.Messages_Selection.txt&#xA;&#xA; --search1      str  : Same as --search but for selecting host1 messages only.&#xA; --search2      str  : Same as --search but for selecting host2 messages only.&#xA;                       So --search CRIT equals --search1 CRIT --search2 CRIT&#xA;&#xA; --noabletosearch    : Makes --minage and --maxage options use the internal&#xA;                       dates given by a FETCH imap command instead of the&#xA;                       &#34;Date:&#34; header. Internal date is the arrival date&#xA;                       in the mailbox.&#xA;                       --noabletosearch equals --noabletosearch1 --noabletosearch2&#xA;&#xA; --noabletosearch1   : Like --noabletosearch but for host1 only.&#xA; --noabletosearch2   : Like --noabletosearch but for host2 only.&#xA;&#xA; --maxlinelength int : skip messages with a line length longer than  int  bytes.&#xA;                       RFC 2822 says it must be no more than 1000 bytes but&#xA;                       real life servers and email clients do more.&#xA;&#xA;&#xA; --useheader    str  : Use this header to compare messages on both sides.&#xA;                       Example: &#34;Message-Id&#34; or &#34;Received&#34; or &#34;Date&#34;.&#xA; --useheader    str    and this one, etc.&#xA;&#xA; --syncduplicates    : Sync also duplicates. Off by default.&#xA;&#xA; --usecache          : Use cache to speed up next syncs. Off by default.&#xA; --nousecache        : Do not use cache. Caveat: --useuid --nousecache creates&#xA;                       duplicates on multiple runs.&#xA;&#xA; --useuid            : Use UIDs instead of headers as a criterion to recognize&#xA;                       messages. Option --usecache is then implied unless&#xA;                       --nousecache is used.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/miscellaneous&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --syncacls          : Synchronizes acls (Access Control Lists).&#xA;                       Acls in IMAP are not standardized, be careful&#xA;                       since one acl code on one side may signify something&#xA;                       else on the other one.&#xA; --nosyncacls        : Does not synchronize acls. This is the default.&#xA;&#xA; --addheader         : When a message has no headers to be identified,&#xA;                       --addheader adds a &#34;Message-Id&#34; header,&#xA;                       like &#34;Message-Id: 12345@imapsync&#34;, where 12345&#xA;                       is the imap UID of the message on the host1 folder.&#xA;                       Useful to sync folders &#34;Sent&#34; or &#34;Draft&#34;.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/debugging&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --debug             : Debug mode.&#xA; --debugfolders      : Debug mode for the folders part only.&#xA; --debugcontent      : Debug content of the messages transferred. Huge output.&#xA; --debugflags        : Debug mode for flags.&#xA; --debugimap1        : IMAP debug mode for host1. Very verbose.&#xA; --debugimap2        : IMAP debug mode for host2. Very verbose.&#xA; --debugimap         : IMAP debug mode for host1 and host2. Twice very verbose.&#xA; --debugmemory       : Debug mode showing memory consumption after each copy.&#xA;&#xA; --errorsmax     int : Exit when int number of errors is reached. Default is 50.&#xA;&#xA; --tests             : Run local non-regression tests. Exit code 0 means all ok.&#xA; --testslive         : Run a live test with test1.lamiral.info imap server.&#xA;                       Useful to check the basics. Needs internet connection.&#xA; --testslive6        : Run a live test with ks6ipv6.lamiral.info imap server.&#xA;                       Useful to check the ipv6 connectivity. Needs internet.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/specific&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  --gmail1           : sets --host1 to Gmail and other options. See FAQ.Gmail.txt&#xA;  --gmail2           : sets --host2 to Gmail and other options. See FAQ.Gmail.txt&#xA;&#xA;  --office1          : sets --host1 to Office365 and other options. See FAQ.Office365.txt&#xA;  --office2          : sets --host2 to Office365 and other options. See FAQ.Office365.txt&#xA;&#xA;  --exchange1        : sets options for Exchange. See FAQ.Exchange.txt&#xA;  --exchange2        : sets options for Exchange. See FAQ.Exchange.txt&#xA;&#xA;  --domino1          : sets options for Domino. See FAQ.Domino.txt&#xA;  --domino2          : sets options for Domino. See FAQ.Domino.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/behavior&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --timeout1     flo  : Connection timeout in seconds for host1.&#xA;                       Default is 120 and 0 means no timeout at all.&#xA; --timeout2     flo  : Connection timeout in seconds for host2.&#xA;                       Default is 120 and 0 means no timeout at all.&#xA;&#xA;                       Caveat, under CGI context, you may encounter a timeout&#xA;                       from the webserver, killing imapsync and the imap connexions.&#xA;                       See the document INSTALL.OnlineUI.txt and search&#xA;                       for &#34;Timeout&#34; for how to deal with this issue.&#xA;&#xA; --keepalive1        : https://metacpan.org/pod/Mail::IMAPClient#Keepalive&#xA;                       Some firewalls and network gears like to timeout connections &#xA;                       prematurely if the connection sits idle.&#xA;                       This option enables SO_KEEPALIVE on the host1 socket.&#xA;                       --keepalive1 is on by default since imapsync release 2.169&#xA;                       Use --nokeepalive1 to disable it.&#xA;                   &#xA; --keepalive2        : Same as --keepalive2 but for host2.&#xA;                       Use --nokeepalive2 to disable it.&#xA;&#xA; --maxmessagespersecond flo : limits the average number of messages &#xA;                              transferred per second.&#xA;&#xA; --maxbytespersecond int : limits the average transfer rate per second.&#xA; --maxbytesafter     int : starts --maxbytespersecond limitation only after&#xA;                           --maxbytesafter amount of data transferred.&#xA;&#xA; --maxsleep      flo : do not sleep more than int seconds.&#xA;                       On by default, 2 seconds max, like --maxsleep 2&#xA;&#xA; --abort             : terminates a previous call still running.&#xA;                       It uses the pidfile to know what process to abort.&#xA;&#xA; --exitwhenover int  : Stop syncing and exits when int total bytes&#xA;                       transferred is reached.&#xA;&#xA; --version           : Print only the software version.&#xA; --noreleasecheck    : Do not check for any new imapsync release.&#xA; --releasecheck      : Check for new imapsync release.&#xA;                       it&#39;s an http request to&#xA;                       http://imapsync.lamiral.info/prj/imapsync/VERSION&#xA;&#xA; --noid              : Do not send/receive IMAP &#34;ID&#34; command to imap servers.&#xA;&#xA; --justconnect       : Just connect to both servers and print useful&#xA;                       information. Need only --host1 and --host2 options.&#xA;                       Obsolete since &#34;imapsync --host1 imaphost&#34; alone&#xA;                       implies --justconnect&#xA;&#xA; --justlogin         : Just login to both host1 and host2 with users&#xA;                       credentials, then exit.&#xA;&#xA; --justfolders       : Do only things about folders (ignore messages).&#xA;&#xA; --help              : print this help.&#xA;&#xA; Example: to synchronize imap account &#34;test1&#34; on &#34;test1.lamiral.info&#34;&#xA;                     to  imap account &#34;test2&#34; on &#34;test2.lamiral.info&#34;&#xA;                     with test1 password &#34;secret1&#34;&#xA;                     and  test2 password &#34;secret2&#34;&#xA;&#xA; imapsync \&#xA;    --host1 test1.lamiral.info --user1 test1 --password1 secret1 \&#xA;    --host2 test2.lamiral.info --user2 test2 --password2 secret2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;SECURITY&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;You can use --passfile1 instead of --password1 to mention the password&#xA;since it is safer. With --password1 option, on Linux, any user on your&#xA;host can see the password by using the &#39;ps auxwwww&#39; command. Using a&#xA;variable (like IMAPSYNC_PASSWORD1) is also dangerous because of the &#39;ps&#xA;auxwwwwe&#39; command. So, saving the password in a well protected file (600&#xA;or rw-------) is the best solution.&#xA;&#xA;Imapsync activates ssl or tls encryption by default, if possible.&#xA;&#xA;What detailed behavior is under this &#34;if possible&#34;?&#xA;&#xA;Imapsync activates ssl if the well known port imaps port (993) is open&#xA;on the imap servers. If the imaps port is closed then it open a normal&#xA;(clear) connection on port 143 but it looks for TLS support in the&#xA;CAPABILITY list of the servers. If TLS is supported then imapsync goes&#xA;to encryption with STARTTLS.&#xA;&#xA;If the automatic ssl and the tls detections fail then imapsync will not&#xA;protect against sniffing activities on the network, especially for&#xA;passwords.&#xA;&#xA;If you want to force ssl or tls just use --ssl1 --ssl2 or --tls1 --tls2&#xA;&#xA;See also the document FAQ.Security.txt in the FAQ.d/ directory or at&#xA;https://imapsync.lamiral.info/FAQ.d/FAQ.Security.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;EXIT STATUS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Imapsync will exit with a 0 status (return code) if everything went&#xA;good. Otherwise, it exits with a non-zero status. That&#39;s classical Unix&#xA;behavior. Here is the list of the exit code values (an integer between 0&#xA;and 255). In Bourne Shells, this exit code value can be retrieved within&#xA;the variable value &#34;$?&#34; if you read it just after the imapsync call.&#xA;&#xA;The names reflect their meaning:&#xA;&#xA;     EX_OK          =&amp;gt; 0  ; #/* successful termination */&#xA;     EX_USAGE       =&amp;gt; 64 ; #/* command line usage error */&#xA;     EX_NOINPUT     =&amp;gt; 66 ; #/* cannot open input */&#xA;     EX_UNAVAILABLE =&amp;gt; 69 ; #/* service unavailable */&#xA;     EX_SOFTWARE    =&amp;gt; 70 ; #/* internal software error */&#xA;     EXIT_CATCH_ALL              =&amp;gt;   1 ; # Any other error&#xA;     EXIT_BY_SIGNAL              =&amp;gt;   6 ; # Should be 128+n where n is the sig_num&#xA;     EXIT_BY_FILE                =&amp;gt;   7 ;&#xA;     EXIT_PID_FILE_ERROR         =&amp;gt;   8 ;&#xA;     EXIT_CONNECTION_FAILURE     =&amp;gt;  10 ;&#xA;     EXIT_TLS_FAILURE            =&amp;gt;  12 ;&#xA;     EXIT_AUTHENTICATION_FAILURE =&amp;gt;  16 ;&#xA;     EXIT_SUBFOLDER1_NO_EXISTS   =&amp;gt;  21 ;&#xA;     EXIT_WITH_ERRORS            =&amp;gt; 111 ;&#xA;     EXIT_WITH_ERRORS_MAX        =&amp;gt; 112 ;&#xA;     EXIT_OVERQUOTA              =&amp;gt; 113 ;&#xA;     EXIT_ERR_APPEND             =&amp;gt; 114 ;&#xA;     EXIT_ERR_FETCH              =&amp;gt; 115 ;&#xA;     EXIT_ERR_CREATE             =&amp;gt; 116 ;&#xA;     EXIT_ERR_SELECT             =&amp;gt; 117 ;&#xA;     EXIT_TRANSFER_EXCEEDED      =&amp;gt; 118 ;&#xA;     EXIT_ERR_APPEND_VIRUS       =&amp;gt; 119 ;&#xA;     EXIT_TESTS_FAILED           =&amp;gt; 254 ; # Like Test::More API&#xA;     EXIT_CONNECTION_FAILURE_HOST1     =&amp;gt;  101 ;&#xA;     EXIT_CONNECTION_FAILURE_HOST2     =&amp;gt;  102 ;&#xA;     EXIT_AUTHENTICATION_FAILURE_USER1 =&amp;gt;  161 ;&#xA;     EXIT_AUTHENTICATION_FAILURE_USER2 =&amp;gt;  162 ;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;LICENSE AND COPYRIGHT&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Imapsync is free, open, public but not always gratis software cover by&#xA;the NOLIMIT Public License, now called NLPL. See the LICENSE file&#xA;included in the distribution or just read this simple sentence as it IS&#xA;the licence text:&#xA;&#xA; &#34;No limits to do anything with this work and this license.&#34;&#xA;&#xA;In case it is not long enough, I repeat:&#xA;&#xA; &#34;No limits to do anything with this work and this license.&#34;&#xA;&#xA;Look at https://imapsync.lamiral.info/LICENSE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;AUTHOR&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Gilles LAMIRAL &amp;lt;gilles@lamiral.info&amp;gt;&#xA;&#xA;Good feedback is always welcome. Bad feedback is very often welcome.&#xA;&#xA;Gilles LAMIRAL earns his living by writing, installing, configuring and&#xA;sometimes teaching free, open and often gratis software. Imapsync used&#xA;to be &#34;always gratis&#34; but now it is only &#34;often gratis&#34; because imapsync&#xA;is sold by its author, your servitor, a good way to maintain and support&#xA;free open public software tools over decades.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;BUGS AND LIMITATIONS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;See https://imapsync.lamiral.info/FAQ.d/FAQ.Reporting_Bugs.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;IMAP SERVERS supported&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;See https://imapsync.lamiral.info/S/imapservers.shtml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;HUGE MIGRATION&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;If you have many mailboxes to migrate think about a little shell&#xA;program. Write a file called file.txt (for example) containing users and&#xA;passwords. The separator used in this example is &#39;;&#39;&#xA;&#xA;The file.txt file contains:&#xA;&#xA;user001_1;password001_1;user001_2;password001_2&#xA;user002_1;password002_1;user002_2;password002_2&#xA;user003_1;password003_1;user003_2;password003_2&#xA;user004_1;password004_1;user004_2;password004_2&#xA;user005_1;password005_1;user005_2;password005_2 ...&#xA;&#xA;On Unix the shell program can be:&#xA;&#xA; { while IFS=&#39;;&#39; read  u1 p1 u2 p2; do&#xA;        imapsync --host1 imap.side1.org --user1 &#34;$u1&#34; --password1 &#34;$p1&#34; \&#xA;                 --host2 imap.side2.org --user2 &#34;$u2&#34; --password2 &#34;$p2&#34; ...&#xA; done ; } &amp;lt; file.txt&#xA;&#xA;On Windows the batch program can be:&#xA;&#xA;  FOR /F &#34;tokens=1,2,3,4 delims=; eol=#&#34; %%G IN (file.txt) DO imapsync ^&#xA;  --host1 imap.side1.org --user1 %%G --password1 %%H ^&#xA;  --host2 imap.side2.org --user2 %%I --password2 %%J ...&#xA;&#xA;The ... have to be replaced by nothing or any imapsync option. Welcome&#xA;in shell or batch programming !&#xA;&#xA;You will find already written scripts at&#xA;https://imapsync.lamiral.info/examples/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;INSTALL&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; Imapsync works under any Unix with Perl.&#xA;&#xA; Imapsync works under most Windows (2000, XP, Vista, Seven, Eight, Ten&#xA; and all Server releases 2000, 2003, 2008 and R2, 2012 and R2, 2016)&#xA; as a standalone binary software called imapsync.exe,&#xA; usually launched from a batch file in order to avoid always typing&#xA; the options. There is also a 32bit binary called imapsync_32bit.exe&#xA;&#xA; Imapsync works under OS X as a standalone binary&#xA; software called imapsync_bin_Darwin&#xA;&#xA; Purchase latest imapsync at&#xA; https://imapsync.lamiral.info/&#xA;&#xA; You&#39;ll receive a link to a compressed tarball called imapsync-x.xx.tgz&#xA; where x.xx is the version number. Untar the tarball where&#xA; you want (on Unix):&#xA;&#xA;  tar xzvf  imapsync-x.xx.tgz&#xA;&#xA; Go into the directory imapsync-x.xx and read the INSTALL file.&#xA; As mentioned at https://imapsync.lamiral.info/#install&#xA; the INSTALL file can also be found at&#xA; https://imapsync.lamiral.info/INSTALL.d/INSTALL.ANY.txt&#xA; It is now split in several files for each system&#xA; https://imapsync.lamiral.info/INSTALL.d/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;CONFIGURATION&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;There is no specific configuration file for imapsync, everything is&#xA;specified by the command line parameters and the default behavior.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;HACKING&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Feel free to hack imapsync as the NOLIMIT license permits it.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;SIMILAR SOFTWARE&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  See also https://imapsync.lamiral.info/S/external.shtml&#xA;  for a better up to date list.&#xA;&#xA;List verified on Friday July 1, 2021.&#xA;&#xA; imapsync: https://github.com/imapsync/imapsync (this is an imapsync copy, sometimes delayed, with --noreleasecheck by default since release 1.592, 2014/05/22)&#xA; imap_tools: https://web.archive.org/web/20161228145952/http://www.athensfbc.com/imap_tools/. The imap_tools code is now at https://github.com/andrewnimmo/rick-sanders-imap-tools&#xA; imaputils: https://github.com/mtsatsenko/imaputils (very old imap_tools fork)&#xA; Doveadm-Sync: https://wiki2.dovecot.org/Tools/Doveadm/Sync ( Dovecot sync tool )&#xA; davmail: http://davmail.sourceforge.net/&#xA; offlineimap: http://offlineimap.org/&#xA; fdm: https://github.com/nicm/fdm&#xA; mbsync: http://isync.sourceforge.net/&#xA; mailsync: http://mailsync.sourceforge.net/&#xA; mailutil: https://www.washington.edu/imap/ part of the UW IMAP toolkit. (well, seems abandoned now)&#xA; imaprepl: https://bl0rg.net/software/ http://freecode.com/projects/imap-repl/&#xA; imapcopy (Pascal): http://www.ardiehl.de/imapcopy/&#xA; imapcopy (Java): https://code.google.com/archive/p/imapcopy/&#xA; imapsize: http://www.broobles.com/imapsize/&#xA; migrationtool: http://sourceforge.net/projects/migrationtool/&#xA; imapmigrate: http://sourceforge.net/projects/cyrus-utils/&#xA; larch: https://github.com/rgrove/larch (derived from wonko_imapsync, good at Gmail)&#xA; wonko_imapsync: http://wonko.com/article/554 (superseded by larch)&#xA; pop2imap: http://www.linux-france.org/prj/pop2imap/ (I wrote that too)&#xA; exchange-away: http://exchange-away.sourceforge.net/&#xA; SyncBackPro: http://www.2brightsparks.com/syncback/sbpro.html&#xA; ImapSyncClient: https://github.com/ridaamirini/ImapSyncClient&#xA; MailStore: https://www.mailstore.com/en/products/mailstore-home/&#xA; mnIMAPSync: https://github.com/manusa/mnIMAPSync&#xA; imap-upload: http://imap-upload.sourceforge.net/ (A tool for uploading a local mbox file to IMAP4 server)&#xA; imapbackup: https://github.com/rcarmo/imapbackup (A Python script for incremental backups of IMAP mailboxes)&#xA; BitRecover email-backup 99 USD, 299 USD https://www.bitrecover.com/email-backup/.&#xA; ImportExportTools: https://addons.thunderbird.net/en-us/thunderbird/addon/importexporttools/ ImportExportTools for Mozilla Thunderbird by Paolo Kaosmos. ImportExportTools does not do IMAP.&#xA; rximapmail: https://sourceforge.net/projects/rximapmail/&#xA; CodeTwo: https://www.codetwo.com/ but CodeTwo does imap source to Office365 only.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;HISTORY&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;I initially wrote imapsync in July 2001 because an enterprise, called&#xA;BaSystemes, paid me to install a new imap server without losing huge old&#xA;mailboxes located in a far away remote imap server, accessible by an&#xA;often broken low-bandwidth ISDN link.&#xA;&#xA;I had to verify every mailbox was well transferred, all folders, all&#xA;messages, without wasting bandwidth or creating duplicates upon resyncs.&#xA;The imapsync design was made with the beautiful rsync command in mind.&#xA;&#xA;Imapsync started its life as a patch of the copy_folder.pl script. The&#xA;script copy_folder.pl comes from the Mail-IMAPClient-2.1.3 perl module&#xA;tarball source (more precisely in the examples/ directory of the&#xA;Mail-IMAPClient tarball).&#xA;&#xA;So many changes happened since then that I wonder if it remains any&#xA;lines of the original copy_folder.pl in imapsync source code.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>Perl/perl5</title>
    <updated>2022-05-31T01:49:17Z</updated>
    <id>tag:github.com,2022-05-31:/Perl/perl5</id>
    <link href="https://github.com/Perl/perl5" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🐫 The Perl programming language&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Perl is Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022 by Larry Wall and others. All rights reserved.&lt;/p&gt; &#xA;&lt;h1&gt;ABOUT PERL&lt;/h1&gt; &#xA;&lt;p&gt;Perl is a general-purpose programming language originally developed for text manipulation and now used for a wide range of tasks including system administration, web development, network programming, GUI development, and more.&lt;/p&gt; &#xA;&lt;p&gt;The language is intended to be practical (easy to use, efficient, complete) rather than beautiful (tiny, elegant, minimal). Its major features are that it&#39;s easy to use, supports both procedural and object-oriented (OO) programming, has powerful built-in support for text processing, and has one of the world&#39;s most impressive collections of third-party modules.&lt;/p&gt; &#xA;&lt;p&gt;For an introduction to the language&#39;s features, see pod/perlintro.pod.&lt;/p&gt; &#xA;&lt;p&gt;For a discussion of the important changes in this release, see pod/perldelta.pod.&lt;/p&gt; &#xA;&lt;p&gt;There are also many Perl books available, covering a wide variety of topics, from various publishers. See pod/perlbook.pod for more information.&lt;/p&gt; &#xA;&lt;h1&gt;INSTALLATION&lt;/h1&gt; &#xA;&lt;p&gt;If you&#39;re using a relatively modern operating system and want to install this version of Perl locally, run the following commands:&lt;/p&gt; &#xA;&lt;p&gt;./Configure -des -Dprefix=$HOME/localperl make test make install&lt;/p&gt; &#xA;&lt;p&gt;This will configure and compile perl for your platform, run the regression tests, and install perl in a subdirectory &#34;localperl&#34; of your home directory.&lt;/p&gt; &#xA;&lt;p&gt;If you run into any trouble whatsoever or you need to install a customized version of Perl, you should read the detailed instructions in the &#34;INSTALL&#34; file that came with this distribution. Additionally, there are a number of &#34;README&#34; files with hints and tips about building and using Perl on a wide variety of platforms, some more common than others.&lt;/p&gt; &#xA;&lt;p&gt;Once you have Perl installed, a wealth of documentation is available to you through the &#39;perldoc&#39; tool. To get started, run this command:&lt;/p&gt; &#xA;&lt;p&gt;perldoc perl&lt;/p&gt; &#xA;&lt;h1&gt;IF YOU RUN INTO TROUBLE&lt;/h1&gt; &#xA;&lt;p&gt;Perl is a large and complex system that&#39;s used for everything from knitting to rocket science. If you run into trouble, it&#39;s quite likely that someone else has already solved the problem you&#39;re facing. Once you&#39;ve exhausted the documentation, please report bugs to us at the GitHub issue tracker at &lt;a href=&#34;https://github.com/Perl/perl5/issues&#34;&gt;https://github.com/Perl/perl5/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;While it was current when we made it available, Perl is constantly evolving and there may be a more recent version that fixes bugs you&#39;ve run into or adds new features that you might find useful.&lt;/p&gt; &#xA;&lt;p&gt;You can always find the latest version of perl on a CPAN (Comprehensive Perl Archive Network) site near you at &lt;a href=&#34;https://www.cpan.org/src/&#34;&gt;https://www.cpan.org/src/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to submit a simple patch to the perl source, see the &#34;SUPER QUICK PATCH GUIDE&#34; in pod/perlhack.pod.&lt;/p&gt; &#xA;&lt;p&gt;Just a personal note: I want you to know that I create nice things like this because it pleases the Author of my story. If this bothers you, then your notion of Authorship needs some revision. But you can use perl anyway. :-)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;The author.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;LICENSING&lt;/h1&gt; &#xA;&lt;p&gt;This program is free software; you can redistribute it and/or modify it under the terms of either:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;a) the GNU General Public License as published by the Free&#xA;Software Foundation; either version 1, or (at your option) any&#xA;later version, or&#xA;&#xA;b) the &#34;Artistic License&#34; which comes with this Kit.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See either the GNU General Public License or the Artistic License for more details.&lt;/p&gt; &#xA;&lt;p&gt;You should have received a copy of the Artistic License with this Kit, in the file named &#34;Artistic&#34;. If not, I&#39;ll be glad to provide one.&lt;/p&gt; &#xA;&lt;p&gt;You should also have received a copy of the GNU General Public License along with this program in the file named &#34;Copying&#34;. If not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA or visit their web page on the internet at &lt;a href=&#34;https://www.gnu.org/copyleft/gpl.html&#34;&gt;https://www.gnu.org/copyleft/gpl.html&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For those of you that choose to use the GNU General Public License, my interpretation of the GNU General Public License is that no Perl script falls under the terms of the GPL unless you explicitly put said script under the terms of the GPL yourself. Furthermore, any object code linked with perl does not automatically fall under the terms of the GPL, provided such object code only adds definitions of subroutines and variables, and does not otherwise impair the resulting interpreter from executing any standard Perl script. I consider linking in C subroutines in this manner to be the moral equivalent of defining subroutines in the Perl language itself. You may sell such an object file as proprietary provided that you provide or offer to provide the Perl source, as specified by the GNU General Public License. (This is merely an alternate way of specifying input to the program.) You may also sell a binary produced by the dumping of a running Perl script that belongs to you, provided that you provide or offer to provide the Perl source as specified by the GPL. (The fact that a Perl interpreter and your code are in the same binary file is, in this case, a form of mere aggregation.) This is my interpretation of the GPL. If you still have concerns or difficulties understanding my intent, feel free to contact me. Of course, the Artistic License spells all this out for your protection, so you may prefer to use that.&lt;/p&gt;</summary>
  </entry>
</feed>