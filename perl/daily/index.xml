<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-04T01:41:55Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jjn1056/CatalystX-Example-Checklist</title>
    <updated>2023-03-04T01:41:55Z</updated>
    <id>tag:github.com,2023-03-04:/jjn1056/CatalystX-Example-Checklist</id>
    <link href="https://github.com/jjn1056/CatalystX-Example-Checklist" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Social Checklist Example application using Perl, Catalyst, DBIx::Class and related Modern Perl Tools&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NAME&lt;/h1&gt; &#xA;&lt;p&gt;CatalystX::Example::Checklist - Social Checklists&lt;/p&gt; &#xA;&lt;h1&gt;DESCRIPTION&lt;/h1&gt; &#xA;&lt;p&gt;This is a sample application designed to demo &lt;a href=&#34;http://search.cpan.org/perldoc?Catalyst&#34;&gt;Catalyst&lt;/a&gt;, &lt;a href=&#34;http://search.cpan.org/perldoc?DBIx::Class&#34;&gt;DBIx::Class&lt;/a&gt; and related software. It is designed for learning.&lt;/p&gt; &#xA;&lt;h1&gt;SEE ALSO&lt;/h1&gt; &#xA;&lt;p&gt;The following modules or resources may be of interest.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://search.cpan.org/perldoc?DBIx::Class&#34;&gt;DBIx::Class&lt;/a&gt;, &lt;a href=&#34;http://search.cpan.org/perldoc?Catalyst::Runtime&#34;&gt;Catalyst::Runtime&lt;/a&gt;, &lt;a href=&#34;http://search.cpan.org/perldoc?Test::Most&#34;&gt;Test::Most&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;AUTHOR&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;John Napiorkowski C&amp;lt;&amp;lt; &amp;lt;jjnapiork@cpan.org&amp;gt; &amp;gt;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;COPYRIGHT &amp;amp; LICENSE&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2013, John Napiorkowski C&amp;lt;&amp;lt; &amp;lt;jjnapiork@cpan.org&amp;gt; &amp;gt;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>JUrban/BliStr</title>
    <updated>2023-03-04T01:41:55Z</updated>
    <id>tag:github.com,2023-03-04:/JUrban/BliStr</id>
    <link href="https://github.com/JUrban/BliStr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;BliStr system&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This is BliStr 0.1, a system for automated development of new E prover strategies.&lt;/p&gt; &#xA;&lt;p&gt;INSTALL: in this directory, run&lt;/p&gt; &#xA;&lt;p&gt;./setupdirs.sh installdir&lt;/p&gt; &#xA;&lt;p&gt;Then go to installdir/bin, set the $grootdir variable in BliStr.pl to installdir, possibly modify the parameters above $grootdir, and run Blistr.pl. When BliStr finishes, the new strategies are in installdir/prots.&lt;/p&gt; &#xA;&lt;p&gt;PREREQUISITES:&lt;/p&gt; &#xA;&lt;p&gt;The binary &#34;eprover1.6tst2&#34; (E 1.6 will do) needs to be in path and executable. GNU Parallel (&lt;a href=&#34;http://www.gnu.org/software/parallel/&#34;&gt;http://www.gnu.org/software/parallel/&lt;/a&gt;) needs to be in path and executable. If not, modify the EvalStrat function. A 12-core machine is assumed for the global high-limit evaluations, again see EvalStrat.&lt;/p&gt; &#xA;&lt;p&gt;CONTACT: Josef Urban (firstname dot lastname at gmail dot com)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>patrickviet/puppet-tools</title>
    <updated>2023-03-04T01:41:55Z</updated>
    <id>tag:github.com,2023-03-04:/patrickviet/puppet-tools</id>
    <link href="https://github.com/patrickviet/puppet-tools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Collection of puppet tools&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;puppet-tools&lt;/h1&gt; &#xA;&lt;p&gt;Collection of puppet tools&lt;/p&gt;</summary>
  </entry>
</feed>