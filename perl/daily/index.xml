<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-15T01:50:32Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>os-autoinst/openQA</title>
    <updated>2022-06-15T01:50:32Z</updated>
    <id>tag:github.com,2022-06-15:/os-autoinst/openQA</id>
    <link href="https://github.com/os-autoinst/openQA" rel="alternate"></link>
    <summary type="html">&lt;p&gt;openQA web-frontend, scheduler and tools.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;openQA&lt;/h1&gt; &#xA;&lt;div id=&#34;preamble&#34;&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://codecov.io/gh/os-autoinst/openQA&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/os-autoinst/openQA/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;badge&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://circleci.com/gh/os-autoinst/openQA/tree/master&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/os-autoinst/openQA/tree/master.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;openQA is a testing framework that allows you to test GUI applications on one hand and bootloader and kernel on the other. In both cases, it is difficult to script tests and verify the output. Output can be a popup window or it can be an error in early boot even before init is executed.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Therefore openQA runs virtual machines and closely monitors their state and runs tests on them.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The testing framework can be divided in two parts. The one that is hosted in this repository contains the web frontend and management logic (test scheduling, management, high-level API, …​)&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The other part that you need to run openQA is the OS-autoinst test engine that is hosted in a separate &lt;a href=&#34;https://github.com/os-autoinst/os-autoinst&#34;&gt;repository&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_getting_started&#34;&gt;Getting started&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The project’s information is organized into four basic documents. As a first step, read the &lt;a href=&#34;https://raw.githubusercontent.com/os-autoinst/openQA/master/docs/GettingStarted.asciidoc&#34;&gt;Starter Guide&lt;/a&gt; and then, if needed, proceed to the &lt;a href=&#34;https://raw.githubusercontent.com/os-autoinst/openQA/master/docs/Installing.asciidoc&#34;&gt;Installation Guide&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;For users of the openQA web interface or the REST API consult &lt;a href=&#34;https://raw.githubusercontent.com/os-autoinst/openQA/master/docs/UsersGuide.asciidoc&#34;&gt;Users Guide&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;If you are interested in writing tests using openQA read the &lt;a href=&#34;https://raw.githubusercontent.com/os-autoinst/openQA/master/docs/WritingTests.asciidoc&#34;&gt;Tests Developer Guide&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_contributing&#34;&gt;Contributing&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div id=&#34;getting_involved&#34; class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;If you are interested in contributing to openQA itself, check the &lt;a href=&#34;https://raw.githubusercontent.com/os-autoinst/openQA/master/docs/Contributing.asciidoc&#34;&gt;Developer Guide&lt;/a&gt;, write your code and send a pull request ;-)&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_issue_trackers_and_support&#34;&gt;Issue trackers and support&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Our main issue tracker is at &lt;a href=&#34;https://progress.opensuse.org/projects/openqav3&#34;&gt;openQAv3 project&lt;/a&gt; in openSUSE’s project management tool. This Redmine instance is used to coordinate the main development effort organizing the existing issues (bugs and desired features) into &#39;target versions&#39;.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Find contact details and meet developers over &lt;a href=&#34;http://open.qa/contact/&#34;&gt;our contact page&lt;/a&gt;.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_releases&#34;&gt;Releases&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;openQA is developed on a continuous base where every commit in the git master branch is considered stable and a valid and installable version. The old tags on github are therefore misleading.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>cplusplus/papers</title>
    <updated>2022-06-15T01:50:32Z</updated>
    <id>tag:github.com,2022-06-15:/cplusplus/papers</id>
    <link href="https://github.com/cplusplus/papers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ISO/IEC JTC1 SC22 WG21 paper scheduling and management&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;papers&lt;/h1&gt; &#xA;&lt;p&gt;ISO/IEC JTC1 SC22 WG21 paper scheduling and management&lt;/p&gt;</summary>
  </entry>
</feed>