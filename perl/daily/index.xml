<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-01T01:51:09Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nextcloud/docker-ci</title>
    <updated>2022-08-01T01:51:09Z</updated>
    <id>tag:github.com,2022-08-01:/nextcloud/docker-ci</id>
    <link href="https://github.com/nextcloud/docker-ci" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ðŸ“¦ Containers used for Continous Integration jobs (automated testing)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CI images for Nextcloud&lt;/h1&gt; &#xA;&lt;p&gt;&lt;span&gt;ðŸ“¦&lt;/span&gt; Containers used for Continous Integration jobs (automated testing)&lt;/p&gt; &#xA;&lt;h2&gt;GitHub Container Registry&lt;/h2&gt; &#xA;&lt;p&gt;The images are automatic builds on GitHub actions. You can find them at &lt;a href=&#34;https://github.com/orgs/nextcloud/packages?repo_name=docker-ci&#34;&gt;https://github.com/orgs/nextcloud/packages?repo_name=docker-ci&lt;/a&gt;. The build is triggered using GitHub workflows.&lt;/p&gt; &#xA;&lt;h3&gt;GitHub workflows&lt;/h3&gt; &#xA;&lt;p&gt;To trigger a build of a specific container, go to &lt;a href=&#34;https://github.com/nextcloud/docker-ci/actions/workflows/docker.yml&#34;&gt;https://github.com/nextcloud/docker-ci/actions/workflows/docker.yml&lt;/a&gt; and press &#34;Run Workflow&#34;. Enter the following information:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Path to the folder (e.g. &lt;code&gt;translations&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Path to Dockerfile: &lt;code&gt;Dockerfile-Plain&lt;/code&gt; &lt;strong&gt;IMPORTANT:&lt;/strong&gt; If you are not using &lt;code&gt;Dockerfile&lt;/code&gt; but one with a suffix here, you also need to add the suffix on the image name in the next field (all lowercased)&lt;/li&gt; &#xA; &lt;li&gt;Suffix to image name: &lt;code&gt;-plain&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tag name (e.g. &lt;code&gt;latest&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This would result in the Dockerfile &lt;code&gt;/client/Dockerfile&lt;/code&gt; being built and the binary being pushed to the GitHub Container Registry as &lt;code&gt;client:latest&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Docker Hub&lt;/h2&gt; &#xA;&lt;p&gt;The images are automatic builds on Docker Hub. You can find them at &lt;a href=&#34;https://hub.docker.com/u/nextcloudci/&#34;&gt;https://hub.docker.com/u/nextcloudci/&lt;/a&gt;. The build is only triggered if a git tag is set.&lt;/p&gt; &#xA;&lt;h3&gt;Git tags&lt;/h3&gt; &#xA;&lt;p&gt;To trigger a build of a specific container the tag needs to be named like the folder followed by a dash and a version number. This means &lt;code&gt;translations-1&lt;/code&gt; will only trigger a build of the translation container and will then build the container &lt;code&gt;nextcloudci/translations:translations-1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Other example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;git tag &lt;code&gt;php7.1-5&lt;/code&gt; will only build &lt;code&gt;nextcloudci/php7.1:php7.1-5&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>rjust/defects4j</title>
    <updated>2022-08-01T01:51:09Z</updated>
    <id>tag:github.com,2022-08-01:/rjust/defects4j</id>
    <link href="https://github.com/rjust/defects4j" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Database of Real Faults and an Experimental Infrastructure to Enable Controlled Experiments in Software Engineering Research&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Defects4J -- version 2.0.0 &lt;a href=&#34;https://travis-ci.com/rjust/defects4j&#34;&gt;&lt;img src=&#34;https://travis-ci.com/rjust/defects4j.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Defects4J is a collection of reproducible bugs and a supporting infrastructure with the goal of advancing software engineering research.&lt;/p&gt; &#xA;&lt;h1&gt;Contents of Defects4J&lt;/h1&gt; &#xA;&lt;h2&gt;The projects&lt;/h2&gt; &#xA;&lt;p&gt;Defects4J contains 835 bugs from the following open-source projects:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Identifier&lt;/th&gt; &#xA;   &lt;th&gt;Project name&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Number of bugs&lt;/th&gt; &#xA;   &lt;th&gt;Active bug ids&lt;/th&gt; &#xA;   &lt;th&gt;Deprecated bug ids (*)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chart&lt;/td&gt; &#xA;   &lt;td&gt;jfreechart&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;26&lt;/td&gt; &#xA;   &lt;td&gt;1-26&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cli&lt;/td&gt; &#xA;   &lt;td&gt;commons-cli&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;39&lt;/td&gt; &#xA;   &lt;td&gt;1-5,7-40&lt;/td&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Closure&lt;/td&gt; &#xA;   &lt;td&gt;closure-compiler&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;174&lt;/td&gt; &#xA;   &lt;td&gt;1-62,64-92,94-176&lt;/td&gt; &#xA;   &lt;td&gt;63,93&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Codec&lt;/td&gt; &#xA;   &lt;td&gt;commons-codec&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;18&lt;/td&gt; &#xA;   &lt;td&gt;1-18&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Collections&lt;/td&gt; &#xA;   &lt;td&gt;commons-collections&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;25-28&lt;/td&gt; &#xA;   &lt;td&gt;1-24&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Compress&lt;/td&gt; &#xA;   &lt;td&gt;commons-compress&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;47&lt;/td&gt; &#xA;   &lt;td&gt;1-47&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Csv&lt;/td&gt; &#xA;   &lt;td&gt;commons-csv&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;16&lt;/td&gt; &#xA;   &lt;td&gt;1-16&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Gson&lt;/td&gt; &#xA;   &lt;td&gt;gson&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;18&lt;/td&gt; &#xA;   &lt;td&gt;1-18&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JacksonCore&lt;/td&gt; &#xA;   &lt;td&gt;jackson-core&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;26&lt;/td&gt; &#xA;   &lt;td&gt;1-26&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JacksonDatabind&lt;/td&gt; &#xA;   &lt;td&gt;jackson-databind&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;112&lt;/td&gt; &#xA;   &lt;td&gt;1-112&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JacksonXml&lt;/td&gt; &#xA;   &lt;td&gt;jackson-dataformat-xml&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;1-6&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Jsoup&lt;/td&gt; &#xA;   &lt;td&gt;jsoup&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;93&lt;/td&gt; &#xA;   &lt;td&gt;1-93&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JxPath&lt;/td&gt; &#xA;   &lt;td&gt;commons-jxpath&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;22&lt;/td&gt; &#xA;   &lt;td&gt;1-22&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Lang&lt;/td&gt; &#xA;   &lt;td&gt;commons-lang&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;64&lt;/td&gt; &#xA;   &lt;td&gt;1,3-65&lt;/td&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Math&lt;/td&gt; &#xA;   &lt;td&gt;commons-math&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;106&lt;/td&gt; &#xA;   &lt;td&gt;1-106&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mockito&lt;/td&gt; &#xA;   &lt;td&gt;mockito&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;38&lt;/td&gt; &#xA;   &lt;td&gt;1-38&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Time&lt;/td&gt; &#xA;   &lt;td&gt;joda-time&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;26&lt;/td&gt; &#xA;   &lt;td&gt;1-20,22-27&lt;/td&gt; &#xA;   &lt;td&gt;21&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;* Due to behavioral changes introduced under Java 8, some bugs are no longer reproducible. Hence, Defects4J distinguishes between active and deprecated bugs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Active bugs can be accessed through &lt;code&gt;active-bugs.csv&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Deprecated bugs are removed from &lt;code&gt;active-bugs.csv&lt;/code&gt;, but their metadata is retained in the project directory.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Deprecated bugs can be accessed through &lt;code&gt;deprecated-bugs.csv&lt;/code&gt;, which also details when and why a bug was deprecated.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We do not re-enumerate active bugs because publications using Defects4J artifacts usually refer to bugs by their specific bug id.&lt;/p&gt; &#xA;&lt;h2&gt;The bugs&lt;/h2&gt; &#xA;&lt;p&gt;Each bug has the following properties:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Issue filed in the corresponding issue tracker, and issue tracker identifier mentioned in the fixing commit message.&lt;/li&gt; &#xA; &lt;li&gt;Fixed in a single commit.&lt;/li&gt; &#xA; &lt;li&gt;Minimized: the Defects4J maintainers manually pruned out irrelevant changes in the commit (e.g., refactorings or feature additions).&lt;/li&gt; &#xA; &lt;li&gt;Fixed by modifying the source code (as opposed to configuration files, documentation, or test files).&lt;/li&gt; &#xA; &lt;li&gt;A triggering test exists that failed before the fix and passes after the fix -- the test failure is not random or dependent on test execution order.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The (b)uggy and (f)ixed program revisions are labelled with &lt;code&gt;&amp;lt;id&amp;gt;b&lt;/code&gt; and &lt;code&gt;&amp;lt;id&amp;gt;f&lt;/code&gt;, respectively (&lt;code&gt;&amp;lt;id&amp;gt;&lt;/code&gt; is an integer).&lt;/p&gt; &#xA;&lt;h1&gt;Setting up Defects4J&lt;/h1&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Java 1.8 (version 1.5.0 and older requires Java 1.7)&lt;/li&gt; &#xA; &lt;li&gt;Git &amp;gt;= 1.9&lt;/li&gt; &#xA; &lt;li&gt;SVN &amp;gt;= 1.8&lt;/li&gt; &#xA; &lt;li&gt;Perl &amp;gt;= 5.0.12&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Java version&lt;/h4&gt; &#xA;&lt;p&gt;All bugs have been reproduced and triggering tests verified, using the latest version of Java 1.8. Note that using Java 1.9+ might result in unexpected failing tests on a fixed program version.&lt;/p&gt; &#xA;&lt;h4&gt;Timezone&lt;/h4&gt; &#xA;&lt;p&gt;Defects4J generates and executes tests in the timezone &lt;code&gt;America/Los_Angeles&lt;/code&gt;. If you are using the bugs outside of the Defects4J framework, set the &lt;code&gt;TZ&lt;/code&gt; environment variable to &lt;code&gt;America/Los_Angeles&lt;/code&gt; and export it.&lt;/p&gt; &#xA;&lt;h4&gt;Perl dependencies&lt;/h4&gt; &#xA;&lt;p&gt;All required Perl modules are listed in &lt;a href=&#34;https://github.com/rjust/defects4j/raw/master/cpanfile&#34;&gt;cpanfile&lt;/a&gt;. On many Unix platforms, these required Perl modules are installed by default. If this is not the case, see instructions below for how to install them.&lt;/p&gt; &#xA;&lt;h2&gt;Steps to set up Defects4J&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone Defects4J:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;git clone https://github.com/rjust/defects4j&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Initialize Defects4J (download the project repositories and external libraries, which are not included in the git repository for size purposes and to avoid redundancies): If you do not have &lt;code&gt;cpanm&lt;/code&gt; installed, use cpan or a cpan wrapper to install the perl modules listed in &lt;code&gt;cpanfile&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;cd defects4j&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;cpanm --installdeps .&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;./init.sh&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add Defects4J&#39;s executables to your PATH:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;export PATH=$PATH:&#34;path2defects4j&#34;/framework/bin&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Check installation:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;defects4j info -p Lang&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;On some platforms such as Windows, you might need to use &lt;code&gt;perl &#34;fullpath&#34;\defects4j&lt;/code&gt; where these instructions say to use &lt;code&gt;defects4j&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Using Defects4J&lt;/h1&gt; &#xA;&lt;h4&gt;Example commands&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Get information for a specific project (commons lang):&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;defects4j info -p Lang&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Get information for a specific bug (commons lang, bug 1):&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;defects4j info -p Lang -b 1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Checkout a buggy source code version (commons lang, bug 1, buggy version):&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;defects4j checkout -p Lang -v 1b -w /tmp/lang_1_buggy&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Change to the working directory, compile sources and tests, and run tests:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;cd /tmp/lang_1_buggy&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;defects4j compile&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;defects4j test&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The scripts in &lt;a href=&#34;https://raw.githubusercontent.com/rjust/defects4j/master/framework/test/&#34;&gt;&lt;code&gt;framework/test/&lt;/code&gt;&lt;/a&gt; are examples of how to use Defects4J, which you might find useful as inspiration when you are writing your own scripts that use Defects4J.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Command-line interface: defects4j command&lt;/h2&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;http://defects4j.org/html_doc/defects4j.html&#34;&gt;&lt;code&gt;framework/bin/defects4j&lt;/code&gt;&lt;/a&gt; to execute any of the following commands:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://defects4j.org/html_doc/d4j/d4j-info.html&#34;&gt;info&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;View configuration of a specific project or summary of a specific bug&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://defects4j.org/html_doc/d4j/d4j-env.html&#34;&gt;env&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Print the environment of defects4j executions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://defects4j.org/html_doc/d4j/d4j-checkout.html&#34;&gt;checkout&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Checkout a buggy or a fixed project version&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://defects4j.org/html_doc/d4j/d4j-compile.html&#34;&gt;compile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Compile sources and developer-written tests of a buggy or a fixed project version&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://defects4j.org/html_doc/d4j/d4j-test.html&#34;&gt;test&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Run a single test method or a test suite on a buggy or a fixed project version&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://defects4j.org/html_doc/d4j/d4j-mutation.html&#34;&gt;mutation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Run mutation analysis on a buggy or a fixed project version&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://defects4j.org/html_doc/d4j/d4j-coverage.html&#34;&gt;coverage&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Run code coverage analysis on a buggy or a fixed project version&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://defects4j.org/html_doc/d4j/d4j-monitor.test.html&#34;&gt;monitor.test&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Monitor the class loader during the execution of a single test or a test suite&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://defects4j.org/html_doc/d4j/d4j-bids.html&#34;&gt;bids&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Print the list of active or deprecated bug IDs for a specific project&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://defects4j.org/html_doc/d4j/d4j-pids.html&#34;&gt;pids&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Print a list of available project IDs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://defects4j.org/html_doc/d4j/d4j-export.html&#34;&gt;export&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Export version-specific properties such as classpaths, directories, or lists of tests&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://defects4j.org/html_doc/d4j/d4j-query.html&#34;&gt;query&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Query the metadata to generate a CSV file of requested information for a specific project&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Export version-specific properties&lt;/h2&gt; &#xA;&lt;p&gt;Use &lt;code&gt;defects4j export -p &amp;lt;property_name&amp;gt; [-o output_file]&lt;/code&gt; in the working directory to export a version-specific property:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;classes.modified&lt;/td&gt; &#xA;   &lt;td&gt;Classes modified by the bug fix&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;classes.relevant&lt;/td&gt; &#xA;   &lt;td&gt;Classes loaded by the JVM when executing all triggering tests&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cp.compile&lt;/td&gt; &#xA;   &lt;td&gt;Classpath to compile and run the project&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cp.test&lt;/td&gt; &#xA;   &lt;td&gt;Classpath to compile and run the developer-written tests&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dir.src.classes&lt;/td&gt; &#xA;   &lt;td&gt;Source directory of classes (relative to working directory)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dir.bin.classes&lt;/td&gt; &#xA;   &lt;td&gt;Target directory of classes (relative to working directory)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dir.src.tests&lt;/td&gt; &#xA;   &lt;td&gt;Source directory of tests (relative to working directory)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dir.bin.tests&lt;/td&gt; &#xA;   &lt;td&gt;Target directory of test classes (relative to working directory)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tests.all&lt;/td&gt; &#xA;   &lt;td&gt;List of all developer-written test classes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tests.relevant&lt;/td&gt; &#xA;   &lt;td&gt;List of relevant tests classes (a test class is relevant if, when executed, the JVM loads at least one of the modified classes)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tests.trigger&lt;/td&gt; &#xA;   &lt;td&gt;List of test methods that trigger (expose) the bug&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Export project-specific metadata&lt;/h2&gt; &#xA;&lt;p&gt;Use &lt;code&gt;defects4j query -p &amp;lt;pid&amp;gt; -q &amp;lt;field_list&amp;gt; [-o &amp;lt;output_file&amp;gt;] [-D|-A]&lt;/code&gt; to generate a CSV file containing a set of requested metadata for each bug in a specific project.&lt;/p&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;defects4j query&lt;/code&gt; returns a list of active bug IDs for a project. To request specific metadata, the &lt;code&gt;-q&lt;/code&gt; flag should be provided with a comma-separated list of variables from the list below. For example, &lt;code&gt;defects4j query -p Chart -q &#34;report.id,report.url&#34;&lt;/code&gt; will provide the a list of all active bug IDs, along with the bug report ID and bug report URL for each.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;bug.id&lt;/td&gt; &#xA;   &lt;td&gt;Assigned bug IDs (included in all results)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;project.id&lt;/td&gt; &#xA;   &lt;td&gt;Assigned project ID&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;project.name&lt;/td&gt; &#xA;   &lt;td&gt;Original project name&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;project.build.file&lt;/td&gt; &#xA;   &lt;td&gt;Location of the Defects4J build file for the project&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;project.vcs&lt;/td&gt; &#xA;   &lt;td&gt;Version control system used by the project&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;project.repository&lt;/td&gt; &#xA;   &lt;td&gt;Location of the project repository&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;project.bugs.csv&lt;/td&gt; &#xA;   &lt;td&gt;Location of the CSV containing information on that bug&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;revision.id.buggy&lt;/td&gt; &#xA;   &lt;td&gt;Commit hashes for the buggy version of each bug&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;revision.id.fixed&lt;/td&gt; &#xA;   &lt;td&gt;Commit hashes for the fixed version of each bug&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;revision.date.buggy&lt;/td&gt; &#xA;   &lt;td&gt;Date of the buggy commit for each bug&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;revision.date.fixed&lt;/td&gt; &#xA;   &lt;td&gt;Date of the fixed commit for each bug&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;report.id&lt;/td&gt; &#xA;   &lt;td&gt;Bug report ID from the version tracker for each bug&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;report.url&lt;/td&gt; &#xA;   &lt;td&gt;Bug report URL from the version tracker for each bug&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;classes.modified&lt;/td&gt; &#xA;   &lt;td&gt;Classes modified by the bug fix&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;classes.relevant.src&lt;/td&gt; &#xA;   &lt;td&gt;Source classes loaded by the JVM when executing all triggering tests&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;classes.relevant.test&lt;/td&gt; &#xA;   &lt;td&gt;Test classes loaded by the JVM when executing all triggering tests&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tests.relevant&lt;/td&gt; &#xA;   &lt;td&gt;List of relevant tests classes (a test class is relevant if, when executed, the JVM loads at least one of the modified classes)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tests.trigger&lt;/td&gt; &#xA;   &lt;td&gt;List of test methods that trigger (expose) the bug&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tests.trigger.cause&lt;/td&gt; &#xA;   &lt;td&gt;List of test methods that trigger (expose) the bug, along with the root cause&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;deprecated.version&lt;/td&gt; &#xA;   &lt;td&gt;(for deprecated bugs only) Version of Defects4J where a bug was deprecated&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;deprecated.reason&lt;/td&gt; &#xA;   &lt;td&gt;(for deprecated bugs only) Reason for deprecation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;defects4j query&lt;/code&gt; returns information on active bugs. The &lt;code&gt;[-D]&lt;/code&gt; flag returns information only on deprecated bugs, while the &lt;code&gt;[-A]&lt;/code&gt; flag returns information for all active and deprecated bugs.&lt;/p&gt; &#xA;&lt;h2&gt;Test execution framework&lt;/h2&gt; &#xA;&lt;p&gt;The test execution framework for generated test suites (&lt;code&gt;framework/bin&lt;/code&gt;) provides the following scripts:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Script&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://defects4j.org/html_doc/defects4j.html&#34;&gt;defects4j&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Main script, described above&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://defects4j.org/html_doc/gen_tests.html&#34;&gt;gen_tests&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Generate test suites using EvoSuite or Randoop&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://defects4j.org/html_doc/run_bug_detection.html&#34;&gt;run_bug_detection&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Determine the real fault detection rate&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://defects4j.org/html_doc/run_mutation.html&#34;&gt;run_mutation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Determine the mutation score&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://defects4j.org/html_doc/run_coverage.html&#34;&gt;run_coverage&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Determine code coverage ratios (statement and branch coverage)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Mining and contributing additional bugs to Defects4J&lt;/h1&gt; &#xA;&lt;p&gt;We welcome your contributions to Defects4J! The bug-mining &lt;a href=&#34;https://raw.githubusercontent.com/rjust/defects4j/master/framework/bug-mining/README.md&#34;&gt;README&lt;/a&gt; details the bug-mining process.&lt;/p&gt; &#xA;&lt;h1&gt;Additional resources&lt;/h1&gt; &#xA;&lt;h2&gt;Scripts built on Defects4J&lt;/h2&gt; &#xA;&lt;h4&gt;Fault localization (FL)&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bitbucket.org/rjust/fault-localization-data&#34;&gt;Scripts and annotations for evaluating FL techniques&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Automated program repair (APR)&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LASER-UMASS/AutomatedRepairApplicabilityData&#34;&gt;Scripts and annotations for evaluating APR techniques&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Spirals-Team/defects4j-repair&#34;&gt;Patches generated with the Nopol, jGenProg, and jKali APR systems&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://program-repair.org/defects4j-dissection/&#34;&gt;Repair actions and patterns for Defects4J v1.2.0&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Publications&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&#34;Defects4J: A Database of Existing Faults to Enable Controlled Testing Studies for Java Programs&#34; RenÃ© Just, Darioush Jalali, and Michael D. Ernst, ISSTA 2014 &lt;a href=&#34;https://people.cs.umass.edu/~rjust/publ/defects4j_issta_2014.pdf&#34;&gt;[download]&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&#34;Are Mutants a Valid Substitute for Real Faults in Software Testing?&#34; RenÃ© Just, Darioush Jalali, Laura Inozemtseva, Michael D. Ernst, Reid Holmes, and Gordon Fraser, FSE 2014 &lt;a href=&#34;https://people.cs.umass.edu/~rjust/publ/mutants_real_faults_fse_2014.pdf&#34;&gt;[download]&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&#34;Challenges in Using Search-Based Test Generation to Identify Real Faults in Mockito&#34; Gregory Gay, SSBSE 2016 &lt;a href=&#34;https://greg4cr.github.io/pdf/16mockito.pdf&#34;&gt;[download]&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&#34;Detecting Real Faults in the Gson Library Through Search-Based Unit Test Generation&#34; Gregory Gay, SSBSE 2018 &lt;a href=&#34;https://greg4cr.github.io/pdf/18gson.pdf&#34;&gt;[download]&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&#34;Defects4J as a Challenge Case for the Search-Based Software Engineering Community&#34; Gregory Gay and RenÃ© Just, SSBSE 2020 &lt;a href=&#34;https://greg4cr.github.io/pdf/20d4j.pdf&#34;&gt;[download]&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scholar.google.com/scholar?q=defects4j&#34;&gt;More publications&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Implementation details&lt;/h2&gt; &#xA;&lt;p&gt;Documentation for any script or module is available as &lt;a href=&#34;http://defects4j.org/html_doc/index.html&#34;&gt;HTML documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The directory structure of Defects4J is as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;defects4j&#xA;   |&#xA;   |--- project_repos:     The version control repositories of the provided projects.&#xA;   |&#xA;   |--- major:             The Major mutation framework.&#xA;   |&#xA;   |--- framework:         Libraries and executables of the core, test execution,&#xA;       |                   and bug-mining frameworks.&#xA;       |&#xA;       |--- bin:           Command line interface to Defects4J.&#xA;       |&#xA;       |--- bug-mining:    Bug-mining framework.&#xA;       |&#xA;       |--- core:          The modules of the core framework.&#xA;       |&#xA;       |--- lib:           Libraries used in the core framework.&#xA;       |&#xA;       |--- util:          Util scripts used by Defects4J.&#xA;       |&#xA;       |--- projects:      Project-specific resource files.&#xA;       |&#xA;       |--- test:          Scripts to test the framework.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Versioning information&lt;/h2&gt; &#xA;&lt;p&gt;Defects4J uses a semantic versioning scheme (&lt;code&gt;major&lt;/code&gt;.&lt;code&gt;minor&lt;/code&gt;.&lt;code&gt;patch&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Change&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;major&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;minor&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;patch&lt;/code&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Addition/Deletion of bugs&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;X&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;New/upgraded internal or external tools&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;X&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fixes and documentation changes&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;X&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT License, see &lt;a href=&#34;https://github.com/rjust/defects4j/raw/master/license.txt&#34;&gt;&lt;code&gt;license.txt&lt;/code&gt;&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SeanOBoyle/DoxygenFilterSystemVerilog</title>
    <updated>2022-08-01T01:51:09Z</updated>
    <id>tag:github.com,2022-08-01:/SeanOBoyle/DoxygenFilterSystemVerilog</id>
    <link href="https://github.com/SeanOBoyle/DoxygenFilterSystemVerilog" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>