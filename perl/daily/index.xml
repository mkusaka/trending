<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-30T01:38:01Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>theos/logos</title>
    <updated>2022-08-30T01:38:01Z</updated>
    <id>tag:github.com,2022-08-30:/theos/logos</id>
    <link href="https://github.com/theos/logos" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Preprocessor that simplifies Objective-C hooking.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Logos&lt;/h1&gt; &#xA;&lt;p&gt;Logos is a Perl regex-based preprocessor that simplifies the boilerplate code needed to create hooks for Objective-C methods and C functions with an elegant Objective-C-like syntax. Itâ€™s most commonly used along with the &lt;a href=&#34;https://theos.dev/docs/&#34;&gt;Theos&lt;/a&gt; build system, which was originally developed to create jailbreak tweaks. Logos was once integrated in the same Git repo as Theos, but now has been decoupled from Theos to its own repo.&lt;/p&gt; &#xA;&lt;p&gt;Logos aims to provide an interface for &lt;a href=&#34;http://cydiasubstrate.com/&#34;&gt;Cydia Substrate&lt;/a&gt; by default, but can be configured to directly use the Objective-C runtime.&lt;/p&gt; &#xA;&lt;p&gt;Documentation is available on the &lt;a href=&#34;https://theos.dev/docs/logos-syntax&#34;&gt;Logos Syntax&lt;/a&gt;, &lt;a href=&#34;https://theos.dev/docs/logify.pl&#34;&gt;Logify&lt;/a&gt;, and &lt;a href=&#34;https://theos.dev/docs/logos-file-extensions&#34;&gt;File Extensions&lt;/a&gt; pages of &lt;a href=&#34;https://theos.dev/docs/&#34;&gt;theos.dev&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;h3&gt;Source file: Tweak.x&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-logos&#34;&gt;%hook NSObject&#xA;&#xA;- (NSString *)description {&#xA;&#x9;return [%orig stringByAppendingString:@&#34; (of doom)&#34;];&#xA;}&#xA;&#xA;%new&#xA;- (void)helloWorld {&#xA;&#x9;NSLog(@&#34;Awesome!&#34;);&#xA;}&#xA;&#xA;%end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Logos-processed output: Tweak.x.m&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;(Modified for brevity)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-objc&#34;&gt;#include &amp;lt;substrate.h&amp;gt;&#xA;&#xA;static NSString *_logos_method$_ungrouped$NSObject$description(NSObject *self, SEL _cmd) {&#xA;&#x9;return [_logos_orig$_ungrouped$NSObject$description(self, _cmd) stringByAppendingString:@&#34; (of doom)&#34;];&#xA;}&#xA;&#xA;static void _logos_method$_ungrouped$NSObject$helloWorld(NSObject * self, SEL _cmd) {&#xA;&#x9;NSLog(@&#34;Awesome!&#34;);&#xA;}&#xA;&#xA;static __attribute__((constructor)) void _logosLocalInit() {&#xA;&#x9;Class _logos_class$_ungrouped$NSObject = objc_getClass(&#34;NSObject&#34;);&#xA;&#xA;&#x9;MSHookMessageEx(_logos_class$_ungrouped$NSObject, @selector(description), (IMP)&amp;amp;_logos_method$_ungrouped$NSObject$description, (IMP*)&amp;amp;_logos_orig$_ungrouped$NSObject$description);&#xA;&#xA;&#x9;class_addMethod(_logos_class$_ungrouped$NSObject, @selector(helloWorld), (IMP)&amp;amp;_logos_method$_ungrouped$NSObject$helloWorld, &#34;v@:&#34;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the GNU General Public License, version 3.0, with an exception that projects created using Logos are not required to use the same license. Refer to &lt;a href=&#34;https://raw.githubusercontent.com/theos/logos/master/LICENSE.md&#34;&gt;LICENSE.md&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wofr06/lesspipe</title>
    <updated>2022-08-30T01:38:01Z</updated>
    <id>tag:github.com,2022-08-30:/wofr06/lesspipe</id>
    <link href="https://github.com/wofr06/lesspipe" rel="alternate"></link>
    <summary type="html">&lt;p&gt;lesspipe - display more with less&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;lesspipe.sh, a preprocessor for less&lt;/h1&gt; &#xA;&lt;p&gt;Version: 2.06 Author : Wolfgang Friebel &lt;a href=&#34;mailto://wp.friebel@gmail.com&#34;&gt;wp.friebel@gmail.com&lt;/a&gt; License: GPL&lt;/p&gt; &#xA;&lt;p&gt;Latest version available as: &lt;a href=&#34;https://github.com/wofr06/lesspipe.sh/archive/lesspipe.zip&#34;&gt;zip file on github&lt;/a&gt; and the &lt;a href=&#34;https://github.com/wofr06/lesspipe&#34;&gt;repository on github&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The development version can be cloned using git: &lt;code&gt;git clone https://github.com/wofr06/lesspipe.git&lt;/code&gt; To report bugs or make proposals to improve lesspipe please contact the author by email.&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;Motivation&lt;/li&gt; &#xA; &lt;li&gt;Introduction&lt;/li&gt; &#xA; &lt;li&gt;Usage&lt;/li&gt; &#xA; &lt;li&gt;Required programs&lt;/li&gt; &#xA; &lt;li&gt;Supported file formats &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Supported compression methods and archive formats&lt;/li&gt; &#xA;   &lt;li&gt;List of preprocessed file types&lt;/li&gt; &#xA;   &lt;li&gt;Conversion of files with alternate character encoding&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Colorizing the output &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Syntax highlighting &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Syntax highlighting choices&lt;/li&gt; &#xA;     &lt;li&gt;List of supported languages&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Colored Directory listing&lt;/li&gt; &#xA;   &lt;li&gt;Colored listing of tar file contents&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Calling less from standard input&lt;/li&gt; &#xA; &lt;li&gt;Displaying files with special characters in the file name&lt;/li&gt; &#xA; &lt;li&gt;Tab completion for zsh and bash&lt;/li&gt; &#xA; &lt;li&gt;User defined filtering&lt;/li&gt; &#xA; &lt;li&gt;(Old) documentation about lesspipe&lt;/li&gt; &#xA; &lt;li&gt;External links - URLs to some utilities - References&lt;/li&gt; &#xA; &lt;li&gt;Contributors&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;0. Motivation&lt;/h2&gt; &#xA;&lt;p&gt;If you use&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;the pager &lt;code&gt;less&lt;/code&gt; in the command line,&lt;/li&gt; &#xA; &lt;li&gt;the version control system &lt;code&gt;git&lt;/code&gt;,&lt;/li&gt; &#xA; &lt;li&gt;the text editor &lt;code&gt;Vim&lt;/code&gt; or&lt;/li&gt; &#xA; &lt;li&gt;the mail client &lt;code&gt;mutt&lt;/code&gt;,&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;then lesspipe.sh enables these programs to &lt;em&gt;read&lt;/em&gt; non-text files, such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PDFs,&lt;/li&gt; &#xA; &lt;li&gt;(Microsoft or LibreOffice) Office documents, or even&lt;/li&gt; &#xA; &lt;li&gt;media (such as JPG or PNG images, MP3 audio or video) files&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;where &lt;em&gt;read&lt;/em&gt; means,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(format and) show the contained text (of a document or tag in a media file), or&lt;/li&gt; &#xA; &lt;li&gt;show sensible file information (such as length of the video).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To enable &lt;code&gt;less&lt;/code&gt; respectively &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;Vim&lt;/code&gt; or &lt;code&gt;mutt&lt;/code&gt; to read non-text files by lesspipe.sh, see&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Section 2 on the Usage of lesspipe.sh, respectively&lt;/li&gt; &#xA; &lt;li&gt;the Wiki at &lt;a href=&#34;https://github.com/wofr06/lesspipe/wiki&#34;&gt;https://github.com/wofr06/lesspipe/wiki&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For the text and info extraction, lesspipe.sh will depend on external tools, but many use cases are covered by an installation of&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;LibreOffice and a common text browser (such as &lt;code&gt;lynx&lt;/code&gt;),&lt;/li&gt; &#xA; &lt;li&gt;pdftotext, and&lt;/li&gt; &#xA; &lt;li&gt;mediainfo (or exiftool).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;1. Introduction&lt;/h2&gt; &#xA;&lt;p&gt;To browse files under UNIX the excellent viewer less [1] can be used. By setting the environment variable &lt;strong&gt;LESSOPEN&lt;/strong&gt;, less can be enhanced by external filters to become even more powerful. Most Linux distributions come already with a &#34;lesspipe.sh&#34; that covers the most common situations.&lt;/p&gt; &#xA;&lt;p&gt;The input filter for less described here is called &#34;lesspipe.sh&#34;. It is able to process a wide variety of file formats. It enables users to deeply inspect archives and to display the contents of files in archives without having to unpack them before. That means file contents can be properly interpreted even if the files are compressed and contained in a hierarchy of archives (often found in RPM or DEB archives containing source tarballs). The filter is easily extensible for new formats.&lt;/p&gt; &#xA;&lt;p&gt;The input filter which is also called &#34;lesspipe.sh&#34; is a bash script, but works as well as a zsh script.&lt;/p&gt; &#xA;&lt;p&gt;The filter does different things depending on the file format. In most cases it is determined on the output of the &lt;code&gt;file --mime&lt;/code&gt; command [2], [6], that returns the mime type. In some cases the mime type is to unspecific and then the &lt;code&gt;file&lt;/code&gt; command yielding a textual description or the file suffix is used to determine what to display.&lt;/p&gt; &#xA;&lt;h2&gt;2. Usage&lt;/h2&gt; &#xA;&lt;p&gt;(see also the man page lesspipe.1)&lt;/p&gt; &#xA;&lt;p&gt;To activate lesspipe.sh the environment variable &lt;strong&gt;LESSOPEN&lt;/strong&gt; has to be defined in the following way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        LESSOPEN=&#34;|lesspipe.sh %s&#34;; export LESSOPEN  # (sh like shells)&#xA;        setenv LESSOPEN &#34;|lesspipe.sh %s&#34;            # (csh, tcsh)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If &lt;code&gt;lesspipe.sh&lt;/code&gt; is not in the UNIX search path or if the wrong &lt;code&gt;lesspipe.sh&lt;/code&gt; is found in the search path, then the full path to &lt;code&gt;lesspipe.sh&lt;/code&gt; should be given in the above commands.&lt;/p&gt; &#xA;&lt;p&gt;The command to set &lt;strong&gt;LESSOPEN&lt;/strong&gt; can also be displayed by calling &lt;code&gt;lesspipe.sh&lt;/code&gt; without arguments. This can even be used to set &lt;strong&gt;LESSOPEN&lt;/strong&gt; directly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        eval lesspipe.sh                  # (bash) or&#xA;        lesspipe.sh | source /dev/stdin   # (zsh)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As &lt;code&gt;lesspipe.sh&lt;/code&gt; is accepting only a single argument, a hierarchical list of file names has to be separated by a non blank character. A colon is rarely found in file names, therefore it has been chosen as the separator character. If a file name does however contain at least one isolated colon, the equal sign = can be used as an alternate separator character. At each stage in extracting files from such a hierarchy the file type is determined. This guarantees a correct processing and display at each stage of the filtering.&lt;/p&gt; &#xA;&lt;p&gt;To view files in multifile archives the following command can be used:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        less archive_file:contained_file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This can be used to extract single files from a multifile archive:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        less archive_file:contained_file &amp;gt; extracted_file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For extracting files less is not required, that can be done also using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        lesspipe.sh archive_file:contained_file &amp;gt; extracted_file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Even a file in a multifile archive that itself is contained in yet another archive can be viewed this way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        less super_archive:archive_file:contained_file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The script is able to extract files up to a depth of 6 where applying a decompression algorithm counts as a separate level. In a few rare cases the file command does not recognize the correct format. In such cases the filtering can be suppressed by a trailing colon on the file name. That can also be used to output the original unmodified file or to suppress syntax highlighting (see below).&lt;/p&gt; &#xA;&lt;p&gt;Several environment variables can influence the behavior of lesspipe.sh.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;LESSQUIET&lt;/strong&gt; will suppress additional output not belonging to the file contents if set to a non empty value.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;LESS&lt;/strong&gt; can be used to switch on colored less output (should contain -R).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;LESSCOLORIZER&lt;/strong&gt; can be set to prefer a highlighting program from the following choices (&lt;code&gt;bat&lt;/code&gt; &lt;code&gt;batcat&lt;/code&gt; &lt;code&gt;pygmentize&lt;/code&gt; &lt;code&gt;source-highlight&lt;/code&gt; &lt;code&gt;code2color&lt;/code&gt; &lt;code&gt;vimcolor&lt;/code&gt;). Otherwise the first program in that list that is installed will be used.&lt;/p&gt; &#xA;&lt;h2&gt;3. Required programs&lt;/h2&gt; &#xA;&lt;p&gt;Most of the programs are checked for its existence before they get called in lesspipe.sh. However some of the programs are assumed to always be installed. That is foremost &lt;code&gt;bash&lt;/code&gt; or &lt;code&gt;zsh&lt;/code&gt; (have the appropriate first line in the script), then &lt;code&gt;file&lt;/code&gt; and other utilities like &lt;code&gt;cat&lt;/code&gt;, &lt;code&gt;dd&lt;/code&gt;, &lt;code&gt;grep&lt;/code&gt;, &lt;code&gt;gzip&lt;/code&gt;, &lt;code&gt;ln&lt;/code&gt;, &lt;code&gt;ls&lt;/code&gt;, &lt;code&gt;mkdir&lt;/code&gt;, &lt;code&gt;rm&lt;/code&gt;, &lt;code&gt;sed&lt;/code&gt;, &lt;code&gt;strings&lt;/code&gt; and &lt;code&gt;tar&lt;/code&gt;. For testing and configuring lesspipe.sh &lt;code&gt;perl&lt;/code&gt; is used, that is however not required in just using &lt;code&gt;lesspipe.sh&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;4. Supported file formats&lt;/h2&gt; &#xA;&lt;p&gt;Currently &lt;code&gt;lesspipe.sh&lt;/code&gt; [3] supports the following compression methods and file types (i.e. the file contents gets transformed by &lt;code&gt;lesspipe.sh&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;h3&gt;4.1 Supported compression methods and archive formats&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;gzip, compress requires &lt;code&gt;gzip&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;bzip2 requires &lt;code&gt;bzip2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;lzma requires &lt;code&gt;lzma&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;xz requires &lt;code&gt;xz&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;zstd requires &lt;code&gt;zstd&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;brotli requires &lt;code&gt;bro&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;lz4 requires &lt;code&gt;lz4&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;tar requires optionally &lt;code&gt;archive_color&lt;/code&gt; for coloring&lt;/li&gt; &#xA; &lt;li&gt;ar library requires &lt;code&gt;bsdtar&lt;/code&gt; or &lt;code&gt;ar&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;zip archive requires &lt;code&gt;bsdtar&lt;/code&gt; or &lt;code&gt;unzip&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;jar archive requires &lt;code&gt;bsdtar&lt;/code&gt; or &lt;code&gt;unzip&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;rar archive requires &lt;code&gt;bsdtar&lt;/code&gt; or &lt;code&gt;unrar or &lt;/code&gt;rar`&lt;/li&gt; &#xA; &lt;li&gt;7-zip archive requires &lt;code&gt;7zr&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;lzip archive requires &lt;code&gt;lzip&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;iso images requires &lt;code&gt;bsdtar&lt;/code&gt; or &lt;code&gt;isoinfo&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;rpm requires &lt;code&gt;rpm2cpio&lt;/code&gt; and &lt;code&gt;cpio&lt;/code&gt; or &lt;code&gt;bsdtar&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Debian requires &lt;code&gt;bsdtar&lt;/code&gt; or &lt;code&gt;ar&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;cab requires &lt;code&gt;cabextract&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4.2 List of preprocessed file types&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;directory displayed using &lt;code&gt;ls -lA&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;nroff(man) requires &lt;code&gt;groff&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;shared library requires &lt;code&gt;nm&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;MS Word (doc) requires &lt;code&gt;wvText&lt;/code&gt; or &lt;code&gt;antiword&lt;/code&gt; or &lt;code&gt;catdoc&lt;/code&gt; or &lt;code&gt;libreoffice&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Powerpoint (ppt) requires &lt;code&gt;catppt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Excel (xls) requires &lt;code&gt;in2csv&lt;/code&gt; (csvkit) or &lt;code&gt;xls2csv&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;odt requires &lt;code&gt;pandoc&lt;/code&gt; or &lt;code&gt;odt2txt&lt;/code&gt; or &lt;code&gt;libreoffice&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;odp requires &lt;code&gt;libreoffice&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;ods requires &lt;code&gt;xlscat&lt;/code&gt; or &lt;code&gt;libreoffice&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;MS Word (docx) requires &lt;code&gt;pandoc&lt;/code&gt; or &lt;code&gt;docx2txt&lt;/code&gt; or &lt;code&gt;libreoffice&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Powerpoint (pptx) requires &lt;code&gt;pptx2md&lt;/code&gt; or &lt;code&gt;libreoffice&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Excel (xlsx) requires &lt;code&gt;in2csv&lt;/code&gt; or &lt;code&gt;xlscat&lt;/code&gt; or &lt;code&gt;excel2csv&lt;/code&gt; or &lt;code&gt;libreoffice&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;rtf requires &lt;code&gt;unrtf&lt;/code&gt; or &lt;code&gt;libreoffice&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;epub requires &lt;code&gt;pandoc&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;html,xml requires &lt;code&gt;w3m&lt;/code&gt; or &lt;code&gt;lynx&lt;/code&gt; or &lt;code&gt;elinks&lt;/code&gt; or &lt;code&gt;html2text&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;pdf requires &lt;code&gt;pdftotext&lt;/code&gt; or &lt;code&gt;pdftohtml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;perl pod requires &lt;code&gt;pod2text&lt;/code&gt; or &lt;code&gt;perldoc&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;dvi requires &lt;code&gt;dvi2tty&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;djvu requires &lt;code&gt;djvutxt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;ps requires &lt;code&gt;ps2ascii&lt;/code&gt; (from the gs package)&lt;/li&gt; &#xA; &lt;li&gt;mp3 requires &lt;code&gt;id3v2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;multimedia formats requires &lt;code&gt;mediainfo&lt;/code&gt; or &lt;code&gt;exiftools&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;image formats requires &lt;code&gt;mediainfo&lt;/code&gt; or &lt;code&gt;exiftools&lt;/code&gt; or &lt;code&gt;identify&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;hdf, nc4 requires &lt;code&gt;h5dump&lt;/code&gt; or &lt;code&gt;ncdump&lt;/code&gt; (NetCDF format)&lt;/li&gt; &#xA; &lt;li&gt;crt, pem, csr, crl requires &lt;code&gt;openssl&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;matlab requires &lt;code&gt;matdump&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jupyter notebook requires &lt;code&gt;pandoc&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;markdown requires &lt;code&gt;mdcat&lt;/code&gt; or &lt;code&gt;pandoc&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;log requires &lt;code&gt;ccze&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;java.class requires &lt;code&gt;procyon&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;MacOS X plist requires &lt;code&gt;plistutil&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;binary data requires &lt;code&gt;strings&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To show the unmodified html, xml or perl pod text append a colon to the file name. Appending in addition the file type (html, xml, pod) produces a colored output if the conditions for colorizing (see below) are met.&lt;/p&gt; &#xA;&lt;h3&gt;4.3 Conversion of files with alternate character encoding&lt;/h3&gt; &#xA;&lt;p&gt;If the file utility reports text with an encoding different from the one used in the terminal then the text will be transformed using &lt;code&gt;iconv&lt;/code&gt; into the default encoding. This does assume the file command gets the file encoding right, which can be wrong in some situations. An appended colon to the file name does suppress the conversion.&lt;/p&gt; &#xA;&lt;h2&gt;5. Colorizing the output&lt;/h2&gt; &#xA;&lt;p&gt;Syntax highlighting and other methods of colorizing the output is only activated if the environment variable &lt;strong&gt;LESS&lt;/strong&gt; is existing and contains the option -R (or -r) or less is called with one of these options.&lt;/p&gt; &#xA;&lt;p&gt;The display of wrapped long lines and moving backward in a file using the option -r can give weird output and is not recommended. For an explanation see &lt;a href=&#34;http://www.greenwoodsoftware.com/less/faq.html#dashr&#34;&gt;http://www.greenwoodsoftware.com/less/faq.html#dashr&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;5.1 Syntax highlighting&lt;/h3&gt; &#xA;&lt;p&gt;Syntax highlighting is not always wanted, it can be switched off by appending a colon after the file name. If the wrong language was chosen for syntax highlighting or no language was recognized, then the correct one can be forced by appending a colon and a suffix to the file name as follows (assuming plfile is a file with perl syntax):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        less plfile:pl or less plfile:perl (depending on the colorizer)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;5.1.1 Syntax highlighting choices&lt;/h4&gt; &#xA;&lt;p&gt;The filter is able to do syntax highlighting for a wide variety of file types. If installed, &lt;code&gt;bat&lt;/code&gt;/&lt;code&gt;batcat&lt;/code&gt; is used for coloring the output. If not, &lt;code&gt;pygmentize&lt;/code&gt;, &lt;code&gt;source-highlight&lt;/code&gt;, &lt;code&gt;code2color&lt;/code&gt; and &lt;code&gt;vimcolor&lt;/code&gt; are tried. Among these colorizers a preferred one can be forced for coloring by setting the ENV variable &lt;strong&gt;LESSCOLORIZER&lt;/strong&gt; to the name of the colorizer. For &lt;code&gt;pygmentize&lt;/code&gt; also a style option can be set:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        LESSCOLORIZER=&#39;pygmentize -O style=somename&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Much better syntax highlighting is obtained using the &lt;code&gt;less&lt;/code&gt; emulation of &lt;code&gt;vim&lt;/code&gt;: The editor &lt;code&gt;vim&lt;/code&gt; comes with a file &lt;code&gt;less.sh&lt;/code&gt;, e.g. on Ubuntu located in /usr/share/vim/vimXX/macros (XX being the version number). Assuming that file location a function &lt;code&gt;lessc&lt;/code&gt; (bash, zsh, ksh users)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        lessc () { /usr/share/vim/vimXX/macros/less.sh &#34;$@&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;is defined and &lt;code&gt;lessc filename&lt;/code&gt; is used to view the colorful file contents. The same can be achieved using less and &lt;code&gt;vimcolor&lt;/code&gt;, but that is much slower.&lt;/p&gt; &#xA;&lt;h4&gt;5.1.2 List of supported languages&lt;/h4&gt; &#xA;&lt;p&gt;To see which languages are supported the list can be printed using the following colorizer commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bat --list-languages&#xA;batcat --list-languages&#xA;pygmentize -L lexers&#xA;source-highlight --lang-list&#xA;code2color -h&#xA;vim -c &#34;echo getcompletion(&#39;&#39;, &#39;filetype&#39;)&#34; -c quit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;5.2 Colored Directory listing&lt;/h3&gt; &#xA;&lt;p&gt;Depending on the operating system ls is called with appropriate options to produce colored output.&lt;/p&gt; &#xA;&lt;h3&gt;5.3 Colored listing of tar file contents&lt;/h3&gt; &#xA;&lt;p&gt;If the executable archive_color is installed, then the listing of tar file contents is colored in a similar fashion as directory contents.&lt;/p&gt; &#xA;&lt;h2&gt;6. Calling less from standard input&lt;/h2&gt; &#xA;&lt;p&gt;Normally &lt;code&gt;lesspipe.sh&lt;/code&gt; is not called when less is used within a pipe such as&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        cat somefile | less&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This restriction is removed when the &lt;strong&gt;LESSOPEN&lt;/strong&gt; variable starts with the characters |- or ||-. Then the colon notation for extracting and displaying files in archives does not work. As a way out &lt;code&gt;lesspipe.sh&lt;/code&gt; analyses the command line and looks for the last argument given to less. If it starts with a colon, it is interpreted from &lt;code&gt;lesspipe.sh&lt;/code&gt; as a continuation of the first parameter. Examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        cat some_c_file | less - :c          # equivalent to less some_c_file:c&#xA;        cat archive | less - :contained_file # extracts a file from the archive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;7. Displaying files with special characters in the file name&lt;/h2&gt; &#xA;&lt;p&gt;Shell meta characters in file names: space (frequently used in windows file names),&lt;/p&gt; &#xA;&lt;p&gt;the characters | &amp;amp; ; ( ) ` &amp;lt; &amp;gt; &#34; &#39; # ~ = $ * ? [ ] or \&lt;/p&gt; &#xA;&lt;p&gt;must be escaped by a \ when used in the shell, e.g. &lt;code&gt;less a\ b.tar.gz:a\\&#34;b&lt;/code&gt; will display the file a&#34;b contained in the gzipped tar archive a b.tar.gz.&lt;/p&gt; &#xA;&lt;h2&gt;8. Tab completion for zsh and bash&lt;/h2&gt; &#xA;&lt;p&gt;An existing &lt;code&gt;zsh&lt;/code&gt; completion script has been enhanced to provide tab completion within archives similar to what is possible with the &lt;code&gt;tar&lt;/code&gt; command completion. A &lt;code&gt;bash&lt;/code&gt; completion script has been modeled loosely after the &lt;code&gt;zsh&lt;/code&gt; completion.&lt;/p&gt; &#xA;&lt;p&gt;In both shells it is now possible to complete contents of archive format files such as tar, zip, rpm, deb files etc. This works as well in compressed files (e.g. tar.gz) and in chained archives, e.g.in source rpm files containing tar.gz files.&lt;/p&gt; &#xA;&lt;p&gt;To make it work, the script &lt;code&gt;lesscomplete&lt;/code&gt; has to be executable and must be found in one of the directories listed in the &lt;code&gt;$PATH&lt;/code&gt; environment variable. For zsh the file &lt;code&gt;_less&lt;/code&gt; has to be stored in one of the directories listed in &lt;code&gt;$fpath&lt;/code&gt; or the directory containig &lt;code&gt;_less&lt;/code&gt; has to be added to &lt;code&gt;$fpath&lt;/code&gt;, e.g. by:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        fpath=(~/zsh_functions $fpath)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In bash the function &lt;code&gt;less_completion&lt;/code&gt; has to be added to the shell environment by sourcing the script (e.g. from .bashrc using the correct location):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        source ~/bash_functions/less_completion&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The completion mechanism is triggered after entering a colon or an equal sign as for example in&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;        less archive_file:&amp;lt;TAB&amp;gt;                   # and then&#xA;        less archive_file:partial_result&amp;lt;TAB&amp;gt;&#xA;        less archive_file:contained_archive:&amp;lt;TAB&amp;gt; # etc.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;9. User defined filtering&lt;/h2&gt; &#xA;&lt;p&gt;The lesspipe.sh filtering can be replaced or enhanced by a user defined program. Such a program has to be called either &lt;code&gt;.lessfilter&lt;/code&gt; (and be placed in the users home directory), or &lt;code&gt;lessfilter&lt;/code&gt; (and be accessible from a directory mentioned in the environment variable &lt;code&gt;PATH&lt;/code&gt;). That program has to be executable and has to end with an exit code 0, if the filtering was done within that script. Otherwise, a nonzero exit code means the filtering is left to lesspipe.sh.&lt;/p&gt; &#xA;&lt;p&gt;This mechanism can be used to add filtering for new formats or e.g. inhibit filtering for certain file types.&lt;/p&gt; &#xA;&lt;h2&gt;10. (Old) documentation about lesspipe&lt;/h2&gt; &#xA;&lt;p&gt;In English&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ref.web.cern.ch/CERN/CNL/2002/001/unix-less/&#34;&gt;https://ref.web.cern.ch/CERN/CNL/2002/001/unix-less/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.oreilly.com/library/view/bash-cookbook/0596526784/ch08s15.html&#34;&gt;https://www.oreilly.com/library/view/bash-cookbook/0596526784/ch08s15.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In German:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;german.txt (distributed with lesspipe, not updated)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linux-magazin.de/ausgaben/2001/01/bessere-sicht/&#34;&gt;https://www.linux-magazin.de/ausgaben/2001/01/bessere-sicht/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linux-community.de/ausgaben/linuxuser/2002/04/lesspipe/&#34;&gt;https://www.linux-community.de/ausgaben/linuxuser/2002/04/lesspipe/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;11. External links&lt;/h2&gt; &#xA;&lt;p&gt;(last checked: Nov 30 2021):&lt;/p&gt; &#xA;&lt;h3&gt;11.1 URLs to some utilities (with last known release)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;7zr &lt;a href=&#34;https://sourceforge.net/projects/p7zip/&#34;&gt;https://sourceforge.net/projects/p7zip/&lt;/a&gt; (2016)&lt;/li&gt; &#xA; &lt;li&gt;antiword &lt;a href=&#34;https://www.winfield.demon.nl/&#34;&gt;https://www.winfield.demon.nl/&lt;/a&gt; (2005)&lt;/li&gt; &#xA; &lt;li&gt;cabextract &lt;a href=&#34;https://www.cabextract.org.uk/&#34;&gt;https://www.cabextract.org.uk/&lt;/a&gt; (2019)&lt;/li&gt; &#xA; &lt;li&gt;catdoc,catppt,xls2csv &lt;a href=&#34;https://www.wagner.pp.ru/~vitus/software/catdoc/&#34;&gt;https://www.wagner.pp.ru/~vitus/software/catdoc/&lt;/a&gt; (2016)&lt;/li&gt; &#xA; &lt;li&gt;ccze &lt;a href=&#34;https://github.com/cornet/ccze&#34;&gt;https://github.com/cornet/ccze&lt;/a&gt; (2011)&lt;/li&gt; &#xA; &lt;li&gt;djvutxt &lt;a href=&#34;https://sourceforge.net/projects/djvu/&#34;&gt;https://sourceforge.net/projects/djvu/&lt;/a&gt; (2021)&lt;/li&gt; &#xA; &lt;li&gt;docx2txt &lt;a href=&#34;https://docx2txt.sourceforge.net/&#34;&gt;https://docx2txt.sourceforge.net/&lt;/a&gt; (2014)&lt;/li&gt; &#xA; &lt;li&gt;dvi2tty &lt;a href=&#34;https://www.ctan.org/tex-archive/dviware/dvi2tty/&#34;&gt;https://www.ctan.org/tex-archive/dviware/dvi2tty/&lt;/a&gt; (2016)&lt;/li&gt; &#xA; &lt;li&gt;excel2csv &lt;a href=&#34;https://github.com/informationsea/excel2csv&#34;&gt;https://github.com/informationsea/excel2csv&lt;/a&gt; (2018)&lt;/li&gt; &#xA; &lt;li&gt;html2text &lt;a href=&#34;https://www.mbayer.de/html2text/&#34;&gt;https://www.mbayer.de/html2text/&lt;/a&gt; (2016 version 1.3.2a)&lt;/li&gt; &#xA; &lt;li&gt;id3v2 &lt;a href=&#34;https://id3v2.sourceforge.net/&#34;&gt;https://id3v2.sourceforge.net/&lt;/a&gt; (2010)&lt;/li&gt; &#xA; &lt;li&gt;lzip &lt;a href=&#34;https://download.savannah.gnu.org/releases/lzip/&#34;&gt;https://download.savannah.gnu.org/releases/lzip/&lt;/a&gt; (2021)&lt;/li&gt; &#xA; &lt;li&gt;matdump &lt;a href=&#34;https://github.com/tbeu/matio&#34;&gt;https://github.com/tbeu/matio&lt;/a&gt; (2021)&lt;/li&gt; &#xA; &lt;li&gt;mediainfo &lt;a href=&#34;https://mediaarea.net/MediaInfo/&#34;&gt;https://mediaarea.net/MediaInfo/&lt;/a&gt; (2021)&lt;/li&gt; &#xA; &lt;li&gt;odt2txt &lt;a href=&#34;https://github.com/dstosberg/odt2txt&#34;&gt;https://github.com/dstosberg/odt2txt&lt;/a&gt; (2017)&lt;/li&gt; &#xA; &lt;li&gt;pandoc &lt;a href=&#34;https://pandoc.org/&#34;&gt;https://pandoc.org/&lt;/a&gt; (2021)&lt;/li&gt; &#xA; &lt;li&gt;pptx2md &lt;a href=&#34;https://github.com/ssine/pptx2md&#34;&gt;https://github.com/ssine/pptx2md&lt;/a&gt; (2021)&lt;/li&gt; &#xA; &lt;li&gt;tarcolor &lt;a href=&#34;https://github.com/msabramo/tarcolor&#34;&gt;https://github.com/msabramo/tarcolor&lt;/a&gt; (modified, 2021)&lt;/li&gt; &#xA; &lt;li&gt;unrtf &lt;a href=&#34;https://ftp.gnu.org/gnu/unrtf/&#34;&gt;https://ftp.gnu.org/gnu/unrtf/&lt;/a&gt; (2018)&lt;/li&gt; &#xA; &lt;li&gt;wvText &lt;a href=&#34;https://github.com/AbiWord/wv/&#34;&gt;https://github.com/AbiWord/wv/&lt;/a&gt; (2014)&lt;/li&gt; &#xA; &lt;li&gt;xlscat &lt;a href=&#34;https://metacpan.org/pod/Spreadsheet::Read&#34;&gt;https://metacpan.org/pod/Spreadsheet::Read&lt;/a&gt; (2021)&lt;/li&gt; &#xA; &lt;li&gt;sxw2txt &lt;a href=&#34;https://vinc17.net/software/sxw2txt&#34;&gt;https://vinc17.net/software/sxw2txt&lt;/a&gt; (2015)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;11.2 References&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[1] &lt;a href=&#34;http://www.greenwoodsoftware.com/less/&#34;&gt;http://www.greenwoodsoftware.com/less/&lt;/a&gt; (less)&lt;/li&gt; &#xA; &lt;li&gt;[2] &lt;a href=&#34;ftp://ftp.astron.com/pub/file/&#34;&gt;ftp://ftp.astron.com/pub/file/&lt;/a&gt; (file)&lt;/li&gt; &#xA; &lt;li&gt;[3] &lt;a href=&#34;https://github.com/wofr06/lesspipe&#34;&gt;https://github.com/wofr06/lesspipe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;[5] &lt;a href=&#34;http://www.palfrader.org/code2html/&#34;&gt;http://www.palfrader.org/code2html/&lt;/a&gt; (code2html)&lt;/li&gt; &#xA; &lt;li&gt;[6] &lt;a href=&#34;http://www.darwinsys.com/file/&#34;&gt;http://www.darwinsys.com/file/&lt;/a&gt; (file)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;12. Contributors&lt;/h2&gt; &#xA;&lt;p&gt;The script lesspipe.sh is constantly enhanced by suggestions from users and reporting bugs or deficiencies. Thanks to (in alphabetical order): (contributors after Sep 2015 see github history)&lt;/p&gt; &#xA;&lt;p&gt;Marc Abramowitz, James Ahlborn, SÃ¶ren Andersen, Andrew Barnert, Peter D. Barnes, Jr., Eduard Bloch, Mathieu Bouillaguet, Florian Cramer, Philippe Defert, Antonio Diaz Diaz, Bastian Fuchs, Matt Ghali, Carl Greco, Stephan Hegel, Michel Hermier, Tobias Hoffmann, Christian HÃ¶ltje, JÃ¼rgen Kahnert, Sebastian Kayser, Ben Kibbey, Peter Kostka, Heinrich Kuettler, Antony Lee, Vincent LefÃ¨vre, David Leverton, Jay Levitt, Vladimir Linek, Oliver Mangold, Istvan Marko, Markus Meyer, Remi Mommsen, Derek B. Noonburg, Martin Otte, Jim Pryor, Slaven Rezic, Daniel Risacher, Jens Schleusener, Ken Teague, Matt Thompson, Paul Townsend, Petr Uzel, Chelban Vasile, GÃ¶tz Waschk, Michael Wiedmann, Dale Wijnand, Peter Wu.&lt;/p&gt;</summary>
  </entry>
</feed>