<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-28T01:41:46Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pawjy/karasuma-config</title>
    <updated>2023-07-28T01:41:46Z</updated>
    <id>tag:github.com,2023-07-28:/pawjy/karasuma-config</id>
    <link href="https://github.com/pawjy/karasuma-config" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Perl modules for loading configurations&lt;/p&gt;&lt;hr&gt;&lt;p&gt;=head1 NAME&lt;/p&gt; &#xA;&lt;p&gt;Karasuma::Config::JSON - A JSON-based application configuration loader&lt;/p&gt; &#xA;&lt;p&gt;=head1 SYNOPSIS&lt;/p&gt; &#xA;&lt;p&gt;use Karasuma::Config::JSON; use Path::Class;&lt;/p&gt; &#xA;&lt;p&gt;$json_f = file(&#34;config.json&#34;); $config = Karasuma::Config::JSON-&amp;gt;new_from_json_f($json_f); $config-&amp;gt;base_d(dir(&#34;config/data&#34;)); warn $config-&amp;gt;get_text(&#34;hoge&#34;); warn $config-&amp;gt;get_file_text(&#34;fuga&#34;);&lt;/p&gt; &#xA;&lt;p&gt;=head1 DESCRIPTION&lt;/p&gt; &#xA;&lt;p&gt;The C&lt;a href=&#34;Karasuma::Config::JSON&#34;&gt;Karasuma::Config::JSON&lt;/a&gt; module is an application configuration loader, which reads JSON file and extracts values written directly or indirectly in the file.&lt;/p&gt; &#xA;&lt;p&gt;=head1 METHODS&lt;/p&gt; &#xA;&lt;p&gt;=over 4&lt;/p&gt; &#xA;&lt;p&gt;=item $config = Karasuma::Config::JSON-&amp;gt;new_from_json_f($f)&lt;/p&gt; &#xA;&lt;p&gt;Create a new instance of the configuration loader with specified JSON file. The argument to the method must be a L&lt;a href=&#34;Path::Class::File&#34;&gt;Path::Class::File&lt;/a&gt; object for the JSON file.&lt;/p&gt; &#xA;&lt;p&gt;=item $config-&amp;gt;base_d($d)&lt;/p&gt; &#xA;&lt;p&gt;Set the base directory for the indirect configuration values. The argument to the method must be a L&lt;a href=&#34;Path::Class::Dir&#34;&gt;Path::Class::Dir&lt;/a&gt; object for the directory.&lt;/p&gt; &#xA;&lt;p&gt;=item $config = Karasuma::Config::JSON-&amp;gt;new_from_env&lt;/p&gt; &#xA;&lt;p&gt;Create a new instance of the configuration loader using environment variables. Two environment variable must be set before the invocation of the method. The C&amp;lt;KARASUMA_CONFIG_JSON&amp;gt; variable identifies the JSON file (same as the argument to the C&amp;lt;new_from_json_f&amp;gt; method). The C&amp;lt;KARASUMA_CONFIG_FILE_DIR_NAME&amp;gt; variable identifies the base directory (same as the argument to the C&amp;lt;base_d&amp;gt; method).&lt;/p&gt; &#xA;&lt;p&gt;=item $config = Karasuma::Config::JSON-&amp;gt;new_from_config_data($hash)&lt;/p&gt; &#xA;&lt;p&gt;Create a new instance of the configuration loader using the Perl hash corresponding to the content of the JSON configuration file. This method would be useful when you have already parsed JSON data or for test scripts.&lt;/p&gt; &#xA;&lt;p&gt;=item $value = $config-&amp;gt;get_text($key)&lt;/p&gt; &#xA;&lt;p&gt;Return the textual value in the JSON file with the specified key. If the JSON file contains the object which has the name/value pair whose name is the argument to the method, its value is returned. Otherwise, the C&#xA; &lt;undef&gt;&#xA;   value is returned.&#xA; &lt;/undef&gt;&lt;/p&gt; &#xA;&lt;p&gt;=item $value = $config-&amp;gt;get_file_text($key)&lt;/p&gt; &#xA;&lt;p&gt;Return the textual value in the file whose name is specified in the JSON file with the specified key. If the JSON file contains the object which has the name/value pair whose name is the argument to the method, and if resolving the value as the file name relative to the base directory (specified by the C&amp;lt;base_d&amp;gt; method) results in a file, then the content of the file is returned by interpreting it as a UTF-8 encoded text. Otherwise, the C&#xA; &lt;undef&gt;&#xA;   value is returned.&#xA; &lt;/undef&gt;&lt;/p&gt; &#xA;&lt;p&gt;=item $value = $config-&amp;gt;get_file_base64_text($key)&lt;/p&gt; &#xA;&lt;p&gt;Return the textual value in the Base64-encoded file whose name is specified in the JSON file with the specified key. If the JSON file contains the object which has the name/value pair whose name is the argument to the method, and if resolving the value as the file name relative to the base directory (specified by the C&amp;lt;base_d&amp;gt; method) results in a file, then the content of the file is returned by interpreting it as a Base64-encoded UTF-8 text. Otherwise, the C&#xA; &lt;undef&gt;&#xA;   value is returned.&#xA; &lt;/undef&gt;&lt;/p&gt; &#xA;&lt;p&gt;=item $value = $config-&amp;gt;get_file_json($key)&lt;/p&gt; &#xA;&lt;p&gt;Return the JSON-decoded data structure in the file whose name is specified in the JSON file with the specified key. If the JSON file contains the object which has the name/value pair whose name is the argument to the method, and if resolving the value as the file name relative to the base directory (specified by the C&amp;lt;base_d&amp;gt; method) results in a file, then the content of the file is returned by interpreting it as a JSON-encoded data. Otherwise, the C&#xA; &lt;undef&gt;&#xA;   value is returned.&#xA; &lt;/undef&gt;&lt;/p&gt; &#xA;&lt;p&gt;=item $value = $config-&amp;gt;get_file_json_base64values($key)&lt;/p&gt; &#xA;&lt;p&gt;Return the JSON-decoded pairs of names and Base64-decoded values in the file whose name is specified in the JSON file with the specified key. If the JSON file contains the object which has the name/value pair whose name is the argument to the method, and if resolving the value as the file name relative to the base directory (specified by the C&amp;lt;base_d&amp;gt; method) results in a file, then the content of the file is returned by interpreting it as a JSON-encoded name/value pairs where values are encoded in Base64. Otherwise, the C&#xA; &lt;undef&gt;&#xA;   value is returned.&#xA; &lt;/undef&gt;&lt;/p&gt; &#xA;&lt;p&gt;=back&lt;/p&gt; &#xA;&lt;p&gt;=head1 EXAMPLE&lt;/p&gt; &#xA;&lt;p&gt;See C&amp;lt;t/config-json.t&amp;gt; and C&amp;lt;t/data/test1.json&amp;gt;.&lt;/p&gt; &#xA;&lt;p&gt;=head1 DEPENDENCY&lt;/p&gt; &#xA;&lt;p&gt;The module supports Perl 5.8 or later. Following modules are required:&lt;/p&gt; &#xA;&lt;p&gt;L&#xA; &lt;encode&gt;&#xA;  , L&#xA;  &lt;a href=&#34;MIME::Base64&#34;&gt;MIME::Base64&lt;/a&gt;.&#xA; &lt;/encode&gt;&lt;/p&gt; &#xA;&lt;p&gt;L&lt;a href=&#34;Path::Class&#34;&gt;Path::Class&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;L&lt;a href=&#34;JSON::Functions::XS&#34;&gt;JSON::Functions::XS&lt;/a&gt; &lt;a href=&#34;https://github.com/wakaba/perl-json-functions-xs&#34;&gt;https://github.com/wakaba/perl-json-functions-xs&lt;/a&gt; and L&lt;a href=&#34;JSON::XS&#34;&gt;JSON::XS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;=head1 AUTHOR&lt;/p&gt; &#xA;&lt;p&gt;Wakaba &lt;a href=&#34;mailto:wakaba@suikawiki.org&#34;&gt;wakaba@suikawiki.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;=head1 History&lt;/p&gt; &#xA;&lt;p&gt;This repository was located at &lt;a href=&#34;https://github.com/wakaba/karasuma-config&#34;&gt;https://github.com/wakaba/karasuma-config&lt;/a&gt; until April 17, 2022, then transferred to &lt;a href=&#34;https://github.com/pawjy/karasuma-config&#34;&gt;https://github.com/pawjy/karasuma-config&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;=head1 LICENSE&lt;/p&gt; &#xA;&lt;p&gt;Copyright 2012 Hatena &lt;a href=&#34;http://www.hatena.ne.jp/&#34;&gt;http://www.hatena.ne.jp/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself.&lt;/p&gt; &#xA;&lt;p&gt;=cut&lt;/p&gt;</summary>
  </entry>
</feed>