<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-05T01:31:23Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>govtrack/legacy-scrapers</title>
    <updated>2024-03-05T01:31:23Z</updated>
    <id>tag:github.com,2024-03-05:/govtrack/legacy-scrapers</id>
    <link href="https://github.com/govtrack/legacy-scrapers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ARCHIVAL - Old Perl scrapers for collecting U.S. legislative information.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;These are the Perl screen-scrapers that build the GovTrack.us legislative database. The files are licensed under the terms of the GNU AGPL, and I am very serious about the terms of the license. You may not modify these files without sharing your modifications.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Getting The Source Code&lt;/h2&gt; &#xA;&lt;p&gt;The scripts will only work on a Linux-like computer.&lt;/p&gt; &#xA;&lt;p&gt;Check out the source code into a directory called &#34;gather&#34;: svn co svn://occams.info/govtrack/gather/us gather&lt;/p&gt; &#xA;&lt;h2&gt;Setting Up Perl&lt;/h2&gt; &#xA;&lt;p&gt;To use these scripts, you&#39;ll need a ton of Perl modules installed. You can look at the use directives to see which. A quick way to install them all would be to run as root:&lt;/p&gt; &#xA;&lt;p&gt;cpan &lt;code&gt;grep &#34;^use&#34; * |sed -e &#34;s/.*:use \(\S*\)[; ].*/\\1/&#34;|sort|uniq&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll need the (non-Perl) GD image library development files installed first.&lt;/p&gt; &#xA;&lt;p&gt;Some other modules may still need to be installed (DateTime::Locale, DBD::mysql, perhaps others). Running the script (see below) will tell you if it is missing any dependancies, which can then be installed with cpan.&lt;/p&gt; &#xA;&lt;p&gt;If you are using Cygwin, see here &lt;a href=&#34;http://search.cpan.org/dist/DBD-mysql/lib/DBD/mysql/INSTALL.pod#Windows/CygWin&#34;&gt;http://search.cpan.org/dist/DBD-mysql/lib/DBD/mysql/INSTALL.pod#Windows/CygWin&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;http://mail.python.org/pipermail/python-dev/2003-July/036932.html&#34;&gt;http://mail.python.org/pipermail/python-dev/2003-July/036932.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Setting Up A Database&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll also need to set up access to a database. You can either run a MySQL database locally or access the GovTrack database remotely. In the latter case, you won&#39;t be able to do any write operations to the database, which means some things won&#39;t work, and it will also be considerably slower.&lt;/p&gt; &#xA;&lt;p&gt;To set up a local MySQL database: create a database named &#34;govtrack&#34; set its default encoding to utf-8 give the &#34;govtrack@localhost&#34; user access to it, with no password, or modify db.pl with the log in information load in the MySQL dumps into the database: mysql govtrack &amp;lt; database.tables.sql mysql govtrack &amp;lt; database.tables2.sql mysql govtrack &amp;lt; database.people.sql&lt;/p&gt; &#xA;&lt;p&gt;To access the GovTrack database remotely: Set the environment variable REMOTE_DB to 1 when running any script. (i.e. prefix any command on the command line with &#34;REMOTE_DB=1 &#34;.)&lt;/p&gt; &#xA;&lt;h2&gt;Before Running The Scripts&lt;/h2&gt; &#xA;&lt;p&gt;The scripts are all run from within the &#34;gather&#34; directory, but they expect that a &#34;../data/us&#34; directory exists. So you should create a &#34;data&#34; directory along side the &#34;gather&#34; directory.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re also running a local instance of the GovTrack website (the &#34;front-end&#34;), you can put the gather directory inside the &#34;www&#34; directory so you reuse the website&#39;s data directory. Or symlink www/data to a &#34;data&#34; directory next to &#34;gather&#34;.&lt;/p&gt; &#xA;&lt;p&gt;They also expect a &#34;../mirror&#34; directory (i.e. a mirror directory along side the gather directory) which some scripts will use to store files downloaded. (It stores it in files whose names are MD5 hashes of the URLs where the file came from.) The scripts won&#39;t use the mirrored (i.e. cached) files unless CACHED=1 is set in the environment.&lt;/p&gt; &#xA;&lt;h2&gt;Running the Scripts&lt;/h2&gt; &#xA;&lt;p&gt;Most of the scripts are set up so you can call them from the command line, and also so they can be require&#39;d by another script. When running from the command line, the first argument is generally the name of an action to take. The rest of the arguments depend on the command.&lt;/p&gt; &#xA;&lt;p&gt;Here are some examples:&lt;/p&gt; &#xA;&lt;p&gt;REMOTE_DB=1 perl parse_status.pl PARSE_STATUS 110 s 1&lt;/p&gt; &#xA;&lt;p&gt;This fetches the status of bill S. 1 in the 110th Congress and some related information. The bill types are: h, s, hc, sc, hj, sj, hr, and sr.&lt;/p&gt; &#xA;&lt;p&gt;It writes out:&lt;/p&gt; &#xA;&lt;p&gt;../data/us/110/bills/s1.xml The bill status file.&lt;/p&gt; &#xA;&lt;p&gt;../data/us/110/bills.summary/s1.summary.xml The CRS summary (structured parse).&lt;/p&gt; &#xA;&lt;p&gt;../data/us/110/rolls/s2007-19.xml (etc.) Votes related to the bill.&lt;/p&gt; &#xA;&lt;p&gt;../data/us/110/bills.amdt/s3.xml (etc.) Amendments to this bill. This happens to be the Senate&#39;s 3rd &#39;amendment&#39; in 2007. The fact that it amends S. 1 is encoded within the file.&lt;/p&gt; &#xA;&lt;p&gt;../mirror/(various) Caches of remote pages that have been fetched, which can be used in place of future remote fetches by setting CACHED=1 in the environment (using bash, just put that at the very beginning like with REMOTE_DB=1).&lt;/p&gt; &#xA;&lt;p&gt;The formats of the XML files are somewhat documented here: &lt;a href=&#34;http://wiki.govtrack.us/index.php/Data_Directory&#34;&gt;http://wiki.govtrack.us/index.php/Data_Directory&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>librenms/librenms-agent</title>
    <updated>2024-03-05T01:31:23Z</updated>
    <id>tag:github.com,2024-03-05:/librenms/librenms-agent</id>
    <link href="https://github.com/librenms/librenms-agent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;LibreNMS Agent &amp; Scripts&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>