<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-27T01:31:52Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>trizen/pipe-viewer</title>
    <updated>2024-02-27T01:31:52Z</updated>
    <id>tag:github.com,2024-02-27:/trizen/pipe-viewer</id>
    <link href="https://github.com/trizen/pipe-viewer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A lightweight YouTube client for Linux, without requiring an API key.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;pipe-viewer&lt;/h2&gt; &#xA;&lt;p&gt;A lightweight application (fork of &lt;a href=&#34;https://github.com/trizen/straw-viewer&#34;&gt;straw-viewer&lt;/a&gt;) for searching and playing videos from YouTube.&lt;/p&gt; &#xA;&lt;p&gt;This fork parses the YouTube website directly and relies on the invidious instances only as a fallback method.&lt;/p&gt; &#xA;&lt;h3&gt;pipe-viewer&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;command-line interface to YouTube.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/614513/97738550-6d0faf00-1ad6-11eb-84ec-d37f28073d9d.png&#34; alt=&#34;pipe-viewer&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;gtk-pipe-viewer&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GTK+ interface to YouTube.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/614513/127567550-d5742dee-593c-4167-acc4-6d80fd061ffc.png&#34; alt=&#34;gtk-pipe-viewer&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;AVAILABILITY&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Alpine Linux: &lt;code&gt;doas apk add pipe-viewer&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Alt Linux: &lt;a href=&#34;https://packages.altlinux.org/en/sisyphus/srpms/pipe-viewer/&#34;&gt;https://packages.altlinux.org/en/sisyphus/srpms/pipe-viewer/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Arch Linux (AUR): &lt;a href=&#34;https://aur.archlinux.org/packages/pipe-viewer-git/&#34;&gt;https://aur.archlinux.org/packages/pipe-viewer-git/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Debian/Ubuntu (MPR): Latest stable version &lt;a href=&#34;https://mpr.makedeb.org/packages/pipe-viewer&#34;&gt;https://mpr.makedeb.org/packages/pipe-viewer&lt;/a&gt; .Latest dev version &lt;a href=&#34;https://mpr.makedeb.org/packages/pipe-viewer-git&#34;&gt;https://mpr.makedeb.org/packages/pipe-viewer-git&lt;/a&gt; . MPR is like the AUR, but for Debian/Ubuntu. You need to install makedeb first &lt;a href=&#34;https://www.makedeb.org/&#34;&gt;https://www.makedeb.org/&lt;/a&gt; .&lt;/li&gt; &#xA; &lt;li&gt;Void Linux: &lt;code&gt;sudo xbps-install pipe-viewer&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Parabola GNU/Linux-libre: &lt;code&gt;pacman -S pipe-viewer&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gentoo Linux (kske overlay): &lt;code&gt;eselect repository enable kske &amp;amp;&amp;amp; emerge -av net-misc/pipe-viewer&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://guix.gnu.org&#34;&gt;Guix&lt;/a&gt;: Pipe-Viewer can be deployed on any GNU/Linux distribution using Guix. To install in the user&#39;s default profile, do &lt;code&gt;guix install pipe-viewer&lt;/code&gt;. To test without installing, do &lt;code&gt;guix environment --pure --ad-hoc pipe-viewer mpv -- pipe-viewer&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;REVIEWS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;[EN] How-to install pipe-viewer in Debian&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://hunden.linuxkompis.se/2021/11/14/how-to-install-pipe-viewer-in-debian.html&#34;&gt;https://hunden.linuxkompis.se/2021/11/14/how-to-install-pipe-viewer-in-debian.html&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[EN] pipe-viewer – lightweight YouTube client&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.linuxlinks.com/pipe-viewer-lightweight-youtube-client/&#34;&gt;https://www.linuxlinks.com/pipe-viewer-lightweight-youtube-client/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;VIDEO REVIEWS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;[EN] Pipe-Viewer and Straw-Viewer -- Search Youtube via Terminal - Linux CLI&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=I4tfHUmklWo&#34;&gt;https://www.youtube.com/watch?v=I4tfHUmklWo&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[TW] Pipe-viewer！有史以來最佳的 YouTube 體驗就在這裡～&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://wiwi.video/videos/watch/798d38cd-9d10-4f8a-ac1f-f776c6d0aa2c&#34;&gt;https://wiwi.video/videos/watch/798d38cd-9d10-4f8a-ac1f-f776c6d0aa2c&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;TRY&lt;/h3&gt; &#xA;&lt;p&gt;For trying the latest commit of &lt;code&gt;pipe-viewer&lt;/code&gt;, without installing it, execute the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;    cd /tmp&#xA;    wget https://github.com/trizen/pipe-viewer/archive/main.zip -O pipe-viewer-main.zip&#xA;    unzip -n pipe-viewer-main.zip&#xA;    cd pipe-viewer-main&#xA;    ./bin/pipe-viewer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;INSTALLATION&lt;/h3&gt; &#xA;&lt;p&gt;To install &lt;code&gt;pipe-viewer&lt;/code&gt;, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;    perl Build.PL&#xA;    sudo ./Build installdeps&#xA;    sudo ./Build install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install &lt;code&gt;gtk-pipe-viewer&lt;/code&gt; along with &lt;code&gt;pipe-viewer&lt;/code&gt;, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;    perl Build.PL --gtk&#xA;    sudo ./Build installdeps&#xA;    sudo ./Build install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;DEPENDENCIES&lt;/h3&gt; &#xA;&lt;h4&gt;For pipe-viewer:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/release/libwww-perl&#34;&gt;libwww-perl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/release/LWP-Protocol-https&#34;&gt;LWP::Protocol::https&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/release/Data-Dump&#34;&gt;Data::Dump&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/release/JSON&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;For gtk-pipe-viewer:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/release/Gtk3&#34;&gt;Gtk3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/release/File-ShareDir&#34;&gt;File::ShareDir&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;+ the dependencies required by pipe-viewer.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Build dependencies:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Module::Build&#34;&gt;Module::Build&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Optional dependencies:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Local cache support: &lt;a href=&#34;https://metacpan.org/release/LWP-UserAgent-Cached&#34;&gt;LWP::UserAgent::Cached&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Better STDIN support (+history): &lt;a href=&#34;https://metacpan.org/release/Term-ReadLine-Gnu&#34;&gt;Term::ReadLine::Gnu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Faster JSON deserialization: &lt;a href=&#34;https://metacpan.org/release/JSON-XS&#34;&gt;JSON::XS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fixed-width formatting: &lt;a href=&#34;https://metacpan.org/release/Unicode-LineBreak&#34;&gt;Unicode::LineBreak&lt;/a&gt; or &lt;a href=&#34;https://metacpan.org/release/Text-CharWidth&#34;&gt;Text::CharWidth&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For the &lt;code&gt;*_parallel&lt;/code&gt; config-options: &lt;a href=&#34;https://metacpan.org/release/Parallel-ForkManager&#34;&gt;Parallel::ForkManager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp&#34;&gt;yt-dlp&lt;/a&gt; or &lt;a href=&#34;https://github.com/ytdl-org/youtube-dl&#34;&gt;youtube-dl&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;PACKAGING&lt;/h3&gt; &#xA;&lt;p&gt;To package this application, run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;    perl Build.PL --destdir &#34;/my/package/path&#34; --installdirs vendor [--gtk]&#xA;    ./Build test&#xA;    ./Build install --install_path script=/usr/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;INVIDIOUS INSTANCES&lt;/h3&gt; &#xA;&lt;p&gt;To use invidious instances, pass the &lt;a href=&#34;https://github.com/trizen/pipe-viewer/commit/17fb2136f3f3d8ee6dacac05beabcc15082f699d&#34;&gt;--invidious&lt;/a&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;    pipe-viewer --invidious&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or set in the configuration file (&lt;code&gt;~/.config/pipe-viewer/pipe-viewer.conf&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;    prefer_invidious =&amp;gt; 1,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use a specific invidious instance, like &lt;a href=&#34;https://invidious.fdn.fr/&#34;&gt;invidious.fdn.fr&lt;/a&gt;, pass the &lt;code&gt;--api=HOST&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;    pipe-viewer --invidious --api=invidious.fdn.fr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To make the change permanent, set in the configuration file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;    api_host =&amp;gt; &#34;invidious.fdn.fr&#34;,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When &lt;code&gt;api_host&lt;/code&gt; is set to &lt;code&gt;&#34;auto&#34;&lt;/code&gt;, &lt;code&gt;pipe-viewer&lt;/code&gt; picks a random invidious instance from &lt;a href=&#34;https://api.invidious.io/&#34;&gt;api.invidious.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;SUPPORT AND DOCUMENTATION&lt;/h3&gt; &#xA;&lt;p&gt;After installing, you can find documentation with the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;man pipe-viewer&#xA;perldoc WWW::PipeViewer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;LICENSE AND COPYRIGHT&lt;/h3&gt; &#xA;&lt;p&gt;Copyright (C) 2012-2024 Trizen&lt;/p&gt; &#xA;&lt;p&gt;This program is free software; you can redistribute it and/or modify it under the terms of either: the GNU General Public License as published by the Free Software Foundation; or the Artistic License.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://dev.perl.org/licenses/&#34;&gt;https://dev.perl.org/licenses/&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lstein/MP3-PodcastFetch</title>
    <updated>2024-02-27T01:31:52Z</updated>
    <id>tag:github.com,2024-02-27:/lstein/MP3-PodcastFetch</id>
    <link href="https://github.com/lstein/MP3-PodcastFetch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;pre&gt;&lt;code&gt;&#x9; MP3::PodcastFetch and fetch_pods.pl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Author: Lincoln D. Stein &lt;a href=&#34;mailto:lstein@cshl.edu&#34;&gt;lstein@cshl.edu&lt;/a&gt; First Release Date: January 1, 2007&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;Fetch_pods.pl is a Perl script to fetch and maintain a directory of podcast subscriptions. Information about which podcasts to fetch are stored in a configuration file. You control how many podcast files to keep, where to keep them, whether to rationalize their ID3 tags, and whether to delete older files. This script will also create playlists for recently-fetched podcasts.&lt;/p&gt; &#xA;&lt;p&gt;MP3::PodcastFetch is a set of Perl modules used for the backend of this script. You can use this library to write your own Podcast maintenance system.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install, you will need Perl version 5.8 or higher and recent versions of the following additional modules, all of which can be found on CPAN (&lt;a href=&#34;http://www.cpan.org&#34;&gt;www.cpan.org&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;p&gt;LWP Date::Parse HTML::Parser Config::IniFiles&lt;/p&gt; &#xA;&lt;p&gt;In addition, if you wish to update the ID3 tags in downloaded podcasts, you will need one or more of the following ID3-writing libraries (also on CPAN):&lt;/p&gt; &#xA;&lt;p&gt;Audio::TagLib (from CPAN, also requires taglib from &lt;a href=&#34;http://developer.kde.org/~wheeler/taglib.html&#34;&gt;http://developer.kde.org/~wheeler/taglib.html&lt;/a&gt;) MP3::Tag (from CPAN) MP3::Info (from CPAN)&lt;/p&gt; &#xA;&lt;p&gt;Audio::TagLib is the most capable of the libraries, and is able to write tags through ID3 version 2.4. ID3::Tag can write tags through ID3 version 2.3, while MP3::Info can only write version 1 tags. Audio::TagLib is a bit more trouble to install because it requires the taglib C++ library to be installed first, but I recommend using it, if you can.&lt;/p&gt; &#xA;&lt;p&gt;If you do not have any of these libraries installed, then you will still be able to download podcasts, but you will not be able to normalize their ID3 tags.&lt;/p&gt; &#xA;&lt;p&gt;Now run the following commands from the top level of this distribution:&lt;/p&gt; &#xA;&lt;p&gt;% perl Build.PL % ./Build % ./Build test % ./Build install&lt;/p&gt; &#xA;&lt;p&gt;You may need to perform the last step as the superuser. Run &#34;perldoc Module::Build&#34; for information on how to odify the build and install process, such as how to specify a non-standard installation location.&lt;/p&gt; &#xA;&lt;p&gt;The build process will install the command fetch_pods.pl somewhere on your executable path. Please run the command &#34;perldoc fetch_pods.pl&#34; to learn about how to configure and run the fetch_pods.pl script. Use &#34;perldoc MP3::PodcastFetch&#34; to learn more about the underlying Perl library.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;The source code for this module is maintained on GitHub at &lt;a href=&#34;https://github.com/lstein/MP3-PodcastFetch&#34;&gt;https://github.com/lstein/MP3-PodcastFetch&lt;/a&gt;. You are encouraged to check out the latest improvements to the source code and to contribute your own ideas and features.&lt;/p&gt;</summary>
  </entry>
</feed>