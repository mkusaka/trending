<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-03T01:42:02Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>manakai/testdataparser</title>
    <updated>2023-05-03T01:42:02Z</updated>
    <id>tag:github.com,2023-05-03:/manakai/testdataparser</id>
    <link href="https://github.com/manakai/testdataparser" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;=head1 NAME&lt;/p&gt; &#xA;&lt;p&gt;Test::HTCT::Parser - A parser for test data in HTML Tree Construction Tests format&lt;/p&gt; &#xA;&lt;p&gt;=head1 SYNOPSIS&lt;/p&gt; &#xA;&lt;p&gt;use Test::HTCT::Parser;&lt;/p&gt; &#xA;&lt;p&gt;for_each_test $file_name, { data =&amp;gt; {}, errors =&amp;gt; {is_list =&amp;gt; 1}, document =&amp;gt; {is_prefixed =&amp;gt; 1}, &#39;document-fragment&#39; =&amp;gt; {is_prefixed =&amp;gt; 1}, }, sub { my $test = shift; my ($serialized, $errors) = parse_data ($test-&amp;gt;{data}-&amp;gt;[0]); is $serialized, $test-&amp;gt;{document}-&amp;gt;[0]; is_deeply $errors, $test-&amp;gt;{errors}-&amp;gt;[0]; };&lt;/p&gt; &#xA;&lt;p&gt;=head1 DESCRIPTION&lt;/p&gt; &#xA;&lt;p&gt;The C&lt;a href=&#34;Test::HTCT::Parser&#34;&gt;Test::HTCT::Parser&lt;/a&gt; module exports a function to parse test data file encoded in the format for HTML Parsers&#39; Tree Construction Tests. It can also be used to parse test data for other purposes than HTML parsing.&lt;/p&gt; &#xA;&lt;p&gt;For more information on the usage of the module, see C&amp;lt;t/test-htct-parser.t&amp;gt; test script.&lt;/p&gt; &#xA;&lt;p&gt;=head1 TEST CALLBACK&lt;/p&gt; &#xA;&lt;p&gt;The callback code is invoked for each test, in order in the input test data file. It is invoked with two arguments.&lt;/p&gt; &#xA;&lt;p&gt;The first argument C&amp;lt;$_[0]&amp;gt; represents the test data.&lt;/p&gt; &#xA;&lt;p&gt;The second argument C&amp;lt;$_[1]&amp;gt; has additional data. It is a hash reference with a key/value pair: C&amp;lt;line_number&amp;gt; is the line number of the first line of the test data in the input test data file.&lt;/p&gt; &#xA;&lt;p&gt;=head1 SEE ALSO&lt;/p&gt; &#xA;&lt;p&gt;WHATWG Wiki, Parser tests, Tree Constructoion Tests &lt;a href=&#34;https://wiki.whatwg.org/wiki/Parser_tests#Tree_Construction_Tests&#34;&gt;https://wiki.whatwg.org/wiki/Parser_tests#Tree_Construction_Tests&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;HTML Parser Tree Constructions Tests (from html5lib repository) &lt;a href=&#34;http://html5lib.googlecode.com/svn/trunk/testdata/tree-construction/&#34;&gt;http://html5lib.googlecode.com/svn/trunk/testdata/tree-construction/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;sami-test.js, which is a JavaScript implementation of the format &lt;a href=&#34;https://github.com/wakaba/samijs/raw/master/sami/script/sami-test.js&#34;&gt;https://github.com/wakaba/samijs/blob/master/sami/script/sami-test.js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;=head1 DISTRIBUTION&lt;/p&gt; &#xA;&lt;p&gt;The latest version of the module is available from the GitHub repository: &lt;a href=&#34;https://github.com/wakaba/testdataparser&#34;&gt;https://github.com/wakaba/testdataparser&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;=head1 DEPENDENCY&lt;/p&gt; &#xA;&lt;p&gt;The module requires Perl 5.8 or later.&lt;/p&gt; &#xA;&lt;p&gt;=head1 AUTHOR&lt;/p&gt; &#xA;&lt;p&gt;Wakaba &lt;a href=&#34;mailto:wakaba@suikawiki.org&#34;&gt;wakaba@suikawiki.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The format was originally defined by WHATWG/html5lib contributors.&lt;/p&gt; &#xA;&lt;p&gt;=head1 HISTORY&lt;/p&gt; &#xA;&lt;p&gt;The parser was originally developed as part of L&lt;a href=&#34;Whatpm::HTML&#34;&gt;Whatpm::HTML&lt;/a&gt; HTML parser module, which is part of the manakai package &lt;a href=&#34;https://suika.suikawiki.org/www/manakai-core/doc/web/&#34;&gt;https://suika.suikawiki.org/www/manakai-core/doc/web/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The first version, C&amp;lt;1.0&amp;gt;, as a standalone module with new name L&lt;a href=&#34;Test::HTCT::Parser&#34;&gt;Test::HTCT::Parser&lt;/a&gt; is released on February 19, 2011.&lt;/p&gt; &#xA;&lt;p&gt;The second version, C&amp;lt;2.0&amp;gt;, added support for C&#xA; &lt;multiple&gt;&#xA;   fields.&#xA; &lt;/multiple&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository was located at &lt;a href=&#34;https://github.com/wakaba/testdataparser&#34;&gt;https://github.com/wakaba/testdataparser&lt;/a&gt; until it has been transferred to the manakai project on Nobember 4, 2021.&lt;/p&gt; &#xA;&lt;p&gt;=head1 LICENSE&lt;/p&gt; &#xA;&lt;p&gt;Copyright 2007-2021 Wakaba &lt;a href=&#34;mailto:wakaba@suikawiki.org&#34;&gt;wakaba@suikawiki.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.&lt;/p&gt; &#xA;&lt;p&gt;=cut&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vdemeester/vcsh-home</title>
    <updated>2023-05-03T01:42:02Z</updated>
    <id>tag:github.com,2023-05-03:/vdemeester/vcsh-home</id>
    <link href="https://github.com/vdemeester/vcsh-home" rel="alternate"></link>
    <summary type="html">&lt;p&gt;vcsh config base repository (required before all others)&lt;/p&gt;&lt;hr&gt;&lt;pre&gt;&lt;code&gt;                     __           __                            &#xA;.--.--..----..-----.|  |--.______|  |--..-----..--------..-----.&#xA;|  |  ||  __||__ --||     |______|     ||  _  ||        ||  -__|&#xA; \___/ |____||_____||__|__|      |__|__||_____||__|__|__||_____|&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;vcsh &#34;home&#34; repository. This repository is used with [vcsh] &lt;a href=&#34;https://github.com/RichiH/vcsh&#34; title=&#34;vcsh&#34;&gt;1&lt;/a&gt; with the default directory layout, powered by [mr] &lt;a href=&#34;http://kitenet.net/~joey/code/mr/&#34; title=&#34;http://kitenet.net/~joey/code/mr/&#34;&gt;2&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;vcsh allows you to have several git repositories, all maintaining their working trees in $HOME without clobbering each other. That, in turn, means you can have one repository per config set (zsh, vim, ssh, etc), picking and choosing which configs you want to use on which machine. &lt;small&gt;vcsh README file&lt;/small&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The default &lt;em&gt;enabled&lt;/em&gt; repositories are mr (this one), sh (which contains the shell configuration [bash,zsh,…]) and vim.&lt;/p&gt; &#xA;&lt;p&gt;The convention I used is the following for the vcsh/mr configuration (&lt;code&gt;.vcsh&lt;/code&gt;) is to omit the &lt;code&gt;-config&lt;/code&gt; fo the filename, e.g. &lt;code&gt;sh&lt;/code&gt; = &lt;code&gt;sh-config&lt;/code&gt;, …&lt;/p&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;p&gt;You&#39;ll have to install [mr] &lt;a href=&#34;http://kitenet.net/~joey/code/mr/&#34; title=&#34;http://kitenet.net/~joey/code/mr/&#34;&gt;2&lt;/a&gt; and [vcsh] &lt;a href=&#34;https://github.com/RichiH/vcsh&#34; title=&#34;vcsh&#34;&gt;1&lt;/a&gt;. On debian the packages are available for sid, wheezy and in the &lt;a href=&#34;http://backports-master.debian.org/&#34;&gt;squeeze-backports&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# apt-get install -t squeeze-backports mr vcsh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Using it&lt;/h1&gt; &#xA;&lt;p&gt;A branch is made for &lt;em&gt;bootstraping&lt;/em&gt; the default configuration (with the vcsh hooks, etc…). If you like &lt;em&gt;on-liner command&lt;/em&gt;, here is one for you.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bash &amp;lt; &amp;lt;(curl -s &#34;https://raw.github.com/vdemeester/vcsh-home/bootstrap/bootstrap.sh&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;How it is supposed to work&lt;/h1&gt; &#xA;&lt;p&gt;As previously said, this repository is kind of a skeleton for all of my others configuration repositories. The idea is :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You &lt;em&gt;bootstrap&lt;/em&gt; this one (a little more stuff to do than just a &lt;code&gt;git clone&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Then you clone other repositories with vcsh (&lt;code&gt;vcsh clone git://github.com/vdemeester/sh-config&lt;/code&gt; for example).&lt;/li&gt; &#xA; &lt;li&gt;When you want to update, you have the choice : &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;vcsh pull&lt;/code&gt; to pull &lt;strong&gt;just&lt;/strong&gt; the configuration repositories&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mr u&lt;/code&gt; to pull the configuration repositories and their potential dependencies/externals..&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As you can see in other configuration repository (like &lt;a href=&#34;https://github.com/vdemeester/sh-config&#34;&gt;https://github.com/vdemeester/sh-config&lt;/a&gt;) there is README file that won&#39;t be checked out by vcsh when cloning. As explaine &lt;a href=&#34;https://github.com/RichiH/vcsh/issues/120#issuecomment-42639619&#34;&gt;there (#120)&lt;/a&gt;, I just use together to hook feature of vcsh and the sparse-checkout feature of git.&lt;/p&gt;</summary>
  </entry>
</feed>