<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-16T01:52:15Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>binary-com/perl-Locale-Maketext-Test</title>
    <updated>2022-08-16T01:52:15Z</updated>
    <id>tag:github.com,2022-08-16:/binary-com/perl-Locale-Maketext-Test</id>
    <link href="https://github.com/binary-com/perl-Locale-Maketext-Test" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NAME&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/binary-com/perl-Locale-Maketext-Test&#34;&gt;&lt;img src=&#34;https://travis-ci.org/binary-com/perl-Locale-Maketext-Test.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/binary-com/perl-Locale-Maketext-Test&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/binary-com/perl-Locale-Maketext-Test/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Locale::Maketext::Test&lt;/p&gt; &#xA;&lt;h1&gt;VERSION&lt;/h1&gt; &#xA;&lt;p&gt;Version 0.04&lt;/p&gt; &#xA;&lt;h1&gt;SYNOPSIS&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;use Locale::Maketext::Test;&#xA;&#xA;my $foo = Locale::Maketext::Test-&amp;gt;new(directory =&amp;gt; &#39;/tmp/locales&#39;); # it will look for files like id.po, ru.po&#xA;&#xA;### optional parameters&#xA;# languages =&amp;gt; [&#39;en&#39;, &#39;de&#39;] - to test specific languages in directory, else it will pick all po files in directory&#xA;# ideally these languages should be as per https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes format&#xA;# debug     =&amp;gt; 1 - if you want to check warnings add debug flag else it will output errors only&#xA;# auto      =&amp;gt; 1 set only when you want to fallback in case a key is missing from lexicons&#xA;&#xA;# start test&#xA;my $response = $foo-&amp;gt;testlocales();&#xA;&#xA;# no errors or warnings if&#xA;$response-&amp;gt;{status} eq 1;&#xA;&#xA;# something is wrong when&#xA;$response-&amp;gt;{status} eq 0;&#xA;&#xA;# check for errors and warnings in case status is 0&#xA;$response-&amp;gt;{errors} = {id =&amp;gt; [error1, error2], ru =&amp;gt; [error1, error2]};&#xA;# warnings are only present when debug is set to 1&#xA;$response-&amp;gt;{warnings} = {id =&amp;gt; [warn1, warn2], ru =&amp;gt; [warn1, warn2]};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;DESCRIPTION&lt;/h1&gt; &#xA;&lt;p&gt;This reads all message ids from the specified PO files and tries to translate them into the destination language. PO files can be specified either as file name (extension .po) or by providing the language. In the latter case the PO file is found in the directory given by the directory option.&lt;/p&gt; &#xA;&lt;h2&gt;TYPES OF ERRORS FOUND&lt;/h2&gt; &#xA;&lt;h3&gt;unknown %func() calls&lt;/h3&gt; &#xA;&lt;p&gt;Translations can contain function calls in the form of %func(parameters). These functions must be defined in our code. Sometimes translators try to translate the function name which then calls an undefined function.&lt;/p&gt; &#xA;&lt;h3&gt;incorrect number of %plural() parameters&lt;/h3&gt; &#xA;&lt;p&gt;Different languages have different numbers of plural forms. Some, like Malay, don&#39;t have any plural forms. Some, like English or French, have just 2 forms, singular and one plural. Others like Arabic or Russian have more forms. Whenever a translator uses the %plural() function, he must specify the correct number of plural forms as parameters.&lt;/p&gt; &#xA;&lt;h3&gt;incorrect usage of %d in %plural() parameters&lt;/h3&gt; &#xA;&lt;p&gt;In some languages, like English or German, singular is applicable only to the quantity of 1. That means the German translator could come up for instance with the following valid %plural call:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;%plural(%5,ein Stein,%d Steine)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In other languages, like French or Russian, this would be an error. French uses singular also for 0 quantities. So, if the French translator calls:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;%plural(%5,une porte,%d portes)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and in the actual call the quantity of 0 is passed the output is still &#34;une porte&#34;. In Russian the problem is even more critical because singular is used for instance also for the quantity of 121.&lt;/p&gt; &#xA;&lt;p&gt;Thus, this test checks if a) the target language is similar to English in having only 2 plural forms, singular and one plural, and in applying singular only to the quantity of 1. If both of these conditions are met %plural calls like the above are allowed. Otherwise, if at least one of the parameters passed to %plural contains a %d, all of the parameters must contain the %d as well.&lt;/p&gt; &#xA;&lt;p&gt;That means the following 2 %plural calls are allowed in Russian:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;%plural(%3,%d книга,%d книги,%d книг)&#xA;%3 %plural(%3,книга,книги,книг)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;while this is forbidden:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;%plural(%3,одна книга,%d книги,%d книг)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;SUBROUTINES/METHODS&lt;/h1&gt; &#xA;&lt;h2&gt;debug&lt;/h2&gt; &#xA;&lt;p&gt;set this if you need to check warnings along with errors&lt;/p&gt; &#xA;&lt;h2&gt;directory&lt;/h2&gt; &#xA;&lt;p&gt;directory where locales files are located&lt;/p&gt; &#xA;&lt;h2&gt;languages&lt;/h2&gt; &#xA;&lt;p&gt;language array, set this if you want to test specific language only in specified directory&lt;/p&gt; &#xA;&lt;h2&gt;auto&lt;/h2&gt; &#xA;&lt;p&gt;flag to fallback when a key is missing from lexicons&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# if this is not set then maketext will output errors if&#xA;# translations is marked as fuzzy or is missing&#xA;# read more about it here https://metacpan.org/pod/Locale::Maketext::Lexicon&#xA;Locale::Maketext::Lexicon-&amp;gt;import({ _auto =&amp;gt; 1 })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;BUILD&lt;/h2&gt; &#xA;&lt;h2&gt;testlocales&lt;/h2&gt; &#xA;&lt;p&gt;test po files in directory specified&lt;/p&gt; &#xA;&lt;p&gt;This returns hash with status, errors and warnings&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;    status   =&amp;gt; 1/0, # 1 is success, 0 failure&#xA;    errors   =&amp;gt; { id =&amp;gt; [error1, error2], ru =&amp;gt; [error1, error2] },&#xA;    warnings =&amp;gt; { id =&amp;gt; [warn1, warn2] }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;INSTALLATION&lt;/h1&gt; &#xA;&lt;p&gt;To install this module, run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perl Makefile.PL&#xA;make&#xA;make test&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;AUTHOR&lt;/h1&gt; &#xA;&lt;p&gt;Binary.com, &lt;code&gt;&amp;lt;binary at cpan.org&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;BUGS&lt;/h1&gt; &#xA;&lt;p&gt;Please report any bugs or feature requests to &lt;code&gt;bug-locale-maketext-test at rt.cpan.org&lt;/code&gt;, or through the web interface at &lt;a href=&#34;http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Locale-Maketext-Test&#34;&gt;http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Locale-Maketext-Test&lt;/a&gt;. I will be notified, and then you&#39;ll automatically be notified of progress on your bug as I make changes.&lt;/p&gt; &#xA;&lt;h1&gt;SUPPORT&lt;/h1&gt; &#xA;&lt;p&gt;You can find documentation for this module with the perldoc command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perldoc Locale::Maketext::Test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also look for information at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;RT: CPAN&#39;s request tracker (report bugs here)&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://rt.cpan.org/NoAuth/Bugs.html?Dist=Locale-Maketext-Test&#34;&gt;http://rt.cpan.org/NoAuth/Bugs.html?Dist=Locale-Maketext-Test&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;AnnoCPAN: Annotated CPAN documentation&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://annocpan.org/dist/Locale-Maketext-Test&#34;&gt;http://annocpan.org/dist/Locale-Maketext-Test&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;CPAN Ratings&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://cpanratings.perl.org/d/Locale-Maketext-Test&#34;&gt;http://cpanratings.perl.org/d/Locale-Maketext-Test&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Search CPAN&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://search.cpan.org/dist/Locale-Maketext-Test/&#34;&gt;http://search.cpan.org/dist/Locale-Maketext-Test/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;ACKNOWLEDGEMENTS&lt;/h1&gt; &#xA;&lt;h1&gt;LICENSE AND COPYRIGHT&lt;/h1&gt; &#xA;&lt;p&gt;Copyright 2016 Binary.com.&lt;/p&gt; &#xA;&lt;p&gt;This program is free software; you can redistribute it and/or modify it under the terms of the the Artistic License (2.0). You may obtain a copy of the full license at:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.perlfoundation.org/artistic_license_2_0&#34;&gt;http://www.perlfoundation.org/artistic_license_2_0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Any use, modification, and distribution of the Standard or Modified Versions is governed by this Artistic License. By using, modifying or distributing the Package, you accept this license. Do not use, modify, or distribute the Package, if you do not accept this license.&lt;/p&gt; &#xA;&lt;p&gt;If your Modified Version has been derived from a Modified Version made by someone other than you, you are nevertheless required to ensure that your Modified Version complies with the requirements of this license.&lt;/p&gt; &#xA;&lt;p&gt;This license does not grant you the right to use any trademark, service mark, tradename, or logo of the Copyright Holder.&lt;/p&gt; &#xA;&lt;p&gt;This license includes the non-exclusive, worldwide, free-of-charge patent license to make, have made, use, offer to sell, sell, import and otherwise transfer the Package with respect to any patent claims licensable by the Copyright Holder that are necessarily infringed by the Package. If you institute patent litigation (including a cross-claim or counterclaim) against any party alleging that the Package constitutes direct or contributory patent infringement, then this Artistic License to you shall terminate on the date that such litigation is filed.&lt;/p&gt; &#xA;&lt;p&gt;Disclaimer of Warranty: THE PACKAGE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS &#34;AS IS&#39; AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES. THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT ARE DISCLAIMED TO THE EXTENT PERMITTED BY YOUR LOCAL LAW. UNLESS REQUIRED BY LAW, NO COPYRIGHT HOLDER OR CONTRIBUTOR WILL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING IN ANY WAY OUT OF THE USE OF THE PACKAGE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>binary-com/perl-WebService-Async-Onfido</title>
    <updated>2022-08-16T01:52:15Z</updated>
    <id>tag:github.com,2022-08-16:/binary-com/perl-WebService-Async-Onfido</id>
    <link href="https://github.com/binary-com/perl-WebService-Async-Onfido" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;perl-WebService-Async-Onfido&lt;/h1&gt;</summary>
  </entry>
</feed>