<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-04T01:33:22Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>oskarpearson/perl-crypt-PBKDF2-minimal-deps</title>
    <updated>2024-03-04T01:33:22Z</updated>
    <id>tag:github.com,2024-03-04:/oskarpearson/perl-crypt-PBKDF2-minimal-deps</id>
    <link href="https://github.com/oskarpearson/perl-crypt-PBKDF2-minimal-deps" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Partial implementation of Crypt::PBKDF2 with minimal dependencies on external libraries&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;perl-crypt-PBKDF2-minimal-deps&lt;/h1&gt; &#xA;&lt;p&gt;This is a partial implementation of Crypt::PBKDF2 with minimal dependencies on external libraries. It focuses on generating LDAP-like formatted PBKDF2 hashes.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re looking at this, I&#39;d suggest you consider using &lt;a href=&#34;http://search.cpan.org/~arodland/Crypt-PBKDF2-0.112020/lib/Crypt/PBKDF2.pm&#34;&gt;Crypt::PBKDF2 on CPAN instead&lt;/a&gt;, unless you can&#39;t install the libraries it depends on.&lt;/p&gt; &#xA;&lt;p&gt;This code is only a partial re-implementation of that module, with it&#39;s numerous dependencies on things like Moose removed. This code was developed as a way to get PBKDF2 without having to install numerous packages from source on an old version of Ubuntu.&lt;/p&gt; &#xA;&lt;p&gt;Note that this code also only supports PBKDF2 strings in LDAP-LIKE base64 syntax.&lt;/p&gt; &#xA;&lt;h1&gt;License and Warranty&lt;/h1&gt; &#xA;&lt;p&gt;See the accompanying LICENSE.md file for terms of use.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;Module Dependencies - Digest::HMAC_SHA1&lt;/h2&gt; &#xA;&lt;p&gt;This module requires the the Digest::HMAC_SHA1 perl module.&lt;/p&gt; &#xA;&lt;p&gt;You should be able to use the version shipped as standard with your operating system, if it&#39;s available at all. You shouldn&#39;t need to install the latest version on Cpan, but if you do, see &lt;a href=&#34;http://search.cpan.org/~gaas/Digest-HMAC-1.03/&#34;&gt;Digest::HMAC_SHA1 perl module&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re using Debian or Ubuntu, you can install this package with &lt;code&gt;sudo apt-get install libdigest-hmac-perl&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Module Dependencies - MIME::Base64&lt;/h2&gt; &#xA;&lt;p&gt;This package also needs MIME::Base64. On most machines, this comes installed as part of Perl.&lt;/p&gt; &#xA;&lt;p&gt;You should be able to use the version shipped as standard with your operating system. If you need the latest version, see &lt;a href=&#34;http://search.cpan.org/~gaas/MIME-Base64-3.13/Base64.pm&#34;&gt;Mime::Base64 on CPAN&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installing the Library&lt;/h2&gt; &#xA;&lt;p&gt;Place the PBKDF2MinimalDeps.pm file in a subdirectory called &#39;Crypt&#39; somewhere in your Perl library path.&lt;/p&gt; &#xA;&lt;p&gt;For example, if I run &lt;code&gt;perl -V&lt;/code&gt;, part of the output includes the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@INC:&#xA;  /etc/perl&#xA;  /usr/local/lib/perl/5.14.2&#xA;  /usr/local/share/perl/5.14.2&#xA;  /usr/lib/perl5&#xA;  /usr/share/perl5&#xA;  /usr/lib/perl/5.14&#xA;  /usr/share/perl/5.14&#xA;  /usr/local/lib/site_perl&#xA;  .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The most common places to install the package are in your source tree, or in your &#39;site_perl&#39; directory. With the example output above, I could install the file at &lt;code&gt;/usr/local/lib/site_perl/Crypt/PBKDF2MinimalDeps.pm&lt;/code&gt; or in the path where your source code lives (i.e. in &lt;code&gt;./Crypt&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;See the file &#39;example-generate.pl&#39; for an example of creating a hash for password storage into your database.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;See the file &#39;example-validate.pl&#39; for an example of validating a user&#39;s password.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;See the help on the &lt;a href=&#34;http://search.cpan.org/~arodland/Crypt-PBKDF2-0.101170/&#34;&gt;Crypt::PBKDF2&lt;/a&gt; page&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Performance&lt;/h1&gt; &#xA;&lt;p&gt;PBKDF2 is &lt;em&gt;supposed&lt;/em&gt; to run slower and slower as the years go by. You should change the &#39;iterations&#39; value based on Moore&#39;s law, and based on the specific hardware that you&#39;re working on.&lt;/p&gt; &#xA;&lt;p&gt;As an indication:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;in 2013 &lt;a href=&#34;https://helpdesk.lastpass.com/security-options/password-iterations-pbkdf2/&#34;&gt;LastPass.com&lt;/a&gt; uses 5,000 iterations of SHA-256 (we&#39;re only using SHA-1 here, so 5,000 is vastly too low for this library).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Apple DMG files in 2013 use 250,000 rounds of PBKDF2-HMAC-SHA-1 according to &lt;a href=&#34;http://blog.whitehatsec.com/cracking-aes-256-dmgs-and-epic-self-pwnage/&#34;&gt;this amusing blog post&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;References&lt;/h1&gt; &#xA;&lt;h2&gt;General Information&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://csrc.nist.gov/publications/nistpubs/800-132/nist-sp800-132.pdf&#34;&gt;NIST Recommendation for Password-Based Key Derivation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://www.codinghorror.com/blog/2012/04/speed-hashing.html&#34;&gt;Coding Horror Speed Hashing article&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://codahale.com/how-to-safely-store-a-password/&#34;&gt;Use Bcrypt&lt;/a&gt; In case you want to avoid PBKDF2&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://www.unlimitednovelty.com/2012/03/dont-use-bcrypt.html&#34;&gt;Don&#39;t use Bcrypt&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Technicalities&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.owasp.org/index.php/Password_Storage_Cheat_Sheet&#34;&gt;OWASP Password Storage Cheat Sheet&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/questions/5781753/perl-code-to-generate-secret-key-for-hmac-sha256-signing&#34;&gt;StackOverflow questions on HMAC SHA256&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://www.securityfocus.com/blogs/262&#34;&gt;Enough With The Rainbow Tables: What You Need To Know About Secure Password Schemes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://security.stackexchange.com/questions/4781/do-any-security-experts-recommend-bcrypt-for-password-storage&#34;&gt;Bcrypt vs PBKDF2&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://security.stackexchange.com/questions/3959/recommended-of-iterations-when-using-pkbdf2-sha256&#34;&gt;StackOverflow question the number of iterations for PBKDF2&lt;/a&gt; - note that this is with SHA256&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>clicktx/Lingua-JA-Expand-DataSource-GoogleWebSearch</title>
    <updated>2024-03-04T01:33:22Z</updated>
    <id>tag:github.com,2024-03-04:/clicktx/Lingua-JA-Expand-DataSource-GoogleWebSearch</id>
    <link href="https://github.com/clicktx/Lingua-JA-Expand-DataSource-GoogleWebSearch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Lingua-JA-Expand-DataSource-GoogleWebSearch&lt;/h1&gt;</summary>
  </entry>
</feed>