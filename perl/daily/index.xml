<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-16T01:33:25Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Gilwyad/mailnesia.com</title>
    <updated>2023-10-16T01:33:25Z</updated>
    <id>tag:github.com,2023-10-16:/Gilwyad/mailnesia.com</id>
    <link href="https://github.com/Gilwyad/mailnesia.com" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Anonymous Email in Seconds&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;mailnesia.com - Anonymous Email in Seconds&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mailnesia.com&#34;&gt;Mailnesia&lt;/a&gt; is a fully featured disposable email provider. Just like a real email service but without any password or the ability to send mail. Features at a glance:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatically visits registration/activation links in emails, completing any registration process instantly&lt;/li&gt; &#xA; &lt;li&gt;Alternate mailbox names (aliases) for extra anonymity, use any name you want&lt;/li&gt; &#xA; &lt;li&gt;Alternative domain names (all mail is accepted regardless of domain name)&lt;/li&gt; &#xA; &lt;li&gt;Displaying HTML emails correctly including attached images, files&lt;/li&gt; &#xA; &lt;li&gt;Multiple encodings supported: Chinese, Japanese, Korean, Russian etc&lt;/li&gt; &#xA; &lt;li&gt;RSS feed for every mailbox&lt;/li&gt; &#xA; &lt;li&gt;New emails appear as they arrive, without needing to refresh the page&lt;/li&gt; &#xA; &lt;li&gt;Fast, easy to use interface&lt;/li&gt; &#xA; &lt;li&gt;Translated to 10+ languages&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This repository contains the source code of Mailnesia. What it includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The website including everything: images, CSS, JavaScript etc&lt;/li&gt; &#xA; &lt;li&gt;The email receiving server&lt;/li&gt; &#xA; &lt;li&gt;Additional utilities for maintenance, testing etc&lt;/li&gt; &#xA; &lt;li&gt;How to set up the SQL tables&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;What is not included:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Configuration for web server, database server or any other external utility&lt;/li&gt; &#xA; &lt;li&gt;Scripts to start and monitor the website/RSS/email server processes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture overview&lt;/h2&gt; &#xA;&lt;p&gt;Mailnesia is made with the perl programming language. It runs on Debian GNU/Linux. Nginx is used as web server, PostgreSQL as database server. Redis in-memory key storage server is used to store banned email addresses and IP&#39;s and other settings.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Custom SMTP server implemented in perl using AnyEvent::SMTP. Event based, using only one thread.&lt;/li&gt; &#xA; &lt;li&gt;Website implemented using Mojolicious, powered by Nginx web server.&lt;/li&gt; &#xA; &lt;li&gt;Emails are stored in a PostgreSQL database&lt;/li&gt; &#xA; &lt;li&gt;Hosted on a virtual private server with SSD storage&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The email server sends all received emails to several URL clicker processes using ZeroMQ to offload the email body processing which is somewhat CPU intensive.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements and installation&lt;/h2&gt; &#xA;&lt;p&gt;Required Perl modules with versions are listed in the file &#39;cpanfile&#39;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Some modules might require compilation of C source code; these packages will take care of that on Debian 9 (Stretch):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt-get install autotools-dev g++ gcc dpkg-dev cpp fakeroot gdbserver libalgorithm-merge-perl libalgorithm-diff-xs-perl libalgorithm-diff-perl libdpkg-perl libltdl-dev libltdl7 libpython2.6 python2.6 libreadline6 libsqlite3-0 m4 make manpages-dev patch python2.6-minimal g++-4.4 libstdc++6-4.4-dev gcc-4.4 binutils cpp-4.4 libc6-dev libc-dev-bin libmpfr4 libgmp3c2 libgomp1 linux-libc-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Debian 11 (Bullseye):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt-get update &amp;amp;&amp;amp; apt-get install libzmq5 openssl libssl-dev zlib1g-dev autotools-dev g++ gcc dpkg-dev libdpkg-perl libltdl-dev libltdl7 libsqlite3-0 m4 make patch gcc-10 binutils cpp-10 libc6-dev libc-dev-bin libgomp1 linux-libc-dev libreadline8 cpanminus libpq-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The required Perl modules can be installed with the &lt;code&gt;cpanm&lt;/code&gt; script. Install all requirements into a directory, for example ~/perl5:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cpanm --installdeps /directory/where/you/cloned/mailnesia.com/ --local-lib-contained ~/perl5/ --skip-satisfied&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The path &lt;code&gt;lib/perl5&lt;/code&gt; under this chosen directory must be exported and used by each application, so they load their dependencies from it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export PERL5LIB=~/perl5/lib/perl5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setting up Redis&lt;/h2&gt; &#xA;&lt;p&gt;In /etc/redis/redis.conf:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Port 0&#xA;unixsocket /var/run/redis/redis.sock&#xA;unixsocketperm 777&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setting up PostgreSQL&lt;/h2&gt; &#xA;&lt;h3&gt;Using password-less &#34;trust&#34; authentication for mailnesia PSQL user&lt;/h3&gt; &#xA;&lt;p&gt;This applies only if clients connect locally on UNIX sockets. In pg_hba.conf, after &#34;Put your actual configuration here&#34; but before the local and host configurations:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# TYPE  DATABASE    USER        CIDR-ADDRESS          METHOD&#xA;local   mailnesia   mailnesia                         trust&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create mailnesia user / database&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;as root:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;su postgres&#xA;cd&#xA;createuser --superuser mailnesia&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;createdb mailnesia&lt;/li&gt; &#xA; &lt;li&gt;as any user:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;psql -U mailnesia&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create tables&lt;/h3&gt; &#xA;&lt;p&gt;Execute &lt;code&gt;tools/psql-create-tables.sh&lt;/code&gt; to create all necessary tables and relations. The script also contains some documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Translation&lt;/h2&gt; &#xA;&lt;p&gt;The script tools/translation.py is used to download the Google spreadsheet containing the translations.&lt;/p&gt; &#xA;&lt;h2&gt;How to contribute to a project without knowing a damn bit about it&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://domm.plix.at/perl/2013_09_open_source_plus_plus_contribute_without_knowing.html&#34;&gt;https://domm.plix.at/perl/2013_09_open_source_plus_plus_contribute_without_knowing.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Compressing CSS and JavaScript&lt;/h2&gt; &#xA;&lt;p&gt;Minifying is done with yui-compressor. This code snippet will automatically compress .js and .css files in the project directory upon save in Emacs.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;(add-hook&#xA; &#39;after-save-hook&#xA; (lambda ()&#xA;   (dolist (element &#39;(&#xA;                      &#34;/directory/containing/project/mailnesia.com/website/js/javascript.js&#34;&#xA;                      &#34;/directory/containing/project/mailnesia.com/website/css/style.css&#34;&#xA;                      ))&#xA;     (when&#xA;         (string= buffer-file-name element)&#xA;       (save-window-excursion&#xA;         (shell-command (concat &#34;yui-compressor -o &#34; (replace-regexp-in-string &#34;\\.\\([a-z]\\{2,3\\}\\)$&#34; &#34;-min.\\1&#34; element ) &#34; &#34; element &#34; &amp;amp;&amp;gt;/dev/null &amp;amp;&#34;))&#xA;         )&#xA;       )&#xA;     )&#xA;   )&#xA; )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;Test running website and mail server by sending test emails: tools/test-mailnesia.pl&lt;/p&gt; &#xA;&lt;p&gt;Execute function tests under t/ (these don&#39;t require the website to be up): prove&lt;/p&gt;</summary>
  </entry>
</feed>