<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-05T01:43:59Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>RexOps/Rex</title>
    <updated>2023-06-05T01:43:59Z</updated>
    <id>tag:github.com,2023-06-05:/RexOps/Rex</id>
    <link href="https://github.com/RexOps/Rex" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Rex, the friendly automation framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rex, the friendly automation framework&lt;/h1&gt; &#xA;&lt;p&gt;The main ideas behind Rex are:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Puts &lt;em&gt;you&lt;/em&gt; in charge&lt;/p&gt; &lt;p&gt;Rex acknowledges that instead of silver bullets, there is more than one way to manage it.&lt;/p&gt; &lt;p&gt;It&#39;s friendly to any combinations of local and remote execution, push and pull style of management, or imperative and declarative approach. Instead of forcing any specific model on you, it trusts you to be in the best position to decide what to automate and how, allowing you to build the automation tool &lt;em&gt;your&lt;/em&gt; situation requires.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Easy to get on board&lt;/p&gt; &lt;p&gt;Automate what you are doing today, and add more tomorrow.&lt;/p&gt; &lt;p&gt;Rex runs locally, even if managing remotes via SSH. This means it&#39;s instantly usable, without big rollout processes or anyone else to convince, making it ideal and friendly for incremental automation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It&#39;s just Perl&lt;/p&gt; &lt;p&gt;Perl is a battle-tested, mature language, and Rex code is just Perl code.&lt;/p&gt; &lt;p&gt;This means whenever you reach the limitations of the built-in Rex features, a powerful programming language and module ecosystem is always at your fingertips to seamlessly extend it with modules from &lt;a href=&#34;https://metacpan.org&#34;&gt;CPAN&lt;/a&gt; or with your own code. As a bonus, you can also use the usual well-established tools and workflows, like IDE integration for syntax highlighting, linting and formatting, or authoring and publishing &lt;a href=&#34;https://metacpan.org/search?q=rex&#34;&gt;Rex modules on CPAN&lt;/a&gt;. With the use of &lt;a href=&#34;https://metacpan.org/pod/Inline&#34;&gt;Inline&lt;/a&gt; and &lt;a href=&#34;https://metacpan.org/pod/FFI::Platypus&#34;&gt;FFI::Platypus&lt;/a&gt; modules, it&#39;s friendly to code written in other languages too. So after all, it&#39;s not just Perl.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;We have a &lt;a href=&#34;https://www.rexify.org/docs/guides/start_using__r__ex.html&#34;&gt;Getting started guide&lt;/a&gt; on the website that should help you with the first steps.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;There are several methods to install (R)?ex: use your distro&#39;s package manager, download it from CPAN or build it from source. Check out the &lt;a href=&#34;https://www.rexify.org/get/index.html&#34;&gt;Get Rex&lt;/a&gt; page on the website for the different options, and choose the one that fits you best.&lt;/p&gt; &#xA;&lt;h3&gt;Build from source&lt;/h3&gt; &#xA;&lt;p&gt;To build (R)?ex from source, you need to install &lt;a href=&#34;https://metacpan.org/pod/Dist::Zilla&#34;&gt;Dist::Zilla&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cpanm Dist::Zilla&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Dist::Zilla provides the &lt;em&gt;dzil&lt;/em&gt; command, which you can use to install (R)?ex dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dzil authordeps | cpanm&#xA;dzil listdeps | cpanm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some of the optional dependencies might not be available on all platforms, but to install them as well, use this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dzil listdeps --suggests | cpanm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then to install the OS-specific dependencies and (R)?ex itself:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dzil install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;d like to build a .tar.gz release file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dzil build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Need help?&lt;/h2&gt; &#xA;&lt;p&gt;If a new user has difficulties to get on board, then it&#39;s a bug. Let us know via one of our &lt;a href=&#34;https://www.rexify.org/support/index.html&#34;&gt;support channels&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;All contributions are welcome: documentation, patches, bug reports, ideas, promoting (R)?ex at conferences and meetups, or anything else you can think of.&lt;/p&gt; &#xA;&lt;p&gt;For more details, see the &lt;a href=&#34;https://github.com/RexOps/Rex/raw/master/CONTRIBUTING.md&#34;&gt;Contributing guide&lt;/a&gt; in the repo and the &lt;a href=&#34;https://www.rexify.org/care/help__r__ex.html&#34;&gt;Help (R)?ex&lt;/a&gt; page on the website.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>os-autoinst/os-autoinst-distri-opensuse</title>
    <updated>2023-06-05T01:43:59Z</updated>
    <id>tag:github.com,2023-06-05:/os-autoinst/os-autoinst-distri-opensuse</id>
    <link href="https://github.com/os-autoinst/os-autoinst-distri-opensuse" rel="alternate"></link>
    <summary type="html">&lt;p&gt;os-autoinst test cases for openSUSE&lt;/p&gt;&lt;hr&gt;&lt;p&gt;os-autoinst/openQA tests for openSUSE and SUSE Linux Enterprise&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/os-autoinst/os-autoinst-distri-opensuse/actions&#34;&gt;&lt;img src=&#34;https://github.com/os-autoinst/os-autoinst-distri-opensuse/workflows/ci/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Status of &lt;a href=&#34;https://get.opensuse.org/tumbleweed/&#34;&gt;openSUSE Tumbleweed&lt;/a&gt; tests:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Test&lt;/th&gt; &#xA;   &lt;th&gt;Badge&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GNOME on Tumbleweed&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://openqa.opensuse.org/tests/latest?&amp;amp;arch=x86_64&amp;amp;distri=opensuse&amp;amp;flavor=DVD&amp;amp;machine=64bit&amp;amp;test=gnome&amp;amp;version=Tumbleweed&#34;&gt;&lt;img src=&#34;https://openqa.opensuse.org/tests/latest/badge?arch=x86_64&amp;amp;distri=opensuse&amp;amp;flavor=DVD&amp;amp;machine=64bit&amp;amp;test=gnome&amp;amp;version=Tumbleweed&amp;amp;show_build=1&#34; alt=&#34;Gnome on Tumbleweed&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;KDE on Tumbleweed&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://openqa.opensuse.org/tests/latest?arch=x86_64&amp;amp;distri=opensuse&amp;amp;flavor=DVD&amp;amp;machine=64bit&amp;amp;test=kde&amp;amp;version=Tumbleweed&#34;&gt;&lt;img src=&#34;https://openqa.opensuse.org/tests/latest/badge?arch=x86_64&amp;amp;distri=opensuse&amp;amp;flavor=DVD&amp;amp;machine=64bit&amp;amp;test=kde&amp;amp;version=Tumbleweed&amp;amp;show_build=1&#34; alt=&#34;KDE on Tumbleweed&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;os-autoinst-distri-opensuse is repo which contains tests, which are executed by openQA for openSUSE and SLE distributions.&lt;/p&gt; &#xA;&lt;p&gt;Needles for openSUSE distributions are located in &lt;a href=&#34;https://github.com/os-autoinst/os-autoinst-needles-opensuse&#34;&gt;os-autoinst-needles-opensuse&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Some documentation from the test library is published at &lt;a href=&#34;https://os-autoinst.github.io/os-autoinst-distri-opensuse/&#34;&gt;https://os-autoinst.github.io/os-autoinst-distri-opensuse/&lt;/a&gt;, however this is still WIP&lt;/p&gt; &#xA;&lt;p&gt;For more details see &lt;a href=&#34;http://open.qa/&#34;&gt;http://open.qa/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please, find test variables description &lt;a href=&#34;https://github.com/os-autoinst/os-autoinst-distri-opensuse/raw/master/variables.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For using new mechanism to schedule modules, check &lt;a href=&#34;https://raw.githubusercontent.com/os-autoinst/os-autoinst-distri-opensuse/master/declarative-schedule-doc.md&#34;&gt;declarative schedule docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In case of adding new test for Installation, please use approach described in the &lt;a href=&#34;https://raw.githubusercontent.com/os-autoinst/os-autoinst-distri-opensuse/master/ui-framework-documentation.md&#34;&gt;documentation for UI Test Automation Framework&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;Please, refer to &lt;a href=&#34;https://github.com/os-autoinst/os-autoinst-distri-opensuse/raw/master/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to get in touch&lt;/h2&gt; &#xA;&lt;p&gt;Reach us via &lt;a href=&#34;https://open.qa/contact&#34;&gt;https://open.qa/contact&lt;/a&gt;, we are also on twitter as &lt;a href=&#34;https://twitter.com/openQAhq&#34;&gt;https://twitter.com/openQAhq&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also read about some of the teams at &lt;a href=&#34;https://progress.opensuse.org/projects/qa/wiki&#34;&gt;https://progress.opensuse.org/projects/qa/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Most files are licensed under a minimal copyleft conforming to the &lt;a href=&#34;https://spdx.org/licenses/FSFAP.html&#34;&gt;FSF All Permissive License&lt;/a&gt;, but some more complex tests are licensed under the GPL. So please check the license within the files.&lt;/p&gt;</summary>
  </entry>
</feed>