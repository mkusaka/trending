<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-01T01:42:26Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sharl/airgram</title>
    <updated>2023-02-01T01:42:26Z</updated>
    <id>tag:github.com,2023-02-01:/sharl/airgram</id>
    <link href="https://github.com/sharl/airgram" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Push notification to Airgram&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;airgram - Push notification to Airgram&lt;/h1&gt; &#xA;&lt;h2&gt;Join Airgram service (&lt;a href=&#34;http://www.airgramapp.com/dev/login&#34;&gt;http://www.airgramapp.com/dev/login&lt;/a&gt;)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Key&lt;/em&gt; and &lt;em&gt;Secret&lt;/em&gt; use later.&lt;/p&gt; &#xA;&lt;h2&gt;Install AirgramApp&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS &lt;a href=&#34;http://itunes.apple.com/app/id504536405?mt=8&#34;&gt;http://itunes.apple.com/app/id504536405?mt=8&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Android &lt;a href=&#34;http://market.android.com/details?id=com.airgram.app&#34;&gt;http://market.android.com/details?id=com.airgram.app&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup App&lt;/h2&gt; &#xA;&lt;p&gt;Setup account.&lt;/p&gt; &#xA;&lt;h2&gt;Write config file&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cat &amp;gt; ~/.airgram&#xA;email = your.mail.address@example.com&#xA;Key = Key&#xA;Secret = Secret&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Just do it&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ airgram push to Airgram&#xA;$ echo foo bar | airgram&#xA;$ airgram&#xA;foo bar&#xA;^D&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>runfinch/finch-core</title>
    <updated>2023-02-01T01:42:26Z</updated>
    <id>tag:github.com,2023-02-01:/runfinch/finch-core</id>
    <link href="https://github.com/runfinch/finch-core" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Core dependencies for Finch&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;finch-core&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the core dependencies for the project and is versioned/maintained separately from the the main CLI repository.&lt;/p&gt; &#xA;&lt;h2&gt;Local Development&lt;/h2&gt; &#xA;&lt;h3&gt;Dependency Installation&lt;/h3&gt; &#xA;&lt;p&gt;Fetch dependencies first.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew update&#xA;brew install go qemu bash coreutils autoconf automake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build core&lt;/h3&gt; &#xA;&lt;p&gt;Build project locally.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Start Lima virtual machine&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;./_output/lima/bin/limactl start template://fedora --tty=false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run commands&lt;/h3&gt; &#xA;&lt;p&gt;Run and test any command you wish with the following.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./_output/lima/bin/limactl shell fedora nerdctl ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;E2E Testing&lt;/h3&gt; &#xA;&lt;p&gt;Note that the vm instance is NOT expected to exist before running the tests, please ensure it is removed before running the tests.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./_output/lima/bin/limactl stop fedora&#xA;./_output/lima/bin/limactl remove fedora&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>hcymysql/redis_monitor</title>
    <updated>2023-02-01T01:42:26Z</updated>
    <id>tag:github.com,2023-02-01:/hcymysql/redis_monitor</id>
    <link href="https://github.com/hcymysql/redis_monitor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;redis_monitor&lt;/h1&gt; &#xA;&lt;p&gt;轻便式Redis Monitor面向研发人员图形可视化监控工具，借鉴了LEPUS(天兔)监控平台以及redis-cli info命令输出的监控指标项，去掉了一些不必要看不懂的监控项，目前采集了数据库连接数、QPS、内存使用率统计和同步复制延迟时长。&lt;/p&gt; &#xA;&lt;p&gt;Redis Monitor可以监控单机模式，哨兵模式，集群模式，并且录入一个主库或者从库IP，自动发现主库或者从库IP信息，无需人工再次录入。&lt;/p&gt; &#xA;&lt;p&gt;采用远程连接方式获取数据，所以无需要在Redis服务器端部署相关agent或计划任务，可实现微信和邮件报警。&lt;/p&gt; &#xA;&lt;p&gt;注：监控环境为Redis 6.2以上版本。&lt;/p&gt; &#xA;&lt;p&gt;1）Redis状态监控 &lt;img src=&#34;https://raw.githubusercontent.com/hcymysql/redis_monitor/main/image/redis_monitor.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;2）点击图表，可以查看历史曲线图&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;连接数&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hcymysql/redis_monitor/main/image/redis_monitor_history1.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;QPS每秒查询量&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hcymysql/redis_monitor/main/image/redis_monitor_history2.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;内存使用率&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hcymysql/redis_monitor/main/image/redis_monitor_history3.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;一、环境搭建&lt;/h1&gt; &#xA;&lt;p&gt;1）php-redis驱动安装（Centos 7系统）&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;shell&amp;gt; yum install -y php-pear php-devel php httpd mysql php-mysqlnd php-redis&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2）重启httpd服务&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;shell&amp;gt; systemctl restart httpd.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;3）redis需要授权连接密码&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; config set requirepass yourPassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;二、Redis monitor部署&lt;/h1&gt; &#xA;&lt;p&gt;把&lt;a href=&#34;https://github.com/hcymysql/redis_monitor/archive/refs/heads/main.zip&#34;&gt;https://github.com/hcymysql/redis_monitor/archive/refs/heads/main.zip&lt;/a&gt; 安装包解压缩到 /var/www/html/目录下&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd /var/www/html/redis_monitor/&#xA;&#xA;chmod 755 ./mail/sendEmail&#xA;&#xA;chmod 755 ./weixin/wechat.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;（注：邮件和微信报警调用的第三方工具，所以这里要赋予可执行权限755）&lt;/p&gt; &#xA;&lt;h3&gt;1、导入Redis Monitor监控工具表结构（redis_monitor库）&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd /var/www/html/mongo_monitor/schema/&#xA;&#xA;mysql -uroot -p123456 &amp;lt; redis_monitor_schema.sql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;注：redis_status_history表引擎可以更改为rocksdb引擎，支持数据压缩，这对于减小存储空间以及增快IO效率都有直接的帮助。&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.percona.com/blog/2018/04/30/a-look-at-myrocks-performance/&#34;&gt;https://www.percona.com/blog/2018/04/30/a-look-at-myrocks-performance/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2、录入被监控主机的信息&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;mysql&amp;gt; INSERT INTO `redis_status_info`(`id`,`host`,`tag`,`pwd`,`port`,`monitor`,&#xA;`send_mail`,`send_mail_to_list`,`send_weixin`,`send_weixin_to_list`,`alarm_threads_running`,&#xA;`threshold_alarm_threads_running`,`alarm_used_memory_status`,`threshold_warning_used_memory`) &#xA;VALUES (1,&#39;192.168.176.27&#39;,&#39;Redis测试&#39;,&#39;hechunyang123456&#39;,6379,1,1,&#39;hechunyang@126.com&#39;,1,&#39;hechunyang&#39;,NULL,150,NULL,&#39;200M&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;注，以下字段可以按照需求变更：&lt;/p&gt; &#xA;&lt;p&gt;ip字段含义：输入被监控Redis的IP地址&lt;/p&gt; &#xA;&lt;p&gt;tag字段含义：输入被监控Redis的业务名字&lt;/p&gt; &#xA;&lt;p&gt;pwd字段含义：输入被监控Redis的密码&lt;/p&gt; &#xA;&lt;p&gt;port字段含义：输入被监控Redis的端口号&lt;/p&gt; &#xA;&lt;p&gt;monitor字段含义：0为关闭监控（也不采集数据，直接跳过）;1为开启监控（采集数据）&lt;/p&gt; &#xA;&lt;p&gt;send_mail字段含义：0为关闭邮件报警;1为开启邮件报警&lt;/p&gt; &#xA;&lt;p&gt;send_mail_to_list字段含义：邮件人列表&lt;/p&gt; &#xA;&lt;p&gt;send_weixin字段含义：0为关闭微信报警;1为开启微信报警&lt;/p&gt; &#xA;&lt;p&gt;send_weixin_to_list字段含义：微信公众号&lt;/p&gt; &#xA;&lt;p&gt;threshold_alarm_threads_running字段含义：设置连接数阀值（单位个）&lt;/p&gt; &#xA;&lt;p&gt;threshold_warning_used_memory字段含义：设置已用内存报警阀值（单位M）&lt;/p&gt; &#xA;&lt;h3&gt;3、修改conn.php配置文件&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;vim /var/www/html/redis_monitor/conn.php&#xA;&#xA;$con = mysqli_connect(&#34;127.0.0.1&#34;,&#34;admin&#34;,&#34;hechunyang&#34;,&#34;redis_monitor&#34;,&#34;3306&#34;) or die(&#34;数据库链接错误&#34;.mysqli_error());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;改成你的Redis Monitor监控工具表结构（redis_monitor库）连接信息&lt;/p&gt; &#xA;&lt;h3&gt;4、修改邮件报警信息&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd /var/www/html/redis_monitor/mail/&#xA;&#xA;vim mail.php&#xA;&#xA;system(&#34;./mail/sendEmail -f chunyang_he@139.com -t &#39;{$this-&amp;gt;send_mail_to_list}&#39; -s &#xA;smtp.139.com:25 -u &#39;{$this-&amp;gt;alarm_subject}&#39; -o message-charset=utf8 -o message-content-type=html -m &#39;报警信息：&amp;lt;br&amp;gt;&amp;lt;font &#xA;color=&#39;#FF0000&#39;&amp;gt;{$this-&amp;gt;alarm_info}&amp;lt;/font&amp;gt;&#39; -xu chunyang_he@139.com -xp &#xA;&#39;123456&#39; -o tls=no&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;改成你的发件人地址，账号密码，里面的变量不用修改。&lt;/p&gt; &#xA;&lt;h3&gt;5、修改微信报警信息&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd /var/www/html/redis_monitor/weixin/&#xA;&#xA;vim wechat.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;微信企业号设置移步&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/X-Mars/Zabbix-Alert-WeChat/raw/master/README.md&#34;&gt;https://github.com/X-Mars/Zabbix-Alert-WeChat/blob/master/README.md&lt;/a&gt; 看此教程配置。&lt;/p&gt; &#xA;&lt;h3&gt;6、定时任务每分钟抓取一次&lt;/h3&gt; &#xA;&lt;h1&gt;crontab -l&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;*/1 * * * * /usr/bin/php /var/www/html/redis_monitor/check_redis_status.php &amp;gt; /dev/null 2 &amp;gt;&amp;amp;1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;check_redis_status.php（用来采集被监控端Redis状态信息和触发报警）&lt;/h5&gt; &#xA;&lt;h3&gt;7、更改页面自动刷新频率&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;vim redis_status_monitor.php&#xA;&#xA;http-equiv=&#34;refresh&#34; content=&#34;600&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;默认页面每600秒自动刷新一次。&lt;/p&gt; &#xA;&lt;h3&gt;8、页面访问&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://yourIP/redis_monitor/redis_status_monitor.php&#34;&gt;http://yourIP/redis_monitor/redis_status_monitor.php&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;加一个超链接，可方便地接入你们的自动化运维平台里。&lt;/p&gt;</summary>
  </entry>
</feed>