<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-12T01:52:49Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>muennich/urxvt-perls</title>
    <updated>2022-07-12T01:52:49Z</updated>
    <id>tag:github.com,2022-07-12:/muennich/urxvt-perls</id>
    <link href="https://github.com/muennich/urxvt-perls" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Perl extensions for the rxvt-unicode terminal emulator&lt;/p&gt;&lt;hr&gt;&lt;p&gt;A small collection of perl extensions for the rxvt-unicode terminal emulator.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Simply place the scripts you want to install in /usr/lib/urxvt/perl/ for system-wide availability or in ~/.urxvt/ext/ for user-only availability. You can also put them in a folder of your choice, but then you have to add this line to your .Xdefaults/.Xresources:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;URxvt.perl-lib: /your/folder/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the following sections for information on how to enable the scripts or set script-specific options and keyboard mappings in your .Xdefaults/.Xresources.&lt;/p&gt; &#xA;&lt;h2&gt;keyboard-select&lt;/h2&gt; &#xA;&lt;p&gt;Use keyboard shortcuts to select and copy text.&lt;/p&gt; &#xA;&lt;p&gt;After installing, put the following lines in your .Xdefaults/.Xresources:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;URxvt.perl-ext-common: ...,keyboard-select&#xA;URxvt.keysym.M-Escape: perl:keyboard-select:activate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following line overwrites the default Meta-s binding and allows to activate keyboard-select directly in backward search mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;URxvt.keysym.M-s: perl:keyboard-select:search&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use Meta-Escape to activate selection mode, then use the following keys:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;h/j/k/l:    Move cursor left/down/up/right (also with arrow keys)&#xA;g/G/0/^/$/H/M/L/f/F/;/,/w/W/b/B/e/E: More vi-like cursor movement keys&#xA;&#39;/&#39;/?:      Start forward/backward search&#xA;n/N:        Repeat last search, N: in reverse direction&#xA;Ctrl-f/b:   Scroll down/up one screen&#xA;Ctrl-d/u:   Scroll down/up half a screen&#xA;v/V/Ctrl-v: Toggle normal/linewise/blockwise selection&#xA;y/Return:   Copy selection to primary buffer, Return: quit afterwards&#xA;Y:          Copy selected lines to primary buffer or cursor line and quit&#xA;q/Escape:   Quit keyboard selection mode&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;URxvt.keyboard-select.clipboard: If true, copy to clipboard too&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>binary-com/perl-feed-phasecheck</title>
    <updated>2022-07-12T01:52:49Z</updated>
    <id>tag:github.com,2022-07-12:/binary-com/perl-feed-phasecheck</id>
    <link href="https://github.com/binary-com/perl-feed-phasecheck" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Feed::PhaseCheck&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/binary-com/perl-feed-phasecheck&#34;&gt;&lt;img src=&#34;https://travis-ci.org/binary-com/perl-feed-phasecheck.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/binary-com/perl-feed-phasecheck&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/binary-com/perl-feed-phasecheck/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Module that finds the relative time delay between two feed segments.&lt;/p&gt; &#xA;&lt;p&gt;Accomplished by shifting one feed relative to the other and then computing the error (absolute difference).&lt;/p&gt; &#xA;&lt;p&gt;The shift that yields the lowest error corresponds to the relative delay between he two input feeds.&lt;/p&gt; &#xA;&lt;p&gt;The output consists of the delay found, and the error in delayed point.&lt;/p&gt; &#xA;&lt;p&gt;Module has only one function &lt;strong&gt;compare_feeds&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Usage:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;use Feed::PhaseCheck qw(compare_feeds);&#xA;my $sample = {&#xA;    &#34;1451276654&#34; =&amp;gt; &#34;1.097655&#34;,&#xA;    &#34;1451276655&#34; =&amp;gt; &#34;1.09765&#34;,&#xA;    ...&#xA;    &#34;1451276763&#34; =&amp;gt; &#34;1.0976&#34;,&#xA;    &#34;1451276764&#34; =&amp;gt; &#34;1.097595&#34;&#xA;};&#xA;my $compare_to = {&#xA;    &#34;1451276629&#34; =&amp;gt; &#34;1.09765&#34;,&#xA;    &#34;1451276630&#34; =&amp;gt; &#34;1.09764916666667&#34;,&#xA;    ...&#xA;    &#34;1451276791&#34; =&amp;gt; &#34;1.097595&#34;,&#xA;    &#34;1451276792&#34; =&amp;gt; &#34;1.097595&#34;&#xA;}&#xA;my $max_delay_check = 30;    # seconds&#xA;my ($errors,$delay_with_min_err) = compare_feeds($sample,$compare_to,$max_delay_check);&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>