<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-12T01:36:45Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nkh/P5-App-Asciio</title>
    <updated>2024-03-12T01:36:45Z</updated>
    <id>tag:github.com,2024-03-12:/nkh/P5-App-Asciio</id>
    <link href="https://github.com/nkh/P5-App-Asciio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Plain ASCII diagram&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GUI&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/nkh/P5-App-Asciio/raw/main/screencasts/asciio.png&#34; alt=&#34;GUI&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;TUI&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/nkh/P5-App-Asciio/raw/main/screencasts/tasciio.png&#34; alt=&#34;TUI&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;SYNOPSIS&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;     ___                     &#xA;    /   |  __________________&#xA;   / /| | / ___/ ___/ / / __ \&#xA;  / ___ |(__  ) /__/ / / /_/ /&#xA; /_/  |_/____/\___/_/_/\____/&#xA;&#xA;$&amp;gt; asciio [file.asciio] # GUI application using Gtk3&#xA;&#xA;$&amp;gt; tasciio [file.asciio] # TUI application&#xA;&#xA;$&amp;gt; asciio_to_text file.asciio # converts asciio files to ASCII&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;DESCRIPTION&lt;/h1&gt; &#xA;&lt;p&gt;Asciio allows you to draw ASCII diagrams in a GUI or TUI. The diagrams can be saved as ASCII text or in a format that allows you to modify them later.&lt;/p&gt; &#xA;&lt;p&gt;Diagrams consist of boxes and text elements connected by arrows. Boxes stay connected when you move them around.&lt;/p&gt; &#xA;&lt;p&gt;Both GUI and TUI have vim-like bindings, the GUI has a few extra bindings that are usually found in GUI applications; bindings can be modified.&lt;/p&gt; &#xA;&lt;p&gt;Keyboard bindings are the best way to use Asciio, they can be modified.&lt;/p&gt; &#xA;&lt;p&gt;To list the bindings: $&amp;gt; perldoc App:Asciio.&lt;/p&gt; &#xA;&lt;h1&gt;DOCUMENTATION&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nkh.github.io/P5-App-Asciio/&#34;&gt;Online Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Interface&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;      .-------------------------------------------------------------.&#xA;      | ........................................................... |&#xA;      | ..........-------------..------------..--------------...... |&#xA;      | .........| stencils  &amp;gt; || asciio   &amp;gt; || box          |..... |&#xA;      | .........| Rulers    &amp;gt; || computer &amp;gt; || text         |..... |&#xA;      | .........| File      &amp;gt; || people   &amp;gt; || wirl_arrow   |..... |&#xA; grid-----&amp;gt;......&#39;-------------&#39;| divers   &amp;gt; || axis         |..... |&#xA;      | ..................^.....&#39;------------&#39;| ...          |..... |&#xA;      | ..................|...................&#39;--------------&#39;..... |&#xA;      | ..................|........................................ |&#xA;      &#39;-------------------|-----------------------------------------&#39;&#xA;                          |&#xA;           context menu access some commands&#xA;           most are accessed through the keyboard&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Exporting to ASCII&lt;/h2&gt; &#xA;&lt;p&gt;You can export to a file in ASCII by using a &#39;.txt&#39; file extension.&lt;/p&gt; &#xA;&lt;p&gt;You can also export the selection, in ASCII, to the Primary clipboard.&lt;/p&gt; &#xA;&lt;h2&gt;Elements&lt;/h2&gt; &#xA;&lt;h3&gt;boxes and text&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;                .----------.&#xA;                |  title   |&#xA; .----------.   |----------|   ************&#xA; |          |   | body 1   |   *          *&#xA; &#39;----------&#39;   | body 2   |   ************&#xA;                &#39;----------&#39;&#xA;                                      any text&#xA;                            (\_/)         |&#xA;        text                (O.o)  &amp;lt;------&#39;&#xA;                            (&amp;gt; &amp;lt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;if-box and process-box&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;   .--------------.    &#xA;  / a == b         \     __________&#xA; (    &amp;amp;&amp;amp;            )    \         \&#xA;  \ &#39;string&#39; ne &#39;&#39; /      ) process )&#xA;   &#39;--------------&#39;      /_________/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;rhombus and ellipse&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;      ,&#39;,              _..---.._&#xA;    ,&#39;   &#39;,         .&#39;&#39;         &#39;&#39;.&#xA;  ,&#39;       &#39;,      /               \&#xA; :  edit me  :    |     edit me     |&#xA;  &#39;,       ,&#39;      \               /&#xA;    &#39;,   ,&#39;         &#39;..         ..&#39;&#xA;      &#39;,&#39;              &#39;--...--&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;user boxes and exec-boxes&lt;/h3&gt; &#xA;&lt;p&gt;For simple elements, put your design in a box, with or without a frame.&lt;/p&gt; &#xA;&lt;p&gt;The an &#34;exec-box&#34; object that lets you put the output of an external application in a box, in the example below the table is generated, if you already have text in a file you can use &#39;cat your_file&#39; as the command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  +------------+------------+------------+------------+&#xA;  | input_size ‖ algorithmA | algorithmB | algorithmC |&#xA;  +============+============+============+============+&#xA;  |     1      ‖ 206.4 sec. | 206.4 sec. | 0.02 sec.  |&#xA;  +------------+------------+------------+------------+&#xA;  |    250     ‖     -      |  80 min.   | 2.27 sec.  |&#xA;  +------------+------------+------------+------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;wirl-arrow&lt;/h3&gt; &#xA;&lt;p&gt;Rotating the end clockwise or counter-clockwise changes its direction.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;      ^            ^          &#xA;      |    -----.   \         &#xA;      |         |    \           &#xA;      &#39;----     |     &#39;------- &#xA;------&amp;gt;         |             &#xA;                v             &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;multi section wirl-arrow&lt;/h3&gt; &#xA;&lt;p&gt;A set of whirl arrows connected to each other.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; .----------.                     .&#xA; |          |                \   / \&#xA;    .-------&#39;           ^     \ /   \&#xA;    |   .-----------&amp;gt;    \     &#39;     .&#xA;    |   &#39;----.            \          /&#xA;    |        |             \        /&#xA;    &#39;--------&#39;              &#39;------&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;angled-arrow and axis&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;-------.       .-------&#xA;        \     /&#xA;         \   /            ^         &#xA;                          |   ^     &#xA;         /   \            |  /      &#xA;        /     \           | /       &#xA; ------&#39;       &#39;-------    --------&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;          .---.  .---. .---.  .---.    .---.  .---.&#xA; OS API   &#39;---&#39;  &#39;---&#39; &#39;---&#39;  &#39;---&#39;    &#39;---&#39;  &#39;---&#39;&#xA;            |      |     |      |        |      |&#xA;            v      v     |      v        |      v&#xA;          .------------. | .-----------. |  .-----.&#xA;          | Filesystem | | | Scheduler | |  | MMU |&#xA;          &#39;------------&#39; | &#39;-----------&#39; |  &#39;-----&#39;&#xA;                 |       |      |        |&#xA;                 v       |      |        v&#xA;              .----.     |      |    .---------.&#xA;              | IO |&amp;lt;----&#39;      |    | Network |&#xA;              &#39;----&#39;            |    &#39;---------&#39;&#xA;                 |              |         |&#xA;                 v              v         v&#xA;          .---------------------------------------.&#xA;          |                  HAL                  |&#xA;          &#39;---------------------------------------&#39;&#xA;&#xA;&#xA;                             .-Base::Class::Derived_B&#xA;                            /&#xA; Something::Else           /&#xA;         \                .----Base::Class::Derived_C &#xA;          \              /&#xA;           &#39;----Base::Class&#xA;                 &#39;       \&#xA;                /         &#39;----Latest::Greatest&#xA;  Some::Thing--&#39;                                           &#xA;&#xA;  _____ &#xA; | ___ |&#xA; ||___|| load&#xA; | ooo |--.------------------.------------------------.&#xA; &#39;_____&#39;  |                  |                        |&#xA;          v                  v                        v&#xA;  .----------.  .--------------------------.  .----------------.&#xA;  | module C |  |         module A         |  |    module B    |&#xA;  &#39;----------&#39;  |--------------------------|  | (instrumented) |&#xA;       |        |        .-----.           |  &#39;----------------&#39;&#xA;       &#39;----------------&amp;gt;| A.o |           |          |&#xA;                |        &#39;-----&#39;           |          |&#xA;                |   .------------------.   |          |&#xA;                |   | A.instrumented.o |&amp;lt;-------------&#39;&#xA;                |   &#39;------------------&#39;   |&#xA;                &#39;--------------------------&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Unicode example&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/nkh/P5-App-Asciio/raw/main/screencasts/asciio_unicode.png&#34; alt=&#34;Unicode&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Export to SVG example&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/nkh/P5-App-Asciio/raw/main/screencasts/asciio_svg_source.png&#34; alt=&#34;SVG source&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/nkh/P5-App-Asciio/raw/main/screencasts/asciio_svg.png&#34; alt=&#34;SVG&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &#34;goat&#34; project (&lt;a href=&#34;https://github.com/blampe/goat&#34;&gt;https://github.com/blampe/goat&lt;/a&gt;) must be installed.&lt;/p&gt; &#xA;&lt;h1&gt;Asciio and Vim&lt;/h1&gt; &#xA;&lt;p&gt;You can call Asciio from vim and insert your diagram.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    map  &amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;a :call TAsciio()&amp;lt;cr&amp;gt;&#xA;&#xA;    function! TAsciio()&#xA;        let line = getline(&#39;.&#39;)&#xA;&#xA;        let tempn = tempname()&#xA;        let tempnt = tempn . &#39;.txt&#39;&#xA;        let temp = shellescape(tempn)&#xA;        let tempt = shellescape(tempnt)&#xA;&#xA;        exec &#34;normal i Asciio_file:&#34; . tempn . &#34;\&amp;lt;Esc&amp;gt;&#34;&#xA;&#xA;        if ! has(&#34;gui_running&#34;)&#xA;        exec &#34;silent !mkdir -p $(dirname &#34; . temp . &#34;)&#34; &#xA;        exec &#34;silent !cp ~/.config/Asciio/templates/empty.asciio &#34;. temp . &#34;; tasciio &#34; . temp . &#34;; asciio_to_text &#34; . temp . &#34; &amp;gt;&#34; . tempt &#xA;        exec &#34;read &#34; . tempnt&#xA;        endif&#xA;&#xA;        redraw!&#xA;    endfunction&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;OTHER PROJECTS&lt;/h1&gt; &#xA;&lt;p&gt;SVG conversion: &lt;img src=&#34;https://github.com/blampe/goat&#34; alt=&#34;goat&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Tree generation: &lt;img src=&#34;https://github.com/yzhong52/ascii_tree&#34; alt=&#34;ascii_tree&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;ASCII Math and other: &lt;img src=&#34;https://github.com/ArthurSonzogni/Diagon&#34; alt=&#34;Diagon&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Send me links to your favorites tools (only command line, no libs) and I&#39;ll add them if they integrate will in Asciio.&lt;/p&gt; &#xA;&lt;h1&gt;VIDEO&lt;/h1&gt; &#xA;&lt;p&gt;An old video that shows basic usage:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://www.youtube.com/watch?v=0l9W84PhOyI&#34; alt=&#34;Asciio&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;INSTALL&lt;/h1&gt; &#xA;&lt;h2&gt;Ubuntu / Debian&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;    apt install libdata-compare-perl libdata-compare-perl libdirectory-scratch-structured-perl libeval-context-perl libextutils-pkgconfig-perl libfile-homedir-perl libgtk3-perl libio-prompter-perl libterm-size-any-perl libterm-termkey-perl libtest-block-perl libtermkey-dev libmodule-build-perl libsereal-perl libcompress-bzip2-perl libpango-perl libcarp-clan-perl libtest-deep-perl libtest-most-perl libdevel-stacktrace-perl libexception-class-perl libcapture-tiny-perl libtest-differences-perl libmodule-util-perl libtest-nowarnings-perl libhttp-request-params-perl&#xA;&#xA;    cpan install Data::TreeDumper::Renderer::GTK Gtk3::Helper App::Asciio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Read &lt;em&gt;documentation/mdbook_asciio/src/guide/installation.md&lt;/em&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Container image&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker pull nadimkhemir/asciio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Running the image&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;podman run -it --net=host --env=&#34;DISPLAY&#34; --volume=&#34;$HOME/.Xauthority:/root/.Xauthority:rw&#34; --volume=&#34;$HOME:/home/nadim&#34; asciio&#xA;&#xA;tasciio # TUI asciio&#xA;&#xA;asciio # GUI asciio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;AUTHORS&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;Khemir Nadim ibn Hamouda&#xA;https://github.com/nkh&#xA;CPAN ID: NKH&#xA;&#xA;Qin Qing&#xA;northisland2017@gmail.com&#xA;Unicode support, scroll bar, and rhombus object&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>