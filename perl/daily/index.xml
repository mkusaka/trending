<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-03T01:48:40Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>HariSekhon/DevOps-Perl-tools</title>
    <updated>2022-06-03T01:48:40Z</updated>
    <id>tag:github.com,2022-06-03:/HariSekhon/DevOps-Perl-tools</id>
    <link href="https://github.com/HariSekhon/DevOps-Perl-tools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;25+ DevOps CLI Tools - Anonymizer, SQL ReCaser (MySQL, PostgreSQL, AWS Redshift, Snowflake, Apache Drill, Hive, Impala, Cassandra CQL, Microsoft SQL Server, Oracle, Couchbase N1QL, Dockerfiles), Hadoop HDFS &amp; Hive tools, Solr/SolrCloud CLI, Nginx stats &amp; HTTP(S) URL watchers for load-balanced web farms, Linux tools etc.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hari Sekhon - DevOps Perl Tools&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/harisekhon/devops-perl-tools?logo=github&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/network&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/harisekhon/devops-perl-tools?logo=github&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lines%20of%20code-9.1k-lightgrey?logo=codecademy&#34; alt=&#34;Lines of Code&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/HariSekhon/DevOps-Perl-tools&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/commits/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/HariSekhon/DevOps-Perl-tools?logo=github&#34; alt=&#34;GitHub Last Commit&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.codacy.com/gh/HariSekhon/DevOps-Perl-tools/dashboard&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Grade/366f2da87b794566bbf194092752f25a&#34; alt=&#34;Codacy&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codefactor.io/repository/github/harisekhon/DevOps-Perl-tools&#34;&gt;&lt;img src=&#34;https://www.codefactor.io/repository/github/harisekhon/DevOps-Perl-tools/badge&#34; alt=&#34;CodeFactor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=HariSekhon_DevOps-Perl-tools&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=HariSekhon_DevOps-Perl-tools&amp;amp;metric=alert_status&#34; alt=&#34;Quality Gate Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=HariSekhon_DevOps-Perl-tools&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=HariSekhon_DevOps-Perl-tools&amp;amp;metric=sqale_rating&#34; alt=&#34;Maintainability Rating&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=HariSekhon_DevOps-Perl-tools&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=HariSekhon_DevOps-Perl-tools&amp;amp;metric=reliability_rating&#34; alt=&#34;Reliability Rating&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=HariSekhon_DevOps-Perl-tools&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=HariSekhon_DevOps-Perl-tools&amp;amp;metric=security_rating&#34; alt=&#34;Security Rating&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codiga.io/project/4745/dashboard&#34;&gt;&lt;img src=&#34;https://api.codiga.io/project/4745/status/svg&#34; alt=&#34;Codiga Grade&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codiga.io/project/4745/dashboard&#34;&gt;&lt;img src=&#34;https://api.codiga.io/project/4745/score/svg&#34; alt=&#34;Codiga Score&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/OS-Linux-blue?logo=linux&#34; alt=&#34;Linux&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/OS-Mac-blue?logo=apple&#34; alt=&#34;Mac&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/harisekhon/perl-tools/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/container-Docker-blue?logo=docker&amp;amp;logoColor=white&#34; alt=&#34;Docker&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/Dockerfiles&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/repo-Dockerfiles-blue?logo=docker&amp;amp;logoColor=white&#34; alt=&#34;Dockerfile&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/harisekhon/perl-tools&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/harisekhon/perl-tools?label=DockerHub%20pulls&amp;amp;logo=docker&amp;amp;logoColor=white&#34; alt=&#34;DockerHub Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/harisekhon/perl-tools/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/automated/harisekhon/perl-tools?logo=docker&amp;amp;logoColor=white&#34; alt=&#34;DockerHub Build Automated&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://seladb.github.io/StarTrack-js/#/preload?r=HariSekhon,Nagios-Plugins&amp;amp;r=HariSekhon,Dockerfiles&amp;amp;r=HariSekhon,DevOps-Python-tools&amp;amp;r=HariSekhon,DevOps-Perl-tools&amp;amp;r=HariSekhon,DevOps-Bash-tools&amp;amp;r=HariSekhon,HAProxy-configs&amp;amp;r=HariSekhon,SQL-scripts&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Star-Track-blue?logo=github&#34; alt=&#34;StarTrack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Bash-tools/raw/master/STARCHARTS.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Star-Charts-blue?logo=github&#34; alt=&#34;StarCharts&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- these badges don&#39;t work any more&#xA;[![Docker Build Status](https://img.shields.io/docker/cloud/build/harisekhon/perl-tools?logo=docker&amp;logoColor=white)](https://hub.docker.com/r/harisekhon/perl-tools/builds)&#xA;[![MicroBadger](https://images.microbadger.com/badges/image/harisekhon/perl-tools.svg)](http://microbadger.com/#/images/harisekhon/perl-tools)&#xA;--&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://harisekhon.github.io/CI-CD/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/CI%20Builds-Overview%20Page-blue?logo=circleci&#34; alt=&#34;CI Builds Overview&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/raw/master/Jenkinsfile&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Jenkins-ready-blue?logo=jenkins&amp;amp;logoColor=white&#34; alt=&#34;Jenkins&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/raw/master/.concourse.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Concourse-ready-blue?logo=concourse&#34; alt=&#34;Concourse&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/raw/master/.gocd.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/GoCD-ready-blue?logo=go&#34; alt=&#34;GoCD&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/TeamCity-CI&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/TeamCity-ready-blue?logo=teamcity&#34; alt=&#34;TeamCity&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/HariSekhon/DevOps-Perl-tools&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/HariSekhon/DevOps-Perl-tools.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://buildkite.com/hari-sekhon/devops-perl-tools&#34;&gt;&lt;img src=&#34;https://img.shields.io/buildkite/0a23f5b0b09f6b2a913e3e3fa258494edb0e8dcda2b40e19fa/master?label=BuildKite&amp;amp;logo=buildkite&#34; alt=&#34;BuildKite&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/HariSekhon/DevOps-Perl-tools/branch/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/appveyor/build/harisekhon/DevOps-Perl-tools/master?logo=appveyor&amp;amp;label=AppVeyor&#34; alt=&#34;AppVeyor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cloud.drone.io/HariSekhon/DevOps-Perl-tools&#34;&gt;&lt;img src=&#34;https://img.shields.io/drone/build/HariSekhon/DevOps-Perl-tools/master?logo=drone&amp;amp;label=Drone&#34; alt=&#34;Drone&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codeship.com/projects/387254&#34;&gt;&lt;img src=&#34;https://app.codeship.com/projects/c9e3bf70-3c5f-0138-d157-661d474a0ccb/status?branch=master&#34; alt=&#34;Codeship Status for HariSekhon/DevOps-Perl-tools&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://g.codefresh.io/pipelines/edit/new/builds?id=5e58e2a9c1d3cf1248fa485b&amp;amp;pipeline=DevOps-Perl-tools&amp;amp;projects=GitHub&amp;amp;projectId=5e52ca8ea284e00f882ea992&amp;amp;context=github&amp;amp;filter=page:1;pageSize:10;timeFrameStart:week&#34;&gt;&lt;img src=&#34;https://g.codefresh.io/api/badges/pipeline/harisekhon/GitHub%2FDevOps-Perl-tools?branch=master&amp;amp;key=eyJhbGciOiJIUzI1NiJ9.NWU1MmM5OGNiM2FiOWUzM2Y3ZDZmYjM3.O69674cW7vYom3v5JOGKXDbYgCVIJU9EWhXUMHl3zwA&amp;amp;type=cf-1&#34; alt=&#34;Codefresh&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cirrus-ci.com/github/HariSekhon/DevOps-Perl-tools&#34;&gt;&lt;img src=&#34;https://img.shields.io/cirrus/github/HariSekhon/DevOps-Perl-tools/master?logo=Cirrus%20CI&amp;amp;label=Cirrus%20CI&#34; alt=&#34;Cirrus CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://harisekhon.semaphoreci.com/projects/DevOps-Perl-tools&#34;&gt;&lt;img src=&#34;https://harisekhon.semaphoreci.com/badges/DevOps-Perl-tools.svg?sanitize=true&#34; alt=&#34;Semaphore&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.wercker.com/harisekhon/DevOps-Perl-tools/runs&#34;&gt;&lt;img src=&#34;https://app.wercker.com/status/1f2132ff1c5b4098e3321456e67f54db/s/master&#34; alt=&#34;Wercker&#34; title=&#34;wercker status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/raw/master/buddy.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Buddy-ready-1A86FD?logo=buddy&#34; alt=&#34;Buddy&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/raw/master/shippable.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Shippable-legacy-lightgrey?logo=jfrog&amp;amp;label=Shippable&#34; alt=&#34;Shippable&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/raw/master/.travis.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/TravisCI-ready-blue?logo=travis&amp;amp;label=Travis%20CI&#34; alt=&#34;Travis CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!--[![Wercker](https://img.shields.io/wercker/ci/5e58ef724fb3d108006b2038/master?label=Wercker&amp;logo=oracle)](https://app.wercker.com/harisekhon/DevOps-Perl-tools/runs)--&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/harisekhon/GitHub/_build/latest?definitionId=7&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/harisekhon/GitHub/_apis/build/status/HariSekhon.DevOps-Perl-tools?branchName=master&#34; alt=&#34;Azure DevOps Pipeline&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitlab.com/HariSekhon/DevOps-Perl-tools/pipelines&#34;&gt;&lt;img src=&#34;https://img.shields.io/gitlab/pipeline/harisekhon/DevOps-Perl-tools?logo=gitlab&amp;amp;label=GitLab%20CI&#34; alt=&#34;GitLab Pipeline&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bitbucket.org/harisekhon/devops-perl-tools/addon/pipelines/home#!/&#34;&gt;&lt;img src=&#34;https://img.shields.io/bitbucket/pipelines/harisekhon/devops-perl-tools/master?logo=bitbucket&amp;amp;label=BitBucket%20CI&#34; alt=&#34;BitBucket Pipeline&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/raw/master/buildspec.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/AWS%20CodeBuild-ready-blue?logo=amazon%20aws&#34; alt=&#34;AWS CodeBuild&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/raw/master/cloudbuild.yaml&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/GCP%20Cloud%20Build-ready-blue?logo=google%20cloud&amp;amp;logoColor=white&#34; alt=&#34;GCP Cloud Build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/harisekhon/GitHub/_git/DevOps-Perl-tools&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/repo-Azure%20DevOps-0078D7?logo=azure%20devops&#34; alt=&#34;Repo on Azure DevOps&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/repo-GitHub-2088FF?logo=github&#34; alt=&#34;Repo on GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitlab.com/HariSekhon/DevOps-Perl-tools&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/repo-GitLab-FCA121?logo=gitlab&#34; alt=&#34;Repo on GitLab&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bitbucket.org/HariSekhon/DevOps-Perl-tools&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/repo-BitBucket-0052CC?logo=bitbucket&#34; alt=&#34;Repo on BitBucket&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions/workflows/shellcheck.yaml&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions/workflows/shellcheck.yaml/badge.svg?sanitize=true&#34; alt=&#34;ShellCheck&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions/workflows/validate.yaml&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions/workflows/validate.yaml/badge.svg?sanitize=true&#34; alt=&#34;Validation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions/workflows/semgrep.yaml&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions/workflows/semgrep.yaml/badge.svg?sanitize=true&#34; alt=&#34;Semgrep&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions/workflows/kics.yaml&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions/workflows/kics.yaml/badge.svg?sanitize=true&#34; alt=&#34;Kics&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions/workflows/docker_perl_alpine.yaml&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions/workflows/docker_perl_alpine.yaml/badge.svg?sanitize=true&#34; alt=&#34;Docker Build (Alpine)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions/workflows/docker_perl_centos.yaml&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions/workflows/docker_perl_centos.yaml/badge.svg?sanitize=true&#34; alt=&#34;Docker Build (CentOS)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions/workflows/docker_perl_debian.yaml&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions/workflows/docker_perl_debian.yaml/badge.svg?sanitize=true&#34; alt=&#34;Docker Build (Debian)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions/workflows/docker_perl_fedora.yaml&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions/workflows/docker_perl_fedora.yaml/badge.svg?sanitize=true&#34; alt=&#34;Docker Build (Fedora)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions/workflows/docker_perl_ubuntu.yaml&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions/workflows/docker_perl_ubuntu.yaml/badge.svg?sanitize=true&#34; alt=&#34;Docker Build (Ubuntu)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22GitHub+Actions+Ubuntu%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/GitHub%20Actions%20Ubuntu/badge.svg?sanitize=true&#34; alt=&#34;GitHub Actions Ubuntu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Mac%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Mac/badge.svg?sanitize=true&#34; alt=&#34;Mac&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Mac+10.15&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Mac%2010.15/badge.svg?sanitize=true&#34; alt=&#34;Mac 10.15&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Ubuntu%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Ubuntu/badge.svg?sanitize=true&#34; alt=&#34;Ubuntu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Ubuntu+14.04%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Ubuntu%2014.04/badge.svg?sanitize=true&#34; alt=&#34;Ubuntu 14.04&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Ubuntu+16.04%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Ubuntu%2016.04/badge.svg?sanitize=true&#34; alt=&#34;Ubuntu 16.04&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Ubuntu+18.04%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Ubuntu%2018.04/badge.svg?sanitize=true&#34; alt=&#34;Ubuntu 18.04&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Ubuntu+20.04%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Ubuntu%2020.04/badge.svg?sanitize=true&#34; alt=&#34;Ubuntu 20.04&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Debian%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Debian/badge.svg?sanitize=true&#34; alt=&#34;Debian&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Debian+8%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Debian%208/badge.svg?sanitize=true&#34; alt=&#34;Debian 8&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Debian+9%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Debian%209/badge.svg?sanitize=true&#34; alt=&#34;Debian 9&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Debian+10%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Debian%2010/badge.svg?sanitize=true&#34; alt=&#34;Debian 10&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22CentOS%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/CentOS/badge.svg?sanitize=true&#34; alt=&#34;CentOS&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22CentOS+7%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/CentOS%207/badge.svg?sanitize=true&#34; alt=&#34;CentOS 7&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22CentOS+8%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/CentOS%208/badge.svg?sanitize=true&#34; alt=&#34;CentOS 8&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Fedora%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Fedora/badge.svg?sanitize=true&#34; alt=&#34;Fedora&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Alpine%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Alpine/badge.svg?sanitize=true&#34; alt=&#34;Alpine&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Alpine+3%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Alpine%203/badge.svg?sanitize=true&#34; alt=&#34;Alpine 3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Perl-5.10+-39457E?logo=perl&#34; alt=&#34;Perl versions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Perl%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Perl/badge.svg?sanitize=true&#34; alt=&#34;Perl&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Perl+5.10%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Perl%205.10/badge.svg?sanitize=true&#34; alt=&#34;Perl 5.10&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Perl+5.12%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Perl%205.12/badge.svg?sanitize=true&#34; alt=&#34;Perl 5.12&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Perl+5.14%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Perl%205.14/badge.svg?sanitize=true&#34; alt=&#34;Perl 5.14&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Perl+5.16%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Perl%205.16/badge.svg?sanitize=true&#34; alt=&#34;Perl 5.16&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Perl+5.18%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Perl%205.18/badge.svg?sanitize=true&#34; alt=&#34;Perl 5.18&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Perl+5.20%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Perl%205.20/badge.svg?sanitize=true&#34; alt=&#34;Perl 5.20&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Perl+5.22%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Perl%205.22/badge.svg?sanitize=true&#34; alt=&#34;Perl 5.22&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Perl+5.24%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Perl%205.24/badge.svg?sanitize=true&#34; alt=&#34;Perl 5.24&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Perl+5.26%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Perl%205.26/badge.svg?sanitize=true&#34; alt=&#34;Perl 5.26&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Perl+5.28%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Perl%205.28/badge.svg?sanitize=true&#34; alt=&#34;Perl 5.28&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Perl+5.30%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Perl%205.30/badge.svg?sanitize=true&#34; alt=&#34;Perl 5.30&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Perl+5.32%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Perl%205.32/badge.svg?sanitize=true&#34; alt=&#34;Perl 5.32&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/actions?query=workflow%3A%22Perl+5.34%22&#34;&gt;&lt;img src=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/workflows/Perl%205.34/badge.svg?sanitize=true&#34; alt=&#34;Perl 5.34&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://git.io/perl-tools&#34;&gt;git.io/perl-tools&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Linux, Web, Anonymizer, SQL ReCaser, Hadoop, Hive, Solr, Big Data &amp;amp; NoSQL Tools&lt;/h2&gt; &#xA;&lt;p&gt;DevOps, Linux, SQL, Web, Big Data, NoSQL, templates for various programming languages and Kubernetes. All programs have &lt;code&gt;--help&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See Also:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HariSekhon/DevOps-Bash-tools&#34;&gt;DevOps Bash Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HariSekhon/DevOps-Python-tools&#34;&gt;DevOps Python Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HariSekhon/DevOps-Golang-tools&#34;&gt;DevOps Golang Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HariSekhon/Nagios-Plugins&#34;&gt;Advanced Nagios Plugins Collection&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;repos which contains hundreds more scripts and programs for Cloud, Big Data, SQL, NoSQL, Web and Linux.&lt;/p&gt; &#xA;&lt;p&gt;Hari Sekhon&lt;/p&gt; &#xA;&lt;p&gt;Cloud &amp;amp; Big Data Contractor, United Kingdom&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/HariSekhon/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/LinkedIn%20Profile-HariSekhon-blue?logo=linkedin&#34; alt=&#34;My LinkedIn&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h6&gt;(you&#39;re welcome to connect with me on LinkedIn)&lt;/h6&gt; &#xA;&lt;h5&gt;Make sure you run &lt;code&gt;make update&lt;/code&gt; if updating and not just &lt;code&gt;git pull&lt;/code&gt; as you will often need the latest library submodule and possibly new upstream libraries&lt;/h5&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;Ready to run Docker image&lt;/h3&gt; &#xA;&lt;p&gt;All programs and their pre-compiled dependencies can be found ready to run on &lt;a href=&#34;https://hub.docker.com/r/harisekhon/tools/&#34;&gt;DockerHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;List all programs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run harisekhon/perl-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run any given program:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run harisekhon/perl-tools &amp;lt;program&amp;gt; &amp;lt;args&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Automated Build from source&lt;/h3&gt; &#xA;&lt;p&gt;installs git, make, pulls the repo and build the dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -L https://git.io/perl-bootstrap | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or manually&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/HariSekhon/DevOps-Perl-tools perl-tools&#xA;cd perl-tools&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure to read &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools#detailed-build-instructions&#34;&gt;Detailed Build Instructions&lt;/a&gt; further down for more information.&lt;/p&gt; &#xA;&lt;h4&gt;Optional: Generate self-contained Perl scripts with all dependencies built in to each file for easy distribution&lt;/h4&gt; &#xA;&lt;p&gt;After the &lt;code&gt;make&lt;/code&gt; build has finished, if you want to make self-contained versions of all the perl scripts with all dependencies included for copying around, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make fatpacks&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The self-contained scripts will be available in the &lt;code&gt;fatpacks/&lt;/code&gt; directory which is also tarred to &lt;code&gt;fatpacks.tar.gz&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;All programs come with a &lt;code&gt;--help&lt;/code&gt; switch which includes a program description and the list of command line options.&lt;/p&gt; &#xA;&lt;p&gt;Environment variables are supported for convenience and also to hide credentials from being exposed in the process list eg. &lt;code&gt;$PASSWORD&lt;/code&gt;. These are indicated in the &lt;code&gt;--help&lt;/code&gt; descriptions in brackets next to each option and often have more specific overrides with higher precedence eg. &lt;code&gt;$SOLR_HOST&lt;/code&gt; takes priority over &lt;code&gt;$HOST&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;DevOps Perl Tools - Inventory&lt;/h3&gt; &#xA;&lt;h5&gt;NOTE: Hadoop HDFS API Tools, Pig =&amp;gt; Elasticsearch/Solr, Pig Jython UDFs and authenticated PySpark IPython Notebook have moved to my &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Python-tools&#34;&gt;DevOps Python Tools&lt;/a&gt; repo&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Linux:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;anonymize.pl&lt;/code&gt; - anonymizes your configs / logs from files or stdin (for pasting to Apache Jira tickets or mailing lists) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;anonymizes: &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;hostnames / domains / FQDNs&lt;/li&gt; &#xA;       &lt;li&gt;email addresses&lt;/li&gt; &#xA;       &lt;li&gt;IP + MAC addresses&lt;/li&gt; &#xA;       &lt;li&gt;Kerberos principals&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://www.cisco.com&#34;&gt;Cisco&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://www.juniper.net&#34;&gt;Juniper&lt;/a&gt; &lt;a href=&#34;https://www.juniper.net/documentation/product/en_US/screenos&#34;&gt;ScreenOS&lt;/a&gt; configurations passwords, shared keys and SNMP strings&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;anonymize_custom.conf&lt;/code&gt; - put regex of your Name/Company/Project/Database/Tables to anonymize to &lt;code&gt;&amp;lt;custom&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;placeholder tokens indicate what was stripped out (eg. &lt;code&gt;&amp;lt;fqdn&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;password&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;custom&amp;gt;&lt;/code&gt;)&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;--ip-prefix&lt;/code&gt; leaves the last IP octect to aid in cluster debugging to still see differentiated nodes communicating with each other to compare configs and log communications&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;sqlcase.pl&lt;/code&gt; - capitalizes &lt;a href=&#34;https://en.wikipedia.org/wiki/SQL&#34;&gt;SQL&lt;/a&gt; code in files or stdin: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;*case.pl&lt;/code&gt; - more specific language support for just about every database and SQL-like language out there plus a few more non-SQL languages like &lt;a href=&#34;https://neo4j.com&#34;&gt;Neo4j&lt;/a&gt; &lt;a href=&#34;https://neo4j.com/developer/cypher-query-language/&#34;&gt;Cypher&lt;/a&gt; and &lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt;&#39;s &lt;a href=&#34;https://docs.docker.com/engine/reference/builder/&#34;&gt;Dockerfiles&lt;/a&gt;: &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;code&gt;athenacase.pl&lt;/code&gt; - &lt;a href=&#34;https://aws.amazon.com/athena/&#34;&gt;AWS Athena&lt;/a&gt; SQL&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;cqlcase.pl&lt;/code&gt; - &lt;a href=&#34;http://cassandra.apache.org/&#34;&gt;Cassandra&lt;/a&gt; &lt;a href=&#34;http://cassandra.apache.org/doc/latest/cql/&#34;&gt;CQL&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;cyphercase.pl&lt;/code&gt; - &lt;a href=&#34;https://neo4j.com&#34;&gt;Neo4j&lt;/a&gt; &lt;a href=&#34;https://neo4j.com/developer/cypher-query-language/&#34;&gt;Cypher&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;dockercase.pl&lt;/code&gt; - &lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt; (&lt;a href=&#34;https://docs.docker.com/engine/reference/builder/&#34;&gt;Dockerfiles&lt;/a&gt;)&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;drillcase.pl&lt;/code&gt; - &lt;a href=&#34;https://drill.apache.org/&#34;&gt;Apache Drill&lt;/a&gt; SQL&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;hivecase.pl&lt;/code&gt; - &lt;a href=&#34;https://hive.apache.org&#34;&gt;Hive&lt;/a&gt; &lt;a href=&#34;https://cwiki.apache.org/confluence/display/Hive/LanguageManual&#34;&gt;HQL&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;impalacase.pl&lt;/code&gt; - &lt;a href=&#34;https://impala.apache.org&#34;&gt;Impala&lt;/a&gt; SQL&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;influxcase.pl&lt;/code&gt; - &lt;a href=&#34;https://www.influxdata.com&#34;&gt;InfluxDB&lt;/a&gt; &lt;a href=&#34;https://docs.influxdata.com/influxdb/v1.7/query_language/spec/&#34;&gt;InfluxQL&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;mssqlcase.pl&lt;/code&gt; - &lt;a href=&#34;https://en.wikipedia.org/wiki/Microsoft_SQL_Server&#34;&gt;Microsoft SQL Server&lt;/a&gt; SQL&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;mysqlcase.pl&lt;/code&gt; - &lt;a href=&#34;https://www.mysql.com&#34;&gt;MySQL&lt;/a&gt; SQL&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;n1qlcase.pl&lt;/code&gt; - &lt;a href=&#34;https://www.couchbase.com/&#34;&gt;Couchbase&lt;/a&gt; &lt;a href=&#34;https://www.couchbase.com/products/n1ql&#34;&gt;N1QL&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;oraclecase.pl&lt;/code&gt; / &lt;code&gt;plsqlcase.pl&lt;/code&gt; - &lt;a href=&#34;https://www.oracle.com/uk/index.html&#34;&gt;Oracle&lt;/a&gt; SQL&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;postgrescase.pl&lt;/code&gt; / &lt;code&gt;pgsqlcase.pl&lt;/code&gt; - &lt;a href=&#34;https://www.postgresql.org&#34;&gt;PostgreSQL&lt;/a&gt; SQL&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;pigcase.pl&lt;/code&gt; - &lt;a href=&#34;https://pig.apache.org&#34;&gt;Pig&lt;/a&gt; &lt;a href=&#34;https://pig.apache.org/docs/r0.17.0/basic.html&#34;&gt;Latin&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;prestocase.pl&lt;/code&gt; - &lt;a href=&#34;https://prestosql.io/&#34;&gt;Presto&lt;/a&gt; SQL&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;redshiftcase..pl&lt;/code&gt; - &lt;a href=&#34;https://aws.amazon.com/redshift/&#34;&gt;AWS Redshift&lt;/a&gt; SQL&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;snowflakecase..pl&lt;/code&gt; - &lt;a href=&#34;https://www.snowflake.com&#34;&gt;Snowflake&lt;/a&gt; SQL&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;written to help clean up docs and SQL scripts (I don&#39;t even bother writing capitalised SQL code any more I just run it through this via a vim shortcut)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;diffnet.pl&lt;/code&gt; - simplifies diff output to show only lines added/removed, not moved, from patch files or stdin (pipe from standard diff command)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;xml_diff.pl&lt;/code&gt; / &lt;code&gt;hadoop_config_diff.pl&lt;/code&gt; - tool to help find differences between XML / Hadoop configs, can diff XML from HTTP addresses to diff live running clusters&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;titlecase.pl&lt;/code&gt; - capitalizes the first letter of each input word in files or stdin&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;pdf_to_txt.pl&lt;/code&gt; - converts PDF to text for analytics (see also &lt;a href=&#34;https://pdfbox.apache.org/&#34;&gt;Apache PDFBox&lt;/a&gt; and pdf2text unix tool)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;java_show_classpath.pl&lt;/code&gt; - shows java classpaths of a running Java program in a sane way&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;flock.pl&lt;/code&gt; - file locking to prevent running the same program twice at the same time. RHEL 6 now has a native version of this&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;uniq_order_preserved.pl&lt;/code&gt; - like &lt;code&gt;uniq&lt;/code&gt; but you don&#39;t have to sort first and it preserves the ordering&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;colors.pl&lt;/code&gt; - prints ASCII color code matrix of all foreground + background combinations showing the corresponding terminal escape codes to help with tuning your shell&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;matrix.pl&lt;/code&gt; - prints a cool matrix of vertical scrolling characters using terminal tricks&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;welcome.pl&lt;/code&gt; - cool spinning welcome message greeting your username and showing last login time and user to put in your shell&#39;s &lt;code&gt;.profile&lt;/code&gt; (there is also a python version in my &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Python-tools&#34;&gt;DevOps Python Tools&lt;/a&gt; repo)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Web:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;watch_url.pl&lt;/code&gt; - watches a given url, outputting status code and optionally selected output, useful for debugging web farms behind load balancers and seeing the distribution to different servers (tip: set a /hostname handler to return which server you&#39;re hitting for each request in real-time). I also use this a ping replacement to google.com to check internet networking in environments where everything except HTTP traffic is blocked&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;watch_nginx_stats.pl&lt;/code&gt; - watches nginx stats via the HttpStubStatusModule module&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hadoop.apache.org/&#34;&gt;Hadoop&lt;/a&gt; Ecosystem:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;ambari_freeipa_kerberos_setup.pl&lt;/code&gt; - Automates Hadoop &lt;a href=&#34;https://ambari.apache.org/&#34;&gt;Ambari&lt;/a&gt; cluster security Kerberos setup of &lt;a href=&#34;https://www.freeipa.org/page/Main_Page&#34;&gt;FreeIPA&lt;/a&gt; principals and keytab distribution to the cluster nodes&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;hadoop_hdfs_file_age_out.pl&lt;/code&gt; - prints or removes all &lt;a href=&#34;https://hadoop.apache.org/&#34;&gt;Hadoop HDFS&lt;/a&gt; files in a given directory tree older than a specified age&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;hadoop_hdfs_snapshot_age_out.pl&lt;/code&gt; - prints or removes &lt;a href=&#34;https://hadoop.apache.org/&#34;&gt;Hadoop HDFS&lt;/a&gt; snapshots older than a given age or matching a given regex pattern&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;hbase_flush_tables.sh&lt;/code&gt; - flushes all or selected &lt;a href=&#34;https://hbase.apache.org/&#34;&gt;HBase&lt;/a&gt; tables (useful when bulk loading &lt;a href=&#34;http://opentsdb.net/&#34;&gt;OpenTSDB&lt;/a&gt; with Durability.SKIP_WAL) (there is also a Python version of this in my &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Python-tools&#34;&gt;DevOps Python Tools&lt;/a&gt; repo)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;hive_to_elasticsearch.pl&lt;/code&gt; - bulk indexes structured &lt;a href=&#34;https://hive.apache.org/&#34;&gt;Hive&lt;/a&gt; tables in &lt;a href=&#34;https://hadoop.apache.org/&#34;&gt;Hadoop&lt;/a&gt; to &lt;a href=&#34;https://www.elastic.co/&#34;&gt;Elasticsearch&lt;/a&gt; clusters - includes support for Kerberos, Hive partitioned tables with selected partitions, selected columns, index creation with configurable sharding, index aliasing and optimization&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;hive_table_print_null_columns.pl&lt;/code&gt; - finds &lt;a href=&#34;https://hive.apache.org/&#34;&gt;Hive&lt;/a&gt; columns with all NULLs (see newer versions in &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Python-tools&#34;&gt;DevOps Python tools&lt;/a&gt; repo for &lt;a href=&#34;https://cwiki.apache.org/confluence/display/Hive/HiveServer2+Overview&#34;&gt;HiveServer2&lt;/a&gt; and &lt;a href=&#34;https://impala.apache.org/&#34;&gt;Impala&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;hive_table_count_rows_with_nulls.pl&lt;/code&gt; - counts number of rows containing NULLs in any field&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;pentaho_backup.pl&lt;/code&gt; - script to back up the local &lt;a href=&#34;https://marketplace.hitachivantara.com/pentaho/&#34;&gt;Pentaho&lt;/a&gt; BA or DI Server&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;ibm_bigsheets_config_git.pl&lt;/code&gt; - revision controls &lt;a href=&#34;https://www.ibm.com/support/knowledgecenter/SSPT3X_3.0.0/com.ibm.swg.im.infosphere.biginsights.analyze.doc/doc/c0057518.html&#34;&gt;IBM BigSheets&lt;/a&gt; configurations from API to Git&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;datameer_config_git.pl&lt;/code&gt; - revision controls &lt;a href=&#34;https://www.datameer.com/&#34;&gt;Datameer&lt;/a&gt; configurations from API to Git&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;hadoop_config_diff.pl&lt;/code&gt; - tool to diff configs between &lt;a href=&#34;https://hadoop.apache.org/&#34;&gt;Hadoop&lt;/a&gt; clusters XML from files or live HTTP config endpoints&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;solr_cli.pl&lt;/code&gt; - &lt;a href=&#34;https://lucene.apache.org/solr/&#34;&gt;Solr&lt;/a&gt; CLI tool for fast and easy &lt;a href=&#34;https://lucene.apache.org/solr/&#34;&gt;Solr&lt;/a&gt; / &lt;a href=&#34;https://lucene.apache.org/solr/guide/6_6/solrcloud.html&#34;&gt;SolrCloud&lt;/a&gt; administration. Supports optional environment variables to minimize --switches (can be set permanently in &lt;code&gt;solr/solr-env.sh&lt;/code&gt;). Uses the Solr Cores and Collections APIs, makes Solr administration a lot easier&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Detailed Build Instructions&lt;/h3&gt; &#xA;&lt;p&gt;The &#39;make&#39; command will initialize my library submodule and use &#39;sudo&#39; to install the required system packages and CPAN modules. If you want more control over what is installed you must follow the &lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools#manual-setup&#34;&gt;Manual Setup&lt;/a&gt; section instead.&lt;/p&gt; &#xA;&lt;h5&gt;Perlbrew localized installs&lt;/h5&gt; &#xA;&lt;p&gt;The automated build will use &#39;sudo&#39; to install required Perl CPAN libraries to the system unless running as root or it detects being inside Perlbrew. If you want to install some of the common Perl libraries such as Net::DNS and LWP::* using your OS packages instead of installing from CPAN then follow the Manual Build section below.&lt;/p&gt; &#xA;&lt;h4&gt;Manual Setup&lt;/h4&gt; &#xA;&lt;p&gt;Enter the tools directory and run git submodule init and git submodule update to fetch my library repo and then install the CPAN modules as mentioned further down:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/HariSekhon/DevOps-Perl-tools perl-tools&#xA;cd tools&#xA;git submodule update --init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then proceed to install the CPAN modules below by hand.&lt;/p&gt; &#xA;&lt;h6&gt;CPAN Modules&lt;/h6&gt; &#xA;&lt;p&gt;Install the following CPAN modules using the cpan command, using sudo if you&#39;re not root:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo cpan JSON LWP::Simple LWP::UserAgent Term::ReadKey Text::Unidecode Time::HiRes XML::LibXML XML::Validate ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The full list of CPAN modules is in &lt;code&gt;setup/cpan-requirements.txt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can install the entire list of cpan requirements like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo cpan $(sed &#39;s/#.*//&#39; &amp;lt; setup/cpan-requirements.txt)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You&#39;re now ready to use these programs.&lt;/p&gt; &#xA;&lt;h4&gt;Offline Setup&lt;/h4&gt; &#xA;&lt;p&gt;Download the Tools and Lib git repos as zip files:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/archive/master.zip&#34;&gt;https://github.com/HariSekhon/DevOps-Perl-tools/archive/master.zip&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/HariSekhon/lib/archive/master.zip&#34;&gt;https://github.com/HariSekhon/lib/archive/master.zip&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unzip both and move Lib to the &lt;code&gt;lib&lt;/code&gt; folder under Tools.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;unzip devops-perl-tools-master.zip&#xA;unzip lib-master.zip&#xA;&#xA;mv -v devops-perl-tools-master perl-tools&#xA;mv -v lib-master lib&#xA;mv -vf lib perl-tools/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Proceed to install CPAN modules for whichever programs you want to use using your standard procedure - usually an internal mirror or proxy server to CPAN, or rpms / debs (some libraries are packaged by Linux distributions).&lt;/p&gt; &#xA;&lt;p&gt;All CPAN modules are listed in the &lt;code&gt;setup/cpan-requirements.txt&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h4&gt;Configuration for Strict Domain / FQDN validation&lt;/h4&gt; &#xA;&lt;p&gt;Strict validations include host/domain/FQDNs using TLDs which are populated from the official IANA list. This is done via my &lt;a href=&#34;https://github.com/HariSekhon/lib&#34;&gt;Lib&lt;/a&gt; submodule - see there for details on configuring to permit custom TLDs like &lt;code&gt;.local&lt;/code&gt;, &lt;code&gt;.intranet&lt;/code&gt;, &lt;code&gt;.vm&lt;/code&gt;, &lt;code&gt;.cloud&lt;/code&gt; etc. (all already included in there because they&#39;re common across companies internal environments).&lt;/p&gt; &#xA;&lt;h3&gt;Updating&lt;/h3&gt; &#xA;&lt;p&gt;Run &lt;code&gt;make update&lt;/code&gt;. This will git pull and then git submodule update which is necessary to pick up corresponding library updates.&lt;/p&gt; &#xA;&lt;p&gt;If you update often and want to just quickly git pull + submodule update but skip rebuilding all those dependencies each time then run &lt;code&gt;make update-no-recompile&lt;/code&gt; (will miss new library dependencies - do full &lt;code&gt;make update&lt;/code&gt; if you encounter issues).&lt;/p&gt; &#xA;&lt;h3&gt;Testing&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/HariSekhon/devops-perl-tools&#34;&gt;Continuous Integration&lt;/a&gt; is run on this repo with tests for success and failure scenarios:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;unit tests for the custom supporting &lt;a href=&#34;https://github.com/HariSekhon/lib&#34;&gt;perl library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;integration tests of the top level programs using the libraries for things like option parsing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HariSekhon/DevOps-Perl-tools/tree/master/tests&#34;&gt;functional tests&lt;/a&gt; for the top level programs using local test data and &lt;a href=&#34;https://hub.docker.com/u/harisekhon/&#34;&gt;Docker containers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To trigger all tests run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which will start with the underlying libraries, then move on to top level integration tests and functional tests using docker containers if docker is available.&lt;/p&gt; &#xA;&lt;h3&gt;Contributions&lt;/h3&gt; &#xA;&lt;p&gt;Patches, improvements and even general feedback are welcome in the form of GitHub pull requests and issue tickets.&lt;/p&gt; &#xA;&lt;h3&gt;See Also&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/HariSekhon/DevOps-Bash-tools&#34;&gt;DevOps Bash Tools&lt;/a&gt; - 700+ DevOps Bash Scripts, Advanced &lt;code&gt;.bashrc&lt;/code&gt;, &lt;code&gt;.vimrc&lt;/code&gt;, &lt;code&gt;.screenrc&lt;/code&gt;, &lt;code&gt;.tmux.conf&lt;/code&gt;, &lt;code&gt;.gitconfig&lt;/code&gt;, CI configs &amp;amp; Utility Code Library - AWS, GCP, Kubernetes, Docker, Kafka, Hadoop, SQL, BigQuery, Hive, Impala, PostgreSQL, MySQL, LDAP, DockerHub, Jenkins, Spotify API &amp;amp; MP3 tools, Git tricks, GitHub API, GitLab API, BitBucket API, Code &amp;amp; build linting, package management for Linux / Mac / Python / Perl / Ruby / NodeJS / Golang, and lots more random goodies&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/HariSekhon/SQL-scripts&#34;&gt;SQL Scripts&lt;/a&gt; - 100+ SQL Scripts - PostgreSQL, MySQL, AWS Athena, Google BigQuery&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/HariSekhon/Templates&#34;&gt;Templates&lt;/a&gt; - dozens of Code &amp;amp; Config templates - AWS, GCP, Docker, Jenkins, Terraform, Vagrant, Puppet, Python, Bash, Go, Perl, Java, Scala, Groovy, Maven, SBT, Gradle, Make, GitHub Actions Workflows, CircleCI, Jenkinsfile, Makefile, Dockerfile, docker-compose.yml, M4 etc.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/HariSekhon/Kubernetes-configs&#34;&gt;Kubernetes configs&lt;/a&gt; - Kubernetes YAML configs - Best Practices, Tips &amp;amp; Tricks are baked right into the templates for future deployments&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/HariSekhon/DevOps-Python-tools&#34;&gt;DevOps Python Tools&lt;/a&gt; - 80+ DevOps CLI tools for AWS, GCP, Hadoop, HBase, Spark, Log Anonymizer, Ambari Blueprints, AWS CloudFormation, Linux, Docker, Spark Data Converters &amp;amp; Validators (Avro / Parquet / JSON / CSV / INI / XML / YAML), Elasticsearch, Solr, Travis CI, Pig, IPython&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/HariSekhon/Nagios-Plugins&#34;&gt;The Advanced Nagios Plugins Collection&lt;/a&gt; - 450+ programs for Nagios monitoring your Hadoop &amp;amp; NoSQL clusters. Covers every Hadoop vendor&#39;s management API and every major NoSQL technology (HBase, Cassandra, MongoDB, Elasticsearch, Solr, Riak, Redis etc.) as well as message queues (Kafka, RabbitMQ), continuous integration (Jenkins, Travis CI) and traditional infrastructure (SSL, Whois, DNS, Linux)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/HariSekhon/HAProxy-configs&#34;&gt;HAProxy Configs&lt;/a&gt; - 80+ HAProxy Configs for Hadoop, Big Data, NoSQL, Docker, Elasticsearch, SolrCloud, HBase, Cloudera, Hortonworks, MapR, MySQL, PostgreSQL, Apache Drill, Hive, Presto, Impala, ZooKeeper, OpenTSDB, InfluxDB, Prometheus, Kibana, Graphite, SSH, RabbitMQ, Redis, Riak, Rancher etc.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/HariSekhon/Dockerfiles&#34;&gt;Dockerfiles&lt;/a&gt; - 50+ DockerHub public images for Docker &amp;amp; Kubernetes - Hadoop, Kafka, ZooKeeper, HBase, Cassandra, Solr, SolrCloud, Presto, Apache Drill, Nifi, Spark, Mesos, Consul, Riak, OpenTSDB, Jython, Advanced Nagios Plugins &amp;amp; DevOps Tools repos on Alpine, CentOS, Debian, Fedora, Ubuntu, Superset, H2O, Serf, Alluxio / Tachyon, FakeS3&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/HariSekhon/lib&#34;&gt;Perl Lib&lt;/a&gt; - my personal Perl library leveraged in this repo as a submodule&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/HariSekhon/pylib&#34;&gt;PyLib&lt;/a&gt; - Python port of the above library&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You might also be interested in the following really nice Jupyter notebook for HDFS space analysis created by another Hortonworks guy Jonas Straub:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mr-jstraub/HDFSQuota/raw/master/HDFSQuota.ipynb&#34;&gt;https://github.com/mr-jstraub/HDFSQuota/blob/master/HDFSQuota.ipynb&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Stargazers over time&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/HariSekhon/DevOps-Perl-tools&#34;&gt;&lt;img src=&#34;https://starchart.cc/HariSekhon/DevOps-Perl-tools.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://git.io/perl-tools&#34;&gt;git.io/perl-tools&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>openSUSE/obs-build</title>
    <updated>2022-06-03T01:48:40Z</updated>
    <id>tag:github.com,2022-06-03:/openSUSE/obs-build</id>
    <link href="https://github.com/openSUSE/obs-build" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OBS build script, can be used with OBS or stand alone&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This repository provides the &lt;code&gt;build&lt;/code&gt; tool to build binary packages in a a safe and reproducible way. It can be used standalone or within the &lt;a href=&#34;http://openbuildservice.org&#34;&gt;Open Build Service&lt;/a&gt; (OBS).&lt;/p&gt; &#xA;&lt;p&gt;Latest packages for &lt;code&gt;obs-build&lt;/code&gt; are available from &lt;a href=&#34;https://software.opensuse.org/download/package?package=obs-build&amp;amp;project=openSUSE%3ATools&#34;&gt;openSUSE:Tools downloads&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://opensuse.github.io/obs-build/pbuild.html&#34;&gt;Documentation is available here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Supported build environments&lt;/h1&gt; &#xA;&lt;h2&gt;Unsecure&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;chroot&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;LXC&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Secure but with limited reproducibility&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;docker&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nspawn&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Secure and with full reproducibility&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;KVM&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;XEN&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ZVM&lt;/code&gt; (&lt;strong&gt;S390&lt;/strong&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Experimental support&lt;/h2&gt; &#xA;&lt;p&gt;In addition, there is currently experimental support for&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;UML&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PVM&lt;/code&gt; (&lt;strong&gt;PowerPC&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://openstack.org&#34;&gt;OpenStack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://ec2.amazon.com&#34;&gt;Amazon EC2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;For hardware emulation there are&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;qemu&lt;/code&gt;, which runs a &lt;code&gt;QEMU&lt;/code&gt; system emulator inside of &lt;code&gt;KVM&lt;/code&gt;. This can be considered also secure and reproducible.&lt;/li&gt; &#xA; &lt;li&gt;The &#34;emulator&#34; VM can be used to run builds using any other emulator via a wrapper script.&lt;/li&gt; &#xA; &lt;li&gt;A &lt;code&gt;QEMU&lt;/code&gt; user land emulation is also possible. This would give higher speed, but requires a preparation inside of the base distribution for this mode.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Supported build formats&lt;/h1&gt; &#xA;&lt;h2&gt;Major distribution package formats&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;spec&lt;/code&gt; to &lt;code&gt;rpm&lt;/code&gt;, e.g. &lt;a href=&#34;http://suse.com&#34;&gt;SUSE&lt;/a&gt;, &lt;a href=&#34;http://getfedora.org&#34;&gt;Fedora&lt;/a&gt;, &lt;a href=&#34;http://redhat.com&#34;&gt;RedHat&lt;/a&gt;, &lt;a href=&#34;http://centos.org&#34;&gt;CentOS&lt;/a&gt;, &lt;a href=&#34;http://mageia.org&#34;&gt;Mandriva&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dsc&lt;/code&gt; to &lt;code&gt;deb&lt;/code&gt;, e.g. &lt;a href=&#34;http://debian.org&#34;&gt;Debian&lt;/a&gt;, &lt;a href=&#34;http://ubuntu.com&#34;&gt;Ubuntu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PKGBUILD&lt;/code&gt; to &lt;code&gt;pkg&lt;/code&gt;, e.g. &lt;a href=&#34;http://archlinux.org&#34;&gt;Arch Linux&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Image formats&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Dockerfile&lt;/code&gt;—&lt;a href=&#34;http://docker.com&#34;&gt;Docker&lt;/a&gt; container via &lt;code&gt;docker&lt;/code&gt; or &lt;code&gt;podman&lt;/code&gt; tooling)&lt;/li&gt; &#xA; &lt;li&gt;kiwi appliances—This includes a &lt;a href=&#34;http://documentation.suse.com/kiwi/9/html/kiwi/image-types.html&#34;&gt;long list of formats&lt;/a&gt; supported by the kiwi tool From live USB stick images, network deployment images, VM images to docker containers&lt;/li&gt; &#xA; &lt;li&gt;SUSE Product—&lt;a href=&#34;http://suse.com&#34;&gt;SUSE&lt;/a&gt; product media builds&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;SimpleImage&lt;/em&gt;—&lt;code&gt;chroot&lt;/code&gt; &lt;code&gt;tar&lt;/code&gt; ball based on &lt;code&gt;rpm&lt;/code&gt; spec file syntax&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://debian.org&#34;&gt;Debian&lt;/a&gt; &lt;em&gt;Livebuild&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Preinstallimages&lt;/em&gt;—for speeding up builds esp. inside of &lt;a href=&#34;http://openbuildservice.org/&#34;&gt;OBS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Desktop Image formats&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;AppImage&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;FlatPak&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Snapcraft&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Special modes and formats&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;debbuild&lt;/code&gt;: build &lt;a href=&#34;http://debian.org&#34;&gt;debian&lt;/a&gt; &lt;code&gt;deb&lt;/code&gt;s from &lt;code&gt;rpm&lt;/code&gt; spec files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;debbootstrap&lt;/code&gt;: &lt;a href=&#34;http://debian.org&#34;&gt;debian&lt;/a&gt; builds using &lt;code&gt;debootstrap&lt;/code&gt; as the engine&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mock&lt;/code&gt;: &lt;code&gt;rpm&lt;/code&gt; spec file build using &lt;a href=&#34;https://github.com/rpm-software-management/mock&#34;&gt;&lt;code&gt;mock&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;collax&lt;/code&gt;: &lt;a href=&#34;http://debian.org&#34;&gt;debian&lt;/a&gt; package variation&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fissile&lt;/code&gt;: &lt;code&gt;docker&lt;/code&gt; images based on &lt;code&gt;BOSH&lt;/code&gt; dev releases&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;helm&lt;/code&gt;: &lt;code&gt;helm&lt;/code&gt; charts&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;modulemd&lt;/code&gt;: &lt;code&gt;modulemd&lt;/code&gt; rpm-md extensions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--help&lt;/code&gt; option for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>so-fancy/diff-so-fancy</title>
    <updated>2022-06-03T01:48:40Z</updated>
    <id>tag:github.com,2022-06-03:/so-fancy/diff-so-fancy</id>
    <link href="https://github.com/so-fancy/diff-so-fancy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Good-lookin&#39; diffs. Actually… nah… The best-lookin&#39; diffs. 🎉&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;diff-so-fancy &lt;a href=&#34;https://circleci.com/gh/so-fancy/diff-so-fancy&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/so-fancy/diff-so-fancy.svg?style=shield&#34; alt=&#34;Circle CI build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/so-fancy/diff-so-fancy&#34;&gt;&lt;img src=&#34;https://travis-ci.org/so-fancy/diff-so-fancy.svg?branch=master&#34; alt=&#34;TravisCI build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/stevemao/diff-so-fancy/branch/master&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/so-fancy/diff-so-fancy?branch=master&amp;amp;svg=true&#34; alt=&#34;AppVeyor build&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;diff-so-fancy&lt;/code&gt; strives to make your diffs &lt;strong&gt;human&lt;/strong&gt; readable instead of machine readable. This helps improve code quality and helps you spot defects faster.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshot&lt;/h2&gt; &#xA;&lt;p&gt;Vanilla &lt;code&gt;git diff&lt;/code&gt; vs &lt;code&gt;git&lt;/code&gt; and &lt;code&gt;diff-so-fancy&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/3429760/32387617-44c873da-c082-11e7-829c-6160b853adcb.png&#34; alt=&#34;diff-highlight vs diff-so-fancy&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Installation is as simple as cloning this repo and then putting the &lt;code&gt;diff-so-fancy&lt;/code&gt; script in to your &lt;code&gt;$PATH&lt;/code&gt;. The &lt;code&gt;lib/&lt;/code&gt; directory will need to be kept relative to the core script.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;diff-so-fancy&lt;/code&gt; is also available from the &lt;a href=&#34;https://www.npmjs.com/package/diff-so-fancy&#34;&gt;NPM registry&lt;/a&gt;, &lt;a href=&#34;https://formulae.brew.sh/formula/diff-so-fancy&#34;&gt;brew&lt;/a&gt;, and as a package on &lt;a href=&#34;https://github.com/NixOS/nixpkgs/raw/master/pkgs/applications/version-management/git-and-tools/diff-so-fancy/default.nix&#34;&gt;Nix&lt;/a&gt;, in the &lt;a href=&#34;https://archlinux.org/packages/community/any/diff-so-fancy/&#34;&gt;Arch community repo&lt;/a&gt;, and &lt;a href=&#34;https://github.com/aos/dsf-debian&#34;&gt;ppa:aos for Debian/Ubuntu Linux&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Issues relating to packaging (&#39;installation does not work&#39;, &#39;version is out of date&#39;, etc.) should be directed to those packages&#39; own repositories/issue trackers where applicable.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Windows users may need to install &lt;a href=&#34;https://sourceforge.net/projects/mingw/files/&#34;&gt;MinGW&lt;/a&gt; or the &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install-win10&#34;&gt;Windows subsystem for Linux&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;With git&lt;/h3&gt; &#xA;&lt;p&gt;Configure git to use &lt;code&gt;diff-so-fancy&lt;/code&gt; for all diff output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --global core.pager &#34;diff-so-fancy | less --tabs=4 -RFX&#34;&#xA;git config --global interactive.diffFilter &#34;diff-so-fancy --patch&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Improved colors for the highlighted bits&lt;/h3&gt; &#xA;&lt;p&gt;The default Git colors are not optimal. The colors used for the screenshot above were:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --global color.ui true&#xA;&#xA;git config --global color.diff-highlight.oldNormal    &#34;red bold&#34;&#xA;git config --global color.diff-highlight.oldHighlight &#34;red bold 52&#34;&#xA;git config --global color.diff-highlight.newNormal    &#34;green bold&#34;&#xA;git config --global color.diff-highlight.newHighlight &#34;green bold 22&#34;&#xA;&#xA;git config --global color.diff.meta       &#34;11&#34;&#xA;git config --global color.diff.frag       &#34;magenta bold&#34;&#xA;git config --global color.diff.func       &#34;146 bold&#34;&#xA;git config --global color.diff.commit     &#34;yellow bold&#34;&#xA;git config --global color.diff.old        &#34;red bold&#34;&#xA;git config --global color.diff.new        &#34;green bold&#34;&#xA;git config --global color.diff.whitespace &#34;red reverse&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;With diff&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;code&gt;-u&lt;/code&gt; with &lt;code&gt;diff&lt;/code&gt; for unified output, and pipe the output to &lt;code&gt;diff-so-fancy&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;diff -u file_a file_b | diff-so-fancy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Options&lt;/h2&gt; &#xA;&lt;h3&gt;markEmptyLines&lt;/h3&gt; &#xA;&lt;p&gt;Should the first block of an empty line be colored. (Default: true)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --bool --global diff-so-fancy.markEmptyLines false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;changeHunkIndicators&lt;/h3&gt; &#xA;&lt;p&gt;Simplify git header chunks to a more human readable format. (Default: true)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --bool --global diff-so-fancy.changeHunkIndicators false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;stripLeadingSymbols&lt;/h3&gt; &#xA;&lt;p&gt;Should the pesky &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; at line-start be removed. (Default: true)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --bool --global diff-so-fancy.stripLeadingSymbols false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;useUnicodeRuler&lt;/h3&gt; &#xA;&lt;p&gt;By default, the separator for the file header uses Unicode line-drawing characters. If this is causing output errors on your terminal, set this to &lt;code&gt;false&lt;/code&gt; to use ASCII characters instead. (Default: true)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --bool --global diff-so-fancy.useUnicodeRuler false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;rulerWidth&lt;/h3&gt; &#xA;&lt;p&gt;By default, the separator for the file header spans the full width of the terminal. Use this setting to set the width of the file header manually.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --global diff-so-fancy.rulerWidth 47    # git log&#39;s commit header width&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;The diff-so-fancy team&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Person&lt;/th&gt; &#xA;   &lt;th&gt;Role&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;@scottchiefbaker&lt;/td&gt; &#xA;   &lt;td&gt;Project lead&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;@OJFord&lt;/td&gt; &#xA;   &lt;td&gt;Bug triage&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;@GenieTim&lt;/td&gt; &#xA;   &lt;td&gt;Travis OSX fixes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;@AOS&lt;/td&gt; &#xA;   &lt;td&gt;Debian packager&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;@Stevemao/@Paul Irish&lt;/td&gt; &#xA;   &lt;td&gt;NPM release team&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are quite welcome, and should target the &lt;a href=&#34;https://github.com/so-fancy/diff-so-fancy/tree/next&#34;&gt;&lt;code&gt;next&lt;/code&gt; branch&lt;/a&gt;. We are also looking for any feedback or ideas on how to make &lt;code&gt;diff-so-fancy&lt;/code&gt; even &lt;em&gt;fancier&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Other documentation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/so-fancy/diff-so-fancy/master/pro-tips.md&#34;&gt;Pro-tips on advanced usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/so-fancy/diff-so-fancy/master/reporting-bugs.md&#34;&gt;Reporting Bugs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/so-fancy/diff-so-fancy/master/hacking-and-testing.md&#34;&gt;Hacking and Testing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/so-fancy/diff-so-fancy/master/history.md&#34;&gt;History&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Alternatives&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dandavison/delta&#34;&gt;https://github.com/dandavison/delta&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>elastic/elasticsearch-perl</title>
    <updated>2022-06-03T01:48:40Z</updated>
    <id>tag:github.com,2022-06-03:/elastic/elasticsearch-perl</id>
    <link href="https://github.com/elastic/elasticsearch-perl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official Perl low-level client for Elasticsearch.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Elasticsearch Perl client&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/elastic/elasticsearch-perl/actions&#34;&gt;&lt;img src=&#34;https://github.com/elastic/elasticsearch-perl/workflows/Perl%20module%20test/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Search::Elasticsearch is the official Perl API for Elasticsearch. The full documentation is available on &lt;a href=&#34;https://metacpan.org/module/Search::Elasticsearch&#34;&gt;https://metacpan.org/module/Search::Elasticsearch&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full support for all Elasticsearch APIs&lt;/li&gt; &#xA; &lt;li&gt;HTTP backend (blocking and asynchronous with &lt;a href=&#34;https://metacpan.org/module/Search::Elasticsearch::Async&#34;&gt;Search::Elasticsearch::Async&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Robust networking support which handles load balancing, failure detection and failover&lt;/li&gt; &#xA; &lt;li&gt;Good defaults&lt;/li&gt; &#xA; &lt;li&gt;Helper utilities for more complex operations, such as bulk indexing, scrolled searches and reindexing.&lt;/li&gt; &#xA; &lt;li&gt;Logging support via &lt;code&gt;Log::Any&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Compatibility with the &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/client/index.html&#34;&gt;official clients&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Easy extensibility&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;cpanm Search::Elasticsearch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;Language clients are forward compatible; meaning that clients support communicating with greater or equal minor versions of Elasticsearch. Elasticsearch language clients are only backwards compatible with default distributions and without guarantees made.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This software is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/elastic/elasticsearch-perl/master/LICENSE&#34;&gt;Apache 2 license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bessarabov/Akado-Account</title>
    <updated>2022-06-03T01:48:40Z</updated>
    <id>tag:github.com,2022-06-03:/bessarabov/Akado-Account</id>
    <link href="https://github.com/bessarabov/Akado-Account" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;NAME Akado::Account - get internet provider Akado account info&lt;/p&gt; &#xA;&lt;p&gt;SYNOPSIS Akado is the internet provider that works in Moscow, Russia. &lt;a href=&#34;http://www.akado.ru/&#34;&gt;http://www.akado.ru/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Every Akado customer has access to the site https://office.akado.ru/&#xA;where he can see his account info. This module creates Perl object that&#xA;gets account info from that site.&#xA;&#xA;Unfortunately Akdado account site has no API, so this module acts as a&#xA;browser to get needed info.&#xA;&#xA;Every module method dies in case of error.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;METHODS new This a constuctor. It creates object. The constractor will not access the account site. All network interaction is made in the methods that return data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    my $aa = Akado::Account-&amp;gt;new({&#xA;        login =&amp;gt; $login,&#xA;        password =&amp;gt; $password,&#xA;    });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;get_balance It will return number. The number is the sum of money that is left on the user account. The currencty is RUB (Russian rouble).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    say $aa-&amp;gt;get_balance();     # will print &#39;749.82&#39;, or something like this&#xA;&#xA;If the object hasn&#39;t accessed the Akado account site&#xA;https://office.akado.ru/ since the object was created, the method will&#xA;access site, get data from it and store it in the object. The object&#xA;will access Akado site only once, after saving data in the object all&#xA;methods use that cached data.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;get_next_month_payment It will return number. The number is the sum of money that the user will have to pay for the next month. The currencty is RUB (Russian rouble).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    say $aa-&amp;gt;get_next_month_payment();&#xA;&#xA;If the object hasn&#39;t accessed the Akado account site&#xA;https://office.akado.ru/ since the object was created, the method will&#xA;access site, get data from it and store it in the object. The object&#xA;will access Akado site only once, after saving data in the object all&#xA;methods use that cached data.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;AUTHOR Ivan Bessarabov, `&lt;a href=&#34;mailto:ivan@bessarabov.ru&#34;&gt;ivan@bessarabov.ru&lt;/a&gt;&#39;&lt;/p&gt; &#xA;&lt;p&gt;SOURCE CODE The source code for this module is hosted on GitHub &lt;a href=&#34;https://github.com/bessarabov/Akado-Account&#34;&gt;https://github.com/bessarabov/Akado-Account&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;BUGS Please report any bugs or feature requests in GitHub Issues &lt;a href=&#34;https://github.com/bessarabov/Akado-Account/issues&#34;&gt;https://github.com/bessarabov/Akado-Account/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;TODO For now the object can return only several numbers, but the Akado site has much more data in it. So it will be great if this module can get more details about user account.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;For now he module does not have tests. It was created interacting with&#xA;the production system. This is not good. The test should be added that&#xA;mocks Akado site and its data.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;LICENSE AND COPYRIGHT Copyright 2012 Ivan Bessarabov.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;This program is free software; you can redistribute it and/or modify it&#xA;under the terms of either: the GNU General Public License as published&#xA;by the Free Software Foundation; or the Artistic License.&#xA;&#xA;See http://dev.perl.org/licenses/ for more information.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>modENCODE-DCC/reporter</title>
    <updated>2022-06-03T01:48:40Z</updated>
    <id>tag:github.com,2022-06-03:/modENCODE-DCC/reporter</id>
    <link href="https://github.com/modENCODE-DCC/reporter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>binary-com/perl-Date-Utility</title>
    <updated>2022-06-03T01:48:40Z</updated>
    <id>tag:github.com,2022-06-03:/binary-com/perl-Date-Utility</id>
    <link href="https://github.com/binary-com/perl-Date-Utility" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Date::Utility&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/binary-com/perl-Date-Utility&#34;&gt;&lt;img src=&#34;https://travis-ci.org/binary-com/perl-Date-Utility.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/binary-com/perl-Date-Utility&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/binary-com/perl-Date-Utility/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A class that represents a datetime in various format&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;use Date::Utility;&#xA;&#xA;my $date = Date::Utility-&amp;gt;new();&#xA;print $date-&amp;gt;date_yyyymmdd;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;INSTALLATION&lt;/h4&gt; &#xA;&lt;p&gt;To install this module, run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perl Makefile.PL&#xA;make&#xA;make test&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;SUPPORT AND DOCUMENTATION&lt;/h4&gt; &#xA;&lt;p&gt;After installing, you can find documentation for this module with the perldoc command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perldoc Date::Utility&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also look for information at:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;RT, CPAN&#39;s request tracker (report bugs here)&#xA;    http://rt.cpan.org/NoAuth/Bugs.html?Dist=Date-Utility&#xA;&#xA;AnnoCPAN, Annotated CPAN documentation&#xA;    http://annocpan.org/dist/Date-Utility&#xA;&#xA;CPAN Ratings&#xA;    http://cpanratings.perl.org/d/Date-Utility&#xA;&#xA;Search CPAN&#xA;    http://search.cpan.org/dist/Date-Utility/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;i####COPYRIGHT&lt;/p&gt; &#xA;&lt;p&gt;Copyright (C) 2015 binary.com&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fxcoudert/gfortran-for-macOS</title>
    <updated>2022-06-03T01:48:40Z</updated>
    <id>tag:github.com,2022-06-03:/fxcoudert/gfortran-for-macOS</id>
    <link href="https://github.com/fxcoudert/gfortran-for-macOS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GNU Fortran (and GCC) compilers for macOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gfortran for macOS&lt;/h1&gt; &#xA;&lt;p&gt;The goal of this repository is to host GNU Fortran packages for macOS. These are simple installers, that will install the GCC compilers (including gfortran) in &lt;code&gt;/usr/local/gfortran&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/fxcoudert/gfortran-for-macOS/releases&#34;&gt;Follow this link to download!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;How to uninstall?&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo rm -rf /usr/local/gfortran /usr/local/bin/gfortran&#xA;sudo pkgutil --forget com.gnu.gfortran&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;em&gt;If you are interested in how these installers are built, the documentation is &lt;a href=&#34;https://raw.githubusercontent.com/fxcoudert/gfortran-for-macOS/master/build_package.md&#34;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>binary-com/perl-Crypt-NamedKeys</title>
    <updated>2022-06-03T01:48:40Z</updated>
    <id>tag:github.com,2022-06-03:/binary-com/perl-Crypt-NamedKeys</id>
    <link href="https://github.com/binary-com/perl-Crypt-NamedKeys" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NAME&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/binary-com/perl-Crypt-NamedKeys&#34;&gt;&lt;img src=&#34;https://travis-ci.org/binary-com/perl-Crypt-NamedKeys.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/binary-com/perl-Crypt-NamedKeys&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/binary-com/perl-Crypt-NamedKeys/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Crypt::NamedKeys - A Crypt::CBC wrapper with key rotation support&lt;/p&gt; &#xA;&lt;h1&gt;SYNOPSYS&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;use Crypt::NamedKeys;&#xA;my $crypt = Crypt::NamedKeys-&amp;gt;new(keyname =&amp;gt; &#39;href&#39;);&#xA;my $encrypted = $crypt-&amp;gt;encrypt_data(data =&amp;gt; $href);&#xA;my $restored_href = $crypt-&amp;gt;decrypt_data(&#xA;    data =&amp;gt; $encrypted-&amp;gt;{data},&#xA;    mac  =&amp;gt; $encrypted-&amp;gt;{mac},&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;DESCRIPTION&lt;/h1&gt; &#xA;&lt;p&gt;This module provides functions to serialize data for transfer via non-protected channels with encryption and data integrity protection. The module tracks key number used to encrypt information so that keys can be rotated without making data unreadable.&lt;/p&gt; &#xA;&lt;h1&gt;CONFIGURATION AND KEY ROTATION&lt;/h1&gt; &#xA;&lt;p&gt;The keys are stored in the keyfile, configurable as below. Keys are numbered starting at 1. Numbers must never be reused. Typically key rotation will be done in several steps, each with its own rollout. These steps MUST be done as separate releases because otherwise keys may not be available to decrypt data, and so things may not work.&lt;/p&gt; &#xA;&lt;h2&gt;keyfile location&lt;/h2&gt; &#xA;&lt;p&gt;The keyfile can be set using the keyfile($path) function. There is no default.&lt;/p&gt; &#xA;&lt;h2&gt;keyfile format&lt;/h2&gt; &#xA;&lt;p&gt;The format of the keyfile is YAML, following a basic structure of&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;keyname:&#xA;   [keyhashdef]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;so for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cryptedfeed:&#xA;   default_keynum: 9&#xA;   none: queith7eeTh0teejaichoodobooX9ceechee9Sai9gauChiengaeraew3aDiehei&#xA;   1: aePh8ahBaNg1bee6ohj3er5cuzeepoophai1oogohpoixothah4AuYiongu4ahta&#xA;   2: oht1eep8uxoo1eeshaSaemee9aem5chahqueu0Aedaa7eeXae9aeghe5umoNah6a&#xA;   3: chigh4veifoofe0Vohphee4ohkaef9giz2iaje2ahF4ohboSh6ifaiNgohwohchi&#xA;   4: Ahphahmisaingo5Ietheangeegi5ia1uuF9taerooShaitoh1Eophig3ohziejet&#xA;   5: oe5wi2equee6FeiZohjah2peas6Ahquohniefeimai0beip2waxeizoo1OhthohN&#xA;   6: eigaezee3CeuC8phae4giph6Miqu6piy3Eideipahticesheij7se9eecai9fiez&#xA;   7: DuuGhohViGh0Sheihahr6ce4Phuin7ahpaiSa5jaiphie3eiz8oa3dohrohghuow&#xA;   8: ahfoniemah4boemeN8seJ7hohhualeetei7aegohhai5ohwahlohnah2Ee2Ewal1&#xA;   9: Ceixei4shelohxee1ohdoochuliebael1kae8eit0Geeth1so9fohZi0cohs8go4&#xA;   10: boreiDe0shueNgie7shai7ooc1yaeveiKeihuox0xahp1hai8phe7aephiel2oob&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In general we assume key spefications to use numeric keys within the named key hash. This makes key rotation a lot easier and prevents reusing key numbers.&lt;/p&gt; &#xA;&lt;p&gt;Key names may not contain = or -.&lt;/p&gt; &#xA;&lt;p&gt;All keys listed can be used for decryption (with the special &#39;none&#39; key used if no key number is specified in the cyphertex), but by default only the default keynumber (default_keynum, in this case 9) is used for encrypting.&lt;/p&gt; &#xA;&lt;p&gt;The keynumber is specified in the resulting cyphertext so we know which key to use for decrypting the cyphertext even if we don&#39;t try to decrypt it. This allows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Key checking&lt;/p&gt; &lt;p&gt;If you store cyphertext in your rdbms, you can check which keys are used before you remove decryption support for a key.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Orderly key rotation&lt;/p&gt; &lt;p&gt;You can add a key, and later depricate it, managing the transition (and perhaps even using logging to know when the old key is no longer needed).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Step 1: Adding a New Key&lt;/h2&gt; &#xA;&lt;p&gt;In many cases you need to be able to add and remove keys without requiring that everything gets the new keys at the same time. For example if you have multiple production systems, they are likely to get updated in series, and if you expect that everyone gets the keys at the same time, timing issues may occur.&lt;/p&gt; &#xA;&lt;p&gt;For this reason, we recommend breaking up the encryption key rollout into a number of steps. The first one is making sure that everyone can use the new key to decrypt before anyone uses it to encrypt.&lt;/p&gt; &#xA;&lt;p&gt;The first release is by adding a new key so that it is available for decryption.&lt;/p&gt; &#xA;&lt;p&gt;For example, in the keyfile suppose one has:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mykey:&#xA;  default_keynum: 1&#xA;  none: rsdfagtiaueIUPOIUYHH&#xA;  1: rsdfagtiaueIUPOIUYHH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We might add another line&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;2: IRvswqerituq-HPIOHJHGdeewrwyugfrGRSe3eyy6te&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once this file is released, the key number 2 will be available globally for decryption purposes, but everything will still be encrypted using key number 1.&lt;/p&gt; &#xA;&lt;p&gt;This means it is safe then to go onto the second step.&lt;/p&gt; &#xA;&lt;h2&gt;Step 2: Setting the new key as default&lt;/h2&gt; &#xA;&lt;p&gt;Once the new keys have been released, the next step is to change the default keynumber. Data encrypted in this way will be available even to servers waiting to be updated because the keys have previously been rolled out. To do this, simply change the default_keynum:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mykey:&#xA;  default_keynum: 1&#xA;  1: rsdfagtiaueIUPOIUYHH&#xA;  2: IRvswqerituq-HPIOHJHGdeewrwyugfrGRSe3eyy6te&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;becomes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mykey:&#xA;  default_keynum: 2&#xA;  1: rsdfagtiaueIUPOIUYHH&#xA;  2: IRvswqerituq-HPIOHJHGdeewrwyugfrGRSe3eyy6te&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now all new data will be encrypted using keynumber 2.&lt;/p&gt; &#xA;&lt;h2&gt;Step 3: Retiring the old key&lt;/h2&gt; &#xA;&lt;p&gt;Once the old key is no longer being used, it can be retired by deleting the row.&lt;/p&gt; &#xA;&lt;h2&gt;The Special &#39;none&#39; keynum&lt;/h2&gt; &#xA;&lt;p&gt;For aes keys before the key versioning was introduced, there is no keynum associated with the cyphertext, so we use this key.&lt;/p&gt; &#xA;&lt;h1&gt;CONFIGURATION PARAMETERS&lt;/h1&gt; &#xA;&lt;h2&gt;$Crypt::NamedKeys::Escape_Eq;&lt;/h2&gt; &#xA;&lt;p&gt;Set to true, using local or not, if you want to encode with - instead of =&lt;/p&gt; &#xA;&lt;p&gt;Note that on decryption both are handled.&lt;/p&gt; &#xA;&lt;h1&gt;PROPERTIES&lt;/h1&gt; &#xA;&lt;h2&gt;keynum&lt;/h2&gt; &#xA;&lt;p&gt;Defaults to the default keynumber specified in the keyfile (for encryption)&lt;/p&gt; &#xA;&lt;h2&gt;keyname&lt;/h2&gt; &#xA;&lt;p&gt;The name of the key in the keyfile.&lt;/p&gt; &#xA;&lt;h1&gt;METHODS AND FUNCTIONS&lt;/h1&gt; &#xA;&lt;h2&gt;Crypt::NamedKeys-&amp;gt;keyfile($path)&lt;/h2&gt; &#xA;&lt;p&gt;Can also be called as Crypt::NamedKeys::keyfile($path)&lt;/p&gt; &#xA;&lt;p&gt;Sets the path of the keyfile. It does not load or reload it (that is done on demand or by reload_keyfile() below&lt;/p&gt; &#xA;&lt;h2&gt;reload_keyhash&lt;/h2&gt; &#xA;&lt;p&gt;Can be called as an object method or function (i.e. Crypt::NamedKeys::reload_keyhash()&lt;/p&gt; &#xA;&lt;p&gt;Loads or reloads the keyfile. Can be used via event handlers to reload confguration as needed&lt;/p&gt; &#xA;&lt;h2&gt;$self-&amp;gt;encrypt_data(data =&amp;gt; $data)&lt;/h2&gt; &#xA;&lt;p&gt;Serialize &lt;em&gt;$data&lt;/em&gt; to JSON, encrypt it, and encode as base64. Also compute HMAC code for the encrypted data. Returns hash reference with &#39;data&#39; and &#39;mac&#39; elements.&lt;/p&gt; &#xA;&lt;p&gt;Args include&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;data&lt;/p&gt; &lt;p&gt;Data structure reference to be encrypted&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;cypher&lt;/p&gt; &lt;p&gt;Cypher to use (default: Rijndael)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;$self-&amp;gt;decrypt_data(data =&amp;gt; $data, mac =&amp;gt; $mac)&lt;/h2&gt; &#xA;&lt;p&gt;Decrypt data encrypted using &lt;em&gt;encrypt_data&lt;/em&gt;. First checks HMAC code for data. If data was not tampered, decrypts it and decodes from JSON. Returns data, or undef if decryption failed.&lt;/p&gt; &#xA;&lt;h2&gt;$self-&amp;gt;encrypt_payload(data =&amp;gt; $data)&lt;/h2&gt; &#xA;&lt;p&gt;Encrypts data using &lt;em&gt;encrypt_data&lt;/em&gt; and returns result as a string including both cyphertext and hmac in base-64 format. This can work on arbitrary data structures, scalars, and references provided that the data can be serialized as an attribute on a JSON document.&lt;/p&gt; &#xA;&lt;h2&gt;$self-&amp;gt;decrypt_payload(value =&amp;gt; $value)&lt;/h2&gt; &#xA;&lt;p&gt;Accepts payload encrypted with &lt;em&gt;encrypt_payload&lt;/em&gt;, checks HMAC and decrypts the value. Returns decripted value or undef if check or decryption has failed.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>binary-com/perl-App-Config-Chronicle</title>
    <updated>2022-06-03T01:48:40Z</updated>
    <id>tag:github.com,2022-06-03:/binary-com/perl-App-Config-Chronicle</id>
    <link href="https://github.com/binary-com/perl-App-Config-Chronicle" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NAME&lt;/h1&gt; &#xA;&lt;p&gt;App::Config::Chronicle - An OO configuration module which can be changed and stored into chronicle database.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/binary-com/perl-App-Config-Chronicle&#34;&gt;&lt;img src=&#34;https://travis-ci.org/binary-com/perl-App-Config-Chronicle.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/binary-com/perl-App-Config-Chronicle&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/binary-com/perl-App-Config-Chronicle/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;VERSION&lt;/h1&gt; &#xA;&lt;p&gt;Version 0.01&lt;/p&gt; &#xA;&lt;h1&gt;SYNOPSIS&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;my $app_config = App::Config::Chronicle-&amp;gt;new;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;DESCRIPTION&lt;/h1&gt; &#xA;&lt;p&gt;This module parses configuration files and provides interface to access configuration information.&lt;/p&gt; &#xA;&lt;h1&gt;FILE FORMAT&lt;/h1&gt; &#xA;&lt;p&gt;The configuration file is a YAML file. Here is an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;system:&#xA;  description: &#34;Various parameters determining core application functionality&#34;&#xA;  isa: section&#xA;  contains:&#xA;    email:&#xA;      description: &#34;Dummy email address&#34;&#xA;      isa: Str&#xA;      default: &#34;dummy@mail.com&#34;&#xA;      global: 1&#xA;    refresh:&#xA;      description: &#34;System refresh rate&#34;&#xA;      isa: Num&#xA;      default: 10&#xA;      global: 1&#xA;    admins:&#xA;      description: &#34;Are we on Production?&#34;&#xA;      isa: ArrayRef&#xA;      default: []&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Every attribute is very intuitive. If an item is global, you can change its value and the value will be stored into chronicle database by calling the method &lt;code&gt;save_dynamic&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;SUBROUTINES/METHODS&lt;/h1&gt; &#xA;&lt;h2&gt;definition_yml&lt;/h2&gt; &#xA;&lt;p&gt;The YAML file that store the configuration&lt;/p&gt; &#xA;&lt;h2&gt;chronicle_reader&lt;/h2&gt; &#xA;&lt;p&gt;The chronicle store that configurations can be fetch from it. It should be an instance of &lt;a href=&#34;https://metacpan.org/pod/Data::Chronicle::Reader&#34;&gt;Data::Chronicle::Reader&lt;/a&gt;. But user is free to implement any storage backend he wants if it is implemented with a &#39;get&#39; method.&lt;/p&gt; &#xA;&lt;h2&gt;chronicle_writer&lt;/h2&gt; &#xA;&lt;p&gt;The chronicle store that updated configurations can be stored into it. It should be an instance of &lt;a href=&#34;https://metacpan.org/pod/Data::Chronicle::Writer&#34;&gt;Data::Chronicle::Writer&lt;/a&gt;. But user is free to implement any storage backend he wants if it is implemented with a &#39;set&#39; method.&lt;/p&gt; &#xA;&lt;h2&gt;check_for_update&lt;/h2&gt; &#xA;&lt;p&gt;check and load updated settings from chronicle db&lt;/p&gt; &#xA;&lt;h2&gt;save_dynamic&lt;/h2&gt; &#xA;&lt;p&gt;Save synamic settings into chronicle db&lt;/p&gt; &#xA;&lt;h2&gt;current_revision&lt;/h2&gt; &#xA;&lt;p&gt;loads setting from chronicle reader and returns the last revision and drops them&lt;/p&gt; &#xA;&lt;h2&gt;BUILD&lt;/h2&gt; &#xA;&lt;h1&gt;AUTHOR&lt;/h1&gt; &#xA;&lt;p&gt;Binary.com, &lt;code&gt;&amp;lt;binary at cpan.org&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;BUGS&lt;/h1&gt; &#xA;&lt;p&gt;Please report any bugs or feature requests to &lt;code&gt;bug-app-config at rt.cpan.org&lt;/code&gt;, or through the web interface at &lt;a href=&#34;http://rt.cpan.org/NoAuth/ReportBug.html?Queue=App-Config&#34;&gt;http://rt.cpan.org/NoAuth/ReportBug.html?Queue=App-Config&lt;/a&gt;. I will be notified, and then you&#39;ll automatically be notified of progress on your bug as I make changes.&lt;/p&gt; &#xA;&lt;h1&gt;SUPPORT&lt;/h1&gt; &#xA;&lt;p&gt;You can find documentation for this module with the perldoc command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perldoc App::Config::Chronicle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also look for information at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;RT: CPAN&#39;s request tracker (report bugs here)&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://rt.cpan.org/NoAuth/Bugs.html?Dist=App-Config&#34;&gt;http://rt.cpan.org/NoAuth/Bugs.html?Dist=App-Config&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;AnnoCPAN: Annotated CPAN documentation&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://annocpan.org/dist/App-Config&#34;&gt;http://annocpan.org/dist/App-Config&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;CPAN Ratings&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://cpanratings.perl.org/d/App-Config&#34;&gt;http://cpanratings.perl.org/d/App-Config&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Search CPAN&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://search.cpan.org/dist/App-Config/&#34;&gt;http://search.cpan.org/dist/App-Config/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;ACKNOWLEDGEMENTS&lt;/h1&gt;</summary>
  </entry>
  <entry>
    <title>imapsync/imapsync</title>
    <updated>2022-06-03T01:48:40Z</updated>
    <id>tag:github.com,2022-06-03:/imapsync/imapsync</id>
    <link href="https://github.com/imapsync/imapsync" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Imapsync is an IMAP transfers tool. The purpose of imapsync is to migrate IMAP accounts or to backup IMAP accounts. IMAP is one of the three current standard protocols to access mailboxes, the two others are POP3 and HTTP with webmails, webmails are often tied to an IMAP server. Upstream website is&lt;/p&gt;&lt;hr&gt;&lt;p&gt;NAME&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;imapsync - Email IMAP tool for syncing, copying, migrating and archiving&#xA;email mailboxes between two imap servers, one way, and without&#xA;duplicates.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;VERSION&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;This documentation refers to Imapsync $Revision: 2.200 $&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;USAGE&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; To synchronize the source imap account&#xA;   &#34;test1&#34; on server &#34;test1.lamiral.info&#34; with password &#34;secret1&#34;&#xA; to the destination imap account&#xA;   &#34;test2&#34; on server &#34;test2.lamiral.info&#34; with password &#34;secret2&#34;&#xA; do:&#xA;&#xA;  imapsync \&#xA;   --host1 test1.lamiral.info --user1 test1 --password1 secret1 \&#xA;   --host2 test2.lamiral.info --user2 test2 --password2 secret2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;DESCRIPTION&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;We sometimes need to transfer mailboxes from one imap server to one&#xA;another.&#xA;&#xA;Imapsync command is a tool allowing incremental and recursive imap&#xA;transfers from one mailbox to another. If you don&#39;t understand the&#xA;previous sentence, it&#39;s normal, it&#39;s pedantic computer-oriented jargon.&#xA;&#xA;All folders are transferred, recursively, meaning the whole folder&#xA;hierarchy is taken, all messages in them, and all message flags (\Seen&#xA;\Answered \Flagged etc.) are synced too.&#xA;&#xA;Imapsync reduces the amount of data transferred by not transferring a&#xA;given message if it already resides on the destination side. Messages&#xA;that are on the destination side but not on the source side stay as they&#xA;are. See the --delete2 option to have strict sync and delete them.&#xA;&#xA;How does imapsync know a message is already on both sides? Same specific&#xA;headers and the transfer is done only once. By default, the&#xA;identification headers are &#34;Message-Id:&#34; and &#34;Received:&#34; lines but this&#xA;choice can be changed with the --useheader option, most often a&#xA;duplicate problem is solved by using --useheader &#34;Message-Id&#34;&#xA;&#xA;All flags are preserved, unread messages will stay unread, read ones&#xA;will stay read, deleted will stay deleted. In the IMAP protocol, a&#xA;deleted message is not deleted, it is marked \Deleted and can be&#xA;undeleted. Real destruction comes with the EXPUNGE or UIDEXPUNGE IMAP&#xA;commands.&#xA;&#xA;You can abort the transfer at any time and restart it later, imapsync&#xA;works well with bad connections and interruptions, by design. On a&#xA;terminal hit Ctr-c twice within two seconds to abort the program. Hit&#xA;Ctr-c just once makes imapsync reconnect to both imap servers.&#xA;&#xA;How do you know the sync is finished and well done? When imapsync ends&#xA;by itself it mentions it with lines like those:&#xA;&#xA;  Exiting with return value 0 (EX_OK: successful termination) 0/50 nb_errors/max_errors PID 301&#xA;  Removing pidfile /tmp/imapsync.pid&#xA;  Log file is LOG_imapsync/2020_11_17_15_59_22_761_test1_test2.txt ( to change it, use --logfile filepath ; or use --nolog to turn off logging )&#xA;&#xA;If you don&#39;t have those lines it means that either the sync process is&#xA;still running (or eventually hanging indefinitely) or that it ended&#xA;without a whisper, a strong kill -9 on Linux for example.&#xA;&#xA;If you have those final lines then it means the sync process is properly&#xA;finished. It may have encountered problems though.&#xA;&#xA;A good synchronization is mentioned by some lines above the last ones,&#xA;especially those three lines:&#xA;&#xA;  The sync looks good, all 1745 identified messages in host1 are on host2.&#xA;  There is no unidentified message on host1.&#xA;  Detected 0 errors&#xA;&#xA;Imapsync mentions the total sizes of both accounts at the beginning of&#xA;the sync and also at the end. Sometimes, even with a strict sync, those&#xA;total sizes differ, and sometimes they differ a lot. The difference is&#xA;not a good criterion to conclude the sync went wrong.&#xA;&#xA;Why? That&#39;s because message sizes given by the imap servers are not&#xA;always accurate, they are not always the same as the actual message&#xA;sizes of the messages transferred by imapsync. Imapsync use the sizes&#xA;given by the imap servers to calculate the big total size. They can&#xA;differ. In the early days, Imapsync used the sizes of the messages as&#xA;one of the criteria to identify the messages, different sizes implied&#xA;different messages; but it was a mistake, the same message had different&#xA;sizes on both sides sometimes, depending on the imap servers.&#xA;&#xA;Another explanation for a big total size difference is that Gmail&#xA;doesn&#39;t count the size of duplicate messages across folders twice, while&#xA;imapsync does.&#xA;&#xA;A classical scenario is synchronizing a mailbox B from another mailbox A&#xA;where you just want to keep a strict copy of A in B. Strict meaning all&#xA;messages in A will be in B but no more.&#xA;&#xA;For a strict synchronization, use the option --delete2. The option&#xA;--delete2 deletes the messages in the host2 folder B that are not in the&#xA;host1 folder A. If you also need to destroy host2 folders that are not&#xA;in host1 then use --delete2folders. See also --delete2foldersonly and&#xA;--delete2foldersbutnot to set up exceptions on folders to destroy. INBOX&#xA;will never be destroyed, it&#39;s a mandatory folder in IMAP so imapsync&#xA;doesn&#39;t even try to remove it.&#xA;&#xA;A different scenario is to delete the messages from the source mailbox&#xA;after a successful transfer, it can be a good feature when migrating&#xA;mailboxes since messages will be only on one side. The source account&#xA;will only have messages that are not on the destination yet, ie,&#xA;messages that arrived after a sync or that failed to be transferred.&#xA;&#xA;In that case, use the --delete1 option. Option --delete1 implies also&#xA;the option --expunge1 so all messages marked deleted on host1 will be&#xA;deleted. In IMAP protocol deleting a message does not delete it, it&#xA;marks it with the flag \Deleted, allowing an undelete. Expunging a&#xA;folder removes, definitively, all the messages marked as \Deleted in&#xA;this folder.&#xA;&#xA;You can also decide to remove empty folders once all of their messages&#xA;have been transferred. Add --delete1emptyfolders to obtain this&#xA;behavior.&#xA;&#xA;Imapsync is not adequate for maintaining two active imap accounts in&#xA;synchronization when the user plays independently on both sides. Use&#xA;offlineimap (written by John Goerzen) or mbsync (written by Michael R.&#xA;Elkins) for a 2 ways synchronization.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; usage: imapsync [options]&#xA;&#xA;The standard options are the six values forming the credentials. Three&#xA;values on each side are needed to login into the IMAP servers. These six&#xA;values are a hostname, a username, and a password, two times.&#xA;&#xA;Here are the conventions used in the following descriptions of the&#xA;options:&#xA;&#xA; str means a string&#xA; int means an integer number&#xA; flo means a float number&#xA; reg means a regular expression&#xA; cmd means a command&#xA;&#xA; --dry               : Makes imapsync do nothing for real; it just prints what&#xA;                       would be done without --dry.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/credentials&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --host1        str  : Source or &#34;from&#34; imap server.&#xA; --port1        int  : Port to connect on host1.&#xA;                       Optional since default ports are the&#xA;                       well known ports imap/143 or imaps/993.&#xA; --user1        str  : User to login on host1.&#xA; --password1    str  : Password of user1.&#xA;&#xA; --host2        str  : &#34;destination&#34; imap server.&#xA; --port2        int  : Port to connect on host2. Optional&#xA; --user2        str  : User to login on host2.&#xA; --password2    str  : Password of user2.&#xA;&#xA; --showpasswords     : Shows passwords on output instead of &#34;MASKED&#34;.&#xA;                       Useful to restart a complete run by just reading&#xA;                       the command line used in the log,&#xA;                       or to debug passwords.&#xA;                       It&#39;s not a secure practice at all!&#xA;&#xA; --passfile1    str  : Password file for the user1. It must contain the&#xA;                       password on the first line. This option avoids showing&#xA;                       the password on the command line like --password1 does.&#xA; --passfile2    str  : Password file for the user2.&#xA;&#xA;You can also pass the passwords in the environment variables&#xA;IMAPSYNC_PASSWORD1 and IMAPSYNC_PASSWORD2. If you don&#39;t pass the user1&#xA;password via --password1 nor --passfile1 nor $IMAPSYNC_PASSWORD1 then&#xA;imapsync will prompt to enter the password on the terminal. Same thing&#xA;for user2 password.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/encryption&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --nossl1            : Do not use a SSL connection on host1.&#xA; --ssl1              : Use a SSL connection on host1. On by default if possible.&#xA;&#xA; --nossl2            : Do not use a SSL connection on host2.&#xA; --ssl2              : Use a SSL connection on host2. On by default if possible.&#xA;&#xA; --notls1            : Do not use a TLS connection on host1.&#xA; --tls1              : Use a TLS connection on host1. On by default if possible.&#xA;&#xA; --notls2            : Do not use a TLS connection on host2.&#xA; --tls2              : Use a TLS connection on host2. On by default if possible.&#xA;&#xA; --debugssl     int  : SSL debug mode from 0 to 4.&#xA;&#xA; --sslargs1     str  : Pass any ssl parameter for host1 ssl or tls connection. Example:&#xA;                       --sslargs1 SSL_verify_mode=1 --sslargs1 SSL_version=SSLv3&#xA;                       See all possibilities in the new() method of IO::Socket::SSL&#xA;                       http://search.cpan.org/perldoc?IO::Socket::SSL#Description_Of_Methods&#xA; --sslargs2     str  : Pass any ssl parameter for host2 ssl or tls connection.&#xA;                       See --sslargs1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/authentication&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --authmech1    str  : Auth mechanism to use with host1:&#xA;                       PLAIN, LOGIN, CRAM-MD5 etc. Use UPPERCASE.&#xA; --authmech2    str  : Auth mechanism to use with host2. See --authmech1&#xA;&#xA; --authuser1    str  : User to auth with on host1 (admin user).&#xA;                       Avoid using --authmech1 SOMETHING with --authuser1.&#xA; --authuser2    str  : User to auth with on host2 (admin user).&#xA; --proxyauth1        : Use proxyauth on host1. Requires --authuser1.&#xA;                       Required by Sun/iPlanet/Netscape IMAP servers to&#xA;                       be able to use an administrative user.&#xA; --proxyauth2        : Use proxyauth on host2. Requires --authuser2.&#xA;&#xA; --authmd51          : Use MD5 authentication for host1.&#xA; --authmd52          : Use MD5 authentication for host2.&#xA; --domain1      str  : Domain on host1 (NTLM authentication).&#xA; --domain2      str  : Domain on host2 (NTLM authentication).&#xA;&#xA; --oauthaccesstoken1 str : The access token to authenticate with OAUTH2.&#xA;                       It will be combined with the --user1 value to form the &#xA;                       string to pass with XOAUTH2 authentication.&#xA;                       The password given by --password1 or --passfile1&#xA;                       is ignored.&#xA;                       Instead of the access token itself, the value can be a&#xA;                       file containing the access token on the first line.&#xA;                       If the value is a file, imapsync reads its first line&#xA;                       and take this line as the access token. The advantage&#xA;                       of the file is that if the access token changes then&#xA;                       imapsync can read it again when it needs to reconnect &#xA;                       during a run.&#xA;&#xA;&#xA; --oauthaccesstoken2 str : same thing as --oauthaccesstoken1 &#xA;&#xA; --oauthdirect1 str  : The direct string to pass with XOAUTH2 authentication.&#xA;                       The password given by --password1 or --passfile1 and &#xA;                       the user given by --user1 are ignored.&#xA;&#xA; --oauthdirect2 str  : same thing as oauthdirect1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/folders&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --folder       str  : Sync this folder.&#xA; --folder       str  : and this one, etc.&#xA; --folderrec    str  : Sync this folder recursively.&#xA; --folderrec    str  : and this one, etc.&#xA;&#xA; --folderfirst  str  : Sync this folder first. Ex. --folderfirst &#34;INBOX&#34;&#xA; --folderfirst  str  : then this one, etc.&#xA; --folderlast   str  : Sync this folder last. --folderlast &#34;[Gmail]/All Mail&#34;&#xA; --folderlast   str  : then this one, etc.&#xA;&#xA; --nomixfolders      : Do not merge folders when host1 is case-sensitive&#xA;                       while host2 is not (like Exchange). Only the first&#xA;                       similar folder is synced. Example: with folders&#xA;                       &#34;Sent&#34;, &#34;SENT&#34; and &#34;sent&#34; on host1, only &#34;Sent&#34;&#xA;                       will be synced to host2.&#xA;&#xA; --skipemptyfolders  : Empty host1 folders are not created on host2.&#xA;&#xA; --include      reg  : Sync folders matching this regular expression&#xA; --include      reg  : or this one, etc.&#xA;                       If both --include --exclude options are used, then&#xA;                       include is done before.&#xA; --exclude      reg  : Skips folders matching this regular expression&#xA;                       Several folders to avoid:&#xA;                        --exclude &#39;fold1|fold2|f3&#39; skips fold1, fold2 and f3.&#xA; --exclude      reg  : or this one, etc.&#xA;&#xA; --automap           : guesses folders mapping, for folders well known as&#xA;                       &#34;Sent&#34;, &#34;Junk&#34;, &#34;Drafts&#34;, &#34;All&#34;, &#34;Archive&#34;, &#34;Flagged&#34;.&#xA;&#xA; --f1f2    str1=str2 : Force folder str1 to be synced to str2,&#xA;                       --f1f2 overrides --automap and --regextrans2.&#xA;                       Use several --f1f2 options to map several folders.&#xA;                       Option --f1f2 is a one to one only folder mapping,&#xA;                       str1 and str2 have to be full path folder names.&#xA;&#xA; --subfolder2   str  : Syncs the whole host1 folders hierarchy under the&#xA;                       host2 folder named str.&#xA;                       It does it internally by adding three&#xA;                       --regextrans2 options before all others.&#xA;                       Add --debug to see what&#39;s really going on.&#xA;&#xA; --subfolder1   str  : Syncs the host1 folders hierarchy which is under folder&#xA;                       str to the root hierarchy of host2.&#xA;                       It&#39;s the couterpart of a sync done by --subfolder2&#xA;                       when doing it in the reverse order.&#xA;                       Backup/Restore scenario:&#xA;                       Use --subfolder2 str for a backup to the folder str&#xA;                       on host2. Then use --subfolder1 str for restoring&#xA;                       from the folder str, after inverting&#xA;                       host1/host2 user1/user2 values.&#xA;&#xA;&#xA; --subscribed        : Transfers subscribed folders.&#xA; --subscribe         : Subscribe to the folders transferred on the&#xA;                       host2 that are subscribed on host1. On by default.&#xA; --subscribeall      : Subscribe to the folders transferred on the&#xA;                       host2 even if they are not subscribed on host1.&#xA;&#xA; --prefix1      str  : Remove prefix str to all destination folders,&#xA;                       usually &#34;INBOX.&#34; or &#34;INBOX/&#34; or an empty string &#34;&#34;.&#xA;                       imapsync guesses the prefix if host1 imap server&#xA;                       does not have NAMESPACE capability. So this option&#xA;                       should not be used most of the time.&#xA; --prefix2      str  : Add prefix to all host2 folders. See --prefix1&#xA;&#xA; --sep1         str  : Host1 separator. This option should not be used&#xA;                       most of the time.&#xA;                       Imapsync gets the separator from the server itself,&#xA;                       by using NAMESPACE, or it tries to guess it&#xA;                       from the folders listing (it counts&#xA;                       characters / . \\ \ in folder names and choose the&#xA;                       more frequent, or finally / if nothing is found.&#xA; --sep2         str  : Host2 separator. See --sep1&#xA;&#xA; --regextrans2  reg  : Apply the whole regex to each destination folders.&#xA; --regextrans2  reg  : and this one. etc.&#xA;                       When you play with the --regextrans2 option, first&#xA;                       add also the safe options --dry --justfolders&#xA;                       Then, when happy, remove --dry for a run, then&#xA;                       remove --justfolders for the next ones.&#xA;                       Have in mind that --regextrans2 is applied after&#xA;                       the automatic prefix and separator inversion.&#xA;                       For examples see:&#xA;                       https://imapsync.lamiral.info/FAQ.d/FAQ.Folders_Mapping.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/folders sizes&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --nofoldersizes     : Do not calculate the size of each folder at the&#xA;                       beginning of the sync. Default is to calculate them.&#xA; --nofoldersizesatend: Do not calculate the size of each folder at the&#xA;                       end of the sync. Default is to calculate them.&#xA; --justfoldersizes   : Exit after having printed the initial folder sizes.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/tmp&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --tmpdir       str  : Where to store temporary files and subdirectories.&#xA;                       Will be created if it doesn&#39;t exist.&#xA;                       Default is system specific, Unix is /tmp but&#xA;                       /tmp is often too small and deleted at reboot.&#xA;                       --tmpdir /var/tmp should be better.&#xA;&#xA; --pidfile      str  : The file where imapsync pid is written,&#xA;                       it can be dirname/filename complete path.&#xA;                       The default name is imapsync.pid in tmpdir.&#xA;&#xA; --pidfilelocking    : Abort if pidfile already exists. Useful to avoid&#xA;                       concurrent transfers on the same mailbox.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/log&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --nolog             : Turn off logging on file&#xA; --logfile      str  : Change the default log filename (can be dirname/filename).&#xA; --logdir       str  : Change the default log directory. Default is LOG_imapsync/&#xA;&#xA;The default logfile name is for example&#xA;&#xA; LOG_imapsync/2019_12_22_23_57_59_532_user1_user2.txt&#xA;&#xA;where:&#xA;&#xA; 2019_12_22_23_57_59_532 is nearly the date of the start&#xA; YYYY_MM_DD_HH_MM_SS_mmm&#xA; year_month_day_hour_minute_seconde_millisecond&#xA;&#xA;and user1 user2 are the --user1 --user2 values.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/messages&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --skipmess     reg  : Skips messages matching the regex.&#xA;                       Example: &#39;m/[\x80-\xff]/&#39; # to avoid 8bits messages.&#xA;                       --skipmess is applied before --regexmess&#xA; --skipmess     reg  : or this one, etc.&#xA;&#xA; --skipcrossduplicates : Avoid copying messages that are already copied&#xA;                         in another folder, good from Gmail to XYZ when&#xA;                         XYZ is not also Gmail.&#xA;                         Activated with --gmail1 unless --noskipcrossduplicates&#xA;&#xA; --debugcrossduplicates : Prints which messages (UIDs) are skipped with&#xA;                          --skipcrossduplicates and in what other folders&#xA;                          they are.&#xA;&#xA; --pipemess     cmd  : Apply this cmd command to each message content&#xA;                       before the copy.&#xA; --pipemess     cmd  : and this one, etc.&#xA;                       With several --pipemess, the output of each cmd&#xA;                       command (STDOUT) is given to the input (STDIN)&#xA;                       of the next command.&#xA;                       For example,&#xA;                       --pipemess cmd1 --pipemess cmd2 --pipemess cmd3&#xA;                       is like a Unix pipe:&#xA;                       &#34;cat message | cmd1 | cmd2 | cmd3&#34;&#xA;&#xA; --disarmreadreceipts : Disarms read receipts (host2 Exchange issue)&#xA;&#xA; --regexmess    reg  : Apply the whole regex to each message before transfer.&#xA;                       Example: &#39;s/\000/ /g&#39; # to replace null characters&#xA;                       by spaces.&#xA; --regexmess    reg  : and this one, etc.&#xA;&#xA; --truncmess    int  : truncates messages when their size exceed the int &#xA;                       value, specified in bytes. Good to sync too big &#xA;                       messages or to &#34;suppress&#34; attachments. &#xA;                       Have in mind that this way, messages become &#xA;                       uncoherent somehow.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/labels&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Gmail present labels as folders in imap. Imapsync can accelerate the&#xA;sync by syncing X-GM-LABELS, it will avoid to transfer messages when&#xA;they are already on host2 in another folder.&#xA;&#xA; --synclabels        : Syncs also Gmail labels when a message is copied to host2.&#xA;                       Activated by default with --gmail1 --gmail2 unless&#xA;                       --nosynclabels is added.&#xA;&#xA; --resynclabels      : Resyncs Gmail labels when a message is already on host2.&#xA;                       Activated by default with --gmail1 --gmail2 unless&#xA;                       --noresynclabels is added.&#xA;&#xA;For Gmail syncs, see also:&#xA;https://imapsync.lamiral.info/FAQ.d/FAQ.Gmail.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/flags&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; If you encounter flag problems see also:&#xA; https://imapsync.lamiral.info/FAQ.d/FAQ.Flags.txt&#xA;&#xA; --regexflag    reg  : Apply the whole regex to each flags list.&#xA;                       Example: &#39;s/&#34;Junk&#34;//g&#39; # to remove &#34;Junk&#34; flag.&#xA; --regexflag    reg  : then this one, etc.&#xA;&#xA; --resyncflags       : Resync flags for already transferred messages.&#xA;                       On by default.&#xA; --noresyncflags     : Do not resync flags for already transferred messages.&#xA;                       May be useful when a user has already started to play&#xA;                       with its host2 account.&#xA;&#xA; --filterbuggyflags  : Filter flags known to be buggy and generators of errors&#xA;                       &#34;BAD Invalid system flag&#34; or &#34;NO APPEND Invalid flag list&#34;.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/deletions&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --delete1           : Deletes messages on host1 server after a successful&#xA;                       transfer. Option --delete1 has the following behavior:&#xA;                       it marks messages as deleted with the IMAP flag&#xA;                       \Deleted, then messages are really deleted with an&#xA;                       EXPUNGE IMAP command. If expunging after each message&#xA;                       slows down too much the sync then use&#xA;                       --noexpungeaftereach to speed up, expunging will then be&#xA;                       done only twice per folder, one at the beginning and&#xA;                       one at the end of a folder sync.&#xA;&#xA; --expunge1          : Expunge messages on host1 just before syncing a folder.&#xA;                       Expunge is done per folder.&#xA;                       Expunge aims is to really delete messages marked deleted.&#xA;                       An expunge is also done after each message copied&#xA;                       if option --delete1 is set (unless --noexpungeaftereach).&#xA;&#xA; --noexpunge1        : Do not expunge messages on host1.&#xA;&#xA; --delete1emptyfolders : Deletes empty folders on host1, INBOX excepted.&#xA;                         Useful with --delete1 since what remains on host1&#xA;                         is only what failed to be synced.&#xA;&#xA; --delete2           : Delete messages in the host2 account that are not in&#xA;                       the host1 account. Useful for backup or pre-sync.&#xA;                       --delete2 implies --uidexpunge2&#xA;&#xA; --delete2duplicates : Deletes messages in host2 that are duplicates in host2.&#xA;                       Works only without --useuid since duplicates are&#xA;                       detected with an header part of each message.&#xA;                       NB: --delete2duplicates is far less violent than --delete2&#xA;                       since it removes only duplicates.&#xA;&#xA; --delete2folders    : Delete folders in host2 that are not in host1.&#xA;                       For safety, first try it like this, it is safe:&#xA;                       --delete2folders --dry --justfolders --nofoldersizes&#xA;                       and see what folders will be deleted.&#xA;&#xA; --delete2foldersonly   reg : Delete only folders matching the regex reg.&#xA;                              Example: --delete2foldersonly &#34;/^Junk$|^INBOX.Junk$/&#34;&#xA;                              This option activates --delete2folders&#xA;&#xA; --delete2foldersbutnot reg : Do not delete folders matching the regex rex.&#xA;                              Example: --delete2foldersbutnot &#34;/Tasks$|Contacts$|Foo$/&#34;&#xA;                              This option activates --delete2folders&#xA;&#xA; --noexpunge2        : Do not expunge messages on host2.&#xA; --nouidexpunge2     : Do not uidexpunge messages on the host2 account&#xA;                       that are not on the host1 account.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/dates&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; If you encounter problems with dates, see also:&#xA; https://imapsync.lamiral.info/FAQ.d/FAQ.Dates.txt&#xA;&#xA; --syncinternaldates : Sets the internal dates on host2 as the same as host1.&#xA;                       Turned on by default. Internal date is the date&#xA;                       a message arrived on a host (Unix mtime usually).&#xA; --idatefromheader   : Sets the internal dates on host2 as same as the&#xA;                       ones in &#34;Date:&#34; headers.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/message selection&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --maxsize      int  : Skip messages larger  (or equal) than  int  bytes&#xA; --minsize      int  : Skip messages smaller (or equal) than  int  bytes&#xA;&#xA; --maxage       int  : Skip messages older than  int days.&#xA;                       final stats (skipped) don&#39;t count older messages&#xA;                       see also --minage&#xA; --minage       int  : Skip messages newer than  int  days.&#xA;                       final stats (skipped) don&#39;t count newer messages&#xA;                       You can do (+ zone are the messages selected):&#xA;                       past|----maxage+++++++++++++++&amp;gt;now&#xA;                       past|+++++++++++++++minage----&amp;gt;now&#xA;                       past|----maxage+++++minage----&amp;gt;now (intersection)&#xA;                       past|++++minage-----maxage++++&amp;gt;now (union)&#xA;&#xA; --search       str  : Selects only messages returned by this IMAP SEARCH&#xA;                       command. Applied on both sides.&#xA;                       For a complete set of what can be search see&#xA;                       https://imapsync.lamiral.info/FAQ.d/FAQ.Messages_Selection.txt&#xA;&#xA; --search1      str  : Same as --search but for selecting host1 messages only.&#xA; --search2      str  : Same as --search but for selecting host2 messages only.&#xA;                       So --search CRIT equals --search1 CRIT --search2 CRIT&#xA;&#xA; --noabletosearch    : Makes --minage and --maxage options use the internal&#xA;                       dates given by a FETCH imap command instead of the&#xA;                       &#34;Date:&#34; header. Internal date is the arrival date&#xA;                       in the mailbox.&#xA;                       --noabletosearch equals --noabletosearch1 --noabletosearch2&#xA;&#xA; --noabletosearch1   : Like --noabletosearch but for host1 only.&#xA; --noabletosearch2   : Like --noabletosearch but for host2 only.&#xA;&#xA; --maxlinelength int : skip messages with a line length longer than  int  bytes.&#xA;                       RFC 2822 says it must be no more than 1000 bytes but&#xA;                       real life servers and email clients do more.&#xA;&#xA;&#xA; --useheader    str  : Use this header to compare messages on both sides.&#xA;                       Example: &#34;Message-Id&#34; or &#34;Received&#34; or &#34;Date&#34;.&#xA; --useheader    str    and this one, etc.&#xA;&#xA; --syncduplicates    : Sync also duplicates. Off by default.&#xA;&#xA; --usecache          : Use cache to speed up next syncs. Off by default.&#xA; --nousecache        : Do not use cache. Caveat: --useuid --nousecache creates&#xA;                       duplicates on multiple runs.&#xA;&#xA; --useuid            : Use UIDs instead of headers as a criterion to recognize&#xA;                       messages. Option --usecache is then implied unless&#xA;                       --nousecache is used.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/miscellaneous&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --syncacls          : Synchronizes acls (Access Control Lists).&#xA;                       Acls in IMAP are not standardized, be careful&#xA;                       since one acl code on one side may signify something&#xA;                       else on the other one.&#xA; --nosyncacls        : Does not synchronize acls. This is the default.&#xA;&#xA; --addheader         : When a message has no headers to be identified,&#xA;                       --addheader adds a &#34;Message-Id&#34; header,&#xA;                       like &#34;Message-Id: 12345@imapsync&#34;, where 12345&#xA;                       is the imap UID of the message on the host1 folder.&#xA;                       Useful to sync folders &#34;Sent&#34; or &#34;Draft&#34;.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/debugging&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --debug             : Debug mode.&#xA; --debugfolders      : Debug mode for the folders part only.&#xA; --debugcontent      : Debug content of the messages transferred. Huge output.&#xA; --debugflags        : Debug mode for flags.&#xA; --debugimap1        : IMAP debug mode for host1. Very verbose.&#xA; --debugimap2        : IMAP debug mode for host2. Very verbose.&#xA; --debugimap         : IMAP debug mode for host1 and host2. Twice very verbose.&#xA; --debugmemory       : Debug mode showing memory consumption after each copy.&#xA;&#xA; --errorsmax     int : Exit when int number of errors is reached. Default is 50.&#xA;&#xA; --tests             : Run local non-regression tests. Exit code 0 means all ok.&#xA; --testslive         : Run a live test with test1.lamiral.info imap server.&#xA;                       Useful to check the basics. Needs internet connection.&#xA; --testslive6        : Run a live test with ks6ipv6.lamiral.info imap server.&#xA;                       Useful to check the ipv6 connectivity. Needs internet.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/specific&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  --gmail1           : sets --host1 to Gmail and other options. See FAQ.Gmail.txt&#xA;  --gmail2           : sets --host2 to Gmail and other options. See FAQ.Gmail.txt&#xA;&#xA;  --office1          : sets --host1 to Office365 and other options. See FAQ.Office365.txt&#xA;  --office2          : sets --host2 to Office365 and other options. See FAQ.Office365.txt&#xA;&#xA;  --exchange1        : sets options for Exchange. See FAQ.Exchange.txt&#xA;  --exchange2        : sets options for Exchange. See FAQ.Exchange.txt&#xA;&#xA;  --domino1          : sets options for Domino. See FAQ.Domino.txt&#xA;  --domino2          : sets options for Domino. See FAQ.Domino.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OPTIONS/behavior&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; --timeout1     flo  : Connection timeout in seconds for host1.&#xA;                       Default is 120 and 0 means no timeout at all.&#xA; --timeout2     flo  : Connection timeout in seconds for host2.&#xA;                       Default is 120 and 0 means no timeout at all.&#xA;&#xA;                       Caveat, under CGI context, you may encounter a timeout&#xA;                       from the webserver, killing imapsync and the imap connexions.&#xA;                       See the document INSTALL.OnlineUI.txt and search&#xA;                       for &#34;Timeout&#34; for how to deal with this issue.&#xA;&#xA; --keepalive1        : https://metacpan.org/pod/Mail::IMAPClient#Keepalive&#xA;                       Some firewalls and network gears like to timeout connections &#xA;                       prematurely if the connection sits idle.&#xA;                       This option enables SO_KEEPALIVE on the host1 socket.&#xA;                       --keepalive1 is on by default since imapsync release 2.169&#xA;                       Use --nokeepalive1 to disable it.&#xA;                   &#xA; --keepalive2        : Same as --keepalive2 but for host2.&#xA;                       Use --nokeepalive2 to disable it.&#xA;&#xA; --maxmessagespersecond flo : limits the average number of messages &#xA;                              transferred per second.&#xA;&#xA; --maxbytespersecond int : limits the average transfer rate per second.&#xA; --maxbytesafter     int : starts --maxbytespersecond limitation only after&#xA;                           --maxbytesafter amount of data transferred.&#xA;&#xA; --maxsleep      flo : do not sleep more than int seconds.&#xA;                       On by default, 2 seconds max, like --maxsleep 2&#xA;&#xA; --abort             : terminates a previous call still running.&#xA;                       It uses the pidfile to know what process to abort.&#xA;&#xA; --exitwhenover int  : Stop syncing and exits when int total bytes&#xA;                       transferred is reached.&#xA;&#xA; --version           : Print only the software version.&#xA; --noreleasecheck    : Do not check for any new imapsync release.&#xA; --releasecheck      : Check for new imapsync release.&#xA;                       it&#39;s an http request to&#xA;                       http://imapsync.lamiral.info/prj/imapsync/VERSION&#xA;&#xA; --noid              : Do not send/receive IMAP &#34;ID&#34; command to imap servers.&#xA;&#xA; --justconnect       : Just connect to both servers and print useful&#xA;                       information. Need only --host1 and --host2 options.&#xA;                       Obsolete since &#34;imapsync --host1 imaphost&#34; alone&#xA;                       implies --justconnect&#xA;&#xA; --justlogin         : Just login to both host1 and host2 with users&#xA;                       credentials, then exit.&#xA;&#xA; --justfolders       : Do only things about folders (ignore messages).&#xA;&#xA; --help              : print this help.&#xA;&#xA; Example: to synchronize imap account &#34;test1&#34; on &#34;test1.lamiral.info&#34;&#xA;                     to  imap account &#34;test2&#34; on &#34;test2.lamiral.info&#34;&#xA;                     with test1 password &#34;secret1&#34;&#xA;                     and  test2 password &#34;secret2&#34;&#xA;&#xA; imapsync \&#xA;    --host1 test1.lamiral.info --user1 test1 --password1 secret1 \&#xA;    --host2 test2.lamiral.info --user2 test2 --password2 secret2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;SECURITY&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;You can use --passfile1 instead of --password1 to mention the password&#xA;since it is safer. With --password1 option, on Linux, any user on your&#xA;host can see the password by using the &#39;ps auxwwww&#39; command. Using a&#xA;variable (like IMAPSYNC_PASSWORD1) is also dangerous because of the &#39;ps&#xA;auxwwwwe&#39; command. So, saving the password in a well protected file (600&#xA;or rw-------) is the best solution.&#xA;&#xA;Imapsync activates ssl or tls encryption by default, if possible.&#xA;&#xA;What detailed behavior is under this &#34;if possible&#34;?&#xA;&#xA;Imapsync activates ssl if the well known port imaps port (993) is open&#xA;on the imap servers. If the imaps port is closed then it open a normal&#xA;(clear) connection on port 143 but it looks for TLS support in the&#xA;CAPABILITY list of the servers. If TLS is supported then imapsync goes&#xA;to encryption with STARTTLS.&#xA;&#xA;If the automatic ssl and the tls detections fail then imapsync will not&#xA;protect against sniffing activities on the network, especially for&#xA;passwords.&#xA;&#xA;If you want to force ssl or tls just use --ssl1 --ssl2 or --tls1 --tls2&#xA;&#xA;See also the document FAQ.Security.txt in the FAQ.d/ directory or at&#xA;https://imapsync.lamiral.info/FAQ.d/FAQ.Security.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;EXIT STATUS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Imapsync will exit with a 0 status (return code) if everything went&#xA;good. Otherwise, it exits with a non-zero status. That&#39;s classical Unix&#xA;behavior. Here is the list of the exit code values (an integer between 0&#xA;and 255). In Bourne Shells, this exit code value can be retrieved within&#xA;the variable value &#34;$?&#34; if you read it just after the imapsync call.&#xA;&#xA;The names reflect their meaning:&#xA;&#xA;     EX_OK          =&amp;gt; 0  ; #/* successful termination */&#xA;     EX_USAGE       =&amp;gt; 64 ; #/* command line usage error */&#xA;     EX_NOINPUT     =&amp;gt; 66 ; #/* cannot open input */&#xA;     EX_UNAVAILABLE =&amp;gt; 69 ; #/* service unavailable */&#xA;     EX_SOFTWARE    =&amp;gt; 70 ; #/* internal software error */&#xA;     EXIT_CATCH_ALL              =&amp;gt;   1 ; # Any other error&#xA;     EXIT_BY_SIGNAL              =&amp;gt;   6 ; # Should be 128+n where n is the sig_num&#xA;     EXIT_BY_FILE                =&amp;gt;   7 ;&#xA;     EXIT_PID_FILE_ERROR         =&amp;gt;   8 ;&#xA;     EXIT_CONNECTION_FAILURE     =&amp;gt;  10 ;&#xA;     EXIT_TLS_FAILURE            =&amp;gt;  12 ;&#xA;     EXIT_AUTHENTICATION_FAILURE =&amp;gt;  16 ;&#xA;     EXIT_SUBFOLDER1_NO_EXISTS   =&amp;gt;  21 ;&#xA;     EXIT_WITH_ERRORS            =&amp;gt; 111 ;&#xA;     EXIT_WITH_ERRORS_MAX        =&amp;gt; 112 ;&#xA;     EXIT_OVERQUOTA              =&amp;gt; 113 ;&#xA;     EXIT_ERR_APPEND             =&amp;gt; 114 ;&#xA;     EXIT_ERR_FETCH              =&amp;gt; 115 ;&#xA;     EXIT_ERR_CREATE             =&amp;gt; 116 ;&#xA;     EXIT_ERR_SELECT             =&amp;gt; 117 ;&#xA;     EXIT_TRANSFER_EXCEEDED      =&amp;gt; 118 ;&#xA;     EXIT_ERR_APPEND_VIRUS       =&amp;gt; 119 ;&#xA;     EXIT_TESTS_FAILED           =&amp;gt; 254 ; # Like Test::More API&#xA;     EXIT_CONNECTION_FAILURE_HOST1     =&amp;gt;  101 ;&#xA;     EXIT_CONNECTION_FAILURE_HOST2     =&amp;gt;  102 ;&#xA;     EXIT_AUTHENTICATION_FAILURE_USER1 =&amp;gt;  161 ;&#xA;     EXIT_AUTHENTICATION_FAILURE_USER2 =&amp;gt;  162 ;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;LICENSE AND COPYRIGHT&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Imapsync is free, open, public but not always gratis software cover by&#xA;the NOLIMIT Public License, now called NLPL. See the LICENSE file&#xA;included in the distribution or just read the following simple sentence&#xA;as it IS the license text:&#xA;&#xA; &#34;No limits to do anything with this work and this license.&#34;&#xA;&#xA;In case it is not long enough, I repeat:&#xA;&#xA; &#34;No limits to do anything with this work and this license.&#34;&#xA;&#xA;Look at https://imapsync.lamiral.info/LICENSE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;AUTHOR&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Gilles LAMIRAL &amp;lt;gilles@lamiral.info&amp;gt;&#xA;&#xA;Good feedback is always welcome. Bad feedback is very often welcome.&#xA;&#xA;Gilles LAMIRAL earns his living by writing, installing, configuring and&#xA;sometimes teaching free, open, and often gratis software. Imapsync used&#xA;to be &#34;always gratis&#34; but now it is only &#34;often gratis&#34; because imapsync&#xA;is sold by its author, your servitor, a good way to maintain and support&#xA;free open public software tools over decades.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;BUGS AND LIMITATIONS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;See https://imapsync.lamiral.info/FAQ.d/FAQ.Reporting_Bugs.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;IMAP SERVERS supported&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;See https://imapsync.lamiral.info/S/imapservers.shtml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;HUGE MIGRATION&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;If you have many mailboxes to migrate think about a little shell&#xA;program. Write a file called file.txt (for example) containing users and&#xA;passwords. The separator used in this example is &#39;;&#39;&#xA;&#xA;The file.txt file contains:&#xA;&#xA;user001_1;password001_1;user001_2;password001_2&#xA;user002_1;password002_1;user002_2;password002_2&#xA;user003_1;password003_1;user003_2;password003_2&#xA;user004_1;password004_1;user004_2;password004_2&#xA;user005_1;password005_1;user005_2;password005_2 ...&#xA;&#xA;On Unix the shell program can be:&#xA;&#xA; { while IFS=&#39;;&#39; read  u1 p1 u2 p2; do&#xA;        imapsync --host1 imap.side1.org --user1 &#34;$u1&#34; --password1 &#34;$p1&#34; \&#xA;                 --host2 imap.side2.org --user2 &#34;$u2&#34; --password2 &#34;$p2&#34; ...&#xA; done ; } &amp;lt; file.txt&#xA;&#xA;On Windows the batch program can be:&#xA;&#xA;  FOR /F &#34;tokens=1,2,3,4 delims=; eol=#&#34; %%G IN (file.txt) DO imapsync ^&#xA;  --host1 imap.side1.org --user1 %%G --password1 %%H ^&#xA;  --host2 imap.side2.org --user2 %%I --password2 %%J ...&#xA;&#xA;The ... have to be replaced by nothing or any imapsync option. Welcome&#xA;in shell or batch programming !&#xA;&#xA;You will find already written scripts at&#xA;https://imapsync.lamiral.info/examples/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;INSTALL&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; Imapsync works under any Unix with Perl.&#xA;&#xA; Imapsync works under most Windows (2000, XP, Vista, Seven, Eight, Ten&#xA; and all Server releases 2000, 2003, 2008 and R2, 2012 and R2, 2016)&#xA; as a standalone binary software called imapsync.exe, usually launched&#xA; from a batch file in order to avoid always typing the options. There&#xA; is also a 32bit binary called imapsync_32bit.exe&#xA;&#xA; Imapsync works under OS X as a standalone binary software called&#xA; imapsync_bin_Darwin&#xA;&#xA; Purchase latest imapsync at&#xA; https://imapsync.lamiral.info/&#xA;&#xA; You&#39;ll receive a link to a compressed tarball called&#xA; imapsync-x.xx.tgz where x.xx is the version number. &#xA; Untar the tarball where you want (on Unix):&#xA;&#xA;  tar xzvf  imapsync-x.xx.tgz&#xA;&#xA; Go into the directory imapsync-x.xx and read the INSTALL file.&#xA; As mentioned at https://imapsync.lamiral.info/#install&#xA; the INSTALL file can also be found at&#xA; https://imapsync.lamiral.info/INSTALL.d/INSTALL.ANY.txt&#xA; It is now split in several files for each system&#xA; https://imapsync.lamiral.info/INSTALL.d/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;CONFIGURATION&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;There is no specific configuration file for imapsync, everything is&#xA;specified by the command line parameters and the default behavior.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;HACKING&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Feel free to hack imapsync as the NOLIMIT license permits it.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;SIMILAR SOFTWARE&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  See also https://imapsync.lamiral.info/S/external.shtml&#xA;  for a better up to date list.&#xA;&#xA;List verified on Friday July 1, 2021.&#xA;&#xA; imapsync: https://github.com/imapsync/imapsync (this is an imapsync copy, sometimes delayed, with --noreleasecheck by default since release 1.592, 2014/05/22)&#xA; imap_tools: https://web.archive.org/web/20161228145952/http://www.athensfbc.com/imap_tools/. The imap_tools code is now at https://github.com/andrewnimmo/rick-sanders-imap-tools&#xA; imaputils: https://github.com/mtsatsenko/imaputils (very old imap_tools fork)&#xA; Doveadm-Sync: https://wiki2.dovecot.org/Tools/Doveadm/Sync ( Dovecot sync tool )&#xA; davmail: http://davmail.sourceforge.net/&#xA; offlineimap: http://offlineimap.org/&#xA; fdm: https://github.com/nicm/fdm&#xA; mbsync: http://isync.sourceforge.net/&#xA; mailsync: http://mailsync.sourceforge.net/&#xA; mailutil: https://www.washington.edu/imap/ part of the UW IMAP toolkit. (well, seems abandoned now)&#xA; imaprepl: https://bl0rg.net/software/ http://freecode.com/projects/imap-repl/&#xA; imapcopy (Pascal): http://www.ardiehl.de/imapcopy/&#xA; imapcopy (Java): https://code.google.com/archive/p/imapcopy/&#xA; imapsize: http://www.broobles.com/imapsize/&#xA; migrationtool: http://sourceforge.net/projects/migrationtool/&#xA; imapmigrate: http://sourceforge.net/projects/cyrus-utils/&#xA; larch: https://github.com/rgrove/larch (derived from wonko_imapsync, good at Gmail)&#xA; wonko_imapsync: http://wonko.com/article/554 (superseded by larch)&#xA; pop2imap: http://www.linux-france.org/prj/pop2imap/ (I wrote that too)&#xA; exchange-away: http://exchange-away.sourceforge.net/&#xA; SyncBackPro: http://www.2brightsparks.com/syncback/sbpro.html&#xA; ImapSyncClient: https://github.com/ridaamirini/ImapSyncClient&#xA; MailStore: https://www.mailstore.com/en/products/mailstore-home/&#xA; mnIMAPSync: https://github.com/manusa/mnIMAPSync&#xA; imap-upload: http://imap-upload.sourceforge.net/ (A tool for uploading a local mbox file to IMAP4 server)&#xA; imapbackup: https://github.com/rcarmo/imapbackup (A Python script for incremental backups of IMAP mailboxes)&#xA; BitRecover email-backup 99 USD, 299 USD https://www.bitrecover.com/email-backup/.&#xA; ImportExportTools: https://addons.thunderbird.net/en-us/thunderbird/addon/importexporttools/ ImportExportTools for Mozilla Thunderbird by Paolo Kaosmos. ImportExportTools does not do IMAP.&#xA; rximapmail: https://sourceforge.net/projects/rximapmail/&#xA; CodeTwo: https://www.codetwo.com/ but CodeTwo does imap source to Office365 only.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;HISTORY&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;I initially wrote imapsync in July 2001 because an enterprise, called&#xA;BaSystemes, paid me to install a new imap server without losing huge old&#xA;mailboxes located in a far away remote imap server, accessible by an&#xA;often broken low-bandwidth ISDN link.&#xA;&#xA;I had to verify every mailbox was well transferred, all folders, all&#xA;messages, without wasting bandwidth or creating duplicates upon resyncs.&#xA;The imapsync design was made with the beautiful rsync command in mind.&#xA;&#xA;Imapsync started its life as a patch of the copy_folder.pl script. The&#xA;script copy_folder.pl comes from the Mail-IMAPClient-2.1.3 perl module&#xA;tarball source (more precisely in the examples/ directory of the&#xA;Mail-IMAPClient tarball).&#xA;&#xA;So many changes happened since then that I wonder if it remains any&#xA;lines of the original copy_folder.pl in imapsync source code.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>elastic/elasticsearch-perl-compat</title>
    <updated>2022-06-03T01:48:40Z</updated>
    <id>tag:github.com,2022-06-03:/elastic/elasticsearch-perl-compat</id>
    <link href="https://github.com/elastic/elasticsearch-perl-compat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A compat layer for migrating from ElasticSearch.pm to the new Elasticsearch.pm&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>