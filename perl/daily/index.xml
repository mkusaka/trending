<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-08T01:21:25Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>autarch/Dist-Zilla-PluginBundle-DROLSKY</title>
    <updated>2024-05-08T01:21:25Z</updated>
    <id>tag:github.com,2024-05-08:/autarch/Dist-Zilla-PluginBundle-DROLSKY</id>
    <link href="https://github.com/autarch/Dist-Zilla-PluginBundle-DROLSKY" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DROLSKY&#39;s plugin bundle&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NAME&lt;/h1&gt; &#xA;&lt;p&gt;Dist::Zilla::PluginBundle::DROLSKY - DROLSKY&#39;s plugin bundle&lt;/p&gt; &#xA;&lt;h1&gt;VERSION&lt;/h1&gt; &#xA;&lt;p&gt;version 1.22&lt;/p&gt; &#xA;&lt;h1&gt;SYNOPSIS&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;name    = My-Module&#xA;author  = Dave Rolsky &amp;lt;autarch@urth.org&amp;gt;&#xA;license = Artistic_2_0&#xA;copyright_holder = Dave Rolsky&#xA;&#xA;[@DROLSKY]&#xA;dist = My-Module&#xA;; Default is DROLSKY::MakeMaker - or set it to ModuleBuild&#xA;make_tool = DROLSKY::MakeMaker&#xA;; These files won&#39;t be added to tarball&#xA;exclude_files = ...&#xA;; Default is DROLSKY&#xA;authority = DROLSKY&#xA;; Used to do things like add the PPPort plugin - determined automatically but can be overridden&#xA;has_xs = ...&#xA;; Passed to AutoPrereqs - can be repeated&#xA;prereqs_skip = ...&#xA;; Passed to Test::Pod::Coverage::Configurable if set&#xA;pod_coverage_also_private = ...&#xA;; Passed to Test::Pod::Coverage::Configurable if set - can be repeated&#xA;pod_coverage_class = ...&#xA;; Passed to Test::Pod::Coverage::Configurable if set - can be repeated&#xA;pod_coverage_skip = ...&#xA;; Passed to Test::Pod::Coverage::Configurable if set - can be repeated&#xA;pod_coverage_trustme = ...&#xA;; For pod spelling test - can be repeated&#xA;stopwords = ...&#xA;; Can also put them in a separate file&#xA;stopwords_file = ..&#xA;; Defaults to false&#xA;use_github_homepage = 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;DESCRIPTION&lt;/h1&gt; &#xA;&lt;p&gt;This is the &lt;a href=&#34;https://metacpan.org/pod/Dist%3A%3AZilla&#34;&gt;Dist::Zilla&lt;/a&gt; plugin bundle I use for my distributions. Don&#39;t use this directly for your own distributions, but you may find it useful as a source of ideas for building your own bundle.&lt;/p&gt; &#xA;&lt;p&gt;This bundle uses &lt;a href=&#34;https://metacpan.org/pod/Dist%3A%3AZilla%3A%3ARole%3A%3APluginBundle%3A%3APluginRemover&#34;&gt;Dist::Zilla::Role::PluginBundle::PluginRemover&lt;/a&gt; and &lt;a href=&#34;https://metacpan.org/pod/Dist%3A%3AZilla%3A%3ARole%3A%3APluginBundle%3A%3AConfig%3A%3ASlicer&#34;&gt;Dist::Zilla::Role::PluginBundle::Config::Slicer&lt;/a&gt; so I can remove or configure any plugin as needed.&lt;/p&gt; &#xA;&lt;p&gt;This is more or less equivalent to the following &lt;code&gt;dist.ini&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;; updates the dist.ini to include an authordep on this bundle at its&#xA;; current $VERSION.&#xA;[DROLSKY::BundleAuthordep]&#xA;&#xA;; Picks one of these - defaults to DROLSKY::MakeMaker&#xA;[DROLSKY::MakeMaker]&#xA;[ModuleBuild]&#xA;&#xA;[Git::GatherDir]&#xA;; Both are configured by setting exclude_files for the bundle. Simple&#xA;; values like &#34;./foo/bar.pl&#34; are treated as filenames, others like&#xA;; &#34;*\.jnk$&#34; are treated as a regex.&#xA;exclude_filenames = ...&#xA;exclude_match     = ...&#xA;&#xA;[ManifestSkip]&#xA;[License]&#xA;[ExecDir]&#xA;[ShareDir]&#xA;[Manifest]&#xA;[CheckVersionIncrement]&#xA;[TestRelease]&#xA;[ConfirmRelease]&#xA;[UploadToCPAN]&#xA;[VersionFromMainModule]&#xA;&#xA;[Authority]&#xA;; Configured by setting authority for the bundle&#xA;authority  = ...&#xA;do_munging = 0&#xA;&#xA;[AutoPrereqs]&#xA;; Configured by setting skip_prereqs for the bundle&#xA;skip = ...&#xA;&#xA;[CopyFilesFromBuild]&#xA;copy = Build.PL&#xA;copy = CODE_OF_CONDUCT.md&#xA;copy = CONTRIBUTING.md&#xA;copy = LICENSE&#xA;copy = Makefile.PL&#xA;copy = README.md&#xA;copy = cpanfile&#xA;copy = ppport.h&#xA;&#xA;[GitHub::Meta]&#xA;bugs = 1&#xA;; Configured by setting use_github_homepage for the bundle&#xA;homepage = 0&#xA;&#xA;[MetaResources]&#xA;homepage = https://metacpan.org/release/My-Module&#xA;bugtracker.web  = https://github.com/...&#xA;&#xA;[MetaProvides::Pckage]&#xA;meta_noindex = 1&#xA;&#xA;[Meta::Contributors]&#xA;[Meta::Config]&#xA;[MetaJSON]&#xA;[MetaYAML]&#xA;&#xA;[NextRelease]&#xA;; Width is configured by setting next_release_width for the bundle&#xA;format = %-8v %{yyyy-MM-dd}d%{ (TRIAL RELEASE)}T&#xA;&#xA;; Scans the test files for use of Test2 and picks either this:&#xA;[Prereqs / Test::More with Test2]&#xA;-phase = test&#xA;-type  = requires&#xA;Test::More = 1.302015&#xA;&#xA;; or, if the distro doesn&#39;t use Test2:&#xA;[Prereqs / Test::More with subtest]&#xA;-phase = test&#xA;-type  = requires&#xA;Test::More = 0.96&#xA;&#xA;[Prereqs / Modules for use with precious]&#xA;-phase = develop&#xA;-type  = requires&#xA;Perl::Critic        = 1.138&#xA;Perl::Critic::Moose = 1.05&#xA;Perl::Tidy          = 20210111&#xA;Pod::Checker        = 1.74&#xA;Pod::Tidy           = 0.10&#xA;&#xA;[Prereqs / Test::Version which fixes https://github.com/plicease/Test-Version/issues/7]&#xA;-phase = develop&#xA;-type  = requires&#xA;Test::Version = 2.05&#xA;&#xA;[PromptIfStale]&#xA;phase  = build&#xA;module = Dist::Zilla::PluginBundle::DROLSKY&#xA;&#xA;[PromptIfStale]&#xA;phase = release&#xA;check_all_plugins = 1&#xA;check_all_prereqs = 1&#xA;check_authordeps  = 1&#xA;skip = Dist::Zilla::Plugin::DROLSKY::BundleAuthordep&#xA;skip = Dist::Zilla::Plugin::DROLSKY::Contributors&#xA;skip = Dist::Zilla::Plugin::DROLSKY::Git::CheckFor::CorrectBranch&#xA;skip = Dist::Zilla::Plugin::DROLSKY::License&#xA;skip = Dist::Zilla::Plugin::DROLSKY::MakeMaker&#xA;skip = Dist::Zilla::Plugin::DROLSKY::PerlLinterConfigFiles&#xA;skip = Dist::Zilla::Plugin::DROLSKY::Precious&#xA;skip = Dist::Zilla::Plugin::DROLSKY::Test::Precious&#xA;skip = Dist::Zilla::Plugin::DROLSKY::WeaverConfig&#xA;skip = Pod::Weaver::PluginBundle::DROLSKY&#xA;&#xA;[Test::Pod::Coverage::Configurable]&#xA;; Configured by setting pod_coverage_class for the bundle&#xA;class = ...&#xA;; Configured by setting pod_coverage_skip for the bundle&#xA;skip = ...&#xA;; Configured by setting pod_coverage_trustme for the bundle&#xA;trustme = ...&#xA;&#xA;[Test::PodSpelling]&#xA;; Configured by setting stopwords and/or stopwords_file for the bundle&#xA;stopwods = ...&#xA;&#xA;[PodSyntaxTests]&#xA;&#xA;[DROLSKY::Test::Precious]&#xA;[MojibakeTests]&#xA;[Test::CleanNamespaces]&#xA;[Test::CPAN::Changes]&#xA;[Test::CPAN::Meta::JSON]&#xA;[Test::EOL]&#xA;[Test::NoTabs]&#xA;[Test::Portability]&#xA;[Test::Synopsis]&#xA;&#xA;[Test::Compile]&#xA;xt_mode = 1&#xA;&#xA;[Test::ReportPrereqs]&#xA;verify_prereqs = 1&#xA;&#xA;[Test::Version]&#xA;is_strict = 1&#xA;&#xA;; Generates/updates a .mailmap file&#xA;[DROLSKY::Contributors]&#xA;[Git::Contributors]&#xA;&#xA;[SurgicalPodWeaver]&#xA;; See Pod::Weaver::PluginBundle::DROLSKY in this same distro for more info&#xA;config_plugin = @DROLSKY&#xA;&#xA;; Nasty hack so I can pass config from the dist.ini to the Pod::Weaver&#xA;; bundle. Currently used so I can set&#xA;; &#34;DROLSKY::WeaverConfig.include_donations_pod = 0&#34; in a dist.ini file.&#xA;[DROLSKY::WeaverConfig]&#xA;&#xA;[ReadmeAnyFromPod / README.md in build]&#xA;type     = markdown&#xA;filename = README.md&#xA;location = build&#xA;phase    = build&#xA;&#xA;[GenerateFile::FromShareDir / Generate CONTRIBUTING.md]&#xA;-dist     = Dist-Zilla-PluginBundle-DROLSKY&#xA;-filename = CONTRIBUTING.md&#xA;; This is determined by looking through the distro for .xs files.&#xA;has_xs    = ...&#xA;&#xA;[GenerateFile::FromShareDir / Generate CODE_OF_CONDUCT.md]&#xA;-dist     = Dist-Zilla-PluginBundle-DROLSKY&#xA;-filename = CODE_OF_CONDUCT.md&#xA;&#xA;[InstallGuide]&#xA;[CPANFile]&#xA;&#xA;; Only added if the distro has .xs files&#xA;[PPPort]&#xA;&#xA;; Like the default License plugin except that it defaults to Artistic 2.0.&#xA;; Also, if the copyright_year for the bundle is not this year, it passes&#xA;; something like &#34;2014-2016&#34; to Software::License.&#xA;[DROLSKY::License]&#xA;&#xA;[CheckPrereqsIndexed]&#xA;[EnsureChangesHasContent]&#xA;&#xA;; Just like Dist::Zilla::Plugin::Git::CheckFor::CorrectBranch except that&#xA;; it allows releases from any branch for TRIAL&#xA;; releases. https://github.com/RsrchBoy/dist-zilla-pluginbundle-git-checkfor/issues/24&#xA;[DROLSKY::Git::CheckFor::CorrectBranch]&#xA;&#xA;[Git::CheckFor::MergeConflicts]&#xA;&#xA;; Generates/updates perlcriticrc, and perltidyrc&#xA;[DROLSKY::PerlLinterConfigFiles]&#xA;; Generates/updates precious.toml&#xA;[DROLSKY::Precious]&#xA;; Generates some dev tool helper scripts when using precious.&#xA;[DROLSKY::DevTools]&#xA;&#xA;; The allow_dirty list is basically all of the generated or munged files&#xA;; in the distro, including:&#xA;;     Build.PL&#xA;;     CODE_OF_CONDUCT.md&#xA;;     CONTRIBUTING.md&#xA;;     Changes&#xA;;     LICENSE&#xA;;     Makefile.PL&#xA;;     README.md&#xA;;     cpanfile&#xA;;     ppport.h&#xA;;     precious.toml&#xA;[Git::Check]&#xA;allow_dirty = ...&#xA;&#xA;[Git::Commit / Commit generated files]&#xA;allow_dirty = ...&#xA;&#xA;[Git::Tag]&#xA;[Git::Push]&#xA;&#xA;[BumpVersionAfterRelease]&#xA;&#xA;[Git::Commit / Commit version bump]&#xA;allow_dirty_match = .+&#xA;commit_msg        = Bump version after release&#xA;&#xA;[Git::Push / Push version bump]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;SUPPORT&lt;/h1&gt; &#xA;&lt;p&gt;Bugs may be submitted at &lt;a href=&#34;https://github.com/autarch/Dist-Zilla-PluginBundle-DROLSKY/issues&#34;&gt;https://github.com/autarch/Dist-Zilla-PluginBundle-DROLSKY/issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;SOURCE&lt;/h1&gt; &#xA;&lt;p&gt;The source code repository for Dist-Zilla-PluginBundle-DROLSKY can be found at &lt;a href=&#34;https://github.com/autarch/Dist-Zilla-PluginBundle-DROLSKY&#34;&gt;https://github.com/autarch/Dist-Zilla-PluginBundle-DROLSKY&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;DONATIONS&lt;/h1&gt; &#xA;&lt;p&gt;If you&#39;d like to thank me for the work I&#39;ve done on this module, please consider making a &#34;donation&#34; to me via PayPal. I spend a lot of free time creating free software, and would appreciate any support you&#39;d care to offer.&lt;/p&gt; &#xA;&lt;p&gt;Please note that &lt;strong&gt;I am not suggesting that you must do this&lt;/strong&gt; in order for me to continue working on this particular software. I will continue to do so, inasmuch as I have in the past, for as long as it interests me.&lt;/p&gt; &#xA;&lt;p&gt;Similarly, a donation made in this way will probably not make me work on this software much more, unless I get so many donations that I can consider working on free software full time (let&#39;s all have a chuckle at that together).&lt;/p&gt; &#xA;&lt;p&gt;To donate, log into PayPal and send money to &lt;a href=&#34;mailto:autarch@urth.org&#34;&gt;autarch@urth.org&lt;/a&gt;, or use the button at &lt;a href=&#34;https://houseabsolute.com/foss-donations/&#34;&gt;https://houseabsolute.com/foss-donations/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;AUTHOR&lt;/h1&gt; &#xA;&lt;p&gt;Dave Rolsky &lt;a href=&#34;mailto:autarch@urth.org&#34;&gt;autarch@urth.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;CONTRIBUTORS&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Karen Etheridge &lt;a href=&#34;mailto:ether@cpan.org&#34;&gt;ether@cpan.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mark Fowler &lt;a href=&#34;mailto:mark@twoshortplanks.com&#34;&gt;mark@twoshortplanks.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;COPYRIGHT AND LICENSE&lt;/h1&gt; &#xA;&lt;p&gt;This software is Copyright (c) 2013 - 2022 by Dave Rolsky.&lt;/p&gt; &#xA;&lt;p&gt;This is free software, licensed under:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;The Artistic License 2.0 (GPL Compatible)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The full text of the license can be found in the &lt;code&gt;LICENSE&lt;/code&gt; file included with this distribution.&lt;/p&gt;</summary>
  </entry>
</feed>