<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-27T01:39:59Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>gbxyz/webidx</title>
    <updated>2024-01-27T01:39:59Z</updated>
    <id>tag:github.com,2024-01-27:/gbxyz/webidx</id>
    <link href="https://github.com/gbxyz/webidx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;webidx is a client-side search engine for static websites.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;webidx&lt;/h1&gt; &#xA;&lt;p&gt;webidx is a client-side search engine for static websites.&lt;/p&gt; &#xA;&lt;p&gt;It works by using a simple Perl script (&lt;a href=&#34;https://raw.githubusercontent.com/gbxyz/webidx/main/webidx.pl&#34;&gt;webidx.pl&lt;/a&gt;) to generate an SQLite database containing an index of static HTML files. The SQLite database is then published alongside the static content.&lt;/p&gt; &#xA;&lt;p&gt;The search functionality is implemented in &lt;a href=&#34;https://raw.githubusercontent.com/gbxyz/webidx/main/webidx.js&#34;&gt;webidx.js&lt;/a&gt; which uses &lt;a href=&#34;https://github.com/sql-js/sql.js&#34;&gt;sql.js&lt;/a&gt; to provide an interface to the SQLite file.&lt;/p&gt; &#xA;&lt;p&gt;You can see a live demo of it &lt;a href=&#34;https://gavinbrown.xyz/webidx-demo/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to use it&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;use &lt;a href=&#34;https://raw.githubusercontent.com/gbxyz/webidx/main/webidx.pl&#34;&gt;webidx.pl&lt;/a&gt; to generate the index:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ /path/to/webidx.pl -x index.html -x archives.html --xP secret_files -o https://example.com -z . ./index.db&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can run &lt;code&gt;webidx.pl --help&lt;/code&gt; to see all the available command-line options.&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Include &lt;a href=&#34;https://cdnjs.com/libraries/sql.js&#34;&gt;sql.js&lt;/a&gt;, &lt;a href=&#34;https://cdnjs.com/libraries/pako&#34;&gt;pako&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/gbxyz/webidx/main/webidx.js&#34;&gt;webidx.js&lt;/a&gt; in your web page:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/sql.js/1.10.1/sql-wasm.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/pako/2.1.0/pako.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;script src=&#34;/path/to/webidx.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Create a search form:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;form onsubmit=&#34;window.webidx.search({dbfile:&#39;/webidx.db.gz&#39;,query:document.getElementById(&#39;q&#39;).value});return false;&#34;&amp;gt;&#xA;  &amp;lt;input id=&#34;q&#34; type=&#34;search&#34;&amp;gt;&#xA;&amp;lt;/form&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When the user hits the return key in the search box, a modal dialog will pop up containing search results!&lt;/p&gt; &#xA;&lt;p&gt;The object that&#39;s passed to &lt;code&gt;window.webidx.search()&lt;/code&gt; can have the following properties:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;dbfile&lt;/code&gt;: URL of the SQLite database file&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;query&lt;/code&gt;: search query&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;resultCallback&lt;/code&gt;: a callback which is passed an array of search results. Each result is an object with the &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;url&lt;/code&gt; properties. If not defined, a modal dialog will be displayed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;errorCallback&lt;/code&gt;: a callback which is passed any error string as an argument.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;titleSuffix&lt;/code&gt;: a string to be removed from the end of page titles.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;titlePrefix&lt;/code&gt;: a string to be removed from the beginning of page titles.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>