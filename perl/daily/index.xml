<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-13T01:39:35Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>openresty/test-nginx</title>
    <updated>2022-11-13T01:39:35Z</updated>
    <id>tag:github.com,2022-11-13:/openresty/test-nginx</id>
    <link href="https://github.com/openresty/test-nginx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Data-driven test scaffold for Nginx C module and OpenResty Lua library development&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NAME&lt;/h1&gt; &#xA;&lt;p&gt;Test::Nginx - Data-driven test scaffold for Nginx C module and Nginx/OpenResty-based libraries and applications&lt;/p&gt; &#xA;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openresty/test-nginx/master/#name&#34;&gt;NAME&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openresty/test-nginx/master/#description&#34;&gt;DESCRIPTION&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openresty/test-nginx/master/#user-guide&#34;&gt;User Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openresty/test-nginx/master/#nginx-c-modules-that-use-testnginx-to-drive-their-test-suites&#34;&gt;Nginx C modules that use Test::Nginx to drive their test suites&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openresty/test-nginx/master/#installation&#34;&gt;INSTALLATION&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openresty/test-nginx/master/#source-repository&#34;&gt;SOURCE REPOSITORY&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openresty/test-nginx/master/#debian-packages&#34;&gt;DEBIAN PACKAGES&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openresty/test-nginx/master/#community&#34;&gt;Community&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openresty/test-nginx/master/#english-mailing-list&#34;&gt;English Mailing List&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openresty/test-nginx/master/#chinese-mailing-list&#34;&gt;Chinese Mailing List&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openresty/test-nginx/master/#authors&#34;&gt;AUTHORS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openresty/test-nginx/master/#copyright--license&#34;&gt;COPYRIGHT &amp;amp; LICENSE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openresty/test-nginx/master/#see-also&#34;&gt;SEE ALSO&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;DESCRIPTION&lt;/h1&gt; &#xA;&lt;p&gt;This distribution provides two testing modules for Nginx C module development:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/Test%3A%3ANginx%3A%3ASocket&#34;&gt;Test::Nginx::Socket&lt;/a&gt; (This is highly recommended.)&lt;/p&gt; &lt;p&gt;This library also has the following subclasses:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test%3A%3ANginx%3A%3ASocket%3A%3ALua&#34;&gt;Test::Nginx::Socket::Lua&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test%3A%3ANginx%3A%3ASocket%3A%3ALua%3A%3AStream&#34;&gt;Test::Nginx::Socket::Lua::Stream&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Test%3A%3ANginx%3A%3ASocket%3A%3ALua%3A%3ADgram&#34;&gt;Test::Nginx::Socket::Lua::Dgram&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/Test%3A%3ANginx%3A%3ALWP&#34;&gt;Test::Nginx::LWP&lt;/a&gt; (This is obsolete.)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All of them are based on &lt;a href=&#34;https://metacpan.org/pod/Test%3A%3ABase&#34;&gt;Test::Base&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Usually, &lt;a href=&#34;https://metacpan.org/pod/Test%3A%3ANginx%3A%3ASocket&#34;&gt;Test::Nginx::Socket&lt;/a&gt; is preferred because it works on a much lower level and not that fault tolerant like &lt;a href=&#34;https://metacpan.org/pod/Test%3A%3ANginx%3A%3ALWP&#34;&gt;Test::Nginx::LWP&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also, a lot of connection hang issues (like wrong &lt;code&gt;r-&amp;gt;main-&amp;gt;count&lt;/code&gt; value in nginx 0.8.x) can only be captured by &lt;a href=&#34;https://metacpan.org/pod/Test%3A%3ANginx%3A%3ASocket&#34;&gt;Test::Nginx::Socket&lt;/a&gt; because Perl&#39;s &lt;a href=&#34;https://metacpan.org/pod/LWP%3A%3AUserAgent&#34;&gt;LWP::UserAgent&lt;/a&gt; client will close the connection itself which will conceal such issues from the testers.&lt;/p&gt; &#xA;&lt;p&gt;Test::Nginx automatically starts an nginx instance (from the &lt;code&gt;PATH&lt;/code&gt; env) rooted at t/servroot/ and the default config template makes this nginx instance listen on the port &lt;code&gt;1984&lt;/code&gt; by default. One can specify a different port number by setting his port number to the &lt;code&gt;TEST_NGINX_PORT&lt;/code&gt; environment, as in&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export TEST_NGINX_PORT=1989&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;User Guide&lt;/h1&gt; &#xA;&lt;p&gt;You can find a comprehensive user guide on this test framework in my upcoming book &#34;Programming OpenResty&#34;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://openresty.gitbooks.io/programming-openresty/content/testing/index.html&#34;&gt;https://openresty.gitbooks.io/programming-openresty/content/testing/index.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Nginx C modules that use Test::Nginx to drive their test suites&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;ngx_echo&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openresty/echo-nginx-module&#34;&gt;https://github.com/openresty/echo-nginx-module&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ngx_headers_more&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openresty/headers-more-nginx-module&#34;&gt;https://github.com/openresty/headers-more-nginx-module&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ngx_chunkin&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://wiki.nginx.org/NginxHttpChunkinModule&#34;&gt;http://wiki.nginx.org/NginxHttpChunkinModule&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ngx_memc&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://wiki.nginx.org/NginxHttpMemcModule&#34;&gt;http://wiki.nginx.org/NginxHttpMemcModule&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ngx_drizzle&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openresty/drizzle-nginx-module&#34;&gt;https://github.com/openresty/drizzle-nginx-module&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ngx_rds_json&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openresty/rds-json-nginx-module&#34;&gt;https://github.com/openresty/rds-json-nginx-module&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ngx_rds_csv&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openresty/rds-csv-nginx-module&#34;&gt;https://github.com/openresty/rds-csv-nginx-module&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ngx_xss&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openresty/xss-nginx-module&#34;&gt;https://github.com/openresty/xss-nginx-module&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ngx_srcache&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openresty/srcache-nginx-module&#34;&gt;https://github.com/openresty/srcache-nginx-module&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ngx_lua&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openresty/lua-nginx-module&#34;&gt;https://github.com/openresty/lua-nginx-module&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ngx_set_misc&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openresty/set-misc-nginx-module&#34;&gt;https://github.com/openresty/set-misc-nginx-module&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ngx_array_var&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openresty/array-var-nginx-module&#34;&gt;https://github.com/openresty/array-var-nginx-module&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ngx_form_input&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/calio/form-input-nginx-module&#34;&gt;https://github.com/calio/form-input-nginx-module&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ngx_iconv&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/calio/iconv-nginx-module&#34;&gt;https://github.com/calio/iconv-nginx-module&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ngx_set_cconv&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/liseen/set-cconv-nginx-module&#34;&gt;https://github.com/liseen/set-cconv-nginx-module&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ngx_postgres&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/FRiCKLE/ngx_postgres&#34;&gt;https://github.com/FRiCKLE/ngx_postgres&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ngx_coolkit&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/FRiCKLE/ngx_coolkit&#34;&gt;https://github.com/FRiCKLE/ngx_coolkit&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Naxsi&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nbs-system/naxsi&#34;&gt;https://github.com/nbs-system/naxsi&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ngx_shibboleth&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nginx-shib/nginx-http-shibboleth&#34;&gt;https://github.com/nginx-shib/nginx-http-shibboleth&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openresty/test-nginx/master/#table-of-contents&#34;&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;INSTALLATION&lt;/h1&gt; &#xA;&lt;p&gt;If you have `cpan` installed, you can simply run the command to install this module:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo cpan Test::Nginx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to install from the source code directory directly, you can run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo cpan .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you prefer &lt;code&gt;cpanm&lt;/code&gt; to &lt;code&gt;cpan&lt;/code&gt; (like I do!), you can replace &lt;code&gt;cpan&lt;/code&gt; in the commands above with &lt;code&gt;cpanm&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Otherwise you can install this module in the good old way below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perl Makefile.PL&#xA;make&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openresty/test-nginx/master/#table-of-contents&#34;&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;SOURCE REPOSITORY&lt;/h1&gt; &#xA;&lt;p&gt;This module has a Git repository on Github, which has access for all.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/openresty/test-nginx&#34;&gt;https://github.com/openresty/test-nginx&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want a commit bit, feel free to drop me a line.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openresty/test-nginx/master/#table-of-contents&#34;&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;DEBIAN PACKAGES&lt;/h1&gt; &#xA;&lt;p&gt;António P. P. Almeida is maintaining a Debian package for this module in his Debian repository: &lt;a href=&#34;http://debian.perusio.net&#34;&gt;http://debian.perusio.net&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openresty/test-nginx/master/#table-of-contents&#34;&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Community&lt;/h1&gt; &#xA;&lt;h2&gt;English Mailing List&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;openresty-en&lt;/code&gt; mailing list is for English speakers: &lt;a href=&#34;https://groups.google.com/group/openresty-en&#34;&gt;https://groups.google.com/group/openresty-en&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openresty/test-nginx/master/#table-of-contents&#34;&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Chinese Mailing List&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;openresty&lt;/code&gt; mailing list is for Chinese speakers: &lt;a href=&#34;https://groups.google.com/group/openresty&#34;&gt;https://groups.google.com/group/openresty&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openresty/test-nginx/master/#table-of-contents&#34;&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;AUTHORS&lt;/h1&gt; &#xA;&lt;p&gt;Yichun Zhang (agentzh) &lt;code&gt;&amp;lt;agentzh@gmail.com&amp;gt;&lt;/code&gt;, OpenResty Inc.&lt;/p&gt; &#xA;&lt;p&gt;Antoine BONAVITA &lt;code&gt;&amp;lt;antoine.bonavita@gmail.com&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openresty/test-nginx/master/#table-of-contents&#34;&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;COPYRIGHT &amp;amp; LICENSE&lt;/h1&gt; &#xA;&lt;p&gt;Copyright (c) 2009-2017, Yichun Zhang (agentzh) &lt;code&gt;&amp;lt;agentzh@gmail.com&amp;gt;&lt;/code&gt;, OpenResty Inc.&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2011-2012, Antoine Bonavita &lt;code&gt;&amp;lt;antoine.bonavita@gmail.com&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This module is licensed under the terms of the BSD license.&lt;/p&gt; &#xA;&lt;p&gt;Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.&lt;/li&gt; &#xA; &lt;li&gt;Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.&lt;/li&gt; &#xA; &lt;li&gt;Neither the name of the authors nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openresty/test-nginx/master/#table-of-contents&#34;&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;SEE ALSO&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://metacpan.org/pod/Test%3A%3ANginx%3A%3ALWP&#34;&gt;Test::Nginx::LWP&lt;/a&gt;, &lt;a href=&#34;https://metacpan.org/pod/Test%3A%3ANginx%3A%3ASocket&#34;&gt;Test::Nginx::Socket&lt;/a&gt;, &lt;a href=&#34;https://metacpan.org/pod/Test%3A%3ABase&#34;&gt;Test::Base&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openresty/test-nginx/master/#table-of-contents&#34;&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sni/Thruk</title>
    <updated>2022-11-13T01:39:35Z</updated>
    <id>tag:github.com,2022-11-13:/sni/Thruk</id>
    <link href="https://github.com/sni/Thruk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Thruk is a multibackend monitoring webinterface for Naemon, Nagios, Icinga and Shinken using the Livestatus API.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Thruk - Monitoring Webinterface&lt;/h1&gt; &#xA;&lt;p&gt;Thruk is a multibackend monitoring webinterface which currently supports Naemon, Icinga, Shinken and Nagios as backend using the Livestatus API. It is designed to be a &#39;dropin&#39; replacement and covers the original features plus adds additional enhancements for large installations, increased usability and many usefull addons.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://thruk.org/images/galleries/01_main-thumb.png&#34; alt=&#34;Thruk Startpage&#34; title=&#34;Thruk Startpage&#34;&gt; &lt;img src=&#34;https://thruk.org/images/galleries/geomaps-thumb.png&#34; alt=&#34;Thruk Panorama&#34; title=&#34;Thruk Panorama&#34;&gt; &lt;a href=&#34;https://thruk.org/screenshots/&#34;&gt;See more screenshots...&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;All documentation is under docs/&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ask a question on &lt;a href=&#34;https://stackoverflow.com/questions/tagged/thruk&#34;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mailing list on &lt;a href=&#34;https://groups.google.com/group/thruk&#34;&gt;Google Groups&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;File a bug in &lt;a href=&#34;https://github.com/sni/Thruk/issues&#34;&gt;GitHub Issues&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/ThrukGUI/&#34;&gt;Tweet&lt;/a&gt; us with other feedback.&lt;/li&gt; &#xA; &lt;li&gt;Chat with developers on &lt;a href=&#34;irc://irc.libera.chat/thruk&#34;&gt;IRC Libera #thruk&lt;/a&gt; (&lt;a href=&#34;https://web.libera.chat/?nick=Guest?#thruk&#34;&gt;Webchat&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Main Features / Advantages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Multiple backends&lt;/li&gt; &#xA; &lt;li&gt;Faster while using less CPU&lt;/li&gt; &#xA; &lt;li&gt;Displays live data, no delay between core and GUI&lt;/li&gt; &#xA; &lt;li&gt;Clusterable, can be clustered over hosts&lt;/li&gt; &#xA; &lt;li&gt;Business Process Addon&lt;/li&gt; &#xA; &lt;li&gt;Advanced status filters&lt;/li&gt; &#xA; &lt;li&gt;Extended logfile search&lt;/li&gt; &#xA; &lt;li&gt;Multiple themes included&lt;/li&gt; &#xA; &lt;li&gt;Excel export for status and logfiles&lt;/li&gt; &#xA; &lt;li&gt;Adjustable side menu&lt;/li&gt; &#xA; &lt;li&gt;Full expanded plugin commandline for easy testing&lt;/li&gt; &#xA; &lt;li&gt;Save searches in personal bookmarks&lt;/li&gt; &#xA; &lt;li&gt;Config Tool included&lt;/li&gt; &#xA; &lt;li&gt;Mobile interface included&lt;/li&gt; &#xA; &lt;li&gt;SLA Reports in PDF format&lt;/li&gt; &#xA; &lt;li&gt;Recurring Downtimes&lt;/li&gt; &#xA; &lt;li&gt;Fully Featured Dashboard&lt;/li&gt; &#xA; &lt;li&gt;Independant from monitoring core, can be installed on remote host&lt;/li&gt; &#xA; &lt;li&gt;Easy to extend with plugins&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Thruk is Copyright (c) 2009-2019 by Sven Nierlein and others. This is free software; you can redistribute it and/or modify it under the same terms as the Perl5 programming language system itself:&lt;/p&gt; &#xA;&lt;p&gt;a) the &#34;Artistic License 1.0&#34; as published by The Perl Foundation &lt;a href=&#34;http://dev.perl.org/licenses/artistic.html&#34;&gt;http://dev.perl.org/licenses/artistic.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;b) the GNU General Public License as published by the Free Software Foundation; either version 1 &lt;a href=&#34;http://www.gnu.org/licenses/gpl-1.0.html&#34;&gt;http://www.gnu.org/licenses/gpl-1.0.html&lt;/a&gt; or (at your option) any later version&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;SPDX-License-Identifier: Artistic-1.0-Perl OR GPL-1.0-or-later&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Vendor specific libraries below ./root/thruk/vendor/ may have different licenes. See THANKS file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>shogo82148/actions-setup-perl</title>
    <updated>2022-11-13T01:39:35Z</updated>
    <id>tag:github.com,2022-11-13:/shogo82148/actions-setup-perl</id>
    <link href="https://github.com/shogo82148/actions-setup-perl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Setup Perl environment Action&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;actions-setup-perl&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/shogo82148/actions-setup-perl/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/shogo82148/actions-setup-perl/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;Main workflow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shogo82148/actions-setup-perl/main/social-preview.png&#34; alt=&#34;social preview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This action sets by perl environment for use in actions by:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;optionally downloading and caching a version of perl&lt;/li&gt; &#xA; &lt;li&gt;registering problem matchers for error output&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/shogo82148/actions-setup-perl/main/action.yml&#34;&gt;action.yml&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Basic:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;steps:&#xA;- uses: actions/checkout@v3&#xA;- uses: shogo82148/actions-setup-perl@v1&#xA;  with:&#xA;    perl-version: &#39;5.34&#39;&#xA;- run: cpanm --installdeps .&#xA;- run: prove -lv t&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install CPAN Modules from cpanfile and cache them:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;steps:&#xA;- uses: actions/checkout@v3&#xA;- uses: shogo82148/actions-setup-perl@v1&#xA;  with:&#xA;    perl-version: &#39;5.34&#39;&#xA;    install-modules-with: cpanm&#xA;    install-modules-args: --with-develop --with-configure&#xA;- run: prove -lv t&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Matrix Testing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;jobs:&#xA;  build:&#xA;    runs-on: ${{ matrix.os }}&#xA;    strategy:&#xA;      matrix:&#xA;        os: [&#39;ubuntu-latest&#39;, &#39;macos-latest&#39;, &#39;windows-latest&#39;]&#xA;        perl: [ &#39;5.34&#39;, &#39;5.32&#39;, &#39;5.30&#39; ]&#xA;    name: Perl ${{ matrix.perl }} on ${{ matrix.os }}&#xA;    steps:&#xA;      - uses: actions/checkout@v3&#xA;      - name: Set up perl&#xA;        uses: shogo82148/actions-setup-perl@v1&#xA;        with:&#xA;          perl-version: ${{ matrix.perl }}&#xA;      - run: perl -V&#xA;      - run: cpanm --installdeps .&#xA;      - run: prove -lv t&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Use Strawberry Perl on Windows&lt;/h2&gt; &#xA;&lt;p&gt;actions-setup-perl uses the binaries customized for GitHub Actions by default. If you want to use &lt;a href=&#34;http://strawberryperl.com/&#34;&gt;Strawberry Perl&lt;/a&gt; on Windows, add &lt;code&gt;distribution: strawberry&lt;/code&gt; into the &#34;with&#34; section.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;steps:&#xA;- uses: actions/checkout@v3&#xA;- uses: shogo82148/actions-setup-perl@v1&#xA;  with:&#xA;    perl-version: &#39;5.32&#39;&#xA;    distribution: strawberry&#xA;- run: cpanm --installdeps .&#xA;- run: prove -lv t&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This option is available on Windows and falls back to the default customized binaries on other platforms.&lt;/p&gt; &#xA;&lt;h3&gt;Supported Platforms&lt;/h3&gt; &#xA;&lt;p&gt;The action works for &lt;a href=&#34;https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners&#34;&gt;GitHub-hosted runners&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Operating System&lt;/th&gt; &#xA;   &lt;th&gt;Supported Versions&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ubuntu-20.04&lt;/code&gt;, &lt;code&gt;ubuntu-22.04&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;macos-11&lt;/code&gt;, &lt;code&gt;macos-12&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;windows-2019&lt;/code&gt;, &lt;code&gt;windows-2022&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.github.com/en/actions/hosting-your-own-runners&#34;&gt;Self-hosted runners&lt;/a&gt; are not supported.&lt;/p&gt; &#xA;&lt;h2&gt;Action inputs&lt;/h2&gt; &#xA;&lt;p&gt;All inputs are &lt;strong&gt;optional&lt;/strong&gt;. If not set, sensible defaults will be used.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;perl-version&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Specifies the Perl version to setup. Minor version and patch level can be omitted. The action uses the latest Perl version available that matches the specified value. This defaults to &lt;code&gt;5&lt;/code&gt;, which results in the latest available version of Perl 5. In addition, the value &lt;code&gt;latest&lt;/code&gt; is available, the actions uses the latest available version of Perl including &lt;code&gt;5&lt;/code&gt;, &lt;code&gt;7&lt;/code&gt; or later major versions.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;5&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;distribution&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Specify the distribution to use, this is either &lt;code&gt;default&lt;/code&gt; or &lt;code&gt;strawberry&lt;/code&gt;. (The value &lt;code&gt;strawberry&lt;/code&gt; is ignored on anything but Windows.)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;default&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;multi-thread&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Enables interpreter-based threads (ithread) options (&lt;code&gt;-Duseithreads&lt;/code&gt;). &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; are accepted.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Default: depends on platform. On Linux and macOS, the default value is &#34;false&#34; (ithread is disabled). On Windows, the default value is &#34;true&#34; (ithread is enable) for fork emulation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;install-modules-with&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Install CPAN modules from your &lt;code&gt;cpanfile&lt;/code&gt; with the specified installer. &lt;code&gt;cpanm&lt;/code&gt;(&lt;a href=&#34;https://metacpan.org/pod/App::cpanminus&#34;&gt;App::cpanminus&lt;/a&gt;), &lt;code&gt;cpm&lt;/code&gt;(&lt;a href=&#34;https://metacpan.org/pod/App::cpm&#34;&gt;App::cpm&lt;/a&gt;), and &lt;code&gt;carton&lt;/code&gt;(&lt;a href=&#34;https://metacpan.org/pod/Carton&#34;&gt;Carton&lt;/a&gt;) are available. CPAN modules is installed into &lt;code&gt;${working-directory}/local/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Default: Nothing. Any CPAN module is not installed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;install-modules-args&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The argument for CPAN module installer.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Default: Nothing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;install-modules&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;List of one or more CPAN modules, separated by white spaces (space or new line). They are installed &lt;code&gt;local&lt;/code&gt; directory on your working directory.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Default: Nothing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;enable-modules-cache&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Enable caching when install CPAN modules. &lt;code&gt;true&lt;/code&gt; enables cache and &lt;code&gt;false&lt;/code&gt; disable it. The key of cache will generated by the hash of &lt;code&gt;cpanfile&lt;/code&gt; in the repository root. Modules in the &lt;code&gt;local&lt;/code&gt; directory are cached in the end of the job.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;working-directory&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The working directory.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Default: &lt;code&gt;.&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Action outputs&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;perl-version&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The perl version actually installed. (e.g. &lt;code&gt;&#34;5.34.0&#34;&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;perl-hash&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The digest of &lt;code&gt;perl -V&lt;/code&gt;. It is useful for the cache key, because this value vary the platform, the version of perl, the compiler option for building perl, etc.&lt;/p&gt; &#xA;&lt;h1&gt;Supported Shells&lt;/h1&gt; &#xA;&lt;p&gt;The GitHub runner come with a preinstalled version of Perl, used by the system Git. Unfortunately, some shell types prepend the directory containing the system Perl to the &lt;code&gt;PATH&lt;/code&gt; which makes it impossible to use the Perl installed by this action.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;code&gt;shell&lt;/code&gt; parameter&lt;/th&gt; &#xA;   &lt;th&gt;Linux&lt;/th&gt; &#xA;   &lt;th&gt;macOS&lt;/th&gt; &#xA;   &lt;th&gt;Windows (default)&lt;/th&gt; &#xA;   &lt;th&gt;Windows (Strawberry)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;bash&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;sup&gt;1)&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;sup&gt;1)&lt;/sup&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;pwsh&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;python&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;sh&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;cmd&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;powershell&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;custom shell &lt;code&gt;perl {0}&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;On Windows, the bash shell always gets &lt;code&gt;/usr/bin&lt;/code&gt; prepended to the &lt;code&gt;PATH&lt;/code&gt; which contains the system Perl.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Pre-installed Scripts&lt;/h1&gt; &#xA;&lt;p&gt;The following Perl scripts are pre-installed for convenience.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/distribution/Carton/script/carton&#34;&gt;carton&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/distribution/App-cpanminus/bin/cpanm&#34;&gt;cpanm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/distribution/App-cpm/script/cpm&#34;&gt;cpm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Pre-installed Modules&lt;/h1&gt; &#xA;&lt;h2&gt;CPAN Modules&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/JSON&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Cpanel::JSON::XS&#34;&gt;Cpanel::JSON::XS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/JSON::XS&#34;&gt;JSON::XS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/JSON::MaybeXS&#34;&gt;JSON::MaybeXS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/dist/YAML/view/lib/YAML.pod&#34;&gt;YAML&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/YAML::Tiny&#34;&gt;YAML::Tiny&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/YAML::XS&#34;&gt;YAML::XS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/dist/Net-SSLeay/view/lib/Net/SSLeay.pod&#34;&gt;Net::SSLeay&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/dist/IO-Socket-SSL/view/lib/IO/Socket/SSL.pod&#34;&gt;IO::Socket::SSL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Mozilla::CA&#34;&gt;Mozilla::CA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Win32&#34;&gt;Win32&lt;/a&gt; (installed from CPAN in perl 5.8.3 or earlier. From perl 5.8.4, it is installed as a core module.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Actions::Core&lt;/h2&gt; &#xA;&lt;p&gt;Perl port of &lt;a href=&#34;https://github.com/actions/toolkit/tree/main/packages/core&#34;&gt;@actions/core&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;SYNOPSIS&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;use Actions::Core;&#xA;&#xA;# Inputs/Outputs&#xA;my $input = get_input(&#39;inputName&#39;, { required: true });&#xA;my $boolean_input = get_boolean_input(&#39;boolean-input&#39;); # accepts YAML 1.2 boolean values.&#xA;set_output(&#39;outputKey&#39;, &#39;outputVal&#39;);&#xA;&#xA;# Exporting variables&#xA;export_variable(&#39;envVar&#39;, &#39;Val&#39;);&#xA;&#xA;# Setting a secret&#xA;set_secret(&#39;myPassword&#39;);&#xA;&#xA;# PATH Manipulation&#xA;add_path(&#39;/path/to/mytool&#39;);&#xA;&#xA;# Exit codes&#xA;set_failed(`Action failed with error ${err}`);&#xA;&#xA;# Logging&#xA;debug(&#39;debug message&#39;);&#xA;if (is_debug()) {&#xA;  # print verbose log&#xA;}&#xA;info(&#39;Output to the actions build log&#39;);&#xA;&#xA;# Annotation&#xA;error(&#39;error&#39;)&#xA;warning(&#39;warning&#39;);&#xA;notice(&#39;notice&#39;);&#xA;notice(&#39;add an annotation to files&#39;, {&#xA;  title =&amp;gt; &#39;Title&#39;,&#xA;  file =&amp;gt; &#39;filename.txt&#39;,&#xA;  start_line   =&amp;gt; 1,&#xA;  end_line     =&amp;gt; 1,&#xA;  start_column =&amp;gt; 1,&#xA;  end_column   =&amp;gt; 10,&#xA;});&#xA;&#xA;# Manually wrap output&#xA;start_group(&#39;Do some function&#39;);&#xA;do_some_function();&#xA;end_group();&#xA;&#xA;# Wrap Subroutines&#xA;my $result = group &#39;Do something async&#39; =&amp;gt; sub {&#xA;  return &#39;some results&#39;;&#xA;};&#xA;&#xA;# Custom Functions of actions-setup-perl&#xA;# List Available Perl Versions&#xA;my @available_perls_on_current_platform = perl_versions(); # (&#39;5.34.0&#39;, &#39;5.32.1&#39;, &#39;5.30.3&#39;, &#39;5.28.3&#39;, ...)&#xA;my @available_perls_on_linux   = perl_versions(platform =&amp;gt; &#39;linux&#39;);&#xA;my @available_perls_on_darwin  = perl_versions(platform =&amp;gt; &#39;darwin&#39;);&#xA;my @available_perls_on_win32   = perl_versions(platform =&amp;gt; &#39;win32&#39;);&#xA;my @available_strawberry_perls = perl_versions(platform =&amp;gt; &#39;win32&#39;, distribution =&amp;gt; &#39;strawberry&#39;);&#xA;my @including_patch_versions   = perl_versions(patch =&amp;gt; 1); # (&#39;5.34.0&#39;, &#39;5.32.1&#39;, &#39;5.32.0&#39;, &#39;5.30.3&#39;, &#39;5.30.2&#39;, ...)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;List Available Perl Versions&lt;/h3&gt; &#xA;&lt;p&gt;Example matrix workflow of using &lt;code&gt;perl_versions&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;jobs:&#xA;  list:&#xA;    name: list available perl versions&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;      - uses: shogo82148/actions-setup-perl@v1&#xA;      - id: set-matrix&#xA;        name: list available perl versions&#xA;        shell: perl {0}&#xA;        run: |&#xA;          use Actions::Core;&#xA;          set_output(matrix =&amp;gt; {perl =&amp;gt; [perl_versions()]});&#xA;    outputs:&#xA;      matrix: ${{ steps.set-matrix.outputs.matrix }}&#xA;&#xA;  run:&#xA;    runs-on: ubuntu-latest&#xA;    needs: list&#xA;    strategy:&#xA;      fail-fast: false&#xA;      matrix: ${{fromJson(needs.list.outputs.matrix)}}&#xA;    steps:&#xA;      - uses: shogo82148/actions-setup-perl@v1&#xA;        with:&#xA;          perl-version: ${{ matrix.perl }}&#xA;      # do something&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Known Issues&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On Windows, &lt;code&gt;shell: bash&lt;/code&gt; steps continue to use the system perl &lt;a href=&#34;https://github.com/shogo82148/actions-setup-perl/issues/328&#34;&gt;#328&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;The scripts and documentation in this project are released under the &lt;a href=&#34;https://raw.githubusercontent.com/shogo82148/actions-setup-perl/main/LICENSE.md&#34;&gt;MIT License&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Raptor in &lt;code&gt;social-preview.svg&lt;/code&gt; is licensed under the CC-SA License, Version 4.0 &lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;https://creativecommons.org/licenses/by-sa/4.0/&lt;/a&gt;. Copyright (C) 2012, Sebastian Riedel. &lt;a href=&#34;https://github.com/kraih/perl-raptor&#34;&gt;https://github.com/kraih/perl-raptor&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>