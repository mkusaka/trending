<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-15T01:36:36Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>metacpan/metacpan-web</title>
    <updated>2022-11-15T01:36:36Z</updated>
    <id>tag:github.com,2022-11-15:/metacpan/metacpan-web</id>
    <link href="https://github.com/metacpan/metacpan-web" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Web interface for MetaCPAN&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/metacpan/metacpan-web/workflows/test/badge.svg?branch=master&#34; alt=&#34;test&#34;&gt; &lt;a href=&#34;https://coveralls.io/r/metacpan/metacpan-web&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/metacpan/metacpan-web/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- vim-markdown-toc GFM --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/metacpan/metacpan-web/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/metacpan/metacpan-web/master/#installing-manually&#34;&gt;Installing Manually&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/metacpan/metacpan-web/master/#installing-on-macos&#34;&gt;Installing on macOS&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/metacpan/metacpan-web/master/#running-tests&#34;&gt;Running Tests&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/metacpan/metacpan-web/master/#running-the-app&#34;&gt;Running the App&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/metacpan/metacpan-web/master/#local-git-and-testing-considerations&#34;&gt;Local Git and testing considerations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/metacpan/metacpan-web/master/#local-configuration-changes&#34;&gt;Local Configuration Changes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/metacpan/metacpan-web/master/#compatibility-notes&#34;&gt;Compatibility Notes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- vim-markdown-toc --&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;We strongly recommend using &lt;a href=&#34;https://github.com/metacpan/metacpan-docker&#34;&gt;metacpan-docker&lt;/a&gt;. This will give you a virtual machine already configured and ready to start developing on.&lt;/p&gt; &#xA;&lt;p&gt;If you prefer not to use Docker, the following commands will get you started:&lt;/p&gt; &#xA;&lt;h2&gt;Installing Manually&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;carton install&#xA;yarn install&#xA;export PATH=&#34;$(realpath ./node_modules/.bin):$PATH&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Installing on macOS&lt;/h3&gt; &#xA;&lt;p&gt;If you like, you can install &lt;code&gt;carton&lt;/code&gt; via Homebrew:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install carton&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If your &lt;code&gt;carton install&lt;/code&gt; is having issues with SSL-related modules, you may need to use an &lt;code&gt;OPENSSL_PREFIX&lt;/code&gt;. Something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;OPENSSL_PREFIX=&#34;/usr/local/Cellar/openssl@1.1/1.1.1q&#34; carton install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may need to check &lt;code&gt;/usr/local/Cellar/openssl@1.1&lt;/code&gt; to find the latest installed path on your system.&lt;/p&gt; &#xA;&lt;h2&gt;Running Tests&lt;/h2&gt; &#xA;&lt;p&gt;You can use the supplied wrapper around &lt;code&gt;prove&lt;/code&gt; to run tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./bin/prove t&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the tests in parallel, add &lt;code&gt;-j8&lt;/code&gt; (or however many CPUs you have) to the &lt;code&gt;prove&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;h2&gt;Running the App&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;carton exec plackup -p 5001 -r&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;d like to use &lt;code&gt;Gazelle&lt;/code&gt; rather than the default Plack server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;carton exec plackup -p 5001 -s Gazelle -r&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Local Git and testing considerations&lt;/h2&gt; &#xA;&lt;p&gt;You will want to set up the supplied pre-commit Git hook like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./git/setup.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which causes &lt;code&gt;tidyall&lt;/code&gt; to be run before each commit. You can manually run this with &lt;code&gt;tidyall path/to/file&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Local Configuration Changes&lt;/h2&gt; &#xA;&lt;p&gt;The back end defaults to &lt;code&gt;fastapi.metacpan.org&lt;/code&gt;. Running a local API server is optional and not required to hack on the front end. The address to the API being used can be changed in the &lt;code&gt;metacpan_web.conf&lt;/code&gt; file. Ideally you would create a new file called &lt;code&gt;metacpan_web_local.conf&lt;/code&gt; that contains&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;api                 http://127.0.0.1:5000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which will be loaded on top of the existing config file.&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility Notes&lt;/h2&gt; &#xA;&lt;p&gt;On Win32 (and possibly also on other platforms) when using Perl &amp;lt; 5.12, the server started with plackup will generate warnings relating to date parsing. These are caused by Plack due to a bug in the gmtime implementation and can be removed by upgrading to Perl 5.12.&lt;/p&gt;</summary>
  </entry>
</feed>