<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-24T01:39:36Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nginxinc/nginx-otel</title>
    <updated>2023-08-24T01:39:36Z</updated>
    <id>tag:github.com,2023-08-24:/nginxinc/nginx-otel</id>
    <link href="https://github.com/nginxinc/nginx-otel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;nginx_otel&lt;/h1&gt; &#xA;&lt;p&gt;This project provides support for OpenTelemetry distributed tracing in Nginx, offering:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lightweight and high-performance incoming HTTP request tracing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.w3.org/TR/trace-context/&#34;&gt;W3C trace context&lt;/a&gt; propagation&lt;/li&gt; &#xA; &lt;li&gt;OTLP/gRPC trace export&lt;/li&gt; &#xA; &lt;li&gt;Fully Dynamic Variable-Based Sampling&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Install build tools and dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ sudo apt install cmake build-essential libssl-dev zlib1g-dev libpcre3-dev&#xA;  $ sudo apt install pkg-config libc-ares-dev libre2-dev # for gRPC&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Configure Nginx:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ ./configure --with-compat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Configure and build Nginx OTel module:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ mkdir build&#xA;  $ cd build&#xA;  $ cmake -DNGX_OTEL_NGINX_BUILD_DIR=/path/to/configured/nginx/objs ..&#xA;  $ make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Simple Tracing&lt;/h3&gt; &#xA;&lt;p&gt;Dumping all the requests could be useful even in non-distributed environment.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;  http {&#xA;      otel_trace on;&#xA;      server {&#xA;          location / {&#xA;              proxy_pass http://backend;&#xA;          }&#xA;      }&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Parent-based Tracing&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;http {&#xA;    server {&#xA;        location / {&#xA;            otel_trace $otel_parent_sampled;&#xA;            otel_trace_context propagate;&#xA;&#xA;            proxy_pass http://backend;&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ratio-based Tracing&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;http {&#xA;    # trace 10% of requests&#xA;    split_clients $otel_trace_id $ratio_sampler {&#xA;        10%     on;&#xA;        *       off;&#xA;    }&#xA;&#xA;    # or we can trace 10% of user sessions&#xA;    split_clients $cookie_sessionid $session_sampler {&#xA;        10%     on;&#xA;        *       off;&#xA;    }&#xA;&#xA;    server {&#xA;        location / {&#xA;            otel_trace $ratio_sampler;&#xA;            otel_trace_context inject;&#xA;&#xA;            proxy_pass http://backend;&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to Use&lt;/h2&gt; &#xA;&lt;h3&gt;Directives&lt;/h3&gt; &#xA;&lt;h4&gt;Available in &lt;code&gt;http/server/location&lt;/code&gt; contexts&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;otel_trace&lt;/code&gt;&lt;/strong&gt; &lt;code&gt;on | off | “$var“;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The argument is a “complex value”, which should result in &lt;code&gt;on&lt;/code&gt;/&lt;code&gt;off&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;/&lt;code&gt;0&lt;/code&gt;. Default is &lt;code&gt;off&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;otel_trace_context&lt;/code&gt;&lt;/strong&gt; &lt;code&gt;ignore | extract | inject | propagate;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Defines how to propagate traceparent/tracestate headers. &lt;code&gt;extract&lt;/code&gt; uses existing trace context from request. &lt;code&gt;inject&lt;/code&gt; adds new context to request, rewriting existing headers if any. &lt;code&gt;propagate&lt;/code&gt; updates existing context (i.e. combines &lt;code&gt;extract&lt;/code&gt; and &lt;code&gt;inject&lt;/code&gt;). &lt;code&gt;ignore&lt;/code&gt; skips context headers processing. Default is &lt;code&gt;ignore&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;otel_span_name&lt;/code&gt;&lt;/strong&gt; &lt;code&gt;name;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Default is request’s location name.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;otel_span_attr&lt;/code&gt;&lt;/strong&gt; &lt;code&gt;name “$var”;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If name starts with &lt;code&gt;http.(request|response).header.&lt;/code&gt; the type of added attribute will be &lt;code&gt;string[]&lt;/code&gt; to match semantic conventions (i.e. header value will be represented as a single element array). Otherwise, the attribute type will be &lt;code&gt;string&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Available in &lt;code&gt;http&lt;/code&gt; context&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;otel_exporter&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Defines how to export tracing data. There can only be one &lt;code&gt;otel_exporter&lt;/code&gt; directive in a given &lt;code&gt;http&lt;/code&gt; context.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;otel_exporter {&#xA;    endpoint “host:port“;&#xA;    interval 5s;         # max interval between two exports&#xA;    batch_size 512;      # max number of spans to be sent in one batch per worker&#xA;    batch_count 4;       # max number of pending batches per worker, over the limit spans are dropped&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;otel_service_name&lt;/code&gt;&lt;/strong&gt; &lt;code&gt;name;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Sets &lt;code&gt;service.name&lt;/code&gt; attribute of OTel resource. By default, it is set to &lt;code&gt;unknown_service:nginx&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Available in &lt;code&gt;otel_exporter&lt;/code&gt; context&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;endpoint&lt;/code&gt;&lt;/strong&gt; &lt;code&gt;&#34;host:post&#34;;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Defines exporter endpoint &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt;. Only one endpoint per &lt;code&gt;otel_exporter&lt;/code&gt; can be specified.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;interval&lt;/code&gt;&lt;/strong&gt; &lt;code&gt;5s;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Maximum interval between two exports. Default is &lt;code&gt;5s&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;batch_size&lt;/code&gt;&lt;/strong&gt; &lt;code&gt;512;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Maximum number of spans to be sent in one batch per worker. Detault is 512.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;batch_count&lt;/code&gt;&lt;/strong&gt; &lt;code&gt;4;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Maximum number of pending batches per worker, over the limit spans are dropped. Default is 4.&lt;/p&gt; &#xA;&lt;h3&gt;Variables&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;$otel_trace_id&lt;/code&gt; - trace id.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;$otel_span_id&lt;/code&gt; - current span id.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;$otel_parent_id&lt;/code&gt; - parent span id.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;$otel_parent_sampled&lt;/code&gt; - &lt;code&gt;sampled&lt;/code&gt; flag of parent span, &lt;code&gt;1&lt;/code&gt;/&lt;code&gt;0&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Default span &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-specification/raw/main/specification/trace/semantic_conventions/http.md&#34;&gt;attributes&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;http.method&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;http.target&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;http.route&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;http.scheme&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;http.flavor&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;http.user_agent&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;http.request_content_length&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;http.response_content_length&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;http.status_code&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;net.host.name&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;net.host.port&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;net.sock.peer.addr&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;net.sock.peer.port&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nginxinc/nginx-otel/raw/main/LICENSE&#34;&gt;Apache License, Version 2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;© &lt;a href=&#34;https://www.f5.com/&#34;&gt;F5, Inc.&lt;/a&gt; 2023&lt;/p&gt;</summary>
  </entry>
</feed>