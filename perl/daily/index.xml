<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-28T01:49:50Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>binary-com/perl-TimeSeries-AdaptiveFilter</title>
    <updated>2022-06-28T01:49:50Z</updated>
    <id>tag:github.com,2022-06-28:/binary-com/perl-TimeSeries-AdaptiveFilter</id>
    <link href="https://github.com/binary-com/perl-TimeSeries-AdaptiveFilter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Feed::Filter::Clustering feed filtering algorithm&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NAME&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/binary-com/perl-TimeSeries-AdaptiveFilter&#34;&gt;&lt;img src=&#34;https://travis-ci.org/binary-com/perl-TimeSeries-AdaptiveFilter.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/binary-com/perl-TimeSeries-AdaptiveFilter&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/binary-com/perl-TimeSeries-AdaptiveFilter/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;TimeSeries::AdaptiveFilter - Adaptive filter for data stream with possible outliers&lt;/p&gt; &#xA;&lt;h1&gt;VERSION&lt;/h1&gt; &#xA;&lt;p&gt;Version 0.04&lt;/p&gt; &#xA;&lt;h1&gt;STATUS&lt;/h1&gt; &#xA;&lt;h1&gt;SYNOPSYS&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;use TimeSeries::AdaptiveFilter qw/filter/;&#xA;&#xA;# creation with defaults&#xA;my $filter = filter();&#xA;&#xA;# create filter with tuned parameters&#xA;my $filter = filter({&#xA;  floor             =&amp;gt; 6&#xA;  cap               =&amp;gt; 0.2,&#xA;  lookback_capacity =&amp;gt; 20,&#xA;  lookback_period   =&amp;gt; 4,&#xA;  decay_speeds      =&amp;gt; [0.03, 0.01, 0.003],&#xA;  build_up_count    =&amp;gt; 5,&#xA;  reject_criterium  =&amp;gt; 4,&#xA;});&#xA;&#xA;# usage&#xA;my $now = time;&#xA;$filter-&amp;gt;($now, 100.002);        # returns true, i.e. all data is valid on learning period&#xA;$filter-&amp;gt;($now + 1, 100.001);    # returns true&#xA;...                              # it learns form sample of 60 seconds&#xA;$filter-&amp;gt;($now + 60, 100.005);   # returns true&#xA;$filter-&amp;gt;($now + 61, 99.9995);   # returns true, as value does not differs much&#xA;$filter-&amp;gt;($now + 62, 10_0000);   # returns false, outlier data&#xA;$filter-&amp;gt;($now + 63, 10.0001);   # returns false, outlier data&#xA;$filter-&amp;gt;($now + 64, 100.011);   # returns true, even if the sample is oulier, because&#xA;                                 # the filter rejected too much values, and has to&#xA;                                 # re-adapt to time seria again&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;DESCRIPTION&lt;/h1&gt; &#xA;&lt;p&gt;For the details of underlying mathematical model of the filter, configurable paramters and their usage, please, look at the shipped &lt;code&gt;doc&lt;/code&gt; folder.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>binary-com/perl-VolSurface-Utils</title>
    <updated>2022-06-28T01:49:50Z</updated>
    <id>tag:github.com,2022-06-28:/binary-com/perl-VolSurface-Utils</id>
    <link href="https://github.com/binary-com/perl-VolSurface-Utils" rel="alternate"></link>
    <summary type="html">&lt;p&gt;volatility surface-related utility functions&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VolSurface::Utils&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/binary-com/perl-VolSurface-Utils&#34;&gt;&lt;img src=&#34;https://travis-ci.org/binary-com/perl-VolSurface-Utils.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/binary-com/perl-VolSurface-Utils&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/binary-com/perl-VolSurface-Utils/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A class that handles several volatility related methods&lt;/p&gt; &#xA;&lt;h4&gt;SYNOPSIS&lt;/h4&gt; &#xA;&lt;p&gt;A class that handles several volatility related methods such as gets strikes from a certain delta point, gets delta from a certain vol point etc.&lt;/p&gt; &#xA;&lt;p&gt;use VolSurface::Utils;&lt;/p&gt; &#xA;&lt;p&gt;my $delta = get_delta_for_strike({ strike =&amp;gt; $strike, atm_vol =&amp;gt; $atm_vol, t =&amp;gt; $t, spot =&amp;gt; $spot, r_rate =&amp;gt;$r_rate, q_rate =&amp;gt; $q_rate, premium_adjusted =&amp;gt; $premium_adjusted });&lt;/p&gt; &#xA;&lt;h4&gt;INSTALLATION&lt;/h4&gt; &#xA;&lt;p&gt;To install this module, run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perl Makefile.PL&#xA;make&#xA;make test&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;SUPPORT AND DOCUMENTATION&lt;/h4&gt; &#xA;&lt;p&gt;After installing, you can find documentation for this module with the perldoc command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perldoc VolSurface::Utils&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also look for information at:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;RT, CPAN&#39;s request tracker (report bugs here)&#xA;    http://rt.cpan.org/NoAuth/Bugs.html?Dist=VolSurface-Utils&#xA;&#xA;AnnoCPAN, Annotated CPAN documentation&#xA;    http://annocpan.org/dist/VolSurface-Utils&#xA;&#xA;CPAN Ratings&#xA;    http://cpanratings.perl.org/d/VolSurface-Utils&#xA;&#xA;Search CPAN&#xA;    http://search.cpan.org/dist/VolSurface-Utils/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;i####COPYRIGHT&lt;/p&gt; &#xA;&lt;p&gt;Copyright (C) 2015 binary.com&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>binary-com/perl-Time-Duration-Concise-Localize</title>
    <updated>2022-06-28T01:49:50Z</updated>
    <id>tag:github.com,2022-06-28:/binary-com/perl-Time-Duration-Concise-Localize</id>
    <link href="https://github.com/binary-com/perl-Time-Duration-Concise-Localize" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Another approach to convert time duration concise string to time duration and localize it in your own language&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Time-Duration-Concise-Localize&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Time::Duration::Concise::Localize is an another time utility, which converts your concise time string to time duration and it also localize it in your language.&lt;/p&gt; &#xA;&lt;p&gt;This module uses Time::Duration::Concise as base module to convert concise string to duration&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/binary-com/perl-Time-Duration-Concise-Localize&#34;&gt;&lt;img src=&#34;https://travis-ci.org/binary-com/perl-Time-Duration-Concise-Localize.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/binary-com/perl-Time-Duration-Concise-Localize&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/binary-com/perl-Time-Duration-Concise-Localize/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/binary-com/perl-Time-Duration-Concise-Localize&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/binary-com/perl-Time-Duration-Concise-Localize.png&#34; alt=&#34;Gitter chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;NOTE&lt;/p&gt; &#xA;&lt;p&gt;Our concise time interval can also have decimal values&lt;/p&gt; &#xA;&lt;p&gt;example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1.5h&#xA;1d3.5h10s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;SYNOPSIS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;use Time::Duration::Concise::Localize;&#xA;&#xA;my $duration = Time::Duration::Concise::Localize-&amp;gt;new(&#xA;&#xA;    # concise time interval&#xA;    &#39;interval&#39; =&amp;gt; &#39;1.5h&#39;,&#xA;&#xA;    # Local in which string will be translated&#xA;    &#39;locale&#39; =&amp;gt; &#39;hi&#39;,&#xA;&#xA;);&#xA;&#xA;# gets you localized time duration string&#xA;$duration-&amp;gt;as_string;&#xA;&#xA;# In Arabic&#xA;$duration-&amp;gt;locale(&#39;ar&#39;);&#xA;$duration-&amp;gt;as_string();&#xA;&#xA;# In Chinese - China&#xA;$duration-&amp;gt;locale(&#39;zh_cn&#39;);&#xA;$duration-&amp;gt;as_string();&#xA;&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;CONCISE FORMAT&lt;/p&gt; &#xA;&lt;p&gt;The format is an integer followed immediatley by its duration identifier. White-space will be ignored.&lt;/p&gt; &#xA;&lt;p&gt;The following table explains the format.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;| identifier | duration |&#xA;|------------|----------|&#xA;| d          | day      |&#xA;| h          | hour     |&#xA;| m          | minute   |&#xA;| s          | second   |&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;INSTALLATION&lt;/p&gt; &#xA;&lt;p&gt;To install this module, run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perl Makefile.PL&#xA;make&#xA;make test&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;SUPPORT AND DOCUMENTATION&lt;/p&gt; &#xA;&lt;p&gt;After installing, you can find documentation for this module with the perldoc command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perldoc Time::Duration::Concise::Localize&#xA;perldoc Time::Duration::Concise&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also look for information at:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;RT, CPAN&#39;s request tracker (report bugs here)&#xA;    http://rt.cpan.org/NoAuth/Bugs.html?Dist=Time-Duration-Concise-Localize&#xA;&#xA;AnnoCPAN, Annotated CPAN documentation&#xA;    http://annocpan.org/dist/Time-Duration-Concise-Localize&#xA;    http://annocpan.org/dist/Time-Duration-Concise&#xA;&#xA;CPAN Ratings&#xA;    http://cpanratings.perl.org/d/Time-Duration-Concise-Localize&#xA;    http://cpanratings.perl.org/dist/Time-Duration-Concise&#xA;&#xA;Search CPAN&#xA;    http://search.cpan.org/dist/Time-Duration-Concise-Localize/&#xA;    http://search.cpan.org/dist/Time-Duration-Concise&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;LICENSE AND COPYRIGHT&lt;/p&gt; &#xA;&lt;p&gt;Copyright (C) 2014 Binary.com&lt;/p&gt; &#xA;&lt;p&gt;This program is free software; you can redistribute it and/or modify it under the terms of the the Artistic License (2.0). You may obtain a copy of the full license at:&lt;/p&gt; &#xA;&lt;p&gt;L&lt;a href=&#34;http://www.perlfoundation.org/artistic_license_2_0&#34;&gt;http://www.perlfoundation.org/artistic_license_2_0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Any use, modification, and distribution of the Standard or Modified Versions is governed by this Artistic License. By using, modifying or distributing the Package, you accept this license. Do not use, modify, or distribute the Package, if you do not accept this license.&lt;/p&gt; &#xA;&lt;p&gt;If your Modified Version has been derived from a Modified Version made by someone other than you, you are nevertheless required to ensure that your Modified Version complies with the requirements of this license.&lt;/p&gt; &#xA;&lt;p&gt;This license does not grant you the right to use any trademark, service mark, tradename, or logo of the Copyright Holder.&lt;/p&gt; &#xA;&lt;p&gt;This license includes the non-exclusive, worldwide, free-of-charge patent license to make, have made, use, offer to sell, sell, import and otherwise transfer the Package with respect to any patent claims licensable by the Copyright Holder that are necessarily infringed by the Package. If you institute patent litigation (including a cross-claim or counterclaim) against any party alleging that the Package constitutes direct or contributory patent infringement, then this Artistic License to you shall terminate on the date that such litigation is filed.&lt;/p&gt; &#xA;&lt;p&gt;Disclaimer of Warranty: THE PACKAGE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS &#34;AS IS&#39; AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES. THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT ARE DISCLAIMED TO THE EXTENT PERMITTED BY YOUR LOCAL LAW. UNLESS REQUIRED BY LAW, NO COPYRIGHT HOLDER OR CONTRIBUTOR WILL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING IN ANY WAY OUT OF THE USE OF THE PACKAGE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;</summary>
  </entry>
</feed>