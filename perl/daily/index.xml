<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-06T01:55:32Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>exiftool/exiftool</title>
    <updated>2022-06-06T01:55:32Z</updated>
    <id>tag:github.com,2022-06-06:/exiftool/exiftool</id>
    <link href="https://github.com/exiftool/exiftool" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ExifTool meta information reader/writer&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;ExifTool by Phil Harvey (philharvey66 at gmail.com)&lt;/h2&gt; &#xA;&lt;p&gt;ExifTool is a customizable set of Perl modules plus a full-featured command-line application for reading and writing meta information in a wide variety of files, including the maker note information of many digital cameras by various manufacturers such as Canon, Casio, DJI, FLIR, FujiFilm, GE, HP, JVC/Victor, Kodak, Leaf, Minolta/Konica-Minolta, Nikon, Nintendo, Olympus/Epson, Panasonic/Leica, Pentax/Asahi, Phase One, Reconyx, Ricoh, Samsung, Sanyo, Sigma/Foveon and Sony.&lt;/p&gt; &#xA;&lt;p&gt;Below is a list of file types and meta information formats currently supported by ExifTool (r = read, w = write, c = create):&lt;/p&gt; &#xA;&lt;p&gt;File Types ------------+-------------+-------------+-------------+------------ 360 r/w | DR4 r/w/c | JNG r/w | O r | RAW r/w 3FR r | DSS r | JP2 r/w | ODP r | RIFF r 3G2 r/w | DV r | JPEG r/w | ODS r | RSRC r 3GP r/w | DVB r/w | JSON r | ODT r | RTF r A r | DVR-MS r | JXL r | OFR r | RW2 r/w AA r | DYLIB r | K25 r | OGG r | RWL r/w AAE r | EIP r | KDC r | OGV r | RWZ r AAX r/w | EPS r/w | KEY r | ONP r | RM r ACR r | EPUB r | LA r | OPUS r | SEQ r AFM r | ERF r/w | LFP r | ORF r/w | SKETCH r AI r/w | EXE r | LIF r | ORI r/w | SO r AIFF r | EXIF r/w/c | LNK r | OTF r | SR2 r/w APE r | EXR r | LRV r/w | PAC r | SRF r ARQ r/w | EXV r/w/c | M2TS r | PAGES r | SRW r/w ARW r/w | F4A/V r/w | M4A/V r/w | PBM r/w | SVG r ASF r | FFF r/w | MACOS r | PCD r | SWF r AVI r | FITS r | MAX r | PCX r | THM r/w AVIF r/w | FLA r | MEF r/w | PDB r | TIFF r/w AZW r | FLAC r | MIE r/w/ | PDF r/w | TORRENT r BMP r | FLIF r/w | MIFF r c | PEF r/w | TTC r BPG r | FLV r | MKA r | PFA r | TTF r BTF r | FPF r | MKS r | PFB r | TXT r CHM r | FPX r | MKV r | PFM r | VCF r COS r | GIF r/w | MNG r/w | PGF r | VRD r/w/c CR2 r/w | GPR r/w | MOBI r | PGM r/w | VSD r CR3 r/w | GZ r | MODD r | PLIST r | WAV r CRM r/w | HDP r/w | MOI r | PICT r | WDP r/w CRW r/w | HDR r | MOS r/w | PMP r | WEBP r CS1 r/w | HEIC r/w | MOV r/w | PNG r/w | WEBM r CSV r | HEIF r/w | MP3 r | PPM r/w | WMA r CZI r | HTML r | MP4 r/w | PPT r | WMV r DCM r | ICC r/w/c | MPC r | PPTX r | WTV r DCP r/w | ICS r | MPG r | PS r/w | WV r DCR r | IDML r | MPO r/w | PSB r/w | X3F r/w DFONT r | IIQ r/w | MQV r/w | PSD r/w | XCF r DIVX r | IND r/w | MRC r | PSP r | XLS r DJVU r | INSP r/w | MRW r/w | QTIF r/w | XLSX r DLL r | INSV r | MXF r | R3D r | XMP r/w/c DNG r/w | INX r | NEF r/w | RA r | ZIP r DOC r | ISO r | NKSC r/w | RAF r/w | DOCX r | ITC r | NRW r/w | RAM r | DPX r | J2C r | NUMBERS r | RAR r |&lt;/p&gt; &#xA;&lt;p&gt;Meta Information ----------------------+----------------------+--------------------- EXIF r/w/c | CIFF r/w | Ricoh RMETA r GPS r/w/c | AFCP r/w | Picture Info r IPTC r/w/c | Kodak Meta r/w | Adobe APP14 r XMP r/w/c | FotoStation r/w | MPF r MakerNotes r/w/c | PhotoMechanic r/w | Stim r Photoshop IRB r/w/c | JPEG 2000 r | DPX r ICC Profile r/w/c | DICOM r | APE r MIE r/w/c | Flash r | Vorbis r JFIF r/w/c | FlashPix r | SPIFF r Ducky APP12 r/w/c | QuickTime r | DjVu r PDF r/w/c | Matroska r | M2TS r PNG r/w/c | MXF r | PE/COFF r Canon VRD r/w/c | PrintIM r | AVCHD r Nikon Capture r/w/c | FLAC r | ZIP r GeoTIFF r/w/c | ID3 r | (and more)&lt;/p&gt; &#xA;&lt;p&gt;See html/index.html for more details about ExifTool features.&lt;/p&gt; &#xA;&lt;p&gt;ExifTool can be downloaded from&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://exiftool.org/&#34;&gt;https://exiftool.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;RUNNING&lt;/p&gt; &#xA;&lt;p&gt;The exiftool script can be run right away without the need to install Image::ExifTool. For example, from within the exiftool directory you can extract the information from one of the included test files by typing:&lt;/p&gt; &#xA;&lt;p&gt;./exiftool t/images/ExifTool.jpg&lt;/p&gt; &#xA;&lt;p&gt;If you move the exiftool script to a different directory, you must also either move the contents of the lib directory or install the Image::ExifTool package so the script can find the necessary libraries.&lt;/p&gt; &#xA;&lt;p&gt;Note: If you are using the Windows cmd shell, you may need to rename &#39;exiftool&#39; to &#39;exiftool.pl&#39; to run it directly from the command line. Alternatively, you can run exiftool with the command &#39;perl exiftool&#39;.&lt;/p&gt; &#xA;&lt;p&gt;IF YOU ARE STILL CONFUSED&lt;/p&gt; &#xA;&lt;p&gt;The exiftool script is a command line application. You run it by typing commands in a terminal window. The first step is to determine the name of the directory where you downloaded the ExifTool distribution package. Assuming, for example, you downloaded it to a folder called &#34;Desktop&#34; in your home directory, then you would type the following commands in a terminal window to extract and run ExifTool:&lt;/p&gt; &#xA;&lt;p&gt;cd ~/Desktop gzip -dc Image-ExifTool-12.42.tar.gz | tar -xf - cd Image-ExifTool-12.42 ./exiftool t/images/ExifTool.jpg&lt;/p&gt; &#xA;&lt;p&gt;Note: These commands extract meta information from one of the test images. To use one of your images instead, enter the full path name of your file in place of &#34;t/images/ExifTool.jpg&#34;.&lt;/p&gt; &#xA;&lt;p&gt;INSTALLATION&lt;/p&gt; &#xA;&lt;p&gt;You can install the Image::ExifTool package to make it available for use by other Perl scripts by typing the following:&lt;/p&gt; &#xA;&lt;p&gt;perl Makefile.PL make make test make install&lt;/p&gt; &#xA;&lt;p&gt;Notes: i) You need root access for the last step above.&lt;/p&gt; &#xA;&lt;p&gt;ii) Some Perl installations (like the standard OSX installation) may not contain the necessary files to complete the first step above. But no worries: You can install ExifTool manually by moving &#39;exiftool&#39; and the &#39;lib&#39; directory to any directory in your current PATH (ie. /usr/bin).&lt;/p&gt; &#xA;&lt;p&gt;iii) In Windows, &#34;dmake&#34; or &#34;nmake&#34; may be used if &#34;make&#34; is not available.&lt;/p&gt; &#xA;&lt;p&gt;(Also see html/install.html for more help with installation.)&lt;/p&gt; &#xA;&lt;p&gt;DEPENDENCIES&lt;/p&gt; &#xA;&lt;p&gt;Requires Perl version 5.004 or later. No other special libraries are required, however the following modules are recommended for decoding compressed and/or encrypted information from the indicated file types, and for calculating digest values and providing other features listed below:&lt;/p&gt; &#xA;&lt;p&gt;Archive::Zip (ZIP, DOCX, PPTX, XLSX, ODP, ODS, ODT, EIP, iWork) Compress::Zlib (DNG, PNG, PDF, DCM, MIE and SWF files) Digest::MD5 (PDF files, IPTC information, and JPG Extended XMP) Digest::SHA (PDF with AES-256 encryption) IO::Compress::Bzip2 (RWZ files) Time::HiRes (for generating ProcessingTime tag) POSIX::strptime (for inverse date/time conversion) Time::Piece (alternative to POSIX::strptime) Unicode::LineBreak (for column alignment of alternate-language output) Win32::API (for proper handling of Windows file times) Win32::FindFile (for Windows Unicode directory support, app only) Win32API::File (for Windows Unicode file names and file times) IO::Compress::RawDeflate (for writing FLIF images) IO::Uncompress::RawInflate (for reading FLIF images)&lt;/p&gt; &#xA;&lt;p&gt;COPYRIGHT AND LICENSE&lt;/p&gt; &#xA;&lt;p&gt;Copyright 2003-2022, Phil Harvey&lt;/p&gt; &#xA;&lt;p&gt;This is free software; you can redistribute it and/or modify it under the same terms as Perl itself.&lt;/p&gt; &#xA;&lt;p&gt;DISTRIBUTION FILES&lt;/p&gt; &#xA;&lt;p&gt;Below is a list of the files/directories included in the full ExifTool distribution package:&lt;/p&gt; &#xA;&lt;p&gt;Changes - Revision history MANIFEST - Full list of distribution files META.json - Standard CPAN dependency file (JSON format) META.yml - Standard CPAN dependency file (YAML format) Makefile.PL - Makefile for installation README - This file arg_files/ - Argument files to convert metadata formats: exif2iptc.args - Arguments for converting EXIF to IPTC exif2xmp.args - Arguments for converting EXIF to XMP gps2xmp.args - Arguments for converting GPS to XMP iptc2exif.args - Arguments for converting IPTC to EXIF iptc2xmp.args - Arguments for converting IPTC to XMP iptcCore.args - Complete list of IPTC Core XMP tags pdf2xmp.args - Arguments for converting PDF to XMP xmp2exif.args - Arguments for converting XMP to EXIF xmp2gps.args - Arguments for converting XMP to GPS xmp2iptc.args - Arguments for converting XMP to IPTC xmp2pdf.args - Arguments for converting XMP to PDF config_files/ - Sample ExifTool configuration files: acdsee.config - Definitions for writing ACDSee XMP regions age.config - Calculate Age of person in photo bibble.config - Definitions for writing Bibble XMP tags convert_regions.config - Convert between MWG, MP and IPTC regions cuepointlist.config - Extract cue points and labels as a list depthmap.config - Extract Google DepthMap images example.config - General example showing config features fotoware.config - Definitions for writing Fotoware XMP tags gps2utm.config - Generate UTM coordinate tags from GPS info gpsdatetime.config - Make GPSDateTime from CreateDate+SampleTime nksc.config - Decode tags in Nikon ViewNX NKSC files photoshop_paths.config - For extracting or copying Photoshop paths picasa_faces.config - Convert from Picasa to MWG/MP face regions rotate_regions.config - Rotate MWG and MP region tags tiff_version.config - Determine the version of a TIFF file time_zone.config - Calculate time zone from EXIF tags exiftool - The exiftool application (Perl script) fmt_files/ - Output formatting example files: gpx.fmt - Format file for creating GPX track gpx_wpt.fmt - Format file for creating GPX waypoints kml.fmt - Format file for creating KML placemarks kml_track.fmt - Format file for creating KML track html/ - HTML documentation html/TagNames/ - HTML tag name documentation lib/ - ExifTool Perl library modules perl-Image-ExifTool.spec - Red Hat Packaging Manager specification file t/ - Verification test code t/images/ - Verification test images&lt;/p&gt; &#xA;&lt;p&gt;ADDITIONAL INFORMATION&lt;/p&gt; &#xA;&lt;p&gt;Read the following files included in the full distribution for more information:&lt;/p&gt; &#xA;&lt;p&gt;html/index.html - Main ExifTool documentation html/install.html - Installation instructions html/history.html - Revision history html/ExifTool.html - API documentation html/TagNames/index.html - Tag name documentation html/geotag.html - Geotag feature html/faq.html - Frequently asked questions html/filename.html - Renaming/moving files html/metafiles.html - Working with metadata sidecar files html/struct.html - Working with structured XMP information lib/Image/ExifTool/README - ExifTool library modules documentation&lt;/p&gt; &#xA;&lt;p&gt;and if you have installed Image::ExifTool, you can also consult perldoc or the man pages:&lt;/p&gt; &#xA;&lt;p&gt;perldoc exiftool perldoc Image::ExifTool perldoc Image::ExifTool::TagNames&lt;/p&gt; &#xA;&lt;p&gt;man exiftool man Image::ExifTool man Image::ExifTool::TagNames&lt;/p&gt; &#xA;&lt;p&gt;Note: If the man pages don&#39;t work, it is probably because your man path is not set to include the installed documentation. See &#34;man man&#34; for information about how to set the man path.&lt;/p&gt; &#xA;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>CiscoCXSecurity/enum4linux</title>
    <updated>2022-06-06T01:55:32Z</updated>
    <id>tag:github.com,2022-06-06:/CiscoCXSecurity/enum4linux</id>
    <link href="https://github.com/CiscoCXSecurity/enum4linux" rel="alternate"></link>
    <summary type="html">&lt;p&gt;enum4Linux is a Linux alternative to enum.exe for enumerating data from Windows and Samba hosts&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;enum4linux&lt;/h1&gt; &#xA;&lt;p&gt;A Linux alternative to enum.exe for enumerating data from Windows and Samba hosts.&lt;/p&gt; &#xA;&lt;p&gt;Enum4linux is a tool for enumerating information from Windows and Samba systems. It attempts to offer similar functionality to enum.exe formerly available from &lt;a href=&#34;http://www.bindview.com&#34;&gt;www.bindview.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is written in Perl and is basically a wrapper around the Samba tools smbclient, rpclient, net and nmblookup.&lt;/p&gt; &#xA;&lt;p&gt;The tool usage can be found below followed by examples, previous versions of the tool can be found at the bottom of the page.&lt;/p&gt; &#xA;&lt;p&gt;Also see: &lt;a href=&#34;https://labs.portcullis.co.uk/tools/enum4linux/&#34;&gt;https://labs.portcullis.co.uk/tools/enum4linux/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ddclient/ddclient</title>
    <updated>2022-06-06T01:55:32Z</updated>
    <id>tag:github.com,2022-06-06:/ddclient/ddclient</id>
    <link href="https://github.com/ddclient/ddclient" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is the new home for ddclient. Ddclient is a Perl client used to update dynamic DNS entries for accounts on &#39;Dynamic DNS Network Services&#39; free DNS service. It currently supports a lot of different routers and a few different services.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DDCLIENT v3.10.0&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;ddclient&lt;/code&gt; is a Perl client used to update dynamic DNS entries for accounts on many dynamic DNS services.&lt;/p&gt; &#xA;&lt;h2&gt;Supported services&lt;/h2&gt; &#xA;&lt;p&gt;Dynamic DNS services currently supported include:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;DynDNS.com  - See http://www.dyndns.com for details on obtaining a free account.&#xA;Zoneedit    - See http://www.zoneedit.com for details.&#xA;EasyDNS     - See http://www.easydns.com for details.&#xA;NameCheap   - See http://www.namecheap.com for details&#xA;DslReports  - See http://www.dslreports.com for details&#xA;Sitelutions - See http://www.sitelutions.com for details&#xA;Loopia      - See http://www.loopia.se for details&#xA;Noip        - See http://www.noip.com/ for details&#xA;Freedns     - See http://freedns.afraid.org/ for details&#xA;ChangeIP    - See http://www.changeip.com/ for details&#xA;nsupdate    - See nsupdate(1) and ddns-confgen(8) for details&#xA;CloudFlare  - See https://www.cloudflare.com/ for details&#xA;GoDaddy     - See https://www.godaddy.com/ for details&#xA;Google      - See http://www.google.com/domains for details&#xA;Duckdns     - See https://duckdns.org/ for details&#xA;Freemyip    - See https://freemyip.com for details&#xA;woima.fi    - See https://woima.fi/ for details&#xA;Yandex      - See https://domain.yandex.com/ for details&#xA;DNS Made Easy - See https://dnsmadeeasy.com/ for details&#xA;DonDominio  - See https://www.dondominio.com for details&#xA;NearlyFreeSpeech.net - See https://www.nearlyfreespeech.net/services/dns for details&#xA;OVH         - See https://www.ovh.com for details&#xA;ClouDNS     - See https://www.cloudns.net&#xA;dinahosting - See https://dinahosting.com&#xA;Gandi       - See https://gandi.net&#xA;dnsexit     - See https://dnsexit.com/ for details&#xA;1984.is     - See https://www.1984.is/product/freedns/ for details&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;ddclient&lt;/code&gt; now supports many cable and DSL broadband routers.&lt;/p&gt; &#xA;&lt;p&gt;Comments, suggestions and requests: use the issues on &lt;a href=&#34;https://github.com/ddclient/ddclient/issues/new&#34;&gt;https://github.com/ddclient/ddclient/issues/new&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The code was originally written by Paul Burry and is now hosted and maintained through github.com. Please check out &lt;a href=&#34;http://ddclient.net&#34;&gt;http://ddclient.net&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;REQUIREMENTS&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An account from a supported dynamic DNS service provider&lt;/li&gt; &#xA; &lt;li&gt;Perl v5.10.1 or later &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;IO::Socket::SSL&lt;/code&gt; perl library for ssl-support&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;JSON::PP&lt;/code&gt; perl library for JSON support&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;IO::Socket::INET6&lt;/code&gt; perl library for ipv6-support&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Linux, macOS, or any other Unix-ish system&lt;/li&gt; &#xA; &lt;li&gt;An implementation of &lt;code&gt;make&lt;/code&gt; (such as &lt;a href=&#34;https://www.gnu.org/software/make/&#34;&gt;GNU Make&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;If you are installing from a clone of the Git repository, you will also need &lt;a href=&#34;https://www.gnu.org/software/autoconf/&#34;&gt;GNU Autoconf&lt;/a&gt; and &lt;a href=&#34;https://www.gnu.org/software/automake/&#34;&gt;GNU Automake&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;DOWNLOAD&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ddclient/ddclient/releases&#34;&gt;https://github.com/ddclient/ddclient/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;INSTALLATION&lt;/h2&gt; &#xA;&lt;h3&gt;Distribution Package&lt;/h3&gt; &#xA;&lt;a href=&#34;https://repology.org/project/ddclient/versions&#34;&gt; &lt;img src=&#34;https://repology.org/badge/vertical-allrepos/ddclient.svg?sanitize=true&#34; alt=&#34;Packaging status&#34; align=&#34;right&#34;&gt; &lt;/a&gt; The easiest way to install ddclient is to install a package offered by your operating system. See the image to the right for a list of distributions with a ddclient package. &#xA;&lt;h3&gt;Manual Installation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Extract the distribution tarball (&lt;code&gt;.tar.gz&lt;/code&gt; file) and &lt;code&gt;cd&lt;/code&gt; into the directory:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;tar xvfa ddclient-3.10.0.tar.gz&#xA;cd ddclient-3.10.0&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(If you are installing from a clone of the Git repository, you must run &lt;code&gt;./autogen&lt;/code&gt; before continuing to the next step.)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the following commands to build and install:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./configure \&#xA;    --prefix=/usr \&#xA;    --sysconfdir=/etc/ddclient \&#xA;    --localstatedir=/var&#xA;make&#xA;make VERBOSE=1 check&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Edit &lt;code&gt;/etc/ddclient/ddclient.conf&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;systemd&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp sample-etc_systemd.service /etc/systemd/system/ddclient.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;enable automatic startup when booting&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;systemctl enable ddclient.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;start the first time by hand&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;systemctl start ddclient.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Redhat style rc files and daemon-mode&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp sample-etc_rc.d_init.d_ddclient /etc/rc.d/init.d/ddclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;enable automatic startup when booting. also check your distribution&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/sbin/chkconfig --add ddclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;start the first time by hand&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/etc/rc.d/init.d/ddclient start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Alpine style rc files and daemon-mode&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp sample-etc_rc.d_init.d_ddclient.alpine /etc/init.d/ddclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;enable automatic startup when booting&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rc-update add ddclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;make sure you have perl installed&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apk add perl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;start the first time by hand&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rc-service ddclient start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Ubuntu style rc files and daemon-mode&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp sample-etc_rc.d_init.d_ddclient.ubuntu /etc/init.d/ddclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;enable automatic startup when booting&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;update-rc.d ddclient defaults&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;make sure you have perl and the required modules installed&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt-get install perl libdata-validate-ip-perl libio-socket-ssl-perl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;if you plan to use cloudflare or feedns you need the perl json module&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt-get install libjson-pp-perl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;for IPv6 you also need to instal the perl io-socket-inet6 module&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt install libio-socket-inet6-perl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;start the first time by hand&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;service ddclient start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;FreeBSD style rc files and daemon mode&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir -p /usr/local/etc/rc.d&#xA;cp sample-etc_rc.d_ddclient.freebsd /usr/local/etc/rc.d/ddclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;enable automatic startup when booting&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sysrc ddclient_enable=YES&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;make sure you have perl and the required modules installed&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pkg install perl5 p5-Data-Validate-IP p5-IO-Socket-SSL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;if you plan to use cloudflare or feedns you need the perl json module&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pkg install p5-JSON-PP&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;start the service manually for the first time&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;service ddclient start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are not using daemon-mode, configure cron and dhcp or ppp as described below.&lt;/p&gt; &#xA;&lt;h2&gt;TROUBLESHOOTING&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;enable debugging and verbose messages: &lt;code&gt;$ ddclient -daemon=0 -debug -verbose -noquiet&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Do you need to specify a proxy? If so, just add a &lt;code&gt;proxy=your.isp.proxy&lt;/code&gt; to the ddclient.conf file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Define the IP address of your router with &lt;code&gt;fw=xxx.xxx.xxx.xxx&lt;/code&gt; in &lt;code&gt;/etc/ddclient/ddclient.conf&lt;/code&gt; and then try &lt;code&gt;$ ddclient -daemon=0 -query&lt;/code&gt; to see if the router status web page can be understood.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Need support for another router/firewall? Define the router status page yourself with: &lt;code&gt;fw=url-to-your-router&lt;/code&gt;&#39;s-status-page &lt;code&gt;fw-skip=any-string-preceding-your-IP-address&lt;/code&gt;&lt;/p&gt; &lt;p&gt;ddclient does something like this to provide builtin support for common routers. For example, the Linksys routers could have been added with:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;fw=192.168.1.1/Status.htm&#xA;fw-skip=WAN.*?IP Address&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OR Send me the output from: &lt;code&gt;$ ddclient -geturl {fw-ip-status-url} [-login login [-password password]]&lt;/code&gt; and I&#39;ll add it to the next release!&lt;/p&gt; &#xA;&lt;p&gt;ie. for my fw/router I used: &lt;code&gt;$ ddclient -geturl 192.168.1.254/status.htm&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Some broadband routers require the use of a password when ddclient accesses its status page to determine the router&#39;s WAN IP address. If this is the case for your router, add&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;fw-login=your-router-login&#xA;fw-password=your-router-password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to the beginning of your ddclient.conf file. Note that some routers use either &#39;root&#39; or &#39;admin&#39; as their login while some others accept anything.&lt;/p&gt; &#xA;&lt;h2&gt;USING DDCLIENT WITH &lt;code&gt;ppp&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you are using a ppp connection, you can easily update your DynDNS entry with each connection, with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;## configure pppd to update DynDNS with each connection&#xA;cp sample-etc_ppp_ip-up.local /etc/ppp/ip-up.local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you may just configure ddclient to operate as a daemon and monitor your ppp interface.&lt;/p&gt; &#xA;&lt;h2&gt;USING DDCLIENT WITH &lt;code&gt;cron&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you have not configured ddclient to use daemon-mode, you&#39;ll need to configure cron to force an update once a month so that the dns entry will not become stale.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;## configure cron to force an update twice a month&#xA;cp sample-etc_cron.d_ddclient /etc/cron.d/ddclient&#xA;vi /etc/cron.d/ddclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;USING DDCLIENT WITH &lt;code&gt;dhcpcd-1.3.17&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you are using dhcpcd-1.3.17 or thereabouts, you can easily update your DynDNS entry automatically every time your lease is obtained or renewed by creating an executable file named: &lt;code&gt;/etc/dhcpc/dhcpcd-{your-interface}.exe&lt;/code&gt; ie.: &lt;code&gt;cp sample-etc_dhcpc_dhcpcd-eth0.exe /etc/dhcpc/dhcpcd-{your-interface}.exe&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;In my case, it is named dhcpcd-eth0.exe and contains the lines:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;#!/bin/sh&#xA;PATH=/usr/bin:/root/bin:${PATH}&#xA;logger -t dhcpcd IP address changed to $1&#xA;ddclient -proxy fasthttp.sympatico.ca -wildcard -ip $1 | logger -t ddclient&#xA;exit 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Other DHCP clients may have another method of calling out to programs for updating DNS entries.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you may just configure ddclient to operate as a daemon and monitor your ethernet interface.&lt;/p&gt; &#xA;&lt;h2&gt;USING DDCLIENT WITH &lt;code&gt;dhclient&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you are using the ISC DHCP client (dhclient), you can update your DynDNS entry automatically every time your lease is obtained or renewed by creating an executable file named: &lt;code&gt;/etc/dhclient-exit-hooks&lt;/code&gt; ie.: &lt;code&gt;cp sample-etc_dhclient-exit-hooks /etc/dhclient-exit-hooks&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Edit &lt;code&gt;/etc/dhclient-exit-hooks&lt;/code&gt; to change any options required.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you may just configure ddclient to operate as a daemon and monitor your ethernet interface.&lt;/p&gt;</summary>
  </entry>
</feed>