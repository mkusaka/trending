<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-24T01:37:11Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>qworty/linux-tools</title>
    <updated>2022-09-24T01:37:11Z</updated>
    <id>tag:github.com,2022-09-24:/qworty/linux-tools</id>
    <link href="https://github.com/qworty/linux-tools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;some of my linux tools&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;linux-tools&lt;/h1&gt; &#xA;&lt;p&gt;some of my linux tools. they are mostly perl scripts and you needn&#39;t judge me for coding style, i am already ashamed.&lt;/p&gt; &#xA;&lt;p&gt;you&#39;ll find that some of them have arbitrary values in them that are useful to me, so that&#39;s not very nice for a github repo. but i would advice you check each one manually before actually using them ;)&lt;/p&gt; &#xA;&lt;h2&gt;clear-desktop&lt;/h2&gt; &#xA;&lt;p&gt;i cron this each night, it moves all files from ~/desktop that are older than 28 days to /tmp/, so that my desktop stays clean. it checks both ctime and mtime so that files that have a mod time in the past (they come from a zip for ex.) won&#39;t get deleted right away.&lt;/p&gt; &#xA;&lt;h2&gt;pacman-meld&lt;/h2&gt; &#xA;&lt;p&gt;i run this after i upgrade my arch workstation or my centos server. it works for the local machine by default, but if you root-mount a remote server you can run &lt;code&gt;pacman-meld /mnt/server-1&lt;/code&gt; and it will work.&lt;/p&gt; &#xA;&lt;p&gt;what it does is scan the filesystem for *.(pac|rpm)(save|new) files, and start the excellent &#39;meld&#39; tool on the original file. it&#39;s an easy way to merge configuration file changes after a full system update.&lt;/p&gt; &#xA;&lt;h2&gt;sysresccd-makeusb&lt;/h2&gt; &#xA;&lt;p&gt;you can use this if you have a SystemRescueCD USB stick that you have personalized items on, and you want to upgrade it from a new ISO. in this script itsself is an array with paths to your personalized files/dirs. you run this script and give it the path to the new ISO, it will copy your personalized files to a safe place, start the USB ISO installer, then copies your files back to the newly written stick.&lt;/p&gt; &#xA;&lt;h2&gt;playtmpflash&lt;/h2&gt; &#xA;&lt;p&gt;i bind this to Win+F11, and when i watch a flash video on a webpage, i pause it and press the key combo. it then fetches the flash file from the flashplugin process, copies it back to its /tmp/ location (flashplugin unlinks it at start) and starts mplayer on it. that way you can watch any flash video in fullscreen and you don&#39;t need to watch it in your browser.&lt;/p&gt;</summary>
  </entry>
</feed>