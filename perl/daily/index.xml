<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-21T01:52:37Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>metabrainz/musicbrainz-server</title>
    <updated>2022-06-21T01:52:37Z</updated>
    <id>tag:github.com,2022-06-21:/metabrainz/musicbrainz-server</id>
    <link href="https://github.com/metabrainz/musicbrainz-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Server for the MusicBrainz project (website, API, database tools)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MusicBrainz Server&lt;/h1&gt; &#xA;&lt;p&gt;MusicBrainz Server is the web frontend to the MusicBrainz Database and is accessible at &lt;a href=&#34;http://musicbrainz.org&#34;&gt;http://musicbrainz.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;MusicBrainz is a user-maintained open community that collects music metadata and makes it available to the public in the form of a relational database. For more information, &lt;a href=&#34;https://musicbrainz.org/doc/About&#34;&gt;visit our website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To get help, please join #metabrainz on irc.libera.chat&lt;/p&gt; &#xA;&lt;p&gt;Breaking changes to the database schema or our API / web service will be announced on &lt;a href=&#34;https://blog.metabrainz.org/category/musicbrainz+breaking-changes/&#34;&gt;our blog&lt;/a&gt;, so consider following that.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Full installation instructions are available in &lt;a href=&#34;https://raw.githubusercontent.com/metabrainz/musicbrainz-server/master/INSTALL.md&#34;&gt;INSTALL.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;General Prerequisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ubuntu/Debian&lt;/li&gt; &#xA; &lt;li&gt;Node (at least version 16)&lt;/li&gt; &#xA; &lt;li&gt;Perl (at least version 5.30)&lt;/li&gt; &#xA; &lt;li&gt;PostgreSQL (at least version 12)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reporting bugs&lt;/h2&gt; &#xA;&lt;p&gt;Please report issues on our &lt;a href=&#34;http://tickets.metabrainz.org/&#34;&gt;bug tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please submit all patches to &lt;a href=&#34;https://github.com/metabrainz/musicbrainz-server/pulls&#34;&gt;GitHub&lt;/a&gt; for review. See the &lt;a href=&#34;https://raw.githubusercontent.com/metabrainz/musicbrainz-server/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MusicBrainz Server is released under the GPLv2 or later. See the &lt;a href=&#34;https://raw.githubusercontent.com/metabrainz/musicbrainz-server/master/COPYING.md&#34;&gt;license notice&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Further reading&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://musicbrainz.org/doc/MusicBrainz_Server&#34;&gt;MusicBrainz Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://musicbrainz.org/doc/MusicBrainz_Database&#34;&gt;MusicBrainz Database&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://musicbrainz.org/doc/MusicBrainz_Database/Schema&#34;&gt;Database Schema&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>jhoblitt/puggen</title>
    <updated>2022-06-21T01:52:37Z</updated>
    <id>tag:github.com,2022-06-21:/jhoblitt/puggen</id>
    <link href="https://github.com/jhoblitt/puggen" rel="alternate"></link>
    <summary type="html">&lt;p&gt;generate puppet user/group resources from system database&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NAME&lt;/h1&gt; &#xA;&lt;p&gt;puggen - generate puppet user/group resources from system database&lt;/p&gt; &#xA;&lt;h1&gt;SYNOPSIS&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;puggen --users &amp;lt;file name&amp;gt; --groups &amp;lt;file name&amp;gt; [--class_name my::users]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;DESCRIPTION&lt;/h1&gt; &#xA;&lt;p&gt;This utility generates the text of a puppet class containing virtual user, group, and ssh_authorized_key resources that are unrealized. It is intended to be used as a base class for other classes which then realize these resources. A defined type, user_setup, is provided to help realize all of the resources associated with a user. All users have a user_setup type declared in the generated base class with ensure =&amp;gt; absent set such that if a resources are realized for a user in a subclass and then user_setup declaration is subsequently removed, so are all of the resources associated with that user.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;class my::users::dev inherits my::users {&#xA;  User_setup[jrandom]{ ensure =&amp;gt; present }&#xA;&#xA;  # my::users does not have this user included in the wheel group&#xA;  User[&#39;jrandom&#39;]{&#xA;      groups =&amp;gt; [&#39;wheel&#39;],&#xA;  }&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;EXAMPLE&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo ./puggen --users ../users.txt --groups ../groups.txt &amp;gt; users.pp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;GOTCHAS&lt;/h1&gt; &#xA;&lt;p&gt;This program *must* be run as root in order to gather the hashed password entries for the user resources. This is very likely also the case for gathering ssh public keys out of user directories.&lt;/p&gt; &#xA;&lt;h1&gt;CREDITS&lt;/h1&gt; &#xA;&lt;p&gt;Just me, myself, and I.&lt;/p&gt; &#xA;&lt;h1&gt;SUPPORT&lt;/h1&gt; &#xA;&lt;p&gt;Please contact the author directly via e-mail.&lt;/p&gt; &#xA;&lt;h1&gt;AUTHOR&lt;/h1&gt; &#xA;&lt;p&gt;Joshua Hoblitt &lt;a href=&#34;mailto:jhoblitt@cpan.org&#34;&gt;jhoblitt@cpan.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;COPYRIGHT&lt;/h1&gt; &#xA;&lt;p&gt;Copyright (C) 2012 Joshua Hoblitt&lt;/p&gt; &#xA;&lt;p&gt;This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.&lt;/p&gt; &#xA;&lt;p&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.&lt;/p&gt; &#xA;&lt;p&gt;You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.&lt;/p&gt; &#xA;&lt;p&gt;The full text of the license can be found in the LICENSE file included with this module or in the &lt;a href=&#34;http://search.cpan.org/perldoc?perlgpl&#34;&gt;perlgpl&lt;/a&gt; Pod included with Perl 5.8.1 or later.&lt;/p&gt; &#xA;&lt;h1&gt;SEE ALSO&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://search.cpan.org/perldoc?User::pwent&#34;&gt;User::pwent&lt;/a&gt;, &lt;a href=&#34;http://search.cpan.org/perldoc?User::grent&#34;&gt;User::grent&lt;/a&gt;, &lt;a href=&#34;http://search.cpan.org/perldoc?Template&#34;&gt;Template&lt;/a&gt;, &lt;a href=&#34;http://search.cpan.org/perldoc?Net::SSH::AuthorizedKey&#34;&gt;Net::SSH::AuthorizedKey&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>binary-com/perl-Email-Stuffer-TestLinks</title>
    <updated>2022-06-21T01:52:37Z</updated>
    <id>tag:github.com,2022-06-21:/binary-com/perl-Email-Stuffer-TestLinks</id>
    <link href="https://github.com/binary-com/perl-Email-Stuffer-TestLinks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NAME&lt;/h1&gt; &#xA;&lt;p&gt;Email::Stuffer::TestLinks - validates links in HTML emails sent by Email::Stuffer&amp;gt;send_or_die()&lt;/p&gt; &#xA;&lt;h1&gt;VERSION&lt;/h1&gt; &#xA;&lt;p&gt;version 0.010&lt;/p&gt; &#xA;&lt;h1&gt;SYNOPSIS&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;use Email::Stuffer::TestLinks;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;DESCRIPTION&lt;/h1&gt; &#xA;&lt;p&gt;When this module is included in a test, it parses HTML links (&amp;lt;a href=&#34;xyz&#34;...) in every email sent through Email::Stuffer-&amp;gt;send_or_die(). Each URI must get a successful response code (200 range) and the returned pagetitle must not contain &#39;error&#39; or &#39;not found&#39;.&lt;/p&gt;</summary>
  </entry>
</feed>