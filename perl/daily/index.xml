<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-31T01:45:01Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cloudflare/lua-resty-cookie</title>
    <updated>2023-01-31T01:45:01Z</updated>
    <id>tag:github.com,2023-01-31:/cloudflare/lua-resty-cookie</id>
    <link href="https://github.com/cloudflare/lua-resty-cookie" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lua library for HTTP cookie manipulations for OpenResty/ngx_lua&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Name&lt;/h1&gt; &#xA;&lt;p&gt;lua-resty-cookie - This library parses HTTP Cookie header for Nginx and returns each field in the cookie.&lt;/p&gt; &#xA;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#name&#34;&gt;Name&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#status&#34;&gt;Status&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#synopsis&#34;&gt;Synopsis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#methods&#34;&gt;Methods&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#new&#34;&gt;new&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#get&#34;&gt;get&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#get_all&#34;&gt;get_all&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#get_cookie_size&#34;&gt;get_cookie_size&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#set&#34;&gt;set&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#get_cookie_string&#34;&gt;get_cookie_string&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#authors&#34;&gt;Authors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#copyright-and-license&#34;&gt;Copyright and License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Status&lt;/h1&gt; &#xA;&lt;p&gt;This library is production ready.&lt;/p&gt; &#xA;&lt;h1&gt;Synopsis&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;    lua_package_path &#34;/path/to/lua-resty-cookie/lib/?.lua;;&#34;;&#xA;&#xA;    server {&#xA;        location /test {&#xA;            content_by_lua &#39;&#xA;                local ck = require &#34;resty.cookie&#34;&#xA;                local cookie, err = ck:new()&#xA;                if not cookie then&#xA;                    ngx.log(ngx.ERR, err)&#xA;                    return&#xA;                end&#xA;&#xA;                -- get single cookie&#xA;                local field, err = cookie:get(&#34;lang&#34;)&#xA;                if not field then&#xA;                    ngx.log(ngx.ERR, err)&#xA;                    return&#xA;                end&#xA;                ngx.say(&#34;lang&#34;, &#34; =&amp;gt; &#34;, field)&#xA;&#xA;                -- get all cookies&#xA;                local fields, err = cookie:get_all()&#xA;                if not fields then&#xA;                    ngx.log(ngx.ERR, err)&#xA;                    return&#xA;                end&#xA;&#xA;                for k, v in pairs(fields) do&#xA;                    ngx.say(k, &#34; =&amp;gt; &#34;, v)&#xA;                end&#xA;&#xA;                -- set one cookie&#xA;                local ok, err = cookie:set({&#xA;                    key = &#34;Name&#34;, value = &#34;Bob&#34;, path = &#34;/&#34;,&#xA;                    domain = &#34;example.com&#34;, secure = true, httponly = true,&#xA;                    expires = &#34;Wed, 09 Jun 2021 10:18:14 GMT&#34;, max_age = 50,&#xA;                    samesite = &#34;Strict&#34;, extension = &#34;a4334aebaec&#34;&#xA;                })&#xA;                if not ok then&#xA;                    ngx.log(ngx.ERR, err)&#xA;                    return&#xA;                end&#xA;&#xA;                -- set another cookie, both cookies will appear in HTTP response&#xA;                local ok, err = cookie:set({&#xA;                    key = &#34;Age&#34;, value = &#34;20&#34;,&#xA;                })&#xA;                if not ok then&#xA;                    ngx.log(ngx.ERR, err)&#xA;                    return&#xA;                end&#xA;            &#39;;&#xA;        }&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Methods&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#table-of-contents&#34;&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;new&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;syntax: cookie_obj = cookie()&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Create a new cookie object for current request. You can get parsed cookie from client or set cookie to client later using this object.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#table-of-contents&#34;&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;get&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;syntax: cookie_val, err = cookie_obj:get(cookie_name)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Get a single client cookie value. On error, returns &lt;code&gt;nil&lt;/code&gt; and an error message.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#table-of-contents&#34;&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;get_all&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;syntax: fields, err = cookie_obj:get_all()&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Get all client cookie key/value pairs in a lua table. On error, returns &lt;code&gt;nil&lt;/code&gt; and an error message.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#table-of-contents&#34;&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;get_cookie_size&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;syntax: size = cookie_obj:get_cookie_size()&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Get the cookie size, i.e the string length of the cookie header value.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#table-of-contents&#34;&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;set&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;syntax: ok, err = cookie_obj:set({&#xA;    key = &#34;Name&#34;,&#xA;    value = &#34;Bob&#34;,&#xA;    path = &#34;/&#34;,&#xA;    domain = &#34;example.com&#34;,&#xA;    secure = true, httponly = true,&#xA;    expires = &#34;Wed, 09 Jun 2021 10:18:14 GMT&#34;,&#xA;    max_age = 50,&#xA;    samesite = &#34;Strict&#34;,&#xA;    extension = &#34;a4334aebaec&#34;&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set a cookie to client. This will add a new &#39;Set-Cookie&#39; response header. &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; are required, all other fields are optional. If the same cookie (whole cookie string, e.g. &#34;Name=Bob; Expires=Wed, 09 Jun 2021 10:18:14 GMT; Max-Age=50; Domain=example.com; Path=/; Secure; HttpOnly;&#34;) has already been setted, new cookie will be ignored.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#table-of-contents&#34;&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;get_cookie_string&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;syntax: cookie_string, err = cookie.get_cookie_string({ --[[ see &#34;set&#34; method ]] })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Returns a cookie string representing the table passed. See the &lt;code&gt;set&lt;/code&gt; method for details, but unlike &lt;code&gt;set&lt;/code&gt;, this function doesn&#39;t change the current request response, but just return the generated string. On error, returns &lt;code&gt;nil&lt;/code&gt; and an error message.&lt;/p&gt; &#xA;&lt;p&gt;This is a static function, not a method of the &lt;code&gt;cookie&lt;/code&gt; object.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#table-of-contents&#34;&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;You need to compile &lt;a href=&#34;https://github.com/chaoslawful/lua-nginx-module/tags&#34;&gt;ngx_lua&lt;/a&gt; with your Nginx.&lt;/p&gt; &#xA;&lt;p&gt;You need to configure the &lt;a href=&#34;https://github.com/chaoslawful/lua-nginx-module#lua_package_path&#34;&gt;lua_package_path&lt;/a&gt; directive to add the path of your &lt;code&gt;lua-resty-cookie&lt;/code&gt; source tree to ngx_lua&#39;s Lua module search path, as in&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# nginx.conf&#xA;http {&#xA;    lua_package_path &#34;/path/to/lua-resty-cookie/lib/?.lua;;&#34;;&#xA;    ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and then load the library in Lua:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;local ck = require &#34;resty.cookie&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#table-of-contents&#34;&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Authors&lt;/h1&gt; &#xA;&lt;p&gt;Jiale Zhi &lt;a href=&#34;mailto:vipcalio@gmail.com&#34;&gt;vipcalio@gmail.com&lt;/a&gt;, CloudFlare Inc.&lt;/p&gt; &#xA;&lt;p&gt;Yichun Zhang (agentzh) &lt;a href=&#34;mailto:agentzh@gmail.com&#34;&gt;agentzh@gmail.com&lt;/a&gt;, CloudFlare Inc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#table-of-contents&#34;&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Copyright and License&lt;/h1&gt; &#xA;&lt;p&gt;This module is licensed under the BSD license.&lt;/p&gt; &#xA;&lt;p&gt;Copyright (C) 2013, by Jiale Zhi &lt;a href=&#34;mailto:vipcalio@gmail.com&#34;&gt;vipcalio@gmail.com&lt;/a&gt;, CloudFlare Inc.&lt;/p&gt; &#xA;&lt;p&gt;Copyright (C) 2013, by Yichun Zhang &lt;a href=&#34;mailto:agentzh@gmail.com&#34;&gt;agentzh@gmail.com&lt;/a&gt;, CloudFlare Inc.&lt;/p&gt; &#xA;&lt;p&gt;All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/lua-resty-cookie/master/#table-of-contents&#34;&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>