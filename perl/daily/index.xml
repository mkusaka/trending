<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-28T02:34:46Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>binary-com/perl-Ethereum-RPC-Client</title>
    <updated>2022-07-28T02:34:46Z</updated>
    <id>tag:github.com,2022-07-28:/binary-com/perl-Ethereum-RPC-Client</id>
    <link href="https://github.com/binary-com/perl-Ethereum-RPC-Client" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/binary-com/perl-Ethereum-RPC-Client&#34;&gt;&lt;img src=&#34;https://travis-ci.org/binary-com/perl-Ethereum-RPC-Client.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/binary-com/perl-Ethereum-RPC-Client&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/binary-com/perl-Ethereum-RPC-Client/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;NAME&lt;/h1&gt; &#xA;&lt;p&gt;perl-Ethereum-RPC&lt;/p&gt; &#xA;&lt;h1&gt;SYNOPSIS&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;use strict;&#xA;use warnings;&#xA;use Ethereum::RPC::Client;&#xA;&#xA;my $abi = ...;&#xA;my $bytecode = ...;&#xA;my $rpc_client = Ethereum::RPC::Client-&amp;gt;new;&#xA;&#xA;my $coinbase = $rpc_client-&amp;gt;eth_coinbase;&#xA;&#xA;my $contract = $rpc_client-&amp;gt;contract({&#xA;    contract_abi    =&amp;gt; $abi,&#xA;    from            =&amp;gt; $from,&#xA;    gas             =&amp;gt; $gas,&#xA;});&#xA;&#xA;my $message = $contract-&amp;gt;deploy($bytecode)-&amp;gt;get_contract_address(35);&#xA;die $message-&amp;gt;failure if $message-&amp;gt;is_failed;&#xA;&#xA;$message = $contract-&amp;gt;invoke(&#34;functionname&#34;, qw(param1 param2 param3))-&amp;gt;call_transaction();&#xA;print $message-&amp;gt;get-&amp;gt;to_big_int() unless $error;&#xA;&#xA;$message = $contract-&amp;gt;invoke(&#34;functionname&#34;, $param1, $param2, $param3)-&amp;gt;send_transaction();&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;DESCRIPTION&lt;/h1&gt; &#xA;&lt;p&gt;perl-Ethereum-Contract is a library to enable perl to call the contract functions using RPC calls.&lt;/p&gt; &#xA;&lt;h1&gt;USAGE&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Calling RPC commands&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;    my $rpc_client = Ethereum::RPC::Client-&amp;gt;new; &#xA;    my $balance = $rpc_client-&amp;gt;eth_getBalance(&#34;0x0...&#34;, &#34;latest&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Loading Contract&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;    my $rpc_client = Ethereum::RPC::Client-&amp;gt;new; &#xA;&#xA;    my $contract = $rpc_client-&amp;gt;contract({&#xA;        contract_abi    =&amp;gt; $abi,&#xA;        from            =&amp;gt; $coinbase,&#xA;        gas             =&amp;gt; 3000000,&#xA;    });&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Deploying a Contract&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;    $contract-&amp;gt;deploy($bytecode);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Calling a Contract function&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;    my $message = $contract-&amp;gt;invoke($function_name, param1, param2, ...)-&amp;gt;call_transaction();&#xA;    $big_int = $message-&amp;gt;get-&amp;gt;to_big_int unless $message-&amp;gt;is_failed;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;CAVEATS&lt;/h1&gt; &#xA;&lt;p&gt;This software is in an early state.&lt;/p&gt; &#xA;&lt;h3&gt;REQUIREMENTS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;perl 5&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;AUTHOR&lt;/h1&gt; &#xA;&lt;p&gt;Binary.com&lt;/p&gt; &#xA;&lt;h1&gt;LICENSE&lt;/h1&gt; &#xA;&lt;p&gt;This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>binary-com/perl-Net-Async-Blockchain</title>
    <updated>2022-07-28T02:34:46Z</updated>
    <id>tag:github.com,2022-07-28:/binary-com/perl-Net-Async-Blockchain</id>
    <link href="https://github.com/binary-com/perl-Net-Async-Blockchain" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Support for subscriptions and API interaction with blockchains such as BTC or ETH&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;perl-Net-Async-Blockchain&lt;/h1&gt; &#xA;&lt;p&gt;Support for subscriptions and API interaction with blockchains such as BTC or ETH&lt;/p&gt; &#xA;&lt;h2&gt;SYNOPSIS&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;my $loop = IO::Async::Loop-&amp;gt;new;&#xA;&#xA;$loop-&amp;gt;add(&#xA;&#x9;my $btc_client = Net::Async::Blockchain::BTC-&amp;gt;new(&#xA;&#x9;&#x9;blockchain_code &#x9;&#x9; =&amp;gt; &#39;Bitcoin&#39;,&#xA;&#x9;&#x9;subscription_url         =&amp;gt; &#39;tcp://127.0.0.1:28332&#39;,&#xA;&#x9;&#x9;subscription_timeout     =&amp;gt; 100,&#xA;&#x9;&#x9;subscription_msg_timeout =&amp;gt; 3600000,&#xA;));&#xA;&#xA;$btc_client-&amp;gt;subscribe(&#34;blocks&#34;)-&amp;gt;each(sub { print shift-&amp;gt;{hash})-&amp;gt;get;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Supported cryptocurrencies:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;BTC (also LTC and BCH)&lt;/li&gt; &#xA; &lt;li&gt;Omnicore (Tether, ...)&lt;/li&gt; &#xA; &lt;li&gt;ETH (also ERC20 contracts)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported subscriptions:&lt;/h2&gt; &#xA;&lt;h3&gt;Blocks:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Call: &lt;code&gt;-&amp;gt;subscribe(&#39;blocks&#39;);&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;BTC, LTC, BCH, Omnicore &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;hashblock&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;ETH, ERC20 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;newHeads&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;CAVEATS&lt;/h2&gt; &#xA;&lt;p&gt;This software is in an early state.&lt;/p&gt; &#xA;&lt;p&gt;REQUIREMENTS&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;perl 5&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;See also&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/binary-com/perl-Ethereum-RPC-Client&#34;&gt;perl-Ethereum-RPC-Client&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;Binary.com&lt;/p&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>binary-com/perl-Finance-Exchange</title>
    <updated>2022-07-28T02:34:46Z</updated>
    <id>tag:github.com,2022-07-28:/binary-com/perl-Finance-Exchange</id>
    <link href="https://github.com/binary-com/perl-Finance-Exchange" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NAME&lt;/h1&gt; &#xA;&lt;p&gt;Finance::Exchange - represents a financial stock exchange object.&lt;/p&gt; &#xA;&lt;h1&gt;VERSION&lt;/h1&gt; &#xA;&lt;p&gt;version 0.01&lt;/p&gt; &#xA;&lt;h1&gt;SYNOPSIS&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;use Finance::Exchange;&#xA;&#xA;my $exchange_symbol = &#39;LSE&#39;; # London Stocks Exchange&#xA;my $exchange = Finance::Exchange-&amp;gt;create_exchange($exchange_symbol);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;DESCRIPTION&lt;/h1&gt; &#xA;&lt;p&gt;This is a generic representation of a financial stock exchange.&lt;/p&gt; &#xA;&lt;h2&gt;USAGE&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;my $exchange = Finance::Exchange-&amp;gt;create_exchange(&#39;LSE&#39;);&#xA;is $exchange-&amp;gt;symbol, &#39;LSE&#39;;&#xA;is $exchange-&amp;gt;display_name, &#39;London Stock Exchange&#39;;&#xA;is $exchange-&amp;gt;trading_days, &#39;weekdays&#39;;&#xA;is $exchange-&amp;gt;trading_timezone, &#39;Europe/London&#39;;&#xA;# The list of days starts on Sunday and is a set of flags indicating whether&#xA;# we trade on that day or not&#xA;is $exchange-&amp;gt;trading_days_list, [ 0, 1, 1, 1, 1, 1, 0 ];&#xA;is $exchange-&amp;gt;market_times, { ... };&#xA;is $exchange-&amp;gt;delay_amount, 15, &#39;LSE minimum delay is 15 minutes&#39;;&#xA;is $exchange-&amp;gt;currency, &#39;GBP&#39;, &#39;LSE is traded in pound sterling&#39;;&#xA;is $exchange-&amp;gt;trading_date_can_differ, 0, &#39;only applies to AU/NZ&#39;;&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;create_exchange&lt;/h2&gt; &#xA;&lt;p&gt;Exchange object constructor.&lt;/p&gt; &#xA;&lt;h1&gt;ATTRIBUTES&lt;/h1&gt; &#xA;&lt;h2&gt;display_name&lt;/h2&gt; &#xA;&lt;p&gt;Exchange display name, e.g. London Stock Exchange.&lt;/p&gt; &#xA;&lt;h2&gt;symbol&lt;/h2&gt; &#xA;&lt;p&gt;Exchange symbol, e.g. LSE to represent London Stocks Exchange.&lt;/p&gt; &#xA;&lt;h2&gt;trading_days&lt;/h2&gt; &#xA;&lt;p&gt;An exchange&#39;s trading day category.&lt;/p&gt; &#xA;&lt;p&gt;For example, an exchange that trades from Monday to Friday is given a trading days category of &#39;weekdays&#39;.&lt;/p&gt; &#xA;&lt;p&gt;The list is enumerated in the exchanges_trading_days_aliases.yml file.&lt;/p&gt; &#xA;&lt;h2&gt;trading_timezone&lt;/h2&gt; &#xA;&lt;p&gt;The timezone in which the exchange conducts business.&lt;/p&gt; &#xA;&lt;p&gt;This should be a string which will allow the standard DateTime module to find the proper information.&lt;/p&gt; &#xA;&lt;h2&gt;trading_days_list&lt;/h2&gt; &#xA;&lt;p&gt;List the trading day index which is defined in exchanges_trading_days_aliases.yml.&lt;/p&gt; &#xA;&lt;p&gt;An example of a &#39;weekdays&#39; trading days list is as follow: - 0 # Sun - 1 # Mon - 1 # Tues - 1 # Wed - 1 # Thurs - 1 # Fri - 0 # Sat&lt;/p&gt; &#xA;&lt;h2&gt;market_times&lt;/h2&gt; &#xA;&lt;p&gt;A hash reference of human-readable exchange trading times in Greenwich Mean Time (GMT).&lt;/p&gt; &#xA;&lt;p&gt;The trading times are broken into three categories:&lt;/p&gt; &#xA;&lt;p&gt;1. standard - which represents the trading times in non Day Light Saving (DST) period. 2. dst - which represents the trading time in DST period. 3. partial_trading - which represents the trading breaks (e.g. lunch break) in a trading day&lt;/p&gt; &#xA;&lt;h2&gt;delay_amount&lt;/h2&gt; &#xA;&lt;p&gt;The acceptable delay amount of feed on this exchange, in minutes. Default is 60 minutes.&lt;/p&gt; &#xA;&lt;h2&gt;currency&lt;/h2&gt; &#xA;&lt;p&gt;The currency in which the exchange is traded in.&lt;/p&gt; &#xA;&lt;h2&gt;trading_date_can_differ&lt;/h2&gt; &#xA;&lt;p&gt;A boolean flag to indicate if an exchange would open on the previous GMT date due to DST.&lt;/p&gt;</summary>
  </entry>
</feed>