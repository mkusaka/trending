<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-14T01:36:02Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SkyPHP/pgbackup</title>
    <updated>2022-11-14T01:36:02Z</updated>
    <id>tag:github.com,2022-11-14:/SkyPHP/pgbackup</id>
    <link href="https://github.com/SkyPHP/pgbackup" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Collection of scripts for backing up a Postgesql database&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;/h3&gt; &#xA;&lt;h1&gt;pgbackup&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;/h3&gt; &#xA;&lt;p&gt;A collection of scripts for making postgresl database backups. pgbackup scripts include many configurable features including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vaccum a database prior to backup.&lt;/li&gt; &#xA; &lt;li&gt;Backup schema and data to seperate files.&lt;/li&gt; &#xA; &lt;li&gt;Backup individual tables seperately.&lt;/li&gt; &#xA; &lt;li&gt;Compress backups for faster transfer over the network.&lt;/li&gt; &#xA; &lt;li&gt;Rotate backups automatically.&lt;/li&gt; &#xA; &lt;li&gt;Keep daily, weekly and monthly backups automatically.&lt;/li&gt; &#xA; &lt;li&gt;Keep frequent backups of specific tables at intervals of minutes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For the most convenience, pgbackup should be set up as a cronjob as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;0 5 * * * cd /var/lib/pgsql/9.0/pgbackup/script; /usr/bin/perl daily.pl &amp;gt;&amp;gt;daily_backup_log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Inspect thoroughly the file &lt;code&gt;/script/config.pl&lt;/code&gt; to see all configuration options! Custom configurations should be saved seperately in the file &lt;code&gt;/script/_config.pl&lt;/code&gt;. If &lt;code&gt;/script/_config.pl&lt;/code&gt; exists, it is run after &lt;code&gt;/script/config.pl&lt;/code&gt; and overwrites any values set there.&lt;/p&gt; &#xA;&lt;p&gt;For high fidelity backups, be sure to run the scripts at times of low database load.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;/h3&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The DBD::Pg Perl module must be installed for these scripts to work. This can be easily installed via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perl -MCPAN -e &#34;CPAN::Shell-&amp;gt;force(qw(install DBD::Pg));&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;/h3&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To install pgbackup, clone the git codebase wherever is convenient -- usually in the postgres home directory -- and then set up your configurations in &lt;code&gt;/script/_config.pl&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You will need to provide a &lt;code&gt;$db_name&lt;/code&gt;. If you are backing up a remote database, you will need to provide a &lt;code&gt;$db_host&lt;/code&gt;. Verify that the &lt;code&gt;$backup_path&lt;/code&gt; is appropriate and set a value if it is not.&lt;/p&gt; &#xA;&lt;p&gt;If the script is to be executed on a slave node, &lt;code&gt;$skip_vaccum&lt;/code&gt; should be set (you can not vaccum slave nodes, only masters). Inspect &lt;code&gt;/script/config.pl&lt;/code&gt; for any less important configurations you would like to override for your particular backup needs.&lt;/p&gt; &#xA;&lt;p&gt;Set the daily backup script to run in your crontab:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;0 5 * * * cd /var/lib/pgsql/9.0/pgbackup/script; /usr/bin/perl daily.pl &amp;gt;&amp;gt;daily_backup_log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will need to adjust the paths in the above command if any of them do not match your Postgresql and Perl installations&lt;/p&gt; &#xA;&lt;p&gt;If frequent backups are required, set the frequent backup script to run in your crontab:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;*/15 * * * * cd /var/lib/pgsql/9.0/pgbackup/script; /usr/bin/perl frequent.pl &amp;gt;&amp;gt;frequent_backup_log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Adjust any paths if necesary.&lt;/p&gt; &#xA;&lt;p&gt;It is generally a good idea to run the scripts from the command line at least once to verify that your configuration works as expected before allowing the cron jobs to steal the show. Silly mistakes can easily be avoided this way.&lt;/p&gt; &#xA;&lt;p&gt;It is usually a good idea to set up the daily cron to run at the time of least database load.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SEssaid/p4-files.misc</title>
    <updated>2022-11-14T01:36:02Z</updated>
    <id>tag:github.com,2022-11-14:/SEssaid/p4-files.misc</id>
    <link href="https://github.com/SEssaid/p4-files.misc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>sso-aat/libpgplot-perl</title>
    <updated>2022-11-14T01:36:02Z</updated>
    <id>tag:github.com,2022-11-14:/sso-aat/libpgplot-perl</id>
    <link href="https://github.com/sso-aat/libpgplot-perl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fork of Debian package libpgplot-perl&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;PGPLOT module for Perl&lt;/h2&gt; &#xA;&lt;p&gt;Karl Glazebrook&lt;/p&gt; &#xA;&lt;p&gt;karl_pgplot at mac dot com&lt;/p&gt; &#xA;&lt;p&gt;Last update to this file: Apr 10th 2006&lt;/p&gt; &#xA;&lt;p&gt;This module allows the use of the the PGPLOT graphics library from the popular Perl scripting language. PGPLOT makes it very easy to process and plot data using the powerful file and text manipulation facilites built in to Perl. Perl provides a superset of the features of the useful UNIX utilities awk and sed and is the `Swiss-Army Chainsaw&#39; of UNIX programming.&lt;/p&gt; &#xA;&lt;p&gt;Because Perl is a scripting language a program can be changed and rerun to instantly see the effect on a plot. This makes program development a lot faster and much more fun than when using PGPLOT from fully compiled languages such as C or FORTRAN. Users of MONGO and SM will be familiar with this style of programming. Perl also allows you to create advanced World Wide Web page features and/or routinely do system management tasks (Perl handles regular expressions, files and sockets with equal ease).&lt;/p&gt; &#xA;&lt;p&gt;PGPLOT is a very popular library for plotting astronomical data. (As a glance through any issue of ApJ or MNRAS will confirm.) I have always found that with PGPLOT I could produced far nicer and more complex plots than I could with MONGO but it was always harder to use because it had to be done from C or FORTRAN. SM is a nice package, but the language is primitive in comparison with Perl and it is not free software.&lt;/p&gt; &#xA;&lt;p&gt;The PGPLOT module for Perl is free software and provides a complete Perl interface to all of the PGPLOT library functions. It builds against the PGPLOT C/FORTRAN libraries.&lt;/p&gt; &#xA;&lt;p&gt;The core module is available from The Comprehensive Perl Archive (CPAN) network in the directory&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://search.cpan.org/search%3fmodule=PGPLOT&#34;&gt;http://search.cpan.org/search%3fmodule=PGPLOT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Installation instructions - see the file INSTALL&lt;/p&gt; &#xA;&lt;p&gt;Problems - see the file HELP&lt;/p&gt; &#xA;&lt;p&gt;News - see the file CHANGES for new features/bug fixes.&lt;/p&gt;</summary>
  </entry>
</feed>