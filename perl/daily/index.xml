<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-28T01:36:07Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>XMLTV/xmltv</title>
    <updated>2022-11-28T01:36:07Z</updated>
    <id>tag:github.com,2022-11-28:/XMLTV/xmltv</id>
    <link href="https://github.com/XMLTV/xmltv" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Utilities to obtain, generate, and post-process TV listings data in XMLTV format&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/XMLTV/xmltv&#34;&gt; &lt;img src=&#34;https://raw.github.com/XMLTV/xmltv/master/xmltv_logo.png?raw=true&#34; style=&#34;margin: 0 auto;&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;XMLTV 1.1.2&lt;/h1&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/#xmltv&#34;&gt;XMLTV&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/#changes&#34;&gt;Changes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/#installation-package&#34;&gt;Installation (Package)&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/#linux&#34;&gt;Linux&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/#windows&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/#macos&#34;&gt;MacOS&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/#installation-source&#34;&gt;Installation (Source)&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/#getting-source-code&#34;&gt;Getting Source Code&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/#building&#34;&gt;Building&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/#required-distributionsmodules&#34;&gt;Required distributions/modules&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/#recommended-distributionsmodules&#34;&gt;Recommended distributions/modules&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/#json-libraries&#34;&gt;JSON libraries&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/#cpan&#34;&gt;CPAN&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/#proxy-servers&#34;&gt;Proxy servers&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/#known-issues&#34;&gt;Known issues&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/#authors&#34;&gt;Authors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/#resources&#34;&gt;Resources&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;The XMLTV project provides a suite of software to gather television listings, process listings data, and help organize your TV viewing.&lt;/p&gt; &#xA;&lt;p&gt;XMLTV listings use a mature XML file format for storing TV listings, which is defined and documented in the &lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/xmltv.dtd&#34;&gt;XMLTV DTD&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In addition to the many &#34;grabbers&#34; that provide listings for large parts of the world, there are also several tools to process and filter these listings.&lt;/p&gt; &#xA;&lt;p&gt;Please see our &lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/doc/QuickStart&#34;&gt;QuickStart&lt;/a&gt; documentation for details on what each program does.&lt;/p&gt; &#xA;&lt;h2&gt;Changes&lt;/h2&gt; &#xA;&lt;p&gt;To see what has changed in the current XMLTV release please check the &lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/Changes&#34;&gt;Changes&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Installation (Package)&lt;/h2&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;p&gt;XMLTV is packaged for most major Linux distributions and FreeBSD. It is recommended that users install XMLTV using their preferred package manager.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/xmltv/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/xmltv.svg?minversion=1.0.0&amp;amp;columns=3&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Debian/Ubuntu&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% sudo apt install xmltv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Fedora/CentOS (via RPM Fusion)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% dnf install xmltv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;Windows users are strongly advised to use the &lt;a href=&#34;http://alpha-exe.xmltv.org/&#34;&gt;pre-built binary&lt;/a&gt; as installing all prerequisites is non-trivial. Please also check the Github release page for a pre-built release binary.&lt;/p&gt; &#xA;&lt;p&gt;For those who want to give it a go, please read the &lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/doc/exe_build.html&#34;&gt;EXE build instructions&lt;/a&gt;. The instructions can be used for both building xmltv.exe as well as a local install.&lt;/p&gt; &#xA;&lt;h3&gt;MacOS&lt;/h3&gt; &#xA;&lt;p&gt;XMLTV is packaged for MacOS in the &lt;a href=&#34;https://ports.macports.org/port/xmltv/&#34;&gt;MacPorts Project&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation (Source)&lt;/h2&gt; &#xA;&lt;h3&gt;Getting Source Code&lt;/h3&gt; &#xA;&lt;h4&gt;Tarball/Zipfile&lt;/h4&gt; &#xA;&lt;p&gt;The source code for the current release can be downloaded as a tarball (or zipfile) from &lt;a href=&#34;https://github.com/XMLTV/xmltv/releases/latest&#34;&gt;GitHub&lt;/a&gt; and extracted to a preferred location.&lt;/p&gt; &#xA;&lt;h4&gt;Git&lt;/h4&gt; &#xA;&lt;p&gt;The source code for all previous, current and future releases is available in our GitHub repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% git clone https://github.com/XMLTV/xmltv.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;p&gt;To build from source please ensure all required modules are available (see below). Change to the directory containing the XMLTV source:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% perl Makefile.PL&#xA;% make&#xA;% make test&#xA;% make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install to a custom directory, update the first line to provide a suitable &lt;code&gt;PREFIX&lt;/code&gt; location:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% perl Makefile.PL PREFIX=/opt/xmltv/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The system requirements are Perl 5.8.3 or later, and a few Perl modules. You will be asked about some optional components; if you choose not to install them then there are fewer dependencies.&lt;/p&gt; &#xA;&lt;p&gt;Please note that in addition to the specific modules listed below, the &lt;code&gt;tv_grab_zz_sdjson_sqlite&lt;/code&gt; grabber requires Perl 5.16 to be installed.&lt;/p&gt; &#xA;&lt;h3&gt;Required distributions/modules&lt;/h3&gt; &#xA;&lt;p&gt;Required distributions/modules for XMLTV&#39;s core libraries are:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;Date::Manip 5.42a&#xA;File::Slurp&#xA;JSON (see note below)&#xA;HTTP::Request&#xA;HTTP::Response&#xA;LWP 5.65&#xA;LWP::UserAgent&#xA;LWP::Protocol::https&#xA;Term::ReadKey&#xA;URI&#xA;XML::LibXML&#xA;XML::Parser 2.34&#xA;XML::TreePP&#xA;XML::Twig 3.28&#xA;XML::Writer 0.6.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Required modules for grabbers/utilities are:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Archive::Zip                  (tv_grab_eu_epgdata, tv_grab_uk_bleb)&#xA;CGI                           (tv_pick_cgi, core module until 5.20.3, part of CGI)&#xA;CGI::Carp                     (tv_pick_cgi, core module until 5.20.3, part of CGI)&#xA;Compress::Zlib                (for some of the grabbers, core module since 5.9.3, part of IO::Compress)&#xA;Data::Dump                    (for tv_grab_it_dvb)&#xA;Date::Format                  (for some of the grabbers, part of TimeDate)&#xA;Date::Language                (tv_grab_ar, part of TimeDate)&#xA;DateTime                      (for several of the grabbers)&#xA;DateTime::Format::ISO8601     (tv_grab_zz_sdjson_sqlite)&#xA;DateTime::Format::SQLite      (tv_grab_zz_sdjson_sqlite)&#xA;DateTime::Format::Strptime    (tv_grab_eu_epgdata)&#xA;DateTime::TimeZone            (tv_grab_fr)&#xA;DBD::SQLite                   (tv_grab_zz_sdjson_sqlite)&#xA;DBI                           (tv_grab_zz_sdjson_sqlite)&#xA;Digest::SHA                   (tv_grab_zz_sdjson{,_sqlite}, core module since 5.9.3)&#xA;File::HomeDir                 (tv_grab_zz_sdjson_sqlite)&#xA;File::Which                   (tv_grab_zz_sdjson_sqlite)&#xA;HTML::Entities 1.27           (for several of the grabbers, part of HTML::Parser 3.34)&#xA;HTML::Parser 3.34             (tv_grab_it, tv_grab_it_dvb, part of HTML::Parser 3.34)&#xA;HTML::Tree                    (for many of the grabbers, part of HTML::Tree)&#xA;HTML::TreeBuilder             (for many of the grabbers, part of HTML::Tree)&#xA;HTTP::Cache::Transparent 1.0  (for several of the grabbers)&#xA;HTTP::Cookies                 (for several of the grabbers)&#xA;HTTP::Request::Common         (tv_grab_eu_epgdata, part of HTTP::Message)&#xA;IO::Scalar                    (for some of the grabbers, part of IO::Stringy)&#xA;List::MoreUtils               (tv_grab_zz_sdjson_sqlite)&#xA;LWP::Protocol::https          (tv_grab_fi, tv_grab_huro, tv_grab_zz_sdjson)&#xA;LWP::UserAgent::Determined    (tv_grab_zz_sdjson_sqlite)&#xA;SOAP::Lite 0.67               (tv_grab_na_dd)&#xA;Time::Piece                   (tv_grab_huro, core module since 5.9.5)&#xA;Time::Seconds                 (tv_grab_huro, core module since 5.9.5)&#xA;Tk                            (tv_check)&#xA;Tk::TableMatrix               (tv_check)&#xA;URI                           (for some of the grabbers, part of URI)&#xA;URI::Encode                   (tv_grab_pt_vodafone)&#xA;URI::Escape                   (for some of the grabbers, part of URI)&#xA;XML::DOM                      (tv_grab_is)&#xA;XML::LibXSLT                  (tv_grab_is)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When building XMLTV, any missing modules that are required for the selected grabbers/utilities will be reported.&lt;/p&gt; &#xA;&lt;h3&gt;Recommended distributions/modules&lt;/h3&gt; &#xA;&lt;p&gt;The following modules are recommended but XMLTV works without them installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;File::chdir                      (testing grabbers)&#xA;JSON::XS                         (faster JSON handling, see note below)&#xA;Lingua::Preferred 0.2.4          (helps with multilingual listings)&#xA;Log::TraceMessages               (useful for debugging, not needed for normal use)&#xA;PerlIO::gzip                     (can make tv_imdb a bit faster)&#xA;Term::ProgressBar                (displays pretty progress bars)&#xA;Unicode::String                  (improved character handling in tv_to_latex)&#xA;URI::Escape::XS                  (faster URI handling)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;JSON libraries&lt;/h3&gt; &#xA;&lt;p&gt;By default, libraries and grabbers that need to handle JSON data should specify the JSON module. This module is a wrapper for JSON::XS-compatible modules and supports the following JSON modules:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;JSON::XS&#xA;JSON::PP&#xA;Cpanel::JSON::XS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;JSON will use JSON::XS if available, falling back to JSON::PP (a core module since 5.14.0) if JSON::XS is not available. Cpanel::JSON::XS can be used as an explicit alternative by setting the PERL_JSON_BACKEND environment variable (please refer to the JSON module&#39;s documentation for details).&lt;/p&gt; &#xA;&lt;h3&gt;CPAN&lt;/h3&gt; &#xA;&lt;p&gt;All required modules can be quickly installed from CPAN using the &lt;code&gt;cpanm&lt;/code&gt; utility. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% cpanm XML::Twig&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note that you may find it easier to search for packaged versions of required modules, as sources which distribute a packaged version of XMLTV also provide packaged versions of required modules.&lt;/p&gt; &#xA;&lt;h3&gt;Proxy servers&lt;/h3&gt; &#xA;&lt;p&gt;Proxy server support is provide by the LWP modules. You can define a proxy server via the HTTP_PROXY environment variable.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% HTTP_PROXY=http://somehost.somedomain:port&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information, see this &lt;a href=&#34;http://search.cpan.org/~gaas/libwww-perl-5.803/lib/LWP/UserAgent.pm#$ua-%3Eenv_proxy&#34;&gt;article&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;p&gt;If a full HTTP URL to the XMLTV.dtd is provided in the DOCTYPE declaration of an XMLTV document, please be aware that it is possible for the link to instead redirect to a page for accepting cookies. Such cookie-acceptance pages are more common in Europe, and can result in applications being unable to parse the file.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;XMLTV is free software, distributed under the GNU General Public License, version 2. Please see &lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/COPYING&#34;&gt;COPYING&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;p&gt;There have been many contributors to XMLTV. Where possible they are credited in individual source files and in the &lt;a href=&#34;https://raw.githubusercontent.com/XMLTV/xmltv/master/authors.txt&#34;&gt;authors&lt;/a&gt; mapping file.&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;h3&gt;GitHub&lt;/h3&gt; &#xA;&lt;p&gt;Our &lt;a href=&#34;https://github.com/XMLTV/xmltv&#34;&gt;GitHub project&lt;/a&gt; contains all source code, issues and Pull Requests.&lt;/p&gt; &#xA;&lt;h3&gt;Project Wiki&lt;/h3&gt; &#xA;&lt;p&gt;We have a project &lt;a href=&#34;http://www.xmltv.org&#34;&gt;web page and wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Mailing Lists&lt;/h3&gt; &#xA;&lt;p&gt;We run the following mailing lists:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://sourceforge.net/projects/xmltv/lists/xmltv-users&#34;&gt;xmltv-users&lt;/a&gt;: for users to ask questions and report problems with XMLTV software&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://sourceforge.net/projects/xmltv/lists/xmltv-devel&#34;&gt;xmltv-devel&lt;/a&gt;: for development discussion and support&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://sourceforge.net/projects/xmltv/lists/xmltv-announce&#34;&gt;xmltv-announce&lt;/a&gt;: announcements of new XMLTV releases&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;IRC&lt;/h3&gt; &#xA;&lt;p&gt;We run an IRC channel #xmltv on Libera Chat. Please join us!&lt;/p&gt; &#xA;&lt;p&gt;-- Nick Morrott, &lt;a href=&#34;mailto:knowledgejunkie@gmail.com&#34;&gt;knowledgejunkie@gmail.com&lt;/a&gt;, 2022-04-18&lt;/p&gt;</summary>
  </entry>
</feed>