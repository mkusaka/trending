<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-01T01:41:07Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>timurb/do-backup</title>
    <updated>2023-04-01T01:41:07Z</updated>
    <id>tag:github.com,2023-04-01:/timurb/do-backup</id>
    <link href="https://github.com/timurb/do-backup" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;do-backup&lt;/h1&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;This is a tool to do backups. It stores specified files in tar archive and optionally:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;compresses it&lt;/li&gt; &#xA; &lt;li&gt;encrypts it&lt;/li&gt; &#xA; &lt;li&gt;uploads to S3&lt;/li&gt; &#xA; &lt;li&gt;rotates locally&lt;/li&gt; &#xA; &lt;li&gt;rotates remotely&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Besides it can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;exclude specified files from an archive&lt;/li&gt; &#xA; &lt;li&gt;run pre and post hooks&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why one more of them?&lt;/h2&gt; &#xA;&lt;p&gt;I needed a tool for myself to do backups. It had to be simple, reliable, easily scriptable, and having few dependencies.&lt;/p&gt; &#xA;&lt;p&gt;To esure that I&#39;ve written a bunch of unit tests. You can run them by: sh ./run-tests.sh First run can take up to 15min. You need submodules initialized to do that.&lt;/p&gt; &#xA;&lt;p&gt;(By default tests run 3 rotations when testing backups. If you need more thorough testing you can increase this number by setting the ROTATE env variable).&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;git clone &lt;a href=&#34;mailto:git@github.com&#34;&gt;git@github.com&lt;/a&gt;:timurbatyrshin/do-backup.git --update&lt;/p&gt; &#xA;&lt;p&gt;Notice the --update key.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AWS tool by Timothy Kay (&lt;a href=&#34;https://github.com/timkay/aws&#34;&gt;https://github.com/timkay/aws&lt;/a&gt;) should be placed somewhere in $PATH.&lt;/li&gt; &#xA; &lt;li&gt;Libshell (&lt;a href=&#34;https://github.com/timurbatyrshin/libshell&#34;&gt;https://github.com/timurbatyrshin/libshell&lt;/a&gt;) should be placed in the same dir as do-backup (in libshell/ subdir)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;do-backup -f FILE -d DESTDIR [OPTIONS]&#xA;&#xA;Switches:&#xA;  -f, --file FILE&#xA;      Files/dirs to backup should be listed in FILE one per line.&#xA;      Lines starting with &#39;exclude:&#39; specify locations to exclude from backup.&#xA;      Lines starting with &#39;pre:&#39; and &#39;post:&#39; specify shell commands to run&#xA;      before and after backup running.&#xA;      Lines starting with &#39;compress:&#39; specify which kind of compression to&#xA;      apply to archive. Possible values: tar, gzip. Default: gzip&#xA;&#xA;      Several -f switches can be specified in which case several archives&#xA;      will be created.&#xA;  -l, --list DIR   &#xA;      You can instead place the files specified above into a single dir,&#xA;      name them as *.list and pass this dir&#39;s name as a param to --list key.&#xA;  -d, --destdir DESTDIR&#xA;      a target dir to put archive into&#xA;  -e, --encrypt KEY&#xA;      encrypt backup with specified GPG key&#xA;  -u, --upload BUCKET&#xA;      upload archive to S3 bucket&#xA;  -r, --rotate NUMBER&#xA;      keep NUMBER of last archives.  This applies both to local storage and to S3&#xA;  --lr, --local-rotate NUMBER&#xA;      The same as -r but for local archives only&#xA;  --rr, --remote-rotate NUMBER&#xA;      The same as -r but for remote archives only&#xA;      These two keys, -lr and -rr override -r&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Can&#39;t open ./libshell/shell-getopt This means libshell should be checked out in ./libshell/ relating to do-backup If you run do-backup from inside git repo you can use the following command to fix that: git submodule update --init&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;run-tests.sh: 3: tests/roundup/roundup.sh: not found Update submodules (see above)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Place AWS credentials to tests/awssecret in order to run S3 upload tests. This means tests of uploading to S3 were not run. Do as messages suggests.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;./do-backup: 172: aws: not found Place aws command (&lt;a href=&#34;https://github.com/timkay/aws&#34;&gt;https://github.com/timkay/aws&lt;/a&gt;) somewhere in $PATH&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;After importing public key to the box you are doing encrypted backups on you are likely to meet the following message: &lt;code&gt;gpg: 681BB479: There is no assurance this key belongs to the named user&lt;/code&gt; To fix that: &lt;code&gt;gpg --edit-key 681BB471&lt;/code&gt; and set the key to the ultimate trust via &lt;code&gt;trust&lt;/code&gt; command.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Write some tests.&lt;/li&gt; &#xA; &lt;li&gt;Add some code.&lt;/li&gt; &#xA; &lt;li&gt;Send me a pull request.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
</feed>