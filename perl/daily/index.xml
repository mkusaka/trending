<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-17T01:36:59Z</updated>
  <subtitle>Daily Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mozilla-bteam/bmo</title>
    <updated>2022-10-17T01:36:59Z</updated>
    <id>tag:github.com,2022-10-17:/mozilla-bteam/bmo</id>
    <link href="https://github.com/mozilla-bteam/bmo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;bugzilla.mozilla.org source - report issues here: https://bugzilla.mozilla.org/enter_bug.cgi?product=bugzilla.mozilla.org&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;========================= BMO: bugzilla.mozilla.org&lt;/h1&gt; &#xA;&lt;p&gt;BMO is Mozilla&#39;s highly customized version of Bugzilla.&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://circleci.com/gh/mozilla-bteam/bmo/tree/master.svg?style=svg&#34;&gt;https://circleci.com/gh/mozilla-bteam/bmo/tree/master.svg?style=svg&lt;/a&gt; :target: &lt;a href=&#34;https://circleci.com/gh/mozilla-bteam/bmo/tree/master&#34;&gt;https://circleci.com/gh/mozilla-bteam/bmo/tree/master&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. contents:: .. 1. Using Docker Compose (For Development) 2. Docker Container 2.1 Container Arguments 2.2 Environmental Variables 2.3 Logging Configuration 2.4 Persistent Data Volume 3. Development Tips 3.1 Testing Emails 4. Administrative Tasks 4.1 Generating cpanfile and cpanfile.snapshot files 4.2 Generating a new mozillabteam/bmo-perl-slim base image 5. Support&lt;/p&gt; &#xA;&lt;p&gt;If you want to contribute to BMO, you can fork this repo and get a local copy of BMO running in a few minutes using Docker.&lt;/p&gt; &#xA;&lt;h1&gt;Using Docker (For Development)&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains a docker-compose file that will create a local Bugzilla for testing.&lt;/p&gt; &#xA;&lt;p&gt;To use docker compose, ensure you have the latest Docker install for your environment (Linux, Windows, or Mac OS). If you are using Ubuntu, then you can read the next section to ensure that you have the correct docker setup.&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker compose up --build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will bring up the main webserver process, database, memcached, and various other background tasks such as the Push system and the Feed system. The latter two are used for workflow management between bugzilla.mozilla.org and other external systems.&lt;/p&gt; &#xA;&lt;p&gt;For normal development, you can run just the main webserver, database, and memcached by running the following command instead:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose up --build bmo.test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, you must configure your browser to use localhost and port 1080 as an HTTP proxy. For setting a proxy in Firefox, see &lt;code&gt;Firefox Connection Settings&lt;/code&gt;_. The procedure should be similar for other browsers.&lt;/p&gt; &#xA;&lt;p&gt;.. _&lt;code&gt;Firefox Connection Settings&lt;/code&gt;: &lt;a href=&#34;https://support.mozilla.org/en-US/kb/connection-settings-firefox&#34;&gt;https://support.mozilla.org/en-US/kb/connection-settings-firefox&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;After that, you should be able to visit &lt;a href=&#34;http://bmo.test/&#34;&gt;http://bmo.test/&lt;/a&gt; from your browser. You can login as &lt;a href=&#34;mailto:admin@mozilla.bugs&#34;&gt;admin@mozilla.bugs&lt;/a&gt; with the password &#34;password012!&#34; (without quotes).&lt;/p&gt; &#xA;&lt;p&gt;If you want to update the code running in the web container, you do not need to restart everything. You can run the following command:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker compose exec bmo.test rsync -avz --exclude .git --exclude local /mnt/sync/ /app/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Mojolicious morbo development server, used by the web container, will notice any code changes and restart itself.&lt;/p&gt; &#xA;&lt;p&gt;If you are using Visual Studio Code, these &lt;code&gt;docker compose&lt;/code&gt; commands will come in handy as the editor&#39;s &lt;code&gt;tasks&lt;/code&gt;_ that can be found under the Terminal menu. The update command is assigned to the default build task so it can be executed by simply hitting Ctrl+Shift+B on Windows/Linux or Command+Shift+B on macOS. An &lt;code&gt;extension bundle&lt;/code&gt;_ for VS Code is also available.&lt;/p&gt; &#xA;&lt;p&gt;.. _&lt;code&gt;tasks&lt;/code&gt;: &lt;a href=&#34;https://code.visualstudio.com/docs/editor/tasks&#34;&gt;https://code.visualstudio.com/docs/editor/tasks&lt;/a&gt; .. _&lt;code&gt;extension bundle&lt;/code&gt;: &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=dylanwh.bugzilla&#34;&gt;https://marketplace.visualstudio.com/items?itemName=dylanwh.bugzilla&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Ensuring your Docker setup on Ubuntu 16.04&lt;/h2&gt; &#xA;&lt;p&gt;On Ubuntu, Docker can be installed using apt-get. After installing, you need to do run these commands to ensure that it has installed fine:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo groupadd docker # add a new group called &#34;docker&#34;&#xA;sudo gpasswd -a &amp;lt;your username&amp;gt; docker # add yourself to &#34;docker&#34; group&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Log in &amp;amp; log out of your system, so that changes in the above commands will &amp;amp; do this:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo service docker restart&#xA;docker run hello-world&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the output of last command looks like this. then congrats you have installed docker successfully:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: bash&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Hello from Docker!&#xA;This message shows that your installation appears to be working correctly.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Docker Container&lt;/h1&gt; &#xA;&lt;p&gt;This repository is also a runnable docker container.&lt;/p&gt; &#xA;&lt;h2&gt;Container Arguments&lt;/h2&gt; &#xA;&lt;p&gt;Currently, the entry point takes a single command argument. This can be &lt;strong&gt;httpd&lt;/strong&gt; or &lt;strong&gt;shell&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;httpd This will start apache listening for connections on &lt;code&gt;$PORT&lt;/code&gt; shell This will start an interactive shell in the container. Useful for debugging.&lt;/p&gt; &#xA;&lt;h2&gt;Environmental Variables&lt;/h2&gt; &#xA;&lt;p&gt;PORT This must be a value &amp;gt;= 1024. The httpd will listen on this port for incoming plain-text HTTP connections. Default: 8000&lt;/p&gt; &#xA;&lt;p&gt;MOJO_REVERSE_PROXY This tells the backend that it is behind a proxy. Default: 1&lt;/p&gt; &#xA;&lt;p&gt;MOJO_HEARTBEAT_INTERVAL How often (in seconds) will the manager process send a heartbeat to the workers. Default: 10&lt;/p&gt; &#xA;&lt;p&gt;MOJO_HEARTBEAT_TIMEOUT Maximum amount of time in seconds before a worker without a heartbeat will be stopped gracefully Default: 120&lt;/p&gt; &#xA;&lt;p&gt;MOJO_INACTIVITY_TIMEOUT Maximum amount of time in seconds a connection can be inactive before getting closed. Default: 120&lt;/p&gt; &#xA;&lt;p&gt;MOJO_WORKERS Number of worker processes. A good rule of thumb is two worker processes per CPU core for applications that perform mostly non-blocking operations, blocking operations often require more and benefit from decreasing concurrency with &#34;MOJO_CLIENTS&#34; (often as low as 1). Note that during zero downtime software upgrades there will be twice as many workers active for a short amount of time. Default: 1&lt;/p&gt; &#xA;&lt;p&gt;MOJO_SPARE Temporarily spawn up to this number of additional workers if there is a need. This allows for new workers to be started while old ones are still shutting down gracefully, drastically reducing the performance cost of worker restarts. Default: 1&lt;/p&gt; &#xA;&lt;p&gt;MOJO_CLIENTS Maximum number of accepted connections each worker process is allowed to handle concurrently, before stopping to accept new incoming connections. Note that high concurrency works best with applications that perform mostly non-blocking operations, to optimize for blocking operations you can decrease this value and increase &#34;MOJO_WORKERS&#34; instead for better performance. Default: 200&lt;/p&gt; &#xA;&lt;p&gt;BUGZILLA_ALLOW_INSECURE_HTTP This should never be set in production. It allows oauth over http.&lt;/p&gt; &#xA;&lt;p&gt;BMO_urlbase The public URL for this instance. Note that if this begins with https:// and BMO_inbound_proxies is set to &#39;*&#39; Bugzilla will believe the connection to it is using SSL.&lt;/p&gt; &#xA;&lt;p&gt;BMO_canonical_urlbase The public URL for the production instance, if different from urlbase above.&lt;/p&gt; &#xA;&lt;p&gt;BMO_attachment_base This is the URL for attachments. When the allow_attachment_display parameter is on, it is possible for a malicious attachment to steal your cookies or perform an attack on Bugzilla using your credentials.&lt;/p&gt; &#xA;&lt;p&gt;If you would like additional security on attachments to avoid this, set this parameter to an alternate URL for your Bugzilla that is not the same as urlbase or sslbase. That is, a different domain name that resolves to this exact same Bugzilla installation.&lt;/p&gt; &#xA;&lt;p&gt;For added security, you can insert %bugid% into the URL, which will be replaced with the ID of the current bug that the attachment is on, when you access an attachment. This will limit attachments to accessing only other attachments on the same bug. Remember, though, that all those possible domain names (such as 1234.your.domain.com) must point to this same Bugzilla instance.&lt;/p&gt; &#xA;&lt;p&gt;BMO_db_driver What SQL database to use. Default is mysql. List of supported databases can be obtained by listing Bugzilla/DB directory - every module corresponds to one supported database and the name of the module (before &#34;.pm&#34;) corresponds to a valid value for this variable.&lt;/p&gt; &#xA;&lt;p&gt;BMO_db_host The DNS name or IP address of the host that the database server runs on.&lt;/p&gt; &#xA;&lt;p&gt;BMO_db_name The name of the database.&lt;/p&gt; &#xA;&lt;p&gt;BMO_db_user The database user to connect as.&lt;/p&gt; &#xA;&lt;p&gt;BMO_db_pass The password for the user above.&lt;/p&gt; &#xA;&lt;p&gt;BMO_site_wide_secret This secret key is used by your installation for the creation and validation of encrypted tokens. These tokens are used to implement security features in Bugzilla, to protect against certain types of attacks. It&#39;s very important that this key is kept secret.&lt;/p&gt; &#xA;&lt;p&gt;BMO_jwt_secret This secret key is used by your installation for the creation and validation of jwts. It&#39;s very important that this key is kept secret and it should be different from the side_wide_secret. Changing this will invalidate all issued jwts, so all oauth clients will need to start over. As such it should be a high level of entropy, as it probably won&#39;t change for a very long time.&lt;/p&gt; &#xA;&lt;p&gt;BMO_inbound_proxies This is a list of IP addresses that we expect proxies to come from. This can be &#39;&lt;em&gt;&#39; if only the load balancer can connect to this container. Setting this to &#39;&lt;/em&gt;&#39; means that BMO will trust the X-Forwarded-For header.&lt;/p&gt; &#xA;&lt;p&gt;BMO_memcached_namespace The global namespace for the memcached servers.&lt;/p&gt; &#xA;&lt;p&gt;BMO_memcached_servers A list of memcached servers (IP addresses or host names). Can be empty.&lt;/p&gt; &#xA;&lt;p&gt;BMO_shadowdb The database name of the read-only database.&lt;/p&gt; &#xA;&lt;p&gt;BMO_shadowdbhost The hotname or IP address of the read-only database.&lt;/p&gt; &#xA;&lt;p&gt;BMO_shadowdbport The port of the read-only database.&lt;/p&gt; &#xA;&lt;p&gt;BMO_setrlimit This is a JSON object and can set any limit described in &lt;a href=&#34;https://metacpan.org/pod/BSD::Resource&#34;&gt;https://metacpan.org/pod/BSD::Resource&lt;/a&gt;. Typically it used for setting RLIMIT_AS, and the default value is &lt;code&gt;{ &#34;RLIMIT_AS&#34;: 2000000000 }&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;BMO_size_limit This is the max amount of unshared memory the worker processes are allowed to use before they will exit. Minimum 750000 (750MiB)&lt;/p&gt; &#xA;&lt;p&gt;BMO_mail_delivery_method Usually configured on the MTA section of admin interface, but may be set here for testing purposes. Valid values are None, Test, Sendmail, or SMTP. If set to Test, email will be appended to the /app/data/mailer.testfile.&lt;/p&gt; &#xA;&lt;p&gt;BMO_use_mailer_queue Usually configured on the MTA section of the admin interface, you may change this here for testing purposes. Should be 1 or 0. If 1, the job queue will be used. For testing, only set to 0 if the BMO_mail_delivery_method is None or Test.&lt;/p&gt; &#xA;&lt;p&gt;USE_NYTPROF Write &lt;code&gt;Devel::NYTProf&lt;/code&gt;_ profiles out for each requests. These will be named /app/data/nytprof.$host.$script.$n.$pid, where $host is the hostname of the container, script is the name of the script (without extension), $n is a number starting from 1 and incrementing for each request to the worker process, and $pid is the worker process id.&lt;/p&gt; &#xA;&lt;p&gt;NYTPROF_DIR Alternative location to store profiles from the above option.&lt;/p&gt; &#xA;&lt;p&gt;LOG4PERL_CONFIG_FILE Filename of &lt;code&gt;Log::Log4perl&lt;/code&gt;_ config file. It defaults to log4perl-syslog.conf. If the file is given as a relative path, it will relative to the /app/conf/ directory.&lt;/p&gt; &#xA;&lt;p&gt;.. _&lt;code&gt;Devel::NYTProf&lt;/code&gt;: &lt;a href=&#34;https://metacpan.org/pod/Devel::NYTProf&#34;&gt;https://metacpan.org/pod/Devel::NYTProf&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;.. _&lt;code&gt;Log::Log4perl&lt;/code&gt;: &lt;a href=&#34;https://metacpan.org/pod/Log::Log4perl&#34;&gt;https://metacpan.org/pod/Log::Log4perl&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;LOG4PERL_STDERR_DISABLE Boolean. By default log messages are logged as plain text to &lt;code&gt;STDERR&lt;/code&gt;. Setting this to a true value disables this behavior.&lt;/p&gt; &#xA;&lt;p&gt;Note: For programs that run using the &lt;code&gt;cereal&lt;/code&gt; log aggregator, this environment variable will be ignored.&lt;/p&gt; &#xA;&lt;h2&gt;Logging Configuration&lt;/h2&gt; &#xA;&lt;p&gt;How Bugzilla logs is entirely configured by the environmental variable &lt;code&gt;LOG4PERL_CONFIG_FILE&lt;/code&gt;. This config file should be familiar to someone familiar with log4j, and it is extensively documented in &lt;code&gt;Log::Log4perl&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;Many examples are provided in the logs/ directory.&lt;/p&gt; &#xA;&lt;p&gt;If multiple processes will need to log, it should be configured to log to a socket on port 5880. This will be the &#34;cereal&#34; daemon, which will only be started for jobqueue and httpd-type containers.&lt;/p&gt; &#xA;&lt;p&gt;The example log config files will often be configured to log to stderr themselves. To prevent duplicate lines (or corrupted log messages), stderr logging should be filtered on the existence of the LOG4PERL_STDERR_DISABLE environmental variable.&lt;/p&gt; &#xA;&lt;p&gt;Logging configuration also controls which errors are sent to Sentry.&lt;/p&gt; &#xA;&lt;h2&gt;Persistent Data Volume&lt;/h2&gt; &#xA;&lt;p&gt;This container expects /app/data to be a persistent, shared, writable directory owned by uid 10001. This must be a shared (NFS/EFS/etc) volume between all nodes.&lt;/p&gt; &#xA;&lt;h1&gt;Development Tips&lt;/h1&gt; &#xA;&lt;h2&gt;Test Suite&lt;/h2&gt; &#xA;&lt;p&gt;Bugzilla comes with several integrated test suites that do basic sanity checks to more involved web UI testing. To execute the tests, run the following commands:&lt;/p&gt; &#xA;&lt;p&gt;Basic sanity tests&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: bash&lt;/p&gt; &#xA;&lt;p&gt;docker compose -f docker-compose.test.yml down &amp;amp;&amp;amp; docker build -t bmo . &amp;amp;&amp;amp; docker compose -f docker-compose.test.yml run -e CI=1 --no-deps bmo.test test_sanity&lt;/p&gt; &#xA;&lt;p&gt;Webservices API tests&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: bash&lt;/p&gt; &#xA;&lt;p&gt;docker compose -f docker-compose.test.yml down &amp;amp;&amp;amp; docker build -t bmo . &amp;amp;&amp;amp; docker compose -f docker-compose.test.yml run bmo.test test_webservices&lt;/p&gt; &#xA;&lt;p&gt;Selenium Web UI tests&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: bash&lt;/p&gt; &#xA;&lt;p&gt;docker compose -f docker-compose.test.yml down &amp;amp;&amp;amp; docker build -t bmo . &amp;amp;&amp;amp; docker compose -f docker-compose.test.yml run bmo.test test_selenium&lt;/p&gt; &#xA;&lt;h2&gt;Testing Emails&lt;/h2&gt; &#xA;&lt;p&gt;Configure your MTA setting you want to use by going to &lt;a href=&#34;http://bmo.test/editparams.cgi?section=mta&#34;&gt;http://bmo.test/editparams.cgi?section=mta&lt;/a&gt; and changing the mail_delivery_method to &#39;Test&#39;. With this option, all mail will be appended to a &lt;code&gt;data/mailer.testfile&lt;/code&gt;. To see the emails being sent:&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: bash&lt;/p&gt; &#xA;&lt;p&gt;docker compose run bmo.test cat /app/data/mailer.testfile&lt;/p&gt; &#xA;&lt;h2&gt;Technical Details&lt;/h2&gt; &#xA;&lt;p&gt;This Docker environment is a very scaled-down version of production BMO. It uses roughly the same Perl dependencies as production. It is also configured to use memcached. The push connector is running but is not currently configured, nor is the Phabricator feed daemon.&lt;/p&gt; &#xA;&lt;p&gt;It includes a couple example products, some fake users, and some of BMO&#39;s real groups. Email is disabled for all users; however, it is safe to enable email as the box is configured to send all email to the &#39;admin&#39; user on the web vm.&lt;/p&gt; &#xA;&lt;h1&gt;Administrative Tasks&lt;/h1&gt; &#xA;&lt;h2&gt;Generating cpanfile and cpanfile.snapshot files&lt;/h2&gt; &#xA;&lt;p&gt;.. code-block:: bash&lt;/p&gt; &#xA;&lt;p&gt;docker build -t bmo-cpanfile -f Dockerfile.cpanfile . docker run -it -v &#34;$(pwd):/app/result&#34; bmo-cpanfile cp cpanfile cpanfile.snapshot /app/result&lt;/p&gt; &#xA;&lt;h2&gt;Generating a new mozillabteam/bmo-perl-slim base image&lt;/h2&gt; &#xA;&lt;p&gt;The mozillabteam/bmo-perl-slim image is stored in the Mozilla B-Team Docker Hub repository. It contains just the Perl dependencies in &lt;code&gt;/app/local&lt;/code&gt; and other Debian packages needed. Whenever the &lt;code&gt;cpanfile&lt;/code&gt; and &lt;code&gt;cpanfile.snapshot&lt;/code&gt; files have been changed by the above steps after a succcessful merge, a new mozillabteam/bmo-perl-slim image will need to be built and pushed to Docker Hub.&lt;/p&gt; &#xA;&lt;p&gt;A Docker Hub organization administrator with the correct permissions will normally do the &lt;code&gt;docker login&lt;/code&gt; and &lt;code&gt;docker push&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;&amp;lt;DATE&amp;gt;&lt;/code&gt; value should be the current date in &lt;code&gt;YYYYMMDD.X&lt;/code&gt; format with X being the current iteration value. For example, &lt;code&gt;20191209.1&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;.. code-block:: bash&lt;/p&gt; &#xA;&lt;p&gt;docker build -t mozillabteam/bmo-perl-slim:&#xA; &lt;date&gt;&#xA;   -f Dockerfile.bmo-slim . docker login docker push mozillabteam/bmo-perl-slim:&#xA;  &lt;date&gt;&lt;/date&gt;&#xA; &lt;/date&gt;&lt;/p&gt; &#xA;&lt;p&gt;After pushing to Docker Hub, you will need to update &lt;code&gt;Dockerfile&lt;/code&gt; to include the new built image with correct date. Create a PR, review and commit the new change.&lt;/p&gt; &#xA;&lt;h1&gt;Support&lt;/h1&gt; &#xA;&lt;p&gt;You can chat with the BMO team on &lt;code&gt;Matrix &amp;lt;https://chat.mozilla.org/#/room/#bmo:mozilla.org&amp;gt;&lt;/code&gt;_.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>keydet89/RegRipper3.0</title>
    <updated>2022-10-17T01:36:59Z</updated>
    <id>tag:github.com,2022-10-17:/keydet89/RegRipper3.0</id>
    <link href="https://github.com/keydet89/RegRipper3.0" rel="alternate"></link>
    <summary type="html">&lt;p&gt;RegRipper3.0&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RegRipper3.0&lt;/h1&gt; &#xA;&lt;p&gt;Here&#39;s what&#39;s new in this release&lt;/p&gt; &#xA;&lt;h2&gt;WHAT&#39;S NEW&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;With the GUI (&lt;code&gt;rr.exe&lt;/code&gt;), you no longer have to select a &lt;code&gt;profile;&lt;/code&gt;. Instead, select the hive to parse, and the output directory and the GUI will automatically run all applicable plugins against the hive. This capability is included in &lt;code&gt;rip.exe&lt;/code&gt;, as well, via the &lt;code&gt;-a&lt;/code&gt; switch. As an alternative, you can use the &lt;code&gt;-aT&lt;/code&gt; switch to run all hive-specific TLN plugins against the hive. The ability to run individual plugins, as well as profiles, has been retained, as well. You can see other options available by typing &lt;code&gt;rip&lt;/code&gt; or &lt;code&gt;rip -h&lt;/code&gt; or &lt;code&gt;rip /?&lt;/code&gt; at the command line.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Date Format - There was a GitHub issue posted, asking that the date format be changed to be IAW &lt;a href=&#34;https://en.wikipedia.org/wiki/ISO_8601&#34;&gt;ISO 8601&lt;/a&gt;. However, the actual format provided as part of the issue/request was IAW the RFC 3339 profile (i.e., space between the date and time).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;NOTE&lt;/h3&gt; &#xA;&lt;p&gt;This tool does NOT automatically process hive transaction logs. If you need to incorporate data from hive transaction logs into your analysis, consider merging the data via Maxim Suhanov&#39;s &lt;code&gt;yarp&lt;/code&gt; + &lt;code&gt;registryFlush.py&lt;/code&gt;, or via Eric Zimmerman&#39;s &lt;code&gt;rla.exe&lt;/code&gt; which is included in &lt;a href=&#34;https://f001.backblazeb2.com/file/EricZimmermanTools/RegistryExplorer_RECmd.zip&#34;&gt;Eric&#39;s Registry Explorer/RECmd&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The following Perl module files have been modified, and the modified versions are provided as part of this repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;C:\Perl\site\lib\Parse\Win32Registry\WinNT\File.pm&#xA;C:\Perl\site\lib\Parse\Win32Registry\WinNT\Base.pm&#xA;C:\Perl\site\lib\Parse\Win32Registry\WinNT\Key.pm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re using the Windows &lt;code&gt;exe&lt;/code&gt; version of the tools, this is irrelevant, as the modified files are &#34;&lt;strong&gt;compiled&lt;/strong&gt;&#34; into the &lt;code&gt;exe&lt;/code&gt;. However, if you&#39;re installing on Linux, copy the files from the repo to the appropriate locations in your installation.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>binary-com/perl-Math-Business-BlackScholes-Binaries-Greeks</title>
    <updated>2022-10-17T01:36:59Z</updated>
    <id>tag:github.com,2022-10-17:/binary-com/perl-Math-Business-BlackScholes-Binaries-Greeks</id>
    <link href="https://github.com/binary-com/perl-Math-Business-BlackScholes-Binaries-Greeks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Black &amp; Scholes greeks&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;Math::Business::BlackScholes::Binaries::Greeks&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codecov.io/gh/binary-com/perl-Math-Business-BlackScholes-Binaries-Greeks&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/binary-com/perl-Math-Business-BlackScholes-Binaries-Greeks/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/binary-com/perl-Math-Business-BlackScholes-Binaries-Greeks&#34;&gt;&lt;img src=&#34;https://travis-ci.org/binary-com/perl-Math-Business-BlackScholes-Binaries-Greeks.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Greeks modules calculate the sensitivity of the price of binary options to a change in the underlying parameters of the financial asset.&lt;/p&gt; &#xA;&lt;h6&gt;First-order Greeks&lt;/h6&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Math::Business::BlackScholes::Binaries::Greeks::Delta&lt;/li&gt; &#xA; &lt;li&gt;Math::Business::BlackScholes::Binaries::Greeks::Vega&lt;/li&gt; &#xA; &lt;li&gt;Math::Business::BlackScholes::Binaries::Greeks::Theta&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h6&gt;Second-order Greeks&lt;/h6&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Math::Business::BlackScholes::Binaries::Greeks::Gamma&lt;/li&gt; &#xA; &lt;li&gt;Math::Business::BlackScholes::Binaries::Greeks::Vanna&lt;/li&gt; &#xA; &lt;li&gt;Math::Business::BlackScholes::Binaries::Greeks::Volga&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;INSTALLATION&lt;/h4&gt; &#xA;&lt;p&gt;To install this module, run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perl Makefile.PL&#xA;make&#xA;make test&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;SUPPORT AND DOCUMENTATION&lt;/h4&gt; &#xA;&lt;p&gt;After installing, you can find documentation for this module with the perldoc command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;perldoc Math::Business::BlackScholes::Binaries::Greeks&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also look for information at:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;RT, CPAN&#39;s request tracker (report bugs here)&#xA;    http://rt.cpan.org/NoAuth/Bugs.html?Dist=Math-Business-BlackScholes-Binaries-Greeks&#xA;&#xA;AnnoCPAN, Annotated CPAN documentation&#xA;    http://annocpan.org/dist/Math-Business-BlackScholes-Binaries-Greeks&#xA;&#xA;CPAN Ratings&#xA;    http://cpanratings.perl.org/d/Math-Business-BlackScholes-Binaries-Greeks&#xA;&#xA;Search CPAN&#xA;    http://search.cpan.org/dist/Math-Business-BlackScholes-Binaries-Greeks/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;LICENSE AND COPYRIGHT&lt;/h4&gt; &#xA;&lt;p&gt;Copyright (C) 2014 binary.com&lt;/p&gt; &#xA;&lt;p&gt;This program is free software; you can redistribute it and/or modify it under the terms of the the Artistic License (2.0). You may obtain a copy of the full license at:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.perlfoundation.org/artistic_license_2_0&#34;&gt;http://www.perlfoundation.org/artistic_license_2_0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Any use, modification, and distribution of the Standard or Modified Versions is governed by this Artistic License. By using, modifying or distributing the Package, you accept this license. Do not use, modify, or distribute the Package, if you do not accept this license.&lt;/p&gt; &#xA;&lt;p&gt;If your Modified Version has been derived from a Modified Version made by someone other than you, you are nevertheless required to ensure that your Modified Version complies with the requirements of this license.&lt;/p&gt; &#xA;&lt;p&gt;This license does not grant you the right to use any trademark, service mark, tradename, or logo of the Copyright Holder.&lt;/p&gt; &#xA;&lt;p&gt;This license includes the non-exclusive, worldwide, free-of-charge patent license to make, have made, use, offer to sell, sell, import and otherwise transfer the Package with respect to any patent claims licensable by the Copyright Holder that are necessarily infringed by the Package. If you institute patent litigation (including a cross-claim or counterclaim) against any party alleging that the Package constitutes direct or contributory patent infringement, then this Artistic License to you shall terminate on the date that such litigation is filed.&lt;/p&gt; &#xA;&lt;p&gt;Disclaimer of Warranty: THE PACKAGE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS &#34;AS IS&#39; AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES. THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT ARE DISCLAIMED TO THE EXTENT PERMITTED BY YOUR LOCAL LAW. UNLESS REQUIRED BY LAW, NO COPYRIGHT HOLDER OR CONTRIBUTOR WILL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING IN ANY WAY OUT OF THE USE OF THE PACKAGE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;</summary>
  </entry>
</feed>