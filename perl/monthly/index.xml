<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-01T02:01:25Z</updated>
  <subtitle>Monthly Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>holbertonschool/Betty</title>
    <updated>2022-10-01T02:01:25Z</updated>
    <id>tag:github.com,2022-10-01:/holbertonschool/Betty</id>
    <link href="https://github.com/holbertonschool/Betty" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Holberton-style C code checker written in Perl&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Betty&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/holbertonschool/Betty&#34;&gt;&lt;img src=&#34;https://travis-ci.org/holbertonschool/Betty.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Run the script &lt;code&gt;install.sh&lt;/code&gt; with &lt;strong&gt;sudo privileges&lt;/strong&gt; to install &lt;code&gt;betty-style&lt;/code&gt; and &lt;code&gt;betty-doc&lt;/code&gt; on your computer, along with the following manuals:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;betty(1)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;betty-style(1)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;betty-doc(1)&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;Please visit the &lt;a href=&#34;https://github.com/holbertonschool/Betty/wiki&#34;&gt;Betty Wiki&lt;/a&gt; for the full specifications of Betty coding and documentation styles.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll also find some references and some tools for common text editors such as Emacs and Atom.&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;Run the following command to check if your code/doc fits the Betty Style (mostly inspired from the Linux Kernel style):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;betty-style file1 [file2 [file3 [...]]]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ShellSession&#34;&gt;betty-doc file1 [file2 [file3 [...]]]&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>SpiderLabs/owasp-modsecurity-crs</title>
    <updated>2022-10-01T02:01:25Z</updated>
    <id>tag:github.com,2022-10-01:/SpiderLabs/owasp-modsecurity-crs</id>
    <link href="https://github.com/SpiderLabs/owasp-modsecurity-crs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OWASP ModSecurity Core Rule Set (CRS) Project (Official Repository)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/travis/spiderlabs/owasp-modsecurity-crs/v3.3/dev?label=v3.3%2Fdev&#34; alt=&#34;Travis build v3.3/dev&#34;&gt; &lt;img src=&#34;https://img.shields.io/travis/spiderlabs/owasp-modsecurity-crs/v3.2/dev?label=v3.2%2Fdev&#34; alt=&#34;Travis build v3.2/dev&#34;&gt; &lt;img src=&#34;https://img.shields.io/travis/spiderlabs/owasp-modsecurity-crs/v3.1/dev?label=v3.1%2Fdev&#34; alt=&#34;Travis build v3.1/dev&#34;&gt; &lt;a href=&#34;https://www.owasp.org/index.php/OWASP_Project_Inventory#tab=Flagship_Projects&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/owasp-flagship%20project-38a047.svg?sanitize=true&#34; alt=&#34;OWASP Flagship&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/1390&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/1390/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;CRS migrated to a new &lt;span&gt;üè†&lt;/span&gt; !&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The OWASP ModSecurity Core Rule Set (CRS) has moved to &lt;a href=&#34;https://github.com/coreruleset/coreruleset&#34;&gt;https://github.com/coreruleset/coreruleset&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A note on this change:&lt;/p&gt; &#xA;&lt;p&gt;This project started at Trustwave SpiderLabs over ten years ago, it was created with the idea of making a free ruleset that anyone can use to get started with ModSecurity. Over time it has grown into a community maintained project that no longer needs our direct support- which is the best you can hope for with such a project: Apart from growing a community dedicated fully to maintaining the CRS project, it also freed us up to focus fully on maintaining ModSecurity the engine.&lt;/p&gt; &#xA;&lt;p&gt;Given that Trustwave SpiderLabs hasn&#39;t been the maintainer of the project for a few years now it made sense for it to have its own home on GitHub. As such, in coordination with the CRS team it has moved to the following location: &lt;a href=&#34;https://github.com/coreruleset/coreruleset&#34;&gt;https://github.com/coreruleset/coreruleset&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project is now archived to retain its history and make sure that no links are broken but it will &lt;strong&gt;NOT&lt;/strong&gt; be maintained at this location so if you&#39;re working directly with GitHub make sure to update your scripts and environments accordingly.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;- Trustwave SpiderLabs&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;OWASP ModSecurity Core Rule Set (CRS)&lt;/h1&gt; &#xA;&lt;p&gt;The OWASP ModSecurity Core Rule Set (CRS) is a set of generic attack detection rules for use with ModSecurity or compatible web application firewalls. The CRS aims to protect web applications from a wide range of attacks, including the OWASP Top Ten, with a minimum of false alerts.&lt;/p&gt; &#xA;&lt;h2&gt;CRS Resources&lt;/h2&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://coreruleset.org/&#34;&gt;OWASP ModSecurity Core Rule Set page&lt;/a&gt; to get introduced to the CRS and view resources on installation, configuration, and working with the CRS.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to the CRS&lt;/h2&gt; &#xA;&lt;p&gt;We strive to make the OWASP ModSecurity CRS accessible to a wide audience of beginner and experienced users. We are interested in hearing any bug reports, false positive alert reports, evasions, usability issues, and suggestions for new detections.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SpiderLabs/owasp-modsecurity-crs/issues&#34;&gt;Create an issue on GitHub&lt;/a&gt; to report a false positive or false negative (evasion). Please include your installed version and the relevant portions of your ModSecurity audit log.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://groups.google.com/a/owasp.org/forum/#!forum/modsecurity-core-rule-set-project&#34;&gt;Sign up for our Google Group&lt;/a&gt; to ask general usage questions and participate in discussions on the CRS. Also &lt;a href=&#34;https://lists.owasp.org/pipermail/owasp-modsecurity-core-rule-set/index&#34;&gt;here&lt;/a&gt; you can find the archives for the previous mailing list.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://owaspslack.com&#34;&gt;Join the #coreruleset channel on OWASP Slack&lt;/a&gt; to chat about the CRS.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2006-2019 Trustwave and contributors. All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;The OWASP ModSecurity Core Rule Set is distributed under Apache Software License (ASL) version 2. Please see the enclosed LICENSE file for full details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jlord/git-it-electron</title>
    <updated>2022-10-01T02:01:25Z</updated>
    <id>tag:github.com,2022-10-01:/jlord/git-it-electron</id>
    <link href="https://github.com/jlord/git-it-electron" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üíª üéì Git-it is a (Mac, Win, Linux) Desktop App for Learning Git and GitHub&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Git-it (Desktop App)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/jlord/git-it-electron&#34;&gt;&lt;img src=&#34;https://travis-ci.org/jlord/git-it-electron.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://standardjs.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-standard-brightgreen.svg?sanitize=true&#34; alt=&#34;js-standard-style&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/1305617/14594613/23873f64-04ed-11e6-9d3b-72f424dd0842.png&#34; alt=&#34;screen shot 2016-04-17 at 10 37 55 pm&#34;&gt; Git-it is a desktop (Mac, Windows and Linux) app that teaches you how to use Git and GitHub on the &lt;a href=&#34;https://en.wikipedia.org/wiki/Command-line_interface&#34;&gt;command line&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;üö©The app includes translations in these languages: Spanish (ES), Spanish (CO), French, Portugese (BR), Ukrainian, Traditional Chinese, Japanese, and Korean. üö©&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Previously it ran &lt;em&gt;in&lt;/em&gt; terminal (the command line application) with a guide online but now the guide &lt;em&gt;is&lt;/em&gt; the app and it runs on your desktop on its own &lt;span&gt;‚ú®&lt;/span&gt; &lt;strong&gt;This will be the only maintained version going forward&lt;/strong&gt; &lt;span&gt;‚û°&lt;/span&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Hello future Forkers, Branchers and Pull Requesters!&lt;/h2&gt; &#xA;&lt;p&gt;This application contains challenges for learning Git and GitHub‚Äîby using &lt;em&gt;real&lt;/em&gt; Git and GitHub, not emulators. You&#39;ll be learning the awesome (and not so scary) command line and GitHub which means when you finish all of the challenges you&#39;ll have &lt;em&gt;real&lt;/em&gt; repositories on your GitHub account and green squares on your &lt;a href=&#34;https://github.com/blog/1360-introducing-contributions&#34;&gt;contribution chart&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jlord/git-it/master/ghcc.png&#34; alt=&#34;contributions&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What to Install&lt;/h2&gt; &#xA;&lt;p&gt;You will need this app, Git-it as well as a text editor. You&#39;ll also of course need Git and the first challenge in Git-it helps you get that set up. But if you want to get a head start, go for it! You&#39;ll continue to use Git and your text editor throughout your bright social coding future.&lt;/p&gt; &#xA;&lt;p&gt;As a part of the challenges you&#39;ll also create a (free) account on GitHub. If you&#39;ve already got one, high-five!&lt;/p&gt; &#xA;&lt;h4&gt;Git&lt;/h4&gt; &#xA;&lt;p&gt;We recommend installing &lt;a href=&#34;http://desktop.github.com&#34;&gt;GitHub Desktop&lt;/a&gt; (free) because it installs Git in the most consistent way across supported operating systems (Windows and Mac). We won&#39;t use the app itself in the challenges (but it is really useful once you get going in Git!), just the Git that it install for you.&lt;/p&gt; &#xA;&lt;p&gt;Note‚ÄîIf you&#39;re using Windows, you should use the &lt;strong&gt;Git Shell&lt;/strong&gt; app as your terminal‚Äîit is installed with GitHub Desktop. In Mac and Linux you can use the app &lt;strong&gt;Terminal&lt;/strong&gt;, which is already on your computer.&lt;/p&gt; &#xA;&lt;h4&gt;Text Editor&lt;/h4&gt; &#xA;&lt;p&gt;I&#39;m quite partial (I&#39;m on the team!) but &lt;a href=&#34;http://atom.io&#34;&gt;Atom&lt;/a&gt; is a great text editor (also free) and it is built on &lt;a href=&#34;http://electron.atom.io&#34;&gt;Electron.js&lt;/a&gt;, just like Git-it. Visit the website and download the version for your operating system. &lt;a href=&#34;https://www.sublimetext.com&#34;&gt;Sublime&lt;/a&gt;, &lt;a href=&#34;https://code.visualstudio.com&#34;&gt;Microsoft VS Code&lt;/a&gt; and &lt;a href=&#34;http://brackets.io&#34;&gt;Adobe Brackets&lt;/a&gt; are other options.&lt;/p&gt; &#xA;&lt;h4&gt;Git-it&lt;/h4&gt; &#xA;&lt;p&gt;You can view the &lt;a href=&#34;http://github.com/jlord/git-it-electron/releases&#34;&gt;releases&lt;/a&gt; section of this repository to find the download for your operating system. Click to download your version. Once it has downloaded to your default Downloads directory, unzip the folder and run the Git-it executable. The executables for Mac, Windows and Linux:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/1305617/14696588/2b10abf8-0731-11e6-945e-f3d57114bce9.png&#34; alt=&#34;executables&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mac&lt;/strong&gt; Right (control) click the Git-it icon, select Open and then Open again. You can drag the icon into your Applications directory if you want, but it&#39;s not required. If needed, more &lt;a href=&#34;https://github.com/jlord/git-it-electron/issues/121#issue-149747488&#34;&gt;detailed installation instructions&lt;/a&gt; can be found in this issue.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt; Double-click the executable.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt; Double-click the executable. If the app isn&#39;t running, &lt;a href=&#34;https://github.com/jlord/git-it-electron/issues/182&#34;&gt;see this issue&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get Started!&lt;/h2&gt; &#xA;&lt;p&gt;Open Git-it and click the button to begin the first challenge. Have your terminal and text editor open, too. Follow along with the instructions in each challenge and use the terminal or editor as instructed.&lt;/p&gt; &#xA;&lt;p&gt;When you&#39;ve completed the steps in a challenge click &#39;Verify&#39;. Depending on the challenge you may need to also select the folder you did your work in for Git-it to verify.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Questions?&lt;/strong&gt; &lt;a href=&#34;http://github.com/jlord/git-it-electron/issues/new&#34;&gt;Open an issue&lt;/a&gt; on this repository.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Want to contribute or build locally?&lt;/strong&gt; See the &lt;a href=&#34;https://raw.githubusercontent.com/jlord/git-it-electron/master/CONTRIBUTING.md&#34;&gt;contributing documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Tips For Getting Started&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Code snippets&lt;/strong&gt; often times look like &lt;code&gt;$ some code-stuff --here&lt;/code&gt;. The dollar sign identifies the line as one a user would enter into the command line, but you don&#39;t actually include it when you type it into terminal. In this case, you&#39;d actually just type &lt;code&gt;some code-stuff --here&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Variables&lt;/strong&gt; are indicated by &lt;code&gt;&amp;lt;VARIABLENAME&amp;gt;&lt;/code&gt; in code snippets. When you actually use the line of code, replace &lt;code&gt;&amp;lt;VARIABLENAME&amp;gt;&lt;/code&gt;, with your variable. For instance to make a new folder in terminal the format is, &lt;code&gt;mkdir &amp;lt;FOLDERNAME&amp;gt;&lt;/code&gt;, so if you wanted to make a folder named &#39;octocat&#39;, you&#39;d type: &lt;code&gt;mkdir octocat&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Command line, terminal and bash&lt;/strong&gt; all basically mean the same thing: the MS-DOS, Doogie Howser looking screen full of words and numbers. It&#39;s awesomely powerful and allows you to control your computer with text commands.&lt;/p&gt; &#xA;&lt;p&gt;You can do a lot of things from your terminal like delete, rename, copy or create files and folders; run scripts and send things back and forth between servers (like the ones storing things on GitHub.com) and your computer (also a server!).&lt;/p&gt;</summary>
  </entry>
</feed>