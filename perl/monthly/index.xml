<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-02T02:49:00Z</updated>
  <subtitle>Monthly Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wet-boew/wet-boew-wpss</title>
    <updated>2022-06-02T02:49:00Z</updated>
    <id>tag:github.com,2022-06-02:/wet-boew/wet-boew-wpss</id>
    <link href="https://github.com/wet-boew/wet-boew-wpss" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Web and Open Data Validator (formerly the WPSS Validation Tool) provides web developers and quality assurance testers the ability to perform a number of web site, web page validation and Open data validation tasks at one time.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Web and Open Data Validator version 6.13.0&lt;/h2&gt; &#xA;&lt;p&gt;The Web and Open Data Validator provides web developers and quality assurance testers the ability to perform a number of web site, web page validation and Open data validation tasks at one time. Web site checking includes&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Accessibility: WCAG 2.0, Deque AXE, ACT Rules, or Pa11y&lt;/li&gt; &#xA; &lt;li&gt;Link checking (e.g. broken links, broken anchors, cross language links)&lt;/li&gt; &#xA; &lt;li&gt;Mark-up validation (HTML, CSS, XML, Javascript)&lt;/li&gt; &#xA; &lt;li&gt;Mobile optimization (based on Yahoo&#39;s best practices)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Open data checking includes&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CSV, JSON, JSON schema and XML validation&lt;/li&gt; &#xA; &lt;li&gt;Content validation based on data dictionary patterns&lt;/li&gt; &#xA; &lt;li&gt;Data value consistency&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Major Changes&lt;/h2&gt; &#xA;&lt;p&gt;This version of the tool no longer works with Perl 5.24 or earlier on Windows. You must upgrade to Perl 5.26 or later. It supports both 32 and 64 bit installations.&lt;/p&gt; &#xA;&lt;h3&gt;Web Tool&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;    - Update HTML5 validator to version 20.6.30 - HTML_VALIDATION&#xA;    - Add testcase profile and checks for ACT rule set https://act-rules.github.io/rules/. &#xA;    - Search for free port to use for markup server task.&#xA;    - Add user agent version/installation details to output tabs.&#xA;    - Add supporting tools (e.g. pa11y) versions to accessibility tab.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Open Data_Tool&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;    - Check that the language appropriate label is used for headings with multiple language specific labels - OD_DATA&#xA;    - Check that heading order matches in language variants of data files - OD_DATA&#xA;    - Add testcase identifier TBS_QRS for TBS Quality Rating System checks.&#xA;    - Use csvlint program to check CSV files - TBS_QRS&#xA;    - Add testcase group profiles option&#xA;    - Abort JSON schema validation if there are too many errors. This avoids the appearance of hanging when &#xA;       validating large JSON files that contain lots of validation errors - OD_VAL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A new Open Data testcase profile “PWGSC OD (core)” is available that eliminates duplicate data and inconsistent data checks from testing. This should be used for datasets that have valid duplicate or inconsistent data cells as this reduces false error messages.&lt;/p&gt; &#xA;&lt;p&gt;Version 6.13.0 contains the following updates and additions&lt;/p&gt; &#xA;&lt;h2&gt;Web&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;    - Don&#39;t use exclusive list for label types that require label, only list exceptions - WCAG_2.0-H44&#xA;    - Check for nested tables in thead, tfoot or th - WCAG_2.0-SC1.3.1&#xA;    - Check for data cells in tables - WCAG_2.0-H51&#xA;    - Check if multiple interface controls (input, button) have the same aria-labelledby reference - WCAG_2.0-ARIA16&#xA;    - Don&#39;t report error on focusable tags with tabindex = -1 if they nested in aria-hidden=&#34;true&#34; - WCAG_2.0-SC4.1.2&#xA;    - Add option in configuration file to delay between fetches of pages from web sites to reduce the load on the web server.&#xA;    - Update list of valid rel attribute values for HTML5 - WCAG_2.0-H88&#xA;    - Update CSS validator to version cssval-20190320&#xA;    - Add testcase profile and checks for ACT rule set https://act-rules.github.io/rules/&#xA;    - Add runtime error messages to STDERR for supporting tools.&#xA;    - Update HTML5 validator to version 20.6.30 - HTML_VALIDATION&#xA;    - Check ChromeDriver version error with headless chrome.&#xA;    - Update Core Subject Thesaurus to December 11, 2020 version - DC Subject&#xA;    - Update the set of valid rel attribute values for tags.&#xA;    - Search for free port to use for markup server task.&#xA;    - Don&#39;t report error for allowed JavaScript in head (e.g. analytics) in mobile checks - JS_BOTTOM&#xA;    - Suppress reporting of invalid schema types and properties. The schema definition file is out of date - SWI_E_RDFA&#xA;    - Don&#39;t check supporting file version numbers for template consistency as there is no single version for &#xA;       all supporting files - SWU_TEMPLATE&#xA;    - Add user agent version/installation details to output tabs.&#xA;    - Add supporting tools (e.g. pa11y) versions to accessibility tab.&#xA;    - Create new testcase group profiles for PSPC Internet, GC Intranet and Intranet.&#xA;    - Check for analytics markers in the HTML markup using patterns rather than just looking for links.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Open Data&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;   - Add runtime error messages to STDERR for supporting tools.&#xA;    - Check that the language appropriate label is used for headings with multiple language specific labels - OD_DATA&#xA;    - Check that heading order matches in language variants of data files - OD_DATA&#xA;    - Do language variant checks only if one of the primary languages (English or French) are found.&#xA;    - Add testcase identifier TBS_QRS for TBS Quality Rating System checks.&#xA;    - Use csvlint program to check CSV files - TBS_QRS&#xA;    - Add testcase profile for TBS Quality Rating System checks&#xA;    - Add user agent version/installation details to output tabs.&#xA;    - Add supporting tools (e.g. pa11y) versions to accessibility tab.&#xA;    - Report missing JSON schema under testcase id TP_PW_OD_VAL.&#xA;    - Add testcase group profiles option.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Web and Open Data Validator Installation on Windows&lt;/h2&gt; &#xA;&lt;p&gt;The tool installer, WPSS_Tool.exe, does NOT include the required Perl or Python installers.&lt;br&gt; Perl and Python must be installed on the workstation prior to installing the WPSS_Tool.&lt;/p&gt; &#xA;&lt;p&gt;Supported versions of Perl include&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Strawberry Perl 5.26 or later (32 or 64 bit) available from &lt;a href=&#34;http://strawberryperl.com&#34;&gt;http://strawberryperl.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Does NOT work with Strawberry Perl versions earlier than 5.26 and does not work with ActiveState Perl&#39;s community release.&lt;/p&gt; &#xA;&lt;p&gt;Supported versions of Python include&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 2.7.6 or newer available from &lt;a href=&#34;https://www.python.org/downloads/windows/&#34;&gt;https://www.python.org/downloads/windows/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Does not support Python 3.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Required version of Java&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The HTML5 validator requires Oracle Java 8 or later and OpenJDK version 11.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The WPSS_Tool has been tested on the following platforms&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows 10 (64 bit), Strawberry Perl 5.26 (64 bit), Python 2.7.13&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The WPSS Tool installer is available as a release in this repository&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wet-boew/wet-boew-wpss/releases/download/6.13.0/WPSS_Tool.exe&#34;&gt;https://github.com/wet-boew/wet-boew-wpss/releases/download/6.13.0/WPSS_Tool.exe&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Chrome Headless User agent&lt;/h4&gt; &#xA;&lt;p&gt;The Chrome headless user agent may be used rather than PhantomJS. The following must be installed in order to use Chrome&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node version 8 or newer - &lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;https://nodejs.org/en/download/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chrome version 69 or newer - &lt;a href=&#34;https://www.google.com/chrome/&#34;&gt;https://www.google.com/chrome/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ChromeDriver node module that matches the Chrome browser version &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;List locally installed chromedriver version ‘npm list chromedriver -g’&lt;/li&gt; &#xA;   &lt;li&gt;List all available chromedriver versions ‘npm view chromedriver versions’&lt;/li&gt; &#xA;   &lt;li&gt;Remove module ‘npm uninstall -g chromedriver’&lt;/li&gt; &#xA;   &lt;li&gt;Install a specific version ‘npm install -g chromedriver@89.0.0’&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Puppeteer core module for node (install from command prompt) &#34;npm install –g puppeteer-core&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If Chrome is not available, the WPSS_Tool will fall back to using PhantomJS and a message will be written to the stdout.txt file.&lt;/p&gt; &#xA;&lt;h4&gt;Pa11y Accessibility Test Tool&lt;/h4&gt; &#xA;&lt;p&gt;The Pa11y accessibility test tool may be run against web pages. The checks cannot be performed on pages behind a login (e.g. applications). A new accessibility testcase profile is available to enable this checking. Details on the Pa11y tool are available at &lt;a href=&#34;https://github.com/pa11y/pa11y&#34;&gt;https://github.com/pa11y/pa11y&lt;/a&gt;. This tool requires&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node version 8 or newer - &lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;https://nodejs.org/en/download/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pa11y module for node (install from command prompt) &#34;npm install –g pa11y&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Deque AXE accessibility tool&lt;/h4&gt; &#xA;&lt;p&gt;The Deque AXE accessibility test tool may be run against web pages. The checks cannot be performed on pages behind a login (e.g. applications). A new accessibility testcase profile is available to enable this checking. Details on the Deque AXE tool are available at&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dequelabs/axe-core&#34;&gt;https://github.com/dequelabs/axe-core&lt;/a&gt; and &lt;a href=&#34;https://github.com/dequelabs/axe-cli&#34;&gt;https://github.com/dequelabs/axe-cli&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This tool requires&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Node version 8 or newer - &lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;https://nodejs.org/en/download/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Deque AXE core module and command line interface (CLI) module. Installed via command prompt. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;npm install @axe-core/cli -g&lt;/li&gt; &#xA;   &lt;li&gt;Install the required chromedriver module (see above).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Web and Open Data Validator Installation on Linux&lt;/h2&gt; &#xA;&lt;p&gt;The tool distribution, WPSS_Tool_Linux.zip, does NOT include the required Perl or Python installers.&lt;br&gt; Perl and Python must be installed on the prior to installing the WPSS_Tool.&lt;/p&gt; &#xA;&lt;p&gt;Supported versions of Perl include&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Perl 5.0 or later (32 or 64 bit).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Supported versions of Python include&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 2.7.6 or newer.&lt;/li&gt; &#xA; &lt;li&gt;Does not support Python 3.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Required version of Java&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The HTML5 validator required Oracle Java 8 or later and OpenJDK version 11.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The WPSS_Tool has been tested on the following platforms&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Redhat, Perl 5.24 (32 bit), Python 2.7.15&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The Linux version has not been tested with headless chrome, pa11y or Deque AXE.&lt;/p&gt; &#xA;&lt;p&gt;The WPSS Tool installer is available as a release in this repository&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wet-boew/wet-boew-wpss/releases/download/6.13.0/WPSS_Tool_Linux.zip&#34;&gt;https://github.com/wet-boew/wet-boew-wpss/releases/download/6.13.0/WPSS_Tool_Linux.zip&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Installation steps&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Unzip the package; &#39;unzip WPSS_Tool_Linux.zip&#39;&lt;/li&gt; &#xA; &lt;li&gt;Go to the installation directory; &#39;cd WPSS_Tool_Linux&#39;&lt;/li&gt; &#xA; &lt;li&gt;Run the install script; &#39;perl install.pl&#39;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Ensembl/ensembl-vep</title>
    <updated>2022-06-02T02:49:00Z</updated>
    <id>tag:github.com,2022-06-02:/Ensembl/ensembl-vep</id>
    <link href="https://github.com/Ensembl/ensembl-vep" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Ensembl Variant Effect Predictor predicts the functional effects of genomic variants&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ensembl-vep&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Ensembl/ensembl-vep/raw/106/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/Ensembl/ensembl-vep.svg?sanitize=true&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/Ensembl/ensembl-vep?branch=106&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/Ensembl/ensembl-vep/badge.svg?branch=106&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/ensemblorg/ensembl-vep&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/build/ensemblorg/ensembl-vep.svg?sanitize=true&#34; alt=&#34;Docker Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/ensemblorg/ensembl-vep&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/ensemblorg/ensembl-vep.svg?sanitize=true&#34; alt=&#34;Docker Hub Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;VEP&lt;/strong&gt; (Variant Effect Predictor) predicts the functional effects of genomic variants.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Haplosaurus&lt;/strong&gt; uses phased genotype data to predict whole-transcript haplotype sequences.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Variant Recoder&lt;/strong&gt; translates between different variant encodings.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Table of contents&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Ensembl/ensembl-vep/release/106/#install&#34;&gt;Installation and requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Ensembl/ensembl-vep/release/106/#vep&#34;&gt;VEP&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Ensembl/ensembl-vep/release/106/#vepusage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Ensembl/ensembl-vep/release/106/#haplo&#34;&gt;Haplosaurus&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Ensembl/ensembl-vep/release/106/#haplousage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Ensembl/ensembl-vep/release/106/#haplooutput&#34;&gt;Output&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Ensembl/ensembl-vep/release/106/#haploREST&#34;&gt;REST&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Ensembl/ensembl-vep/release/106/#haploflags&#34;&gt;Flags&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Ensembl/ensembl-vep/release/106/#recoder&#34;&gt;Variant Recoder&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Ensembl/ensembl-vep/release/106/#recoderusage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Ensembl/ensembl-vep/release/106/#recoderoutput&#34;&gt;Output&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;install&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Installation and requirements&lt;/h3&gt; &#xA;&lt;p&gt;The VEP package requires:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;gcc&lt;/strong&gt;, &lt;strong&gt;g++&lt;/strong&gt; and &lt;strong&gt;make&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Perl&lt;/strong&gt; (&amp;gt;=5.10 recommended, tested on 5.10, 5.14, 5.18, 5.22, 5.26)&lt;/li&gt; &#xA; &lt;li&gt;Perl libraries &lt;a href=&#34;https://metacpan.org/pod/Archive::Zip&#34;&gt;Archive::Zip&lt;/a&gt; and &lt;a href=&#34;https://metacpan.org/pod/DBI&#34;&gt;DBI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The remaining dependencies can be installed using the included &lt;a href=&#34;http://www.ensembl.org/info/docs/tools/vep/script/vep_download.html#installer&#34;&gt;INSTALL.pl&lt;/a&gt; script. Basic instructions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Ensembl/ensembl-vep.git&#xA;cd ensembl-vep&#xA;perl INSTALL.pl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The installer may also be used to check for updates to this and co-dependent packages, simply re-run INSTALL.pl.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;http://www.ensembl.org/info/docs/tools/vep/script/vep_download.html&#34;&gt;documentation&lt;/a&gt; for full installation instructions.&lt;/p&gt; &#xA;&lt;h4&gt;Additional CPAN modules&lt;/h4&gt; &#xA;&lt;p&gt;The following modules are optional but most users will benefit from installing them. We recommend using &lt;a href=&#34;http://search.cpan.org/~miyagawa/Menlo-1.9003/script/cpanm-menlo&#34;&gt;cpanminus&lt;/a&gt; to install.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://search.cpan.org/~michielb/DBD-mysql/lib/DBD/mysql.pm&#34;&gt;DBD::mysql&lt;/a&gt; - required for database access (&lt;code&gt;--database&lt;/code&gt; or &lt;code&gt;--cache&lt;/code&gt; without &lt;code&gt;--offline&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://search.cpan.org/~benbooth/Set-IntervalTree/lib/Set/IntervalTree.pm&#34;&gt;Set::IntervalTree&lt;/a&gt; - required for Haplosaurus, also confers speed updates to VEP&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://search.cpan.org/dist/JSON/&#34;&gt;JSON&lt;/a&gt; - required for writing JSON output&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://search.cpan.org/~nwclark/PerlIO-gzip-0.19/gzip.pm&#34;&gt;PerlIO::gzip&lt;/a&gt; - faster compressed file parsing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://search.cpan.org/~lds/Bio-BigFile-1.07/lib/Bio/DB/BigFile.pm&#34;&gt;Bio::DB::BigFile&lt;/a&gt; - required for reading custom annotation data from BigWig files&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Docker&lt;/h4&gt; &#xA;&lt;p&gt;A docker image for VEP is available from &lt;a href=&#34;https://hub.docker.com/r/ensemblorg/ensembl-vep&#34;&gt;DockerHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;http://www.ensembl.org/info/docs/tools/vep/script/vep_download.html#docker&#34;&gt;documentation&lt;/a&gt; for the Docker installation instructions.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;vep&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;VEP&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a name=&#34;vepusage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./vep -i input.vcf -o out.txt -offline&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;http://www.ensembl.org/info/docs/tools/vep/script/vep_options.html#basic&#34;&gt;documentation&lt;/a&gt; for full command line instructions.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Please report any bugs or issues by &lt;a href=&#34;http://www.ensembl.org/info/about/contact/index.html&#34;&gt;contacting Ensembl&lt;/a&gt; or creating a &lt;a href=&#34;https://github.com/Ensembl/ensembl-vep/issues&#34;&gt;GitHub issue&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;haplo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Haplosaurus&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;haplo&lt;/code&gt; is a local tool implementation of the same functionality that powers the &lt;a href=&#34;http://www.ensembl.org/Homo_sapiens/Transcript/Haplotypes?t=ENST00000304748&#34;&gt;Ensembl transcript haplotypes view&lt;/a&gt;. It takes phased genotypes from a VCF and constructs a pair of haplotype sequences for each overlapped transcript; these sequences are also translated into predicted protein haplotype sequences. Each variant haplotype sequence is aligned and compared to the reference, and an HGVS-like name is constructed representing its differences to the reference.&lt;/p&gt; &#xA;&lt;p&gt;This approach offers an advantage over VEP&#39;s analysis, which treats each input variant independently. By considering the combined change contributed by all the variant alleles across a transcript, the compound effects the variants may have are correctly accounted for.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;haplo&lt;/code&gt; shares much of the same command line functionality with &lt;code&gt;vep&lt;/code&gt;, and can use VEP caches, Ensembl databases, GFF and GTF files as sources of transcript data; all &lt;code&gt;vep&lt;/code&gt; command line flags relating to this functionality work the same with &lt;code&gt;haplo&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;haplousage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;Input data must be a &lt;a href=&#34;http://samtools.github.io/hts-specs/VCFv4.3.pdf&#34;&gt;VCF&lt;/a&gt; containing phased genotype data for at least one individual and file must be sorted by chromosome and genomic position; no other formats are currently supported.&lt;/p&gt; &#xA;&lt;p&gt;When using a VEP cache as the source of transcript annotation, the first time you run &lt;code&gt;haplo&lt;/code&gt; with a particular cache it will spend some time scanning transcript locations in the cache.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./haplo -i input.vcf -o out.txt -cache&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a name=&#34;haplooutput&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Output&lt;/h3&gt; &#xA;&lt;p&gt;The default output format is a simple tab-delimited file reporting all observed non-reference haplotypes. It has the following fields:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Transcript stable ID&lt;/li&gt; &#xA; &lt;li&gt;CDS haplotype name&lt;/li&gt; &#xA; &lt;li&gt;Comma-separated list of &lt;a href=&#34;https://raw.githubusercontent.com/Ensembl/ensembl-vep/release/106/#haploflags&#34;&gt;flags&lt;/a&gt; for CDS haplotype&lt;/li&gt; &#xA; &lt;li&gt;Protein haplotype name&lt;/li&gt; &#xA; &lt;li&gt;Comma-separated list of &lt;a href=&#34;https://raw.githubusercontent.com/Ensembl/ensembl-vep/release/106/#haploflags&#34;&gt;flags&lt;/a&gt; for protein haplotype&lt;/li&gt; &#xA; &lt;li&gt;Comma-separated list of frequency data for protein haplotype&lt;/li&gt; &#xA; &lt;li&gt;Comma-separated list of contributing variants&lt;/li&gt; &#xA; &lt;li&gt;Comma-separated list of sample:count that exhibit this haplotype&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The altered haplotype sequences can be obtained by switching to JSON output using &lt;code&gt;--json&lt;/code&gt; which will display them by default. Each transcript analysed is summarised as a JSON object written to one line of the output file.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/Ensembl/ensembl-vep/release/106/#haploREST&#34;&gt;JSON output&lt;/a&gt; structure matches the format of the &lt;a href=&#34;https://rest.ensembl.org/documentation/info/transcript_haplotypes_get&#34;&gt;transcript haplotype REST endpoint&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You may exclude fields in the JSON from being exported with &lt;code&gt;--dont_export field1,field2&lt;/code&gt;. This may be used, for example, to exclude the full haplotype sequence and aligned sequences from the output with &lt;code&gt;--dont_export seq,aligned_sequences&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note JSON output does not currently include side-loaded frequency data.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a name=&#34;haploREST&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;REST service&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://rest.ensembl.org/documentation/info/transcript_haplotypes_get&#34;&gt;transcript haplotype REST endpoint&lt;/a&gt;. returns arrays of protein_haplotypes and cds_haplotypes for a given transcript. The default haplotype record includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;population_counts&lt;/strong&gt;: the number of times the haplotype is seen in each population&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;population_frequencies&lt;/strong&gt;: the frequency of the haplotype in each population&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;contributing_variants&lt;/strong&gt;: variants contributing to the haplotype&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;diffs&lt;/strong&gt;: differences between the reference and this haplotype&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;hex&lt;/strong&gt;: the md5 hex of this haplotype sequence&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;other_hexes&lt;/strong&gt;: the md5 hex of other related haplotype sequences ( CDSHaplotypes that translate to this ProteinHaplotype or ProteinHaplotype representing the translation of this CDSHaplotype)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;has_indel&lt;/strong&gt;: does the haplotype contain insertions or deletions&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;type&lt;/strong&gt;: the type of haplotype - cds, protein&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: a human readable name for the haplotype (sequence id + REF or a change description)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;flags&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/Ensembl/ensembl-vep/release/106/#haploflags&#34;&gt;flags&lt;/a&gt; for the haplotype&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;frequency&lt;/strong&gt;: haplotype frequency in full sample set&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;count&lt;/strong&gt;: haplotype count in full sample set&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The REST service does not return raw sequences, sample-haplotype assignments and the aligned sequences used to generate differences by default.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;haploflags&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Flags&lt;/h3&gt; &#xA;&lt;p&gt;Haplotypes may be flagged with one or more of the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;indel&lt;/strong&gt;: haplotype contains an insertion or deletion (indel) relative to the reference.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;frameshift:&lt;/strong&gt; haplotype contains at least one indel that disrupts the reading frame of the transcript.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;resolved_frameshift:&lt;/strong&gt; haplotype contains two or more indels whose combined effect restores the reading frame of the transcript.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;stop_changed:&lt;/strong&gt; indicates either a STOP codon is gained (protein truncating variant, PTV) or the existing reference STOP codon is lost.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;deleterious_sift_or_polyphen:&lt;/strong&gt; haplotype contains at least one single amino acid substitution event flagged as deleterious (SIFT) or probably damaging (PolyPhen2).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;bioperl-ext&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;bioperl-ext&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;haplo&lt;/code&gt; can make use of a fast compiled alignment algorithm from the &lt;a href=&#34;https://github.com/bioperl/bioperl-ext&#34;&gt;bioperl-ext&lt;/a&gt; package; this can speed up analysis, particularly in longer transcripts where insertions and/or deletions are introduced. The bioperl-ext package is no longer maintained and requires some tweaking to install. The following instructions install the package in &lt;code&gt;$HOME/perl5&lt;/code&gt;; edit &lt;code&gt;PREFIX=[path]&lt;/code&gt; to change this. You may also need to edit the &lt;code&gt;export&lt;/code&gt; command to point to the path created for the architecture on your machine.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/bioperl/bioperl-ext.git&#xA;cd bioperl-ext/Bio/Ext/Align/&#xA;perl -pi -e&#34;s|(cd libs.+)CFLAGS=\\\&#39;|\$1CFLAGS=\\\&#39;-fPIC |&#34; Makefile.PL&#xA;perl Makefile.PL PREFIX=~/perl5&#xA;make&#xA;make install&#xA;cd -&#xA;export PERL5LIB=${PERL5LIB}:${HOME}/perl5/lib/x86_64-linux-gnu/perl/5.22.1/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If successful the following should print &lt;code&gt;OK&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;perl -MBio::Tools::dpAlign -e&#34;print qq{OK\n}&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;recoder&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Variant Recoder&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;variant_recoder&lt;/code&gt; is a tool for translating between different variant encodings. It accepts as input any format supported by VEP (VCF, variant ID, HGVS), with extensions to allow for parsing of potentially ambiguous HGVS notations. For each input variant, &lt;code&gt;variant_recoder&lt;/code&gt; reports all possible encodings including variant IDs from &lt;a href=&#34;http://www.ensembl.org/info/genome/variation/species/sources_documentation.html&#34;&gt;all sources imported into the Ensembl database&lt;/a&gt; and HGVS (genomic, transcript and protein), reported on Ensembl, RefSeq and LRG sequences.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;recoderusage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;variant_recoder&lt;/code&gt; depends on database access for identifier lookup, and cannot be used in offline mode as per VEP. The output format is JSON and the &lt;a href=&#34;http://search.cpan.org/dist/JSON/&#34;&gt;JSON perl module&lt;/a&gt; is required.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./variant_recoder --id [input_data_string]&#xA;./variant_recoder -i [input_file] --species [species]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a name=&#34;recoderoutput&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Output&lt;/h3&gt; &#xA;&lt;p&gt;Output is a JSON array of objects, one per input variant, with the following keys:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;input&lt;/strong&gt;: input string&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;id&lt;/strong&gt;: variant identifiers&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;hgvsg&lt;/strong&gt;: HGVS genomic nomenclature&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;hgvsc&lt;/strong&gt;: HGVS transcript nomenclature&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;hgvsp&lt;/strong&gt;: HGVS protein nomenclature&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;spdi&lt;/strong&gt;: Genomic SPDI notation&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;vcf_string&lt;/strong&gt;: VCF format (optional)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;var_synonyms&lt;/strong&gt;: Variation synonyms (optional)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;mane_select&lt;/strong&gt;: MANE Select transcripts (optional)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;warnings&lt;/strong&gt;: Warnings generated e.g. for invalid HGVS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Use &lt;code&gt;--pretty&lt;/code&gt; to pre-format and indent JSON output.&lt;/p&gt; &#xA;&lt;p&gt;Example output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./variant_recoder --id &#34;AGT:p.Met259Thr&#34; --pretty&#xA;[&#xA;   {&#xA;     &#34;warnings&#34; : [&#xA;         &#34;Possible invalid use of gene or protein identifier &#39;AGT&#39; as HGVS reference; AGT:p.Met259Thr may resolve to multiple genomic locations&#34;&#xA;      ],&#xA;     &#34;C&#34; : {&#xA;        &#34;input&#34; : &#34;AGT:p.Met259Thr&#34;,&#xA;        &#34;id&#34; : [&#xA;           &#34;rs699&#34;,&#xA;           &#34;CM920010&#34;,&#xA;           &#34;COSV64184214&#34;&#xA;        ],&#xA;        &#34;hgvsg&#34; : [&#xA;           &#34;NC_000001.11:g.230710048A&amp;gt;G&#34;&#xA;        ],&#xA;        &#34;hgvsc&#34; : [&#xA;           &#34;ENST00000366667.6:c.776T&amp;gt;C&#34;,&#xA;           &#34;ENST00000679684.1:c.776T&amp;gt;C&#34;,&#xA;           &#34;ENST00000679738.1:c.776T&amp;gt;C&#34;,&#xA;           &#34;ENST00000679802.1:c.776T&amp;gt;C&#34;,&#xA;           &#34;ENST00000679854.1:n.1287T&amp;gt;C&#34;,&#xA;           &#34;ENST00000679957.1:c.776T&amp;gt;C&#34;,&#xA;           &#34;ENST00000680041.1:c.776T&amp;gt;C&#34;,&#xA;           &#34;ENST00000680783.1:c.776T&amp;gt;C&#34;,&#xA;           &#34;ENST00000681269.1:c.776T&amp;gt;C&#34;,&#xA;           &#34;ENST00000681347.1:n.1287T&amp;gt;C&#34;,&#xA;           &#34;ENST00000681514.1:c.776T&amp;gt;C&#34;,&#xA;           &#34;ENST00000681772.1:c.776T&amp;gt;C&#34;,&#xA;           &#34;NM_001382817.3:c.776T&amp;gt;C&#34;,&#xA;           &#34;NM_001384479.1:c.776T&amp;gt;C&#34;&#xA;        ],&#xA;        &#34;hgvsp&#34; : [&#xA;           &#34;ENSP00000355627.5:p.Met259Thr&#34;,&#xA;           &#34;ENSP00000505981.1:p.Met259Thr&#34;,&#xA;           &#34;ENSP00000505063.1:p.Met259Thr&#34;,&#xA;           &#34;ENSP00000505184.1:p.Met259Thr&#34;,&#xA;           &#34;ENSP00000506646.1:p.Met259Thr&#34;,&#xA;           &#34;ENSP00000504866.1:p.Met259Thr&#34;,&#xA;           &#34;ENSP00000506329.1:p.Met259Thr&#34;,&#xA;           &#34;ENSP00000505985.1:p.Met259Thr&#34;,&#xA;           &#34;ENSP00000505963.1:p.Met259Thr&#34;,&#xA;           &#34;ENSP00000505829.1:p.Met259Thr&#34;,&#xA;           &#34;NP_001369746.2:p.Met259Thr&#34;,&#xA;           &#34;NP_001371408.1:p.Met259Thr&#34;&#xA;        ],&#xA;        &#34;spdi&#34; : [&#xA;           &#34;NC_000001.11:230710047:A:G&#34;&#xA;        ]&#xA;     }&#xA;   }&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a name=&#34;recoderopts&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Options&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;variant_recoder&lt;/code&gt; shares many of the same command line flags as VEP. Others are unique to &lt;code&gt;variant_recoder&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-id|--input_data [input_string]&lt;/code&gt;: a single variant as a string.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-i|--input_file [input_file]&lt;/code&gt;: input file containing one or more variants, one per line. Mixed formats disallowed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--species&lt;/code&gt;: species to use (default: homo_sapiens).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--grch37&lt;/code&gt;: use GRCh37 assembly instead of GRCh38.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--genomes&lt;/code&gt;: set database parameters for &lt;a href=&#34;http://ensemblgenomes.org/&#34;&gt;Ensembl Genomes&lt;/a&gt; species.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--pretty&lt;/code&gt;: write pre-formatted indented JSON.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--fields [field1,field2]&lt;/code&gt;: limit output fields. Comma-separated list, one or more of: &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;hgvsg&lt;/code&gt;, &lt;code&gt;hgvsc&lt;/code&gt;, &lt;code&gt;hgvsp&lt;/code&gt;, &lt;code&gt;spdi&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--vcf_string&lt;/code&gt; : report VCF&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--var_synonyms&lt;/code&gt; : report variation synonyms&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--mane_select&lt;/code&gt; : report MANE Select transcripts in HGVS format&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--host [db_host]&lt;/code&gt;: change database host from default &lt;code&gt;ensembldb.ensembl.org&lt;/code&gt; (UK); geographic mirrors are &lt;code&gt;useastdb.ensembl.org&lt;/code&gt; (US East Coast) and &lt;code&gt;asiadb.ensembl.org&lt;/code&gt; (Asia). &lt;code&gt;--user&lt;/code&gt;, &lt;code&gt;--port&lt;/code&gt; and &lt;code&gt;--pass&lt;/code&gt; may also be set.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--pick&lt;/code&gt;, &lt;code&gt;--per_gene&lt;/code&gt;, &lt;code&gt;--pick_allele&lt;/code&gt;, &lt;code&gt;--pick_allele_gene&lt;/code&gt;, &lt;code&gt;--pick_order&lt;/code&gt;: set and customise transcript selection process, see &lt;a href=&#34;http://www.ensembl.org/info/docs/tools/vep/script/vep_other.html#pick&#34;&gt;VEP documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>elastic/elasticsearch-perl-compat</title>
    <updated>2022-06-02T02:49:00Z</updated>
    <id>tag:github.com,2022-06-02:/elastic/elasticsearch-perl-compat</id>
    <link href="https://github.com/elastic/elasticsearch-perl-compat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A compat layer for migrating from ElasticSearch.pm to the new Elasticsearch.pm&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>binary-com/perl-WebService-Async-SmartyStreets</title>
    <updated>2022-06-02T02:49:00Z</updated>
    <id>tag:github.com,2022-06-02:/binary-com/perl-WebService-Async-SmartyStreets</id>
    <link href="https://github.com/binary-com/perl-WebService-Async-SmartyStreets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Address lookup and verification API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NAME&lt;/h1&gt; &#xA;&lt;p&gt;WebService::Async::SmartyStreets::Address - parses the response from SmartyStreets API&lt;/p&gt; &#xA;&lt;h1&gt;VERSION&lt;/h1&gt; &#xA;&lt;p&gt;version 0.001&lt;/p&gt; &#xA;&lt;h1&gt;SYNOPSIS&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;use WebService::Async::SmartyStreets::Address;&#xA;# Mocking a simple response from SmartyStreets API and parses it with WebService::Async::SmartyStreets::Address&#xA;my $response = WebService::Async::SmartyStreets::Address-&amp;gt;new(&#xA;        metadata =&amp;gt; {&#xA;        latitude =&amp;gt; 101.2131,&#xA;        longitude =&amp;gt; 180.1223,&#xA;        geocode_precision =&amp;gt; &#34;Premise&#34;,&#xA;    },&#xA;    analysis =&amp;gt; {&#xA;        verification_status =&amp;gt; &#34;Partial&#34;,&#xA;        address_precision =&amp;gt; &#34;Premise&#34;,&#xA;    });&#xA;# Accessing the attributes&#xA;print ($response-&amp;gt;status);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;DESCRIPTION&lt;/h1&gt; &#xA;&lt;p&gt;This module parses the response by SmartyStreets API into an object to access them.&lt;/p&gt; &#xA;&lt;h2&gt;Construction&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;WebService::Async::SmartyStreets::Address-&amp;gt;new(&#xA;    input_id =&amp;gt; 12345,&#xA;    organization =&amp;gt; &#39;Beenary&#39;,&#xA;    metadata =&amp;gt; {&#xA;        latitude =&amp;gt; 101.2131,&#xA;        longitude =&amp;gt; 180.1223,&#xA;        geocode_precision =&amp;gt; &#34;Premise&#34;,&#xA;    },&#xA;    analysis =&amp;gt; {&#xA;        verification_status =&amp;gt; &#34;Partial&#34;,&#xA;        address_precision =&amp;gt; &#34;Premise&#34;,&#xA;    });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Sample SmartyStreets API response&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;[&#xA;  {&#xA;    &#34;address1&#34;: &#34;Hainichener Str. 64&#34;,&#xA;    &#34;address2&#34;: &#34;09599 Freiberg&#34;,&#xA;    &#34;components&#34;: {&#xA;      &#34;administrative_area&#34;: &#34;Sachsen&#34;,&#xA;      &#34;sub_administrative_area&#34;: &#34;Früher: Direktionsbezirk Chemnitz&#34;,&#xA;      &#34;country_iso_3&#34;: &#34;DEU&#34;,&#xA;      &#34;locality&#34;: &#34;Freiberg&#34;,&#xA;      &#34;postal_code&#34;: &#34;09599&#34;,&#xA;      &#34;postal_code_short&#34;: &#34;09599&#34;,&#xA;      &#34;premise&#34;: &#34;64&#34;,&#xA;      &#34;premise_number&#34;: &#34;64&#34;,&#xA;      &#34;thoroughfare&#34;: &#34;Hainichener Str.&#34;,&#xA;      &#34;thoroughfare_name&#34;: &#34;Hainichenerstr.&#34;,&#xA;      &#34;thoroughfare_trailing_type&#34;: &#34;Str.&#34;&#xA;    },&#xA;    &#34;metadata&#34;: {&#xA;      &#34;latitude&#34;: 50.92221,&#xA;      &#34;longitude&#34;: 13.32259,&#xA;      &#34;geocode_precision&#34;: &#34;Premise&#34;,&#xA;      &#34;max_geocode_precision&#34;: &#34;DeliveryPoint&#34;,&#xA;      &#34;address_format&#34;: &#34;thoroughfare premise|postal_code locality&#34;&#xA;    },&#xA;    &#34;analysis&#34;: {&#xA;      &#34;verification_status&#34;: &#34;Verified&#34;,&#xA;      &#34;address_precision&#34;: &#34;Premise&#34;,&#xA;      &#34;max_address_precision&#34;: &#34;DeliveryPoint&#34;&#xA;    }&#xA;  }&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Attributes&lt;/h1&gt; &#xA;&lt;p&gt;All attributes that is parsed includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;input_id&lt;/li&gt; &#xA; &lt;li&gt;organization&lt;/li&gt; &#xA; &lt;li&gt;latitude&lt;/li&gt; &#xA; &lt;li&gt;longitude&lt;/li&gt; &#xA; &lt;li&gt;geocode_precision&lt;/li&gt; &#xA; &lt;li&gt;max_geocode_precision&lt;/li&gt; &#xA; &lt;li&gt;address_format&lt;/li&gt; &#xA; &lt;li&gt;verification_status&lt;/li&gt; &#xA; &lt;li&gt;address_precision&lt;/li&gt; &#xA; &lt;li&gt;max_address_precision&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more information about the attributes, click &lt;a href=&#34;https://smartystreets.com/docs/cloud/international-street-api&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Methods&lt;/h1&gt; &#xA;&lt;h2&gt;status_at_least&lt;/h2&gt; &#xA;&lt;p&gt;Checks if the returned response at least hits a certain level (in terms of score).&lt;/p&gt; &#xA;&lt;h2&gt;accuracy_at_least&lt;/h2&gt; &#xA;&lt;p&gt;Checks if the returned response at least hits a certain accuracy (in terms of score). Instantly returns 0 if the status is lower than &#39;partial&#39;.&lt;/p&gt; &#xA;&lt;h1&gt;Attributes&lt;/h1&gt; &#xA;&lt;h2&gt;input_id&lt;/h2&gt; &#xA;&lt;p&gt;Returns the input_id parsed.&lt;/p&gt; &#xA;&lt;h2&gt;organization&lt;/h2&gt; &#xA;&lt;p&gt;Returns the organization parsed.&lt;/p&gt; &#xA;&lt;h2&gt;latitude&lt;/h2&gt; &#xA;&lt;p&gt;Returns the latitude parsed.&lt;/p&gt; &#xA;&lt;h2&gt;longitude&lt;/h2&gt; &#xA;&lt;p&gt;Returns the latitude parsed.&lt;/p&gt; &#xA;&lt;h2&gt;geocode_precision&lt;/h2&gt; &#xA;&lt;p&gt;Returns the geocode_precision parsed.&lt;/p&gt; &#xA;&lt;h2&gt;max_geocode_precision&lt;/h2&gt; &#xA;&lt;p&gt;Returns the max_geocode_precision parsed.&lt;/p&gt; &#xA;&lt;h2&gt;address_format&lt;/h2&gt; &#xA;&lt;p&gt;Returns the value of address_format parsed.&lt;/p&gt; &#xA;&lt;h2&gt;status&lt;/h2&gt; &#xA;&lt;p&gt;Returns the value of verification_status parsed.&lt;/p&gt; &#xA;&lt;p&gt;The value returned should be either:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;none&lt;/li&gt; &#xA; &lt;li&gt;ambiguous&lt;/li&gt; &#xA; &lt;li&gt;partial&lt;/li&gt; &#xA; &lt;li&gt;verified&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;address_precision&lt;/h2&gt; &#xA;&lt;p&gt;Returns the value of address_precision parsed.&lt;/p&gt; &#xA;&lt;h2&gt;max_address_precision&lt;/h2&gt; &#xA;&lt;p&gt;Returns the value of max_address_precision parsed.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;NAME&lt;/h1&gt; &#xA;&lt;p&gt;WebService::Async::SmartyStreets;&lt;/p&gt; &#xA;&lt;h1&gt;SYNOPSIS&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;my $loop = IO::Async::Loop-&amp;gt;new;&#xA;$loop-&amp;gt;add(&#xA;    my $ss = WebService::Async::SmartyStreets-&amp;gt;new(&#xA;        # International token&#xA;        auth_id =&amp;gt; &#39;...&#39;,&#xA;        token =&amp;gt; &#39;...&#39;,&#xA;        api_choice =&amp;gt; &#39;...&#39;,&#xA;    )&#xA;);&#xA;async sub {&#xA;    my $addr = await $ss-&amp;gt;verify(&#xA;        # insert address here&#xA;    );&#xA;}-&amp;gt;get;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;DESCRIPTION&lt;/h1&gt; &#xA;&lt;p&gt;This class calls the SmartyStreets API and parse the response to &lt;code&gt;WebService::Async::SmartyStreets::Address&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;METHODS&lt;/h1&gt; &#xA;&lt;h2&gt;verify&lt;/h2&gt; &#xA;&lt;p&gt;Makes connection to SmartyStreets API and parses the response into &lt;code&gt;WebService::Async::SmartyStreets::Address&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Takes the following named parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;args - address parameters in hash (See &lt;code&gt;WebService::Async::SmartyStreets/verify_international&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;args consists of the following parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;country - country &lt;em&gt;[COMPULSORY]&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;address1 - address line 1&lt;/li&gt; &#xA; &lt;li&gt;address2 - address line 2&lt;/li&gt; &#xA; &lt;li&gt;organization - name of organization (usually building names)&lt;/li&gt; &#xA; &lt;li&gt;locality - city&lt;/li&gt; &#xA; &lt;li&gt;administrative_area - state&lt;/li&gt; &#xA; &lt;li&gt;postal_code - post code&lt;/li&gt; &#xA; &lt;li&gt;geocode - true or false&lt;/li&gt; &#xA; &lt;li&gt;api_choice - &lt;em&gt;[OPTIONAL]&lt;/em&gt; will overide the api_choice in config&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;get_decoded_data&lt;/h2&gt; &#xA;&lt;p&gt;Parses the response give by SmartyStreets&lt;/p&gt; &#xA;&lt;p&gt;More information of the resposne can be seen in &lt;a href=&#34;https://smartystreets.com/docs/cloud/international-street-api&#34;&gt;SmartyStreets Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Returns an arrayref of hashrefs which the keys corresponds to &lt;code&gt;WebService::Async::SmartyStreets::Address&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;configure&lt;/h2&gt; &#xA;&lt;p&gt;configures the class with auth_id and token.&lt;/p&gt; &#xA;&lt;h2&gt;auth_id&lt;/h2&gt; &#xA;&lt;p&gt;Returns auth_id.&lt;/p&gt; &#xA;&lt;h2&gt;token&lt;/h2&gt; &#xA;&lt;p&gt;Returns token.&lt;/p&gt; &#xA;&lt;h2&gt;api_choice&lt;/h2&gt; &#xA;&lt;p&gt;Returns api_choice.&lt;/p&gt; &#xA;&lt;h2&gt;ua&lt;/h2&gt; &#xA;&lt;p&gt;Accessor for the &lt;code&gt;Net::Async::HTTP&lt;/code&gt; instance which will be used for SmartyStreets API requests.&lt;/p&gt; &#xA;&lt;h1&gt;AUTHOR&lt;/h1&gt; &#xA;&lt;p&gt;Binary.com&lt;/p&gt;</summary>
  </entry>
</feed>