<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Perl Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-04-01T02:02:11Z</updated>
  <subtitle>Monthly Trending of Perl in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>quran/quran.com-images</title>
    <updated>2025-04-01T02:02:11Z</updated>
    <id>tag:github.com,2025-04-01:/quran/quran.com-images</id>
    <link href="https://github.com/quran/quran.com-images" rel="alternate"></link>
    <summary type="html">&lt;p&gt;images using fonts from King Fahed Complex / qurancomplex.org&lt;/p&gt;&lt;hr&gt;&lt;p&gt;بسم الله الرحمن الرحيم &lt;br&gt;&lt;em&gt;In the name of Allah, Most Gracious, Most Merciful&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Quran Image Generator&lt;/h1&gt; &#xA;&lt;p&gt;These are a set of scripts that generate Quran page images based on the old madani fonts provided by the King Fahd Quran Complex in Saudi Arabia. They are currently being used in quran.com and its mobile apps.&lt;/p&gt; &#xA;&lt;p&gt;This script outputs images, and also updates a database with the bounds of each of the generated glyphs (allowing apps to highlight individual words or verses).&lt;/p&gt; &#xA;&lt;p&gt;The code is copyleft GPL (read: free) but the actual fonts and pages (in the &lt;code&gt;res/fonts&lt;/code&gt; directory) belong to the &lt;a href=&#34;http://www.qurancomplex.com&#34;&gt;King Fahd Quran Complex in Saudia Arabia&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;Following prerequisites are required before instructions below can work. I tried this on my windows box (no reason to believe it will not work on other platform as long as you use the right tools for this platform)&lt;/p&gt; &#xA;&lt;h4&gt;Required Packages&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ppm install dmake&lt;/li&gt; &#xA; &lt;li&gt;ppm install dbd-mysql&lt;/li&gt; &#xA; &lt;li&gt;ppm install yaml&lt;/li&gt; &#xA; &lt;li&gt;Go to your perl package manager and add &#39;Mojo-Log-More&#39; package and all dependencies.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Required Software&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install MySQL server and tools.&lt;/li&gt; &#xA; &lt;li&gt;Add mysql.exe path to system path (convenience)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Notes about following installation summary&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you installed dmake, replace all &#39;make&#39; in commands below with &#39;dmake&#39;&lt;/li&gt; &#xA; &lt;li&gt;Note that there is no space between -p and password, e.g.: -pMyPasswor&lt;/li&gt; &#xA; &lt;li&gt;Replace &#39;&amp;lt; sql/database.sql&#39; with &#39;-Dnextgen &amp;lt; sql/database.sql&#39; - otherwise you&#39;ll get an error. &#39;nextgen&#39; is the database name.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Now you should be good to go with the following instructions&lt;/p&gt; &#xA;&lt;h2&gt;Installation Summary&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;perl Makefile.PL&#xA;make&#xA;make install&#xA;mysql -u root -p your_password &amp;lt; sql/schema.sql&#xA;mysql -u root -p your_password &amp;lt; sql/database.sql&#xA;mysql -u root -p your_password -e &#34;create user &#39;nextgen&#39;@&#39;localhost&#39; identified by &#39;nextgen&#39;&#34;&#xA;mysql -u root -p your_password -e &#34;grant all privileges on nextgen.* to &#39;nextgen&#39;@&#39;localhost&#39;&#34;&#xA;mysql -u root -p your_password -e &#34;flush privileges&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker installation&lt;/h2&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; and &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Docker Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Build and run services (mysql and perl libs):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run scripts (see Usage section below) use the &lt;code&gt;gen&lt;/code&gt; service:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose run gen /app/script/generate.pl --output ./output/ ...&#xA;docker-compose run gen zopflipng --prefix=comp/ ... ./output/*.png&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Stop sevices when done:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose down&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that mysql data is persisted on the host as a docker volume. You must set the &lt;code&gt;--output&lt;/code&gt; option value to &lt;code&gt;./output/&lt;/code&gt; to persist the output on the host machine. Any other output path will be local to the container.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;generate page 50 with a width of 1300:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;./script/generate.pl --width 1300 --output ./output/ --pages 50&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;generate pages 1 through 3 with a width of 1300:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;./script/generate.pl --width 1300 --output ./output/ --pages 1..3&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Compression&lt;/h2&gt; &#xA;&lt;p&gt;make sure to run the images through &lt;a href=&#34;https://imageoptim.com&#34;&gt;ImageOptim&lt;/a&gt; or through &lt;a href=&#34;https://github.com/google/zopfli&#34;&gt;zopflipng&lt;/a&gt; to get optimized images.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;zopflipng --prefix=out/ --lossy_transparent --lossy_8bit --splitting=2 --iterations=100 *.png&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Ayah by ayah images&lt;/h2&gt; &#xA;&lt;p&gt;For generating ayah by ayah images, see our &lt;a href=&#34;https://github.com/quran/quran.com-images/tree/legacy&#34;&gt;legacy branch&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>DGFiP/Test-Compta-Demat</title>
    <updated>2025-04-01T02:02:11Z</updated>
    <id>tag:github.com,2025-04-01:/DGFiP/Test-Compta-Demat</id>
    <link href="https://github.com/DGFiP/Test-Compta-Demat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ce logiciel permet de contrôler le respect des normes des fichiers d&#39;écritures comptables (FEC) conformément aux dispositions de l&#39;article A.47 A-1 du livre des procédures fiscales.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Test-Compta-Demat&lt;/h1&gt; &#xA;&lt;p&gt;Copyright 2014 Direction Générale des Finances Publiques - France&lt;/p&gt; &#xA;&lt;p&gt;Ce logiciel permet de contrôler le respect des normes des fichiers d&#39;écritures comptables (FEC) conformément aux dispositions de l&#39;article A.47 A-1 du livre des procédures fiscales.&lt;/p&gt; &#xA;&lt;p&gt;Ce logiciel est régi par la licence CeCILL V2.1 soumise au droit français et respectant les principes de diffusion des logiciels libres. Vous pouvez utiliser, modifier et/ou redistribuer ce programme sous les conditions de la licence CeCILL V2.1 telle que diffusée par le CEA, le CNRS et l&#39;INRIA sur le site &#34;&lt;a href=&#34;http://www.cecill.info&#34;&gt;http://www.cecill.info&lt;/a&gt;&#34;.&lt;/p&gt; &#xA;&lt;h1&gt;Récupération des sources du programme&lt;/h1&gt; &#xA;&lt;p&gt;Pour les visualiser se rendre dans le dossier src/. Les sources utilisées sont disponibles pour adaptation sur des environnements différents. Pour cela, cloner le dépôt git (cf doc de git).&lt;/p&gt; &#xA;&lt;h1&gt;Récupération des distributions Windows&lt;/h1&gt; &#xA;&lt;p&gt;Le programme est disponible sous la forme d&#39;une distribution exécutable livrée dans une archive autoextractive.&lt;/p&gt; &#xA;&lt;h2&gt;Version windows 32 bits&lt;/h2&gt; &#xA;&lt;p&gt;Cliquer sur release pour voir les exécutables windows puis cliquer sur le bouton vert qui correspond à la version windows (x86.exe) pour le télécharger.&lt;/p&gt; &#xA;&lt;h2&gt;Version spécifique pour windows 64 bits :&lt;/h2&gt; &#xA;&lt;p&gt;Cliquer sur release pour voir les exécutables windows puis cliquer sur le bouton vert qui correspond à la version windows en 64 bits (x86_64.exe) pour le télécharger.&lt;/p&gt; &#xA;&lt;h1&gt;Documentations&lt;/h1&gt; &#xA;&lt;p&gt;voir le contenu du dossier doc : pour visualiser un pdf, il faut le télécharger (cliquer sur View Raw) puis ouvrir le fichier téléchargé.&lt;/p&gt;</summary>
  </entry>
</feed>