<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-03T01:41:37Z</updated>
  <subtitle>Weekly Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>DataTables/DataTables</title>
    <updated>2025-08-03T01:41:37Z</updated>
    <id>tag:github.com,2025-08-03:/DataTables/DataTables</id>
    <link href="https://github.com/DataTables/DataTables" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tables plug-in for jQuery&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Legacy repository&lt;/h1&gt; &#xA;&lt;p&gt;Please note that this is a &lt;strong&gt;legacy repo&lt;/strong&gt; for DataTables. The main source repo &lt;a href=&#34;https://github.com/DataTables/DataTablesSrc&#34;&gt;is DataTables/DataTablesSrc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Our distribution repos (for NPM, Nuget, etc packages) are the &lt;code&gt;DataTables/Dist-*&lt;/code&gt; repos - e.g. &lt;a href=&#34;https://github.com/DataTables/Dist-DataTables&#34;&gt;DataTables/Dist-DataTables&lt;/a&gt;. Each distribution repo has a core Javascript file or styling for DataTables or an extension. Please use our &lt;a href=&#34;https://datatables.net/download&#34;&gt;download builder&lt;/a&gt; to obtain the files you need, including for NPM, Nuget, CDN and download.&lt;/p&gt; &#xA;&lt;h1&gt;DataTables plug-in for jQuery&lt;/h1&gt; &#xA;&lt;p&gt;DataTables is a table enhancing plug-in for the &lt;a href=&#34;https://raw.githubusercontent.com/jquery.com&#34;&gt;jQuery&lt;/a&gt; Javascript library, adding sorting, paging and filtering abilities to plain HTML tables with minimal effort. The stated goal of DataTables is:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;To enhance the accessibility of data in HTML tables.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To meet this goal, DataTables is developed with two distinct groups of users in mind:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;You the developers using DataTables. For developers DataTables provides a wide array of options for how data should be obtained, displayed and acted upon, along with an extensive API for accessing and manipulating the table.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;End users. For those using the interface DataTables presents, actions to get the most from the information contained in tables, such as sorting and filtering, along with paging and scrolling of the data in table, are easy to use, intuitive and fast.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing DataTables&lt;/h2&gt; &#xA;&lt;p&gt;To use DataTables, the primary way to obtain the software is to use the &lt;a href=&#34;https://raw.githubusercontent.com/datatables.net/download&#34;&gt;DataTables downloader&lt;/a&gt;. You can also include the individual files from the &lt;a href=&#34;https://raw.githubusercontent.com/cdn.datatables.net&#34;&gt;DataTables CDN&lt;/a&gt;. See the &lt;a href=&#34;https://raw.githubusercontent.com/datatables.net/manual/installation&#34;&gt;documentation&lt;/a&gt; for full details.&lt;/p&gt; &#xA;&lt;h3&gt;NPM and Bower&lt;/h3&gt; &#xA;&lt;p&gt;If you prefer to use a package manager such as NPM or Bower, distribution repositories are available with software built from this repository under the name &lt;code&gt;datatables.net&lt;/code&gt;. Styling packages for Bootstrap, Foundation and other styling libraries are also available by adding a suffix to the package name.&lt;/p&gt; &#xA;&lt;p&gt;Please see the DataTables &lt;a href=&#34;https://raw.githubusercontent.com/datatables.net/download/npm&#34;&gt;NPM&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/datatables.net/download/bower&#34;&gt;Bower&lt;/a&gt; installation pages for further information. The &lt;a href=&#34;https://raw.githubusercontent.com/datatables.net/manual/installation&#34;&gt;DataTables installation manual&lt;/a&gt; also has details on how to use package managers with DataTables.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;In its simplest case, DataTables can be initialised with a single line of Javascript:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;$(&#39;table&#39;).dataTable();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;where the jQuery selector is used to obtain a reference to the table you want to enhance with DataTables. Optional configuration parameters can be passed in to DataTables to have it perform certain actions by using a configuration object as the parameter passed in to the DataTables constructor. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;$(&#39;table&#39;).dataTable( {&#xA;  paginate: false,&#xA;  scrollY: 300&#xA;} );&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;will disable paging and enable scrolling.&lt;/p&gt; &#xA;&lt;p&gt;A full list of the options available for DataTables are available in the &lt;a href=&#34;https://raw.githubusercontent.com/datatables.net&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Full documentation of the DataTables options, API and plug-in interface are available on the &lt;a href=&#34;https://raw.githubusercontent.com/datatables.net&#34;&gt;DataTables web-site&lt;/a&gt;. The site also contains information on the wide variety of plug-ins that are available for DataTables, which can be used to enhance and customise your table even further.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Support for DataTables is available through the &lt;a href=&#34;https://raw.githubusercontent.com/datatables.net/forums&#34;&gt;DataTables forums&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/datatables.net/support&#34;&gt;commercial support options&lt;/a&gt; are available.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;DataTables is release under the &lt;a href=&#34;https://raw.githubusercontent.com/datatables.net/license&#34;&gt;MIT license&lt;/a&gt;. You are free to use, modify and distribute this software, as long as the copyright header is left intact (specifically the comment block which starts with &lt;code&gt;/*!&lt;/code&gt;).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>stripe-samples/checkout-one-time-payments</title>
    <updated>2025-08-03T01:41:37Z</updated>
    <id>tag:github.com,2025-08-03:/stripe-samples/checkout-one-time-payments</id>
    <link href="https://github.com/stripe-samples/checkout-one-time-payments" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Use Checkout to quickly collect one-time payments.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Accept payments with Stripe Checkout&lt;/h1&gt; &#xA;&lt;p&gt;This sample shows you how to integrate with Stripe &lt;a href=&#34;https://docs.stripe.com/checkout&#34;&gt;Checkout&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Building a payment form UI from scratch is difficult -- input field validation, error message handing, and localization are just a few things to think about when designing a simple checkout flow.&lt;/p&gt; &#xA;&lt;p&gt;We built &lt;a href=&#34;https://docs.stripe.com/payments/checkout&#34;&gt;Checkout&lt;/a&gt; to do that work for you so now you can focus on building the best storefront experience for your customers.&lt;/p&gt; &#xA;&lt;p&gt;Once your customer is ready to pay, use &lt;a href=&#34;https://github.com/stripe/stripe-js&#34;&gt;Stripe.js&lt;/a&gt; to redirect them to the URL of your Stripe hosted payment page. ü•≥&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://checkout.stripe.dev/&#34;&gt;Live demo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The demo is running in test mode -- use &lt;code&gt;4242424242424242&lt;/code&gt; as a test card number with any CVC + future expiration date.&lt;/p&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;4000002500003155&lt;/code&gt; test card number to trigger a 3D Secure challenge flow.&lt;/p&gt; &#xA;&lt;p&gt;Read more about testing on Stripe at &lt;a href=&#34;https://stripe.com/docs/testing&#34;&gt;https://stripe.com/docs/testing&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;details open&gt;&#xA; &lt;summary&gt;USD Cards Demo&lt;/summary&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/stripe-samples/checkout-one-time-payments/main/demo-gifs/checkout-demo.gif&#34; alt=&#34;A gif of the Checkout payment page rendering&#34; align=&#34;center&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;EUR Cards &amp;amp; iDEAL Demo&lt;/summary&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/stripe-samples/checkout-one-time-payments/main/demo-gifs/checkout-demo-ideal.gif&#34; alt=&#34;A gif of the Checkout payment page rendering&#34; align=&#34;center&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;MYR Cards &amp;amp; FPX Demo&lt;/summary&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/stripe-samples/checkout-one-time-payments/main/demo-gifs/checkout-demo-fpx.gif&#34; alt=&#34;A gif of the Checkout payment page rendering&#34; align=&#34;center&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üåç Localization in different languages&lt;/li&gt; &#xA; &lt;li&gt;üçé‚åöÔ∏è Built-in support for Apple Pay and Google Pay&lt;/li&gt; &#xA; &lt;li&gt;üîí Built-in dynamic 3D Secure (ready for SCA)&lt;/li&gt; &#xA; &lt;li&gt;üßæüíµ Support for various payment methods. See the &lt;a href=&#34;https://docs.stripe.com/payments/checkout/payment-methods&#34;&gt;docs&lt;/a&gt; for details.&lt;/li&gt; &#xA; &lt;li&gt;üç® HTML + Vanilla JavaScript as well as ‚öõÔ∏è React clients&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more features see the &lt;a href=&#34;https://docs.stripe.com/payments/checkout&#34;&gt;Checkout documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- prettier-ignore --&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;‚úÖ&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;üî® &lt;strong&gt;Prebuilt checkout page.&lt;/strong&gt; Create a payment page that is customizable with your business&#39; name and logo.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;üî¢ &lt;strong&gt;Dynamic checkout amounts.&lt;/strong&gt; Dynamically define product amounts rather than relying on predefined Prices.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;‚åõ &lt;strong&gt;Capture payments later.&lt;/strong&gt; Optionally split the capture and authorization steps to place a hold on the card and charge later.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;How to run locally&lt;/h2&gt; &#xA;&lt;p&gt;This sample includes 8 server implementations in Java, JavaScript (Node), PHP, PHP-Slim, Python, Ruby, .NET, and Go. All servers implement the same routes for the client to communicate with. There is a HTML + Vanilla JavaScript as well as a React client implemention available.&lt;/p&gt; &#xA;&lt;p&gt;Follow the steps below to run locally.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Clone and configure the sample&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Stripe CLI is the fastest way to clone and configure a sample to run locally.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Using the Stripe CLI&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you haven&#39;t already installed the CLI, follow the &lt;a href=&#34;https://docs.stripe.com/stripe-cli#install&#34;&gt;installation steps&lt;/a&gt;. The CLI is useful for cloning samples and locally testing webhooks and Stripe integrations.&lt;/p&gt; &#xA;&lt;p&gt;In your terminal, run the Stripe CLI command to clone the sample:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;stripe samples create checkout-one-time-payments&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The CLI will walk you through picking your integration type, server and client languages, and configuring your &lt;code&gt;.env&lt;/code&gt; config file with your Stripe API keys.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Installing and cloning manually&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you do not want to use the Stripe CLI, you can manually clone and configure the sample yourself:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/stripe-samples/checkout-one-time-payments&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Copy the .env.example file into a file named .env in the folder of the server you want to use. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp .env.example server/node/.env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will need a Stripe account in order to run the demo. Once you set up your account, go to the Stripe &lt;a href=&#34;https://docs.stripe.com/development#api-keys&#34;&gt;developer dashboard&lt;/a&gt; to find your API keys.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;STRIPE_PUBLISHABLE_KEY=&amp;lt;replace-with-your-publishable-key&amp;gt;&#xA;STRIPE_SECRET_KEY=&amp;lt;replace-with-your-secret-key&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The other environment variables are configurable:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;STATIC_DIR&lt;/code&gt; tells the server where the client files are located and does not need to be modified unless you move the server files.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;DOMAIN&lt;/code&gt; is the domain of your website, where Checkout will redirect back to after the customer completes the payment on the Checkout page.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Create a Price&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://shields.io/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/REQUIRED-TRUE-ORANGE.svg?sanitize=true&#34; alt=&#34;Required&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can create Products and Prices in the Dashboard or with the API. This sample requires a Price to run. Once you&#39;ve created a Price, and add its ID to your &lt;code&gt;.env&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;PRICE&lt;/code&gt; is the ID of a &lt;a href=&#34;https://docs.stripe.com/api/prices/create&#34;&gt;Price&lt;/a&gt; for your product. A Price has a unit amount and currency.&lt;/p&gt; &#xA;&lt;p&gt;You can quickly create a Price with the Stripe CLI like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;stripe prices create --unit-amount 500 --currency usd -d &#34;product_data[name]=demo&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;With Stripe Tax&lt;/summary&gt; Stripe Tax lets you calculate and collect sales tax, VAT and GST with one line of code. &#xA; &lt;p&gt;Before creating a price, make sure you have Stripe Tax set up in the dashboard: &lt;a href=&#34;https://docs.stripe.com/tax/set-up&#34;&gt;Docs - Set up Stripe Tax&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Stripe needs to know what kind of product you are selling to calculate the taxes. For this example we will submit a tax code describing what kind of product is used: &lt;code&gt;txcd_10000000&lt;/code&gt; which is &#39;General - Electronically Supplied Services&#39;. You can find a list of all tax codes here: &lt;a href=&#34;https://docs.stripe.com/tax/tax-codes&#34;&gt;Available tax codes&lt;/a&gt;. If you leave the tax code empty, Stripe will use the default one from your &lt;a href=&#34;https://dashboard.stripe.com/test/settings/tax&#34;&gt;Tax settings&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;stripe products create \&#xA;  --name=&#34;demo&#34; \&#xA;  --tax-code=&#34;txcd_10000000&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;From the response, copy the &lt;code&gt;id&lt;/code&gt; and create a price. The tax behavior can be either &lt;code&gt;inclusive&lt;/code&gt; or &lt;code&gt;exclusive&lt;/code&gt;. For our example, we are using &lt;code&gt;exclusive&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;stripe prices create \&#xA;  --unit-amount=500 \&#xA;  --currency=usd \&#xA;  --tax-behavior=exclusive \&#xA;  --product=&amp;lt;INSERT_ID, like prod_ABC123&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;More Information: &lt;a href=&#34;https://docs.stripe.com/tax/checkout#product-and-price-setup&#34;&gt;Docs - Update your Products and Prices&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;Which will return the json:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;id&#34;: &#34;price_1Hh1ZeCZ6qsJgndJaX9fauRl&#34;,&#xA;  &#34;object&#34;: &#34;price&#34;,&#xA;  &#34;active&#34;: true,&#xA;  &#34;billing_scheme&#34;: &#34;per_unit&#34;,&#xA;  &#34;created&#34;: 1603841250,&#xA;  &#34;currency&#34;: &#34;usd&#34;,&#xA;  &#34;livemode&#34;: false,&#xA;  &#34;lookup_key&#34;: null,&#xA;  &#34;metadata&#34;: {&#xA;  },&#xA;  &#34;nickname&#34;: null,&#xA;  &#34;product&#34;: &#34;prod_IHalmba0p05ZKD&#34;,&#xA;  &#34;recurring&#34;: null,&#xA;  &#34;tiers_mode&#34;: null,&#xA;  &#34;transform_quantity&#34;: null,&#xA;  &#34;type&#34;: &#34;one_time&#34;,&#xA;  &#34;unit_amount&#34;: 500,&#xA;  &#34;unit_amount_decimal&#34;: &#34;500&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Take the Price ID, in the example case &lt;code&gt;price_1Hh1ZeCZ6qsJgndJaX9fauRl&lt;/code&gt;, and set the environment variable in &lt;code&gt;.env&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;PRICE=price_1Hh1ZeCZ6qsJgndJaX9fauRl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;3. Follow the server instructions on how to run&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Pick the server language you want and follow the instructions in the server folder README on how to run.&lt;/p&gt; &#xA;&lt;p&gt;For example, if you want to run the Node server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd server/node &#xA;# There&#39;s a README in this folder with instructions to run the server and how to enable Stripe Tax.&#xA;npm install&#xA;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re running the react client, then the sample will run in the browser at &lt;code&gt;localhost:3000&lt;/code&gt; otherwise visit &lt;code&gt;localhost:4242&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;4. [Optional] Run a webhook locally&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can use the Stripe CLI to easily spin up a local webhook.&lt;/p&gt; &#xA;&lt;p&gt;First &lt;a href=&#34;https://docs.stripe.com/stripe-cli&#34;&gt;install the CLI&lt;/a&gt; and &lt;a href=&#34;https://docs.stripe.com/stripe-cli#link-account&#34;&gt;link your Stripe account&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;stripe listen --forward-to localhost:4242/webhook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The CLI will print a webhook secret key to the console. Set &lt;code&gt;STRIPE_WEBHOOK_SECRET&lt;/code&gt; to this value in your &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;You should see events logged in the console where the CLI is running.&lt;/p&gt; &#xA;&lt;p&gt;When you are ready to create a live webhook endpoint, follow our guide in the docs on &lt;a href=&#34;https://docs.stripe.com/webhooks/setup#configure-webhook-settings&#34;&gt;configuring a webhook endpoint in the dashboard&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;Q: Why did you pick these frameworks?&lt;/p&gt; &#xA;&lt;p&gt;A: We chose the most minimal framework to convey the key Stripe calls and concepts you need to understand. These demos are meant as an educational tool that helps you roadmap how to integrate Stripe within your own system independent of the framework.&lt;/p&gt; &#xA;&lt;p&gt;Q: What happened to Plans and SKUs?&lt;/p&gt; &#xA;&lt;p&gt;A: Plans and SKUs were old ways to model recurring and one-off prices. We created the Prices API to unify the two concepts and make it easier to reason about your pricing catalog. You can still pass old Plan and SKU IDs to Checkout -- to learn more read &lt;a href=&#34;https://docs.stripe.com/payments/checkout/migrating-prices&#34;&gt;our docs&lt;/a&gt; but know that you do not need to migrate any of your existing SKUs and Plans.&lt;/p&gt; &#xA;&lt;h2&gt;Get support&lt;/h2&gt; &#xA;&lt;p&gt;If you found a bug or want to suggest a new [feature/use case/sample], please &lt;a href=&#34;https://raw.githubusercontent.com/stripe-samples/issues&#34;&gt;file an issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have questions, comments, or need help with code, we&#39;re here to help:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;on &lt;a href=&#34;https://stripe.com/go/developer-chat&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;on Twitter at &lt;a href=&#34;https://twitter.com/StripeDev&#34;&gt;@StripeDev&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;on Stack Overflow at the &lt;a href=&#34;https://stackoverflow.com/tags/stripe-payments/info&#34;&gt;stripe-payments&lt;/a&gt; tag&lt;/li&gt; &#xA; &lt;li&gt;by &lt;a href=&#34;mailto:support+github@stripe.com&#34;&gt;email&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sign up to &lt;a href=&#34;https://go.stripe.global/dev-digest&#34;&gt;stay updated with developer news&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Author(s)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/adrind&#34;&gt;@adreyfus-stripe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/thorwebdev&#34;&gt;@thorsten-stripe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/cjav_dev&#34;&gt;@cjavilla-stripe&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>mylinuxforwork/dotfiles</title>
    <updated>2025-08-03T01:41:37Z</updated>
    <id>tag:github.com,2025-08-03:/mylinuxforwork/dotfiles</id>
    <link href="https://github.com/mylinuxforwork/dotfiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The ML4W Dotfiles for Hyprland - An advanced and full-featured configuration for the dynamic tiling window manager Hyprland. Ready to install with the Dotfiles Installer app with setup scripts for Arch, Fedora and openSuse.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ML4W Dotfiles for Hyprland&lt;/h1&gt; &#xA;&lt;p&gt;An advanced configuration of Hyprland for Arch Linux based distributions. Full desktop environment based on the tiling window manager Hyprland with dynamic material color themes based on your wallpaper for all main modules and comprehensive apps to customize your configuration.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/c9ffd710-381e-43bb-b819-450b174ca3fd&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;About the screenshot: The dock can be enabled in the ML4W Sidebar or Settings app. The waybar theme is ML4W Modern Light.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation and Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find the installation guide and the documentation of the ML4W Dotfiles for Hyprland here:&lt;br&gt;&lt;b&gt;&lt;a href=&#34;https://mylinuxforwork.github.io/dotfiles/&#34;&gt;https://mylinuxforwork.github.io/dotfiles/&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can install the ML4W Dotfiles for Hyprland with the Dotfiles Installer from Flathub.&lt;br&gt;Click on the badge below to install the app.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mylinuxforwork.github.io/dotfiles-installer/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://mylinuxforwork.github.io/dotfiles-installer/dotfiles-installer-badge.png&#34; style=&#34;border:0;margin-bottom:10px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copy the following url into the Dotfiles Installer and start the installation.&lt;/p&gt; &#xA;&lt;h4&gt;Stable Release&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://raw.githubusercontent.com/mylinuxforwork/dotfiles/main/hyprland-dotfiles-stable.dotinst&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Rolling Release&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://raw.githubusercontent.com/mylinuxforwork/dotfiles/main/hyprland-dotfiles.dotinst&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Setup scripts to install the required dependencies are included for &lt;i class=&#34;devicon-archlinux-plain&#34;&gt;&lt;/i&gt; &lt;strong&gt;Arch, &lt;i class=&#34;devicon-fedora-plain&#34;&gt;&lt;/i&gt; Fedora and &lt;i class=&#34;devicon-opensuse-plain&#34;&gt;&lt;/i&gt; openSuse Tumbleweed&lt;/strong&gt;.&lt;br&gt; For other distros, please install &lt;a href=&#34;https://raw.githubusercontent.com/mylinuxforwork/dotfiles/main/dotfiles/getting-started/dependencies&#34;&gt;the dependencies&lt;/a&gt; first.&lt;/p&gt; &#xA;&lt;h2&gt;Wallpaper repository&lt;/h2&gt; &#xA;&lt;p&gt;You can find my wallpaper collection in the repository &lt;a href=&#34;https://github.com/mylinuxforwork/wallpaper&#34;&gt;https://github.com/mylinuxforwork/wallpaper&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Inspirations&lt;/h2&gt; &#xA;&lt;p&gt;The following projects have inspired me:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JaKooLit/Hyprland-Dots&#34;&gt;https://github.com/JaKooLit/Hyprland-Dots&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/prasanthrangan/hyprdots&#34;&gt;https://github.com/prasanthrangan/hyprdots&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sudo-harun/dotfiles&#34;&gt;https://github.com/sudo-harun/dotfiles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dianaw353/hyprland-configuration-rootfs&#34;&gt;https://github.com/dianaw353/hyprland-configuration-rootfs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;and many more...&lt;/p&gt;</summary>
  </entry>
</feed>