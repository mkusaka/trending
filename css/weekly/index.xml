<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-05T01:49:29Z</updated>
  <subtitle>Weekly Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Hashtechieofficial/Form-</title>
    <updated>2023-03-05T01:49:29Z</updated>
    <id>tag:github.com,2023-03-05:/Hashtechieofficial/Form-</id>
    <link href="https://github.com/Hashtechieofficial/Form-" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>elunez/openai-java</title>
    <updated>2023-03-05T01:49:29Z</updated>
    <id>tag:github.com,2023-03-05:/elunez/openai-java</id>
    <link href="https://github.com/elunez/openai-java" rel="alternate"></link>
    <summary type="html">&lt;p&gt;基于Spring boot 2.6.4，thymeleaf 的 Openai API 的简单包装的Java Web项目，项目支持余额查询、自定义Key 、对话与生成图片，连续对话等&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;OpenAi-Java&lt;/h2&gt; &#xA;&lt;p&gt;一个基于Spring boot 2.6.4，thymeleaf 的 Openai API 的简单包装项目&lt;/p&gt; &#xA;&lt;p&gt;前端界面基于Hostloc论坛流出的源码修改而来，目前支持的功能如下&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持余额查询&lt;/li&gt; &#xA; &lt;li&gt;支持随机获取Key，支持自定义Key&lt;/li&gt; &#xA; &lt;li&gt;支持对话与生成图片，连续对话&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：Openai API 并未开放连续对话的API，因此连续对话功能受上下文Tokens长度影响只能进行简单的对话&lt;/p&gt; &#xA;&lt;h3&gt;项目截图&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2023/02/17/o93NLaA2d5YwClJ.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Docker一键运行项目&lt;/h3&gt; &#xA;&lt;p&gt;docker镜像地址与教程：&lt;a href=&#34;https://hub.docker.com/r/dqjdda/openai-java&#34;&gt;https://hub.docker.com/r/dqjdda/openai-java&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 替换 KEYS 即可&#xA;# 参数教程见：https://hub.docker.com/r/dqjdda/openai-java&#xA;docker run -d \&#xA;--name openai --restart always \&#xA;-p 18080:18080 \&#xA;-e MAX_TOKENS=512 \&#xA;-e TEMPERATURE=0.6 \&#xA;-e KEYS=sk-xxxx,sk-xxxx \&#xA;-e BD_TONG_JI_TOKEN= \&#xA;dqjdda/openai-java&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;运行项目&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;修改 application.yml 中的 apiKey&lt;/li&gt; &#xA; &lt;li&gt;运行 OpenAiRun 类&lt;/li&gt; &#xA; &lt;li&gt;访问 &lt;a href=&#34;http://localhost:18080&#34;&gt;http://localhost:18080&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;部署项目&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;打包为 war 包后，上传到服务器&lt;/li&gt; &#xA; &lt;li&gt;运行项目 nohup java -jar openai-1.0.0.war &amp;gt; nohup.out 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/li&gt; &#xA; &lt;li&gt;访问 &lt;a href=&#34;http://IP:18080&#34;&gt;http://IP:18080&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;nginx 反代&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;server&#xA;{&#xA;    listen 80;&#xA;    server_name yourdomain;&#xA;&#xA;    location / {&#xA;        proxy_read_timeout 120; &#xA;        proxy_pass http://127.0.0.1:18080;&#xA;        proxy_set_header Host $host;&#xA;        proxy_set_header X-Forwarded-Proto $scheme;&#xA;        proxy_set_header X-Forwarded-Port $server_port;&#xA;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&#xA;        proxy_set_header Upgrade $http_upgrade;&#xA;        proxy_set_header Connection &#34;upgrade&#34;;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>slippersheepig/chatgpt-web</title>
    <updated>2023-03-05T01:49:29Z</updated>
    <id>tag:github.com,2023-03-05:/slippersheepig/chatgpt-web</id>
    <link href="https://github.com/slippersheepig/chatgpt-web" rel="alternate"></link>
    <summary type="html">&lt;p&gt;使用官方ChatGPT API实现简单HTML网页版在线聊天（支持markdown语法及连续对话）&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Update&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2023.3.3-2 十分感谢&lt;a href=&#34;https://github.com/minguncle&#34;&gt;minguncle&lt;/a&gt;提交PR，现支持按回车发送问题请求，按shift+回车可换行输入文本&lt;/li&gt; &#xA; &lt;li&gt;2023.3.3-1 切换&lt;a href=&#34;https://github.com/acheong08/ChatGPT&#34;&gt;acheong08&lt;/a&gt;的V3对接官方API，实现上下文关联&lt;/li&gt; &#xA; &lt;li&gt;2023.3.2 切换到官方ChatGPT API（注：API收费）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2023.2.28 关于OPENAI允许问题的最大长度 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;根据OPENAI官方&lt;a href=&#34;https://help.openai.com/en/articles/4936856-what-are-tokens-and-how-to-count-them&#34;&gt;问答&lt;/a&gt;&#34;Depending on the &lt;a href=&#34;https://platform.openai.com/docs/models/gpt-3&#34;&gt;model&lt;/a&gt; used, requests can use up to 4097 tokens shared between prompt and completion. If your prompt is 4000 tokens, your completion can be 97 tokens at most&#34;，问题和回答加起来的总长度无法超过4097个token，如果你不清楚自己问题的长度，可以使用&lt;a href=&#34;https://platform.openai.com/tokenizer&#34;&gt;官方计数器&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2023.2.20 &lt;code&gt;支持markdown语法&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;del&gt;感谢某爱心人士捐助，&lt;a href=&#34;https://gpt.sheepig.top/chat&#34;&gt;https://gpt.sheepig.top/chat&lt;/a&gt; 已恢复使用&lt;/del&gt;再次被干爆，没次数了，请访问&lt;a href=&#34;https://chat.sheepig.top&#34;&gt;https://chat.sheepig.top&lt;/a&gt; 使用网页代理ChatGPT版本&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;chatgpt-web&lt;/h1&gt; &#xA;&lt;h3&gt;使用官方ChatGPT API实现简单HTML网页版在线聊天（支持markdown语法及连续对话）（基于&lt;a href=&#34;https://github.com/AlliotTech/chatgpt-web&#34;&gt;此项目&lt;/a&gt;调整而来）&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;该版本基于OPENAI ChatGPT API开发（付费），想使用&lt;code&gt;ChatGPT&lt;/code&gt;（免费）的请访问&lt;a href=&#34;https://github.com/slippersheepig/chatgpt-html&#34;&gt;chatgpt-html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;部署&lt;/h2&gt; &#xA;&lt;h3&gt;获取OpenAI API KEY&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;建议参考&lt;a href=&#34;https://blog.csdn.net/hekaiyou/article/details/128303729&#34;&gt;此教程&lt;/a&gt;获取&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;配置&lt;/h3&gt; &#xA;&lt;h4&gt;从源码配置&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;请参考原作者&lt;a href=&#34;https://github.com/AlliotTech/chatgpt-web&#34;&gt;github&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;使用Docker Compose&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;以下所有文件放同一目录&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新建&lt;code&gt;.env&lt;/code&gt;配置文件，粘贴以下内容并保存&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;OPENAI_API_KEY=&#34;前面你获取到的OpenAI API KEY&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新建&lt;code&gt;docker-compose.yml&lt;/code&gt;配置文件，粘贴以下内容并保存&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;services:&#xA;  chatgpt:&#xA;    image: sheepgreen/chatgpt-web #如果是arm架构，需要改成chatgpt-web:arm&#xA;    container_name: webchat&#xA;    volumes:&#xA;      - ./.env:/chatgpt-web/.env&#xA;#      - ./chat.html:/chatgpt-web/templates/chat.html #默认内置我的UI，如需替换自用网页请取消注释，需与docker-compose.yml文件在同一目录&#xA;    ports:&#xA;      - &#34;8888:8088&#34; #8088为容器内部端口，不可更改；8888为外部映射端口，可自行更改&#xA;    restart: always&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;输入&lt;code&gt;docker-compose up -d&lt;/code&gt;即启动成功&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;注意事项&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;访问地址为&lt;a href=&#34;http://ip:port/chat&#34;&gt;http://ip:port/chat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;修改&lt;code&gt;chat.html&lt;/code&gt;文件后，需要docker restart webchat才能生效&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>