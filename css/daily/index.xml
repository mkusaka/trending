<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-19T01:37:29Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>adi1090x/termux-desktop</title>
    <updated>2022-06-19T01:37:29Z</updated>
    <id>tag:github.com,2022-06-19:/adi1090x/termux-desktop</id>
    <link href="https://github.com/adi1090x/termux-desktop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Setup A Beautiful Desktop/GUI In Termux&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/logo.png&#34; alt=&#34;logo&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Maintained%3F-Yes-green?style=for-the-badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/adi1090x/termux-desktop?style=for-the-badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/adi1090x/termux-desktop?color=violet&amp;amp;style=for-the-badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/adi1090x/termux-desktop?color=teal&amp;amp;style=for-the-badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/adi1090x/termux-desktop?style=for-the-badge&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Alright, Lets just get this straight, these are just some &lt;strong&gt;dotfiles&lt;/strong&gt; &amp;amp; &lt;strong&gt;scripts&lt;/strong&gt;, which will help you to setup a graphical environment in &lt;strong&gt;termux&lt;/strong&gt;. I&#39;ve tried to make it &lt;em&gt;as easy as possible&lt;/em&gt; to setup a beautiful &lt;em&gt;&lt;strong&gt;linux desktop on your android device&lt;/strong&gt;&lt;/em&gt; with termux, So follow the steps and you&#39;ll end up making it look like this - &lt;br&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Openbox WM&lt;/th&gt; &#xA;   &lt;th&gt;Another Style&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/main_1.png&#34; alt=&#34;desktop&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/main_2.png&#34; alt=&#34;desktop&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Lets start from the beginning... &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;What is termux?&lt;/h3&gt; &#xA;&lt;p&gt;Termux is an &lt;em&gt;Android terminal emulator&lt;/em&gt; and &lt;strong&gt;Linux environment&lt;/strong&gt; app that works directly with &lt;strong&gt;no rooting&lt;/strong&gt; or setup required. A minimal base system is installed automatically - additional packages are available using the &lt;em&gt;PKG/APT package manager&lt;/em&gt;. More &lt;a href=&#34;https://termux.com/&#34;&gt;Here&lt;/a&gt;... &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;How To install termux?&lt;/h3&gt; &#xA;&lt;p&gt;You can install termux form google play store or from f-droid. &lt;br&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Get it on &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.termux&#34;&gt;Google Play&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Download from &lt;a href=&#34;https://f-droid.org/packages/com.termux/&#34;&gt;F-Droid&lt;/a&gt; &lt;br&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More information about installation is &lt;a href=&#34;https://wiki.termux.com/wiki/Main_Page&#34;&gt;here&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Preparation&lt;/h3&gt; &#xA;&lt;p&gt;Install &lt;code&gt;Termux&lt;/code&gt; &amp;amp; &lt;code&gt;Termux:API&lt;/code&gt; on your phone. It&#39;s recommended to install &lt;em&gt;Termux API&lt;/em&gt; application as many desktop elements are dependent on it.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This setup is created and tested on :&lt;/p&gt; &#xA; &lt;p&gt;Device - &lt;strong&gt;Redmi Note 9 Pro&lt;/strong&gt; &lt;br&gt; Android - &lt;strong&gt;Android 10 (Q)&lt;/strong&gt; &lt;br&gt; CPU Type - &lt;strong&gt;aarch64&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;After installing both applications above, open &lt;code&gt;Termux&lt;/code&gt; and follow the steps below -&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update termux packages and install &lt;code&gt;git&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;pkg upgrade &amp;amp;&amp;amp; pkg install git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone this repository&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --depth=1 https://github.com/adi1090x/termux-desktop.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; : I&#39;m assuming that you&#39;re doing this on a fresh termux install. If not, I&#39;ll suggest you to do so. However the &lt;code&gt;setup.sh&lt;/code&gt; script backup every file it replace, It&#39;s still recommended that you manually backup your files in order to avoid conflicts. &lt;br&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Change to cloned directory and run &lt;code&gt;setup.sh&lt;/code&gt; with &lt;em&gt;--install&lt;/em&gt; option&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd termux-desktop&#xA;chmod +x setup.sh&#xA;./setup.sh --install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If script &lt;code&gt;setup.sh&lt;/code&gt; fails during package installation (due to network issues), you can re-execute it again.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;During installation, you&#39;ll be asked to set up password for &lt;strong&gt;VNC&lt;/strong&gt; -&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;[*] Setting up VNC Server...&#xA;&#xA;You will require a password to access your desktops.&#xA;&#xA;Password:&#xA;Verify:&#xA;Would you like to enter a view-only password (y/n)? n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note that passwords are not visible when you are typing them and minimum password length is 6 characters. Remember the password you typed as it&#39;ll be required to connect via vnc client.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If everything is okay, you will see this message -&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;New &#39;localhost:1 ()&#39; desktop is localhost:1&#xA;&#xA;Creating default startup script /data/data/com.termux/files/home/.vnc/xstartup&#xA;Creating default config /data/data/com.termux/files/home/.vnc/config&#xA;Starting applications specified in /data/data/com.termux/files/home/.vnc/xstartup&#xA;Log file is /data/data/com.termux/files/home/.vnc/localhost:1.log&#xA;&#xA;[*] Server Is Running...&#xA;&#xA;TigerVNC server sessions:&#xA;&#xA;X DISPLAY #     PROCESS ID&#xA;:1              XXXXX&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;It means that X (vnc) server is available on display &#39;localhost:1&#39;. &lt;br&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;That&#39;s it. &lt;code&gt;Termux Desktop&lt;/code&gt; is installed successfully. &lt;em&gt;Restart Termux&lt;/em&gt; and enter &lt;code&gt;startdesktop&lt;/code&gt; command to start &lt;em&gt;vncserver&lt;/em&gt; and connect via VNC Client. &lt;br&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;startdesktop&#xA;&#xA;[*] Starting VNC Server...&#xA;&#xA;New &#39;localhost:1 ()&#39; desktop is localhost:1&#xA;&#xA;Starting applications specified in /data/data/com.termux/files/home/.vnc/xstartup&#xA;Log file is /data/data/com.termux/files/home/.vnc/localhost:1.log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Uninstallation&lt;/h3&gt; &#xA;&lt;p&gt;If you ever want to uninstall Termux Desktop, just run &lt;code&gt;setup.sh&lt;/code&gt; with &lt;em&gt;--uninstall&lt;/em&gt; option. Just keep the &lt;code&gt;setup.sh&lt;/code&gt; script and delete the cloned repository to save space. I&#39;ll create a separate uninstaller script later. The command below will remove all the packages and delete all the config files it installed, including the changes you&#39;ve made. So, Be careful there...&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./setup.sh --uninstall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;VNC Client&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Now you need a VNC client app to connect to server. I&#39;m using this Android VNC client: &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.realvnc.viewer.android&#34;&gt;VNC Viewer&lt;/a&gt;. You can use &lt;a href=&#34;https://tigervnc.org/&#34;&gt;TigerVNC&lt;/a&gt; if you&#39;re trying to connect to server by a computer (Windows or Linux).&lt;/p&gt; &#xA;&lt;p&gt;Determine port number on which VNC server listens. It can be calculated like this: 5900 + {display number}. So for display &#39;localhost:1&#39; the port will be 5901. &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;Now open the VNC Viewer application and create a new connection with the following information (assuming that port is 5901) - &lt;br&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Address:&#xA;127.0.0.1:5901&#xA;&#xA;Name:&#xA;Termux&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now launch it. You will be prompted for &lt;code&gt;password&lt;/code&gt; that you entered during installation. After entering password, you&#39;ll be headed directly to this desktop - &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/desk_1.png&#34; alt=&#34;desktop&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;First Impression&lt;/h3&gt; &#xA;&lt;p&gt;Let&#39;s take a look at following installed programs you&#39;ll get here -&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;File Manager&lt;/th&gt; &#xA;   &lt;th&gt;Text Editor/IDE&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/desk_2.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/desk_3.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Terminal Emulator&lt;/th&gt; &#xA;   &lt;th&gt;Web Browser&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/desk_4.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/desk_5.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Openbox Menu&lt;/th&gt; &#xA;   &lt;th&gt;Many CLI based Programs&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/desk_6.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/desk_7.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;vim &amp;amp; htop&lt;/th&gt; &#xA;   &lt;th&gt;ranger &amp;amp; calcurse&lt;/th&gt; &#xA;   &lt;th&gt;mutt &amp;amp; elinks&lt;/th&gt; &#xA;   &lt;th&gt;mpd &amp;amp; ncmpcpp&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/desk_8.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/desk_9.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/desk_10.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/desk_11.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Rofi Application launcher and Applets -&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;App Launcher&lt;/th&gt; &#xA;   &lt;th&gt;Music Player&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/rofi_1.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/rofi_2.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Battery Status&lt;/th&gt; &#xA;   &lt;th&gt;Exit Menu&lt;/th&gt; &#xA;   &lt;th&gt;Network Info&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/rofi_3.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/rofi_5.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/rofi_4.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Styles&lt;/h3&gt; &#xA;&lt;p&gt;There are total &lt;em&gt;Eight different styles/themes&lt;/em&gt; available in this setup. To change style, &lt;code&gt;Right click on desktop &amp;gt; Preferences &amp;gt; Change Style&lt;/code&gt; and select the one you want to apply.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Beach&lt;/th&gt; &#xA;   &lt;th&gt;Forest&lt;/th&gt; &#xA;   &lt;th&gt;Grid&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/style_1.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/style_2.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/style_3.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/style_4.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Manhattan&lt;/th&gt; &#xA;   &lt;th&gt;Slime&lt;/th&gt; &#xA;   &lt;th&gt;Spark&lt;/th&gt; &#xA;   &lt;th&gt;Wave&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/style_5.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/style_6.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/style_7.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/style_8.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Applications of &lt;code&gt;Termux Desktop&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Well, These are some ideas or things you can do with termux desktop. From Learning coding to Penetration testing, Chatting over IRC to Browsing web and Downloading file, Playing classic retro games to run Windows from 90s.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Learn and practice you coding skill without having a laptop&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Python&lt;/th&gt; &#xA;   &lt;th&gt;Bash&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/app_1.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/app_2.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chatting, Web Browsing and Downloading files&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Hexchat &amp;amp; Pidgin&lt;/th&gt; &#xA;   &lt;th&gt;Netsurf &amp;amp; Uget&lt;/th&gt; &#xA;   &lt;th&gt;Browsing Wiki&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/app_3.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/app_4.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/app_5.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Penetration testing and Learn cyber security stuff&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;I&#39;m not doing anything &lt;strong&gt;illegal&lt;/strong&gt; or sponsoring any kind of &lt;strong&gt;Hacking and Cracking&lt;/strong&gt;. &lt;em&gt;Termux is a powerful tool, use it with responsibilities.&lt;/em&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Metasploit - Sherlock - Socialfish - Zphisher - Sqlmap&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/app_6.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Play classic retro games or Run Microsoft Windows from 90s with &lt;code&gt;Dosbox&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Turbo C++, Windows 1 and Windows 3&lt;/th&gt; &#xA;   &lt;th&gt;Duke and Blue Brothers&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/app_7.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/app_8.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Mario and Pacman&lt;/th&gt; &#xA;   &lt;th&gt;Prince of Persia (both)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/app_9.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/app_10.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Wolfenstein and Turrican2&lt;/th&gt; &#xA;   &lt;th&gt;SuperKarts and Spiderman&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/app_11.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/adi1090x/termux-desktop/master/previews/app_12.png&#34; alt=&#34;img&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;You&#39;ll probably get the idea of possible things you can do with Termux and how Termux Desktop makes it more easy.&lt;/p&gt; &#xA;&lt;h3&gt;Keybindings&lt;/h3&gt; &#xA;&lt;p&gt;Here&#39;s some shortcut keys you want to use to speed up your work. For more, &lt;code&gt;Right click on desktop &amp;gt; Keybinds&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Keys&lt;/th&gt; &#xA;   &lt;th&gt;Action&lt;/th&gt; &#xA;   &lt;th&gt;-----&lt;/th&gt; &#xA;   &lt;th&gt;Keys&lt;/th&gt; &#xA;   &lt;th&gt;Action&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Go To Desktop 1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;S-W-1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Send To Desktop 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-2&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Go To Desktop 2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;S-W-2&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Send To Desktop 2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-3&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Go To Desktop 3&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;S-W-3&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Send To Desktop 3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-4&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Go To Desktop 4&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;S-W-4&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Send To Desktop 4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-5&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Go To Desktop 5&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;S-W-5&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Send To Desktop 5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-S-Left&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Send To Prev Desktop&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-S-Right&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Send To Next Desktop&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;A-Tab&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Next Window (Current Workspace)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-Tab&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Next Window (All Workspaces)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-h&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move to TopLeft&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-j&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move to BottomLeft&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-k&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move to TopRight&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-l&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move to BottomRight&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-Left&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move To Left Edge&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-Right&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move To Right Edge&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-Up&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Maximized&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-Down&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unmaximized&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-q/c&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Close Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;A-r/m&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Toggle Resize/Move&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-Space&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Openbox Menu&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-p/A-F1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;App Launcher&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-d&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Toggle Desktop&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-v&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set Tasks&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-f&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;File Manager&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-e&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Text Editor&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-t/return&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Terminal&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-w&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Web Browser&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-x&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Exit Menu&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-m&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Music Menu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-b&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Battery Menu&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;W-n&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Network Menu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;C-A-v&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Vim&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;C-A-r&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Ranger&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;C-A-h&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Htop&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;C-A-n&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Nano&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Additional Tools&lt;/h3&gt; &#xA;&lt;p&gt;You can install additional tools for termux, to make it visually look good.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/adi1090x/termux-omz&#34;&gt;Oh my zsh&lt;/a&gt;, Setup zsh with &lt;a href=&#34;https://github.com/robbyrussell/oh-my-zsh&#34;&gt;oh-my-zsh&lt;/a&gt; framework. (Already Added in this setup)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/adi1090x/termux-style&#34;&gt;Termux style&lt;/a&gt;, Change color and fonts in termux.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;FYI&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you face any problem or get any error, you can create an issue &amp;amp; i&#39;ll try to help.&lt;/li&gt; &#xA; &lt;li&gt;Edit &lt;code&gt;~/.local/bin/email&lt;/code&gt; and put your Email ID and Password (Use an App password) to show unread mails on polybar.&lt;/li&gt; &#xA; &lt;li&gt;You may need to edit some config files accoring to your need (&lt;code&gt;~/.mutt/muttrc&lt;/code&gt;, &lt;code&gt;~/.gitconfig&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Don&#39;t Email or DM me to ask how to hack, I ain&#39;t a Hacker.&lt;/li&gt; &#xA; &lt;li&gt;Have Fun, Share this repository with your friends.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>nicejade/markdown-online-editor</title>
    <updated>2022-06-19T01:37:29Z</updated>
    <id>tag:github.com,2022-06-19:/nicejade/markdown-online-editor</id>
    <link href="https://github.com/nicejade/markdown-online-editor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;📝基于 Vue、Vditor，所构建的在线 Markdown 编辑器，支持流程图、甘特图、时序图、任务列表、HTML 自动转换为 Markdown 等功能；🎉新增「所见即所得」编辑模式。&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://nicelinks.site/tags/Markdown/?utm_source=github.com&#34; target=&#34;_blank&#34;&gt;&lt;img width=&#34;100&#34; src=&#34;https://cdn.jsdelivr.net/gh/nicejade/markdown-online-editor/src/assets/images/logo.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://markdown.lovejade.cn/?utm_source=github.com&#34;&gt;Arya - 在线 Markdown 编辑器&lt;/a&gt; &lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;strong&gt; 📝 基于 &lt;a href=&#34;https://nicelinks.site/post/5b1a221c0526c920d6dfaada&#34;&gt;Vue&lt;/a&gt;、&lt;a href=&#34;https://hacpai.com/tag/vditor?utm_source=github.com&#34;&gt;Vditor&lt;/a&gt;，所构建的在线 &lt;a href=&#34;https://nicelinks.site/tags/Markdown/?utm_source=github.com&#34;&gt;Markdown&lt;/a&gt; 编辑器，支持绘制流程图、甘特图、时序图、任务列表、echarts 图表、五线谱，以及 PPT 预览、视频音频解析、HTML 自动转换为 Markdown 等功能。&lt;a href=&#34;https://markdown.lovejade.cn/?utm_source=github.com&#34;&gt;markdown.lovejade.cn&lt;/a&gt; &lt;/strong&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/nicejade/markdown-online-editor&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/nicejade/markdown-online-editor.svg?sanitize=true&#34; alt=&#34;LICENSE&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://nicelinks.site/post/5c16083e819ae45de1453caa&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat&#34; alt=&#34;Prettier&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://www.jeffjade.com/2019/05/31/155-arya-markdown-online-editor/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/chat-on%20blog-brightgreen.svg?sanitize=true&#34; alt=&#34;Arya - 在线 Markdown 编辑器&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://v2ex.com/t/623128&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Chat-on%20v2ex-brightgreen.svg?sanitize=true&#34; alt=&#34;Chat On V2ex&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://hacpai.com/article/1558270349379&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Chat-on%20hacpai-brightgreen.svg?sanitize=true&#34; alt=&#34;Chat On Hacpai&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://weibo.com/aryamarkdown&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/WeiBo-aryamarkdown-red.svg?style=flat&#34; alt=&#34;Arya - 在线 Markdown 编辑器&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://aboutme.lovejade.cn/?utm_source=github.com&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Author-nicejade-%23a696c8.svg?sanitize=true&#34; alt=&#34;Author nicejade&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;背景初衷&lt;/h2&gt; &#xA;&lt;p&gt;早期就有关注到由&lt;a href=&#34;https://hacpai.com/?utm_source=github.com&#34;&gt;黑客派&lt;/a&gt;所出品的 &lt;a href=&#34;https://hacpai.com/tag/vditor?utm_source=github.com&#34;&gt;Vditor&lt;/a&gt;：一款为未来而构建的下一代 &lt;a href=&#34;https://nicelinks.site/tags/Markdown/?utm_source=github.com&#34;&gt;Markdown&lt;/a&gt; 编辑器。然，现而今市面上所存在的 &lt;a href=&#34;https://nicelinks.site/tags/Markdown/?utm_source=github.com&#34;&gt;Markdown&lt;/a&gt; 编辑器，或多或少都存在一些问题（或功能不全，或高级功能收费...），因此基于自身所需，加之 &lt;a href=&#34;https://hacpai.com/tag/vditor?utm_source=github.com&#34;&gt;Vditor&lt;/a&gt; 的强大，就诞生了做一款&lt;a href=&#34;https://markdown.lovejade.cn/?utm_source=github.com&#34;&gt;在线 Markdown 编辑器&lt;/a&gt; 的念头；取其名曰 &lt;a href=&#34;https://quickapp.lovejade.cn/talking-game-of-thrones/?utm_source=github.com&#34;&gt;&lt;code&gt;Arya&lt;/code&gt;（二丫）&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;功能支持&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 🎉 通常 &lt;code&gt;Markdown&lt;/code&gt; 解析器自带的基本功能；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 🍀 支持&lt;strong&gt;流程图&lt;/strong&gt;、&lt;strong&gt;甘特图&lt;/strong&gt;、&lt;strong&gt;时序图&lt;/strong&gt;、&lt;strong&gt;任务列表&lt;/strong&gt;；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 🏁 支持粘贴 HTML 自动转换为 Markdown；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 💃🏻 支持插入原生 Emoji、设置常用表情列表；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 🚑 支持编辑内容保存&lt;strong&gt;本地存储&lt;/strong&gt;，防止意外丢失；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 📝 支持&lt;strong&gt;实时预览&lt;/strong&gt;，主窗口大小拖拽，字符计数；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 🛠 支持常用快捷键(&lt;strong&gt;Tab&lt;/strong&gt;)，及代码块添加复制；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ✨ 支持&lt;strong&gt;导出&lt;/strong&gt;携带样式的 PDF、PNG、JPEG 等；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ✨ 升级 Vditor，新增对 &lt;code&gt;echarts&lt;/code&gt; 图表的支持；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; ✨ 注入 &lt;a href=&#34;https://revealjs.com/#/&#34;&gt;RevealJs&lt;/a&gt;，增设对 &lt;code&gt;PPT&lt;/code&gt; 预览支持；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 👏 支持检查并格式化 Markdown 语法，使其专业；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 🦑 支持五线谱、及&lt;a href=&#34;https://github.com/b3log/vditor/issues/117?utm_source=hacpai.com#issuecomment-526986052&#34;&gt;部分站点、视频、音频解析&lt;/a&gt;；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 🌟 增加对&lt;strong&gt;所见即所得&lt;/strong&gt;编辑模式的支持(&lt;code&gt;⌘-⇧-M&lt;/code&gt;)；&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 🌟 新增复制到微信公众号等周边功能；&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;如何使用&lt;/h2&gt; &#xA;&lt;p&gt;清空目前 &lt;a href=&#34;https://markdown.lovejade.cn/?utm_source=github.com&#34;&gt;Arya&lt;/a&gt; 编辑区默认文档，即可使用。&lt;/p&gt; &#xA;&lt;p&gt;默认为&lt;a href=&#34;https://hacpai.com/article/1577370404903?utm_source=github.com&#34;&gt;所见即所得&lt;/a&gt;模式，可通过 &lt;code&gt;⌘-⇧-M&lt;/code&gt;（&lt;code&gt;Ctrl-⇧-M&lt;/code&gt;）进行切换；或通过以下方式：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;所见即所得：&lt;code&gt;⌘-⌥-7&lt;/code&gt;（&lt;code&gt;Ctrl-alt-7&lt;/code&gt;）；&lt;/li&gt; &#xA; &lt;li&gt;即时渲染：&lt;code&gt;⌘-⌥-8&lt;/code&gt;（&lt;code&gt;Ctrl-alt-8&lt;/code&gt;）；&lt;/li&gt; &#xA; &lt;li&gt;分屏渲染：&lt;code&gt;⌘-⌥-9&lt;/code&gt;（&lt;code&gt;Ctrl-alt-9&lt;/code&gt;）；&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;PPT 预览&lt;/h3&gt; &#xA;&lt;p&gt;如果您用作 &lt;code&gt;PPT&lt;/code&gt; 预览（入口在&lt;code&gt;设置&lt;/code&gt;中），需要注意，这里暂还不能支持各种图表的渲染；您可以使用 &lt;code&gt;---&lt;/code&gt; 来定义水平方向上幻灯片，用 &lt;code&gt;--&lt;/code&gt; 来定义垂直幻灯片；更多设定可以参见 &lt;a href=&#34;https://github.com/hakimel/reveal.js#table-of-contents&#34;&gt;RevealJs 文档&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;如何开发&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 🎉 克隆项目&#xA;git clone https://github.com/nicejade/markdown-online-editor.git&#xA;cd markdown-online-editor&#xA;&#xA;# ➕ 安装依赖(跳过安装 )&#xA;env PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true yarn&#xA;&#xA;# 🚧 开始开发&#xA;yarn start&#xA;&#xA;# 🚀 部署 Github Pages(需修改 commands/deploy.sh)&#xA;yarn deploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;关于本应用构建：因采用&amp;nbsp;&lt;a href=&#34;https://github.com/chrisvfritz/prerender-spa-plugin&#34;&gt;prerender-spa-plugin&lt;/a&gt;&amp;nbsp;以解决 SPA SEO 问题，故而，您需要在根目录下创建 &lt;code&gt;arya.config.js&lt;/code&gt;，根据 &lt;em&gt;arya.config.sample.js&lt;/em&gt; 中示例格式，来设定 &lt;code&gt;executablePath&lt;/code&gt; 参数，从而指定插件中捆绑的 &lt;strong&gt;Chromium&lt;/strong&gt; 所在目录，使得 &lt;code&gt;prerender-spa-plugin&lt;/code&gt; 可以正常工作。更多详情，可以参见 &lt;a href=&#34;https://www.jeffjade.com/2019/06/14/156-puppeteer-robot/#%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85&#34;&gt;Puppeteer 安装注意事项&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;特别鸣谢&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://markdown.lovejade.cn/?utm_source=github.com&#34;&gt;Arya&lt;/a&gt; 的产生，得益于 &lt;a href=&#34;https://github.com/b3log/vditor&#34;&gt;vditor&lt;/a&gt;：一款浏览器端的 Md 编辑器，同时也离不开 &lt;a href=&#34;https://github.com/nicejade/markdown-online-editor/raw/master/package.json#L25-L64&#34;&gt;vue、reveal.js 等开源库&lt;/a&gt;的支持，感谢 🙌。&lt;/p&gt; &#xA;&lt;h2&gt;相关链接&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nicelinks.site?utm_source=github.com&#34;&gt;&lt;strong&gt;倾城之链&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://about.me/nicejade?utm_source=github.com&#34;&gt;About Me&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jeffjade.com/nicelinks?utm_source=github.com&#34;&gt;个人博客&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://quickapp.lovejade.cn/?utm_source=github.com&#34;&gt;静轩之别苑&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nice.lovejade.cn/?utm_source=github.com&#34;&gt;静晴轩别苑&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docz.lovejade.cn/?utm_source=github.com&#34;&gt;吾意静晴轩&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.lovejade.cn/?utm_source=github.com&#34;&gt;天意人间舫&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://weibo.com/jeffjade?utm_source=github.com&#34;&gt;新浪微博&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/people/yang-qiong-pu/&#34;&gt;知乎主页&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/u/9aae3d8f4c3d&#34;&gt;简书主页&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://segmentfault.com/u/jeffjade&#34;&gt;SegmentFault&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/nicejadeyang&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/nice.jade.yang&#34;&gt;Facebook&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;微信公众号&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;前端微信群&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;推荐 Web 应用&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;推荐小程序&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;😉 静晴轩&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✨ 大前端联盟&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;🎉 倾城之链&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;🌊 倾城之链&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://image.nicelinks.site/qrcode_jqx.jpg&#34; alt=&#34;静晴轩&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://image.nicelinks.site/wqycx-weixin.png?ver=1&#34; alt=&#34;倾城之链&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://image.nicelinks.site/nice-links.png&#34; width=&#34;300px&#34; alt=&#34;倾城之链&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/a4d1e07fce0639d0a43ebdb4074c5c1e67978934/68747470733a2f2f696d6167652e6e6963656c696e6b732e736974652f6e6963656c696e6b732d6d696e6970726f6772616d2d636f64652e6a706567&#34; width=&#34;300px&#34; alt=&#34;倾城之链&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2018-present, &lt;a href=&#34;https://aboutme.lovejade.cn/?utm_source=github.com&#34;&gt;nicejade&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>connorferster/handcalcs</title>
    <updated>2022-06-19T01:37:29Z</updated>
    <id>tag:github.com,2022-06-19:/connorferster/handcalcs</id>
    <link href="https://github.com/connorferster/handcalcs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Python library for converting Python calculations into rendered latex.&lt;/p&gt;&lt;hr&gt;&lt;p&gt; &lt;img src=&#34;https://travis-ci.org/connorferster/handcalcs.svg?branch=master&#34;&gt; &lt;a href=&#34;https://coveralls.io/github/connorferster/handcalcs?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/connorferster/handcalcs/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/code%20style-black-000000.svg?sanitize=true&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/v/handcalcs&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/pyversions/handcalcs&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/connorferster/handcalcs&#34;&gt; &lt;img src=&#34;https://img.shields.io/pypi/dm/handcalcs&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/connorferster/handcalcs/main/docs/images/handcalcs.jpg&#34;&gt;&lt;br&gt; Covert art by &lt;a href=&#34;https://www.instagram.com/joshuahoibergtattoos/&#34;&gt;Joshua Hoiberg&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;handcalcs:&lt;br&gt;Python calculations in Jupyter,&lt;br&gt;as though you wrote them by hand.&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;handcalcs&lt;/code&gt; is a library to render Python calculation code automatically in Latex, but in a manner that mimics how one might format their calculation if it were written with a pencil: write the symbolic formula, &lt;strong&gt;followed by numeric substitutions&lt;/strong&gt;, and then the result.&lt;/p&gt; &#xA;&lt;p&gt;Because &lt;code&gt;handcalcs&lt;/code&gt; shows the numeric substitution, the calculations become significantly easier to check and verify by hand.&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/connorferster/handcalcs#basic-demo&#34;&gt;Basic Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/connorferster/handcalcs#installing&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/connorferster/handcalcs#basic-usage-1-as-a-jupyter-cell-magic-render&#34;&gt;Basic Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/connorferster/handcalcs#basic-usage-2-as-a-decorator-on-your-functions-handcalc&#34;&gt;Enhanced Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/connorferster/handcalcs#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/connorferster/handcalcs#pdf-printing-in-jupyter&#34;&gt;PDF Printing in Jupyter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/connorferster/handcalcs#expected-behaviours&#34;&gt;Expected Behaviours&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/connorferster/handcalcs#gotchas&#34;&gt;Gotchas and Disclaimer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/connorferster/handcalcs#youtube-tutorials&#34;&gt;YouTube Tutorials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/connorferster/handcalcs/wiki&#34;&gt;Applications and Compatibility with Other Libraries (wiki)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Basic Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/connorferster/handcalcs/main/docs/images/basic_demo1.gif&#34; alt=&#34;handcalcs demo 1&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;You can install using pip:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;pip install handcalcs&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Basic Usage 1: As a Jupyter cell magic (&lt;code&gt;%%render&lt;/code&gt;)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;handcalcs&lt;/code&gt; is intended to be used with either Jupyter Notebook or Jupyter Lab as a &lt;em&gt;cell magic&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;First, import the module and run the cell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import handcalcs.render&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: This will import both &lt;code&gt;%%tex&lt;/code&gt; and &lt;code&gt;%%render&lt;/code&gt; magics in the Jupyter Notebook.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Then, in any cell that you want to render with &lt;code&gt;handcalcs&lt;/code&gt;, just use the render cell magic at the top of your cell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;%%render&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;%%render&#xA;a = 2&#xA;b = 3&#xA;c = 2*a + b/3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;That is it!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Once rendered, you can then export your notebook as a PDF, provided you have a Latex environment installed on your system. If you are new to working with Latex and would like to install it on your system so you can use this functionality, please see the section &lt;a href=&#34;https://github.com/connorferster/handcalcs/wiki&#34;&gt;Installing Tex&lt;/a&gt;, in the wiki.&lt;/p&gt; &#xA;&lt;p&gt;You can also use the &lt;code&gt;%%tex&lt;/code&gt; command to convert any Python code snippet into a valid LaTex. For Example:&lt;/p&gt; &#xA;&lt;p&gt;First import &lt;code&gt;handcalcs&lt;/code&gt;. We are also importing a few properties/functions from &lt;strong&gt;math&lt;/strong&gt; package for the example below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import handcalcs.render&#xA;from math import sqrt, pi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, you can use the &lt;code&gt;%%tex&lt;/code&gt; magic!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;%%tex&#xA;a = 2 / 3 * sqrt(pi)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will produce a LaTeX output as follows.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;\[&#xA;\begin{aligned}&#xA;a &amp;amp;= \frac{ 2 }{ 3 } \cdot \sqrt{ \pi } = \frac{ 2 }{ 3 } \cdot \sqrt{ 3.142 } &amp;amp;= 1.182&#xA;\end{aligned}&#xA;\]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Basic Usage 2: As a decorator on your functions, &lt;code&gt;@handcalc()&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Shout-out to @eriknw for developing &lt;a href=&#34;https://github.com/eriknw/innerscope&#34;&gt;innerscope&lt;/a&gt; and proactively integrating it into &lt;code&gt;handcalcs&lt;/code&gt;. Thank you!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Start by importing the &lt;code&gt;@handcalc()&lt;/code&gt; decorator:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from handcalcs.decorator import handcalc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;@handcalc([override: str = &#34;&#34;, precision: int = 3, left: str = &#34;&#34;, right: str = &#34;&#34;, jupyter_display: bool = False])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Returns a tuple consisting of &lt;code&gt;(latex_code: str, locals: dict)&lt;/code&gt;, where &lt;code&gt;locals&lt;/code&gt; is a dictionary of all variables in the scope of the function namespace.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;override&lt;/code&gt; is a str representing one of the acceptable override tags (see below)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;precision&lt;/code&gt; is an int to alter the of decimal precision displayed&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; are strings that can precede and follow the encoded Latex string, such as &lt;code&gt;\\[&lt;/code&gt; and &lt;code&gt;\\]&lt;/code&gt; or &lt;code&gt;$&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jupyter_display&lt;/code&gt;, when True, will return only the &lt;code&gt;locals&lt;/code&gt; dictionary and instead will display the encoded Latex string rendering with &lt;code&gt;display(Latex(latex_code))&lt;/code&gt; from &lt;code&gt;IPython.display&lt;/code&gt;. Will return an error if not used within&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In your decorated function, everything between &lt;code&gt;def my_calc(...)&lt;/code&gt; and a return statement (if any) is now like the code in a Jupyter cell, except it&#39;s a standard Python function.&lt;/p&gt; &#xA;&lt;p&gt;Used in this way, you can use &lt;code&gt;@handcalc()&lt;/code&gt; to dynamically generate Latex code for display in Jupyter and non-Jupypter Python environments (e.g. streamlit).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/connorferster/handcalcs/main/docs/images/decorator.png&#34; alt=&#34;Parameters&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Override tags&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;handcalcs&lt;/code&gt; makes certain assumptions about how you would like your calculation formatted and does not allow for a great deal of customization in this regard. However, there are currently &lt;strong&gt;four&lt;/strong&gt; customizations you can make using &lt;code&gt;# override tags&lt;/code&gt; as an argument after the &lt;code&gt;%%render&lt;/code&gt; cell magic. Additionally, you can also specify the number of decimals of precision to display. You can only use &lt;strong&gt;one&lt;/strong&gt; override tag per cell &lt;strong&gt;but&lt;/strong&gt; you can combine an override tag with a precision setting.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Override tags can be used with both the Jupyter cell magic and the function decorator&lt;/strong&gt;. To use a override tag with the decorator, you just supply it as an argument, e.g. &lt;code&gt;@handcalc(override=&#39;params&#39;, precision=2)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;I will compare a basic rendering of the quadratic formula (below) with the change achieved with each override tag.&lt;/p&gt; &#xA;&lt;h3&gt;Basic rendering:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/connorferster/handcalcs/main/docs/images/quadratic_formula_basic.png&#34; alt=&#34;Parameters&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;code&gt;params&lt;/code&gt;:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;handcalcs&lt;/code&gt; renders lines of code vertically, one after the other. However, when you are assigning variables, or displaying resulting variables, you may not want to waste all of that vertical space.&lt;/p&gt; &#xA;&lt;p&gt;Using the &lt;code&gt;params&lt;/code&gt; override tag, your list of parameters will instead render in three columns, thereby saving vertical space. Additionally, onsly the result will be shown, no calculations.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/connorferster/handcalcs/main/docs/images/quadratic_formula_params.png&#34; alt=&#34;Params override example&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Adjust precision:&lt;/h3&gt; &#xA;&lt;p&gt;The number of decimal places in a cell can be adjusted by providing an integer after &lt;code&gt;%%render&lt;/code&gt; to indicate the decimal precision to be displayed. Can be combined with another override tag.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/connorferster/handcalcs/main/docs/images/quadratic_formula_precision.png&#34; alt=&#34;Precision override example&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;code&gt;long&lt;/code&gt; and &lt;code&gt;short&lt;/code&gt;:&lt;/h3&gt; &#xA;&lt;p&gt;To save vertical space, &lt;code&gt;handcalcs&lt;/code&gt; &lt;em&gt;attempts&lt;/em&gt; to figure out how long your calculation is and, if it is short enough, renders it out fully on one line.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;handcalcs&lt;/code&gt;&#39;s internal test deems the calculation as being too long to fit onto one line, it breaks it out into multiple lines.&lt;/p&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;# long&lt;/code&gt; or &lt;code&gt;# short&lt;/code&gt; override tags to override the length check and display the calculation in the &#34;Long&#34; format or the &#34;Short&#34; format for all calculations in the cell. e.g.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;long: Spans multiple lines as though you had a long equation&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/connorferster/handcalcs/main/docs/images/quadratic_formula_long.png&#34; alt=&#34;Long override example&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;short: Forced to a single line as though you had a short equation&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;    # Format for &#34;short&#34; calculations (can fit on one line):&#xA;    c = 2*a + b/3 = 2*(2) + (3)/3 = 5&#xA;&#xA;    # Format for &#34;long&#34; calculations (requires multi-line format)&#xA;    c = 2*a + b/3&#xA;      = 2*(2) + (3)/3&#xA;      = 5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/connorferster/handcalcs/main/docs/images/quadratic_formula_short.png&#34; alt=&#34;Short override example&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;code&gt;symbolic&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The primary purpose of &lt;code&gt;handcalcs&lt;/code&gt; is to render the full calculation with the numeric substitution. This allows for easy traceability and verification of the calculation.&lt;/p&gt; &#xA;&lt;p&gt;However, there may be instances when it is preferred to simply display calculations symbolically. For example, you can use the &lt;code&gt;symbolic&lt;/code&gt; tag to use &lt;code&gt;handcalcs&lt;/code&gt; as a fast way to render Latex equations symbolically.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you may prefer to render out all of input parameters in one cell, your formulae symbolically in the following cell, and then all the final values in the last cell, skipping the numeric substitution process entirely.&lt;/p&gt; &#xA;&lt;p&gt;Keep in mind that even if you use the &lt;code&gt;symbolic&lt;/code&gt; tag with your calculations, you still need to declare those variables (by assigning values to them) ahead of time in order for your calculation to be valid Python.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/connorferster/handcalcs/main/docs/images/quadratic_formula_symbolic.png&#34; alt=&#34;Short override example&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;code&gt;sympy&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This is intended to be used only with &lt;code&gt;sympy&lt;/code&gt; loaded. Sympy allows for symbolic manipulation, solving, and integration of algebraic expressions. Sympy will render its own objects in Latex without handcalcs.&lt;/p&gt; &#xA;&lt;p&gt;If you are manipulating a sympy expression or sympy equation for the purpose of calculation, you can use &lt;code&gt;handcalcs&lt;/code&gt; to handle the substitution and calculation of your resulting expression. &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: Re-assigning your symbolic variables to numbers will clobber them as sympy variables. However, you are done with these now, right? So, it&#39;s no problem. If you need to work symbolically again, just re-run your notebook cells from the top.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/connorferster/handcalcs/main/docs/images/sympy.png&#34; alt=&#34;Sympy demo&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Units Packages Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;handcalcs&lt;/code&gt; was designed to be used with the units package, &lt;a href=&#34;https://github.com/connorferster/forallpeople&#34;&gt;forallpeople&lt;/a&gt; (and &lt;a href=&#34;https://github.com/connorferster/forallpeople&#34;&gt;forallpeople&lt;/a&gt; was designed to be compatible with &lt;code&gt;handcalcs&lt;/code&gt;). However, it has been recently reported that &lt;a href=&#34;https://pint.readthedocs.org&#34;&gt;pint&lt;/a&gt; can work to good effect, also.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/connorferster/handcalcs/main/docs/images/forallpeople.png&#34; alt=&#34;display variable demo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;For potential compatibility with other units packages, please see &lt;a href=&#34;https://github.com/connorferster/handcalcs/wiki&#34;&gt;the wiki.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Quickly display the values of many variables&lt;/h3&gt; &#xA;&lt;p&gt;No more &lt;code&gt;print&lt;/code&gt; statements needed. Just plop your variables onto a line and they will all be displayed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/connorferster/handcalcs/main/docs/images/display_var.png&#34; alt=&#34;display variable demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Get Just the Latex Code, without the render&lt;/h3&gt; &#xA;&lt;p&gt;If you just want to generate the rendered Latex code directly to use in your own Latex files, you can use the &lt;code&gt;%%tex&lt;/code&gt; cell magic instead:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;%%tex&#xA;a = 2&#xA;b = 3&#xA;c = 2*a + b/3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can just copy and paste the result into your own LaTeX document.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/connorferster/handcalcs/main/docs/images/tex.png&#34; alt=&#34;tex cell magic demo&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Subscripts (and sub-subscripts, etc.)&lt;/h3&gt; &#xA;&lt;p&gt;Subscripts in variable names are automatically created when &lt;code&gt;_&lt;/code&gt; is used in the variable name. Sub-subscripts are nested for each separate &lt;code&gt;_&lt;/code&gt; used in series.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/connorferster/handcalcs/main/docs/images/subscripts.png&#34; alt=&#34;Subscripts demo&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Greek symbols&lt;/h3&gt; &#xA;&lt;p&gt;Any variable name that contains a Greek letter (e.g. &#34;pi&#34;, &#34;upsilon&#34;, &#34;eta&#34;, etc.) as a string or substring will be replaced by the appropriate Latex code to represent that Greek letter.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Using lower case letters as your variable name will make a lower case Greek letter.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Using a Capitalized Name for your variable will render it as an upper case Greek letter.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/connorferster/handcalcs/main/docs/images/greeks.png&#34; alt=&#34;Greek symbols demo&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Functions, built-in or custom&lt;/h3&gt; &#xA;&lt;p&gt;If you are using Python functions in your calculation, eg. &lt;code&gt;min()&lt;/code&gt; or &lt;code&gt;tan()&lt;/code&gt;, they will be replaced with Latex code to represent that function in Latex.&lt;/p&gt; &#xA;&lt;p&gt;If you are creating your own functions, then they will be rendered in Latex as a custom operator.&lt;/p&gt; &#xA;&lt;p&gt;If you are using a function with the name &lt;code&gt;sqrt&lt;/code&gt; (whether your own custom implementation or from &lt;code&gt;math.sqrt&lt;/code&gt;), then it will be rendered as the radical sign.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/connorferster/handcalcs/main/docs/images/functions.png&#34; alt=&#34;Functions&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Rendered in-line Comments&lt;/h3&gt; &#xA;&lt;p&gt;Any comments placed after a line of calculation will be rendered as an inline comment in the Latex.&lt;/p&gt; &#xA;&lt;p&gt;This makes it convenient to make notes along side your calculations to briefly explain where you may have acquired or derived a particular value.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/connorferster/handcalcs/main/docs/images/comments.png&#34; alt=&#34;Comments&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Skip the substitution&lt;/h3&gt; &#xA;&lt;p&gt;Any calculation entirely wrapped in parentheses, &lt;code&gt;()&lt;/code&gt;, will be rendered as just &lt;code&gt;param = result&lt;/code&gt;, without the substitution.&lt;/p&gt; &#xA;&lt;p&gt;This can be convient when you want to calculate a parameter on the fly and not have it be the focus of the calculation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/connorferster/handcalcs/main/docs/images/no_subs.png&#34; alt=&#34;Skip the substitution&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Conditional statements&lt;/h3&gt; &#xA;&lt;p&gt;Many calculations in the &#34;real world&#34; are dependent on context.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;handcalcs&lt;/code&gt; allows for the inclusion of some simple conditional statements into its code in a way that makes it easier to understand the context of the calculation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/connorferster/handcalcs/main/docs/images/conditionals.png&#34; alt=&#34;Conditional calculations&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: Multiple &#34;lines&#34; of calculations can be used after the conditional expression provided that they are all on the same line and separated with &#34;&lt;code&gt;;&lt;/code&gt;&#34;. See &lt;a href=&#34;https://github.com/connorferster/handcalcs#expected-behaviours&#34;&gt;Expected Behaviours&lt;/a&gt; for more context.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Numeric integration&lt;/h3&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;scipy.quad&lt;/code&gt; to perform numeric integration on a pre-defined function and have &lt;code&gt;handcalcs&lt;/code&gt; perform a basic rendering of it.&lt;/p&gt; &#xA;&lt;p&gt;This behaviour is triggered if you use a function with either &lt;code&gt;integrate&lt;/code&gt; or &lt;code&gt;quad&lt;/code&gt; in the name.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/connorferster/handcalcs/main/docs/images/integration.png&#34; alt=&#34;Numeric integration&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&#34;Prime&#34; notation&lt;/h3&gt; &#xA;&lt;p&gt;Sometimes you need to write &#34;prime&#34; on your variables:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/connorferster/handcalcs/main/docs/images/prime.png&#34; alt=&#34;Prime Notation&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;PDF Printing in Jupyter&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: With &lt;code&gt;nbconvert&lt;/code&gt; v6.0, templates are handled in a different manner that is incompatible with the below method. Be sure to use &lt;code&gt;nbconvert&lt;/code&gt; v5.6.1 to allow template installation and swapping.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Jupyter Notebooks/Lab are able to print notebooks to PDF through two methods. Both can produce great results with handcalcs:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Export to HTML&lt;/strong&gt;: Open the exported HTML page in your browser and print to PDF using your system&#39;s own PDF printer &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Pros: No additional software required, you can include images copy-pasted into your Jupyter notebook, and you can change the scale of the printed PDF in your brower&#39;s print window.&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;ol start=&#34;2&#34;&gt; &#xA;   &lt;li&gt;Cons: Page breaks can be less graceful on html output and you cannot otherwise customize the output further like you can with a .tex file&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Export to PDF (via Latex)&lt;/strong&gt;: Using your previously installed Latex distribution, Jupyter will first export your notebook to a .tex file and then render the file to PDF. This requires you to have a Latex distribution already installed on your system (Instructions: &lt;a href=&#34;https://miktex.org/howto/install-miktex&#34;&gt;windows&lt;/a&gt;, &lt;a href=&#34;https://tug.org/mactex/mactex-download.html&#34;&gt;mac os&lt;/a&gt;, &lt;a href=&#34;https://linuxconfig.org/how-to-install-latex-on-ubuntu-20-04-focal-fossa-linux&#34;&gt;ubuntu&lt;/a&gt;). &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Pros: Page breaks tend to work better and you have the ability to customize your output further using the generated .tex file&lt;/li&gt; &#xA;   &lt;li&gt;Cons: Cannot easily rescale the PDF print (e.g. to ensure really long equations fit on the page) and you cannot include images copy/pasted into your Notebook. Images can be used but must be linked in with Markdown and the file must reside in the same directory as your Notebook.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;PDF notebooks made with handcalcs tend to look better if the code input cells are suppressed. To make this convenient, handcalcs ships with two modified nbconvert template files that can be installed by running a function in Jupyter before exporting.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;handcalcs.install_templates.install_html(swap_in:str = &#34;&#34;, swap_out:str = &#34;full.tpl&#34;, restore:bool = False)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;handcalcs.install_templates.install_latex(swap_in:str = &#34;&#34;, swap_out:str = &#34;article.tplx&#34;, restore:bool = False)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;swap_in&lt;/code&gt;&lt;/strong&gt;: the name of the handcalcs template file you wish to install. When not provided, the function will print a list of available templates whose names are acceptable inputs for this argument.&lt;br&gt; &lt;strong&gt;&lt;code&gt;swap_out&lt;/code&gt;&lt;/strong&gt;: the name of the nbconvert template file you wish to replace (default file is nbconvert&#39;s default html or latex template, respectively)&lt;br&gt; &lt;strong&gt;&lt;code&gt;restore&lt;/code&gt;&lt;/strong&gt;: when set to &lt;code&gt;True&lt;/code&gt;, the function will remove your previously installed template file and restore the default nbconvert template.&lt;/p&gt; &#xA;&lt;h3&gt;Design rationale&lt;/h3&gt; &#xA;&lt;p&gt;While there are methods for manually changing the template that nbconvert uses, this has to be performed on the command line as a separate conversion step. This default template override approach is not available from within the Jupyter GUI interface.&lt;/p&gt; &#xA;&lt;p&gt;I have found that the easiest and most reliable way to quickly change the default export behaviour is to swap out and replace the default template files. By using this approach, you can export your notebooks directly from the Jupyter GUI menu options and have your notebooks look how you wish without fussing with multiple configuration settings that may or may not take.&lt;/p&gt; &#xA;&lt;h3&gt;Note&lt;/h3&gt; &#xA;&lt;p&gt;When handcalcs installs these templates, they make a semi-permanent change to your templates that will persist for all of your other notebooks that you print from with Jupyter, regardless of whether you are working with handcalcs or not. It does this because it is &#34;physically&#34; swapping out and replacing your nbconvert default template files for your local installation meaning it will persist past the end of your Jupyter session.&lt;/p&gt; &#xA;&lt;p&gt;This change can be reverted at any time by using the &lt;code&gt;restore = True&lt;/code&gt; argument. Additionally, the function will not let you repeatedly install the same template. If you wish to install another template, the function will prompt you to run the function with &lt;code&gt;restore = True&lt;/code&gt; before attempting another installation.&lt;/p&gt; &#xA;&lt;p&gt;In this way, handcalcs can fully manage these template installations for you. However, if you manually alter the file names of an installed handcalcs template in the nbconvert templates directory, there is no guarantee that your original template can be successfully restored.&lt;/p&gt; &#xA;&lt;h3&gt;Example of use&lt;/h3&gt; &#xA;&lt;p&gt;You can perform the same below process using either &lt;code&gt;install_html&lt;/code&gt; or &lt;code&gt;install_latex&lt;/code&gt; functions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from handcalcs.install_templates import install_html&#xA;&amp;gt;&amp;gt;&amp;gt; from handcalcs.install_templates import install_latex&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; install_html() # Use with no arguments to discover available templates&#xA;Available templates:&#xA; [&#39;full_html_noinputs.tpl&#39;]&#xA;&amp;gt;&amp;gt;&amp;gt; install_html(&#39;full_html_noinputs.tpl&#39;) # Select the template you wish to install&#xA;/usr/Name/path/to/your/nbconvert/templates/dir/html/full.tpl&#xA;-is now-&#xA;/usr/Name/path/to/your/nbconvert/templates/dir/html/full_swapped.tpl&#xA;&#xA;/usr/Name/path/to/your/handcalcs/templates/dir/html/full_html_noinputs.tpl&#xA;-is now-&#xA;/usr/Name/path/to/your/nbconvert/templates/dir/html/full.tpl&#xA;&#xA;&amp;gt;&amp;gt;&amp;gt; install_html(restore = True) # To revert this change to your template files&#xA;/user/Name/path/to/your/nbconvert/templates/dir/html/full.tpl&#xA;-was restored from-&#xA;/user/Name/path/to/your/nbconvert/templates/dir/html/full_swapped.tpl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Expected Behaviours&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;handcalcs&lt;/code&gt; is intended to render arithmetical calculations written in Python code. It is not intended to render arbitrary Python into Latex.&lt;/p&gt; &#xA;&lt;p&gt;Given that, handcalcs only renders a small subset of Python and there is a lot that will not work, especially anything that happens over multiple lines (e.g. function definitions, &lt;code&gt;for&lt;/code&gt; loops, &lt;code&gt;with&lt;/code&gt; statements, etc.).&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;handcalcs&lt;/code&gt; works by parsing individual &lt;em&gt;lines&lt;/em&gt; of Python within a cell. It does not parse the cell as a whole. Therefore all statements to be rendered must be contained on a single line.&lt;/p&gt; &#xA;&lt;h3&gt;Accepted datatypes&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;handcalcs&lt;/code&gt; will make an attempt to render all datatypes. However, it cannot yet render all &#34;collection&#34; based data types, e.g. &lt;code&gt;list&lt;/code&gt; and &lt;code&gt;dict&lt;/code&gt;. If you are using a collection to hold argument functions, e.g. &lt;code&gt;sum((23, 123, 45))&lt;/code&gt;, use a &lt;code&gt;tuple&lt;/code&gt; to ensure it is rendered properly. Alternatively, you can use one-dimensional &lt;code&gt;numpy&lt;/code&gt; arrays (vectors) with handcalcs.&lt;/p&gt; &#xA;&lt;p&gt;Objects are rendered into Latex by two main approaches:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If the object has a &lt;code&gt;_repr_latex_()&lt;/code&gt; method defined, then that method is used.&lt;/p&gt; &lt;p&gt;a) If the object has some alternate method for rendering itself into Latex code, e.g. &lt;code&gt;.latex()&lt;/code&gt; or &lt;code&gt;.to_latex()&lt;/code&gt;, that will be attempted as well.&lt;/p&gt; &lt;p&gt;In order for the representation to be rendered properly, the object&#39;s Latex represention must use commands that are implemented with MathJax and/or Katex.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If the object does not have a Latex method, then &lt;code&gt;str()&lt;/code&gt; is used.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you are using object types which have str methods that render as &lt;code&gt;&amp;lt;MyObject: value=34&amp;gt;&lt;/code&gt;, then that&#39;s what the Latex interpreter will see and attempt to render.&lt;/p&gt; &#xA;&lt;h3&gt;Arithmetic operators&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;+&lt;/code&gt; renders as &lt;code&gt;+&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-&lt;/code&gt; renders as &lt;code&gt;-&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;*&lt;/code&gt; renders as the &#34;dot operator&#34; (Latex: \cdot)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/&lt;/code&gt; always renders as a fraction&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;**&lt;/code&gt; renders as superscripts&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;%&lt;/code&gt; renders as the &#34;mod function&#34; (Latex: \mod)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Currently &lt;code&gt;//&lt;/code&gt; is not rendered but you can easily use &lt;code&gt;math.floor&lt;/code&gt; as a function instead.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;for&lt;/code&gt; loops and other iterations&lt;/h3&gt; &#xA;&lt;p&gt;Showing rendered iterations is not supported. The intention for use is that you perform your iterations in a cell that is not rendered and then, once the iteration has produced the desired resulting value, you render the result in a separate cell.&lt;/p&gt; &#xA;&lt;h2&gt;Gotchas&lt;/h2&gt; &#xA;&lt;p&gt;Because &lt;code&gt;handcalcs&lt;/code&gt; is designed for use within the Jupyter environment, and because Jupyter cells can be run out of order, there exists the possibility of having a big mess of beautifully rendered but &lt;strong&gt;completely incorrect&lt;/strong&gt; calculations if you &lt;em&gt;re-use variable names throughout your notebook&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;handcalcs&lt;/code&gt; uses the notebook&#39;s user namespace dictionary to look up values for all variables in the namespace. If your calculations are re-using variable names throughout the notebook, then the dictionary entry for that name may not be what you think it is when you run cells out of the order originally intended.&lt;/p&gt; &#xA;&lt;p&gt;You &lt;em&gt;can&lt;/em&gt; re-use variable names to good effect throughout a notebook, &lt;em&gt;IFF&lt;/em&gt; the cells are run in the correct order (easier if this is just top to bottom).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;On this note: if you are using &lt;code&gt;handcalcs&lt;/code&gt; for any kind of reporting that may become a legal document (e.g. design engineering calculations), it is up to YOU to ensure that the results are what you expect them to be. &lt;code&gt;handcalcs&lt;/code&gt; is free and open-source software and the author(s) are not responsible for incorrect calculations that result from its use.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;That being said, the very purpose for the way &lt;code&gt;handcalcs&lt;/code&gt; renders its math is to make it very easy to confirm and verify calculations by hand.&lt;/p&gt; &#xA;&lt;h2&gt;YouTube Tutorials&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Getting Started with handcalcs (assumes zero Python knowledge)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ZNFhLCWqA_g&#34;&gt;https://www.youtube.com/watch?v=ZNFhLCWqA_g&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Engineering Calculations: handcalcs-on-Jupyter vs. Excel&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=n9Uzy3Eb-XI&#34;&gt;https://www.youtube.com/watch?v=n9Uzy3Eb-XI&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Applications and Compatibility with OPP (Other People&#39;s Packages)&lt;/h2&gt; &#xA;&lt;p&gt;** Please see &lt;a href=&#34;https://github.com/connorferster/handcalcs/wiki&#34;&gt;the wiki&lt;/a&gt; for applications of &lt;code&gt;handcalcs&lt;/code&gt; in education and engineering, in addition to examples of using &lt;code&gt;handcalcs&lt;/code&gt; with other Python libraries such &lt;a href=&#34;https://github.com/connorferster/handcalcs/wiki/Handcalcs-on--Streamlit&#34;&gt;streamlit&lt;/a&gt; and &lt;a href=&#34;https://github.com/connorferster/handcalcs/wiki/Handcalcs-on-Papermill&#34;&gt;papermill&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>