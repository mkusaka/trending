<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-22T01:30:53Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>aculix/bitplay</title>
    <updated>2025-07-22T01:30:53Z</updated>
    <id>tag:github.com,2025-07-22:/aculix/bitplay</id>
    <link href="https://github.com/aculix/bitplay" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Stream video torrents in your web browser with ease.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BitPlay: Torrent Streaming Web App&lt;/h1&gt; &#xA;&lt;p&gt;BitPlay is a web application built with Go that allows you to stream video content directly from torrents in your browser. It features a clean web UI, support for SOCKS5 proxies, and integration with Prowlarr and Jackett for seamless torrent searching.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aculix/bitplay/main/screenshots/bitplay_home.png&#34; alt=&#34;Bitplay Home&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Direct Torrent Streaming:&lt;/strong&gt; Stream video files from magnet links or torrent files directly without needing to download them completely first.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Web-Based UI:&lt;/strong&gt; Access and control BitPlay through a user-friendly web interface.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Proxy Support:&lt;/strong&gt; Configure a SOCKS5 proxy for all torrent-related traffic (fetching metadata, peer connections). (Note: HTTP proxies are not currently supported).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Prowlarr Integration:&lt;/strong&gt; Connect to your Prowlarr instance to search across your configured indexers directly within BitPlay.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Jackett Integration:&lt;/strong&gt; Connect to your Jackett instance as an alternative search provider.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;On-the-fly Subtitle Conversion:&lt;/strong&gt; Converts SRT subtitles to VTT format for browser compatibility.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Session Management:&lt;/strong&gt; Handles multiple torrent sessions and cleans up inactive ones.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;You can run BitPlay either directly using Go or via Docker Compose.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Go:&lt;/strong&gt; Requires Go 1.18 or later (if running locally).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Docker &amp;amp; Docker Compose:&lt;/strong&gt; Required if running with Docker.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running Locally with Go&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Clone the repository:&lt;/strong&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/aculix/bitplay.git&#xA;cd bitplay&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Download dependencies:&lt;/strong&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go mod download&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run the application:&lt;/strong&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go run main.go&#xA;&lt;/code&gt;&lt;/pre&gt; By default, the server will start on &lt;code&gt;http://localhost:3347&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Running with Docker Compose&lt;/h3&gt; &#xA;&lt;p&gt;This is the recommended method for deployment.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create a &lt;code&gt;docker-compose.yml&lt;/code&gt; file:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;services:&#xA;  bitplay:&#xA;    image: ghcr.io/aculix/bitplay:main&#xA;    container_name: bitplay&#xA;    ports:&#xA;      - 3347:3347 # Expose the web UI port&#xA;    volumes:&#xA;      # Mount the config directory for persistent settings (Optional)&#xA;      - ./config:/app/config &#xA;    restart: unless-stopped&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Optional Persistence:&lt;/strong&gt; By default, settings (Proxy, Prowlarr/Jackett) are stored inside the container and will be lost if the container is restarted. To make settings persistent across restarts, you can mount a local directory from your host to &lt;code&gt;/app/config&lt;/code&gt; inside the container using the &lt;code&gt;volumes&lt;/code&gt; option above.&lt;/li&gt; &#xA;   &lt;li&gt;If you choose to mount the directory for persistence, you &lt;strong&gt;must&lt;/strong&gt; create the directory on your host machine &lt;strong&gt;before&lt;/strong&gt; starting the container for the first time: &lt;code&gt;mkdir -p ./config&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;If you don&#39;t mount this volume, the application will still function correctly, but you will need to re-configure your settings after each container restart. Torrent data itself is always ephemeral.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Start the container:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Access the application:&lt;/strong&gt; Open your browser to &lt;code&gt;http://&amp;lt;your-server-ip&amp;gt;:3347&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Running with Docker Run&lt;/h3&gt; &#xA;&lt;p&gt;Alternatively, you can run the container directly using &lt;code&gt;docker run&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;(Optional) Create the config directory for persistence:&lt;/strong&gt; If you want your settings (Proxy, Prowlarr/Jackett) to persist across container restarts, create the configuration directory on your host first:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p ./config&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you skip this step and the volume mount below, the application will still work, but settings will be lost on restart.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run the container:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d \&#xA;  --name bitplay \&#xA;  -p 3347:3347 \&#xA;  # Add the volume mount below ONLY if you want persistent settings (and created ./config above)&#xA;  -v $(pwd)/config:/app/config \&#xA;  --restart unless-stopped \&#xA;  ghcr.io/aculix/bitplay:main&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;-d&lt;/code&gt;: Run in detached mode (background).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;--name bitplay&lt;/code&gt;: Assign a name to the container.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;-p 3347:3347&lt;/code&gt;: Map port 3347 on the host to port 3347 in the container.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;-v $(pwd)/config:/app/config&lt;/code&gt;: (Optional) Mount the local &lt;code&gt;./config&lt;/code&gt; directory for persistent settings.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;--restart unless-stopped&lt;/code&gt;: Configure the container to restart automatically unless manually stopped.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;ghcr.io/aculix/bitplay:main&lt;/code&gt;: The Docker image to use.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Access the application:&lt;/strong&gt; Open your browser to &lt;code&gt;http://&amp;lt;your-server-ip&amp;gt;:3347&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;BitPlay is configured primarily through its web interface after starting the application.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Access the Web UI:&lt;/strong&gt; Go to &lt;code&gt;http://localhost:3347&lt;/code&gt; (or your server&#39;s address).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Navigate to Settings:&lt;/strong&gt; Find the settings or configuration section within the UI.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Configure:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Proxy:&lt;/strong&gt; Enable/disable proxy support and provide the full SOCKS5 proxy URL (e.g., &lt;code&gt;socks5://user:pass@host:port&lt;/code&gt;). Test the connection using the provided button.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Prowlarr:&lt;/strong&gt; Enable/disable Prowlarr, provide the Prowlarr Host URL (e.g., &lt;code&gt;http://prowlarr:9696&lt;/code&gt;), and your Prowlarr API Key. Test the connection.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Jackett:&lt;/strong&gt; Enable/disable Jackett, provide the Jackett Host URL (e.g., &lt;code&gt;http://jackett:9117&lt;/code&gt;), and your Jackett API Key. Test the connection.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Settings are saved automatically to &lt;code&gt;/app/config/settings.json&lt;/code&gt; inside the Docker container, which maps to &lt;code&gt;./config/settings.json&lt;/code&gt; on the host via the mounted volume in the example Docker Compose setup above.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Configure Settings:&lt;/strong&gt; Set up your proxy and search providers (Prowlarr/Jackett) as described above.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Search:&lt;/strong&gt; Use the search bar to query Prowlarr or Jackett for torrents.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Add Torrent:&lt;/strong&gt; Paste a magnet link directly or click a search result to add the torrent to BitPlay.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;BitPlay also supports opening from another app/program by providing torrent or magnet link as query parameter &lt;code&gt;torrent&lt;/code&gt;. The link needs to be URL-encoded!&lt;/p&gt; &#xA;   &lt;p&gt;Ex: &lt;code&gt;http://localhost:3347?torrent=magnet%3A%3Fxt%3Durn%3Abtih%3A08ada5a7a6183aae1e09d831df6748d566095a10%26dn%3DSintel%26tr%3Dudp%253A%252F%252Fexplodie.org%253A6969%26tr%3Dudp%253A%252F%252Ftracker.coppersurfer.tk%253A6969%26tr%3Dudp%253A%252F%252Ftracker.empire-js.us%253A1337%26tr%3Dudp%253A%252F%252Ftracker.leechers-paradise.org%253A6969%26tr%3Dudp%253A%252F%252Ftracker.opentrackr.org%253A1337%26tr%3Dwss%253A%252F%252Ftracker.btorrent.xyz%26tr%3Dwss%253A%252F%252Ftracker.fastcast.nz%26tr%3Dwss%253A%252F%252Ftracker.openwebtorrent.com%26ws%3Dhttps%253A%252F%252Fwebtorrent.io%252Ftorrents%252F%26xs%3Dhttps%253A%252F%252Fwebtorrent.io%252Ftorrents%252Fsintel.torrent&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Stream:&lt;/strong&gt; Once the torrent info is loaded, select the video file you want to watch. BitPlay will start downloading and streaming it directly in the built-in player.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! Please feel free to submit pull requests or open issues. (You can add more details here if you have specific contribution guidelines).&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License. See the &lt;a href=&#34;https://raw.githubusercontent.com/aculix/bitplay/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
</feed>