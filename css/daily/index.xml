<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-10T01:32:09Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>JordanHatch/civictech.club</title>
    <updated>2022-11-10T01:32:09Z</updated>
    <id>tag:github.com,2022-11-10:/JordanHatch/civictech.club</id>
    <link href="https://github.com/JordanHatch/civictech.club" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A directory of Fediverse users working to make government and democracy better.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;civictech.club&lt;/h1&gt; &#xA;&lt;p&gt;A directory of Fediverse users working to make government and democracy better.&lt;/p&gt; &#xA;&lt;h2&gt;Adding somebody to the list&lt;/h2&gt; &#xA;&lt;p&gt;Create a new file in the &lt;code&gt;_people&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;The fields you can provide are:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;---&#xA;name: &#34;Your name&#34;&#xA;account: &#34;@username@mastodon.instance&#34;&#xA;link: &#34;https://mastodon.instance/@username&#34;&#xA;image: &#34;https://link.to/your.avatar.jpg&#34;&#xA;country: &amp;lt;2-letter ISO country code&amp;gt;&#xA;---&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;account&lt;/code&gt; and &lt;code&gt;link&lt;/code&gt; fields are required, but &lt;code&gt;image&lt;/code&gt; and &lt;code&gt;country&lt;/code&gt; are optional.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Screenly/screenly-ose</title>
    <updated>2022-11-10T01:32:09Z</updated>
    <id>tag:github.com,2022-11-10:/Screenly/screenly-ose</id>
    <link href="https://github.com/Screenly/screenly-ose" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The most popular digital signage project on GitHub!&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://dashboard.balena-cloud.com/deploy?repoUrl=https://github.com/screenly/screenly-ose&amp;amp;defaultDeviceType=raspberrypi3&#34;&gt;&lt;img src=&#34;https://www.balena.io/deploy.svg?sanitize=true&#34; alt=&#34;balena deploy button&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Screenly OSE - Digital Signage for the Raspberry Pi&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.screenly.io/screenly-ose-vs-pro/&#34;&gt;Which Screenly version is right for me?&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;PLEASE NOTE:&lt;/strong&gt; Screenly OSE and the commercial version of Screenly (formerly known as Screenly Pro) are &lt;strong&gt;two completely separate products&lt;/strong&gt;. They &lt;strong&gt;do not share any code base and behave very differently&lt;/strong&gt; both with regards to management and performance. Hence do not use one to evaluate the other.&lt;/p&gt; &#xA;&lt;p&gt;Want to help OSE thrive? Support us using &lt;a href=&#34;https://github.com/sponsors/Screenly&#34;&gt;GitHub Sponsor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#Screenly/screenly-ose&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=Screenly/screenly-ose&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Disk images&lt;/h2&gt; &#xA;&lt;p&gt;The quickest way to get started is to use one of our pre-built disk images (powered by &lt;a href=&#34;https://hub.balena.io/&#34;&gt;Balena Hub&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Screenly/screenly-ose/releases/download/v0.18.4/2022-11-04-raspberry-pi.zip&#34;&gt;Raspberry Pi 1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Screenly/screenly-ose/releases/download/v0.18.4/2022-11-04-raspberry-pi2.zip&#34;&gt;Raspberry Pi 2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Screenly/screenly-ose/releases/download/v0.18.4/2022-11-04-raspberrypi3.zip&#34;&gt;Raspberry Pi 3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Screenly/screenly-ose/releases/download/v0.18.4/2022-11-04-raspberrypi4-64.zip&#34;&gt;Raspberry Pi 4&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Do however note that that we are still in the process of knocking out some bugs. You can track the known issues &lt;a href=&#34;https://github.com/Screenly/screenly-ose/projects/8&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installing on Raspbian/Raspberry Pi OS&lt;/h2&gt; &#xA;&lt;p&gt;The tl;dr for installing Screenly OSE on &lt;a href=&#34;https://www.raspberrypi.com/software/&#34;&gt;Raspberry Pi OS&lt;/a&gt; Bullseye Lite is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bash &amp;lt;(curl -sL https://install-ose.srly.io)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;This installation will take 15 minutes to several hours&lt;/strong&gt;, depending on variables such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The Raspberry Pi hardware version&lt;/li&gt; &#xA; &lt;li&gt;The SD card&lt;/li&gt; &#xA; &lt;li&gt;The internet connection&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;During ideal conditions (Raspberry Pi 3 Model B+, class 10 SD card and fast internet connection), the installation normally takes 15-30 minutes. On a Raspberry Pi Zero or Raspberry Pi Model B with a class 4 SD card, the installation will take hours. As such, it is usually a lot faster to use the provided disk images.&lt;/p&gt; &#xA;&lt;h2&gt;Installing with Balena&lt;/h2&gt; &#xA;&lt;p&gt;While you can deploy to your own Balena fleet, the easiest way to deploy using &lt;a href=&#34;https://hub.balena.io/organizations/screenly_ose/fleets&#34;&gt;Balena OpenFleets&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Upgrading on Screenly OSE&lt;/h2&gt; &#xA;&lt;p&gt;The releases are based on the &lt;a href=&#34;https://github.com/Screenly/screenly-ose/projects&#34;&gt;Sprints&lt;/a&gt;. At the end of each sprint, we merge the master branch (also known as the developer version), into the production branch and generate a new disk image.&lt;/p&gt; &#xA;&lt;p&gt;Should you want to upgrade to the latest development version (for instance if you want to try a bug-fix), you can do this by simply re-running the installation script and select that you want to install the development version. Re-running the installation script should normally not take more than a few minutes (depending on how much changed).&lt;/p&gt; &#xA;&lt;p&gt;To learn more about Screenly, please visit the official website at &lt;a href=&#34;http://www.screenly.io&#34;&gt;Screenly.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=FQte5yP0azE&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/FQte5yP0azE/0.jpg&#34; alt=&#34;An introduction to digital signage with Screenly OSE&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Quick links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://support.screenly.io/hc/en-us/categories/360002606694-OSE&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forums.screenly.io/c/screenly-ose&#34;&gt;Screenly OSE Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.screenly.io/ose/&#34;&gt;Screenly OSE Home&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ose.demo.screenlyapp.com/&#34;&gt;Live Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Screenly/screenly-ose/raw/master/docs/qa-checklist.md&#34;&gt;QA Checklist&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ose.demo.screenlyapp.com/api/docs/&#34;&gt;API Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Screenly/screenly-ose/raw/master/docs/developer-documentation.md&#34;&gt;Developer Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Screenly OSE works on all Raspberry Pi versions, including Raspberry Pi Zero, Raspberry Pi 3 Model B, and Raspberry Pi 4 Model B.&lt;/p&gt; &#xA;&lt;h2&gt;Dockerized Development Environment&lt;/h2&gt; &#xA;&lt;p&gt;To simplify development of the server module of Screenly OSE, we&#39;ve created a Docker container. This is intended to run on your local machine with the Screenly OSE repository mounted as a volume.&lt;/p&gt; &#xA;&lt;p&gt;Assuming you&#39;re in the source code repository, simply run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker-compose \&#xA;    -f docker-compose.dev.yml up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running the Unit Tests&lt;/h2&gt; &#xA;&lt;p&gt;Start the containers.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker-compose \&#xA;    -f docker-compose.test.yml up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the unit tests.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker-compose \&#xA;    -f docker-compose.test.yml \&#xA;    exec -T srly-ose-test bash ./bin/prepare_test_environment.sh -s&#xA;$ docker-compose \&#xA;    -f docker-compose.test.yml \&#xA;    exec -T srly-ose-test nosetests -v -a &#39;!fixme&#39;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>