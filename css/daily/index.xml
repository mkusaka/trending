<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-13T01:30:37Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>google-gemini/gemini-api-quickstart</title>
    <updated>2025-06-13T01:30:37Z</updated>
    <id>tag:github.com,2025-06-13:/google-gemini/gemini-api-quickstart</id>
    <link href="https://github.com/google-gemini/gemini-api-quickstart" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Get up and running with the Gemini API in under 5 minutes (with Python)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gemini API Quickstart - Python&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains a simple Python Flask App running with the Google AI Gemini API, designed to get you started building with Gemini&#39;s multi-modal capabilities. The app comes with a basic UI and a Flask backend.&lt;/p&gt; &#xA;&lt;img width=&#34;1271&#34; alt=&#34;Screenshot 2024-05-07 at 7 42 28 AM&#34; src=&#34;https://github.com/logankilpatrick/gemini-api-quickstart/assets/35577566/156ae3e0-cffa-47a3-8a71-1bded78c4632&#34;&gt; &#xA;&lt;h2&gt;Basic request&lt;/h2&gt; &#xA;&lt;p&gt;To send your first API request with the &lt;a href=&#34;https://ai.google.dev/gemini-api/docs/libraries#python&#34;&gt;Google Gen AI SDK&lt;/a&gt;, make sure you have the right dependencies installed (see installation steps below) and then run the following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from google import genai&#xA;&#xA;client = genai.Client(api_key=&#34;GEMINI_API_KEY&#34;)&#xA;chat = client.chats.create(model=&#34;gemini-2.0-flash&#34;)&#xA;&#xA;response = chat.send_message(&#34;Hello world!&#34;)&#xA;print(response.text)&#xA;&#xA;response = chat.send_message(&#34;Explain to me how AI works&#34;)&#xA;print(response.text)&#xA;&#xA;for message in chat.get_history():&#xA;    print(f&#39;role - {message.role}&#39;,end=&#34;: &#34;)&#xA;    print(message.parts[0].text)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If you don’t have Python installed, install it &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;from Python.org&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.github.com/en/repositories/creating-and-managing-repositories/cloning-a-repository&#34;&gt;Clone&lt;/a&gt; this repository.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a new virtual environment:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;macOS:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ python -m venv venv&#xA;$ . venv/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Windows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;&amp;gt; python -m venv venv&#xA;&amp;gt; .\venv\Scripts\activate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Linux:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ python -m venv venv&#xA;$ source venv/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the requirements:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make a copy of the example environment variables file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cp .env.example .env&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add your &lt;a href=&#34;https://ai.google.dev/gemini-api/docs/api-key&#34;&gt;API key&lt;/a&gt; to the newly created &lt;code&gt;.env&lt;/code&gt; file or as an environment variable.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the app:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ flask run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should now be able to access the app from your browser at the following URL: &lt;a href=&#34;http://localhost:5000&#34;&gt;http://localhost:5000&lt;/a&gt;!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rust-lang/rust-by-example</title>
    <updated>2025-06-13T01:30:37Z</updated>
    <id>tag:github.com,2025-06-13:/rust-lang/rust-by-example</id>
    <link href="https://github.com/rust-lang/rust-by-example" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Learn Rust with examples (Live code editor included)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rust By Example&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rust-lang/rust-by-example/actions&#34;&gt;&lt;img src=&#34;https://github.com/rust-lang/rust-by-example/actions/workflows/rbe.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Learn Rust with examples (Live code editor included)&lt;/p&gt; &#xA;&lt;h2&gt;Using&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to read Rust by Example, you can visit &lt;a href=&#34;https://doc.rust-lang.org/rust-by-example/&#34;&gt;https://doc.rust-lang.org/rust-by-example/&lt;/a&gt; to read it online.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to read it locally, &lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;install Rust&lt;/a&gt;, and then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/rust-lang/rust-by-example&#xA;cd rust-by-example&#xA;cargo install mdbook&#xA;mdbook build&#xA;mdbook serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To be able to run the examples, you must be connected to the internet; you can read all content offline, however!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;The following warnings can be ignored safely.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;[WARN] (mdbook::preprocess::cmd): The command wasn&#39;t found, is the &#34;gettext&#34; preprocessor installed?&#xA;[WARN] (mdbook::preprocess::cmd):   Command: mdbook-gettext&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using translated version&lt;/h3&gt; &#xA;&lt;p&gt;If there is a translated resource in &lt;code&gt;po/&lt;/code&gt; directory, it can be specified through &lt;code&gt;MDBOOK_BOOK__LANGUAGE&lt;/code&gt; like below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/rust-lang/rust-by-example&#xA;cd rust-by-example&#xA;cargo install mdbook&#xA;MDBOOK_BOOK__LANGUAGE=ja mdbook build&#xA;MDBOOK_BOOK__LANGUAGE=ja mdbook serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://github.com/rust-lang/rust-by-example/raw/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; file for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Translating&lt;/h2&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://github.com/rust-lang/rust-by-example/raw/master/TRANSLATING.md&#34;&gt;TRANSLATING.md&lt;/a&gt; file for more details.&lt;/p&gt; &#xA;&lt;h3&gt;Translating guide for each languages&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Japanese/日本語: &lt;a href=&#34;https://github.com/rust-lang/rust-by-example/raw/master/TRANSLATING_JA.md&#34;&gt;TRANSLATING_JA.md&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Translations to other languages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kberov/rust-by-example-bg&#34;&gt;Bulgarian&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rust-lang-cn/rust-by-example-cn&#34;&gt;Chinese&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Songbird0/FR_RBE&#34;&gt;French&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ruRust/rust-by-example&#34;&gt;Russian&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/EyesCrypto-Insights/rust-by-example-vn&#34;&gt;Vietnamese&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nazarepiedady/rust-com-exemplos&#34;&gt;Portuguese&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Rust by Example is licensed under either of&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apache License, Version 2.0, (&lt;a href=&#34;https://raw.githubusercontent.com/rust-lang/rust-by-example/master/LICENSE-APACHE&#34;&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;MIT license (&lt;a href=&#34;https://raw.githubusercontent.com/rust-lang/rust-by-example/master/LICENSE-MIT&#34;&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;at your option.&lt;/p&gt; &#xA;&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in Rust by Example by you, as defined in the Apache-2.0 license, shall be dually licensed as above, without any additional terms or conditions.&lt;/p&gt;</summary>
  </entry>
</feed>