<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-01T01:30:58Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>leanprover-community/leanprover-community.github.io</title>
    <updated>2025-07-01T01:30:58Z</updated>
    <id>tag:github.com,2025-07-01:/leanprover-community/leanprover-community.github.io</id>
    <link href="https://github.com/leanprover-community/leanprover-community.github.io" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hosts the website for mathlib and other Lean community infrastructure.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Lean prover community website&lt;/h1&gt; &#xA;&lt;p&gt;The deployed website lives on the &lt;code&gt;master&lt;/code&gt; branch of this repository. To make changes to the website, please fork the repository and make a PR against the &lt;a href=&#34;https://github.com/leanprover-community/leanprover-community.github.io/tree/lean4&#34;&gt;&lt;code&gt;lean4&lt;/code&gt;&lt;/a&gt; branch. Once your PR is merged, CI will automatically deploy the changes to the &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Building the bibliography requires &lt;a href=&#34;https://github.com/ge-ne/bibtool&#34;&gt;&lt;code&gt;bibtool&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;bibtool&lt;/code&gt; is not found, the build script will print a warning and just copy the raw &lt;code&gt;lean.bib&lt;/code&gt; file to the target.&lt;/p&gt; &#xA;&lt;p&gt;In order to rebuild the CSS from SCSS, you also need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sass-lang.com/&#34;&gt;sass&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twbs/bootstrap/archive/v4.4.1.zip&#34;&gt;bootstrap&lt;/a&gt; should be unpacked at the project root&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The website relies on several components which are built in other repositories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leanprover-community/mathlib_stats&#34;&gt;&lt;code&gt;mathlib_stats&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leanprover-community/lean4web&#34;&gt;&lt;code&gt;lean4web&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leanprover-community/mathlib4_docs&#34;&gt;&lt;code&gt;mathlib4_docs&lt;/code&gt;&lt;/a&gt; (built by CI in &lt;a href=&#34;https://github.com/leanprover/doc-gen4/&#34;&gt;doc-gen4&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build CSS if needed: &lt;code&gt;sass scss/lean.scss &amp;gt; css/lean.css&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build site using &lt;code&gt;make_site.py&lt;/code&gt;. Use option &lt;code&gt;--local&lt;/code&gt; for local viewing (internal url will be prefixed by local file path). Use option &lt;code&gt;--reload&lt;/code&gt; to continuously build when templates are changed (this won&#39;t work for watching changes in &lt;code&gt;data/&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want to retrieve the list of Zulip users to get the users map, the environment variable &lt;code&gt;ZULIP_KEY&lt;/code&gt; should be set with the Zulip API key of the map scraper bot.&lt;/p&gt; &#xA;&lt;p&gt;If you want to work on a new feature, there are several helpful tricks to know.&lt;/p&gt; &#xA;&lt;p&gt;First you will very quickly hit the GitHub API rate limit without authentication. You can &lt;a href=&#34;https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens#creating-a-personal-access-token-classic&#34;&gt;create a personal access token&lt;/a&gt; and run &lt;code&gt;GITHUB_TOKEN=my_token_copied_from_github ./make_site --local&lt;/code&gt; during your experiments.&lt;/p&gt; &#xA;&lt;p&gt;You can also run the script once normally and then run &lt;code&gt;NODOWNLOAD=1 ./make_site --local&lt;/code&gt; to build the website using the information previously downloaded. This information is stored into the &lt;code&gt;data_cache&lt;/code&gt; folder. If you need the script to download something but not everything you can temporarily change the relevant &lt;code&gt;if DOWNLOAD:&lt;/code&gt; into a &lt;code&gt;if not DOWNLOAD:&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also choose to render only certain templates using &lt;code&gt;./make_site --local --only my_template.html&lt;/code&gt;. This argument can actually be a regular expression, but giving one template name is the most common use case.&lt;/p&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Better integration with API docs&lt;/li&gt; &#xA; &lt;li&gt;Use webpack or similar to bundle all the javascript?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Lean 3 website&lt;/h2&gt; &#xA;&lt;p&gt;The files and history for the leanprover-community Lean 3 website can be found in the &lt;a href=&#34;https://github.com/leanprover-community/leanprover-community.github.io/tree/lean3&#34;&gt;&lt;code&gt;lean3&lt;/code&gt;&lt;/a&gt; branch of this repo.&lt;/p&gt; &#xA;&lt;h2&gt;Old website&lt;/h2&gt; &#xA;&lt;p&gt;The files and history for the old leanprover-community website can be found in the &lt;a href=&#34;https://github.com/leanprover-community/leanprover-community.github.io/tree/oldsite&#34;&gt;&lt;code&gt;oldsite&lt;/code&gt;&lt;/a&gt; branch of this repo.&lt;/p&gt;</summary>
  </entry>
</feed>