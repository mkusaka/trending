<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-01T01:30:06Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>KoriIku/luxirty-search</title>
    <updated>2025-03-01T01:30:06Z</updated>
    <id>tag:github.com,2025-03-01:/KoriIku/luxirty-search</id>
    <link href="https://github.com/KoriIku/luxirty-search" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一个搜索引擎，基于 Google，屏蔽内容农场，无广告，无跟踪，干净，简洁，快。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Luxirty Search&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://search.luxirty.com&#34;&gt;search.luxirty.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;一个搜索引擎，基于 Google，屏蔽内容农场，无广告，无跟踪，干净，简洁，快。&lt;/p&gt; &#xA;&lt;p&gt;如果想添加到浏览器中，搜索语法是 &lt;code&gt;search.luxirty.com/search?q=&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;特性&amp;amp;功能&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;内置内容农场屏蔽，包括csdn、华x云、百度云智能、腾讯云开发者等seo网站，以及一些 stackoverflow 中文翻译站。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;br&gt; 你可以在 &lt;a href=&#34;https://raw.githubusercontent.com/KoriIku/luxirty-search/main/docs/block_list.txt&#34;&gt;/docs/block_list.txt&lt;/a&gt;中查看完整的屏蔽名单。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;点击&lt;code&gt;For Program&lt;/code&gt;一键拉高 GitHub、Stackoverflow、v2ex、cnblog 权重，免去手打 site: 的麻烦。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;一键搜索 v2ex 、 Raddit&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;内置广告屏蔽、跟踪链接移除。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;与 uBlackList, Hit by Hidden 等工具的区别&lt;/h2&gt; &#xA;&lt;p&gt;这些工具在前端屏蔽搜索结果，也就是等到内容农场已经出现在搜索结果中，再将其删除或隐藏。&lt;/p&gt; &#xA;&lt;p&gt;而 Luxirty Search 通过配置 Annotations 让 Google 直接屏蔽垃圾网站，服务器在执行搜索时就已经将网站排除，可以理解为内置多条 &#39;-site:domain.com&#39; 。&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;欢迎 pr 和 issue。&lt;/p&gt; &#xA;&lt;p&gt;本项目并不复杂，只需要基础的前端知识 (css + js) 即可看懂本项目。&lt;/p&gt; &#xA;&lt;p&gt;下面是几个较简单的切入点，可以尝试从这里入手。&lt;/p&gt; &#xA;&lt;h3&gt;优化样式&lt;/h3&gt; &#xA;&lt;p&gt;本项目最大的作用其实是美化 cse 那个上古默认样式，我进行了基础的调整、暗黑适配、移动端适配，但肉眼可见的还有很多问题 Orz。&lt;/p&gt; &#xA;&lt;h3&gt;分享黑名单或优化名单&lt;/h3&gt; &#xA;&lt;p&gt;理论上而言，利用 GitHub Action 来自动生成 Annotations 文件是最好的做法，但我还没写(逃，所以目前直接写在 issue 里。&lt;/p&gt; &#xA;&lt;p&gt;你可以分享这些域名：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;黑名单域名：这些域名会直接被屏蔽&lt;/li&gt; &#xA; &lt;li&gt;代码相关的高质量来源：这些域名被视作优质来源，当点击“For Program”标签时优先级会被提高。&lt;/li&gt; &#xA; &lt;li&gt;当然，如果你认为有必要添加新的标签也可以提出来。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;当前的缺陷&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;对不同尺寸的屏幕适配不完整&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;暗黑模式下还有部分元素过亮或者过暗&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;未来计划&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;根据标题进行二次拦截&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;加入自动翻页（这个还不知道怎么实现）&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;经验分享&lt;/h3&gt; &#xA;&lt;p&gt;如果你在你的博客中介绍了本项目，欢迎将链接分享到issue，如果内容对其它使用本项目的用户有帮助(较为详细的介绍/部署教程/或其它任意有帮助的内容),我们会将您的文章链接添加到readme中。&lt;/p&gt; &#xA;&lt;h2&gt;原理&lt;/h2&gt; &#xA;&lt;p&gt;Luxirty Search 基于 Google 的可编程自定义搜索引擎(Google cse)，允许通过 Annotations 自定义屏蔽网站及搜索范围等，同时使用 Refinement Labels 提高 Github 等优质来源的权重。&lt;/p&gt; &#xA;&lt;p&gt;用人话来说，就是内置了屏蔽哪些网站、优先搜索哪些网站。&lt;/p&gt; &#xA;&lt;h3&gt;已知缺陷&lt;/h3&gt; &#xA;&lt;p&gt;这些缺陷是 Google CSE 或其它限制导致的，可能得不到解决。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;设置为默认引擎时，搜索栏无法自动补全（网页中有自动补全）&lt;/li&gt; &#xA; &lt;li&gt;无法根据时间筛选结果&lt;/li&gt; &#xA; &lt;li&gt;缺乏同义词替换，虽然 Google CSE 基于 Google，但 Google 官网的搜索引擎运用了多种技术来优化搜索结果，最显著的一点是同义词搜索，当使用的术语有所区别时，Google官网会使用意思相近的同义词进行搜索，而 Google CSE 不会，这会导致某些情况下的结果明显少于官网。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;部署&lt;/h1&gt; &#xA;&lt;p&gt;本质上而言，这是一个简单的 vue3 + vite 项目，因此你应该可以方便地将它部署到任何你喜欢的托管网站，例如 GitHub Pages、netfliy、Cloudflare Pages、vercel之类的。&lt;/p&gt; &#xA;&lt;p&gt;当然你也可以将其部署在自己的服务器上。&lt;/p&gt; &#xA;&lt;p&gt;无论你喜欢哪种方式，都只需要查看 vite 部署教程: &lt;a href=&#34;https://cn.vitejs.dev/guide/static-deploy&#34;&gt;https://cn.vitejs.dev/guide/static-deploy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;(可选)如果你想使用自己的cse，只需设置环境变量 &lt;code&gt;VITE_GOOGLE_CSE_CX&lt;/code&gt; ，从这里创建你的 cse 并获取 cx： &lt;a href=&#34;https://programmablesearchengine.google.com/about/&#34;&gt;https://programmablesearchengine.google.com/about/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;注意：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;如果你使用自己创建的 cse，那么的部署看起来会有区别，页面上的“For Program”等标签是通过 cse 的 “优化” 功能配置的。你需要先添加域名，然后添加对应标签，并在标签中选中想提升的域名。&lt;/li&gt; &#xA; &lt;li&gt;你还需要修改 opensearch.xml 中的域名，详细请看 &lt;a href=&#34;https://github.com/KoriIku/luxirty-search/issues/14&#34;&gt;https://github.com/KoriIku/luxirty-search/issues/14&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;一键部署(推荐)&lt;/h2&gt; &#xA;&lt;h3&gt;Deploy with Vercel&lt;/h3&gt; &#xA;&lt;p&gt;(搜索页404的问题已修复)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2FKoriIku%2Fluxiry-search&amp;amp;project-name=luxirty-search&amp;amp;repository-name=luxirty-search&#34;&gt;&lt;img src=&#34;https://vercel.com/button&#34; alt=&#34;Deploy with Vercel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Deploy to Netlify&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.netlify.com/start/deploy?repository=https://github.com/KoriIku/luxirty-search&#34;&gt;&lt;img src=&#34;https://www.netlify.com/img/deploy/button.svg?sanitize=true&#34; alt=&#34;Deploy to Netlify&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Docker 运行 （感谢 @shadowofmoo）&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;docker run --rm -p 80:80 ghcr.io/koriiku/luxirty-search&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;开发&lt;/h1&gt; &#xA;&lt;h2&gt;参考资料&lt;/h2&gt; &#xA;&lt;p&gt;唯一要看的参考资料：&lt;a href=&#34;https://developers.google.com/custom-search/docs/element&#34;&gt;https://developers.google.com/custom-search/docs/element&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;在本地调试&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pnpm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Compile and Hot-Reload for Development&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pnpm dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Compile and Minify for Production&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pnpm build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;更新记录&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;加快了启动速度&lt;/li&gt; &#xA; &lt;li&gt;添加了移除搜索结果中的跟踪链接 data-ct*&lt;/li&gt; &#xA; &lt;li&gt;移除了文字阴影&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;a href=&#34;https://star-history.com/#KoriIku/luxirty-search&amp;amp;Date&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=KoriIku/luxirty-search&amp;amp;type=Date&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=KoriIku/luxirty-search&amp;amp;type=Date&#34;&gt; &#xA;  &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=KoriIku/luxirty-search&amp;amp;type=Date&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>dtinth/vxchrome</title>
    <updated>2025-03-01T01:30:06Z</updated>
    <id>tag:github.com,2025-03-01:/dtinth/vxchrome</id>
    <link href="https://github.com/dtinth/vxchrome" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Chrome extension that listens to my voice, converts to text, and copies it to the clipboard.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;vx [chrome extension version]&lt;/h1&gt; &#xA;&lt;p&gt;A little Chrome extension that helps me input text using my voice on my Chromebook. It should work on macOS and Windows as well as on Linux.&lt;/p&gt; &#xA;&lt;h2&gt;How to install&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/vx/obopnfigmanifpiojfhebcegjepgaiif&#34;&gt;&lt;img alt=&#34;Available in the Chrome Web Store&#34; src=&#34;https://developer.chrome.com/webstore/images/ChromeWebStore_BadgeWBorder_v2_496x150.png&#34; width=&#34;248&#34; height=&#34;75&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to install from source code&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the source code and extract it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to &lt;code&gt;chrome://extensions&lt;/code&gt; and enable the &lt;strong&gt;Developer mode&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click “Load unpacked.”&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Select the downloaded folder.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Press &lt;code&gt;Ctrl+Shift+0&lt;/code&gt; to start a stop the recognition in English language.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Press &lt;code&gt;Ctrl+Shift+9&lt;/code&gt; to start a stop the recognition in Thai language.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Languages and keyboard shortcuts can be customized in the options.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Whatever you speak is copied into the clipboard, so you can paste into any apps immediately afterwards. If the recognition is incorrect, you can just re-speak it (or fix it manually).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to &lt;code&gt;chrome://extensions/shortcuts&lt;/code&gt; to customize the keyboard shortcuts to your liking. On Windows and macOS, you may also set the shortcut to be global, so that you can use it outside Chrome.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Testing on a fresh Chrome profile&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Generates an extension package&#xA;./scripts/build-package.sh&#xA;&#xA;# These two files are generated:&#xA;# 1. `tmp/vx` - and unpacked extension&#xA;# 2. `tmp/vx.zip` - the zipped version, for uploading to Google Chrome developer dashboard&#xA;&#xA;# Run it&#xA;rm -rf tmp/chrome-profile &amp;amp;&amp;amp; /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --no-first-run --no-default-browser-check --user-data-dir=&#34;$PWD/tmp/chrome-profile&#34; --load-extension=&#34;$PWD/tmp/vx&#34;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>