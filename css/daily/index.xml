<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-09T01:37:27Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>micro-joan/BlackStone</title>
    <updated>2022-08-09T01:37:27Z</updated>
    <id>tag:github.com,2022-08-09:/micro-joan/BlackStone</id>
    <link href="https://github.com/micro-joan/BlackStone" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pentesting Reporting Tool&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/55983491/182498046-639e515c-8de0-4804-959b-b53145e79109.gif&#34; alt=&#34;Untitled Project&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;Mi website: &lt;a href=&#34;https://microjoan.com&#34;&gt;https://microjoan.com&lt;/a&gt; &lt;br&gt; Use and installation video: &lt;a href=&#34;https://youtu.be/qasPlaaYxiU&#34;&gt;https://youtu.be/qasPlaaYxiU&lt;/a&gt; &lt;br&gt; Buy me a coffee: &lt;a href=&#34;https://www.buymeacoffee.com/microjoan&#34;&gt;https://www.buymeacoffee.com/microjoan&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;BlackStone Project v1.0&lt;/h1&gt; &#xA;&lt;p&gt;BlackStone project or &#34;BlackStone Project&#34; is a tool created in order to automate the work of drafting and submitting a report on audits of ethical hacking or pentesting.&lt;/p&gt; &#xA;&lt;p&gt;In this tool we can register in the database the vulnerabilities that we find in the audit, classifying them by internal, external audit or wifi, in addition, we can put your description and recommendation, as well as the level of severity and effort for its correction. This information will then help us generate in the report a criticality table as a global summary of the vulnerabilities found.&lt;/p&gt; &#xA;&lt;p&gt;We can also register a company and, just by adding its web page, the tool will be able to find subdomains, telephone numbers, social networks, employee emails...&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/55983491/182504746-26c636f4-fe4f-410d-9898-e51f4ae35e6d.png&#34; alt=&#34;BlackStone - Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;Docker Install&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Install Docker&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/bin/bash -c &#34;$(curl -fsSL https://get.docker.com)&#34;&#xA;systemctl enable docker &#xA;systemctl start docker &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Install docker-compose&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo curl -L &#34;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)&#34; -o /usr/local/bin/docker-compose&#xA;chmod +x /usr/local/bin/docker-compose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install BlackStone&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/micro-joan/BlackStone&#xA;cd BlackStone&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;User: blackstone&lt;/h4&gt; &#xA;&lt;h4&gt;Password: blackstone&lt;/h4&gt; &#xA;&lt;h1&gt;Manual Install&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;First we must download an Apache server to host the tool, in my case I use Mamp (I recommend following these steps): https://www.mamp.info/en/downloads/&lt;/li&gt; &#xA; &lt;li&gt;We will download the content of this repository and we will have 2 folders (BlackStone and BBDD)&lt;/li&gt; &#xA; &lt;li&gt;Once the server starts we will go to c://MAMP/htdocs and paste all the contents of the downloaded folder &#34;BlackStone&#34;&lt;/li&gt; &#xA; &lt;li&gt;For the application to work we will have to import the database, we will go to our browser and write &#34;localhost/phpMyAdmin/&#34;, you have the database connection file in the folder BlackStone/conexion.php&lt;/li&gt; &#xA; &lt;li&gt;We will create a database called blackstone and import the data from the downloaded BBDD folder&lt;/li&gt; &#xA; &lt;li&gt;Log in to BlackStone with the username and password &#34;blackstone&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Use&lt;/h1&gt; &#xA;&lt;p&gt;First you need to go to profile settings and add Hunter.io and haveibeenpwned.com tokens:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/55983491/182502047-36e2b125-de44-463f-8c74-9b8b2cab14e4.gif&#34; alt=&#34;Untitled Project&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;After having vulnerabilities in the database, we will go to the audited client and we will register a client along with their web page, once registered we can go to customer details and we can see the following information:&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA;  THE USE OF THIS APPLICATION IS FOR PROFESSIONAL USE, THE AUTHOR IS NOT RESPONSIBLE FOR A MISUSE EMPLOYED &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Name of business owner&lt;/li&gt; &#xA; &lt;li&gt;Social networks of the company owner&lt;/li&gt; &#xA; &lt;li&gt;Email and telephone number of the owner of the company&lt;/li&gt; &#xA; &lt;li&gt;Exposed password check on the company owner&#39;s deep web&lt;/li&gt; &#xA; &lt;li&gt;Subdomains of the website as well as information of interest found in google&lt;/li&gt; &#xA; &lt;li&gt;Emails of company workers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/55983491/182502564-02929088-2584-4cd9-9d1a-52ce6cb69f17.gif&#34; alt=&#34;Untitled Project&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Once we have the company that we are going to audit registered in the database, we will create a report, adding the date, name of the report and the company to which will be audited. When we register the report, we will give it edit and then we will select the vulnerabilities that we want to appear in the report:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/55983491/182503343-c1990024-83f2-4c4b-b524-08719d775cac.gif&#34; alt=&#34;Untitled Project&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Finally, we will generate the report by clicking on the &#34;overview report&#34; button, and later we will save the page that is generated as &#34;.mht&#34;, then we will open it with Word to be able to work on the generated report:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/55983491/182504065-2a55fac4-b961-4cd8-8d38-1f02c98123fb.gif&#34; alt=&#34;Untitled Project&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zhaohuabing/hugo-theme-cleanwhite</title>
    <updated>2022-08-09T01:37:27Z</updated>
    <id>tag:github.com,2022-08-09:/zhaohuabing/hugo-theme-cleanwhite</id>
    <link href="https://github.com/zhaohuabing/hugo-theme-cleanwhite" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A clean, elegant blog theme for hugo&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Clean White Theme for Hugo&lt;/h1&gt; &#xA;&lt;p&gt;CleanWhite is a clean, elegant, but fully functional blog theme for Hugo. Here is a live &lt;a href=&#34;https://zhaohuabing.com&#34;&gt;demo site&lt;/a&gt; using this theme.&lt;/p&gt; &#xA;&lt;p&gt;It is based on &lt;a href=&#34;https://github.com/Huxpro/huxpro.github.io&#34;&gt;huxblog Jekyll Theme&lt;/a&gt; and &lt;a href=&#34;https://github.com/BlackrockDigital/startbootstrap-clean-blog-jekyll&#34;&gt;Clean Blog Jekyll Theme&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;These two upstream projects have done awesome jobs to create a blog theme, what I&#39;m doing here is porting it to Hugo, of which I like the simplicity and the much faster compiling speed. Some other features which I think could be useful, such as site search with algolia and proxy for Disqus access in China, have also been built in the CleanWhite theme. Other fancy features of upstream projects are not supported by this Hugo theme, I&#39;d like to make it as simple as possible and only focus on blog purpose, at least for now. While I created this theme, I followed the Hugo theme best practice and tried to make every part of the template as a replaceable partial html, so it could be much easier for you to make your customization based on it.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Home&lt;/strong&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zhaohuabing/hugo-theme-cleanwhite/master/images/screenshot.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Post&lt;/strong&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zhaohuabing/hugo-theme-cleanwhite/master/images/post.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Search&lt;/strong&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zhaohuabing/hugo-theme-cleanwhite/master/images/sitesearch.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Archive&lt;/strong&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zhaohuabing/hugo-theme-cleanwhite/master/images/archive.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Disqus&lt;/strong&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zhaohuabing/hugo-theme-cleanwhite/master/images/disqus.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Wechat Pay &amp;amp; Alipay&lt;/strong&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zhaohuabing/hugo-theme-cleanwhite/master/images/rewards.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Mind Map&lt;/strong&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zhaohuabing/hugo-theme-cleanwhite/master/images/mindmap.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Bilibili Video&lt;/strong&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zhaohuabing/hugo-theme-cleanwhite/master/images/bilibili.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;The simplest way is to start with the example site coming with this theme, then you can play around and add your own stuff.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mkdir test&#xA;$ cd test&#xA;$ mkdir themes&#xA;$ cd themes&#xA;$ git clone https://github.com/zhaohuabing/hugo-theme-cleanwhite.git&#xA;$ cp -r hugo-theme-cleanwhite/exampleSite/** ../&#xA;$ cd ..&#xA;$ hugo serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If your site is already a git project, you may want to choose to add the cleanwhite theme as a submodule to avoid messing up your existing git repository.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mkdir themes&#xA;$ git submodule add https://github.com/zhaohuabing/hugo-theme-cleanwhite.git themes/hugo-theme-cleanwhite&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run Hugo Build-in Server Locally&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ hugo serve -t  hugo-theme-cleanwhite&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now enter &lt;a href=&#34;http://localhost:1313&#34;&gt;&lt;code&gt;localhost:1313&lt;/code&gt;&lt;/a&gt; in the address bar of your browser.&lt;/p&gt; &#xA;&lt;p&gt;If you start from scratch, there is a working Hugo site configured with the CleanWhite theme in the &lt;a href=&#34;https://github.com/zhaohuabing/hugo-theme-cleanwhite/tree/master/exampleSite&#34;&gt;exampleSite&lt;/a&gt; directory. You can use it as a starting point for your site.&lt;/p&gt; &#xA;&lt;p&gt;For more information read the official &lt;a href=&#34;https://gohugo.io/overview/installing/&#34;&gt;setup guide&lt;/a&gt; of Hugo&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;First, let&#39;s take a look at the &lt;a href=&#34;https://github.com/zhaohuabing/hugo-theme-cleanwhite/raw/master/exampleSite/config.toml&#34;&gt;config.toml&lt;/a&gt;. It will be useful to learn how to customize your site. Feel free to play around with the settings.&lt;/p&gt; &#xA;&lt;h3&gt;Comment Systems&lt;/h3&gt; &#xA;&lt;p&gt;The following comment systems have been supported by this theme:&lt;/p&gt; &#xA;&lt;h4&gt;Giscus&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://giscus.app/&#34;&gt;Giscus&lt;/a&gt; is a comment system powered by GitHub Discussions.&lt;/p&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;https://github.com/marketplace/giscus&#34;&gt;the Giscus app&lt;/a&gt; on your GitHub repo, and set the parameters as below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  [params.giscus]&#xA;  data_repo=&#34;your GitHub repo&#34;&#xA;  data_repo_id=&#34;your repo id&#34;&#xA;  data_category=&#34;your category&#34;&#xA;  data_category_id=&#34;your category id&#34;&#xA;  data_mapping=&#34;pathname&#34;&#xA;  data_reactions_enabled=&#34;1&#34;&#xA;  data_emit_metadata=&#34;0&#34;&#xA;  data_theme=&#34;light&#34;&#xA;  data_lang=&#34;en&#34;&#xA;  crossorigin=&#34;anonymous&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Disqus&lt;/h4&gt; &#xA;&lt;p&gt;To enable Disqus, create an account in Disqus and write down your shortname.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;disqusShortname = &#34;your-disqus-short-name&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Disqus behind a proxy&lt;/h4&gt; &#xA;&lt;p&gt;If Disqus can&#39;t be directly accessed, we can set up a proxy with &lt;a href=&#34;https://github.com/zhaohuabing/disqus-php-api&#34;&gt;disqus-php-api&lt;/a&gt; in a host which sets between the client browser and the Disqus server. The idea is that if Disqus can be reached in the guest network, the blog page will show the original Disqus comments UI, otherwise, it will downgrade and use the proxy to access the Disqus, the UI will be a little different, but the visitors can still write their comments on the page.&lt;/p&gt; &#xA;&lt;p&gt;The client side java script has already been integrated to CleanWhite them, but you need to set up a proxy server yourself.&lt;/p&gt; &#xA;&lt;p&gt;The proxy is written in php, which can be found here: &lt;a href=&#34;https://github.com/zhaohuabing/disqus-php-api/tree/master/api&#34;&gt;https://github.com/zhaohuabing/disqus-php-api/tree/master/api&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You need to specify your Disqus account information in the config.php.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;define(&#39;PUBLIC_KEY&#39;, &#39;&#39;);&#xA;define(&#39;SECRET_KEY&#39;, &#39;&#39;);&#xA;define(&#39;DISQUS_USERNAME&#39;, &#39;&#39;);&#xA;define(&#39;DISQUS_EMAIL&#39;, &#39;&#39;);&#xA;define(&#39;DISQUS_PASSWORD&#39;, &#39;&#39;);&#xA;define(&#39;DISQUS_WEBSITE&#39;, &#39;&#39;);&#xA;define(&#39;DISQUS_SHORTNAME&#39;, &#39;&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set the proxy server address in the site config file of your Hugo project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;disqus_proxy = &#34;http://yourdisqusproxy.com&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Twikoo&lt;/h4&gt; &#xA;&lt;p&gt;Twikoo is a simple, safe, free comment system based on Tencent CloudBase (tcb).&lt;/p&gt; &#xA;&lt;p&gt;To deploy Twikoo, please refer to the installation guide on &lt;a href=&#34;https://twikoo.js.org/&#34;&gt;the twikoo website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Just enter the twikoo env_id in the configuration file to connect your blog to the deployed Twikoo.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; twikoo_env_id = &#34;your twikoo env id&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Site Search with Algolia&lt;/h3&gt; &#xA;&lt;p&gt;Follow this &lt;a href=&#34;https://forestry.io/blog/search-with-algolia-in-hugo/#3-create-your-index-in-algolia&#34;&gt;tutorial&lt;/a&gt; to create your index in Algolia. The index is just the storage of the indexing data of your site in the the cloud . The search page of CleanWhite theme will utilize this indexing data to do the search.&lt;/p&gt; &#xA;&lt;p&gt;Go to the directory where you have your Hugo site and run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm init&#xA;$ npm install atomic-algolia --save&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, open up the newly created package.json, where we’ll add an NPM script to update your index at Algolia. Find &#34;scripts&#34;, and add the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-josn&#34;&gt;&#34;algolia&#34;: &#34;atomic-algolia&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Algolia index output format has already been supported by the CleanWhite theme, so you can just build your site, then you’ll find a file called algolia.json in your &lt;code&gt;public&lt;/code&gt; directory, which we can use to update your index in Algolia. Generate index file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hugo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a new file in the root of your Hugo project called .env, and add the following contents:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ALGOLIA_APP_ID={{ YOUR_APP_ID }}&#xA;ALGOLIA_ADMIN_KEY={{ YOUR_ADMIN_KEY }}&#xA;ALGOLIA_INDEX_NAME={{ YOUR_INDEX_NAME }}&#xA;ALGOLIA_INDEX_FILE={{ PATH/TO/algolia.json }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Make sure double curly braces be replaced together&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Now you can push your index to Algolia by simply running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ npm run algolia&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add the following variables to your hugo site config so the search page can get access to algolia index data in the cloud:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;algolia_search = true&#xA;algolia_appId = {{ YOUR_APP_ID }}&#xA;algolia_indexName = {{ YOUR_INDEX_NAME }}&#xA;algolia_apiKey = {{ YOUR_SEARCH_ONLY_KEY }}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open search page in your browser: &lt;a href=&#34;http://localhost:1313/search&#34;&gt;http://localhost:1313/search&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Analytics&lt;/h3&gt; &#xA;&lt;p&gt;You can optionally enable Google or Baidu Analytics. Type your tracking code in the&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;googleAnalytics = &#34;UA-XXXXX-X&#34;&#xA;ba_track_id  = &#34;XXXXXXXXXXXXXXXX&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Leave the &lt;code&gt;googleAnalytics&lt;/code&gt; or &#39;ba_track_id &#39; key empty to disable it.&lt;/p&gt; &#xA;&lt;h3&gt;Wechat Pay &amp;amp; Alipay Rewards&lt;/h3&gt; &#xA;&lt;p&gt;You can enable Wechat Pay &amp;amp; Alipay to allow readers send you money. So if they like your articles, you may even get rewards from your writing. Now you must be motivated to write more.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enable Wechat Pay &amp;amp; Alipay in the site config&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;reward = true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Replace the QR codes of Wechat Pay &amp;amp; Alipay by overriding the photos in folder /static/img/reward/, otherwise the money will be sent to my accounts!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enable Wechat Pay &amp;amp; Alipay in the site config&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;reward = true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Mind Map&lt;/h3&gt; &#xA;&lt;p&gt;Mind Map is supported with shortcode &#39;mind&#39;, instering the following code snippet into your markdown file can create a mind map showing in the screenshots.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% mind %}}&#xA;- Root&#xA;    - Level 1&#xA;        - Level 2&#xA;        - Level 2&#xA;            - Level 3&#xA;            - Level 3&#xA;                - Level 4&#xA;                    - Level 5&#xA;                        - Level 6&#xA;    - Level 1&#xA;        - Level 2&#xA;        - Level 2&#xA;     - Level 1&#xA;        - Level 2&#xA;        - Level 2&#xA;     - Level 1&#xA;        - Level 2&#xA;        - Level 2&#xA;     - Level 1&#xA;        - Level 2&#xA;        - Level 2&#xA;{{% /mind %}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Embedded Videos&lt;/h3&gt; &#xA;&lt;p&gt;Use the below hugo shortcodes to embed videos into your posts.&lt;/p&gt; &#xA;&lt;p&gt;Bilibili (B站)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{{&amp;lt; bilibili BV1kZ4y137gv &amp;gt;}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Youtube&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{{&amp;lt; youtube cllc1ZGlhsQ &amp;gt;}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Vimeo&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{{&amp;lt; vimeo 146022717 &amp;gt;}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Plantuml&lt;/h3&gt; &#xA;&lt;p&gt;Plantuml support can be enabled at site or page level by adding the following line in the config.yaml or page header.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;plantuml: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can just put plantuml source code in markdown files and the picture will be generated automatically.&lt;/p&gt; &#xA;&lt;p&gt;An example:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;```plantuml&#xA;@startuml&#xA;Alice -&amp;gt; Bob: Authentication Request&#xA;Bob --&amp;gt; Alice: Authentication Response&#xA;&#xA;Alice -&amp;gt; Bob: Another authentication Request&#xA;Alice &amp;lt;-- Bob: Another authentication Response&#xA;@enduml&#xA;```&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zhaohuabing/hugo-theme-cleanwhite/master/images/plantuml.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;Thanks for the great jobs of &lt;a href=&#34;https://github.com/Huxpro/huxpro.github.io&#34;&gt;huxblog Jekyll Theme&lt;/a&gt; and &lt;a href=&#34;https://github.com/BlackrockDigital/startbootstrap-clean-blog-jekyll&#34;&gt;Clean Blog Jekyll Theme&lt;/a&gt; which are the the two upstream projects CleanWhite Hugo theme is based on.&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;If you find any problems, please feel free to &lt;a href=&#34;https://github.com/zhaohuabing/hugo-theme-cleanwhite/issues/new&#34;&gt;raise an issue&lt;/a&gt; or create a pull request to fix it.&lt;/p&gt; &#xA;&lt;p&gt;If it&#39;s helpful for you, I would appreciate it if you could star this repository, thanks!&lt;/p&gt; &#xA;&lt;h2&gt;Who is using cleanwhite？(谁在使用 cleanwhite？)&lt;/h2&gt; &#xA;&lt;p&gt;Sincerely thank everyone who constantly keeps on using and supporting cleanwhite. Feel free to leave a comment on &lt;a href=&#34;https://github.com/zhaohuabing/hugo-theme-cleanwhite/issues/115&#34;&gt;this issue&lt;/a&gt; to include information about your blog.&lt;/p&gt;</summary>
  </entry>
</feed>