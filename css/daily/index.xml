<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-07T01:33:29Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>07jhashubham/YouTubeArt</title>
    <updated>2023-03-07T01:33:29Z</updated>
    <id>tag:github.com,2023-03-07:/07jhashubham/YouTubeArt</id>
    <link href="https://github.com/07jhashubham/YouTubeArt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;YouTubeArt&lt;/h1&gt; &#xA;&lt;p&gt;Enjoy&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>canisminor1990/sd-web-ui-kitchen-theme</title>
    <updated>2023-03-07T01:33:29Z</updated>
    <id>tag:github.com,2023-03-07:/canisminor1990/sd-web-ui-kitchen-theme</id>
    <link href="https://github.com/canisminor1990/sd-web-ui-kitchen-theme" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kitchen theme for stable diffusion webui https://github.com/AUTOMATIC1111/stable-diffusion-webui&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kitchen Theme for stable-diffusion-web-ui&lt;/h1&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/canisminor1990/sd-web-ui-kitchen-theme/raw/main/assets/screenshot.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;As an extension (recommended) Either clone the repo into your extensions folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone &#34;https://github.com/canisminor1990/sd-web-ui-kitchen-theme&#34; extensions/kitchen-theme&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(The second argument specifies the name of the folder, you can choose whatever you like).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>slippersheepig/chatgpt-html</title>
    <updated>2023-03-07T01:33:29Z</updated>
    <id>tag:github.com,2023-03-07:/slippersheepig/chatgpt-html</id>
    <link href="https://github.com/slippersheepig/chatgpt-html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;使用ChatGPT接口，实现简单HTML网页版在线聊天（支持markdown语法及查看连续对话记录）&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Update&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2023.3.6 作者删除了浏览器模拟登录版本，后续也把官方endpoint公开了，故将主分支做一次大更新（由于“被迫”安装了无用的依赖，此主分支的镜像体积比&lt;a href=&#34;https://github.com/slippersheepig/chatgpt-html/tree/proxy&#34;&gt;proxy分支&lt;/a&gt;约大10倍，但是相比有bug被修复，镜像大点倒也无所谓了）&lt;/li&gt; &#xA; &lt;li&gt;2023.3.3 现支持按回车发送问题请求，按shift+回车可换行输入文本&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2023.2.28 关于OPENAI允许问题的最大长度 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;根据OPENAI官方&lt;a href=&#34;https://help.openai.com/en/articles/4936856-what-are-tokens-and-how-to-count-them&#34;&gt;问答&lt;/a&gt;&#34;Depending on the &lt;a href=&#34;https://platform.openai.com/docs/models/gpt-3&#34;&gt;model&lt;/a&gt; used, requests can use up to 4097 tokens shared between prompt and completion. If your prompt is 4000 tokens, your completion can be 97 tokens at most&#34;，虽然没有明确指出ChatGPT模型是否也适用，但结合谷歌搜索的结果，应该一样。问题和回答加起来的总长度无法超过4097个token，如果你不清楚自己问题的长度，可以使用&lt;a href=&#34;https://platform.openai.com/tokenizer&#34;&gt;官方计数器&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2023.2.20 &lt;code&gt;支持markdown语法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;2023.2.19 &lt;code&gt;重构关键代码，内置本人使用的UI，支持查看连续对话记录&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;chatgpt-html&lt;/h1&gt; &#xA;&lt;h3&gt;使用&lt;a href=&#34;https://github.com/acheong08/ChatGPT&#34;&gt;acheong08&lt;/a&gt;对接官方ChatGPT接口，实现简单HTML网页版在线聊天&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;该版本基于&lt;code&gt;ChatGPT&lt;/code&gt;网页端代理开发（免费），想使用ChatGPT API KEY（付费）的请访问&lt;a href=&#34;https://github.com/slippersheepig/chatgpt-web&#34;&gt;chatgpt-web&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;部署&lt;/h2&gt; &#xA;&lt;h3&gt;获取OpenAI账号（即邮箱）及密码（&lt;code&gt;请使用普通方式注册，不支持谷歌或者微软快捷登录&lt;/code&gt;）&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;点击注册&lt;a href=&#34;https://platform.openai.com/&#34;&gt;OpenAI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;配置&lt;/h3&gt; &#xA;&lt;h4&gt;使用Docker Compose&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;以下所有文件放同一目录&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新建&lt;code&gt;config.json&lt;/code&gt;文件，粘贴以下代码并保存&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;{&#xA;        //邮箱、session_token和access_token三选一，不用的注释或删掉，注意最后一行删掉逗号&#xA;        //邮箱认证&#xA;        &#34;email&#34;: &#34;填写你的OpenAI账号（即邮箱）&#34;,&#xA;        &#34;password&#34;: &#34;填写你的OpenAI密码&#34;&#xA;        //session_token认证&#xA;        &#34;session_token&#34;: &#34;...&#34;&#xA;        //access_token认证&#xA;        &#34;access_token&#34;: &#34;&amp;lt;access_token&amp;gt;&#34;&#xA;        &#xA;        //以下为选填字段&#xA;        //通过代理连接代理端（作者服务器被墙过，代理好像只能用无密码认证的socks5或者http，请自行测试）&#xA;        //# &#34;proxy&#34;: &#34;...&#34;&#xA;        //使用付费openai账号（官方称速度更快，无频率限制）&#xA;        //# &#34;paid&#34;: true&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;session_token获取方法（随时过期）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;https://chat.openai.com/chat&lt;/a&gt; and open the developer tools by &lt;code&gt;F12&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Find the &lt;code&gt;__Secure-next-auth.session-token&lt;/code&gt; cookie in &lt;code&gt;Application&lt;/code&gt; &amp;gt; &lt;code&gt;Storage&lt;/code&gt; &amp;gt; &lt;code&gt;Cookies&lt;/code&gt; &amp;gt; &lt;code&gt;https://chat.openai.com&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Copy the value in the &lt;code&gt;Cookie Value&lt;/code&gt; field.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;access_token获取方法（据说可以持续2周不过期）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;登录ChatGPT官方网页版后再打开&lt;a href=&#34;https://chat.openai.com/api/auth/session&#34;&gt;https://chat.openai.com/api/auth/session&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新建&lt;code&gt;docker-compose.yml&lt;/code&gt;配置文件，粘贴以下内容并保存&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;services:&#xA;  chatgpt:&#xA;    image: sheepgreen/chatgpt-html #如果是arm架构，请换成chatgpt-html:arm&#xA;    container_name: htmchat&#xA;    volumes:&#xA;      - ./config.json:/chatgpt-html/config.json&#xA;#      - ./chat.html:/chatgpt-html/templates/chat.html #默认内置我的UI，如需替换自用网页请取消注释&#xA;    ports:&#xA;      - &#34;9999:8088&#34; #8088为容器内端口，不可更换；9999为外部端口，可自行更换&#xA;    restart: always&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;输入&lt;code&gt;docker-compose up -d&lt;/code&gt;即启动成功&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;注意事项&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;访问地址为&lt;a href=&#34;http://ip:port&#34;&gt;http://ip:port&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;修改&lt;code&gt;chat.html&lt;/code&gt;文件后，需要docker restart htmchat才能生效&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>