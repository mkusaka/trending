<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-19T01:33:31Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dchristl/esp32_nat_router_extended</title>
    <updated>2024-01-19T01:33:31Z</updated>
    <id>tag:github.com,2024-01-19:/dchristl/esp32_nat_router_extended</id>
    <link href="https://github.com/dchristl/esp32_nat_router_extended" rel="alternate"></link>
    <summary type="html">&lt;p&gt;a simple ESP32 NAT Router with some additional features&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ESP32 NAT Router Extended&lt;/h1&gt; &#xA;&lt;p&gt;This is a firmware to use the ESP32 as WiFi NAT router. It can be used as&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simple range extender for an existing WiFi network&lt;/li&gt; &#xA; &lt;li&gt;Setting up an additional WiFi network with different SSID/password for guests or IOT devices&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This is an extension of the great work of &lt;a href=&#34;https://github.com/martin-ger/esp32_nat_router&#34;&gt;martin-ger&#39;s ESP32 NAT Router-project&lt;/a&gt;. I used his project as a starting point for learning microcontroller programming and extended it with some features for my use case.&lt;/p&gt; &#xA;&lt;h2&gt;Features / Usage scenarios&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Extend range of WiFi network (Repeater)&lt;/li&gt; &#xA; &lt;li&gt;Additional network for guests&lt;/li&gt; &#xA; &lt;li&gt;Portable usage with a small, low power device (battery powered)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dchristl/esp32_nat_router_extended/master/docs/advanced.md#advanced-configuration&#34;&gt;Bypass restrictions&lt;/a&gt; in public WiFis, like device and rate limit&lt;/li&gt; &#xA; &lt;li&gt;Scanning for APs (s. &lt;a href=&#34;https://raw.githubusercontent.com/dchristl/esp32_nat_router_extended/master/#wifi-scanning-limitation&#34;&gt;limitations&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;User friendly UI with mobile support&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dchristl/esp32_nat_router_extended/master/docs/advanced.md#resetting-the-device-erasing-the-flash&#34;&gt;Resetting the device&lt;/a&gt; in UI and with Pin/Button&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dchristl/esp32_nat_router_extended/master/docs/ota.md&#34;&gt;OTA-Updates&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Keep connection alive on networks with forced disconnect&lt;/li&gt; &#xA; &lt;li&gt;Secure frontend by password or complete disabling&lt;/li&gt; &#xA; &lt;li&gt;Show connected state and quality in UI&lt;/li&gt; &#xA; &lt;li&gt;Disable the on board indicator LED&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;First Boot&lt;/h2&gt; &#xA;&lt;p&gt;After first boot the ESP32 NAT Router will offer a WiFi network with an open AP and the ssid &#34;ESP32_NAT_Router&#34;. Configuration can either be done via a simple web interface or via the serial console.&lt;/p&gt; &#xA;&lt;h2&gt;Web Config Interface&lt;/h2&gt; &#xA;&lt;p&gt;The web interface allows for the configuration of all parameters. Connect you PC or smartphone to the WiFi SSID &#34;ESP32_NAT_Router&#34; and point your browser to &#34;&lt;a href=&#34;http://192.168.4.1&#34;&gt;http://192.168.4.1&lt;/a&gt;&#34;. This page should appear:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dchristl/esp32_nat_router_extended/master/docs/index.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;First enter the appropriate values for the uplink WiFi network, the &#34;STA Settings&#34;. Leave password blank for open networks. Click &#34;Connect&#34;. The ESP32 reboots and will connect to your WiFi router.&lt;/p&gt; &#xA;&lt;p&gt;Now you can reconnect and reload the page and change the &#34;Soft AP Settings&#34;. Click &#34;Set&#34; and again the ESP32 reboots. Now it is ready for forwarding traffic over the newly configured Soft AP. Be aware that these changes also affect the config interface, i.e. to do further configuration, connect to the ESP32 through one of the newly configured WiFi networks.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dchristl/esp32_nat_router_extended/master/docs/scan.png&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/dchristl/esp32_nat_router_extended/master/docs/enterprise_wifi.png&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/dchristl/esp32_nat_router_extended/master/docs/advanced.png&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/dchristl/esp32_nat_router_extended/master/docs/portmap.png&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/dchristl/esp32_nat_router_extended/master/docs/reset.png&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/dchristl/esp32_nat_router_extended/master/docs/lock.png&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/dchristl/esp32_nat_router_extended/master/docs/ota.png&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/dchristl/esp32_nat_router_extended/master/docs/unlock.png&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/dchristl/esp32_nat_router_extended/master/docs/connected_clients.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Flashing the prebuild binaries&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download &lt;a href=&#34;https://github.com/dchristl/esp32_nat_router_extended/releases/latest&#34;&gt;latest release&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Download esp32nat_extended_full_vX.X.X.zip for fresh install&lt;/li&gt; &#xA;   &lt;li&gt;Download esp32nat_extended_update_vX.X.X.zip for update&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://github.com/espressif/esptool&#34;&gt;esptool&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;First install/ Reset&lt;/h3&gt; &#xA;&lt;p&gt;If your device was used before for other projects or you want to reset all setting from previous version. Complete data loss! Unpack archive first and then execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;esptool.py write_flash 0x0 esp32nat_extended_full_vX.X.X.bin &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Update from older version&lt;/h3&gt; &#xA;&lt;p&gt;If this project was already installed. No data loss from previous version. The preferred way is with &lt;a href=&#34;https://raw.githubusercontent.com/dchristl/esp32_nat_router_extended/master/docs/ota.md&#34;&gt;OTA-Updates&lt;/a&gt;. If you want to do it manually:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;esptool.py write_flash 0x10000 esp32nat_extended_vX.X.X.bin &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;General&lt;/h3&gt; &#xA;&lt;p&gt;If any problem occurs, erase flash manually before flashing the full version :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;esptool.py erase_flash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Alternative way/ Graphical (Windows only)&lt;/h3&gt; &#xA;&lt;p&gt;As an alternative you might use &lt;a href=&#34;https://www.espressif.com/en/support/download/other-tools&#34;&gt;Espressif&#39;s Flash Download Tools&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Check the marked parameters and files like below (ckeck the COM-Port for your environment).&lt;/p&gt; &#xA;&lt;p&gt;Check the addresses like below:&lt;/p&gt; &#xA;&lt;h3&gt;First install/ Reset&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dchristl/esp32_nat_router_extended/master/docs/win_flash_full.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Update from older version&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dchristl/esp32_nat_router_extended/master/docs/win_flash.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building the Binaries&lt;/h2&gt; &#xA;&lt;p&gt;see &lt;a href=&#34;https://raw.githubusercontent.com/dchristl/esp32_nat_router_extended/master/docs/BUILD.md&#34;&gt;How to setup environment and build&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Wifi scanning limitation&lt;/h2&gt; &#xA;&lt;p&gt;Due to technical limitations, a client cannot be simultaneously connected to the device and scan for Wi-Fi networks. Before the scan starts, all the clients will be disconnected. After that, the scan will be saved in NVS,and the device will reboot. Upon reconnecting to the device, you will be able to view the scanned networks.&lt;/p&gt; &#xA;&lt;p&gt;An automatic redirect occurs the first time. Afterward, the scanned networks can be viewed three more times before they are deleted from the NVS to save storage space.&lt;/p&gt; &#xA;&lt;h2&gt;Misc&lt;/h2&gt; &#xA;&lt;p&gt;If you have any problems, suggestions for new features feel free to ask or raise an issue. This is a spare time project, I will answer if I&#39;m free. If you like my work and want to support me, you can &lt;a href=&#34;https://www.buymeacoffee.com/dchristl&#34;&gt;buy me coffee&lt;/a&gt; or send me a donation via &lt;a href=&#34;https://bit.ly/3Gde3KN&#34;&gt;PayPal&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Advanced topics and configuration&lt;/h2&gt; &#xA;&lt;p&gt;see &lt;a href=&#34;https://raw.githubusercontent.com/dchristl/esp32_nat_router_extended/master/docs/advanced.md&#34;&gt;Advanced topics&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>KubeDev/kube-news</title>
    <updated>2024-01-19T01:33:31Z</updated>
    <id>tag:github.com,2024-01-19:/KubeDev/kube-news</id>
    <link href="https://github.com/KubeDev/kube-news" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Projeto kube-news&lt;/h1&gt; &#xA;&lt;h3&gt;Objetivo&lt;/h3&gt; &#xA;&lt;p&gt;O projeto Kube-news é uma aplicação escrita em NodeJS e tem como objetivo ser uma aplicação de exemplo pra trabalhar com o uso de containers.&lt;/p&gt; &#xA;&lt;h3&gt;Configuração&lt;/h3&gt; &#xA;&lt;p&gt;Pra configurar a aplicação, é preciso ter um banco de dados Postgre e pra definir o acesso ao banco, configure as variáveis de ambiente abaixo:&lt;/p&gt; &#xA;&lt;p&gt;DB_DATABASE =&amp;gt; Nome do banco de dados que vai ser usado.&lt;/p&gt; &#xA;&lt;p&gt;DB_USERNAME =&amp;gt; Usuário do banco de dados.&lt;/p&gt; &#xA;&lt;p&gt;DB_PASSWORD =&amp;gt; Senha do usuário do banco de dados.&lt;/p&gt; &#xA;&lt;p&gt;DB_HOST =&amp;gt; Endereço do banco de dados.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rolling-scopes-school/HTML-builder</title>
    <updated>2024-01-19T01:33:31Z</updated>
    <id>tag:github.com,2024-01-19:/rolling-scopes-school/HTML-builder</id>
    <link href="https://github.com/rolling-scopes-school/HTML-builder" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;HTML builder&lt;/h1&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Objectives:&lt;/h3&gt; &#xA;&lt;p&gt;The main goal of this series of tasks is to understand the basics of working with the &lt;strong&gt;Node.js&lt;/strong&gt; platform. You are offered to complete a series of small tasks with a gradual increase in complexity. The final touch will be the creation of a small application for building a static website.&lt;/p&gt; &#xA;&lt;p&gt;Please note that most tasks can be accomplished in multiple ways, and at this stage, there are no incorrect approaches. Only the functionality of your code and adherence to the specified conditions will be evaluated.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Execution process&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Click on the green button &lt;code&gt;Use this template&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;In the dropdown, choose the option &lt;code&gt;Create a new repository&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enter the repository name (preferably name it &lt;strong&gt;HTML-builder&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Leave its visibility as &lt;strong&gt;public&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click the &lt;code&gt;Create repository&lt;/code&gt; button&lt;/li&gt; &#xA; &lt;li&gt;Send the link to the created repository to &lt;code&gt;Cross-Check: Submit&lt;/code&gt; in RS App&lt;/li&gt; &#xA; &lt;li&gt;Clone the created repository&lt;/li&gt; &#xA; &lt;li&gt;Run the command &lt;code&gt;npm install&lt;/code&gt; to install eslint, prettier and node.js typings that will assist you in completing the tasks&lt;/li&gt; &#xA; &lt;li&gt;Complete the tasks. The specifications for each task are in the &lt;code&gt;README.md&lt;/code&gt; file inside the task folder&lt;/li&gt; &#xA; &lt;li&gt;Push the solution to your repository&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Crosscheck&lt;/h2&gt; &#xA;&lt;p&gt;The process for cross-checking is detailed in the repository&#39;s wiki.&lt;br&gt; Once the cross-check begins, access the guidelines by following &lt;a href=&#34;https://github.com/rolling-scopes-school/HTML-builder/wiki&#34;&gt;this link&lt;/a&gt; and adhere to the instructions provided on the page.&lt;/p&gt; &#xA;&lt;h3&gt;General Rules&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The use of any third-party modules is strictly prohibited.&lt;/li&gt; &#xA; &lt;li&gt;Each task must be executed &lt;u&gt;in the root directory&lt;/u&gt; using the command &lt;code&gt;node &amp;lt;task folder name&amp;gt;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Utilizing synchronous functions from the &lt;strong&gt;fs module&lt;/strong&gt;, such as &lt;code&gt;fs.statSync(path[, options])&lt;/code&gt;, &lt;code&gt;fs.readFileSync(path[, options])&lt;/code&gt;, and others found in the &lt;a href=&#34;https://nodejs.org/api/fs.html#fs_synchronous_api&#34;&gt;Synchronous API section&lt;/a&gt;, is not allowed.&lt;/li&gt; &#xA; &lt;li&gt;The use of the &lt;code&gt;setTimeout()&lt;/code&gt; function is forbidden.&lt;/li&gt; &#xA; &lt;li&gt;Task execution and verification should be carried out on the &lt;strong&gt;LTS&lt;/strong&gt; version of Node.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rolling-scopes-school/HTML-builder/raw/main/01-read-file&#34;&gt;01 Reading a File with Console Output&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/rolling-scopes-school/HTML-builder/raw/main/02-write-file&#34;&gt;02 Writing Console Input to File&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/rolling-scopes-school/HTML-builder/raw/main/03-files-in-folder&#34;&gt;03 Displaying Information about Files Stored in a Folder&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/rolling-scopes-school/HTML-builder/raw/main/04-copy-directory&#34;&gt;04 Copying a Directory&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/rolling-scopes-school/HTML-builder/raw/main/05-merge-styles&#34;&gt;05 Building the CSS Bundle&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/rolling-scopes-school/HTML-builder/raw/main/06-build-page&#34;&gt;06 Building an HTML Page from Components and Styles&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>