<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-31T01:26:29Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>HoanghoDev/slider_1</title>
    <updated>2024-01-31T01:26:29Z</updated>
    <id>tag:github.com,2024-01-31:/HoanghoDev/slider_1</id>
    <link href="https://github.com/HoanghoDev/slider_1" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>HashimThePassionate/django-for-absolute-beginners</title>
    <updated>2024-01-31T01:26:29Z</updated>
    <id>tag:github.com,2024-01-31:/HashimThePassionate/django-for-absolute-beginners</id>
    <link href="https://github.com/HashimThePassionate/django-for-absolute-beginners" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Step by Step to Master Django&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Wellcome to Django-for-absolute-biginners repositry&lt;/h1&gt; &#xA;&lt;p&gt;In this repostry, we learn to make website without virtualenv&lt;/p&gt; &#xA;&lt;h1&gt;To use this repo please clone first&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://github.com/HashimThePassionate/django-for-absolute-beginners.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;If you learn and get started follow step by step&lt;/h2&gt; &#xA;&lt;h3&gt;install django&lt;/h3&gt; &#xA;&lt;p&gt;Enter this command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install django&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the installing process&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;Collecting django&#xA;  Using cached Django-5.0.1-py3-none-any.whl.metadata (4.2 kB)&#xA;Collecting asgiref&amp;lt;4,&amp;gt;=3.7.0 (from django)&#xA;  Using cached asgiref-3.7.2-py3-none-any.whl.metadata (9.2 kB)&#xA;Collecting sqlparse&amp;gt;=0.3.1 (from django)&#xA;  Using cached sqlparse-0.4.4-py3-none-any.whl (41 kB)&#xA;Collecting tzdata (from django)&#xA;  Using cached tzdata-2023.4-py2.py3-none-any.whl.metadata (1.4 kB)&#xA;Using cached Django-5.0.1-py3-none-any.whl (8.1 MB)&#xA;Using cached asgiref-3.7.2-py3-none-any.whl (24 kB)&#xA;Using cached tzdata-2023.4-py2.py3-none-any.whl (346 kB)&#xA;Installing collected packages: tzdata, sqlparse, asgiref, django&#xA;Successfully installed asgiref-3.7.2 django-5.0.1 sqlparse-0.4.4 tzdata-2023.4&#xA;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;asgiref, sqlparse, tzdata are installed with django, these are must used to create website.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Step-02&lt;/h2&gt; &#xA;&lt;p&gt;###ckeck pip list, you see output;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;Package  Version&#xA;-------- -------&#xA;asgiref  3.7.2&#xA;Django   5.0.1&#xA;pip      23.3.2&#xA;sqlparse 0.4.4&#xA;tzdata   2023.4&#xA;&lt;/pre&gt; &#xA;&lt;h2&gt;Step-03&lt;/h2&gt; &#xA;&lt;h3&gt;Then install mysqlclient&lt;/h3&gt; &#xA;&lt;p&gt;Enter this Command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install mysqlclient&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the installing process&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;Collecting mysqlclient&#xA;  Using cached mysqlclient-2.2.1-cp311-cp311-win_amd64.whl.metadata (4.6 kB)&#xA;Using cached mysqlclient-2.2.1-cp311-cp311-win_amd64.whl (202 kB)&#xA;Installing collected packages: mysqlclient&#xA;Successfully installed mysqlclient-2.2.1&#xA;&lt;/pre&gt; &#xA;&lt;h2&gt;Step-04&lt;/h2&gt; &#xA;&lt;h3&gt;After installing mysqlclient, create startproject&lt;/h3&gt; &#xA;&lt;p&gt;Enter this Command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;django-admin startproject storefront&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See folder;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;storefront&#xA;        |___ storefront&#xA;        |           |___ __init__.py&#xA;        |           |___ asgi.py&#xA;        |           |___ settings.py&#xA;        |           |___ urls.py&#xA;        |           |___ wsgi.py&#xA;        |&#xA;        |___ manage.py&#xA;&#xA;&lt;/pre&gt; &#xA;&lt;h2&gt;Step-05&lt;/h2&gt; &#xA;&lt;h3&gt;Enter cd command&lt;/h3&gt; &#xA;&lt;p&gt;Enter cd command to go inside storefront command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd storefront&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See path&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;PS E:\Django\E-Comerase\storefront&amp;gt;&#xA;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You must use this command.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Step-06&lt;/h2&gt; &#xA;&lt;h3&gt;Create app&lt;/h3&gt; &#xA;&lt;p&gt;Enter this Command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;django-admin startapp store&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See folder;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;storefront&#xA;        |___ store&#xA;        |&#xA;        |___ storefront&#xA;        |           |___ __init__.py&#xA;        |           |___ asgi.py&#xA;        |           |___ settings.py&#xA;        |           |___ urls.py&#xA;        |           |___ wsgi.py&#xA;        |&#xA;        |___ manage.py&#xA;&#xA;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The store app is created&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Step-07&lt;/h2&gt; &#xA;&lt;h3&gt;Create another app&lt;/h3&gt; &#xA;&lt;p&gt;command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;django-admin startapp tags&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See folder;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;storefront&#xA;        |___ store    &#xA;        |___ storefront&#xA;        |           |___ __init__.py&#xA;        |           |___ asgi.py&#xA;        |           |___ settings.py&#xA;        |           |___ urls.py&#xA;        |           |___ wsgi.py&#xA;        |&#xA;        |___ tags&#xA;        |___ manage.py&#xA;&#xA;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The tags app is created.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Step-8&lt;/h2&gt; &#xA;&lt;h3&gt;Install apps in project&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open project folder (storefront) and settings.py file.&lt;/li&gt; &#xA; &lt;li&gt;Go to INSTALLED_APPS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&#xA;INSTALLED_APPS = [&#xA;    &#39;django.contrib.admin&#39;,&#xA;    &#39;django.contrib.auth&#39;,&#xA;    &#39;django.contrib.contenttypes&#39;,&#xA;    &#39;django.contrib.sessions&#39;,&#xA;    &#39;django.contrib.messages&#39;,&#xA;    &#39;django.contrib.staticfiles&#39;,&#xA;]&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Add this Code&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#39;store&#39;,&#xA;&#39;tags&#39;,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See again&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;INSTALLED_APPS = [&#xA;    &#39;django.contrib.admin&#39;,&#xA;    &#39;django.contrib.auth&#39;,&#xA;    &#39;django.contrib.contenttypes&#39;,&#xA;    &#39;django.contrib.sessions&#39;,&#xA;    &#39;django.contrib.messages&#39;,&#xA;    &#39;django.contrib.staticfiles&#39;,&#xA;    &#39;store&#39;,&#xA;    &#39;tags&#39;,&#xA;]&#xA;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &#39;store&#39;, and &#39;tags&#39;, are installed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Step-9&lt;/h2&gt; &#xA;&lt;h3&gt;Create templatesfolder inside and inside index.html&lt;/h3&gt; &#xA;&lt;p&gt;See folder;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;storefront&#xA;        |___ store    &#xA;        |___ storefront&#xA;        |           |___ __init__.py&#xA;        |           |___ asgi.py&#xA;        |           |___ settings.py&#xA;        |           |___ urls.py&#xA;        |           |___ wsgi.py&#xA;        |&#xA;        |___ tags&#xA;        |___ Templates&#xA;        |           |___index.html&#xA;        |___ manage.py&#xA;&#xA;&lt;/pre&gt; &#xA;&lt;h2&gt;Step-10&lt;/h2&gt; &#xA;&lt;h3&gt;Write code in setting.py&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go to TEMPLATES.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&#xA;TEMPLATES = [&#xA;    {&#xA;        &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,&#xA;        &#39;DIRS&#39;: [],&#xA;        &#39;APP_DIRS&#39;: True,&#xA;        &#39;OPTIONS&#39;: {&#xA;            &#39;context_processors&#39;: [&#xA;                &#39;django.template.context_processors.debug&#39;,&#xA;                &#39;django.template.context_processors.request&#39;,&#xA;                &#39;django.contrib.auth.context_processors.auth&#39;,&#xA;                &#39;django.contrib.messages.context_processors.messages&#39;,&#xA;            ],&#xA;        },&#xA;    },&#xA;]&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;write code in Templates&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import os&#xA;TEMPLATE_DIR = os.path.join(BASE_DIR, &#39;templates&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See again&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;import os&#xA;TEMPLATE_DIR = os.path.join(BASE_DIR, &#39;templates&#39;)&#xA;TEMPLATES = [&#xA;    {&#xA;        &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,&#xA;        &#39;DIRS&#39;: [TEMPLATE_DIR],&#xA;        &#39;APP_DIRS&#39;: True,&#xA;        &#39;OPTIONS&#39;: {&#xA;            &#39;context_processors&#39;: [&#xA;                &#39;django.template.context_processors.debug&#39;,&#xA;                &#39;django.template.context_processors.request&#39;,&#xA;                &#39;django.contrib.auth.context_processors.auth&#39;,&#xA;                &#39;django.contrib.messages.context_processors.messages&#39;,&#xA;            ],&#xA;        },&#xA;    },&#xA;]&#xA;&lt;/pre&gt; &#xA;&lt;h2&gt;Step-11&lt;/h2&gt; &#xA;&lt;h3&gt;Go to views.py inside store&lt;/h3&gt; &#xA;&lt;p&gt;In views.py write this code.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from django.shortcuts import render&#xA;def home(request):&#xA;return render(request, &#39;index.html&#39;, )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Step-12&lt;/h2&gt; &#xA;&lt;h3&gt;Then open urls.py inside storefront&lt;/h3&gt; &#xA;&lt;p&gt;In urls.py write this code&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from django.contrib import admin&#xA;from django.urls import path, include&#xA;from store import views&#xA;urlpatterns = [&#xA;    path(&#39;admin/&#39;, admin.site.urls),&#xA;    path(&#39;&#39;,views.home ),&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Step-13&lt;/h2&gt; &#xA;&lt;h3&gt;Then open index.html inside Templates folder and write simple code&lt;/h3&gt; &#xA;&lt;p&gt;Code&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html lang=&#34;en&#34;&amp;gt;&#xA;&amp;lt;head&amp;gt;&#xA;    &amp;lt;meta charset=&#34;UTF-8&#34;&amp;gt;&#xA;    &amp;lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&amp;gt;&#xA;    &amp;lt;link rel=&#34;stylesheet&#34; href=&#39;{% static &#34;css/style.css&#34; %}&#39;&amp;gt;&#xA;    &amp;lt;title&amp;gt;Models&amp;lt;/title&amp;gt;&#xA;&amp;lt;/head&amp;gt;&#xA;&amp;lt;body&amp;gt;&#xA;    &amp;lt;div class=&#34;container bg-success opacity-50 p-4 mb-3&#34;&amp;gt;&#xA;    &amp;lt;h1 class=&#34;text-light&#34;&amp;gt;Welcome to Models in Django&amp;lt;/h1&amp;gt;&#xA;&#xA;&amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Step-14&lt;/h2&gt; &#xA;&lt;h3&gt;Install debug toolbar&lt;/h3&gt; &#xA;&lt;p&gt;command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install django-debug-toolbar==4.2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the installing process&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;Collecting django-debug-toolbar==4.2.0&#xA;  Using cached django_debug_toolbar-4.2.0-py3-none-any.whl.metadata (3.8 kB)&#xA;Requirement already satisfied: django&amp;gt;=3.2.4 in c:\users\hp\appdata\local\programs\python\python311\lib\site-packages (from django-debug-toolbar==4.2.0) (5.0.1)&#xA;Requirement already satisfied: sqlparse&amp;gt;=0.2 in c:\users\hp\appdata\local\programs\python\python311\lib\site-packages (from django-debug-toolbar==4.2.0) (0.4.4)     &#xA;Requirement already satisfied: asgiref&amp;lt;4,&amp;gt;=3.7.0 in c:\users\hp\appdata\local\programs\python\python311\lib\site-packages (from django&amp;gt;=3.2.4-&amp;gt;django-debug-toolbar==4.2.0) (3.7.2)&#xA;Requirement already satisfied: tzdata in c:\users\hp\appdata\local\programs\python\python311\lib\site-packages (from django&amp;gt;=3.2.4-&amp;gt;django-debug-toolbar==4.2.0) (2023.4)&#xA;Using cached django_debug_toolbar-4.2.0-py3-none-any.whl (223 kB)&#xA;Installing collected packages: django-debug-toolbar&#xA;Successfully installed django-debug-toolbar-4.2.0&#xA;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;After installing debug toolbar,you must add inside project(storefront). See the processing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Step-15&lt;/h2&gt; &#xA;&lt;h4&gt;Processing/Setting&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;1. Install the App&lt;/strong&gt; Inside this code&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;INSTALLED_APPS = [&#xA;    &#39;django.contrib.admin&#39;,&#xA;    &#39;django.contrib.auth&#39;,&#xA;    &#39;django.contrib.contenttypes&#39;,&#xA;    &#39;django.contrib.sessions&#39;,&#xA;    &#39;django.contrib.messages&#39;,&#xA;    &#39;django.contrib.staticfiles&#39;,&#xA;    &#39;store&#39;,&#xA;    &#39;tags&#39;,&#xA;    &#xA;]&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Add this code, behind &#39;tags&#39;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt; &#34;debug_toolbar&#34;,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;2. Add the URL IN urls.py&lt;/strong&gt; Inside this code&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;from django.contrib import admin&#xA;from django.urls import path, include&#xA;from store import views&#xA;urlpatterns = [&#xA;    path(&#39;admin/&#39;, admin.site.urls),&#xA;]&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;Add this code&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt; path(&#34;__debug__/&#34;, include(&#34;debug_toolbar.urls&#34;)),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;3. Add the Middleware&lt;/strong&gt; Inside this code&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;MIDDLEWARE = [&#xA;    &#39;django.middleware.security.SecurityMiddleware&#39;,&#xA;    &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,&#xA;    &#39;django.middleware.common.CommonMiddleware&#39;,&#xA;    &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,&#xA;    &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,&#xA;    &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,&#xA;    &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;,&#xA;]&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;In this code add this&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt; &#34;debug_toolbar.middleware.DebugToolbarMiddleware&#34;,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;4. Then add INTERNAL_IPS&lt;/strong&gt; Code&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt; INTERNAL_IPS = [&#xA;    # ...&#xA;    &#34;127.0.0.1&#34;,&#xA;    # ...&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Step-16&lt;/h2&gt; &#xA;&lt;h3&gt;Simple test&lt;/h3&gt; &#xA;&lt;p&gt;Before testing, you mush indise your project Enter this command to test&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python manage.py runserver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Watching for file changes with StatReloader&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;Performing system checks...&#xA;&#xA;System check identified no issues (0 silenced).&#xA;&#xA;You have 18 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, contenttypes, sessions.&#xA;Run &#39;python manage.py migrate&#39; to apply them.&#xA;January 27, 2024 - 08:34:04&#xA;Django version 5.0.1, using settings &#39;storefront.settings&#39;&#xA;Starting development server at http://127.0.0.1:8000/&#xA;Quit the server with CTRL-BREAK.&#xA;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Second last line,see the link and (ctrl+click) click the link.&lt;/li&gt; &#xA; &lt;li&gt;Your django server is running.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Step-17&lt;/h2&gt; &#xA;&lt;h3&gt;Setup my SQL DBMS&lt;/h3&gt; &#xA;&lt;p&gt;In setting.py go to database&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;DATABASES = {&#xA;    &#39;default&#39;: {&#xA;        &#39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;,&#xA;    }&#xA;}&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;add setup&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;DATABASES = {&#xA;    &#39;default&#39;: {&#xA;        &#39;ENGINE&#39;: &#39;django.db.backends.sqlite3&#39;,&#xA;        &#39;NAME&#39;: BASE_DIR / &#39;db.sqlite3&#39;,&#xA;        &#39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;,&#xA;        &#39;NAME&#39;: &#39;store&#39;,         &#xA;        &#39;USER&#39;: &#39;root&#39;,       &#xA;        &#39;PASSWORD&#39;: &#39;&#39;,   &#xA;        &#39;HOST&#39;: &#39;localhost&#39;,&#xA;        &#39;PORT&#39;: &#39;3306&#39;, &#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install XAMPP&lt;/li&gt; &#xA; &lt;li&gt;Create New DateBase&lt;/li&gt; &#xA; &lt;li&gt;Go to Previliges&lt;/li&gt; &#xA; &lt;li&gt;Inside Previliges, go to last option, edit Previliges&lt;/li&gt; &#xA; &lt;li&gt;Edit privileges: User account &#39;root&#39;@&#39;localhost&#39;&lt;/li&gt; &#xA; &lt;li&gt;copy &#39;root&#39; and &#39;localhost&#39;&lt;/li&gt; &#xA; &lt;li&gt;Paste it in User and Host.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Step-18&lt;/h2&gt; &#xA;&lt;h3&gt;Create DBMS tables/models in models.py inside store&lt;/h3&gt; &#xA;&lt;p&gt;In django, DBMS tables are also called models Lets Start; Write code&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from django.db import models&#xA;&#xA;&#xA;class Promotion(models.Model):&#xA;    description = models.CharField(max_length=255)&#xA;    discount = models.FloatField()&#xA;    featured_product = models.ForeignKey(&#xA;        &#39;Product&#39;, on_delete=models.SET_NULL, null=True, related_name=&#39;product_f&#39;)&#xA;&#xA;&#xA;class Collection(models.Model):&#xA;    title = models.CharField(max_length=255)&#xA;&#xA;&#xA;class Product(models.Model):&#xA;    title = models.CharField(max_length=255)&#xA;    slug = models.SlugField(default=&#39;-&#39;)&#xA;    description = models.TextField()&#xA;    price = models.DecimalField(max_digits=6, decimal_places=2)&#xA;    inventory = models.IntegerField()&#xA;    last_update = models.DateTimeField(auto_now=True)&#xA;    collection = models.ForeignKey(Collection, on_delete=models.PROTECT)&#xA;    promotions = models.ManyToManyField(Promotion)&#xA;&#xA;&#xA;class Customer(models.Model):&#xA;    MEMBERSHIP_SILVER = &#39;S&#39;&#xA;    MEMBERSHIP_GOLD = &#39;G&#39;&#xA;    MEMBERSHIP_DIAMOND = &#39;D&#39;&#xA;&#xA;    MEMBERSHIP_CHOICES = [&#xA;        (MEMBERSHIP_SILVER, &#39;SILVER&#39;),&#xA;        (MEMBERSHIP_GOLD, &#39;GOLD&#39;),&#xA;        (MEMBERSHIP_DIAMOND, &#39;DIAMOND&#39;),&#xA;    ]&#xA;    first_name = models.CharField(max_length=255)&#xA;    last_name = models.CharField(max_length=255)&#xA;    email = models.EmailField(max_length=254, unique=True)&#xA;    phone = models.CharField(max_length=255)&#xA;    birth_date = models.DateField(null=True)&#xA;    membership = models.CharField(&#xA;        max_length=1, choices=MEMBERSHIP_CHOICES, default=MEMBERSHIP_SILVER)&#xA;&#xA;&#xA;class Order(models.Model):&#xA;    PAYMENT_PENDING = &#39;P&#39;&#xA;    PAYMENT_COMPLETE = &#39;C&#39;&#xA;    PAYMENT_FAILED = &#39;F&#39;&#xA;    PAYMENT_CHOICES = [&#xA;        (PAYMENT_PENDING, &#39;PENDING&#39;),&#xA;        (PAYMENT_COMPLETE, &#39;COMPLETE&#39;),&#xA;        (PAYMENT_FAILED, &#39;FAILED&#39;),&#xA;    ]&#xA;    place_at = models.DateField(auto_now_add=True)&#xA;    payment_status = models.CharField(&#xA;        max_length=1, choices=PAYMENT_CHOICES, default=PAYMENT_PENDING)&#xA;    customer = models.ForeignKey(Customer, on_delete=models.PROTECT)&#xA;&#xA;&#xA;class Address(models.Model):&#xA;    street = models.CharField(max_length=255)&#xA;    city = models.CharField(max_length=255)&#xA;    customer = models.OneToOneField(&#xA;        Customer, on_delete=models.CASCADE, primary_key=True)&#xA;&#xA;class Orderitem(models.Model):&#xA;    order = models.ForeignKey(Order, on_delete=models.PROTECT)&#xA;    product = models.ForeignKey(Product, on_delete=models.PROTECT)&#xA;    quantity = models.PositiveSmallIntegerField()&#xA;    unit_price = models.DecimalField(max_digits=6, decimal_places=2)&#xA;&#xA;&#xA;class Cart(models.Model):&#xA;    created_at = models.DateTimeField(auto_now_add=True)&#xA;&#xA;&#xA;class CarItem(models.Model):&#xA;    cart = models.ForeignKey(Cart, on_delete=models.CASCADE)&#xA;    product = models.ForeignKey(Product, on_delete=models.CASCADE)&#xA;    quantity = models.PositiveSmallIntegerField()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Explaination&lt;/h4&gt; &#xA;&lt;p&gt;Here&#39;s a detailed explanation of the code, covering its structure, relationships, and key features:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Models&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Promotion&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Stores details about promotions (description, discount).&lt;/li&gt; &#xA; &lt;li&gt;Can optionally feature a product (featured_product). &lt;strong&gt;Collection&lt;/strong&gt;:&lt;/li&gt; &#xA; &lt;li&gt;Organizes products into groups (title). &lt;strong&gt;Product&lt;/strong&gt;:&lt;/li&gt; &#xA; &lt;li&gt;Represents individual products with attributes like title, description, price, inventory, last update, and collection.&lt;/li&gt; &#xA; &lt;li&gt;Can have multiple promotions (promotions). &lt;strong&gt;Customer&lt;/strong&gt;:&lt;/li&gt; &#xA; &lt;li&gt;Represents customers with personal information and membership level. &lt;strong&gt;Order&lt;/strong&gt;:&lt;/li&gt; &#xA; &lt;li&gt;Represents orders with payment status, placement date, and associated customer. &lt;strong&gt;Address&lt;/strong&gt;:&lt;/li&gt; &#xA; &lt;li&gt;Stores customer addresses (street, city).&lt;/li&gt; &#xA; &lt;li&gt;Has a one-to-one relationship with Customer (one address per customer).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Orderitem&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Represents individual items within an order, specifying product, quantity, and unit price. &lt;strong&gt;Cart&lt;/strong&gt;:&lt;/li&gt; &#xA; &lt;li&gt;Potentially used for temporary shopping cart storage (created at timestamp). &lt;strong&gt;CarItem&lt;/strong&gt;:&lt;/li&gt; &#xA; &lt;li&gt;Items within a cart, linked to a product and quantity.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Relationships:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;One-to-Many&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Collection to Product (one collection can have many products).&lt;/li&gt; &#xA; &lt;li&gt;Customer to Order (one customer can have many orders).&lt;/li&gt; &#xA; &lt;li&gt;Order to Orderitem (one order can have many order items).&lt;/li&gt; &#xA; &lt;li&gt;Cart to CarItem (one cart can have many items). &lt;strong&gt;Many-to-Many&lt;/strong&gt;: -Product to Promotion (many products can have many promotions). &lt;strong&gt;One-to-One&lt;/strong&gt;:&lt;/li&gt; &#xA; &lt;li&gt;Customer to Address (one customer has one primary address).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Key Features&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Membership Levels: Customers have defined membership tiers (Silver, Gold, Diamond).&lt;/li&gt; &#xA; &lt;li&gt;Payment Statuses: Orders have distinct payment statuses (Pending, Complete, Failed).&lt;/li&gt; &#xA; &lt;li&gt;Inventory Tracking: Products have inventory levels.&lt;/li&gt; &#xA; &lt;li&gt;Last Update Tracking: Products have a last_update field.&lt;/li&gt; &#xA; &lt;li&gt;Product Slugs: Products have slug fields for URL generation.&lt;/li&gt; &#xA; &lt;li&gt;Cart Functionality: Potential for shopping cart implementation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Additional Notes&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The purpose of Address1 is unclear without further context.&lt;/li&gt; &#xA; &lt;li&gt;Consider clarifying the intended use of Cart and CarItem models.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Step-19&lt;/h2&gt; &#xA;&lt;h3&gt;Create DBMS tables/models in models.py inside tags&lt;/h3&gt; &#xA;&lt;p&gt;Write code in tags&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from django.db import models&#xA;from django.contrib.contenttypes.models import ContentType&#xA;from django.contrib.contenttypes.fields import GenericForeignKey&#xA;# Create your models here.&#xA;class Tag(models.Model):&#xA;    label = models.CharField(max_length=255)&#xA;&#xA;&#xA;class Tagitem(models.Model):&#xA;    tag = models.ForeignKey(Tag,on_delete=models.CASCADE)&#xA;    # type (product)&#xA;    # id table &#xA;    content_type = models.ForeignKey(ContentType,on_delete=models.CASCADE)&#xA;    object_id = models.PositiveIntegerField()&#xA;    content_object = GenericForeignKey()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Step-20&lt;/h2&gt; &#xA;&lt;h3&gt;Next step is Migrations&lt;/h3&gt; &#xA;&lt;p&gt;After write code in store and tags, open terminal and enter this command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python manage.py makemigrations store&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Your store code is migrated. Simillarly,&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python manage.py makemigrations tags&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Your tags code is migrated.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Step 21&lt;/h2&gt; &#xA;&lt;h3&gt;Then you open XAMPP&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open storefront datebase your models is convert in to tables.&lt;/li&gt; &#xA; &lt;li&gt;Click any table like Customer to enter data&lt;/li&gt; &#xA; &lt;li&gt;Go to import button and import Customer table&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Come into Vs code&lt;/h3&gt; &#xA;&lt;h2&gt;Step-22&lt;/h2&gt; &#xA;&lt;h3&gt;Again Open index.html&lt;/h3&gt; &#xA;&lt;p&gt;write this code&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-HTML&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;html lang=&#34;en&#34;&amp;gt;&#xA;{% load static %}&#xA;&amp;lt;head&amp;gt;&#xA;    &amp;lt;meta charset=&#34;UTF-8&#34;&amp;gt;&#xA;    &amp;lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&amp;gt;&#xA;    &amp;lt;link rel=&#34;stylesheet&#34; href=&#39;{% static &#34;css/style.css&#34; %}&#39;&amp;gt;&#xA;    &amp;lt;title&amp;gt;Models&amp;lt;/title&amp;gt;&#xA;&amp;lt;/head&amp;gt;&#xA;&amp;lt;body&amp;gt;&#xA;    &amp;lt;div class=&#34;container bg-success opacity-50 p-4 mb-3&#34;&amp;gt;&#xA;    &amp;lt;h1 class=&#34;text-light&#34;&amp;gt;Welcome to Models in Django&amp;lt;/h1&amp;gt;&#xA;&amp;lt;/div&amp;gt;&#xA;    &amp;lt;div class=&#34;container&#34;&amp;gt;&#xA;    {% if product %}&#xA;    &amp;lt;table class=&#34;table table-bordered border-primary table-hover&#34;&amp;gt;&#xA;    &amp;lt;thead&amp;gt;&#xA;        &amp;lt;tr&amp;gt;&#xA;          &amp;lt;th scope=&#34;col&#34;&amp;gt;ID&amp;lt;/th&amp;gt;&#xA;          &amp;lt;th scope=&#34;col&#34;&amp;gt;TITLE&amp;lt;/th&amp;gt;&#xA;          &amp;lt;th scope=&#34;col&#34;&amp;gt;DESCRIPTION&amp;lt;/th&amp;gt;&#xA;          &amp;lt;th scope=&#34;col&#34;&amp;gt;PRICE&amp;lt;/th&amp;gt;&#xA;          &amp;lt;th scope=&#34;col&#34;&amp;gt;INVENTORY&amp;lt;/th&amp;gt;&#xA;          &amp;lt;th scope=&#34;col&#34;&amp;gt;LAST_UPDATE&amp;lt;/th&amp;gt;&#xA;        &amp;lt;/tr&amp;gt;&#xA;    &amp;lt;/thead&amp;gt;&#xA;    &amp;lt;tbody&amp;gt;&#xA;    {% for p in product %}&#xA;    &amp;lt;tr&amp;gt;&#xA;        &amp;lt;th scope=&#34;row&#34;&amp;gt;{{p.id}}&amp;lt;/th&amp;gt;&#xA;        &amp;lt;td&amp;gt;{{p.title}}&amp;lt;/td&amp;gt;&#xA;        &amp;lt;td&amp;gt;{{p.description}}&amp;lt;/td&amp;gt;&#xA;        &amp;lt;td&amp;gt;{{p.price}}&amp;lt;/td&amp;gt;&#xA;        &amp;lt;td&amp;gt;{{p.inventory}}&amp;lt;/td&amp;gt;&#xA;        &amp;lt;td&amp;gt;{{p.collection__title}}&amp;lt;/td&amp;gt;&#xA;    &amp;lt;/tr&amp;gt;&#xA;    {% endfor %}&#xA;    &amp;lt;/tbody&amp;gt;&#xA;    &amp;lt;/table&amp;gt;&#xA;    {% else %}&#xA;    &amp;lt;p class=&#34;bg-danger&#34;&amp;gt;&#xA;        No Timing Available&#xA;    &amp;lt;/p&amp;gt;&#xA;    {% endif %}&#xA;    {% if pl %}&#xA;    &amp;lt;div class=&#34;container&#34;&amp;gt;&#xA;    &amp;lt;div class=&#34;row alert alert-success&#34;&amp;gt;&#xA;    &amp;lt;div class=&#34;col&#34;&amp;gt;{{pl.id}}&amp;lt;/div&amp;gt;&#xA;    &amp;lt;div class=&#34;col&#34;&amp;gt;{{pl.title}}&amp;lt;/div&amp;gt;&#xA;    &amp;lt;div class=&#34;col&#34;&amp;gt;{{pl.description}}&amp;lt;/div&amp;gt;&#xA;    &amp;lt;div class=&#34;col&#34;&amp;gt;{{pl.price}}&amp;lt;/div&amp;gt;&#xA;    &amp;lt;div class=&#34;col&#34;&amp;gt;{{pl.inventory}}&amp;lt;/div&amp;gt;&#xA;    &amp;lt;div class=&#34;col&#34;&amp;gt;{{pl.last_update}}&amp;lt;/div&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;    {% endif %}&#xA;    {% if pe %}&#xA;    &amp;lt;div class=&#34;container&#34;&amp;gt;&#xA;    &amp;lt;div class=&#34;row alert alert-danger&#34;&amp;gt;&#xA;    &amp;lt;div class=&#34;col&#34;&amp;gt;{{pe.id}}&amp;lt;/div&amp;gt;&#xA;    &amp;lt;div class=&#34;col&#34;&amp;gt;{{pe.title}}&amp;lt;/div&amp;gt;&#xA;    &amp;lt;div class=&#34;col&#34;&amp;gt;{{pe.description}}&amp;lt;/div&amp;gt;&#xA;    &amp;lt;div class=&#34;col&#34;&amp;gt;{{pe.price}}&amp;lt;/div&amp;gt;&#xA;    &amp;lt;div class=&#34;col&#34;&amp;gt;{{pe.inventory}}&amp;lt;/div&amp;gt;&#xA;    &amp;lt;div class=&#34;col&#34;&amp;gt;{{pe.last_update}}&amp;lt;/div&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;    {% endif %}&#xA;&amp;lt;/div&amp;gt;&#xA;&amp;lt;/body&amp;gt;&#xA;&amp;lt;/html&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Step-23&lt;/h2&gt; &#xA;&lt;h3&gt;In views.py inside store&lt;/h3&gt; &#xA;&lt;p&gt;Again write this code&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from django.shortcuts import render&#xA;# from django.core.exceptions import ObjectDoesNotExist&#xA;from store.models import Product&#xA;from django.db.models import Q, F&#xA;# Create your views here.&#xA;&#xA;&#xA;def home(request):&#xA;    query_set = Product.objects.all()&#xA;    # objects is manager that is a interface of database&#xA;    # for p in query_set:&#xA;    #     print(p)&#xA;    # product = Product.objects.get(pk=5)&#xA;    # print(product)&#xA;    # get only specific record using where clause&#xA;    # try:&#xA;    #     product = Product.objects.get(pk=0)&#xA;    # except ObjectDoesNotExist:&#xA;    #     pass&#xA;&#xA;    # product = Product.objects.filter(pk=0).exists()&#xA;    # Filtering Data&#xA;    # find those dollars who have unit_price = 20&#xA;    # product = Product.objects.filter(price=20)&#xA;    # for p in product:&#xA;    #         print(p)&#xA;&#xA;    # Filter using&#xA;    # keyword argument&#xA;    # query_set api&#xA;    # product = Product.objects.filter(price__gte=23.29)&#xA;    # for p in product:&#xA;    #     print(p)&#xA;&#xA;    # product = Product.objects.filter(title__contains=&#39;Wine&#39;)&#xA;    # product = Product.objects.filter(inventory__lt=10,price__lt=20)&#xA;    # product = Product.objects.filter(inventory__lt=10).filter(price__lt=20)&#xA;    # Q object to make complex lookups&#xA;    # product = Product.objects.filter(Q(inventory__lt=10)&amp;amp; ~Q(price__lt=40))&#xA;    # We can compare related fields with F class Object&#xA;    # product = Product.objects.filter(inventory=price)&#xA;    # Sort in Ascending order&#xA;    # Order_by is a quert_set method so its return a query objects&#xA;    # product = Product.objects.filter(collection_id=5).order_by(&#39;price&#39;).reverse()&#xA;    # pl = Product.objects.latest(&#39;id&#39;)&#xA;    # pe = Product.objects.earliest(&#39;id&#39;)&#xA;    # product = Product.objects.all()[:5]&#xA;    # product = Product.objects.all()[4:10]&#xA;    product = Product.objects.values(&#39;id&#39;,&#39;title&#39;,&#39;description&#39;,&#39;price&#39;,&#39;inventory&#39;,&#39;collection__title&#39;)&#xA;    return render(request, &#39;index.html&#39;, {&#39;product&#39;: product})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Step-24&lt;/h2&gt; &#xA;&lt;h3&gt;Create static folder&lt;/h3&gt; &#xA;&lt;pre&gt;&#xA;storefront&#xA;        |___ static&#xA;        |___ store    &#xA;        |___ storefront&#xA;        |           |___ __init__.py&#xA;        |           |___ asgi.py&#xA;        |           |___ settings.py&#xA;        |           |___ urls.py&#xA;        |           |___ wsgi.py&#xA;        |&#xA;        |___ tags&#xA;        |___ Templates&#xA;        |           |___index.html&#xA;        |___ manage.py&#xA;&#xA;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;inside static folder create css folder&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;inside css folder create style.css file&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&#xA;storefront&#xA;        |___ static&#xA;        |         |___ css&#xA;        |               |___ style.css&#xA;        |&#xA;        |___ store    &#xA;        |___ storefront&#xA;        |           |___ __init__.py&#xA;        |           |___ asgi.py&#xA;        |           |___ settings.py&#xA;        |           |___ urls.py&#xA;        |           |___ wsgi.py&#xA;        |&#xA;        |___ tags&#xA;        |___ Templates&#xA;        |           |___index.html&#xA;        |___ manage.py&#xA;&#xA;&lt;/pre&gt; &#xA;&lt;h2&gt;Step-25&lt;/h2&gt; &#xA;&lt;h3&gt;In style.css we use boostrap cdn you can paste below link to new tab copy all css and paste your style.css file&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Step-26&lt;/h2&gt; &#xA;&lt;h3&gt;Then Run Server&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python manage.py runserver&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>MakerSpace-FRI-UTAustin/App2-HelloWorld</title>
    <updated>2024-01-31T01:26:29Z</updated>
    <id>tag:github.com,2024-01-31:/MakerSpace-FRI-UTAustin/App2-HelloWorld</id>
    <link href="https://github.com/MakerSpace-FRI-UTAustin/App2-HelloWorld" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;App2-HelloWorld&lt;/h1&gt; &#xA;&lt;p&gt;This is the repository for the App 2- Hello World assignment. The base code you will use is above (in this repository) and you will make your own copy of the code (fork the code). Then you can edit your fork without impacting the original copy.&lt;/p&gt;</summary>
  </entry>
</feed>