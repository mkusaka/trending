<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-14T01:31:47Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tailscale/golink</title>
    <updated>2022-11-14T01:31:47Z</updated>
    <id>tag:github.com,2022-11-14:/tailscale/golink</id>
    <link href="https://github.com/tailscale/golink" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A private shortlink service for tailnets&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;golink&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tailscale.com/kb/1167/release-stages/#experimental&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/status-experimental-blue&#34; alt=&#34;status: experimental&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;golink is a private shortlink service for your &lt;a href=&#34;https://tailscale.com/kb/1136/tailnet/&#34;&gt;tailnet&lt;/a&gt;. It lets you create short, memorable links for the websites you and your team use most.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tailscale/golink/main/screenshot.png&#34; alt=&#34;Screenshot of golink home screen&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building and running&lt;/h2&gt; &#xA;&lt;p&gt;To build from source and run in dev mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;go run ./cmd/golink -dev-listen :8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;golink will be available at &lt;a href=&#34;http://localhost:8080/&#34;&gt;http://localhost:8080/&lt;/a&gt;, storing links in a temporary database, and will not attempt to join a tailnet.&lt;/p&gt; &#xA;&lt;p&gt;The equivalent using the pre-built docker image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it --rm -p 8080:8080 -v /tmp/golink:/root ghcr.io/tailscale/golink:main -dev-listen :8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Joining a tailnet&lt;/h2&gt; &#xA;&lt;p&gt;Create an [auth key] for your tailnet at &lt;a href=&#34;https://login.tailscale.com/admin/settings/keys&#34;&gt;https://login.tailscale.com/admin/settings/keys&lt;/a&gt;. Configure the auth key to your preferences, but at a minimum we generally recommend:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;add a &lt;a href=&#34;https://tailscale.com/kb/1068/acl-tags/&#34;&gt;tag&lt;/a&gt; (maybe something like &lt;code&gt;tag:golink&lt;/code&gt;) to make it easier to set ACLs for controlling access and to ensure the node doesn&#39;t expires.&lt;/li&gt; &#xA; &lt;li&gt;don&#39;t set &#34;ephemeral&#34; so the node isn&#39;t removed if it goes offline&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once you have a key, set it as the &lt;code&gt;TS_AUTHKEY&lt;/code&gt; environment variable when starting golink. You will also need to specify your sqlite database file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TS_AUTHKEY=&#34;tskey-auth-&amp;lt;key&amp;gt;&#34; go run ./cmd/golink -sqlitedb golink.db&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;golink stores its tailscale data files in a &lt;code&gt;tsnet-golink&lt;/code&gt; directory inside &lt;a href=&#34;https://pkg.go.dev/os#UserConfigDir&#34;&gt;os.UserConfigDir&lt;/a&gt;. As long as this is on a persistent volume, the auth key only needs to be provided on first run.&lt;/p&gt; &#xA;&lt;h2&gt;MagicDNS&lt;/h2&gt; &#xA;&lt;p&gt;When golink joins your tailnet, it will attempt to use &#34;go&#34; as its node name, and will be available at &lt;a href=&#34;http://go.tailnet0000.ts.net/&#34;&gt;http://go.tailnet0000.ts.net/&lt;/a&gt; (or whatever your tailnet name is). To make it accessible simply as &lt;a href=&#34;http://go/&#34;&gt;http://go/&lt;/a&gt;, enable &lt;a href=&#34;https://tailscale.com/kb/1081/magicdns/&#34;&gt;MagicDNS&lt;/a&gt; for your tailnet. With MagicDNS enabled, no special configuration or browser extensions are needed on client devices. Users just need to have Tailscale installed and connected to the tailnet.&lt;/p&gt; &#xA;&lt;h2&gt;Running in production&lt;/h2&gt; &#xA;&lt;p&gt;golink compiles as a single static binary (including the frontend) and can be deployed and run like any other binary. Two pieces of data should be on persistent volumes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;tailscale data files in the &lt;code&gt;tsnet-golink&lt;/code&gt; directory inside &lt;a href=&#34;https://pkg.go.dev/os#UserConfigDir&#34;&gt;os.UserConfigDir&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;the sqlite database file where links are stored&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In the docker image, both are stored in &lt;code&gt;/root&lt;/code&gt;, so you can mount a persistent volume at /root:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -v /persistant/data:/root ghcr.io/tailscale/golink:main&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;No ports need to be exposed, whether running as a binary or in docker. golink will listen on port 80 on the tailscale interface, so can be accessed at &lt;a href=&#34;http://go/&#34;&gt;http://go/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Deploy on Fly&lt;/summary&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://fly.io/docs/&#34;&gt;https://fly.io/docs/&lt;/a&gt; for full instructions for deploying apps on Fly, but this should give you a good start. Replace &lt;code&gt;FLY_APP_NAME&lt;/code&gt; and &lt;code&gt;FLY_VOLUME_NAME&lt;/code&gt; with your app and volume names.&lt;/p&gt; &#xA; &lt;p&gt;Create a &lt;a href=&#34;https://fly.io/docs/reference/configuration/&#34;&gt;fly.toml&lt;/a&gt; file:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;app = &#34;FLY_APP_NAME&#34;&#xA;&#xA;[build]&#xA;image = &#34;ghcr.io/tailscale/golink:main&#34;&#xA;&#xA;[deploy]&#xA;strategy = &#34;immediate&#34;&#xA;&#xA;[mounts]&#xA;source=&#34;FLY_VOLUME_NAME&#34;&#xA;destination=&#34;/root&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Then run the commands with the &lt;a href=&#34;https://fly.io/docs/hands-on/install-flyctl/&#34;&gt;flyctl CLI&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ flyctl create app FLY_APP_NAME&#xA;$ flyctl volumes create FLY_VOLUME_NAME&#xA;$ flyctl secrets create TS_AUTHKEY=tskey-auth-&amp;lt;key&amp;gt;&#xA;$ flyctl deploy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Backups&lt;/h2&gt; &#xA;&lt;p&gt;Once you have golink running, you can backup all of your links in &lt;a href=&#34;https://jsonlines.org/&#34;&gt;JSON lines&lt;/a&gt; format from &lt;a href=&#34;http://go/.export&#34;&gt;http://go/.export&lt;/a&gt;. At Tailscale, we snapshot our links weekly and store them in git.&lt;/p&gt; &#xA;&lt;p&gt;To restore links, specify the snapshot file on startup. Only links that don&#39;t already exist in the database will be added.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;golink -snapshot links.json&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>