<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-17T01:28:02Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>EELL88/aurora</title>
    <updated>2024-03-17T01:28:02Z</updated>
    <id>tag:github.com,2024-03-17:/EELL88/aurora</id>
    <link href="https://github.com/EELL88/aurora" rel="alternate"></link>
    <summary type="html">&lt;p&gt;v2boardÂâçÁ´Ø&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;aurora&lt;/h1&gt; &#xA;&lt;p&gt;v2boardÂâçÁ´Ø&lt;/p&gt; &#xA;&lt;p&gt;Áî®cloudflareÁöÑPagesÈÉ®ÁΩ≤Ôºå ÁÑ∂ÂêéÊ∑ªÂä†ÁéØÂ¢ÉÂèòÈáè ÁéØÂ¢ÉÂèòÈáèÊòØ API_URL = Êú∫Âú∫ÁΩëÁ´ô ‰æãÂ¶Ç &lt;a href=&#34;https://qq.com&#34;&gt;https://qq.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ÁÑ∂ÂêéÂú®GitHub‰øÆÊîπÔºåindex.htmlËøô‰∏™Êñá‰ª∂ÁöÑ‰∏úË•øÔºåÊää‰∏Ä‰∫õ‰∏úË•ø‰øÆÊîπÊàêËá™Â∑±ÁöÑ&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>alexbates/Tamari</title>
    <updated>2024-03-17T01:28:02Z</updated>
    <id>tag:github.com,2024-03-17:/alexbates/Tamari</id>
    <link href="https://github.com/alexbates/Tamari" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fully-featured recipe manager web application built using Python and the Flask Framework.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tamari&lt;/h1&gt; &#xA;&lt;p&gt;Tamari is a fully-featured recipe manager web application built using Python and the Flask Framework.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/repo-size/alexbates/Tamari?style=plastic&#34; alt=&#34;GitHub repo size&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/languages/count/alexbates/Tamari?style=plastic&#34; alt=&#34;GitHub language count&#34;&gt; &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true&#34; alt=&#34;License: GPL v3&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/alexbates/Tamari?color=red&amp;amp;style=plastic&#34; alt=&#34;GitHub last commit&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://bates.gg/tamari-screenshot.jpg&#34; alt=&#34;Tamari Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Live Demo&lt;/h2&gt; &#xA;&lt;p&gt;Try it out at &lt;a href=&#34;https://demo.tamariapp.com&#34;&gt;https://demo.tamariapp.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Some functionality is disabled and data is deleted every 20 minutes.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Create User Accounts.&lt;/strong&gt; Login with an email and password. If configured on the instance, account passwords can be reset by sending a reset request to the email associated with your account.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Store, View, Search, and Share Recipes.&lt;/strong&gt; For a single recipe, you can save a title, category, description, time estimates, servings, URL, ingredients, instructions, and a photo. If you don‚Äôt upload a photo, Tamari will assign a random cooking-themed placeholder. On the detail page for a recipe, you can click to cross off completed ingredients and instruction steps while you are cooking. Search-as-you-type functionality enables you to find the recipe you are looking for as quickly as possible. Recipes are only visible while logged in by default, however you can make a recipe public and share the URL with anyone.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Organize.&lt;/strong&gt; Mark recipes as Favorites for easy access. Assign categories to recipes and browse by category.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Explore.&lt;/strong&gt; Browse and search a collection of over 36,000 recipes from three recipe sharing websites (more coming soon!). When you browse a recipe in Explore, Tamari will fetch and parse the relevant data from the URL without requiring you to visit the webpage. Import a recipe into My Recipes with the click of a button.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Make Shopping Lists.&lt;/strong&gt; Make a shopping list for each store you shop at. Add all ingredients for a specific recipe to a shopping list with the click of a button. Click an item on a shopping list to mark it as completed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Plan Meals.&lt;/strong&gt; Use the Meal Planner to keep on top of what you plan to cook for the week. The Schedule button can assign a recipe being viewed to a date up to 30 days in advance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Customize.&lt;/strong&gt; Choose to display large photos to show off your recipes to friends, or smaller photos to fit more recipes on the screen. Sort recipes by title or by date added. Select between four account profile pictures. Set an accent color that applies to most buttons and many elements throughout the app. For a Tamari instance, some configuration options can be customized such as recipes per page and dynamic loading of images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Access on any Device.&lt;/strong&gt; Tamari is designed to function well on any desktop, laptop, tablet, or smartphone.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing with Docker üê≥&lt;/h2&gt; &#xA;&lt;p&gt;This creates a &#39;tamaristorage&#39; volume for persistent storage.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d --restart=always -p 4888:4888 -v tamaristorage:/app --name tamari alexbates/tamari:0.4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Tamari is now running! Go to &lt;a href=&#34;http://localhost:4888&#34;&gt;http://localhost:4888&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Alternative Command with Mail Settings&lt;/h3&gt; &#xA;&lt;p&gt;Use this command instead if you wish to enable password reset requests via email. Replace variables with settings for an email account you control.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d -e MAIL_SERVER=mail.example.com -e MAIL_PORT=587 -e MAIL_USE_TLS=1 -e MAIL_USERNAME=youremail@example.com -e MAIL_PASSWORD=yourpassword --restart=always -p 4888:4888 -v tamaristorage:/app --name tamari alexbates/tamari:0.4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Manual Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Install on Debian 11&lt;/h3&gt; &#xA;&lt;p&gt;Use a virtual environment to ensure that dependencies don&#39;t interfere with other software on your system.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install python3 python3-venv git&#xA;git clone https://github.com/alexbates/Tamari&#xA;cd Tamari&#xA;python3 -m venv venv&#xA;source venv/bin/activate&#xA;pip install -r requirements.txt&#xA;flask db init&#xA;flask db migrate -m &#34;Initial&#34;&#xA;flask db upgrade&#xA;export FLASK_APP=tamari.py&#xA;gunicorn -b 0.0.0.0:4888 -w 4 app:app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Tamari is now running! Go to &lt;a href=&#34;http://localhost:4888&#34;&gt;http://localhost:4888&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Start Tamari Automatically at System Boot&lt;/h3&gt; &#xA;&lt;p&gt;Make start script executable (must be in Tamari directory)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo chmod u+x start.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create Systemd service&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo nano /etc/systemd/system/tamari.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Paste This (You must change ‚ÄúUSERNAME‚Äù)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[Unit]&#xA;Description=Tamari Recipe Manager&#xA;After=syslog.target network.target&#xA;&#xA;[Service]&#xA;Type=simple&#xA;WorkingDirectory=/home/USERNAME/Tamari&#xA;ExecStart=/home/USERNAME/Tamari/start.sh&#xA;Restart=always&#xA;RestartSec=15&#xA;&#xA;[Install]&#xA;WantedBy=multi-user.target&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start the Systemd service&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo systemctl enable tamari.service&#xA;sudo systemctl start tamari.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Access Tamari from behind a reverse proxy&lt;/h3&gt; &#xA;&lt;p&gt;Here is a sample Nginx config (/etc/nginx/conf.d/default.conf).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;server {&#xA;&#x9;listen 80;&#xA;&#x9;server_name tamari.example.com;&#xA;&#x9;return 301 https://tamari.example.com$request_uri;&#xA;}&#xA;server {&#xA;&#x9;listen 443 ssl;&#xA;&#x9;server_name tamari.example.com;&#xA;&#x9;ssl on;&#xA;&#x9;&#xA;&#x9;location / {&#xA;&#x9;&#x9;proxy_pass&#x9;&#x9;http://127.0.0.1:4888;&#xA;&#x9;&#x9;proxy_set_header Host $http_host;&#xA;&#x9;&#x9;proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&#xA;&#x9;&#x9;proxy_set_header X-Real-IP $remote_addr;&#xA;&#x9;&#x9;proxy_set_header X-Forwarded-Proto $scheme;&#xA;&#x9;&#x9;add_header &#39;Content-Security-Policy&#39; &#39;upgrade-insecure-requests&#39;;&#xA;&#x9;&#x9;proxy_redirect http://$http_host/ https://$http_host/;&#xA;&#x9;}&#xA;&#x9;ssl_certificate /etc/ssl/certs/tamari.example.com/fullchain.pem;&#xA;&#x9;ssl_certificate_key /etc/ssl/certs/tamari.example.com/privkey.pem;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This forces SSL, causes Flask url_for to build urls using subdomain instead of localhost, and prevents http resources from being blocked by browsers. An SSL certificate for your domain is required.&lt;/p&gt; &#xA;&lt;h3&gt;Configure Mail Settings (Optional)&lt;/h3&gt; &#xA;&lt;p&gt;Configure to enable password reset requests via email. If login username is not the same as your email address, you need to configure &#39;ADMIN&#39; in config.py.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;source venv/bin/activate&#xA;export MAIL_SERVER=mail.example.com&#xA;export MAIL_PORT=587&#xA;export MAIL_USE_TLS=1&#xA;export MAIL_USERNAME=youremail@example.com&#xA;export MAIL_PASSWORD=yourpassword&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Backups&lt;/h2&gt; &#xA;&lt;p&gt;Please make backups of your data. All user data is stored in the following database file and directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Tamari/app/app.db&#xA;Tamari/app/recipe-photos&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Docker, if using tamaristorage volume, files may be mounted at the following locations.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/var/lib/docker/volumes/tamaristorage/_data/app.db&#xA;/var/lib/docker/volumes/tamaristorage/_data/recipe-photos&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>dajianihao/helldivers-2-cheat</title>
    <updated>2024-03-17T01:28:02Z</updated>
    <id>tag:github.com,2024-03-17:/dajianihao/helldivers-2-cheat</id>
    <link href="https://github.com/dajianihao/helldivers-2-cheat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;New updated cheat for Helldivers 2!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Helldivers 2 Updated Cheat&lt;/h1&gt; &#xA;&lt;h2&gt;Feature List&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click to show&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Cheat&lt;/th&gt; &#xA;    &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Infinite Health&lt;/td&gt; &#xA;    &lt;td&gt;Makes you invulnerable to most forms of damage&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Infinite Grenades&lt;/td&gt; &#xA;    &lt;td&gt;Grenades are always at max capacity&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Infinite Grenades (legit)&lt;/td&gt; &#xA;    &lt;td&gt;Grenades decrease, but never drops to zero. Allows you to collect grenade boxes&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Infinite Ammunition&lt;/td&gt; &#xA;    &lt;td&gt;Ammunition is always at max capacity&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Infinite Ammunition (legit)&lt;/td&gt; &#xA;    &lt;td&gt;Ammunition decreases, but never drops to zero. Allows you to collect supply packs&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Infinite Syringes&lt;/td&gt; &#xA;    &lt;td&gt;Syringes are always at max capacity&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Infinite Syringes (legit)&lt;/td&gt; &#xA;    &lt;td&gt;Syringes decrease, but never drops to zero. Allows you to collect supply packs&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Infinite Stamina&lt;/td&gt; &#xA;    &lt;td&gt;Disables stamina meter. Run forever&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Infinite Stratagems&lt;/td&gt; &#xA;    &lt;td&gt;Stratagems are always at maximum capacity. No stratagem cooldown&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;MoveSpeed x6&lt;/td&gt; &#xA;    &lt;td&gt;Move 6x faster than usual&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Infinite Mission Time&lt;/td&gt; &#xA;    &lt;td&gt;Mission timer does not decrease&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;No Reload&lt;/td&gt; &#xA;    &lt;td&gt;Magazine capacity does not decrease&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Max Resources&lt;/td&gt; &#xA;    &lt;td&gt;Picking up a sample will pick up x500 of each type. There is a max capacity on board your own ship&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Add 5 samples&lt;/td&gt; &#xA;    &lt;td&gt;Picking up a sample adds 5 samples to your inventory&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;No Recoil&lt;/td&gt; &#xA;    &lt;td&gt;Prevents your weapon from having a recoil effect&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Infinite Backpack&lt;/td&gt; &#xA;    &lt;td&gt;Backpack &#39;resource&#39; is never depleted (eg. full ammo, rover no overheat)&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Infinite Special Weapon&lt;/td&gt; &#xA;    &lt;td&gt;Special weapon has unlimited ammunition&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;No Laser Cannon Overheat&lt;/td&gt; &#xA;    &lt;td&gt;Laser cannon can be fired forever without swapping cartridge&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Instant Railgun&lt;/td&gt; &#xA;    &lt;td&gt;Arc Thrower and Railgun do not need to be charged for max damage&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Show All Map Icons&lt;/td&gt; &#xA;    &lt;td&gt;Simulates radar tower, all POI and objectives shown on the map&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;No Stationary Turret Overheat&lt;/td&gt; &#xA;    &lt;td&gt;Heavy Machine Gun emplacement does not require cooling down&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;No Backpack Shield Cooldown&lt;/td&gt; &#xA;    &lt;td&gt;When backpack energy shield is broken, it instantly gets replaced&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;No Jetpack Cooldown&lt;/td&gt; &#xA;    &lt;td&gt;Jetpack does not require recharging, jump constantly&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;All Stratagems in Loadout&lt;/td&gt; &#xA;    &lt;td&gt;Enables in-development stratagems, as well as locked stratagems&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;All Equipment in Armory&lt;/td&gt; &#xA;    &lt;td&gt;Enables in-development, or locked, primary, secondary weapons, and grenades&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;All Armor in Armory&lt;/td&gt; &#xA;    &lt;td&gt;Enables in-development, or locked armor&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;h3&gt;- Download .exe&lt;/h3&gt; &#xA;&lt;h3&gt;- Extract .exe inside helldivers 2 game folder ( same folder as helldivers2.exe )&lt;/h3&gt; &#xA;&lt;h3&gt;- Run .exe&lt;/h3&gt; &#xA;&lt;h3&gt;- Choose Feature ( Navigate using arrow key to up/down, space for select / unselect )&lt;/h3&gt; &#xA;&lt;h3&gt;- Enter To Applied Feature&lt;/h3&gt; &#xA;&lt;h3&gt;- Happy Cheating&lt;/h3&gt;</summary>
  </entry>
</feed>