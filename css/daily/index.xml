<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-18T01:31:47Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dharmikumbhani/buidl.so-frontend-test</title>
    <updated>2022-11-18T01:31:47Z</updated>
    <id>tag:github.com,2022-11-18:/dharmikumbhani/buidl.so-frontend-test</id>
    <link href="https://github.com/dharmikumbhani/buidl.so-frontend-test" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Buidl.so Frontend test&lt;/h1&gt; &#xA;&lt;p&gt;The test is simple. I have added a html page in the doc folder. This html page has a lot of css preapplied to it. Your task is&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Understand the underlying CSS.&lt;/li&gt; &#xA; &lt;li&gt;Understand the complex html structure of page.html.&lt;/li&gt; &#xA; &lt;li&gt;Modify the page.html so that it looks like the figma design file &lt;a href=&#34;https://www.figma.com/file/NjU5ionm0MWMnyvzAmriCm/buidl.so-frontend-test?node-id=0%3A1&#34;&gt;here&lt;/a&gt;, If you have your own idea for how this program page should look like, then please do that! you don&#39;t have to abide by the figma design file attached.&lt;/li&gt; &#xA; &lt;li&gt;Figure out and implement mobile responsiveness on your own + read tips.&lt;/li&gt; &#xA; &lt;li&gt;Create a new css file (stylesheet-6.css) with proper commenting and add it at the end of all stylesheet files in the head tag.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;When you go through the html code you will observe a lot of child divs and classes like view-contents, view-form, view-items, etc. these divs and classes are coming from backend (since its a coupled architecture) make sure you understand how thats structured. while redeveloping the page you might not necessarily add these extra tags and classes but understanding of this underlying html structure will become v important later on when you join.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Tips&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go mobile first&lt;/li&gt; &#xA; &lt;li&gt;Make sure you go through the constants that have been applied (things like typography, margins, gutter) and use them as much as possible. If you still want to customize it then use the css calc function.&lt;/li&gt; &#xA; &lt;li&gt;For media queries we use 2, only 2 queries with default being mobile - &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;min 720px - for tablets&lt;/li&gt; &#xA;   &lt;li&gt;min 1024px - for desktops (you can better understand this looking at css files)&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;The code changing that you will have to do will be only be for inside #main-content element&lt;/li&gt; &#xA; &lt;li&gt;Whatever content you write it doesn&#39;t matter mostly all the content is going to come via the backend. so lorem ipsum at most places will do for this test&lt;/li&gt; &#xA; &lt;li&gt;stylesheet-4.css is not that consequential for these page but will be good for you to just go through it.&lt;/li&gt; &#xA; &lt;li&gt;page-1.html was added just to give you more reference on html structuring.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;You will be judged based on&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;How concise your CSS is.&lt;/li&gt; &#xA; &lt;li&gt;Amount of css class you had to create to achieve this page.&lt;/li&gt; &#xA; &lt;li&gt;Understanding of how the html code was structured in the initially given file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;What matters here is how comfortable are you in working with such level of complexities in code and how can you come up with unique solutions with all the various constraints that are there from the backend.&lt;/p&gt; &#xA;&lt;h2&gt;Extras&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We using bootstrap3 (yikes, yup we know) as our underlying CSS framework, so if you are someone who has used it before then thats a plus.&lt;/li&gt; &#xA; &lt;li&gt;If you have worked with drupal before and know how layouts work then that a huge plus.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For any doubts or anything reach out to me via &lt;a href=&#34;https://twitter.com/dharmikumbhani&#34;&gt;twitter&lt;/a&gt; or mail me at &lt;a href=&#34;mailto:dharmi@buidlerstribe.com&#34;&gt;dharmi@buidlerstribe.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nighthawkcoders/spring_portfolio</title>
    <updated>2022-11-18T01:31:47Z</updated>
    <id>tag:github.com,2022-11-18:/nighthawkcoders/spring_portfolio</id>
    <link href="https://github.com/nighthawkcoders/spring_portfolio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tri 1: Java and Spring Intro&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;TBD &lt;a href=&#34;https://nighthawkcodingsociety.com/projectsearch/details/Spring%20Portfolio%20Starter&#34;&gt;Spring Portfolio Starter&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Runtime link: TBD &lt;a href=&#34;https://jportfolio.nighthawkcodingsociety.com/&#34;&gt;https://jportfolio.nighthawkcodingsociety.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Visual thoughts&lt;/h2&gt; &#xA;&lt;h4&gt;* Starter code should be fun and practical&lt;/h4&gt; &#xA;&lt;h4&gt;* Organize with Bootstrap menu&lt;/h4&gt; &#xA;&lt;h4&gt;* Add some color and fun through VANTA Visuals (birds, halo, solar, net)&lt;/h4&gt; &#xA;&lt;h4&gt;* Show some practical and fun links (hrefs) like Twitter, Git, Youtube&lt;/h4&gt; &#xA;&lt;h4&gt;* Show student project specific links (hrefs) per page&lt;/h4&gt; &#xA;&lt;h4&gt;* Show student TPT ideas&lt;/h4&gt; &#xA;&lt;h4&gt;* Show student About me pages&lt;/h4&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h4&gt;* Clone project to IntelliJ&lt;/h4&gt; &#xA;&lt;h4&gt;* Verify Project Structure to use a good Java JDK (adopt-openJ9-15)&lt;/h4&gt; &#xA;&lt;h4&gt;* Play or entry point is Main.java, look for play option in tray. This file eanbles Spring to load&lt;/h4&gt; &#xA;&lt;h4&gt;* Java source (src/main/java) had Java files. Find &#34;controllers&#34; path, these files enable HTTP route and HTML file relationship. Note, html&lt;/h4&gt; &#xA;&lt;h4&gt;* HTML source (src/main/resources) had templates and supporting files. Find index.html as this file is launched by defaul in Spring. Other HTML files are loaded by building a &#34;@Controller&#34;&lt;/h4&gt; &#xA;&lt;h2&gt;IDE management&lt;/h2&gt; &#xA;&lt;h4&gt;* A &#34;.gitignore&#34; can teach a Developer a lot about Java runtime. A target directory is created when you press play button, byte code is generated and files are moved into this location.&lt;/h4&gt; &#xA;&lt;h4&gt;* A &#34;pom.xml&#34; file can teach you a lot about Java dependencies. This is similar to &#34;requirements.txt&#34; file in Python. It manages packages and dependencies.&lt;/h4&gt;</summary>
  </entry>
</feed>