<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-12T01:30:13Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>itscodenation/flw1-u2l2-23-24-student-exercises</title>
    <updated>2024-01-12T01:30:13Z</updated>
    <id>tag:github.com,2024-01-12:/itscodenation/flw1-u2l2-23-24-student-exercises</id>
    <link href="https://github.com/itscodenation/flw1-u2l2-23-24-student-exercises" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Lesson 2.2: Arrow Functions &amp;amp; Review&lt;/h1&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itscodenation/flw1-u2l2-23-24-student-exercises/main/#arrow-functions&#34;&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itscodenation/flw1-u2l2-23-24-student-exercises/main/#single-parameter&#34;&gt;Single Parameter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itscodenation/flw1-u2l2-23-24-student-exercises/main/#multiple-parameters&#34;&gt;Multiple Parameters&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Arrow Functions&lt;/h2&gt; &#xA;&lt;h3&gt;What is a function?&lt;/h3&gt; &#xA;&lt;p&gt;In programming, a function is a reusable block of code that performs a specific task. Functions help organize your code, make it more readable, and reduce redundancy.&lt;/p&gt; &#xA;&lt;h3&gt;Why do we use functions in programming?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Modularity&lt;/strong&gt;: Functions allow you to break down complex problems into smaller, manageable tasks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reusability&lt;/strong&gt;: You can use the same function in multiple parts of your code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Readability&lt;/strong&gt;: Functions make your code more organized and easier to understand.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Quick Recap&lt;/h3&gt; &#xA;&lt;p&gt;Arrow functions provide a concise syntax to write functions in JavaScript. They are declared with the following structure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const functionName = () =&amp;gt; {&#xA;  // Your code here&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here&#39;s an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const greet = () =&amp;gt; {&#xA;  console.log(&#39;Hello!&#39;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can often convert a regular function into an arrow function. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Regular function&#xA;function greet() {&#xA;  console.log(&#39;Hello!&#39;);&#xA;}&#xA;&#xA;// Arrow function&#xA;const greet = () =&amp;gt; {&#xA;  console.log(&#39;Hello!&#39;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Code Along&lt;/h3&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;arrow.js&lt;/code&gt; file to complete the tasks. As you code, make sure you are following along with the examples provided in the lesson.&lt;/p&gt; &#xA;&lt;h2&gt;Single Parameter&lt;/h2&gt; &#xA;&lt;p&gt;In this section, you&#39;ll learn about functions that take a single parameter.&lt;/p&gt; &#xA;&lt;h3&gt;Function Declaration with Parameters&lt;/h3&gt; &#xA;&lt;p&gt;To declare a function with a parameter, use the following syntax:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function functionName(parameterName) {&#xA;  // Your code here&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here&#39;s an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function squareNum(num) {&#xA;  return num * num;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Function Call with Arguments&lt;/h3&gt; &#xA;&lt;p&gt;When calling a function with parameters, you provide arguments. Arguments are the actual values that you want to use inside the function. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;squareNum(7); // Calling squareNum with the argument 7&#xA;squareNum(6); // Calling squareNum with the argument 6&#xA;&#xA;let userInput = input.value; // Assuming input.value holds a number&#xA;squareNum(userInput); // Calling squareNum with a variable as the argument&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Multiple Parameters&lt;/h2&gt; &#xA;&lt;p&gt;Functions can also take multiple parameters.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function greet(name1, name2) {&#xA;  console.log(`Hi ${name1} &amp;amp; ${name2}!`);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Multiple Parameters - Order Matters&lt;/h3&gt; &#xA;&lt;p&gt;When using multiple parameters, it&#39;s important to place the arguments in the right order when you call the function. The order of the arguments should match the order of the parameters in the function declaration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;greet(&#34;Lucy&#34;, &#34;Pablo&#34;); // Correct order&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Happy coding ðŸ˜Š&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>okfn/ckanext-datahub</title>
    <updated>2024-01-12T01:30:13Z</updated>
    <id>tag:github.com,2024-01-12:/okfn/ckanext-datahub</id>
    <link href="https://github.com/okfn/ckanext-datahub" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Plugin for datahub&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DataHub&lt;/h1&gt; &#xA;&lt;p&gt;This plugin provides customisation of CKAN for &lt;a href=&#34;http://datahub.io&#34;&gt;The DataHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h2&gt;Tests&lt;/h2&gt;</summary>
  </entry>
  <entry>
    <title>diffbot/rss-anything</title>
    <updated>2024-01-12T01:30:13Z</updated>
    <id>tag:github.com,2024-01-12:/diffbot/rss-anything</id>
    <link href="https://github.com/diffbot/rss-anything" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Transform any old website with a list of links into an RSS Feed&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RSS Anything&lt;/h1&gt; &#xA;&lt;p&gt;Uses &lt;a href=&#34;https://www.diffbot.com/products/extract/&#34;&gt;Diffbot&#39;s Extract API&lt;/a&gt; to transform lists of links on websites into an RSS feed.&lt;/p&gt; &#xA;&lt;h2&gt;Build Locally&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3+ &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://virtualenv.pypa.io/en/latest/&#34;&gt;virtualenv&lt;/a&gt; recommended but not necessary.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;npm&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install requirements.txt&#xA;npm install tailwindcss&#xA;npx tailwindcss -i ./static/custom.css -o ./static/main.css&#xA;flask run&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>