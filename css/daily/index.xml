<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-08T01:32:03Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wso2/docs-apim</title>
    <updated>2025-02-08T01:32:03Z</updated>
    <id>tag:github.com,2025-02-08:/wso2/docs-apim</id>
    <link href="https://github.com/wso2/docs-apim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WSO2 API Manager Documentation&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://join.slack.com/t/wso2-apim/shared_invite/enQtNzEzMzk5Njc5MzM0LTgwODI3NmQ1MjI0ZDQyMGNmZGI4ZjdkZmI1ZWZmMjNkY2E0NmY3ZmExYjkxYThjNzNkOTU2NWJmYzM4YzZiOWU?&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-wso2--apim-blueviolet&#34; alt=&#34;slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://stackoverflow.com/tags/wso2-am/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/stackoverflow-wso2am-orange&#34; alt=&#34;StackOverflow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://wso2.org/jenkins/view/docs/job/docs/job/docs-apim&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/build?jobUrl=https%3A%2F%2Fwso2.org%2Fjenkins%2Fview%2Fdocs%2Fjob%2Fdocs%2Fjob%2Fdocs-apim%2F&#34; alt=&#34;Jenkins Build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contributing to WSO2 API-M documentation&lt;/h2&gt; &#xA;&lt;p&gt;As an open source project, WSO2 API-M welcomes contributions from the community. To start contributing, read these contribution guidelines for information on how you should go about contributing to our project.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Accept the Contributor License Agreement (CLA)&lt;/p&gt; &lt;p&gt;You need to Accept the Contributor License Agreement (CLA) when prompted by a GitHub email notification after sending your first Pull Request (PR). Subsequent PRs will not require CLA acceptance.&lt;/p&gt; &lt;p&gt;If the CLA gets changed for some (unlikely) reason, you will be presented with the new CLA text after sending your first PR after the change.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fork this repository, make your changes, and send in a pull request (PR). Make sure you are contributing to the correct branch (for example, if your change is relevant to WSO2 API-M 4.4.0 documentation, you should commit your changes to the 4.4.0 branch).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Send multiple pull requests to all the relevant branches.&lt;/p&gt; &lt;p&gt;If your change is relevant to the latest API-M release, please send your change to the respective latest API-M release branch and the master branch, which is the upcoming API-M release documentation branch, as well.&lt;/p&gt; &lt;p&gt;For example, if the latest API-M release is 4.4.0, and if your change is relevant to API-M 4.4.0, 4.3.0, and 4.2.0, send PRs to the 4.4.0, 4.3.0, 4.2.0, and the master branches.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Check the issue tracker for open issues that interest you. We look forward to receiving your contributions.&lt;/p&gt; &#xA;&lt;h2&gt;Run the project locally&lt;/h2&gt; &#xA;&lt;h3&gt;Step 1 - Install Python&lt;/h3&gt; &#xA;&lt;h4&gt;MacOS&lt;/h4&gt; &#xA;&lt;p&gt;If you are using MacOS, you probably already have a version of Python installed on your machine. You can verify this by running the following command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ python --version&#xA;Python 2.7.2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If your version of Python is Python 2.x.x, you also need to install Python3. This is because the PDF plugin only supports Python3. Follow the instructions in &lt;a href=&#34;https://docs.python-guide.org/starting/install3/osx/&#34;&gt;this guide&lt;/a&gt; to install Python3 properly.&lt;/p&gt; &#xA;&lt;p&gt;Once you are done, you will have two versions of Python on your machine; a version of python2 and a version of python3.&lt;/p&gt; &#xA;&lt;h4&gt;Ubuntu and other versions of Debian Linux&lt;/h4&gt; &#xA;&lt;p&gt;Python 3 is pre-installed in these versions, which you can verify with &lt;code&gt;python3 -V&lt;/code&gt;. Use &lt;code&gt;sudo apt install -y python3-pip&lt;/code&gt; to install &lt;code&gt;pip&lt;/code&gt; and verify with &lt;code&gt;pip3 -V&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Step 2 - Install Pip&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;INFO&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;If pip is not already installed on your machine, download &lt;code&gt;get-pip.py&lt;/code&gt; to install pip for the first time. Then run the following command to install it:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ python get-pip.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Pip is most likely installed by default. However, you may need to upgrade pip to the latest version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ pip install --upgrade pip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 3 - Install the pip packages&lt;/h3&gt; &#xA;&lt;p&gt;Follow the steps below to clone the API-M documentation GitHub repository and to run the site on your local server.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Fork the GitHub repository: &lt;code&gt;https://github.com/wso2/docs-apim.git&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Navigate to the place where you want to clone the repo.&lt;/p&gt; &lt;p&gt;Git clone the forked repository.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ git clone https://github.com/[git-username]/docs-apim.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Navigate to the folder containing the repo that you cloned in step 3.2 on a terminal window.&lt;/p&gt; &lt;p&gt;For example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ cd docs-apim/&amp;lt;Language-folder&amp;gt;/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ cd docs-apim/en/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the required pip packages.&lt;/p&gt; &lt;p&gt;This will install MkDocs and the required theme, extensions, and plugins.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;If you are using Python2, use the following command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;If you are using Python3, use the following command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ pip3 install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Step 4 - Run MkDocs&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the following command to start the server and view the site on your local server.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ python3 -m mkdocs serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;&lt;/p&gt; &#xA;   &lt;p&gt;If you are making changes and want to see them on the fly, run the following command to start the server and view the site on your local server.&lt;/p&gt; &#xA;   &lt;ol&gt; &#xA;    &lt;li&gt; &lt;p&gt;Navigate to the &lt;code&gt;mkdocs.yml&lt;/code&gt; file.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Change the following configuration to &lt;code&gt;false&lt;/code&gt; as shown below.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;#Breaks build if there&#39;s a warning&#xA;strict: false&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Run the following command to start the server and to make the server load only the changed items and display the changes faster.&lt;/p&gt; &lt;p&gt;&lt;code&gt;python3 -m mkdocs serve --dirtyreload&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ol&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open the following URL on a new browser window to view the API-M documentation site locally.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://localhost:8000/getting-started/overview/&#34;&gt;http://localhost:8000/getting-started/overview/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;If you were running the &lt;code&gt;mkdocs serve --dirtyreload&lt;/code&gt; command to run the MkDocs server, make sure to change the configuration in the &lt;code&gt;mkdocs.yml&lt;/code&gt; file as follows before sending a pull request.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;strict: true&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licenses this source under the Apache License, Version 2.0 (&lt;a href=&#34;https://raw.githubusercontent.com/wso2/docs-apim/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt;), You may not use this file except in compliance with the License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>expressjs/expressjs.com</title>
    <updated>2025-02-08T01:32:03Z</updated>
    <id>tag:github.com,2025-02-08:/expressjs/expressjs.com</id>
    <link href="https://github.com/expressjs/expressjs.com" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Express.js Website&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;expressjs.com&lt;/h1&gt; &#xA;&lt;p&gt;This is the repository of the website &lt;a href=&#34;https://expressjs.com&#34;&gt;expressjs.com&lt;/a&gt;. It is hosted directly from the repository as a &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; website.&lt;/p&gt; &#xA;&lt;h2&gt;Local Setup&lt;/h2&gt; &#xA;&lt;p&gt;To preview the website locally:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://help.github.com/articles/setting-up-your-pages-site-locally-with-jekyll/&#34;&gt;Ruby and Bundler&lt;/a&gt; if you don&#39;t have them already.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the &lt;a href=&#34;https://github.com/jekyll/jekyll-redirect-from&#34;&gt;jekyll-redirect-from&lt;/a&gt; gem:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ gem install jekyll-redirect-from&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this repository by running the following command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ git clone https://github.com/expressjs/expressjs.com.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Navigate to the cloned repository directory and run the following command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ bundle install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Bundler will look in the Gemfile for which gems to install. The &lt;code&gt;github-pages&lt;/code&gt; gem includes the same version of Jekyll and other dependencies as used by GitHub Pages, so that your local setup mirrors GitHub Pages as closely as possible.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run Jekyll using the following command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ bundle exec jekyll serve&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then, load &lt;a href=&#34;http://localhost:4000&#34;&gt;http://localhost:4000&lt;/a&gt; in your browser.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Local Setup using Docker&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] You can run &lt;code&gt;make help&lt;/code&gt; to obtain detailed information on how to use our make commands.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;Ensure that you have Docker and Make installed.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;make build&lt;/code&gt; to build the project.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;make serve&lt;/code&gt; to serve the project, this include live reloading so any change will be reflected (it can take a while, check the logs).&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;make clean&lt;/code&gt; to remove the docker images and resources generated.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Formatting&lt;/h2&gt; &#xA;&lt;p&gt;Jekyll uses a variant of Markdown known as &lt;a href=&#34;https://kramdown.gettalong.org/quickref.html&#34;&gt;Kramdown&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Jekyll uses the &lt;a href=&#34;http://liquidmarkup.org/&#34;&gt;Liquid template engine&lt;/a&gt; for templating.&lt;/p&gt; &#xA;&lt;p&gt;You can use &lt;a href=&#34;https://kramdown.gettalong.org/parser/gfm.html&#34;&gt;GFM&lt;/a&gt; fenced code blocks for JavaScript; for example:&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;```js&#xA;var express = require(&#39;express&#39;)&#xA;var app = express()&#xA;app.listen(3000)&#xA;```&#xA;&lt;/pre&gt; &#xA;&lt;p&gt;The result looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const express = require(&#39;express&#39;)&#xA;const app = express()&#xA;app.listen(3000)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The default GitHub Pages syntax highlighting has been disabled in &lt;code&gt;_config.yml&lt;/code&gt; to allow highlighting with &lt;a href=&#34;https://prismjs.com/&#34;&gt;prism.js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://raw.githubusercontent.com/expressjs/expressjs.com/gh-pages/CONTRIBUTING.md&#34;&gt;Contributors&#39; Guide&lt;/a&gt; for more information on contributing to the Express JS documentation, including information on contributing translations.&lt;/p&gt; &#xA;&lt;h2&gt;Why use Jekyll instead of an Express-based solution?&lt;/h2&gt; &#xA;&lt;p&gt;Jekyll comes built-in with GitHub Pages. Since we are already using GitHub Pages to host the website, it makes sense to leverage the capabilities it provides. It&#39;s all about using the right tool, for the right job, under the right circumstances.&lt;/p&gt;</summary>
  </entry>
</feed>