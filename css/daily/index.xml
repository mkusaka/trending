<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-22T01:24:14Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TheBridge-FullStackDeveloper/react-poke</title>
    <updated>2024-03-22T01:24:14Z</updated>
    <id>tag:github.com,2024-03-22:/TheBridge-FullStackDeveloper/react-poke</id>
    <link href="https://github.com/TheBridge-FullStackDeveloper/react-poke" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Buscador de Pokémon con REACT&lt;/h1&gt; &#xA;&lt;p&gt;Este proyecto consiste en crear un buscador de Pokémon utilizando React.&lt;/p&gt; &#xA;&lt;p&gt;Antes de empezar recuerda instalar todas las dependencias necesarias para el proyecto. Un npm i o créate tu propio proyecto React con vite.&lt;/p&gt; &#xA;&lt;h1&gt;¿Cómo empezar?&lt;/h1&gt; &#xA;&lt;p&gt;Crear en App.jsx toda la aplicación. Una vez hecha y viendo que funciona correctamente, refactorizaremos el código y crearemos módulos funcionales.&lt;/p&gt; &#xA;&lt;h1&gt;Instrucciones&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Usaremos un formulario para hacer peticiones a la API de pokemon, donde nos devolverá el pokemon que estemos buscando en ese momento. Si no existiera nos tiene que devolver un mensaje de &lt;code&gt;pokemon no encontrado&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Utilizar estados para manejar el término de búsqueda, los resultados de la búsqueda, el estado de carga y los errores. Los que pienses que son necesarios. *** PISTA: *** &lt;code&gt;useState&lt;/code&gt; para guardar los cambios de cada uno de los estados&lt;/li&gt; &#xA; &lt;li&gt;En la búsqueda tendremos que ir actualizando el cambio en el momento de cada escritura. Si escribimos el pokemon &lt;code&gt;Pikachu&lt;/code&gt; si escribimos &lt;code&gt;P&lt;/code&gt; hará búsqueda, &lt;code&gt;Pi&lt;/code&gt;, siguiente búsqueda... y así hasta que encuentre el pokemon. *** PISTA: *** &lt;code&gt;useEffect&lt;/code&gt; para actualizar en cada momento la busqueda pasándole el parametro de cambio&lt;/li&gt; &#xA; &lt;li&gt;Mostrar los resultados de la búsqueda (nombre e imagen del Pokémon) en la interfaz de usuario. Puedes añadir más datos si lo deseas.&lt;/li&gt; &#xA; &lt;li&gt;Manejar adecuadamente los casos de búsqueda vacía, resultados no encontrados y errores de la API.&lt;/li&gt; &#xA; &lt;li&gt;Crea estilos CSS para tu aplicación según sea necesario. Puedes utilizar App.css para crearlos.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** Recursos adicionales ***&lt;/p&gt; &#xA;&lt;p&gt;Documentación de la PokeAPI: &lt;a href=&#34;https://pokeapi.co/docs/v2&#34;&gt;https://pokeapi.co/docs/v2&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>