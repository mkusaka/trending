<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-04T01:32:40Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Checkmarx/capital</title>
    <updated>2023-02-04T01:32:40Z</updated>
    <id>tag:github.com,2023-02-04:/Checkmarx/capital</id>
    <link href="https://github.com/Checkmarx/capital" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A built-to-be-vulnerable API application based on the OWASP top 10 API vulnerabilities. Use c{api}tal to learn, train and exploit API Security vulnerabilities within your own API Security CTF.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Checkmarx/capital/main/.github/assets/capital-logo-white.PNG#center&#34; width=&#34;600&#34; height=&#34;300&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OWASP/API-Security&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/API%20Security-top%2010-blue&#34; alt=&#34;API Security Top 10&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Checkmarx/capital#quickstart&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Vulnerable-by%20design-blue&#34; alt=&#34;Vulnerable&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/AGPL-3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-AGPL%20V3-blue&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick facts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Name&lt;/strong&gt;: &#39;c{api}tal&#39;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Type&lt;/strong&gt;: Vulnerable API Security application&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: Educational&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;License&lt;/strong&gt;: GNU AFFERO GENERAL PUBLIC LICENSE&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Language&lt;/strong&gt;: Python, JS&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Author&lt;/strong&gt;: Checkmarx Research team&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;The Checkmarx research team created c{api}tal to provide users with an active playground in which they hone their API Security skills. &lt;br&gt; The c{api}tal application contains 10 API challenges which map to the &lt;a href=&#34;https://owasp.org/www-project-api-security/&#34; target=&#34;_blank&#34;&gt;OWASP top 10 API risks&lt;/a&gt;. &lt;br&gt; It is built with Python (FastAPI) and JS (React).&lt;/p&gt; &#xA;&lt;p&gt;c{api}tal can also be used for conducting your own API Security CTF event.&lt;/p&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://www.capital-ctf.com/&#34;&gt;capital-ctf.com&lt;/a&gt; to learn about the vulnerabilities and the challenges.&lt;/p&gt; &#xA;&lt;h2&gt;Features:&lt;/h2&gt; &#xA;&lt;p&gt;Contains 10 challenges based on the &lt;a href=&#34;https://owasp.org/www-project-api-security/&#34; target=&#34;_blank&#34;&gt;OWASP top 10 API risks&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Built on FastAPI (backend) and React (frontend)&lt;/li&gt; &#xA; &lt;li&gt;UI - Blogging website (i.e medium)&lt;/li&gt; &#xA; &lt;li&gt;OpenAPI3 API JSON specification file that can be imported as a POSTMAN collection&lt;/li&gt; &#xA; &lt;li&gt;JWT token based authentication (lifetime can be adjusted in app)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;c{api}tal is a blogging application which allow users to register, create and delete posts, create and delete comments, follow other users, and more.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Checkmarx/capital/main/postman/API%20endpoints.PNG#center&#34; width=&#34;1000&#34; height=&#34;850&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Quickstart&lt;/h1&gt; &#xA;&lt;p&gt;Run the full application using docker-compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The backend will be running on &lt;a href=&#34;http://localhost:8000/&#34;&gt;http://localhost:8000/&lt;/a&gt; &lt;br&gt; The frontend will be running on &lt;a href=&#34;http://localhost:4100/&#34;&gt;http://localhost:4100/&lt;/a&gt; &lt;br&gt; Check out the API endpoints specification page at &lt;a href=&#34;http://localhost:8000/docs&#34;&gt;http://localhost:8000/docs&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;Generate API requests to &lt;a href=&#34;http://localhost:8000/api&#34;&gt;http://localhost:8000/api&lt;/a&gt; (via POSTMAN/Burp for example) &lt;br&gt; Import the API collection JSON file to POSTMAN and start generating API requests: &lt;br&gt; &lt;a href=&#34;https://www.capital-ctf.com/files/de1ad03a48959f38c7f131f81f95d42e/capital.postman_collection.json&#34;&gt;click here to download the c{api}tal API json collection file&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Checkmarx/capital/main/.github/assets/postman%20-%20register%20user%20request.PNG#center&#34; width=&#34;1000&#34; height=&#34;300&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;To run the web application in debug:&lt;/h2&gt; &#xA;&lt;p&gt;First, run &lt;code&gt;PostgreSQL&lt;/code&gt;, set environment variables and create database:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export POSTGRES_DB=rwdb POSTGRES_PORT=5432 POSTGRES_USER=postgres POSTGRES_PASSWORD=postgres&#xA;docker run --name pgdb --rm -p 5432:5432 -e POSTGRES_USER=&#34;$POSTGRES_USER&#34; -e POSTGRES_PASSWORD=&#34;$POSTGRES_PASSWORD&#34; -e POSTGRES_DB=&#34;$POSTGRES_DB&#34; postgres&#xA;export POSTGRES_HOST=$(docker inspect -f &#39;{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}&#39; pgdb)&#xA;createdb --host=$POSTGRES_HOST --port=$POSTGRES_PORT --username=$POSTGRES_USER $POSTGRES_DB&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;[Option 1] Run locally&lt;/p&gt; &#xA;&lt;p&gt;Then run the following commands to bootstrap your environment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/Checkmarx/capital&#xA;cd capital&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then create &lt;code&gt;.env&lt;/code&gt; file in project root and set environment variables for application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export POSTGRES_DB=rwdb POSTGRES_PORT=5432 POSTGRES_USER=postgres POSTGRES_PASSWORD=postgres&#xA;export POSTGRES_HOST=localhost&#xA;export DATABASE_URL=postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB&#xA;touch .env&#xA;echo APP_ENV=dev&#xA;echo DATABASE_URL=postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB &amp;gt;&amp;gt; .env&#xA;echo SECRET_KEY=$(openssl rand -hex 32) &amp;gt;&amp;gt; .env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run the backend server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python3 &#xA;.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;[Option 2] Run backend using docker Run the backend using docker build:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build . -t capital&#xA;docker run -p 8000:8000  -e DATABASE_URL=postgresql://postgres:postgres@host.docker.internal:5432/rwdb --rm --name backend-capital capital&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Run tests&lt;/h2&gt; &#xA;&lt;p&gt;Tests for this project are defined in the &lt;code&gt;tests/&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;Set up environment variable &lt;code&gt;DATABASE_URL&lt;/code&gt; or set up &lt;code&gt;database_url&lt;/code&gt; in &lt;code&gt;app/core/settings/test.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project uses &lt;code&gt;pytest &amp;lt;https://docs.pytest.org/&amp;gt;&lt;/code&gt;_ to define tests because it allows you to use the &lt;code&gt;assert&lt;/code&gt; keyword with good formatting for failed assertations.&lt;/p&gt; &#xA;&lt;p&gt;To run all the tests of a project, simply run the &lt;code&gt;pytest&lt;/code&gt; command: ::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pytest&#xA;================================================= test session starts ==================================================&#xA;platform linux -- Python 3.8.3, pytest-5.4.2, py-1.8.1, pluggy-0.13.1&#xA;rootdir: /home/some-user/user-projects/fastapi-realworld-example-app, inifile: setup.cfg, testpaths: tests&#xA;plugins: env-0.6.2, cov-2.9.0, asyncio-0.12.0&#xA;collected 90 items&#xA;&#xA;tests/test_api/test_errors/test_422_error.py .                                                                   [  1%]&#xA;tests/test_api/test_errors/test_error.py .                                                                       [  2%]&#xA;tests/test_api/test_routes/test_articles.py .................................                                    [ 38%]&#xA;tests/test_api/test_routes/test_authentication.py ..                                                             [ 41%]&#xA;tests/test_api/test_routes/test_comments.py ....                                                                 [ 45%]&#xA;tests/test_api/test_routes/test_login.py ...                                                                     [ 48%]&#xA;tests/test_api/test_routes/test_profiles.py ............                                                         [ 62%]&#xA;tests/test_api/test_routes/test_registration.py ...                                                              [ 65%]&#xA;tests/test_api/test_routes/test_tags.py ..                                                                       [ 67%]&#xA;tests/test_api/test_routes/test_users.py ....................                                                    [ 90%]&#xA;tests/test_db/test_queries/test_tables.py ...                                                                    [ 93%]&#xA;tests/test_schemas/test_rw_model.py .                                                                            [ 94%]&#xA;tests/test_services/test_jwt.py .....                                                                            [100%]&#xA;&#xA;============================================ 90 passed in 70.50s (0:01:10) =============================================&#xA;$&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to run a specific test, you can do this with &lt;code&gt;this &amp;lt;https://docs.pytest.org/en/latest/usage.html#specifying-tests-selecting-tests&amp;gt;&lt;/code&gt;_ pytest feature: ::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pytest tests/test_api/test_routes/test_users.py::test_user_can_not_take_already_used_credentials&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Web routes&lt;/h2&gt; &#xA;&lt;p&gt;All routes are available on &lt;code&gt;/docs&lt;/code&gt; or &lt;code&gt;/redoc&lt;/code&gt; paths with Swagger or ReDoc.&lt;/p&gt; &#xA;&lt;h2&gt;Project structure&lt;/h2&gt; &#xA;&lt;p&gt;Files related to application are in the &lt;code&gt;app&lt;/code&gt; or &lt;code&gt;tests&lt;/code&gt; directories. Application parts are:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;app&#xA;├── api              - web related stuff.&#xA;│&amp;nbsp;&amp;nbsp; ├── dependencies - dependencies for routes definition.&#xA;│&amp;nbsp;&amp;nbsp; ├── errors       - definition of error handlers.&#xA;│&amp;nbsp;&amp;nbsp; └── routes       - web routes.&#xA;├── core             - application configuration, startup events, logging.&#xA;├── db               - db related stuff.&#xA;│&amp;nbsp;&amp;nbsp; ├── migrations   - manually written alembic migrations.&#xA;│&amp;nbsp;&amp;nbsp; └── repositories - all crud stuff.&#xA;├── models           - pydantic models for this application.&#xA;│&amp;nbsp;&amp;nbsp; ├── domain       - main models that are used almost everywhere.&#xA;│&amp;nbsp;&amp;nbsp; └── schemas      - schemas for using in web routes.&#xA;├── resources        - strings that are used in web responses.&#xA;├── services         - logic that is not just crud related.&#xA;├── credentials      - list of common strings for Brute Force.&#xA;├── postman          - api json file for postman.&#xA;├── redis            - redis docker file and conf file.&#xA;├── scripts         &#xA;├── tests         &#xA;└── main.py          - FastAPI application creation and configuration.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Presented At&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=OP4X8Sc8hMs&#34;&gt;Blackhat Europe 2022 Arsenal&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.appsecvillage.com/events/dc-2022/c%7Bapi%7Dtal-api-security-ctf&#34;&gt;AppSec village at DefCon30&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Write-ups &amp;amp; Referrences&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://checkmarx.com/blog/how-we-created-an-api-security-ctf&#34;&gt;c{api}tal CTF event sum-up blog&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A great write-up by Maor Tal: &lt;br&gt; &lt;a href=&#34;https://medium.com/@maor_59001/defcon-30-appsec-villiage-ctf-writeup-part-1-1730de791f50&#34;&gt;Part 1&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://medium.com/@maor_59001/defcon-30-c-api-tal-ctf-writeup-part-2-ef99a0fc8d28&#34;&gt;Part 2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Stickers from DefCon30: &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Checkmarx/capital/main/.github/assets/sticker1.png&#34; width=&#34;300&#34; height=&#34;150&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Checkmarx/capital/main/.github/assets/sticker2.png&#34; width=&#34;300&#34; height=&#34;150&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Checkmarx/capital/main/.github/assets/sticker3.jpeg&#34; width=&#34;300&#34; height=&#34;150&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Development and Bugs&lt;/h2&gt; &#xA;&lt;p&gt;Found an issue, or have a great idea? Let us know:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;E-mail - &lt;a href=&#34;mailto:capital@checkmarx.com&#34;&gt;capital@checkmarx.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Contributions are appreciated and can be done via GitHub.&lt;/p&gt; &#xA;&lt;p&gt;See CONTRIBUTING.md for more information about how to submit them.&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;This project was created at Checkmarx by &lt;a href=&#34;https://www.linkedin.com/in/ravid-mazon&#34;&gt;Ravid Mazon&lt;/a&gt; with the help of these great contributors: &lt;a href=&#34;https://www.linkedin.com/in/liad-levy-93b235211/&#34;&gt;Liad Levy&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/yaniv-n-8b4a76193/&#34;&gt;Yaniv Nizry&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/guy-lyuboshits-075175165/&#34;&gt;Guy Lyuboshits&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The application was built base on &lt;code&gt;real-world-app&lt;/code&gt; , we used these awesome repos: &lt;br&gt; &lt;a href=&#34;https://github.com/nsidnev/fastapi-realworld-example-app&#34; target=&#34;_blank&#34;&gt;Backend - FastAPI (Python)&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/khaledosman/react-redux-realworld-example-app&#34; target=&#34;_blank&#34;&gt;Frontend - React (JS)&lt;/a&gt; &lt;br&gt; Thanks again for contributing to the open-source community! &lt;br&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>romainneutron/MediaVorus</title>
    <updated>2023-02-04T01:32:40Z</updated>
    <id>tag:github.com,2023-02-04:/romainneutron/MediaVorus</id>
    <link href="https://github.com/romainneutron/MediaVorus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A PHP lib to get every technical information about your files&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MediaVorus&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://travis-ci.org/romainneutron/MediaVorus&#34;&gt;&lt;img src=&#34;https://secure.travis-ci.org/romainneutron/MediaVorus.png?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A lib to get every technical informations about your files&lt;/p&gt; &#xA;&lt;p&gt;#Exemple&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;use MediaVorus\MediaVorus;&#xA;use MediaVorus\Media\Image;&#xA;&#xA;$mediavorus = MediaVorus::create();&#xA;&#xA;$image = $mediavorus-&amp;gt;guess(&#39;RawCanon.cr2&#39;);&#xA;&#xA;echo sprintf(&#34;Photo as been taken with a %s Shutter Speed&#34;, $Image-&amp;gt;getShutterSpeed());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;#Documentation&lt;/p&gt; &#xA;&lt;p&gt;Documentation is hosted on Read The Docs &lt;a href=&#34;http://mediavorus.readthedocs.org/&#34;&gt;http://mediavorus.readthedocs.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;#License&lt;/p&gt; &#xA;&lt;p&gt;MediaVorus is released under the &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT license&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bitdeli.com/free&#34; title=&#34;Bitdeli Badge&#34;&gt;&lt;img src=&#34;https://d2weczhvl823v0.cloudfront.net/romainneutron/mediavorus/trend.png&#34; alt=&#34;Bitdeli Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cncf/landscape</title>
    <updated>2023-02-04T01:32:40Z</updated>
    <id>tag:github.com,2023-02-04:/cncf/landscape</id>
    <link href="https://github.com/cncf/landscape" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🌄 The Cloud Native Interactive Landscape filters and sorts hundreds of projects and products, and shows details including GitHub stars, funding or market cap, first and last commits, contributor counts, headquarters location, and recent tweets.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://gitpod.io/#https://github.com/cncf/landscape/raw/master/landscape.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod&#34; alt=&#34;Gitpod ready-to-code&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/1767&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/1767/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://david-dm.org/cncf/landscape&#34;&gt;&lt;img src=&#34;https://img.shields.io/david/cncf/landscape.svg?style=flat-square&#34; alt=&#34;Dependency Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.netlify.com/sites/landscape/deploys&#34;&gt;&lt;img src=&#34;https://api.netlify.com/api/v1/badges/91337728-8166-4c8f-bc39-9159bf97dcbc/deploy-status&#34; alt=&#34;Netlify Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Cloud Native Landscape&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cncf/artwork/master/other/cncf-landscape/horizontal/color/cncf-landscape-horizontal-color.png&#34; alt=&#34;Cloud Native Landscape Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/#cloud-native-landscape&#34;&gt;Cloud Native Landscape&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/#interactive-version&#34;&gt;Interactive Version&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/#how-to-run-on-your-computer&#34;&gt;How to Run on your computer:&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/#new-entries&#34;&gt;New Entries&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/#logos&#34;&gt;Logos&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/#dont-use-svgs-with-embedded-text&#34;&gt;Don&#39;t Use SVGs with Embedded Text&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/#corrections&#34;&gt;Corrections&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/#external-data&#34;&gt;External Data&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/#best-practices-badge&#34;&gt;Best Practices Badge&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/#non-updated-items&#34;&gt;Non-Updated Items&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/#formats&#34;&gt;Formats&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/#vulnerability-reporting&#34;&gt;Vulnerability reporting&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/#adjusting-the-landscape-view&#34;&gt;Adjusting the Landscape View&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.cncf.io&#34;&gt;CNCF&lt;/a&gt; Cloud Native Landscape Project is intended as a map through the previously uncharted terrain of cloud native technologies. This attempts to categorize most of the projects and product offerings in the cloud native space. There are many routes to deploying a cloud native application, with CNCF Projects representing a particularly well-traveled path. It has been built in collaboration with &lt;a href=&#34;https://www.redpoint.com/&#34;&gt;Redpoint Ventures&lt;/a&gt; and &lt;a href=&#34;http://www.amplifypartners.com/&#34;&gt;Amplify Partners&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The software for the interactive landscape has been extracted to &lt;a href=&#34;https://github.com/cncf/landscapeapp&#34;&gt;https://github.com/cncf/landscapeapp&lt;/a&gt; where it is used for other landscapes as well. This repo includes all of the data and images specific to the CNCF landscapes.&lt;/p&gt; &#xA;&lt;h2&gt;Interactive Version&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://landscape.cncf.io&#34;&gt;landscape.cncf.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to Run on your computer:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you have node.js installed locally&lt;/strong&gt;, just run &lt;code&gt;./server.js&lt;/code&gt; from the root directory of the project and open &lt;a href=&#34;http://localhost:8001&#34;&gt;http://localhost:8001&lt;/a&gt; once the site is updated.&lt;/p&gt; &#xA;&lt;p&gt;It requires any node.js version 14+ to be installed, does not use any npm package. It is both a server and a site builder - after any change the new site is built.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you prefer to use Docker&lt;/strong&gt;, run &lt;code&gt;make serve-docker&lt;/code&gt;. This will build and run a container serving the landscape at &lt;a href=&#34;http://localhost:8001&#34;&gt;http://localhost:8001&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;New Entries&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cncf/toc/raw/master/DEFINITION.md&#34;&gt;Cloud native&lt;/a&gt; projects with at least 300 GitHub stars that clearly fit in an existing category are generally included. Put the project in the single category where it best fits.&lt;/li&gt; &#xA; &lt;li&gt;We generally will only list a company&#39;s product in one box, to represent its major or best-known offering. We occasionally make exceptions for large companies. Note that if we allowed listing the same product or project in multiple boxes, the over 600 logos on the landscape would multiply to many times that many.&lt;/li&gt; &#xA; &lt;li&gt;We are unlikely to create a new category for products/projects as we&#39;d rather find the best home with the current options.&lt;/li&gt; &#xA; &lt;li&gt;We are generally not including commercial versions of open source software. The exception is that we are showing all Certified Kubernetes implementations.&lt;/li&gt; &#xA; &lt;li&gt;Closed source products need to link to a clear description of your product; no stealth mode companies.&lt;/li&gt; &#xA; &lt;li&gt;Your project or company needs a logo and the logo needs to include the name.&lt;/li&gt; &#xA; &lt;li&gt;Crunchbase organization should be the company or organization that controls the software. That is normally the owner of the trademark, whether or not a trademark has been formally filed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you think your company or project should be included, please open a pull request to add it in alphabetical order to &lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/landscape.yml&#34;&gt;landscape.yml&lt;/a&gt;. For the logo, add an SVG to the &lt;code&gt;hosted_logos&lt;/code&gt; directory and reference it there.&lt;/p&gt; &#xA;&lt;p&gt;Netlify will generate a staging server for you to preview your updates. Please check that the logo and information appear correctly and then add &lt;code&gt;LGTM&lt;/code&gt; to the pull request confirming your review and requesting a merge.&lt;/p&gt; &#xA;&lt;h2&gt;Logos&lt;/h2&gt; &#xA;&lt;p&gt;The following rules will produce the most readable and attractive logos:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;We require SVGs, as they are smaller, display correctly at any scale, and work on all modern browsers. If you only have the logo in another vector format (like AI or EPS), please open an issue and we&#39;ll convert it to an SVG for you, or you can often do it yourself at &lt;a href=&#34;https://cloudconvert.com/&#34;&gt;https://cloudconvert.com/&lt;/a&gt;. Note that you may need to zip your file to attach it to a GitHub issue. Please note that we require pure SVGs and will reject SVGs that contain embedded PNGs, since they have the same problems of being bigger and not scaling seamlessly. We also require that SVGs convert fonts to outlines so that they will render correctly whether or not a font is installed. See &lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/#dont-use-svgs-with-embedded-text&#34;&gt;Don&#39;t Use SVGs with Embedded Text&lt;/a&gt; below.&lt;/li&gt; &#xA; &lt;li&gt;When multiple variants exist, use stacked (not horizontal) logos. For example, we use the second column (stacked), not the first (horizontal), of CNCF project &lt;a href=&#34;https://github.com/cncf/artwork/#cncf-incubating-logos&#34;&gt;logos&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Don&#39;t use reversed logos (i.e., with a non-white, non-transparent background color). If you only have a reversed logo, create an issue with it attached and we&#39;ll produce a non-reversed version for you.&lt;/li&gt; &#xA; &lt;li&gt;Logos must include the company, product or project name in English. It&#39;s fine to also include words from another language. If you don&#39;t have a version of your logo with the name in it, please open an issue and we&#39;ll create one for you (and please specify the font).&lt;/li&gt; &#xA; &lt;li&gt;Match the item name to the English words in the logos. So an Acme Rocket logo that shows &#34;Rocket&#34; should have product name &#34;Rocket&#34;, while if the logo shows &#34;Acme Rocket&#34;, the product name should be &#34;Acme Rocket&#34;. Otherwise, logos looks out of place when you sort alphabetically.&lt;/li&gt; &#xA; &lt;li&gt;Logos should include a company and/or product name but no tagline, which allows them to be larger and more readable. The only exception is if the only format that the logo is ever shown includes the tagline.&lt;/li&gt; &#xA; &lt;li&gt;Google images is often the best way to find a good version of the logo (but ensure it&#39;s the up-to-date version). Search for &lt;a href=&#34;https://www.google.com/search?q=grpc+logo&amp;amp;tbs=ift:svg,imgo:1&amp;amp;tbm=isch&#34;&gt;grpc logo filetype:svg&lt;/a&gt; but substitute your project or product name for grpc.&lt;/li&gt; &#xA; &lt;li&gt;Upload the SVG to the &lt;code&gt;hosted_logos&lt;/code&gt; directory.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Don&#39;t Use SVGs with Embedded Text&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cncf/landscapeapp/raw/master/README.md#svgs-cant-include-text&#34;&gt;Directions&lt;/a&gt; for fixing.&lt;/p&gt; &#xA;&lt;h2&gt;Corrections&lt;/h2&gt; &#xA;&lt;p&gt;Please open a pull request with edits to &lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/landscape.yml&#34;&gt;landscape.yml&lt;/a&gt;. The file &lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/processed_landscape.yml&#34;&gt;processed_landscape.yml&lt;/a&gt; is generated and so should never be edited directly.&lt;/p&gt; &#xA;&lt;p&gt;If the error is with data from &lt;a href=&#34;https://www.crunchbase.com/&#34;&gt;Crunchbase&lt;/a&gt; you should open an account there and edit the data. If you don&#39;t like a project description, edit it in GitHub. If your project isn&#39;t showing the license correctly, you may need to paste the unmodified text of the license into a LICENSE file at the root of your project in GitHub, in order for GitHub to serve the license information correctly.&lt;/p&gt; &#xA;&lt;h2&gt;External Data&lt;/h2&gt; &#xA;&lt;p&gt;The canonical source for all data is &lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/landscape.yml&#34;&gt;landscape.yml&lt;/a&gt;. Once a day, we download data for projects and companies from the following sources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Project info from GitHub&lt;/li&gt; &#xA; &lt;li&gt;Funding info from &lt;a href=&#34;https://www.crunchbase.com/&#34;&gt;Crunchbase&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Market cap data from Yahoo Finance&lt;/li&gt; &#xA; &lt;li&gt;CII Best Practices Badge &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/&#34;&gt;data&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The update server enhances the source data with the fetched data and saves the result in &lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/processed_landscape.yml&#34;&gt;processed_landscape.yml&lt;/a&gt; and as a JSON &lt;a href=&#34;https://landscape.cncf.io/data/items.json&#34;&gt;file&lt;/a&gt;, the latter of which is what the app loads to display data.&lt;/p&gt; &#xA;&lt;h2&gt;Best Practices Badge&lt;/h2&gt; &#xA;&lt;p&gt;As explained at &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/&#34;&gt;https://bestpractices.coreinfrastructure.org/&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The Linux Foundation (LF) Core Infrastructure Initiative (CII) Best Practices badge is a way for Free/Libre and Open Source Software (FLOSS) projects to show that they follow best practices. Projects can voluntarily self-certify, at no cost, by using this web application to explain how they follow each best practice. The CII Best Practices Badge is inspired by the many badges available to projects on GitHub. Consumers of the badge can quickly assess which FLOSS projects are following best practices and as a result are more likely to produce higher-quality secure software.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The interactive landscape displays the status (or non-existence) of a badge for each open-source project. There&#39;s also a feature not available through the filter bar to see all items &lt;a href=&#34;https://landscape.cncf.io/bestpractices=yes&#34;&gt;with&lt;/a&gt; and &lt;a href=&#34;https://landscape.cncf.io/bestpractices=no&#34;&gt;without&lt;/a&gt; badges. Note that a passing badge is a requirement for projects to &lt;a href=&#34;https://github.com/cncf/toc/raw/master/process/graduation_criteria.adoc&#34;&gt;graduate&lt;/a&gt; in the CNCF.&lt;/p&gt; &#xA;&lt;p&gt;For projects using a GitHub organisation, and the url used for the badge is the organisation not the repository, &lt;code&gt;url_for_bestpractices&lt;/code&gt; needs to be specified in the projects section in the &lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/landscape.yml&#34;&gt;landscape.yml&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Non-Updated Items&lt;/h2&gt; &#xA;&lt;p&gt;We generally remove open source projects that have not had a commit in over 3 months. Note that for projects not hosted on GitHub, we need them to mirror to GitHub to fetch updates, and we try to work with projects when their mirrors are broken. Here is view of projects sorted by last update (ignoring categories like KCSPs, Certified Kubernetes, and members): &lt;a href=&#34;https://landscape.cncf.io/card-mode?category=provisioning,runtime,orchestration-management,app-definition-and-development,paa-s-container-service,serverless,observability-and-analysis,runtime,installable-platform&amp;amp;license=open-source&amp;amp;grouping=no&amp;amp;sort=latest-commit&#34;&gt;https://landscape.cncf.io/card-mode?category=provisioning,runtime,orchestration-management,app-definition-and-development,paa-s-container-service,serverless,observability-and-analysis,runtime,installable-platform&amp;amp;license=open-source&amp;amp;grouping=no&amp;amp;sort=latest-commit&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We generally remove closed source products when they have not tweeted in over 3 months. This doesn&#39;t apply to Chinese companies without Twitter accounts, since Twitter is blocked there. Here is a view of products sorted by last tweet (ignoring categories like KCSPs, Certified Kubernetes, and members): &lt;a href=&#34;https://landscape.cncf.io/card-mode?category=provisioning,runtime,orchestration-management,app-definition-and-development,paa-s-container-service,serverless,observability-and-analysis&amp;amp;license=not-open-source&amp;amp;grouping=no&amp;amp;sort=latest-tweet&#34;&gt;https://landscape.cncf.io/card-mode?category=provisioning,runtime,orchestration-management,app-definition-and-development,paa-s-container-service,serverless,observability-and-analysis&amp;amp;license=not-open-source&amp;amp;grouping=no&amp;amp;sort=latest-tweet&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Items that have been removed can apply to be re-added using the regular New Entries criteria above.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains data received from &lt;a href=&#34;http://www.crunchbase.com&#34;&gt;Crunchbase&lt;/a&gt;. This data is not licensed pursuant to the Apache License. It is subject to Crunchbase’s Data Access Terms, available at &lt;a href=&#34;https://data.crunchbase.com/docs/terms&#34;&gt;https://data.crunchbase.com/docs/terms&lt;/a&gt;, and is only permitted to be used with Linux Foundation landscape projects.&lt;/p&gt; &#xA;&lt;p&gt;Everything else is under the Apache License, Version 2.0, except for project and product logos, which are generally copyrighted by the company that created them, and are simply cached here for reliability. The trail map, static landscape, serverless landscape, and &lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/landscape.yml&#34;&gt;landscape.yml&lt;/a&gt; file are alternatively available under the &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34;&gt;Creative Commons Attribution 4.0 license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Formats&lt;/h2&gt; &#xA;&lt;p&gt;The CNCF Cloud Native Landscape is available in these formats:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://landscape.cncf.io/images/landscape.png&#34;&gt;PNG&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://landscape.cncf.io/images/landscape.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The CNCF Serverless Landscape is available in these formats:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://landscape.cncf.io/images/serverless.png&#34;&gt;PNG&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://landscape.cncf.io/images/serverless.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install and run locally with the &lt;a href=&#34;https://github.com/cncf/landscapeapp#installing-locally&#34;&gt;install directions&lt;/a&gt;. It&#39;s not necessary to install locally if you just want to edit &lt;a href=&#34;https://raw.githubusercontent.com/cncf/landscape/master/landscape.yml&#34;&gt;landscape.yml&lt;/a&gt;. You can do so via the GitHub web interface.&lt;/p&gt; &#xA;&lt;h2&gt;Vulnerability reporting&lt;/h2&gt; &#xA;&lt;p&gt;Please open an &lt;a href=&#34;https://github.com/cncf/landscape/issues/new&#34;&gt;issue&lt;/a&gt; or, for sensitive information, email &lt;a href=&#34;mailto:info@cncf.io&#34;&gt;info@cncf.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Adjusting the Landscape View&lt;/h2&gt; &#xA;&lt;p&gt;The file src/components/MainContent2.js describes the key elements of a landscape big picture. It specifies where to put these sections: App Definition and Development, Orchestration &amp;amp; Management, Runtime, Provisioning, Cloud, Platform, Observability and Analysis, Special. Also it specifies where to locate the link to the serverless preview and an info with a QR code.&lt;/p&gt; &#xA;&lt;p&gt;All these elements should have &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; properties to position them. &lt;code&gt;rows&lt;/code&gt; and &lt;code&gt;cols&lt;/code&gt; specify how much columns or rows we expect in a given horizontal or vertical section.&lt;/p&gt; &#xA;&lt;p&gt;When we see that those elements can not fit the sections, we need to either increase the width of all the horizontal sections, or increase height and amount of rows in a single horizontal section and adjust the position of sections below.&lt;/p&gt; &#xA;&lt;p&gt;Beside that, we have to adjust the width of a parent div (1620), the width in a &lt;code&gt;src/components/BigPicture/FullscreenLandscape.js&lt;/code&gt; (1640) and the width in a &lt;code&gt;tools/renderLandscape.js&lt;/code&gt; (6560, because of x4 zoom and margins)&lt;/p&gt; &#xA;&lt;p&gt;Serverless has a same approach, files are &lt;code&gt;src/components/BigPicture/ServerlessContent.js&lt;/code&gt;, &lt;code&gt;src/components/BigPicture/FullscreenServerless.js&lt;/code&gt; and &lt;code&gt;tools/renderLandscape.js&lt;/code&gt;, with a full width of 3450 (because of x3 zoom and margins)&lt;/p&gt; &#xA;&lt;p&gt;Sometimes the total height is changed too, then we need to adjust the height the same way as we adjust the width.&lt;/p&gt; &#xA;&lt;p&gt;We have an experimental &lt;code&gt;fitWidth&lt;/code&gt; property, it is good when you want to get rid of an extra space on the right of a section.&lt;/p&gt; &#xA;&lt;p&gt;The best way to test that layout is ok, is to visit &lt;code&gt;/landscape&lt;/code&gt; and &lt;code&gt;/serverless&lt;/code&gt;, and if it looks ok, run &lt;code&gt;PORT=3000 babel-node tools/renderLandscape&lt;/code&gt; and see the rendered png files, they are in &lt;code&gt;src/images&lt;/code&gt; folder&lt;/p&gt;</summary>
  </entry>
</feed>