<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-03T01:28:25Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>santheesh52/login</title>
    <updated>2023-09-03T01:28:25Z</updated>
    <id>tag:github.com,2023-09-03:/santheesh52/login</id>
    <link href="https://github.com/santheesh52/login" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>SAKTHEESWARI-B/Guvi</title>
    <updated>2023-09-03T01:28:25Z</updated>
    <id>tag:github.com,2023-09-03:/SAKTHEESWARI-B/Guvi</id>
    <link href="https://github.com/SAKTHEESWARI-B/Guvi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>riptano/docs-ui</title>
    <updated>2023-09-03T01:28:25Z</updated>
    <id>tag:github.com,2023-09-03:/riptano/docs-ui</id>
    <link href="https://github.com/riptano/docs-ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The UI and theme for the DataStax documentation site.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Antora Default UI&lt;/h1&gt; &#xA;&lt;div id=&#34;preamble&#34;&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://gitlab.com/antora/antora-ui-default/pipelines&#34;&gt;&lt;img src=&#34;https://gitlab.com/antora/antora-ui-default/badges/master/pipeline.svg?sanitize=true&#34; alt=&#34;CI Status (GitLab CI)&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;This project is an archetype that demonstrates how to produce a UI bundle that can be used by &lt;a href=&#34;https://antora.org&#34;&gt;Antora&lt;/a&gt; to generated a documentation site. You can see a preview of the default UI at &lt;a href=&#34;https://antora.gitlab.io/antora-ui-default&#34; class=&#34;bare&#34;&gt;antora.gitlab.io/antora-ui-default&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;While the default UI is ready to be used with Antora, the intent is that you’ll fork it and customize it for your own needs. It’s intentionally minimalistic so as to give you a good starting point without requiring too much effort to customize.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_code_of_conduct&#34;&gt;Code of Conduct&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The Antora project and its project spaces are governed by our &lt;a href=&#34;https://gitlab.com/antora/antora/-/blob/HEAD/CODE-OF-CONDUCT.adoc&#34;&gt;Code of Conduct&lt;/a&gt;. By participating, you’re agreeing to honor this code. Let’s work together to make this a welcoming, professional, inclusive, and safe environment for everyone.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_use_the_default_ui&#34;&gt;Use the Default UI&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;If you want to simply use the default UI for your Antora-generated site, add the following UI configuration to your playbook:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;ui:&#xA;  bundle:&#xA;    url: https://gitlab.com/antora/antora-ui-default/-/jobs/artifacts/HEAD/raw/build/ui-bundle.zip?job=bundle-stable&#xA;    snapshot: true&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;admonitionblock note&#34;&gt; &#xA;   &lt;table&gt; &#xA;    &lt;tbody&gt;&#xA;     &lt;tr&gt; &#xA;      &lt;td class=&#34;icon&#34;&gt; &#xA;       &lt;div class=&#34;title&#34;&gt;&#xA;        Note&#xA;       &lt;/div&gt; &lt;/td&gt; &#xA;      &lt;td class=&#34;content&#34;&gt; The &lt;code&gt;snapshot&lt;/code&gt; flag tells Antora to fetch the UI when the &lt;code&gt;--fetch&lt;/code&gt; command-line flag is present. This setting is required because updates to the UI bundle are pushed to the same URL. If the URL were to be unique, this setting would not be required. &lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt;&#xA;   &lt;/table&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Read on to learn how to customize the default UI for your own documentation.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_development_quickstart&#34;&gt;Development Quickstart&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;This section offers a basic tutorial to teach you how to set up the default UI project, preview it locally, and bundle it for use with Antora. A more comprehensive tutorial can be found in the documentation at &lt;a href=&#34;https://docs.antora.org&#34; class=&#34;bare&#34;&gt;docs.antora.org&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_prerequisites&#34;&gt;Prerequisites&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;To preview and bundle the default UI, you need the following software on your computer:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://git-scm.com&#34;&gt;git&lt;/a&gt; (command: &lt;code&gt;git&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://nodejs.org&#34;&gt;Node.js&lt;/a&gt; (commands: &lt;code&gt;node&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://gulpjs.com&#34;&gt;Gulp CLI&lt;/a&gt; (command: &lt;code&gt;gulp&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;_git&#34;&gt;git&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;First, make sure you have git installed.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;literalblock&#34;&gt; &#xA;     &lt;div class=&#34;content&#34;&gt; &#xA;      &lt;pre&gt;$ git --version&lt;/pre&gt; &#xA;     &lt;/div&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;If not, &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;download and install&lt;/a&gt; the git package for your system.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;_node_js&#34;&gt;Node.js&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;Next, make sure that you have Node.js installed (which also provides npm).&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;literalblock&#34;&gt; &#xA;     &lt;div class=&#34;content&#34;&gt; &#xA;      &lt;pre&gt;$ node --version&lt;/pre&gt; &#xA;     &lt;/div&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;If this command fails with an error, you don’t have Node.js installed. If the command doesn’t report an LTS version of Node.js (e.g., v10.15.3), it means you don’t have a suitable version of Node.js installed. In this guide, we’ll be installing Node.js 10.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;While you can install Node.js from the official packages, we strongly recommend that you use &lt;a href=&#34;https://github.com/creationix/nvm&#34;&gt;nvm&lt;/a&gt; (Node Version Manager) to manage your Node.js installation(s). Follow the &lt;a href=&#34;https://github.com/creationix/nvm#installation&#34;&gt;nvm installation instructions&lt;/a&gt; to set up nvm on your machine.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;Once you’ve installed nvm, open a new terminal and install Node.js 10 using the following command:&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;literalblock&#34;&gt; &#xA;     &lt;div class=&#34;content&#34;&gt; &#xA;      &lt;pre&gt;$ nvm install 10&lt;/pre&gt; &#xA;     &lt;/div&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;You can switch to this version of Node.js at any time using the following command:&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;literalblock&#34;&gt; &#xA;     &lt;div class=&#34;content&#34;&gt; &#xA;      &lt;pre&gt;$ nvm use 10&lt;/pre&gt; &#xA;     &lt;/div&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;To make Node.js 10 the default in new terminals, type:&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;literalblock&#34;&gt; &#xA;     &lt;div class=&#34;content&#34;&gt; &#xA;      &lt;pre&gt;$ nvm alias default 10&lt;/pre&gt; &#xA;     &lt;/div&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;Now that you have Node.js installed, you can proceed with installing the Gulp CLI.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;_gulp_cli&#34;&gt;Gulp CLI&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;You’ll need the Gulp command-line interface (CLI) to run the build. The Gulp CLI package provides the &lt;code&gt;gulp&lt;/code&gt; command which, in turn, executes the version of Gulp declared by the project.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;You can install the Gulp CLI globally (which resolves to a location in your user directory if you’re using nvm) using the following command:&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;literalblock&#34;&gt; &#xA;     &lt;div class=&#34;content&#34;&gt; &#xA;      &lt;pre&gt;$ npm install -g gulp-cli&lt;/pre&gt; &#xA;     &lt;/div&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;Verify the Gulp CLI is installed and on your PATH by running:&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;literalblock&#34;&gt; &#xA;     &lt;div class=&#34;content&#34;&gt; &#xA;      &lt;pre&gt;$ gulp --version&lt;/pre&gt; &#xA;     &lt;/div&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;If you prefer to install global packages using Yarn, run this command instead:&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;literalblock&#34;&gt; &#xA;     &lt;div class=&#34;content&#34;&gt; &#xA;      &lt;pre&gt;$ yarn global add gulp-cli&lt;/pre&gt; &#xA;     &lt;/div&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;Alternately, you can use the &lt;code&gt;gulp&lt;/code&gt; command that is installed by the project’s dependencies.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;literalblock&#34;&gt; &#xA;     &lt;div class=&#34;content&#34;&gt; &#xA;      &lt;pre&gt;$ npx --offline gulp --version&lt;/pre&gt; &#xA;     &lt;/div&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;Now that you have the prerequisites installed, you can fetch and build the UI project.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_clone_and_initialize_the_ui_project&#34;&gt;Clone and Initialize the UI Project&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Clone the default UI project using git:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;literalblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;$ git clone https://gitlab.com/antora/antora-ui-default &amp;amp;&amp;amp;&#xA;  cd &#34;`basename $_`&#34;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;The example above clones Antora’s default UI project and then switches to the project folder on your filesystem. Stay in this project folder when executing all subsequent commands.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Use npm to install the project’s dependencies inside the project. In your terminal, execute the following command:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;literalblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;$ npm install&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;This command installs the dependencies listed in &lt;em class=&#34;path&#34;&gt;package.json&lt;/em&gt; into the &lt;em class=&#34;path&#34;&gt;node_modules/&lt;/em&gt; folder inside the project. This folder does not get included in the UI bundle and should &lt;em&gt;not&lt;/em&gt; be committed to the source control repository.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;admonitionblock tip&#34;&gt; &#xA;    &lt;table&gt; &#xA;     &lt;tbody&gt;&#xA;      &lt;tr&gt; &#xA;       &lt;td class=&#34;icon&#34;&gt; &#xA;        &lt;div class=&#34;title&#34;&gt;&#xA;         Tip&#xA;        &lt;/div&gt; &lt;/td&gt; &#xA;       &lt;td class=&#34;content&#34;&gt; &#xA;        &lt;div class=&#34;paragraph&#34;&gt; &#xA;         &lt;p&gt;If you prefer to install packages using Yarn, run this command instead:&lt;/p&gt; &#xA;        &lt;/div&gt; &#xA;        &lt;div class=&#34;literalblock&#34;&gt; &#xA;         &lt;div class=&#34;content&#34;&gt; &#xA;          &lt;pre&gt;$ yarn&lt;/pre&gt; &#xA;         &lt;/div&gt; &#xA;        &lt;/div&gt; &lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt;&#xA;    &lt;/table&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_preview_the_ui&#34;&gt;Preview the UI&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;The default UI project is configured to preview offline. The files in the &lt;em class=&#34;path&#34;&gt;preview-src/&lt;/em&gt; folder provide the sample content that allow you to see the UI in action. In this folder, you’ll primarily find pages written in AsciiDoc. These pages provide a representative sample and kitchen sink of content from the real site.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;To build the UI and preview it in a local web server, run the &lt;code&gt;preview&lt;/code&gt; command:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;literalblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;$ gulp preview&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;You’ll see a URL listed in the output of this command:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;literalblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;[12:00:00] Starting server...&#xA;[12:00:00] Server started http://localhost:5252&#xA;[12:00:00] Running server&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Navigate to this URL to preview the site locally.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;While this command is running, any changes you make to the source files will be instantly reflected in the browser. This works by monitoring the project for changes, running the &lt;code&gt;preview:build&lt;/code&gt; task if a change is detected, and sending the updates to the browser.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Press &lt;span class=&#34;keyseq&#34;&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;C&lt;/kbd&gt;&lt;/span&gt; to stop the preview server and end the continuous build.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_package_for_use_with_antora&#34;&gt;Package for Use with Antora&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;If you need to package the UI so you can use it to generate the documentation site locally, run the following command:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;literalblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;$ gulp bundle&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;If any errors are reported by lint, you’ll need to fix them.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;When the command completes successfully, the UI bundle will be available at &lt;em class=&#34;path&#34;&gt;build/ui-bundle.zip&lt;/em&gt;. You can point Antora at this bundle using the &lt;code&gt;--ui-bundle-url&lt;/code&gt; command-line option.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;If you have the preview running, and you want to bundle without causing the preview to be clobbered, use:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;literalblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;$ gulp bundle:pack&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;The UI bundle will again be available at &lt;em class=&#34;path&#34;&gt;build/ui-bundle.zip&lt;/em&gt;.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;_source_maps&#34;&gt;Source Maps&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;The build consolidates all the CSS and client-side JavaScript into combined files, &lt;em class=&#34;path&#34;&gt;site.css&lt;/em&gt; and &lt;em class=&#34;path&#34;&gt;site.js&lt;/em&gt;, respectively, in order to reduce the size of the bundle. &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Tools/Debugger/How_to/Use_a_source_map&#34;&gt;Source maps&lt;/a&gt; correlate these combined files with their original sources.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;This “source mapping” is accomplished by generating additional map files that make this association. These map files sit adjacent to the combined files in the build folder. The mapping they provide allows the debugger to present the original source rather than the obfuscated file, an essential tool for debugging.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;In preview mode, source maps are enabled automatically, so there’s nothing you have to do to make use of them. If you need to include source maps in the bundle, you can do so by setting the &lt;code&gt;SOURCEMAPS&lt;/code&gt; environment variable to &lt;code&gt;true&lt;/code&gt; when you run the bundle command:&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;literalblock&#34;&gt; &#xA;     &lt;div class=&#34;content&#34;&gt; &#xA;      &lt;pre&gt;$ SOURCEMAPS=true gulp bundle&lt;/pre&gt; &#xA;     &lt;/div&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;In this case, the bundle will include the source maps, which can be used for debugging your production site.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_copyright_and_license&#34;&gt;Copyright and License&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Copyright © 2017-present OpenDevise Inc. and the Antora Project.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Use of this software is granted under the terms of the &lt;a href=&#34;https://www.mozilla.org/en-US/MPL/2.0/&#34;&gt;Mozilla Public License Version 2.0&lt;/a&gt; (MPL-2.0). See &lt;a href=&#34;https://raw.githubusercontent.com/riptano/docs-ui/main/LICENSE&#34; class=&#34;bare&#34;&gt;LICENSE&lt;/a&gt; to find the full license text.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_authors&#34;&gt;Authors&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Development of Antora is led and sponsored by &lt;a href=&#34;https://opendevise.com&#34;&gt;OpenDevise Inc&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
</feed>