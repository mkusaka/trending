<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-20T01:32:44Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TwoGenius/HacktoberFest2022</title>
    <updated>2022-10-20T01:32:44Z</updated>
    <id>tag:github.com,2022-10-20:/TwoGenius/HacktoberFest2022</id>
    <link href="https://github.com/TwoGenius/HacktoberFest2022" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Make contribution and learn open-source&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hacktoberfest 2022 &lt;code&gt;OPEN FIRST&lt;/code&gt; Pull Request - &lt;code&gt;FREE T-SHIRT&lt;/code&gt;üéâ&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/74475436/193330363-8c7eda7f-8975-433d-9627-4c0add6e16e4.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started ü§©ü§ó:&lt;/h2&gt; &#xA;&lt;h3&gt;Upload your landing page or resume page in a folder with &lt;code&gt;your name&lt;/code&gt;.&lt;/h3&gt; &#xA;&lt;h3&gt;Make the page using &lt;code&gt;HTML, CSS and/or JavaScript&lt;/code&gt;.&lt;/h3&gt; &#xA;&lt;br&gt; - Fork this repo (button on top) - Clone on your local machine &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/fineanmol/Hacktoberfest2021.git&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Navigate to project directory.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd Hacktoberfest2021&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a new Branch&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;git checkout -b my-new-branch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add your contribution&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;git add .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Commit your changes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;git commit -m &#34;Relevant message&#34;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Then push&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;git push origin my-new-branch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a new pull request from your forked repository&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Avoid Conflicts {Syncing your fork}&lt;/h2&gt; &#xA;&lt;p&gt;An easy way to avoid conflicts is to add an &#39;upstream&#39; for your git repo, as other PR&#39;s may be merged while you&#39;re working on your branch/fork.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;git remote add upstream https://github.com/fineanmol/Hacktoberfest2021&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can verify that the new remote has been added by typing&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;git remote -v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To pull any new changes from your parent repo simply run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-terminal&#34;&gt;git merge upstream/master&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will give you any eventual conflicts and allow you to easily solve them in your repo. It&#39;s a good idea to use it frequently in between your own commits to make sure that your repo is up to date with its parent.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>FuzzySecurity/Fermion</title>
    <updated>2022-10-20T01:32:44Z</updated>
    <id>tag:github.com,2022-10-20:/FuzzySecurity/Fermion</id>
    <link href="https://github.com/FuzzySecurity/Fermion" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fermion, an electron wrapper for Frida &amp; Monaco.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://badgen.net/github/tag/FuzzySecurity/Fermion?label=Fermion%20Release&amp;amp;color=green&amp;amp;icon=atom&#34; alt=&#34;release&#34;&gt; &lt;img src=&#34;https://badgen.net/badge/Frida-Node%20Version/v15.1.3/green?icon=typescript&#34; alt=&#34;frida-node&#34;&gt; &lt;img src=&#34;https://badgen.net/github/stars/FuzzySecurity/Fermion?color=cyan&amp;amp;label=Stars&#34; alt=&#34;stars&#34;&gt; &lt;img src=&#34;https://badgen.net/github/forks/FuzzySecurity/Fermion?color=cyan&amp;amp;label=Forks&#34; alt=&#34;forks&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Fermion&lt;/h1&gt; &#xA;&lt;p&gt;Fermion is an electron application that wraps &lt;a href=&#34;https://github.com/frida/frida-node&#34;&gt;frida-node&lt;/a&gt; and &lt;a href=&#34;https://microsoft.github.io/monaco-editor/&#34;&gt;monaco-editor&lt;/a&gt;. It offers a fully integrated environment to prototype, test and refine Frida scripts through a single UI. With the integration of Monaco come all the features you would expect from Visual Studio Code: Linting, IntelliSense, keybindings, etc. In addition, Fermion has a TypeScript language definition for the Frida API so it is easy to write Frida scripts.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;What&#39;s in a name&lt;/code&gt;: A fermion can be an elementary particle, such as the electron, or it can be a composite particle, such as the proton. Fermions include all quarks and leptons, as well as all composite particles made of an odd number of these, such as all baryons and many atoms and nuclei.&lt;/p&gt; &#xA;&lt;h2&gt;How to get Fermion?&lt;/h2&gt; &#xA;&lt;h3&gt;Run Fermion from source&lt;/h3&gt; &#xA;&lt;p&gt;Download the repository and navigate to the &lt;code&gt;Fermion&lt;/code&gt; folder in the terminal. Once there, set the following environment variables.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Windows&#xA;set npm_config_runtime=electron&#xA;set npm_config_target=13.3.0&#xA;&#xA;# Linux / OSX&#xA;export npm_config_runtime=electron&#xA;export npm_config_target=13.3.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Afterwards install the packages required to run Fermion with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once complete, you can run Fermion by issuing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Compile a release package&lt;/h3&gt; &#xA;&lt;p&gt;Complete the steps above and then issue the following command from the terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Windows&#xA;electron-packager . --icon .\src\images\fermion-ico.ico&#xA;&#xA;# Linux&#xA;electron-packager . --icon ./src/images/fermion-ico.png&#xA;&#xA;# OSX&#xA;electron-packager . --icon ./src/images/fermion-ico.icns&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Releases&lt;/h3&gt; &#xA;&lt;p&gt;You can get the latest pre-built Fermion for x64 Windows and Linux from &lt;a href=&#34;https://github.com/FuzzySecurity/Fermion/releases&#34;&gt;releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ notes&lt;/h2&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Q&lt;/strong&gt;: I need to inject a SYSTEM level process, how can I do that? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;A&lt;/strong&gt;: You used to be able to utilize tools like psexec to run Fermion as SYSTEM however since Electron v8 this causes Fermion to freeze. What you really need is for Fermion to run as Administrator and have SeDebugPrivilege privileges. As a workaround you can launch PowerShell as Administrator and use that to launch Fermion.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Q&lt;/strong&gt;: I can&#39;t attach to a running process? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;A&lt;/strong&gt;: System restrictions may prevent you from attaching, normally you will see a message in &lt;code&gt;Fermion&lt;/code&gt; to tell you what the problem is and how you can solve it. However, generally, you can run &lt;code&gt;Fermion&lt;/code&gt; or the &lt;code&gt;Frida Server&lt;/code&gt; as &lt;code&gt;root&lt;/code&gt; or alternatively run the following command &lt;code&gt;sudo sysctl kernel.yama.ptrace_scope=0&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;General&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;: I want to build my own version of Fermion against a new version of Frida/Electron. How can I find out which &lt;code&gt;prebuild&lt;/code&gt;‚Äôs exist currently?&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;A&lt;/strong&gt;: You should have a look &lt;a href=&#34;https://github.com/frida/frida/raw/master/releng/release.py&#34;&gt;here&lt;/a&gt;, then simply search for &lt;code&gt;do_build_command&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;: I want to review/change/update the type definitions used in the Monaco editor, how can I do that?&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;A&lt;/strong&gt;: You should have a look &lt;a href=&#34;https://www.npmjs.com/package/@types/frida-gum&#34;&gt;here&lt;/a&gt;, this page has all the releases for the &lt;code&gt;frida-gum&lt;/code&gt; type definitions. If you want to update or change these definitions in &lt;code&gt;Fermion&lt;/code&gt;, you should update the following file &lt;code&gt;Fermion/src/lang/frida.d.ts&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;: Why you no stable &lt;code&gt;trace&lt;/code&gt; man (‚ïØ¬∞‚ñ°¬∞)‚ïØÔ∏µ ‚îª‚îÅ‚îª&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;A&lt;/strong&gt;: Call tracing is resource intensive. In most cases it will work fine but if you are tracing a &lt;code&gt;hot pointer&lt;/code&gt; and/or the trace is generating graphs with thousands of nodes then you will likely find that the &lt;code&gt;trace window&lt;/code&gt; will lag out while it is receiving data. Also, as with any kind of tracing, it can cause process instability / crashing / freezing.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;You can see an example of &lt;code&gt;Fermion&lt;/code&gt; at work below, in this case instrumenting &lt;code&gt;kernel32!ReadFile&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/FuzzySecurity/Fermion/master/Images/Fermion-1.png&#34; alt=&#34;Fermion&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Fermion has auto-complete, linting and Frida API symbol support.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/FuzzySecurity/Fermion/master/Images/Fermion-2.png&#34; alt=&#34;Help&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Fermion can connect to a Frida server to debug remote applications using the &lt;code&gt;device&lt;/code&gt; context menu. In many cases such as with &lt;code&gt;USB&lt;/code&gt; debugging or when attaching to mobile applications through emulators like &lt;code&gt;genymotion&lt;/code&gt; Fermion will automatically pick up the server as available. However, it is also possible to specify a remote server using an &lt;code&gt;IP&lt;/code&gt; and &lt;code&gt;Port&lt;/code&gt; combination.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/FuzzySecurity/Fermion/master/Images/Fermion-3.png&#34; alt=&#34;Server&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Fermion has built-in support for thread &lt;code&gt;CALL tracing&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/FuzzySecurity/Fermion/master/Images/Fermion-4.png&#34; alt=&#34;Trace&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This may not do exactly what you expect it to. When you define either a &lt;code&gt;pointer&lt;/code&gt; or &lt;code&gt;module&lt;/code&gt;/&lt;code&gt;Symbol&lt;/code&gt; combination the tracer will &lt;code&gt;attach&lt;/code&gt; to that location and any time a &lt;code&gt;thread&lt;/code&gt; executes at that place it will start tracing all &lt;code&gt;CALL&lt;/code&gt; instructions that thread performs till it returns. This means that different executions can generate different graphs, it also means that you may not see everything a function is doing (e.g. if, inside the function, a different thread gets spawned).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/FuzzySecurity/Fermion/master/Images/Fermion-5.png&#34; alt=&#34;SVG&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Fermion converts these traces into a &lt;code&gt;Graphviz SVG&lt;/code&gt; format using &lt;code&gt;dot&lt;/code&gt; which you can then explore. This is a feature which I find useful on occasion when performing exploratory work (What does a function do? How complex is that execution?). That being said, this is a &lt;code&gt;prototype&lt;/code&gt; feature which I built on top of Fermion and probably needs some more loving to be more production ready.&lt;/p&gt; &#xA;&lt;p&gt;Fermion also has built-in documentation for Frida&#39;s &lt;code&gt;JavaScript API&lt;/code&gt;. Like everyone else I don&#39;t always remember how everything works and having the docs in the app obviates the need to have a browser window open.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/FuzzySecurity/Fermion/master/Images/Fermion-6.png&#34; alt=&#34;Docs&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;h3&gt;ChangeLog&lt;/h3&gt; &#xA;&lt;p&gt;For more details on version specific changes consult the &lt;a href=&#34;https://github.com/FuzzySecurity/Fermion/raw/master/CHANGELOG.txt&#34;&gt;changelog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Call to action&lt;/h3&gt; &#xA;&lt;p&gt;If you integrate Fermion into your work-flow and find it useful I encourage you to make pull requests, submit bug reports and ask for features to improve the application. I&#39;m not exactly a Node developer so I am sure people will find ways optimize and rework some of the components.&lt;/p&gt; &#xA;&lt;h3&gt;Roadmap&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;Implement a more complete device manager interface.&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;UI re-design.&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gauge the appetite for more native tools built on top of Fermion and add these.&lt;/li&gt; &#xA; &lt;li&gt;Extend the device manager to take advantage of the new features integrated into &lt;code&gt;Frida v15.0+&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Special thanks&lt;/h3&gt; &#xA;&lt;p&gt;I just want to give a few special thanks!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A huge thanks to &lt;a href=&#34;https://twitter.com/oleavr&#34;&gt;Ole Andr√© V. Ravn√•s&lt;/a&gt; for all his work on Frida and having a lot of patience answering my pedestrian questions about Frida, NodeJS and Monaco!&lt;/li&gt; &#xA; &lt;li&gt;A shout-out also to &lt;a href=&#34;https://www.deviantart.com/mattahan&#34;&gt;mattahan&lt;/a&gt;. I&#39;m using a Buuf icon for the Windows package of Fermion. I&#39;m sure we have all used some of his icons on NIX over the years.&lt;/li&gt; &#xA; &lt;li&gt;Thanks to @lez0sec &amp;amp; @berkayyildi for contributing some time/code to Fermion!&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>dephraiim/minimal-youtube</title>
    <updated>2022-10-20T01:32:44Z</updated>
    <id>tag:github.com,2022-10-20:/dephraiim/minimal-youtube</id>
    <link href="https://github.com/dephraiim/minimal-youtube" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Minimal YouTube is an extension that replaces the YouTube UI with a minimal design containing no recommendations, shorts, or distractions.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/dephraiim/minimal-youtube/main/assets/logo.png&#34; width=&#34;150&#34;&gt; &#xA; &lt;h1&gt;Minimal YouTube&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Minimal YouTube is an extension that replaces the YouTube UI with a minimal design containing no recommendations, shorts, or distractions.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a rel=&#34;noreferrer noopener&#34; href=&#34;https://chrome.google.com/webstore/detail/minimal-youtube/imnffafnaoooaedkhappfhomnnpigogk&#34;&gt; &lt;img alt=&#34;Chrome Web Store&#34; src=&#34;https://img.shields.io/badge/Chrome-141e24.svg?&amp;amp;style=for-the-badge&amp;amp;logo=google-chrome&amp;amp;logoColor=white&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/dephraiim/minimal-youtube/main/assets/screenshot-chrome.png&#34; width=&#34;1080&#34; alt=&#34;Minimal Youtube on Gooogle Chrome&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Installation (Chrome or Microsoft Edge)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/dephraiim/minimal-youtube/releases/download/1.0.0/minimal_youtube-1.0.0.zip&#34;&gt;Download&lt;/a&gt;&lt;/strong&gt; the zip from the Github Releases or &lt;strong&gt;Fork&lt;/strong&gt; this repo, then &lt;strong&gt;clone your forked repo locally&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Open &lt;a href=&#34;chrome://extensions&#34;&gt;the extensions page&lt;/a&gt;&lt;/strong&gt; in Chrome: &lt;code&gt;chrome://extensions&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you did not do it already, &lt;strong&gt;toggle the &#34;developer mode&#34;&lt;/strong&gt;. This is usually a toggle button at the top right of the extensions page.&lt;/li&gt; &#xA; &lt;li&gt;Click the button &lt;strong&gt;&lt;em&gt;load unpacked extension&lt;/em&gt;&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;In the window that pops up, &lt;strong&gt;select the folder that contains this minimal extension&lt;/strong&gt;, then &lt;strong&gt;click &lt;em&gt;ok&lt;/em&gt;&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Done!&lt;/strong&gt; A new extension called &lt;em&gt;Minimal Youtube&lt;/em&gt; should have appeared in the list.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation (Firefox)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/dephraiim/minimal-youtube/releases/download/1.0.0/minimal_youtube-1.0.0.zip&#34;&gt;Download&lt;/a&gt;&lt;/strong&gt; the zip from the Github Releases.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Open &lt;a href=&#34;about:debugging%23/runtime/this-firefox&#34;&gt;the temporary extensions page&lt;/a&gt;&lt;/strong&gt; in Firefox.&lt;/li&gt; &#xA; &lt;li&gt;Click the button &lt;strong&gt;&lt;em&gt;Load Temporary Add-on...&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;In the window that pops up, &lt;strong&gt;select the folder that contains the downloaded extension&lt;/strong&gt;, then &lt;strong&gt;click &lt;em&gt;ok&lt;/em&gt;&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Done!&lt;/strong&gt; A new extension called &lt;em&gt;Minimal Youtube&lt;/em&gt; should have appeared.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Related&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/0kzh/minimal-youtube/&#34;&gt;Minimal Youtube&lt;/a&gt; for &lt;a href=&#34;https://arc.net&#34;&gt;Arc Browser&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>