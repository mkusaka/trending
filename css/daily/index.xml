<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-14T01:32:45Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rodolfomori/dev-previsao</title>
    <updated>2024-04-14T01:32:45Z</updated>
    <id>tag:github.com,2024-04-14:/rodolfomori/dev-previsao</id>
    <link href="https://github.com/rodolfomori/dev-previsao" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>TheBridge-FullStackDeveloper/gitData</title>
    <updated>2024-04-14T01:32:45Z</updated>
    <id>tag:github.com,2024-04-14:/TheBridge-FullStackDeveloper/gitData</id>
    <link href="https://github.com/TheBridge-FullStackDeveloper/gitData" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Buscador de Usuario de GitHub&lt;/h1&gt; &#xA;&lt;p&gt;Este ejercicio tiene como objetivo crear una aplicación que permita buscar un usuario en GitHub y mostrar su nombre, usuario, imagen, repositorios públicos y seguidores.&lt;/p&gt; &#xA;&lt;h2&gt;Instalación&lt;/h2&gt; &#xA;&lt;p&gt;Ejecuta el siguiente comando para instalar las dependencias:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Asegurate de que están todas las que vas a necesitar&lt;/p&gt; &#xA;&lt;h2&gt;Tecnologías utilizadas&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Redux: Se utiliza Redux para gestionar el estado de la aplicación de manera centralizada.&lt;/li&gt; &#xA; &lt;li&gt;Redux Toolkit: Se utiliza Redux Toolkit para simplificar la configuración y el manejo de Redux.&lt;/li&gt; &#xA; &lt;li&gt;GitHub API: Se utiliza la API de GitHub para buscar usuarios y obtener sus datos.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Instrucciones&lt;/h2&gt; &#xA;&lt;p&gt;Vamos a traernos los datos de un usuario de github. Puedes probar con el tuyo o generar un input para ir probando directamente desde la API. la URL de la API de github es la siguiente: &lt;code&gt;https://api.github.com/users/&lt;/code&gt; si añadimos justo después el nombre de usuario accederemos a sus datos. Podéis comproibarlo en con esta URL &lt;a href=&#34;https://api.github.com/users/carlosdiazgirol&#34;&gt;https://api.github.com/users/carlosdiazgirol&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Los datos serán:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Nombre&lt;/li&gt; &#xA; &lt;li&gt;Nombre de usuario&lt;/li&gt; &#xA; &lt;li&gt;Seguidores&lt;/li&gt; &#xA; &lt;li&gt;Repositorios públicos&lt;/li&gt; &#xA; &lt;li&gt;Imagen&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Para manejar el estado globar usaremos REDUX y ahí es donde guardaremos los datos del usuario que nos traigamos.&lt;/p&gt; &#xA;&lt;p&gt;Para hacer las pruebas podéis pasar desde main.jsx el usuario por propiedades:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;//ejemplo&#xA;&amp;lt;App username=&#34;CarlosDiazGirol&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;La idea es trabajar el estado complejo con REDUX, pero si véis que se os complica podéis usar cualquier otro método... os recomiendo el &lt;code&gt;useContext&lt;/code&gt;por ser lo mas similar que conocemos.&lt;/p&gt;</summary>
  </entry>
</feed>