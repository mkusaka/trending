<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-07T01:27:22Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>telegram-mini-apps-dev/vite-boilerplate</title>
    <updated>2024-05-07T01:27:22Z</updated>
    <id>tag:github.com,2024-05-07:/telegram-mini-apps-dev/vite-boilerplate</id>
    <link href="https://github.com/telegram-mini-apps-dev/vite-boilerplate" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This template provides a minimal setup to get TWA working in Vite with React, TypeScript, HMR and some ESLint rules.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;br&gt; &lt;img width=&#34;240&#34; src=&#34;https://raw.githubusercontent.com/telegram-mini-apps-dev/vite-boilerplate/master/src/assets/tapps.png&#34; alt=&#34;logo of telegram web apps&#34;&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Telegram Mini Apps(TMA) + React + TypeScript + Vite&lt;/h1&gt; &#xA;&lt;p&gt;Vite (which means &#34;fast&#34; in French) is a front-end build tool and development server that aims to provide a faster and leaner development experience for modern web projects. We will utilise Vite to create Telegram Mini App example.&lt;/p&gt; &#xA;&lt;p&gt;This template provides a minimal setup to get TMA working in Vite with React, TypeScript, HMR and some ESLint rules.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# npm&#xA;npm install&#xA;npm run dev --host&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# yarn&#xA;yarn&#xA;yarn dev --host&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Links&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ton.org/develop/dapps/twa&#34;&gt;Doc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/vite_twa_example_bot/app&#34;&gt;Example TMA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twa-dev.github.io/vite-boilerplate/&#34;&gt;Link&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>haskell-infra/www.haskell.org</title>
    <updated>2024-05-07T01:27:22Z</updated>
    <id>tag:github.com,2024-05-07:/haskell-infra/www.haskell.org</id>
    <link href="https://github.com/haskell-infra/www.haskell.org" rel="alternate"></link>
    <summary type="html">&lt;p&gt;www.haskell.org site source&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Haskell.org Website&lt;/h1&gt; &#xA;&lt;p&gt;This repository holds the source code and content for &lt;a href=&#34;http://www.haskell.org&#34;&gt;www.haskell.org&lt;/a&gt;. Questions about and issues with the site can be raised in this repository, and PRs can be made to change content. More general administrative issues with the site or related haskell.org infrastructure are better &lt;a href=&#34;https://github.com/haskell-infra/haskell-admins#the-team-and-how-to-contact-them&#34;&gt;raised directly with the admin team&lt;/a&gt;. Not everything beneath &lt;code&gt;www.haskell.org&lt;/code&gt; is generated from this repository. See &lt;a href=&#34;https://raw.githubusercontent.com/haskell-infra/www.haskell.org/master/#subsites&#34;&gt;the list of other subsites&lt;/a&gt; below.&lt;/p&gt; &#xA;&lt;h2&gt;Developing the website&lt;/h2&gt; &#xA;&lt;p&gt;The website is built as a Hakyll static site, which builds both as a nix derivation and a standalone cabal project.&lt;/p&gt; &#xA;&lt;h3&gt;Community contributions&lt;/h3&gt; &#xA;&lt;p&gt;We welcome contributions from the community. To see which things we need particular help with, please see the &lt;a href=&#34;https://github.com/haskell-infra/www.haskell.org/issues/177&#34;&gt;community contributions meta-ticket&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have your own idea for a change you would like to see you are welcome to &lt;a href=&#34;https://github.com/haskell-infra/www.haskell.org/pulls&#34;&gt;submit a PR&lt;/a&gt;. Before you start work on your idea you might like to &lt;a href=&#34;https://github.com/haskell-infra/www.haskell.org/issues/new&#34;&gt;file a new issue&lt;/a&gt; to discuss it with the maintainers to get an estimate for how likely it is to be accepted. PRs are accepted according to &lt;a href=&#34;https://github.com/haskell-org/committee/raw/main/proposals/0003-pr-process.md&#34;&gt;the PR policy of this repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Making Changes&lt;/h3&gt; &#xA;&lt;p&gt;The easiest way to see the effect of your changes is to use the &lt;code&gt;buildAndWatch&lt;/code&gt; script and then point your web browser to &lt;a href=&#34;http://localhost:8000&#34;&gt;http://localhost:8000&lt;/a&gt;. When you are finished editing or want to re-build the Hakyll part of the site, you can stop the script by pressing &lt;code&gt;Control+c&lt;/code&gt; (&lt;code&gt;C-c&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;If you are only making changes to the content of the site, you can leave this script running and it will automatically pick up changes and re-build the site for you.&lt;/p&gt; &#xA;&lt;p&gt;If you want to change the &lt;code&gt;builder&lt;/code&gt;, or if you encounter an error where your changes to the content aren&#39;t being picked up, need to stop the script and re-start it.&lt;/p&gt; &#xA;&lt;h3&gt;Submitting Changes&lt;/h3&gt; &#xA;&lt;p&gt;Once you&#39;re satisfied with your changes, make a PR and the maintainers will try to review it as soon as we can.&lt;/p&gt; &#xA;&lt;h3&gt;Working On The Builder&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;builder&lt;/code&gt; is the static site generator that turns the markdown files, CSS, images, and scripts into a website. It lives in the &lt;code&gt;builder&lt;/code&gt;. Most of the time, you won&#39;t need to make changes to the builder and you can follow the instructions in the &lt;em&gt;Contributing Changes&lt;/em&gt; section above.&lt;/p&gt; &#xA;&lt;p&gt;If you want to make a quick change or two, you can continue to use the &lt;code&gt;buildAndWatch&lt;/code&gt; script to rebuild changes, but for more substantial changes this might increase the build cycle time too much. In this case, you can build the builder using either nix or cabal. Directions for both are given below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a id=&#34;buildingWithoutNix&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Manually Building the Site With Cabal&lt;/h3&gt; &#xA;&lt;p&gt;If you don&#39;t have nix installed, or if you are inside of the project&#39;s nix shell, you will want to use cabal to compile the builder. To do so, enter the &lt;code&gt;builder&lt;/code&gt; directory and compile the program with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cabal v2-build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once compiled, the builder must be run from the project root directory so that it can find all of the content. To run the builder, you need to first find the name of the executable. From the builder directory, you can find the executable path by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cabal v2-exec -- which haskell-org-site&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using that path, you can run the builder from the project root directory.&lt;/p&gt; &#xA;&lt;h3&gt;Manually Building the Site With Nix&lt;/h3&gt; &#xA;&lt;p&gt;If you have nix installed, you can have nix build the builder by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nix-build -A builder&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may then run the builder binary from the &lt;code&gt;result&lt;/code&gt; directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./result/bin/haskell-org-site build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Deploying&lt;/h3&gt; &#xA;&lt;p&gt;The site will automatically be deployed live to &lt;a href=&#34;http://www.haskell.org/&#34;&gt;http://www.haskell.org/&lt;/a&gt; every time a branch is merged to &lt;code&gt;master&lt;/code&gt;. Alternatively an admin for this GitHub repository can deploy the site by visiting the &lt;a href=&#34;https://github.com/haskell-infra/www.haskell.org/actions/workflows/deploy.yml&#34;&gt;Deploy workflow page&lt;/a&gt;, clicking the &#34;Run workflow&#34; dropdown, choosing the branch to build and deploy, and clicking the &#34;Run workflow&#34; button.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a id=&#34;subsites&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Subsites&lt;/h1&gt; &#xA;&lt;p&gt;Not all subsites of &lt;a href=&#34;http://www.haskell.org&#34;&gt;www.haskell.org&lt;/a&gt; are built from this repository. Some of the others are&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Subsite&lt;/th&gt; &#xA;   &lt;th&gt;Source&lt;/th&gt; &#xA;   &lt;th&gt;Owner&lt;/th&gt; &#xA;   &lt;th&gt;Details&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.haskell.org/cabal/&#34;&gt;&lt;code&gt;cabal/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/haskell/cabal-website&#34;&gt;cabal-website&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Cabal maintainers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-infra/www.haskell.org/master/#details-cabal&#34;&gt;Details&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.haskell.org/ghc/&#34;&gt;&lt;code&gt;ghc/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-infra/www.haskell.org/master/#details-ghc&#34;&gt;Details&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.haskell.org/ghc-perf/&#34;&gt;&lt;code&gt;ghc-perf/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Joachim Breitner&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-infra/www.haskell.org/master/#details-ghc-perf&#34;&gt;Details&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.haskell.org/ghcup/&#34;&gt;&lt;code&gt;ghcup/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gitlab.haskell.org/haskell/ghcup-hs/-/tree/master/www&#34;&gt;ghcup-hs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Julian Ospald&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.haskell.org/haddock/&#34;&gt;&lt;code&gt;haddock/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Redirect&lt;/td&gt; &#xA;   &lt;td&gt;Haddock maintainers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-infra/www.haskell.org/master/#details-haddock&#34;&gt;Details&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.haskell.org/haskell-symposium/&#34;&gt;&lt;code&gt;haskell-symposium/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Haskell Symposium organisers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.haskell.org/platform/&#34;&gt;&lt;code&gt;platform/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Redirect&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.haskell.org/alex/&#34;&gt;&lt;code&gt;alex/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Redirect&lt;/td&gt; &#xA;   &lt;td&gt;Alex maintainers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-infra/www.haskell.org/master/#details-alex&#34;&gt;Details&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.haskell.org/arrows/&#34;&gt;&lt;code&gt;arrows/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Ross Patterson&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.haskell.org/communities/&#34;&gt;&lt;code&gt;communities/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-infra/www.haskell.org/master/#details-communities&#34;&gt;Details&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.haskell.org/definition/&#34;&gt;&lt;code&gt;definition/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Haskell Prime committee&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-infra/www.haskell.org/master/#details-definition&#34;&gt;Details&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.haskell.org/happy/&#34;&gt;&lt;code&gt;happy/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Redirect&lt;/td&gt; &#xA;   &lt;td&gt;Happy maintainers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-infra/www.haskell.org/master/#details-happy&#34;&gt;Details&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.haskell.org/haskell-workshop/&#34;&gt;&lt;code&gt;haskell-workshop/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Haskell Symposium organisers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-infra/www.haskell.org/master/#details-haskell-workshop&#34;&gt;Details&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.haskell.org/hugs/&#34;&gt;&lt;code&gt;hugs/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-infra/www.haskell.org/master/#details-hugs&#34;&gt;Details&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.haskell.org/nhc98/&#34;&gt;&lt;code&gt;nhc98/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;York Functional Programming Group&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-infra/www.haskell.org/master/#details-nhc98&#34;&gt;Details&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.haskell.org/onlinereport/&#34;&gt;&lt;code&gt;onlinereport/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Haskell Prime committee&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-infra/www.haskell.org/master/#details-onlinereport&#34;&gt;Details&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.haskell.org/tutorial/&#34;&gt;&lt;code&gt;tutorial/&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/haskell-infra/www.haskell.org/master/#details-tutorial&#34;&gt;Details&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Details on subsites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a name=&#34;details-cabal&#34;&gt;&lt;/a&gt; &lt;code&gt;cabal/&lt;/code&gt;&lt;/p&gt; &lt;p&gt;At least @emilypi has deploy permissions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a name=&#34;details-ghc&#34;&gt;&lt;/a&gt; &lt;code&gt;ghc/&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Probably owned by the GHC team. Most likely @bgamari is the best contact point.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a name=&#34;details-ghc-perf&#34;&gt;&lt;/a&gt; &lt;code&gt;ghc-perf/&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Same as &lt;a href=&#34;https://perf.haskell.org&#34;&gt;https://perf.haskell.org&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a name=&#34;details-alex&#34;&gt;&lt;/a&gt; &lt;code&gt;alex/&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Redirect to &lt;a href=&#34;https://haskell-alex.readthedocs.io&#34;&gt;https://haskell-alex.readthedocs.io&lt;/a&gt;&lt;/p&gt; &lt;p&gt;See also &lt;a href=&#34;https://github.com/haskell-infra/www.haskell.org/issues/183&#34;&gt;https://github.com/haskell-infra/www.haskell.org/issues/183&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a name=&#34;details-communities&#34;&gt;&lt;/a&gt; &lt;code&gt;communities/&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Just contains a link to the HCAR page on this Haskell wiki&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a name=&#34;details-definition&#34;&gt;&lt;/a&gt; &lt;code&gt;definition/&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Last update: 21 June 2005. &lt;a href=&#34;https://github.com/haskell-infra/www.haskell.org/pull/103#issuecomment-877643716&#34;&gt;Should be owned by&lt;/a&gt; the same owners as &lt;a href=&#34;https://raw.githubusercontent.com/haskell-infra/www.haskell.org/master/#details-onlinereport&#34;&gt;&lt;code&gt;onlinereport&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a name=&#34;details-haddock&#34;&gt;&lt;/a&gt; &lt;code&gt;haddock/&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Redirect to &lt;a href=&#34;https://haskell-haddock.readthedocs.io&#34;&gt;https://haskell-haddock.readthedocs.io&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a name=&#34;details-happy&#34;&gt;&lt;/a&gt; &lt;code&gt;happy/&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Redirect to &lt;a href=&#34;https://haskell-happy.readthedocs.io&#34;&gt;https://haskell-happy.readthedocs.io&lt;/a&gt;&lt;/p&gt; &lt;p&gt;See also &lt;a href=&#34;https://github.com/haskell-infra/www.haskell.org/issues/183&#34;&gt;https://github.com/haskell-infra/www.haskell.org/issues/183&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a name=&#34;details-haskell-workshop&#34;&gt;&lt;/a&gt; &lt;code&gt;haskell-workshop/&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Archival page. Not updated since 2008. Source is linked as &lt;a href=&#34;http://abridgegame.org/darcs/&#34;&gt;http://abridgegame.org/darcs/&lt;/a&gt; but that link seems long-dead. &lt;a href=&#34;https://github.com/haskell-infra/www.haskell.org/pull/103#issuecomment-877643716&#34;&gt;Ultimately the responsibility of the Haskell Symposium organisers&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a name=&#34;details-hugs&#34;&gt;&lt;/a&gt; &lt;code&gt;hugs/&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Archival page. Not updated since 2003. Report problems to &lt;a href=&#34;mailto:hugs-bugs@haskell.org&#34;&gt;hugs-bugs@haskell.org&lt;/a&gt;. Mark Jones and Malcolm Wallace &lt;a href=&#34;https://github.com/haskell-infra/www.haskell.org/pull/103#issuecomment-877643716&#34;&gt;suggested as&lt;/a&gt; the points of contact.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a name=&#34;details-nhc98&#34;&gt;&lt;/a&gt; &lt;code&gt;nhc98/&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Archival page. This page last modified: 9th July 2010. Not updated since 2010. Mark Jones and Malcolm Wallace &lt;a href=&#34;https://github.com/haskell-infra/www.haskell.org/pull/103#issuecomment-877643716&#34;&gt;suggested as&lt;/a&gt; the points of contact.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a name=&#34;details-onlinereport&#34;&gt;&lt;/a&gt; &lt;code&gt;onlinereport/&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a name=&#34;details-tutorial&#34;&gt;&lt;/a&gt; &lt;code&gt;tutorial/&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Revised June 2000. &#34;This code has been tested with Hugs 98&#34;. Copyright (C) 1999 Paul Hudak, John Peterson and Joseph Fasel. Perhaps confer with Paul Hudak&#39;s former students and collaborators.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>senli1073/senli1073.github.io</title>
    <updated>2024-05-07T01:27:22Z</updated>
    <id>tag:github.com,2024-05-07:/senli1073/senli1073.github.io</id>
    <link href="https://github.com/senli1073/senli1073.github.io" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple Github Pages template for academic personal websites.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/forks/senli1073/senli1073.github.io?style=flat&#34; alt=&#34;Github Forks&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/senli1073/senli1073.github.io?style=flat&#34; alt=&#34;Github Stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/senli1073/senli1073.github.io&#34; alt=&#34;License&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/senli1073/senli1073.github.io&#34; alt=&#34;Last Commit&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;A simple Github Pages template for academic personal website.&lt;/h1&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://senli1073.github.io/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/senli1073/senli1073.github.io/main/screenshot_full.png&#34; alt=&#34;Screenshot of the Website&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;This is an academic personal website template based on &lt;a href=&#34;https://github.com/StartBootstrap/startbootstrap-new-age&#34;&gt;bootstrap&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The template is designed to integrate Markdown files as content input. There&#39;s no need to compile the webpage before deployment. Upon loading, the Markdown files are automatically parsed and embedded into the page.&lt;/p&gt; &#xA;&lt;p&gt;This template supports LaTeX formula input. You can use &lt;code&gt;$...$&lt;/code&gt; and &lt;code&gt;\(...\)&lt;/code&gt; as delimiters for inline-math, or use &lt;code&gt;$$...$$&lt;/code&gt; and &lt;code&gt;\[...\]&lt;/code&gt; as delimiters for display-math. Macros such as &lt;code&gt;\ref{...}&lt;/code&gt;, &lt;code&gt;\eqref{...}&lt;/code&gt;, and &lt;code&gt;\begin{equation}...\end{equation}&lt;/code&gt; are also supported. See &lt;a href=&#34;https://docs.mathjax.org/en/latest/index.html&#34;&gt;MathJax&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;🌌&lt;/span&gt; Demo: &lt;a href=&#34;https://senli1073.github.io/&#34;&gt;https://senli1073.github.io/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Start&lt;/h2&gt; &#xA;&lt;h3&gt;1. Fork this repository&lt;/h3&gt; &#xA;&lt;p&gt;The repository name should be &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;, which will also be your website&#39;s URL.&lt;/p&gt; &#xA;&lt;h3&gt;2. Edit page content&lt;/h3&gt; &#xA;&lt;p&gt;(1) Go to the folder where you want to store your project, and clone the new repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The directory structure is as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-.&#34;&gt;.&#xA;├── contents&#xA;└── static&#xA;    ├── assets&#xA;    │   └── img&#xA;    ├── css&#xA;    └── js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(2) Modify the content of each section, which corresponds to &lt;code&gt;contents/*.md&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;(3) Adjust the title, copyright information, and other text of the website in &lt;code&gt;contents/config.yml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;(4) Replace background image and photo with new ones for your web pages in &lt;code&gt;static/assets/img/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;(5) Push it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git commit -am &#39;init&#39;&#xA;git push&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Enjoy&lt;/h3&gt; &#xA;&lt;p&gt;Fire up a browser and go to &lt;code&gt;https://&amp;lt;username&amp;gt;.github.io&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright Sen Li, 2023. Licensed under an MIT license. You can copy and mess with this template.&lt;/p&gt;</summary>
  </entry>
</feed>