<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-30T01:32:09Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rupin/PiZeroMagicMirror</title>
    <updated>2022-11-30T01:32:09Z</updated>
    <id>tag:github.com,2022-11-30:/rupin/PiZeroMagicMirror</id>
    <link href="https://github.com/rupin/PiZeroMagicMirror" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Pi Zero Magic Mirror Application&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MagicMirror&lt;/h1&gt; &#xA;&lt;p&gt;A Magic Mirror that runs on the Pi Zero or Pi Zero W.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/rupin/PiZeroMagicMirror/raw/main/MagicMirrorImage.jpeg&#34; height=&#34;400&#34;&gt;&lt;img src=&#34;https://github.com/rupin/PiZeroMagicMirror/raw/main/IMG_20221124_110554.jpg&#34; height=&#34;400&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Due to the increasing prices of the Raspberry Pi in 2022, It was unlikely that I could afford to buy one.&lt;/p&gt; &#xA;&lt;p&gt;The Pi Zero, which I had a couple of, were used to run a Magic Mirror. Unfortunately, the Pi Zero W was not cut out to run Chromium, let alone any kind of a webserver which could serve pages.&lt;/p&gt; &#xA;&lt;p&gt;I split the desired task load as follows&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The Raspberry Pi would just run a browser on startup and load a Webpage running on the internet.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A Flask app which would run on heroku, that the browser in the Pi loads.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Deploy This Flask Application on Heroku&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork this Repo&lt;/li&gt; &#xA; &lt;li&gt;Create an account on Heroku&lt;/li&gt; &#xA; &lt;li&gt;Create a New App&lt;/li&gt; &#xA; &lt;li&gt;Connect Deployment on heroku through github&lt;/li&gt; &#xA; &lt;li&gt;Select your Forked Repo to be deployed&lt;/li&gt; &#xA; &lt;li&gt;Open the App in a browser.&lt;/li&gt; &#xA; &lt;li&gt;Copy the URL of your App, it will be used in steps below.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Setting up the Raspberry Pi&lt;/h1&gt; &#xA;&lt;p&gt;Install Raspbian Lite on an SD card. Use the Pi Imager software (&lt;a href=&#34;https://www.raspberrypi.com/software/&#34;&gt;https://www.raspberrypi.com/software/&lt;/a&gt;) to write the image of the Raspbian Lite onto the SD card. Configure the SSH, Wifi and Hostname files in the settings.&lt;/p&gt; &#xA;&lt;p&gt;Make sure the Pi shows up on the network and you are able to SSH into it, and you have internet access.&lt;/p&gt; &#xA;&lt;p&gt;Upgrade and Update to latest ( approx 10-15 minutes)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get update&#xA;&#xA;sudo apt-get upgrade&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Raspi Configuration&lt;/h1&gt; &#xA;&lt;p&gt;Execute the command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo raspi-config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Configure the following from the menu that appears ( use arrow keys)&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;h4&gt;Expand File system&lt;/h4&gt; &lt;p&gt;Advanced Options &amp;gt; Expand File System&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;Auto Login&lt;/h4&gt; &lt;p&gt;System Options &amp;gt; Boot/ Auto Login &amp;gt; Console Autologin &amp;gt; Autologin as Pi User&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;Enable VNC Server&lt;/h4&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Interface Options &amp;gt; VNC Server &amp;gt; Enable&lt;/p&gt; &#xA;&lt;h4&gt;Reboot the Pi.&lt;/h4&gt; &#xA;&lt;h1&gt;Minimum Environment for GUI Applications&lt;/h1&gt; &#xA;&lt;p&gt;Usually the graphical environment for GNU/Linux consists of four parts:&lt;/p&gt; &#xA;&lt;p&gt;a) X server (usually X.Org)&lt;/p&gt; &#xA;&lt;p&gt;b) Window manager (openbox, XFWM, â€¦)&lt;/p&gt; &#xA;&lt;p&gt;c) Desktop environment (PIXEL, LXDE, MATE, â€¦)&lt;/p&gt; &#xA;&lt;p&gt;d) Login manager (for example LightDM)&lt;/p&gt; &#xA;&lt;p&gt;However, we only want to run a single application (the web browser) in full screen â€“ so we donâ€™t need a desktop environment. And we already have autologin enabled (and no other users will ever use the Pi) â€“ so we donâ€™t need a login manager either.&lt;/p&gt; &#xA;&lt;p&gt;The bare minimum we need are X server and OpenBox window manager. Letâ€™s install just that: ( Approx 15 minutes)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install --no-install-recommends xserver-xorg x11-xserver-utils xinit openbox&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Web Browser&lt;/h1&gt; &#xA;&lt;p&gt;Weâ€™ll use Midori because its the only lighweight browser that has the most needed features. ( Approx 20 minutes)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install midori&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Configure OpenBox&lt;/h1&gt; &#xA;&lt;p&gt;Open the following file (/etc/xdg/openbox/autostart) to edit it&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo nano /etc/xdg/openbox/autostart&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add the following 4 lines to the end of the file&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;xset -dpms # disable DPMS (Energy Star) features.&#xA;xset s off # disable screen saver&#xA;xset s noblank # don&#39;t blank the video device&#xA;midori -e Fullscreen -e Navigationbar your-heroku-website-url # Start Midori in Fullscreen mode, without a Navigation bar, and load the URL.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Save your file.&lt;/p&gt; &#xA;&lt;p&gt;Thatâ€™s it! Time to give it a try:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo startx -- -nocursor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In a few seconds, you should see the website loaded if your Pi is Connected to a TV.&lt;/p&gt; &#xA;&lt;h1&gt;Rotate the Display&lt;/h1&gt; &#xA;&lt;p&gt;Edit file /boot/config.txt&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo nano /boot/config.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add the following line at the end of the file \boot\config.txt&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;display_hdmi_rotate=3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Comment the following line by putting a # in front of it&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dtoverlay=vc4-kms-v3d&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>buildspace/gpt3-writer-starter</title>
    <updated>2022-11-30T01:32:09Z</updated>
    <id>tag:github.com,2022-11-30:/buildspace/gpt3-writer-starter</id>
    <link href="https://github.com/buildspace/gpt3-writer-starter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;buildspace&lt;/h1&gt; &#xA;&lt;h3&gt;Welcome ðŸ‘‹&lt;/h3&gt; &#xA;&lt;p&gt;This is the starter template for the &lt;a href=&#34;https://buildspace.so/builds/ai-writer&#34;&gt;build your own AI writing assistant w/ GPT-3&lt;/a&gt; project.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>NoName3915/api</title>
    <updated>2022-11-30T01:32:09Z</updated>
    <id>tag:github.com,2022-11-30:/NoName3915/api</id>
    <link href="https://github.com/NoName3915/api" rel="alternate"></link>
    <summary type="html">&lt;p&gt;4E API DTS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;api&lt;/h1&gt; &#xA;&lt;p&gt;4E API DTS&lt;/p&gt;</summary>
  </entry>
</feed>