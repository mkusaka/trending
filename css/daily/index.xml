<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-20T01:31:41Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>xhunmon/VABlog</title>
    <updated>2023-04-20T01:31:41Z</updated>
    <id>tag:github.com,2023-04-20:/xhunmon/VABlog</id>
    <link href="https://github.com/xhunmon/VABlog" rel="alternate"></link>
    <summary type="html">&lt;p&gt;YUV/PCM/H264/H265/AAC/FFmpeg/Opengl. 这有丰富的音视频开发的学习资源、开发工具、优秀书籍、教程、面试题和开源项目，旨在帮助开发者和爱好者更好地学习、实践和工作。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;为了更好的阅读请前往&lt;a href=&#34;https://xhunmon.github.io/VABlog/&#34;&gt;GitBook&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;欢迎加入QQ技术交流群：389713575&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;一、前言&lt;/h1&gt; &#xA;&lt;p&gt;这里整理有着丰富的音视频开发的学习资源、开发工具、优秀书籍、教程和开源项目，旨在帮助开发者和爱好者更好地学习、实践和工作。而下图是开发处理的过程：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/styles/va_program.jpg&#34; alt=&#34;音视频处理过程&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;二、学习技能&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;语言&lt;/th&gt; &#xA;   &lt;th&gt;重要度&lt;/th&gt; &#xA;   &lt;th&gt;作用&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C/C++&lt;/td&gt; &#xA;   &lt;td&gt;★★★★★&lt;/td&gt; &#xA;   &lt;td&gt;作为底层开发语言，可以实现音视频编码/解码，滤镜等高性能的操作，是音视频开发中最为重要的基础语言之一。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;★★★☆☆&lt;/td&gt; &#xA;   &lt;td&gt;Python 在音视频开发中可以用于快速开发或原型开发，尤其在深度学习及音视频处理应用中表现突出。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Java/Kotlin&lt;/td&gt; &#xA;   &lt;td&gt;★★★☆☆&lt;/td&gt; &#xA;   &lt;td&gt;Java/Kotlin 适用于 Android平台的音视频开发，它们提供了音视频录制、剪辑、播放等 API。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Objective-C/Swift&lt;/td&gt; &#xA;   &lt;td&gt;★★★☆☆&lt;/td&gt; &#xA;   &lt;td&gt;用于MacOS、iOS平台的开发，其开发API包含音视频流的处理和流媒体播放等。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JavaScript&lt;/td&gt; &#xA;   &lt;td&gt;★☆☆☆☆&lt;/td&gt; &#xA;   &lt;td&gt;JavaScript是Web开发的常用编程语言，它的WebRTC技术可以用于浏览器中的音视频流处理和实时通讯。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shell&lt;/td&gt; &#xA;   &lt;td&gt;★☆☆☆☆&lt;/td&gt; &#xA;   &lt;td&gt;脚本编写、系统管理等。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CMake&lt;/td&gt; &#xA;   &lt;td&gt;★☆☆☆☆&lt;/td&gt; &#xA;   &lt;td&gt;跨平台编译、构建工具等。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GLSL&lt;/td&gt; &#xA;   &lt;td&gt;★☆☆☆☆&lt;/td&gt; &#xA;   &lt;td&gt;图形学、OpenGL着色器等。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;三、学习音视频理论知识&lt;/h1&gt; &#xA;&lt;h2&gt;1.重要知识点&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;知识点&lt;/th&gt; &#xA;   &lt;th&gt;重要度&lt;/th&gt; &#xA;   &lt;th&gt;作用&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;YUV/RGB&lt;/td&gt; &#xA;   &lt;td&gt;★★★★★&lt;/td&gt; &#xA;   &lt;td&gt;视频原始（裸流）数据，解码最终显示就是一帧帧YUV数据 。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PCM&lt;/td&gt; &#xA;   &lt;td&gt;★★★★★&lt;/td&gt; &#xA;   &lt;td&gt;音频原始（裸流）数据，解码最终播放的就是PCM数据。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;H.264(AVC)&lt;/td&gt; &#xA;   &lt;td&gt;★★★★★&lt;/td&gt; &#xA;   &lt;td&gt;目前主流的视频编解码协议。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;H.265(HEVC)&lt;/td&gt; &#xA;   &lt;td&gt;★★★☆☆&lt;/td&gt; &#xA;   &lt;td&gt;基于H.264的升级版，大幅度提升了编码大小和质量。因为版权和收费问题没有普及。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AAC&lt;/td&gt; &#xA;   &lt;td&gt;★★★★★&lt;/td&gt; &#xA;   &lt;td&gt;目前主流的音频编解码协议。&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RTMP&lt;/td&gt; &#xA;   &lt;td&gt;★★★☆☆&lt;/td&gt; &#xA;   &lt;td&gt;直播推流，看侧重点&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;封装格式&lt;/td&gt; &#xA;   &lt;td&gt;★★☆☆☆&lt;/td&gt; &#xA;   &lt;td&gt;MP4、AVI、MKV、RMVB、FLV等容器，把音频、视频、字幕等通道封装成一个文件&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;webrtc(VP8)&lt;/td&gt; &#xA;   &lt;td&gt;★★★☆☆&lt;/td&gt; &#xA;   &lt;td&gt;P2P的音视频通话，看侧重点&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OpenGL&lt;/td&gt; &#xA;   &lt;td&gt;★★★☆☆&lt;/td&gt; &#xA;   &lt;td&gt;使用GPU渲染视频，释放宝贵的CPU资源，看侧重点&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;2.书籍推荐&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://item.jd.com/12292642.html&#34;&gt;书：音视频开发进阶指南：基于Android与iOS平台的实践(京东)&lt;/a&gt; ：&lt;strong&gt;第1章　音视频基础概念&lt;/strong&gt;；电子书往最后翻。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://item.jd.com/12467530.html&#34;&gt;书：Android 音视频开发_何俊林(京东)&lt;/a&gt; ：&lt;strong&gt;第1章　音视频基础知识&lt;/strong&gt;；电子书往最后翻。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://item.jd.com/10022441804147.html&#34;&gt;书：新一代视频压缩编码标准-H.264/AVC(第二版)(京东)&lt;/a&gt; : 讲述H.264等编解码原理实现，其中几个算法 &lt;a href=&#34;https://zhuanlan.zhihu.com/p/40356456&#34;&gt;这篇文章&lt;/a&gt;讲的很深刻。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.52im.net/thread-228-1-1.html&#34;&gt;这系列文章通俗易懂讲述编解码的一些知识&lt;/a&gt; 。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;3.实践&lt;/h2&gt; &#xA;&lt;h3&gt;3.1.视音频数据处理入门&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/leixiaohua1020/article/details/18893769&#34;&gt;[总结]视音频编解码技术零基础学习方法&lt;/a&gt; 系列文章，介绍了视音频编解码技术大体上原理和流程，通俗易懂。包括以下文章：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/leixiaohua1020/article/details/50534150&#34;&gt;视音频数据处理入门：RGB、YUV像素数据处理&lt;/a&gt; ：视频就是由它们组成的。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/leixiaohua1020/article/details/50534316&#34;&gt;视音频数据处理入门：PCM音频采样数据处理&lt;/a&gt; ：音频就是由它们组成的。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/leixiaohua1020/article/details/50534369&#34;&gt;视音频数据处理入门：H.264视频码流解析&lt;/a&gt; ：视频编码技术的一种（现代音视频开发必须掌握）。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/leixiaohua1020/article/details/50535042&#34;&gt;视音频数据处理入门：AAC音频码流解析&lt;/a&gt; ：音频编码技术的一种（现代音视频开发必须掌握）。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/leixiaohua1020/article/details/50535082&#34;&gt;视音频数据处理入门：FLV封装格式解析&lt;/a&gt; ：音视频封装格式的一种。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/leixiaohua1020/article/details/50535230&#34;&gt;视音频数据处理入门：UDP-RTP协议解析&lt;/a&gt; ：音视频协议的一种。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3.2.完整的RTMP推送小项目&lt;/h3&gt; &#xA;&lt;p&gt;此过程，体现从0~1。0是采集到的原始视频和音频数据，进行编码、封装，变为1（文件）。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/RTMP/README.md&#34;&gt;直播推流全过程：总纲&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/RTMP/1-yuv.md&#34;&gt;直播推流全过程：视频数据源之YUV&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/RTMP/2-pcm.md&#34;&gt;直播推流全过程：音频数据源之PCM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/RTMP/3-h264.md&#34;&gt;直播推流全过程：视频编码之H.264&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/RTMP/4-aac.md&#34;&gt;直播推流全过程：音频编码之AAC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/RTMP/5-rtmp.md&#34;&gt;直播推流全过程：直播推流编码之RTMP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/RTMP/h264-descriptor.md&#34;&gt;其他：H.264符号描述&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/RTMP/6-optimize.md&#34;&gt;其他：直播优化基础&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3.3.播放器小项目&lt;/h3&gt; &#xA;&lt;p&gt;此过程，体现从1~0。与3.2正好相反，把封装的文件(网络数据)通过解封装和解码，得到原始的裸数据（一帧帧图片）进行播放。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/AFPlayer/README.md&#34;&gt;AFPlayer项目&lt;/a&gt; Android实现FFmpeg、OpenSL ES、OpenGL SE、MediaCodec等，实现简单的播放器，主要体现出相关知识点的使用。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;四、学习过程的分析工具&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;工具&lt;/th&gt; &#xA;   &lt;th&gt;作用&lt;/th&gt; &#xA;   &lt;th&gt;下载地址&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;VideoEye&lt;/td&gt; &#xA;   &lt;td&gt;来自雷神的强大实时视频码流分析软件。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://blog.csdn.net/leixiaohua1020/article/details/34553607&#34;&gt;地址&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Codecian&lt;/td&gt; &#xA;   &lt;td&gt;H264/H265等分析工具（跨平台）。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://codecian.com/&#34;&gt;地址&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;H264Visa&lt;/td&gt; &#xA;   &lt;td&gt;H.264/AVC实时视频分析工具。&lt;/td&gt; &#xA;   &lt;td&gt;（略）&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Elecard StreamEye&lt;/td&gt; &#xA;   &lt;td&gt;编码视频的可视化表现，流结构分析，这些流是MPEG-1/2/4 or AVC/H.264 VES(视频基本流)、SS（MPEG1的系统流）、PS(MPEG2的程序流)、TS(mpeg2的传输流)。&lt;/td&gt; &#xA;   &lt;td&gt;（略）&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Hxd Hex Editor&lt;/td&gt; &#xA;   &lt;td&gt;16进制查看工具。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://mh-nexus.de/en/downloads.php?product=HxD20&#34;&gt;地址&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ffprobe&lt;/td&gt; &#xA;   &lt;td&gt;ffmpeg中自带的分析工具，非常强大，不过上手有难度。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/FFmpeg/18_command.md&#34;&gt;参考&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;五、重点开发工具/组件/开源库&lt;/h1&gt; &#xA;&lt;h2&gt;1.FFmpeg&lt;/h2&gt; &#xA;&lt;p&gt;音视频开发是绕不开FFmpeg的，因为它是一个&#34;集大成者&#34;，里面已经包含或可集成现代几乎所有的音视频技术（库）。&lt;/p&gt; &#xA;&lt;h3&gt;1.1.学习途径&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://ffmpeg.org/ffmpeg.html&#34;&gt;阅读官方文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;学习官方例子（源码中&lt;code&gt;doc/examples/xxx&lt;/code&gt;）&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/leixiaohua1020/article/details/15811977&#34;&gt;[总结]FFMPEG视音频编解码零基础学习方法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ffmpeg.xianwaizhiyin.net/&#34;&gt;FFmpeg原理（推荐）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leandromoreira/ffmpeg-libav-tutorial/raw/master/README-cn.md&#34;&gt;FFmpeg 中文文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;书籍（电子书往最后翻）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://item.jd.com/12349436.html&#34;&gt;1.FFmpeg从入门到精通(京东)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://download.csdn.net/detail/leixiaohua1020/6377803&#34;&gt;2.FFMPEG_FFPLAY源码剖析(CSDN)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://item.jd.com/12292642.html&#34;&gt;3.音视频开发进阶指南：基于Android与iOS平台的实践(京东)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://item.jd.com/12467530.html&#34;&gt;4.Android 音视频开发_何俊林(京东)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;1.2.学习路线&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/leixiaohua1020/article/details/15811977&#34;&gt;这里不推荐直接学习雷神的 [总结]FFMPEG视音频编解码零基础学习方法，建议是通过在学习FFmpeg官方例子中进行学习，避免先入为主使用了过时的API。&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;1.2.1.源码编译&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/FFmpeg/03_build_ffmpeg.md&#34;&gt;编译ffmpeg4.2.2&lt;/a&gt;通过这篇文章我们基本可以编译出我们想要的FFmpeg库&lt;/p&gt; &#xA;&lt;h4&gt;1.2.2.源码阅读&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;源码导入：&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/FFmpeg/04_import_ffmpeg.md&#34;&gt;FFmpeg导入到Clion（MacOS）&lt;/a&gt; 、 &lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/FFmpeg/05_source.md&#34;&gt;使用Clion阅读FFmpeg源码（支持跳转）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;阅读参考：&lt;a href=&#34;https://download.csdn.net/detail/leixiaohua1020/6377803&#34;&gt;FFMPEG_FFPLAY源码剖析(CSDN)&lt;/a&gt; 、&lt;a href=&#34;https://blog.csdn.net/leixiaohua1020/article/details/44220151&#34;&gt;雷神的FFmpeg源代码系列&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;1.2.3.学习官方例子&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/FFmpeg/06_struct.md&#34;&gt;FFmpeg重要结构体（转载）&lt;/a&gt; ，因为在学习FFmpeg中，必须得知道结构体中重要参数的含义，否则举步维艰。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/FFmpeg/08_demuxing.md&#34;&gt;FFmpeg Demuxing（解封装）&lt;/a&gt; 对应 &lt;code&gt;doc/examples/demuxing_decoding.c&lt;/code&gt; 中的解封装部分。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/FFmpeg/09_muxing.md&#34;&gt;FFmpeg Muxing（封装）&lt;/a&gt; 对应 &lt;code&gt;doc/examples/muxing.c&lt;/code&gt; 。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/FFmpeg/10_remuxing.md&#34;&gt;FFmpeg Remuxing（重新封装）&lt;/a&gt; 对应 &lt;code&gt;doc/examples/remuxing.c&lt;/code&gt; 。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/FFmpeg/11_decode.md&#34;&gt;FFmpeg Decode（解码）&lt;/a&gt; 对应 &lt;code&gt;doc/examples/decode_audio.c&lt;/code&gt; 和 &lt;code&gt;doc/examples/decode_video.c&lt;/code&gt; 。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/FFmpeg/12_encode.md&#34;&gt;FFmpeg Encode（编码）&lt;/a&gt; 对应 &lt;code&gt;doc/examples/encode_audio.c&lt;/code&gt; 和 &lt;code&gt;doc/examples/encode_video.c&lt;/code&gt; 。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/FFmpeg/13_transfer.md&#34;&gt;FFmpeg 简单实现转码&lt;/a&gt; 汇总解封装、解码、编码、封装放到一起方便理解 。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/FFmpeg/14_filter_v.md&#34;&gt;FFmpeg Filter和SDL（Video）&lt;/a&gt; 对应 &lt;code&gt;doc/examples/filtering_video.c&lt;/code&gt; 。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/FFmpeg/15_filter_a.md&#34;&gt;FFmpeg Filter和SDL（Audio）&lt;/a&gt; 对应 &lt;code&gt;doc/examples/filtering_video.c&lt;/code&gt; 。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/FFmpeg/16_transcode.md&#34;&gt;FFmpeg Transcode(转码)&lt;/a&gt; 对应 &lt;code&gt;doc/examples/transcoding.c&lt;/code&gt; 。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/FFmpeg/19_swscale.md&#34;&gt;FFmpeg Swscale（图像转换）&lt;/a&gt; 对应 &lt;code&gt;doc/examples/scaling_video.c&lt;/code&gt; 。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;1.2.4.音视频同步&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/FFmpeg/17_sync.md&#34;&gt;FFmpeg 音视频同步处理&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;1.2.5.FFmpeg相关&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/FFmpeg/18_command.md&#34;&gt;FFmpeg 命令使用指南：分析ffmpeg、ffprobe、ffplay工具使用文档，关联官方文档，以及滤镜、协议、视频合并、各种播放参数等相关介绍&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2 OpenGL&lt;/h2&gt; &#xA;&lt;p&gt;OpenGL使用GPU渲染视频，释放宝贵的CPU资源，学习它是必不可少的。但是，正如&lt;a href=&#34;https://blog.csdn.net/leixiaohua1020/article/details/40246783&#34;&gt;雷神所说&lt;/a&gt; ：作为一个搞视频技术的人研究OpenGL，需要耗费大量时间和精力，这样学习不是很经济。所以推荐只学习有关视频渲染相关知识。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/OpenGL&#34;&gt;OpenGL介绍，和相关程序库&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/leixiaohua1020/article/details/40301179&#34;&gt;纹理有关的基础知识&lt;/a&gt; 、&lt;a href=&#34;https://blog.csdn.net/leixiaohua1020/article/details/40333583&#34;&gt;OpenGL播放RGB/YUV&lt;/a&gt; 、&lt;a href=&#34;https://blog.csdn.net/leixiaohua1020/article/details/40379845&#34;&gt;OpenGL播放YUV420P（通过Texture，使用Shader）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.google.cn/guide/topics/graphics/opengl?hl=zh_cn&#34;&gt;Android OpenGL ES官方文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LearnOpenGL-CN/LearnOpenGL-CN&#34;&gt;LearnOpenGL-CN&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Canber/OpenGL-ES-for-android&#34;&gt;OpenGL电子书下载&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/OpenGL/01_opengl.md&#34;&gt;OpenGL基础知识&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/OpenGL/02_glsl.md&#34;&gt;GLSL（着色器语言）中文手册&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/githubhaohao/NDK_OpenGLES_3_0&#34;&gt;Android OpenGL ES 3.0 从入门到精通系统性学习教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;OpenGL ES推荐：WebGL编程指南（资源见下）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;3.音频相关处理库&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;库名称&lt;/th&gt; &#xA;   &lt;th&gt;作用&lt;/th&gt; &#xA;   &lt;th&gt;平台&lt;/th&gt; &#xA;   &lt;th&gt;项目地址&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SoX&lt;/td&gt; &#xA;   &lt;td&gt;SoX 可以进行音频处理，如音调、声速、混响、后暂式等等&lt;/td&gt; &#xA;   &lt;td&gt;Linux、macOS、Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/chirlu/sox&#34;&gt;https://github.com/chirlu/sox&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Essentia&lt;/td&gt; &#xA;   &lt;td&gt;Essentia 可以进行音频处理、分析、提取等，提供了很多现成的功能算法&lt;/td&gt; &#xA;   &lt;td&gt;Windows、macOS、Linux、Android、iOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MTG/essentia&#34;&gt;https://github.com/MTG/essentia&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Spleeter&lt;/td&gt; &#xA;   &lt;td&gt;Spleeter 是一款分离歌曲音轨的库，可以分离歌曲中的伴奏、人声等（如：不带背景乐的伴奏）&lt;/td&gt; &#xA;   &lt;td&gt;Linux、macOS、Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/deezer/spleeter&#34;&gt;https://github.com/deezer/spleeter&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;libsndfile&lt;/td&gt; &#xA;   &lt;td&gt;libsndfile 可以读写、处理多种音频文件，支持变速、变调等处理&lt;/td&gt; &#xA;   &lt;td&gt;Linux、macOS、Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.mega-nerd.com/libsndfile/&#34;&gt;http://www.mega-nerd.com/libsndfile/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Rubber Band Audio&lt;/td&gt; &#xA;   &lt;td&gt;Rubber Band Audio 可以进行音频处理，支持变速、变调、变形和时间拉伸等多种处理操作&lt;/td&gt; &#xA;   &lt;td&gt;Linux、macOS、Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://breakfastquay.com/rubberband/&#34;&gt;https://breakfastquay.com/rubberband/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;librubberband&lt;/td&gt; &#xA;   &lt;td&gt;librubberband 是 Rubber Band Audio 的 C++ 接口，简化了音频处理操作。&lt;/td&gt; &#xA;   &lt;td&gt;Linux、macOS、Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/breakfastquay/rubberband/tree/master/src&#34;&gt;https://github.com/breakfastquay/rubberband/tree/master/src&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SoundTouch&lt;/td&gt; &#xA;   &lt;td&gt;SoundTouch 可用进行音频连续变速变调处理，包括作品（“chipway/Pydub-Playground”），可实现歌曲同步播放。&lt;/td&gt; &#xA;   &lt;td&gt;Windows、macOS、Linux、Android、iOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gitlab.com/soundtouch/soundtouch&#34;&gt;https://gitlab.com/soundtouch/soundtouch&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sonic&lt;/td&gt; &#xA;   &lt;td&gt;Sonic 可实现音频变速、变调等处理，运用于 播客、游戏等领域。&lt;/td&gt; &#xA;   &lt;td&gt;Windows、macOS、Linux、Android、iOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/waywardgeek/sonic&#34;&gt;https://github.com/waywardgeek/sonic&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Oboe&lt;/td&gt; &#xA;   &lt;td&gt;Oboe是一个C++库，它使在Android上建立高性能的音频应用变得容易。&lt;/td&gt; &#xA;   &lt;td&gt;Android&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/google/oboe&#34;&gt;https://github.com/google/oboe&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;4.视频相关处理库&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;库名称&lt;/th&gt; &#xA;   &lt;th&gt;作用&lt;/th&gt; &#xA;   &lt;th&gt;平台&lt;/th&gt; &#xA;   &lt;th&gt;项目地址&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FFmpeg&lt;/td&gt; &#xA;   &lt;td&gt;FFmpeg 可以转换视频文件格式、添加滤镜、剪辑、提取音频等功能&lt;/td&gt; &#xA;   &lt;td&gt;Linux、macOS、Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/FFmpeg/FFmpeg&#34;&gt;https://github.com/FFmpeg/FFmpeg&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Libav&lt;/td&gt; &#xA;   &lt;td&gt;libav 同样可以转换视频文件格式、添加滤镜、剪辑、提取音频等功能，是 FFmpeg 的一个分支版本&lt;/td&gt; &#xA;   &lt;td&gt;Linux、macOS、Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://libav.org/&#34;&gt;https://libav.org/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GStreamer&lt;/td&gt; &#xA;   &lt;td&gt;GStreamer 是一个流媒体框架，支持流式传输视频文件并进行处理，可以添加滤镜、编解码、格式转换等功能&lt;/td&gt; &#xA;   &lt;td&gt;Linux、macOS、Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gstreamer.freedesktop.org/&#34;&gt;https://gstreamer.freedesktop.org/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MLT Framework&lt;/td&gt; &#xA;   &lt;td&gt;MLT Framework 可以用于视频混合、转换、添加滤镜、效果等，也是 Kdenlive 软件所使用的引擎&lt;/td&gt; &#xA;   &lt;td&gt;Linux、macOS、Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mltframework/&#34;&gt;https://github.com/mltframework/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OpenCV&lt;/td&gt; &#xA;   &lt;td&gt;OpenCV 是一个计算机视觉库，但也支持读取、写入视频文件、添加滤镜、实现对象追踪等功能&lt;/td&gt; &#xA;   &lt;td&gt;Linux、macOS、Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/opencv/opencv&#34;&gt;https://github.com/opencv/opencv&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Blender&lt;/td&gt; &#xA;   &lt;td&gt;Blender 是一个 3D 制作软件，支持读取、写入视频文件、添加滤镜、实现对象制作等功能&lt;/td&gt; &#xA;   &lt;td&gt;Linux、macOS、Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.blender.org/&#34;&gt;https://www.blender.org/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MLV App&lt;/td&gt; &#xA;   &lt;td&gt;MLV App 主要用于处理和编辑 Magic Lantern 的电影录制格式，可以进行视频转换和色彩分级等&lt;/td&gt; &#xA;   &lt;td&gt;Linux、macOS、Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://bitbucket.org/dmilligan/mlv_app/&#34;&gt;https://bitbucket.org/dmilligan/mlv_app/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HandBrake&lt;/td&gt; &#xA;   &lt;td&gt;HandBrake 是一个跨平台的视频转换器，支持多种输入、输出格式，可以添加滤镜、转换分辨率等操作&lt;/td&gt; &#xA;   &lt;td&gt;Linux、macOS、Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/HandBrake/HandBrake&#34;&gt;https://github.com/HandBrake/HandBrake&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Avidemux&lt;/td&gt; &#xA;   &lt;td&gt;Avidemux 是一款视频编辑器，支持许多基本的编辑功能，如修建、编码、添加滤镜等&lt;/td&gt; &#xA;   &lt;td&gt;Linux、macOS、Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://avidemux.sourceforge.net/&#34;&gt;http://avidemux.sourceforge.net/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shotcut&lt;/td&gt; &#xA;   &lt;td&gt;Shotcut 是一个跨平台的视频编辑器，支持多种基本编辑功能，并提供了丰富的视频滤镜&lt;/td&gt; &#xA;   &lt;td&gt;Linux、macOS、Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.shotcut.org/&#34;&gt;https://www.shotcut.org/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Lightworks&lt;/td&gt; &#xA;   &lt;td&gt;Lightworks 是一款视频编辑软件，支持多种高级编辑功能，如多个视频轨道、音频同步、字幕、剪辑等&lt;/td&gt; &#xA;   &lt;td&gt;Linux、macOS、Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.lwks.com/&#34;&gt;https://www.lwks.com/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Kino&lt;/td&gt; &#xA;   &lt;td&gt;Kino 是一款开源的视频编辑器，支持视频的剪辑、滤镜、导出等&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.kinodv.org/&#34;&gt;http://www.kinodv.org/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cinelerra GG&lt;/td&gt; &#xA;   &lt;td&gt;Cinelerra GG 是截至目前正在活跃开发的 Cinelerra 的一个独特分支，具有更多先进的编辑功能&lt;/td&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://cinelerra-gg.org/&#34;&gt;https://cinelerra-gg.org/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Flowblade&lt;/td&gt; &#xA;   &lt;td&gt;Flowblade 是一个跨平台的视频编辑器，具有自动编辑、视频剪辑、渐变调色、音轨图、文本动画等功能&lt;/td&gt; &#xA;   &lt;td&gt;Linux、macOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jliljebl/flowblade&#34;&gt;https://github.com/jliljebl/flowblade&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Olive&lt;/td&gt; &#xA;   &lt;td&gt;Olive 是一款跨平台的视频编辑器，支持多个视频、音频和图像轨道，具有类似 Adobe Premiere 和 Final Cut Pro 等视频编辑器的界面&lt;/td&gt; &#xA;   &lt;td&gt;Linux、macOS、Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.olivevideoeditor.org/&#34;&gt;https://www.olivevideoeditor.org/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;5.其他常用库&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;库名称&lt;/th&gt; &#xA;   &lt;th&gt;描述&lt;/th&gt; &#xA;   &lt;th&gt;作用平台&lt;/th&gt; &#xA;   &lt;th&gt;项目地址&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ARToolKit&lt;/td&gt; &#xA;   &lt;td&gt;一个用于创建增强现实体验的开源跟踪库&lt;/td&gt; &#xA;   &lt;td&gt;多平台&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/artoolkit/ARToolKit5/&#34;&gt;https://github.com/artoolkit/ARToolKit5/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Kurento&lt;/td&gt; &#xA;   &lt;td&gt;可以集成WebRTC和媒体服务器的平台&lt;/td&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.kurento.org/&#34;&gt;https://www.kurento.org/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Webrtc&lt;/td&gt; &#xA;   &lt;td&gt;实时通信的开源项目，包括音频、视频和数据通信&lt;/td&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://webrtc.org/&#34;&gt;https://webrtc.org/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;VLC&lt;/td&gt; &#xA;   &lt;td&gt;一个免费的开源跨平台媒体播放器和框架，可播放大多数多媒体文件&lt;/td&gt; &#xA;   &lt;td&gt;多平台&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.videolan.org/vlc/index.html&#34;&gt;https://www.videolan.org/vlc/index.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ExoPlayer&lt;/td&gt; &#xA;   &lt;td&gt;一个可扩展的Android媒体播放器，包括支持DASH和HLS的内置组件&lt;/td&gt; &#xA;   &lt;td&gt;Android&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/google/ExoPlayer&#34;&gt;https://github.com/google/ExoPlayer&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Vitamio&lt;/td&gt; &#xA;   &lt;td&gt;Android和iOS的流媒体解决方案&lt;/td&gt; &#xA;   &lt;td&gt;Android，iOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.vitamio.org/en/&#34;&gt;https://www.vitamio.org/en/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AVPlayer&lt;/td&gt; &#xA;   &lt;td&gt;一个iOS播放器框架，支持本地和网络音频和视频文件&lt;/td&gt; &#xA;   &lt;td&gt;iOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://developer.apple.com/documentation/avfoundation/avplayer&#34;&gt;https://developer.apple.com/documentation/avfoundation/avplayer&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FFmpegKit&lt;/td&gt; &#xA;   &lt;td&gt;FFmpeg库的原生iOS和Android包装器&lt;/td&gt; &#xA;   &lt;td&gt;iOS，Android&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/tanersener/ffmpeg-kit&#34;&gt;https://github.com/tanersener/ffmpeg-kit&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;libVLC&lt;/td&gt; &#xA;   &lt;td&gt;适用于Android、iOS、tvOS和macOS的VLC音视频框架&lt;/td&gt; &#xA;   &lt;td&gt;Android，iOS，tvOS，macOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://code.videolan.org/videolan/libvlc-framework&#34;&gt;https://code.videolan.org/videolan/libvlc-framework&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AVKit&lt;/td&gt; &#xA;   &lt;td&gt;一个macOS框架，提供音频和视频播放和处理功能&lt;/td&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://developer.apple.com/documentation/avkit&#34;&gt;https://developer.apple.com/documentation/avkit&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Unity Video Player&lt;/td&gt; &#xA;   &lt;td&gt;一种用于在游戏中播放视频的Unity组件&lt;/td&gt; &#xA;   &lt;td&gt;Unity&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.unity3d.com/Manual/class-VideoPlayer.html&#34;&gt;https://docs.unity3d.com/Manual/class-VideoPlayer.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Three.js&lt;/td&gt; &#xA;   &lt;td&gt;一个基于WebGL的跨平台JavaScript库，可用于创建和显示3D计算机图形&lt;/td&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://threejs.org/&#34;&gt;https://threejs.org/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;A-Frame&lt;/td&gt; &#xA;   &lt;td&gt;一个用于构建虚拟现实和增强现实的Web框架&lt;/td&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://aframe.io/&#34;&gt;https://aframe.io/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WebVR&lt;/td&gt; &#xA;   &lt;td&gt;一种可用于任何Web浏览器的虚拟现实解决方案&lt;/td&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://webvr.info/&#34;&gt;https://webvr.info/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Web Audio API&lt;/td&gt; &#xA;   &lt;td&gt;JavaScript API，用于处理和操纵音频&lt;/td&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API&#34;&gt;https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tone.js&lt;/td&gt; &#xA;   &lt;td&gt;用于Web音乐软件的框架&lt;/td&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://tonejs.github.io/&#34;&gt;https://tonejs.github.io/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Pygame&lt;/td&gt; &#xA;   &lt;td&gt;用于开发2D游戏的Python库&lt;/td&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.pygame.org/news&#34;&gt;https://www.pygame.org/news&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OpenAL&lt;/td&gt; &#xA;   &lt;td&gt;多平台上的跨API的3D音频库&lt;/td&gt; &#xA;   &lt;td&gt;多平台&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.openal.org/&#34;&gt;https://www.openal.org/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SDL_mixer&lt;/td&gt; &#xA;   &lt;td&gt;用于游戏和其他多媒体应用程序的音频库&lt;/td&gt; &#xA;   &lt;td&gt;多平台&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.libsdl.org/projects/SDL_mixer/&#34;&gt;https://www.libsdl.org/projects/SDL_mixer/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Houdini&lt;/td&gt; &#xA;   &lt;td&gt;针对3D艺术家和游戏开发人员的3D建模、动画和视觉效果软件&lt;/td&gt; &#xA;   &lt;td&gt;多平台&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.sidefx.com/&#34;&gt;https://www.sidefx.com/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Natron&lt;/td&gt; &#xA;   &lt;td&gt;免费的、开源的视频合成软件&lt;/td&gt; &#xA;   &lt;td&gt;多平台&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://natrongithub.github.io/&#34;&gt;https://natrongithub.github.io/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OBS Studio&lt;/td&gt; &#xA;   &lt;td&gt;免费、开源、跨平台的流媒体和录制软件&lt;/td&gt; &#xA;   &lt;td&gt;多平台&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://obsproject.com/&#34;&gt;https://obsproject.com/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GIMP&lt;/td&gt; &#xA;   &lt;td&gt;免费的开源图像编辑器&lt;/td&gt; &#xA;   &lt;td&gt;多平台&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.gimp.org/&#34;&gt;https://www.gimp.org/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Inkscape&lt;/td&gt; &#xA;   &lt;td&gt;一个用于创建和编辑矢量图形的开源软件&lt;/td&gt; &#xA;   &lt;td&gt;多平台&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://inkscape.org/&#34;&gt;https://inkscape.org/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MediaInfo&lt;/td&gt; &#xA;   &lt;td&gt;一个开源的多媒体信息解析器，用于获取媒体文件的各种信息&lt;/td&gt; &#xA;   &lt;td&gt;多平台&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://mediaarea.net/en/MediaInfo&#34;&gt;https://mediaarea.net/en/MediaInfo&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;libde265&lt;/td&gt; &#xA;   &lt;td&gt;一种异步HEVC解码器库&lt;/td&gt; &#xA;   &lt;td&gt;多平台&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/strukturag/libde265&#34;&gt;https://github.com/strukturag/libde265&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;libvpx&lt;/td&gt; &#xA;   &lt;td&gt;适用于WebRTC、VP8和VP9的开源视频编解码器&lt;/td&gt; &#xA;   &lt;td&gt;多平台&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/webmproject/libvpx&#34;&gt;https://github.com/webmproject/libvpx&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;x264&lt;/td&gt; &#xA;   &lt;td&gt;一种高质量的H.264 / AVC编码器&lt;/td&gt; &#xA;   &lt;td&gt;多平台&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.videolan.org/developers/x264.html&#34;&gt;https://www.videolan.org/developers/x264.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;x265&lt;/td&gt; &#xA;   &lt;td&gt;一种用于UHD编码的开源HEVC编码器&lt;/td&gt; &#xA;   &lt;td&gt;多平台&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://bitbucket.org/multicoreware/x265_git&#34;&gt;https://bitbucket.org/multicoreware/x265_git&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Theora&lt;/td&gt; &#xA;   &lt;td&gt;一种开源视频编解码器&lt;/td&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.theora.org/&#34;&gt;https://www.theora.org/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ogg&lt;/td&gt; &#xA;   &lt;td&gt;一种开源多媒体容器格式，通常与Theora和Vorbis一起使用&lt;/td&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.xiph.org/ogg/&#34;&gt;https://www.xiph.org/ogg/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Vorbis&lt;/td&gt; &#xA;   &lt;td&gt;一种开源音频编解码器&lt;/td&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://xiph.org/vorbis/&#34;&gt;https://xiph.org/vorbis/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WebVTT&lt;/td&gt; &#xA;   &lt;td&gt;一种用于视频文本替代品的Web文本轨道&lt;/td&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://w3c.github.io/webvtt/&#34;&gt;https://w3c.github.io/webvtt/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PyAV&lt;/td&gt; &#xA;   &lt;td&gt;基于FFmpeg的Python封装，可用于解码、编码和处理音频和视频&lt;/td&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pyav.org/&#34;&gt;https://pyav.org/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FFpyplayer&lt;/td&gt; &#xA;   &lt;td&gt;Python+FFmpeg解决方案，在Python中播放音频和视频&lt;/td&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ffpyplayer.readthedocs.io/en/latest/&#34;&gt;https://ffpyplayer.readthedocs.io/en/latest/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SoundManager2&lt;/td&gt; &#xA;   &lt;td&gt;一个轻型、大众化的JavaScript音频播放器库&lt;/td&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/scottschiller/SoundManager2&#34;&gt;https://github.com/scottschiller/SoundManager2&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;wave.js&lt;/td&gt; &#xA;   &lt;td&gt;用于简化Web音频的JavaScript库&lt;/td&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jaz303/waveform-data&#34;&gt;https://github.com/jaz303/waveform-data&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Howler.js&lt;/td&gt; &#xA;   &lt;td&gt;用于现代Web音频的JavaScript音频库&lt;/td&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/goldfire/howler.js&#34;&gt;https://github.com/goldfire/howler.js&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Web Audio DAW&lt;/td&gt; &#xA;   &lt;td&gt;用于在浏览器中创建数字音频工作站（DAW）的Web Audio Editor&lt;/td&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://beryju.org/web&#34;&gt;https://beryju.org/web&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;六、实践项目&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/AFPlayer/README.md&#34;&gt;AFPlayer项目&lt;/a&gt; Android实现FFmpeg、OpenSL ES、OpenGL SE、MediaCodec等，实现简单的播放器，主要体现出相关知识点的使用。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xhunmon/OpenGLES&#34;&gt;OpenGLES基本使用&lt;/a&gt; ：点、线、三角形、四边形、矩阵、纹理（贴纸）、摄像头显示、FBO、EGL、滤镜叠加、视频流编码输出。&lt;/li&gt; &#xA; &lt;li&gt;直接阅读上方优秀开源库效果更佳...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;七、最后&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xhunmon/VABlog/main/MustRead/03_fst.md&#34;&gt;面试题整理：祝君拿到满意的offer！&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://pan.baidu.com/s/1Y5PFgbVu3W0ELBgQnrHNYA&#34;&gt;音视频学习资料&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;创作皆不易，有条件的朋友请支持原版，谢谢！&lt;/strong&gt; 密码:lqi9&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;    网易视频&#xA;    价值几千块的音视频视频&#xA;    动脑视频&#xA;    C++侯捷视频&#xA;    音视频开发进阶指南：基于Android与iOS平台的实践.pdf&#xA;    音视频05-H265码流分析.pdf&#xA;    音视频04-H265之CU TU PU划分.pdf&#xA;    音视频03-H265深度解析.pdf&#xA;    音视频02-H265编码与H264区别.pdf&#xA;    音视频01-H265编码.pdf&#xA;    新一代视频压缩编码标准-H.264_AVC(第二版).pdf&#xA;    数字信号处理教程（第四版）.pdf&#xA;    视频技术手册(第5版).pdf&#xA;    《FFmpeg从入门到精通》.pdf&#xA;    《FFmpeg_Basics(260页)》.pdf&#xA;    webrtc介绍.pdf&#xA;    WebGL编程指南.zip&#xA;    video_file_format_spec_v10_1.pdf&#xA;    STL源码剖析简体中文完整版(清晰扫描带目录).pdf&#xA;    SDL2-API手册.doc&#xA;    rtmp规范翻译1.0.docx&#xA;    rtmp_specification_1.0.pdf&#xA;    rtmp.part3.Commands-Messages.pdf&#xA;    rtmp.part2.Message-Formats.pdf&#xA;    rtmp.part1.Chunk-Stream.pdf&#xA;    jni基础介绍.pdf&#xA;    OpenGL ES 2.0 编程指南 中文版.pdf&#xA;    OpenGL+着色语言第三版.pdf&#xA;    OpenGL.ES.2.0.Programming.Guide.pdf&#xA;    OpenGL着色语言.pdf&#xA;    ISO_IEC_14496-14_2003-11-15.pdf&#xA;    ISO_IEC-14496-3-2009.pdf&#xA;    hls-mpeg-ts-VB_WhitePaper_TransportStreamVSProgramStream_rd2.pdf&#xA;    hls-mpeg-ts-iso13818-1.pdf&#xA;    H.264官方中文版.pdf&#xA;    H.264_MPEG-4-Part-10-White-Paper.pdf&#xA;    H.264-AVC-ISO_IEC_14496-15.pdf&#xA;    H.264-AVC-ISO_IEC_14496-10.pdf&#xA;    ffmpeg命令大全.pdf&#xA;    FFmpeg命令大全.docx&#xA;    ffmpeg翻译文档.pdf&#xA;    FFMPEG_FFPLAY源码剖析.7z&#xA;    CMake中文手册.pdf&#xA;    Cmake在Android studio Ndk使用.pdf&#xA;    C++ Primer(第5版)中文版.pdf&#xA;    C++ Primer Plus（第6版）中文版.azw3&#xA;    C Primer中文版 第五版 .pdf&#xA;    Android 音视频开发_何俊林.pdf&#xA;    amf3_spec_121207.pdf&#xA;    amf0_spec_121207.pdf&#xA;    Advanced C and C++ Compiling.pdf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;【重点声明】此系列仅用于学习，禁止用于非法攻击，非法传播。一切遵守《网络安全法》。且如有发现商用，必纠法律责任。如有侵权请联系我（邮箱：&lt;a href=&#34;mailto:xhunmon@126.com&#34;&gt;xhunmon@126.com&lt;/a&gt;）进行删除。&lt;/strong&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Discord-Custom-Covers/usrbg</title>
    <updated>2023-04-20T01:31:41Z</updated>
    <id>tag:github.com,2023-04-20:/Discord-Custom-Covers/usrbg</id>
    <link href="https://github.com/Discord-Custom-Covers/usrbg" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A pure CSS database of user requested backgrounds for @discord.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;USRBG&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;A database of custom user requested backgrounds.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img height=&#34;400&#34; align=&#34;center&#34; src=&#34;https://i.imgur.com/HaFW8J6.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Request your own USRBG&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join this Discord Server &amp;gt; &lt;a href=&#34;https://discord.gg/TeRQEPb&#34;&gt;Black Box&lt;/a&gt;, use a bot command in &lt;a href=&#34;https://discord.com/channels/449175561529589761/645627516794699787/&#34;&gt;#background-request&lt;/a&gt; and wait for approval.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;All requests are processed manually&lt;/strong&gt; by a select few theme developers (as of right now). You should expect to &lt;strong&gt;wait a short amount of time before&lt;/strong&gt; your background &lt;strong&gt;is added.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;All requests &lt;strong&gt;MUST&lt;/strong&gt; be hosted on &lt;code&gt;i.imgur.com&lt;/code&gt;, &lt;code&gt;cdn.discordapp.com&lt;/code&gt;, &lt;code&gt;media.discordapp.net&lt;/code&gt; or &lt;code&gt;source.unsplash.com&lt;/code&gt;. Selfhosting will not be allowed, as this causes a security vulnerability when mass-distributing content to users.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;If you are using BetterDiscord, you &lt;strong&gt;MUST have a plugin by &lt;a href=&#34;https://betterdiscord.app/developer/DevilBro&#34;&gt;DevilBro&lt;/a&gt; running&lt;/strong&gt;, as &lt;strong&gt;USRBG requires his &lt;a href=&#34;https://betterdiscord.app/plugin/BDFDB&#34;&gt;library&lt;/a&gt;&lt;/strong&gt; for certain important data attributes. &lt;em&gt;I&#39;ve been nagging zere for while to add attributes to BD natively, but for the time being this is how we have to do it.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to see your banner (Choose one)&lt;/h2&gt; &#xA;&lt;h3&gt;1. Using the Plugin&lt;/h3&gt; &#xA;&lt;p&gt;Save &lt;img src=&#34;https://raw.githubusercontent.com/Strencher/BetterDiscordStuff/master/UserBackgrounds/UserBackgrounds.plugin.js&#34; alt=&#34;this&#34;&gt; and place it in your &lt;strong&gt;plugins&lt;/strong&gt; folder&lt;/p&gt; &#xA;&lt;h3&gt;2. Importing the Database&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;@import url(&#39;https://discord-custom-covers.github.io/usrbg/dist/usrbg.css&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will import the USRBG database. Alone, it&#39;s simply some variables. Some of examples on how it can be utilized can be seen in the &lt;a href=&#34;https://github.com/Discord-Custom-Covers/usrbg/tree/master/snippets&#34;&gt;Snippets&lt;/a&gt; folder of this repo.&lt;/p&gt; &#xA;&lt;p&gt;Importing it is &lt;strong&gt;not required if you have BDFDB.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3. USRBG for Android&lt;/h3&gt; &#xA;&lt;p&gt;Install &lt;img src=&#34;https://github.com/Aliucord/Aliucord&#34; alt=&#34;Aliucord&#34;&gt; then download &lt;img src=&#34;https://github.com/terabyte25/plugins/raw/builds/UserBG.zip?raw=true&#34; alt=&#34;this&#34;&gt; plugin&lt;/p&gt; &#xA;&lt;h2&gt;Known themes that have USRBG built-in:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://betterdiscord.app/theme/AMOLED-Cord&#34;&gt;AMOLED-Cord&lt;/a&gt; by LuckFire&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://betterdiscord.app/theme/BasicBackground&#34;&gt;Basic Background&lt;/a&gt; by DevilBro&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://betterdiscord.app/theme/Black%20Hole&#34;&gt;Black Hole&lt;/a&gt; by monstrousdev&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://betterdiscord.app/theme/Comfy&#34;&gt;Comfy&lt;/a&gt; by Nyria&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://betterdiscord.app/theme/Couve&#34;&gt;Couve&lt;/a&gt; by Nyria and A user&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://betterdiscord.app/theme/Dark%20Matter&#34;&gt;DarkMatter&lt;/a&gt; by Tropical and Hammock&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://betterdiscord.app/theme/deepbluetheme&#34;&gt;deepbluetheme&lt;/a&gt; by OnscreenProton&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://betterdiscord.app/theme/Discord.tv&#34;&gt;Discord.tv&lt;/a&gt; by userMacieG&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://betterdiscord.app/theme/Dark%20Neon&#34;&gt;DiscordDarkNeon&lt;/a&gt; by CommandCrafterHD&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://betterdiscord.app/theme/DiscordNight&#34;&gt;DiscordNight&lt;/a&gt; by KillYoy&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://betterdiscord.app/theme/LilyPichu&#34;&gt;LilyPichu&lt;/a&gt; by Nyria&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://betterdiscord.app/theme/Lode&#34;&gt;Lode&lt;/a&gt; by Leeprky&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://betterdiscord.app/theme/Midnight%20Mars&#34;&gt;Midnight Mars&lt;/a&gt; by LuckFire&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Loremly/Nebula4&#34;&gt;Nebula&lt;/a&gt; by Pavui&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://betterdiscord.app/theme/Quarrel&#34;&gt;Quarrel&lt;/a&gt; by Leeprky&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://betterdiscord.app/theme/Reborn&#34;&gt;Reborn&lt;/a&gt; by monstrousdev&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://betterdiscord.app/theme/Slate&#34;&gt;Slate&lt;/a&gt; by Tropical and Gibbu&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://betterdiscord.app/theme/Slook%20Remastered&#34;&gt;Slook Remastered&lt;/a&gt; by Leeprky&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://betterdiscord.app/theme/Tranquil&#34;&gt;Tranquil&lt;/a&gt; by monstrousdev&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>