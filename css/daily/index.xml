<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-28T01:32:08Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>promise-J/LM-tech-Template</title>
    <updated>2023-04-28T01:32:08Z</updated>
    <id>tag:github.com,2023-04-28:/promise-J/LM-tech-Template</id>
    <link href="https://github.com/promise-J/LM-tech-Template" rel="alternate"></link>
    <summary type="html">&lt;p&gt;jus for testing&lt;/p&gt;&lt;hr&gt;&lt;p&gt;##This is a project template for LMTechub students. ##Few steps to get started&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone the repository in the created folder for your project using: &#34;git clone &amp;lt;repo_link&amp;gt; ./&#34;&lt;/li&gt; &#xA; &lt;li&gt;Run rm -fr .git to destroy any previous git connection with the cloned remote repo&lt;/li&gt; &#xA; &lt;li&gt;From the terminal in your project folder, run the command &#34;npm install&#34; (You should see a generated node_modules folder)&lt;/li&gt; &#xA; &lt;li&gt;create a new branch feature using &#34;git branch feature&#34; then check out to the branch&lt;/li&gt; &#xA; &lt;li&gt;MAKE SURE YOU DO NOT COMMIT TO THE MAIN BRANCH&lt;/li&gt; &#xA; &lt;li&gt;Follow the project layout in adding your HTML, CSS AND Images to the project&lt;/li&gt; &#xA; &lt;li&gt;To test your lint check for HTML run &#34;npm run lint:html&#34;&lt;/li&gt; &#xA; &lt;li&gt;To test your lint check for CSS run &#34;npm run lint:css&#34;&lt;/li&gt; &#xA; &lt;li&gt;To test your lint check for all files (both HTML and CSS) run &#34;npm run lint:all&#34;&lt;/li&gt; &#xA; &lt;li&gt;To fix your lint error/warnings for css files run &#34;npm run fix:lint:css&#34;&lt;/li&gt; &#xA; &lt;li&gt;Only when your HTML and CSS lint check is completed, get started to git, link to your remote repository, commit changes, push changes.&lt;/li&gt; &#xA; &lt;li&gt;After changes have been pushed, make a pull request between the feature branch and the main branch.&lt;/li&gt; &#xA; &lt;li&gt;Submit your code (REPOSITORY URL) through our channel on Slack.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Sight-wcg/layui-theme-dark</title>
    <updated>2023-04-28T01:32:08Z</updated>
    <id>tag:github.com,2023-04-28:/Sight-wcg/layui-theme-dark</id>
    <link href="https://github.com/Sight-wcg/layui-theme-dark" rel="alternate"></link>
    <summary type="html">&lt;p&gt;layui 暗色主题&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;layui-theme-dark&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Sight-wcg/layui-theme-dark/&#34;&gt;Github&lt;/a&gt; | &lt;a href=&#34;https://sight-wcg.github.io/layui-theme-dark/&#34;&gt;Demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;🚧开发中&lt;/p&gt; &#xA;&lt;p&gt;layui 暗色主题&lt;/p&gt; &#xA;&lt;h1&gt;使用&lt;/h1&gt; &#xA;&lt;p&gt;将 &lt;code&gt;dist&lt;/code&gt; 文件夹中的 &lt;code&gt;layui-theme-dark.css&lt;/code&gt; 添加到你的页面，控制 &lt;code&gt;href&lt;/code&gt; 属性切换主题&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/layui@2.8.0-rc.13/dist/css/layui.min.css&#34;&amp;gt;&#xA;&amp;lt;link rel=&#34;stylesheet&#34; href=&#34;./layui-theme-dark.css&#34;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;IE9+&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;使用 &lt;code&gt;dist/layui-theme-dark-legacy.css&lt;/code&gt; 文件，该文件将 CSS 变量转换为实际颜色，并针对 IE 做了一些兼容性优化。 二次定制后如果需要支持 IE，可以通过 PostCSS 插件将 CSS 变量转换为实际颜色，这里有一个 &lt;a href=&#34;https://madlittlemods.github.io/postcss-css-variables/playground/&#34;&gt;Playground&lt;/a&gt; 支持在线转换。 测试 IE9+ 无问题，IE8 下前景色有一些问题，需要单独处理。如果需要支持 IE8，修改前景色相关 CSS 变量，去除透明度，用不同色阶的灰色代替即可。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;使用 &lt;a href=&#34;https://github.com/jhildenbiddle/css-vars-ponyfill&#34;&gt;&lt;code&gt;css-vars-ponyfill&lt;/code&gt;&lt;/a&gt;，测试支持 IE10+，但是限制太多，制作主题切换很痛苦。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>omiras/ping-single-column-exercise-js</title>
    <updated>2023-04-28T01:32:08Z</updated>
    <id>tag:github.com,2023-04-28:/omiras/ping-single-column-exercise-js</id>
    <link href="https://github.com/omiras/ping-single-column-exercise-js" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Abrimos pronto&lt;/h1&gt; &#xA;&lt;p&gt;Debes implementar todo el ejercicio en el fichero &lt;em&gt;main.js&lt;/em&gt; No es necesario modificar index.html.&lt;/p&gt; &#xA;&lt;p&gt;REVISA el fichero index.html para ver la estructura general del documento, sobretodo, de aquellas partes con las que vamos a interactuar&lt;/p&gt; &#xA;&lt;h2&gt;Ejercicio 1&lt;/h2&gt; &#xA;&lt;p&gt;Implementa el JavaScript necesario para que, tras escribir una dirección de correo en el formulario y hagamos click en el botón, desaparezca el formulario y salga el mensaje de confirmación.&lt;/p&gt; &#xA;&lt;p&gt;DE MOMENTO no hay que hacer nada con la variable &lt;em&gt;registeredEmails&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Pasos y pistas&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Selecciona el botón identificado con el id &#39;notify-me&#39;&lt;/li&gt; &#xA;  &lt;li&gt;Asocia el evento click a dicho boton. Por ejemplo, con addEventListener&lt;/li&gt; &#xA;  &lt;li&gt;En la función de ese listener, debes recuperar dos nodos: el nodo del formulario y el nodo del DIV con el mensaje de confirmación&lt;/li&gt; &#xA;  &lt;li&gt;Añade la clase _hidden_ al nodo del formulario&lt;/li&gt; &#xA;  &lt;li&gt;Elimina la clase _hidden_ del nodo del DIV con el mensaje de confirmación&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Ejercicio 2&lt;/h2&gt; &#xA;&lt;p&gt;Modifica tu script para que, en el caso que el mail introducido este contenido en la variable &lt;em&gt;registeredEmails&lt;/em&gt; , todo funciona igual que en el Ejercicio 1, pero además, el texto que debe aparecer es otro: &#39;El usuario con el email {el email que ha introducido el usuaroi} ya existe en nuestro sistema.&#39;&lt;/p&gt; &#xA;&lt;p&gt;¿Cómo obtener el valor de un objeto de tipo &lt;em&gt;input&lt;/em&gt;? : &lt;a href=&#34;https://www.w3schools.com/jsref/prop_text_value.asp&#34;&gt;https://www.w3schools.com/jsref/prop_text_value.asp&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>