<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-28T01:34:11Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cgiesche/streamdeck-homeassistant</title>
    <updated>2023-03-28T01:34:11Z</updated>
    <id>tag:github.com,2023-03-28:/cgiesche/streamdeck-homeassistant</id>
    <link href="https://github.com/cgiesche/streamdeck-homeassistant" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Control your Home Assistant devices from StreamDeck&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;StreamDeck Home-Assistant Plugin&lt;/h1&gt; &#xA;&lt;p&gt;The aim of this project is to allow owners of an elgato StreamDeck to control their entities or display sensor data via their StreamDeck. As the code is very generic, nearly every sensor should work out of the box as well as every service that does not need any more information but the entity id.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cgiesche/streamdeck-homeassistant/master/doc/example.png&#34; alt=&#34;img.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Generic functions for any Home Assistant entity&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Display state and additional attributes via customizable templates&lt;/li&gt; &#xA; &lt;li&gt;Call services when a StreamDeck button is pressed (or hold for some time)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Entities with background-icons&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Switches&lt;/li&gt; &#xA; &lt;li&gt;Lights (same icon as switches)&lt;/li&gt; &#xA; &lt;li&gt;Input Boolean (same icon as switches)&lt;/li&gt; &#xA; &lt;li&gt;Binary Sensors &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Plugs&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Temperature&lt;/li&gt; &#xA; &lt;li&gt;Humidity&lt;/li&gt; &#xA; &lt;li&gt;Pressure&lt;/li&gt; &#xA; &lt;li&gt;Power&lt;/li&gt; &#xA; &lt;li&gt;Voltage&lt;/li&gt; &#xA; &lt;li&gt;Battery-Level&lt;/li&gt; &#xA; &lt;li&gt;Weather&lt;/li&gt; &#xA; &lt;li&gt;Vacuum robots (experimental, tested with Roborock S5)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;Prequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installed Stream-Deck application&lt;/li&gt; &#xA; &lt;li&gt;Connected Stream-Deck&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Via official Stream Deck store&lt;/h3&gt; &#xA;&lt;p&gt;You can find and install this plugin from the &lt;a href=&#34;https://apps.elgato.com/plugins/de.perdoctus.streamdeck.homeassistant&#34;&gt;official Stream Deck Store&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Manual installation (not recommended)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download latest plugin release &lt;a href=&#34;https://github.com/cgiesche/streamdeck-homeassistant/releases&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open downloaded .sdplugin file. It will be automatically installed into your Stream-Deck application &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Note for MacOS users: &lt;a href=&#34;https://www.reddit.com/r/homeassistant/comments/laq2g4/homeassistant_streamdeck_plugin_dynamic_not_just/glu0zep/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3&#34;&gt;manual installation steps&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Configuration&lt;/h1&gt; &#xA;&lt;p&gt;There are two sections on the plugin&#39;s cofiguration panel:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Home Assistant Settings&lt;br&gt; Contains global settings for your Home Assistant installation. Once saved, the settings are used for all Stream-Deck buttons.&lt;/li&gt; &#xA; &lt;li&gt;Entity Settings Contains settings for an individual button.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Home Assistant Settings&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Server URL: &lt;code&gt;ws://your-homeassistant-ip-or-hostname:your-homeassistant-port/api/websocket&lt;/code&gt;, for example (local network) &lt;code&gt;ws://192.126.0.5:8123/api/websocket&lt;/code&gt; or (public, with ssl enabled on default port 443) &lt;code&gt;wss://my-secure-homeassistant.com/api/websocket&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Access Token: An long-lived access-token obtained from your Home Assistant.&lt;br&gt; &lt;em&gt;Long-lived access tokens can be created using the &#34;Long-Lived Access Tokens&#34; section at the bottom of a user&#39;s Home Assistant profile page.&lt;/em&gt; (Quote from &lt;a href=&#34;https://developers.home-assistant.io/docs/auth_api/#long-lived-access-token&#34;&gt;https://developers.home-assistant.io/docs/auth_api/#long-lived-access-token&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;After you saved your Home Assistant Settings, the plugin will automatically try to connect to your Home Assistant installation. If the connection was sucessful, the Entity Settings section should allow you to see and configure your entities.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cgiesche/streamdeck-homeassistant/master/doc/ha_settings.png&#34; alt=&#34;img_1.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Entity Settings&lt;/h2&gt; &#xA;&lt;h3&gt;Basic configuration&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Domain: Home Assistant entities are grouped by domains. Select the domain (for example &#34;switch&#34;) of an entity, you want to configure.&lt;/li&gt; &#xA; &lt;li&gt;Entity: This is the actual entity you are going to configure (for example &#34;Kitchen Light&#34;)&lt;/li&gt; &#xA; &lt;li&gt;Service: The service that will be called when you press the StreamDeck button (green marker at top right corner).&lt;/li&gt; &#xA; &lt;li&gt;Service (long press): The service that will be called every time you press and hold the StreamDeck button for more than about 300ms (blue marker at top right corner).&lt;/li&gt; &#xA; &lt;li&gt;Service Data JSON: JSON formatted data that is sent with your service call when you press a button. Example: &lt;pre&gt;&lt;code&gt;{&#xA;  &#34;brightness&#34;: 120,&#xA;  &#34;rgb_color&#34;: [255, 0, 0]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; If not specified in the JSON, the attribute &lt;code&gt;entity_id&lt;/code&gt; is being added automatically containing the selected entity&#39;s id. You can also specify the target entity_id manually, for example to switch multiple lights at once: &lt;pre&gt;&lt;code&gt;{&#xA;  &#34;entity_id&#34;: [&#xA;    &#34;switch.osram_plug_01_bac00b0a_on_off&#34;,&#xA;    &#34;switch.osram_plug_01_87c00a0a_on_off&#34;&#xA;  ],&#xA;  &#34;brightness&#34;: 120,&#xA;  &#34;rgb_color&#34;: [255, 0, 0]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cgiesche/streamdeck-homeassistant/master/doc/entity_settings.png&#34; alt=&#34;img.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Advanced configuration&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Custom Title: Enable to override the main Title of this button. &lt;strong&gt;You have to clear the main Title field on top to make this work!&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Title Template: A &lt;a href=&#34;https://mozilla.github.io/nunjucks/templating.html&#34;&gt;nunjucks template&lt;/a&gt; that will be used as the button&#39;s title. You can use any of the variables (depending on the selected entity) that are shown below the text-field. For example &lt;code&gt;{{temperature}}°C&lt;/code&gt; or &lt;code&gt;{{friendly_name}}&lt;/code&gt; or (this won&#39;t fit the button, but you get the idea) &lt;code&gt;The pressure is {{pressure}} and the wind speed is {{wind_speed}}.&lt;/code&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;The variable &lt;code&gt;{{state}}&lt;/code&gt; always contains the &#34;main state&#34; of an entity (for example &#34;on&#34; and &#34;off&#34; for buttons or &#34;12.4&#34; for temperature sensors)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;The variable &lt;code&gt;{{unit_of_measurement}}&lt;/code&gt; often contains the ... unit of measurement ... of a sensor&#39;s state (for example &#34;°C&#34; for a temperature sensor)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Custom Labels: Every button can display up to 4 lines of information&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Each line in the text-box represents one line on the button&lt;/li&gt; &#xA;   &lt;li&gt;Depending on if there is an icon or a title for the entity, you may need to leave blank lines in order to not mess up the layout :)&lt;/li&gt; &#xA;   &lt;li&gt;You can use &lt;a href=&#34;https://mozilla.github.io/nunjucks/templating.html&#34;&gt;nunjucks template&lt;/a&gt; for dynamic content (see above).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;After you hit the save button, the button should immediately show the new configuration.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cgiesche/streamdeck-homeassistant/master/doc/custom_labels.png&#34; alt=&#34;img.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Happy? Consider to donating me a coffee :)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.com/donate?hosted_button_id=3UKRJEJVWV9H4&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif&#34; alt=&#34;buy me a coffee&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gitdagray/next-js-course</title>
    <updated>2023-03-28T01:34:11Z</updated>
    <id>tag:github.com,2023-03-28:/gitdagray/next-js-course</id>
    <link href="https://github.com/gitdagray/next-js-course" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&#34;Next.js 13 for Beginners&#34;&lt;/h1&gt; &#xA;&lt;h3&gt;Full Course - ?? Chapters&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Author Links&lt;/h3&gt; &#xA;&lt;p&gt;👋 Hello, I&#39;m Dave Gray.&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;a href=&#34;https://courses.davegray.codes/&#34;&gt;My Courses&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;✅ &lt;a href=&#34;https://www.youtube.com/DaveGrayTeachesCode&#34;&gt;Check out my YouTube Channel with hundreds of tutorials&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;🚩 &lt;a href=&#34;https://bit.ly/3nGHmNn&#34;&gt;Subscribe to my channel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;☕ &lt;a href=&#34;https://buymeacoffee.com/DaveGray&#34;&gt;Buy Me A Coffee&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;🚀 Follow Me:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/yesdavidgray&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/in/davidagray/&#34;&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://yesdavidgray.com&#34;&gt;Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/user/DaveOnEleven&#34;&gt;Reddit&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Description&lt;/h3&gt; &#xA;&lt;p&gt;📺 &lt;a href=&#34;https://www.youtube.com/playlist?list=PL0Zuz27SZ-6Pk-QJIdGd1tGZEzy9RTgtj&#34;&gt;YouTube Playlist&lt;/a&gt; for this repository.&lt;/p&gt; &#xA;&lt;p&gt;🚀 This repository shares ALL of the resources referenced during the Next.js for Beginners tutorial series.&lt;/p&gt; &#xA;&lt;h3&gt;📚 Recommended Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://youtu.be/mJgBOIoGihA&#34;&gt;HTML for Beginners&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://youtu.be/n4R2E7O-Ngo&#34;&gt;CSS for Beginners&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://youtu.be/EfAl9bwzVZk&#34;&gt;JavaScript for Beginners&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://youtu.be/RVFAyFWO4go&#34;&gt;React for Beginners&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://youtu.be/gieEQFIfgYc&#34;&gt;TypeScript for Beginners&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://youtu.be/lCxcTsOHrjo&#34;&gt;Tailwind CSS for Beginners&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;🎓 Academic Honesty&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;DO NOT COPY FOR AN ASSIGNMENT&lt;/strong&gt; - Avoid plagiarism and adhere to the spirit of this &lt;a href=&#34;https://www.freecodecamp.org/news/academic-honesty-policy/&#34;&gt;Academic Honesty Policy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;⚙ Free Web Dev Tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://google.com/chrome/&#34;&gt;Google Chrome Web Browser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code (aka VS Code)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.js &amp;amp; NPM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://jsonplaceholder.typicode.com/&#34;&gt;{JSON} Placeholder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets&#34;&gt;ES7 React Snippets&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;📚 References&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js Official Site&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://beta.nextjs.org/docs&#34;&gt;Next.js 13 Beta Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://www.cloudflare.com/learning/cdn/what-is-a-cdn/&#34;&gt;Cloudflare: How does a CDN work?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🚀 Project Dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://www.npmjs.com/package/react-icons&#34;&gt;react-icons&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://www.npmjs.com/package/gray-matter&#34;&gt;gray-matter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://www.npmjs.com/package/remark&#34;&gt;remark&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://www.npmjs.com/package/remark-html&#34;&gt;remark-html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;💻 Source Code&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://github.com/gitdagray/next-js-course/tree/main/next01&#34;&gt;Chapter 1 - Introduction &amp;amp; Setup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://github.com/gitdagray/next-js-course/tree/main/next02&#34;&gt;Chapter 2 - Pages &amp;amp; Layout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://github.com/gitdagray/next-js-course/tree/main/next03&#34;&gt;Chapter 3 - Data Fetching, Dynamic Routes &amp;amp; Metadata&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://github.com/gitdagray/next-js-course/tree/main/next04&#34;&gt;Chapter 4 - SSG, SSR, &amp;amp; ISR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://github.com/gitdagray/next-js-course/tree/main/next05&#34;&gt;Chapter 5 - Client Components &amp;amp; Small Project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔗 &lt;a href=&#34;https://github.com/gitdagray/next-js-course/tree/main/next06&#34;&gt;Chapter 6 - Blog Website Project&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>