<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-12T01:33:21Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>metabrainz/geordi</title>
    <updated>2023-02-12T01:33:21Z</updated>
    <id>tag:github.com,2023-02-12:/metabrainz/geordi</id>
    <link href="https://github.com/metabrainz/geordi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MusicBrainz label feed ingestion tools&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;geordi&lt;/h1&gt; &#xA;&lt;p&gt;This project allows the consumption of arbitrary data, for use as a data source and matching tool.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://images1.wikia.nocookie.net/__cb20120205164005/memoryalpha/en/images/thumb/d/d9/Geordi_La_Forge_2368.jpg/158px-Geordi_La_Forge_2368.jpg&#34; alt=&#34;Geordi La Forge&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s named after &lt;a href=&#34;http://en.memory-alpha.org/wiki/Geordi_La_Forge&#34;&gt;Geordi La Forge&lt;/a&gt;, in reference to &lt;a href=&#34;https://github.com/musicbrainz/picard&#34;&gt;MusicBrainz Picard&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;h3&gt;Shared dependencies:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;postgresql&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You will also need to be able to install python packages, we recommend using virtualenvwrapper for this. On Debian/Ubuntu systems you can install that with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install virtualenvwrapper&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Python dependencies:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkvirtualenv geordi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The mkvirtualenv command will create and activate a virtual environment in which python modules will be installed. You can re-active this environment with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;workon geordi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install all the dependencies run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;In the geordi/geordi directory, copy settings.cfg.sample to settings.cfg; modify database connection settings, set MusicBrainz OAuth configuration, and make any other needed changes.&lt;/p&gt; &#xA;&lt;h3&gt;Creating database&lt;/h3&gt; &#xA;&lt;p&gt;To create a database matching the default configuration run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;createdb -O geordi geordi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then create the schema by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;echo &#39;CREATE SCHEMA geordi&#39; | psql -U geordi geordi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Creating tables&lt;/h3&gt; &#xA;&lt;p&gt;To create tables in an existing database run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python manager.py create_tables&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;(replace &#39;python&#39; with &#39;python2&#39; where applicable)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Importing Data&lt;/h2&gt; &#xA;&lt;p&gt;To import data, use the manager.py script in the &#39;geordi&#39; directory. Various options exist under the &#39;data&#39; subcommand, for which documentation exists. Source-specific import tools are in the geordi.data.importer module, mostly under the &#39;indexes&#39; subdirectory.&lt;/p&gt; &#xA;&lt;h2&gt;Running server&lt;/h2&gt; &#xA;&lt;p&gt;To run the server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd geordi&#xA;python manager.py runserver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;(replace &#39;python&#39; with &#39;python2&#39; where applicable)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;To run tests, install nose (remember to enable your virtualenv!):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install nose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then run the tests, you should see something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ nosetests&#xA;..&#xA;----------------------------------------------------------------------&#xA;Ran 2 tests in 0.121s&#xA;&#xA;OK&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Further Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The geordi server has some &lt;a href=&#34;https://geordi.readthedocs.org/&#34;&gt;additional documentation&lt;/a&gt; as well.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sindresorhus/github-markdown-css</title>
    <updated>2023-02-12T01:33:21Z</updated>
    <id>tag:github.com,2023-02-12:/sindresorhus/github-markdown-css</id>
    <link href="https://github.com/sindresorhus/github-markdown-css" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The minimal amount of CSS to replicate the GitHub Markdown style&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;github-markdown-css&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The minimal amount of CSS to replicate the GitHub Markdown style&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;The CSS is generated. Contributions should go to &lt;a href=&#34;https://github.com/sindresorhus/generate-github-markdown-css&#34;&gt;this repo&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://sindresorhus.com/github-markdown-css&#34;&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/170270/5219062/f22a978c-7685-11e4-8316-af25b6c89bc0.png&#34; width=&#34;300&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://sindresorhus.com/github-markdown-css&#34;&gt;Demo&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Download &lt;a href=&#34;https://raw.githubusercontent.com/sindresorhus/github-markdown-css/gh-pages/github-markdown.css&#34;&gt;manually&lt;/a&gt;, from &lt;a href=&#34;https://cdnjs.com/libraries/github-markdown-css&#34;&gt;CDNJS&lt;/a&gt;, or with npm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install github-markdown-css&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Import the &lt;code&gt;github-markdown.css&lt;/code&gt; file and add a &lt;code&gt;markdown-body&lt;/code&gt; class to the container of your rendered Markdown and set a width for it. GitHub uses &lt;code&gt;980px&lt;/code&gt; width and &lt;code&gt;45px&lt;/code&gt; padding, and &lt;code&gt;15px&lt;/code&gt; padding for mobile.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1&#34;&amp;gt;&#xA;&amp;lt;link rel=&#34;stylesheet&#34; href=&#34;github-markdown.css&#34;&amp;gt;&#xA;&amp;lt;style&amp;gt;&#xA;&#x9;.markdown-body {&#xA;&#x9;&#x9;box-sizing: border-box;&#xA;&#x9;&#x9;min-width: 200px;&#xA;&#x9;&#x9;max-width: 980px;&#xA;&#x9;&#x9;margin: 0 auto;&#xA;&#x9;&#x9;padding: 45px;&#xA;&#x9;}&#xA;&#xA;&#x9;@media (max-width: 767px) {&#xA;&#x9;&#x9;.markdown-body {&#xA;&#x9;&#x9;&#x9;padding: 15px;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&amp;lt;/style&amp;gt;&#xA;&amp;lt;article class=&#34;markdown-body&#34;&amp;gt;&#xA;&#x9;&amp;lt;h1&amp;gt;Unicorns&amp;lt;/h1&amp;gt;&#xA;&#x9;&amp;lt;p&amp;gt;All the things&amp;lt;/p&amp;gt;&#xA;&amp;lt;/article&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use &lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/rest/reference/markdown&#34;&gt;GitHub&#39;s &lt;code&gt;/markdown&lt;/code&gt; API&lt;/a&gt; to turn Markdown into the HTML that GitHub generates, which works well with the CSS in this repo. Other Markdown parsers will mostly work with these styles too. To mimic how GitHub highlights code, you can use &lt;a href=&#34;https://github.com/wooorm/starry-night&#34;&gt;&lt;code&gt;starry-night&lt;/code&gt;&lt;/a&gt; with your Markdown parser of choice.&lt;/p&gt; &#xA;&lt;p&gt;There are 3 themes provided in this package:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;github-markdown.css&lt;/strong&gt;: (default) Automatically switches between light and dark through &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme&#34;&gt;&lt;code&gt;@media (prefers-color-scheme)&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;github-markdown-light.css&lt;/strong&gt;: Light-only.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;github-markdown-dark.css&lt;/strong&gt;: Dark-only.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You may know that now GitHub supports more than 2 themes including &lt;code&gt;dark_dimmed&lt;/code&gt;, &lt;code&gt;dark_high_contrast&lt;/code&gt; and &lt;code&gt;colorblind&lt;/code&gt; variants. If you want to try these themes, you can generate them on your own! See next section.&lt;/p&gt; &#xA;&lt;h2&gt;How&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/sindresorhus/generate-github-markdown-css&#34;&gt;&lt;code&gt;generate-github-markdown-css&lt;/code&gt;&lt;/a&gt; for how it&#39;s generated and ability to generate your own.&lt;/p&gt; &#xA;&lt;h2&gt;Dev&lt;/h2&gt; &#xA;&lt;p&gt;Run &lt;code&gt;npm run make&lt;/code&gt; to update the CSS.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>TGlide/svelte-radial-menu</title>
    <updated>2023-02-12T01:33:21Z</updated>
    <id>tag:github.com,2023-02-12:/TGlide/svelte-radial-menu</id>
    <link href="https://github.com/TGlide/svelte-radial-menu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Radial Menu Experiment. Based on Rauno&#39;s Work&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;&lt;h3 align=&#34;center&#34;&gt;Svelte Radial Menu&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Radial Menu Experiment. Based on &lt;a href=&#34;https://twitter.com/raunofreiberg&#34; target=&#34;_blank&#34; rel=&#34;noreferrer&#34;&gt;Rauno&#39;s&lt;/a&gt; &lt;a href=&#34;https://rauno.me/craft/radial-menu&#34; target=&#34;_blank&#34; rel=&#34;noreferrer&#34;&gt;Work&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://kit.svelte.dev/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/frontend-sveltekit-%23FF3E00?style=for-the-badge&amp;amp;logo=svelte&#34; alt=&#34;Built with SvelteKit&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/types-typescript-%23007ACC?style=for-the-badge&amp;amp;logo=typescript&#34; alt=&#34;Built with Typescript&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;!-- TABLE OF CONTENTS --&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TGlide/svelte-radial-menu/main/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TGlide/svelte-radial-menu/main/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TGlide/svelte-radial-menu/main/#future-of-this-project&#34;&gt;Future of this project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TGlide/svelte-radial-menu/main/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TGlide/svelte-radial-menu/main/#1-clone-the-repo&#34;&gt;1. Clone the repo&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TGlide/svelte-radial-menu/main/#2-install-dependencies&#34;&gt;2. Install dependencies&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TGlide/svelte-radial-menu/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TGlide/svelte-radial-menu/main/#run-app&#34;&gt;Run App&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TGlide/svelte-radial-menu/main/#preview&#34;&gt;Preview&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- ABOUT THE PROJECT --&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;This is a simple radial menu experiment, based on Rauno&#39;s work. You can check the original experiment &lt;a href=&#34;https://rauno.me/craft/radial-menu&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There are some differences between this project and the original one, mainly:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It&#39;s open-source (I think Rauno&#39;s is not, but I&#39;m not sure)&lt;/li&gt; &#xA; &lt;li&gt;Built with Svelte instead of React&lt;/li&gt; &#xA; &lt;li&gt;Allows from 3 to 8 items&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Future of this project&lt;/h2&gt; &#xA;&lt;p&gt;If this gains traction, I&#39;ll add more features to it. Some of the features I thought of are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; npm package&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Callbacks for each item&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Different triggers (e.g. ctrl + hold click)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Theming (?)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h4&gt;1. Clone the repo&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/TGlide/svelte-radial-menu&#xA;cd svelte-radial-menu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2. Install dependencies&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pnpm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Run App&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pnpm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Preview&lt;/h3&gt; &#xA;&lt;p&gt;You can check out a live preview &lt;a href=&#34;https://svelte-radial-menu.thomasglopes.com&#34;&gt;here&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>