<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-17T01:33:12Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>CodeLouisville/webdev_c1_knowcheck_01</title>
    <updated>2023-02-17T01:33:12Z</updated>
    <id>tag:github.com,2023-02-17:/CodeLouisville/webdev_c1_knowcheck_01</id>
    <link href="https://github.com/CodeLouisville/webdev_c1_knowcheck_01" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Knowledge Check #1&lt;/h1&gt; &#xA;&lt;h2&gt;Web Development - Course 1&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to your first knowledge check for Code Louisville&#39;s Web Development Track. Please reveiw the following list of changes and corrections to the following site. The following assesment is &lt;code&gt;Open Book&lt;/code&gt; meaning you may use the internet, books, and notes to arrive at your answers.&lt;/p&gt; &#xA;&lt;p&gt;Please complete the following list of items, but also feel free to customize the images and text to your liking.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;To Do:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 1. Add &lt;code&gt;Viewport&lt;/code&gt; metatag&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 2. Center div &lt;code&gt;hero-content&lt;/code&gt; in &lt;code&gt;hero&lt;/code&gt; section&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 3. Change &lt;code&gt;Hero&lt;/code&gt; button &lt;code&gt;:hover&lt;/code&gt; colors.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 4. Change photo in &lt;code&gt;About Me&lt;/code&gt; section.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 5. BONUS: Add a &lt;code&gt;Contact&lt;/code&gt; section.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Add the &lt;code&gt;viewport&lt;/code&gt; meta tag with &lt;code&gt;content=&#34;width=device-width, initial-scale=1&lt;/code&gt; options to the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Center horizontally and vertically the div with the class &lt;code&gt;hero-content&lt;/code&gt; inside the &lt;code&gt;hero-container&lt;/code&gt; parent div. Use flexbox to complete this challenge.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;*NOTE - Please check the article at the following site: &lt;a href=&#34;https://css-tricks.com/centering-css-complete-guide/&#34;&gt;https://css-tricks.com/centering-css-complete-guide/&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Change the &lt;code&gt;:hover&lt;/code&gt; background and border color for the class &lt;code&gt;.btn&lt;/code&gt; in the div &lt;code&gt;hero-content&lt;/code&gt; to the color: &lt;code&gt;#74b44a&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Switch out cat photo in &lt;code&gt;About Me&lt;/code&gt; section, with a photo of your own choosing. You must download and add the photo to the &lt;code&gt;img&lt;/code&gt; folder&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;BONUS: Add a &lt;code&gt;Contact&lt;/code&gt; section below the &lt;code&gt;Projects&lt;/code&gt; section. Add contact information (real/fake use your best judgement), social media, links, embed a google map, etc.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>narakeet/examples</title>
    <updated>2023-02-17T01:33:12Z</updated>
    <id>tag:github.com,2023-02-17:/narakeet/examples</id>
    <link href="https://github.com/narakeet/examples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Samples and examples for Narakeet scripts&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Narakeet Examples&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains samples and examples for &lt;a href=&#34;https://www.narakeet.com&#34;&gt;Narakeet&lt;/a&gt; (formerly Video Puppet).&lt;/p&gt; &#xA;&lt;h2&gt;Start here&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/narakeet/examples/master/hello-world/README.md&#34;&gt;Hello World&lt;/a&gt; - basic script structure, adding images, audio and video&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Full examples for typical use cases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/narakeet/examples/master/screencast-demo-video/&#34;&gt;Screencast&lt;/a&gt; - how to create a narrated screencast video (from screenshots/recordings)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/narakeet/examples/master/code-tutorial-demo-video/&#34;&gt;Code Tutorial&lt;/a&gt; - how to create a code tutorial (with syntax highlighting)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/narakeet/examples/master/feature-announcement-demo-video&#34;&gt;Quick announcement&lt;/a&gt; - how to create a quick feature demo or announcement&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Managing narration&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/narakeet/examples/master/voices/README.md&#34;&gt;voices&lt;/a&gt;: controlling the narration voice&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/narakeet/examples/master/pronunciation/README.md&#34;&gt;pronunciation&lt;/a&gt;: controlling pronunciation, including adding pauses&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/narakeet/examples/master/subtitles/README.md&#34;&gt;subtitles&lt;/a&gt;: adding subtitles&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/narakeet/examples/master/subtitle-styling/README.md&#34;&gt;subtitle-styling&lt;/a&gt;: controlling subtitle look &amp;amp; feel&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Managing audio&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/narakeet/examples/master/background-audio/README.md&#34;&gt;background-audio&lt;/a&gt;: adding background music to your video&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/narakeet/examples/master/vendor-audio/README.md&#34;&gt;vendor-audio&lt;/a&gt;: adding music provided by Video Puppet&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/narakeet/examples/master/video-volume/README.md&#34;&gt;video-volume&lt;/a&gt;: manipulate the volume of embedded video resources&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Managing visuals&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/narakeet/examples/master/slides/README.md&#34;&gt;slides&lt;/a&gt;: generating slides from text&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/narakeet/examples/master/slide-css-theming/README.md&#34;&gt;slide-css-theming&lt;/a&gt;: customising slide themes using CSS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/narakeet/examples/master/callouts/README.md&#34;&gt;callouts&lt;/a&gt;: highlighting parts of images&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/narakeet/examples/master/video-audio-sync/README.md&#34;&gt;video-audio-sync&lt;/a&gt;: matching video to audio duration, slowing down or speeding up&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/narakeet/examples/master/video-sizing/README.md&#34;&gt;video-sizing&lt;/a&gt;: resizing, padding and cropping videos&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/narakeet/examples/master/image-sizing/README.md&#34;&gt;image-sizing&lt;/a&gt;: resizing, padding and cropping images&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/narakeet/examples/master/video-segments/README.md&#34;&gt;video-segments&lt;/a&gt;: extracting parts of video files into scenes, freezing stating or ending image&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/narakeet/examples/master/transitions/README.md&#34;&gt;transitions&lt;/a&gt;: creating transitions between scenes&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/narakeet/examples/master/transition-types/README.md&#34;&gt;transition-types&lt;/a&gt;: demo for various transition types&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/narakeet/examples/master/gifs/README.md&#34;&gt;gifs&lt;/a&gt;: using animated GIFs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/narakeet/examples/master/image-panzoom/README.md&#34;&gt;image-panzoom&lt;/a&gt;: animating images with pan/zoom effects&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>inqueryio/inquery</title>
    <updated>2023-02-17T01:33:12Z</updated>
    <id>tag:github.com,2023-02-17:/inqueryio/inquery</id>
    <link href="https://github.com/inqueryio/inquery" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Real-time events platform for Postgres&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://inquery.io&#34;&gt;&lt;img src=&#34;https://svgshare.com/i/qHg.svg?sanitize=true&#34; alt=&#34;Inquery&#34;&gt;&lt;/a&gt; &#xA; &lt;p&gt;&lt;em&gt;Real-time events platform for Postgres&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://twitter.com/inqueryio&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/https/twitter.com/inqueryio.svg?style=social&amp;amp;label=Follow%20%40inqueryio&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/inqueryio/inquery&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/inqueryio/inquery?style=social&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Inquery is a utility for Postgres that triggers webhooks when rows are inserted, updated, or deleted. It uses database triggers that send low-latency websocket messages to a Go application. This application then calls the configured webhook(s) with a JSON payload that includes specified values from the database row.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/BgR5lbo.png&#34; alt=&#34;Inquery Flow&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How It Works&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Data is modified in Postgres table (INSERT, UPDATE, DELETE)&lt;/li&gt; &#xA; &lt;li&gt;Postgres trigger notifies the Inquery web server via a websocket message&lt;/li&gt; &#xA; &lt;li&gt;Inquery formats the data and sends the webhook(s)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/Nv7MfQV.gif&#34; alt=&#34;Inquery Create Slack Notification&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Use Cases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Send notifications:&lt;/strong&gt; Slack, Email, Text Message, Push Notification&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Call serverless functions:&lt;/strong&gt; AWS Lambda, Google Cloud Functions, Azure Functions&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Trigger analytics events:&lt;/strong&gt; Segment, Mixpanel, Amplitude&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Stream data real-time:&lt;/strong&gt; Snowflake, BigQuery, Clickhouse, Redshift&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;h3&gt;Run Inquery locally&lt;/h3&gt; &#xA;&lt;p&gt;You can run Inquery locally with Docker.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --depth 1 https://github.com/inqueryio/inquery.git&#xA;cd inquery&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then open &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt; to access Inquery. &lt;br&gt; &lt;br&gt; &lt;strong&gt;Note&lt;/strong&gt;: When connecting your database, if your Postgres host is &lt;code&gt;localhost&lt;/code&gt;, you must use &lt;code&gt;host.docker.internal&lt;/code&gt; instead to access it when running with Docker.&lt;/p&gt; &#xA;&lt;h3&gt;Run Inquery on AWS (EC2)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Make sure this instance is only accessible within your VPC.&lt;br&gt; &lt;strong&gt;Note&lt;/strong&gt;: These instructions are for Amazon Linux 2 AMI (HVM).&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;To install Docker, run the following command in your SSH session on the instance terminal:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum update -y&#xA;sudo yum install -y docker&#xA;sudo service docker start&#xA;sudo usermod -a -G docker $USER&#xA;logout # Needed to close the SSH session so Docker does not have to be run as root&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;To install &lt;code&gt;docker-compose&lt;/code&gt;, run the following command in your ssh session on the instance terminal:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo curl -L &#34;https://github.com/docker/compose/releases/download/v2.16.0/docker-compose-$(uname -s)-$(uname -m)&#34;  -o /usr/local/bin/docker-compose&#xA;sudo mv /usr/local/bin/docker-compose /usr/bin/docker-compose&#xA;sudo chmod +x /usr/bin/docker-compose&#xA;docker-compose version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Install and run Inquery&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir inquery &amp;amp;&amp;amp; cd inquery&#xA;wget https://raw.githubusercontent.com/inqueryio/inquery/main/{.env,docker-compose.yml,.dockerignore,frontend.env}&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Template Strings&lt;/h3&gt; &#xA;&lt;p&gt;When adding an action, you can insert data from the row into the response body of the POST request by using template strings. &lt;br&gt; For instance, if your table has a column called &lt;code&gt;email&lt;/code&gt;, you would put the value &lt;code&gt;${email}&lt;/code&gt; in the request body: &lt;code&gt;{&#34;text&#34;:&#34;User created: ${email}!&#34;}&lt;/code&gt; &lt;br&gt; &lt;br&gt; The prefixes &lt;code&gt;new.&lt;/code&gt; and &lt;code&gt;old.&lt;/code&gt; can be used if a new (INSERT, UPDATE) or old (UPDATE, DELETE) row is available. If a prefix is not specified, the new or old values will be used depending on the event. Example: &lt;code&gt;{&#34;text&#34;:&#34;User updated: ${old.email} is now ${new.email}!&#34;}&lt;/code&gt; &lt;br&gt; &lt;br&gt; The meta values &lt;code&gt;meta.table&lt;/code&gt; (table name), &lt;code&gt;meta.schema&lt;/code&gt; (schema name), &lt;code&gt;meta.event&lt;/code&gt; (INSERT, UPDATE, or DELETE) can also be used.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Filters and mapping options for row data when sending a POST request&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Let us know your feedback or feature requests! You can submit a GitHub issue or contact us at &lt;a href=&#34;mailto:hey@inquery.io&#34;&gt;hey@inquery.io&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>