<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-31T01:26:37Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>awerem/awerem-computer</title>
    <updated>2023-10-31T01:26:37Z</updated>
    <id>tag:github.com,2023-10-31:/awerem/awerem-computer</id>
    <link href="https://github.com/awerem/awerem-computer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Computer part of awerem-project&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;awerem-computer&lt;/h1&gt; &#xA;&lt;p&gt;Computer part of awerem-project&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Chalarangelo/30-seconds-of-css</title>
    <updated>2023-10-31T01:26:37Z</updated>
    <id>tag:github.com,2023-10-31:/Chalarangelo/30-seconds-of-css</id>
    <link href="https://github.com/Chalarangelo/30-seconds-of-css" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Short CSS code snippets for all your development needs&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;IMPORTANT NOTICE:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;As of May, 2023, all 30-seconds content repositories have been merged into &lt;a href=&#34;https://github.com/30-seconds/30-seconds-of-code&#34;&gt;30-seconds-of-code&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Please watch, star and follow relevant activity there.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://30secondsofcode.org/css/p/1&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Chalarangelo/30-seconds-of-css/master/logo.png&#34; alt=&#34;Logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;30 seconds of code&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Short CSS code snippets for all your development needs&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;https://30secondsofcode.org&#34;&gt;our website&lt;/a&gt; to view our snippet collection.&lt;/li&gt; &#xA; &lt;li&gt;Use the &lt;a href=&#34;https://30secondsofcode.org/search&#34;&gt;Search page&lt;/a&gt; to find snippets that suit your needs. You can search by name, tag, language or using a snippet&#39;s description. Just start typing a term and see what comes up.&lt;/li&gt; &#xA; &lt;li&gt;Browse the &lt;a href=&#34;https://30secondsofcode.org/css/p/1&#34;&gt;CSS Snippet collection&lt;/a&gt; to see all the snippets in this project or click individual tags at the top of the same page to narrow down your search to a specific tag.&lt;/li&gt; &#xA; &lt;li&gt;Click on each snippet card to view the whole snippet, including code, explanation and examples.&lt;/li&gt; &#xA; &lt;li&gt;You can use the button at the bottom of a snippet card to view the snippet in Codepen.&lt;/li&gt; &#xA; &lt;li&gt;If you like the project, give it a star. It means a lot to the people maintaining it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Want to contribute?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you want to help us improve, take a minute to read the &lt;a href=&#34;https://raw.githubusercontent.com/Chalarangelo/30-seconds-of-css/master/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt; first.&lt;/li&gt; &#xA; &lt;li&gt;Use the &lt;a href=&#34;https://raw.githubusercontent.com/Chalarangelo/30-seconds-of-css/master/snippet-template.md&#34;&gt;Snippet Template&lt;/a&gt; to add new snippets to the collection.&lt;/li&gt; &#xA; &lt;li&gt;If you find a problem with a specific snippet, please &lt;a href=&#34;https://github.com/30-seconds/30-seconds-of-css/issues/new&#34;&gt;open an issue&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you find a problem with the website, please &lt;a href=&#34;https://github.com/30-seconds/30-seconds-web/issues/new&#34;&gt;report it in the web repository&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This repository is maintained by the &lt;a href=&#34;https://github.com/30-seconds&#34;&gt;30 seconds of code organization on GitHub&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;All snippets are licensed under the CC-BY-4.0 License, unless explicitly stated otherwise.&lt;/li&gt; &#xA; &lt;li&gt;Logos, names and trademarks are not to be used without the explicit consent of the owners of the 30 seconds of code GitHub organization.&lt;/li&gt; &#xA; &lt;li&gt;Our website is powered by &lt;a href=&#34;https://www.netlify.com/&#34;&gt;Netlify&lt;/a&gt;, &lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>jsakamoto/Toolbelt.Blazor.ViewTransition</title>
    <updated>2023-10-31T01:26:37Z</updated>
    <id>tag:github.com,2023-10-31:/jsakamoto/Toolbelt.Blazor.ViewTransition</id>
    <link href="https://github.com/jsakamoto/Toolbelt.Blazor.ViewTransition" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A router component and a service that makes your Blazor apps have pretty animated transition effects between pages with the View Transitions API.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Blazor View Transition &lt;a href=&#34;https://www.nuget.org/packages/Toolbelt.Blazor.ViewTransition/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/v/Toolbelt.Blazor.ViewTransition.svg?sanitize=true&#34; alt=&#34;NuGet Package&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;üìù Summary&lt;/h2&gt; &#xA;&lt;p&gt;A router component and a service that makes your Blazor apps have pretty animated transition effects between pages with the View Transitions API.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Live Demo&lt;/em&gt; - &lt;a href=&#34;https://jsakamoto.github.io/Toolbelt.Blazor.ViewTransition/&#34;&gt;https://jsakamoto.github.io/Toolbelt.Blazor.ViewTransition/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jsakamoto/Toolbelt.Blazor.ViewTransition/assets/95908/f477910a-4166-4ce1-82dd-ee3874fdb966&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jsakamoto/Toolbelt.Blazor.ViewTransition/main/.assets/introduction-video-cover.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üöÄ Quick Start&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add this package to your project like this.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;dotnet add package Toolbelt.Blazor.ViewTransition&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Open &lt;code&gt;Toolbelt.Blazor.ViewTransition&lt;/code&gt; namespace in the &lt;code&gt;_Imports.razor&lt;/code&gt; file.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-razor&#34;&gt;@* This is &#34;_Imports.razor&#34; *@&#xA;...&#xA;@using Toolbelt.Blazor.ViewTransition&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Replace a router component to use the &lt;code&gt;ViewTransitionRouter&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;@** App.razor **@&#xA;&#xA;@** Replcae the &amp;lt;Router&amp;gt; component to the &amp;lt;ViewTransitionRouter&amp;gt; **@&#xA;&amp;lt;ViewTransitionRouter AppAssembly=&#34;@typeof(App).Assembly&#34;&amp;gt;&#xA;    &amp;lt;Found Context=&#34;routeData&#34;&amp;gt;&#xA;        &amp;lt;RouteView RouteData=&#34;@routeData&#34; DefaultLayout=&#34;typeof(MainLayout)&#34; /&amp;gt;&#xA;        &amp;lt;FocusOnNavigate RouteData=&#34;@routeData&#34; Selector=&#34;[autofocus]&#34; /&amp;gt;&#xA;    &amp;lt;/Found&amp;gt;&#xA;    &amp;lt;NotFound&amp;gt;&#xA;        &amp;lt;PageTitle&amp;gt;Not found&amp;lt;/PageTitle&amp;gt;&#xA;        &amp;lt;LayoutView Layout=&#34;typeof(MainLayout)&#34;&amp;gt;&#xA;            &amp;lt;p role=&#34;alert&#34;&amp;gt;Sorry, there&#39;s nothing at this address.&amp;lt;/p&amp;gt;&#xA;        &amp;lt;/LayoutView&amp;gt;&#xA;    &amp;lt;/NotFound&amp;gt;&#xA;&amp;lt;/ViewTransitionRouter&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;That&#39;s all. You will see the default cross-fade transition effect when you move between pages!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jsakamoto/Toolbelt.Blazor.ViewTransition/assets/95908/4bb6804f-395d-45d4-9ed5-80dae5adddb6&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jsakamoto/Toolbelt.Blazor.ViewTransition/main/.assets/quick-start-001.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;üõ†Ô∏è Customize the transition effect&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Specify the same &lt;code&gt;view-transition-name&lt;/code&gt; CSS attribute value for elements that should be transitioned as the same individual element across pages.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jsakamoto/Toolbelt.Blazor.ViewTransition/main/.assets/quick-start-002.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Then, you will see the elements are transitioned as the same individual element across pages!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jsakamoto/Toolbelt.Blazor.ViewTransition/assets/95908/d7a5cc5b-27e7-474e-be7a-04401268698a&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jsakamoto/Toolbelt.Blazor.ViewTransition/main/.assets/quick-start-003.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;These transition effects are implemented by web browser&#39;s &#34;View Transion&#34; API. For more details about View Transition API, see &lt;a href=&#34;https://developer.mozilla.org/docs/Web/API/View_Transitions_API&#34;&gt;MDN web docs&lt;/a&gt; and &lt;a href=&#34;https://developer.chrome.com/docs/web-platform/view-transitions/&#34;&gt;Chrome for Developers docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;&lt;br&gt; The &#34;View Transition&#34; API is an experimental technology when this library is released. Please check the &lt;a href=&#34;https://caniuse.com/?search=ViewTransition&#34;&gt;Browser compatibility table&lt;/a&gt; carefully before using this in production.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;üõ†Ô∏è Customize the base router component&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;ViewTransitionRouter&lt;/code&gt; component is a wrapper component of the &lt;code&gt;Microsoft.AspNetCore.Components.Routing.Router&lt;/code&gt; component. You can customize the base router component, such as &lt;a href=&#34;https://github.com/jsakamoto/Toolbelt.Blazor.RoutableLazyAssemblyLoader&#34;&gt;&lt;code&gt;LazyAssemblyLoadableRouter&lt;/code&gt;&lt;/a&gt;, by using the &lt;code&gt;TypeOfRouter&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;ViewTransitionRouter ... TypeOfRouter=&#34;typeof(LazyAssemblyLoadableRouter)&#34;&amp;gt;&#xA;    ...&#xA;&amp;lt;/ViewTransitionRouter&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;‚öôÔ∏è Use the &#34;ViewTransition&#34; service&lt;/h2&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;IViewTransition&lt;/code&gt; service instead of the &lt;code&gt;ViewTransitionRouter&lt;/code&gt; component to control the transition effect manually.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add the &lt;code&gt;ViewTransition&lt;/code&gt; service to your Blazor app&#39;s DI container.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;// Program.cs&#xA;...&#xA;using Toolbelt.Blazor.Extensions.DependencyInjection; // üëà Add this line.&#xA;&#xA;var builder = WebAssemblyHostBuilder.CreateDefault(args);&#xA;...&#xA;builder.Services.AddViewTransition(); // üëà Add this line.&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Inject the &lt;code&gt;IViewTransition&lt;/code&gt; service to your Blazor component, and surround the DOM modification code you want to apply the transition effect by calling the &lt;code&gt;BeginAsync()&lt;/code&gt; and &lt;code&gt;EndAsync()&lt;/code&gt; methods. The following example shows how to re-implement the &lt;code&gt;ViewTransitionRouter&lt;/code&gt; component yourself.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;@inject IViewTransition ViewTransition&#xA;&#xA;&amp;lt;Router AppAssembly=&#34;@typeof(App).Assembly&#34; OnNavigateAsync=&#34;OnNavigateAsync&#34;&amp;gt;&#xA;    ...&#xA;&amp;lt;/Router&amp;gt;&#xA;&#xA;@code&#xA;{&#xA;    private async Task OnNavigateAsync()&#xA;    {&#xA;        await this.ViewTransition.BeginAsync();&#xA;    }&#xA;&#xA;    protected override async Task OnAfterRenderAsync(bool firstRender)&#xA;    {&#xA;        await this.ViewTransition.EndAsync();&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üéâ Release Note&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jsakamoto/Toolbelt.Blazor.ViewTransition/main/RELEASE-NOTES.txt&#34;&gt;Release notes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üì¢ License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jsakamoto/Toolbelt.Blazor.ViewTransition/main/LICENSE&#34;&gt;Mozilla Public License Version 2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>