<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-04T01:32:18Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cisagov/decider</title>
    <updated>2023-03-04T01:32:18Z</updated>
    <id>tag:github.com,2023-03-04:/cisagov/decider</id>
    <link href="https://github.com/cisagov/decider" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A web application that assists network defenders, analysts, and researcher in the process of mapping adversary behaviors to the MITRE ATT&amp;CK® framework.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Decider&lt;/h1&gt; &#xA;&lt;p&gt;A web application that assists network defenders, analysts, and researcher in the process of mapping adversary behaviors to the MITRE ATT&amp;amp;CK® framework.&lt;/p&gt; &#xA;&lt;p&gt;This project makes use of MITRE ATT&amp;amp;CK - &lt;a href=&#34;https://attack.mitre.org/resources/terms-of-use/&#34;&gt;ATT&amp;amp;CK Terms of Use&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Developer Instructions&lt;/h2&gt; &#xA;&lt;p&gt;Before developing, please set up a virtualenv and install the pre-commit git hook scripts.&lt;br&gt; Decider uses Black and Flake8 with a line length of 119.&lt;br&gt; Please ensure you are using &lt;strong&gt;Python 3.8.10&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To do this, after cloning the repository, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install -y python3-pip&#xA;python3 -m venv venv/&#xA;source venv/bin/activate&#xA;pip3 install wheel==0.37.1&#xA;pip3 install -r requirements.txt&#xA;pip3 install -r requirements_dev.txt&#xA;pre-commit install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Decider is a tool to help analysts map adversary behavior to the MITRE ATT&amp;amp;CK framework. Decider makes creating ATT&amp;amp;CK mappings easier to get right by walking users through the mapping process. It does so by asking a series of guided questions about adversary activity to help them arrive at the correct tactic, technique, or subtechnique. Decider has a powerful search and filter functionality that enables users to focus on the parts of ATT&amp;amp;CK that are relevant to their analysis. Decider also has a cart functionality that lets users export results to commonly used formats, such as tables and ATT&amp;amp;CK Navigator™ heatmaps.&lt;/p&gt; &#xA;&lt;h2&gt;Background&lt;/h2&gt; &#xA;&lt;p&gt;There are 3 different components to Decider: the PostgreSQL database, the web server (uWSGI), and the Decider application. Decider and its components are tested on Ubuntu 20.04 / CentOS 7. Installation and management should be done on either of these platforms.&lt;/p&gt; &#xA;&lt;h3&gt;PostgreSQL&lt;/h3&gt; &#xA;&lt;h4&gt;Installation&lt;/h4&gt; &#xA;&lt;p&gt;This is documented inside of Decider&#39;s Admin Guide.&lt;/p&gt; &#xA;&lt;h4&gt;Post Installation&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The database will need a new login made., Tthis login will be used by Decider to make queries. There is no default login for security purposes.&lt;/li&gt; &#xA; &lt;li&gt;You can create a login by running: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;python3 initial_setup.py&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The &lt;strong&gt;Database Setup&lt;/strong&gt; section of the Decider Admin Guide has a detailed set of steps to follow.&lt;/li&gt; &#xA;   &lt;li&gt;This script will prompt the user to create two logins and an encryption key (basically a password). &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;One login is the account Decider will use to query the database.&lt;/li&gt; &#xA;     &lt;li&gt;The other login is the initial admin account to be made. Users will use this to log-in to the Decider app website itself. From here, they can use the user management feature to add more users.&lt;/li&gt; &#xA;     &lt;li&gt;The encryption key is used by Decider to encrypt carts that are stored in the database.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuration Options&lt;/h2&gt; &#xA;&lt;p&gt;Decider is configured by two files:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;.env&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Holds secrets; specifically, a PostgreSQL login used by Decider to query the database, and an encryption key that encrypts carts stored on the database.&lt;/li&gt; &#xA;   &lt;li&gt;All fields in &lt;code&gt;.env.example&lt;/code&gt; must exist/be defined in either &lt;code&gt;.env&lt;/code&gt; or the environment itself for Decider to launch/run build scripts.&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;initial_setup.py&lt;/code&gt; to create this file. The script will ask for the creation of two logins and an encryption key. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Users only need to run this if they are setting up a new database.&lt;/li&gt; &#xA;     &lt;li&gt;More information is available in the &lt;strong&gt;Database Setup&lt;/strong&gt; section of the Decider Admin Guide.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;app/conf.py&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Holds more general configuration options.&lt;/li&gt; &#xA;   &lt;li&gt;There is a set of config classes; one can be chosen when launching the application / building the database. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;The fields used in creation of the &lt;code&gt;SQLALCHEMY_DATABASE_URI&lt;/code&gt; variable can be tweaked: &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;code&gt;host&lt;/code&gt;/&lt;code&gt;port&lt;/code&gt;: specify the PostgreSQL server endpoint location.&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;database&lt;/code&gt;: specifies which DB on the server to use.&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Decider can be launched by running the command below. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;python3 decider.py --config CONFIG&lt;/code&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; this is not to be used in production. Decider uses uWSGI in production as the Flask server is not recommended; it does work just fine for development and testing however.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;To run Decider in production mode on a server, consult the Decider Admin Guide.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Database Creation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;(from the root decider_tool/ directory)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;python -m app.utils.db.actions.full_build [--config CONF]&lt;/code&gt;: /jsons/source &lt;strong&gt;→&lt;/strong&gt; DB&lt;/p&gt; &#xA;&lt;h3&gt;Postgres Backup and Restore&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;pg_dump -U DB_USER -W -F t -h HOSTNAME DB_NAME &amp;gt; decider.sql&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;pg_restore -U DB_USER -W -h localhost -d DB_NAME &amp;lt; app/utils/decider.sql&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zhheo/HeoMusic</title>
    <updated>2023-03-04T01:32:18Z</updated>
    <id>tag:github.com,2023-03-04:/zhheo/HeoMusic</id>
    <link href="https://github.com/zhheo/HeoMusic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一个基于Aplayer和MetingJS的静态音乐播放器&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;HeoMusic&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zhheo/HeoMusic/main/img/cover.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;一个基于&lt;a href=&#34;https://github.com/DIYgod/APlayer&#34;&gt;Aplayer&lt;/a&gt;和&lt;a href=&#34;https://github.com/metowolf/MetingJS&#34;&gt;MetingJS&lt;/a&gt;的静态音乐播放器&lt;/p&gt; &#xA;&lt;h2&gt;预览&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://music.zhheo.com/&#34;&gt;HeoMusic - 用音乐感染人心&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;基本操作&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Space空格键&lt;/code&gt;：暂停/播放音乐&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;上/下方向键&lt;/code&gt;：增加/减少音量&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;左/右方向键&lt;/code&gt;：上一曲/下一曲&lt;/p&gt; &#xA;&lt;h2&gt;修改歌单/私有部署与配置&lt;/h2&gt; &#xA;&lt;h3&gt;ID&lt;/h3&gt; &#xA;&lt;p&gt;歌单的id，可以从音乐歌单分享的链接中获取，例如&lt;code&gt;https://y.qq.com/n/ryqq/playlist/8668419170&lt;/code&gt;中，id为&lt;code&gt;8668419170&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Server&lt;/h3&gt; &#xA;&lt;p&gt;歌单的服务商，例如&lt;code&gt;netease&lt;/code&gt;（网易云音乐）,&lt;code&gt;tencent&lt;/code&gt;（腾讯）,&lt;code&gt;kugou&lt;/code&gt;（酷狗）,&lt;code&gt;xiami&lt;/code&gt;（小米音乐）,&lt;code&gt;baidu&lt;/code&gt;（百度音乐）&lt;/p&gt; &#xA;&lt;h3&gt;使用URL参数（推荐）&lt;/h3&gt; &#xA;&lt;p&gt;HeoMusic支持URL参数 &lt;code&gt;https://music.zhheo.com/?id=&lt;/code&gt;+ id +&lt;code&gt;&amp;amp;server=&lt;/code&gt; + server&lt;/p&gt; &#xA;&lt;p&gt;例如：&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;HeoMusicTop:&lt;/strong&gt; &lt;a href=&#34;https://music.zhheo.com/?id=8668419170&amp;amp;server=tencent&#34;&gt;https://music.zhheo.com/?id=8668419170&amp;amp;server=tencent&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;鸡你太美:&lt;/strong&gt; &lt;a href=&#34;https://music.zhheo.com/?id=7363728147&amp;amp;server=netease&#34;&gt;https://music.zhheo.com/?id=7363728147&amp;amp;server=netease&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;修改HTML的方法（需要自行搭建）&lt;/h3&gt; &#xA;&lt;p&gt;编辑&lt;code&gt;index.html&lt;/code&gt;的相关代码，填写歌单id和服务商&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zhheo/HeoMusic/main/img/help.webp&#34; alt=&#34;修改id和server&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;直接访问首页&lt;code&gt;index.html&lt;/code&gt;即可&lt;/p&gt; &#xA;&lt;h2&gt;参与开发&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zhheo&#34;&gt;@张洪Heo&lt;/a&gt; &lt;a href=&#34;https://github.com/anzhiyu-c&#34;&gt;@anzhiyu&lt;/a&gt; &lt;a href=&#34;https://github.com/Glowed&#34;&gt;@Glowed&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;许可&lt;/h2&gt; &#xA;&lt;p&gt;项目中包含的Aplayer及MetingJS的修改版本，他们均使用MIT协议&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>curio-lesmateriaal/storingapp</title>
    <updated>2023-03-04T01:32:18Z</updated>
    <id>tag:github.com,2023-03-04:/curio-lesmateriaal/storingapp</id>
    <link href="https://github.com/curio-lesmateriaal/storingapp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;StoringApp&lt;/h1&gt; &#xA;&lt;h3&gt;Database&lt;/h3&gt; &#xA;&lt;p&gt;In de map &lt;code&gt;doc&lt;/code&gt; vind je het bestand &lt;code&gt;storingapp.sql&lt;/code&gt;, deze kun je importeren in phpMyAdmin om de structuur van de database weg te zetten.&lt;/p&gt; &#xA;&lt;h3&gt;Config&lt;/h3&gt; &#xA;&lt;p&gt;Kopieer voor je begint het bestand &lt;code&gt;backend/config.example.php&lt;/code&gt; en hernoem de kopie naar &lt;code&gt;config.php&lt;/code&gt;. De echte config staat in je .gitignore, zodat je databasewachtwoord nooit online komt te staan.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/curio-lesmateriaal/storingapp/main/img/logo-big-fill-only.png&#34; alt=&#34;DeveloperLand&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>