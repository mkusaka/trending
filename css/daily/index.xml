<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-15T01:37:11Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pulumi/pulumi-hugo</title>
    <updated>2023-06-15T01:37:11Z</updated>
    <id>tag:github.com,2023-06-15:/pulumi/pulumi-hugo</id>
    <link href="https://github.com/pulumi/pulumi-hugo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Hugo module containing content and layouts used on pulumi.com, including hand-authored docs, the Pulumi blog, and Learn Pulumi.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;pulumi-hugo&lt;/h1&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt; module containing content and layouts used on pulumi.com, including hand-authored docs, the Pulumi blog, and Learn Pulumi.&lt;/p&gt; &#xA;&lt;p&gt;This repository is consumed by &lt;a href=&#34;https://github.com/pulumi/docs&#34;&gt;https://github.com/pulumi/docs&lt;/a&gt; to produce the website you see at &lt;a href=&#34;https://pulumi.com&#34;&gt;https://pulumi.com&lt;/a&gt;. If you&#39;re interested in contributing some docs or a blog post at &lt;a href=&#34;https://pulumi.com/blog&#34;&gt;https://pulumi.com/blog&lt;/a&gt;, you&#39;ve come to the right place! ðŸ™Œ&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;First, be sure to read our &lt;a href=&#34;https://raw.githubusercontent.com/pulumi/pulumi-hugo/master/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; and review our &lt;a href=&#34;https://raw.githubusercontent.com/pulumi/pulumi-hugo/master/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Toolchain&lt;/h2&gt; &#xA;&lt;p&gt;We build the Pulumi website statically with Hugo, manage our Node.js dependencies with Yarn, and write most of our documentation in Markdown. Below is a list of the tools you&#39;ll need to run the website locally:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; (&amp;gt;= 1.15)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt; (&amp;gt;= 0.92)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.js&lt;/a&gt; (&amp;gt;= 1.14)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://classic.yarnpkg.com/en/&#34;&gt;Yarn&lt;/a&gt; (1.x)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;VS Code devcontainer&lt;/h3&gt; &#xA;&lt;p&gt;Alternatively you can use the &lt;a href=&#34;https://code.visualstudio.com/docs/remote/create-dev-container&#34;&gt;devcontainer environment&lt;/a&gt; included in this repo. Open this folder in &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;VS Code&lt;/a&gt; and run the &lt;code&gt;Remote-Containers: Reopen in container&lt;/code&gt; command in the &lt;a href=&#34;https://code.visualstudio.com/docs/getstarted/userinterface#_command-palette&#34;&gt;command palette&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Within the container you can run the various make commands explained below. Port 1313 is forwarded into the container so you can use your normal browser to access the results of &lt;code&gt;make serve&lt;/code&gt; or &lt;code&gt;make serve-all&lt;/code&gt; at &lt;a href=&#34;http://localhost:1313&#34;&gt;http://localhost:1313&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installing prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;Run &lt;code&gt;make ensure&lt;/code&gt; to check for the appropriate tools and versions and install any dependencies. The script will let you know if you&#39;re missing anything important.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make ensure&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running Hugo locally&lt;/h2&gt; &#xA;&lt;p&gt;Once you&#39;ve run &lt;code&gt;make ensure&lt;/code&gt; successfully, you&#39;re ready to run the development server. If you&#39;re only planning on writing Markdown or working with Hugo layouts, this command should be all you need:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make serve&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are planning on making CSS or JS changes you will need to run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make serve-all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can browse the development server at &lt;a href=&#34;http://localhost:1313&#34;&gt;http://localhost:1313&lt;/a&gt;, and any changes you make to content or layouts should be reloaded automatically.&lt;/p&gt; &#xA;&lt;h2&gt;Linting and formatting&lt;/h2&gt; &#xA;&lt;p&gt;To check your code and your Markdown files for issues before submitting, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make lint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This repo uses Prettier for code formatting, to keep styling + formatting issues aligned without the need to be reviewed in PRs. To see what files have formatting diffs, you can run &lt;code&gt;make format&lt;/code&gt; from the project root, which will update all files to conform to our formatting standards. To check the diffs without fixing them, a check runs as part of &lt;code&gt;make lint&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Prettier is easiest to use when you run it automatically on save in your editor - see the docs here: &lt;a href=&#34;https://prettier.io/docs/en/editors.html&#34;&gt;https://prettier.io/docs/en/editors.html&lt;/a&gt;. If you set your editor to format on save, you should be staying aligned with formatting without needing to run any of the above commands.&lt;/p&gt; &#xA;&lt;h2&gt;Tidying up&lt;/h2&gt; &#xA;&lt;p&gt;To clear away any module caches or build artifacts, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make clean&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;About this repository&lt;/h2&gt; &#xA;&lt;p&gt;This repository is a &lt;a href=&#34;https://gohugo.io/hugo-modules/&#34;&gt;Hugo module&lt;/a&gt; that doubles as a development server. &lt;strong&gt;It does not contain every page of the Pulumi website&lt;/strong&gt;, because most of those pages (e.g., those comprising our CLI and SDK docs) are generated from source code, so they aren&#39;t meant to be edited by humans directly.&lt;/p&gt; &#xA;&lt;p&gt;Because of this, many of the links you follow when browsing around on the development server (to paths underneath &lt;code&gt;/docs/reference&lt;/code&gt; for example) will fail to resolve because they originate from another repository â€” most likely &lt;a href=&#34;https://github.com/pulumi/docs&#34;&gt;https://github.com/pulumi/docs&lt;/a&gt; or &lt;a href=&#34;https://github.com/pulumi/registry&#34;&gt;https://github.com/pulumi/registry&lt;/a&gt;. When we build the Pulumi website, we merge this module along with any others into a single build artifact, but when you&#39;re working within an individual module like this one, you may find you&#39;re unable to reach certain pages or verify the links you may want to make to them.&lt;/p&gt; &#xA;&lt;p&gt;If you want to link to a page that exists on &lt;a href=&#34;https://pulumi.com&#34;&gt;https://pulumi.com&lt;/a&gt; but not in this repository, use the page&#39;s path &lt;strong&gt;starting at the root&lt;/strong&gt; in a Markdown or HTML link. For example, in a Markdown file, to link to the &lt;a href=&#34;https://www.pulumi.com/registry/packages/digitalocean/api-docs/droplet/&#34;&gt;Digital Ocean Droplet&lt;/a&gt; page (a page that doesn&#39;t exist in this repository, but that would exist in an integration build), you&#39;d use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;[Digital Ocean Droplet](/registry/packages/digitalocean/api-docs/droplet/)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We used to recommend using &lt;code&gt;{{ relref }}&lt;/code&gt; for these links, which are checked in the build for &lt;a href=&#34;https://github.com/pulumi/docs&#34;&gt;https://github.com/pulumi/docs&lt;/a&gt;; however, this often caused confusion because when a link was incorrect, the failure would not be obviously connected to a change here. For a detailed explanation see &lt;a href=&#34;https://github.com/pulumi/pulumi-hugo/pull/2071&#34;&gt;#2701&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;What&#39;s in this repo&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All hand-authored content and documentation, including top-level pages, guides, blog posts, and some tutorials&lt;/li&gt; &#xA; &lt;li&gt;Most Hugo module components, including archetypes, layouts, partials, shortcodes, data, etc.&lt;/li&gt; &#xA; &lt;li&gt;All the SCSS, TS, and Stencil files used to build our CSS/JSS assets.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You&#39;ll find all of these files in &lt;code&gt;themes/default&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;What&#39;s not in this repo&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generated documentation for the Pulumi CLI and SDK. You&#39;ll find this at &lt;a href=&#34;https://github.com/pulumi/docs&#34;&gt;https://github.com/pulumi/docs&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Generated tutorials. You&#39;ll find these at &lt;a href=&#34;https://github.com/pulumi/examples&#34;&gt;https://github.com/pulumi/examples&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Templates used for generating resource documentation. You&#39;ll find these at &lt;a href=&#34;https://github.com/pulumi/pulumi&#34;&gt;https://github.com/pulumi/pulumi&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Merging and releasing&lt;/h2&gt; &#xA;&lt;p&gt;When a pull request is merged into the &lt;code&gt;master&lt;/code&gt; branch of this repository, the content of the pull request isn&#39;t published immediately. Instead, it&#39;s published at some point later, typically as a result of an &lt;a href=&#34;https://github.com/pulumi/docs/actions/workflows/update-theme.yml&#34;&gt;hourly GitHub Actions job in pulumi/docs&lt;/a&gt; that checks this repository and others for new content. When that hourly job finds new content to be published, it creates a new pull request (or updates an existing one) on pulumi/docs, builds and tests a full site preview, and merges that pull request automatically after the tests pass, triggering the website to be republished.&lt;/p&gt; &#xA;&lt;p&gt;The typical timeline looks something like this:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;8:45 AM: A PR is merged into pulumi-hugo &lt;code&gt;master&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;9:00 AM: The &lt;a href=&#34;https://github.com/pulumi/docs/actions/workflows/update-theme.yml&#34;&gt;&lt;code&gt;Scheduled Jobs: Update Hugo modules&lt;/code&gt;&lt;/a&gt; workflow runs in pulumi/docs.&lt;/li&gt; &#xA; &lt;li&gt;9:05 AM: The workflow detects the newly merged pulumi-hugo content and generates a new PR on pulumi/docs.&lt;/li&gt; &#xA; &lt;li&gt;9:30 AM: The pulumi/docs PR is automatically merged into &lt;code&gt;master&lt;/code&gt;, triggering a redeployment of pulumi.com.&lt;/li&gt; &#xA; &lt;li&gt;10:00 AM: The new content is live.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In other words, once the pulumi/docs PR is generated, it usually takes about an hour (half-hour for the PR build, another for the website deployment) for new content to appear on pulumi.com.&lt;/p&gt; &#xA;&lt;p&gt;Note, however, that despite that we schedule the module-update job to run at the top of the hour, it often doesn&#39;t; delays of 20 minutes or more are unfortunately fairly common.&lt;/p&gt; &#xA;&lt;p&gt;If having more direct control over release timing is important, you can opt to trigger the module-update job manually. To do that, &lt;a href=&#34;https://github.com/pulumi/docs/actions/workflows/update-theme.yml&#34;&gt;navigate to the workflow&lt;/a&gt; and choose &lt;strong&gt;Run Workflow&lt;/strong&gt; to kick it off immediately:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/274700/168188720-e4b2ee56-4b84-4c4f-ad3a-68e145d69124.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The behavior in this case is no different than if you&#39;d allowed the job to run on its own, and once it completes, the remaining steps will complete in the usual way.&lt;/p&gt; &#xA;&lt;h2&gt;Blogging&lt;/h2&gt; &#xA;&lt;p&gt;Interested in writing a blog post? See the &lt;a href=&#34;https://raw.githubusercontent.com/pulumi/pulumi-hugo/master/BLOGGING.md&#34;&gt;blogging README&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Style Guide&lt;/h2&gt; &#xA;&lt;p&gt;We try and align Pulumi documentation to the &lt;a href=&#34;https://raw.githubusercontent.com/pulumi/pulumi-hugo/master/STYLE-GUIDE.md&#34;&gt;Pulumi Docs Style Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Shortcodes and web components&lt;/h2&gt; &#xA;&lt;p&gt;We use number of Hugo shortcodes and web components in our pages. You can read more about many of them in the &lt;a href=&#34;https://github.com/pulumi/theme/tree/master/stencil&#34;&gt;components README&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>codepath/site-week2-lab2-twitter-starter</title>
    <updated>2023-06-15T01:37:11Z</updated>
    <id>tag:github.com,2023-06-15:/codepath/site-week2-lab2-twitter-starter</id>
    <link href="https://github.com/codepath/site-week2-lab2-twitter-starter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CURRENT - 2023 SITE Starter code for Twitter Clone Lab&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Twitter A/B Test Lab&lt;/h1&gt; &#xA;&lt;p&gt;Twitter needs your help running an A/B test for their new UI. An A/B test is where an experimenter shows different UI screens to users to determine which interface they prefer.&lt;/p&gt; &#xA;&lt;p&gt;Previously Twitter&#39;s feed page looked like this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/codepath/site-week2-lab2-twitter-starter/main/old-twitter.png&#34; alt=&#34;old_twitter&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Your goal is to use React to update the Twitter UI to give it a fresh and modern look. You can check out &lt;a href=&#34;https://www.twitter.com&#34;&gt;Twitter&#39;s website&lt;/a&gt; to see how it looks now.&lt;/p&gt; &#xA;&lt;p&gt;Follow the instructions available on the &lt;a href=&#34;https://courses.codepath.org/courses/summer_internship_for_tech_excellence/unit/2#!lab2&#34;&gt;course portal&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Setting up the lab&lt;/h2&gt; &#xA;&lt;p&gt;Make sure to install the proper dependencies.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once that&#39;s done, run the application like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Application Features&lt;/h2&gt; &#xA;&lt;h3&gt;Core Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; The &lt;code&gt;UserProfile&lt;/code&gt; component displays name, username, and number of tweets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; The &lt;code&gt;Feed&lt;/code&gt; component displays an array of tweets and adds tweets in order of most recent at the bottom.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; The &lt;code&gt;TweetInput&lt;/code&gt; component takes in tweets that are a maximum of 140 characters. A character countdown appears as a user is typing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; The &lt;code&gt;TweetInput&lt;/code&gt; expands and pushes the feed down to accommodate a larger text area when text in the handler is clicked.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Stretch Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Create a new component so users can add an image to the user profile that is displayed where the avatar icon goes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Modify the &lt;code&gt;Tweet&lt;/code&gt; component to store its own internal state. Whenever a user clicks on the heart, it should increment the number of likes for that tweet.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Make the &lt;code&gt;Tweet&lt;/code&gt; component collapsible by clicking on the downward-facing chevron icon in the top-right of the component.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add styling so that all hash tags are colored light blue.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; In the &lt;code&gt;TweetInput&lt;/code&gt; component, allow a menu of emojis to appear when the user clicks on the smiley face. Clicking on an emoji should append it to the tweet text.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Extra Stretch:&lt;/strong&gt; Create a modal that pops up whenever the user clicks on the retweet icon. It should give the user the ability to retweet that particular tweet and increment the number of retweets.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>PrimeAcademy/jquery-fungus-fighter</title>
    <updated>2023-06-15T01:37:11Z</updated>
    <id>tag:github.com,2023-06-15:/PrimeAcademy/jquery-fungus-fighter</id>
    <link href="https://github.com/PrimeAcademy/jquery-fungus-fighter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;jQuery Fungus Fighter&lt;/h1&gt; &#xA;&lt;p&gt;Fight mutant fungus villains, with jQuery!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PrimeAcademy/jquery-fungus-fighter/main/demo.gif&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It is you versus the Freaky Fungus, an evil mycological menace from mars. Use your jQuery skills to dispatch attacks against your enemy. To win, the Freaky Fungus must have 0 hit points (HP) before you are out of attack points (AP).&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Handle click events:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;When you click an attack button:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;update &lt;em&gt;state&lt;/em&gt; variable(s) to make the Freaky Fungus lose hit points (HP), and to reduce your attack points (AP).&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/PrimeAcademy/jquery-fungus-fighter/main/#attacks&#34;&gt;Attacks&lt;/a&gt; below, for the AP and HP values of each attack&lt;/li&gt; &#xA; &lt;li&gt;State may be held in one our more variables of your choosing&lt;/li&gt; &#xA; &lt;li&gt;HP and AP values may not be negative (set to zero, if they would otherwise be negative)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Render state changes to the DOM&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update the text above the attack buttons (eg, &#34;100 AP&#34;)&lt;/li&gt; &#xA; &lt;li&gt;Update the text above the enemy fungus (eg, &#34;100 HP&#34;)&lt;/li&gt; &#xA; &lt;li&gt;If the Freaky Fungus runs out of HP, the monster is dead and you win! Replace the &lt;code&gt;walk&lt;/code&gt; class with a &lt;code&gt;dead&lt;/code&gt; class on the freaky-fungus element, to make them fall over and die.&lt;/li&gt; &#xA; &lt;li&gt;If you run out of AP, the monster wins and humanity is doomed ðŸ˜¢ Replace the &lt;code&gt;walk&lt;/code&gt; class with a &lt;code&gt;jump&lt;/code&gt; class on the freaky-fungus element, to make them jump for the glory of the fungal race. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You may no longer attack, if AP is &lt;code&gt;0&lt;/code&gt;. Give all of the attack buttons a &lt;a href=&#34;https://www.w3schools.com/tags/att_button_disabled.asp&#34;&gt;&lt;code&gt;disabled&lt;/code&gt;&lt;/a&gt; attribute, so they may no longer be used.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Stretch Goals&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Progress Bar&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;When state changes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update the value of each &lt;code&gt;&amp;lt;progress&amp;gt;&lt;/code&gt; element&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Hint: the jQuery &lt;code&gt;.val()&lt;/code&gt; method updates the &lt;code&gt;value&lt;/code&gt; attribute of HTML elements!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;HP Regeneration&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nature.com/articles/s41598-022-05715-9&#34;&gt;Scientist have recently revealed&lt;/a&gt; that fungi are tougher under harsh conditions.&lt;/p&gt; &#xA;&lt;p&gt;If the Freaky Fungus&#39; HP falls below 50, have it regenerate 1 HP every second.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;HINT: Look up the built in &lt;code&gt;setInterval()&lt;/code&gt; function!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Attacks&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PrimeAcademy/jquery-fungus-fighter/main/images/arcane-scepter.png&#34; alt=&#34;arcane scepter&#34;&gt; Arcane Scepter&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;AP Cost:&lt;/strong&gt; 12&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;HP Damage:&lt;/strong&gt; 14&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PrimeAcademy/jquery-fungus-fighter/main/images/entangle-3.png&#34; alt=&#34;entangle&#34;&gt; Entangle&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;AP Cost:&lt;/strong&gt; 23&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;HP Damage:&lt;/strong&gt; 9&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PrimeAcademy/jquery-fungus-fighter/main/images/dragon-blade-3.png&#34; alt=&#34;dragon blade&#34;&gt; Dragon Blade&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;AP Cost:&lt;/strong&gt; 38&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;HP Damage:&lt;/strong&gt; 47&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PrimeAcademy/jquery-fungus-fighter/main/images/star-fire.png&#34; alt=&#34;star fire&#34;&gt; Star Fire&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;AP Cost:&lt;/strong&gt; 33&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;HP Damage:&lt;/strong&gt; 25&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Attributions&lt;/h2&gt; &#xA;&lt;p&gt;Game art is freely available from &lt;a href=&#34;https://opengameart.org/&#34;&gt;OpenGameArt.org&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opengameart.org/content/animated-mushroom-monster-pixel-art&#34;&gt;https://opengameart.org/content/animated-mushroom-monster-pixel-art&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opengameart.org/content/attack-icons-wesnoth&#34;&gt;https://opengameart.org/content/attack-icons-wesnoth&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opengameart.org/content/dark-forest&#34;&gt;https://opengameart.org/content/dark-forest&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>