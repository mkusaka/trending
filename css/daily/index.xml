<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-21T01:33:19Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ThePrimeagen/orgwasm</title>
    <updated>2023-01-21T01:33:19Z</updated>
    <id>tag:github.com,2023-01-21:/ThePrimeagen/orgwasm</id>
    <link href="https://github.com/ThePrimeagen/orgwasm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Things i have built&lt;/h1&gt; &#xA;&lt;p&gt;Pagination Component&lt;/p&gt; &#xA;&lt;h1&gt;Starting instructions&lt;/h1&gt; &#xA;&lt;h1&gt;Leptos Starter Template&lt;/h1&gt; &#xA;&lt;p&gt;This is a template demonstrating how to integrate &lt;a href=&#34;https://tailwindcss.com/&#34;&gt;TailwindCSS&lt;/a&gt; with the &lt;a href=&#34;https://github.com/leptos-rs/leptos&#34;&gt;Leptos&lt;/a&gt; web framework and the &lt;a href=&#34;https://github.com/akesson/cargo-leptos&#34;&gt;cargo-leptos&lt;/a&gt; tool.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t have &lt;code&gt;cargo-leptos&lt;/code&gt; installed you can install it with&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cargo install --locked cargo-leptos&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then run&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;npx tailwindcss -i ./input.css -o ./style/output.css --watch&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;and&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cargo leptos watch&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;in this directory.&lt;/p&gt; &#xA;&lt;p&gt;You can begin editing your app at &lt;code&gt;src/app.rs&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installing Tailwind&lt;/h2&gt; &#xA;&lt;p&gt;You can install Tailwind using &lt;code&gt;npm&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -D tailwindcss&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;d rather not use &lt;code&gt;npm&lt;/code&gt;, you can install the Tailwind binary &lt;a href=&#34;https://github.com/tailwindlabs/tailwindcss/releases&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Setting up with &lt;code&gt;neovim&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;You should be using Mason in the first place...&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ThePrimeagen/orgwasm/master/lsp-zero&#34;&gt;https://github.com/VonHeikemen/lsp-zero.nvim&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Notes about Tooling&lt;/h2&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;cargo-leptos&lt;/code&gt; uses &lt;code&gt;nightly&lt;/code&gt; Rust, &lt;code&gt;cargo-generate&lt;/code&gt;, and &lt;code&gt;sass&lt;/code&gt;. If you run into any trouble, you may need to install one or more of these tools.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;rustup toolchain install nightly --allow-downgrade&lt;/code&gt; - make sure you have Rust nightly&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rustup default nightly&lt;/code&gt; - setup nightly as default, or you can use rust-toolchain file later on&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rustup target add wasm32-unknown-unknown&lt;/code&gt; - add the ability to compile Rust to WebAssembly&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cargo install cargo-generate&lt;/code&gt; - install &lt;code&gt;cargo-generate&lt;/code&gt; binary (should be installed automatically in future)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm install -g sass&lt;/code&gt; - install &lt;code&gt;dart-sass&lt;/code&gt; (should be optional in future&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Alternatives to cargo-leptos&lt;/h2&gt; &#xA;&lt;p&gt;This crate can be run without &lt;code&gt;cargo-leptos&lt;/code&gt;, using &lt;code&gt;wasm-pack&lt;/code&gt; and &lt;code&gt;cargo&lt;/code&gt;. To do so, you&#39;ll need to install some other tools. 0. &lt;code&gt;cargo install wasm-pack&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Edit the &lt;code&gt;[package.metadata.leptos]&lt;/code&gt; section and set &lt;code&gt;site-root&lt;/code&gt; to &lt;code&gt;&#34;.&#34;&lt;/code&gt;. You&#39;ll also want to change the path of the &lt;code&gt;&amp;lt;StyleSheet / &amp;gt;&lt;/code&gt; component in the root component to point towards the CSS file in the root. This tells leptos that the WASM/JS files generated by wasm-pack are available at &lt;code&gt;./pkg&lt;/code&gt; and that the CSS files are no longer processed by cargo-leptos. Building to alternative folders is not supported at this time. You&#39;ll also want to edit the call to &lt;code&gt;get_configuration()&lt;/code&gt; to pass in &lt;code&gt;Some(Cargo.toml)&lt;/code&gt;, so that Leptos will read the settings instead of cargo-leptos. If you do so, your file/folder names cannot include dashes.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Server Side Rendering With Hydration&lt;/h3&gt; &#xA;&lt;p&gt;To run it as a server side app with hydration, first you should run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wasm-pack build --target=web --no-default-features --features=hydrate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to generate the WebAssembly to hydrate the HTML delivered from the server.&lt;/p&gt; &#xA;&lt;p&gt;Then run the server with &lt;code&gt;cargo run&lt;/code&gt; to serve the server side rendered HTML and the WASM bundle for hydration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo run --no-default-features --features=ssr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note that if your hydration code changes, you will have to rerun the wasm-pack command above before running &lt;code&gt;cargo run&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Client Side Rendering&lt;/h3&gt; &#xA;&lt;p&gt;You&#39;ll need to install trunk to client side render this bundle.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;cargo install trunk&lt;/code&gt; Then the site can be served with &lt;code&gt;trunk serve --open&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Attribution&lt;/h2&gt; &#xA;&lt;p&gt;Many thanks to GreatGreg for putting together this guide. You can find the original, with added details, &lt;a href=&#34;https://github.com/leptos-rs/leptos/discussions/125&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cmsc389T-winter23/cmsc389T-web-template</title>
    <updated>2023-01-21T01:33:19Z</updated>
    <id>tag:github.com,2023-01-21:/cmsc389T-winter23/cmsc389T-web-template</id>
    <link href="https://github.com/cmsc389T-winter23/cmsc389T-web-template" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;cmsc388T-web-template&lt;/h1&gt;</summary>
  </entry>
</feed>