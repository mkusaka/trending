<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-13T01:33:27Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rawchen/blog-ssm</title>
    <updated>2022-09-13T01:33:27Z</updated>
    <id>tag:github.com,2022-09-13:/rawchen/blog-ssm</id>
    <link href="https://github.com/rawchen/blog-ssm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一个简单漂亮的SSM博客系统。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JavaWeb博客项目&lt;/h1&gt; &#xA;&lt;p&gt;SSM框架的web博客项目——Spring、SpringMVC、MyBatis&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;演示地址：&lt;/strong&gt;&lt;a href=&#34;https://blog.rawchen.com&#34;&gt;blog.rawchen.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;项目简介&lt;/h2&gt; &#xA;&lt;p&gt;博客是一种新型网络交流方式，现已受到大家的欢迎，是网络时代的个人“读者文摘”，是以超级链接为入口的网络日记，它代表着新的生活、工作和学习方式。一个典型的博客结合了文字、图像、其他博客或网站的链接及其它与主题相关的媒体，能够让读者以互动的方式留下意见，是许多博客的重要要素。&lt;/p&gt; &#xA;&lt;h2&gt;技术栈&lt;/h2&gt; &#xA;&lt;p&gt;Spring+SpringMVC+MyBatis+Thymeleaf+JQuery+Js+Ajax+Json+PageHelper&lt;/p&gt; &#xA;&lt;p&gt;前端组件：AdminLTE+datetimepicker+Chart.js+DataTables+Editor.md+SweetAlert2+tocbot+icheck+Prism+Selectize.js+Lightbox&lt;/p&gt; &#xA;&lt;p&gt;服务器： Tomcat_8.5.53&lt;/p&gt; &#xA;&lt;p&gt;数据库： MySQL_5.5.61&lt;/p&gt; &#xA;&lt;p&gt;开发工具：IDEA_2020.3&lt;/p&gt; &#xA;&lt;p&gt;界面制作：Bootstrap v4.4.1&lt;/p&gt; &#xA;&lt;h2&gt;项目使用说明&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;导入结构和数据：blog_ssm.sql&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;解压下载zip重命名blog-ssm-master文件夹为blog-ssm，IDEA打开该blog-ssm项目&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;修改配置数据库连接文件：dbconfig.properties&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;为项目添加Tomcat配置，Deployment下Application context设置为：/&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;Admin:&#x9;帐号：rawchen  密码：rawchen(密码已改，自行部署)&#xA;User:&#x9;帐号：user     密码：user&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;功能描述&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-01.png&#34; alt=&#34;blog-01.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;数据库设计&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-02.png&#34; alt=&#34;blog-02.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;代码结构&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-03.png&#34; alt=&#34;blog-03.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;功能实现部分截图&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-04.png&#34; alt=&#34;blog-04.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-05.png&#34; alt=&#34;blog-05.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-06.png&#34; alt=&#34;blog-06.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-07.png&#34; alt=&#34;blog-07.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-08.png&#34; alt=&#34;blog-08.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-09.png&#34; alt=&#34;blog-09.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-10.png&#34; alt=&#34;blog-10.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-11.png&#34; alt=&#34;blog-11.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-12.png&#34; alt=&#34;blog-12.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-13.png&#34; alt=&#34;blog-13.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-14.png&#34; alt=&#34;blog-14.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-15.png&#34; alt=&#34;blog-15.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-16.png&#34; alt=&#34;blog-16.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-17.png&#34; alt=&#34;blog-17.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-18.png&#34; alt=&#34;blog-18.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-19.png&#34; alt=&#34;blog-19.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-20.png&#34; alt=&#34;blog-20.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-21.png&#34; alt=&#34;blog-21.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-22.png&#34; alt=&#34;blog-22.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/rawchen/JsDelivr/static/blog-ssm/blog-23.png&#34; alt=&#34;blog-23.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stargazers&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rawchen/blog-ssm/stargazers&#34;&gt;&lt;img src=&#34;https://reporoster.com/stars/rawchen/blog-ssm&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Forkers&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rawchen/blog-ssm/network/members&#34;&gt;&lt;img src=&#34;https://reporoster.com/forks/rawchen/blog-ssm&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;待完成&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 模板片段（代码冗余：⻚眉⻚脚公共菜单..）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 后端修改用户&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 后端修改评论&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 文件下载量及前端显示&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 集成Redis&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;如何贡献&lt;/h2&gt; &#xA;&lt;p&gt;可能上述优化任务因时间问题无法再完成下去。 因此你可以试试看，如果觉得修改的挺不错可以合并到主分支。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;操作流程&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Fork 项目到你自己仓库，本地拉取你 fork 的项目并部署修改。 提交本地仓库更改，推送到你 fork 的项目仓库中。 在我的项目发起 Pull requests，我看到后将考虑合并到主分支。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>1Marc/todomvc-vanillajs-2022</title>
    <updated>2022-09-13T01:33:27Z</updated>
    <id>tag:github.com,2022-09-13:/1Marc/todomvc-vanillajs-2022</id>
    <link href="https://github.com/1Marc/todomvc-vanillajs-2022" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TodoMVC with Modern (ES6+), Vanilla JavaScript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TodoMVC App Written in Vanilla JS in 2022&lt;/h1&gt; &#xA;&lt;p&gt;It seems straightforward to build reasonably complex things using only modern JavaScript these days! We can take advantage of most newer features without hacks or polyfills.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s my Vanilla JavaScript implementation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;184 lines of code total (compared to the official vanilla JS TodoMVC from 6 years ago was 900+ LOC)&lt;/li&gt; &#xA; &lt;li&gt;No build tools&lt;/li&gt; &#xA; &lt;li&gt;JavaScript modules&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://1marc.github.io/todomvc-vanillajs-2022/&#34; target=&#34;_new&#34;&gt;View the working example on GitHub pages&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Additional Examples&lt;/h1&gt; &#xA;&lt;h2&gt;Initial Code&lt;/h2&gt; &#xA;&lt;p&gt;The initial version came together in only 60 minutes, then ~30 min of refactoring: &lt;a href=&#34;https://github.com/1Marc/todomvc-vanillajs-2022/tree/fb3c61ed104c440f0c29e3a074b6777c791aa2f6&#34;&gt;see the commit here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;How quick it was to get working was what initially got me pumped about all of the progress in the core JavaScript language.&lt;/p&gt; &#xA;&lt;h2&gt;App Architecture&lt;/h2&gt; &#xA;&lt;p&gt;People were concerned about the scalability of apps like this since there are no components, and it&#39;s all one App. So I extracted the TodoList and App components and wired the components together on the app-architecture branch.&lt;/p&gt; &#xA;&lt;p&gt;Branch: &lt;a href=&#34;https://github.com/1Marc/todomvc-vanillajs-2022/tree/app-architecture&#34;&gt;https://github.com/1Marc/todomvc-vanillajs-2022/tree/app-architecture&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note: I realize it is silly to say the word &#34;scalable&#34; in the context of a todo app, but this should be looked at as a blueprint for building something more extensive. I plan to make more ambitious examples in the future to show what&#39;s possible.&lt;/p&gt; &#xA;&lt;p&gt;Criticism, PRs, and feedback are welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Project Blog Post:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://frontendmasters.com/blog/vanilla-javascript-todomvc/&#34;&gt;&lt;img alt=&#34;Modern Vanilla JavaScript TodoMVC in 2022 Article&#34; width=&#34;750&#34; src=&#34;https://static.frontendmasters.com/assets/blog/2022/vanilla-javascript-todomvc.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Example Components Using this Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codepen.io/1Marc/pen/poLmXZR&#34;&gt;Vanilla JavaScript View Switcher Based on Hash Change&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codepen.io/1Marc/pen/poLmXZR&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/19269/189225506-1c1838e1-5b2a-408b-802a-dfe71b2f703c.png&#34; width=&#34;500&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codepen.io/1Marc/pen/bGvPRdy&#34;&gt;Vanilla JavaScript Countdown Clock&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codepen.io/1Marc/pen/bGvPRdy&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/19269/189225317-bb2ce1fb-a734-4193-beb1-670b5d6fbb04.png&#34; width=&#34;500&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by/4.0/deed.en_US&#34;&gt;&lt;img alt=&#34;Creative Commons License&#34; style=&#34;border-width:0&#34; src=&#34;http://i.creativecommons.org/l/by/4.0/80x15.png&#34;&gt;&lt;/a&gt;&lt;br&gt;This &lt;span xmlns:dct=&#34;http://purl.org/dc/terms/&#34; href=&#34;http://purl.org/dc/dcmitype/InteractiveResource&#34; rel=&#34;dct:type&#34;&gt;work&lt;/span&gt; by &lt;a xmlns:cc=&#34;http://creativecommons.org/ns#&#34; href=&#34;http://sindresorhus.com&#34; property=&#34;cc:attributionName&#34; rel=&#34;cc:attributionURL&#34;&gt;TasteJS&lt;/a&gt; is licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by/4.0/deed.en_US&#34;&gt;Creative Commons Attribution 4.0 International License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>CodegirlSchool/pets-shop</title>
    <updated>2022-09-13T01:33:27Z</updated>
    <id>tag:github.com,2022-09-13:/CodegirlSchool/pets-shop</id>
    <link href="https://github.com/CodegirlSchool/pets-shop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Домашнее задание к модулю &#34;Объекты&#34;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Домашнее задание к модулю &#34;Объекты&#34;&lt;/h1&gt; &#xA;&lt;p&gt;Сегодня тебе предстоит разработать интернет-магазин товаров для животных! Ну, по крайней мере, его часть.&lt;/p&gt; &#xA;&lt;p&gt;Базовый уровень задания обязателен для получения зачета по модулю, продвинутый — по желанию.&lt;/p&gt; &#xA;&lt;h2&gt;Базовый уровень&lt;/h2&gt; &#xA;&lt;p&gt;Выведи в интерфейсе товары для животных (массив &lt;code&gt;items&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Используй шаблон (template) с &lt;code&gt;id=&#34;item-template&#34;&lt;/code&gt; в &lt;a href=&#34;https://github.com/CodegirlSchool/pets-shop/raw/main/index.html#L43&#34;&gt;index.html&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Название &lt;a href=&#34;https://github.com/CodegirlSchool/pets-shop/raw/main/script.js#L2&#34;&gt;товара&lt;/a&gt; (&lt;code&gt;title&lt;/code&gt;) помести в &lt;code&gt;h1&lt;/code&gt;, описание (&lt;code&gt;description&lt;/code&gt;) — в &lt;code&gt;p&lt;/code&gt;, картинку (&lt;code&gt;img&lt;/code&gt;) — в одноименный тег, цену (&lt;code&gt;price&lt;/code&gt;) — в &lt;code&gt;span&lt;/code&gt; с классом &lt;code&gt;&#34;price&#34;&lt;/code&gt; и массив тегов &lt;code&gt;tags&lt;/code&gt; — в &lt;code&gt;div class=&#34;tags&#34;&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&#34;shop-item&#34;&amp;gt;&#xA;  &amp;lt;img src=&#34;&#34;&amp;gt;&#xA;  &amp;lt;div class=&#34;content&#34;&amp;gt;&#xA;    &amp;lt;div class=&#34;tags&#34;&amp;gt;&amp;lt;/div&amp;gt;&#xA;    &amp;lt;h1&amp;gt;&amp;lt;/h1&amp;gt;&#xA;    &amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&#xA;    &amp;lt;span class=&#34;price&#34;&amp;gt;&amp;lt;/span&amp;gt;&#xA;  &amp;lt;/div&amp;gt;&#xA;&amp;lt;/div&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Отрисованные объекты подставь внутрь элемента с &lt;code&gt;id=&#34;shop-items&#34;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Продвинутый уровень&lt;/h2&gt; &#xA;&lt;p&gt;Добавь поиск на сайт 🔎&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;При клике на кнопку c &lt;code&gt;id=&#34;search-btn&#34;&lt;/code&gt; должно браться значение из поля с &lt;code&gt;id=&#34;search-input&#34;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Проверяй, что введенная строка содержится в &lt;code&gt;title&lt;/code&gt; товара. Если это так, то товар подходит под условие поиска.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Будет здорово, если сделаешь поиск нечувствительным к регистру и лишним пробелам.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Если под условие поиска подошел хотя бы один товар, отобрази массив результатов в элементе с &lt;code&gt;id=&#34;shop-items&#34;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Для очистки контейнера от результатов предыдущего поиска используй свойство &lt;code&gt;innerHTML&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Например, следующий код очистит контейнер от его содержимого:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;container.innerHTML = &#39;&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(здесь container — элемент с &lt;code&gt;id=&#34;shop-items&#34;&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Если не нашлось ни одного товара, подходящего под условие поиска, показывай текст &#34;Ничего не найдено&#34;. Для этого используй элемент с &lt;code&gt;id=&#34;nothing-found&#34;&lt;/code&gt;. Не забудь его спрятать (очистить его содержимое) перед следующим поиском&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Желаю удачи! 😊&lt;/p&gt;</summary>
  </entry>
</feed>