<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub CSS Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-06T01:37:40Z</updated>
  <subtitle>Daily Trending of CSS in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mate-academy/react_todo-app</title>
    <updated>2022-08-06T01:37:40Z</updated>
    <id>tag:github.com,2022-08-06:/mate-academy/react_todo-app</id>
    <link href="https://github.com/mate-academy/react_todo-app" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;React ToDo App&lt;/h1&gt; &#xA;&lt;p&gt;Implement a simple &lt;a href=&#34;http://todomvc.com/examples/vanillajs/&#34;&gt;TODO app&lt;/a&gt; working as described below.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you are not sure about how a feature should work just open the real TodoApp and look how it works there&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mate-academy/react_todo-app/master/description/todoapp.gif&#34; alt=&#34;todoapp&#34;&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Implement &lt;code&gt;TodoApp&lt;/code&gt; component with an input field to create new todos on submit (Enter). Each item should have: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;id&lt;/code&gt; - unique identifier (&lt;code&gt;+new Date()&lt;/code&gt; is good enough)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;title&lt;/code&gt; - the text of a todo&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;completed&lt;/code&gt; - current status (&lt;code&gt;false&lt;/code&gt; by default)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Show the number of not completed todos in &lt;code&gt;TodoApp&lt;/code&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Implement &lt;code&gt;TodoList&lt;/code&gt; component to display a list of todos; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;TodoList items={todos} /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Implement &lt;code&gt;TodoItem&lt;/code&gt; component with ability to toggle the &lt;code&gt;completed&lt;/code&gt; status using a checkbox. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;move a &lt;code&gt;li&lt;/code&gt; tag inside the &lt;code&gt;TodoItem&lt;/code&gt;;&lt;/li&gt; &#xA;   &lt;li&gt;add class &lt;code&gt;completed&lt;/code&gt; if todo is completed;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Add the ability to toggle the completed status of all the todos with the &lt;code&gt;toggleAll&lt;/code&gt; checkbox. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;toggleAll&lt;/code&gt; checkbox is active only if all the todos are completed;&lt;/li&gt; &#xA;   &lt;li&gt;if you click the checkbox all the items should be marked as &lt;code&gt;completed&lt;/code&gt;/&lt;code&gt;not completed&lt;/code&gt; depending on &lt;code&gt;toggleAll&lt;/code&gt; checked;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create &lt;code&gt;TodosFilter&lt;/code&gt; component to switch between &lt;code&gt;All&lt;/code&gt;/&lt;code&gt;Active&lt;/code&gt;/&lt;code&gt;Completed&lt;/code&gt; todos (add it to the &lt;code&gt;App&lt;/code&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;add the &lt;code&gt;Status&lt;/code&gt; enum with the required values;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Filter links should update the URL (&lt;code&gt;/&lt;/code&gt;, &lt;code&gt;/active&lt;/code&gt; or &lt;code&gt;/completed&lt;/code&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;correct filter should be applied after page reload;&lt;/li&gt; &#xA;   &lt;li&gt;use &lt;code&gt;HashRouter&lt;/code&gt;;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Add ability to remove a todo using the &lt;code&gt;destroy&lt;/code&gt; button (&lt;code&gt;X&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Add ability to clear completed todos - remove all completed items from the list. The button should contain text &lt;code&gt;Clear completed&lt;/code&gt; in it. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;It should be visible if there is at least 1 completed item in the list.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Hide everything except the input to add new todo if there are no todos. But not if todos are just filtered out.&lt;/li&gt; &#xA; &lt;li&gt;Make inline editing for the TODO item &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;double click on the TODO title makes it editable (just add a class &lt;code&gt;editing&lt;/code&gt; to a &lt;code&gt;li&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;DON&#39;T add &lt;code&gt;htmlFor&lt;/code&gt; to the label!!!&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Enter&lt;/code&gt; saves changes&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Ecs&lt;/code&gt; cancels editing&lt;/li&gt; &#xA;   &lt;li&gt;Todo title can&#39;t be empty! If a user presses &lt;code&gt;Enter&lt;/code&gt; when the title is empty, this todo should be removed.&lt;/li&gt; &#xA;   &lt;li&gt;(*) save changes &lt;code&gt;onBlur&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Save state of the APP to the &lt;code&gt;localStorage&lt;/code&gt; using the name &lt;code&gt;todos&lt;/code&gt; for the key (Here is &lt;a href=&#34;https://mate.academy/learn/react/custom-hooks#/video/777&#34;&gt;the lesson&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;use &lt;code&gt;JSON.stringify&lt;/code&gt; before saving and &lt;code&gt;JSON.parse&lt;/code&gt; on reading&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mate-academy/react_todo-app/master/description/edittodo.gif&#34; alt=&#34;todoedit&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Implement a solution following the &lt;a href=&#34;https://github.com/mate-academy/react_task-guideline#react-tasks-guideline&#34;&gt;React task guideline&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Use the &lt;a href=&#34;https://mate-academy.github.io/fe-program/js/extra/react-typescript&#34;&gt;React TypeScript cheat sheet&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Open one more terminal and run tests with &lt;code&gt;npm test&lt;/code&gt; to ensure your solution is correct.&lt;/li&gt; &#xA; &lt;li&gt;Replace &lt;code&gt;&amp;lt;your_account&amp;gt;&lt;/code&gt; with your Github username in the &lt;a href=&#34;https://%3Cyour_account%3E.github.io/react_todo-app/&#34;&gt;DEMO LINK&lt;/a&gt; and add it to the PR description.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;(*) Advanced tasks (Optional)&lt;/h2&gt; &#xA;&lt;p&gt;Implement saving the todos in &lt;a href=&#34;https://mate-academy.github.io/fe-students-api/&#34;&gt;the API&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;BEFORE you started:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a user by sending a POST request to the &lt;code&gt;/users&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Save the &lt;code&gt;userId&lt;/code&gt; in your code and use it for all the future request where it is required&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tasks&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Load a user from &lt;code&gt;/users/:userId&lt;/code&gt; and show your name on the page&lt;/li&gt; &#xA; &lt;li&gt;Load all the todos from &lt;code&gt;/todos&lt;/code&gt; and filter them by &lt;code&gt;userId&lt;/code&gt; to show only your todos in the App&lt;/li&gt; &#xA; &lt;li&gt;Save new todos by sending POST request to &lt;code&gt;/todos&lt;/code&gt; (don&#39;t forget to add &lt;code&gt;userId&lt;/code&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;use &lt;code&gt;JSON.stringify&lt;/code&gt; when sending a &lt;code&gt;body&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Think what to do in case of a server error (at least notify the user)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Delete the todo by sending DELETE to &lt;code&gt;/todos/:todoId&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Toggle completed status or rename the todo by sending &lt;code&gt;PATCH&lt;/code&gt; to the &lt;code&gt;/todos/:todoId&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;you can send only changed fields (&lt;code&gt;completed&lt;/code&gt; of &lt;code&gt;title&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Implement &lt;code&gt;toggleAll&lt;/code&gt; functionality (try to send as few requests as possible)&lt;/li&gt; &#xA; &lt;li&gt;Implement &lt;code&gt;clear completed&lt;/code&gt; sending as few requests as possible&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;If you want to implement styles yourself&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Font: &#39;helvetica neue&#39;&lt;/li&gt; &#xA; &lt;li&gt;Font sizes to use: 100px, 24px, 14px&lt;/li&gt; &#xA; &lt;li&gt;implement arrow by rotating &#39;❯&#39; symbol&lt;/li&gt; &#xA; &lt;li&gt;Use &#39;✕&#39; symbol to remove TODO item on hover&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mate-academy/react_todo-app/master/public/icons/checked.svg&#34;&gt;checked&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mate-academy/react_todo-app/master/public/icons/unchecked.svg&#34;&gt;unchecked&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>matt8707/hass-config</title>
    <updated>2022-08-06T01:37:40Z</updated>
    <id>tag:github.com,2022-08-06:/matt8707/hass-config</id>
    <link href="https://github.com/matt8707/hass-config" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A different take on designing a Lovelace UI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Home Assistant Configuration&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.home-assistant.io/installation/#compare-installation-methods&#34;&gt;Home Assistant Container&lt;/a&gt; on a Synology DiskStation DS918+ NAS. &lt;a href=&#34;https://www.durable.eu/en_DE/tablet-holder-wall/893323&#34;&gt;Wall mounted&lt;/a&gt; tablet (&lt;a href=&#34;https://www.samsung.com/us/mobile/tablets/galaxy-tab-a/galaxy-tab-a-10-1-2019-32gb-black-wi-fi-sm-t510nzkaxar/&#34;&gt;Galaxy Tab A 10.1&lt;/a&gt;) using &lt;a href=&#34;https://www.fully-kiosk.com/#get-kiosk-apps&#34;&gt;Fully Kiosk Browser&lt;/a&gt;. My configuration is exposed to HomeKit with Apple TV acting as a hub for remote connection.&lt;/p&gt; &#xA;&lt;p&gt;If you like anything here, be sure to &lt;span&gt;🌟&lt;/span&gt; my repo!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/dash.png&#34; alt=&#34;dashboard&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;How do I install this theme?&lt;/strong&gt; &lt;br&gt; There&#39;s no install button. I&#39;m sharing my full configuration&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Can you please add this to HACS?&lt;/strong&gt; &lt;br&gt; No, because this is not a custom card or integration&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Where do I even start?&lt;/strong&gt; &lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/matt8707/hass-config/master/INSTALL.md&#34;&gt;INSTALL.md explains how to get started&lt;/a&gt; &lt;span&gt;🎉&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.home-assistant.io/lovelace/&#34;&gt;Dashboard (Lovelace)&lt;/a&gt; using custom &lt;a href=&#34;https://github.com/custom-cards/button-card&#34;&gt;button-card&lt;/a&gt; and &lt;a href=&#34;https://github.com/thomasloven/lovelace-layout-card&#34;&gt;layout-card&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Portrait, landscape and mobile view - &lt;a href=&#34;https://user-images.githubusercontent.com/36163594/120789256-ad825000-c531-11eb-97c2-18904c48efdd.mp4&#34;&gt;responsive_demo.mp4&lt;/a&gt; &lt;a href=&#34;https://drive.google.com/file/d/1BgGHFgKF2sfI7cvdbWUeCyU_85D2R5x3/view?usp=sharing&#34;&gt;[mirror]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Less cluttered interface by displaying more information in a popup&lt;/li&gt; &#xA; &lt;li&gt;Loading animation for slow responding entities&lt;/li&gt; &#xA; &lt;li&gt;Adding tap audio feedback to the UI for wall-mounted tablet&lt;/li&gt; &#xA; &lt;li&gt;Icon &lt;a href=&#34;https://www.w3schools.com/css/css3_animations.asp&#34;&gt;CSS animations&lt;/a&gt; based on entity state&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/animations.gif&#34; alt=&#34;animations&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Sidebar&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Time and date with greeting based on time of day&lt;/li&gt; &#xA; &lt;li&gt;Entities that are on, using natural language&lt;/li&gt; &#xA; &lt;li&gt;Mailbox counter to show received mail&lt;/li&gt; &#xA; &lt;li&gt;Temperature with emoji based on weather conditions&lt;/li&gt; &#xA; &lt;li&gt;Important calendar information&lt;/li&gt; &#xA; &lt;li&gt;Other conditional alerts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Footer&lt;/h4&gt; &#xA;&lt;p&gt;Popups that supports notifications.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/footer.png&#34; alt=&#34;footer&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Popups&lt;/h4&gt; &#xA;&lt;p&gt;Long press a button to show settings and information pertaining to the entity, using &lt;a href=&#34;https://github.com/thomasloven/hass-browser_mod&#34;&gt;browser_mod&lt;/a&gt;. Light popups are automatically created using the &lt;code&gt;light&lt;/code&gt; button-card template with 🍄 &lt;a href=&#34;https://github.com/piitaya/lovelace-mushroom&#34;&gt;Mushroom&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/group.png&#34; width=&#34;35%&#34;&gt; &#xA;&lt;h4&gt;Media&lt;/h4&gt; &#xA;&lt;p&gt;Conditionally display media players based on the last active device. If nothing is active for 15 minutes, a poster of the last downloaded movie/episode is shown (&lt;a href=&#34;https://github.com/plexinc/pms-docker&#34;&gt;Plex&lt;/a&gt;, &lt;a href=&#34;https://github.com/Radarr/Radarr&#34;&gt;Radarr&lt;/a&gt;, &lt;a href=&#34;https://github.com/Sonarr/Sonarr&#34;&gt;Sonarr&lt;/a&gt;). Swipe to reveal non-active media players&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/media.gif&#34; alt=&#34;media&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Theme&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/thomasloven/lovelace-card-mod&#34;&gt;card-mod&lt;/a&gt; is used for the styles in &lt;code&gt;include/themes.yaml&lt;/code&gt; and each popup also contain styles depending on content. I&#39;ve made a tool to help with css element selectors - &lt;a href=&#34;https://matt8707.github.io/card-mod-helper/&#34;&gt;https://matt8707.github.io/card-mod-helper/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/cardmod_helper.png&#34; alt=&#34;media&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;nas&lt;/th&gt; &#xA;   &lt;th&gt;vacuum&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/nas.png&#34; alt=&#34;nas&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/vacuum.png&#34; alt=&#34;vacuum&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;misc&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/matt8707/hass-config/master/www/img/multi.png&#34; alt=&#34;multi&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Hardware&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Vendor&lt;/th&gt; &#xA;   &lt;th&gt;Product&lt;/th&gt; &#xA;   &lt;th&gt;Integration&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ubiquiti&lt;/td&gt; &#xA;   &lt;td&gt;UniFi Dream Machine&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.home-assistant.io/integrations/unifi/&#34;&gt;unifi&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Router, controller, switch and access point&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Synology&lt;/td&gt; &#xA;   &lt;td&gt;DiskStation DS918+&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.home-assistant.io/integrations/synology_dsm/&#34;&gt;synology_dsm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;4x4TB NAS - &lt;a href=&#34;https://github.com/matt8707/docker-compose-dsm&#34;&gt;matt8707/docker-compose-dsm&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Raspberry&lt;/td&gt; &#xA;   &lt;td&gt;Pi 3 Model B+&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.home-assistant.io/integrations/shell_command/&#34;&gt;shell_command&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Bluetooth communication - &lt;a href=&#34;https://github.com/matt8707/docker-compose-rpi&#34;&gt;matt8707/docker-compose-rpi&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Samsung&lt;/td&gt; &#xA;   &lt;td&gt;Galaxy Tab A SM-T510&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cgarwood/homeassistant-fullykiosk&#34;&gt;custom&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Wall mounted tablet in hallway by the front door&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Philips&lt;/td&gt; &#xA;   &lt;td&gt;Hue&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.home-assistant.io/integrations/hue/&#34;&gt;hue&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Bridge, 15 bulbs, 3 motion sensors, 2 dimmer switches&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Apple&lt;/td&gt; &#xA;   &lt;td&gt;iMac&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.home-assistant.io/integrations/shell_command/&#34;&gt;shell_command&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All-in-one desktop computer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SwitchBot&lt;/td&gt; &#xA;   &lt;td&gt;SwitchBot Bot&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/fphammerle/switchbot-mqtt&#34;&gt;custom&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Bluetooth device that mechanically turns on my computer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Xiaomi&lt;/td&gt; &#xA;   &lt;td&gt;Mi Roborock S50&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.home-assistant.io/integrations/xiaomi_miio/&#34;&gt;xiaomi_miio&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Robot vacuum with lidar - &lt;a href=&#34;https://github.com/PiotrMachowski/Home-Assistant-custom-components-Xiaomi-Cloud-Map-Extractor&#34;&gt;xiaomi-cloud-map-extractor&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Broadlink&lt;/td&gt; &#xA;   &lt;td&gt;RM4 Pro, HTS2 cable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.home-assistant.io/integrations/broadlink/&#34;&gt;broadlink&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Infrared transmitter for AC unit with temp/humidity sensor&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Gosund&lt;/td&gt; &#xA;   &lt;td&gt;SP112&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.home-assistant.io/integrations/esphome/&#34;&gt;esphome&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;3x tuya wifi plugs with power monitoring, flashed with ESPHome&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Belkin&lt;/td&gt; &#xA;   &lt;td&gt;WeMo&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.home-assistant.io/integrations/wemo/&#34;&gt;wemo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2x wifi plugs and 1x motion sensor&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Google&lt;/td&gt; &#xA;   &lt;td&gt;Nest Mini&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.home-assistant.io/integrations/cast/&#34;&gt;cast&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Not really used, Google sent me one&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Deltaco&lt;/td&gt; &#xA;   &lt;td&gt;SH-P01&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.home-assistant.io/integrations/tuya/&#34;&gt;tuya&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Cheap wifi plug for balcony LED lights&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Phoscon&lt;/td&gt; &#xA;   &lt;td&gt;ConBee II&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Koenkk/zigbee2mqtt&#34;&gt;custom&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Zigbee USB gateway using zigbee2mqtt&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Xiaomi&lt;/td&gt; &#xA;   &lt;td&gt;Aqara MCCGQ11LM&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.home-assistant.io/integrations/mqtt/&#34;&gt;mqtt&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;3x zigbee door/window contact sensors&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Apple&lt;/td&gt; &#xA;   &lt;td&gt;TV 4K&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.home-assistant.io/integrations/apple_tv/&#34;&gt;apple_tv&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2x set-top-boxes that streams content from Plex&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sony&lt;/td&gt; &#xA;   &lt;td&gt;Bravia KDL-55W905A&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.home-assistant.io/integrations/braviatv/&#34;&gt;braviatv&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2013 mid-range 55&#34; 1080p 3D TV&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Samsung&lt;/td&gt; &#xA;   &lt;td&gt;UE50RU6025KXXC&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ollo69/ha-samsungtv-smart&#34;&gt;custom&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2019 low-range 50&#34; 4K HDR TV&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sony&lt;/td&gt; &#xA;   &lt;td&gt;PlayStation 5&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dhleong/playactor&#34;&gt;custom&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Game console - State, sleep and wake &lt;a href=&#34;https://community.home-assistant.io/t/playstation-5-command-line-sensor-help-command-failed-empty-json/256275/60&#34;&gt;#ps5 thread&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Apple&lt;/td&gt; &#xA;   &lt;td&gt;iPhone X&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.home-assistant.io/integrations/ios/&#34;&gt;ios&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Home Assistant Companion App for iOS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: I do not recommend &#34;Belkin WeMo&#34; or &#34;Deltaco SH-P01&#34;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;GitHub Repository&lt;/strong&gt; &lt;a href=&#34;https://github.com/matt8707/hass-config&#34;&gt;https://github.com/matt8707/hass-config&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Home Assistant Community Topic&lt;/strong&gt; &lt;a href=&#34;https://community.home-assistant.io/t/a-different-take-on-designing-a-lovelace-ui/162594&#34;&gt;https://community.home-assistant.io/t/a-different-take-on-designing-a-lovelace-ui/162594&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>