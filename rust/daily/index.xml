<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-16T01:34:57Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>apache/arrow-datafusion-comet</title>
    <updated>2024-02-16T01:34:57Z</updated>
    <id>tag:github.com,2024-02-16:/apache/arrow-datafusion-comet</id>
    <link href="https://github.com/apache/arrow-datafusion-comet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache Arrow DataFusion Comet Spark Accelerator&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache Arrow DataFusion Comet&lt;/h1&gt; &#xA;&lt;p&gt;Comet is an Apache Spark plugin that uses &lt;a href=&#34;https://arrow.apache.org/datafusion/&#34;&gt;Apache Arrow DataFusion&lt;/a&gt; as native runtime to achieve improvement in terms of query efficiency and query runtime.&lt;/p&gt; &#xA;&lt;p&gt;On a high level, Comet aims to support:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a native Parquet implementation, including both reader and writer&lt;/li&gt; &#xA; &lt;li&gt;full implementation of Spark operators, including Filter/Project/Aggregation/Join/Exchange etc.&lt;/li&gt; &#xA; &lt;li&gt;full implementation of Spark built-in expressions&lt;/li&gt; &#xA; &lt;li&gt;a UDF framework for users to migrate their existing UDF to native&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following diagram illustrates the architecture of Comet:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/arrow-datafusion-comet/main/url&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/arrow-datafusion-comet/main/doc/comet-overview.png&#34; align=&#34;center&#34; height=&#34;600&#34; width=&#34;750&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Current Status&lt;/h2&gt; &#xA;&lt;p&gt;The project is currently integrated into Apache Spark 3.2, 3.3, and 3.4.&lt;/p&gt; &#xA;&lt;h2&gt;Feature Parity with Apache Spark&lt;/h2&gt; &#xA;&lt;p&gt;The project strives to keep feature parity with Apache Spark, that is, users should expect the same behavior (w.r.t features, configurations, query results, etc) with Comet turned on or turned off in their Spark jobs. In addition, Comet extension should automatically detect unsupported features and fallback to Spark engine.&lt;/p&gt; &#xA;&lt;p&gt;To achieve this, besides unit tests within Comet itself, we also re-use Spark SQL tests and make sure they all pass with Comet extension enabled.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Platforms&lt;/h2&gt; &#xA;&lt;p&gt;Linux, Apple OSX (Intel and M1)&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apache Spark 3.2, 3.3, or 3.4&lt;/li&gt; &#xA; &lt;li&gt;JDK 8 and up&lt;/li&gt; &#xA; &lt;li&gt;GLIBC 2.17 (Centos 7) and up&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>