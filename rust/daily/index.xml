<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-12T01:35:27Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>theopfr/somo</title>
    <updated>2025-06-12T01:35:27Z</updated>
    <id>tag:github.com,2025-06-12:/theopfr/somo</id>
    <link href="https://github.com/theopfr/somo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A human-friendly alternative to netstat for socket and port monitoring on Linux.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/theopfr/somo/master/images/somo-logo.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;A human-friendly alternative to netstat for socket and port monitoring on Linux.&lt;/h3&gt; &#xA;&lt;h2&gt;‚ú® Features:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;pleasing to the eye thanks to a nice table-view&lt;/li&gt; &#xA; &lt;li&gt;filterable (see filter-options below)&lt;/li&gt; &#xA; &lt;li&gt;interactive killing of processes&lt;/li&gt; &#xA; &lt;li&gt;from &lt;code&gt;netstat -tulpn&lt;/code&gt; to &lt;code&gt;somo -l&lt;/code&gt; (almost half the characters, can you believe it?)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/theopfr/somo/master/images/somo-example.png&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;‚¨áÔ∏è Installation:&lt;/h2&gt; &#xA;&lt;h3&gt;Option 1 - Debian:&lt;/h3&gt; &#xA;&lt;p&gt;If you use a Debian OS go to &lt;a href=&#34;https://github.com/theopfr/somo/releases&#34;&gt;releases&lt;/a&gt; and download the latest .deb release.&lt;/p&gt; &#xA;&lt;h3&gt;Option 2 - From crates.io:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo install somo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Most of the time you will want to run this in &lt;code&gt;sudo&lt;/code&gt; mode to see all processes and ports. By default, this is not possible when installed via cargo. But you can create a symlink so the binary can be run as root:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo ln -s ~/.cargo/bin/somo /usr/local/bin/somo&#xA;sudo somo   # this works now&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;üèÉ‚Äç‚ôÄÔ∏è Running somo:&lt;/h2&gt; &#xA;&lt;p&gt;To run somo just type:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo somo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Filtering:&lt;/h3&gt; &#xA;&lt;p&gt;You can use the following flags to filter based on different attributes:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;filter flag&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;description&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;--proto&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;filter by either TCP or UDP&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;tcp&lt;/code&gt; or &lt;code&gt;udp&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;--port, -p&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;filter by a local port&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;port number, e.g &lt;code&gt;5433&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;--remote-port&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;filter by a remote port&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;port number, e.g &lt;code&gt;443&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;--ip&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;filter by a remote IP&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;IP address e.g &lt;code&gt;0.0.0.0&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;--program&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;filter by a client program&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;program name e.g &lt;code&gt;chrome&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;--pid, -p&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;filter by a PID&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PID number, e.g &lt;code&gt;10000&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;--open, -o&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;filter by open connections&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;--listen, -l&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;filter by listening connections&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;--exclude-ipv6&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;don&#39;t list IPv6 connections&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Process killing:&lt;/h3&gt; &#xA;&lt;p&gt;With the &lt;code&gt;--kill, -k&lt;/code&gt; flag you can choose to kill a process after inspecting the connections using an interactive selection option. &lt;img src=&#34;https://raw.githubusercontent.com/theopfr/somo/master/images/somo-kill-example.png&#34; alt=&#34;kill-example&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can of course also apply filters and the kill-flag at the same time:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;somo --program postgres -k&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>