<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-08T01:36:16Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Feel-ix-343/markdown-oxide</title>
    <updated>2024-08-08T01:36:16Z</updated>
    <id>tag:github.com,2024-08-08:/Feel-ix-343/markdown-oxide</id>
    <link href="https://github.com/Feel-ix-343/markdown-oxide" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Robust, Minimalist, Unbundled PKM for use with your favorite text-editor&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;markdown-oxide&lt;/strong&gt;: Robust, Minimalist, Unbundled PKM for your favorite text-editor.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Feel-ix-343/markdown-oxide/main/#quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Docs&lt;/h1&gt; &#xA;&lt;p&gt;Here are some recommended links from our documentation website, &lt;a href=&#34;https://oxide.md&#34;&gt;https://oxide.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Recommended Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oxide.md/v0/Articles/Markdown-Oxide+v0&#34;&gt;What is markdown-oxide?&lt;/a&gt;: An overview of our PKM features to help you determine if markdown-oxide is for you&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oxide.md/v0/Guides/Getting+started+with+Markdown+Oxide+Version+0&#34;&gt;Markdown-oxide getting-started guide&lt;/a&gt;: A guide to setting up your text editor, configuring the PKM, and using the features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oxide.md/v0/references/v0+Features+Reference&#34;&gt;Features Reference&lt;/a&gt;: An organized list of all features&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oxide.md/v0/references/v0+Configuration+Reference&#34;&gt;Configuration Reference&lt;/a&gt;: Configuration information to reference &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://oxide.md/v0/References/v0+Configuration+Reference#Default+Config+File&#34;&gt;Default Config File&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Quick Start&lt;/h1&gt; &#xA;&lt;p&gt;Get started with Markdown-oxide as fast as possible!&lt;/p&gt; &#xA;&lt;p&gt;Set up the PKM for your text editor...&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Feel-ix-343/markdown-oxide/main/#Neovim&#34;&gt;Neovim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Feel-ix-343/markdown-oxide/main/#VSCode&#34;&gt;VSCode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Feel-ix-343/markdown-oxide/main/#Zed&#34;&gt;Zed&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Feel-ix-343/markdown-oxide/main/#Helix&#34;&gt;Helix&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Neovim&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Give Neovim access to the binary.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &#xA;    &lt;details&gt; &#xA;     &lt;summary&gt;Cargo Install (from source)&lt;/summary&gt; &#xA;     &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo install --locked --git https://github.com/Feel-ix-343/markdown-oxide.git markdown-oxide&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/details&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt;  &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &#xA;    &lt;details&gt; &#xA;     &lt;summary&gt;Cargo binstall (from hosted binary)&lt;/summary&gt; &#xA;     &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo binstall --git &#39;https://github.com/feel-ix-343/markdown-oxide&#39; markdown-oxide&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/details&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt;  &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &#xA;    &lt;details&gt; &#xA;     &lt;summary&gt;AUR (from source)&lt;/summary&gt; &#xA;     &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;paru -S markdown-oxide-git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;     &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yay -S markdown-oxide-git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/details&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt;  &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/williamboman/mason.nvim&#34;&gt;Mason.nvim&lt;/a&gt; (from hosted binary)&lt;/li&gt; &#xA;   &lt;li&gt;Nix Unstable: &lt;code&gt;pkgs.markdown-oxide&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Modify your Neovim Configuration ^nvimconfigsetup&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &#xA;    &lt;details&gt; &#xA;     &lt;summary&gt;Modify LSP Config (making sure to adjust capabilities as follows)&lt;/summary&gt; &#xA;     &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- An example nvim-lspconfig capabilities setting&#xA;local capabilities = require(&#34;cmp_nvim_lsp&#34;).default_capabilities(vim.lsp.protocol.make_client_capabilities())&#xA;&#xA;-- Ensure that dynamicRegistration is enabled! This allows the LS to take into account actions like the&#xA;-- Create Unresolved File code action, resolving completions for unindexed code blocks, ...&#xA;capabilities.workspace = {&#xA;    didChangeWatchedFiles = {&#xA;      dynamicRegistration = true,&#xA;    },&#xA;}&#xA;&#xA;require(&#34;lspconfig&#34;).markdown_oxide.setup({&#xA;    capabilities = capabilities, -- again, ensure that capabilities.workspace.didChangeWatchedFiles.dynamicRegistration = true&#xA;    on_attach = on_attach -- configure your on attach config&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/details&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt;  &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &#xA;    &lt;details&gt; &#xA;     &lt;summary&gt;Modify your nvim-cmp configuration&lt;/summary&gt; &#xA;     &lt;p&gt;Modify your nvim-cmp source settings for nvim-lsp (note: you must have nvim-lsp installed)&lt;/p&gt; &#xA;     &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;name = &#39;nvim_lsp&#39;,&#xA;  option = {&#xA;    markdown_oxide = {&#xA;      keyword_pattern = [[\(\k\| \|\/\|#\)\+]]&#xA;    }&#xA;  }&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/details&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt;  &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &#xA;    &lt;details&gt; &#xA;     &lt;summary&gt;(optional) Enable Code Lens (eg for UI reference count)&lt;/summary&gt; &#xA;     &lt;p&gt;Modify your lsp &lt;code&gt;on_attach&lt;/code&gt; function.&lt;/p&gt; &#xA;     &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local function check_codelens_support()&#xA;local clients = vim.lsp.get_active_clients({ bufnr = 0 })&#xA;for _, c in ipairs(clients) do&#xA;  if c.server_capabilities.codeLensProvider then&#xA;    return true&#xA;  end&#xA;end&#xA;return false&#xA;end&#xA;&#xA;vim.api.nvim_create_autocmd({ &#39;TextChanged&#39;, &#39;InsertLeave&#39;, &#39;CursorHold&#39;, &#39;LspAttach&#39;, &#39;BufEnter&#39; }, {&#xA;buffer = bufnr,&#xA;callback = function ()&#xA;  if check_codelens_support() then&#xA;    vim.lsp.codelens.refresh({bufnr = 0})&#xA;  end&#xA;end&#xA;})&#xA;-- trigger codelens refresh&#xA;vim.api.nvim_exec_autocmds(&#39;User&#39;, { pattern = &#39;LspAttached&#39; })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/details&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt;  &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &#xA;    &lt;details&gt; &#xA;     &lt;summary&gt;(optional) Enable opening daily notes with natural langauge&lt;/summary&gt; &#xA;     &lt;p&gt;Modify your lsp &lt;code&gt;on_attach&lt;/code&gt; function to support opening daily notes with, for example, &lt;code&gt;:Daily two days ago&lt;/code&gt; or &lt;code&gt;:Daily next monday&lt;/code&gt;.&lt;/p&gt; &#xA;     &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- setup Markdown Oxide daily note commands&#xA;if client.name == &#34;markdown_oxide&#34; then&#xA;&#xA;  vim.api.nvim_create_user_command(&#xA;    &#34;Daily&#34;,&#xA;    function(args)&#xA;      local input = args.args&#xA;&#xA;      vim.lsp.buf.execute_command({command=&#34;jump&#34;, arguments={input}})&#xA;&#xA;    end,&#xA;    {desc = &#39;Open daily note&#39;, nargs = &#34;*&#34;}&#xA;  )&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/details&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt;  &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ensure relevant plugins are installed: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/nvim-cmp&#34;&gt;Nvim CMP&lt;/a&gt;: UI for using LSP completions&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;Telescope&lt;/a&gt;: UI helpful for the LSP references implementation &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Allows you to view and fuzzy match backlinks to files, headings, and blocks.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/nvimdev/lspsaga.nvim&#34;&gt;Lspsaga&lt;/a&gt;: UI generally helpful for LSP commands &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Allows you to edit linked markdown files in a popup window, for example.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;VSCode&lt;/h2&gt; &#xA;&lt;p&gt;Install the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=FelixZeller.markdown-oxide&#34;&gt;vscode extension&lt;/a&gt; (called &lt;code&gt;Markdown Oxide&lt;/code&gt;). As for how the extension uses the language server, there are two options&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Recommended: the extension will download the server&#39;s binary and use that&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The extension will use &lt;code&gt;markdown-oxide&lt;/code&gt; from path. To install to your path, there are the following methods for VSCode:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &#xA;    &lt;details&gt; &#xA;     &lt;summary&gt;Cargo Install (from source)&lt;/summary&gt; &#xA;     &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo install --locked --git https://github.com/Feel-ix-343/markdown-oxide.git markdown-oxide&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/details&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt;  &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &#xA;    &lt;details&gt; &#xA;     &lt;summary&gt;Cargo binstall[1] (from hosted binary)&lt;/summary&gt; &#xA;     &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo binstall --git &#39;https://github.com/feel-ix-343/markdown-oxide&#39; markdown-oxide&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/details&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt;  &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &#xA;    &lt;details&gt; &#xA;     &lt;summary&gt;AUR (from source)&lt;/summary&gt; &#xA;     &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;paru -S markdown-oxide-git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;     &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yay -S markdown-oxide-git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/details&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt;  &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Nix Unstable: &lt;code&gt;pkgs.markdown-oxide&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Zed&lt;/h2&gt; &#xA;&lt;p&gt;Markdown Oxide is available as an extension titled &lt;code&gt;Markdown Oxide&lt;/code&gt;. Similarly to VSCode, there are two methods for this extension to access the language server&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Recommended: the extension will download the server&#39;s binary and use that&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The extension will use &lt;code&gt;markdown-oxide&lt;/code&gt; from path. To install to your path, there are the following methods for Zed:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &#xA;    &lt;details&gt; &#xA;     &lt;summary&gt;Cargo Install (from source)&lt;/summary&gt; &#xA;     &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo install --locked --git https://github.com/Feel-ix-343/markdown-oxide.git markdown-oxide&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/details&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt;  &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &#xA;    &lt;details&gt; &#xA;     &lt;summary&gt;Cargo binstall[1] (from hosted binary)&lt;/summary&gt; &#xA;     &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo binstall --git &#39;https://github.com/feel-ix-343/markdown-oxide&#39; markdown-oxide&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/details&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt;  &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &#xA;    &lt;details&gt; &#xA;     &lt;summary&gt;AUR (from source)&lt;/summary&gt; &#xA;     &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;paru -S markdown-oxide-git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;     &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yay -S markdown-oxide-git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/details&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt;  &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Nix Unstable: &lt;code&gt;pkgs.markdown-oxide&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Helix&lt;/h2&gt; &#xA;&lt;p&gt;For Helix, all you must do is install the language server&#39;s binary to your path. The following installation methods are available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;Cargo Install (from source)&lt;/summary&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo install --locked --git https://github.com/Feel-ix-343/markdown-oxide.git markdown-oxide&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;/details&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;  &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;Cargo binstall[1] (from hosted binary)&lt;/summary&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo binstall --git &#39;https://github.com/feel-ix-343/markdown-oxide&#39; markdown-oxide&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;/details&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;  &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;AUR (from source)&lt;/summary&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;paru -S markdown-oxide-git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yay -S markdown-oxide-git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;/details&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;  &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Nix Unstable: &lt;code&gt;pkgs.markdown-oxide&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>versotile-org/verso</title>
    <updated>2024-08-08T01:36:16Z</updated>
    <id>tag:github.com,2024-08-08:/versotile-org/verso</id>
    <link href="https://github.com/versotile-org/verso" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A web browser that plays old world blues to build new world hope&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Verso&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://versotile.zulipchat.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/zulip-57a7ff?style=for-the-badge&amp;amp;labelColor=555555&amp;amp;logo=zulip&#34; alt=&#34;project chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A web browser that plays old world blues to build new world hope.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/pewsheen/verso/assets/460329/7df44c7d-a4c5-4393-8378-a8b7bc438b03&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Verso is a web browser built on top of Servo web engine. It&#39;s still under development. We dont&#39; accept any feature request at the moment. But if you are interested, feel free to help test it.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://scoop.sh/&#34;&gt;scoop&lt;/a&gt; and then install other tools:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;scoop install git python llvm cmake curl&#xA;pip install mako&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can also use chocolatey to install if you prefer it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build &amp;amp; run:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;MacOS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://developer.apple.com/xcode/&#34;&gt;Xcode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; and then install other tools:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install cmake pkg-config harfbuzz&#xA;pip install mako&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build &amp;amp; run:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;h4&gt;Flatpak&lt;/h4&gt; &#xA;&lt;p&gt;For unified environment setup and package experience, we choose Flatpak to build the project from the start. Please follow the &lt;a href=&#34;https://flatpak.org/setup/&#34;&gt;Flatpak Setup&lt;/a&gt; page to install Flakpak based on your distribution.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install flatpak runtimes and extensions:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;flatpak install flathub org.freedesktop.Platform//23.08&#xA;flatpak install flathub org.freedesktop.Sdk//23.08&#xA;flatpak install flathub org.freedesktop.Sdk.Extension.rust-stable//23.08&#xA;flatpak install flathub org.freedesktop.Sdk.Extension.llvm18//23.08&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generate manifests and build: // TODO Exporting to a repository instead&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;python3 ./flatpak-cargo-generator.py ./Cargo.lock -o cargo-sources.json&#xA;flatpak-builder --user --install --force-clean target org.versotile.verso.yml&#xA;flatpak run org.versotile.verso&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Nix&lt;/h4&gt; &#xA;&lt;p&gt;We also support building Verso in nix shell. But we don&#39;t bundle it in nix at the moment.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For NixOS:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nix-shell shell.nix --run &#39;cargo r&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For non-NixOS distributions:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nix-shell shell.nix --run &#39;nixGL cargo r&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you prefer to build the project without any sandbox, please follow the instructions in &lt;a href=&#34;https://book.servo.org/hacking/setting-up-your-environment.html#tools-for-linux&#34;&gt;Servo book&lt;/a&gt; to bootstrap. But please understand we don&#39;t triage any build issue without flatpak or nix setup.&lt;/p&gt; &#xA;&lt;h2&gt;Nightly Release&lt;/h2&gt; &#xA;&lt;p&gt;Nightly releases built with CrabNebula Cloud can be found at &lt;a href=&#34;https://web.crabnebula.cloud/verso/verso-nightly/releases&#34;&gt;releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Packages are unsigned currently. If you have problem opening the app on macOS, try &lt;code&gt;xattr -d com.apple.quarantine /Applications/verso.app&lt;/code&gt; after installation.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Future Work&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Multiwindow support.&lt;/li&gt; &#xA; &lt;li&gt;Enable multiprocess mode.&lt;/li&gt; &#xA; &lt;li&gt;Enable sandbox in all platforms.&lt;/li&gt; &#xA; &lt;li&gt;Enable &lt;code&gt;Gstreamer&lt;/code&gt; feature.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>