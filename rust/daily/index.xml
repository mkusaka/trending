<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-23T01:34:15Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>BitBoxSwiss/bitbox02-firmware</title>
    <updated>2024-07-23T01:34:15Z</updated>
    <id>tag:github.com,2024-07-23:/BitBoxSwiss/bitbox02-firmware</id>
    <link href="https://github.com/BitBoxSwiss/bitbox02-firmware" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Firmware code of the BitBox02 hardware wallet&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/BitBoxSwiss/bitbox02-firmware/master/doc/BB02_logo_github.svg?sanitize=true&#34; width=&#34;345px&#34;&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/digitalbitbox/bitbox02-firmware/workflows/ci/badge.svg?branch=master&#34; alt=&#34;CI&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The BitBox02 is a hardware wallet that simplifies secure handling of crypto coins through storing private keys and signing transactions. The content of this repository is the bootloader and firmware used on the device. The BitBox02 is meant to be used primarily with the &lt;a href=&#34;https://github.com/digitalbitbox/bitbox-wallet-app&#34;&gt;BitBoxApp&lt;/a&gt;, although third party integration is possible through the BitBox02 API.&lt;/p&gt; &#xA;&lt;p&gt;The main functionality of the firmware is the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Safely receive and send coins.&lt;/li&gt; &#xA; &lt;li&gt;Interacting with the user through touch sliders and a display.&lt;/li&gt; &#xA; &lt;li&gt;Back up the seed to a microSD card.&lt;/li&gt; &#xA; &lt;li&gt;Back up the seed by displaying the BIP39 mnemonic encoding on the screen.&lt;/li&gt; &#xA; &lt;li&gt;Import 12, 18 or 24 word BIP39 mnemonics&lt;/li&gt; &#xA; &lt;li&gt;Generate a random seed from multiple strong sources of entropy.&lt;/li&gt; &#xA; &lt;li&gt;Protect the seed from attackers.&lt;/li&gt; &#xA; &lt;li&gt;Derive keys from the seed according to BIP39 and BIP32.&lt;/li&gt; &#xA; &lt;li&gt;Return the extended public key for a keypath so that the app can find all unspent transaction outputs.&lt;/li&gt; &#xA; &lt;li&gt;Display the receive address for the keypath, coin and script/address type.&lt;/li&gt; &#xA; &lt;li&gt;Display the receive address, transaction amount and network fee and sign each input after confirmation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/BitBoxSwiss/bitbox02-firmware/master/doc/bb02-firmware-arch.svg?sanitize=true&#34; width=&#34;80%&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The main chip on the device is the microcontroller from Microchip (ATSAMD51J20A). This chip is used for communication to the BitBoxApp via USB, to the user via the sliders and to the secure element (ATECC608B) via I2C.&lt;/p&gt; &#xA;&lt;h3&gt;Sliders&lt;/h3&gt; &#xA;&lt;p&gt;The sliders along the edges of the device are used for user input. There are three input gestures:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tap&lt;/li&gt; &#xA; &lt;li&gt;Slide&lt;/li&gt; &#xA; &lt;li&gt;Hold to confirm&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/BitBoxSwiss/bitbox02-firmware/master/doc/bb02PwEntry.gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;USB&lt;/h3&gt; &#xA;&lt;p&gt;The USB communication is implemented using the request-response pattern with encrypted protobuf messages. The encryption protocol used is Noise with out-of-band authentication.&lt;/p&gt; &#xA;&lt;h3&gt;Hardware docs&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BitBoxSwiss/bitbox02-firmware/master/doc/bb02_v2.10_schematics.pdf&#34;&gt;PCB schematics v2.1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BitBoxSwiss/bitbox02-firmware/master/doc/bb02_bom_v2.10.pdf&#34;&gt;PCB bill of materials (BOM) v2.1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BitBoxSwiss/bitbox02-firmware/master/doc/bb02_xray_v2.10_top_pcb.png&#34;&gt;PCB x-ray v2.1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;The instructions for setting up a development environment can be found in &lt;a href=&#34;https://raw.githubusercontent.com/BitBoxSwiss/bitbox02-firmware/master/BUILD.md&#34;&gt;BUILD.md&lt;/a&gt;. Please also read our &lt;a href=&#34;https://raw.githubusercontent.com/BitBoxSwiss/bitbox02-firmware/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; before filing issues and pull requests.&lt;/p&gt; &#xA;&lt;h2&gt;Installing/upgrading firmware&lt;/h2&gt; &#xA;&lt;p&gt;There are two main ways to install or upgrade firmware on a BitBox02:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;by running the &lt;a href=&#34;https://github.com/digitalbitbox/bitbox-wallet-app/&#34;&gt;BitBoxApp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;by running &lt;a href=&#34;https://raw.githubusercontent.com/BitBoxSwiss/bitbox02-firmware/master/py/load_firmware.py&#34;&gt;./py/load_firmware.py&lt;/a&gt; after installing the &lt;a href=&#34;https://raw.githubusercontent.com/BitBoxSwiss/bitbox02-firmware/master/py&#34;&gt;bitbox02&lt;/a&gt; Python package, e.g. &lt;code&gt;./py/load_firmware.py firmware-btc.v9.12.0.signed.bin&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Reporting a vulnerability&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://raw.githubusercontent.com/BitBoxSwiss/bitbox02-firmware/master/SECURITY.md&#34;&gt;security policy&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>barter-rs/barter-rs</title>
    <updated>2024-07-23T01:34:15Z</updated>
    <id>tag:github.com,2024-07-23:/barter-rs/barter-rs</id>
    <link href="https://github.com/barter-rs/barter-rs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open-source Rust framework for building event-driven live-trading &amp; backtesting systems&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Barter Ecosystem&lt;/h1&gt; &#xA;&lt;p&gt;Barter is an open-source ecosystem of Rust libraries for building live-trading and back-testing systems. It is made up of several easy-to-use, extensible crates:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Barter&lt;/strong&gt;: Framework for building event-driven live-trading and back-testing systems. Algorithmic trade with the peace of mind that comes from knowing your strategies have been back-tested with a near-identical trading engine.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Barter-Data&lt;/strong&gt;: High-performance WebSocket integration library for streaming public market data from leading cryptocurrency exchanges - batteries included.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Barter-Execution&lt;/strong&gt;: Feature rich simulated exchange to assist with back-testing and dry-trading. Also provides a normalised trading interface capable of executing across different financial venues.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Barter-Integration&lt;/strong&gt;: Low-level frameworks for flexible REST/WebSocket integrations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Barter-Macro&lt;/strong&gt;: Barter ecosystem macros.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;See: &lt;a href=&#34;https://crates.io/crates/barter&#34;&gt;&lt;code&gt;Barter&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://crates.io/crates/barter-data&#34;&gt;&lt;code&gt;Barter-Data&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://crates.io/crates/barter-integration&#34;&gt;&lt;code&gt;Barter-Integration&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://crates.io/crates/barter-execution&#34;&gt;&lt;code&gt;Barter-Execution&lt;/code&gt;&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://crates.io/crates/barter-macro&#34;&gt;&lt;code&gt;Barter-Macro&lt;/code&gt;&lt;/a&gt; for more comprehensive documentation.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://crates.io/crates/barter&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/barter.svg?sanitize=true&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/barter-rs/barter-rs/raw/develop/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;MIT licensed&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitlab.com/open-source-keir/financial-modelling/trading/barter-data-rs/-/commits/main&#34;&gt;&lt;img src=&#34;https://gitlab.com/open-source-keir/financial-modelling/trading/barter-data-rs/badges/-/blob/main/pipeline.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/wE7RqhnQMV&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/910237311332151317.svg?logo=discord&amp;amp;style=flat-square&#34; alt=&#34;Discord chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;p&gt;Firstly, see if the answer to your question can be found in the &lt;a href=&#34;https://docs.rs/barter/latest/barter/&#34;&gt;API Documentation&lt;/a&gt;. If the answer is not there, I&#39;d be happy to help via &lt;a href=&#34;https://discord.gg/wE7RqhnQMV&#34;&gt;Chat&lt;/a&gt; and try answer your question via Discord.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Thanks in advance for helping to develop the Barter ecosystem! Please do get hesitate to get touch via the Discord &lt;a href=&#34;https://discord.gg/wE7RqhnQMV&#34;&gt;Chat&lt;/a&gt; to discuss development, new features, and the future roadmap.&lt;/p&gt; &#xA;&lt;h2&gt;Licence&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://github.com/barter-rs/barter-rs/raw/develop/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contribution&lt;/h3&gt; &#xA;&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in one of the Barter workspace crates by you, shall be licensed as MIT, without any additional terms or conditions.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This software is for educational purposes only. Do not risk money which you are afraid to lose. USE THE SOFTWARE AT YOUR OWN RISK. THE AUTHORS AND ALL AFFILIATES ASSUME NO RESPONSIBILITY FOR YOUR TRADING RESULTS.&lt;/p&gt;</summary>
  </entry>
</feed>