<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-15T01:39:52Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ouch-org/ouch</title>
    <updated>2025-02-15T01:39:52Z</updated>
    <id>tag:github.com,2025-02-15:/ouch-org/ouch</id>
    <link href="https://github.com/ouch-org/ouch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Painless compression and decompression in the terminal&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://crates.io/crates/ouch&#34;&gt; &lt;img src=&#34;https://img.shields.io/crates/v/ouch?color=6090FF&amp;amp;style=flat-square&#34; alt=&#34;Crates.io link&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/ouch-org/ouch/raw/main/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/crates/l/ouch?color=6090FF&amp;amp;style=flat-square&#34; alt=&#34;License&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Ouch!&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;ouch&lt;/code&gt; stands for &lt;strong&gt;Obvious Unified Compression Helper&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s a CLI tool for compressing and decompressing for various formats.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ouch-org/ouch/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ouch-org/ouch/main/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ouch-org/ouch/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ouch-org/ouch/main/#supported-formats&#34;&gt;Supported Formats&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ouch-org/ouch/main/#benchmarks&#34;&gt;Benchmarks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ouch-org/ouch/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Easy to use.&lt;/li&gt; &#xA; &lt;li&gt;Fast.&lt;/li&gt; &#xA; &lt;li&gt;Great error message feedback.&lt;/li&gt; &#xA; &lt;li&gt;No runtime dependencies required (for &lt;em&gt;Linux x86_64&lt;/em&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Accessibility mode (&lt;a href=&#34;https://github.com/ouch-org/ouch/wiki/Accessibility&#34;&gt;see more&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Shell completions and man pages.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;Ouch has three main subcommands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ouch decompress&lt;/code&gt; (alias &lt;code&gt;d&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ouch compress&lt;/code&gt; (alias &lt;code&gt;c&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ouch list&lt;/code&gt; (alias &lt;code&gt;l&lt;/code&gt; or &lt;code&gt;ls&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To see &lt;code&gt;help&lt;/code&gt; for a specific command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ouch help &amp;lt;COMMAND&amp;gt;&#xA;ouch &amp;lt;COMMAND&amp;gt; --help  # equivalent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Decompressing&lt;/h2&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;decompress&lt;/code&gt; subcommand, &lt;code&gt;ouch&lt;/code&gt; will detect the extensions automatically.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ouch decompress a.zip&#xA;&#xA;# Decompress multiple files&#xA;ouch decompress a.zip b.tar.gz c.tar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;-d/--dir&lt;/code&gt; flag can be used to redirect decompression results to another directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Decompress &#39;summer_vacation.zip&#39; inside of new folder &#39;pictures&#39;&#xA;ouch decompress summer_vacation.zip --dir pictures&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Compressing&lt;/h2&gt; &#xA;&lt;p&gt;Pass input files to the &lt;code&gt;compress&lt;/code&gt; subcommand, add the &lt;strong&gt;output file&lt;/strong&gt; at the end.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Compress two files into `archive.zip`&#xA;ouch compress one.txt two.txt archive.zip&#xA;&#xA;# Compress file.txt using .lz4 and .zst&#xA;ouch compress file.txt file.txt.lz4.zst&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;ouch&lt;/code&gt; detects the extensions of the &lt;strong&gt;output file&lt;/strong&gt; to decide what formats to use.&lt;/p&gt; &#xA;&lt;h2&gt;Listing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ouch list archive.zip&#xA;&#xA;# Example with tree formatting&#xA;ouch list source-code.zip --tree&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;└── src&#xA;   ├── archive&#xA;   │  ├── mod.rs&#xA;   │  ├── tar.rs&#xA;   │  └── zip.rs&#xA;   ├── utils&#xA;   │  ├── colors.rs&#xA;   │  ├── formatting.rs&#xA;   │  ├── mod.rs&#xA;   │  └── fs.rs&#xA;   ├── commands&#xA;   │  ├── list.rs&#xA;   │  ├── compress.rs&#xA;   │  ├── decompress.rs&#xA;   │  └── mod.rs&#xA;   ├── accessible.rs&#xA;   ├── error.rs&#xA;   ├── cli.rs&#xA;   └── main.rs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Supported formats&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Format&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;.tar&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;.zip&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;7z&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;.gz&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;.xz&lt;/code&gt;, &lt;code&gt;.lzma&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;.bz&lt;/code&gt;, &lt;code&gt;.bz2&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;.bz3&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;.lz4&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;.sz&lt;/code&gt; (Snappy)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;.zst&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;.rar&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;.br&lt;/code&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Supported&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓¹&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓¹&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓²&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓²&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓²&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓³&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;✓: Supports compression and decompression.&lt;/p&gt; &#xA;&lt;p&gt;✓¹: Due to limitations of the compression format itself, (de)compression can&#39;t be done with streaming.&lt;/p&gt; &#xA;&lt;p&gt;✓²: Supported, and compression runs in parallel.&lt;/p&gt; &#xA;&lt;p&gt;✓³: Due to RAR&#39;s restrictive license, only decompression and listing can be supported. If you wish to exclude non-free code from your build, you can disable RAR support by building without the &lt;code&gt;unrar&lt;/code&gt; feature.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;tar&lt;/code&gt; aliases are also supported: &lt;code&gt;tgz&lt;/code&gt;, &lt;code&gt;tbz&lt;/code&gt;, &lt;code&gt;tbz2&lt;/code&gt;, &lt;code&gt;tlz4&lt;/code&gt;, &lt;code&gt;txz&lt;/code&gt;, &lt;code&gt;tlzma&lt;/code&gt;, &lt;code&gt;tsz&lt;/code&gt;, &lt;code&gt;tzst&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Formats can be chained:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;.tar.gz&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.tar.gz.xz.zst.gz.lz4.sz&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If the filename has no extensions, &lt;code&gt;Ouch&lt;/code&gt; will try to infer the format by the &lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_file_signatures&#34;&gt;file signature&lt;/a&gt; and ask the user for confirmation.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;a href=&#34;https://repology.org/project/ouch/versions&#34;&gt; &lt;img align=&#34;right&#34; src=&#34;https://repology.org/badge/vertical-allrepos/ouch.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;On Arch Linux&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman -S ouch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;On Windows via Scoop&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;scoop install ouch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;From crates.io&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo install ouch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Download the latest release bundle&lt;/h2&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://github.com/ouch-org/ouch/releases&#34;&gt;releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Compiling from source code&lt;/h2&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://github.com/ouch-org/ouch/wiki/Compiling-and-installing-from-source-code&#34;&gt;wiki guide on compiling&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Runtime Dependencies&lt;/h1&gt; &#xA;&lt;p&gt;If running &lt;code&gt;ouch&lt;/code&gt; results in a linking error, it means you&#39;re missing a runtime dependency.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re downloading binaries from the &lt;a href=&#34;https://github.com/ouch-org/ouch/releases&#34;&gt;releases page&lt;/a&gt;, try the &lt;code&gt;musl&lt;/code&gt; variants, those are static binaries that require no runtime dependencies.&lt;/p&gt; &#xA;&lt;p&gt;Otherwise, you&#39;ll need these libraries installed on your system:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.7-zip.org/sdk.html&#34;&gt;liblzma&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sourceware.org/bzip2&#34;&gt;libbz2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kspalaiologos/bzip3&#34;&gt;libbz3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zlib.net&#34;&gt;libz&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These should be available in your system&#39;s package manager.&lt;/p&gt; &#xA;&lt;h1&gt;Benchmarks&lt;/h1&gt; &#xA;&lt;p&gt;Benchmark results are available &lt;a href=&#34;https://raw.githubusercontent.com/ouch-org/ouch/main/benchmarks/results.md&#34;&gt;here&lt;/a&gt;. Performance of compressing and decompressing &lt;a href=&#34;https://github.com/rust-lang/rust&#34;&gt;Rust&lt;/a&gt; source code are measured and compared with &lt;a href=&#34;https://github.com/sharkdp/hyperfine&#34;&gt;Hyperfine&lt;/a&gt;. The values presented are the average (wall clock) elapsed time.&lt;/p&gt; &#xA;&lt;p&gt;Note: &lt;code&gt;ouch&lt;/code&gt; focuses heavily on usage ergonomics and nice error messages, but we plan on doing some optimization in the future.&lt;/p&gt; &#xA;&lt;p&gt;Versions used:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ouch&lt;/code&gt; &lt;em&gt;0.4.0&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/tar/&#34;&gt;&lt;code&gt;tar&lt;/code&gt;&lt;/a&gt; &lt;em&gt;1.34&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.info-zip.org/&#34;&gt;&lt;code&gt;unzip&lt;/code&gt;&lt;/a&gt; &lt;em&gt;6.00&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.info-zip.org/&#34;&gt;&lt;code&gt;zip&lt;/code&gt;&lt;/a&gt; &lt;em&gt;3.0&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;ouch&lt;/code&gt; is made out of voluntary work, contributors are very welcome! Contributions of all sizes are appreciated.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open an &lt;a href=&#34;https://github.com/ouch-org/ouch/issues&#34;&gt;issue&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Package it for your favorite distribution or package manager.&lt;/li&gt; &#xA; &lt;li&gt;Share it with a friend!&lt;/li&gt; &#xA; &lt;li&gt;Open a pull request.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you&#39;re creating a Pull Request, check &lt;a href=&#34;https://raw.githubusercontent.com/ouch-org/ouch/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>inko-lang/inko</title>
    <updated>2025-02-15T01:39:52Z</updated>
    <id>tag:github.com,2025-02-15:/inko-lang/inko</id>
    <link href="https://github.com/inko-lang/inko" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A language for building concurrent software with confidence&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://inko-lang.org/images/logo.png?hash=4949e4795aafcdb1e6bbc31a555a9d4e82e65680656b8520831b1ced17c2a4d0&#34; width=&#34;32&#34; alt=&#34;Inko logo&#34;&gt; Inko&lt;/h1&gt; &#xA;&lt;p&gt;Inko is a language for building concurrent software with confidence. Inko makes it easy to build concurrent software, without having to worry about unpredictable performance, unexpected runtime errors, or race conditions.&lt;/p&gt; &#xA;&lt;p&gt;Inko features deterministic automatic memory management, move semantics, static typing, type-safe concurrency, efficient error handling, and more. Inko source code is compiled to machine code using &lt;a href=&#34;https://llvm.org/&#34;&gt;LLVM&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For more information, refer to the &lt;a href=&#34;https://inko-lang.org/&#34;&gt;Inko website&lt;/a&gt; or &lt;a href=&#34;https://docs.inko-lang.org&#34;&gt;the documentation&lt;/a&gt;. If you&#39;d like to follow the development of Inko, consider joining &lt;a href=&#34;https://discord.gg/seeURxHxCb&#34;&gt;our Discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Hello world:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-inko&#34;&gt;import std.stdio (Stdout)&#xA;&#xA;type async Main {&#xA;  fn async main {&#xA;    Stdout.new.print(&#39;Hello, world!&#39;)&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A simple concurrent program:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-inko&#34;&gt;import std.sync (Future, Promise)&#xA;&#xA;type async Calculator {&#xA;  fn async fact(size: Int, output: uni Promise[Int]) {&#xA;    let result = 1.to(size).iter.reduce(1, fn (product, val) { product * val })&#xA;&#xA;    output.set(result)&#xA;  }&#xA;}&#xA;&#xA;type async Main {&#xA;  fn async main {&#xA;    let calc = Calculator()&#xA;&#xA;    match Future.new {&#xA;      case (future, promise) -&amp;gt; {&#xA;        # This calculates the factorial of 15 in the background, then we wait&#xA;        # for the result to be sent back to us.&#xA;        calc.fact(15, promise)&#xA;        future.get # =&amp;gt; 1307674368000&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more examples, refer to the &lt;a href=&#34;https://inko-lang.org/&#34;&gt;website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Details about how to install Inko and its requirements can be found in the &lt;a href=&#34;https://docs.inko-lang.org/manual/main/setup/installation/&#34;&gt;&#34;Installing Inko&#34;&lt;/a&gt; guide in the Inko manual.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;All source code in this repository is licensed under the Mozilla Public License version 2.0, unless stated otherwise. A copy of this license can be found in the file &#34;LICENSE&#34;.&lt;/p&gt;</summary>
  </entry>
</feed>