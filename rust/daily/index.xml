<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-18T01:42:31Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tui-rs-revival/ratatui</title>
    <updated>2023-03-18T01:42:31Z</updated>
    <id>tag:github.com,2023-03-18:/tui-rs-revival/ratatui</id>
    <link href="https://github.com/tui-rs-revival/ratatui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;tui-rs revival project&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tui-rs&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fdehau/tui-rs/actions?query=workflow%3ACI+&#34;&gt;&lt;img src=&#34;https://github.com/fdehau/tui-rs/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/tui&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/tui.svg?sanitize=true&#34; alt=&#34;Crate Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.rs/crate/tui/&#34;&gt;&lt;img src=&#34;https://docs.rs/tui/badge.svg?sanitize=true&#34; alt=&#34;Docs Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/tui-rs-revival/ratatui/main/assets/demo.gif&#34; alt=&#34;Demo cast under Linux Termite with Inconsolata font 12pt&#34;&gt; &#xA;&lt;h1&gt;What is this fork?&lt;/h1&gt; &#xA;&lt;p&gt;This fork was created to continue maintenance on the original TUI project. The original maintainer had created an &lt;a href=&#34;https://github.com/fdehau/tui-rs/issues/654&#34;&gt;issue&lt;/a&gt; explaining how he couldn&#39;t find time to continue development, which led to us creating this fork. From here, we hope to continue developing the TUI crate.&lt;/p&gt; &#xA;&lt;p&gt;In order to organize ourselves, we have created a &lt;strong&gt;temporary&lt;/strong&gt; &lt;a href=&#34;https://discord.gg/pMCEU9hNEj&#34;&gt;discord server&lt;/a&gt;. We have not yet determined with the community what will be our definitive communication medium.&lt;/p&gt; &#xA;&lt;p&gt;Please make sure you read the updated contributing guidelines, especially if you are interested in working on a PR or issue opened in the previous repository.&lt;/p&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;tui-rs&lt;/code&gt; is a &lt;a href=&#34;https://www.rust-lang.org&#34;&gt;Rust&lt;/a&gt; library to build rich terminal user interfaces and dashboards. It is heavily inspired by the &lt;code&gt;Javascript&lt;/code&gt; library &lt;a href=&#34;https://github.com/yaronn/blessed-contrib&#34;&gt;blessed-contrib&lt;/a&gt; and the &lt;code&gt;Go&lt;/code&gt; library &lt;a href=&#34;https://github.com/gizak/termui&#34;&gt;termui&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The library supports multiple backends:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossterm-rs/crossterm&#34;&gt;crossterm&lt;/a&gt; [default]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ticki/termion&#34;&gt;termion&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The library is based on the principle of immediate rendering with intermediate buffers. This means that at each new frame you should build all widgets that are supposed to be part of the UI. While providing a great flexibility for rich and interactive UI, this may introduce overhead for highly dynamic content. So, the implementation try to minimize the number of ansi escapes sequences generated to draw the updated UI. In practice, given the speed of &lt;code&gt;Rust&lt;/code&gt; the overhead rather comes from the terminal emulator than the library itself.&lt;/p&gt; &#xA;&lt;p&gt;Moreover, the library does not provide any input handling nor any event system and you may rely on the previously cited libraries to achieve such features.&lt;/p&gt; &#xA;&lt;h2&gt;Rust version requirements&lt;/h2&gt; &#xA;&lt;p&gt;Since version 0.17.0, &lt;code&gt;tui&lt;/code&gt; requires &lt;strong&gt;rustc version 1.59.0 or greater&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;The documentation can be found on &lt;a href=&#34;https://docs.rs/tui&#34;&gt;docs.rs.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Demo&lt;/h1&gt; &#xA;&lt;p&gt;The demo shown in the gif can be run with all available backends.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# crossterm&#xA;cargo run --example demo --release -- --tick-rate 200&#xA;# termion&#xA;cargo run --example demo --no-default-features --features=termion --release -- --tick-rate 200&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;where &lt;code&gt;tick-rate&lt;/code&gt; is the UI refresh rate in ms.&lt;/p&gt; &#xA;&lt;p&gt;The UI code is in &lt;a href=&#34;https://github.com/fdehau/tui-rs/raw/v0.19.0/examples/demo/ui.rs&#34;&gt;examples/demo/ui.rs&lt;/a&gt; while the application state is in &lt;a href=&#34;https://github.com/fdehau/tui-rs/raw/v0.19.0/examples/demo/app.rs&#34;&gt;examples/demo/app.rs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If the user interface contains glyphs that are not displayed correctly by your terminal, you may want to run the demo without those symbols:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cargo run --example demo --release -- --tick-rate 200 --enhanced-graphics false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Widgets&lt;/h1&gt; &#xA;&lt;h2&gt;Built in&lt;/h2&gt; &#xA;&lt;p&gt;The library comes with the following list of widgets:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fdehau/tui-rs/raw/v0.16.0/examples/block.rs&#34;&gt;Block&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fdehau/tui-rs/raw/v0.16.0/examples/gauge.rs&#34;&gt;Gauge&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fdehau/tui-rs/raw/v0.16.0/examples/sparkline.rs&#34;&gt;Sparkline&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fdehau/tui-rs/raw/v0.16.0/examples/chart.rs&#34;&gt;Chart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fdehau/tui-rs/raw/v0.16.0/examples/barchart.rs&#34;&gt;BarChart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fdehau/tui-rs/raw/v0.16.0/examples/list.rs&#34;&gt;List&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fdehau/tui-rs/raw/v0.16.0/examples/table.rs&#34;&gt;Table&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fdehau/tui-rs/raw/v0.16.0/examples/paragraph.rs&#34;&gt;Paragraph&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fdehau/tui-rs/raw/v0.16.0/examples/canvas.rs&#34;&gt;Canvas (with line, point cloud, map)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fdehau/tui-rs/raw/v0.16.0/examples/tabs.rs&#34;&gt;Tabs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Click on each item to see the source of the example. Run the examples with with cargo (e.g. to run the gauge example &lt;code&gt;cargo run --example gauge&lt;/code&gt;), and quit by pressing &lt;code&gt;q&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can run all examples by running &lt;code&gt;cargo make run-examples&lt;/code&gt; (require &lt;code&gt;cargo-make&lt;/code&gt; that can be installed with &lt;code&gt;cargo install cargo-make&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Third-party libraries, bootstrapping templates and widgets&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uttarayan21/ansi-to-tui&#34;&gt;ansi-to-tui&lt;/a&gt; — Convert ansi colored text to &lt;code&gt;tui::text::Text&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uttarayan21/color-to-tui&#34;&gt;color-to-tui&lt;/a&gt; — Parse hex colors to &lt;code&gt;tui::style::Color&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/orhun/rust-tui-template&#34;&gt;rust-tui-template&lt;/a&gt; — A template for bootstrapping a Rust TUI application with Tui-rs &amp;amp; crossterm&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pmsanford/simple-tui-rs&#34;&gt;simple-tui-rs&lt;/a&gt; — A simple example tui-rs app&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jkelleyrtp/tui-builder&#34;&gt;tui-builder&lt;/a&gt; — Batteries-included MVC framework for Tui-rs + Crossterm apps&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kegesch/tui-clap-rs&#34;&gt;tui-clap&lt;/a&gt; — Use clap-rs together with Tui-rs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kegesch/tui-log-rs&#34;&gt;tui-log&lt;/a&gt; — Example of how to use logging with Tui-rs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gin66/tui-logger&#34;&gt;tui-logger&lt;/a&gt; — Logger and Widget for Tui-rs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/veeso/tui-realm&#34;&gt;tui-realm&lt;/a&gt; — Tui-rs framework to build stateful applications with a React/Elm inspired approach&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/veeso/tui-realm-treeview&#34;&gt;tui-realm-treeview&lt;/a&gt; — Treeview component for Tui-realm&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/EdJoPaTo/tui-rs-tree-widget&#34;&gt;tui tree widget&lt;/a&gt; — Tree Widget for Tui-rs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/markatk/tui-windows-rs&#34;&gt;tui-windows&lt;/a&gt; — Tui-rs abstraction to handle multiple windows and their rendering&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rhysd/tui-textarea&#34;&gt;tui-textarea&lt;/a&gt;: Simple yet powerful multi-line text editor widget supporting several key shortcuts, undo/redo, text search, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/EdJoPaTo/tui-rs-tree-widget&#34;&gt;tui-rs-tree-widgets&lt;/a&gt;: Widget for tree data structures.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sayanarijit/tui-input&#34;&gt;tui-input&lt;/a&gt;: TUI input library supporting multiple backends and tui-rs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Apps using tui&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wcampbell0x2a/adsb_deku#radar-tui&#34;&gt;adsb_deku/radar&lt;/a&gt; — Rust ADS-B decoder + TUI radar application&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/imsnif/bandwhich&#34;&gt;bandwhich&lt;/a&gt; — Terminal utility for displaying current network utilization by process, connection and remote IP/hostname&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/deepu105/battleship-rs&#34;&gt;battleship.rs&lt;/a&gt; — A terminal battleship game in Rust&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom&#34;&gt;bottom&lt;/a&gt; — Yet another cross-platform graphical process/system monitor&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mrusme/conclusive&#34;&gt;conclusive&lt;/a&gt; — Command line client for Plausible Analytics&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/replydev/cotp&#34;&gt;cotp&lt;/a&gt; — Trustworthy, encrypted, command-line TOTP/HOTP authenticator app with import functionality&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/paarthmadan/cube&#34;&gt;cube timer&lt;/a&gt; — A tui-based Rubik&#39;s cube timer written in Rust&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SoptikHa2/desed&#34;&gt;desed&lt;/a&gt; — Debugger for Sed: demystify and debug your sed scripts, from comfort of your terminal&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/imsnif/diskonaut&#34;&gt;diskonaut&lt;/a&gt; — Terminal disk space navigator&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/heyrict/exhaust&#34;&gt;exhaust&lt;/a&gt; — Exhaust all your possibilities.. for the next coming exam&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kachark/game-of-life-rs&#34;&gt;game-of-life-rs&lt;/a&gt; — Conway&#39;s Game of Life implemented in Rust and visualized with Tui-rs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/extrawurst/gitui&#34;&gt;gitui&lt;/a&gt; — Blazing fast terminal-ui for Git written in Rust&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glicol/glicol-cli&#34;&gt;glicol-cli&lt;/a&gt; - Music live coding in terminal&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/orhun/gpg-tui&#34;&gt;gpg-tui&lt;/a&gt; — Manage your GnuPG keys with ease!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/orf/gping&#34;&gt;gping&lt;/a&gt; — Ping, but with a graph&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kamiyaa/joshuto&#34;&gt;joshuto&lt;/a&gt; — Ranger-like terminal file manager written in Rust&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kdash-rs/kdash&#34;&gt;kDash&lt;/a&gt; — A simple and fast dashboard for Kubernetes&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/orhun/kmon&#34;&gt;kmon&lt;/a&gt; — Linux Kernel Manager and Activity Monitor&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/imuxin/kubectl-watch&#34;&gt;kubectl-watch&lt;/a&gt; — A kubectl plugin to provide a pretty delta change view of being watched kubernetes resources&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cpcloud/minesweep-rs&#34;&gt;minesweep&lt;/a&gt; — Sweep some mines for fun, and probably not for profit&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hatoo/oha&#34;&gt;oha&lt;/a&gt; — HTTP load generator, inspired by rakyll/hey with tui animation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mrjackwills/oxker&#34;&gt;oxker&lt;/a&gt; — a simple tui to view &amp;amp; control docker containers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ckaznable/poketex&#34;&gt;poketex&lt;/a&gt; — A simple pokedex based on TUI&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wojciech-zurek/rrtop&#34;&gt;rrtop&lt;/a&gt; — Redis monitoring (top like) app&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/24seconds/rust-sadari-cli&#34;&gt;rust-sadari-cli&lt;/a&gt; — Sadari game based on terminal&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aryakaul/rusty-krab-manager&#34;&gt;rusty-krab-manager&lt;/a&gt; — Time-management TUI in Rust&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Rigellute/spotify-tui&#34;&gt;spotify-tui&lt;/a&gt; — Spotify for the terminal written in Rust&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kdheepak/taskwarrior-tui&#34;&gt;taskwarrior-tui&lt;/a&gt; — A terminal user interface for Taskwarrior&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lemunozm/termchat&#34;&gt;termchat&lt;/a&gt; — Terminal chat through the LAN with video streaming and file transfer&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/veeso/termscp&#34;&gt;termscp&lt;/a&gt; — A feature rich terminal UI file transfer and explorer with support for SCP/SFTP/FTP/S3&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tarkah/tickrs&#34;&gt;tick-rs&lt;/a&gt; — Realtime ticker data in your terminal&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kamiyaa/tsuchita&#34;&gt;tsuchita&lt;/a&gt; — Client-server notification center for dbus desktop notifications&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/landchad/tuinance&#34;&gt;tuinance&lt;/a&gt; — Display financial data on the terminal&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vector.dev&#34;&gt;vector&lt;/a&gt; — A lightweight, ultra-fast tool for building observability pipelines&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sayanarijit/xplr&#34;&gt;xplr&lt;/a&gt; — A hackable, minimal, fast TUI file explorer&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cjbassi/ytop&#34;&gt;ytop&lt;/a&gt; — A TUI system monitor written in Rust (no longer maintained)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bvaisvil/zenith&#34;&gt;zenith&lt;/a&gt; — Sort of like top or htop but with zoom-able charts, CPU, GPU, network, and disk usage&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Alternatives&lt;/h3&gt; &#xA;&lt;p&gt;You might want to checkout &lt;a href=&#34;https://github.com/gyscos/Cursive&#34;&gt;Cursive&lt;/a&gt; for an alternative solution to build text user interfaces in Rust.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tui-rs-revival/ratatui/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>epilys/gerb</title>
    <updated>2023-03-18T01:42:31Z</updated>
    <id>tag:github.com,2023-03-18:/epilys/gerb</id>
    <link href="https://github.com/epilys/gerb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Graphical font editor (GTK + Rust)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gerb&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;em&gt;*gerb ʰ-&lt;/em&gt;: &lt;a href=&#34;https://en.wiktionary.org/wiki/Reconstruction:Proto-Indo-European/gerb%CA%B0-&#34;&gt;reconstructed Proto-Indo-European root&lt;/a&gt;, meaning &lt;em&gt;to carve&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gerb&lt;/code&gt;: a font editor in gtk3 and Rust&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/epilys/gerb/main/screenshot-small.png?raw=true&#34;&gt; &lt;img alt=&#34;Editing a glyph inside gerb.&#34; src=&#34;https://raw.githubusercontent.com/epilys/gerb/main/screenshot-small.png?raw=true&#34; width=&#34;450&#34; height=&#34;429&#34; style=&#34;object-fit: scale-down; height: auto; max-width: 450px;&#34;&gt; &lt;/a&gt;&lt;br&gt; &lt;kbd&gt;&lt;strong&gt;Editing a glyph.&lt;/strong&gt;&lt;/kbd&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;sub&gt;☛ &lt;em&gt;See the &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/epilys/gerb/main/#screenshots&#34;&gt;Screenshots&lt;/a&gt;&lt;/strong&gt; section.&lt;/em&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;gerb&lt;/code&gt; is a GUI font editor and IDE. It is not production ready, but all the basics are implemented.&lt;/p&gt; &#xA;&lt;p&gt;It uses the &lt;a href=&#34;https://unifiedfontobject.org/versions/ufo3/index.html&#34;&gt;&lt;em&gt;UFOv3&lt;/em&gt;&lt;/a&gt; format and can import:[^0]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;UFOv2&lt;/em&gt; directories&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Glyphs&lt;/em&gt; files&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;and export:[^1]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OpenType files (&lt;code&gt;.otf&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;TrueType files (&lt;code&gt;.ttf&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;[^0]: Import is performed with &lt;a href=&#34;https://github.com/fonttools/fonttools&#34;&gt;&lt;code&gt;fontTools&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://github.com/googlefonts/glyphsLib&#34;&gt;&lt;code&gt;glyphsLib&lt;/code&gt;&lt;/a&gt;. [^1]: Export is performed with &lt;a href=&#34;https://github.com/googlefonts/ufo2ft&#34;&gt;&lt;code&gt;ufo2ft&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;span&gt;ℹ&lt;/span&gt; Interested in contributing? Consult &lt;a href=&#34;https://raw.githubusercontent.com/epilys/gerb/main/CONTRIBUTING.md&#34;&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt;.&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;import from other font source formats&lt;/li&gt; &#xA; &lt;li&gt;export to &lt;code&gt;.otf&lt;/code&gt; and &lt;code&gt;.ttf&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;configurable shortcuts system&lt;/li&gt; &#xA; &lt;li&gt;unlimited undos&lt;/li&gt; &#xA; &lt;li&gt;embedded python shell and API for scripting and plugins (work in progress)&lt;/li&gt; &#xA; &lt;li&gt;git integration (work in progress)&lt;/li&gt; &#xA; &lt;li&gt;themeable (work in progress)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Future features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; work with designspaces (&lt;a href=&#34;https://github.com/epilys/gerb/issues/22&#34;&gt;tracking issue #22&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots [^2]&lt;/h2&gt; &#xA;&lt;p&gt;[^2]: The screenshot typeface is &lt;a href=&#34;https://www.velvetyne.fr/fonts/sporting-grotesque/&#34;&gt;Sporting Grotesque&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34; width=&#34;100%&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/epilys/gerb/main/screenshot.png?raw=true&#34;&gt;&lt;img width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/epilys/gerb/main/screenshot.png?raw=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/epilys/gerb/main/screenshot2.png?raw=true&#34;&gt;&lt;img width=&#34;49%&#34; src=&#34;https://raw.githubusercontent.com/epilys/gerb/main/screenshot2.png?raw=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Alternative software&lt;/h2&gt; &#xA;&lt;p&gt;The indisputable FOSS font editor is &lt;a href=&#34;https://fontforge.org&#34;&gt;FontForge&lt;/a&gt;. Realistically this is the only choice one has for making a professional quality typeface with free software.&lt;/p&gt; &#xA;&lt;p&gt;Some other projects in development are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/linebender/runebender&#34;&gt;runebender&lt;/a&gt;: development seems to have slowed down (as of Wed 15 Mar 2023). Unfortunately, the project —while excellent— looks like it is encumbered by its UI toolkit&#39;s development. In contrast, &lt;strong&gt;gerb uses the standard FOSS UI toolkit, &lt;code&gt;gtk&lt;/code&gt;&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MFEK&#34;&gt;MFEK&lt;/a&gt;: it&#39;s focused on splitting every functionality into micro-libraries. &lt;strong&gt;gerb&#39;s technical goal is shipping a font editor&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build &amp;amp; Run&lt;/h2&gt; &#xA;&lt;p&gt;To build, you will need Rust&#39;s &lt;code&gt;cargo&lt;/code&gt; tool. You can get it from your distribution&#39;s packages, or directly with the official &lt;a href=&#34;https://rustup.rs&#34;&gt;&lt;code&gt;rustup&lt;/code&gt;&lt;/a&gt; tool. If the build fails because of missing system libraries, see the &lt;a href=&#34;https://raw.githubusercontent.com/epilys/gerb/main/#dependencies&#34;&gt;Dependencies&lt;/a&gt; section of the &lt;code&gt;README&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Download or clone the git repository with your method of choice, e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/epilys/gerb.git&#xA;cd gerb&#xA;cargo build --release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can open a UFOv3 project from the GUI ( &lt;em&gt;File-&amp;gt;Open&lt;/em&gt; or &lt;kbd&gt;Ctrl+O&lt;/kbd&gt; ) or directly in the command line with the &lt;code&gt;-u&lt;/code&gt; flag. Assuming the project directory is &#34;/path/to/font.ufo&#34;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Directly calling the binary:&#xA;gerb -u /path/to/font.ufo&#xA;# Running through cargo&#xA;cargo run --release -- -u /path/to/font.ufo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Configuration of various settings is stored at the &lt;code&gt;$XDG_CONFIG_HOME/gerb&lt;/code&gt; directory in a TOML file. The usual location would be &lt;code&gt;$HOME/.config/gerb/config.toml&lt;/code&gt;. &lt;a href=&#34;https://en.wikipedia.org/wiki/Dconf&#34;&gt;&lt;strong&gt;dconf&lt;/strong&gt;&lt;/a&gt; is not used but PRs that add dconf support are welcome.&lt;/p&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;Needs &lt;code&gt;gtk-3&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;On Debian and relatives:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;apt install libgtk-3-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On &lt;code&gt;macOS&lt;/code&gt; you can install dependencies with &lt;code&gt;Homebrew&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew install librsvg gtk+3 gnome-icon-theme&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>apache/incubator-opendal</title>
    <updated>2023-03-18T01:42:31Z</updated>
    <id>tag:github.com,2023-03-18:/apache/incubator-opendal</id>
    <link href="https://github.com/apache/incubator-opendal" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache OpenDAL: Access data freely, painlessly, and efficiently.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenDAL   &lt;a href=&#34;https://github.com/apache/incubator-opendal/actions?query=branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/apache/incubator-opendal/ci.yml?branch=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/opendal&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/opendal.svg?sanitize=true&#34; alt=&#34;Latest Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/opendal&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/d/opendal.svg?sanitize=true&#34; alt=&#34;Crate Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/XQy8yGR2dg&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1081052318650339399&#34; alt=&#34;chat&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Open&lt;/strong&gt; &lt;strong&gt;D&lt;/strong&gt;ata &lt;strong&gt;A&lt;/strong&gt;ccess &lt;strong&gt;L&lt;/strong&gt;ayer: Access data freely, painlessly, and efficiently&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Documentation: &lt;a href=&#34;https://docs.rs/opendal/&#34;&gt;stable&lt;/a&gt; | &lt;a href=&#34;https://opendal.apache.org/docs/rust/opendal/&#34;&gt;main&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/docs/changelog/index.html&#34;&gt;Release notes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/5351546/222356748-14276998-501b-4d2a-9b09-b8cff3018204.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Services&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/services/struct.Azblob.html&#34;&gt;azblob&lt;/a&gt;: &lt;a href=&#34;https://azure.microsoft.com/en-us/services/storage/blobs/&#34;&gt;Azure Storage Blob&lt;/a&gt; services.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/services/struct.Azdfs.html&#34;&gt;azdfs&lt;/a&gt;: &lt;a href=&#34;https://azure.microsoft.com/en-us/products/storage/data-lake-storage/&#34;&gt;Azure Data Lake Storage Gen2&lt;/a&gt; services. (As known as &lt;a href=&#34;https://learn.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-abfs-driver&#34;&gt;abfs&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/services/struct.Dashmap.html&#34;&gt;dashmap&lt;/a&gt;: &lt;a href=&#34;https://github.com/xacrimon/dashmap&#34;&gt;dashmap&lt;/a&gt; backend support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/services/struct.Fs.html&#34;&gt;fs&lt;/a&gt;: POSIX alike file system.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/services/struct.Ftp.html&#34;&gt;ftp&lt;/a&gt;: FTP and FTPS support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/services/struct.Gcs.html&#34;&gt;gcs&lt;/a&gt;: &lt;a href=&#34;https://cloud.google.com/storage&#34;&gt;Google Cloud Storage&lt;/a&gt; Service.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/services/struct.Ghac.html&#34;&gt;ghac&lt;/a&gt;: &lt;a href=&#34;https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows&#34;&gt;Github Action Cache&lt;/a&gt; Service.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/services/struct.Hdfs.html&#34;&gt;hdfs&lt;/a&gt;: &lt;a href=&#34;https://hadoop.apache.org/docs/r3.3.4/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html&#34;&gt;Hadoop Distributed File System&lt;/a&gt;(HDFS).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/services/struct.Http.html&#34;&gt;http&lt;/a&gt;: HTTP read-only services.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/services/struct.Ipfs.html&#34;&gt;ipfs&lt;/a&gt;: &lt;a href=&#34;https://ipfs.tech/&#34;&gt;InterPlanetary File System&lt;/a&gt; HTTP Gateway support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/services/struct.Ipmfs.html&#34;&gt;ipmfs&lt;/a&gt;: &lt;a href=&#34;https://ipfs.tech/&#34;&gt;InterPlanetary File System&lt;/a&gt; MFS API support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/services/struct.Memcached.html&#34;&gt;memcached&lt;/a&gt;: &lt;a href=&#34;https://memcached.org/&#34;&gt;Memcached&lt;/a&gt; service support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/services/struct.Memory.html&#34;&gt;memory&lt;/a&gt;: In memory backend.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/services/struct.Moka.html&#34;&gt;moka&lt;/a&gt;: &lt;a href=&#34;https://github.com/moka-rs/moka&#34;&gt;moka&lt;/a&gt; backend support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/services/struct.Obs.html&#34;&gt;obs&lt;/a&gt;: &lt;a href=&#34;https://www.huaweicloud.com/intl/en-us/product/obs.html&#34;&gt;Huawei Cloud Object Storage&lt;/a&gt; Service (OBS).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/services/struct.Oss.html&#34;&gt;oss&lt;/a&gt;: &lt;a href=&#34;https://www.aliyun.com/product/oss&#34;&gt;Aliyun Object Storage Service&lt;/a&gt; (OSS).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/services/struct.Redis.html&#34;&gt;redis&lt;/a&gt;: &lt;a href=&#34;https://redis.io/&#34;&gt;Redis&lt;/a&gt; services support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/services/struct.Rocksdb.html&#34;&gt;rocksdb&lt;/a&gt;: &lt;a href=&#34;http://rocksdb.org/&#34;&gt;RocksDB&lt;/a&gt; services support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/services/struct.S3.html&#34;&gt;s3&lt;/a&gt;: &lt;a href=&#34;https://aws.amazon.com/s3/&#34;&gt;AWS S3&lt;/a&gt; alike services.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/services/sled/struct.Sled.html&#34;&gt;sled&lt;/a&gt;: &lt;a href=&#34;https://crates.io/crates/sled&#34;&gt;sled&lt;/a&gt; services support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/services/struct.Webdav.html&#34;&gt;webdav&lt;/a&gt;: &lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc4918&#34;&gt;WebDAV&lt;/a&gt; Service Support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/services/struct.Webhdfs.html&#34;&gt;webhdfs&lt;/a&gt;: &lt;a href=&#34;https://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-hdfs/WebHDFS.html&#34;&gt;WebHDFS&lt;/a&gt; Service Support.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Access data &lt;strong&gt;freely&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Access different storage services in the same way&lt;/li&gt; &#xA; &lt;li&gt;Behavior tests for all services&lt;/li&gt; &#xA; &lt;li&gt;Cross language/project bindings (working on) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/incubator-opendal/main/bindings/python/&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/incubator-opendal/main/bindings/nodejs/&#34;&gt;Node.js&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/incubator-opendal/main/bindings/object_store/&#34;&gt;object_store&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Access data &lt;strong&gt;painlessly&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;100%&lt;/strong&gt; documents covered&lt;/li&gt; &#xA; &lt;li&gt;Powerful &lt;a href=&#34;https://docs.rs/opendal/latest/opendal/layers/index.html&#34;&gt;&lt;code&gt;Layers&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Automatic &lt;a href=&#34;https://docs.rs/opendal/latest/opendal/layers/struct.RetryLayer.html&#34;&gt;retry&lt;/a&gt; support&lt;/li&gt; &#xA; &lt;li&gt;Full observability: &lt;a href=&#34;https://docs.rs/opendal/latest/opendal/layers/struct.LoggingLayer.html&#34;&gt;logging&lt;/a&gt;, &lt;a href=&#34;https://docs.rs/opendal/latest/opendal/layers/struct.TracingLayer.html&#34;&gt;tracing&lt;/a&gt;, &lt;a href=&#34;https://docs.rs/opendal/latest/opendal/layers/struct.MetricsLayer.html&#34;&gt;metrics&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/opendal/latest/opendal/layers/struct.ChaosLayer.html&#34;&gt;Native chaos testing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Access data &lt;strong&gt;efficiently&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Zero cost: Maps to API calls directly&lt;/li&gt; &#xA; &lt;li&gt;Best effort: Automatically selects best read/seek/next based on services&lt;/li&gt; &#xA; &lt;li&gt;Avoid extra calls: Reuses metadata when possible&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;use opendal::Result;&#xA;use opendal::layers::LoggingLayer;&#xA;use opendal::services;&#xA;use opendal::Operator;&#xA;&#xA;#[tokio::main]&#xA;async fn main() -&amp;gt; Result&amp;lt;()&amp;gt; {&#xA;    // Pick a builder and configure it.&#xA;    let mut builder = services::S3::default();&#xA;    builder.bucket(&#34;test&#34;);&#xA;&#xA;    // Init an operator&#xA;    let op = Operator::create(builder)?&#xA;        // Init with logging layer enabled.&#xA;        .layer(LoggingLayer::default())&#xA;        .finish();&#xA;&#xA;    // Write data&#xA;    op.write(&#34;hello.txt&#34;, &#34;Hello, World!&#34;).await?;&#xA;&#xA;    // Read data&#xA;    let bs = op.read(&#34;hello.txt&#34;).await?;&#xA;&#xA;    // Fetch metadata&#xA;    let meta = op.stat(&#34;hello.txt&#34;).await?;&#xA;    let mode = meta.mode();&#xA;    let length = meta.content_length();&#xA;&#xA;    // Delete&#xA;    op.delete(&#34;hello.txt&#34;).await?;&#xA;&#xA;    Ok(())&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More examples could be found at &lt;a href=&#34;https://opendal.apache.org&#34;&gt;Documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/datafuselabs/databend/&#34;&gt;Databend&lt;/a&gt;: A modern Elasticity and Performance cloud data warehouse.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GreptimeTeam/greptimedb&#34;&gt;GreptimeDB&lt;/a&gt;: An open-source, cloud-native, distributed time-series database.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/deepeth/mars&#34;&gt;deepeth/mars&lt;/a&gt;: The powerful analysis platform to explore and visualize data from blockchain.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mozilla/sccache/&#34;&gt;mozilla/sccache&lt;/a&gt;: sccache is ccache with cloud storage&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/risingwavelabs/risingwave&#34;&gt;risingwave&lt;/a&gt;: A Distributed SQL Database for Stream Processing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vectordotdev/vector&#34;&gt;Vector&lt;/a&gt;: A high-performance observability data pipeline.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/apache/incubator-opendal/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; guide for more details on getting started with contributing to this project.&lt;/p&gt; &#xA;&lt;h2&gt;Getting help&lt;/h2&gt; &#xA;&lt;p&gt;Submit &lt;a href=&#34;https://github.com/apache/incubator-opendal/issues/new&#34;&gt;issues&lt;/a&gt; for bug report or asking questions in the &lt;a href=&#34;https://github.com/apache/incubator-opendal/discussions/new?category=q-a&#34;&gt;Discussions forum&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Talk to develops at &lt;a href=&#34;https://discord.gg/XQy8yGR2dg&#34;&gt;discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0: &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>