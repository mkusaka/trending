<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-04-14T01:35:00Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tuananh/hyper-mcp</title>
    <updated>2025-04-14T01:35:00Z</updated>
    <id>tag:github.com,2025-04-14:/tuananh/hyper-mcp</id>
    <link href="https://github.com/tuananh/hyper-mcp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fast, secure MCP server that extends its capabilities through WebAssembly plugins.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://crates.io/crates/hyper-mcp&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/rust-%23000000.svg?logo=rust&amp;amp;logoColor=white&#34; alt=&#34;Rust&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/tuananh/hyper-mcp/main/#license&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache--2.0-blue&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tuananh/hyper-mcp/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/tuananh/hyper-mcp&#34; alt=&#34;Issues - daytona&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;!-- ![GitHub Release](https://img.shields.io/github/v/release/tuananh/hyper-mcp) --&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;img alt=&#34;hyper-mcp logo&#34; src=&#34;https://raw.githubusercontent.com/tuananh/hyper-mcp/main/assets/logo.png&#34; width=&#34;50%&#34;&gt; &#xA; &lt;/picture&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;hyper-mcp&lt;/h1&gt; &#xA;&lt;p&gt;A fast, secure MCP server that extends its capabilities through WebAssembly plugins.&lt;/p&gt; &#xA;&lt;h2&gt;What is it?&lt;/h2&gt; &#xA;&lt;p&gt;hyper-mcp makes it easy to add AI capabilities to your applications. It works with Claude Desktop, Cursor IDE, and other MCP-compatible apps. Write plugins in your favorite language, distribute them through container registries, and run them anywhere - from cloud to edge.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Write plugins in any language that compiles to WebAssembly&lt;/li&gt; &#xA; &lt;li&gt;Distribute plugins via standard OCI registries (like Docker Hub)&lt;/li&gt; &#xA; &lt;li&gt;Built on &lt;a href=&#34;https://github.com/extism/extism&#34;&gt;Extism&lt;/a&gt; for rock-solid plugin support&lt;/li&gt; &#xA; &lt;li&gt;Lightweight enough for resource-constrained environments&lt;/li&gt; &#xA; &lt;li&gt;Deploy anywhere: serverless, edge, mobile, IoT devices&lt;/li&gt; &#xA; &lt;li&gt;Cross-platform compatibility out of the box&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;Built with security-first mindset:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sandboxed plugins that can&#39;t access your system without permission&lt;/li&gt; &#xA; &lt;li&gt;Memory-safe execution with resource limits&lt;/li&gt; &#xA; &lt;li&gt;Secure plugin distribution through container registries&lt;/li&gt; &#xA; &lt;li&gt;Fine-grained access control for host functions&lt;/li&gt; &#xA; &lt;li&gt;OCI plugin images are signed at publish time and verified at load time with &lt;a href=&#34;https://www.sigstore.dev/&#34;&gt;sigstore&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create your config file: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Linux: &lt;code&gt;$HOME/.config/hyper-mcp/config.json&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Windows: &lt;code&gt;{FOLDERID_RoamingAppData}&lt;/code&gt;. Eg: &lt;code&gt;C:\Users\Alice\AppData\Roaming&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;macOS: &lt;code&gt;$HOME/Library/Application Support/hyper-mcp/config.json&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;plugins&#34;: [&#xA;    {&#xA;      &#34;name&#34;: &#34;time&#34;,&#xA;      &#34;path&#34;: &#34;oci://ghcr.io/tuananh/time-plugin:latest&#34;&#xA;    },&#xA;    {&#xA;      &#34;name&#34;: &#34;qr-code&#34;,&#xA;      &#34;path&#34;: &#34;oci://ghcr.io/tuananh/qrcode-plugin:latest&#34;&#xA;    },&#xA;    {&#xA;      &#34;name&#34;: &#34;hash&#34;,&#xA;      &#34;path&#34;: &#34;oci://ghcr.io/tuananh/hash-plugin:latest&#34;&#xA;    },&#xA;    {&#xA;      &#34;name&#34;: &#34;myip&#34;,&#xA;      &#34;path&#34;: &#34;oci://ghcr.io/tuananh/myip-plugin:latest&#34;,&#xA;      &#34;runtime_config&#34;: {&#xA;        &#34;allowed_hosts&#34;: [&#34;1.1.1.1&#34;]&#xA;      }&#xA;    },&#xA;    {&#xA;      &#34;name&#34;: &#34;fetch&#34;,&#xA;      &#34;path&#34;: &#34;oci://ghcr.io/tuananh/fetch-plugin:latest&#34;,&#xA;      &#34;runtime_config&#34;: {&#xA;        &#34;allowed_hosts&#34;: [&#34;*&#34;]&#xA;      }&#xA;    }&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Start the server:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ hyper-mcp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, logs will go into &lt;a href=&#34;https://docs.rs/dirs/6.0.0/dirs/fn.state_dir.html&#34;&gt;state_dir&lt;/a&gt; on Linux or &lt;a href=&#34;https://docs.rs/dirs/6.0.0/dirs/fn.data_local_dir.html&#34;&gt;data_local_dir&lt;/a&gt; on macOS &amp;amp; Windows.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$XDG_DATA_HOME&lt;/code&gt; or &lt;code&gt;$HOME/.local/share&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/home/alice/.local/share&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$HOME/Library/Application Support&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/Users/Alice/Library/Application Support&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;{FOLDERID_LocalAppData}&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;C:\Users\Alice\AppData\Local&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If you&#39;re loading unsigned OCI plugin, you will need to use &lt;code&gt;--insecure-skip-signature&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;h2&gt;Using with Cursor IDE&lt;/h2&gt; &#xA;&lt;p&gt;You can configure hyper-mcp either globally for all projects or specifically for individual projects.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;For project-scope configuration, create &lt;code&gt;.cursor/mcp.json&lt;/code&gt; in your project root:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;mcpServers&#34;: {&#xA;    &#34;hyper-mcp&#34;: {&#xA;      &#34;command&#34;: &#34;/path/to/hyper-mcp&#34;,&#xA;      &#34;args&#34;: [&#34;&#34;]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Set up hyper-mcp in Cursor&#39;s settings: &lt;img src=&#34;https://raw.githubusercontent.com/tuananh/hyper-mcp/main/assets/cursor-mcp.png&#34; alt=&#34;cursor mcp&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start using tools through chat: &lt;img src=&#34;https://raw.githubusercontent.com/tuananh/hyper-mcp/main/assets/cursor-mcp-1.png&#34; alt=&#34;cursor mcp chat&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Available Plugins&lt;/h2&gt; &#xA;&lt;p&gt;We maintain several example plugins to get you started:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tuananh/hyper-mcp/tree/main/examples/plugins/time&#34;&gt;time&lt;/a&gt;: Get current time and do time calculations (Rust)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tuananh/hyper-mcp/tree/main/examples/plugins/qr-code&#34;&gt;qr-code&lt;/a&gt;: Generate QR codes (Rust)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tuananh/hyper-mcp/tree/main/examples/plugins/hash&#34;&gt;hash&lt;/a&gt;: Generate various types of hashes (Rust)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tuananh/hyper-mcp/tree/main/examples/plugins/myip&#34;&gt;myip&lt;/a&gt;: Get your current IP (Rust)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tuananh/hyper-mcp/tree/main/examples/plugins/fetch&#34;&gt;fetch&lt;/a&gt;: Basic webpage fetching (Rust)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tuananh/hyper-mcp/tree/main/examples/plugins/crypto-price&#34;&gt;crypto-price&lt;/a&gt;: Get cryptocurrency prices (Go)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tuananh/hyper-mcp/tree/main/examples/plugins/fs&#34;&gt;fs&lt;/a&gt;: File system operations (Rust)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tuananh/hyper-mcp/tree/main/examples/plugins/fs&#34;&gt;github&lt;/a&gt;: GitHub plugin (Go)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tuananh/hyper-mcp/tree/main/examples/plugins/eval-py&#34;&gt;eval-py&lt;/a&gt;: Evaluate Python code with RustPython (Rust)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tuananh/hyper-mcp/tree/main/examples/plugins/arxiv&#34;&gt;arxiv&lt;/a&gt;: Search &amp;amp; download arXiv papers (Rust)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tuananh/hyper-mcp/tree/main/examples/plugins/memory&#34;&gt;memory&lt;/a&gt;: Let you store &amp;amp; retrive memory, powered by SQLite (Rust)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tuananh/hyper-mcp/tree/main/examples/plugins/memory&#34;&gt;sqlite&lt;/a&gt;: Interact with SQLite (Rust)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tuananh/hyper-mcp/tree/main/examples/plugins/crates-io&#34;&gt;crates-io&lt;/a&gt;: Get crate general information, check crate latest version (Rust)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tuananh/hyper-mcp/tree/main/examples/plugins/gomodule&#34;&gt;gomodule&lt;/a&gt;: Get Go modules info, version (Rust)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Community-built plugins&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hungran/hyper-mcp-hackernews-tool&#34;&gt;hackernews&lt;/a&gt;: This plugin connects to the Hacker News API to fetch the current top stories and display them with their titles, scores, authors, and URLs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ntheanh201/hyper-mcp-release-monitor-id-tool&#34;&gt;release-monitor-id&lt;/a&gt;: This plugin retrieves project ID from release-monitoring.org, which helps track versions of released software.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/phamngocquy/hyper-mcp-yfinance&#34;&gt;yahoo-finance&lt;/a&gt;: This plugin connects to the Yahoo Finance API to provide stock prices (OHLCV) based on a company name or ticker symbol.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Creating Plugins&lt;/h2&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://github.com/tuananh/hyper-mcp/tree/main/examples/plugins&#34;&gt;example plugins&lt;/a&gt; to learn how to build your own.&lt;/p&gt; &#xA;&lt;p&gt;To publish a plugin:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dockerfile&#34;&gt;# example how to build with rust&#xA;FROM rust:1.86-slim AS builder&#xA;&#xA;RUN rustup target add wasm32-wasip1 &amp;amp;&amp;amp; \&#xA;    rustup component add rust-std --target wasm32-wasip1&#xA;&#xA;WORKDIR /workspace&#xA;COPY . .&#xA;RUN cargo fetch&#xA;RUN cargo build --release --target wasm32-wasip1&#xA;&#xA;# copy wasm to final image&#xA;FROM scratch&#xA;WORKDIR /&#xA;COPY --from=builder /workspace/target/wasm32-wasip1/release/your-plugin.wasm /plugin.wasm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then build and push:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker build -t your-registry/plugin-name .&#xA;docker push your-registry/plugin-name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tuananh/hyper-mcp/main/LICENSE&#34;&gt;Apache 2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.star-history.com/#tuananh/hyper-mcp&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=tuananh/hyper-mcp&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>