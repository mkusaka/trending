<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-31T01:36:58Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>YaLTeR/niri</title>
    <updated>2024-01-31T01:36:58Z</updated>
    <id>tag:github.com,2024-01-31:/YaLTeR/niri</id>
    <link href="https://github.com/YaLTeR/niri" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A scrollable-tiling Wayland compositor.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;niri&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;A scrollable-tiling Wayland compositor.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://matrix.to/#/#niri:matrix.org&#34;&gt;&lt;img alt=&#34;Matrix&#34; src=&#34;https://img.shields.io/matrix/niri%3Amatrix.org?logo=matrix&amp;amp;label=matrix&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/YaLTeR/niri/raw/main/LICENSE&#34;&gt;&lt;img alt=&#34;GitHub License&#34; src=&#34;https://img.shields.io/github/license/YaLTeR/niri&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/YaLTeR/niri/releases&#34;&gt;&lt;img alt=&#34;GitHub Release&#34; src=&#34;https://img.shields.io/github/v/release/YaLTeR/niri?logo=github&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/YaLTeR/niri/assets/1794388/16f87a4a-afac-49aa-b3e6-5e6f16c943a9&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;Windows are arranged in columns on an infinite strip going to the right. Opening a new window never causes existing windows to resize.&lt;/p&gt; &#xA;&lt;p&gt;Every monitor has its own separate window strip. Windows can never &#34;overflow&#34; onto an adjacent monitor.&lt;/p&gt; &#xA;&lt;p&gt;Workspaces are dynamic and arranged vertically. Every monitor has an independent set of workspaces, and there&#39;s always one empty workspace present all the way down.&lt;/p&gt; &#xA;&lt;p&gt;The workspace arrangement is preserved across disconnecting and connecting monitors where it makes sense. When a monitor disconnects, its workspaces will move to another monitor, but upon reconnection they will move back to the original monitor.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Scrollable tiling&lt;/li&gt; &#xA; &lt;li&gt;Dynamic workspaces like in GNOME&lt;/li&gt; &#xA; &lt;li&gt;Built-in screenshot UI&lt;/li&gt; &#xA; &lt;li&gt;Monitor screencasting through xdg-desktop-portal-gnome&lt;/li&gt; &#xA; &lt;li&gt;Touchpad gesture to switch workspaces&lt;/li&gt; &#xA; &lt;li&gt;Configurable layout: gaps, borders, struts, window sizes&lt;/li&gt; &#xA; &lt;li&gt;Live-reloading config&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Video Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YaLTeR/niri/assets/1794388/5d355694-7b06-4f00-8920-8dce54a8721c&#34;&gt;https://github.com/YaLTeR/niri/assets/1794388/5d355694-7b06-4f00-8920-8dce54a8721c&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;A lot of the essential functionality is implemented, plus some goodies on top. Feel free to give niri a try. Have your &lt;a href=&#34;https://github.com/Alexays/Waybar&#34;&gt;waybar&lt;/a&gt;s and &lt;a href=&#34;https://codeberg.org/dnkl/fuzzel&#34;&gt;fuzzel&lt;/a&gt;s ready: niri is not a complete desktop environment.&lt;/p&gt; &#xA;&lt;p&gt;Note that NVIDIA GPUs might have rendering issues.&lt;/p&gt; &#xA;&lt;h2&gt;Inspiration&lt;/h2&gt; &#xA;&lt;p&gt;Niri is heavily inspired by &lt;a href=&#34;https://github.com/paperwm/PaperWM&#34;&gt;PaperWM&lt;/a&gt; which implements scrollable tiling on top of GNOME Shell.&lt;/p&gt; &#xA;&lt;p&gt;One of the reasons that prompted me to try writing my own compositor is being able to properly separate the monitors. Being a GNOME Shell extension, PaperWM has to work against Shell&#39;s global window coordinate space to prevent windows from overflowing.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] For Fedora users, there&#39;s a COPR with built and packaged niri: &lt;a href=&#34;https://copr.fedorainfracloud.org/coprs/yalter/niri/&#34;&gt;https://copr.fedorainfracloud.org/coprs/yalter/niri/&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;NixOS users, check out &lt;a href=&#34;https://github.com/sodiboo/niri-flake&#34;&gt;https://github.com/sodiboo/niri-flake&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;First, install the dependencies for your distribution.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Ubuntu:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt-get install -y software-properties-common&#xA;sudo add-apt-repository -y ppa:pipewire-debian/pipewire-upstream&#xA;sudo apt-get update -y&#xA;sudo apt-get install -y libudev-dev libgbm-dev libxkbcommon-dev libegl1-mesa-dev libwayland-dev libinput-dev libdbus-1-dev libsystemd-dev libseat-dev libpipewire-0.3-dev libpango1.0-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fedora:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo dnf install gcc libudev-devel libgbm-devel libxkbcommon-devel wayland-devel libinput-devel dbus-devel systemd-devel libseat-devel pipewire-devel pango-devel cairo-gobject-devel clang&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Next, get latest stable Rust: &lt;a href=&#34;https://rustup.rs/&#34;&gt;https://rustup.rs/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then, build niri with &lt;code&gt;cargo build --release&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;NixOS/Nix&lt;/h3&gt; &#xA;&lt;p&gt;We have a community-maintained flake which provides a devshell with required dependencies. Use &lt;code&gt;nix build&lt;/code&gt; to build niri, and then run &lt;code&gt;./results/bin/niri&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re not on NixOS, you may need &lt;a href=&#34;https://github.com/nix-community/nixGL&#34;&gt;NixGL&lt;/a&gt; to run the resulting binary:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nix run --impure github:guibou/nixGL -- ./results/bin/niri&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The recommended way to install and run niri is as a standalone desktop session. To do that, put files into the correct directories according to this table.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;File&lt;/th&gt; &#xA;   &lt;th&gt;Destination&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;target/release/niri&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/usr/bin/&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;resources/niri-session&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/usr/bin/&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;resources/niri.desktop&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/usr/share/wayland-sessions/&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;resources/niri-portals.conf&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/usr/share/xdg-desktop-portal/&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;resources/niri.service&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/usr/lib/systemd/user/&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;resources/niri-shutdown.target&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/usr/lib/systemd/user/&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Doing this will make niri appear in GDM and, presumably, other display managers.&lt;/p&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;cargo run --release&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Inside an existing desktop session, it will run in a window. On a TTY, it will run natively.&lt;/p&gt; &#xA;&lt;p&gt;To exit when running on a TTY, press &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;E&lt;/kbd&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Session&lt;/h3&gt; &#xA;&lt;p&gt;If you followed the recommended installation steps above, niri should appear in your display manager. Starting it from there will run niri as a desktop session.&lt;/p&gt; &#xA;&lt;p&gt;The niri session will autostart apps through the systemd xdg-autostart target. You can also autostart systemd services like &lt;a href=&#34;https://github.com/emersion/mako&#34;&gt;mako&lt;/a&gt; by symlinking them into &lt;code&gt;$HOME/.config/systemd/user/niri.service.wants/&lt;/code&gt;. A step-by-step process for this is explained &lt;a href=&#34;https://github.com/YaLTeR/niri/wiki/Example-systemd-Setup&#34;&gt;on the wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Niri also works with some parts of xdg-desktop-portal-gnome. In particular, it supports file choosers and monitor screencasting (e.g. to &lt;a href=&#34;https://flathub.org/apps/com.obsproject.Studio&#34;&gt;OBS&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/YaLTeR/niri/wiki/Important-Software&#34;&gt;This wiki page&lt;/a&gt; explains how to run important software required for normal desktop use, including portals.&lt;/p&gt; &#xA;&lt;h3&gt;Xwayland&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/YaLTeR/niri/wiki/Xwayland&#34;&gt;the wiki page&lt;/a&gt; to learn how to use Xwayland with niri.&lt;/p&gt; &#xA;&lt;h3&gt;IPC&lt;/h3&gt; &#xA;&lt;p&gt;You can communicate with the running niri instance over an IPC socket. Check &lt;code&gt;niri msg --help&lt;/code&gt; for available commands.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;--json&lt;/code&gt; flag prints the response in JSON, rather than formatted. For example, &lt;code&gt;niri msg --json outputs&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For programmatic access, check the &lt;a href=&#34;https://raw.githubusercontent.com/YaLTeR/niri/main/niri-ipc/&#34;&gt;niri-ipc sub-crate&lt;/a&gt; which defines the types. The communication over the IPC socket happens in JSON.&lt;/p&gt; &#xA;&lt;h2&gt;Default Hotkeys&lt;/h2&gt; &#xA;&lt;p&gt;When running on a TTY, the Mod key is &lt;kbd&gt;Super&lt;/kbd&gt;. When running in a window, the Mod key is &lt;kbd&gt;Alt&lt;/kbd&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The general system is: if a hotkey switches somewhere, then adding &lt;kbd&gt;Ctrl&lt;/kbd&gt; will move the focused window or column there.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Hotkey&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;/&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Show a list of important niri hotkeys&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;T&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Spawn &lt;code&gt;alacritty&lt;/code&gt; (terminal)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;D&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Spawn &lt;code&gt;fuzzel&lt;/code&gt; (application launcher)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;L&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Spawn &lt;code&gt;swaylock&lt;/code&gt; (screen locker)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Q&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Close the focused window&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;H&lt;/kbd&gt; or &lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;←&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Focus the column to the left&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;L&lt;/kbd&gt; or &lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;→&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Focus the column to the right&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;J&lt;/kbd&gt; or &lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;↓&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Focus the window below in a column&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;K&lt;/kbd&gt; or &lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;↑&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Focus the window above in a column&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;H&lt;/kbd&gt; or &lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;←&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move the focused column to the left&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;L&lt;/kbd&gt; or &lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;→&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move the focused column to the right&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;J&lt;/kbd&gt; or &lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;↓&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move the focused window below in a column&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;K&lt;/kbd&gt; or &lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;↑&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move the focused window above in a column&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Home&lt;/kbd&gt; and &lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;End&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Focus the first or the last column&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Home&lt;/kbd&gt; and &lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;End&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move the focused column to the very start or to the very end&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;H&lt;/kbd&gt;&lt;kbd&gt;J&lt;/kbd&gt;&lt;kbd&gt;K&lt;/kbd&gt;&lt;kbd&gt;L&lt;/kbd&gt; or &lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;←&lt;/kbd&gt;&lt;kbd&gt;↓&lt;/kbd&gt;&lt;kbd&gt;↑&lt;/kbd&gt;&lt;kbd&gt;→&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Focus the monitor to the side&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;H&lt;/kbd&gt;&lt;kbd&gt;J&lt;/kbd&gt;&lt;kbd&gt;K&lt;/kbd&gt;&lt;kbd&gt;L&lt;/kbd&gt; or &lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;←&lt;/kbd&gt;&lt;kbd&gt;↓&lt;/kbd&gt;&lt;kbd&gt;↑&lt;/kbd&gt;&lt;kbd&gt;→&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move the focused column to the monitor to the side&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;U&lt;/kbd&gt; or &lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;PageDown&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Switch to the workspace below&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;I&lt;/kbd&gt; or &lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;PageUp&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Switch to the workspace above&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;U&lt;/kbd&gt; or &lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;PageDown&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move the focused column to the workspace below&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;I&lt;/kbd&gt; or &lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;PageUp&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move the focused column to the workspace above&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;1&lt;/kbd&gt;–&lt;kbd&gt;9&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Switch to a workspace by index&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;1&lt;/kbd&gt;–&lt;kbd&gt;9&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move the focused column to a workspace by index&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;U&lt;/kbd&gt; or &lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;PageDown&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move the focused workspace down&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;I&lt;/kbd&gt; or &lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;PageUp&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move the focused workspace up&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;,&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Consume the window to the right into the focused column&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;.&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Expel the focused window into its own column&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;R&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Toggle between preset column widths&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;F&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Maximize column&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;C&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Center column within view&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;-&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Decrease column width by 10%&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;=&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Increase column width by 10%&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;-&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Decrease window height by 10%&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;=&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Increase window height by 10%&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;F&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Toggle full-screen on the focused window&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;PrtSc&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Take an area screenshot. Select the area to screenshot with mouse, then press Space to save the screenshot, or Escape to cancel&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;PrtSc&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Take a screenshot of the focused window to clipboard and to &lt;code&gt;~/Pictures/Screenshots/&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;PrtSc&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Take a screenshot of the focused monitor to clipboard and to &lt;code&gt;~/Pictures/Screenshots/&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;T&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Toggle debug tinting of rendered elements&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Mod&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;E&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Exit niri&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Niri will load configuration from &lt;code&gt;$XDG_CONFIG_HOME/.config/niri/config.kdl&lt;/code&gt; or &lt;code&gt;~/.config/niri/config.kdl&lt;/code&gt;. If this fails, it will load &lt;a href=&#34;https://raw.githubusercontent.com/YaLTeR/niri/main/resources/default-config.kdl&#34;&gt;the default configuration file&lt;/a&gt;. Please use the default configuration file as the starting point for your custom configuration.&lt;/p&gt; &#xA;&lt;p&gt;Niri will live-reload most of the configuration settings, like key binds or gaps or output modes, as you change the config file.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;We have a Matrix chat, feel free to join and ask a question: &lt;a href=&#34;https://matrix.to/#/#niri:matrix.org&#34;&gt;https://matrix.to/#/#niri:matrix.org&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>asterinas/asterinas</title>
    <updated>2024-01-31T01:36:58Z</updated>
    <id>tag:github.com,2024-01-31:/asterinas/asterinas</id>
    <link href="https://github.com/asterinas/asterinas" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Asterinas is a safe, fast, and general-purpose OS kernel, written in Rust and providing Linux-compatible ABI.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/asterinas/asterinas/main/docs/src/images/logo_en.svg?sanitize=true&#34; alt=&#34;asterinas-logo&#34; width=&#34;620&#34;&gt;&lt;br&gt; A safe, fast, and general-purpose OS kernel written in Rust and compatible with Linux &lt;/p&gt; &#xA;&lt;h2&gt;Introducing Asterinas&lt;/h2&gt; &#xA;&lt;p&gt;Asterinas (星绽 in Chinese) is a &lt;em&gt;safe&lt;/em&gt;, &lt;em&gt;fast&lt;/em&gt;, and &lt;em&gt;general-purpose&lt;/em&gt; OS kernel that provides &lt;em&gt;Linux-compatible&lt;/em&gt; ABI. It can serve as a seamless replacement for Linux while enhancing &lt;em&gt;memory safety&lt;/em&gt; and &lt;em&gt;developer friendliness&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Asterinas prioritizes memory safety by employing Rust as its sole programming language and limiting the use of &lt;em&gt;unsafe Rust&lt;/em&gt; to a clearly defined and minimal Trusted Computing Base (TCB). This innovative approach, known as &lt;a href=&#34;https://asterinas.github.io/book/kernel/the-framekernel-architecture.html&#34;&gt;the framekernel architecture&lt;/a&gt;, establishes Asterinas as a more secure and dependable kernel option.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Asterinas surpasses Linux in terms of developer friendliness. It empowers kernel developers to (1) utilize the more productive Rust programming language, (2) leverage a purpose-built toolkit called &lt;a href=&#34;&#34;&gt;OSDK&lt;/a&gt; to streamline their workflows, and (3) choose between releasing their kernel modules as open source or keeping them proprietary, thanks to the flexibility offered by &lt;a href=&#34;https://raw.githubusercontent.com/asterinas/asterinas/main/#License&#34;&gt;MPL&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;While the journey towards a production-grade OS kernel can be challenging, we are steadfastly progressing towards our goal. Currently, Asterinas only supports x86-64 VMs. However, &lt;a href=&#34;https://asterinas.github.io/book/kernel/roadmap.html&#34;&gt;our aim for 2024&lt;/a&gt; is to make Asterinas production-ready on x86-64 for both bare-metal and VM environments.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Get yourself an x86-64 Linux machine with Docker installed. Follow the three simple steps below to get Asterinas up and running.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the latest source code.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/asterinas/asterinas&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Run a Docker container as the development environment.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --privileged --network=host --device=/dev/kvm -v ./asterinas:/root/asterinas asterinas/asterinas:0.3.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Inside the container, go to the project folder to build and run Asterinas.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make build&#xA;make run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If everything goes well, Asterinas is now up and running inside a VM.&lt;/p&gt; &#xA;&lt;h2&gt;The Book&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://asterinas.github.io/book/&#34;&gt;The Asterinas Book&lt;/a&gt; to learn more about the project.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Asterinas&#39;s source code and documentation primarily use the &lt;a href=&#34;https://github.com/asterinas/asterinas/raw/main/LICENSE-MPL&#34;&gt;Mozilla Public License (MPL), Version 2.0&lt;/a&gt;. Select components are under more permissive licenses, detailed &lt;a href=&#34;https://github.com/asterinas/asterinas/raw/main/.licenserc.yaml&#34;&gt;here&lt;/a&gt;. For the rationles behind the choice of MPL, see &lt;a href=&#34;https://asterinas.github.io/book/index.html#licensing&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>