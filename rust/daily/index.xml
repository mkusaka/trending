<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-20T01:42:17Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fish-shell/fish-shell</title>
    <updated>2023-11-20T01:42:17Z</updated>
    <id>tag:github.com,2023-11-20:/fish-shell/fish-shell</id>
    <link href="https://github.com/fish-shell/fish-shell" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The user-friendly command line shell.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;.. |Cirrus CI| image:: &lt;a href=&#34;https://api.cirrus-ci.com/github/fish-shell/fish-shell.svg?branch=master&#34;&gt;https://api.cirrus-ci.com/github/fish-shell/fish-shell.svg?branch=master&lt;/a&gt; :target: &lt;a href=&#34;https://cirrus-ci.com/github/fish-shell/fish-shell&#34;&gt;https://cirrus-ci.com/github/fish-shell/fish-shell&lt;/a&gt; :alt: Cirrus CI Build Status&lt;/p&gt; &#xA;&lt;h1&gt;&lt;code&gt;fish &amp;lt;https://fishshell.com/&amp;gt;&lt;/code&gt;__ - the friendly interactive shell |Build Status| |Cirrus CI|&lt;/h1&gt; &#xA;&lt;p&gt;fish is a smart and user-friendly command line shell for macOS, Linux, and the rest of the family. fish includes features like syntax highlighting, autosuggest-as-you-type, and fancy tab completions that just work, with no configuration required.&lt;/p&gt; &#xA;&lt;p&gt;For downloads, screenshots and more, go to &lt;a href=&#34;https://fishshell.com/&#34;&gt;https://fishshell.com/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;fish generally works like other shells, like bash or zsh. A few important differences can be found at &lt;a href=&#34;https://fishshell.com/docs/current/tutorial.html&#34;&gt;https://fishshell.com/docs/current/tutorial.html&lt;/a&gt; by searching for the magic phrase “unlike other shells”.&lt;/p&gt; &#xA;&lt;p&gt;Detailed user documentation is available by running &lt;code&gt;help&lt;/code&gt; within fish, and also at &lt;a href=&#34;https://fishshell.com/docs/current/index.html&#34;&gt;https://fishshell.com/docs/current/index.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting fish&lt;/h2&gt; &#xA;&lt;p&gt;macOS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;fish can be installed:&#xA;&#xA;-  using `Homebrew &amp;lt;http://brew.sh/&amp;gt;`__: ``brew install fish``&#xA;-  using `MacPorts &amp;lt;https://www.macports.org/&amp;gt;`__:&#xA;   ``sudo port install fish``&#xA;-  using the `installer from fishshell.com &amp;lt;https://fishshell.com/&amp;gt;`__&#xA;-  as a `standalone app from fishshell.com &amp;lt;https://fishshell.com/&amp;gt;`__&#xA;&#xA;Note: The minimum supported macOS version is 10.10 &#34;Yosemite&#34;.&#xA;&#xA;Packages for Linux&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Packages for Debian, Fedora, openSUSE, and Red Hat Enterprise Linux/CentOS are available from the &lt;code&gt;openSUSE Build Service &amp;lt;https://software.opensuse.org/download.html?project=shells%3Afish&amp;amp;package=fish&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;p&gt;Packages for Ubuntu are available from the &lt;code&gt;fish PPA &amp;lt;https://launchpad.net/~fish-shell/+archive/ubuntu/release-3&amp;gt;&lt;/code&gt;__, and can be installed using the following commands:&lt;/p&gt; &#xA;&lt;p&gt;::&lt;/p&gt; &#xA;&lt;p&gt;sudo apt-add-repository ppa:fish-shell/release-3 sudo apt update sudo apt install fish&lt;/p&gt; &#xA;&lt;p&gt;Instructions for other distributions may be found at &lt;code&gt;fishshell.com &amp;lt;https://fishshell.com&amp;gt;&lt;/code&gt;__.&lt;/p&gt; &#xA;&lt;p&gt;Windows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;-  On Windows 10, fish can be installed under the WSL Windows Subsystem&#xA;   for Linux with the instructions for the appropriate distribution&#xA;   listed above under “Packages for Linux”, or from source with the&#xA;   instructions below.&#xA;-  Fish can also be installed on all versions of Windows using&#xA;   `Cygwin &amp;lt;https://cygwin.com/&amp;gt;`__ (from the **Shells** category).&#xA;&#xA;Building from source&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If packages are not available for your platform, GPG-signed tarballs are available from &lt;code&gt;fishshell.com &amp;lt;https://fishshell.com/&amp;gt;&lt;/code&gt;__ and &lt;code&gt;fish-shell on GitHub &amp;lt;https://github.com/fish-shell/fish-shell/releases&amp;gt;&lt;/code&gt;&lt;strong&gt;. See the &lt;code&gt;Building &amp;lt;#building&amp;gt;&lt;/code&gt;&lt;/strong&gt; section for instructions.&lt;/p&gt; &#xA;&lt;h2&gt;Running fish&lt;/h2&gt; &#xA;&lt;p&gt;Once installed, run &lt;code&gt;fish&lt;/code&gt; from your current shell to try fish out!&lt;/p&gt; &#xA;&lt;p&gt;Dependencies&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;Running fish requires:&#xA;&#xA;-  curses or ncurses (preinstalled on most \*nix systems)&#xA;-  some common \*nix system utilities (currently ``mktemp``), in&#xA;   addition to the basic POSIX utilities (``cat``, ``cut``, ``dirname``,&#xA;   ``ls``, ``mkdir``, ``mkfifo``, ``rm``, ``sort``, ``tee``, ``tr``,&#xA;   ``uname`` and ``sed`` at least, but the full coreutils plus ``find`` and&#xA;   ``awk`` is preferred)&#xA;-  The gettext library, if compiled with&#xA;   translation support&#xA;&#xA;The following optional features also have specific requirements:&#xA;&#xA;-  builtin commands that have the ``--help`` option or print usage&#xA;   messages require ``nroff`` or ``mandoc`` for&#xA;   display&#xA;-  automated completion generation from manual pages requires Python 3.5+&#xA;-  the ``fish_config`` web configuration tool requires Python 3.5+ and a web browser&#xA;-  system clipboard integration (with the default Ctrl-V and Ctrl-X&#xA;   bindings) require either the ``xsel``, ``xclip``,&#xA;   ``wl-copy``/``wl-paste`` or ``pbcopy``/``pbpaste`` utilities&#xA;-  full completions for ``yarn`` and ``npm`` require the&#xA;   ``all-the-package-names`` NPM module&#xA;-  ``colorls`` is used, if installed, to add color when running ``ls`` on platforms&#xA;   that do not have color support (such as OpenBSD)&#xA;&#xA;Switching to fish&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you wish to use fish as your default shell, use the following command, from inside fish:&lt;/p&gt; &#xA;&lt;p&gt;::&lt;/p&gt; &#xA;&lt;p&gt;chsh -s (command -s fish)&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;chsh&lt;/code&gt; wants a full path, this will try to find where fish is installed. If that doesn&#39;t work, try to pass the path manually - it will usually be &lt;code&gt;/usr/local/bin/fish&lt;/code&gt; if you built from source, or &lt;code&gt;/usr/bin/fish&lt;/code&gt; if you installed a package.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;chsh&lt;/code&gt; will prompt you for your password and change your default shell. Log out, then log in again for the changes to take effect.&lt;/p&gt; &#xA;&lt;p&gt;Use the following command if fish isn’t already added to &lt;code&gt;/etc/shells&lt;/code&gt; to permit fish to be your login shell (e.g. if &lt;code&gt;chsh&lt;/code&gt; complains that it &#34;doesn&#39;t exist&#34; or similar):&lt;/p&gt; &#xA;&lt;p&gt;::&lt;/p&gt; &#xA;&lt;p&gt;echo (command -s fish) | sudo tee -a /etc/shells&lt;/p&gt; &#xA;&lt;p&gt;To switch your default shell back, you can run &lt;code&gt;chsh -s /bin/bash&lt;/code&gt; (substituting &lt;code&gt;/bin/bash&lt;/code&gt; with &lt;code&gt;/bin/tcsh&lt;/code&gt; or &lt;code&gt;/bin/zsh&lt;/code&gt; as appropriate).&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;.. _dependencies-1:&lt;/p&gt; &#xA;&lt;p&gt;Dependencies&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;Compiling fish from a tarball requires:&#xA;&#xA;-  a C++11 compiler (g++ 4.8 or later, or clang 3.3 or later)&#xA;-  CMake (version 3.5 or later)&#xA;-  a curses implementation such as ncurses (headers and libraries)&#xA;-  PCRE2 (headers and libraries) - optional, this will be downloaded if missing&#xA;-  gettext (headers and libraries) - optional, for translation support&#xA;&#xA;Sphinx is also optionally required to build the documentation from a&#xA;cloned git repository.&#xA;&#xA;Additionally, running the test suite requires Python 3.5+ and the pexpect package.&#xA;&#xA;Dependencies, git master&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Building from git master currently requires, in addition to the dependencies for a tarball:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rust (version 1.67 or later)&lt;/li&gt; &#xA; &lt;li&gt;CMake (version 3.19 or later)&lt;/li&gt; &#xA; &lt;li&gt;libclang, even if you are compiling with GCC&lt;/li&gt; &#xA; &lt;li&gt;an Internet connection&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;fish is in the process of being ported to Rust, replacing all C++ code, and as such these dependencies are a bit awkward and in flux.&lt;/p&gt; &#xA;&lt;p&gt;In general, we would currently not recommend running from git master if you just want to &lt;em&gt;use&lt;/em&gt; fish. Given the nature of the port, what is currently there is mostly a slower and buggier version of the last C++-based release.&lt;/p&gt; &#xA;&lt;p&gt;Building from source (all platforms) - Makefile generator&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;To install into ``/usr/local``, run:&#xA;&#xA;.. code:: bash&#xA;&#xA;   mkdir build; cd build&#xA;   cmake ..&#xA;   make&#xA;   sudo make install&#xA;&#xA;The install directory can be changed using the&#xA;``-DCMAKE_INSTALL_PREFIX`` parameter for ``cmake``.&#xA;&#xA;Build options&#xA;~~~~~~~~~~~~~&#xA;&#xA;In addition to the normal CMake build options (like ``CMAKE_INSTALL_PREFIX``), fish has some other options available to customize it.&#xA;&#xA;- BUILD_DOCS=ON|OFF - whether to build the documentation. This is automatically set to OFF when Sphinx isn&#39;t installed.&#xA;- INSTALL_DOCS=ON|OFF - whether to install the docs. This is automatically set to on when BUILD_DOCS is or prebuilt documentation is available (like when building in-tree from a tarball).&#xA;- FISH_USE_SYSTEM_PCRE2=ON|OFF - whether to use an installed pcre2. This is normally autodetected.&#xA;- MAC_CODESIGN_ID=String|OFF - the codesign ID to use on Mac, or &#34;OFF&#34; to disable codesigning.&#xA;- WITH_GETTEXT=ON|OFF - whether to build with gettext support for translations.&#xA;&#xA;Note that fish does *not* support static linking and will attempt to error out if it detects it.&#xA;&#xA;Help, it didn’t build!&#xA;~~~~~~~~~~~~~~~~~~~~~~&#xA;&#xA;If fish reports that it could not find curses, try installing a curses&#xA;development package and build again.&#xA;&#xA;On Debian or Ubuntu you want:&#xA;&#xA;::&#xA;&#xA;   sudo apt install build-essential cmake ncurses-dev libncurses5-dev libpcre2-dev gettext&#xA;&#xA;On RedHat, CentOS, or Amazon EC2:&#xA;&#xA;::&#xA;&#xA;   sudo yum install ncurses-devel&#xA;&#xA;Contributing Changes to the Code&#xA;--------------------------------&#xA;&#xA;See the `Guide for Developers &amp;lt;CONTRIBUTING.rst&amp;gt;`__.&#xA;&#xA;Contact Us&#xA;----------&#xA;&#xA;Questions, comments, rants and raves can be posted to the official fish&#xA;mailing list at https://lists.sourceforge.net/lists/listinfo/fish-users&#xA;or join us on our `matrix&#xA;channel &amp;lt;https://matrix.to/#/#fish-shell:matrix.org&amp;gt;`__. Or use the `fish tag&#xA;on Unix &amp;amp; Linux Stackexchange &amp;lt;https://unix.stackexchange.com/questions/tagged/fish&amp;gt;`__.&#xA;There is also a fish tag on Stackoverflow, but it is typically a poor fit.&#xA;&#xA;Found a bug? Have an awesome idea? Please `open an&#xA;issue &amp;lt;https://github.com/fish-shell/fish-shell/issues/new&amp;gt;`__.&#xA;&#xA;.. |Build Status| image:: https://github.com/fish-shell/fish-shell/workflows/make%20test/badge.svg&#xA;   :target: https://github.com/fish-shell/fish-shell/actions&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>