<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-13T01:35:24Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>afnanenayet/diffsitter</title>
    <updated>2025-07-13T01:35:24Z</updated>
    <id>tag:github.com,2025-07-13:/afnanenayet/diffsitter</id>
    <link href="https://github.com/afnanenayet/diffsitter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tree-sitter based AST difftool to get meaningful semantic diffs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;diffsitter&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/afnanenayet/diffsitter/actions/workflows/CI.yml&#34;&gt;&lt;img src=&#34;https://github.com/afnanenayet/diffsitter/actions/workflows/CI.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/afnanenayet/diffsitter/actions/workflows/CD.yml&#34;&gt;&lt;img src=&#34;https://github.com/afnanenayet/diffsitter/actions/workflows/CD.yml/badge.svg?sanitize=true&#34; alt=&#34;CD&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/afnanenayet/diffsitter&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/afnanenayet/diffsitter/branch/main/graph/badge.svg?token=GBTJGXEXOS&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/diffsitter&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/diffsitter&#34; alt=&#34;crates version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/afnanenayet/diffsitter/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/afnanenayet/diffsitter&#34; alt=&#34;GitHub release (latest by date)&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/crates/d/diffsitter&#34; alt=&#34;downloads&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/afnanenayet/diffsitter/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/afnanenayet/diffsitter&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/joEIfP8XoxUhZKXEqUD8CEP7j&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/joEIfP8XoxUhZKXEqUD8CEP7j.svg?sanitize=true&#34; alt=&#34;asciicast&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;diffsitter&lt;/code&gt; is very much a work in progress and nowhere close to production ready (yet). Contributions are always welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Summary&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;diffsitter&lt;/code&gt; creates semantically meaningful diffs that ignore formatting differences like spacing. It does so by computing a diff on the AST (abstract syntax tree) of a file rather than computing the diff on the text contents of the file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;diffsitter&lt;/code&gt; uses the parsers from the &lt;a href=&#34;https://tree-sitter.github.io/tree-sitter&#34;&gt;tree-sitter&lt;/a&gt; project to parse source code. As such, the languages supported by this tool are restricted to the languages supported by tree-sitter.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;diffsitter&lt;/code&gt; supports the following languages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bash&lt;/li&gt; &#xA; &lt;li&gt;C#&lt;/li&gt; &#xA; &lt;li&gt;C++&lt;/li&gt; &#xA; &lt;li&gt;CSS&lt;/li&gt; &#xA; &lt;li&gt;Go&lt;/li&gt; &#xA; &lt;li&gt;Java&lt;/li&gt; &#xA; &lt;li&gt;OCaml&lt;/li&gt; &#xA; &lt;li&gt;PHP&lt;/li&gt; &#xA; &lt;li&gt;Python&lt;/li&gt; &#xA; &lt;li&gt;Ruby&lt;/li&gt; &#xA; &lt;li&gt;Rust&lt;/li&gt; &#xA; &lt;li&gt;Typescript/TSX&lt;/li&gt; &#xA; &lt;li&gt;HCL&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Take the following files:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/afnanenayet/diffsitter/main/test_data/short/rust/a.rs&#34;&gt;&lt;code&gt;a.rs&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;fn main() {&#xA;    let x = 1;&#xA;}&#xA;&#xA;fn add_one {&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/afnanenayet/diffsitter/main/test_data/short/rust/b.rs&#34;&gt;&lt;code&gt;b.rs&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;fn&#xA;&#xA;&#xA;&#xA;main&#xA;&#xA;()&#xA;&#xA;{&#xA;}&#xA;&#xA;fn addition() {&#xA;}&#xA;&#xA;fn add_two() {&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The standard output from &lt;code&gt;diff&lt;/code&gt; will get you:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;1,2c1,12&#xA;&amp;lt; fn main() {&#xA;&amp;lt;     let x = 1;&#xA;---&#xA;&amp;gt; fn&#xA;&amp;gt;&#xA;&amp;gt;&#xA;&amp;gt;&#xA;&amp;gt; main&#xA;&amp;gt;&#xA;&amp;gt; ()&#xA;&amp;gt;&#xA;&amp;gt; {&#xA;&amp;gt; }&#xA;&amp;gt;&#xA;&amp;gt; fn addition() {&#xA;5c15&#xA;&amp;lt; fn add_one {&#xA;---&#xA;&amp;gt; fn add_two() {&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can see that it picks up the formatting differences for the &lt;code&gt;main&lt;/code&gt; function, even though they aren&#39;t semantically different.&lt;/p&gt; &#xA;&lt;p&gt;Check out the output from &lt;code&gt;diffsitter&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;test_data/short/rust/a.rs -&amp;gt; test_data/short/rust/b.rs&#xA;======================================================&#xA;&#xA;9:&#xA;--&#xA;+ }&#xA;&#xA;11:&#xA;---&#xA;+ fn addition() {&#xA;&#xA;1:&#xA;--&#xA;-     let x = 1;&#xA;&#xA;14:&#xA;---&#xA;+ fn add_two() {&#xA;&#xA;4:&#xA;--&#xA;- fn add_one {&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: the numbers correspond to line numbers from the original files.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also filter which tree sitter nodes are considered in the diff through the config file.&lt;/p&gt; &#xA;&lt;p&gt;Since it uses the AST to calculate the difference, it knows that the formatting differences in &lt;code&gt;main&lt;/code&gt; between the two files isn&#39;t a meaningful difference, so it doesn&#39;t show up in the diff.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;diffsitter&lt;/code&gt; has some nice (terminal aware) formatting too:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/afnanenayet/diffsitter/main/assets/rust_example.png&#34; alt=&#34;screenshot of rust diff&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It also has extensive logging if you want to debug or see timing information:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/afnanenayet/diffsitter/main/assets/rust_example_logs.png&#34; alt=&#34;screenshot of rust diff with logs&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Node filtering&lt;/h3&gt; &#xA;&lt;p&gt;You can filter the nodes that are considered in the diff by setting &lt;code&gt;include_nodes&lt;/code&gt; or &lt;code&gt;exclude_nodes&lt;/code&gt; in the config file. &lt;code&gt;exclude_nodes&lt;/code&gt; always takes precedence over &lt;code&gt;include_nodes&lt;/code&gt;, and the type of a node is the &lt;code&gt;kind&lt;/code&gt; of a tree-sitter node. The &lt;code&gt;kind&lt;/code&gt; directly corresponds to whatever is reported by the tree-sitter API, so this example may occasionally go out of date.&lt;/p&gt; &#xA;&lt;p&gt;This feature currently only applies to leaf nodes, but we could exclude nodes recursively if there&#39;s demand for it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json5&#34;&gt;&#34;input-processing&#34;: {&#xA;    // You can exclude different tree sitter node types - this rule takes precedence over `include_kinds`.&#xA;    &#34;exclude_kinds&#34;: [&#34;string_content&#34;],&#xA;    // You can specifically allow only certain tree sitter node types&#xA;    &#34;include_kinds&#34;: [&#34;method_definition&#34;],&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;a href=&#34;https://repology.org/project/diffsitter/versions&#34;&gt; &lt;img src=&#34;https://repology.org/badge/vertical-allrepos/diffsitter.svg?sanitize=true&#34; alt=&#34;Packaging status&#34; align=&#34;right&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;Published binaries&lt;/h3&gt; &#xA;&lt;p&gt;This project uses Github actions to build and publish binaries for each tagged release. You can download binaries from there if your platform is listed. We publish &lt;a href=&#34;https://github.com/afnanenayet/diffsitter/releases/tag/nightly&#34;&gt;nightly releases&lt;/a&gt; as well as tagged &lt;a href=&#34;https://github.com/afnanenayet/diffsitter/releases/latest&#34;&gt;stable releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Cargo&lt;/h3&gt; &#xA;&lt;p&gt;You can build from source with &lt;code&gt;cargo&lt;/code&gt; using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo install diffsitter --bin diffsitter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to generate completion files and other assets you can install the &lt;code&gt;diffsitter_completions&lt;/code&gt; binary with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo install diffsitter --bin diffsitter_completions&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Homebrew&lt;/h3&gt; &#xA;&lt;p&gt;You can use my tap to install diffsitter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew tap afnanenayet/tap&#xA;brew install diffsitter&#xA;# brew install afnanenayet/tap/diffsitter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Arch Linux (AUR)&lt;/h3&gt; &#xA;&lt;p&gt;@samhh has packaged diffsitter for arch on the AUR. Use your favorite AUR helper to install &lt;a href=&#34;https://aur.archlinux.org/packages/diffsitter-bin/&#34;&gt;&lt;code&gt;diffsitter-bin&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Alpine Linux&lt;/h3&gt; &#xA;&lt;p&gt;Install package &lt;a href=&#34;https://pkgs.alpinelinux.org/packages?name=diffsitter&#34;&gt;diffsitter&lt;/a&gt; from the Alpine Linux repositories (on v3.16+ or Edge):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;apk add diffsitter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Tree-sitter grammars are packaged separately (search for &lt;a href=&#34;https://pkgs.alpinelinux.org/packages?name=tree-sitter-*&amp;amp;arch=x86_64&#34;&gt;tree-sitter-*&lt;/a&gt;). You can install individual packages you need or the virtual package &lt;code&gt;tree-sitter-grammars&lt;/code&gt; to install all of them.&lt;/p&gt; &#xA;&lt;h3&gt;Building with Docker&lt;/h3&gt; &#xA;&lt;p&gt;We also provide a Docker image that builds diffsitter using the standard Rust base image. It separates the compilation stage from the run stage, so you can build it and run with the following command (assuming you have Docker installed on your system):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker build -t diffsitter .&#xA;docker run -it --rm --name diffsitter-interactive diffsitter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;For detailed help you can run &lt;code&gt;diffsitter --help&lt;/code&gt; (&lt;code&gt;diffsitter -h&lt;/code&gt; provides brief help messages).&lt;/p&gt; &#xA;&lt;p&gt;You can configure file associations and formatting options for &lt;code&gt;diffsitter&lt;/code&gt; using a config file. If a config is not supplied, the app will use the default config, which you can see with &lt;code&gt;diffsitter dump-default-config&lt;/code&gt;. It will look for a config at &lt;code&gt;${XDG_HOME:-$HOME}/.config/diffsitter/config.json5&lt;/code&gt; on macOS and Linux, and the standard directory for Windows. You can also refer to the &lt;a href=&#34;https://raw.githubusercontent.com/afnanenayet/diffsitter/main/assets/sample_config.json5&#34;&gt;sample config&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can override the default config path by using the &lt;code&gt;--config&lt;/code&gt; flag or set the &lt;code&gt;DIFFSITTER_CONFIG&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: the tests for this crate check to make sure the provided sample config is a valid config.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Git integration&lt;/h3&gt; &#xA;&lt;p&gt;To see the changes to the current git repo in diffsitter, you can add the following to your repo&#39;s &lt;code&gt;.git/config&lt;/code&gt; and run &lt;code&gt;git difftool&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[diff]&#xA;        tool = diffsitter&#xA;&#xA;[difftool]&#xA;        prompt = false&#xA;&#xA;[difftool &#34;diffsitter&#34;]&#xA;        cmd = diffsitter &#34;$LOCAL&#34; &#34;$REMOTE&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Shell Completion&lt;/h3&gt; &#xA;&lt;p&gt;You can generate shell completion scripts using the binary using the &lt;code&gt;gen-completion&lt;/code&gt; subcommand. This will print the shell completion script for a given shell to &lt;code&gt;STDOUT&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You should use the help text for the most up to date usage information, but general usage would look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;diffsitter gen-completion bash &amp;gt; completion.bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We currently support the following shells (via &lt;code&gt;clap_complete&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bash&lt;/li&gt; &#xA; &lt;li&gt;Zsh&lt;/li&gt; &#xA; &lt;li&gt;Fish&lt;/li&gt; &#xA; &lt;li&gt;Elvish&lt;/li&gt; &#xA; &lt;li&gt;Powershell&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;diffsitter&lt;/code&gt; is usually compiled as a static binary, so the &lt;code&gt;tree-sitter&lt;/code&gt; grammars/libraries are baked into the binary as static libraries. There is an option to build with support for dynamic libraries which will look for shared library files in the user&#39;s default library path. This will search for library files of the form &lt;code&gt;libtree-sitter-{lang}.{ext}&lt;/code&gt;, where &lt;code&gt;lang&lt;/code&gt; is the language that the user is trying to diff and &lt;code&gt;ext&lt;/code&gt; is the platform-specific extension for shared library files (&lt;code&gt;.so&lt;/code&gt;, &lt;code&gt;.dylib&lt;/code&gt;, etc). The user can override the dynamic library file for each language in the config as such:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json5&#34;&gt;{&#xA;    &#34;grammar&#34;: {&#xA;        // You can specify the dynamic library names for each language&#xA;        &#34;dylib-overrides&#34;: {&#xA;            // with a filename&#xA;            &#34;rust&#34;: &#34;libtree-sitter-rust.so&#34;,&#xA;            // with an absolute path&#xA;            &#34;c&#34;: &#34;/usr/lib/libtree-sitter-c.so&#34;,&#xA;            // with a relative path&#xA;            &#34;cpp&#34;: &#34;../libtree-sitter-c.so&#34;,&#xA;        },&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;The above excerpt was taken from the &lt;a href=&#34;https://raw.githubusercontent.com/afnanenayet/diffsitter/main/assets/sample_config.json5&#34;&gt;sample config&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Questions, Bugs, and Support&lt;/h2&gt; &#xA;&lt;p&gt;If you notice any bugs, have any issues, want to see a new feature, or just have a question, feel free to open an &lt;a href=&#34;https://github.com/afnanenayet/diffsitter/issues&#34;&gt;issue&lt;/a&gt; or create a &lt;a href=&#34;https://github.com/afnanenayet/diffsitter/discussions&#34;&gt;discussion post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you file an issue, it would be preferable that you include a minimal example and/or post the log output of &lt;code&gt;diffsitter&lt;/code&gt; (which you can do by adding the &lt;code&gt;-d/--debug&lt;/code&gt; flag).&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/afnanenayet/diffsitter/main/docs/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Similar Projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Wilfred/difftastic&#34;&gt;difftastic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bugout-dev/locust&#34;&gt;locust&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GumTreeDiff/gumtree&#34;&gt;gumtree&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mookid/diffr&#34;&gt;diffr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dandavison/delta&#34;&gt;delta&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sdt.dev&#34;&gt;Semantic Diff Tool&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Xerxes-2/clewdr</title>
    <updated>2025-07-13T01:35:24Z</updated>
    <id>tag:github.com,2025-07-13:/Xerxes-2/clewdr</id>
    <link href="https://github.com/Xerxes-2/clewdr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;High Performance LLM Reverse Proxy&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Clewd&lt;span style=&#34;color:#CE422B&#34;&gt;R&lt;/span&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://deepwiki.com/Xerxes-2/clewdr&#34;&gt;&lt;img src=&#34;https://deepwiki.com/badge.svg?sanitize=true&#34; alt=&#34;Ask DeepWiki&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Xerxes-2/clewdr/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/Xerxes-2/clewdr?style=flat-square&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Xerxes-2/clewdr/master/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/Xerxes-2/clewdr/master/README_zh.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;High-Performance LLM Proxy&lt;/h2&gt; &#xA;&lt;p&gt;Specifically built for Claude (Claude.ai) and Gemini (Google AI Studio, Google Vertex AI)&lt;/p&gt; &#xA;&lt;h2&gt;Core Advantages&lt;/h2&gt; &#xA;&lt;h3&gt;Full-Featured Frontend&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integrated React frontend providing a complete functional experience&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Efficient Architecture&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Occupies one-tenth the resources compared to script language implementations, with ten times the performance, easily handling thousands of requests per second&lt;/li&gt; &#xA; &lt;li&gt;Event-driven design, decoupled logic, supports hot reloading and multiple configuration methods&lt;/li&gt; &#xA; &lt;li&gt;High-performance response caching supported by Moka technology&lt;/li&gt; &#xA; &lt;li&gt;Multi-threaded asynchronous processing based on Tokio and Axum&lt;/li&gt; &#xA; &lt;li&gt;Fingerprint-level Chrome simulation Rquest HTTP client&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Intelligent Cookie Management&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatic classification and management of account status&lt;/li&gt; &#xA; &lt;li&gt;Fine-grained polling mechanism to maximize resource utilization&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Full Platform Compatibility&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rust static compilation, single binary deployment, no environment dependencies needed&lt;/li&gt; &#xA; &lt;li&gt;Native support for macOS/Android and other platforms&lt;/li&gt; &#xA; &lt;li&gt;Extremely low memory usage (only single-digit MB)&lt;/li&gt; &#xA; &lt;li&gt;No need for virtual machines or complex dependencies&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Enhanced Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Built-in proxy server support (no TUN required)&lt;/li&gt; &#xA; &lt;li&gt;Concurrent cache request handling&lt;/li&gt; &#xA; &lt;li&gt;Gemini additional support: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Google AI Studio and Google Vertex AI&lt;/li&gt; &#xA;   &lt;li&gt;OpenAI compatible mode / Gemini format&lt;/li&gt; &#xA;   &lt;li&gt;Painless HTTP Keep-Alive support&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Claude additional support: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;OpenAI compatible mode / Claude format&lt;/li&gt; &#xA;   &lt;li&gt;Extend Thinking&lt;/li&gt; &#xA;   &lt;li&gt;Stop sequences implemented on the proxy side&lt;/li&gt; &#xA;   &lt;li&gt;Image attachment uploads&lt;/li&gt; &#xA;   &lt;li&gt;Web search&lt;/li&gt; &#xA;   &lt;li&gt;Claude Max&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the program package for your platform (&lt;a href=&#34;https://github.com/Xerxes-2/clewdr/releases/latest&#34;&gt;Latest Version&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;The password will be automatically generated on the first run. Access the default frontend address &lt;a href=&#34;http://127.0.0.1:8484&#34;&gt;http://127.0.0.1:8484&lt;/a&gt;, and log in using the Web Admin Password displayed in the console. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you need to change the password, you can set a new one in the frontend interface.&lt;/li&gt; &#xA;   &lt;li&gt;If you forget the password, you can delete the &lt;code&gt;clewdr.toml&lt;/code&gt; file to regenerate it.&lt;/li&gt; &#xA;   &lt;li&gt;Note: If deploying with Docker, the password will be generated and displayed in the logs when the container starts.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Configure the proxy address and other parameters in the frontend interface, add Cookies and Keys.&lt;/li&gt; &#xA; &lt;li&gt;Third-party application configuration: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;ClewdR will print the access addresses for each API in the console when it starts.&lt;/li&gt; &#xA;   &lt;li&gt;Choose the API format you want (Claude or Gemini or OpenAI compatible).&lt;/li&gt; &#xA;   &lt;li&gt;Set the corresponding proxy address in applications like SillyTavern, and fill in the API Password displayed in the console as the proxy password.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Enjoy the high-performance LLM proxy service!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Community Resources&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Github Aggregated Wiki&lt;/strong&gt;: &lt;a href=&#34;https://github.com/Xerxes-2/clewdr/wiki&#34;&gt;https://github.com/Xerxes-2/clewdr/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/teralomaniac/clewd&#34;&gt;Clewd Modified Version&lt;/a&gt; - A modified version of the original Clewd, providing many inspirations and foundational features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mirrorange/clove&#34;&gt;Clove&lt;/a&gt; - Provides the support logic for Claude Code.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>