<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-26T01:37:27Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>yshavit/mdq</title>
    <updated>2025-02-26T01:37:27Z</updated>
    <id>tag:github.com,2025-02-26:/yshavit/mdq</id>
    <link href="https://github.com/yshavit/mdq" rel="alternate"></link>
    <summary type="html">&lt;p&gt;like jq but for Markdown: find specific elements in a md doc&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;mdq: jq for Markdown&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yshavit/mdq/actions/workflows/coverage.yml?query=branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fyshavit%2F53901a0115b596e015a891c41fb0f256%2Fraw%2Fmdq-coverage.json&#34; alt=&#34;Code Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/yshavit/mdq/actions/workflows/rust.yml?query=branch%3Amain&#34;&gt;&lt;img src=&#34;https://github.com/yshavit/mdq/actions/workflows/rust.yml/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/search?q=repo%3Ayshavit%2Fmdq+NOT+path%3A.github%2Fworkflows%2Fcoverage.yml+NOT+path%3AREADME.md+todo&amp;amp;type=code&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fyshavit%2Fe7a9e9e72651da0d7d2b1fbbe56237d0%2Fraw%2Fmdq-todos.json&#34; alt=&#34;Pending TODOs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/search?q=repo%3Ayshavit%2Fmdq+%28%28path%3A%2F%5C.rs%24%2F+%22%23%5Bignore%5D%22%29+OR+%28path%3Atests%2Fmd_cases+%2F%5Eignore%2F%29%29&amp;amp;type=code&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fgist.githubusercontent.com%2Fyshavit%2F782a8dc5f77d2cf4b1c774da72636f00%2Fraw%2Fmdq-ignoreds.json&#34; alt=&#34;Ignored tests&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is mdq?&lt;/h2&gt; &#xA;&lt;p&gt;mdq aims to do for Markdown what jq does for JSON: provide an easy way to zero in on specific parts of a document.&lt;/p&gt; &#xA;&lt;p&gt;For example, GitHub PRs are Markdown documents, and some organizations have specific templates with checklists for all reviewers to complete. Enforcing these often requires ugly regexes that are a pain to write and worse to debug. Instead, you can (for example) ask mdq for all uncompleted tasks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mdq &#39;- [ ]&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;mdq is available under the Apache 2.0 or MIT licenses, at your option. I am open to other permissive licenses, if you have one you prefer.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Any of these will work:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo install --git https://github.com/yshavit/mdq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Download binaries from &lt;a href=&#34;https://github.com/yshavit/mdq/releases/latest&#34;&gt;the latest release&lt;/a&gt; (or any other release, of course).&lt;/li&gt; &#xA; &lt;li&gt;You can also grab the binaries from the latest &lt;a href=&#34;https://github.com/yshavit/mdq/actions/workflows/build-release.yml&#34;&gt;build-release&lt;/a&gt; workflow run. You must be logged into GitHub to do that (this is GitHub&#39;s limitation, not mine). You&#39;ll have to &lt;code&gt;chmod +x&lt;/code&gt; them before you can run them.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Security concerns&lt;/summary&gt; The release and latest-workflow binaries are built on GitHub&#39;s servers, so if you trust my code (and dependencies), and you trust GitHub, you can trust the binaries. See https://github.com/yshavit/mdq/wiki/Release-binaries for information on how to verify them. &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;Basic Usage&lt;/h1&gt; &#xA;&lt;p&gt;Simple example to select sections containing &#34;usage&#34;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cat example.md | mdq &#39;# usage&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use pipe (&lt;code&gt;|&lt;/code&gt;) to chain filters together. For example, to select sections containing &#34;usage&#34;, and within those find all unordered list items:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cat example.md | mdq &#39;# usage | -&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The filter syntax is designed to mirror Markdown syntax. You can select...&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Element&lt;/th&gt; &#xA;   &lt;th&gt;Syntax&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sections&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;# title text&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Lists&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;- unordered list item text&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1. ordered list item text&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;- [ ] uncompleted task&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;- [x] completed task&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&#34;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;- [?] any task&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Links&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;[display text](url)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Images&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;![alt text](url)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Block quotes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;gt; block quote text&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Code blocks&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt; ```language &amp;lt;code block text&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Raw HTML&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;/&amp;gt; html_tag&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Plain paragraphs&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;P: paragraph text &lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tables&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:-: header text :-: row text&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;(Tables selection differs from other selections in that you can actually select only certain headers and rows, such that the resulting element is of a different shape than the original. See the example below, or the wiki for more detail.)&lt;/p&gt; &#xA;&lt;p&gt;In any of the above, the text may be:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;an &lt;code&gt;unquoted string&lt;/code&gt; that starts with a letter; this is case-insensitive&lt;/li&gt; &#xA; &lt;li&gt;a &lt;code&gt;&#34;quoted string&#34;&lt;/code&gt; (either single or double quotes); this is case-sensitive&lt;/li&gt; &#xA; &lt;li&gt;a string (quoted or unquoted) anchored by &lt;code&gt;^&lt;/code&gt; or &lt;code&gt;$&lt;/code&gt; (for start and end of string, respectively)&lt;/li&gt; &#xA; &lt;li&gt;a &lt;code&gt;/regex/&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;omitted or &lt;code&gt;*&lt;/code&gt;, to mean &#34;any&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/yshavit/mdq/wiki/Tutorial&#34;&gt;tutorial&lt;/a&gt; for a bit more detail, and &lt;a href=&#34;https://github.com/yshavit/mdq/wiki/Full-User-Manual&#34;&gt;user manual&lt;/a&gt; for the full picture.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Ensuring that people have searched existing issues before submitting a bug report&lt;/h3&gt; &#xA;&lt;p&gt;Many projects have bug report templates that ask the submitter to attest that they&#39;ve checked existing issues for possible duplicates. In mdq, you can do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;if echo &#34;$ISSUE_TEXT&#34; | mdq -q &#39;- [x] I have searched for existing issues&#39; ; then&#xA;  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(The &lt;code&gt;-q&lt;/code&gt; option is like grep&#39;s: it doesn&#39;t output anything to stdout, but exits 0 if any items were found, or non-0 otherwise.)&lt;/p&gt; &#xA;&lt;p&gt;This will match:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;[x] I have searched for existing issues&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;... but will fail if the checkbox is unchecked:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;[ ] I have searched for existing issues&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Extracting a referenced ticket&lt;/h3&gt; &#xA;&lt;p&gt;Some organizations use GitHub Actions to update their ticket tracker, if a PR mentions a ticket. You can use mdq to extract the link from Markdown as JSON, and then use jq to get the URL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;TICKET_URL=&#34;$(echo &#34;$PR_TEXT&#34;&#xA;  | mdq --output json &#39;# Ticket | [](^https://tickets.example.com/[A-Z]+-\d+$)&#39;&#xA;  | jq -r &#39;.items[].link.url&#39;)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will match Markdown like:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h4&gt;Ticket&lt;/h4&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://tickets.example.com/PROJ-1234&#34;&gt;https://tickets.example.com/PROJ-1234&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Whittling down a big table&lt;/h3&gt; &#xA;&lt;p&gt;Let&#39;s say you have a table whose columns reference people in an on-call schedule, rows correspond to weeks in &lt;code&gt;YYYY-MM-DD&lt;/code&gt; format:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;On-Call&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;Alice&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;Bob&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;Sam&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;Pat&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;2024-01-08&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;2024-01-15&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;2024-01-22&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;x&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To find out when Alice is on call:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat oncall.md | mdq &#39;:-: /On-Call|Alice/:-: *&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;|  On-Call   | Alice |&#xA;|:----------:|:-----:|&#xA;| 2024-01-08 |   x   |&#xA;| 2024-01-15 |       |&#xA;| 2024-01-22 |       |&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, to find out who&#39;s on call for the week of Jan 15:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat oncall.md | mdq &#39;:-: * :-: 2024-01-15&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;|  On-Call   | Alice | Bob | Sam | Pat |&#xA;|:----------:|:-----:|:---:|:---:|----:|&#xA;| 2024-01-15 |       |     |  x  |     |&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>