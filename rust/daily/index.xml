<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-16T01:34:35Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kwai/blaze</title>
    <updated>2024-09-16T01:34:35Z</updated>
    <id>tag:github.com,2024-09-16:/kwai/blaze</id>
    <link href="https://github.com/kwai/blaze" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Blazing-fast query execution engine speaks Apache Spark language and has Arrow-DataFusion at its core.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BLAZE&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/blaze-init/blaze/actions/workflows/tpcds.yml&#34;&gt;&lt;img src=&#34;https://github.com/blaze-init/blaze/actions/workflows/tpcds.yml/badge.svg?branch=master&#34; alt=&#34;TPC-DS&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/blaze-init/blaze/actions/workflows/build-ce7-releases.yml&#34;&gt;&lt;img src=&#34;https://github.com/blaze-init/blaze/actions/workflows/build-ce7-releases.yml/badge.svg?branch=master&#34; alt=&#34;master-ce7-builds&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Blaze accelerator for Apache Spark leverages native vectorized execution to accelerate query processing. It combines the power of the &lt;a href=&#34;https://arrow.apache.org/datafusion/&#34;&gt;Apache Arrow-DataFusion&lt;/a&gt; library and the scale of the Spark distributed computing framework.&lt;/p&gt; &#xA;&lt;p&gt;Blaze takes a fully optimized physical plan from Spark, mapping it into DataFusion&#39;s execution plan, and performs native plan computation in Spark executors.&lt;/p&gt; &#xA;&lt;p&gt;Blaze is composed of the following high-level components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Spark Extension&lt;/strong&gt;: hooks the whole accelerator into Spark execution lifetime.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Spark Shims&lt;/strong&gt;: specialized codes for different versions of spark.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Native Engine&lt;/strong&gt;: implements the native engine in rust, including: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ExecutionPlan protobuf specification&lt;/li&gt; &#xA;   &lt;li&gt;JNI gateway&lt;/li&gt; &#xA;   &lt;li&gt;Customized operators, expressions, functions&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Based on the inherent well-defined extensibility of DataFusion, Blaze can be easily extended to support:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Various object stores.&lt;/li&gt; &#xA; &lt;li&gt;Operators.&lt;/li&gt; &#xA; &lt;li&gt;Simple and Aggregate functions.&lt;/li&gt; &#xA; &lt;li&gt;File formats.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We encourage you to &lt;a href=&#34;https://github.com/apache/arrow-datafusion&#34;&gt;extend DataFusion&lt;/a&gt; capability directly and add the supports in Blaze with simple modifications in plan-serde and extension translation.&lt;/p&gt; &#xA;&lt;h2&gt;Build from source&lt;/h2&gt; &#xA;&lt;p&gt;To build Blaze, please follow the steps below:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Rust&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The native execution lib is written in Rust. So you&#39;re required to install Rust (nightly) first for compilation. We recommend you to use &lt;a href=&#34;https://rustup.rs/&#34;&gt;rustup&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Install JDK+Maven&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Blaze has been well tested on jdk8 and maven3.5, should work fine with higher versions.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Check out the source code.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone git@github.com:blaze-init/blaze.git&#xA;cd blaze&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Build the project.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;Specify shims package of which spark version that you would like to run on.&lt;/em&gt; _Currently we have supported these shims:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;spark303 - for spark3.0.x&lt;/li&gt; &#xA; &lt;li&gt;spark313 - for spark3.1.x&lt;/li&gt; &#xA; &lt;li&gt;spark324 - for spark3.2.x&lt;/li&gt; &#xA; &lt;li&gt;spark333 - for spark3.3.x&lt;/li&gt; &#xA; &lt;li&gt;spark351 - for spark3.5.x.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;You could either build Blaze in dev mode for debugging or in release mode to unlock the full potential of Blaze.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;SHIM=spark333 # or spark303/spark313/spark320/spark324/spark333/spark351&#xA;MODE=release # or pre&#xA;mvn package -P&#34;${SHIM}&#34; -P&#34;${MODE}&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the build is finished, a fat Jar package that contains all the dependencies will be generated in the &lt;code&gt;target&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Build with docker&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;You can use the following command to build a centos-7 compatible release:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;SHIM=spark333 MODE=release ./release-docker.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Run Spark Job with Blaze Accelerator&lt;/h2&gt; &#xA;&lt;p&gt;This section describes how to submit and configure a Spark Job with Blaze support.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;move blaze jar package to spark client classpath (normally &lt;code&gt;spark-xx.xx.xx/jars/&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;add the follow confs to spark configuration in &lt;code&gt;spark-xx.xx.xx/conf/spark-default.conf&lt;/code&gt;:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-properties&#34;&gt;spark.blaze.enable true&#xA;spark.sql.extensions org.apache.spark.sql.blaze.BlazeSparkSessionExtension&#xA;spark.shuffle.manager org.apache.spark.sql.execution.blaze.shuffle.BlazeShuffleManager&#xA;spark.memory.offHeap.enabled false&#xA;&#xA;# suggested executor memory configuration&#xA;spark.executor.memory 4g&#xA;spark.executor.memoryOverhead 4096&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;submit a query with spark-sql, or other tools like spark-thriftserver:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;spark-sql -f tpcds/q01.sql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://raw.githubusercontent.com/kwai/blaze/master/benchmark-results/20240701-blaze300.md&#34;&gt;Benchmark Results&lt;/a&gt; with the latest date for the performance comparison with vanilla Spark 3.3.3. The benchmark result shows that Blaze save about 50% time on TPC-DS/TPC-H 1TB datasets. Stay tuned and join us for more upcoming thrilling numbers.&lt;/p&gt; &#xA;&lt;p&gt;TPC-DS Query time: (&lt;a href=&#34;https://raw.githubusercontent.com/kwai/blaze/master/tpcds/README.md&#34;&gt;How can I run TPC-DS benchmark?&lt;/a&gt;) &lt;img src=&#34;https://raw.githubusercontent.com/kwai/blaze/master/benchmark-results/spark333-vs-blaze300-query-time-20240701.png&#34; alt=&#34;20240701-query-time-tpcds&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;TPC-H Query time: &lt;img src=&#34;https://raw.githubusercontent.com/kwai/blaze/master/benchmark-results/spark333-vs-blaze300-query-time-20240701-tpch.png&#34; alt=&#34;20240701-query-time-tpch&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;We also encourage you to benchmark Blaze and share the results with us. ðŸ¤—&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re using &lt;a href=&#34;https://github.com/blaze-init/blaze/discussions&#34;&gt;Discussions&lt;/a&gt; to connect with other members of our community. We hope that you:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ask questions you&#39;re wondering about.&lt;/li&gt; &#xA; &lt;li&gt;Share ideas.&lt;/li&gt; &#xA; &lt;li&gt;Engage with other community members.&lt;/li&gt; &#xA; &lt;li&gt;Welcome others who are open-minded. Remember that this is a community we build together ðŸ’ª .&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Blaze is licensed under the Apache 2.0 License. A copy of the license &lt;a href=&#34;https://raw.githubusercontent.com/kwai/blaze/master/LICENSE.txt&#34;&gt;can be found here.&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>