<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-29T01:36:02Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>twvd/snow</title>
    <updated>2025-06-29T01:36:02Z</updated>
    <id>tag:github.com,2025-06-29:/twvd/snow</id>
    <link href="https://github.com/twvd/snow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Classic Macintosh emulator&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Snow - Classic Macintosh emulator&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codecov.io/github/twvd/snow&#34;&gt;&lt;img src=&#34;https://codecov.io/github/twvd/snow/graph/badge.svg?token=QRQ95QB915&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/twvd/snow/actions/workflows/tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/twvd/snow/actions/workflows/tests.yml/badge.svg?sanitize=true&#34; alt=&#34;Checks and tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/twvd/snow/actions/workflows/build_linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/twvd/snow/actions/workflows/build_linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Build - Linux x64&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/twvd/snow/actions/workflows/build_windows.yml&#34;&gt;&lt;img src=&#34;https://github.com/twvd/snow/actions/workflows/build_windows.yml/badge.svg?sanitize=true&#34; alt=&#34;Build - Windows&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/twvd/snow/actions/workflows/build_macos.yml&#34;&gt;&lt;img src=&#34;https://github.com/twvd/snow/actions/workflows/build_macos.yml/badge.svg?sanitize=true&#34; alt=&#34;Build - MacOS&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/F2vSzTEvPV&#34;&gt;&lt;img src=&#34;https://dcbadge.limes.pink/api/server/F2vSzTEvPV&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Snow emulates classic (Motorola 68k-based) Macintosh computers. It features a graphical user interface operate and debug the emulated machine. The aim of this project is to emulate the Macintosh on a hardware-level as much as possible, as opposed to emulators that patch the ROM or intercept system calls.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://snowemu.com/&#34;&gt;For more information and downloads, go to the website&lt;/a&gt;. You can view a limited &lt;a href=&#34;https://demo.snowemu.com/&#34;&gt;online demo here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/twvd/snow/master/docs/images/egui_macii.png&#34; alt=&#34;Snow&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It currently supports the following models:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Macintosh 128K/512K&lt;/li&gt; &#xA; &lt;li&gt;Macintosh Plus&lt;/li&gt; &#xA; &lt;li&gt;Macintosh SE (both non-FDHD and FDHD)&lt;/li&gt; &#xA; &lt;li&gt;Macintosh Classic&lt;/li&gt; &#xA; &lt;li&gt;Macintosh II (both non-FDHD and FDHD) (experimental)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Currently supported hardware:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Motorola 68000 and 68020 CPUs&lt;/li&gt; &#xA; &lt;li&gt;Motorola M68881 FPU (Mac II)&lt;/li&gt; &#xA; &lt;li&gt;IWM and SWIM floppy controllers&lt;/li&gt; &#xA; &lt;li&gt;GCR 400K/800K floppy disk drives (up to 3 on SE)&lt;/li&gt; &#xA; &lt;li&gt;GCR/MFM 1.44MB &#39;SuperDrive&#39; floppy disk drive (currently read-only)&lt;/li&gt; &#xA; &lt;li&gt;SCSI hard disk drives (up to 7)&lt;/li&gt; &#xA; &lt;li&gt;Macintosh Real-Time Clock&lt;/li&gt; &#xA; &lt;li&gt;Macintosh keyboard/mouse&lt;/li&gt; &#xA; &lt;li&gt;ADB keyboard/mouse&lt;/li&gt; &#xA; &lt;li&gt;Audio output (PWM-based audio on compact Macs and ASC on Mac II)&lt;/li&gt; &#xA; &lt;li&gt;Macintosh Display Card 8-24 with the 640x480 RGB monitor (Mac II)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Supported floppy image formats:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apple DiskCopy 4.2 (sector-based)&lt;/li&gt; &#xA; &lt;li&gt;Applesauce A2R 2.x and 3.x (flux)&lt;/li&gt; &#xA; &lt;li&gt;Applesauce MOOF (bitstream and flux)&lt;/li&gt; &#xA; &lt;li&gt;PCE Flux Image (PFI, flux)&lt;/li&gt; &#xA; &lt;li&gt;PCE Raw Image (PRI, bitstream)&lt;/li&gt; &#xA; &lt;li&gt;Raw images (sector-based)&lt;/li&gt; &#xA; &lt;li&gt;Any format (Mac 1.44MB or PC) supported by &lt;a href=&#34;https://github.com/dbalsom/fluxfox&#34;&gt;Fluxfox&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Emulator and debugging features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Breakpoints (execution, bus access, system trap, exception, interrupt level)&lt;/li&gt; &#xA; &lt;li&gt;Watchpoints with editing&lt;/li&gt; &#xA; &lt;li&gt;Single step, step over, step out&lt;/li&gt; &#xA; &lt;li&gt;Disassembly view&lt;/li&gt; &#xA; &lt;li&gt;Register view with editing&lt;/li&gt; &#xA; &lt;li&gt;Memory viewer with editing&lt;/li&gt; &#xA; &lt;li&gt;Instruction history view with export functionality&lt;/li&gt; &#xA; &lt;li&gt;System trap history viewer&lt;/li&gt; &#xA; &lt;li&gt;Peripheral debug view&lt;/li&gt; &#xA; &lt;li&gt;Terminal for the serial ports&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/twvd/snow/master/docs/BUILDING.md&#34;&gt;BUILDING.md&lt;/a&gt; file for instructions on building.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Thanks to raddad772 for the excellent &lt;a href=&#34;https://github.com/SingleStepTests/m68000&#34;&gt;68000 JSON test suite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Thanks to Rubix for the ASCII Mac&lt;/li&gt; &#xA; &lt;li&gt;Thanks to Daniel Balsom for the &lt;a href=&#34;https://github.com/dbalsom/fluxfox&#34;&gt;Fluxfox&lt;/a&gt; library&lt;/li&gt; &#xA; &lt;li&gt;Thanks to the people of the Emudev and &lt;a href=&#34;https://applesaucefdc.com/&#34;&gt;Applesauce&lt;/a&gt; communities for their infinite wisdom&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://github.com/kstenerud/Musashi&#34;&gt;Musashi&lt;/a&gt; (by Karl Stenerud) and &lt;a href=&#34;https://github.com/mamedev/mame&#34;&gt;MAME&lt;/a&gt; ( many authors) projects have been used as a reference for poorly documented components&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>