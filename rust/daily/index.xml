<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-27T01:33:00Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jtroo/kanata</title>
    <updated>2024-07-27T01:33:00Z</updated>
    <id>tag:github.com,2024-07-27:/jtroo/kanata</id>
    <link href="https://github.com/jtroo/kanata" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Improve keyboard comfort and usability with advanced customization&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Kanata&lt;/h1&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; &lt;img alt=&#34;Image of a keycap with the letter K on it in pink tones&#34; title=&#34;Kanata&#34; height=&#34;160&#34; src=&#34;https://raw.githubusercontent.com/jtroo/kanata/main/assets/kanata-icon.svg?sanitize=true&#34;&gt; &lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA;  Improve your keyboard comfort &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;What does this do?&lt;/h2&gt; &#xA;&lt;p&gt;This is a cross-platform software keyboard remapper for Linux, macOS and Windows. A short summary of the features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;multiple layers of key functionality&lt;/li&gt; &#xA; &lt;li&gt;advanced key behaviour customization (e.g. tap-hold, macros, unicode)&lt;/li&gt; &#xA; &lt;li&gt;cross-platform human readable configuration file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/jtroo/kanata/main/cfg_samples&#34;&gt;examples directory&lt;/a&gt; and the &lt;a href=&#34;https://jtroo.github.io&#34;&gt;online simulator&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To see all of the features, see the &lt;a href=&#34;https://raw.githubusercontent.com/jtroo/kanata/main/docs/config.adoc&#34;&gt;configuration guide&lt;/a&gt;. The configuration guide aims to be up-to-date with main and may have features not in your version. See the applicable link in the &lt;a href=&#34;https://github.com/jtroo/kanata/releases&#34;&gt;releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The most similar project is &lt;a href=&#34;https://github.com/kmonad/kmonad&#34;&gt;kmonad&lt;/a&gt;, which served as the inspiration for kanata. &lt;a href=&#34;https://raw.githubusercontent.com/jtroo/kanata/main/docs/kmonad_comparison.md&#34;&gt;Here&#39;s a comparison document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can see a &lt;a href=&#34;https://raw.githubusercontent.com/jtroo/kanata/main/docs/platform-known-issues.adoc&#34;&gt;list of known issues here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Demo video&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/6634136/183001314-f64a7e26-4129-4f20-bf26-7165a6e02c38.mp4&#34;&gt;Showcase of multi-layer functionality (30s, 1.7 MB)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Why is this useful?&lt;/h2&gt; &#xA;&lt;p&gt;Imagine if, instead of pressing Shift to type uppercase letters, we had giant keyboards with separate keys for lowercase and uppercase letters. I hope we can all agree: that would be a terrible user experience!&lt;/p&gt; &#xA;&lt;p&gt;A way to think of how Shift keys work is that they switch your input to another layer of functionality where you now type uppercase letters and symbols instead of lowercase letters and numbers.&lt;/p&gt; &#xA;&lt;p&gt;What kanata allows you to do is take this alternate layer concept that Shift keys have and apply it to any key. You can then customize what those layers do to suit your exact needs and workflows.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Running kanata currently does not start it in a background process. You will need to keep the window that starts kanata running to keep kanata active. Some tips for running kanata in the background:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows: &lt;a href=&#34;https://github.com/jtroo/kanata/discussions/193&#34;&gt;https://github.com/jtroo/kanata/discussions/193&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Linux: &lt;a href=&#34;https://github.com/jtroo/kanata/discussions/130&#34;&gt;https://github.com/jtroo/kanata/discussions/130&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run from tray icon: &lt;a href=&#34;https://github.com/rszyma/kanata-tray&#34;&gt;kanata-tray&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Pre-built executables&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/jtroo/kanata/releases&#34;&gt;releases page&lt;/a&gt; for executables and instructions.&lt;/p&gt; &#xA;&lt;h3&gt;Build it yourself&lt;/h3&gt; &#xA;&lt;p&gt;This project uses the latest Rust stable toolchain. If you installed the Rust toolchain using &lt;code&gt;rustup&lt;/code&gt;, e.g. by using the instructions from the &lt;a href=&#34;https://www.rust-lang.org/learn/get-started&#34;&gt;official website&lt;/a&gt;, you can get the latest stable toolchain with &lt;code&gt;rustup update stable&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Instructions&lt;/summary&gt; &#xA; &lt;p&gt;Using &lt;code&gt;cargo install&lt;/code&gt;:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;cargo install kanata&#xA;&#xA;# On Linux and macOS, this may not work without `sudo`, see below&#xA;kanata --cfg &amp;lt;your_configuration_file&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Build and run yourself in Linux:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;git clone https://github.com/jtroo/kanata &amp;amp;&amp;amp; cd kanata&#xA;cargo build   # --release optional, not really perf sensitive&#xA;&#xA;# sudo is used because kanata opens /dev/ files&#xA;#&#xA;# See below if you want to avoid needing sudo:&#xA;# https://github.com/jtroo/kanata/wiki/Avoid-using-sudo-on-Linux&#xA;sudo target/debug/kanata --cfg &amp;lt;your_configuration_file&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Build and run yourself in Windows.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;git clone https://github.com/jtroo/kanata; cd kanata&#xA;cargo build   # --release optional, not really perf sensitive&#xA;target\debug\kanata --cfg &amp;lt;your_configuration_file&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Build and run yourself in macOS:&lt;/p&gt; &#xA; &lt;p&gt;For macOS version 11 and newer: Install the &lt;a href=&#34;https://github.com/pqrs-org/Karabiner-DriverKit-VirtualHIDDevice/raw/main/dist/Karabiner-DriverKit-VirtualHIDDevice-3.1.0.pkg&#34;&gt;Karabiner VirtualHiDDevice Driver&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;To activate it:&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;/Applications/.Karabiner-VirtualHIDDevice-Manager.app/Contents/MacOS/Karabiner-VirtualHIDDevice-Manager activate&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;For macOS version 10 and older: Install the &lt;a href=&#34;https://github.com/pqrs-org/Karabiner-VirtualHIDDevice&#34;&gt;Karabiner kernel extension&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;git clone https://github.com/jtroo/kanata &amp;amp;&amp;amp; cd kanata&#xA;cargo build   # --release optional, not really perf sensitive&#xA;&#xA;# sudo is needed to gain permission to intercept the keyboard&#xA;&#xA;sudo target/debug/kanata --cfg &amp;lt;your_configuration_file&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;The full configuration guide is &lt;a href=&#34;https://raw.githubusercontent.com/jtroo/kanata/main/docs/config.adoc&#34;&gt;found here&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;Sample configuration files are found in &lt;a href=&#34;https://raw.githubusercontent.com/jtroo/kanata/main/cfg_samples&#34;&gt;cfg_samples&lt;/a&gt;. The &lt;a href=&#34;https://raw.githubusercontent.com/jtroo/kanata/main/cfg_samples/simple.kbd&#34;&gt;simple.kbd&lt;/a&gt; file contains a basic configuration file that is hopefully easy to understand but does not contain all features. The &lt;code&gt;kanata.kbd&lt;/code&gt; contains an example of all features with documentation. The release assets also have a &lt;code&gt;kanata.kbd&lt;/code&gt; file that is tested to work with that release. All key names can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/jtroo/kanata/main/src/keys/mod.rs&#34;&gt;keys module&lt;/a&gt;, and you can also define your own key names.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Feature flags&lt;/h3&gt; &#xA;&lt;p&gt;When either building yourself or using &lt;code&gt;cargo install&lt;/code&gt;, you can add feature flags that enable functionality that is turned off by default.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Instructions&lt;/summary&gt; &#xA; &lt;p&gt;If you want to enable the &lt;code&gt;cmd&lt;/code&gt; actions, add the flag &lt;code&gt;--features cmd&lt;/code&gt;. For example:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;cargo build --release --features cmd&#xA;cargo install --features cmd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;On Windows, if you want to compile a binary that uses the Interception driver, you should add the flag &lt;code&gt;--features interception_driver&lt;/code&gt;. For example:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;cargo build --release --features interception_driver&#xA;cargo install --features interception_driver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;To combine multiple flags, use a single &lt;code&gt;--features&lt;/code&gt; flag and use a comma to separate the features. For example:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;cargo build --release --features cmd,interception_driver&#xA;cargo install --features cmd,interception_driver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Other installation methods&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/kanata/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/kanata.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Notable features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Human readable configuration file. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jtroo/kanata/main/cfg_samples/minimal.kbd&#34;&gt;Minimal example&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jtroo/kanata/main/docs/config.adoc&#34;&gt;Full guide&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jtroo/kanata/main/cfg_samples/simple.kbd&#34;&gt;Simple example with explanations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jtroo/kanata/main/cfg_samples/kanata.kbd&#34;&gt;All features showcase&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Live reloading of the configuration for easy testing of your changes.&lt;/li&gt; &#xA; &lt;li&gt;Multiple layers of key functionality&lt;/li&gt; &#xA; &lt;li&gt;Advanced actions such as tap-hold, unicode output, dynamic and static macros&lt;/li&gt; &#xA; &lt;li&gt;Vim-like leader sequences to execute other actions&lt;/li&gt; &#xA; &lt;li&gt;Optionally run a TCP server to interact with other programs &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Other programs can respond to &lt;a href=&#34;https://github.com/jtroo/kanata/issues/47&#34;&gt;layer changes or trigger layer changes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.oblita.com/interception&#34;&gt;Interception driver&lt;/a&gt; support (use &lt;code&gt;kanata_wintercept.exe&lt;/code&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Note that this issue exists, which is outside the control of this project: &lt;a href=&#34;https://github.com/oblitum/Interception/issues/25&#34;&gt;https://github.com/oblitum/Interception/issues/25&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome!&lt;/p&gt; &#xA;&lt;p&gt;Unless explicitly stated otherwise, your contributions to kanata will be made under the LGPL-3.0-only&lt;a href=&#34;https://www.gnu.org/licenses/identify-licenses-clearly.html&#34;&gt;*&lt;/a&gt; license.&lt;/p&gt; &#xA;&lt;p&gt;Some directories are exceptions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jtroo/kanata/main/keyberon&#34;&gt;keyberon&lt;/a&gt;: MIT License&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jtroo/kanata/main/interception&#34;&gt;interception&lt;/a&gt;: MIT or Apache-2.0 Licenses&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jtroo/kanata/main/docs/design.md&#34;&gt;Here&#39;s a basic low-effort design doc of kanata&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How you can help&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Try it out and let me know what you think. Feel free to file an issue or start a discussion.&lt;/li&gt; &#xA; &lt;li&gt;Usability issues and unhelpful error messages are considered bugs that should be fixed. If you encounter any, I would be thankful if you file an issue.&lt;/li&gt; &#xA; &lt;li&gt;Browse the open issues and help out if you are able and/or would like to. If you want to try contributing, feel free to ping jtroo for some pointers.&lt;/li&gt; &#xA; &lt;li&gt;If you know anything about writing a keyboard driver for Windows, starting an open-source alternative to the Interception driver would be lovely.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community projects related to kanata&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rszyma/vscode-kanata&#34;&gt;vscode-kanata&lt;/a&gt;: Language support for kanata configuration files in VS Code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LGUG2Z/komokana&#34;&gt;komokana&lt;/a&gt;: Automatic application-aware layer switching for &lt;a href=&#34;https://github.com/LGUG2Z/komorebi&#34;&gt;&lt;code&gt;komorebi&lt;/code&gt;&lt;/a&gt; (Windows)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rszyma/kanata-tray&#34;&gt;kanata-tray&lt;/a&gt;: Control kanata from a tray icon&lt;/li&gt; &#xA; &lt;li&gt;Application-aware layer switching: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/veyxov/qanata&#34;&gt;qanata (Linux)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Aqaao/kanawin&#34;&gt;kanawin (Windows)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/reidprichard/window_tools&#34;&gt;window_tools (Windows)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What does the name mean?&lt;/h2&gt; &#xA;&lt;p&gt;I wanted a &#34;k&#34; word since this relates to keyboards. According to Wikipedia, kanata is an indigenous Iroquoian word meaning &#34;village&#34; or &#34;settlement&#34; and is the origin of Canada&#39;s name.&lt;/p&gt; &#xA;&lt;p&gt;There&#39;s also PPT✧.&lt;/p&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;TLDR: QMK features but for any keyboard, not just fancy mechanical ones.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Long version&lt;/summary&gt; &#xA; &lt;p&gt;I have a few keyboards that run &lt;a href=&#34;https://docs.qmk.fm/#/&#34;&gt;QMK&lt;/a&gt;. QMK allows the user to customize the functionality of their keyboard to their heart&#39;s content.&lt;/p&gt; &#xA; &lt;p&gt;One great use case of QMK is its ability map keys so that they overlap with the home row keys but are accessible on another layer. I won&#39;t comment on productivity, but I find this greatly helps with my keyboard comfort.&lt;/p&gt; &#xA; &lt;p&gt;For example, these keys are on the right side of the keyboard:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;7 8 9&#xA;u i o&#xA;j k l&#xA;m , .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;On one layer I have arrow keys in the same position, and on another layer I have a numpad.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;arrows:       numpad:&#xA;- - -         7 8 9&#xA;- ↑ -         4 5 6&#xA;← ↓ →         1 2 3&#xA;- - -         0 * .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;One could add as many customizations as one likes to improve comfort, speed, etc. Personally my main motivator is comfort due to a repetitive strain injury in the past.&lt;/p&gt; &#xA; &lt;p&gt;However, QMK doesn&#39;t run everywhere. In fact, it doesn&#39;t run on &lt;strong&gt;most&lt;/strong&gt; hardware you can get. You can&#39;t get it to run on a laptop keyboard or any mainstream office keyboard. I believe that the comfort and empowerment QMK provides should be available to anyone with a computer on their existing hardware, instead of having to purchase an enthusiast mechanical keyboard (which are admittedly very nice — I own a few — but can be costly).&lt;/p&gt; &#xA; &lt;p&gt;The best alternative solution that I found for keyboards that don&#39;t run QMK was &lt;a href=&#34;https://github.com/kmonad/kmonad&#34;&gt;kmonad&lt;/a&gt;. This is an excellent project and I recommend it if you want to try something similar.&lt;/p&gt; &#xA; &lt;p&gt;The reason for this project&#39;s existence is that kmonad is written in Haskell and I have no idea how to begin contributing to a Haskell project. From an outsider&#39;s perspective I think Haskell is a great language but I really can&#39;t wrap my head around it. And there are a few &lt;a href=&#34;https://raw.githubusercontent.com/jtroo/kanata/main/docs/kmonad_comparison.md&#34;&gt;outstanding issues&lt;/a&gt; at the time of writing that make kmonad suboptimal for my personal workflows.&lt;/p&gt; &#xA; &lt;p&gt;This project is written in Rust because Rust is my favourite programming language and the prior work of the awesome &lt;a href=&#34;https://github.com/TeXitoi/keyberon&#34;&gt;keyberon crate&lt;/a&gt; exists.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Similar Projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kmonad/kmonad&#34;&gt;kmonad&lt;/a&gt;: The inspiration for kanata (Linux, Windows, Mac)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.qmk.fm/#/&#34;&gt;QMK&lt;/a&gt;: Open source keyboard firmware&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TeXitoi/keyberon&#34;&gt;keyberon&lt;/a&gt;: Rust &lt;code&gt;#[no_std]&lt;/code&gt; library intended for keyboard firmware&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ItayGarin/ktrl&#34;&gt;ktrl&lt;/a&gt;: Linux-only keyboard customizer with layers, a TCP server, and audio support&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/timokroeger/kbremap&#34;&gt;kbremap&lt;/a&gt;: Windows-only keyboard customizer with layers and unicode&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alols/xcape&#34;&gt;xcape&lt;/a&gt;: Linux-only tap-hold modifiers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://karabiner-elements.pqrs.org/&#34;&gt;karabiner-elements&lt;/a&gt;: Mac-only keyboard customizer&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cajhin/capsicain&#34;&gt;capsicain&lt;/a&gt;: Windows-only key remapper with driver-level key interception&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rvaiya/keyd&#34;&gt;keyd&lt;/a&gt;: Linux-only key remapper very similar to QMK, kmonad, and kanata&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/k0kubun/xremap&#34;&gt;xremap&lt;/a&gt;: Linux-only application-aware key remapper inspired more by Emacs key sequences vs. QMK layers/Vim modes&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/houmain/keymapper&#34;&gt;keymapper&lt;/a&gt;: Context-aware cross-platform key remapper with a different transformation model (Linux, Windows, Mac)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Why the list?&lt;/h3&gt; &#xA;&lt;p&gt;While kanata is the best tool for some, it may not be the best tool for you. I&#39;m happy to introduce you to tools that may better suit your needs. This list is also useful as reference/inspiration for functionality that could be added to kanata.&lt;/p&gt; &#xA;&lt;h2&gt;Donations/Support?&lt;/h2&gt; &#xA;&lt;p&gt;The author (jtroo) will not accept monetary donations for work on kanata. Please instead donate your time and/or money to charity.&lt;/p&gt; &#xA;&lt;p&gt;Some links are below. These links are provided for learning and as interesting reads. They are &lt;strong&gt;not&lt;/strong&gt; an endorsement.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.effectivealtruism.org/&#34;&gt;https://www.effectivealtruism.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.givewell.org/&#34;&gt;https://www.givewell.org/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>