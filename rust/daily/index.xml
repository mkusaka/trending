<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-08T01:42:30Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>loco-rs/loco</title>
    <updated>2023-12-08T01:42:30Z</updated>
    <id>tag:github.com,2023-12-08:/loco-rs/loco</id>
    <link href="https://github.com/loco-rs/loco" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🚂 🦀 The one-person framework for Rust for side-projects and startups&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to Loco!&lt;/h1&gt; &#xA;&lt;center&gt; &#xA; &lt;img width=&#34;640&#34; src=&#34;https://github.com/loco-rs/loco/raw/master/media/image.png&#34;&gt; &#xA;&lt;/center&gt; &#xA;&lt;br&gt; &#xA;&lt;center&gt; &#xA; &lt;a href=&#34;https://loco.rs&#34;&gt;loco.rs&lt;/a&gt; &#xA;&lt;/center&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Loco is a Rust API and web framework for full stack product builders.&lt;/p&gt; &#xA;&lt;p&gt;You need to be familiar with Rust to a moderate level. You need to know how to build, test, and run Rust projects, have used some popular libraries such as clap, regex, tokio, axum or other web framework, nothing too fancy. There are no crazy lifetime twisters or complex / too magical, macros in Loco that you need to know how they work.&lt;/p&gt; &#xA;&lt;p&gt;Loco is strongly inspired by Rails. If you know Rails and Rust, you&#39;ll feel at home. If you only know Rails and new to Rust, you&#39;ll find Loco refreshing. We do not assume you know Rails.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cargo install loco-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can create your new app (choose &#34;Saas app&#34;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ loco new&#xA;❯ App name? [myapp]:&#xA;❯ Saas app (with DB and user auth)&#xA;  Stateless service (minimal, no db)&#xA;🚂 Loco app generated successfully in:&#xA;myapp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;div class=&#34;infobox&#34;&gt;&#xA;  To configure a database , please run a local postgres database with &#xA; &lt;code&gt;loco:loco&lt;/code&gt; and a db named &#xA; &lt;code&gt;loco_app&lt;/code&gt;. &#xA;&lt;/div&gt; &#xA;&lt;p&gt;You can use Docker to run a Postgres instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker run -d -p 5432:5432 -e POSTGRES_USER=loco -e POSTGRES_DB=loco_app -e POSTGRES_PASSWORD=&#34;loco&#34; postgres:15.3-alpine&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now &lt;code&gt;cd&lt;/code&gt; into your &lt;code&gt;myapp&lt;/code&gt; and start your app:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd myapp&#xA;$ cargo loco start&#xA;Finished dev [unoptimized + debuginfo] target(s) in 21.63s&#xA;    Running `target/debug/myapp start`&#xA;&#xA;    :&#xA;    :&#xA;    :&#xA;&#xA;controller/app_routes.rs:203: [Middleware] Adding log trace id&#xA;&#xA;                      ▄     ▀&#xA;                                 ▀  ▄&#xA;                  ▄       ▀     ▄  ▄ ▄▀&#xA;                                    ▄ ▀▄▄&#xA;                        ▄     ▀    ▀  ▀▄▀█▄&#xA;                                          ▀█▄&#xA;▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄▄▄   ▄▄▄▄▄▄▄▄▄▄▄ ▄▄▄▄▄▄▄▄▄ ▀▀█&#xA; ██████  █████   ███ █████   ███ █████   ███ ▀█&#xA; ██████  █████   ███ █████   ▀▀▀ █████   ███ ▄█▄&#xA; ██████  █████   ███ █████       █████   ███ ████▄&#xA; ██████  █████   ███ █████   ▄▄▄ █████   ███ █████&#xA; ██████  █████   ███  ████   ███ █████   ███ ████▀&#xA;   ▀▀▀██▄ ▀▀▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀▀▀ ██▀&#xA;       ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀&#xA;&#xA;started on port 3000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Project Status&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;STAGE 1&lt;/code&gt;: &lt;strong&gt;wide but shallow&lt;/strong&gt;. Build a lot of components that make up a Rails-like framework, but only invest 60% in what they should be.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;STAGE 2&lt;/code&gt;: &lt;strong&gt;operable demo&lt;/strong&gt;. Build tooling - CLI, testing, and a demo app to showcase the framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;STAGE 3&lt;/code&gt;: &lt;strong&gt;tooling polish&lt;/strong&gt;. Make day to day &lt;em&gt;development&lt;/em&gt; operations easy, such as adding models, controllers, logic and tests (by code generation, macros, or helpers)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;code&gt;STAGE 4&lt;/code&gt;: &lt;strong&gt;indepth development&lt;/strong&gt;. Make the 60% go to 80% of functionality where needed. Things like documentation (website?), missing API, supporting various deployment scenarios (on docker, other platforms), feature flags to cut down functionality&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;code&gt;STAGE 5&lt;/code&gt;: &lt;strong&gt;go wide and expand&lt;/strong&gt;. Focus on building various kinds of demo apps&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>timvisee/advent-of-code-2023</title>
    <updated>2023-12-08T01:42:30Z</updated>
    <id>tag:github.com,2023-12-08:/timvisee/advent-of-code-2023</id>
    <link href="https://github.com/timvisee/advent-of-code-2023" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🎄 My Advent of Code solutions in Rust. http://adventofcode.com/2023&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Advent of Code 2023 in Rust&lt;/h1&gt; &#xA;&lt;p&gt;My &lt;a href=&#34;https://adventofcode.com/2023&#34;&gt;Advent of Code 2023&lt;/a&gt; solutions in the Rust programming language. This repository holds a separate Rust project for each day and part.&lt;/p&gt; &#xA;&lt;p&gt;I attempt to develop a standalone, elegant, compact and fast solution for each problem (two each day).&lt;/p&gt; &#xA;&lt;p&gt;Two years ago I did the same, solving everything in under a second:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://timvisee.com/blog/solving-aoc-2020-in-under-a-second/&#34;&gt;https://timvisee.com/blog/solving-aoc-2020-in-under-a-second/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/timvisee/advent-of-code-2021&#34;&gt;https://github.com/timvisee/advent-of-code-2021&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/timvisee/advent-of-code-2020&#34;&gt;https://github.com/timvisee/advent-of-code-2020&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Timings&lt;/h2&gt; &#xA;&lt;p&gt;Here is how long each solution runs. All solutions are measured (non scientifically) in &lt;a href=&#34;https://raw.githubusercontent.com/timvisee/advent-of-code-2023/master/runner/src/bin/bench.rs&#34;&gt;&lt;code&gt;bench.rs&lt;/code&gt;&lt;/a&gt; on an &lt;code&gt;AMD Ryzen 9 5900X (24) @ 3.7GHz&lt;/code&gt; machine running Linux.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;part A&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;part B&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://adventofcode.com/2023/day/1&#34;&gt;day 1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/timvisee/advent-of-code-2023/master/day01a/src/main.rs&#34;&gt;&lt;code&gt; 0.016 ms&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/timvisee/advent-of-code-2023/master/day01b/src/main.rs&#34;&gt;&lt;code&gt; 0.028 ms&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://adventofcode.com/2023/day/2&#34;&gt;day 2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/timvisee/advent-of-code-2023/master/day02a/src/main.rs&#34;&gt;&lt;code&gt; 0.011 ms&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/timvisee/advent-of-code-2023/master/day02b/src/main.rs&#34;&gt;&lt;code&gt; 0.016 ms&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://adventofcode.com/2023/day/3&#34;&gt;day 3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/timvisee/advent-of-code-2023/master/day03a/src/main.rs&#34;&gt;&lt;code&gt; 0.019 ms&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/timvisee/advent-of-code-2023/master/day03b/src/main.rs&#34;&gt;&lt;code&gt; 0.018 ms&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://adventofcode.com/2023/day/4&#34;&gt;day 4&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/timvisee/advent-of-code-2023/master/day04a/src/main.rs&#34;&gt;&lt;code&gt; 0.017 ms&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/timvisee/advent-of-code-2023/master/day04b/src/main.rs&#34;&gt;&lt;code&gt; 0.017 ms&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://adventofcode.com/2023/day/5&#34;&gt;day 5&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/timvisee/advent-of-code-2023/master/day05a/src/main.rs&#34;&gt;&lt;code&gt; 0.015 ms&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/timvisee/advent-of-code-2023/master/day05b/src/main.rs&#34;&gt;&lt;code&gt; 0.034 ms&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://adventofcode.com/2023/day/6&#34;&gt;day 6&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/timvisee/advent-of-code-2023/master/day06a/src/main.rs&#34;&gt;&lt;code&gt; 0.001 ms&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/timvisee/advent-of-code-2023/master/day06b/src/main.rs&#34;&gt;&lt;code&gt; 0.001 ms&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://adventofcode.com/2023/day/7&#34;&gt;day 7&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/timvisee/advent-of-code-2023/master/day07a/src/main.rs&#34;&gt;&lt;code&gt; 0.065 ms&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/timvisee/advent-of-code-2023/master/day07b/src/main.rs&#34;&gt;&lt;code&gt; 0.066 ms&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;one-by-one (1 CPU core)&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;parallel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;em&gt;everything&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/timvisee/advent-of-code-2023/master/runner/src/bin/runner.rs&#34;&gt;&lt;code&gt; 0.34 ms&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/timvisee/advent-of-code-2023/master/runner/src/bin/runner-par.rs&#34;&gt;&lt;code&gt; 0.25 ms&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Run solutions&lt;/h2&gt; &#xA;&lt;p&gt;Each Rust project contains a &lt;code&gt;input.txt&lt;/code&gt; file, holding the puzzle input. Simply run the project to see the solution appear.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Switch to day 1a, and run it&#xA;cd day01a&#xA;cargo +nightly run --release&#xA;&#xA;# or run everything in parallel&#xA;cd ../runner&#xA;cargo +nightly run --release --bin runner-par&#xA;&#xA;# or benchmark every day&#xA;cd ../runner&#xA;cargo +nightly run --release --bin bench&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some solutions require Rust Nightly, that&#39;s why &lt;code&gt;+nightly&lt;/code&gt; is included.&lt;/p&gt; &#xA;&lt;h2&gt;Other years&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/timvisee/advent-of-code-2023&#34;&gt;2023&lt;/a&gt; &lt;em&gt;(current)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/timvisee/advent-of-code-2022&#34;&gt;2022&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/timvisee/advent-of-code-2021&#34;&gt;2021&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/timvisee/advent-of-code-2020&#34;&gt;2020&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/timvisee/advent-of-code-2019&#34;&gt;2019&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/timvisee/advent-of-code-2018&#34;&gt;2018&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/timvisee/advent-of-code-2017&#34;&gt;2017&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is released under the GNU GPL-3.0 license. Check out the &lt;a href=&#34;https://raw.githubusercontent.com/timvisee/advent-of-code-2023/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>skytable/skytable</title>
    <updated>2023-12-08T01:42:30Z</updated>
    <id>tag:github.com,2023-12-08:/skytable/skytable</id>
    <link href="https://github.com/skytable/skytable" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Skytable is a modern scalable NoSQL database with BlueQL, designed for performance, scalability and flexibility. Skytable gives you spaces, models, data types, complex collections and more to build powerful experiences&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;150&#34; src=&#34;https://raw.githubusercontent.com/skytable/skytable/next/assets/logo.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt; Skytable — A modern database for building powerful experiences &lt;/h2&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; Performance, scalability and flexibility. Choose three. &lt;/h3&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/skytable/skytable/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/skytable/skytable?style=flat&#34; alt=&#34;GitHub release (with filter)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/skytable/skytable/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/skytable/skytable/test-push.yml?style=flat&#34; alt=&#34;GitHub Workflow Status (with event)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/QptWFdx&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/729378001023926282?logo=discord&amp;amp;style=flat&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.skytable.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/read%20the%20docs-here-blue?style=flat&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/skytable/skytable/discussions?style=flat&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/discuss-here-8A3324?style=flat&amp;amp;logo=github&amp;amp;labelColor=C34723&#34; alt=&#34;Static Badge&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;💡 What is Skytable?&lt;/h2&gt; &#xA;&lt;p&gt;Skytable is a &lt;strong&gt;modern NoSQL database&lt;/strong&gt; that focuses on &lt;strong&gt;performance, flexibility and scalability&lt;/strong&gt;. Our goal is to deliver &lt;strong&gt;a rock-solid database&lt;/strong&gt; that you can use as the foundation for your next application — &lt;strong&gt;minus the gimmicks&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Skytable makes every attempt to &lt;strong&gt;remove the gotchas from SQL-systems&lt;/strong&gt;. For example, nonempty &lt;code&gt;model&lt;/code&gt;s and &lt;code&gt;space&lt;/code&gt;s cannot be dropped and &lt;strong&gt;BlueQL is designed to greatly deter SQL injection vulnerabilities&lt;/strong&gt; with a new &lt;strong&gt;mandatory parameterization&lt;/strong&gt; design and several other &lt;strong&gt;secure query language design principles&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Every component in Skytable has been &lt;strong&gt;engineered from the ground up&lt;/strong&gt; to meet our design goals. &lt;strong&gt;Skytable uses BlueQL&lt;sup&gt;TM&lt;/sup&gt;&lt;/strong&gt; which is our own &lt;strong&gt;new in-house query language&lt;/strong&gt; designed from the ground up for a &lt;strong&gt;clean, powerful, modern and secure querying experience&lt;/strong&gt; and is &lt;strong&gt;generally more secure than SQL&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Skytable works with &lt;strong&gt;structured and semi-structured data&lt;/strong&gt;. We&#39;re currently working on supporting unstructured data.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;You can read more about Skytable&#39;s architecture, including information on the clustering and HA implementation that we&#39;re currently working on, and limitations &lt;a href=&#34;https://docs.skytable.io/architecture&#34;&gt;on this page&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🎨 Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Spaces, models and more&lt;/strong&gt;: For flexible data definition&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Powerful querying with BlueQL&lt;/strong&gt;: A modern query language, designed for the 21&lt;sup&gt;st&lt;/sup&gt; century&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Rich data modeling&lt;/strong&gt;: Use &lt;code&gt;model&lt;/code&gt;s to define data with complex types, collections and more&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Performant, in and out of the box&lt;/strong&gt;: Heavily multithreaded and optimized&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Secure, query in and response out&lt;/strong&gt;: BlueQL is designed to strongly deter query injection pathways&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SQL minus the gotchas&lt;/strong&gt;: Ever done a &lt;code&gt;DROP TABLE users&lt;/code&gt; and lost all data? &lt;strong&gt;That won&#39;t happen in Skytable&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Designed to scale by enforcing best practices&lt;/strong&gt;: If you&#39;re building with Skytable today, the practices you&#39;ll learn here will let you easily take on the job of building large scale systems&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Learn more about &lt;a href=&#34;https://docs.skytable.io&#34;&gt;Skytable&#39;s features here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🚀 Getting started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Set up Skytable on your machine&lt;/strong&gt;: You&#39;ll need to download a bundled release file &lt;a href=&#34;https://github.com/skytable/skytable/releases&#34;&gt;from the releases page&lt;/a&gt;. Unzip the files and you&#39;re ready to go.&lt;/li&gt; &#xA; &lt;li&gt;Start the database server: &lt;code&gt;./skyd --auth-root-password &amp;lt;password&amp;gt;&lt;/code&gt; with your choice of a password for the &lt;code&gt;root&lt;/code&gt; account. The &lt;code&gt;root&lt;/code&gt; account is just like a &lt;code&gt;root&lt;/code&gt; account on Unix based systems that has control over everything.&lt;/li&gt; &#xA; &lt;li&gt;Start the interactive client REPL: &lt;code&gt;./skysh&lt;/code&gt; and then enter your password.&lt;/li&gt; &#xA; &lt;li&gt;You&#39;re ready to run queries!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;For a more detailed guide on installation and deployment, &lt;a href=&#34;https://docs.skytable.io/installation&#34;&gt;follow the guide here.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;⚡ Using Skytable&lt;/h2&gt; &#xA;&lt;p&gt;Skytable has &lt;code&gt;SPACE&lt;/code&gt;s instead of &lt;code&gt;DATABASE&lt;/code&gt;s due to signficant operational differences (and because &lt;code&gt;SPACE&lt;/code&gt;s store a lot more than tabular data).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;With the REPL started, follow this guide&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a &lt;code&gt;space&lt;/code&gt; and switch to it: &lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;CREATE SPACE myspace&#xA;USE myspace&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create a &lt;code&gt;model&lt;/code&gt;: &lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;CREATE MODEL myspace.mymodel(username: string, password: string, notes: list { type: string })&#xA;&lt;/code&gt;&lt;/pre&gt; The rough representation for this in Rust would be: &lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;pub struct MyModel {&#xA; username: String,&#xA; password: Strin,&#xA; notes: Vec&amp;lt;String&amp;gt;,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;INSERT&lt;/code&gt; some data: &lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;INSERT INTO mymodel(&#39;sayan&#39;, &#39;pass123&#39;, [])&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;UPDATE&lt;/code&gt; some data: &lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;UPDATE mymodel SET notes += &#34;my first note&#34; WHERE username = &#39;sayan&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SELECT&lt;/code&gt; some data &lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT * FROM mymodel WHERE username = &#39;sayan&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Poke around! &lt;strong&gt;And then make sure you &lt;a href=&#34;https://docs.skytable.io/blueql/overview&#34;&gt;read the documentation learn BlueQL&lt;/a&gt;.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;For a complete guide on Skytable, it&#39;s architecture, BlueQL, queries and more we strongly recommend you to &lt;a href=&#34;https://docs.skytable.io&#34;&gt;read the documentation here.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;While you&#39;re seeing strings and other values being used here, this is so because the REPL client smartly parameterizes queries behind the scenes. &lt;strong&gt;BlueQL has mandatory parameterization&lt;/strong&gt;. (See below to see how the Rust client handles this)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🧩 Find a client driver&lt;/h2&gt; &#xA;&lt;p&gt;You need a client driver to use Skytable in your programs. Officially, we maintain a regularly updated &lt;a href=&#34;https://github.com/skytable/client-rust&#34;&gt;Rust client driver&lt;/a&gt; which is liberally license under the Apache-2.0 license so that you can use it anywhere.&lt;/p&gt; &#xA;&lt;p&gt;Using the Rust client driver, it&#39;s very straightforward to run queries thanks to Rust&#39;s powerful type system and macros:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;use skytable::{Config, query};&#xA;&#xA;fn main() {&#xA;    let mut db = Config::new_default(&#34;username&#34;, &#34;password&#34;).connect().unwrap();&#xA;    let query = query!(&#34;select username, password from myspace.mymodel where username = ?&#34;, &#34;sayan&#34;);&#xA;    let (username, password): (String, Vec&amp;lt;u8&amp;gt;) = db.query_parse(&amp;amp;query).unwrap();&#xA;    // do something with it!&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;You can find more information on client drivers on &lt;a href=&#34;https://docs.skytable.io/libraries&#34;&gt;this page&lt;/a&gt;. If you want to help write a client driver for your language of choice, &lt;em&gt;we&#39;re here to support your work&lt;/em&gt;. Please reach out to: &lt;a href=&#34;mailto:hey@skytable.io&#34;&gt;hey@skytable.io&lt;/a&gt; or leave a message on our Discord server!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🙋 Getting help&lt;/h2&gt; &#xA;&lt;p&gt;We exclusively use &lt;a href=&#34;https://discord.gg/QptWFdx&#34;&gt;Discord&lt;/a&gt; for most real-time communications — you can chat with developers, maintainers, and our amazing users! Outside that, we recommend that you use our &lt;a href=&#34;https://github.com/skytable/skytable/discussions&#34;&gt;GitHub Discussions page&lt;/a&gt; for any questions or open a new issue if you think you&#39;ve found a bug.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;We&#39;re here to help!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://raw.githubusercontent.com/skytable/skytable/next/CONTRIBUTING.md&#34;&gt;contributing guide here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://raw.githubusercontent.com/skytable/skytable/next/ACKNOWLEDGEMENTS.txt&#34;&gt;acknowledgements&lt;/a&gt; document.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Skytable is distributed under the &lt;a href=&#34;https://raw.githubusercontent.com/skytable/skytable/next/LICENSE&#34;&gt;AGPL-3.0 License&lt;/a&gt;. &lt;strong&gt;You may not use Skytable&#39;s logo for other projects.&lt;/strong&gt;&lt;/p&gt;</summary>
  </entry>
</feed>