<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-28T01:35:46Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>FuelLabs/sway-applications</title>
    <updated>2024-02-28T01:35:46Z</updated>
    <id>tag:github.com,2024-02-28:/FuelLabs/sway-applications</id>
    <link href="https://github.com/FuelLabs/sway-applications" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Swaypplications&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;.docs/sway-apps-logo-dark-theme.png&#34;&gt; &#xA;  &lt;img alt=&#34;SwayApps logo&#34; width=&#34;400px&#34; src=&#34;https://raw.githubusercontent.com/FuelLabs/sway-applications/master/.docs/sway-apps-logo-light-theme.png&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/FuelLabs/sway-applications/actions/workflows/ci.yml&#34; alt=&#34;CI&#34;&gt; &lt;img src=&#34;https://github.com/FuelLabs/sway-applications/actions/workflows/ci.yml/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/sway-applications/master/LICENSE&#34; alt=&#34;forc&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/FuelLabs/sway-applications&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/xfpK4Pe&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/732892373507375164?color=6A7EC2&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;labelColor=6A7EC2&amp;amp;label=Discord&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;The purpose of this repository is to contain end-to-end applications that are written in Sway in order to demonstrate what can be built.&lt;/p&gt; &#xA;&lt;p&gt;This means that a project will generally consist of a Sway contract and a user interface in order to interact with the contract however that is not a hard rule.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Sway is a language under heavy development therefore the applications may not be the most ergonomic. Over time they should receive updates / improvements in order to demonstrate how Sway can be used in real use cases.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Repository Structure&lt;/h2&gt; &#xA;&lt;p&gt;Each project within this repository is independent of the other projects and thus every project has its own directory with all of the files required to make it work.&lt;/p&gt; &#xA;&lt;p&gt;That being said they are all under the same &lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/sway-applications/master/.github/workflows/ci.yml&#34;&gt;CI&lt;/a&gt; so any updates to a project must make sure that the other projects continue to pass.&lt;/p&gt; &#xA;&lt;p&gt;The following is a visual sample of how the repository is structured.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sway-applications/&#xA;├── Project-1&#xA;|    └── P-1 Directories &amp;amp; files&#xA;├── Project-2&#xA;|    └── P-2 Directories &amp;amp; files&#xA;├── LICENSE&#xA;└── README.md&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Projects&lt;/h3&gt; &#xA;&lt;h4&gt;Asset Management&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/sway-applications/master/airdrop/&#34;&gt;Airdrop&lt;/a&gt; is an asset distribution program where users are able to claim assets given a valid merkle proof.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/sway-applications/master/escrow&#34;&gt;Escrow&lt;/a&gt; is a third party that keeps an asset on behalf of multiple parties.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/sway-applications/master/native-assets/NFT/&#34;&gt;Non-Fungible Native Asset (NFT)&lt;/a&gt; is an asset contract which provides unique collectibles, identified and differentiated by IDs, where assets contain metadata giving them distinctive characteristics.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/sway-applications/master/native-assets/fractional-NFT/&#34;&gt;Fractional Non-Fungible Token (F-NFT)&lt;/a&gt; is a token contract which issues shares or partial ownership upon locking an NFT into a vault.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/sway-applications/master/timelock&#34;&gt;Timelock&lt;/a&gt; is a contract which restricts the execution of a transaction to a specified time range.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/sway-applications/master/native-assets/native-asset/&#34;&gt;Native Asset&lt;/a&gt; is a basic asset contract that enables the use of Native Assets on Fuel using existing standards and libraries.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Decentralized Finance&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/sway-applications/master/auctions/english-auction/&#34;&gt;English Auction&lt;/a&gt; is an auction where users bid up the price of an asset until the bidding period has ended or a reserve has been met.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/sway-applications/master/fundraiser/&#34;&gt;Fundraiser&lt;/a&gt; is a program allowing users to pledge towards a goal.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/sway-applications/master/OTC-swap-predicate&#34;&gt;OTC Swap Predicate&lt;/a&gt; is a predicate that can be used to propose and execute an atomic swap between two parties without requiring any on-chain state.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Governance&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/sway-applications/master/DAO&#34;&gt;Decentralized Autonomous Organization (DAO)&lt;/a&gt; is an organization where users get to vote on governance proposals using governance assets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/sway-applications/master/multisig-wallet&#34;&gt;Multi-Signature Wallet&lt;/a&gt; is a wallet that requires multiple signatures to execute a transaction.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Other&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/sway-applications/master/counter-script/&#34;&gt;Counter-Script&lt;/a&gt; is a script that calls a contract to increment a counter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/sway-applications/master/name-registry/&#34;&gt;Name-Registry&lt;/a&gt; allows users to perform transactions with human readable names instead of addresses.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/sway-applications/master/oracle&#34;&gt;Oracle&lt;/a&gt; is a smart contract that provides off-chain data to on-chain applications.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Games&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/sway-applications/master/games/TicTacToe&#34;&gt;TicTacToe&lt;/a&gt; is a game where two players compete to align three markers in a row.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Low maintenance&lt;/h4&gt; &#xA;&lt;p&gt;The below apps are updated to the latest version, but may have broken tests or broken functionality. Use at your own discretion.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/sway-applications/master/archive/AMM/&#34;&gt;Automated Market Maker (AMM)&lt;/a&gt; is a decentralized exchange protocol that manages liquidity pools supplied by its users and determines prices algorithmically while exchanging assets.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running a project&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to run any of the projects then clone this repository and go through the general &lt;a href=&#34;https://fuellabs.github.io/sway/&#34;&gt;installation&lt;/a&gt; steps required to use our tools.&lt;/p&gt; &#xA;&lt;p&gt;Any instructions related to running a specific project will be found within the README.md in the root of that project.&lt;/p&gt; &#xA;&lt;p&gt;The projects are pinned to specific versions which can be seen at the top of the README.md inside the &lt;code&gt;/&amp;lt;app&amp;gt;/project&lt;/code&gt; directory and inside the &lt;code&gt;fuel-toolchain.toml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://swayapps.fuel.network/book/&#34;&gt;book&lt;/a&gt; for more info!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rust-bitcoin/rust-bitcoin</title>
    <updated>2024-02-28T01:35:46Z</updated>
    <id>tag:github.com,2024-02-28:/rust-bitcoin/rust-bitcoin</id>
    <link href="https://github.com/rust-bitcoin/rust-bitcoin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Rust Bitcoin library&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Rust Bitcoin&lt;/h1&gt; &#xA; &lt;img alt=&#34;Rust Bitcoin logo by Hunter Trujillo, see license and source files under /logo&#34; src=&#34;https://raw.githubusercontent.com/rust-bitcoin/rust-bitcoin/master/logo/rust-bitcoin.png&#34; width=&#34;300&#34;&gt; &#xA; &lt;p&gt;Library with support for de/serialization, parsing and executing on data-structures and network messages related to Bitcoin. &lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://crates.io/crates/bitcoin&#34;&gt;&lt;img alt=&#34;Crate Info&#34; src=&#34;https://img.shields.io/crates/v/bitcoin.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rust-bitcoin/rust-bitcoin/raw/master/LICENSE&#34;&gt;&lt;img alt=&#34;CC0 1.0 Universal Licensed&#34; src=&#34;https://img.shields.io/badge/license-CC0--1.0-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rust-bitcoin/rust-bitcoin/actions?query=workflow%3AContinuous%20integration&#34;&gt;&lt;img alt=&#34;CI Status&#34; src=&#34;https://github.com/rust-bitcoin/rust-bitcoin/workflows/Continuous%20integration/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.rs/bitcoin&#34;&gt;&lt;img alt=&#34;API Docs&#34; src=&#34;https://img.shields.io/badge/docs.rs-bitcoin-green&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://blog.rust-lang.org/2021/11/01/Rust-1.56.1.html&#34;&gt;&lt;img alt=&#34;Rustc Version 1.56.1+&#34; src=&#34;https://img.shields.io/badge/rustc-1.56.1%2B-lightgrey.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gnusha.org/bitcoin-rust/&#34;&gt;&lt;img alt=&#34;Chat on IRC&#34; src=&#34;https://img.shields.io/badge/irc-%23bitcoin--rust%20on%20libera.chat-blue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/model-checking/kani&#34;&gt;&#xA;   &lt;imp alt=&#34;kani&#34; src=&#34;https://github.com/rust-bitcoin/rust-bitcoin/actions/workflows/kani.yaml/badge.svg&#34;&gt;&lt;/imp&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.rs/bitcoin/&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Supports (or should support)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;De/serialization of Bitcoin protocol network messages&lt;/li&gt; &#xA; &lt;li&gt;De/serialization of blocks and transactions&lt;/li&gt; &#xA; &lt;li&gt;Script de/serialization&lt;/li&gt; &#xA; &lt;li&gt;Private keys and address creation, de/serialization and validation (including full BIP32 support)&lt;/li&gt; &#xA; &lt;li&gt;PSBT v0 de/serialization and all but the Input Finalizer role. Use &lt;a href=&#34;https://docs.rs/miniscript/latest/miniscript/psbt/index.html&#34;&gt;rust-miniscript&lt;/a&gt; to finalize.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For JSONRPC interaction with Bitcoin Core, it is recommended to use &lt;a href=&#34;https://github.com/rust-bitcoin/rust-bitcoincore-rpc&#34;&gt;rust-bitcoincore-rpc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is recommended to always use &lt;a href=&#34;https://github.com/crev-dev/cargo-crev&#34;&gt;cargo-crev&lt;/a&gt; to verify the trustworthiness of each of your dependencies, including this one.&lt;/p&gt; &#xA;&lt;h2&gt;Known limitations&lt;/h2&gt; &#xA;&lt;h3&gt;Consensus&lt;/h3&gt; &#xA;&lt;p&gt;This library &lt;strong&gt;must not&lt;/strong&gt; be used for consensus code (i.e. fully validating blockchain data). It technically supports doing this, but doing so is very ill-advised because there are many deviations, known and unknown, between this library and the Bitcoin Core reference implementation. In a consensus based cryptocurrency such as Bitcoin it is critical that all parties are using the same rules to validate data, and this library is simply unable to implement the same rules as Core.&lt;/p&gt; &#xA;&lt;p&gt;Given the complexity of both C++ and Rust, it is unlikely that this will ever be fixed, and there are no plans to do so. Of course, patches to fix specific consensus incompatibilities are welcome.&lt;/p&gt; &#xA;&lt;h3&gt;Support for 16-bit pointer sizes&lt;/h3&gt; &#xA;&lt;p&gt;16-bit pointer sizes are not supported and we can&#39;t promise they will be. If you care about them please let us know, so we can know how large the interest is and possibly decide to support them.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Currently can be found on &lt;a href=&#34;https://docs.rs/bitcoin/&#34;&gt;docs.rs/bitcoin&lt;/a&gt;. Patches to add usage examples and to expand on existing docs would be extremely appreciated.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are generally welcome. If you intend to make larger changes please discuss them in an issue before PRing them to avoid duplicate work and architectural mismatches. If you have any questions or ideas you want to discuss please join us in &lt;a href=&#34;https://web.libera.chat/?channel=#bitcoin-rust&#34;&gt;#bitcoin-rust&lt;/a&gt; on &lt;a href=&#34;https://libera.chat&#34;&gt;libera.chat&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For more information please see &lt;code&gt;./CONTRIBUTING.md&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Minimum Supported Rust Version (MSRV)&lt;/h2&gt; &#xA;&lt;p&gt;This library should always compile with any combination of features on &lt;strong&gt;Rust 1.56.1&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To build with the MSRV you will likely need to pin a bunch of dependencies, see &lt;code&gt;./contrib/test.sh&lt;/code&gt; for the current list.&lt;/p&gt; &#xA;&lt;h2&gt;External dependencies&lt;/h2&gt; &#xA;&lt;p&gt;We integrate with a few external libraries, most notably &lt;code&gt;serde&lt;/code&gt;. These are available via feature flags. To ensure compatibility and MSRV stability we provide two lock files as a means of inspecting compatible versions: &lt;code&gt;Cargo-minimal.lock&lt;/code&gt; containing minimal versions of dependencies and &lt;code&gt;Cargo-recent.lock&lt;/code&gt; containing recent versions of dependencies tested in our CI.&lt;/p&gt; &#xA;&lt;p&gt;We do not provide any guarantees about the content of these lock files outside of &#34;our CI didn&#39;t fail with these versions&#34;. Specifically, we do not guarantee that the committed hashes are free from malware. It is your responsibility to review them.&lt;/p&gt; &#xA;&lt;h2&gt;Installing Rust&lt;/h2&gt; &#xA;&lt;p&gt;Rust can be installed using your package manager of choice or &lt;a href=&#34;https://rustup.rs&#34;&gt;rustup.rs&lt;/a&gt;. The former way is considered more secure since it typically doesn&#39;t involve trust in the CA system. But you should be aware that the version of Rust shipped by your distribution might be out of date. Generally this isn&#39;t a problem for &lt;code&gt;rust-bitcoin&lt;/code&gt; since we support much older versions than the current stable one (see MSRV section).&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;The cargo feature &lt;code&gt;std&lt;/code&gt; is enabled by default. At least one of the features &lt;code&gt;std&lt;/code&gt; or &lt;code&gt;no-std&lt;/code&gt; or both must be enabled.&lt;/p&gt; &#xA;&lt;p&gt;Enabling the &lt;code&gt;no-std&lt;/code&gt; feature does not disable &lt;code&gt;std&lt;/code&gt;. To disable the &lt;code&gt;std&lt;/code&gt; feature you must disable default features. The &lt;code&gt;no-std&lt;/code&gt; feature only enables additional features required for this crate to be usable without &lt;code&gt;std&lt;/code&gt;. Both can be enabled without conflict.&lt;/p&gt; &#xA;&lt;p&gt;The library can be built and tested using &lt;a href=&#34;https://github.com/rust-lang/cargo/&#34;&gt;&lt;code&gt;cargo&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:rust-bitcoin/rust-bitcoin.git&#xA;cd rust-bitcoin&#xA;cargo build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can run tests with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cargo test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://doc.rust-lang.org/stable/cargo/&#34;&gt;&lt;code&gt;cargo&lt;/code&gt; documentation&lt;/a&gt; for more detailed instructions.&lt;/p&gt; &#xA;&lt;h3&gt;Just&lt;/h3&gt; &#xA;&lt;p&gt;We support &lt;a href=&#34;https://just.systems/man/en/&#34;&gt;&lt;code&gt;just&lt;/code&gt;&lt;/a&gt; for running dev workflow commands. Run &lt;code&gt;just&lt;/code&gt; from your shell to see list available sub-commands.&lt;/p&gt; &#xA;&lt;h3&gt;Building the docs&lt;/h3&gt; &#xA;&lt;p&gt;We build docs with the nightly toolchain, you may wish to use the following shell alias to check your documentation changes build correctly.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;alias build-docs=&#39;RUSTDOCFLAGS=&#34;--cfg docsrs&#34; cargo +nightly rustdoc --features=&#34;$FEATURES&#34; -- -D rustdoc::broken-intra-doc-links&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;Unit and integration tests are available for those interested, along with benchmarks. For project developers, especially new contributors looking for something to work on, we do:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fuzz testing with &lt;a href=&#34;https://github.com/rust-fuzz/honggfuzz-rs&#34;&gt;&lt;code&gt;Hongfuzz&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mutation testing with &lt;a href=&#34;https://github.com/llogiq/mutagen&#34;&gt;&lt;code&gt;Mutagen&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Code verification with &lt;a href=&#34;https://github.com/model-checking/kani&#34;&gt;&lt;code&gt;Kani&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are always more tests to write and more bugs to find, contributions to our testing efforts extremely welcomed. Please consider testing code a first class citizen, we definitely do take PRs improving and cleaning up test code.&lt;/p&gt; &#xA;&lt;h3&gt;Unit/Integration tests&lt;/h3&gt; &#xA;&lt;p&gt;Run as for any other Rust project &lt;code&gt;cargo test --all-features&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Benchmarks&lt;/h3&gt; &#xA;&lt;p&gt;We use a custom Rust compiler configuration conditional to guard the bench mark code. To run the bench marks use: &lt;code&gt;RUSTFLAGS=&#39;--cfg=bench&#39; cargo +nightly bench&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Mutation tests&lt;/h3&gt; &#xA;&lt;p&gt;We have started doing mutation testing with &lt;a href=&#34;https://github.com/llogiq/mutagen&#34;&gt;mutagen&lt;/a&gt;. To run these tests first install the latest dev version with &lt;code&gt;cargo +nightly install --git https://github.com/llogiq/mutagen&lt;/code&gt; then run with &lt;code&gt;RUSTFLAGS=&#39;--cfg=mutate&#39; cargo +nightly mutagen&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Code verification&lt;/h3&gt; &#xA;&lt;p&gt;We have started using &lt;a href=&#34;https://github.com/model-checking/kani&#34;&gt;kani&lt;/a&gt;, install with &lt;code&gt;cargo install --locked kani-verifier&lt;/code&gt; (no need to run &lt;code&gt;cargo kani setup&lt;/code&gt;). Run the tests with &lt;code&gt;cargo kani&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Pull Requests&lt;/h2&gt; &#xA;&lt;p&gt;Every PR needs at least two reviews to get merged. During the review phase maintainers and contributors are likely to leave comments and request changes. Please try to address them, otherwise your PR might get closed without merging after a longer time of inactivity. If your PR isn&#39;t ready for review yet please mark it by prefixing the title with &lt;code&gt;WIP: &lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;CI Pipeline&lt;/h3&gt; &#xA;&lt;p&gt;The CI pipeline requires approval before being run on each MR.&lt;/p&gt; &#xA;&lt;p&gt;In order to speed up the review process the CI pipeline can be run locally using &lt;a href=&#34;https://github.com/nektos/act&#34;&gt;act&lt;/a&gt;. The &lt;code&gt;fuzz&lt;/code&gt; and &lt;code&gt;Cross&lt;/code&gt; jobs will be skipped when using &lt;code&gt;act&lt;/code&gt; due to caching being unsupported at this time. We do not &lt;em&gt;actively&lt;/em&gt; support &lt;code&gt;act&lt;/code&gt; but will merge PRs fixing &lt;code&gt;act&lt;/code&gt; issues.&lt;/p&gt; &#xA;&lt;h3&gt;Githooks&lt;/h3&gt; &#xA;&lt;p&gt;To assist devs in catching errors &lt;em&gt;before&lt;/em&gt; running CI we provide some githooks. If you do not already have locally configured githooks you can use the ones in this repository by running, in the root directory of the repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git config --local core.hooksPath githooks/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively add symlinks in your &lt;code&gt;.git/hooks&lt;/code&gt; directory to any of the githooks we provide.&lt;/p&gt; &#xA;&lt;h2&gt;Policy on Altcoins/Altchains&lt;/h2&gt; &#xA;&lt;p&gt;Since the altcoin landscape includes projects which &lt;a href=&#34;https://download.wpsoftware.net/bitcoin/alts.pdf&#34;&gt;frequently appear and disappear, and are poorly designed anyway&lt;/a&gt; we do not support any altcoins. Supporting Bitcoin properly is already difficult enough and we do not want to increase the maintenance burden and decrease API stability by adding support for other coins.&lt;/p&gt; &#xA;&lt;p&gt;Our code is public domain so by all means fork it and go wild :)&lt;/p&gt; &#xA;&lt;h2&gt;Release Notes&lt;/h2&gt; &#xA;&lt;p&gt;Release notes are done per crate, see:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rust-bitcoin/rust-bitcoin/master/bitcoin/CHANGELOG.md&#34;&gt;bitcoin CHANGELOG&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rust-bitcoin/rust-bitcoin/master/hashes/CHANGELOG.md&#34;&gt;hashes CHANGELOG&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rust-bitcoin/rust-bitcoin/master/internals/CHANGELOG.md&#34;&gt;internals CHANGELOG&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;The code in this project is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/rust-bitcoin/rust-bitcoin/master/LICENSE&#34;&gt;Creative Commons CC0 1.0 Universal license&lt;/a&gt;. We use the &lt;a href=&#34;https://spdx.org/licenses/&#34;&gt;SPDX license list&lt;/a&gt; and &lt;a href=&#34;https://spdx.dev/ids/&#34;&gt;SPDX IDs&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>