<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-27T01:34:11Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>linera-io/linera-protocol</title>
    <updated>2024-09-27T01:34:11Z</updated>
    <id>tag:github.com,2024-09-27:/linera-io/linera-protocol</id>
    <link href="https://github.com/linera-io/linera-protocol" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Main repository for the Linera protocol&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://github.com/linera-io/linera-protocol/assets/1105398/fe08c941-93af-4114-bb83-bcc0eaec95f9&#34; width=&#34;250&#34; height=&#34;90&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/linera-io/linera-protocol/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache-green.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linera-io/linera-protocol/actions/workflows/rust.yml&#34;&gt;&lt;img src=&#34;https://github.com/linera-io/linera-protocol/actions/workflows/rust.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status for Rust&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linera-io/linera-protocol/actions/workflows/documentation.yml&#34;&gt;&lt;img src=&#34;https://github.com/linera-io/linera-protocol/actions/workflows/documentation.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status for Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/linera-io/linera-protocol/actions/workflows/dynamodb.yml&#34;&gt;&lt;img src=&#34;https://github.com/linera-io/linera-protocol/actions/workflows/dynamodb.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status for DynamoDB&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- [![Build Status for Kubernetes](https://github.com/linera-io/linera-protocol/actions/workflows/kubernetes.yml/badge.svg)](https://github.com/linera-io/linera-protocol/actions/workflows/kubernetes.yml) --&gt; &#xA;&lt;p&gt;Linera is a decentralized blockchain infrastructure designed for highly scalable, low-latency Web3 applications.&lt;/p&gt; &#xA;&lt;p&gt;Visit our &lt;a href=&#34;https://linera.dev&#34;&gt;developer page&lt;/a&gt; and read our &lt;a href=&#34;https://linera.io/whitepaper&#34;&gt;whitepaper&lt;/a&gt; to learn more about the Linera protocol.&lt;/p&gt; &#xA;&lt;h2&gt;Repository Structure&lt;/h2&gt; &#xA;&lt;p&gt;The main crates and directories of this repository can be summarized as follows: (listed from low to high levels in the dependency graph)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://linera-io.github.io/linera-protocol/linera_base/index.html&#34;&gt;&lt;code&gt;linera-base&lt;/code&gt;&lt;/a&gt; Base definitions, including cryptography.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://linera-io.github.io/linera-protocol/linera_version/index.html&#34;&gt;&lt;code&gt;linera-version&lt;/code&gt;&lt;/a&gt; A library to manage version infos in binaries and services.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://linera-io.github.io/linera-protocol/linera_views/index.html&#34;&gt;&lt;code&gt;linera-views&lt;/code&gt;&lt;/a&gt; A library mapping complex data structures onto a key-value store. The corresponding procedural macros are implemented in &lt;code&gt;linera-views-derive&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://linera-io.github.io/linera-protocol/linera_execution/index.html&#34;&gt;&lt;code&gt;linera-execution&lt;/code&gt;&lt;/a&gt; Persistent data and the corresponding logics for runtime and execution of Linera applications.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://linera-io.github.io/linera-protocol/linera_chain/index.html&#34;&gt;&lt;code&gt;linera-chain&lt;/code&gt;&lt;/a&gt; Persistent data and the corresponding logics for chains of blocks, certificates, and cross-chain messaging.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://linera-io.github.io/linera-protocol/linera_storage/index.html&#34;&gt;&lt;code&gt;linera-storage&lt;/code&gt;&lt;/a&gt; Defines the storage abstractions for the protocol on top of &lt;code&gt;linera-chain&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://linera-io.github.io/linera-protocol/linera_core/index.html&#34;&gt;&lt;code&gt;linera-core&lt;/code&gt;&lt;/a&gt; The core Linera protocol, including client and server logic, node synchronization, etc.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://linera-io.github.io/linera-protocol/linera_rpc/index.html&#34;&gt;&lt;code&gt;linera-rpc&lt;/code&gt;&lt;/a&gt; Defines the data-type for RPC messages (currently all client ↔ proxy ↔ chain ↔ chain interactions), and track the corresponding data schemas.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://linera-io.github.io/linera-protocol/linera_service/index.html&#34;&gt;&lt;code&gt;linera-service&lt;/code&gt;&lt;/a&gt; Executable for clients (aka CLI wallets), proxy (aka validator frontend) and servers.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://linera-io.github.io/linera-protocol/linera_sdk/index.html&#34;&gt;&lt;code&gt;linera-sdk&lt;/code&gt;&lt;/a&gt; The library to develop Linera applications written in Rust for the Wasm virtual machine. The corresponding procedural macros are implemented in &lt;code&gt;linera-sdk-derive&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/linera-io/linera-protocol/main/examples&#34;&gt;&lt;code&gt;examples&lt;/code&gt;&lt;/a&gt; Examples of Linera applications written in Rust.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quickstart with the Linera service CLI&lt;/h2&gt; &#xA;&lt;p&gt;The following commands set up a local test network and run some transfers between the microchains owned by a single wallet.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Make sure to compile the Linera binaries and add them in the $PATH.&#xA;# cargo build -p linera-service --bins&#xA;export PATH=&#34;$PWD/target/debug:$PATH&#34;&#xA;&#xA;# Import the optional helper function `linera_spawn_and_read_wallet_variables`.&#xA;source /dev/stdin &amp;lt;&amp;lt;&amp;lt;&#34;$(linera net helper 2&amp;gt;/dev/null)&#34;&#xA;&#xA;# Run a local test network with the default parameters and a number of microchains&#xA;# owned by the default wallet. (The helper function `linera_spawn_and_read_wallet_variables`&#xA;# is used to set the two environment variables LINERA_{WALLET,STORAGE}.)&#xA;linera_spawn_and_read_wallet_variables \&#xA;linera net up&#xA;&#xA;# Print the set of validators.&#xA;linera query-validators&#xA;&#xA;# Query the chain balance of some of the chains.&#xA;CHAIN1=&#34;e476187f6ddfeb9d588c7b45d3df334d5501d6499b3f9ad5595cae86cce16a65&#34;&#xA;CHAIN2=&#34;256e1dbc00482ddd619c293cc0df94d366afe7980022bb22d99e33036fd465dd&#34;&#xA;linera query-balance &#34;$CHAIN1&#34;&#xA;linera query-balance &#34;$CHAIN2&#34;&#xA;&#xA;# Transfer 10 units then 5 back&#xA;linera transfer 10 --from &#34;$CHAIN1&#34; --to &#34;$CHAIN2&#34;&#xA;linera transfer 5 --from &#34;$CHAIN2&#34; --to &#34;$CHAIN1&#34;&#xA;&#xA;# Query balances again&#xA;linera query-balance &#34;$CHAIN1&#34;&#xA;linera query-balance &#34;$CHAIN2&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More complex examples may be found in our &lt;a href=&#34;https://linera.dev&#34;&gt;developer manual&lt;/a&gt; as well as the &lt;a href=&#34;https://raw.githubusercontent.com/linera-io/linera-protocol/main/examples&#34;&gt;example applications&lt;/a&gt; in this repository.&lt;/p&gt;</summary>
  </entry>
</feed>