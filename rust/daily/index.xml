<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-23T01:35:46Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>blockworks-foundation/autobahn</title>
    <updated>2025-07-23T01:35:46Z</updated>
    <id>tag:github.com,2025-07-23:/blockworks-foundation/autobahn</id>
    <link href="https://github.com/blockworks-foundation/autobahn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dex aggregator on Solana&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fill.city Autobahn&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/blockworks-foundation/autobahn/main/brand/autobahn-logo-mark.svg?sanitize=true&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Autobahn is the open source aggregator for swaps on Solana. This public good protocol enables developers to contribute their own DEX adapters. Take back control: access to orderflow from routers on Solana should not be centralized.&lt;/p&gt; &#xA;&lt;p&gt;The graph search is optimized for reliability of trade execution. Reliability is preferred over marginal price to improve user experience. Full test coverage through daily verification of all routed pools ensures correctness.&lt;/p&gt; &#xA;&lt;p&gt;A hosted version is available. Reach out to &lt;a href=&#34;mailto:partnerships@mango.markets&#34;&gt;partnerships@mango.markets&lt;/a&gt; to get an access token. Self-hosting requires custom validator patches to enable low-latency account subscriptions.&lt;/p&gt; &#xA;&lt;h2&gt;Using the router (as a client)&lt;/h2&gt; &#xA;&lt;p&gt;Basically it is the same API as Jupiter: &lt;code&gt;https://autobahn.mngo.cloud/&amp;lt;TOKEN&amp;gt;/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;quote (GET)&lt;/h3&gt; &#xA;&lt;p&gt;Supported parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;inputMint&lt;/li&gt; &#xA; &lt;li&gt;outputMint&lt;/li&gt; &#xA; &lt;li&gt;amount&lt;/li&gt; &#xA; &lt;li&gt;slippageBps&lt;/li&gt; &#xA; &lt;li&gt;maxAccounts&lt;/li&gt; &#xA; &lt;li&gt;onlyDirectRoutes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;swap &amp;amp; swap-instructions (POST)&lt;/h3&gt; &#xA;&lt;p&gt;Supported parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;userPublicKey&lt;/li&gt; &#xA; &lt;li&gt;wrapAndUnwrapSol&lt;/li&gt; &#xA; &lt;li&gt;autoCreateOutAta&lt;/li&gt; &#xA; &lt;li&gt;quoteResponse&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running the router&lt;/h2&gt; &#xA;&lt;p&gt;See example configuration file &lt;a href=&#34;https://raw.githubusercontent.com/blockworks-foundation/autobahn/main/bin/autobahn-router/example-config.toml&#34;&gt;example-config.toml&lt;/a&gt; to create your own setup&lt;/p&gt; &#xA;&lt;p&gt;Run like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;RUST_LOG=info router my_config.toml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Creating a new DEX Adapter&lt;/h2&gt; &#xA;&lt;p&gt;Adding new DEX adapter is welcome, you can do a pull-request, it will be appreciated !&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/blockworks-foundation/autobahn/main/CreatingAnAdapter.MD&#34;&gt;CreatingAnAdapter.MD&lt;/a&gt; file for details.&lt;/p&gt; &#xA;&lt;h2&gt;Integration testing&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s possible to dump data from mainnet, and then use that in tests:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To assert quoting is correct (same result as simulated swap)&lt;/li&gt; &#xA; &lt;li&gt;To check router path finding perfomance&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/blockworks-foundation/autobahn/main/Testing.MD&#34;&gt;Testing.MD&lt;/a&gt; file for details.&lt;/p&gt; &#xA;&lt;p&gt;There&#39;s a script for daily smoke tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;RPC_HTTP_URL=... ./scripts/smoke-test.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tokio-Console&lt;/h2&gt; &#xA;&lt;p&gt;Build router with feature &lt;code&gt;tokio-console&lt;/code&gt; and &lt;code&gt;RUSTFLAGS=&#34;--cfg tokio_unstable&#34;&lt;/code&gt; like this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;RUSTFLAGS=&#34;--cfg tokio_unstable&#34; cargo build --bin router --release --features tokio-console&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;And use the &lt;code&gt;tokio-console&lt;/code&gt; crate to display running tasks&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Autobahn is published under GNU Affero General Public License v3.0. In case you are interested in an alternative license please reach out to &lt;a href=&#34;mailto:partnerships@mango.markets&#34;&gt;partnerships@mango.markets&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>idootop/open-xiaoai</title>
    <updated>2025-07-23T01:35:46Z</updated>
    <id>tag:github.com,2025-07-23:/idootop/open-xiaoai</id>
    <link href="https://github.com/idootop/open-xiaoai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;让小爱音箱「听见你的声音」，解锁无限可能。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Open-XiaoAI&lt;/h1&gt; &#xA;&lt;p&gt;让小爱音箱「听见你的声音」，解锁无限可能。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/idootop/open-xiaoai/main/docs/images/cover.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;简介&lt;/h2&gt; &#xA;&lt;p&gt;2017 年，当全球首款千万级销量的智能音箱诞生时，我们以为触摸到了未来。但很快发现，这些设备被困在「指令-响应」的牢笼里：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;它听得见分贝，却听不懂情感&lt;/li&gt; &#xA; &lt;li&gt;它能执行命令，却不会主动思考&lt;/li&gt; &#xA; &lt;li&gt;它有千万用户，却只有一套思维&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;我们曾幻想中的&#34;贾维斯&#34;级人工智能，在现实场景中沦为&#34;天气预报+音乐播放器&#34;。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;真正的智能不应被预设的代码逻辑所束缚，而应像生命体般在交互中进化。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;在上一个 &lt;a href=&#34;https://github.com/idootop/mi-gpt&#34;&gt;MiGPT&lt;/a&gt; 项目中，我们已经实现将 ChatGPT 接入到小爱音箱。&lt;/p&gt; &#xA;&lt;p&gt;这一次 &lt;a href=&#34;https://github.com/idootop/open-xiaoai&#34;&gt;Open-XiaoAI&lt;/a&gt; 再次进化，直接接管小爱音箱的“耳朵”和“嘴巴”，&lt;/p&gt; &#xA;&lt;p&gt;通过多模态大模型和 AI Agent，将小爱音箱的潜力完全释放，解锁无限可能。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;未来由你定义!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;你的声音 + 小爱音箱 = 无限可能&lt;/h2&gt; &#xA;&lt;p&gt;👉 &lt;a href=&#34;https://www.bilibili.com/video/BV1TxJhzvEhz&#34;&gt;小爱音箱接入小智 AI 演示视频&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1TxJhzvEhz&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/idootop/open-xiaoai/main/docs/images/xiaozhi.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;a href=&#34;https://www.bilibili.com/video/BV1YfVUz5EMj&#34;&gt;小爱音箱自定义唤醒词演示视频&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1YfVUz5EMj&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/idootop/open-xiaoai/main/docs/images/kws.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;a href=&#34;https://www.bilibili.com/video/BV1N1421y7qn&#34;&gt;小爱音箱接入 MiGPT 演示视频&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1N1421y7qn&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/idootop/open-xiaoai/main/docs/images/migpt.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;快速开始&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] 本教程仅适用于 &lt;strong&gt;小爱音箱 Pro（LX06）&lt;/strong&gt; 和 &lt;strong&gt;Xiaomi 智能音箱 Pro（OH2P）&lt;/strong&gt; 这两款机型，&lt;strong&gt;其他型号&lt;/strong&gt;的小爱音箱请勿直接使用！🚨&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;本项目由 Client 端 + Server 端两部分组成，你可以按照以下顺序运行该项目：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;刷机更新小爱音箱补丁固件，开启并 SSH 连接到小爱音箱 👉 &lt;a href=&#34;https://raw.githubusercontent.com/idootop/open-xiaoai/main/docs/flash.md&#34;&gt;教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;在小爱音箱上安装运行 Client 端补丁程序 👉 &lt;a href=&#34;https://raw.githubusercontent.com/idootop/open-xiaoai/main/packages/client-rust/README.md&#34;&gt;教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;运行以下演示程序，体验小爱音箱的全新能力 ✨ &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;👉 &lt;a href=&#34;https://raw.githubusercontent.com/idootop/open-xiaoai/main/examples/xiaozhi/README.md&#34;&gt;小爱音箱接入小智 AI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;👉 &lt;a href=&#34;https://raw.githubusercontent.com/idootop/open-xiaoai/main/examples/kws/README.md&#34;&gt;小爱音箱自定义唤醒词&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;👉 &lt;a href=&#34;https://raw.githubusercontent.com/idootop/open-xiaoai/main/examples/migpt/README.md&#34;&gt;小爱音箱接入 MiGPT（完美版）&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;👉 &lt;a href=&#34;https://raw.githubusercontent.com/idootop/open-xiaoai/main/examples/gemini/README.md&#34;&gt;小爱音箱接入 Gemini Live API&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;以上皆为抛砖引玉，你也可以亲手编写自己想要的功能，一切由你定义！&lt;/p&gt; &#xA;&lt;h2&gt;相关项目&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] 技术的意义在于分享与共创。如果你打算或正在使用本项目做些有趣的事情， 欢迎提交 PR 或 issue 分享你的项目和创意。✨&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;如果你不想刷机，或者不是小爱音箱 Pro，下面的项目或许对你有用：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/idootop/mi-gpt&#34;&gt;https://github.com/idootop/mi-gpt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/idootop/migpt-next&#34;&gt;https://github.com/idootop/migpt-next&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yihong0618/xiaogpt&#34;&gt;https://github.com/yihong0618/xiaogpt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hanxi/xiaomusic&#34;&gt;https://github.com/hanxi/xiaomusic&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;参考链接&lt;/h2&gt; &#xA;&lt;p&gt;如果你想要了解更多技术细节，下面的链接可能对你有用：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yihong0618/gitblog/issues/258&#34;&gt;https://github.com/yihong0618/gitblog/issues/258&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jialeicui/open-lx01&#34;&gt;https://github.com/jialeicui/open-lx01&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/duhow/xiaoai-patch&#34;&gt;https://github.com/duhow/xiaoai-patch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://javabin.cn/2021/xiaoai_fm.html&#34;&gt;https://javabin.cn/2021/xiaoai_fm.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://xuanxuanblingbling.github.io/iot/2022/09/16/mi/&#34;&gt;https://xuanxuanblingbling.github.io/iot/2022/09/16/mi/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;免责声明&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;适用范围&lt;/strong&gt; 本项目为开源非营利项目，仅供学术研究或个人测试用途。严禁用于商业服务、网络攻击、数据窃取、系统破坏等违反《网络安全法》及使用者所在地司法管辖区的法律规定的场景。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;非官方声明&lt;/strong&gt; 本项目由第三方开发者独立开发，与小米集团及其关联方（下称&#34;权利方&#34;）无任何隶属/合作关系，亦未获其官方授权/认可或技术支持。项目中涉及的商标、固件、云服务的所有权利归属小米集团。若权利方主张权益，使用者应立即主动停止使用并删除本项目。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;继续下载或运行本项目，即表示您已完整阅读并同意&lt;a href=&#34;https://raw.githubusercontent.com/idootop/open-xiaoai/main/agreement.md&#34;&gt;用户协议&lt;/a&gt;，否则请立即终止使用并彻底删除本项目。&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/idootop/open-xiaoai/main/LICENSE&#34;&gt;MIT&lt;/a&gt; License © 2024-PRESENT Del Wang&lt;/p&gt;</summary>
  </entry>
</feed>