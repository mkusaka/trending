<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-01T01:37:48Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>solidquant/sandooo</title>
    <updated>2024-02-01T01:37:48Z</updated>
    <id>tag:github.com,2024-02-01:/solidquant/sandooo</id>
    <link href="https://github.com/solidquant/sandooo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A sandwich bot&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sandooo&lt;/h1&gt; &#xA;&lt;p&gt;A sandwich bot&lt;/p&gt; &#xA;&lt;p&gt;Medium articles WIP: &lt;a href=&#34;https://medium.com/@solidquant&#34;&gt;https://medium.com/@solidquant&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Roadmap + expected release dates:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Opportunity detection (~1/28) &lt;a href=&#34;https://medium.com/@solidquant/100-hours-of-building-a-sandwich-bot-a89235281da3&#34;&gt;https://medium.com/@solidquant/100-hours-of-building-a-sandwich-bot-a89235281da3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Execution (~2/4)&lt;/li&gt; &#xA; &lt;li&gt;Update #1: Stablecoin sandwich (~2/11)&lt;/li&gt; &#xA; &lt;li&gt;Update #2: Multiple sandwich bundling (~2/18)&lt;/li&gt; &#xA; &lt;li&gt;Update #3: V3 implementation (~2/25)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Follow me on Twitter: &lt;a href=&#34;https://twitter.com/solidquant&#34;&gt;https://twitter.com/solidquant&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>oxidecomputer/helios</title>
    <updated>2024-02-01T01:37:48Z</updated>
    <id>tag:github.com,2024-02-01:/oxidecomputer/helios</id>
    <link href="https://github.com/oxidecomputer/helios" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Helios: Or, a Vision in a Dream. A Fragment.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Oxide Helios&lt;/h1&gt; &#xA;&lt;p&gt;Helios is a distribution of illumos powering the Oxide Rack. The full distribution is built from several consolidations of software, driven from tools and documentation in this top-level repository.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Consolidation&lt;/th&gt; &#xA;   &lt;th&gt;Public?&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/oxidecomputer/boot-image-tools&#34;&gt;boot-image-tools&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;   &lt;td&gt;Tool for assembling boot images for Oxide hardware&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/oxidecomputer/garbage-compactor&#34;&gt;garbage-compactor&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;   &lt;td&gt;Build scripts for packages beyond the core OS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/oxidecomputer/helios-omicron-brand&#34;&gt;helios-omicron-brand&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;   &lt;td&gt;Zone brand for &lt;a href=&#34;https://github.com/oxidecomputer/omicron&#34;&gt;Omicron&lt;/a&gt; components&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/oxidecomputer/helios-omnios-build&#34;&gt;helios-omnios-build&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;   &lt;td&gt;Build scripts for packages beyond the core OS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/oxidecomputer/helios-omnios-extra&#34;&gt;helios-omnios-extra&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;   &lt;td&gt;Build scripts for packages beyond the core OS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/oxidecomputer/illumos-gate/tree/stlouis/&#34;&gt;illumos-gate (stlouis branch)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;   &lt;td&gt;Core operating system (kernel, libc, etc)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/oxidecomputer/phbl&#34;&gt;phbl&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;   &lt;td&gt;Pico Host Boot Loader&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/oxidecomputer/pinprick&#34;&gt;pinprick&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;   &lt;td&gt;ROM image compression utility&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/illumos/image-builder&#34;&gt;illumos/image-builder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅ Yes&lt;/td&gt; &#xA;   &lt;td&gt;Tool for building bootable illumos disk images&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/oxidecomputer/amd-firmware&#34;&gt;amd-firmware&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;❌ No&lt;/td&gt; &#xA;   &lt;td&gt;AMD CPU firmware binary blobs (will be available in future)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/oxidecomputer/amd-host-image-builder&#34;&gt;amd-host-image-builder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;❌ No&lt;/td&gt; &#xA;   &lt;td&gt;ROM image construction tools for AMD CPUs (will be available in future)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/oxidecomputer/chelsio-t6-roms&#34;&gt;chelsio-t6-roms&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;❌ No&lt;/td&gt; &#xA;   &lt;td&gt;Chelsio T6 network interface card firmware blobs (will be available in future)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/oxidecomputer/pilot&#34;&gt;pilot&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;❌ No&lt;/td&gt; &#xA;   &lt;td&gt;A utility for low-level control of Oxide systems (will be available in future)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Not all consolidations are presently available to the public. We&#39;re working on this, but for now you can set &lt;code&gt;OXIDE_STAFF=no&lt;/code&gt; in your environment when you run &lt;code&gt;gmake setup&lt;/code&gt; to skip cloning and building software that is not yet available.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE: These instructions are for building your own operating system packages and installing them. If you&#39;re just trying to use Helios, you probably do not need to do this. See &lt;a href=&#34;https://github.com/oxidecomputer/helios-engvm&#34;&gt;helios-engvm&lt;/a&gt; for information about pre-built Helios software.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The best way to get started is to be using a physical or virtual build machine running an up-to-date installation of Helios. There are some details on getting a virtual machine installed in the &lt;a href=&#34;https://github.com/oxidecomputer/helios-engvm&#34;&gt;helios-engvm&lt;/a&gt; repository. There are also some details there about install media that you can use on a physical x86 system.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;If you used the instructions from &lt;strong&gt;helios-engvm&lt;/strong&gt; to create a virtual machine, you should already have all of the packages needed. If you used one of the ISO installers to set up a physical machine, or some other way of getting a Helios environment, you may need to install the &lt;strong&gt;pkg:/developer/illumos-tools&lt;/strong&gt; package. You can check if you have this installed already with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pkg list developer/illumos-tools&#xA;NAME (PUBLISHER)                VERSION    IFO&#xA;developer/illumos-tools         11-2.0     im-i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If missing from your system, it can be installed with &lt;code&gt;pkg install&lt;/code&gt;. It&#39;s also a good idea to be running the latest Helios packages if you can. You can update your system with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# pkg update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pay careful attention to the instructions printed at the end of every update. You may be told that a &lt;em&gt;boot environment&lt;/em&gt; was created and that you need to reboot to activate it. You should do that with the &lt;code&gt;reboot&lt;/code&gt; command before moving on.&lt;/p&gt; &#xA;&lt;h3&gt;Install Rust and Cargo using Rustup&lt;/h3&gt; &#xA;&lt;p&gt;Official Rust and Cargo binaries are available from the Rust project via the same &lt;a href=&#34;https://rustup.rs/&#34;&gt;rustup&lt;/a&gt; tool that works on other systems. Use the official instructions, but substitute &lt;code&gt;bash&lt;/code&gt; anywhere you see &lt;code&gt;sh&lt;/code&gt;; e.g., at the time of writing, the (modified) official install instructions are:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Clone the repository and build the tools&lt;/h3&gt; &#xA;&lt;p&gt;On your Helios machine, clone this repository and run the setup step:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/oxidecomputer/helios.git&#xA;Cloning into &#39;helios&#39;...&#xA;&#xA;$ cd helios&#xA;$ gmake setup&#xA;cd tools/helios-build &amp;amp;&amp;amp; cargo build --quiet&#xA;...&#xA;Cloning into &#39;/home/user/helios/projects/illumos&#39;...&#xA;...&#xA;&#xA;Setup complete!  ./helios-build is now available.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you do not have access to private repositories in the &lt;strong&gt;oxidecomputer&lt;/strong&gt; GitHub organisation, you can request that the setup step only use the public repositories; e.g.,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ OXIDE_STAFF=no gmake setup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Rust-based &lt;code&gt;helios-build&lt;/code&gt; tool will be built and several repositories will then be cloned under &lt;code&gt;projects/&lt;/code&gt;. Note that, at least for now, the tool takes a little while to build the first time.&lt;/p&gt; &#xA;&lt;p&gt;While the tool will initially clone the expected project repositories, subsequent manipulation (e.g., pulling updates, switching branches) is only performed for some repositories. You can see which repositories the setup step will update by looking at &lt;code&gt;auto_update&lt;/code&gt; in the &lt;a href=&#34;https://raw.githubusercontent.com/oxidecomputer/helios/master/config/projects.toml&#34;&gt;&lt;code&gt;config/projects.toml&lt;/code&gt;&lt;/a&gt; file. You should otherwise expect to manage local clones as you would any other git repository; switching branches, pulling updates, etc.&lt;/p&gt; &#xA;&lt;h2&gt;Building illumos&lt;/h2&gt; &#xA;&lt;p&gt;The operating system components at the core of Helios come from the &lt;a href=&#34;https://github.com/oxidecomputer/illumos-gate/tree/stlouis&#34;&gt;&lt;strong&gt;stlouis&lt;/strong&gt; branch of illumos-gate&lt;/a&gt;. The packages that ship on Helios systems are mostly &lt;a href=&#34;https://github.com/illumos/illumos-gate&#34;&gt;stock illumos&lt;/a&gt; with some additions for Oxide hardware and a few minor packaging transformations.&lt;/p&gt; &#xA;&lt;p&gt;To make it easier to build illumos, &lt;code&gt;helios-build&lt;/code&gt; provides several wrappers that manage build configuration and invoke the illumos build tools. The upstream illumos documentation has a guide, &lt;a href=&#34;https://illumos.org/docs/developers/build/&#34;&gt;Building illumos&lt;/a&gt;, which covers most of what the Helios tools are doing on your behalf if you are curious.&lt;/p&gt; &#xA;&lt;h3&gt;Building during development&lt;/h3&gt; &#xA;&lt;p&gt;While making changes to illumos, you can perform a &#34;quick&#34; build. This disables the shadow compilers and some of the checks that we would otherwise require for a final integration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./helios-build build-illumos -q&#xA;Dec 04 22:04:49.214 INFO file /home/user/helios/projects/illumos/illumos-quick.sh does not exist&#xA;Dec 04 22:04:49.215 INFO writing /home/user/helios/projects/illumos/illumos-quick.sh ...&#xA;Dec 04 22:04:49.215 INFO ok!&#xA;Dec 04 22:04:49.216 INFO exec: [&#34;/sbin/sh&#34;, &#34;-c&#34;, &#34;cd /home/user/helios/projects/illumos &amp;amp;&amp;amp; ./usr/src/tools/scripts/nightly /home/user/helios/projects/illumos/illumos-quick.sh&#34;]&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Depending on how many CPUs you have on your build machine, and the performance of your local storage, this can take some time. The full build log is quite large, and can be seen via, e.g.,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ tail -F projects/illumos/log/nightly.log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once your build has completed successfully, there will be a package repository at &lt;code&gt;projects/illumos/packages/i386&lt;/code&gt;. These packages can then be transformed and installed in various ways.&lt;/p&gt; &#xA;&lt;h4&gt;Installing: locally on your build machine&lt;/h4&gt; &#xA;&lt;p&gt;To install your newly built packages on the build machine:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./helios-build onu -t my-be-name&#xA;Jan 29 09:33:44.603 INFO creating temporary repository...&#xA;...&#xA;Jan 29 09:35:53.050 INFO O| beadm activate my-be-name&#xA;Jan 29 09:35:53.911 INFO O| Activated successfully&#xA;Jan 29 09:35:53.921 INFO onu complete!  you must now reboot&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will transform and install the illumos packages you just built and create a new &lt;em&gt;Boot Environment&lt;/em&gt; with the name you pass with &lt;code&gt;-t&lt;/code&gt; (e.g., &lt;code&gt;my-be-name&lt;/code&gt; above). The new boot environment can be seen with &lt;code&gt;beadm list&lt;/code&gt;, and has been activated by &lt;code&gt;onu&lt;/code&gt; so that you can reboot into it. See &lt;a href=&#34;https://illumos.org/man/8/beadm&#34;&gt;beadm(8)&lt;/a&gt; for more information about boot environments.&lt;/p&gt; &#xA;&lt;p&gt;When rebooting, it is a good idea to be on the console so you can see any boot messages and interact with the boot loader.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;helios console login: root&#xA;Password:&#xA;Last login: Mon Jan 29 09:34:20 on console&#xA;The illumos Project     stlouis-0-g27e9202a98   January 2024&#xA;root@genesis:~# reboot&#xA;updating /platform/i86pc/amd64/boot_archive (CPIO)&#xA;syncing file systems... done&#xA;rebooting...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can see that your updated packages are now running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pkg list -Hv system/kernel&#xA;pkg://on-nightly/system/kernel@0.5.11-2.0.999999:20240129T090642Z            i--&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Critically, the &lt;code&gt;system/kernel&lt;/code&gt; package shown here comes from the &lt;code&gt;on-nightly&lt;/code&gt; publisher (your local files) and has a quick build version (&lt;code&gt;2.0.999999&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h4&gt;Installing: on another machine, using a package repository server&lt;/h4&gt; &#xA;&lt;p&gt;If you have a build machine and a separate set of test machine(s), you may wish to use the package repository server (&lt;code&gt;pkg.depotd&lt;/code&gt;) on your build machine. You can reconfigure the test system to prefer to install packages from your build machine over the network without needing to copy files around.&lt;/p&gt; &#xA;&lt;p&gt;First, transform the packages from your most recent build and start the package server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./helios-build onu -D&#xA;Jan 29 09:39:46.885 INFO creating temporary repository...&#xA;Jan 29 09:39:46.886 INFO repository /home/user/helios/tmp/onu/repo.redist exists, removing first&#xA;...&#xA;Jan 29 09:41:00.428 INFO starting pkg.depotd on packages at: &#34;/home/user/helios/tmp/onu/repo.redist&#34;&#xA;Jan 29 09:41:00.428 INFO access log file is &#34;/home/user/helios/tmp/depot/log/access&#34;&#xA;Jan 29 09:41:00.428 INFO listening on port 7891&#xA;Jan 29 09:41:00.428 INFO ^C to quit&#xA;[29/Jan/2024:09:41:01] INDEX Search Available&#xA;[29/Jan/2024:09:41:01] ENGINE Listening for SIGTERM.&#xA;[29/Jan/2024:09:41:01] ENGINE Listening for SIGHUP.&#xA;[29/Jan/2024:09:41:01] ENGINE Listening for SIGUSR1.&#xA;[29/Jan/2024:09:41:01] ENGINE Bus STARTING&#xA;[29/Jan/2024:09:41:01] ENGINE Serving on http://0.0.0.0:7891&#xA;[29/Jan/2024:09:41:01] ENGINE Bus STARTED&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The server is now running, and will remain running until you press Control-C or terminate it in some other way. You will need to know a DNS name or IP address (e.g., via &lt;code&gt;ipadm show-addr&lt;/code&gt;) on which your build machine can be contacted.&lt;/p&gt; &#xA;&lt;p&gt;Now, on the target machine, confirm that you can contact the build machine:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pkgrepo info -s http://genesis:7891&#xA;PUBLISHER  PACKAGES STATUS           UPDATED&#xA;on-nightly 549      online           2024-01-29T09:40:50.716102Z&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Examine your existing package publisher configuration. On a stock Helios system, it should look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# pkg publisher&#xA;PUBLISHER               TYPE   STATUS P LOCATION&#xA;helios-dev              origin online F https://pkg.oxide.computer/helios/2/dev/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Just one publisher is configured, using the central repository. We want to add a second publisher and make it the preferred source for packages. We also want to relax the &#34;sticky&#34; rule; i.e., that packages should only be updated from the publisher from which they were first installed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# pkg set-publisher -r -O http://genesis:7891 --search-first on-nightly&#xA;# pkg set-publisher -r --non-sticky helios-dev&#xA;# pkg publisher&#xA;PUBLISHER               TYPE   STATUS P LOCATION&#xA;on-nightly              origin online F http://genesis:7891/&#xA;helios-dev (non-sticky) origin online F https://pkg.oxide.computer/helios/2/dev/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For now, depending on what you&#39;re doing on the test system, it may be necessary to uninstall the &lt;code&gt;entire&lt;/code&gt; meta-package before proceeding. This is especially true if you have zones based on the &lt;code&gt;lipkg&lt;/code&gt; brand. You can do this via &lt;code&gt;pkg uninstall entire&lt;/code&gt;. The stock &lt;code&gt;onu&lt;/code&gt; tool from illumos does this automatically.&lt;/p&gt; &#xA;&lt;p&gt;Perform a dry-run update to confirm that we are going to get updated packages from the quick build on your build machine:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# pkg update -nv&#xA;            Packages to update:       325&#xA;     Estimated space available:  20.67 GB&#xA;Estimated space to be consumed: 564.95 MB&#xA;       Create boot environment:       Yes&#xA;     Activate boot environment:       Yes&#xA;Create backup boot environment:        No&#xA;          Rebuild boot archive:       Yes&#xA;&#xA;Changed packages:&#xA;helios-dev -&amp;gt; on-nightly&#xA;  SUNWcs&#xA;    0.5.11-2.0.22430 -&amp;gt; 0.5.11-2.0.999999&#xA;  SUNWcsd&#xA;    0.5.11-2.0.22430 -&amp;gt; 0.5.11-2.0.999999&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the version is changing from a stock Helios version (which is the commit number on the master branch of illumos) to &lt;code&gt;2.0.999999&lt;/code&gt;, the quick build version. A new boot environment will be created, and a reboot will be required.&lt;/p&gt; &#xA;&lt;p&gt;Run the operation again without the &lt;code&gt;-n&lt;/code&gt; flag to update:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# pkg update -v&#xA;...&#xA;DOWNLOAD                                PKGS         FILES    XFER (MB)   SPEED&#xA;Completed                            325/325     5311/5311  107.1/107.1  4.9M/s&#xA;&#xA;PHASE                                          ITEMS&#xA;Removing old actions                       1213/1213&#xA;Installing new actions                       892/892&#xA;Updating modified actions                  5921/5921&#xA;Updating package state database                 Done&#xA;Updating package cache                       325/325&#xA;Updating image state                            Done&#xA;Creating fast lookup database                   Done&#xA;Reading search index                            Done&#xA;Building new search index                    582/582&#xA;Updating package cache                           2/2&#xA;&#xA;A clone of helios exists and has been updated and activated.&#xA;On the next boot the Boot Environment helios-1 will be&#xA;mounted on &#39;/&#39;.  Reboot when ready to switch to this updated BE.&#xA;&#xA;*** Reboot required ***&#xA;New BE: helios-1&#xA;&#xA;Updating package cache                           2/2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Assuming the update was successful, you should be able to reboot into your update software!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# reboot&#xA;updating /platform/i86pc/amd64/boot_archive (CPIO)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After reboot, note that the publisher configuration is persistent:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Loading unix...&#xA;Loading /platform/i86pc/amd64/boot_archive...&#xA;Loading /platform/i86pc/amd64/boot_archive.hash...&#xA;Booting...&#xA;Oxide Helios Version stlouis-0-g27e9202a98 64-bit (onu)&#xA;Hostname: helios&#xA;&#xA;helios console login: root&#xA;Password:&#xA;&#xA;The illumos Project     stlouis-0-g27e9202a98   January 2024&#xA;# uname -v&#xA;stlouis-0-g27e9202a98&#xA;&#xA;# pkg publisher&#xA;PUBLISHER               TYPE   STATUS P LOCATION&#xA;on-nightly              origin online F http://genesis:7891/&#xA;helios-dev (non-sticky) origin online F https://pkg.oxide.computer/helios/2/dev/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In future, you should be able to do a new build, restart the package server, and then &lt;code&gt;pkg update -v&lt;/code&gt; again on the test machine.&lt;/p&gt; &#xA;&lt;h4&gt;Installing: producing packages without installing them&lt;/h4&gt; &#xA;&lt;p&gt;If you just want to transform the packages from a quick build without installing them, you can do so with the &lt;code&gt;-P&lt;/code&gt; flag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./helios-build onu -P&#xA;Jan 29 09:45:36.040 INFO creating temporary repository...&#xA;Jan 29 09:45:36.040 INFO repository /home/user/helios/tmp/onu/repo.redist exists, removing first&#xA;...&#xA;Jan 29 09:46:14.901 INFO O| Republish: pkg:/text/locale@0.5.11,5.11-2.0.999999:20240129T090648Z ...  Done&#xA;Jan 29 09:46:15.602 INFO exec: [&#34;/usr/bin/pkgrepo&#34;, &#34;refresh&#34;, &#34;-s&#34;, &#34;/home/user/helios/tmp/onu/repo.redist&#34;], pwd: None&#xA;Jan 29 09:46:15.907 INFO O| Initiating repository refresh.&#xA;Jan 29 09:46:24.978 INFO transformed packages available for onu at: &#34;/home/user/helios/tmp/onu/repo.redist&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This may be useful if you just want to inspect the contents of the built repository; e.g.,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pkgrepo info -s tmp/onu/repo.redist&#xA;PUBLISHER  PACKAGES STATUS           UPDATED&#xA;on-nightly 549      online           2024-01-29T09:46:15.448096Z&#xA;&#xA;$ pkgrepo list -s tmp/onu/repo.redist&#xA;PUBLISHER  NAME                          O VERSION&#xA;on-nightly SUNWcs                          0.5.11-2.0.999999:20240129T090617Z&#xA;on-nightly SUNWcsd                         0.5.11-2.0.999999:20240129T090618Z&#xA;on-nightly audio/audio-utilities           0.5.11-2.0.999999:20240129T090618Z&#xA;on-nightly benchmark/filebench           o 0.5.11-2.0.999999:20240129T090618Z&#xA;...&#xA;&#xA;$ pkg contents -t file -s tmp/onu/repo.redist &#39;*microcode*&#39;&#xA;PATH&#xA;platform/i86pc/ucode/AuthenticAMD/1020-00&#xA;platform/i86pc/ucode/AuthenticAMD/1022-00&#xA;platform/i86pc/ucode/AuthenticAMD/1041-00&#xA;platform/i86pc/ucode/AuthenticAMD/1043-00&#xA;platform/i86pc/ucode/AuthenticAMD/1062-00&#xA;platform/i86pc/ucode/AuthenticAMD/1080-00&#xA;platform/i86pc/ucode/AuthenticAMD/1081-00&#xA;platform/i86pc/ucode/AuthenticAMD/10A0-00&#xA;platform/i86pc/ucode/AuthenticAMD/2031-00&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also preserve the package files for later analysis such as the comparison of the output of multiple builds, or transport them to remote systems for installation.&lt;/p&gt; &#xA;&lt;h3&gt;Making changes&lt;/h3&gt; &#xA;&lt;p&gt;When making changes to the system it is generally best to start with a pristine built workspace, as you would have left from the quick build in the previous section.&lt;/p&gt; &#xA;&lt;p&gt;Once your build has completed, you may wish to make a change to a particular source file and rebuild a component. There are many components in the illumos repository, but we can choose a simple one as an example here. To build a particular component, we must first use &lt;code&gt;bldenv&lt;/code&gt; to enter the build environment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./helios-build bldenv -q&#xA;Jan 29 09:50:22.895 INFO file /home/user/helios/projects/illumos/illumos-quick.sh exists, with correct contents&#xA;Jan 29 09:50:22.895 INFO ok!&#xA;Build type   is  non-DEBUG&#xA;RELEASE      is&#xA;VERSION      is stlouis-0-g27e9202a98&#xA;RELEASE_DATE is January 2024&#xA;&#xA;The top-level &#39;setup&#39; target is available to build headers and tools.&#xA;&#xA;Using /bin/bash as shell.&#xA;$ pwd&#xA;/home/user/helios/projects/illumos/usr/src&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A new interactive shell has been started, with &lt;code&gt;PATH&lt;/code&gt; and other variables set correctly, and you can now change to a component directory and build it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd cmd/id&#xA;$ dmake -S -m serial install&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will build and install the updated &lt;code&gt;id&lt;/code&gt; command into the proto area:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ls -l $ROOT/usr/bin/id&#xA;-r-xr-xr-x   1 user     staff      17428 Jan 29 09:51 /home/user/helios/projects/illumos/proto/root_i386-nd/usr/bin/id&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This kind of targetted incremental edit-and-recompile is a good way to make changes with a short cycle time and have some expectation that they will compile.&lt;/p&gt; &#xA;&lt;p&gt;Once you have changes you want to test, there are various things you can do next.&lt;/p&gt; &#xA;&lt;h4&gt;Option 1: Most correct and slowest&lt;/h4&gt; &#xA;&lt;p&gt;You can always do a new built of the entire OS. This is the only process that is (as much as anything can be) guaranteed to produce correct results. If, while doing something more incremental, you are experiencing an issue you cannot explain, a full build is always a good thing to try first.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./helios-build build-illumos -q&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will rebuild all of illumos and produce packages you can then install in the usual way, as described in previous sections.&lt;/p&gt; &#xA;&lt;h4&gt;Option 2: No guarantees but faster&lt;/h4&gt; &#xA;&lt;p&gt;If you have updated some of the binaries in the proto area (e.g., by running &lt;code&gt;dmake install&lt;/code&gt; in a kernel module or a command directory) you may just be able to regenerate the packages and install them without doing a full build.&lt;/p&gt; &#xA;&lt;p&gt;Within &lt;code&gt;bldenv&lt;/code&gt;, regenerate the packages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd $SRC/pkg&#xA;$ dmake install&#xA;...&#xA;Publishing system-zones-internal to redist repository&#xA;Publishing system-test-zfstest to redist repository&#xA;Initiating repository refresh.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you have updated packages you can use them to start a package repository server or install locally, as described in the previous sections.&lt;/p&gt; &#xA;&lt;h4&gt;Option 3: It&#39;s your computer&lt;/h4&gt; &#xA;&lt;p&gt;At the end of the day, the operating system is just files in a file system. The packaging tools and other abstractions often create a kind of mystique which separates the engineer from this concrete reality -- but you are an adult and it is your computer! Other things you can do include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Just running the modified binary on the build system, or using &lt;code&gt;scp&lt;/code&gt; or &lt;code&gt;rsync&lt;/code&gt; to copy it to the test system and run it there. Sometimes this works! If the binary requires changes to libraries or the kernel, it might not work.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Creating a new boot environment and adjusting the files in it. Boot environments are separate ZFS file systems that can be modified, snapshotted, cloned, and booted. They can be created with &lt;code&gt;beadm create&lt;/code&gt; and mounted for modification with &lt;code&gt;beadm mount&lt;/code&gt;. The boot loader allows you to select a different boot environment, and you can activate a specific boot environment permanently or just for one boot using &lt;code&gt;beadm activate&lt;/code&gt;. See the &lt;code&gt;beadm(1M)&lt;/code&gt; manual page for more information.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Creating a wholly new disk image or ramdisk and booting that in a virtual machine or via PXE. There are some Helios-specific &lt;a href=&#34;https://github.com/oxidecomputer/helios-engvm/tree/main/image&#34;&gt;tools for creating images&lt;/a&gt; that can be made to include packages from a quick build, or even just arbitrary additional files, by modifying image templates. These tools are in turn based on the upstream &lt;a href=&#34;https://github.com/illumos/image-builder&#34;&gt;illumos/image-builder&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want advice on how to do something not completely explained here, or just to streamline your workflow, please don&#39;t hesitate to reach out!&lt;/p&gt; &#xA;&lt;h2&gt;OS Image Archives&lt;/h2&gt; &#xA;&lt;p&gt;As part of building OS images for Gimlets, an image archive is produced that includes the boot ROM and the root file system ramdisk image. It also includes some metadata in a JSON file, using the same format as &lt;a href=&#34;https://github.com/oxidecomputer/helios-omicron-brand/&#34;&gt;the &lt;strong&gt;omicron1&lt;/strong&gt; brand&lt;/a&gt; (see &lt;strong&gt;IMAGE ARCHIVES&lt;/strong&gt; in &lt;strong&gt;omicron1(7)&lt;/strong&gt;).&lt;/p&gt; &#xA;&lt;p&gt;The contents of the file represents a committed interface between Helios and the parts of &lt;a href=&#34;https://github.com/oxidecomputer/omicron&#34;&gt;Omicron&lt;/a&gt; which need to download and install OS images on physical systems in the Oxide rack. The relevant contents for Omicron usage will always include at least:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Filename&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;oxide.json&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Metadata header file, with at least a &lt;code&gt;v=1&lt;/code&gt; key and a &lt;code&gt;t=os&lt;/code&gt; key to identify it as an OS image.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;image/rom&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The host boot ROM image. (32MiB)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;image/zfs.img&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The host root file system ramdisk image. (arbitrary size)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;In addition to the committed files listed above, some additional files may be present for engineering or diagnostic purposes; e.g., a &lt;code&gt;unix.z&lt;/code&gt; compressed kernel, and a &lt;code&gt;cpio.z&lt;/code&gt; compressed boot archive, for use with &lt;strong&gt;nanobl-rs&lt;/strong&gt;; or an array of extra ROM files with suffixes that represent different diagnostic capabilities. Additional files are not committed and may change at any time in the future. Software that interprets image archives should ignore any unrecognised files.&lt;/p&gt; &#xA;&lt;h2&gt;Licence&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2024 Oxide Computer Company&lt;/p&gt; &#xA;&lt;p&gt;Unless otherwise noted, all components are licenced under the &lt;a href=&#34;https://raw.githubusercontent.com/oxidecomputer/helios/master/LICENSE&#34;&gt;Mozilla Public License Version 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>opensourcecheemsburgers/RustyTube</title>
    <updated>2024-02-01T01:37:48Z</updated>
    <id>tag:github.com,2024-02-01:/opensourcecheemsburgers/RustyTube</id>
    <link href="https://github.com/opensourcecheemsburgers/RustyTube" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A rusty Youtube client.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://liberapay.com/opensourcecheemsburgers/donate&#34;&gt;&lt;img src=&#34;https://img.shields.io/liberapay/receives/opensourcecheemsburgers.svg?logo=liberapay&amp;amp;style=for-the-badge&#34; alt=&#34;Donations Received&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/opensourcecheemsburgers/RustyTube/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/opensourcecheemsburgers/RustyTube.svg?style=for-the-badge&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/opensourcecheemsburgers/RustyTube/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/opensourcecheemsburgers/RustyTube.svg?style=for-the-badge&#34; alt=&#34;Stargazers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/opensourcecheemsburgers/RustyTube/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/opensourcecheemsburgers/RustyTube.svg?style=for-the-badge&#34; alt=&#34;Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/opensourcecheemsburgers/RustyTube/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/opensourcecheemsburgers/RustyTube.svg?style=for-the-badge&#34; alt=&#34;Forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/opensourcecheemsburgers/RustyTube/raw/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/opensourcecheemsburgers/RustyTube.svg?style=for-the-badge&#34; alt=&#34;AGPL-3.0 License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;RustyTube&lt;/h1&gt; &#xA;&lt;p&gt;A desktop Youtube client written in Rust. Built with Leptos and Tauri; designed with Tailwind and DaisyUI.&lt;/p&gt; &#xA;&lt;h2&gt;Why should I use it?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🖥️ Why not? Try it out &lt;a href=&#34;https://rustytube.rs&#34;&gt;here&lt;/a&gt;. 🖥️&lt;/li&gt; &#xA; &lt;li&gt;✨ WebM support for 4k 60fps. ✨&lt;/li&gt; &#xA; &lt;li&gt;👎 Dislike counts. 👎&lt;/li&gt; &#xA; &lt;li&gt;🦀 Built with Rust. 🦀&lt;/li&gt; &#xA; &lt;li&gt;🦋 Beautiful and modern UI. 🦋&lt;/li&gt; &#xA; &lt;li&gt;🎨 30+ themes, including a custom RustyTube theme based on &lt;a href=&#34;https://github.com/EliverLara/Sweet/tree/Ambar-Blue&#34;&gt;Sweet Ambar Blue Dark&lt;/a&gt;. 🎨&lt;/li&gt; &#xA; &lt;li&gt;💩 Not an Electron app. 💩&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;div&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/opensourcecheemsburgers/RustyTube/master/screenshots/rt_video_dracula.png&#34; width=&#34;300/&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/opensourcecheemsburgers/RustyTube/master/screenshots/rt_video_rustytube.png&#34; width=&#34;300/&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/opensourcecheemsburgers/RustyTube/master/screenshots/rt_video_garden.png&#34; width=&#34;300/&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/opensourcecheemsburgers/RustyTube/master/screenshots/rt_video_retro.png&#34; width=&#34;300/&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/opensourcecheemsburgers/RustyTube/master/screenshots/rt_subs_dracula.png&#34; width=&#34;300/&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/opensourcecheemsburgers/RustyTube/master/screenshots/rt_subs_rustytube.png&#34; width=&#34;300/&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/opensourcecheemsburgers/RustyTube/master/screenshots/rt_subs_garden.png&#34; width=&#34;300/&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/opensourcecheemsburgers/RustyTube/master/screenshots/rt_subs_retro.png&#34; width=&#34;300/&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;How do I use RustyTube?&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Web&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rustytube.rs&#34;&gt;rustytube.rs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux (generic)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/opensourcecheemsburgers/RustyTube/releases/download/0.1.1-alpha/RustyTube_0.1.1.tar.gz&#34;&gt;RustyTube_0.1.1.tar.gz&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux (appimage)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/opensourcecheemsburgers/RustyTube/releases/download/0.1.1-alpha/RustyTube_0.1.1_amd64.AppImage&#34;&gt;RustyTube_0.1.1_amd64.AppImage&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Arch&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://aur.archlinux.org/packages/rustytube&#34;&gt;AUR package&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Debian&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/opensourcecheemsburgers/RustyTube/releases/download/0.1.1-alpha/RustyTube_0.1.1_amd64.deb&#34;&gt;RustyTube_0.1.1_amd64.deb&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows (exe)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/opensourcecheemsburgers/RustyTube/releases/download/0.1.1-alpha/RustyTube_0.1.1_x64-setup.exe&#34;&gt;RustyTube_0.1.1_x64-setup.exe&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mac&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://rustytube.rs&#34;&gt;rustytube.rs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Browser Support&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Browser&lt;/th&gt; &#xA;   &lt;th&gt;Comment&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Firefox&lt;/td&gt; &#xA;   &lt;td&gt;Works perfectly. Testing is done mainly on Firefox.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chromium-based&lt;/td&gt; &#xA;   &lt;td&gt;Works great. Might be some ui/ux issues.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Webkit-based&lt;/td&gt; &#xA;   &lt;td&gt;Unsupported and a massive PITA. Maybe it will work... idk.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Windows says that RustyTube is a virus. Is it safe to install?&lt;/h3&gt; &#xA;&lt;p&gt;It&#39;s totally safe and not a virus; I&#39;m 10 billion percent sure - trust me bro.&lt;/p&gt; &#xA;&lt;h2&gt;Common Issues&lt;/h2&gt; &#xA;&lt;h3&gt;Video player has a green screen on Webkit-based browsers.&lt;/h3&gt; &#xA;&lt;p&gt;Change the video format. Use the cog located in the bottom right of the video player.&lt;/p&gt; &#xA;&lt;h3&gt;No audio?&lt;/h3&gt; &#xA;&lt;p&gt;Change the video format. Use the cog located in the bottom right of the video player.&lt;/p&gt; &#xA;&lt;h3&gt;Video won&#39;t load, changing formats doesn&#39;t fix it.&lt;/h3&gt; &#xA;&lt;p&gt;If you are trying to watch a music video, RustyTube currently does not work with VEVO videos.&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s the recipe?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leptos.dev&#34;&gt;Leptos&lt;/a&gt; - A modern Rust web framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tailwindcss.com&#34;&gt;Tailwind&lt;/a&gt; - A CSS framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://daisyui.com&#34;&gt;DaisyUI&lt;/a&gt; - A Tailwind component library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tauri.app&#34;&gt;Tauri&lt;/a&gt; - A Rust desktop application framework.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;p&gt;RustyTube is a free and open-source project with well over &lt;em&gt;500 hours&lt;/em&gt; in development and testing time.&lt;/p&gt; &#xA;&lt;p&gt;Support the project and its further development via donations.&lt;/p&gt; &#xA;&lt;h3&gt;Liberapay:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://liberapay.com/opensourcecheemsburgers/donate&#34;&gt;&lt;img src=&#34;https://liberapay.com/assets/widgets/donate.svg?sanitize=true&#34; alt=&#34;Donate via Liberapay&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Monero (XMR):&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/opensourcecheemsburgers/RustyTube/master/assets/qr_codes/monero_address.svg?sanitize=true&#34; width=&#34;144&#34;&gt; &#xA;&lt;pre&gt;&lt;code&gt;42bhoxB2DT125WAxLHHZAm2jUpEWUJBe1HAKtmiZsjW6X2r3z8FBqQFEhZdkywuQrrKfnehhhaJexQjVKpahBooq3zYKNjf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Bitcoin (BTC):&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/opensourcecheemsburgers/RustyTube/master/assets/qr_codes/bitcoin_address.svg?sanitize=true&#34; width=&#34;144&#34;&gt; &#xA;&lt;pre&gt;&lt;code&gt;bc1q8r90zc8j8a2rvkq4ds8374pxh3rpccxgnjx5x2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;RustyTube is still in early development. There are things missing and stuff that I would like to add.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mobile UI and Mobile App (Significant donations/support required for this)&lt;/li&gt; &#xA; &lt;li&gt;Desktop Integration with Tauri&lt;/li&gt; &#xA; &lt;li&gt;Full SponsorBlock API Support&lt;/li&gt; &#xA; &lt;li&gt;Full Playlist Support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Alternatives&lt;/h2&gt; &#xA;&lt;h3&gt;Desktop&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/FreeTubeApp/FreeTube&#34;&gt;Freetube&lt;/a&gt; - An open source desktop YouTube player built with privacy in mind.&lt;/p&gt; &#xA;&lt;h3&gt;Mobile&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/TeamNewPipe/NewPipe&#34;&gt;Newpipe&lt;/a&gt; - A libre lightweight streaming front-end for Android.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/libre-tube/LibreTube&#34;&gt;Libretube&lt;/a&gt; - An alternative frontend for YouTube, for Android.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lamarios/clipious&#34;&gt;Clipious&lt;/a&gt; - Android client application for invidious, the privacy focused youtube front end.&lt;/p&gt;</summary>
  </entry>
</feed>