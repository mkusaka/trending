<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-06T01:48:30Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>keyvank/femtoGPT</title>
    <updated>2023-06-06T01:48:30Z</updated>
    <id>tag:github.com,2023-06-06:/keyvank/femtoGPT</id>
    <link href="https://github.com/keyvank/femtoGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pure Rust implementation of a minimal Generative Pretrained Transformer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;span&gt;ü§ñ&lt;/span&gt; femtoGPT&lt;/h1&gt; &#xA;&lt;p&gt;femtoGPT is a pure Rust implementation of a minimal Generative Pretrained Transformer.&lt;/p&gt; &#xA;&lt;p&gt;Everything is implemented from scratch, including the tensor processing logic along with training/inference code of a minimal GPT architecture.&lt;/p&gt; &#xA;&lt;p&gt;The architecture is very similar/almost identical with Andrej Karpathy&#39;s &lt;a href=&#34;https://github.com/karpathy/ng-video-lecture&#34;&gt;nanoGPT video lecture&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;femtoGPT is a great start for those who are fascinated by LLMs and would like to understand how these models work in very deep levels.&lt;/p&gt; &#xA;&lt;p&gt;femtoGPT uses nothing but random generation libraries (&lt;code&gt;rand&lt;/code&gt;/&lt;code&gt;rand-distr&lt;/code&gt;), data-serialization libraries (&lt;code&gt;serde&lt;/code&gt;/&lt;code&gt;bincode&lt;/code&gt; for saving/loading already trained models) and a parallel computing library (&lt;code&gt;rayon&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;femtoGPT is &lt;em&gt;&lt;strong&gt;EXTREMELY SLOW&lt;/strong&gt;&lt;/em&gt;, since most of the primitive operations (E.g Matrix multiplication) are implemented in the simplest way possible.&lt;/p&gt; &#xA;&lt;p&gt;Correctness of gradients is checked using gradient-check method, though it still is very possible that some layers are implemented wrongly. (E.g I&#39;m not sure if my LayerNorm is bug-free?)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;HELP!&lt;/strong&gt; &lt;em&gt;IF YOU HAVE A COMPUTER WITH PLENTY OF CPUS AND YOU DON&#39;T MIND RUNNING femtoGPT FOR A FEW HOURS/DAYS, YOU CAN HELP THIS PROJECT A GREAT DEAL! PLZ CONTACT ME :)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Easy! You&#39;ll just need to put the text you want to train your GPT model on, inside &lt;code&gt;dataset.txt&lt;/code&gt;. Make sure it has a small number of unique characters! (E.g. the current dataset has only used 65 different unique characters!)&lt;/p&gt; &#xA;&lt;p&gt;Then you&#39;ll need to run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cargo run --release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It will start training the model and will put the training data in the &lt;code&gt;train_data&lt;/code&gt; directory. You can stop the training and continue later!&lt;/p&gt; &#xA;&lt;h2&gt;Output samples&lt;/h2&gt; &#xA;&lt;p&gt;After hours of training on the Shakespeare database, on a 300k parameter model, this has been the output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;LIS:&#xA;Tore hend shater sorerds tougeng an herdofed seng he borind,&#xA;Ound ourere sthe, a sou so tousthe ashtherd, m se a man stousshan here hat mend serthe fo witownderstesther s ars at atheno sel theas,&#xA;thisth t are sorind bour win soutinds mater horengher&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is embarrassingly bad, but looking at the bright side, it seems like it has been able to generate words that are easy to pronounce.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;m currently training a 10M parameter model to further examine the correctness of my implementation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This has been a new output, after more hours of training on a model with similar scale:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;What like but wore pad wo me che nogns yous dares,&#xA;As supt it nind bupart &#39;the reed:&#xA;And hils not es&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Obviously the model has started to learn some words and punctuation rules!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nxthat/nanocl</title>
    <updated>2023-06-06T01:48:30Z</updated>
    <id>tag:github.com,2023-06-06:/nxthat/nanocl</id>
    <link href="https://github.com/nxthat/nanocl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Distributed System that simplifies the management of containers and virtual machines.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://download.next-hat.com/ressources/images/logo.png&#34;&gt; &#xA; &lt;h1&gt;Nanocl&lt;/h1&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/nxthat/nanocl&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/nxthat/nanocl?label=%E2%AD%90%20stars%20%E2%AD%90&#34; alt=&#34;Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nxthat/nanocl&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/built_with-Rust-dca282.svg?style=flat&#34; alt=&#34;Build With&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/WV4Aac8uZg&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1011267493114949693?label=chat&amp;amp;logo=discord&amp;amp;style=flat&#34; alt=&#34;Chat on Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/nxthat/nanocl/actions/workflows/tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/nxthat/nanocl/actions/workflows/tests.yml/badge.svg?sanitize=true&#34; alt=&#34;Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nxthat/nanocl/actions/workflows/clippy.yml&#34;&gt;&lt;img src=&#34;https://github.com/nxthat/nanocl/actions/workflows/clippy.yml/badge.svg?sanitize=true&#34; alt=&#34;Clippy&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;&lt;a href=&#34;https://codecov.io/gh/nxthat/nanocl&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/nxthat/nanocl/branch/nightly/graph/badge.svg?token=4I60HOW6HM&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;span&gt; Test, Deploy, Scale, Monitor, Orchestrate &lt;/span&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;‚ùì Why Nanocl&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Nanocl&lt;/code&gt; is all about easing your container and VM management with Rust-powered platform. With &lt;code&gt;Nanocl&lt;/code&gt;, say goodbye to complex setups and hello to easy, efficient deployments. We stand for robust performance and efficiency with simplicity, trimming the bloat to keep your systems lean. &lt;strong&gt;&lt;em&gt;Join us and help shape the future of cloud computing - it&#39;s about time things got a bit more rusty&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üìô Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nxthat/nanocl/nightly/#-why-nanocl&#34;&gt;‚ùì Why Nanocl ?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nxthat/nanocl/nightly/#-table-of-contents&#34;&gt;üìô Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nxthat/nanocl/nightly/#-key-benefits&#34;&gt;üöÄ Key Benefits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nxthat/nanocl/nightly/#-architecture&#34;&gt;üßø Architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nxthat/nanocl/nightly/#-documentation&#34;&gt;üìö Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nxthat/nanocl/nightly/#-requirements&#34;&gt;üìã Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nxthat/nanocl/nightly/#-installation&#34;&gt;üíæ Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nxthat/nanocl/nightly/#-usage&#34;&gt;üîß Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nxthat/nanocl/nightly/#-contributing&#34;&gt;üë®‚Äçüíª Contributing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üöÄ Key Benefits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Easy deployment and management&lt;/li&gt; &#xA; &lt;li&gt;Significantly reduce the delay between writing code and shipping it to production&lt;/li&gt; &#xA; &lt;li&gt;Efficiently manage and scale your infrastructure as your needs evolve&lt;/li&gt; &#xA; &lt;li&gt;Enhance security by isolating services using namespaces and networks.&lt;/li&gt; &#xA; &lt;li&gt;Enjoy peace of mind with automatic backups, zero downtime fail-over, and comprehensive log monitoring&lt;/li&gt; &#xA; &lt;li&gt;Enjoy history tracking of your container and virtual machine configuration&lt;/li&gt; &#xA; &lt;li&gt;Revert configuration as quickly as pressing a button&lt;/li&gt; &#xA; &lt;li&gt;Build an entire CI/CD pipeline, from tests to high-availability production&lt;/li&gt; &#xA; &lt;li&gt;Best ideas and practices from the community&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üßø Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Nanocl&lt;/code&gt; is designed in a &lt;strong&gt;micro services&lt;/strong&gt; architecture several component are required and they are running as &lt;strong&gt;container&lt;/strong&gt; included the &lt;code&gt;Nanocl Daemon&lt;/code&gt; itself. The following components will be installed during &lt;code&gt;nanocl setup&lt;/code&gt; and are required to ensure &lt;code&gt;Nanocl&lt;/code&gt; functionnality:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;nstore&lt;/code&gt; to save our state&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ndaemon&lt;/code&gt; as &lt;strong&gt;REST API&lt;/strong&gt; to manage everything&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nmetrics&lt;/code&gt; to monitor cpu, memory and network usage&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nproxy&lt;/code&gt; proxy to redirect traffic to our &lt;strong&gt;containers&lt;/strong&gt; and &lt;strong&gt;virtual machines&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ncdproxy&lt;/code&gt; to update proxy configuration based on the current state&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ndns&lt;/code&gt; to manage the dns entries for the &lt;strong&gt;containers&lt;/strong&gt; and &lt;strong&gt;virtual machines&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ncddns&lt;/code&gt; to update dns entries based on the current state&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Simplified version of our architecture for a single node:&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/nxthat/nanocl/nightly/doc/architecture.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;üìö Documentation&lt;/h2&gt; &#xA;&lt;p&gt;To learn more about &lt;code&gt;Nanocl&lt;/code&gt;, you can take a look at the following resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.next-hat.com/guides/nanocl/overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.next-hat.com/guides/nanocl/get-started/orientation-and-setup&#34;&gt;Get Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.next-hat.com/references/nanocl/cli&#34;&gt;CLI References&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.next-hat.com/references/nanocl/daemon/overview&#34;&gt;DAEMON References&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìã Requirements&lt;/h2&gt; &#xA;&lt;p&gt;To work properly &lt;code&gt;Nanocl&lt;/code&gt; must have theses dependencies installed on the system:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt; minimum version 1.41&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üíæ Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install &lt;code&gt;Nanocl&lt;/code&gt;, please refer to our online &lt;a href=&#34;https://docs.next-hat.com/setups/nanocl/linux/ubuntu&#34;&gt;installation guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üîß Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Nanocl&lt;/code&gt; is designed to be easy to operate by mostly using &lt;strong&gt;state files&lt;/strong&gt;.&lt;br&gt; &lt;strong&gt;State Files&lt;/strong&gt; are &lt;code&gt;yaml&lt;/code&gt; files that define the state you want.&lt;br&gt; There is an example used to deploy our &lt;a href=&#34;https://docs.next-hat.com&#34;&gt;documentation&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;ApiVersion: v0.8&#xA;Kind: Deployment&#xA;&#xA;Namespace: nexthat&#xA;&#xA;# See all options:&#xA;# https://docs.next-hat.com/references/nanocl/cargo&#xA;Cargoes:&#xA;  - Name: doc&#xA;    Container:&#xA;      Image: nexthat-doc:0.4.1&#xA;&#xA;# See all options:&#xA;# https://docs.next-hat.com/references/nanocl/resource&#xA;Resources:&#xA;  - Name: docs.next-hat.com&#xA;    Kind: ProxyRule&#xA;    Version: v0.5&#xA;    Config:&#xA;      Watch:&#xA;        - doc.nexthat.c&#xA;      Rules:&#xA;        - Domain: docs.next-hat.com&#xA;          Network: Public&#xA;          Ssl:&#xA;            Certificate: /etc/letsencrypt/live/docs.next-hat.com/fullchain.pem&#xA;            CertificateKey: /etc/letsencrypt/live/docs.next-hat.com/privkey.pem&#xA;            Dhparam: /etc/letsencrypt/ssl-dhparams.pem&#xA;          Includes:&#xA;            - /etc/letsencrypt/options-ssl-nginx.conf&#xA;          Locations:&#xA;            - Path: /&#xA;              Target:&#xA;                Key: doc.nexthat.c&#xA;                Port: 80&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To apply a state we can do it easily bu running &lt;code&gt;nanocl state apply -s path|url&lt;/code&gt;&lt;br&gt; We can also revert a state by calling &lt;code&gt;nanocl state rm -s path|url&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üë®‚Äçüíª Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Every contribution is very welcome.&lt;/p&gt; &#xA;&lt;p&gt;But to be abble to do so you need a dev environnement right ?&lt;br&gt; You can learn more about it on the &lt;a href=&#34;https://raw.githubusercontent.com/nxthat/nanocl/nightly/contributing.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;br&gt; Also don&#39;t hesitate to join the discord if you have any question!&lt;/p&gt;</summary>
  </entry>
</feed>