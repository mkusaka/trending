<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-30T01:35:32Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ZacharyL2/KeyEcho</title>
    <updated>2025-06-30T01:35:32Z</updated>
    <id>tag:github.com,2025-06-30:/ZacharyL2/KeyEcho</id>
    <link href="https://github.com/ZacharyL2/KeyEcho" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Listen to Mechanical Keyboard Sounds with Every Keystroke - It&#39;s Fast&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/3hb0T1H.png&#34; alt=&#34;KeyEcho Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;KeyEcho&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Listen to your keyboard typing and echo pleasant sounds&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚ö°Ô∏è Minimal CPU and memory usage, instant keystroke response&lt;/li&gt; &#xA; &lt;li&gt;üì¶ Less than 5 MB in size, cross-platform compatibility&lt;/li&gt; &#xA; &lt;li&gt;üõ†Ô∏è Customizable sounds to suit your preferences&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://webdeveloper.beehiiv.com/p/opensourced-keyecho-fastresponsive-keyboard-sounds-every-keystroke-using-tauri&#34;&gt;More about its performance comparison and under the hood.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üöÄ Install&lt;/h2&gt; &#xA;&lt;p&gt;Supports Windows (64-bit/ARM64), macOS (Intel/Apple M1/M2), and Linux (64-bit/ARM64/ARMv7).&lt;/p&gt; &#xA;&lt;p&gt;Visit the &lt;a href=&#34;https://github.com/ZacharyL2/KeyEcho/releases&#34;&gt;release page&lt;/a&gt; to download the appropriate installation package.&lt;/p&gt; &#xA;&lt;h2&gt;üéµ Custom Sounds&lt;/h2&gt; &#xA;&lt;p&gt;Want to create your own keyboard sounds? Check out our &lt;a href=&#34;https://raw.githubusercontent.com/ZacharyL2/KeyEcho/master/CustomSounds.md&#34;&gt;Custom Sounds Guide&lt;/a&gt; for detailed instructions on recording, processing, and adding your own sound packs to KeyEcho.&lt;/p&gt; &#xA;&lt;h2&gt;üßë‚Äçüíª Development&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;h4&gt;Installing Rust and Cargo&lt;/h4&gt; &#xA;&lt;p&gt;Cargo is the package manager for Rust. If you don&#39;t have it installed, follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Visit the &lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;Rust installation page&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Follow the instructions for your operating system to install Rust and Cargo.&lt;/li&gt; &#xA; &lt;li&gt;Verify the installation by running &lt;code&gt;cargo --version&lt;/code&gt; in your terminal.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Installing pnpm&lt;/h4&gt; &#xA;&lt;p&gt;pnpm is a fast, disk space-efficient package manager for JavaScript. To install:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Visit the &lt;a href=&#34;https://pnpm.io/installation&#34;&gt;pnpm installation page&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Choose the installation method that suits your operating system.&lt;/li&gt; &#xA; &lt;li&gt;Verify the installation by running &lt;code&gt;pnpm --version&lt;/code&gt; in your terminal.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Building and Running the Project&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Clone the repository&#xA;$ git clone git@github.com:ZacharyL2/KeyEcho.git&#xA;$ cd KeyEcho&#xA;&#xA;# Install dependencies&#xA;$ pnpm install&#xA;&#xA;# Development&#xA;$ pnpm dev&#xA;&#xA;# Build&#xA;$ pnpm build&#xA;&#xA;# To run the Rust backend separately:&#xA;$ cd src-tauri&#xA;$ cargo run&#xA;&#xA;# Then, from the root of the project, start the frontend:&#xA;$ pnpm web:dev&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>tursodatabase/turso</title>
    <updated>2025-06-30T01:35:32Z</updated>
    <id>tag:github.com,2025-06-30:/tursodatabase/turso</id>
    <link href="https://github.com/tursodatabase/turso" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Turso Database is a project to build the next evolution of SQLite.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/turso.png&#34; alt=&#34;Turso Database&#34; width=&#34;800&#34;&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;Turso Database&lt;/h1&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;i&gt;Turso Database&lt;/i&gt; is an in-process SQL database, compatible with SQLite. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a title=&#34;Build Status&#34; target=&#34;_blank&#34; href=&#34;https://github.com/tursodatabase/limbo/actions/workflows/rust.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/tursodatabase/limbo/rust.yml?style=flat-square&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Releases&#34; target=&#34;_blank&#34; href=&#34;https://github.com/tursodatabase/limbo/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/tursodatabase/limbo?style=flat-square&amp;amp;color=9CF&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Rust&#34; target=&#34;_blank&#34; href=&#34;https://crates.io/crates/limbo&#34;&gt;&lt;img alt=&#34;PyPI&#34; src=&#34;https://img.shields.io/crates/v/limbo&#34;&gt;&lt;/a&gt; &lt;a title=&#34;JavaScript&#34; target=&#34;_blank&#34; href=&#34;https://www.npmjs.com/package/@tursodatabase/turso&#34;&gt;&lt;img alt=&#34;PyPI&#34; src=&#34;https://img.shields.io/npm/v/@tursodatabase/turso&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Python&#34; target=&#34;_blank&#34; href=&#34;https://pypi.org/project/pyturso/&#34;&gt;&lt;img alt=&#34;PyPI&#34; src=&#34;https://img.shields.io/pypi/v/pyturso&#34;&gt;&lt;/a&gt; &lt;a title=&#34;MIT&#34; target=&#34;_blank&#34; href=&#34;https://github.com/tursodatabase/limbo/raw/main/LICENSE.md&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/license-MIT-orange.svg?style=flat-square&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a title=&#34;GitHub Pull Requests&#34; target=&#34;_blank&#34; href=&#34;https://github.com/tursodatabase/limbo/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr-closed/tursodatabase/limbo.svg?style=flat-square&amp;amp;color=FF9966&#34;&gt;&lt;/a&gt; &lt;a title=&#34;GitHub Commits&#34; target=&#34;_blank&#34; href=&#34;https://github.com/tursodatabase/limbo/commits/main&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/tursodatabase/limbo.svg?style=flat-square&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Last Commit&#34; target=&#34;_blank&#34; href=&#34;https://github.com/tursodatabase/limbo/commits/main&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/tursodatabase/limbo.svg?style=flat-square&amp;amp;color=FF9900&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a title=&#34;Developer&#39;s Discord&#34; target=&#34;_blank&#34; href=&#34;https://discord.gg/jgjmyYgHwB&#34;&gt;&lt;img alt=&#34;Chat with developers on Discord&#34; src=&#34;https://img.shields.io/discord/1258658826257961020?label=Discord&amp;amp;logo=Discord&amp;amp;style=social&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Features and Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;Turso Database is a &lt;em&gt;work-in-progress&lt;/em&gt;, in-process OLTP database engine library written in Rust that has:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;SQLite compatibility&lt;/strong&gt; [&lt;a href=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/COMPAT.md&#34;&gt;doc&lt;/a&gt;] for SQL dialect, file formats, and the C API&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Language bindings&lt;/strong&gt; for JavaScript/WebAssembly, Rust, Go, Python, and &lt;a href=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/bindings/java&#34;&gt;Java&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Asynchronous I/O&lt;/strong&gt; support on Linux with &lt;code&gt;io_uring&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OS support&lt;/strong&gt; for Linux, macOS, and Windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In the future, we will be also working on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;BEGIN CONCURRENT&lt;/code&gt;&lt;/strong&gt; for improved write throughput.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Indexing for vector search&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Improved schema management&lt;/strong&gt; including better &lt;code&gt;ALTER&lt;/code&gt; support and strict column types by default.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/docs/manual.md&#34;&gt;Turso Database Manual&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;üíª Command Line&lt;/summary&gt; &#xA; &lt;br&gt; You can install the latest `turso` release with: &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl --proto &#39;=https&#39; --tlsv1.2 -LsSf \&#xA;  https://github.com/tursodatabase/turso/releases/latest/download/turso_cli-installer.sh | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Then launch the shell to execute SQL statements:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;Turso&#xA;Enter &#34;.help&#34; for usage hints.&#xA;Connected to a transient in-memory database.&#xA;Use &#34;.open FILENAME&#34; to reopen on a persistent database&#xA;turso&amp;gt; CREATE TABLE users (id INT PRIMARY KEY, username TEXT);&#xA;turso&amp;gt; INSERT INTO users VALUES (1, &#39;alice&#39;);&#xA;turso&amp;gt; INSERT INTO users VALUES (2, &#39;bob&#39;);&#xA;turso&amp;gt; SELECT * FROM users;&#xA;1|alice&#xA;2|bob&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;You can also build and run the latest development version with:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;ü¶Ä Rust&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;cargo add limbo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Example usage:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;let db = Builder::new_local(&#34;sqlite.db&#34;).build().await?;&#xA;let conn = db.connect()?;&#xA;&#xA;let res = conn.query(&#34;SELECT * FROM users&#34;, ()).await?;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;‚ú® JavaScript&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;npm i limbo-wasm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Example usage:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { Database } from &#39;limbo-wasm&#39;;&#xA;&#xA;const db = new Database(&#39;sqlite.db&#39;);&#xA;const stmt = db.prepare(&#39;SELECT * FROM users&#39;);&#xA;const users = stmt.all();&#xA;console.log(users);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;üêç Python&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;pip install pylimbo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Example usage:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import turso&#xA;&#xA;con = turso.connect(&#34;sqlite.db&#34;)&#xA;cur = con.cursor()&#xA;res = cur.execute(&#34;SELECT * FROM users&#34;)&#xA;print(res.fetchone())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;üêπ Go&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Clone the repository&lt;/li&gt; &#xA;  &lt;li&gt;Build the library and set your LD_LIBRARY_PATH to include turso&#39;s target directory&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;cargo build --package limbo-go&#xA;export LD_LIBRARY_PATH=/path/to/limbo/target/debug:$LD_LIBRARY_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ol start=&#34;3&#34;&gt; &#xA;  &lt;li&gt;Use the driver&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;go get github.com/tursodatabase/turso&#xA;go install github.com/tursodatabase/turso&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Example usage:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import (&#xA;    &#34;database/sql&#34;&#xA;    _ &#34;github.com/tursodatabase/turso&#34;&#xA;)&#xA;&#xA;conn, _ = sql.Open(&#34;sqlite3&#34;, &#34;sqlite.db&#34;)&#xA;defer conn.Close()&#xA;&#xA;stmt, _ := conn.Prepare(&#34;select * from users&#34;)&#xA;defer stmt.Close()&#xA;&#xA;rows, _ = stmt.Query()&#xA;for rows.Next() {&#xA;    var id int&#xA;    var username string&#xA;    _ := rows.Scan(&amp;amp;id, &amp;amp;username)&#xA;    fmt.Printf(&#34;User: ID: %d, Username: %s\n&#34;, id, username)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;‚òïÔ∏è Java&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;We integrated Turso Database into JDBC. For detailed instructions on how to use Turso Database with java, please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/bindings/java/README.md&#34;&gt;README.md under bindings/java&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;d love to have you contribute to Turso Database! Please check out the &lt;a href=&#34;https://github.com/tursodatabase/limbo/raw/main/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Is Turso Database ready for production use?&lt;/h3&gt; &#xA;&lt;p&gt;Turso Database is currently under heavy development and is &lt;strong&gt;not&lt;/strong&gt; ready for production use.&lt;/p&gt; &#xA;&lt;h3&gt;How is Turso Database different from Turso&#39;s libSQL?&lt;/h3&gt; &#xA;&lt;p&gt;Turso Database is a project to build the next evolution of SQLite in Rust, with a strong open contribution focus and features like native async support, vector search, and more. The libSQL project is also an attempt to evolve SQLite in a similar direction, but through a fork rather than a rewrite.&lt;/p&gt; &#xA;&lt;p&gt;Rewriting SQLite in Rust started as an unassuming experiment, and due to its incredible success, replaces libSQL as our intended direction. At this point, libSQL is production ready, Turso Database is not - although it is evolving rapidly. More details &lt;a href=&#34;https://turso.tech/blog/we-will-rewrite-sqlite-and-we-are-going-all-in&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Publications&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pekka Enberg, Sasu Tarkoma, Jon Crowcroft Ashwin Rao (2024). Serverless Runtime / Database Co-Design With Asynchronous I/O. In &lt;em&gt;EdgeSys ‚Äò24&lt;/em&gt;. &lt;a href=&#34;https://penberg.org/papers/penberg-edgesys24.pdf&#34;&gt;[PDF]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pekka Enberg, Sasu Tarkoma, and Ashwin Rao (2023). Towards Database and Serverless Runtime Co-Design. In &lt;em&gt;CoNEXT-SW ‚Äô23&lt;/em&gt;. [&lt;a href=&#34;https://penberg.org/papers/penberg-conext-sw-23.pdf&#34;&gt;PDF&lt;/a&gt;] [&lt;a href=&#34;https://penberg.org/papers/penberg-conext-sw-23-slides.pdf&#34;&gt;Slides&lt;/a&gt;]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://github.com/tursodatabase/limbo/raw/main/LICENSE.md&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contribution&lt;/h3&gt; &#xA;&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in Turso Database by you, shall be licensed as MIT, without any additional terms or conditions.&lt;/p&gt; &#xA;&lt;h2&gt;Partners&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to all the partners of Turso!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blacksmith.sh&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/assets/blacksmith.svg?sanitize=true&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://antithesis.com/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/assets/antithesis.jpg&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to all the contributors to Turso Database!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/tursodatabase/limbo/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=tursodatabase/limbo&#34;&gt; &lt;/a&gt;</summary>
  </entry>
</feed>