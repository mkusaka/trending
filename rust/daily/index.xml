<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-01T01:46:37Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sparshg/pid-balancer</title>
    <updated>2023-05-01T01:46:37Z</updated>
    <id>tag:github.com,2023-05-01:/sparshg/pid-balancer</id>
    <link href="https://github.com/sparshg/pid-balancer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Proportional-Integral-Derivative controller simulation to balance a ball on cart&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;pid-balancer&lt;/h1&gt; &#xA;&lt;p&gt;A Proportional-Integral-Derivative controller to self balance a ball&lt;/p&gt; &#xA;&lt;p&gt;Physics for the simulation is implemented according to &lt;a href=&#34;https://www.academia.edu/76867878/Swing_up_and_positioning_control_of_an_inverted_wheeled_cart_pendulum_system_with_chaotic_balancing_motions&#34;&gt;this paper&lt;/a&gt; (excluding the counter-balances and connecting rod)&lt;/p&gt; &#xA;&lt;p&gt;I used Runge-Kutta method (4th order) to solve the system.&lt;/p&gt; &#xA;&lt;p&gt;Camera dynamics are implemented with the help of &lt;a href=&#34;https://www.youtube.com/watch?v=KPoeNZZ6H4s&#34;&gt;this&lt;/a&gt; video&lt;/p&gt; &#xA;&lt;p&gt;Use arrow keys to control the cart, and disturb the ball.&lt;/p&gt; &#xA;&lt;img width=&#34;1440&#34; alt=&#34;Screenshot 2023-04-29 at 7 16 31 PM 2&#34; src=&#34;https://user-images.githubusercontent.com/43041139/235306236-401eb1c5-7e11-4d3d-8753-7138225334f5.png&#34;&gt;</summary>
  </entry>
</feed>