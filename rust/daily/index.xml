<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-20T01:44:19Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>orhun/rustypaste</title>
    <updated>2023-05-20T01:44:19Z</updated>
    <id>tag:github.com,2023-05-20:/orhun/rustypaste</id>
    <link href="https://github.com/orhun/rustypaste" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A minimal file upload/pastebin service.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/orhun/rustypaste&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/orhun/rustypaste/master/img/rustypaste_logo.png&#34; width=&#34;500&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/orhun/rustypaste/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/orhun/rustypaste?style=flat&amp;amp;labelColor=823213&amp;amp;color=2c2c2c&amp;amp;logo=GitHub&amp;amp;logoColor=white&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/rustypaste/&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/rustypaste?style=flat&amp;amp;labelColor=823213&amp;amp;color=2c2c2c&amp;amp;logo=Rust&amp;amp;logoColor=white&#34; alt=&#34;Crate Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/orhun/rustypaste&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/gh/orhun/rustypaste?style=flat&amp;amp;labelColor=823213&amp;amp;color=2c2c2c&amp;amp;logo=Codecov&amp;amp;logoColor=white&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/orhun/rustypaste/actions?query=workflow%3A%22Continuous+Integration%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/orhun/rustypaste/ci.yml?branch=master&amp;amp;style=flat&amp;amp;labelColor=823213&amp;amp;color=2c2c2c&amp;amp;logo=GitHub%20Actions&amp;amp;logoColor=white&#34; alt=&#34;Continuous Integration&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/orhun/rustypaste/actions?query=workflow%3A%22Continuous+Deployment%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/orhun/rustypaste/cd.yml?style=flat&amp;amp;labelColor=823213&amp;amp;color=2c2c2c&amp;amp;logo=GitHub%20Actions&amp;amp;logoColor=white&amp;amp;label=deploy&#34; alt=&#34;Continuous Deployment&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/orhunp/rustypaste&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/orhun/rustypaste/docker.yml?style=flat&amp;amp;labelColor=823213&amp;amp;color=2c2c2c&amp;amp;label=docker&amp;amp;logo=Docker&amp;amp;logoColor=white&#34; alt=&#34;Docker Builds&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.rs/rustypaste/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docsrs/rustypaste?style=flat&amp;amp;labelColor=823213&amp;amp;color=2c2c2c&amp;amp;logo=Rust&amp;amp;logoColor=white&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Rustypaste&lt;/strong&gt; is a minimal file upload/pastebin service.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ echo &#34;some text&#34; &amp;gt; awesome.txt&#xA;&#xA;$ curl -F &#34;file=@awesome.txt&#34; https://paste.site.com&#xA;https://paste.site.com/safe-toad.txt&#xA;&#xA;$ curl https://paste.site.com/safe-toad.txt&#xA;some text&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The public instance is available at &lt;a href=&#34;https://rustypaste.shuttleapp.rs&#34;&gt;https://rustypaste.shuttleapp.rs&lt;/a&gt; ðŸš€&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;File upload &amp;amp; URL shortening &amp;amp; upload from URL &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;supports basic HTTP authentication&lt;/li&gt; &#xA;   &lt;li&gt;random file names (optional) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;pet name (e.g. &lt;code&gt;capital-mosquito.txt&lt;/code&gt;)&lt;/li&gt; &#xA;     &lt;li&gt;alphanumeric string (e.g. &lt;code&gt;yB84D2Dv.txt&lt;/code&gt;)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;supports expiring links &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;auto-expiration of files (optional)&lt;/li&gt; &#xA;     &lt;li&gt;auto-deletion of expired files (optional)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;supports one shot links (can only be viewed once)&lt;/li&gt; &#xA;   &lt;li&gt;guesses MIME types &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;supports overriding and blacklisting&lt;/li&gt; &#xA;     &lt;li&gt;supports forcing to download via &lt;code&gt;?download=true&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;no duplicate uploads (optional)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Single binary &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/orhun/rustypaste/releases&#34;&gt;binary releases&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Simple configuration &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;supports hot reloading&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Easy to deploy &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/orhunp/rustypaste&#34;&gt;docker images&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;No database &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;filesystem is used&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Self-hosted &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;centralization is bad!&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Written in Rust &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;blazingly fast!&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;From crates.io&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo install rustypaste&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Arch Linux&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pacman -S rustypaste&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Alpine Linux&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;rustypaste&lt;/code&gt; is available for &lt;a href=&#34;https://pkgs.alpinelinux.org/packages?name=rustypaste&amp;amp;branch=edge&#34;&gt;Alpine Edge&lt;/a&gt;. It can be installed via &lt;a href=&#34;https://wiki.alpinelinux.org/wiki/Alpine_Package_Keeper&#34;&gt;apk&lt;/a&gt; after enabling the &lt;a href=&#34;https://wiki.alpinelinux.org/wiki/Repositories&#34;&gt;testing repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;apk add rustypaste&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Binary releases&lt;/h3&gt; &#xA;&lt;p&gt;See the available binaries on the &lt;a href=&#34;https://github.com/orhun/rustypaste/releases/&#34;&gt;releases&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h3&gt;Build from source&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/orhun/rustypaste.git&#xA;cd rustypaste/&#xA;cargo build --release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Feature flags&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;shuttle&lt;/code&gt;: enable an entry point for deploying on Shuttle&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;openssl&lt;/code&gt;: use distro OpenSSL (binary size is reduced ~20% in release mode)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rustls&lt;/code&gt;: use &lt;a href=&#34;https://github.com/rustls/rustls&#34;&gt;rustls&lt;/a&gt; (enabled as default)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To enable a feature for build, pass &lt;code&gt;--features&lt;/code&gt; flag to &lt;code&gt;cargo build&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;For example, to reuse the OpenSSL present on a distro already:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo build --release --no-default-features --features openssl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Testing&lt;/h4&gt; &#xA;&lt;h5&gt;Unit tests&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo test -- --test-threads 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Test Fixtures&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./fixtures/test-fixtures.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The standalone command line tool (&lt;code&gt;rpaste&lt;/code&gt;) is available &lt;a href=&#34;https://github.com/orhun/rustypaste-cli&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;CLI&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;function rpaste() {&#xA;  curl -F &#34;file=@$1&#34; -H &#34;Authorization: &amp;lt;auth_token&amp;gt;&#34; &#34;&amp;lt;server_address&amp;gt;&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;*&lt;/strong&gt; consider reading authorization headers from a file. (e.g. &lt;code&gt;-H @rpaste_auth&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# upload a file&#xA;$ rpaste x.txt&#xA;&#xA;# paste from stdin&#xA;$ rpaste -&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Expiration&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ curl -F &#34;file=@x.txt&#34; -H &#34;expire:10min&#34; &#34;&amp;lt;server_address&amp;gt;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(supported units: &lt;code&gt;ns&lt;/code&gt;, &lt;code&gt;us&lt;/code&gt;, &lt;code&gt;ms&lt;/code&gt;, &lt;code&gt;sec&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;hours&lt;/code&gt;, &lt;code&gt;days&lt;/code&gt;, &lt;code&gt;weeks&lt;/code&gt;, &lt;code&gt;months&lt;/code&gt;, &lt;code&gt;years&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;h4&gt;One shot&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ curl -F &#34;oneshot=@x.txt&#34; &#34;&amp;lt;server_address&amp;gt;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;URL shortening&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ curl -F &#34;url=https://example.com/some/long/url&#34; &#34;&amp;lt;server_address&amp;gt;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Paste file from remote URL&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ curl -F &#34;remote=https://example.com/file.png&#34; &#34;&amp;lt;server_address&amp;gt;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Cleaning up expired files&lt;/h4&gt; &#xA;&lt;p&gt;Configure &lt;code&gt;delete_expired_files&lt;/code&gt; to set an interval for deleting the expired files automatically.&lt;/p&gt; &#xA;&lt;p&gt;On the other hand, following script can be used as &lt;a href=&#34;https://en.wikipedia.org/wiki/Cron&#34;&gt;cron&lt;/a&gt; for cleaning up the expired files manually:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#!/bin/env sh&#xA;now=$(date +%s)&#xA;find upload/ -maxdepth 2 -type f -iname &#34;*.[0-9]*&#34; |&#xA;while read -r filename; do&#xA;&#x9;[ &#34;$(( ${filename##*.} / 1000 - &#34;${now}&#34; ))&#34; -lt 0 ] &amp;amp;&amp;amp; rm -v &#34;${filename}&#34;&#xA;done&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Server&lt;/h3&gt; &#xA;&lt;p&gt;To start the server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ rustypaste&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the configuration file is not found in the current directory, specify it via &lt;code&gt;CONFIG&lt;/code&gt; environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ CONFIG=&#34;$HOME/.rustypaste.toml&#34; rustypaste&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To enable basic HTTP auth, set the &lt;code&gt;AUTH_TOKEN&lt;/code&gt; environment variable (via &lt;code&gt;.env&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ echo &#34;AUTH_TOKEN=$(openssl rand -base64 16)&#34; &amp;gt; .env&#xA;$ rustypaste&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/orhun/rustypaste/master/config.toml&#34;&gt;config.toml&lt;/a&gt; for configuration options.&lt;/p&gt; &#xA;&lt;h4&gt;Docker&lt;/h4&gt; &#xA;&lt;p&gt;Following command can be used to run a container which is built from the &lt;a href=&#34;https://raw.githubusercontent.com/orhun/rustypaste/master/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; in this repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ docker run --rm -d \&#xA;  -v &#34;$(pwd)/upload/&#34;:/app/upload \&#xA;  -v &#34;$(pwd)/config.toml&#34;:/app/config.toml \&#xA;  --env-file &#34;$(pwd)/.env&#34; \&#xA;  -e &#34;RUST_LOG=debug&#34; \&#xA;  -p 8000:8000 \&#xA;  --name rustypaste \&#xA;  orhunp/rustypaste&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;uploaded files go into &lt;code&gt;./upload&lt;/code&gt; (on the host machine)&lt;/li&gt; &#xA; &lt;li&gt;set the &lt;code&gt;AUTH_TOKEN&lt;/code&gt; via &lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--env-file&lt;/code&gt; to enable auth&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can build this image using &lt;code&gt;docker build -t rustypaste .&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;If you want to run the image using &lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;docker compose&lt;/a&gt;, simply run &lt;code&gt;docker-compose up -d&lt;/code&gt;. (see &lt;a href=&#34;https://raw.githubusercontent.com/orhun/rustypaste/master/docker-compose.yml&#34;&gt;docker-compose.yml&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h4&gt;Nginx&lt;/h4&gt; &#xA;&lt;p&gt;Example server configuration with reverse proxy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;server {&#xA;    listen 80;&#xA;    location / {&#xA;        proxy_pass                         http://localhost:8000/;&#xA;        proxy_set_header Host              $host;&#xA;        proxy_set_header X-Forwarded-For   $remote_addr;&#xA;        proxy_set_header X-Forwarded-Proto $scheme;&#xA;        add_header X-XSS-Protection        &#34;1; mode=block&#34;;&#xA;        add_header X-Frame-Options         &#34;sameorigin&#34;;&#xA;        add_header X-Content-Type-Options  &#34;nosniff&#34;;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you get a &lt;code&gt;413 Request Entity Too Large&lt;/code&gt; error during upload, set the max body size in &lt;code&gt;nginx.conf&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;http {&#xA;    # ...&#xA;    client_max_body_size 100M;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;Pull requests are welcome!&lt;/p&gt; &#xA;&lt;p&gt;Consider submitting your ideas via &lt;a href=&#34;https://github.com/orhun/rustypaste/issues/new&#34;&gt;issues&lt;/a&gt; first and check out the &lt;a href=&#34;https://github.com/orhun/rustypaste/issues&#34;&gt;existing issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;License&lt;/h4&gt; &#xA;&lt;sup&gt; All code is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/orhun/rustypaste/master/LICENSE&#34;&gt;The MIT License&lt;/a&gt;. &lt;/sup&gt;</summary>
  </entry>
</feed>