<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-12T02:34:09Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Findomain/Findomain</title>
    <updated>2023-04-12T02:34:09Z</updated>
    <id>tag:github.com,2023-04-12:/Findomain/Findomain</id>
    <link href="https://github.com/Findomain/Findomain" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The fastest and complete solution for domain recognition. Supports screenshoting, port scan, HTTP check, data import from other tools, subdomain monitoring, alerts via Discord, Slack and Telegram, multiple API Keys for sources and much more.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://twitter.com/edu4rdshl&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/edu4rdshl.svg?logo=twitter&#34; alt=&#34;Follow on Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/FindomainApp&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/FindomainApp.svg?logo=twitter&#34; alt=&#34;Follow on Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/edu4rdshl/findomain&#34;&gt;&lt;img src=&#34;https://travis-ci.org/edu4rdshl/findomain.svg?branch=master&#34; alt=&#34;Travis CI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/edu4rdshl/findomain&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/edu4rdshl/findomain?branch=master&amp;amp;svg=true&#34; alt=&#34;Appveyor CI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Edu4rdSHL/findomain/actions&#34;&gt;&lt;img src=&#34;https://github.com/Edu4rdSHL/findomain/workflows/Github%20Actions/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Findomain Monitoring Service&lt;/h1&gt; &#xA;&lt;p&gt;If you don&#39;t want to deal with servers and complex configurations for doing recon but also have more features in an integrated solution, Findomain offers &lt;a href=&#34;https://findomain.app/#Pricing&#34;&gt;a subdomains monitoring service that provides:&lt;/a&gt; &lt;strong&gt;directory fuzzing/ports scan/vulnerabilities discovery (with Nuclei) - and more&lt;/strong&gt; that allow you to &lt;strong&gt;monitor your target domains with multiple top tools&lt;/strong&gt; (OWASP Amass, Sublist3r, Assetfinder and Subfinder) and send alerts to Discord, Slack, Telegram, Email or Push Notifications (Android/iOS/Smart Watch/Desktop) when new subdomains are found. &lt;strong&gt;The only you need to do is configure a file with your email address (if applicable) or/and webhooks/Telegram chat information and put your domains in another file&lt;/strong&gt;, once you have done that you have a full automated subdomains monitoring service that keep you up to date with new subdomains discovered, Host IP, HTTP Status, Screenshots of the HTTP websites, Open Ports, Subdomains CNAME and more. All your data is securely saved in a relational database and you can request a dump of your data whenever you want.&lt;/p&gt; &#xA;&lt;p&gt;When you finish your payment, you will receive an email with the server credentials and documentation about how to fill the configuration file and other details.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Our private version is superior to the public version and you can&#39;t achieve the same results using the last one, plus if you use our service you help us to keep the project alive and we will release plus features to this repo every X time.&lt;/p&gt; &#xA;&lt;h2&gt;Pricing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://findomain.app/#Pricing&#34;&gt;&lt;strong&gt;See available plans here.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Findomain&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Findomain/Findomain/master/images/findomain.png&#34; alt=&#34;Findomain&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The complete solution for domain recognition. Supports screenshoting, port scan, HTTP check, data import from other tools, subdomain monitoring, alerts via Discord, Slack and Telegram, multiple API Keys for sources and much more.&lt;/p&gt; &#xA;&lt;h2&gt;Chat with us&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/y5JaRbX&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/697050821057183777.svg?logo=discord&#34; alt=&#34;Chat on Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The next table offers you the comparison about what is in Plus version that is not in free version (current repo).&lt;/p&gt; &#xA;&lt;h1&gt;What Findomain can do?&lt;/h1&gt; &#xA;&lt;p&gt;It table gives you a idea why you should use findomain and what it can do for you. The domain used for the test was aol.com in the following &lt;a href=&#34;https://blackarch.org&#34;&gt;BlackArch&lt;/a&gt; virtual machine:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Host: KVM/QEMU (Standard PC (i440FX + PIIX, 1996) pc-i440fx-3.1)&#xA;Kernel: 5.2.6-arch1-1-ARCH&#xA;CPU: Intel (Skylake, IBRS) (4) @ 2.904GHz&#xA;Memory: 139MiB / 3943MiB&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The tool used to calculate the time, is the &lt;code&gt;time&lt;/code&gt; command in Linux.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Enumeration Tool&lt;/th&gt; &#xA;   &lt;th&gt;Search Time&lt;/th&gt; &#xA;   &lt;th&gt;Total Subdomains Found&lt;/th&gt; &#xA;   &lt;th&gt;CPU Usage&lt;/th&gt; &#xA;   &lt;th&gt;RAM Usage&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Findomain&lt;/td&gt; &#xA;   &lt;td&gt;real 0m5.515s&lt;/td&gt; &#xA;   &lt;td&gt;84110&lt;/td&gt; &#xA;   &lt;td&gt;Very Low&lt;/td&gt; &#xA;   &lt;td&gt;Very Low&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt; 84110 subdomains in 5.5 seconds.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Subdomains monitoring: put data to Discord, Slack or Telegram webhooks. See &lt;a href=&#34;https://raw.githubusercontent.com/Findomain/Findomain/master/README.md#subdomains-monitoring&#34;&gt;Subdomains Monitoring&lt;/a&gt; for more information.&lt;/li&gt; &#xA; &lt;li&gt;Multi-thread support for API querying, it makes that the maximun time that Findomain will take to search subdomains for any target is 15 seconds (in case of API&#39;s timeout).&lt;/li&gt; &#xA; &lt;li&gt;Parallel support for subdomains resolution, in good network conditions can resolv about 3.5k of subdomains per minute.&lt;/li&gt; &#xA; &lt;li&gt;DNS over TLS support.&lt;/li&gt; &#xA; &lt;li&gt;Specific IPv4 or IPv6 query support.&lt;/li&gt; &#xA; &lt;li&gt;Discover subdomains without brute-force, it tool uses Certificate Transparency Logs and APIs.&lt;/li&gt; &#xA; &lt;li&gt;Discover only resolved subdomains.&lt;/li&gt; &#xA; &lt;li&gt;Discover subdomains IP for data analysis.&lt;/li&gt; &#xA; &lt;li&gt;Read target from user argument (-t) or file (-f).&lt;/li&gt; &#xA; &lt;li&gt;Write to one unique output file specified by the user all or only resolved subdomains.&lt;/li&gt; &#xA; &lt;li&gt;Write results to automatically named TXT output file(s).&lt;/li&gt; &#xA; &lt;li&gt;Hability to query directly the Findomain database created with &lt;a href=&#34;https://raw.githubusercontent.com/Findomain/Findomain/master/docs/INSTALLATION.md#subdomains-monitoring&#34;&gt;Subdomains Monitoring&lt;/a&gt; for previous discovered subdomains.&lt;/li&gt; &#xA; &lt;li&gt;Hability to import and work data discovered by other tools.&lt;/li&gt; &#xA; &lt;li&gt;Quiet mode to run it silently.&lt;/li&gt; &#xA; &lt;li&gt;Cross platform support: Any platform, it&#39;s written in Rust and Rust is multiplatform. See &lt;a href=&#34;https://raw.githubusercontent.com/Findomain/Findomain/master/docs/INSTALLATION.md#build-for-32-bits-or-another-platform&#34;&gt;the documentation&lt;/a&gt; for instructions.&lt;/li&gt; &#xA; &lt;li&gt;Multiple API support.&lt;/li&gt; &#xA; &lt;li&gt;Possibility to use as subdomain resolver.&lt;/li&gt; &#xA; &lt;li&gt;Subdomain wildcard detection for accurate results.&lt;/li&gt; &#xA; &lt;li&gt;Support for subdomain discover using bruteforce method.&lt;/li&gt; &#xA; &lt;li&gt;Support for configuration file in TOML, JSON, HJSON, INI or YAML format.&lt;/li&gt; &#xA; &lt;li&gt;Custom DNS IP addresses for fast subdomains resolving (more than 60 per second by default, adjustable using the &lt;code&gt;--threads&lt;/code&gt; option.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Findomain in depth&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://medium.com/@edu4rdshl/subdomains-enumeration-what-is-how-to-do-it-monitoring-automation-using-webhooks-and-5e0a0c6d9127&#34;&gt;Subdomains Enumeration: what is, how to do it, monitoring automation using webhooks and centralizing your findings&lt;/a&gt; for a detailed guide including real world examples of how you get the most out of the tool.&lt;/p&gt; &#xA;&lt;h1&gt;How it works?&lt;/h1&gt; &#xA;&lt;p&gt;It tool doesn&#39;t use the common methods for sub(domains) discover, the tool uses Certificate Transparency logs and specific well tested APIs to find subdomains. It method make it tool the most faster and reliable. The tool make use of multiple public available APIs to perform the search. If you want to know more about Certificate Transparency logs, read &lt;a href=&#34;https://www.certificate-transparency.org/&#34;&gt;https://www.certificate-transparency.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;APIs that we are using at the moment:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://api.certspotter.com/&#34;&gt;Certspotter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://crt.sh&#34;&gt;Crt.sh Database (favorite) or Crt.sh HTTP API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.virustotal.com/ui/domains/&#34;&gt;Virustotal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://api.sublist3r.com/&#34;&gt;Sublist3r&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.facebook.com/docs/certificate-transparency&#34;&gt;Facebook&lt;/a&gt; &lt;code&gt;**&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://certdb.com/apidocs#/Subdomains&#34;&gt;Spyse (CertDB)&lt;/a&gt; &lt;code&gt;*&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://dns.bufferover.run/&#34;&gt;Bufferover&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://threatcrowd.org/&#34;&gt;Threatcrowd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.virustotal.com/&#34;&gt;Virustotal with apikey&lt;/a&gt; &lt;code&gt;**&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jonlu.ca/anubis/&#34;&gt;AnubisDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://urlscan.io/about-api/&#34;&gt;Urlscan.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.securitytrails.com/docs&#34;&gt;SecurityTrails&lt;/a&gt; &lt;code&gt;**&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.threatminer.org/api.php&#34;&gt;Threatminer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://api.c99.nl/&#34;&gt;C99&lt;/a&gt; &lt;code&gt;**&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://archive.org/&#34;&gt;Archive.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ui.ctsearch.entrust.com/ui/ctsearchui&#34;&gt;CTSearch&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;APIs marked with &lt;code&gt;**&lt;/code&gt;, &lt;strong&gt;require&lt;/strong&gt; an access token to work. Search in the &lt;a href=&#34;https://raw.githubusercontent.com/Findomain/Findomain/master/docs/INSTALLATION.md#access-tokens-configuration&#34;&gt;Findomain documentation&lt;/a&gt; how to configure and use it.&lt;/p&gt; &#xA;&lt;p&gt;APIs marked with &lt;code&gt;*&lt;/code&gt; can &lt;em&gt;optionally&lt;/em&gt; be used with an access token, create one if you start experiencing problems with that APIs. Search in the &lt;a href=&#34;https://raw.githubusercontent.com/Findomain/Findomain/master/docs/INSTALLATION.md#access-tokens-configuration&#34;&gt;Findomain documentation&lt;/a&gt; how to configure and use it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;More APIs?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you know other APIs that should be added, comment &lt;a href=&#34;https://github.com/Edu4rdSHL/findomain/issues/7&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;We offer binarys ready to use for the following platforms (all are for 64 bits only):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Findomain/Findomain/master/docs/INSTALLATION.md#installation-in-linux-using-compiled-artifacts&#34;&gt;Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Findomain/Findomain/master/docs/INSTALLATION.md#installation-windows&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Findomain/Findomain/master/docs/INSTALLATION.md#installation-macos&#34;&gt;MacOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Findomain/Findomain/master/docs/INSTALLATION.md#installation-aarch64-raspberry-pi&#34;&gt;Aarch64 (Raspberry Pi)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Findomain/Findomain/master/docs/INSTALLATION.md#installation-nixos&#34;&gt;NixOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Findomain/Findomain/master/docs/INSTALLATION.md#installation-docker&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you need to run Findomain in another platform, continue reading the documentation.&lt;/p&gt; &#xA;&lt;h1&gt;Issues and requests&lt;/h1&gt; &#xA;&lt;p&gt;If you have a problem or a feature request, open an &lt;a href=&#34;https://github.com/Edu4rdSHL/findomain/issues&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Stargazers over time&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/Edu4rdSHL/findomain&#34;&gt;&lt;img src=&#34;https://starchart.cc/Edu4rdSHL/findomain.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;h3&gt;Code Contributors&lt;/h3&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&#34;https://github.com/Edu4rdSHL/findomain/graphs/contributors&#34;&gt;See the contributors list&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>getdozer/dozer</title>
    <updated>2023-04-12T02:34:09Z</updated>
    <id>tag:github.com,2023-04-12:/getdozer/dozer</id>
    <link href="https://github.com/getdozer/dozer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Connect any data source, combine them in real-time and instantly get low-latency Data APIs. All with just a simple configuration!&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a target=&#34;_blank&#34; href=&#34;https://getdozer.io/&#34;&gt; &lt;br&gt;&lt;img src=&#34;https://dozer-assets.s3.ap-southeast-1.amazonaws.com/logo-blue.svg?sanitize=true&#34; width=&#34;40%&#34;&gt;&lt;br&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;br&gt; &lt;b&gt; Connect any data source, combine them in real-time and instantly get low-latency data APIs.&lt;br&gt; ⚡ All with just a simple configuration! ⚡️ &lt;/b&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/getdozer/dozer/actions/workflows/dozer.yaml&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/getdozer/dozer/actions/workflows/dozer.yaml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/getdozer/dozer?branch=main&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/getdozer/dozer/badge.svg?branch=main&amp;amp;t=kZMYaV&amp;amp;style=flat&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://getdozer.io/docs/dozer&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/doc-reference-green&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.com/invite/3eWXBgJaEQ&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/join-on%20discord-primary&#34; alt=&#34;Join on Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/getdozer/dozer/raw/main/LICENSE.txt&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache-blue&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Dozer makes it easy to build low-latency data APIs (gRPC and REST) from any data source. Data is transformed on the fly using Dozer&#39;s reactive SQL engine and stored in a high-performance cache to offer the best possible experience. Dozer is useful for quickly building data products.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getdozer/dozer/main/images/dozer.png&#34; alt=&#34;Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Follow the instruction below to install Dozer on your machine and run a quick sample using the &lt;a href=&#34;https://www.nyc.gov/site/tlc/about/tlc-trip-record-data.page&#34;&gt;NY Taxi Dataset&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;MacOS Monterey (12) and above&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew tap getdozer/dozer &amp;amp;&amp;amp; brew install dozer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ubuntu 20.04 and above&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# amd64&#xA;curl -sLO https://github.com/getdozer/dozer/releases/latest/download/dozer-linux-amd64.deb &amp;amp;&amp;amp; sudo dpkg -i dozer-linux-amd64.deb&#xA;&#xA;# aarch64&#xA;curl -sLO https://github.com/getdozer/dozer/releases/latest/download/dozer-linux-aarch64.deb &amp;amp;&amp;amp; sudo dpkg -i dozer-linux-aarch64.deb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Dozer requires &lt;code&gt;protobuf-compiler&lt;/code&gt;, installation instructions can be found in &lt;a href=&#34;https://getdozer.io/docs/installation/#additional-steps-for-protobuf-compiler-dependency&#34;&gt;additional steps&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Build from source&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo install --path dozer-orchestrator --locked&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run it&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Download sample configuration and data&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Create a new empty directory and run the commands below. This will download a &lt;a href=&#34;https://github.com/getdozer/dozer-samples/raw/main/connectors/local-storage/dozer-config.yaml&#34;&gt;sample configuration file&lt;/a&gt; and a sample &lt;a href=&#34;https://www.nyc.gov/site/tlc/about/tlc-trip-record-data.page&#34;&gt;NY Taxi Dataset file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -o dozer-config.yaml https://raw.githubusercontent.com/getdozer/dozer-samples/main/connectors/local-storage/dozer-config.yaml&#xA;curl --create-dirs -o data/trips/fhvhv_tripdata_2022-01.parquet https://d37ci6vzurychx.cloudfront.net/trip-data/fhvhv_tripdata_2022-01.parquet&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Run Dozer binary&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dozer -c dozer-config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Dozer will start processing the data and populating the cache. You can see a progress of the execution from the console.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Query the APIs&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;When some data is loaded, you can query the cache using gRPC or REST&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# gRPC&#xA;grpcurl -d &#39;{&#34;query&#34;: &#34;{\&#34;$limit\&#34;: 1}&#34;}&#39; -plaintext localhost:50051 dozer.generated.trips_cache.TripsCaches/query&#xA;&#xA;# REST&#xA;curl -X POST  http://localhost:8080/trips/query --header &#39;Content-Type: application/json&#39; --data-raw &#39;{&#34;$limit&#34;:3}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can use &lt;a href=&#34;https://www.postman.com/&#34;&gt;Postman&lt;/a&gt; to discover gRPC endpoints through gRPC reflection&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getdozer/dozer/main/images/postman.png&#34; alt=&#34;postman query&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Read more about Dozer &lt;a href=&#34;https://getdozer.io/docs/dozer&#34;&gt;here&lt;/a&gt;. And remember to star 🌟 our repo to support us!&lt;/p&gt; &#xA;&lt;h2&gt;Client Libraries&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Library&lt;/th&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;   &lt;th&gt;License&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/getdozer/dozer-python&#34;&gt;dozer-python&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Dozer Client library for Python&lt;/td&gt; &#xA;   &lt;td&gt;MIT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/getdozer/dozer-js&#34;&gt;dozer-js&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Dozer Client library for Javascript&lt;/td&gt; &#xA;   &lt;td&gt;MIT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/getdozer/dozer-react&#34;&gt;dozer-react&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Dozer Client library for React with easy to use hooks&lt;/td&gt; &#xA;   &lt;td&gt;MIT&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/getdozer/dozer-python&#34;&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from dozer.api import ApiClient&#xA;api_client = ApiClient(&#39;trips&#39;)&#xA;api_client.query()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/getdozer/dozer-js&#34;&gt;&lt;strong&gt;Javascript&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { ApiClient } from &#34;@getdozer/dozer-js&#34;;&#xA;&#xA;const flightsClient = new ApiClient(&#39;flights&#39;);&#xA;flightsClient.count().then(count =&amp;gt; {&#xA;    console.log(count);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/getdozer/dozer-react&#34;&gt;&lt;strong&gt;React&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { useCount } from &#34;@getdozer/dozer-react&#34;;&#xA;const AirportComponent = () =&amp;gt; {&#xA;    const [count] = useCount(&#39;trips&#39;);&#xA;    &amp;lt;div&amp;gt; Trips: {count} &amp;lt;/div&amp;gt;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Samples&lt;/h2&gt; &#xA;&lt;p&gt;Check out Dozer&#39;s &lt;a href=&#34;https://github.com/getdozer/dozer-samples&#34;&gt;samples repository&lt;/a&gt; for more comprehensive examples and use case scenarios.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Sample&lt;/th&gt; &#xA;   &lt;th&gt;Notes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Connectors&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/getdozer/dozer-samples/tree/main/connectors/postgres&#34;&gt;Postgres&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Load data using Postgres CDC&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/getdozer/dozer-samples/tree/main/connectors/local-storage&#34;&gt;Local Storage&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Load data from local files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Snowflake (Coming soon)&lt;/td&gt; &#xA;   &lt;td&gt;Load data using Snowflake table streams&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SQL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/getdozer/dozer-samples/tree/main/sql/join&#34;&gt;Using JOINs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Dozer APIs over multiple sources using JOIN&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/getdozer/dozer-samples/tree/main/sql/aggregations&#34;&gt;Using Aggregations&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;How to aggregate using Dozer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/getdozer/dozer-samples/tree/main/sql/window-functions&#34;&gt;Using Window Functions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use &lt;code&gt;Hop&lt;/code&gt; and &lt;code&gt;Tumble&lt;/code&gt; Windows&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Use Cases&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/getdozer/dozer-samples/tree/main/usecases/pg-flights&#34;&gt;Flight Microservices&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build APIs over multiple microservices.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use Dozer to Instrument (Coming soon)&lt;/td&gt; &#xA;   &lt;td&gt;Combine Log data to get real time insights&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Real Time Model Scoring (Coming soon)&lt;/td&gt; &#xA;   &lt;td&gt;Deploy trained models to get real time insights as APIs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Client Libraries&lt;/td&gt; &#xA;   &lt;td&gt;Dozer React Starter (Coming soon)&lt;/td&gt; &#xA;   &lt;td&gt;Instantly start building real time views using Dozer and React&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/getdozer/dozer-samples/tree/main/client-samples/ingest-python-sample&#34;&gt;Ingest Polars/Pandas Dataframes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Instantly ingest Polars/Pandas dataframes using Arrow format and deploy APIs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Authorization&lt;/td&gt; &#xA;   &lt;td&gt;Dozer Authorziation (Coming soon)&lt;/td&gt; &#xA;   &lt;td&gt;How to apply JWT Auth on Dozer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Connectors&lt;/h1&gt; &#xA;&lt;p&gt;Refer to the full list of connectors and example configurations &lt;a href=&#34;https://getdozer.io/docs/configuration/connectors&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Connector&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Status&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Type&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Schema Mapping&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Frequency&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Implemented Via&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Postgres&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Available ✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Relational&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Source&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Real Time&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Direct&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Snowflake&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Available ✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Data Warehouse&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Source&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Polling&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Direct&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Local Files (CSV, Parquet)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Available ✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Object Storage&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Source&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Polling&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Data Fusion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Delta Lake&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Alpha&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Data Warehouse&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Source&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Polling&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Direct&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;AWS S3 (CSV, Parquet)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Alpha&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Object Storage&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Source&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Polling&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Data Fusion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Google Cloud Storage(CSV, Parquet)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Alpha&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Object Storage&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Source&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Polling&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Data Fusion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Ethereum&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Available ✅&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Blockchain&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Logs/Contract ABI&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Real Time&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Direct&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MySQL&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;In Roadmap&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Relational&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Source&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Real Time&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Debezium&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Kafka&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;In Roadmap&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Stream&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Schema Registry&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Real Time&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Debezium&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Google Sheets&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;In Roadmap&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Applications&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Source&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Excel&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;In Roadmap&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Applications&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Source&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Airtable&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;In Roadmap&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Applications&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Source&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;We release Dozer typically every 2 weeks and is available on our &lt;a href=&#34;https://github.com/getdozer/dozer/releases/latest&#34;&gt;releases page&lt;/a&gt;. Currently, we publish binaries for Ubuntu 20.04, Apple(Intel) and Apple(Silicon).&lt;/p&gt; &#xA;&lt;p&gt;Please visit our &lt;a href=&#34;https://github.com/getdozer/dozer/issues&#34;&gt;issues section&lt;/a&gt; if you are having any trouble running the project.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://getdozer.io/docs/contributing/overview&#34;&gt;Contributing&lt;/a&gt; for more details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>uhyo/nitrogql</title>
    <updated>2023-04-12T02:34:09Z</updated>
    <id>tag:github.com,2023-04-12:/uhyo/nitrogql</id>
    <link href="https://github.com/uhyo/nitrogql" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GraphQL + TypeScript toolchain&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/uhyo/nitrogql/master/assets/logo/logo-and-text.png&#34; alt=&#34;nitrogql logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;GraphQL + TypeScript. Done right.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://nitrogql.vercel.app/&#34;&gt;Documentation&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;nitrogql&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;nitrogql&lt;/strong&gt; is a toolchain for using GraphQL in TypeScript projects. Main features include:&lt;/p&gt; &#xA;&lt;h2&gt;Type generation with sourcemap support.&lt;/h2&gt; &#xA;&lt;p&gt;nitrogql generates TypeScript types for your GraphQL schema and queries. It also generates a sourcemap file that maps the generated types to the original GraphQL schema and queries. With sourcemaps, you will never see generated code in your IDE, and you will always be able to jump to the original source code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/uhyo/nitrogql/master/assets/docs/screenshot-peek-definition.png&#34; alt=&#34;VSCode&#39;s &amp;quot;Peek Definition&amp;quot; command showing the original GraphQL query&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Static check for GraphQL code.&lt;/h2&gt; &#xA;&lt;p&gt;nitrogql can check your GraphQL code statically and guard you from any runtime errors caused by type mismatch.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/uhyo/nitrogql/master/assets/docs/screenshot-check.png&#34; alt=&#34;Result of running nitrogql check on a sample project&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;And more planned...&lt;/h2&gt; &#xA;&lt;p&gt;Type generation currently only supports client side code (usage with GraphQL clients like Apollo Client). Support for writing server side code (resolvers) is planned.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the nitrogql CLI with npm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install --save-dev @nitrogql/cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The CLI will enable you to check GraphQL files and generate types. Read more about the CLI in the &lt;a href=&#34;https://nitrogql.vercel.app/cli&#34;&gt;CLI documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To use GraphQL in your front-end project, you will also need to install appropriate loader.&lt;/p&gt; &#xA;&lt;p&gt;For webpack-based projects:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install --save-dev @nitrogql/graphql-loader&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Rollup-based projects:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install --save-dev @nitrogql/rollup-plugin&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>