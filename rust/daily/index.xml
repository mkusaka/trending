<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-04T01:43:06Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>frolicorg/frolic</title>
    <updated>2023-08-04T01:43:06Z</updated>
    <id>tag:github.com,2023-08-04:/frolicorg/frolic</id>
    <link href="https://github.com/frolicorg/frolic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Backend service to build customer facing dashboards 10x faster. Written in Rust.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;&#34;&gt; &lt;img src=&#34;static/Frolic Icon.png&#34; alt=&#34;Frolic Logo&#34; width=&#34;350&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Frolic is an open source project (written in Rust) to build customer facing dashboards 10x faster. You can directly connect your database to the project and use ready made APIs to query data and create customer facing dashboards. You can also use &lt;a href=&#34;https://github.com/frolicorg/frolic-react&#34;&gt;frolic-react&lt;/a&gt; for your UI along with frolic to create full stack dashboards much faster.&lt;/p&gt; &#xA;&lt;p&gt;You no longer have to write custom APIs for different dashboard components and create/maintain SQL queries for them.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/FrolicOrg/Frolic&#34; alt=&#34;GitHub contributors&#34;&gt; &lt;a href=&#34;https://github.com/FrolicOrg/Frolic/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/FrolicOrg/Frolic&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/FrolicOrg/Frolic/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/FrolicOrg/Frolic&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/issues-closed/FrolicOrg/Frolic&#34; alt=&#34;GitHub closed issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-pr-raw/FrolicOrg/Frolic&#34; alt=&#34;GitHub pull requests&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/commit-activity/m/FrolicOrg/Frolic&#34; alt=&#34;GitHub commit activity&#34;&gt; &lt;a href=&#34;https://github.com/FrolicOrg/Frolic&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/FrolicOrg/Frolic&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/FrolicOrg&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/FrolicOrg?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- &#xA;![GitHub release (latest by date)](https://img.shields.io/github/v/release/FrolicOrg/Frolic) &#xA;![Docker Cloud Build Status](https://img.shields.io/docker/cloud/build/tooljet/tooljet-ce)&#xA;--&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/arihantparsoya/dashboard-api-layer/assets/15258498/156bdb43-23cf-46d5-a212-9c16f2eab01a&#34; alt=&#34;Web App Reference Architecture-5&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Use single API to query data for all your dashboard components&lt;/h2&gt; &#xA;&lt;p&gt;You can use a single API endpoint provided by this project to query data for your dashboard.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-curl&#34;&gt;curl --location &#39;http://localhost/api&#39; \&#xA;--header &#39;Content-Type: application/json&#39; \&#xA;--data &#39;{&#xA;    &#34;metrics&#34;: [&#xA;        {&#xA;            &#34;field&#34;: &#34;orders.subtotal&#34;,&#xA;            &#34;aggregate_operator&#34;: &#34;count&#34;&#xA;        },&#xA;        {&#xA;            &#34;field&#34;: &#34;orders.total&#34;,&#xA;            &#34;aggregate_operator&#34;: &#34;sum&#34;&#xA;        }&#xA;    ],&#xA;    &#34;dimensions&#34;: [&#xA;        {&#xA;            &#34;field&#34;:&#34;products.category&#34;&#xA;        }&#xA;    ]&#xA;}&#xA;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can pass the metrics you require in the &lt;code&gt;metrics&lt;/code&gt; field as an array. The &lt;code&gt;field&lt;/code&gt; of the metric is written in &lt;code&gt;&amp;lt;table_name&amp;gt;.&amp;lt;column_name&amp;gt;&lt;/code&gt; format. The &lt;code&gt;aggregate_operator&lt;/code&gt; can be used to specifiy what operation you want to apply on the specified &lt;code&gt;&amp;lt;table_name&amp;gt;.&amp;lt;column_name&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;dimensions&lt;/code&gt; field allows you to categorize the metrics returned by the API. To specify the column by which you want to categorize the &lt;code&gt;metrics&lt;/code&gt;, use the &lt;code&gt;field&lt;/code&gt; operator and specify the column name in &lt;code&gt;&amp;lt;table_name&amp;gt;.&amp;lt;column_name&amp;gt;&lt;/code&gt; format.&lt;/p&gt; &#xA;&lt;p&gt;The data returned by the API will be a list of array. The array will contain the metric values and the dimension by which they are categorized.&lt;/p&gt; &#xA;&lt;p&gt;The output of the above request will be as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;data&#34;: [&#xA;        [&#xA;            &#34;5061&#34;,&#xA;            &#34;446835.9692339897&#34;,&#xA;            &#34;Widget&#34;&#xA;        ],&#xA;        [&#xA;            &#34;4784&#34;,&#xA;            &#34;404989.686671257&#34;,&#xA;            &#34;Gizmo&#34;&#xA;        ],&#xA;        [&#xA;            &#34;4939&#34;,&#xA;            &#34;429618.7213845253&#34;,&#xA;            &#34;Gadget&#34;&#xA;        ],&#xA;        [&#xA;            &#34;3975&#34;,&#xA;            &#34;313761.33664894104&#34;,&#xA;            &#34;Doohickey&#34;&#xA;        ]&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running Project&lt;/h2&gt; &#xA;&lt;h3&gt;1. Add your MySQL database credentials&lt;/h3&gt; &#xA;&lt;p&gt;Enter your MySQL database credentials in the &lt;a href=&#34;https://github.com/arihantparsoya/dashboard-api-layer/raw/prod/app/server/.env&#34;&gt;.env&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;2. Run the Project&lt;/h3&gt; &#xA;&lt;p&gt;Use docker to run the database&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker-compose up --build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can start using the docker container path to query your data.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üöÄ Fast and Scalable APIs with Rust&lt;/li&gt; &#xA; &lt;li&gt;Single API for all your dashboard requirements&lt;/li&gt; &#xA; &lt;li&gt;Automatically generates and execute SQL queries on your database&lt;/li&gt; &#xA; &lt;li&gt;Automatically handles complex table relationships&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Integrations&lt;/h2&gt; &#xA;&lt;p&gt;We currently support MySQL database. We will add integrations with other databases in the future.&lt;/p&gt; &#xA;&lt;h2&gt;Why Rust?&lt;/h2&gt; &#xA;&lt;p&gt;Rust is much faster and performant compared to other web frameworks. We have build this project using &lt;code&gt;actix-web&lt;/code&gt;, which is one of the &lt;a href=&#34;https://www.techempower.com/benchmarks/#section=data-r21&#34;&gt;fastest web frameworks in the world&lt;/a&gt;. Checkout the comparison between ExpressJS and Actix-Web &lt;a href=&#34;https://medium.com/@maxsparr0w/performance-of-node-js-compared-to-actix-web-37f20810fb1a&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support and Community&lt;/h2&gt; &#xA;&lt;p&gt;Issues are inevitable. When you have one, our entire team and our active developer community is around to help.&lt;/p&gt; &#xA;&lt;p&gt;üí¨ Ask for help on &lt;a href=&#34;https://discord.gg/NA9nkZaQnv&#34;&gt;Discord&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;‚ö†Ô∏è Open an issue right here on &lt;a href=&#34;https://github.com/arihantparsoya/dashboard-semantic-layer/issues/new/choose&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to Contribute&lt;/h2&gt; &#xA;&lt;p&gt;We ‚ù§Ô∏è our contributors. We&#39;re committed to fostering an open, welcoming, and safe environment in the community.&lt;/p&gt; &#xA;&lt;p&gt;üìï We expect everyone participating in the community to abide by our &lt;a href=&#34;https://github.com/arihantparsoya/dashboard-semantic-layer/wiki/Code-of-Conduct&#34;&gt;Code of Conduct&lt;/a&gt;. Please read and follow it.&lt;/p&gt; &#xA;&lt;p&gt;ü§ù If you&#39;d like to contribute, start by reading our &lt;a href=&#34;https://github.com/arihantparsoya/dashboard-semantic-layer/wiki/Guide-to-Contribution&#34;&gt;Contribution Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Lets build great software together.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is available under the &lt;a href=&#34;https://github.com/arihantparsoya/dashboard-semantic-layer/raw/prod/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>