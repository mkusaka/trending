<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-17T01:45:04Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nix-rust/nix</title>
    <updated>2023-11-17T01:45:04Z</updated>
    <id>tag:github.com,2023-11-17:/nix-rust/nix</id>
    <link href="https://github.com/nix-rust/nix" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Rust friendly bindings to *nix APIs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rust bindings to *nix APIs&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cirrus-ci.com/github/nix-rust/nix&#34;&gt;&lt;img src=&#34;https://api.cirrus-ci.com/github/nix-rust/nix.svg?sanitize=true&#34; alt=&#34;Cirrus Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/nix&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/nix.svg?sanitize=true&#34; alt=&#34;crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nix-rust/nix/issues/2132&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maintenance-looking--for--maintainer-orange.svg?sanitize=true&#34; alt=&#34;maintenance-status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.rs/nix/&#34;&gt;Documentation (Releases)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Nix seeks to provide friendly bindings to various *nix platform APIs (Linux, Darwin, ...). The goal is to not provide a 100% unified interface, but to unify what can be while still providing platform specific APIs.&lt;/p&gt; &#xA;&lt;p&gt;For many system APIs, Nix provides a safe alternative to the unsafe APIs exposed by the &lt;a href=&#34;https://github.com/rust-lang/libc&#34;&gt;libc crate&lt;/a&gt;. This is done by wrapping the libc functionality with types/abstractions that enforce legal/safe usage.&lt;/p&gt; &#xA;&lt;p&gt;As an example of what Nix provides, examine the differences between what is exposed by libc and nix for the &lt;a href=&#34;https://man7.org/linux/man-pages/man2/gethostname.2.html&#34;&gt;gethostname&lt;/a&gt; system call:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust,ignore&#34;&gt;// libc api (unsafe, requires handling return code/errno)&#xA;pub unsafe extern fn gethostname(name: *mut c_char, len: size_t) -&amp;gt; c_int;&#xA;&#xA;// nix api (returns a nix::Result&amp;lt;OsString&amp;gt;)&#xA;pub fn gethostname() -&amp;gt; Result&amp;lt;OsString&amp;gt;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Supported Platforms&lt;/h2&gt; &#xA;&lt;p&gt;nix target support consists of three tiers. While nix attempts to support all platforms supported by &lt;a href=&#34;https://github.com/rust-lang/libc&#34;&gt;libc&lt;/a&gt;, only some platforms are actively supported due to either technical or manpower limitations. Support for platforms is split into three tiers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tier 1 - Builds and tests for this target are run in CI. Failures of either block the inclusion of new code.&lt;/li&gt; &#xA; &lt;li&gt;Tier 2 - Builds for this target are run in CI. Failures during the build blocks the inclusion of new code. Tests may be run, but failures in tests don&#39;t block the inclusion of new code.&lt;/li&gt; &#xA; &lt;li&gt;Tier 3 - Builds for this target are run in CI. Failures during the build &lt;em&gt;do not&lt;/em&gt; necessarily block the inclusion of new code. That is, at our discretion a Tier 3 target may be dropped at any time, if it would otherwise block development.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Platforms not listed are supported on a best-effort basis, relying on our users to report any problems.&lt;/p&gt; &#xA;&lt;p&gt;The following targets are supported by &lt;code&gt;nix&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Tier 1&lt;/th&gt; &#xA;   &lt;th&gt;Tier 2&lt;/th&gt; &#xA;   &lt;th&gt;Tier 3&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;aarch64-apple-darwin&lt;/li&gt; &#xA;     &lt;li&gt;aarch64-unknown-linux-gnu&lt;/li&gt; &#xA;     &lt;li&gt;arm-unknown-linux-gnueabi&lt;/li&gt; &#xA;     &lt;li&gt;armv7-unknown-linux-gnueabihf&lt;/li&gt; &#xA;     &lt;li&gt;i686-unknown-freebsd&lt;/li&gt; &#xA;     &lt;li&gt;i686-unknown-linux-gnu&lt;/li&gt; &#xA;     &lt;li&gt;i686-unknown-linux-musl&lt;/li&gt; &#xA;     &lt;li&gt;mips-unknown-linux-gnu&lt;/li&gt; &#xA;     &lt;li&gt;mips64-unknown-linux-gnuabi64&lt;/li&gt; &#xA;     &lt;li&gt;mips64el-unknown-linux-gnuabi64&lt;/li&gt; &#xA;     &lt;li&gt;mipsel-unknown-linux-gnu&lt;/li&gt; &#xA;     &lt;li&gt;powerpc64le-unknown-linux-gnu&lt;/li&gt; &#xA;     &lt;li&gt;x86_64-unknown-freebsd&lt;/li&gt; &#xA;     &lt;li&gt;x86_64-unknown-linux-gnu&lt;/li&gt; &#xA;     &lt;li&gt;x86_64-unknown-linux-musl&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;aarch64-apple-ios&lt;/li&gt; &#xA;     &lt;li&gt;aarch64-linux-android&lt;/li&gt; &#xA;     &lt;li&gt;arm-linux-androideabi&lt;/li&gt; &#xA;     &lt;li&gt;arm-unknown-linux-musleabi&lt;/li&gt; &#xA;     &lt;li&gt;armv7-linux-androideabi&lt;/li&gt; &#xA;     &lt;li&gt;i686-linux-android&lt;/li&gt; &#xA;     &lt;li&gt;s390x-unknown-linux-gnu&lt;/li&gt; &#xA;     &lt;li&gt;x86_64-linux-android&lt;/li&gt; &#xA;     &lt;li&gt;x86_64-unknown-illumos&lt;/li&gt; &#xA;     &lt;li&gt;x86_64-unknown-netbsd&lt;/li&gt; &#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;li&gt;armv7-unknown-linux-uclibceabihf&lt;/li&gt; &lt;li&gt;powerpc64-unknown-linux-gnu&lt;/li&gt; &lt;li&gt;x86_64-fuchsia&lt;/li&gt; &lt;li&gt;x86_64-unknown-dragonfly&lt;/li&gt; &lt;li&gt;x86_64-unknown-haiku&lt;/li&gt; &lt;li&gt;x86_64-unknown-linux-gnux32&lt;/li&gt; &lt;li&gt;x86_64-unknown-openbsd&lt;/li&gt; &lt;li&gt;x86_64-unknown-redox&lt;/li&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Minimum Supported Rust Version (MSRV)&lt;/h2&gt; &#xA;&lt;p&gt;nix is supported on Rust 1.69 and higher. Its MSRV will not be changed in the future without bumping the major or minor version.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are very welcome. Please See &lt;a href=&#34;https://raw.githubusercontent.com/nix-rust/nix/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for additional details.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to join us in &lt;a href=&#34;https://gitter.im/nix-rust/nix&#34;&gt;the nix-rust/nix&lt;/a&gt; channel on Gitter to discuss &lt;code&gt;nix&lt;/code&gt; development.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Nix is licensed under the MIT license. See &lt;a href=&#34;https://raw.githubusercontent.com/nix-rust/nix/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more details.&lt;/p&gt;</summary>
  </entry>
</feed>