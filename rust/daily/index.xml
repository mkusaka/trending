<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-11T01:34:35Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>paradigmxyz/solar</title>
    <updated>2024-11-11T01:34:35Z</updated>
    <id>tag:github.com,2024-11-11:/paradigmxyz/solar</id>
    <link href="https://github.com/paradigmxyz/solar" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Blazingly fast, modular and contributor friendly Solidity compiler, written in Rust&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;solar&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://crates.io/crates/solar-compiler&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/solar-compiler.svg?sanitize=true&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/solar-compiler&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/d/solar-compiler&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/paradigmxyz/solar/main/LICENSE-MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/paradigmxyz/solar/main/LICENSE-APACHE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache--2.0-blue.svg?sanitize=true&#34; alt=&#34;Apache-2.0 License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/paradigmxyz/solar/actions&#34;&gt;&lt;img src=&#34;https://github.com/paradigmxyz/solar/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Actions Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/paradigm_solar&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?color=neon&amp;amp;logo=telegram&amp;amp;label=chat&amp;amp;url=https%3A%2F%2Ftg.sumanjay.workers.dev%2Fparadigm%5Fsolar&#34; alt=&#34;Telegram Chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Blazingly fast, modular and contributor friendly Solidity compiler, written in Rust.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture align=&#34;center&#34;&gt; &#xA;  &lt;img alt=&#34;Solar cover&#34; src=&#34;https://raw.githubusercontent.com/paradigmxyz/solar/main/assets/cover.png&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Features and Goals&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!CAUTION] Solar is under active development and is not yet feature complete. Use it to speed up your development workflows and tooling. Please do not use it in production environments.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚ö° Instant compiles and low memory usage&lt;/li&gt; &#xA; &lt;li&gt;üîç Expressive and useful diagnostics&lt;/li&gt; &#xA; &lt;li&gt;üß© Modular, library-based architecture&lt;/li&gt; &#xA; &lt;li&gt;üíª Simple and hackable code base&lt;/li&gt; &#xA; &lt;li&gt;üîÑ Compatibility with the latest Solidity language breaking version (0.8.*)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture align=&#34;center&#34;&gt; &#xA;  &lt;img alt=&#34;Terminal screenshot showing Solar is 40x faster than solc at generating ABI using hyperfine&#34; src=&#34;https://raw.githubusercontent.com/paradigmxyz/solar/main/assets/benchmark.png&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Solar is available through a command-line interface, or as a Rust library.&lt;/p&gt; &#xA;&lt;h3&gt;Library usage&lt;/h3&gt; &#xA;&lt;p&gt;You can add Solar to your Rust project by adding the following to your &lt;code&gt;Cargo.toml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[dependencies]&#xA;solar = { version = &#34;0.1.0&#34;, package = &#34;solar-compiler&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or through the CLI:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo add solar-compiler --rename solar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can see examples of how to use Solar as a library in the &lt;a href=&#34;https://raw.githubusercontent.com/paradigmxyz/solar/main/examples&#34;&gt;examples&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;h3&gt;Binary usage&lt;/h3&gt; &#xA;&lt;p&gt;Pre-built binaries are available for macOS, Linux and Windows on the &lt;a href=&#34;https://github.com/paradigmxyz/solar/releases&#34;&gt;releases page&lt;/a&gt; and can be installed with the following commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On macOS and Linux: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -LsSf https://paradigm.xyz/solar/install.sh | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;On Windows: &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;powershell -c &#34;irm https://paradigm.xyz/solar/install.ps1 | iex&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;For a specific version: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -LsSf https://paradigm.xyz/solar/v0.1.0/install.sh | sh&#xA;powershell -c &#34;irm https://paradigm.xyz/solar/v0.1.0/install.ps1 | iex&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also build Solar from source:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;From crates.io: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo install solar-compiler --locked&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;From GitHub: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo install --git https://github.com/paradigmxyz/solar --locked&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;From a Git checkout: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/paradigmxyz/solar&#xA;cd solar&#xA;cargo install --locked --path crates/solar&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once installed, check out the available options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;solar -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here&#39;s a few examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Compile a single file and emit ABI to stdout.&#xA;solar Counter.sol --emit abi&#xA;&#xA;# Compile a contract through standard input (`-` file).&#xA;echo &#34;contract C {}&#34; | solar -&#xA;solar - &amp;lt;&amp;lt;EOF&#xA;contract HelloWorld {&#xA;    function helloWorld() external pure returns (string memory) {&#xA;        return &#34;Hello, World!&#34;;&#xA;    }&#xA;}&#xA;EOF&#xA;&#xA;# Compile a file with a Foundry project&#39;s remappings.&#xA;solar $(forge re) src/Contract.sol&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;You can find a more detailed list in the &lt;a href=&#34;https://github.com/paradigmxyz/solar/issues/1&#34;&gt;pinned GitHub issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Front-end &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Lexing&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Parsing&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Semantic analysis &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Symbol resolution&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Type checker&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Static analysis&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Middle-end&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Back-end&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Semver Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;Solar&#39;s versioning tracks compatibility for the binaries, not the API. If using this as a library, be sure to pin the version with a &lt;code&gt;=&lt;/code&gt; version requirement operator.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Rust Versions (MSRV)&lt;/h2&gt; &#xA;&lt;p&gt;Solar always aims to stay up-to-date with the latest stable Rust release.&lt;/p&gt; &#xA;&lt;p&gt;The Minimum Supported Rust Version (MSRV) may be updated at any time, so we can take advantage of new features and improvements in Rust.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome and highly appreciated. To get started, check out the &lt;a href=&#34;https://raw.githubusercontent.com/paradigmxyz/solar/main/CONTRIBUTING.md&#34;&gt;&lt;strong&gt;contributing guidelines&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Having trouble? Check out the existing issues on &lt;a href=&#34;https://github.com/paradigmxyz/solar/issues&#34;&gt;&lt;strong&gt;GitHub&lt;/strong&gt;&lt;/a&gt;, or feel free to &lt;a href=&#34;https://github.com/paradigmxyz/solar/issues/new&#34;&gt;&lt;strong&gt;open a new one&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also ask for help on &lt;a href=&#34;https://t.me/paradigm_solar&#34;&gt;Telegram&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;License&lt;/h4&gt; &#xA;&lt;sup&gt; Licensed under either of &lt;a href=&#34;https://raw.githubusercontent.com/paradigmxyz/solar/main/LICENSE-APACHE&#34;&gt;Apache License, Version 2.0&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/paradigmxyz/solar/main/LICENSE-MIT&#34;&gt;MIT license&lt;/a&gt; at your option. &lt;/sup&gt; &#xA;&lt;br&gt; &#xA;&lt;sub&gt; Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in these crates by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions. &lt;/sub&gt;</summary>
  </entry>
  <entry>
    <title>mxsm/rocketmq-rust</title>
    <updated>2024-11-11T01:34:35Z</updated>
    <id>tag:github.com,2024-11-11:/mxsm/rocketmq-rust</id>
    <link href="https://github.com/mxsm/rocketmq-rust" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üöÄApache RocketMQ Rust implementation. Faster, safer, and with lower memory usage.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;rocketmq-rust&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/mxsm/rocketmq-rust&#34; alt=&#34;GitHub last commit&#34;&gt; &lt;a href=&#34;https://crates.io/crates/rocketmq-rust&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/rocketmq-rust.svg?sanitize=true&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.rs/rocketmq-rust&#34;&gt;&lt;img src=&#34;https://docs.rs/rocketmq-rust/badge.svg?sanitize=true&#34; alt=&#34;Docs.rs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/actions&#34;&gt;&lt;img src=&#34;https://github.com/mxsm/rocketmq-rust/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/mxsm/rocketmq-rust&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/mxsm/rocketmq-rust/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;CodeCov&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/mxsm/rocketmq-rust&#34; alt=&#34;GitHub contributors&#34;&gt; &lt;img src=&#34;https://img.shields.io/crates/l/rocketmq-rust&#34; alt=&#34;Crates.io License&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/repo-size/mxsm/rocketmq-rust&#34; alt=&#34;GitHub repo size&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/MSRV-1.75.0%2B-25b373&#34; alt=&#34;Static Badge&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Welcome to &lt;a href=&#34;https://github.com/apache/rocketmq&#34;&gt;Apache Rocketmq&lt;/a&gt; Rust implementation (Unofficial ). &lt;strong&gt;RocketMQ-Rust&lt;/strong&gt; is a reimplementation of the Apache RocketMQ message middleware in the Rust language. This project aims to provide Rust developers with a high-performance and reliable message queue service, making full use of the features of the Rust language.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mxsm/rocketmq-rust/main/resources/rocketmq-rust.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;RocketMQ-Rust Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Rust Language Advantages:&lt;/strong&gt; Leveraging the benefits of Rust, such as memory safety, zero-cost abstractions, and high concurrency performance, RocketMQ-Rust offers an efficient and reliable message middleware.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Asynchronous and Non-blocking Design:&lt;/strong&gt; RocketMQ-Rust takes full advantage of Rust&#39;s asynchronous programming capabilities, adopting a non-blocking design that supports high-concurrency message processing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ecosystem Integration:&lt;/strong&gt; As part of the Rust ecosystem, RocketMQ-Rust integrates well with other libraries and frameworks within the Rust ecosystem, providing flexible integration options for developers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cross-platform Support:&lt;/strong&gt; RocketMQ-Rust supports multiple platforms, including Linux, Windows, macOS, making it convenient for use in different environments.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;rust toolchain MSRV is 1.75.(stable,nightly)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Run name server&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Run the following command to see usageÔºö&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;windows platform&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;cargo run --bin rocketmq-namesrv-rust -- --help&#xA;&#xA;RocketMQ Name server(Rust)&#xA;&#xA;Usage: rocketmq-namesrv-rust.exe [OPTIONS]&#xA;&#xA;Options:&#xA;  -p, --port &amp;lt;PORT&amp;gt;  rocketmq name server port [default: 9876]&#xA;  -i, --ip &amp;lt;IP&amp;gt;      rocketmq name server ip [default: 127.0.0.1]&#xA;  -h, --help         Print help&#xA;  -V, --version      Print version&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Linux platform&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ cargo run --bin rocketmq-namesrv-rust -- --help&#xA;&#xA;RocketMQ Name server(Rust)&#xA;&#xA;Usage: rocketmq-namesrv-rust [OPTIONS]&#xA;&#xA;Options:&#xA;  -p, --port &amp;lt;PORT&amp;gt;  rocketmq name server port [default: 9876]&#xA;  -i, --ip &amp;lt;IP&amp;gt;      rocketmq name server ip [default: 127.0.0.1]&#xA;  -h, --help         Print help&#xA;  -V, --version      Print version&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Run the following command to start the name server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo run --bin rocketmq-namesrv-rust&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run Borker&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Run the following command to see usageÔºö&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;windows platform&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo run --bin rocketmq-broker-rust -- --help&#xA;&#xA;RocketMQ Broker Server(Rust)&#xA;&#xA;Usage: rocketmq-broker-rust.exe [OPTIONS]&#xA;&#xA;Options:&#xA;  -c, --config-file &amp;lt;FILE&amp;gt;      Broker config properties file&#xA;  -m, --print-important-config  Print important config item&#xA;  -n, --namesrv-addr &amp;lt;IP&amp;gt;       Name server address list, eg: &#39;192.168.0.1:9876;192.168.0.2:9876&#39; [default: 127.0.0.1:9876]&#xA;  -p, --print-config-item       Print all config item&#xA;  -h, --help                    Print help&#xA;  -V, --version                 Print version&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Linux platform&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ cargo run --bin rocketmq-broker-rust -- --help&#xA;&#xA;RocketMQ Broker Server(Rust)&#xA;&#xA;Usage: rocketmq-broker-rust [OPTIONS]&#xA;&#xA;Options:&#xA;  -c, --config-file &amp;lt;FILE&amp;gt;      Broker config properties file&#xA;  -m, --print-important-config  Print important config item&#xA;  -n, --namesrv-addr &amp;lt;IP&amp;gt;       Name server address list, eg: &#39;192.168.0.1:9876;192.168.0.2:9876&#39; [default: 127.0.0.1:9876]&#xA;  -p, --print-config-item       Print all config item&#xA;  -h, --help                    Print help&#xA;  -V, --version                 Print version&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Run the following command to start the name server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo run --bin rocketmq-broker-rust&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Client how to send message&lt;/h2&gt; &#xA;&lt;p&gt;First, start the RocketMQ NameServer and Broker services.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/raw/main/rocketmq-client/README.md#Send-a-single-message&#34;&gt;&lt;strong&gt;Send a single message&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/raw/main/rocketmq-client/README.md#Send-batch-messages&#34;&gt;&lt;strong&gt;Send batch messages&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/raw/main/rocketmq-client/README.md#Send-RPC-messages&#34;&gt;&lt;strong&gt;Send RPC messages&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/tree/main/rocketmq-client/examples&#34;&gt;&lt;strong&gt;For more examples, you can check here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Modules&lt;/h2&gt; &#xA;&lt;p&gt;The existing RocketMQ has the following functional modules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/tree/main/rocketmq-namesrv&#34;&gt;&lt;strong&gt;Name Server&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/tree/main/rocketmq-broker&#34;&gt;&lt;strong&gt;Broker&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/tree/main/rocketmq-store&#34;&gt;&lt;strong&gt;Store (Local Storage)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Controller (High Availability)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/tree/main/rocketmq-client&#34;&gt;&lt;strong&gt;Client (SDK)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Proxy&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tiered Store (Tiered Storage Module)&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The specific functions of each module can be referred to in the &lt;a href=&#34;https://github.com/apache/rocketmq/tree/develop/docs&#34;&gt;official RocketMQ documentation&lt;/a&gt;. The Rust implementation will be carried out sequentially in the following order.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions to code, issue reporting, and suggestions are welcome. The development of RocketMQ-Rust relies on the support of developers. Let&#39;s collaborate to advance Rust in the message middleware domain.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://repobeats.axiom.co/api/embed/6ca125de92b36e1f78c6681d0a1296b8958adea1.svg?sanitize=true&#34; alt=&#34;Alt&#34; title=&#34;Repobeats analytics image&#34;&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=mxsm/rocketmq-rust&amp;amp;anon=1&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://api.star-history.com/svg?repos=mxsm/rocketmq-rust&amp;amp;type=Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=mxsm/rocketmq-rust&amp;amp;type=Date&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;RocketMQ-Rust is licensed under the &lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/raw/main/LICENSE-APACHE&#34;&gt;Apache License 2.0&lt;/a&gt; and &lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/raw/main/LICENSE-MIT&#34;&gt;MIT license&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>