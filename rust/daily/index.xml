<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-11T01:35:48Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dfir-dd/dfir-toolkit</title>
    <updated>2023-08-11T01:35:48Z</updated>
    <id>tag:github.com,2023-08-11:/dfir-dd/dfir-toolkit</id>
    <link href="https://github.com/dfir-dd/dfir-toolkit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CLI tools for forensic investigation of Windows artifacts&lt;/p&gt;&lt;hr&gt;&lt;img align=&#34;right&#34; width=&#34;50%&#34; src=&#34;https://github.com/dfir-dd/pr/raw/main/images/fox/dfir_fox_ai.png?raw=true&#34;&gt; &#xA;&lt;h1&gt;DFIR Toolkit&lt;/h1&gt; &#xA;&lt;h1&gt;Table of contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dfir-dd/dfir-toolkit/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dfir-dd/dfir-toolkit/master/#overview-of-timelining-tools&#34;&gt;Overview of timelining tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dfir-dd/dfir-toolkit/master/#tools&#34;&gt;Tools&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dfir-dd/dfir-toolkit/master/#cleanhive&#34;&gt;&lt;code&gt;cleanhive&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dfir-dd/dfir-toolkit/master/#evtx2bodyfile&#34;&gt;&lt;code&gt;evtx2bodyfile&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dfir-dd/dfir-toolkit/master/#evtxanalyze&#34;&gt;&lt;code&gt;evtxanalyze&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dfir-dd/dfir-toolkit/master/#evtxscan&#34;&gt;&lt;code&gt;evtxscan&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dfir-dd/dfir-toolkit/master/#evtxcat&#34;&gt;&lt;code&gt;evtxcat&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dfir-dd/dfir-toolkit/master/#evtxls&#34;&gt;&lt;code&gt;evtxls&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dfir-dd/dfir-toolkit/master/#es4forensics&#34;&gt;&lt;code&gt;es4forensics&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dfir-dd/dfir-toolkit/master/#hivescan&#34;&gt;&lt;code&gt;hivescan&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://github.com/janstarke/ipgrep&#34;&gt;&lt;code&gt;ipgrep&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://github.com/janstarke/lnk2bodyfile&#34;&gt;&lt;code&gt;lnk2bodyfile&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dfir-dd/dfir-toolkit/master/#mactime2&#34;&gt;&lt;code&gt;mactime2&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://github.com/janstarke/mft2bodyfile&#34;&gt;&lt;code&gt;mft2bodyfile&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://github.com/janstarke/ntdsextract2&#34;&gt;&lt;code&gt;ntdsextract2&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dfir-dd/dfir-toolkit/master/#pol_export&#34;&gt;&lt;code&gt;pol_export&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://github.com/janstarke/procbins&#34;&gt;&lt;code&gt;procbins&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dfir-dd/dfir-toolkit/master/#regdump&#34;&gt;&lt;code&gt;regdump&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://github.com/janstarke/regls&#34;&gt;&lt;code&gt;regls&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://github.com/janstarke/regview&#34;&gt;&lt;code&gt;regview&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://github.com/janstarke/ts2date&#34;&gt;&lt;code&gt;ts2date&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://github.com/janstarke/usnjrnl&#34;&gt;&lt;code&gt;usnjrnl_dump&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Overview of timelining tools&lt;/h1&gt; &#xA;&lt;img src=&#34;https://github.com/dfir-dd/dfir-toolkit/raw/master/doc/images/tools.svg?raw=true&#34;&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo install dfir-toolkit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Tools&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;code&gt;cleanhive&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;merges logfiles into a hive file&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: cleanhive [OPTIONS] --output &amp;lt;DST_HIVE&amp;gt; &amp;lt;HIVE_FILE&amp;gt;&#xA;&#xA;Arguments:&#xA;  &amp;lt;HIVE_FILE&amp;gt;  name of the file to dump&#xA;&#xA;Options:&#xA;  -L, --log &amp;lt;LOGFILES&amp;gt;     transaction LOG file(s). This argument can be specified one or two times&#xA;  -v, --verbose...         More output per occurrence&#xA;  -q, --quiet...           Less output per occurrence&#xA;  -O, --output &amp;lt;DST_HIVE&amp;gt;  name of the file to which the cleaned hive will be written&#xA;  -h, --help               Print help&#xA;  -V, --version            Print version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;code&gt;evtx2bodyfile&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: evtx2bodyfile [OPTIONS] [EVTX_FILES]...&#xA;&#xA;Arguments:&#xA;  [EVTX_FILES]...  names of the evtx files&#xA;&#xA;Options:&#xA;  -J, --json        output json for elasticsearch instead of bodyfile&#xA;  -S, --strict      fail upon read error&#xA;  -v, --verbose...  More output per occurrence&#xA;  -q, --quiet...    Less output per occurrence&#xA;  -h, --help        Print help&#xA;  -V, --version     Print version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# convert to bodyfile only&#xA;evtx2bodyfile Security.evtx &amp;gt;Security.bodyfile&#xA;&#xA;# create a complete timeline&#xA;evtx2bodyfile *.evtx | mactime2 -d -b &amp;gt;evtx_timeline.csv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;code&gt;evtxanalyze&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Analyze evtx files&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: evtxanalyze [OPTIONS] &amp;lt;COMMAND&amp;gt;&#xA;&#xA;Commands:&#xA;  pstree    generate a process tree&#xA;  sessions  display sessions&#xA;  session   display one single session&#xA;  help      Print this message or the help of the given subcommand(s)&#xA;&#xA;Options:&#xA;  -v, --verbose...  More output per occurrence&#xA;  -q, --quiet...    Less output per occurrence&#xA;  -h, --help        Print help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;code&gt;evtxscan&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Finds time skews in an evtx file&lt;/p&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;img src=&#34;https://github.com/janstarke/evtxtools/raw/master/doc/img/evtxscan1.png?raw=true&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/janstarke/evtxtools/raw/master/doc/img/evtxscan2.png?raw=true&#34;&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Find time skews in an evtx file&#xA;&#xA;Usage: evtxscan [OPTIONS] &amp;lt;EVTX_FILE&amp;gt;&#xA;&#xA;Arguments:&#xA;  &amp;lt;EVTX_FILE&amp;gt;  name of the evtx file to scan&#xA;&#xA;Options:&#xA;  -S, --show-records                             display also the contents of the records befor and after a time skew&#xA;  -N, --negative-tolerance &amp;lt;NEGATIVE_TOLERANCE&amp;gt;  negative tolerance limit (in seconds): time skews to the past below this limit will be ignored [default: 5]&#xA;  -h, --help                                     Print help&#xA;  -V, --version                                  Print version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;code&gt;evtxcat&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Display one or more events from an evtx file&lt;/p&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;img src=&#34;https://github.com/janstarke/evtxtools/raw/master/doc/img/evtxls.png?raw=true&#34;&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;Usage: evtxcat [OPTIONS] &amp;lt;EVTX_FILE&amp;gt;&#xA;&#xA;Arguments:&#xA;  &amp;lt;EVTX_FILE&amp;gt;  Name of the evtx file to read from&#xA;&#xA;Options:&#xA;      --min &amp;lt;MIN&amp;gt;        filter: minimal event record identifier&#xA;      --max &amp;lt;MAX&amp;gt;        filter: maximal event record identifier&#xA;  -i, --id &amp;lt;ID&amp;gt;          show only the one event with this record identifier&#xA;  -T, --display-table    don&#39;t display the records in a table format&#xA;  -F, --format &amp;lt;FORMAT&amp;gt;  [default: xml] [possible values: json, xml]&#xA;  -h, --help             Print help&#xA;  -V, --version          Print version&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;code&gt;evtxls&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Display one or more events from an evtx file&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: evtxls [OPTIONS] [EVTX_FILES]...&#xA;&#xA;Arguments:&#xA;  [EVTX_FILES]...&#xA;          Name of the evtx files to read from&#xA;&#xA;Options:&#xA;  -d, --delimiter &amp;lt;DELIMITER&amp;gt;&#xA;          use this delimiter instead of generating fixed space columns&#xA;&#xA;  -i, --include &amp;lt;INCLUDED_EVENT_IDS&amp;gt;&#xA;          List events with only the specified event ids, separated by &#39;,&#39;&#xA;&#xA;  -x, --exclude &amp;lt;EXCLUDED_EVENT_IDS&amp;gt;&#xA;          Exclude events with the specified event ids, separated by &#39;,&#39;&#xA;&#xA;  -c, --colors&#xA;          highlight interesting content using colors&#xA;&#xA;  -f, --from &amp;lt;NOT_BEFORE&amp;gt;&#xA;          hide events older than the specified date (hint: use RFC 3339 syntax)&#xA;&#xA;  -t, --to &amp;lt;NOT_AFTER&amp;gt;&#xA;          hide events newer than the specified date (hint: use RFC 3339 syntax)&#xA;&#xA;  -r, --regex &amp;lt;HIGHLIGHT&amp;gt;&#xA;          highlight event data based on this regular expression&#xA;&#xA;  -s, --sort &amp;lt;SORT_ORDER&amp;gt;&#xA;          sort order&#xA;          &#xA;          [default: storage]&#xA;&#xA;          Possible values:&#xA;          - storage:   don&#39;t change order, output records as they are stored&#xA;          - record-id: sort by event record id&#xA;          - time:      sort by date and time&#xA;&#xA;  -b, --base-fields &amp;lt;DISPLAY_SYSTEM_FIELDS&amp;gt;&#xA;          display fields common to all events. multiple values must be separated by &#39;,&#39;&#xA;          &#xA;          [default: event-id event-record-id]&#xA;&#xA;          Possible values:&#xA;          - event-id:            The identifier that the provider used to identify the event&#xA;          - event-record-id:     The record number assigned to the event when it was logged&#xA;          - activity-id:         A globally unique identifier that identifies the current activity. The events that are published with this identifier are part of the same activity&#xA;          - related-activity-id: A globally unique identifier that identifies the activity to which control was transferred to. The related events would then have this identifier as their ActivityID identifier&#xA;          - process-id:          The ID of the process that created the event&#xA;&#xA;  -B, --hide-base-fields&#xA;          don&#39;t display any common event fields at all. This corresponds to specifying &#39;--base-fields&#39; without any values (which is not allowed, that&#39;s why there is this flag)&#xA;&#xA;  -h, --help&#xA;          Print help (see a summary with &#39;-h&#39;)&#xA;&#xA;  -V, --version&#xA;          Print version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;code&gt;es4forensics&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: es4forensics [OPTIONS] --index &amp;lt;INDEX_NAME&amp;gt; --password &amp;lt;PASSWORD&amp;gt; &amp;lt;COMMAND&amp;gt;&#xA;&#xA;Commands:&#xA;  create-index  &#xA;  import        &#xA;  help          Print this message or the help of the given subcommand(s)&#xA;&#xA;Options:&#xA;  -v, --verbose...           More output per occurrence&#xA;  -q, --quiet...             Less output per occurrence&#xA;      --strict               strict mode: do not only warn, but abort if an error occurs&#xA;  -I, --index &amp;lt;INDEX_NAME&amp;gt;   name of the elasticsearch index&#xA;  -H, --host &amp;lt;HOST&amp;gt;          server name or IP address of elasticsearch server [default: localhost]&#xA;  -P, --port &amp;lt;PORT&amp;gt;          API port number of elasticsearch server [default: 9200]&#xA;      --proto &amp;lt;PROTOCOL&amp;gt;     protocol to be used to connect to elasticsearch [default: https] [possible values: http, https]&#xA;  -k, --insecure             omit certificate validation&#xA;  -U, --username &amp;lt;USERNAME&amp;gt;  username for elasticsearch server [default: elastic]&#xA;  -W, --password &amp;lt;PASSWORD&amp;gt;  password for authenticating at elasticsearch&#xA;  -h, --help                 Print help&#xA;  -V, --version              Print version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;code&gt;hivescan&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;scans a registry hive file for deleted entries&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: hivescan [OPTIONS] &amp;lt;HIVE_FILE&amp;gt;&#xA;&#xA;Arguments:&#xA;  &amp;lt;HIVE_FILE&amp;gt;  name of the file to scan&#xA;&#xA;Options:&#xA;  -L, --log &amp;lt;LOGFILES&amp;gt;  transaction LOG file(s). This argument can be specified one or two times&#xA;  -v, --verbose...      More output per occurrence&#xA;  -q, --quiet...        Less output per occurrence&#xA;  -b                    output as bodyfile format&#xA;  -h, --help            Print help&#xA;  -V, --version         Print version&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;code&gt;mactime2&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Replacement for &lt;code&gt;mactime&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Changes to original &lt;code&gt;mactime&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;no implicit conversion of timestamp to local date/time&lt;/li&gt; &#xA; &lt;li&gt;possibility of explicit timezone correction&lt;/li&gt; &#xA; &lt;li&gt;other datetime format (RFC3339) which always includes the timezone offset&lt;/li&gt; &#xA; &lt;li&gt;faster&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: mactime2 [OPTIONS]&#xA;&#xA;Options:&#xA;  -v, --verbose...                More output per occurrence&#xA;  -q, --quiet...                  Less output per occurrence&#xA;  -b &amp;lt;INPUT_FILE&amp;gt;                 path to input file or &#39;-&#39; for stdin (files ending with .gz will be treated as being gzipped) [default: -]&#xA;  -f, --from-timezone &amp;lt;SRC_ZONE&amp;gt;  name of offset of source timezone (or &#39;list&#39; to display all possible values&#xA;  -t, --to-timezone &amp;lt;DST_ZONE&amp;gt;    name of offset of destination timezone (or &#39;list&#39; to display all possible values&#xA;      --strict                    strict mode: do not only warn, but abort if an error occurs&#xA;  -F, --format &amp;lt;OUTPUT_FORMAT&amp;gt;    output format, if not specified, default value is &#39;txt&#39; [possible values: csv, txt, json, elastic]&#xA;  -d                              output as CSV instead of TXT. This is a conveniance option, which is identical to `--format=csv` and will be removed in a future release.&#xA;                                  If you specified `--format` and `-d`, the latter will be ignored&#xA;  -j                              output as JSON instead of TXT. This is a conveniance option, which is identical to `--format=json` and will be removed in a future release.&#xA;                                  If you specified `--format` and `-j`, the latter will be ignored&#xA;  -h, --help                      Print help information&#xA;  -V, --version                   Print version information&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;mft2bodyfile&lt;/h2&gt; &#xA;&lt;p&gt;yet to be come&lt;/p&gt; &#xA;&lt;h2&gt;pol_export&lt;/h2&gt; &#xA;&lt;p&gt;Exporter for Windows Registry Policy Files&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;USAGE:&#xA;    pol_export &amp;lt;POLFILE&amp;gt;&#xA;&#xA;ARGS:&#xA;    &amp;lt;POLFILE&amp;gt;    Name of the file to read&#xA;&#xA;OPTIONS:&#xA;    -h, --help       Print help information&#xA;    -V, --version    Print version information&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;More information&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/previous-versions/windows/desktop/policy/registry-policy-file-format&#34;&gt;https://docs.microsoft.com/en-us/previous-versions/windows/desktop/policy/registry-policy-file-format&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;code&gt;regdump&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: regdump [OPTIONS] &amp;lt;HIVE_FILE&amp;gt;&#xA;&#xA;Arguments:&#xA;  &amp;lt;HIVE_FILE&amp;gt;  name of the file to dump&#xA;&#xA;Options:&#xA;  -L, --log &amp;lt;LOGFILES&amp;gt;     transaction LOG file(s). This argument can be specified one or two times&#xA;  -b, --bodyfile           print as bodyfile format&#xA;  -I, --ignore-base-block  ignore the base block (e.g. if it was encrypted by some ransomware)&#xA;  -T, --hide-timestamps    hide timestamps, if output is in reg format&#xA;  -v, --verbose...         More output per occurrence&#xA;  -q, --quiet...           Less output per occurrence&#xA;  -h, --help               Print help&#xA;  -V, --version            Print version&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>tensorchord/pgvecto.rs</title>
    <updated>2023-08-11T01:35:48Z</updated>
    <id>tag:github.com,2023-08-11:/tensorchord/pgvecto.rs</id>
    <link href="https://github.com/tensorchord/pgvecto.rs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Vector database plugin for Postgres, written in Rust, specifically designed for LLM. 20x faster than pgvector&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;pgvecto.rs&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/KqswhpVgdU&#34;&gt;&lt;img alt=&#34;discord invitation link&#34; src=&#34;https://dcbadge.vercel.app/api/server/KqswhpVgdU?style=flat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/TensorChord&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/tensorchord?style=social&#34; alt=&#34;trackgit-views&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tensorchord/pgvecto.rs#contributors-&#34;&gt;&lt;img alt=&#34;all-contributors&#34; src=&#34;https://img.shields.io/github/all-contributors/tensorchord/pgvecto.rs/main&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;pgvecto.rs is a Postgres extension that provides vector similarity search functions. It is written in Rust and based on &lt;a href=&#34;https://github.com/tcdi/pgrx&#34;&gt;pgrx&lt;/a&gt;. It is currently ⚠️&lt;strong&gt;under heavy development&lt;/strong&gt;⚠️, please take care when using it in production. Read more at &lt;a href=&#34;https://modelz.ai/blog/pgvecto-rs&#34;&gt;📝our launch blog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Why use pgvecto.rs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;💃 &lt;strong&gt;Easy to use&lt;/strong&gt;: pgvecto.rs is a Postgres extension, which means that you can use it directly within your existing database. This makes it easy to integrate into your existing workflows and applications.&lt;/li&gt; &#xA; &lt;li&gt;🦀 &lt;strong&gt;Rewrite in Rust&lt;/strong&gt;: Rewriting in Rust offers benefits such as improved memory safety, better performance, and reduced &lt;strong&gt;maintenance costs&lt;/strong&gt; over time.&lt;/li&gt; &#xA; &lt;li&gt;🙋 &lt;strong&gt;Community&lt;/strong&gt;: People loves Rust We are happy to help you with any questions you may have. You could join our &lt;a href=&#34;https://discord.gg/KqswhpVgdU&#34;&gt;Discord&lt;/a&gt; to get in touch with us.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Build from source&lt;/summary&gt; &#xA; &lt;h3&gt;Install Rust and base dependency&lt;/h3&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt install -y build-essential libpq-dev libssl-dev pkg-config gcc libreadline-dev flex bison libxml2-dev libxslt-dev libxml2-utils xsltproc zlib1g-dev ccache clang git&#xA;curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Clone the Repository&lt;/h3&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/tensorchord/pgvecto.rs.git&#xA;cd pgvecto.rs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Install Postgresql and pgrx&lt;/h3&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo sh -c &#39;echo &#34;deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main&#34; &amp;gt; /etc/apt/sources.list.d/pgdg.list&#39;&#xA;wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -&#xA;sudo apt-get update&#xA;sudo apt-get -y install libpq-dev postgresql-15 postgresql-server-dev-15&#xA;cargo install cargo-pgrx --git https://github.com/tensorchord/pgrx.git --rev $(cat Cargo.toml | grep &#34;pgrx =&#34; | awk -F&#39;rev = &#34;&#39; &#39;{print $2}&#39; | cut -d&#39;&#34;&#39; -f1)&#xA;cargo pgrx init --pg15=/usr/lib/postgresql/15/bin/pg_config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Install pgvecto.rs&lt;/h3&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo pgrx install --release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;You need restart your PostgreSQL server for the changes to take effect, like &lt;code&gt;systemctl restart postgresql.service&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Install from release&lt;/summary&gt; &#xA; &lt;p&gt;Download the deb package in the release page, and type &lt;code&gt;sudo apt install vectors-pg15-*.deb&lt;/code&gt; to install the deb package.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;Configure your PostgreSQL by modifying the &lt;code&gt;shared_preload_libraries&lt;/code&gt; to include &lt;code&gt;vectors.so&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;psql -U postgres -c &#39;ALTER SYSTEM SET shared_preload_libraries = &#34;vectors.so&#34;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You need restart the PostgreSQL cluster.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo systemctl restart postgresql.service&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Connect to the database and enable the extension.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;DROP EXTENSION IF EXISTS vectors;&#xA;CREATE EXTENSION vectors;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;p&gt;pgvecto.rs allows columns of a table to be defined as vectors.&lt;/p&gt; &#xA;&lt;p&gt;The data type &lt;code&gt;vector(n)&lt;/code&gt; denotes an n-dimensional vector. The &lt;code&gt;n&lt;/code&gt; within the brackets signifies the dimensions of the vector. For instance, &lt;code&gt;vector(1000)&lt;/code&gt; would represent a vector with 1000 dimensions, so you could create a table like this.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;-- create table with a vector column&#xA;&#xA;CREATE TABLE items (&#xA;  id bigserial PRIMARY KEY,&#xA;  embedding vector(3) NOT NULL&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then populate the table with vector data as follows.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;-- insert values&#xA;&#xA;INSERT INTO items (embedding)&#xA;VALUES (&#39;[1,2,3]&#39;), (&#39;[4,5,6]&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We support three operators to calculate the distance between two vectors.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;-&amp;gt;&lt;/code&gt;: squared Euclidean distance, defined as $\Sigma (x_i - y_i) ^ 2$.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;#&amp;gt;&lt;/code&gt;: negative dot product distance, defined as $- \Sigma x_iy_i$.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;: negative squared cosine distance, defined as $- \frac{(\Sigma x_iy_i)^2}{\Sigma x_i^2 \Sigma y_i^2}$.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;-- call the distance function through operators&#xA;&#xA;-- squared Euclidean distance&#xA;SELECT &#39;[1, 2, 3]&#39; &amp;lt;-&amp;gt; &#39;[3, 2, 1]&#39;;&#xA;-- negative dot product distance&#xA;SELECT &#39;[1, 2, 3]&#39; &amp;lt;#&amp;gt; &#39;[3, 2, 1]&#39;;&#xA;-- negative square cosine distance&#xA;SELECT &#39;[1, 2, 3]&#39; &amp;lt;=&amp;gt; &#39;[3, 2, 1]&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can search for a vector simply like this.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;-- query the similar embeddings&#xA;SELECT * FROM items ORDER BY embedding &amp;lt;-&amp;gt; &#39;[3,2,1]&#39; LIMIT 5;&#xA;-- query the neighbors within a certain distance&#xA;SELECT * FROM items WHERE embedding &amp;lt;-&amp;gt; &#39;[3,2,1]&#39; &amp;lt; 5;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Indexing&lt;/h3&gt; &#xA;&lt;p&gt;You can create an index, using squared Euclidean distance with the following SQL.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;-- Using HNSW algorithm.&#xA;&#xA;CREATE INDEX ON items USING vectors (embedding l2_ops)&#xA;WITH (options = $$&#xA;capacity = 2097152&#xA;size_ram = 4294967296&#xA;storage_vectors = &#34;ram&#34;&#xA;[algorithm.hnsw]&#xA;storage = &#34;ram&#34;&#xA;m = 32&#xA;ef = 256&#xA;$$);&#xA;&#xA;--- Or using IVFFlat algorithm.&#xA;&#xA;CREATE INDEX ON items USING vectors (embedding l2_ops)&#xA;WITH (options = $$&#xA;capacity = 2097152&#xA;size_ram = 2147483648&#xA;storage_vectors = &#34;ram&#34;&#xA;[algorithm.ivf]&#xA;storage = &#34;ram&#34;&#xA;nlist = 1000&#xA;nprobe = 10&#xA;$$);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can perform a KNN search with the following SQL simply.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT *, emb &amp;lt;-&amp;gt; &#39;[0, 0, 0]&#39; AS score&#xA;FROM items&#xA;ORDER BY embedding &amp;lt;-&amp;gt; &#39;[0, 0, 0]&#39; LIMIT 10;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note, vector indexes are not loaded by default when PostgreSQL restarts. To load or unload the index, you can use &lt;code&gt;vectors_load&lt;/code&gt; and &lt;code&gt;vectors_unload&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;--- get the index name&#xA;\d items&#xA;&#xA;-- load the index&#xA;SELECT vectors_load(&#39;items_embedding_idx&#39;::regclass);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We planning to support more index types (&lt;a href=&#34;https://github.com/tensorchord/pgvecto.rs/issues/17&#34;&gt;issue here&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Welcome to contribute if you are also interested!&lt;/p&gt; &#xA;&lt;h2&gt;Reference&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;vector&lt;/code&gt; type&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;vector&lt;/code&gt; and &lt;code&gt;vector(n)&lt;/code&gt; are all legal data types, where &lt;code&gt;n&lt;/code&gt; denotes dimensions of a vector.&lt;/p&gt; &#xA;&lt;p&gt;The current implementation ignores dimensions of a vector, i.e., the behavior is the same as for vectors of unspecified dimensions.&lt;/p&gt; &#xA;&lt;p&gt;There is only one exception: indexes cannot be created on columns without specified dimensions.&lt;/p&gt; &#xA;&lt;h3&gt;Indexing&lt;/h3&gt; &#xA;&lt;p&gt;We utilize TOML syntax to express the index&#39;s configuration. Here&#39;s what each key in the configuration signifies:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Key&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;capacity&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;   &lt;td&gt;The index&#39;s capacity. The value should be greater than the number of rows in your table.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;size_ram&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;   &lt;td&gt;(Optional) The maximum amount of memory the persisent part of index can occupy.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;size_disk&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;   &lt;td&gt;(Optional) The maximum amount of disk-backed memory-mapped file size the persisent part of index can occupy.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;storage_vectors&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ram&lt;/code&gt; ensures that the vectors always stays in memory while &lt;code&gt;disk&lt;/code&gt; suggests otherwise.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;algorithm.ivf&lt;/td&gt; &#xA;   &lt;td&gt;table&lt;/td&gt; &#xA;   &lt;td&gt;If this table is set, the IVF algorithm will be used for the index.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;algorithm.ivf.storage&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;(Optional) &lt;code&gt;ram&lt;/code&gt; ensures that the persisent part of algorithm always stays in memory while &lt;code&gt;disk&lt;/code&gt; suggests otherwise.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;algorithm.ivf.nlist&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;   &lt;td&gt;(Optional) Number of cluster units.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;algorithm.ivf.nprobe&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;   &lt;td&gt;(Optional) Number of units to query.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;algorithm.hnsw&lt;/td&gt; &#xA;   &lt;td&gt;table&lt;/td&gt; &#xA;   &lt;td&gt;If this table is set, the HNSW algorithm will be used for the index.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;algorithm.hnsw.storage&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;(Optional) &lt;code&gt;ram&lt;/code&gt; ensures that the persisent part of algorithm always stays in memory while &lt;code&gt;disk&lt;/code&gt; suggests otherwise.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;algorithm.hnsw.m&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;   &lt;td&gt;(Optional) Maximum degree of the node.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;algorithm.hnsw.ef&lt;/td&gt; &#xA;   &lt;td&gt;integer&lt;/td&gt; &#xA;   &lt;td&gt;(Optional) Search scope in building.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Why not a specialty vector database?&lt;/h2&gt; &#xA;&lt;p&gt;Imagine this, your existing data is stored in a Postgres database, and you want to use a vector database to do some vector similarity search. You have to move your data from Postgres to the vector database, and you have to maintain two databases at the same time. This is not a good idea.&lt;/p&gt; &#xA;&lt;p&gt;Why not just use Postgres to do the vector similarity search? This is the reason why we build pgvecto.rs. The user journey is like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;-- Update the embedding column for the documents table&#xA;UPDATE documents SET embedding = ai_embedding_vector(content) WHERE length(embedding) = 0;&#xA;&#xA;-- Create an index on the embedding column&#xA;CREATE INDEX ON documents USING vectors (embedding l2_ops)&#xA;WITH (options = $$&#xA;capacity = 2097152&#xA;size_ram = 4294967296&#xA;storage_vectors = &#34;ram&#34;&#xA;[algorithm.hnsw]&#xA;storage = &#34;ram&#34;&#xA;m = 32&#xA;ef = 256&#xA;$$);&#xA;&#xA;-- Query the similar embeddings&#xA;SELECT * FROM documents ORDER BY embedding &amp;lt;-&amp;gt; ai_embedding_vector(&#39;hello world&#39;) LIMIT 5;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From &lt;a href=&#34;https://www.singlestore.com/blog/why-your-vector-database-should-not-be-a-vector-database/&#34;&gt;SingleStore DB Blog&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Vectors and vector search are a data type and query processing approach, not a foundation for a new way of processing data. Using a specialty vector database (SVDB) will lead to the usual problems we see (and solve) again and again with our customers who use multiple specialty systems: redundant data, excessive data movement, lack of agreement on data values among distributed components, extra labor expense for specialized skills, extra licensing costs, limited query language power, programmability and extensibility, limited tool integration, and poor data integrity and availability compared with a true DBMS.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Setting up the development environment&lt;/h2&gt; &#xA;&lt;p&gt;You could use &lt;a href=&#34;https://github.com/tensorchord/envd&#34;&gt;envd&lt;/a&gt; to set up the development environment with one command. It will create a docker container and install all the dependencies for you.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install envd&#xA;envd up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We need your help! Please check out the &lt;a href=&#34;https://github.com/tensorchord/pgvecto.rs/issues&#34;&gt;issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors ✨&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://skyzh.dev&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4198311?v=4?s=70&#34; width=&#34;70px;&#34; alt=&#34;Alex Chi&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alex Chi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tensorchord/pgvecto.rs/commits?author=skyzh&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/gaocegege&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5100735?v=4?s=70&#34; width=&#34;70px;&#34; alt=&#34;Ce Gao&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ce Gao&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorchord/pgvecto.rs/main/#business-gaocegege&#34; title=&#34;Business development&#34;&gt;💼&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/tensorchord/pgvecto.rs/main/#content-gaocegege&#34; title=&#34;Content&#34;&gt;🖋&lt;/a&gt; &lt;a href=&#34;https://github.com/tensorchord/pgvecto.rs/commits?author=gaocegege&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/VoVAllen&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/8686776?v=4?s=70&#34; width=&#34;70px;&#34; alt=&#34;Jinjing Zhou&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jinjing Zhou&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorchord/pgvecto.rs/main/#design-VoVAllen&#34; title=&#34;Design&#34;&gt;🎨&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/tensorchord/pgvecto.rs/main/#ideas-VoVAllen&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/tensorchord/pgvecto.rs/main/#projectManagement-VoVAllen&#34; title=&#34;Project Management&#34;&gt;📆&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://blog.mapotofu.org/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/12974685?v=4?s=70&#34; width=&#34;70px;&#34; alt=&#34;Keming&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Keming&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tensorchord/pgvecto.rs/issues?q=author%3Akemingy&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt; &lt;a href=&#34;https://github.com/tensorchord/pgvecto.rs/commits?author=kemingy&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/tensorchord/pgvecto.rs/commits?author=kemingy&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/tensorchord/pgvecto.rs/main/#ideas-kemingy&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/tensorchord/pgvecto.rs/main/#infra-kemingy&#34; title=&#34;Infrastructure (Hosting, Build-Tools, etc)&#34;&gt;🚇&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://usamoi.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/79277854?v=4?s=70&#34; width=&#34;70px;&#34; alt=&#34;Usamoi&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Usamoi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tensorchord/pgvecto.rs/commits?author=usamoi&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/tensorchord/pgvecto.rs/main/#ideas-usamoi&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/odysa&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/22908409?v=4?s=70&#34; width=&#34;70px;&#34; alt=&#34;odysa&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;odysa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tensorchord/pgvecto.rs/commits?author=odysa&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://github.com/tensorchord/pgvecto.rs/commits?author=odysa&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://yihong.run&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/15976103?v=4?s=70&#34; width=&#34;70px;&#34; alt=&#34;yihong&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;yihong&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/tensorchord/pgvecto.rs/commits?author=yihong0618&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA; &lt;tfoot&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; size=&#34;13px&#34; colspan=&#34;7&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/all-contributors/all-contributors-cli/1b8533af435da9854653492b1327a23a4dbd0a10/assets/logo-small.svg?sanitize=true&#34;&gt; &lt;a href=&#34;https://all-contributors.js.org/docs/en/bot/usage&#34;&gt;Add your contributions&lt;/a&gt;  &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tfoot&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to the following projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tcdi/pgrx&#34;&gt;pgrx&lt;/a&gt; - Postgres extension framework in Rust&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pgvector/pgvector&#34;&gt;pgvector&lt;/a&gt; - Postgres extension for vector similarity search written in C&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>