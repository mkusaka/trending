<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-08T01:41:15Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ferrocene/ferrocene</title>
    <updated>2023-10-08T01:41:15Z</updated>
    <id>tag:github.com,2023-10-08:/ferrocene/ferrocene</id>
    <link href="https://github.com/ferrocene/ferrocene" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Source code of Ferrocene, safety-critical Rust toolchain&lt;/p&gt;&lt;hr&gt;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img height=&#34;75&#34; src=&#34;https://github.com/ferrocene/ferrocene/raw/main/ferrocene/logo.svg?sanitize=true&#34; alt=&#34;Ferrocene Logo: A circle between two planes, representing the chemical compound of the name Ferrocene, with the name written next to it.&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Ferrocene is a toolchain to enable the use of the Rust programming language in safety-critical environments. It is a proper downstream of the main Rust compiler - rustc, maintained by the Rust project on &lt;a href=&#34;https://github.com/rust-lang/rust&#34;&gt;&lt;code&gt;rust-lang/rust&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The mission of Ferrocene is to bring open source practices to safety-critical industries and improve the Rust open source ecosystem through safety-critical practices.&lt;/p&gt; &#xA;&lt;p&gt;Ferrocene is maintained and supported by the world-renowed experts at Ferrous Systems. Both standard and long-term support are available. Check &lt;a href=&#34;https://ferrous-systems.com/ferrocene&#34;&gt;our website&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Current status&lt;/h2&gt; &#xA;&lt;p&gt;Ferrocene is currently in the final stages of qualification for ISO 26262 ASIL-D and IEC 61508 SiL4. Qualification for other standards and areas, such as railway and aerospace, are planned.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Prebuilt Ferrocene binaries are available for customers and partners. You can visit &lt;a href=&#34;https://releases.ferrocene.dev&#34;&gt;releases.ferrocene.dev&lt;/a&gt; to download the release archives after logging in with your Ferrocene account.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation and Procedures&lt;/h2&gt; &#xA;&lt;p&gt;The documentation of the Ferrocene toolchain and its source can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/ferrocene/ferrocene/main/ferrocene/doc/&#34;&gt;&lt;code&gt;ferrocene/doc&lt;/code&gt; directory&lt;/a&gt;. The documentation contains the projects procedures, its quality management measures and current testing coverage.&lt;/p&gt; &#xA;&lt;p&gt;Rendered versions of the documentation are also available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.ferrocene.dev&#34;&gt;docs.ferrocene.dev&lt;/a&gt;: available to customers and partners, contains the documentation for all release channels.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://public-docs.ferrocene.dev/main&#34;&gt;public-docs.ferrocene.dev/main&lt;/a&gt;: publicly available, contains the documentation for the latest commit merged on the &lt;code&gt;main&lt;/code&gt; branch.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Multiple levels of support are available for paying customers, provided by &lt;a href=&#34;https://ferrous-systems.com&#34;&gt;Ferrous Systems&lt;/a&gt;. You can log into &lt;a href=&#34;https://customers.ferrocene.dev&#34;&gt;customers.ferrocene.dev&lt;/a&gt; to learn about your support plan, and how to send support requests.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution policy&lt;/h2&gt; &#xA;&lt;p&gt;As a downstream of the Rust project, Ferrocene prefers to keep the compiler unmodified. This means that general, contributions to the compiler or its tools and discussions should be kept to &lt;a href=&#34;https://github.com/rust-lang/rust&#34;&gt;&lt;code&gt;rust-lang/rust&lt;/code&gt;&lt;/a&gt;. However, Ferrocene does serve as a community of peers to propose and produce changes useful in safety-critical changes towards the project.&lt;/p&gt; &#xA;&lt;p&gt;Contributions to qualification activities and manuals are welcome, but generally gated. Contribution is open to industry and academic partners, customers and project employees.&lt;/p&gt; &#xA;&lt;p&gt;You can use the &lt;a href=&#34;https://github.com/ferrocene/ferrocene/issues&#34;&gt;Ferrocene issue tracker&lt;/a&gt; to file an issue for the materials provided by the Ferrocene developers. Please note that the issue tracker is not a support channel.&lt;/p&gt; &#xA;&lt;p&gt;Please note that Ferrocene is governed under the Apache-2.0 license and contribution policies apply to the issue tracker as well as the codebase itself.&lt;/p&gt; &#xA;&lt;h2&gt;Additional services&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ferrous-systems.com&#34;&gt;Ferrous Systems&lt;/a&gt; provides services built and tailored around Ferrocene:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Trainings:&lt;/strong&gt; trainings on Rust and Ferrocene, particularly for teams, are available. Trainings can be custom tailored to your needs. &lt;a href=&#34;https://ferrous-systems.com/training&#34;&gt;Check out our training offerings.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Inclusion in SDKs:&lt;/strong&gt; Ferrocene is available to be integrated in your toolchain! Please &lt;a href=&#34;https://ferrous-systems.com/contact#ferrocene&#34;&gt;get in touch&lt;/a&gt; to learn more.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Tailoring, enabling and integration within your system&lt;/strong&gt;: We&#39;re more than happy to enable Rust support in your operating system or tool, including porting the Rust compiler to the targets you need and qualifying them in Ferrocene. &lt;a href=&#34;https://ferrous-systems.com/contact#ferrocene&#34;&gt;Get in touch&lt;/a&gt; to learn more.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Infrastructure support&lt;/strong&gt;: Ferrocene is built for a DevOps world. Rust for your builds in the cloud is a first-class citizen for us, and we can provide support tailored to you. &lt;a href=&#34;https://ferrous-systems.com/contact#ferrocene&#34;&gt;Get in touch&lt;/a&gt; for more information.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;Please follow &lt;a href=&#34;https://github.com/ferrocene/ferrocene/security/policy&#34;&gt;Ferrocene&#39;s security policy&lt;/a&gt; if you discover a security vulnerability affecting Ferrocene.&lt;/p&gt; &#xA;&lt;h2&gt;License and trademark&lt;/h2&gt; &#xA;&lt;p&gt;The contents of the repository are primarily licensed under either the MIT or Apache 2.0 license: users can choose either license, and contributors must license their changes under both licenses. Note that the repository contains files authored by third parties and published under different licenses, see the annotations next to those files.&lt;/p&gt; &#xA;&lt;p&gt;Ferrocene is a registered trademark of Critical Section GmbH, a subsidiary of Ferrous Systems. See our &lt;a href=&#34;https://raw.githubusercontent.com/ferrocene/ferrocene/main/TRADEMARK.md&#34;&gt;trademark policy&lt;/a&gt; for the guidelines on the use of the trademark.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>djc/askama</title>
    <updated>2023-10-08T01:41:15Z</updated>
    <id>tag:github.com,2023-10-08:/djc/askama</id>
    <link href="https://github.com/djc/askama" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Type-safe, compiled Jinja-like templates for Rust&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Askama&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.rs/askama/&#34;&gt;&lt;img src=&#34;https://docs.rs/askama/badge.svg?sanitize=true&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/askama&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/askama.svg?sanitize=true&#34; alt=&#34;Latest version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/djc/askama/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/djc/askama/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/ZucwjE6bmT&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/976380008299917365?logo=discord&#34; alt=&#34;Chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Askama implements a template rendering engine based on &lt;a href=&#34;https://jinja.palletsprojects.com/&#34;&gt;Jinja&lt;/a&gt;. It generates Rust code from your templates at compile time based on a user-defined &lt;code&gt;struct&lt;/code&gt; to hold the template&#39;s context. See below for an example, or read &lt;a href=&#34;https://djc.github.io/askama/&#34;&gt;the book&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&#34;Pretty exciting. I would love to use this already.&#34;&lt;/strong&gt; -- &lt;a href=&#34;http://lucumr.pocoo.org/&#34;&gt;Armin Ronacher&lt;/a&gt;, creator of Jinja&lt;/p&gt; &#xA;&lt;p&gt;All feedback welcome. Feel free to file bugs, requests for documentation and any other feedback to the &lt;a href=&#34;https://github.com/djc/askama/issues&#34;&gt;issue tracker&lt;/a&gt; or &lt;a href=&#34;https://twitter.com/djco/&#34;&gt;tweet me&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Askama was created by and is maintained by Dirkjan Ochtman. If you are in a position to support ongoing maintenance and further development or use it in a for-profit context, please consider supporting my open source work on &lt;a href=&#34;https://www.patreon.com/dochtman&#34;&gt;Patreon&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Feature highlights&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Construct templates using a familiar, easy-to-use syntax&lt;/li&gt; &#xA; &lt;li&gt;Benefit from the safety provided by Rust&#39;s type system&lt;/li&gt; &#xA; &lt;li&gt;Template code is compiled into your crate for &lt;a href=&#34;https://github.com/djc/template-benchmarks-rs&#34;&gt;optimal performance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Optional built-in support for Actix, Axum, Gotham, Mendes, Rocket, tide, and warp web frameworks&lt;/li&gt; &#xA; &lt;li&gt;Debugging features to assist you in template development&lt;/li&gt; &#xA; &lt;li&gt;Templates must be valid UTF-8 and produce UTF-8 when rendered&lt;/li&gt; &#xA; &lt;li&gt;IDE support available in &lt;a href=&#34;https://plugins.jetbrains.com/plugin/16591-askama-template-support&#34;&gt;JetBrains products&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Works on stable Rust&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Supported in templates&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Template inheritance&lt;/li&gt; &#xA; &lt;li&gt;Loops, if/else statements and include support&lt;/li&gt; &#xA; &lt;li&gt;Macro support&lt;/li&gt; &#xA; &lt;li&gt;Variables (no mutability allowed)&lt;/li&gt; &#xA; &lt;li&gt;Some built-in filters, and the ability to use your own&lt;/li&gt; &#xA; &lt;li&gt;Whitespace suppressing with &#39;-&#39; markers&lt;/li&gt; &#xA; &lt;li&gt;Opt-out HTML escaping&lt;/li&gt; &#xA; &lt;li&gt;Syntax customization&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to get started&lt;/h2&gt; &#xA;&lt;p&gt;First, add the Askama dependency to your crate&#39;s &lt;code&gt;Cargo.toml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo add askama&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now create a directory called &lt;code&gt;templates&lt;/code&gt; in your crate root. In it, create a file called &lt;code&gt;hello.html&lt;/code&gt;, containing the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Hello, {{ name }}!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In any Rust file inside your crate, add the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;use askama::Template; // bring trait in scope&#xA;&#xA;#[derive(Template)] // this will generate the code...&#xA;#[template(path = &#34;hello.html&#34;)] // using the template in this path, relative&#xA;                                 // to the `templates` dir in the crate root&#xA;struct HelloTemplate&amp;lt;&#39;a&amp;gt; { // the name of the struct can be anything&#xA;    name: &amp;amp;&#39;a str, // the field name should match the variable name&#xA;                   // in your template&#xA;}&#xA;&#xA;fn main() {&#xA;    let hello = HelloTemplate { name: &#34;world&#34; }; // instantiate your struct&#xA;    println!(&#34;{}&#34;, hello.render().unwrap()); // then render it.&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should now be able to compile and run this code.&lt;/p&gt; &#xA;&lt;p&gt;Review the &lt;a href=&#34;https://github.com/djc/askama/tree/main/testing&#34;&gt;test cases&lt;/a&gt; for more examples.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Reamd7/notion-zh_CN</title>
    <updated>2023-10-08T01:41:15Z</updated>
    <id>tag:github.com,2023-10-08:/Reamd7/notion-zh_CN</id>
    <link href="https://github.com/Reamd7/notion-zh_CN" rel="alternate"></link>
    <summary type="html">&lt;p&gt;notion 中文化&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Window / Mac 版本已经更新，请使用更新版本&lt;/h1&gt; &#xA;&lt;h1&gt;notion-zh_CN 是什么？&lt;/h1&gt; &#xA;&lt;p&gt;notion-zh_CN 是对notion的汉化脚本。&lt;/p&gt; &#xA;&lt;h2&gt;功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持 网页端 ( 油猴脚本 ) + 桌面端 ( win / mac ) + 安卓端 汉化脚本&lt;/li&gt; &#xA; &lt;li&gt;（很久没有维护）提供cloudflare worker 版本代理 notion.so 域名 这是一个&lt;strong&gt;平台无关&lt;/strong&gt;（IOS 上的safari也能直接使用）的汉化方式，只要你自己部署cloudflare worker，就可以使用。附带cf代理&lt;strong&gt;加速&lt;/strong&gt;的能力。 &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;其实这里应该可以做域名映射到notion.so的访问的。(从而实现全平台汉化)&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;为什么要做这个项目？&lt;/h1&gt; &#xA;&lt;p&gt;Notion 已经有了中文语料，让用户能够提前使用中文语料&lt;/p&gt; &#xA;&lt;h1&gt;如何使用?&lt;/h1&gt; &#xA;&lt;h2&gt;网页端&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;h3&gt;安装油猴插件&lt;/h3&gt; &lt;p&gt;此处提供搜索到知乎的一篇教程：&lt;a href=&#34;https://zhuanlan.zhihu.com/p/128453110&#34;&gt;https://zhuanlan.zhihu.com/p/128453110&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;安装油猴脚本&lt;/h3&gt; &lt;p&gt;打开链接：&lt;a href=&#34;https://greasyfork.org/zh-CN/scripts/430116-notion-%E5%AE%8C%E5%85%A8%E4%B8%AD%E6%96%87%E5%8C%96-%E5%9F%BA%E4%BA%8E%E9%9F%A9%E8%AF%AD%E7%89%88%E6%9C%AC-%E4%BD%BF%E7%94%A8%E8%85%BE%E8%AE%AFapi%E6%9C%BA%E7%BF%BB&#34;&gt;https://greasyfork.org/zh-CN/scripts/430116-notion-%E5%AE%8C%E5%85%A8%E4%B8%AD%E6%96%87%E5%8C%96-%E5%9F%BA%E4%BA%8E%E9%9F%A9%E8%AF%AD%E7%89%88%E6%9C%AC-%E4%BD%BF%E7%94%A8%E8%85%BE%E8%AE%AFapi%E6%9C%BA%E7%BF%BB&lt;/a&gt; 。然后点击安装。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;体验汉化效果&lt;/h3&gt; &lt;p&gt;&lt;a href=&#34;https://www.notion.so&#34;&gt;https://www.notion.so&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;桌面端&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;手动注入：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;windows&lt;/h3&gt; &#xA;&lt;h4&gt;自动挡版本&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;（替换原有update.ps1文件，任何版本都可以自动注入最新的notion汉化）&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;下载 &lt;a href=&#34;https://github.com/Reamd7/notion-zh_CN/releases/tag/2.4.20-win-mac-asar&#34;&gt;release&lt;/a&gt; ，更新 env.toml 中 folder 字段为自己 notion 安装目录，运行 update_asar.exe。&lt;/p&gt; &#xA;&lt;p&gt;如果有自动注入 notion enhancer 的需求请提相关 issues, 毕竟官方改成asar文件了。&lt;/p&gt; &#xA;&lt;p&gt;!! 注意 window 下路径一定不能用 &lt;code&gt;\&lt;/code&gt; 分割 ，要用 &lt;code&gt;/&lt;/code&gt;. !! 例如:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# 这是 env.toml 内容，folder 不能为 C:\Users\用户名\AppData\Local\Programs\Notion，必须为 C:/Users/用户名/AppData/Local/Programs/Notion&#xA;version = &#34;2.4.21&#34;&#xA;folder = &#34;C:/Users/用户名/AppData/Local/Programs/Notion&#34;&#xA;remote_url=&#34;https://greasyfork.org/scripts/430116-notion-zh-cn-notion%E7%9A%84%E6%B1%89%E5%8C%96%E8%84%9A%E6%9C%AC/code/Notion-zh_CN%20notion%E7%9A%84%E6%B1%89%E5%8C%96%E8%84%9A%E6%9C%AC.user.js&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;手动挡&lt;/h4&gt; &#xA;&lt;p&gt;按照 &lt;a href=&#34;https://github.com/Reamd7/notion-zh_CN/releases/tag/2.4.20-handmade&#34;&gt;release&lt;/a&gt; 食用。&lt;/p&gt; &#xA;&lt;!-- 1. （自**2.0.4**版本后，任意语言都等价于中文了）&#xA;2. notion 安装目录：`C:\Users\用户名\AppData\Local\Programs\Notion\`&#xA;3. 打开`C:\Users\用户名\AppData\Local\Programs\Notion\resources\app\renderer`文件夹&#xA;4. 下载 `notion-zh_CN.js` 到上述文件夹（renderer）&#xA;5. 打开 `preload.js`&#xA;6. 在最后一行加上&#xA;   ```js&#xA;   //# sourceMappingURL=preload.js.map&#xA;    require(&#34;./notion-zh_CN&#34;) // 添加该行&#xA;   ```&#xA;7. 重启&#xA;&#xA;- 上述操作也可以使用 PowerShell 命令来完成。  &#xA;  命令执行完成后，在 Notion 中使用 &lt;kbd&gt;CTRL&lt;/kbd&gt;+&lt;kbd&gt;R&lt;/kbd&gt; 可以热更新界面。&#xA;   ```powershell&#xA;   Invoke-WebRequest -Uri &#34;https://github.com/Reamd7/notion-zh_CN/releases/latest/download/notion-zh_CN.js&#34; -OutFile &#34;$HOME\AppData\Local\Programs\Notion\resources\app\renderer\notion-zh_CN.js&#34;&#xA;   Add-Content &#34;$HOME\AppData\Local\Programs\Notion\resources\app\renderer\preload.js&#34; &#39;require(&#34;./notion-zh_CN&#34;)&#39;&#xA;   ``` --&gt; &#xA;&lt;h3&gt;Mac&lt;/h3&gt; &#xA;&lt;h4&gt;自动挡版本&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;（替换原有update.sh文件，任何版本都可以自动注入最新的notion汉化）&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;下载 &lt;a href=&#34;https://github.com/Reamd7/notion-zh_CN/releases/tag/2.4.20-win-mac-asar&#34;&gt;release&lt;/a&gt; ，更新 env.toml 中 folder 字段为自己 notion 安装目录, 改成 &lt;code&gt;~&lt;/code&gt; 会自动识别，运行 &lt;code&gt;update_asar_intel_mac&lt;/code&gt; 或 &lt;code&gt;update_asar_m1_mac&lt;/code&gt; 按平台选择&lt;/p&gt; &#xA;&lt;p&gt;如果有自动注入 notion enhancer 的需求请提相关 issues, 毕竟官方改成asar文件了。&lt;/p&gt; &#xA;&lt;h2&gt;cloudflare worker&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;不建议使用。不希望推广。有风险。你需要知道你在干什么。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;首页：&lt;a href=&#34;https://workers.cloudflare.com&#34;&gt;https://workers.cloudflare.com&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;注册，登陆，&lt;code&gt;Start building&lt;/code&gt;，取一个子域名，&lt;code&gt;Create a Worker&lt;/code&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;复制 &lt;a href=&#34;https://github.com/Reamd7/notion-zh_CN/raw/main/worker.js&#34;&gt;worker.js&lt;/a&gt; 到左侧代码框，修改&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const BaseUrl = &#34;xxxx.子域名.workers.dev&#34; // 修改为自己的子域名&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Save and deploy&lt;/code&gt;。如果正常，右侧应显示提示框： Mismatch between origin and baseUrl (dev). 好的（这里就证明汉化成功了）&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;以后可直接访问 &lt;code&gt;https://xxxx.子域名.workers.dev&lt;/code&gt;。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;安卓端&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;下载apk：&lt;a href=&#34;https://github.com/Reamd7/notion-zh_CN/raw/main/apk/Notion_0.6.1122.beta(7122)_zh_cn.apk&#34;&gt;https://github.com/Reamd7/notion-zh_CN/blob/main/apk/Notion_0.6.1122.beta(7122)_zh_cn.apk&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;大家可以做什么？&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;优化汉化语言&lt;/strong&gt;。都是机器翻译，看到不通畅的句子欢迎提issue/pr直接改了 （修改 &lt;strong&gt;&lt;code&gt;json/zh.json&lt;/code&gt;&lt;/strong&gt; 文件，了解之前，先找到原有的英文，韩文对照一下再更新翻译。）&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;呼吁：&lt;/h1&gt; &#xA;&lt;p&gt;提高付费率，支持你所支持的软让他发展更好，这样国内市场才会更受重视，而不是只是白嫖，买淘宝，搞教育账户。&lt;/p&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#Reamd7/notion-zh_CN&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=Reamd7/notion-zh_CN&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;风险提示：使用 cloudflare worker 的同学，被官方检测出来并封号与我无关，希望自己看明白代码做了什么，以及为什么会被检测出来。 其他方式的，都是使用官方国际化方案进行国际化的，而且在本地进行操作不通过任何服务器——理论上除非故意钓鱼否则不会封你。 钓鱼：主动收集你是不是用了中文版国际化字段，而且，对比你并没有中文版权限。&lt;/p&gt; &#xA; &lt;p&gt;如果担心有问题，可以等待官方中文版，可以稍微学习网页开发，可以询问网页开发朋友，项目都是开源的。究竟做了什么操作，对notion 应用本体有什么影响，没有理由的担心只能体现对别人的不信任。&lt;/p&gt; &#xA; &lt;p&gt;该项目仅用于学习，如有侵权24h内会马上删除。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;更新日志：&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2.4.20 补充 window 更新目录文件之后的 自动注入软件 / 手动注入教程&lt;/li&gt; &#xA; &lt;li&gt;2.4.2 &lt;strong&gt;翻译开始跟随着官方中文词条啦!!!!!&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;2.4.1 支持 ios / macos user script&lt;/li&gt; &#xA; &lt;li&gt;2.3.1 权衡后，安卓版本使用新的 runtime 注入方式，实现全部的（包括键盘都能够汉化的方式）但有首页白屏事件较长的问题。&lt;/li&gt; &#xA; &lt;li&gt;2.3.0 支持使用 cloudflare worker 进行代理 notion.so 域名进行加速及国际化&lt;/li&gt; &#xA; &lt;li&gt;2.2.0 支持 安卓版本notion，与官方版共存 的汉化！&lt;/li&gt; &#xA; &lt;li&gt;2.1.0：支持中文版快捷命令！支持拼音输入的时候显示快捷命令！ &lt;img src=&#34;https://s3.us-west-2.amazonaws.com/secure.notion-static.com/205477fc-c9df-48f2-a816-50c8809f244b/%E6%97%A0%E6%A0%87%E9%A2%98.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;amp;X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210821%2Fus-west-2%2Fs3%2Faws4_request&amp;amp;X-Amz-Date=20210821T053807Z&amp;amp;X-Amz-Expires=86400&amp;amp;X-Amz-Signature=916007db665a09560b8cde53c10480377a1f58eed05a57f99853496dfb6c8729&amp;amp;X-Amz-SignedHeaders=host&amp;amp;response-content-disposition=filename%20%3D%22%25E6%2597%25A0%25E6%25A0%2587%25E9%25A2%2598.png%22&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;2.0.4: 彻底支持无论是默认英文还是韩文都会生效的汉化脚本（2021/08/19 油猴剧本 + win 客户端 + mac 客户端测试通过），统一 win mac 网页端实现。&lt;/li&gt; &#xA; &lt;li&gt;2.0.3：支持切换到韩文之后帮助文档还原到默认英文版本&lt;/li&gt; &#xA; &lt;li&gt;2.0.1：支持mac客户端（英文）&lt;/li&gt; &#xA; &lt;li&gt;2.0.0: 支持win客户端（韩文） + 油猴脚本&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>