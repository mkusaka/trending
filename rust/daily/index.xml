<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-30T01:37:38Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>vizia/vizia</title>
    <updated>2024-01-30T01:37:38Z</updated>
    <id>tag:github.com,2024-01-30:/vizia/vizia</id>
    <link href="https://github.com/vizia/vizia" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A declarative GUI library written in Rust&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;https://raw.githubusercontent.com/vizia/vizia/main/assets/branding/vizia-logo-01.png&#34; width=&#34;128px&#34; height=&#34;128px&#34;&gt;&#xA; &lt;h1&gt;Vizia&lt;/h1&gt;&#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;!-- License --&gt; &#xA; &lt;a href=&#34;https://github.com/vizia/vizia/raw/main/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/crates/l/vizia&#34; alt=&#34;License&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- Docs --&gt; &#xA; &lt;a href=&#34;https://docs.vizia.dev&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/docs-website-blue&#34; alt=&#34;Documentation&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- CI --&gt; &#xA; &lt;a href=&#34;https://github.com/vizia/vizia/actions/workflows/build.ym&#34;&gt; &lt;img src=&#34;https://github.com/vizia/vizia/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;CI status&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- docs (TODO) --&gt; &#xA; &lt;!-- Audit --&gt; &#xA; &lt;a href=&#34;https://github.com/vizia/vizia/actions/workflows/audit.yml&#34;&gt; &lt;img src=&#34;https://github.com/vizia/vizia/actions/workflows/audit.yml/badge.svg?sanitize=true&#34; alt=&#34;Audit status&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- Discord --&gt; &#xA; &lt;a href=&#34;https://discord.gg/aNkTPsRm2w&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/791142189005537332.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&#34; alt=&#34;Discord Link&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;!-- [![Crates.io](https://img.shields.io/crates/v/vizia)](https://crates.io/crates/vizia) --&gt; &#xA;&lt;!-- [![docs.rs](https://img.shields.io/badge/docs-website-blue)](https://docs.rs/vizia/) --&gt; &#xA;&lt;br&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;A declarative desktop GUI framework for the &lt;a href=&#34;https://www.rust-lang.org/&#34;&gt;Rust&lt;/a&gt; programming language.&lt;/h4&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h3&gt; &lt;a href=&#34;https://book.vizia.dev/&#34;&gt; Book &lt;/a&gt; &lt;span&gt; • &lt;/span&gt; &lt;a href=&#34;https://docs.vizia.dev/&#34;&gt; Docs &lt;/a&gt; &lt;span&gt; • &lt;/span&gt; &lt;a href=&#34;https://demo.vizia.dev/&#34;&gt; Demo &lt;/a&gt; &lt;span&gt; • &lt;/span&gt; &lt;a href=&#34;https://discord.gg/aNkTPsRm2w&#34;&gt; Discord &lt;/a&gt; &lt;/h3&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;strong&gt;Cross-platform (Windows, Linux, MacOS)&lt;/strong&gt;&lt;/h3&gt; Build desktop applications which look and behave the same for Windows, Mac, and Linux.&lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;strong&gt;Declarative&lt;/strong&gt;&lt;/h3&gt; Write GUI code in a declarative way in pure Rust (no DSL macros).&lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;strong&gt;Reactive&lt;/strong&gt;&lt;/h3&gt; Views derive from application state. Change the state and the views which bind to it update automatically.&lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;strong&gt;Flexible layout&lt;/strong&gt;&lt;/h3&gt; Create flexible layouts which adapt to changes in size. Powered by &lt;a href=&#34;https://github.com/vizia/morphorm&#34;&gt;morphorm&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;strong&gt;Powerful styling&lt;/strong&gt;&lt;/h3&gt; Take advantage of CSS with hot-reloading to fully customize the style of your application.&lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;strong&gt;Animations&lt;/strong&gt;&lt;/h3&gt; Bring your application to life with animatable style properties.&lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;strong&gt;Built-in views and themes&lt;/strong&gt;&lt;/h3&gt; Utilize over 25 ready-made views as well as two built-in themes (light and dark) to get you started. Includes 4250+ icons, provided by &lt;a href=&#34;https://tabler-icons.io&#34;&gt;Tabler Icons&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;strong&gt;Accessibility&lt;/strong&gt;&lt;/h3&gt; Make you applications accessible to assistive technologies such as screen readers, powered by &lt;a href=&#34;https://github.com/accesskit/accesskit&#34;&gt;accesskit&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;strong&gt;Localization&lt;/strong&gt;&lt;/h3&gt; Adapt your application to different locales, including translating text with &lt;a href=&#34;https://github.com/projectfluent/fluent-rs&#34;&gt;fluent&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;strong&gt;GPU accelerated rendering&lt;/strong&gt;&lt;/h3&gt; Vizia leverages the GPU for fast graphical updates, powered by &lt;a href=&#34;https://github.com/femtovg/femtovg&#34;&gt;femtovg&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;&lt;strong&gt;Audio plugin development&lt;/strong&gt;&lt;/h3&gt; Vizia provides an alternative &lt;a href=&#34;https://github.com/RustAudio/baseview&#34;&gt;baseview&lt;/a&gt; windowing backend for audio plugin development, for example with the &lt;a href=&#34;https://github.com/robbert-vdh/nih-plug&#34;&gt;nih-plug&lt;/a&gt; framework.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;At a Glance&lt;/h1&gt; &#xA;&lt;p&gt;A simple counter application. Run with &lt;code&gt;cargo run --example counter&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust,&#34;&gt;use vizia::prelude::*;&#xA;&#xA;// Define some model data&#xA;#[derive(Lens)]&#xA;pub struct AppData {&#xA;    count: i32,&#xA;}&#xA;&#xA;// Define events to mutate the data&#xA;pub enum AppEvent {&#xA;    Increment,&#xA;}&#xA;&#xA;// Describe how the data is mutated in response to events&#xA;impl Model for AppData {&#xA;    fn event(&amp;amp;mut self, _: &amp;amp;mut EventContext, event: &amp;amp;mut Event) {&#xA;        event.map(|app_event, _| match app_event {&#xA;            AppEvent::Increment =&amp;gt; {&#xA;                self.count += 1;&#xA;            }&#xA;        });&#xA;    }&#xA;}&#xA;&#xA;fn main() {&#xA;    // Create an application&#xA;    Application::new(|cx| {&#xA;&#xA;        // Build the model data into the tree&#xA;        AppData { count: 0 }.build(cx);&#xA;&#xA;        // Declare views which make up the UI&#xA;        HStack::new(cx, |cx| {&#xA;          &#xA;            // Declare a button which emits an event&#xA;            Button::new(cx, |cx| cx.emit(AppEvent::Increment), |cx| Label::new(cx, &#34;Increment&#34;));&#xA;&#xA;            // Declare a label which is bound to part of the model, updating when it changes&#xA;            Label::new(cx, AppData::count).width(Pixels(50.0));&#xA;        })&#xA;        .child_space(Stretch(1.0))  // Apply style and layout modifiers&#xA;        .col_between(Pixels(50.0));&#xA;    })&#xA;    .title(&#34;Counter&#34;) // Configure window peoperties&#xA;    .inner_size((400, 100))&#xA;    .run();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;https://raw.githubusercontent.com/vizia/vizia/main/assets/images/counter.png&#34; width=&#34;400px&#34; height=&#34;130px&#34;&gt;&#xA;&lt;/div&gt; &#xA;&lt;h1&gt;Learning&lt;/h1&gt; &#xA;&lt;h2&gt;Book&lt;/h2&gt; &#xA;&lt;p&gt;A quickstart guide for vizia is available &lt;a href=&#34;https://book.vizia.dev&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Docs&lt;/h2&gt; &#xA;&lt;p&gt;Auto-generated code documentation can be found &lt;a href=&#34;https://docs.vizia.dev&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;A list of &lt;a href=&#34;https://github.com/vizia/vizia/tree/main/examples&#34;&gt;examples&lt;/a&gt; is included in the repository.&lt;/p&gt; &#xA;&lt;p&gt;To run an example with the &lt;a href=&#34;https://github.com/rust-windowing/winit&#34;&gt;winit&lt;/a&gt; (default) windowing backend:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo run --release --example name_of_example&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Baseview&lt;/h3&gt; &#xA;&lt;p&gt;To run an example with the &lt;a href=&#34;https://github.com/RustAudio/baseview&#34;&gt;baseview&lt;/a&gt; windowing backend:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo run --release --example name_of_example --no-default-features --features baseview&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Web&lt;/h3&gt; &#xA;&lt;p&gt;To run an example as a web application, first ensure that the &lt;code&gt;wasm32-unknown-unknown&lt;/code&gt; toolchain is installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rustup target add wasm32-unknown-unknown&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run an example with the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo run-wasm --release --example name_of_example&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Some examples are not compatible with the web target and will intentionally panic if run on web.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Contributing and Community&lt;/h1&gt; &#xA;&lt;p&gt;For help with vizia, or to get involved with contributing to the project, come join us on &lt;a href=&#34;https://discord.gg/aNkTPsRm2w&#34;&gt;our discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License and Attribution&lt;/h1&gt; &#xA;&lt;p&gt;Vizia is licensed under &lt;a href=&#34;https://github.com/vizia/vizia/raw/main/LICENSE&#34;&gt;MIT&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Vizia logo designed by &lt;a href=&#34;https://github.com/LunaeSomnia&#34;&gt;Lunae Somnia&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>