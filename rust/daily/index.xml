<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-24T01:46:26Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bramblex/niva</title>
    <updated>2023-05-24T01:46:26Z</updated>
    <id>tag:github.com,2023-05-24:/bramblex/niva</id>
    <link href="https://github.com/bramblex/niva" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一个基于 Tauri WRY 跨端 Webview 库的超轻量极易用的跨端应用开发框架。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bramblex/niva/main/theme/logo_24x24.png&#34; alt=&#34;Niva&#34;&gt; Niva&lt;/h1&gt; &#xA;&lt;p&gt;基于 Tauri WRY 跨端 Webview 库的超轻量极易用的跨端应用开发框架。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bramblex/niva/main/screenshots/screenshot1.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;下载： &lt;a href=&#34;https://github.com/bramblex/niva/releases&#34;&gt;https://github.com/bramblex/niva/releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;文档： &lt;a href=&#34;https://bramblex.github.io/niva/docs/intro&#34;&gt;https://bramblex.github.io/niva/docs/intro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;快速上手： &lt;a href=&#34;https://bramblex.github.io/niva/docs/tutorial/new-project&#34;&gt;https://bramblex.github.io/niva/docs/tutorial/new-project&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;目标&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;超轻量 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;构建的桌面应用最小只有 3MB，仅有 Electron 的 1/10。&lt;/li&gt; &#xA;   &lt;li&gt;Niva 仅依赖系统原生的 Webview，不依赖 Chromium 或者 Node.js，极致的轻量。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;极易用 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;仅使用前端技术，不需要学习复杂的 Node.js 和 Electron API 也不需要复杂的配置，即可构建出一个桌面应用。&lt;/li&gt; &#xA;   &lt;li&gt;构建单可执行文件，无需安装，点击即用。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;图形化 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Niva 提供图形化界面的开发工具，一键点击构建桌面应用，无需复杂的命令行操作，也无需安装 Node 环境。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;跨平台 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;同时支持 Windows、macOS，无需额外的配置，即可构建出跨平台的桌面应用。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;亮点&lt;/h2&gt; &#xA;&lt;h3&gt;极低的上手难度&lt;/h3&gt; &#xA;&lt;p&gt;简单项目（没有使用 webpack 等构建工具的简单签单项目），还是常见的 Vue 项目或者 React 项目，无需额外配置，一键拖入，一键构建。&lt;/p&gt; &#xA;&lt;h3&gt;灵活的功能&lt;/h3&gt; &#xA;&lt;p&gt;支持单窗口、多窗口、浮窗、窗口后台运行等多种场景。&lt;/p&gt; &#xA;&lt;h3&gt;丰富的配置&lt;/h3&gt; &#xA;&lt;p&gt;丰富的配置，窗口大小、窗口标题、窗口图标、窗口菜单、窗口是否可缩放、窗口是否可拖动、窗口是否可关闭、窗口是否可最大化、窗口是否可最小化等等都可以配置。全局快捷键、系统托盘图标等等也可以进行配置。详细选项文档 &lt;a href=&#34;https://bramblex.github.io/niva/docs/options/project&#34;&gt;选项文档&lt;/a&gt; 。&lt;/p&gt; &#xA;&lt;h3&gt;完善的 API&lt;/h3&gt; &#xA;&lt;p&gt;Niva 提供了丰富的 API, 如 clipboard, dialog, extra, fs, http, monitor, os, process, resource, shortcut, tray, webview, window, window_extra 等 API。详见 &lt;a href=&#34;https://bramblex.github.io/niva/docs/api/niva&#34;&gt;API 文档&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;Todo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Niva 1.0&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Niva API TypeScript 类型声明。&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 应用程序签名 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; MacOS&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Windows&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 支持 Node.js 调用，作为 NodeJS 应用程序的 UI 窗口。&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 支持系统通知 Notification。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;p&gt;Niva 2.0&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 对 Window10 低版本增加 &lt;a href=&#34;https://github.com/weolar/miniblink49&#34;&gt;miniblink&lt;/a&gt; 支持，解决低版本 Windows 对 Webview2 支持不完善的问题。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=bramblex/niva&#34; alt=&#34;Contributors&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>r9os/r9</title>
    <updated>2023-05-24T01:46:26Z</updated>
    <id>tag:github.com,2023-05-24:/r9os/r9</id>
    <link href="https://github.com/r9os/r9" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The R9 operating system&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;r9&lt;/h1&gt; &#xA;&lt;p&gt;Plan 9 in Rust&lt;/p&gt; &#xA;&lt;p&gt;R9 is a reimplementation of the plan9 kernel in Rust. It is not only inspired by but in many ways derived from the original Plan 9 source code.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;We use &lt;code&gt;cargo&lt;/code&gt; and the &lt;code&gt;xtask&lt;/code&gt; pattern to build the kernel.&lt;/p&gt; &#xA;&lt;p&gt;To build r9 for x86_64, we assume you have cloned the git repository somewhere convenient. Then simply change into the top-level directory and, &lt;code&gt;cargo xtask build --arch x86-64&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To build for aarch64, run &lt;code&gt;cargo xtask build --arch aarch64&lt;/code&gt; (Currently only Raspberry Pi 3 is supported).&lt;/p&gt; &#xA;&lt;p&gt;There are other useful &lt;code&gt;xtask&lt;/code&gt; subcommands; run &lt;code&gt;cargo xtask help&lt;/code&gt; to see what is available.&lt;/p&gt; &#xA;&lt;p&gt;Right now, r9 is not self-hosting.&lt;/p&gt; &#xA;&lt;h2&gt;Runtime Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;cargo xtask dist&lt;/code&gt;, which &lt;code&gt;cargo xtask qemu&lt;/code&gt; and &lt;code&gt;cargo xtask qemukvm&lt;/code&gt; depend on, requires &lt;code&gt;llvm-objcopy&lt;/code&gt;. This is expected to live in the rust toolchain path. If you get &lt;code&gt;No such file or directory (os error 2)&lt;/code&gt; messages, then install &lt;code&gt;llvm&lt;/code&gt; separate from the rust toolchain and set:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;OBJCOPY=$(which llvm-objcopy) cargo xtask qemukvm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If &lt;code&gt;No such file or directory (os error 2)&lt;/code&gt; messages persist, check to ensure &lt;code&gt;qemu&lt;/code&gt; or &lt;code&gt;qemu-kvm&lt;/code&gt; is installed and the &lt;code&gt;qemu-system-x86_64&lt;/code&gt; binary is in your path (or &lt;code&gt;qemu-system-aarch64&lt;/code&gt; in the case of aarch64).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google/crumsort-rs</title>
    <updated>2023-05-24T01:46:26Z</updated>
    <id>tag:github.com,2023-05-24:/google/crumsort-rs</id>
    <link href="https://github.com/google/crumsort-rs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A parallelized Rust port of crumsort&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;crumsort-rs&lt;/h1&gt; &#xA;&lt;p&gt;A parallelized Rust port of &lt;a href=&#34;https://github.com/scandum/crumsort&#34;&gt;crumsort&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The goal of this port is to excel at sorting well-distributed data which is why it is not an exact 1:1 replica.&lt;/p&gt; &#xA;&lt;h2&gt;Temporary caveats&lt;/h2&gt; &#xA;&lt;p&gt;There are a few limitations given some of the constraints when this was originally written:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;sorts uniform data faster than crumsort, but severly skewed distributions slower (missing &lt;code&gt;crumsort_analyze&lt;/code&gt; function)&lt;/li&gt; &#xA; &lt;li&gt;intended as a solution for sorting large (&lt;code&gt;u64&lt;/code&gt; or &lt;code&gt;u128&lt;/code&gt;) integers&lt;/li&gt; &#xA; &lt;li&gt;only sorts &lt;code&gt;Copy + Default&lt;/code&gt; data as a way to limit the use of &lt;code&gt;unsafe&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;missing un-parallelized version (data needs to implement &lt;code&gt;Send&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;missing &lt;code&gt;*_by&lt;/code&gt; and &lt;code&gt;*_by_key&lt;/code&gt; sorting alternatives (data needs to implement &lt;code&gt;Ord&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please feel free to submit improvements in any of these area by submitting a pull request.&lt;/p&gt; &#xA;&lt;h2&gt;Benchmarks against parallel pdqsort (Rayon)&lt;/h2&gt; &#xA;&lt;p&gt;All banchmarks run with the &lt;code&gt;bench&lt;/code&gt; example on an M1 Pro:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo run --release --example bench&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Uniformly distributed random &lt;code&gt;u32&lt;/code&gt;s&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Length&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Algorithm&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Throughput&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Improvement&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;sup&gt;12&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;pdqsort&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;32.15Mkeys/s&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.00%&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;sup&gt;12&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;crumsort&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;38.70Mkeys/s&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;20.39%&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;sup&gt;16&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;pdqsort&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;129.96Mkeys/s&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.00%&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;sup&gt;16&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;crumsort&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;176.95Mkeys/s&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;36.16%&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;sup&gt;20&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;pdqsort&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;226.31Mkeys/s&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.00%&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;sup&gt;20&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;crumsort&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;368.09Mkeys/s&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;62.65%&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;sup&gt;24&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;pdqsort&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;227.80Mkeys/s&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.00%&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;sup&gt;24&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;crumsort&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;399.89Mkeys/s&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;75.54%&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Uniformly distributed random &lt;code&gt;u64&lt;/code&gt;s&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Length&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Algorithm&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Throughput&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Improvement&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;sup&gt;12&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;pdqsort&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;33.18Mkeys/s&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.00%&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;sup&gt;12&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;crumsort&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;40.79Mkeys/s&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;22.91%&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;sup&gt;16&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;pdqsort&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;151.24Mkeys/s&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.00%&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;sup&gt;16&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;crumsort&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;237.48Mkeys/s&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;57.02%&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;sup&gt;20&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;pdqsort&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;218.64Mkeys/s&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.00%&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;sup&gt;20&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;crumsort&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;364.79Mkeys/s&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;66.85%&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;sup&gt;24&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;pdqsort&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;226.83Mkeys/s&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;0.00%&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;sup&gt;24&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;crumsort&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;385.42Mkeys/s&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;69.92%&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Note&lt;/h2&gt; &#xA;&lt;p&gt;This is not an officially supported Google product.&lt;/p&gt;</summary>
  </entry>
</feed>