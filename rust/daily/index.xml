<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-13T01:35:51Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tursodatabase/limbo</title>
    <updated>2024-12-13T01:35:51Z</updated>
    <id>tag:github.com,2024-12-13:/tursodatabase/limbo</id>
    <link href="https://github.com/tursodatabase/limbo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Limbo is a work-in-progress, in-process OLTP database management system, compatible with SQLite.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/tursodatabase/limbo/main/limbo.png&#34; alt=&#34;Limbo&#34; width=&#34;200&#34;&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;Limbo&lt;/h1&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Limbo is a work-in-progress, in-process OLTP database management system, compatible with SQLite. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/penberg/limbo/actions&#34;&gt; &lt;img src=&#34;https://github.com/penberg/limbo/actions/workflows/rust.yml/badge.svg?sanitize=true&#34; alt=&#34;Build badge&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/penberg/limbo/raw/main/LICENSE.md&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue&#34; alt=&#34;MIT&#34; title=&#34;MIT License&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/jgjmyYgHwB&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/1258658826257961020&#34; alt=&#34;Discord&#34; title=&#34;Discord&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In-process OLTP database engine library&lt;/li&gt; &#xA; &lt;li&gt;Asynchronous I/O support with &lt;code&gt;io_uring&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;SQLite compatibility (&lt;a href=&#34;https://raw.githubusercontent.com/tursodatabase/limbo/main/COMPAT.md&#34;&gt;status&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;SQL dialect support&lt;/li&gt; &#xA;   &lt;li&gt;File format support&lt;/li&gt; &#xA;   &lt;li&gt;SQLite C API&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;JavaScript/WebAssembly bindings (&lt;em&gt;wip&lt;/em&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;CLI&lt;/h3&gt; &#xA;&lt;p&gt;Install &lt;code&gt;limbo&lt;/code&gt; with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl --proto &#39;=https&#39; --tlsv1.2 -LsSf \&#xA;  https://github.com/penberg/limbo/releases/latest/download/limbo-installer.sh | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then use the SQL shell to create and query a database:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ limbo database.db&#xA;Limbo v0.0.6&#xA;Enter &#34;.help&#34; for usage hints.&#xA;limbo&amp;gt; CREATE TABLE users (id INT PRIMARY KEY, username TEXT);&#xA;limbo&amp;gt; INSERT INTO users VALUES (1, &#39;alice&#39;);&#xA;limbo&amp;gt; INSERT INTO users VALUES (2, &#39;bob&#39;);&#xA;limbo&amp;gt; SELECT * FROM users;&#xA;1|alice&#xA;2|bob&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;JavaScript (wip)&lt;/h3&gt; &#xA;&lt;p&gt;Installation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;npm i limbo-wasm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { Database } from &#39;limbo-wasm&#39;;&#xA;&#xA;const db = new Database(&#39;sqlite.db&#39;);&#xA;const stmt = db.prepare(&#39;SELECT * FROM users&#39;);&#xA;const users = stmt.all();&#xA;console.log(users);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Python (wip)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;pip install pylimbo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import limbo&#xA;&#xA;con = limbo.connect(&#34;sqlite.db&#34;)&#xA;cur = con.cursor()&#xA;res = cur.execute(&#34;SELECT * FROM users&#34;)&#xA;print(res.fetchone())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Developing&lt;/h2&gt; &#xA;&lt;p&gt;Build and run &lt;code&gt;limbo&lt;/code&gt; cli:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo run --package limbo --bin limbo database.db&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;cargo test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Test coverage report:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cargo tarpaulin -o html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run benchmarks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;cargo bench&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run benchmarks and generate flamegraphs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;echo -1 | sudo tee /proc/sys/kernel/perf_event_paranoid&#xA;cargo bench --bench benchmark -- --profile-time=5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;How is Limbo different from libSQL?&lt;/h3&gt; &#xA;&lt;p&gt;Limbo is a research project to build a SQLite compatible in-process database in Rust with native async support. The libSQL project, on the other hand, is an open source, open contribution fork of SQLite, with focus on production features such as replication, backups, encryption, and so on. There is no hard dependency between the two projects. Of course, if Limbo becomes widely successful, we might consider merging with libSQL, but that is something that will be decided in the future.&lt;/p&gt; &#xA;&lt;h2&gt;Publications&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pekka Enberg, Sasu Tarkoma, Jon Crowcroft Ashwin Rao (2024). Serverless Runtime / Database Co-Design With Asynchronous I/O. In &lt;em&gt;EdgeSys ‘24&lt;/em&gt;. &lt;a href=&#34;https://penberg.org/papers/penberg-edgesys24.pdf&#34;&gt;[PDF]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pekka Enberg, Sasu Tarkoma, and Ashwin Rao (2023). Towards Database and Serverless Runtime Co-Design. In &lt;em&gt;CoNEXT-SW ’23&lt;/em&gt;. [&lt;a href=&#34;https://penberg.org/papers/penberg-conext-sw-23.pdf&#34;&gt;PDF&lt;/a&gt;] [&lt;a href=&#34;https://penberg.org/papers/penberg-conext-sw-23-slides.pdf&#34;&gt;Slides&lt;/a&gt;]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;d love to have you contribute to Limbo! Check out the &lt;a href=&#34;https://github.com/penberg/limbo/raw/main/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://github.com/penberg/limbo/raw/main/LICENSE.md&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contribution&lt;/h3&gt; &#xA;&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in Limbo by you, shall be licensed as MIT, without any additional terms or conditions.&lt;/p&gt;</summary>
  </entry>
</feed>