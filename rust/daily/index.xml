<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-20T01:41:47Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>WINSDK/bite</title>
    <updated>2024-04-20T01:41:47Z</updated>
    <id>tag:github.com,2024-04-20:/WINSDK/bite</id>
    <link href="https://github.com/WINSDK/bite" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Disassembler focused on comprehensive rust support.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;./assets/logo_dark.png&#34;&gt; &#xA;  &lt;img height=&#34;150px&#34; src=&#34;https://raw.githubusercontent.com/WINSDK/bite/main/assets/logo_light.png&#34;&gt; &#xA; &lt;/picture&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;./assets/logo_text_dark.svg&#34;&gt; &#xA;  &lt;img height=&#34;150px&#34; src=&#34;https://raw.githubusercontent.com/WINSDK/bite/main/assets/logo_text_light.svg?sanitize=true&#34;&gt; &#xA; &lt;/picture&gt; &lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;Ever wanted to inspect every &lt;i&gt;bite&lt;/i&gt; of your binary.&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/WINSDK/bite/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/WINSDK/bite/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Test&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/license/WINSDK/bite&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;BiTE&lt;/code&gt; is a platform-agnostic executable analysis tool. It aims to offer an environment for inspecting the content of binaries and it&#39;s debug info. While it is still in early development, it supports various architectures.&lt;/p&gt; &#xA;&lt;h2&gt;Showcase&lt;/h2&gt; &#xA;&lt;p&gt;Here is an example of the assembly listing viewing.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/WINSDK/bite/main/assets/screenshot.png&#34; alt=&#34;Assembly listing&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The ability to view a binary&#39;s disassembly and its associated source code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/WINSDK/bite/main/assets/split_source.png&#34; alt=&#34;Source Code&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Building from source.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cargo install --path .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features yet to be implemented&lt;/h2&gt; &#xA;&lt;p&gt;Whenever I have time this year I&#39;ll try implementing most of these. &lt;br&gt; If you feel like it, submit a pull request and I&#39;ll have a look at it!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Port GUI to wgpu + winit&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Header with buttons and options&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Assembly listing exploration&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Interactive terminal&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Assembly instruction byte patching&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Hex binary viewer&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Debugging front-end&#39;s &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://www.sourceware.org/gdb&#34;&gt;GDB&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://lldb.llvm.org&#34;&gt;LLDB&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;a href=&#34;https://windbg.org&#34;&gt;WinDbg&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; X86-64 support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; AArch64/Armv7 support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Riscv64gc/Riscv32gc support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; MIPS-V support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Demangling support for most targets &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; MSVC&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Itanium&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Rust&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Decoding datastructures depending on each section&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Assembly listing lifting &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Resolving addresses&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Interpreting non-code data&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Creating labels for relative jumps&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>BitVM/BitVM</title>
    <updated>2024-04-20T01:41:47Z</updated>
    <id>tag:github.com,2024-04-20:/BitVM/BitVM</id>
    <link href="https://github.com/BitVM/BitVM" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Smarter Bitcoin Contracts&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BitVM: Smarter Bitcoin Contracts&lt;/h1&gt; &#xA;&lt;p&gt;The official implementation of &lt;a href=&#34;https://bitvm.org/bitvm2&#34;&gt;BitVM2&lt;/a&gt;, running a &lt;a href=&#34;https://bitvm.org/snark&#34;&gt;SNARK verifier&lt;/a&gt;. Work in progress.&lt;/p&gt; &#xA;&lt;p&gt;We are following the implementation of &lt;a href=&#34;https://github.com/arkworks-rs&#34;&gt;Arkworks&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Winternitz signatures&lt;/li&gt; &#xA; &lt;li&gt;BigInt arithmetic&lt;/li&gt; &#xA; &lt;li&gt;Bn254 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Field operations&lt;/li&gt; &#xA;   &lt;li&gt;Extension fields&lt;/li&gt; &#xA;   &lt;li&gt;Curve operations&lt;/li&gt; &#xA;   &lt;li&gt;Pairings&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Groth16 verifier&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/BitVM/BitVM/tree/1dce989d1963b90c35391b77b451c6823302d503&#34;&gt;BitVM1&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apache/datafusion</title>
    <updated>2024-04-20T01:41:47Z</updated>
    <id>tag:github.com,2024-04-20:/apache/datafusion</id>
    <link href="https://github.com/apache/datafusion" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache DataFusion SQL Query Engine&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache DataFusion&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://crates.io/crates/datafusion&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/datafusion.svg?sanitize=true&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/arrow-datafusion/raw/main/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%20v2-blue.svg?sanitize=true&#34; alt=&#34;Apache licensed&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/arrow-datafusion/actions?query=branch%3Amain&#34;&gt;&lt;img src=&#34;https://github.com/apache/arrow-datafusion/actions/workflows/rust.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.com/invite/Qw5gKqHxUM&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/885562378132000778.svg?logo=discord&amp;amp;style=flat-square&#34; alt=&#34;Discord chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/apache/arrow-datafusion&#34;&gt;Website&lt;/a&gt; | &lt;a href=&#34;https://github.com/apache/arrow-datafusion/tree/main/docs&#34;&gt;Guides&lt;/a&gt; | &lt;a href=&#34;https://docs.rs/datafusion/latest/datafusion/&#34;&gt;API Docs&lt;/a&gt; | &lt;a href=&#34;https://discord.com/channels/885562378132000778/885562378132000781&#34;&gt;Chat&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/apache/datafusion/main/docs/source/_static/images/2x_bgwhite_original.png&#34; width=&#34;512&#34; alt=&#34;logo&#34;&gt; &#xA;&lt;p&gt;Apache DataFusion is a very fast, extensible query engine for building high-quality data-centric systems in &lt;a href=&#34;http://rustlang.org&#34;&gt;Rust&lt;/a&gt;, using the &lt;a href=&#34;https://arrow.apache.org&#34;&gt;Apache Arrow&lt;/a&gt; in-memory format. &lt;a href=&#34;https://github.com/apache/arrow-datafusion-python&#34;&gt;Python Bindings&lt;/a&gt; are also available. DataFusion offers SQL and Dataframe APIs, excellent &lt;a href=&#34;https://benchmark.clickhouse.com/&#34;&gt;performance&lt;/a&gt;, built-in support for CSV, Parquet, JSON, and Avro, extensive customization, and a great community.&lt;/p&gt; &#xA;&lt;p&gt;Here are links to some important information&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arrow.apache.org/datafusion&#34;&gt;Project Site&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arrow.apache.org/datafusion/user-guide/cli.html#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arrow.apache.org/datafusion/user-guide/example-usage.html&#34;&gt;Rust Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arrow.apache.org/datafusion/user-guide/dataframe.html&#34;&gt;Rust DataFrame API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/datafusion/latest/datafusion&#34;&gt;Rust API docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache/arrow-datafusion/tree/master/datafusion-examples&#34;&gt;Rust Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arrow.apache.org/datafusion-python/&#34;&gt;Python DataFrame API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/datafusion/latest/datafusion/index.html#architecture&#34;&gt;Architecture&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What can you do with this crate?&lt;/h2&gt; &#xA;&lt;p&gt;DataFusion is great for building projects such as domain specific query engines, new database platforms and data pipelines, query languages and more. It lets you start quickly from a fully working engine, and then customize those features specific to your use. &lt;a href=&#34;https://arrow.apache.org/datafusion/user-guide/introduction.html#known-users&#34;&gt;Click Here&lt;/a&gt; to see a list known users.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to DataFusion&lt;/h2&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://arrow.apache.org/datafusion/contributor-guide&#34;&gt;contributor guide&lt;/a&gt; and &lt;a href=&#34;https://arrow.apache.org/datafusion/contributor-guide/communication.html&#34;&gt;communication&lt;/a&gt; pages for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Crate features&lt;/h2&gt; &#xA;&lt;p&gt;This crate has several &lt;a href=&#34;https://doc.rust-lang.org/cargo/reference/features.html&#34;&gt;features&lt;/a&gt; which can be specified in your &lt;code&gt;Cargo.toml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Default features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;array_expressions&lt;/code&gt;: functions for working with arrays such as &lt;code&gt;array_to_string&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;compression&lt;/code&gt;: reading files compressed with &lt;code&gt;xz2&lt;/code&gt;, &lt;code&gt;bzip2&lt;/code&gt;, &lt;code&gt;flate2&lt;/code&gt;, and &lt;code&gt;zstd&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;crypto_expressions&lt;/code&gt;: cryptographic functions such as &lt;code&gt;md5&lt;/code&gt; and &lt;code&gt;sha256&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;datetime_expressions&lt;/code&gt;: date and time functions such as &lt;code&gt;to_timestamp&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;encoding_expressions&lt;/code&gt;: &lt;code&gt;encode&lt;/code&gt; and &lt;code&gt;decode&lt;/code&gt; functions&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;parquet&lt;/code&gt;: support for reading the &lt;a href=&#34;https://parquet.apache.org/&#34;&gt;Apache Parquet&lt;/a&gt; format&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;regex_expressions&lt;/code&gt;: regular expression functions, such as &lt;code&gt;regexp_match&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;unicode_expressions&lt;/code&gt;: Include unicode aware functions such as &lt;code&gt;character_length&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;unparser&lt;/code&gt; : enables support to reverse LogicalPlans back into SQL&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Optional features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;avro&lt;/code&gt;: support for reading the &lt;a href=&#34;https://avro.apache.org/&#34;&gt;Apache Avro&lt;/a&gt; format&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;backtrace&lt;/code&gt;: include backtrace information in error messages&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pyarrow&lt;/code&gt;: conversions between PyArrow and DataFusion types&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;serde&lt;/code&gt;: enable arrow-schema&#39;s &lt;code&gt;serde&lt;/code&gt; feature&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Rust Version Compatibility Policy&lt;/h2&gt; &#xA;&lt;p&gt;DataFusion&#39;s Minimum Required Stable Rust Version (MSRV) policy is to support each stable Rust version for 6 months after it is &lt;a href=&#34;https://github.com/rust-lang/rust/raw/master/RELEASES.md&#34;&gt;released&lt;/a&gt;. This generally translates to support for the most recent 3 to 4 stable Rust versions.&lt;/p&gt; &#xA;&lt;p&gt;We enforce this policy using a &lt;a href=&#34;https://github.com/search?q=repo%3Aapache%2Farrow-datafusion+rust-version+language%3ATOML+path%3A%2F%5ECargo.toml%2F&amp;amp;type=code&#34;&gt;MSRV CI Check&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>