<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-18T01:35:11Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Myriad-Dreamin/tinymist</title>
    <updated>2024-10-18T01:35:11Z</updated>
    <id>tag:github.com,2024-10-18:/Myriad-Dreamin/tinymist</id>
    <link href="https://github.com/Myriad-Dreamin/tinymist" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tinymist [ˈtaɪni mɪst] is an integrated language service for Typst [taɪpst].&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tinymist&lt;/h1&gt; &#xA;&lt;p&gt;Tinymist [ˈtaɪni mɪst] is an integrated language service for &lt;a href=&#34;https://typst.app/&#34;&gt;Typst&lt;/a&gt; [taɪpst]. You can also call it &#34;微霭&#34; [wēi ǎi] in Chinese.&lt;/p&gt; &#xA;&lt;p&gt;It contains:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;an analyzing library for Typst, see &lt;a href=&#34;https://github.com/Myriad-Dreamin/tinymist/tree/main/crates/tinymist-query&#34;&gt;tinymist-query&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;a CLI for Typst, see &lt;a href=&#34;https://github.com/Myriad-Dreamin/tinymist/tree/main/crates/tinymist/&#34;&gt;tinymist&lt;/a&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;which provides a language server for Typst, see &lt;a href=&#34;https://myriad-dreamin.github.io/tinymist//feature/language.html&#34;&gt;Language Features&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;which provides a preview server for Typst, see &lt;a href=&#34;https://myriad-dreamin.github.io/tinymist//feature/preview.html&#34;&gt;Preview Feature&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;a VSCode extension for Typst, see &lt;a href=&#34;https://github.com/Myriad-Dreamin/tinymist/tree/main/editors/vscode/&#34;&gt;Tinymist VSCode Extension&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Language service (LSP) features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/api/language-extensions/semantic-highlight-guide&#34;&gt;Semantic highlighting&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The &#34;semantic highlighting&#34; is supplementary to &lt;a href=&#34;https://code.visualstudio.com/api/language-extensions/syntax-highlight-guide&#34;&gt;&#34;syntax highlighting&#34;&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/api/language-extensions/programmatic-language-features#provide-diagnostics&#34;&gt;Diagnostics&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Also known as &#34;error checking&#34; or &#34;error reporting&#34;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/api/language-extensions/programmatic-language-features#highlight-all-occurrences-of-a-symbol-in-a-document&#34;&gt;Document highlight&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Highlight all break points in a loop context.&lt;/li&gt; &#xA;   &lt;li&gt;(Todo) Highlight all exit points in a function context.&lt;/li&gt; &#xA;   &lt;li&gt;(Todo) Highlight all captures in a closure context.&lt;/li&gt; &#xA;   &lt;li&gt;(Todo) Highlight all occurrences of a symbol in a document.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_documentLink&#34;&gt;Document links&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Renders path or link references in the document, such as &lt;code&gt;image(&#34;path.png&#34;)&lt;/code&gt; or &lt;code&gt;bibliography(style: &#34;path.csl&#34;)&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/getstarted/userinterface#_outline-view&#34;&gt;Document symbols&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Also known as &#34;document outline&#34; or &#34;table of contents&#34; &lt;em&gt;in Typst&lt;/em&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://burkeholland.gitbook.io/vs-code-can-do-that/exercise-3-navigation-and-refactoring/folding-sections&#34;&gt;Folding ranges&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can collapse code/content blocks and headings.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/api/language-extensions/programmatic-language-features#show-definitions-of-a-symbol&#34;&gt;Goto definitions&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Right-click on a symbol and select &#34;Go to Definition&#34;.&lt;/li&gt; &#xA;   &lt;li&gt;Or ctrl+click on a symbol.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/api/language-extensions/programmatic-language-features#find-all-references-to-a-symbol&#34;&gt;References&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Right-click on a symbol and select &#34;Go to References&#34; or &#34;Find References&#34;.&lt;/li&gt; &#xA;   &lt;li&gt;Or ctrl+click on a symbol.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/api/language-extensions/programmatic-language-features#show-hovers&#34;&gt;Hover tips&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Also known as &#34;hovering tooltip&#34;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jetbrains.com/help/idea/inlay-hints.html&#34;&gt;Inlay hints&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Inlay hints are special markers that appear in the editor and provide you with additional information about your code, like the names of the parameters that a called method expects.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/api/language-extensions/programmatic-language-features#show-color-decorators&#34;&gt;Color Provider&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;View all inlay colorful label for color literals in your document.&lt;/li&gt; &#xA;   &lt;li&gt;Change the color literal&#39;s value by a color picker or its code presentation.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/blogs/2017/02/12/code-lens-roundup&#34;&gt;Code Lens&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Should give contextual buttons along with code. For example, a button for exporting your document to various formats at the start of the document.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/api/language-extensions/programmatic-language-features#rename-symbols&#34;&gt;Rename symbols&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/api/language-extensions/programmatic-language-features#help-with-function-and-method-signatures&#34;&gt;Help with function and method signatures&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/api/language-extensions/programmatic-language-features#show-all-symbol-definitions-in-folder&#34;&gt;Workspace Symbols&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-code-actions&#34;&gt;Code Action&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Increasing/Decreasing heading levels.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rust-lang/rust-analyzer/raw/master/docs/dev/lsp-extensions.md#on-enter&#34;&gt;experimental/onEnter&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;kbd&gt;Enter&lt;/kbd&gt; inside triple-slash comments automatically inserts &lt;code&gt;///&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;kbd&gt;Enter&lt;/kbd&gt; in the middle or after a trailing space in &lt;code&gt;//&lt;/code&gt; inserts &lt;code&gt;//&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;kbd&gt;Enter&lt;/kbd&gt; inside &lt;code&gt;//!&lt;/code&gt; doc comments automatically inserts &lt;code&gt;//!&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Extra features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compiles to PDF on save (configurable to as-you-type, or other options).&lt;/li&gt; &#xA; &lt;li&gt;Compiles to SVG, PNG, HTML, Markdown, Text, and other formats by commands, vscode tasks, or code lenses.&lt;/li&gt; &#xA; &lt;li&gt;Provides code lenses for exporting to PDF/SVG/PNG/etc.&lt;/li&gt; &#xA; &lt;li&gt;Provides a status bar item to show the current document&#39;s compilation status and words count.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Myriad-Dreamin/tinymist/tree/main/tools/editor-tools&#34;&gt;Editor tools&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;View a list of templates in template gallery. (&lt;code&gt;tinymist.showTemplateGallery&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Click a button in template gallery to initialize a new project with a template. (&lt;code&gt;tinymist.initTemplate&lt;/code&gt; and &lt;code&gt;tinymist.initTemplateInPlace&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Trace execution in current document (&lt;code&gt;tinymist.profileCurrentFile&lt;/code&gt;).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Release Cycle&lt;/h2&gt; &#xA;&lt;p&gt;Tinymist follows the &lt;a href=&#34;https://semver.org/&#34;&gt;Semantic Versioning&lt;/a&gt; scheme. The version number is in the format of &lt;code&gt;MAJOR.MINOR.PATCH&lt;/code&gt;. The release cycle is as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If there is a typst version update, a new major or minor version will be released intermediately. This means tinymist will always align the minor version with typst.&lt;/li&gt; &#xA; &lt;li&gt;If there is at least a bug or feature added this week, a new patch version will be released.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Follow the instructions to enable tinymist in your favorite editor.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://myriad-dreamin.github.io/tinymist//frontend/vscode.html&#34;&gt;VS Cod(e,ium)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://myriad-dreamin.github.io/tinymist//frontend/neovim.html&#34;&gt;NeoVim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://myriad-dreamin.github.io/tinymist//frontend/emacs.html&#34;&gt;Emacs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://myriad-dreamin.github.io/tinymist//frontend/sublime-text.html&#34;&gt;Sublime Text&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://myriad-dreamin.github.io/tinymist//frontend/helix.html&#34;&gt;Helix&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://myriad-dreamin.github.io/tinymist//frontend/zed.html&#34;&gt;Zed&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing Regular/Nightly Prebuilds from GitHub&lt;/h2&gt; &#xA;&lt;p&gt;Note: if you are not knowing what is a regular/nightly release, please don&#39;t follow this section.&lt;/p&gt; &#xA;&lt;p&gt;Besides published releases specific for each editors, you can also download the latest regular/nightly prebuilts from GitHub and install them manually.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Regular prebuilts can be found in &lt;a href=&#34;https://github.com/Myriad-Dreamin/tinymist/releases&#34;&gt;GitHub Releases&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Nightly prebuilts can be found in &lt;a href=&#34;https://github.com/Myriad-Dreamin/tinymist/actions&#34;&gt;GitHub Actions&lt;/a&gt;. For example, if you are seeking a nightly release for the featured &lt;a href=&#34;https://github.com/Myriad-Dreamin/tinymist/pull/468&#34;&gt;PR: build: bump version to 0.11.17-rc1&lt;/a&gt;, you could click and go to the &lt;a href=&#34;https://github.com/Myriad-Dreamin/tinymist/actions/runs/10120639466&#34;&gt;action page&lt;/a&gt; run for the related commits and download the artifacts.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To install extension file (the file with &lt;code&gt;.vsix&lt;/code&gt; extension) manually, please &lt;kbd&gt;Ctrl+Shift+X&lt;/kbd&gt; in the editor window and drop the downloaded vsix file into the opened extensions view.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://myriad-dreamin.github.io/tinymist/&#34;&gt;Online Documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Packaging&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/tinymist/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/tinymist.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;After development for two months, most of the features are implemented. There are still some features to be implemented, but I would like to leave them in typst v0.12.0. I&#39;ll also pick some of them to implement on my weekends. Also please feel free to contribute if you are interested in the following features.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Documentation and refactoring: It is my current focus.&lt;/li&gt; &#xA; &lt;li&gt;Spell checking: There is already a branch but no suitable (default) spell checking library is found.&lt;/li&gt; &#xA; &lt;li&gt;Periscope renderer: It is disabled since vscode reject to render SVGs containing foreignObjects.&lt;/li&gt; &#xA; &lt;li&gt;Inlay hint: It is disabled &lt;em&gt;by default&lt;/em&gt; because of performance issues.&lt;/li&gt; &#xA; &lt;li&gt;Find references of labels, dictionary fields, and named function arguments.&lt;/li&gt; &#xA; &lt;li&gt;Go to definition of dictionary fields and named function arguments.&lt;/li&gt; &#xA; &lt;li&gt;Autocompletion for raw language tags.&lt;/li&gt; &#xA; &lt;li&gt;Improve symbol view&#39;s appearance.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://raw.githubusercontent.com/Myriad-Dreamin/tinymist/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; file for contribution guidelines.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Partially code is inherited from &lt;a href=&#34;https://github.com/nvarner/typst-lsp&#34;&gt;typst-lsp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://github.com/Myriad-Dreamin/tinymist/tree/main/editors/vscode#symbol-view&#34;&gt;integrating&lt;/a&gt; &lt;strong&gt;offline&lt;/strong&gt; handwritten-stroke recognizer is powered by &lt;a href=&#34;https://detypify.quarticcat.com/&#34;&gt;Detypify&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://github.com/Myriad-Dreamin/tinymist/tree/main/editors/vscode#preview&#34;&gt;integrating&lt;/a&gt; preview service is powered by &lt;a href=&#34;https://github.com/Enter-tainer/typst-preview&#34;&gt;typst-preview&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>