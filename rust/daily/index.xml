<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-05T01:33:22Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>altsem/gitu</title>
    <updated>2024-03-05T01:33:22Z</updated>
    <id>tag:github.com,2024-03-05:/altsem/gitu</id>
    <link href="https://github.com/altsem/gitu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A TUI Git client inspired by Magit&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;It&#39;s Gitu! - A Git porcelain &lt;em&gt;outside&lt;/em&gt; of Emacs&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/altsem/gitu/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/altsem/gitu/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/altsem/gitu&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/altsem/gitu/graph/badge.svg?token=5YWPU7GWFW&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A terminal user interface for Git. Inspired by Magit, and launched straight from the terminal.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/altsem/gitu/master/vhs/rec.gif&#34;&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;p&gt;Gitu aims to implement many of the core features of Magit over time. It should be familiar to any previous Magit users.&lt;/p&gt; &#xA;&lt;p&gt;A rough list of so-far supported features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;File/Hunk-level stage/unstage&lt;/li&gt; &#xA; &lt;li&gt;Show (view commits / open EDITOR at line)&lt;/li&gt; &#xA; &lt;li&gt;Show branches&lt;/li&gt; &#xA; &lt;li&gt;Branch: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;checkout&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Commit: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;commit, amend, fixup&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Fetch: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;all&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Log: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;current&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Pull / Push: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;remote&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Rebase: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;abort, continue, autosquash, interactive&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Keybinds&lt;/h3&gt; &#xA;&lt;p&gt;A help-menu can be shown by pressing the &lt;code&gt;h&lt;/code&gt; key.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/altsem/gitu/master/vhs/help.png&#34;&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;h4&gt;Using Cargo&lt;/h4&gt; &#xA;&lt;p&gt;Run the command: &lt;code&gt;cargo install gitu --locked&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;...or to install the latest from git, run: &lt;code&gt;cargo install --git https://github.com/altsem/gitu.git --locked&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;To configure Gitu, you can copy the &lt;a href=&#34;https://raw.githubusercontent.com/altsem/gitu/master/src/default_config.toml&#34;&gt;default configuration&lt;/a&gt; to &lt;code&gt;~/.config/gitu/config.toml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Development&lt;/h3&gt; &#xA;&lt;h4&gt;Profiling&lt;/h4&gt; &#xA;&lt;p&gt;This project comes with pprof as a dev-dependency. You can run it with: &lt;code&gt;cargo bench --bench show -- --profile-time 5&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;A flamegraph would then be output to &lt;code&gt;target/criterion/show/profile/flamegraph.svg&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>crabml/crabml</title>
    <updated>2024-03-05T01:33:22Z</updated>
    <id>tag:github.com,2024-03-05:/crabml/crabml</id>
    <link href="https://github.com/crabml/crabml" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;crabml&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/wbzqddT3QC&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1111711408875393035?logo=discord&amp;amp;label=discord&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;crabml&lt;/code&gt; is focusing on the reimplementation of GGML using the Rust programming language.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The project is currently an active experiment with the capability to run inference on a Q8_0 quantized Llama 3B model. While the inference is currently not optimized for speed, &lt;code&gt;crabml&lt;/code&gt; is a promising endeavor for efficient machine learning inferencing.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Project Goals&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;crabml&lt;/code&gt; is designed with the following objectives in mind:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Focus on inference only.&lt;/li&gt; &#xA; &lt;li&gt;Limit tensor operators to the bare minimum required for LLM inference.&lt;/li&gt; &#xA; &lt;li&gt;Achieve fast enough inferencing on cheap hardwares.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mmap()&lt;/code&gt; from day one.&lt;/li&gt; &#xA; &lt;li&gt;Prioritize SIMD ahead of GPU.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Building the Project&lt;/h3&gt; &#xA;&lt;p&gt;To build &lt;code&gt;crabml&lt;/code&gt;, set the &lt;code&gt;RUSTFLAGS&lt;/code&gt; environment variable to enable specific target features. For example, to enable NEON on ARM architectures, use &lt;code&gt;RUSTFLAGS=&#34;-C target-feature=+neon&#34;&lt;/code&gt;. Then build the project with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo build --release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command compiles the project in release mode, which optimizes the binary for performance.&lt;/p&gt; &#xA;&lt;h3&gt;Running an Example&lt;/h3&gt; &#xA;&lt;p&gt;After building the project, you can run an example inference by executing the &lt;code&gt;crabml-cli&lt;/code&gt; binary with appropriate arguments. For instance, to use the &lt;code&gt;tinyllamas-stories-15m-f32.gguf&lt;/code&gt; model to generate text based on the prompt &#34;captain america&#34;, execute the command below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./target/release/crabml-cli \&#xA;  -m ./testdata/tinyllamas-stories-15m-f32.gguf \&#xA;  &#34;captain america&#34; --steps 100 \&#xA;  -t 0.8 -p 1.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this command:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-m&lt;/code&gt; specifies the checkpoint file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--steps&lt;/code&gt; defines the number of tokens to generate.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-t&lt;/code&gt; sets the temperature, which controls the randomness of the output.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;-p&lt;/code&gt; sets the probability of sampling from the top-p.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This contribution is licensed under Apache License, Version 2.0, (&lt;a href=&#34;https://raw.githubusercontent.com/crabml/crabml/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; or &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>FuelLabs/fuelup</title>
    <updated>2024-03-05T01:33:22Z</updated>
    <id>tag:github.com,2024-03-05:/FuelLabs/fuelup</id>
    <link href="https://github.com/FuelLabs/fuelup" rel="alternate"></link>
    <summary type="html">&lt;p&gt;â›½ The Fuel toolchain installer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fuelup: the Fuel toolchain manager&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;fuelup&lt;/code&gt; installs the Fuel toolchain from our official release channels, enabling you to easily keep the toolchain updated.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;To start using fuelup&lt;/strong&gt;, refer to our &lt;a href=&#34;https://github.com/FuelLabs/fuelup#quickstart&#34;&gt;Quickstart&lt;/a&gt; below.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Links&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://fuellabs.github.io/fuelup/master/&#34;&gt;The Fuelup Book&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://fuellabs.github.io/fuelup/master/developer_guide/index.html&#34;&gt;Developing fuelup itself&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://fuellabs.github.io/fuelup/master/developer_guide/adding_components.html&#34;&gt;Adding components to fuelup&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;Currently, this script supports Linux/macOS systems only. For other systems, please &lt;a href=&#34;https://fuellabs.github.io/fuelup/master/installation/other.html&#34;&gt;read the Installation chapter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Installation is simple: all you need is &lt;code&gt;fuelup-init.sh&lt;/code&gt;, which downloads the core Fuel binaries needed to get you started on development.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -fsSL https://install.fuel.network/ | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will automatically install &lt;code&gt;forc&lt;/code&gt;, its accompanying plugins, &lt;code&gt;fuel-core&lt;/code&gt; and other key components in &lt;code&gt;~/.fuelup/bin&lt;/code&gt;. Please read the &lt;a href=&#34;https://fuellabs.github.io/fuelup/master/concepts/components.html&#34;&gt;Components chapter&lt;/a&gt; for more info on the components installed.&lt;/p&gt; &#xA;&lt;p&gt;The script will ask for permission to add &lt;code&gt;~/.fuelup/bin&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Otherwise, you can also pass &lt;code&gt;--no-modify-path&lt;/code&gt; so that &lt;code&gt;fuelup-init&lt;/code&gt; does not modify your &lt;code&gt;PATH&lt;/code&gt; and will not ask for permission to do so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -fsSL https://install.fuel.network/ | sh -s -- --no-modify-path&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you just want &lt;code&gt;fuelup&lt;/code&gt; without automatically installing the &lt;code&gt;latest&lt;/code&gt; toolchain, you can pass the &lt;code&gt;--skip-toolchain-installation&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -fsSL https://install.fuel.network/ | sh -s -- --skip-toolchain-installation&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Apache License, Version 2.0, (&lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/fuelup/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; or &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/p&gt;</summary>
  </entry>
</feed>