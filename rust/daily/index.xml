<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-26T01:44:18Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Helixform/CodeCursor</title>
    <updated>2023-03-26T01:44:18Z</updated>
    <id>tag:github.com,2023-03-26:/Helixform/CodeCursor</id>
    <link href="https://github.com/Helixform/CodeCursor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An extension for using Cursor in Visual Studio Code.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CodeCursor (Cursor for Visual Studio Code)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Use Cursor right in the editor you love!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;First of all, We would like to thank &lt;strong&gt;Cursor Team&lt;/strong&gt; for their brilliant works. Please give their &lt;a href=&#34;https://www.cursor.so&#34;&gt;app&lt;/a&gt; a try!&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s Cursor? And Why This Extension?&lt;/h2&gt; &#xA;&lt;p&gt;Cursor is an AI code editor based on GPT-4. You can write, edit and chat about your code with it. At this time, Cursor is only provided as a dedicated app, and the team currently has no plans to develop extensions for other editors or IDEs.&lt;/p&gt; &#xA;&lt;p&gt;We believe there are more developers actively use Visual Studio Code as their main tool for serious works. And this is why we built &lt;strong&gt;CodeCursor&lt;/strong&gt;. It&#39;s not going to replace the Cursor app, but it provides another way to use Cursor.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;You don&#39;t need to configure anything before starting using it. Just open a document and type &lt;code&gt;CodeCursor&lt;/code&gt; in Command Palette. You will see the command below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Helixform/CodeCursor/main/artworks/command-palette.png&#34; alt=&#34;Command Palette&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Type your prompt and the code generation will just begin. To edit some existing code, you can also select something before perform this command, when accepting the change, the selected code will be replaced with the generated one.&lt;/p&gt; &#xA;&lt;p&gt;While code generation is in progress, the following status bar item will be displayed:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Helixform/CodeCursor/main/artworks/generating.png&#34; alt=&#34;Generating&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Click on it to cancel the request.&lt;/p&gt; &#xA;&lt;p&gt;Upon completion of code generation, the status bar item will change to:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Helixform/CodeCursor/main/artworks/completed.png&#34; alt=&#34;Completed&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Click on it to reopen the generated result at any time.&lt;/p&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Code generation may be interrupted unexpectedly, this is still being investigated. Generally, a retry will fix it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; When users modified the document before accepting a change, the replacing range is incorrect.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To track all issues / file a new issue please go to the Github repo.&lt;/p&gt; &#xA;&lt;h2&gt;Security Consideration&lt;/h2&gt; &#xA;&lt;p&gt;The extension &lt;strong&gt;DOES NOT&lt;/strong&gt; collect your code, environment data, or any information that could be used to track you. Additionally, we ensure that the Cursor server will not receive those data either. Only the document you perform code generation against will be uploaded to the Cursor server, and they are responsible for preventing any leaks of your code.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;To develop the extension, clone the repository and open it in Visual Studio Code. There are two launch targets: &#34;Run Extension&#34; and &#34;Run Extension (Without Rust)&#34;. if you only want to debug or work on the UI parts, then you can select &#34;Run Extension (Without Rust)&#34; for faster build speed.&lt;/p&gt; &#xA;&lt;p&gt;You are welcome to open Pull Requests at any time. But it&#39;s still better to start a discussion before making some epic changes.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dfinity/ic</title>
    <updated>2023-03-26T01:44:18Z</updated>
    <id>tag:github.com,2023-03-26:/dfinity/ic</id>
    <link href="https://github.com/dfinity/ic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Internet Computer blockchain source: the client/replica software run by nodes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Internet Computer Protocol (ICP)&lt;/h1&gt; &#xA;&lt;div id=&#34;preamble&#34;&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The Internet Computer is the world’s first blockchain that runs at web speed and can increase its capacity without bound. Like the Internet (which is composed of many machines adhering to TCP/IP protocol) and blockchain protocols (such as Bitcoin and Ethereum).&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt; &#xA;   &lt;div id=&#34;toctitle&#34; class=&#34;title&#34;&gt;&lt;/div&gt; &#xA;   &lt;ul class=&#34;sectlevel1&#34;&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dfinity/ic/master/#_resources_on_the_internet_computer&#34;&gt;Resources on the Internet Computer&lt;/a&gt; &#xA;     &lt;ul class=&#34;sectlevel2&#34;&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dfinity/ic/master/#_rd_documentation&#34;&gt;R&amp;amp;D documentation&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dfinity/ic/master/#_network_dashboards_from_the_community&#34;&gt;Network Dashboards from the community&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dfinity/ic/master/#_rust_implementation_of_the_icp&#34;&gt;Rust implementation of the ICP&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dfinity/ic/master/#_dfinity_foundation&#34;&gt;DFINITY Foundation&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dfinity/ic/master/#_getting_started&#34;&gt;Getting Started&lt;/a&gt; &#xA;     &lt;ul class=&#34;sectlevel2&#34;&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dfinity/ic/master/#_who_should_be_using_this_code&#34;&gt;Who should be using this code&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dfinity/ic/master/#_prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dfinity/ic/master/#_building_the_code&#34;&gt;Building the code&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dfinity/ic/master/#_verifying_releases&#34;&gt;Verifying releases&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dfinity/ic/master/#_contributing&#34;&gt;Contributing&lt;/a&gt; &#xA;     &lt;ul class=&#34;sectlevel2&#34;&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dfinity/ic/master/#_the_network_nervous_system&#34;&gt;The Network Nervous System&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dfinity/ic/master/#_open_source_policy&#34;&gt;Open Source Policy&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_resources_on_the_internet_computer&#34;&gt;Resources on the Internet Computer&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_rd_documentation&#34;&gt;R&amp;amp;D documentation&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;You can learn more about the Internet Computer’s Protocol, features, and designs here, here are some helpful resources:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Protocol Documentation:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://medium.com/dfinity/a-technical-overview-of-the-internet-computer-f57c62abc20f&#34;&gt;A Technical Overview of the Internet Computer (blog post)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://medium.com/dfinity/software-canisters-an-evolution-of-smart-contracts-internet-computer-f1f92f1bfffb&#34;&gt;Canisters, an Evolution of Smart Contracts&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://medium.com/dfinity/applied-crypto-one-public-key-for-the-internet-computer-ni-dkg-4af800db869d&#34;&gt;Noninteractive Distributed Key Generation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://medium.com/dfinity/the-internet-computers-token-economics-an-overview-29e238bd1d83&#34;&gt;The Internet Computer’s Token Economics: An Overview&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://medium.com/dfinity/understanding-the-internet-computers-network-nervous-system-neurons-and-icp-utility-tokens-730dab65cae8&#34;&gt;Understanding the Internet Computer’s Network Nervous System, Neurons, and ICP Utility Tokens&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dfinity/nns-proposals&#34;&gt;List of NNS Proposals&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://medium.com/dfinity/achieving-consensus-on-the-internet-computer-ee9fbfbafcbc&#34;&gt;Consensus protocol&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Engineering&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://sdk.dfinity.org/docs/developers-guide/concepts/what-is-ic&#34;&gt;What is the Internet Computer?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://sdk.dfinity.org/docs/quickstart/quickstart-intro.html&#34;&gt;Tutorials, SDKs, and sample apps to get started&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.dfinity.org/&#34;&gt;Rust Cargo docs for the replica&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_network_dashboards_from_the_community&#34;&gt;Network Dashboards from the community&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;You can observe the state of the Internet Computer’s infrastructure (Nodes, data centers, subnets) and traditional blockchain metrics (blocks/second, Token Supply, etc)&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://dashboard.internetcomputer.org&#34; class=&#34;bare&#34;&gt;https://dashboard.internetcomputer.org&lt;/a&gt; Network dashboard by the Internet Computer Association&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.dfinityexplorer.org/#&#34; class=&#34;bare&#34;&gt;https://www.dfinityexplorer.org/#&lt;/a&gt; by &lt;a href=&#34;https://github.com/dylancm4&#34;&gt;Dylan Miller&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;To interact with the community, check out the developer forum: &lt;a href=&#34;https://forum.dfinity.org/&#34; class=&#34;bare&#34;&gt;https://forum.dfinity.org/&lt;/a&gt;&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_rust_implementation_of_the_icp&#34;&gt;Rust implementation of the ICP&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;This repo contains many different pieces (including testing and other infrastructure components), but the most important one is the source code for the Rust implementation of the &#34;&lt;strong&gt;replica&lt;/strong&gt;&#34; (read: &#34;client&#34; in some blockchains) that is compiled and run by the machines that together make up the Internet Computer.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_dfinity_foundation&#34;&gt;DFINITY Foundation&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;The &lt;a href=&#34;https://dfinity.org/&#34;&gt;DFINITY Foundation&lt;/a&gt; is a Swiss not-for-profit organization based in Zurich, Switzerland, which oversees research centers in Palo Alto, San Francisco, and Zurich. Its goal is to further the design, development, and adoption of the Internet Computer Protocol.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_getting_started&#34;&gt;Getting Started&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_who_should_be_using_this_code&#34;&gt;Who should be using this code&lt;/h3&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;strong&gt;If you are an app developer&lt;/strong&gt;, and your intent is to build apps so you want a local Internet Computer replica in your machine to deploy to, you are better off using the &lt;a href=&#34;https://sdk.dfinity.org/docs/quickstart/quickstart-intro.html&#34;&gt;Canister SDK&lt;/a&gt; written by the DFINITY Foundation. It is optimized for this and much more lightweight (less than 2 minutes to get started). It will build and run a local replica and you do not need to get into systems code to run it.&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;strong&gt;If you are a blockchain enthusiast&lt;/strong&gt;, and your intent is to understand the protocol (not an implementation), you may be better off going to the &lt;a href=&#34;https://medium.com/dfinity/achieving-consensus-on-the-internet-computer-ee9fbfbafcbc&#34;&gt;Consensus protocol&lt;/a&gt; and &lt;a href=&#34;https://sdk.dfinity.org/docs/interface-spec/index.html&#34;&gt;IC Interface Specification&lt;/a&gt;. This content (by the DFINITY research team) is tailor made for understanding the protocol and design.&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;strong&gt;If you are a blockchain miner&lt;/strong&gt;, you should know that the Internet Computer Protocol (while it is a blockchain) does not have the traditional mining or validating you may come to expect from blockchain projects. The Internet Computer Protocol is designed using new and novel cryptography that does not require &#34;mining&#34;…​ but it does require independent node providers, which may include yourself. You can of course check out the source code in this repo, but a better resource may be this: &lt;a href=&#34;https://wiki.internetcomputer.org/wiki/Internet_Computer_wiki#For_Node_Providers&#34;&gt;Internet Computer Wiki - For Node Providers&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;strong&gt;If you are an engineer looking to build a new SDK, oracle, wallet or any part that enables and improves the Internet Computer ecosystem&lt;/strong&gt;, you should take a look at the &lt;a href=&#34;https://sdk.dfinity.org/docs/interface-spec/index.html&#34;&gt;Interface Specification&lt;/a&gt; which is for low-level interaction with the Internet Computer.&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;strong&gt;If you are a systems engineer, security engineer or cryptographer&lt;/strong&gt;, and your intent is to see what is going on under the hood by digging through source and building this locally, &lt;strong&gt;&lt;em&gt;then you are in the right place&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_prerequisites&#34;&gt;Prerequisites&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;strong&gt;For all environments&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;x86-64 based system (at least 8 CPUs, 16 GB MEM/SWAP, 100 GB available disk space)&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Ubuntu 20.04 or newer&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://podman.io/getting-started/installation&#34;&gt;Podman&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Git&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_building_the_code&#34;&gt;Building the code&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/dfinity/ic/master/gitlab-ci/container/README.md&#34;&gt;README&lt;/a&gt; for more details.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;To build the IC-OS disk image run:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre&gt;$ ./gitlab-ci/container/build-ic.sh -i&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;This builds the IC-OS disk image and all its dependencies.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;In order to build only the binaries and the canisters, use the &lt;code&gt;-b&lt;/code&gt; and/or &lt;code&gt;-c&lt;/code&gt; flags on the &lt;code&gt;build-ic.sh&lt;/code&gt; script:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre&gt;$ ./gitlab-ci/container/build-ic.sh -b -c&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;All the built artifacts can be found in the top-level &lt;code&gt;artifacts/&lt;/code&gt; directory.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_verifying_releases&#34;&gt;Verifying releases&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;a href=&#34;https://dashboard.internetcomputer.org/releases&#34;&gt;Each release proposal&lt;/a&gt; contains the information in the payload that allows to verify the disk image: the download url of the disk image, git revision that the image was built from, the SHA256 checksum of the image. This information allows anyone to verify this release:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;checkout the source tree at specific git revision&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;build the IC-OS disk image using instructions above&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;compare the SHA256 checksum of resulting image with the one published in the release proposal payload.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The &lt;a href=&#34;https://github.com/dfinity/ic/raw/master/gitlab-ci/tools/repro-check.sh&#34;&gt;repro-check.sh&lt;/a&gt; script can be used to do it conveniently.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;To verify specific git revision:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre&gt;$ ./gitlab-ci/tools/repro-check.sh -c &amp;lt;git revision&amp;gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;To verify specific proposal:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre&gt;$ ./gitlab-ci/tools/repro-check.sh -p &amp;lt;proposal id&amp;gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_contributing&#34;&gt;Contributing&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_the_network_nervous_system&#34;&gt;The Network Nervous System&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Thank you for taking the time to learn more about the Internet Computer Protocol. You can contribute to either, but it is important to note that the Internet Computer is governed by a decentralized system called the Network Nervous System (NNS). You can learn more here:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://medium.com/dfinity/understanding-the-internet-computers-network-nervous-system-neurons-and-icp-utility-tokens-730dab65cae8&#34;&gt;Understanding the Internet Computer’s Network Nervous System, Neurons, and ICP Utility Tokens&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dfinity/nns-proposals&#34;&gt;List of NNS Proposals&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_open_source_policy&#34;&gt;Open Source Policy&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;The DFINITY Foundation makes the code of the Internet Computer available to the public.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;This is important so that the community can review the code that defines the behaviour of the Internet Computer. Furthermore, the community will be able to build the code and verify that it derives from the same binary image that is referenced in upgrade proposals published via the Network Nervous System (NNS).&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;All code of the Internet Computer is be licensed under the Apache 2.0 license, except for a few components licensed under the &lt;a href=&#34;http://dfinity.org/licenses/IC-1.0&#34;&gt;Internet Computer Community Source License&lt;/a&gt; and &lt;a href=&#34;http://dfinity.org/licenses/IC-shared-1.0&#34;&gt;Internet Computer Shared Community Source License&lt;/a&gt; which are more restrictive than the Apache 2.0 license to protect the Intellectual Property (IP) of the DFINITY Foundation.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;While we adapt our development processes and security reviews for a world of developing with our code in the open, we are not accepting any pull requests at this time. For now, please join our developer community at &lt;a href=&#34;https://forum.dfinity.org&#34; class=&#34;bare&#34;&gt;https://forum.dfinity.org&lt;/a&gt;. If you discover any bugs and vulnerabilities, please follow the procedure at &lt;a href=&#34;https://dfinity.org/vulnerability-disclosure-program/&#34; class=&#34;bare&#34;&gt;https://dfinity.org/vulnerability-disclosure-program/&lt;/a&gt;.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>humblepenguinn/envio</title>
    <updated>2023-03-26T01:44:18Z</updated>
    <id>tag:github.com,2023-03-26:/humblepenguinn/envio</id>
    <link href="https://github.com/humblepenguinn/envio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Envio is a command-line tool that simplifies the management of environment variables across multiple profiles. It allows users to easily switch between different configurations and apply them to their current environment&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/humblepenguinn/envio/main/assets/logo/cover.png&#34; alt=&#34;envio Logo&#34; width=&#34;600&#34;&gt; &lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h2 align=&#34;center&#34;&gt;A Modern And Secure CLI Tool For Managing Environment Variables&lt;/h2&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/humblepenguinn/envio/workflows/CICD.yml&#34;&gt;&lt;img src=&#34;https://github.com/humblepenguinn/envio/actions/workflows/CICD.yml/badge.svg?sanitize=true&#34; alt=&#34;CICD&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/envio&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/envio.svg?sanitize=true&#34; alt=&#34;Version info&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/humblepenguinn/envio/main/#about&#34;&gt;About&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/humblepenguinn/envio/main/#installation&#34;&gt;Installation&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/humblepenguinn/envio/main/#usage&#34;&gt;Usage&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/humblepenguinn/envio/main/#contributing&#34;&gt;Contributing&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/humblepenguinn/envio/main/#license&#34;&gt;License&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;img alt=&#34;Demo&#34; src=&#34;https://raw.githubusercontent.com/humblepenguinn/envio/main/assets/demo.gif&#34; width=&#34;600&#34;&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;envio&lt;/code&gt; is an open source CLI tool that helps make managing environment variables a breeze. With &lt;code&gt;envio&lt;/code&gt;, users can create encrypted profiles that contain a collection of environment variables associated with a specific project or use case. &lt;code&gt;envio&lt;/code&gt; ensures security and simplifies the development process by allowing users to easily switch between profiles as needed and load them in their current terminal session for immediate use.&lt;/p&gt; &#xA;&lt;p&gt;Some key features of &lt;code&gt;envio&lt;/code&gt; include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create profiles to store environment variables&lt;/li&gt; &#xA; &lt;li&gt;Load profiles into terminal sessions&lt;/li&gt; &#xA; &lt;li&gt;Persistent environment variables that are available in future sessions&lt;/li&gt; &#xA; &lt;li&gt;Encrypted profiles&lt;/li&gt; &#xA; &lt;li&gt;Adding new environment variables&lt;/li&gt; &#xA; &lt;li&gt;Removing environment variables&lt;/li&gt; &#xA; &lt;li&gt;Modifying existing environment variables&lt;/li&gt; &#xA; &lt;li&gt;Listing all environment variables&lt;/li&gt; &#xA; &lt;li&gt;Listing profiles&lt;/li&gt; &#xA; &lt;li&gt;Importing profiles from a file&lt;/li&gt; &#xA; &lt;li&gt;Downloading profiles and then importing them&lt;/li&gt; &#xA; &lt;li&gt;Exporting profiles to a file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Profiles&lt;/h2&gt; &#xA;&lt;p&gt;In &lt;code&gt;envio&lt;/code&gt;, a profile is a collection of environment variables that are associated with a specific project, application, or use case. Users can create multiple profiles, each with their own set of environment variables, and easily switch between them as needed.&lt;/p&gt; &#xA;&lt;p&gt;For example, a developer might create a profile for a web development project that includes environment variables for the database connection, API keys, and other project-specific settings. They could then switch to a different profile for a mobile app project that requires a different set of environment variables.&lt;/p&gt; &#xA;&lt;p&gt;The benefit of using profiles is that users can easily manage and switch between different sets of environment variables without having to manually set and unset them every time they switch tasks. Additionally, in &lt;code&gt;envio&lt;/code&gt;, profiles are encrypted, so users can rest assured that their sensitive environment variables are secure and require a key to access them.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install &lt;code&gt;envio&lt;/code&gt; through a few methods&lt;/p&gt; &#xA;&lt;h3&gt;Releases&lt;/h3&gt; &#xA;&lt;p&gt;You can head over to the &lt;a href=&#34;https://github.com/humblepenguinn/envio/releases/latest&#34;&gt;releases page&lt;/a&gt; and download the offical &lt;code&gt;envio&lt;/code&gt; binaries from there for your target operating system. &lt;code&gt;Windows MSI installers&lt;/code&gt; are also available&lt;/p&gt; &#xA;&lt;h3&gt;Cargo Repository&lt;/h3&gt; &#xA;&lt;p&gt;You can install &lt;code&gt;envio&lt;/code&gt; through the Cargo repository using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cargo install envio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Source&lt;/h3&gt; &#xA;&lt;p&gt;Go &lt;a href=&#34;https://raw.githubusercontent.com/humblepenguinn/envio/main/docs/build_from_source.md&#34;&gt;here&lt;/a&gt; to see how&lt;/p&gt; &#xA;&lt;p&gt;More methods of installation will be added in the future!&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Go &lt;a href=&#34;https://raw.githubusercontent.com/humblepenguinn/envio/main/docs/usage.md&#34;&gt;here&lt;/a&gt; to see how to use the tool&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;In addition to the command-line tool, &lt;code&gt;envio&lt;/code&gt; can also be used as a library in Rust programs to manage environment variables. To use &lt;code&gt;envio&lt;/code&gt; in your program, add it as a dependency in your Cargo.toml file:&lt;/p&gt; &#xA;&lt;p&gt;Please note that the envio library is not stable right now and can be subjected to many changes!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;[dependencies]&#xA;envio = &#34;0.1.0&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, in your Rust code, you can use the &lt;code&gt;envio&lt;/code&gt; crate to read and write environment variables Here&#39;s a simple example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;// In this example we get the profile passed as an argument to the program&#xA;// and then print the environment variables in that profile&#xA;&#xA;use envio;&#xA;&#xA;let args: Vec&amp;lt;String&amp;gt; = std::env::args().collect();&#xA;&#xA;if args.len() != 2 {&#xA;  println!(&#34;Usage: &amp;lt;profile_name&amp;gt; &amp;lt;key&amp;gt;&#34;);&#xA;  return;&#xA;}&#xA;&#xA;let profile_name = &amp;amp;args[1];&#xA;let key = &amp;amp;args[2]; // All profiles have a key that is used to encrypt the environment variables, this ensures that the environment variables are secure&#xA;&#xA;&#xA;for (env_var, value) in &amp;amp;envio::get_profile(profile_name.to_string(), key.to_string()).unwrap().envs {&#xA;  println!(&#34;{}: {}&#34;, env_var, value);&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more examples check out the &lt;a href=&#34;https://raw.githubusercontent.com/humblepenguinn/envio/main/examples/&#34;&gt;examples&lt;/a&gt; directory&lt;/p&gt; &#xA;&lt;p&gt;Currently, &lt;code&gt;envio&lt;/code&gt; is only available as a Rust library&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions to &lt;code&gt;envio&lt;/code&gt; are always welcome! Please see the &lt;a href=&#34;https://raw.githubusercontent.com/humblepenguinn/envio/main/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/humblepenguinn/envio/main/LICENSE-MIT&#34;&gt;MIT&lt;/a&gt; License and the &lt;a href=&#34;https://raw.githubusercontent.com/humblepenguinn/envio/main/LICENSE-APACHE&#34;&gt;Apache&lt;/a&gt; License&lt;/p&gt;</summary>
  </entry>
</feed>