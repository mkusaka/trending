<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-08T01:47:01Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>openobserve/openobserve</title>
    <updated>2023-06-08T01:47:01Z</updated>
    <id>tag:github.com,2023-06-08:/openobserve/openobserve</id>
    <link href="https://github.com/openobserve/openobserve" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ðŸš€ 10x easier, ðŸš€ 140x lower storage cost, ðŸš€ high performance, ðŸš€ petabyte scale - Elasticsearch/Splunk/Datadog alternative for ðŸš€ (logs, metrics, traces).&lt;/p&gt;&lt;hr&gt;&lt;p&gt;ðŸš€ 10x easier, ðŸš€ 140x lower storage cost, ðŸš€ high performance, ðŸš€ petabyte scale - Elasticsearch/Splunk/Datadog alternative for ðŸš€ (logs, metrics, traces).&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://cloud.openobserve.ai&#34;&gt;OpenObserve Cloud&lt;/a&gt; | &lt;a href=&#34;https://openobserve.ai/docs/&#34;&gt;Docs&lt;/a&gt; | &lt;a href=&#34;https://join.slack.com/t/zincobserve/shared_invite/zt-11r96hv2b-UwxUILuSJ1duzl_6mhJwVg&#34;&gt;Slack&lt;/a&gt; | &lt;a href=&#34;https://openobserve.ai&#34;&gt;Website&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h1&gt;OpenObserve&lt;/h1&gt; &#xA;&lt;p&gt;OpenObserve is a cloud native observability platform built specifically for logs, metrics, traces and analytics designed to work at petabyte scale.&lt;/p&gt; &#xA;&lt;p&gt;It is very simple and easy to operate as opposed to Elasticsearch which requires a couple dozen knobs to understand and tune which you can get up and running in under 2 minutes.&lt;/p&gt; &#xA;&lt;p&gt;It is a drop-in replacement for Elasticsearch if you are just ingesting data using APIs and searching using kibana (Kibana is not supported nor required with OpenObserve. OpenObserve provides its own UI which does not require separate installation unlike kibana).&lt;/p&gt; &#xA;&lt;p&gt;You can reduce your log storage costs by ~140x compared to Elasticsearch by using OpenObserve. Below are the results when we pushed logs from our production kubernetes cluster to Elasticsearch and OpenObserve using fluentbit. OpenObserve stored data in Amazon s3 and Elasticsearch stored data on Amazon EBS volumes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/zo_vs_es.png&#34; alt=&#34;OpenObserve Vs ElasticSearch&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction video&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=fZ-ErfMdF-o&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/zo_intro_youtube.png&#34; alt=&#34;OpenObserve Introduction&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features:&lt;/h2&gt; &#xA;&lt;p&gt;Some of the features are:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Logs, Metrics, Traces&lt;/li&gt; &#xA; &lt;li&gt;Alerts, Dashboards&lt;/li&gt; &#xA; &lt;li&gt;Ingest and Query functions to aid advanced capabilities like enrichment, redaction, log reduction, compliance, etc. e.g. you can use ingest functions to redact sensitive data like email IDs, AWS keys, etc. from logs before the get stored in logs.&lt;/li&gt; &#xA; &lt;li&gt;Advanced Embedded GUI&lt;/li&gt; &#xA; &lt;li&gt;SQL for Logs and Traces. SQL and PromQL for metrics. No need to learn yet another query language.&lt;/li&gt; &#xA; &lt;li&gt;Single binary for installation &amp;amp; running. Binaries available under &lt;a href=&#34;https://github.com/openobserve/openobserve/releases&#34;&gt;releases&lt;/a&gt; for multiple platforms.&lt;/li&gt; &#xA; &lt;li&gt;Storage in local Disk, s3, MinIO, GCS&lt;/li&gt; &#xA; &lt;li&gt;High availability and clustering&lt;/li&gt; &#xA; &lt;li&gt;Drop in replacement for elasticsearch&lt;/li&gt; &#xA; &lt;li&gt;Dynamic Schema&lt;/li&gt; &#xA; &lt;li&gt;Out of the box authentication&lt;/li&gt; &#xA; &lt;li&gt;Vastly easier to operate&lt;/li&gt; &#xA; &lt;li&gt;Seamless upgrades&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For full list of features check &lt;a href=&#34;https://openobserve.ai/docs/#project-status-features-and-roadmap&#34;&gt;documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;You can install OpenObserve in under 2 minutes by following the &lt;a href=&#34;https://openobserve.ai/docs/guide/quickstart/&#34;&gt;quickstart&lt;/a&gt; documentation&lt;/p&gt; &#xA;&lt;h1&gt;OpenObserve Cloud&lt;/h1&gt; &#xA;&lt;p&gt;You can also try OpenObserve without installing it in under 2 minutes by trying out OpenObserve Cloud at &lt;a href=&#34;https://cloud.openobserve.ai&#34;&gt;https://cloud.openobserve.ai&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Screenshots&lt;/h1&gt; &#xA;&lt;h2&gt;Home&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/zo_home.png&#34; alt=&#34;Home&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Logs&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/logs.webp&#34; alt=&#34;Home&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Visualization and dashboard&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/dashboard.png&#34; alt=&#34;Dashboaard&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Alerts&lt;/h2&gt; &#xA;&lt;h3&gt;Real time alerts&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/alert_realtime.jpg&#34; alt=&#34;Alerts Realtime&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Scheduled alerts&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/alert_scheduled.jpg&#34; alt=&#34;Alerts Scheduled&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Streams&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/zo_streams.png&#34; alt=&#34;Home&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Ingestion&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/ingestion.webp&#34; alt=&#34;Home&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Community&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h4&gt;How to develop and contribute to OpenObserve&lt;/h4&gt; &lt;p&gt;Check the &lt;a href=&#34;https://raw.githubusercontent.com/openobserve/openobserve/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; . Also check the &lt;a href=&#34;https://github.com/orgs/openobserve/projects/7&#34;&gt;roadmap items&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;Join our Slack Channel&lt;/h4&gt; &lt;p&gt;&lt;a href=&#34;https://join.slack.com/t/zincobserve/shared_invite/zt-11r96hv2b-UwxUILuSJ1duzl_6mhJwVg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/slack.png&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Easiest way to get support is to join the &lt;a href=&#34;https://join.slack.com/t/zincobserve/shared_invite/zt-11r96hv2b-UwxUILuSJ1duzl_6mhJwVg&#34;&gt;Slack channel&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;Join our weChat Group&lt;/h4&gt; &lt;img src=&#34;https://raw.githubusercontent.com/openobserve/openobserve/main/screenshots/wechat_qr.jpg&#34; width=&#34;300&#34;&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>scroll-tech/scroll-zkevm</title>
    <updated>2023-06-08T01:47:01Z</updated>
    <id>tag:github.com,2023-06-08:/scroll-tech/scroll-zkevm</id>
    <link href="https://github.com/scroll-tech/scroll-zkevm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Scroll&#39;s zkEVM rust crates&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ðŸ“œ scroll-zkevm ðŸ“œ&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/scroll-tech/scroll-zkevm/actions/workflows/unit_test.yml&#34;&gt;&lt;img src=&#34;https://github.com/scroll-tech/scroll-zkevm/actions/workflows/unit_test.yml/badge.svg?sanitize=true&#34; alt=&#34;Unit Test&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/issues/scroll-tech/scroll-zkevm&#34; alt=&#34;issues&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Testing&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;make test-agg&lt;/code&gt; is the main testing entry point for the multi-level circuit constraint system of scroll-zkevm. Developers can understand how the system works by reading the codes of this test.&lt;/p&gt; &#xA;&lt;p&gt;Besides, &lt;code&gt;make test-super-trace&lt;/code&gt; can be used to test the first-level circuit.&lt;/p&gt; &#xA;&lt;h3&gt;Binaries&lt;/h3&gt; &#xA;&lt;p&gt;This repository is designed to be used as a Rust crate, rather than a standalone running process. However, you can still use the following command to run binaries locally.&lt;/p&gt; &#xA;&lt;p&gt;Setup&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo build --release --bin setup&#xA;&#xA;./target/release/setup --params &amp;lt;params-file-path&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you run into linking issues during setup you may need to run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cp `find ./target/release/ | grep libzktrie.so` /usr/local/lib/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to move the zktrielib into a path where your linker can locate it&lt;/p&gt; &#xA;&lt;p&gt;Prove&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo build --release --bin prove&#xA;&#xA;./target/release/prove --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under either of&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apache License, Version 2.0, (&lt;a href=&#34;https://raw.githubusercontent.com/scroll-tech/scroll-zkevm/main/LICENSE-APACHE&#34;&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;MIT license (&lt;a href=&#34;https://raw.githubusercontent.com/scroll-tech/scroll-zkevm/main/LICENSE-MIT&#34;&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;at your option.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>stacks-network/stacks-blockchain</title>
    <updated>2023-06-08T01:47:01Z</updated>
    <id>tag:github.com,2023-06-08:/stacks-network/stacks-blockchain</id>
    <link href="https://github.com/stacks-network/stacks-blockchain" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Stacks blockchain implementation&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;left&#34;&gt; &lt;a href=&#34;https://stacks.co&#34;&gt; &lt;img alt=&#34;Stacks&#34; src=&#34;https://i.imgur.com/zzwnCnY.png&#34; width=&#34;250&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Stacks Blockchain&lt;/h1&gt; &#xA;&lt;p&gt;Reference implementation of the &lt;a href=&#34;https://github.com/stacks-network/stacks&#34;&gt;Stacks blockchain&lt;/a&gt; in Rust.&lt;/p&gt; &#xA;&lt;p&gt;Stacks is a layer-1 blockchain that connects to Bitcoin for security and enables decentralized apps and predictable smart contracts using the &lt;a href=&#34;https://clarity-lang.org/&#34;&gt;Clarity language&lt;/a&gt;. Stacks implements &lt;a href=&#34;https://community.stacks.org/pox&#34;&gt;Proof of Transfer (PoX)&lt;/a&gt; mining that anchors to Bitcoin security. Leader election happens at the Bitcoin blockchain and Stacks (STX) miners write new blocks on the separate Stacks blockchain. With PoX there is no need to modify Bitcoin to enable smart contracts and decentralized apps.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPLv3-blue.svg?style=flat&#34; alt=&#34;License: GPL v3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/stacks-network/stacks-blockchain/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/stacks-network/stacks-blockchain?style=flat&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/stacks-network/stacks-blockchain/actions/workflows/ci.yml?query=event%3Aworkflow_dispatch+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/stacks-network/stacks-blockchain/actions/workflows/ci.yml/badge.svg?branch=master&amp;amp;event=workflow_dispatch&amp;amp;style=flat&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://stacks.chat&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/621759717756370964.svg?sanitize=true&#34; alt=&#34;Discord Chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;h3&gt;1. Download and install Rust&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;For building on Windows, follow the rustup installer instructions at &lt;a href=&#34;https://rustup.rs/&#34;&gt;https://rustup.rs/&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh&#xA;$ source $HOME/.cargo/env&#xA;$ rustup component add rustfmt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When building the &lt;a href=&#34;https://github.com/stacks-network/stacks-blockchain/tree/master&#34;&gt;&lt;code&gt;master&lt;/code&gt;&lt;/a&gt; branch, ensure you are using the latest stable release:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rustup update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Clone the source repository:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone --depth=1 https://github.com/stacks-network/stacks-blockchain.git&#xA;$ cd stacks-blockchain&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Build the project&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cargo build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Run the tests:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cargo test testnet  -- --test-threads=1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Run all unit tests in parallel using &lt;a href=&#34;https://nexte.st/&#34;&gt;nextest&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Warning, this typically takes a few minutes&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cargo nextest run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Run the testnet&lt;/h2&gt; &#xA;&lt;p&gt;You can observe the state machine in action locally by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd testnet/stacks-node&#xA;$ cargo run --bin stacks-node -- start --config=./conf/testnet-follower-conf.toml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;On Windows, many tests will fail if the line endings aren&#39;t &lt;code&gt;LF&lt;/code&gt;. Please ensure that you are have git&#39;s &lt;code&gt;core.autocrlf&lt;/code&gt; set to &lt;code&gt;input&lt;/code&gt; when you clone the repository to avoid any potential issues. This is due to the Clarity language currently being sensitive to line endings.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Additional testnet documentation is available &lt;a href=&#34;https://raw.githubusercontent.com/stacks-network/stacks-blockchain/master/docs/testnet.md&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://docs.stacks.co/docs/nodes-and-miners/miner-testnet&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Release Process&lt;/h2&gt; &#xA;&lt;p&gt;The release process for the stacks blockchain is &lt;a href=&#34;https://raw.githubusercontent.com/stacks-network/stacks-blockchain/master/docs/release-process.md&#34;&gt;defined here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Further Reading&lt;/h2&gt; &#xA;&lt;p&gt;You can learn more by visiting &lt;a href=&#34;https://stacks.co&#34;&gt;the Stacks Website&lt;/a&gt; and checking out the documentation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.stacks.co/&#34;&gt;Stacks docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stacks-network/stacks-blockchain/master/docs/SIPS.md&#34;&gt;Stacks Improvement Proposals (SIPs)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stacks-network/stacks-blockchain/master/docs/mining.md&#34;&gt;Mining&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stacks-network/stacks-blockchain/master/docs/profiling.md&#34;&gt;Profiling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stacks-network/stacks-blockchain/master/docs/rpc-endpoints.md&#34;&gt;RPC endpoints&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stacks-network/stacks-blockchain/master/docs/event-dispatcher.md&#34;&gt;Event dispatcher&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also read the technical papers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://community.stacks.org/pox&#34;&gt;&#34;PoX: Proof of Transfer Mining with Bitcoin&#34;&lt;/a&gt;, May 2020&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stacks.org/stacks&#34;&gt;&#34;Stacks 2.0: Apps and Smart Contracts for Bitcoin&#34;&lt;/a&gt;, Dec 2020&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Copyright and License&lt;/h2&gt; &#xA;&lt;p&gt;The code and documentation copyright are attributed to stacks.org.&lt;/p&gt; &#xA;&lt;p&gt;This code is released under the &lt;a href=&#34;https://www.gnu.org/licenses/quick-guide-gplv3.en.html&#34;&gt;GPL v3 license&lt;/a&gt;, and the docs are released under the &lt;a href=&#34;https://creativecommons.org/&#34;&gt;Creative Commons license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>