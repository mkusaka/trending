<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-30T01:44:57Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>johnlui/PPHC</title>
    <updated>2023-03-30T01:44:57Z</updated>
    <id>tag:github.com,2023-03-30:/johnlui/PPHC</id>
    <link href="https://github.com/johnlui/PPHC" rel="alternate"></link>
    <summary type="html">&lt;p&gt;📙《高并发的哲学原理》开源图书（CC BY-NC-ND）&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Pinatra/Pinatra&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/johnlui/PPHC/main/assets/banner.jpg&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;《高并发的哲学原理 Philosophical Principles of High Concurrency》&lt;/h3&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;简称 &lt;code&gt;PPHC&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;写作目标&lt;/h3&gt; &#xA;&lt;p&gt;本书的目标是在作者有限的认知范围内，讨论一下高并发问题背后隐藏的一个哲学原理——找出单点，进行拆分。&lt;/p&gt; &#xA;&lt;h3&gt;内容梗概&lt;/h3&gt; &#xA;&lt;p&gt;我们将从动静分离讲起，一步步深入 Apache、Nginx、epoll、虚拟机、k8s、异步非阻塞、协程、应用网关、L4/L7 负载均衡器、路由器(网关)、交换机、LVS、软件定义网络(SDN)、Keepalived、DPDK、ECMP、全冗余架构、用户态网卡、集中式存储、分布式存储、PCI-E 5.0、全村的希望 CXL、InnoDB 三级索引、内存缓存、KV 数据库、列存储、内存数据库、Shared-Nothing、计算存储分离、Paxos、微服务架构、削峰、基于地理位置拆分、高可用等等等等。并最终基于地球和人类社会的基本属性，设计出可以服务地球全体人类的高并发架构。&lt;/p&gt; &#xA;&lt;p&gt;全书共八万多字。&lt;/p&gt; &#xA;&lt;h3&gt;更新记录&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;2023年02月18日 《十》中增加 Clickhouse 的部分，并优化结构和措辞&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;目录&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;找出单点，进行拆分&lt;/li&gt; &#xA; &lt;li&gt;Apache 的性能瓶颈与 Nginx 的性能优势&lt;/li&gt; &#xA; &lt;li&gt;基础设施并发：虚拟机与 Kubernetes（k8s）&lt;/li&gt; &#xA; &lt;li&gt;隐藏在语言背后的魔鬼：运行架构为何会成为性能瓶颈&lt;/li&gt; &#xA; &lt;li&gt;拆分网络单点(上)：应用网关、负载均衡和路由器(网关)&lt;/li&gt; &#xA; &lt;li&gt;拆分网络单点(下)：SDN 如何替代百万人民币的负载均衡硬件(网关、LVS、交换机)&lt;/li&gt; &#xA; &lt;li&gt;最难以解决的单点：数据库以及它背后的存储&lt;/li&gt; &#xA; &lt;li&gt;将 InnoDB 剥的一丝不挂：B+ 树与 Buffer Pool&lt;/li&gt; &#xA; &lt;li&gt;细数四代分布式数据库并拆解 TiDB 和 OceanBase（主从、中间件、KV、计算与存储分离、列存储、CAP定理）&lt;/li&gt; &#xA; &lt;li&gt;理论无限容量：站在地球表面&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;网页直接阅读：&lt;a href=&#34;https://lvwenhan.com/tech-epic/499.html&#34;&gt;https://lvwenhan.com/tech-epic/499.html&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h3&gt;作者信息：&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;姓名：吕文翰&lt;/li&gt; &#xA; &lt;li&gt;GitHub：&lt;a href=&#34;https://github.com/johnlui&#34;&gt;johnlui&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;职位：住范儿 CTO&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://lvwenhan.com/content/uploadfile/202301/79c41673579170.jpg&#34; alt=&#34;公众号&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;版权声明&lt;/h3&gt; &#xA;&lt;p&gt;本书版权归属于&lt;a href=&#34;https://github.com/johnlui&#34;&gt;吕文翰&lt;/a&gt;，采用 &lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/legalcode.zh-Hans&#34;&gt;CC BY-NC-ND 4.0&lt;/a&gt; 协议开源，供 GitHub 平台用户免费阅读。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a rel=&#34;license&#34; href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/legalcode.zh-Hans&#34;&gt;&lt;img alt=&#34;Creative Commons License&#34; style=&#34;border-width:0&#34; src=&#34;https://i.creativecommons.org/l/by-nc-nd/4.0/88x31.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>VOICEVOX/voicevox_core</title>
    <updated>2023-03-30T01:44:57Z</updated>
    <id>tag:github.com,2023-03-30:/VOICEVOX/voicevox_core</id>
    <link href="https://github.com/VOICEVOX/voicevox_core" rel="alternate"></link>
    <summary type="html">&lt;p&gt;無料で使える中品質なテキスト読み上げソフトウェア、VOICEVOXのコア&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VOICEVOX CORE&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://deps.rs/repo/github/VOICEVOX/voicevox_core&#34;&gt;&lt;img src=&#34;https://deps.rs/repo/github/VOICEVOX/voicevox_core/status.svg?sanitize=true&#34; alt=&#34;dependency status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://voicevox.hiroshiba.jp/&#34;&gt;VOICEVOX&lt;/a&gt; の音声合成コア。&lt;br&gt; &lt;a href=&#34;https://github.com/VOICEVOX/voicevox_core/releases&#34;&gt;Releases&lt;/a&gt; にビルド済みのコアライブラリ（.so/.dll/.dylib）があります。&lt;/p&gt; &#xA;&lt;p&gt;（エディターは &lt;a href=&#34;https://github.com/VOICEVOX/voicevox/&#34;&gt;VOICEVOX&lt;/a&gt; 、 エンジンは &lt;a href=&#34;https://github.com/VOICEVOX/voicevox_engine/&#34;&gt;VOICEVOX ENGINE&lt;/a&gt; 、 全体構成は &lt;a href=&#34;https://github.com/VOICEVOX/voicevox/raw/main/docs/%E5%85%A8%E4%BD%93%E6%A7%8B%E6%88%90.md&#34;&gt;こちら&lt;/a&gt; に詳細があります。）&lt;/p&gt; &#xA;&lt;h2&gt;環境構築&lt;/h2&gt; &#xA;&lt;p&gt;Downloader を用いて環境構築を行う場合&lt;/p&gt; &#xA;&lt;h3&gt;Windows の場合&lt;/h3&gt; &#xA;&lt;p&gt;PowerShell で下記コマンドを実行してください&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;Invoke-WebRequest https://github.com/VOICEVOX/voicevox_core/releases/latest/download/download-windows-x64.exe -OutFile ./download.exe&#xA;./download.exe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Linux/macOS の場合&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/VOICEVOX/voicevox_core/releases/latest&#34;&gt;最新のリリース&lt;/a&gt;から環境に合わせてダウンローダーのバイナリをダウンロードしてください。 現在利用可能なのは以下の4つです。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;download-linux-arm64&lt;/li&gt; &#xA; &lt;li&gt;download-linux-x64&lt;/li&gt; &#xA; &lt;li&gt;download-osx-arm64&lt;/li&gt; &#xA; &lt;li&gt;download-osx-x64&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;以下はLinuxのx64での実行例です。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;binary=download-linux-x64&#xA;curl -sSfL https://github.com/VOICEVOX/voicevox_core/releases/latest/download/${binary} -o download&#xA;chmod +x download&#xA;./download&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;詳細な Downloader の使い方については &lt;a href=&#34;https://raw.githubusercontent.com/VOICEVOX/voicevox_core/main/docs/downloads/download.md&#34;&gt;こちら&lt;/a&gt; を参照してください&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Downloader を使わない場合&lt;/summary&gt; &#xA; &lt;!--&#xA;#### Raspberry Pi (armhf)の場合&#xA;&#xA;Raspberry Pi 用の ONNX Runtime は以下からダウンロードできます。&#xA;&#xA;- &lt;https://github.com/VOICEVOX/onnxruntime-builder/releases&gt;&#xA;&#xA;動作には、libgomp のインストールが必要です。&#xA;--&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;まず &lt;a href=&#34;https://github.com/VOICEVOX/voicevox_core/releases/latest&#34;&gt;Releases&lt;/a&gt; からダウンロードしたコアライブラリの zip を、適当なディレクトリ名で展開します。CUDA 版、DirectML 版はかならずその zip ファイルをダウンロードしてください。&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://jaist.dl.sourceforge.net/project/open-jtalk/Dictionary/open_jtalk_dic-1.11/open_jtalk_dic_utf_8-1.11.tar.gz&#34;&gt;Open JTalk から配布されている辞書ファイル&lt;/a&gt; をダウンロードしてコアライブラリを展開したディレクトリに展開してください。&lt;/li&gt; &#xA;  &lt;li&gt;CUDA や DirectML を利用する場合は、 &lt;a href=&#34;https://github.com/VOICEVOX/voicevox_additional_libraries/releases/latest&#34;&gt;追加ライブラリ&lt;/a&gt; をダウンロードして、コアライブラリを展開したディレクトリに展開してください。&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;注意&lt;/h3&gt; &#xA;&lt;h4&gt;GPU の使用について&lt;/h4&gt; &#xA;&lt;h5&gt;CUDA&lt;/h5&gt; &#xA;&lt;p&gt;nvidia 製 GPU を搭載した Windows, Linux PC では CUDA を用いた合成が可能です。&lt;/p&gt; &#xA;&lt;p&gt;CUDA 版を利用するには Downloader の実行が必要です。&lt;br&gt; 詳細は &lt;a href=&#34;https://raw.githubusercontent.com/VOICEVOX/voicevox_core/main/docs/downloads/download.md#cuda&#34;&gt;CUDA 版をダウンロードする場合&lt;/a&gt; を参照してください&lt;/p&gt; &#xA;&lt;h5&gt;DirectML&lt;/h5&gt; &#xA;&lt;p&gt;DirectX12 に対応した GPU を搭載した Windows PC では DirectML を用いた合成が可能です&lt;br&gt; DirectML 版を利用するには Downloader の実行が必要です。&lt;br&gt; 詳細は &lt;a href=&#34;https://raw.githubusercontent.com/VOICEVOX/voicevox_core/main/docs/downloads/download.md#directml&#34;&gt;DirectML 版をダウンロードする場合&lt;/a&gt; を参照してください&lt;/p&gt; &#xA;&lt;p&gt;macOS の場合、CUDA の macOS サポートは現在終了しているため、VOICEVOX CORE の macOS 向けコアライブラリも CUDA, CUDNN を利用しない CPU 版のみの提供となります。&lt;/p&gt; &#xA;&lt;!--&#xA;#### Raspberry Piでの使用について&#xA;&#xA;Raspberry PiなどのarmhアーキテクチャPCでの使用では、環境構築時に https://github.com/VOICEVOX/onnxruntime-builder/releases にある独自ビルドのonnxruntimeを使用する必要があります。&#xA;そのため、環境にあったファイルのURLを取得し、上記例の代わりに&#xA;```bash&#xA;python configure.py --ort_download_link &lt;独自ビルドonnxruntimeのURL&gt;&#xA;```&#xA;を実行してください&#xA;&#xA;また、動作には、libgomp のインストールが必要です。&#xA;&#xA;```shell&#xA;sudo apt install libgomp1&#xA;```&#xA;--&gt; &#xA;&lt;h2&gt;サンプル実行&lt;/h2&gt; &#xA;&lt;p&gt;現在このリポジトリでは次のサンプルが提供されています。実行方法についてはそれぞれのディレクトリ内にある README を参照してください&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VOICEVOX/voicevox_core/main/example/python&#34;&gt;Python(pip)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VOICEVOX/voicevox_core/main/example/cpp/unix&#34;&gt;C++(UNIX CMake)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/VOICEVOX/voicevox_core/main/example/cpp/windows&#34;&gt;C++(Windows Visual Studio)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;その他の言語&lt;/h3&gt; &#xA;&lt;p&gt;サンプルコードを実装された際はぜひお知らせください。こちらに追記させて頂きます。&lt;/p&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://voicevox.github.io/voicevox_core/apis/c_api/globals_func.html&#34;&gt;API ドキュメント&lt;/a&gt;をご覧ください。&lt;/p&gt; &#xA;&lt;h2&gt;コアライブラリのビルド&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/VOICEVOX/voicevox_core/releases&#34;&gt;Releases&lt;/a&gt; にあるビルド済みのコアライブラリを利用せず、自分で一からビルドする場合こちらを参照してください。ビルドには &lt;a href=&#34;https://www.rust-lang.org/ja&#34;&gt;Rust&lt;/a&gt; (&lt;a href=&#34;https://docs.microsoft.com/ja-jp/windows/dev-environment/rust/setup&#34;&gt;Windows での Rust 開発環境構築手順はこちら&lt;/a&gt;) と &lt;a href=&#34;https://cmake.org/download/&#34;&gt;cmake&lt;/a&gt; が必要です。&lt;/p&gt; &#xA;&lt;p&gt;model フォルダにある onnx モデルはダミーのため、ノイズの混じった音声が出力されます&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# DLLをビルド&#xA;cargo build --release -p voicevox_core_c_api&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# DLL用のヘッダファイルvoicevox_core.hを生成&#xA;# cbindgenが手元にインストールされているのならそちらでも可&#xA;cargo xtask generate-c-header&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;コアライブラリのテスト&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;タイポチェック&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/crate-ci/typos&#34;&gt;typos&lt;/a&gt; を使ってタイポのチェックを行っています。 &lt;a href=&#34;https://github.com/crate-ci/typos#install&#34;&gt;typos をインストール&lt;/a&gt; した後&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;typos&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;事例紹介&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sevenc-nanashi/voicevox.rb&#34;&gt;voicevox.rb&lt;/a&gt; &lt;a href=&#34;https://github.com/sevenc-nanashi&#34;&gt;@sevenc-nanashi&lt;/a&gt;&lt;/strong&gt; ･･･ VOICEVOX CORE の Ruby 向け FFI ラッパー&lt;br&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/y-chan/node-voicevox-engine&#34;&gt;Node VOICEVOX Engine&lt;/a&gt; &lt;a href=&#34;https://github.com/y-chan&#34;&gt;@y-chan&lt;/a&gt;&lt;/strong&gt; ･･･ VOICEVOX ENGINE の Node.js/C++ 実装&lt;br&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/yamachu/VoicevoxEngineSharp&#34;&gt;VOICEVOX ENGINE SHARP&lt;/a&gt; &lt;a href=&#34;https://github.com/yamachu&#34;&gt;@yamachu&lt;/a&gt;&lt;/strong&gt; ･･･ VOICEVOX ENGINE の C# 実装&lt;br&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/windymelt/voicevoxcore4s&#34;&gt;voicevoxcore4s&lt;/a&gt; &lt;a href=&#34;https://github.com/windymelt&#34;&gt;@windymelt&lt;/a&gt;&lt;/strong&gt; ･･･ VOICEVOX CORE の Scala(JVM) 向け FFI ラッパー&lt;/p&gt; &#xA;&lt;h2&gt;ライセンス&lt;/h2&gt; &#xA;&lt;p&gt;ソースコードのライセンスは &lt;a href=&#34;https://raw.githubusercontent.com/VOICEVOX/voicevox_core/main/LICENSE&#34;&gt;MIT LICENSE&lt;/a&gt; です。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/VOICEVOX/voicevox_core/releases&#34;&gt;Releases&lt;/a&gt; にあるビルド済みのコアライブラリは別ライセンスなのでご注意ください。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lsd-rs/lsd</title>
    <updated>2023-03-30T01:44:57Z</updated>
    <id>tag:github.com,2023-03-30:/lsd-rs/lsd</id>
    <link href="https://github.com/lsd-rs/lsd" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The next gen ls command&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LSD (LSDeluxe)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Peltoche/lsd/master/LICENSE&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/license-Apache%20v2-blue.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/lsd&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/lsd.svg?sanitize=true&#34; alt=&#34;Latest version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Peltoche/lsd/actions&#34;&gt;&lt;img src=&#34;https://github.com/Peltoche/lsd/workflows/CICD/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/Peltoche/lsd&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/Peltoche/lsd/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://repology.org/project/lsd/versions&#34;&gt;&lt;img src=&#34;https://img.shields.io/repology/repositories/lsd&#34; alt=&#34;versions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Peltoche/lsd/assets/screen_lsd.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project is a rewrite of GNU &lt;code&gt;ls&lt;/code&gt; with lots of added features like colors, icons, tree-view, more formatting options etc. The project is heavily inspired by the super &lt;a href=&#34;https://github.com/athityakumar/colorls&#34;&gt;colorls&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Packaging status&lt;/summary&gt; &#xA; &lt;a href=&#34;https://repology.org/project/lsd/versions&#34;&gt; &lt;img src=&#34;https://repology.org/badge/vertical-allrepos/lsd.svg?columns=3&#34; alt=&#34;Packaging status&#34;&gt; &lt;/a&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;Install the patched fonts of powerline nerd-font and/or font-awesome. Have a look at the &lt;a href=&#34;https://github.com/ryanoasis/nerd-fonts/raw/master/readme.md&#34;&gt;Nerd Font README&lt;/a&gt; for more installation instructions. Don&#39;t forget to setup your terminal in order to use the correct font.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;OS/Distro&lt;/th&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Archlinux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pacman -S lsd&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fedora&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;dnf install lsd&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Gentoo&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sudo emerge sys-apps/lsd&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;brew install lsd&lt;/code&gt; or &lt;code&gt;sudo port install lsd&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NixOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nix-env -iA nixos.lsd&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FreeBSD&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pkg install lsd&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NetBSD or any &lt;code&gt;pkgsrc&lt;/code&gt; platform&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pkgin install lsd&lt;/code&gt; or &lt;code&gt;cd /usr/pkgsrc/sysutils/lsd &amp;amp;&amp;amp; make install&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;scoop install lsd&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Android (via Termux)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pkg install lsd&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Debian sid and bookworm&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;apt install lsd&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ubuntu/Debian based distro&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;snap discontinued&lt;/strong&gt;, use &lt;code&gt;sudo dpkg -i lsd_0.23.1_amd64.deb&lt;/code&gt; and get &lt;code&gt;.deb&lt;/code&gt; file from &lt;a href=&#34;https://github.com/Peltoche/lsd/releases&#34;&gt;release page&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Solus&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;eopkg it lsd&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Void Linux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sudo xbps-install lsd&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;openSUSE&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sudo zypper install lsd&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;From source&lt;/h3&gt; &#xA;&lt;p&gt;With Rust&#39;s package manager cargo, you can install lsd via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo install lsd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to install the latest master branch commit:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo install --git https://github.com/Peltoche/lsd.git --branch master&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;From Binaries&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/Peltoche/lsd/releases&#34;&gt;release page&lt;/a&gt; includes precompiled binaries for Linux, macOS and Windows for every release. You can also get the latest binary of &lt;code&gt;master&lt;/code&gt; branch from the &lt;a href=&#34;https://github.com/Peltoche/lsd/actions?query=branch%3Amaster+is%3Asuccess+event%3Apush&#34;&gt;GitHub action build artifacts&lt;/a&gt; (choose the top action and scroll down to the artifacts section).&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;lsd&lt;/code&gt; can be configured with a configuration file to set the default options. Check &lt;a href=&#34;https://raw.githubusercontent.com/lsd-rs/lsd/master/#config-file-content&#34;&gt;Config file content&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h3&gt;Config file location&lt;/h3&gt; &#xA;&lt;h3&gt;Non-Windows&lt;/h3&gt; &#xA;&lt;p&gt;On non-Windows systems &lt;code&gt;lsd&lt;/code&gt; follows the &lt;a href=&#34;https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html&#34;&gt;XDG Base Directory Specification&lt;/a&gt; convention for the location of the configuration file. The configuration dir &lt;code&gt;lsd&lt;/code&gt; uses is itself named &lt;code&gt;lsd&lt;/code&gt;. In that directory it looks first for a file called &lt;code&gt;config.yaml&lt;/code&gt;. For most people it should be enough to put their config file at &lt;code&gt;~/.config/lsd/config.yaml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;On Windows systems &lt;code&gt;lsd&lt;/code&gt; only looks for the &lt;code&gt;config.yaml&lt;/code&gt; files in one location: &lt;code&gt;%APPDATA%\lsd\&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Custom&lt;/h3&gt; &#xA;&lt;p&gt;You can also provide a configuration file from a non standard location: &lt;code&gt;lsd --config-file [PATH]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Config file content&lt;/h3&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;This is an example config file with the default values and some additional remarks.&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# == Classic ==&#xA;# This is a shorthand to override some of the options to be backwards compatible&#xA;# with `ls`. It affects the &#34;color&#34;-&amp;gt;&#34;when&#34;, &#34;sorting&#34;-&amp;gt;&#34;dir-grouping&#34;, &#34;date&#34;&#xA;# and &#34;icons&#34;-&amp;gt;&#34;when&#34; options.&#xA;# Possible values: false, true&#xA;classic: false&#xA;&#xA;# == Blocks ==&#xA;# This specifies the columns and their order when using the long and the tree&#xA;# layout.&#xA;# Possible values: permission, user, group, context, size, date, name, inode, links&#xA;blocks:&#xA;  - permission&#xA;  - user&#xA;  - group&#xA;  - size&#xA;  - date&#xA;  - name&#xA;&#xA;# == Color ==&#xA;# This has various color options. (Will be expanded in the future.)&#xA;color:&#xA;  # When to colorize the output.&#xA;  # When &#34;classic&#34; is set, this is set to &#34;never&#34;.&#xA;  # Possible values: never, auto, always&#xA;  when: auto&#xA;  # How to colorize the output.&#xA;  # When &#34;classic&#34; is set, this is set to &#34;no-color&#34;.&#xA;  # Possible values: default, &amp;lt;theme-file-name&amp;gt;&#xA;  # when specifying &amp;lt;theme-file-name&amp;gt;, lsd will look up theme file&#xA;  # XDG Base Directory if relative, e.g. ~/.config/lsd/themes/&amp;lt;theme-file-name&amp;gt;.yaml,&#xA;  # The file path if absolute&#xA;  theme: default&#xA;&#xA;# == Date ==&#xA;# This specifies the date format for the date column. The freeform format&#xA;# accepts a strftime like string.&#xA;# When &#34;classic&#34; is set, this is set to &#34;date&#34;.&#xA;# Possible values: date, relative, &#39;+&amp;lt;date_format&amp;gt;&#39;&#xA;# `date_format` will be a `strftime` formatted value. e.g. `date: &#39;+%d %b %y %X&#39;` will give you a date like this: 17 Jun 21 20:14:55&#xA;date: date&#xA;&#xA;# == Dereference ==&#xA;# Whether to dereference symbolic links.&#xA;# Possible values: false, true&#xA;dereference: false&#xA;&#xA;# == Display ==&#xA;# What items to display. Do not specify this for the default behavior.&#xA;# Possible values: all, almost-all, directory-only&#xA;# display: all&#xA;&#xA;# == Icons ==&#xA;icons:&#xA;  # When to use icons.&#xA;  # When &#34;classic&#34; is set, this is set to &#34;never&#34;.&#xA;  # Possible values: always, auto, never&#xA;  when: auto&#xA;  # Which icon theme to use.&#xA;  # Possible values: fancy, unicode&#xA;  theme: fancy&#xA;  # Separator between icon and the name&#xA;  # Default to 1 space&#xA;  separator: &#34; &#34;&#xA;&#xA;# == Ignore Globs ==&#xA;# A list of globs to ignore when listing.&#xA;# ignore-globs:&#xA;#   - .git&#xA;&#xA;# == Indicators ==&#xA;# Whether to add indicator characters to certain listed files.&#xA;# Possible values: false, true&#xA;indicators: false&#xA;&#xA;# == Layout ==&#xA;# Which layout to use. &#34;oneline&#34; might be a bit confusing here and should be&#xA;# called &#34;one-per-line&#34;. It might be changed in the future.&#xA;# Possible values: grid, tree, oneline&#xA;layout: grid&#xA;&#xA;# == Recursion ==&#xA;recursion:&#xA;  # Whether to enable recursion.&#xA;  # Possible values: false, true&#xA;  enabled: false&#xA;  # How deep the recursion should go. This has to be a positive integer. Leave&#xA;  # it unspecified for (virtually) infinite.&#xA;  # depth: 3&#xA;&#xA;# == Size ==&#xA;# Specifies the format of the size column.&#xA;# Possible values: default, short, bytes&#xA;size: default&#xA;&#xA;# == Permission ==&#xA;# Specify the format of the permission column&#xA;# Possible value: rwx, octal&#xA;permission: rwx&#xA;&#xA;# == Sorting ==&#xA;sorting:&#xA;  # Specify what to sort by.&#xA;  # Possible values: extension, name, time, size, version&#xA;  column: name&#xA;  # Whether to reverse the sorting.&#xA;  # Possible values: false, true&#xA;  reverse: false&#xA;  # Whether to group directories together and where.&#xA;  # When &#34;classic&#34; is set, this is set to &#34;none&#34;.&#xA;  # Possible values: first, last, none&#xA;  dir-grouping: none&#xA;&#xA;# == No Symlink ==&#xA;# Whether to omit showing symlink targets&#xA;# Possible values: false, true&#xA;no-symlink: false&#xA;&#xA;# == Total size ==&#xA;# Whether to display the total size of directories.&#xA;# Possible values: false, true&#xA;total-size: false&#xA;&#xA;# == Hyperlink ==&#xA;# Attach hyperlink to filenames&#xA;# Possible values: always, auto, never&#xA;hyperlink: never&#xA;&#xA;# == Symlink arrow ==&#xA;# Specifies how the symlink arrow display, chars in both ascii and utf8&#xA;symlink-arrow: ⇒&#xA;&#xA;# == Header ==&#xA;# Whether to display block headers.&#xA;# Possible values: false, true&#xA;header: false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Theme&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;lsd&lt;/code&gt; can be configured with theme files to set the colors or icons.&lt;/p&gt; &#xA;&lt;h3&gt;Color Theme&lt;/h3&gt; &#xA;&lt;p&gt;Color theme can be configured in the &lt;a href=&#34;https://raw.githubusercontent.com/lsd-rs/lsd/master/#configuration&#34;&gt;configuration file&lt;/a&gt;(color.theme), The valid theme configurations are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;default&lt;/code&gt;: the default color scheme shipped in &lt;code&gt;lsd&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;theme-file-name(yaml): use the theme file to specify colors(without the &lt;code&gt;yaml&lt;/code&gt; extension)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;when configured with the &lt;code&gt;theme-file-name&lt;/code&gt; which is a &lt;code&gt;yaml&lt;/code&gt; file, &lt;code&gt;lsd&lt;/code&gt; will look up the theme file in the following way:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;relative name: check the XDG Base Directory, e.g. ~/.config/lsd/themes/&#xA;  &lt;theme-file-name&gt;&#xA;   .yaml&#xA;  &lt;/theme-file-name&gt;&lt;/li&gt; &#xA; &lt;li&gt;absolute name: use the file path and name to find theme file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://raw.githubusercontent.com/lsd-rs/lsd/master/#color-theme-file-content&#34;&gt;Color Theme file content&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h4&gt;Color Theme file content&lt;/h4&gt; &#xA;&lt;p&gt;Theme file use the &lt;a href=&#34;https://crates.io/crates/crossterm&#34;&gt;crossterm&lt;/a&gt; to configure the colors, check &lt;a href=&#34;https://docs.rs/crossterm/0.20.0/crossterm/style/enum.Color.html&#34;&gt;crossterm&lt;/a&gt; for supported colors.&lt;/p&gt; &#xA;&lt;p&gt;Color table: &lt;a href=&#34;https://upload.wikimedia.org/wikipedia/commons/1/15/Xterm_256color_chart.svg&#34;&gt;https://upload.wikimedia.org/wikipedia/commons/1/15/Xterm_256color_chart.svg&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please notice that color values would ignore the case, both lowercase and UPPERCASE is supported.&lt;/p&gt; &#xA;&lt;p&gt;This is the default theme scheme shipped with &lt;code&gt;lsd&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;user: 230&#xA;group: 187&#xA;permission:&#xA;  read: dark_green&#xA;  write: dark_yellow&#xA;  exec: dark_red&#xA;  exec-sticky: 5&#xA;  no-access: 245&#xA;  octal: 6&#xA;  acl: dark_cyan&#xA;  context: cyan&#xA;date:&#xA;  hour-old: 40&#xA;  day-old: 42&#xA;  older: 36&#xA;size:&#xA;  none: 245&#xA;  small: 229&#xA;  medium: 216&#xA;  large: 172&#xA;inode:&#xA;  valid: 13&#xA;  invalid: 245&#xA;links:&#xA;  valid: 13&#xA;  invalid: 245&#xA;tree-edge: 245&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When creating a theme for &lt;code&gt;lsd&lt;/code&gt;, you can specify any part of the default theme, and then change its colors, the items missed would fallback to use the default colors.&lt;/p&gt; &#xA;&lt;p&gt;Please also notice that an empty theme is &lt;strong&gt;NOT&lt;/strong&gt; supported due to &lt;a href=&#34;https://github.com/dtolnay/serde-yaml/issues/86&#34;&gt;a bug in serde lib&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Icon Theme&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This feature is not available in a release yet. You can get this feature by &lt;a href=&#34;https://github.com/Peltoche/lsd#from-source&#34;&gt;building from &lt;code&gt;master&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Icon theme can be configured in a fixed location, &lt;code&gt;$XDG_CONFIG_DIR/lsd/icons.yaml&lt;/code&gt;, for example, &lt;code&gt;~/.config/lsd/icons.yaml&lt;/code&gt; on macOS, please check &lt;a href=&#34;https://raw.githubusercontent.com/lsd-rs/lsd/master/#config-file-location&#34;&gt;Config file location&lt;/a&gt; to make sure where is &lt;code&gt;$XDG_CONFIG_DIR&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;As the file name indicated, the icon theme file is a &lt;code&gt;yaml&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://raw.githubusercontent.com/lsd-rs/lsd/master/#icon-theme-file-content&#34;&gt;Icon Theme file content&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h4&gt;Icon Theme file content&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;lsd&lt;/code&gt; support 3 kinds of icon overrides, by &lt;code&gt;name&lt;/code&gt;, by &lt;code&gt;filetype&lt;/code&gt; and by &lt;code&gt;extension&lt;/code&gt;. The final set of icons used will be a combination of what is shipped with in &lt;code&gt;lsd&lt;/code&gt; with overrides from config applied on top of it. &lt;em&gt;You can find the default set of icons &lt;a href=&#34;https://raw.githubusercontent.com/lsd-rs/lsd/master/src/theme/icon.rs&#34;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Both nerd font glyphs and unicode emojis can be used for icons. You can find an example of icons customization below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;name:&#xA;  .trash: &#xA;  .cargo: &#xA;  .emacs.d: &#xA;  a.out: &#xA;extension:&#xA;  go: &#xA;  hs: &#xA;  rs: 🦀&#xA;filetype:&#xA;  dir: 📂&#xA;  file: 📄&#xA;  pipe: 📩&#xA;  socket: &#xA;  executable: &#xA;  symlink-dir: &#xA;  symlink-file: &#xA;  device-char: &#xA;  device-block: ﰩ&#xA;  special: &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;External Configurations&lt;/h2&gt; &#xA;&lt;h3&gt;Required&lt;/h3&gt; &#xA;&lt;p&gt;Enable nerd fonts for your terminal, URxvt for example in &lt;code&gt;.Xresources&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;URxvt*font:    xft:Hack Nerd Font:style=Regular:size=11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Optional&lt;/h3&gt; &#xA;&lt;p&gt;In order to use lsd when entering the &lt;code&gt;ls&lt;/code&gt; command, you need to add this to your shell configuration file (~/.bashrc, ~/.zshrc, etc.):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;alias ls=&#39;lsd&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some further examples of useful aliases:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;alias l=&#39;ls -l&#39;&#xA;alias la=&#39;ls -a&#39;&#xA;alias lla=&#39;ls -la&#39;&#xA;alias lt=&#39;ls --tree&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;F.A.Q&lt;/h2&gt; &#xA;&lt;h3&gt;Icons not showing up&lt;/h3&gt; &#xA;&lt;p&gt;For &lt;code&gt;lsd&lt;/code&gt; to be able to display icons, the font has to include special font glyphs. This might not be the case for most fonts that you download. Thankfully, you can patch most fonts using &lt;a href=&#34;https://www.nerdfonts.com/&#34;&gt;NerdFont&lt;/a&gt; and add these icons. Or you can just download an already patched version of your favourite font from &lt;a href=&#34;https://www.nerdfonts.com/font-downloads&#34;&gt;NerdFont font download page&lt;/a&gt;. Here is a guide on how to setup fonts on &lt;a href=&#34;https://github.com/Peltoche/lsd/issues/199#issuecomment-494218334&#34;&gt;macOS&lt;/a&gt; and &lt;a href=&#34;https://github.com/Peltoche/lsd/issues/423&#34;&gt;Android&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To check if the font you are using is setup correctly, try running the following snippet in a shell and see if that &lt;a href=&#34;https://github.com/Peltoche/lsd/issues/510#issuecomment-860000306&#34;&gt;prints a folder icon&lt;/a&gt;. If it prints a box, or question mark or something else, then you might have some issues in how you setup the font or how your terminal emulator renders the font.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;echo $&#39;\uf115&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Icons missing or not rendering correctly using PuTTY/KiTTY on Windows&lt;/h3&gt; &#xA;&lt;p&gt;First of all, make sure a patched font is installed and PuTTY/KiTTY is configurated to use it, please check &lt;a href=&#34;https://raw.githubusercontent.com/lsd-rs/lsd/master/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There are problems for PuTTY/KiTTY to show 2 char wide icons, make sure using a 1 char wide font like &lt;a href=&#34;https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/Hack/Regular/complete/Hack%20Regular%20Nerd%20Font%20Complete%20Mono%20Windows%20Compatible.ttf&#34;&gt;Hack Regular Nerd Font Complete Mono Windows Compatible&lt;/a&gt;, check &lt;a href=&#34;https://github.com/Peltoche/lsd/issues/331&#34;&gt;this issue&lt;/a&gt; for detail.&lt;/p&gt; &#xA;&lt;h3&gt;Colors&lt;/h3&gt; &#xA;&lt;p&gt;You can customize filetype colors using &lt;code&gt;LS_COLORS&lt;/code&gt; and other colors using the theme.&lt;/p&gt; &#xA;&lt;p&gt;The default colors are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;User/Group&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Permission&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;File Type (changes based on your terminal colorscheme)&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Date&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;File Size&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://via.placeholder.com/15/ffffd7/000000?text=+&#34; alt=&#34;#ffffd7&#34;&gt; User&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://via.placeholder.com/15/00d700/000000?text=+&#34; alt=&#34;#00d700&#34;&gt; Read&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://via.placeholder.com/15/0087ff/000000?text=+&#34; alt=&#34;#0087ff&#34;&gt; Directory&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://via.placeholder.com/15/00d700/000000?text=+&#34; alt=&#34;#00d700&#34;&gt; within the last hour&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://via.placeholder.com/15/ffffaf/000000?text=+&#34; alt=&#34;#ffffaf&#34;&gt; Small File&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://via.placeholder.com/15/d7d7af/000000?text=+&#34; alt=&#34;#d7d7af&#34;&gt; Group&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://via.placeholder.com/15/d7ff87/000000?text=+&#34; alt=&#34;#d7ff87&#34;&gt; Write&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://via.placeholder.com/15/00d700/000000?text=+&#34; alt=&#34;#00d700&#34;&gt; Executable File&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://via.placeholder.com/15/00d787/000000?text=+&#34; alt=&#34;#00d787&#34;&gt; within the last day&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://via.placeholder.com/15/ffaf87/000000?text=+&#34; alt=&#34;#ffaf87&#34;&gt; Medium File&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://via.placeholder.com/15/af0000/000000?text=+&#34; alt=&#34;#af0000&#34;&gt; Execute&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://via.placeholder.com/15/ffffff/000000?text=+&#34; alt=&#34;#ffffff&#34;&gt; Non-Executable File&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://via.placeholder.com/15/00af87/000000?text=+&#34; alt=&#34;#00af87&#34;&gt; older&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://via.placeholder.com/15/d78700/000000?text=+&#34; alt=&#34;#d78700&#34;&gt; Large File&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://via.placeholder.com/15/ff00ff/000000?text=+&#34; alt=&#34;#ff00ff&#34;&gt; Execute with Stickybit&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://via.placeholder.com/15/af0000/000000?text=+&#34; alt=&#34;#af0000&#34;&gt; Broken Symlink&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://via.placeholder.com/15/ffffff/000000?text=+&#34; alt=&#34;#ffffff&#34;&gt; Non File&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://via.placeholder.com/15/d75f87/000000?text=+&#34; alt=&#34;#d75f87&#34;&gt; No Access&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://via.placeholder.com/15/00d7d7/000000?text=+&#34; alt=&#34;#00d7d7&#34;&gt; Pipe/Symlink/Blockdevice/Socket/Special&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://via.placeholder.com/15/d78700/000000?text=+&#34; alt=&#34;#d78700&#34;&gt; CharDevice&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;Checkout &lt;a href=&#34;https://github.com/trapd00r/LS_COLORS&#34;&gt;trapd00r/LS_COLORS&lt;/a&gt; and &lt;a href=&#34;https://github.com/sharkdp/vivid&#34;&gt;sharkdp/vivid&lt;/a&gt; for help in themeing using &lt;code&gt;LS_COLORS&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;First char of folder/file getting trimmed&lt;/h3&gt; &#xA;&lt;p&gt;Workaround for Konsole: ㅤEdit the config file (or &lt;a href=&#34;https://raw.githubusercontent.com/lsd-rs/lsd/master/#config-file-location&#34;&gt;create it&lt;/a&gt; if it doesn&#39;t already exist) and paste the following into it (contains invisible unicode characters):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;icons:&#xA;    separator: &#34; ㅤ&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is a known issue in a few terminal emulator. Try using a different terminal emulator like. &lt;a href=&#34;https://github.com/alacritty/alacritty&#34;&gt;Alacritty&lt;/a&gt; and &lt;a href=&#34;https://github.com/kovidgoyal/kitty&#34;&gt;Kitty&lt;/a&gt; are really good alternatives. You might also want to check if your font is responsible for causing this. To verify this, try running lsd with icons disabled and if it still does not have the first character, then this is an lsd bug:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;lsd --icon never --ignore-config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;UTF-8 Chars&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;lsd&lt;/code&gt; will try to display the UTF-8 chars in file name, A &lt;code&gt;U+FFFD REPLACEMENT CHARACTER&lt;/code&gt;(�) is used to represent the invalid UTF-8 chars.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Everyone can contribute to this project, improving the code or adding functions. If anyone wants something to be added we will try to do it.&lt;/p&gt; &#xA;&lt;p&gt;As this is being updated regularly, don&#39;t forget to rebase your fork before creating a pull-request.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Special thanks to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/meain&#34;&gt;meain&lt;/a&gt; for all his contributions and reviews&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/danieldulaney&#34;&gt;danieldulaney&lt;/a&gt; for the Windows integration&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sharkdp&#34;&gt;sharkdp&lt;/a&gt; and his superb &lt;a href=&#34;https://github.com/sharkdp/fd&#34;&gt;fd&lt;/a&gt; from which I have stolen a lot of CI stuff.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/athityakumar&#34;&gt;athityakumar&lt;/a&gt; for the project &lt;a href=&#34;https://github.com/athityakumar/colorls&#34;&gt;colorls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Peltoche/lsd/graphs/contributors&#34;&gt;All the other contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>