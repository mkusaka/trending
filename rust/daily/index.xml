<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-23T01:37:54Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lox-space/lox</title>
    <updated>2025-02-23T01:37:54Z</updated>
    <id>tag:github.com,2025-02-23:/lox-space/lox</id>
    <link href="https://github.com/lox-space/lox" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Oxidized Astrodynamics&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Lox – Oxidized Astrodynamics&lt;/h1&gt; &#xA;&lt;h3&gt;A safe, ergonomic astrodynamics library for the modern space industry&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codecov.io/gh/lox-space/lox&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/lox-space/lox/graph/badge.svg?token=R1W6HLN2N2&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/lox-space/lox/actions/workflows/rust.yml/badge.svg?sanitize=true&#34; alt=&#34;Rust&#34;&gt; &lt;img src=&#34;https://github.com/lox-space/lox/actions/workflows/python.yml/badge.svg?sanitize=true&#34; alt=&#34;Python&#34;&gt; &lt;a href=&#34;https://codspeed.io/lox-space/lox&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://codspeed.io/badge.json&#34; alt=&#34;CodSpeed Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lox-space/lox/main/public/crabstellation.webp&#34; alt=&#34;A star chart of a crab constellation&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Lox is under active development and does not yet have a stable release. The API of all crates is subject to significant change.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Lox exposes a comprehensive astrodynamics API at varying levels of granularity. The high-level interface offered by &lt;code&gt;lox-space&lt;/code&gt; is designed specifically for mission planning and analysis, while crates like &lt;code&gt;lox-time&lt;/code&gt;, &lt;code&gt;lox-earth&lt;/code&gt; and &lt;code&gt;lox-orbits&lt;/code&gt; provide tools for advanced users.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A fully featured space mission simulator backend.&lt;/li&gt; &#xA; &lt;li&gt;Python bindings for interactive use.&lt;/li&gt; &#xA; &lt;li&gt;Tools for working with time in astronomical and terrestrial time scales.&lt;/li&gt; &#xA; &lt;li&gt;Define orbits as Keplerian elements or state vectors in different coordinate frames.&lt;/li&gt; &#xA; &lt;li&gt;Ephemeris, size and shape data for all major celestial bodies.&lt;/li&gt; &#xA; &lt;li&gt;Ingest and interpolate Earth orientation parameters with ease.&lt;/li&gt; &#xA; &lt;li&gt;Extensible – bring your own time scales, transformation algorithms, data sources and more.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Crates&lt;/h2&gt; &#xA;&lt;h3&gt;lox-space&lt;/h3&gt; &#xA;&lt;p&gt;The entrypoint to the Lox ecosystem, suitable for most use cases. Provides a high-level interface for mission planning and analysis. Also includes Lox&#39;s Python bindings.&lt;/p&gt; &#xA;&lt;h3&gt;lox-time&lt;/h3&gt; &#xA;&lt;p&gt;Tools for working with time in all commonly-used astronomical time scales based on a high-precision timestamp representation. Offers leap-second aware conversion from UTC to continuous time scales.&lt;/p&gt; &#xA;&lt;h3&gt;lox-bodies&lt;/h3&gt; &#xA;&lt;p&gt;Provides structs representing all major celestial bodies, conveniently categorized by a variety of traits exposing SPICE-derived data.&lt;/p&gt; &#xA;&lt;h3&gt;lox-earth&lt;/h3&gt; &#xA;&lt;p&gt;Essential algorithms for Earth-centric astrodynamics, including nutation-precession models, Earth rotation angle, CIP and CIO locations, and coordinate transformations.&lt;/p&gt; &#xA;&lt;h3&gt;lox-ephem&lt;/h3&gt; &#xA;&lt;p&gt;Parses ephemeris data from external sources such as SPICE kernels.&lt;/p&gt; &#xA;&lt;h3&gt;lox-io&lt;/h3&gt; &#xA;&lt;p&gt;Utilities for reading and writing data in various formats.&lt;/p&gt; &#xA;&lt;h3&gt;lox-math&lt;/h3&gt; &#xA;&lt;p&gt;A collection of mathematical utilities used across the Lox ecosystem.&lt;/p&gt; &#xA;&lt;h2&gt;Used by...&lt;/h2&gt; &#xA;&lt;h3&gt;Ephemerista&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitlab.com/librespacefoundation/ephemerista/ephemerista-simulator&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lox-space/lox/main/public/ephemerista-logo.webp&#34; alt=&#34;The Ephemerista logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A next-generation, open-source space mission simulator &lt;a href=&#34;https://connectivity.esa.int/projects/ossmisi&#34;&gt;commissioned by the European Space Agency&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Why &#34;Lox&#34;?&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Liquid oxygen—abbreviated LOx, LOX or Lox in the aerospace, submarine and gas industries—is the liquid form of molecular oxygen. It was used as the &lt;em&gt;oxidizer&lt;/em&gt; in the first liquid-fueled rocket invented in 1926 by Robert H. Goddard, an application which has continued to the present. &lt;a href=&#34;https://en.wikipedia.org/wiki/Liquid_oxygen&#34;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>cot-rs/cot</title>
    <updated>2025-02-23T01:37:54Z</updated>
    <id>tag:github.com,2025-02-23:/cot-rs/cot</id>
    <link href="https://github.com/cot-rs/cot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Rust web framework for lazy developers.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Cot&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/cot-rs/cot/actions/workflows/rust.yml&#34;&gt;&lt;img src=&#34;https://github.com/cot-rs/cot/workflows/Rust%20CI/badge.svg?sanitize=true&#34; alt=&#34;Rust Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/cot&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/cot.svg?sanitize=true&#34; alt=&#34;crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cot.rs/guide/latest/&#34;&gt;&lt;img src=&#34;https://img.shields.io/website?url=https%3A%2F%2Fcot.rs%2Fguide%2Flatest%2F&amp;amp;label=guide&amp;amp;up_message=online&#34; alt=&#34;Guide&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.rs/cot&#34;&gt;&lt;img src=&#34;https://docs.rs/cot/badge.svg?sanitize=true&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/cot-rs/cot&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/cot-rs/cot/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.cot.rs&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1330137289287925781?logo=Discord&amp;amp;logoColor=white&#34; alt=&#34;Discord chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] Cot is currently missing a lot of features and is &lt;strong&gt;not ready&lt;/strong&gt; for anything even remotely close to production use. That said, you are more than welcome to try it out and provide feedback!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Cot is an easy to use, modern, and fast web framework for Rust. It has been designed to be familiar if you&#39;ve ever used &lt;a href=&#34;https://www.djangoproject.com/&#34;&gt;Django&lt;/a&gt;, and easy to learn if you haven&#39;t. It&#39;s a batteries-included framework built on top of &lt;a href=&#34;https://github.com/tokio-rs/axum&#34;&gt;axum&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you want to get started building with Cot, we recommend reading &lt;a href=&#34;https://cot.rs/guide/latest/&#34;&gt;the official guide&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easy to use API&lt;/strong&gt; — in many ways modeled after Django, Cot&#39;s API is designed to be easy to use and intuitive. Sensible defaults make it for easy rapid development, while the API is still empowering you when needed. The documentation is a first-class citizen in Cot, making it easy to find what you&#39;re looking for.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ORM integration&lt;/strong&gt; — Cot comes with its own ORM, allowing you to interact with your database in a way that feels Rusty and intuitive. Rust types are the source of truth, and the ORM takes care of translating them to and from the database, as well as creating the migrations automatically.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Type safe&lt;/strong&gt; — wherever possible, Cot uses Rust&#39;s type system to prevent common mistakes and bugs. Not only views are taking advantage of the Rust&#39;s type system, but also the ORM, the admin panel, and even the templates. All that to catch errors as early as possible.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Admin panel&lt;/strong&gt; — Cot comes with an admin panel out of the box, allowing you to manage your app&#39;s data with ease. Adding new models to the admin panel is stupidly simple, making it a great tool not only for rapid development and debugging, but with its customization options, also for production use.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Secure by default&lt;/strong&gt; — security should be opt-out, not opt-in. Cot takes care of making your web apps secure by default, defending it against common modern web vulnerabilities. You can focus on building your app, not securing it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;Testing&lt;/h3&gt; &#xA;&lt;p&gt;Tests that require using external databases are ignored by default. In order to run them, execute the following in the root of the repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker compose up -d&#xA;cargo test --all-features -- --include-ignored&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can them execute the following command to stop the database:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker compose down&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;a href=&#34;https://star-history.com/#cot-rs/cot&amp;amp;Date&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=cot-rs/cot&amp;amp;type=Date&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=cot-rs/cot&amp;amp;type=Date&#34;&gt; &#xA;  &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=cot-rs/cot&amp;amp;type=Date&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Cot is licensed under either of the following, at your option:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apache License, Version 2.0, (&lt;a href=&#34;https://raw.githubusercontent.com/cot-rs/cot/master/LICENSE-APACHE&#34;&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;MIT License (&lt;a href=&#34;https://raw.githubusercontent.com/cot-rs/cot/master/LICENSE-MIT&#34;&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;https://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in Cot by you shall be dual licensed under the MIT License and Apache License, Version 2.0, without any additional terms or conditions.&lt;/p&gt;</summary>
  </entry>
</feed>