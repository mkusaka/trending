<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-12T01:36:25Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>teodevgroup/teo</title>
    <updated>2024-06-12T01:36:25Z</updated>
    <id>tag:github.com,2024-06-12:/teodevgroup/teo</id>
    <link href="https://github.com/teodevgroup/teo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Schema-driven web server framework.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Teo&lt;/h1&gt; &#xA; &lt;a href=&#34;https://crates.io/crates/teo&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/teo?style=flat-square&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://www.npmjs.com/package/@teocloud/teo&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/%40teocloud%2Fteo?style=flat-square&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://pypi.org/project/teo/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/teo?style=flat-square&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=yeannylam.teo-vscode&#34;&gt;&lt;img src=&#34;https://img.shields.io/visual-studio-marketplace/v/yeannylam.teo-vscode?style=flat-square&amp;amp;label=VSCode%20marketplace&amp;amp;color=%2300AFD7&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/teodevgroup/teo/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/teocloud/teo.svg?style=flat-square&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/teodevgroup/teo&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&#34;&gt;&lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;div&gt;&#xA;  &lt;strong&gt;Schema-driven&lt;/strong&gt; web server framework.&#xA; &lt;/div&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://docs.teodev.io/getting-started/quickstart&#34;&gt;Quickstart&lt;/a&gt; &#xA; &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; &#xA; &lt;a href=&#34;https://teodev.io/&#34;&gt;Official website&lt;/a&gt; &#xA; &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; &#xA; &lt;a href=&#34;https://docs.teodev.io/&#34;&gt;Docs&lt;/a&gt; &#xA; &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; &#xA; &lt;a href=&#34;https://blog.teodev.io&#34;&gt;Blog&lt;/a&gt; &#xA; &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; &#xA; &lt;a href=&#34;https://teodev.io/discord&#34;&gt;Discord&lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;hr&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Teo is &lt;strong&gt;schema-driven&lt;/strong&gt; web server framework. The server side API is native to Rust, Node.js and Python.&lt;/p&gt; &#xA;&lt;h2&gt;Highlights &amp;amp; Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Native to &lt;strong&gt;Rust&lt;/strong&gt;, &lt;strong&gt;Node.js&lt;/strong&gt; and &lt;strong&gt;Python&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Innovative schema definition inspired by &lt;strong&gt;GraphQL&lt;/strong&gt; and &lt;strong&gt;Prisma&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Auto database migration&lt;/li&gt; &#xA; &lt;li&gt;Supports &lt;strong&gt;MySQL&lt;/strong&gt;, &lt;strong&gt;PostgreSQL&lt;/strong&gt;, &lt;strong&gt;SQLite&lt;/strong&gt; and &lt;strong&gt;MongoDB&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Generated &lt;strong&gt;ORM&lt;/strong&gt; types and interfaces&lt;/li&gt; &#xA; &lt;li&gt;Generated &lt;strong&gt;query clients&lt;/strong&gt; for frontend&lt;/li&gt; &#xA; &lt;li&gt;Very efficient and performant&lt;/li&gt; &#xA; &lt;li&gt;Data sanitization, transformation and validation&lt;/li&gt; &#xA; &lt;li&gt;Builtin user &lt;strong&gt;sessions&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Builtin &lt;strong&gt;permission&lt;/strong&gt; check&lt;/li&gt; &#xA; &lt;li&gt;First in last out &lt;strong&gt;middlewares&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Custom &lt;strong&gt;route handlers&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Generated customizable &lt;strong&gt;admin dashboard&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Plays great with AI tools&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;The fastest way to get started with Teo is by following the &lt;a href=&#34;https://docs.teodev.io/getting-started/quickstart&#34;&gt;Quickstart guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Install Node.js edition.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install @teocloud/teo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install Python edition.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install teo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install Rust edition.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo install teo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Write a schema-only server&lt;/h3&gt; &#xA;&lt;p&gt;To write a server is quite simple with Teo. Create a file named &lt;code&gt;schema.teo&lt;/code&gt;. Specify which database to connect and which port to listen.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-teo&#34;&gt;connector {&#xA;  provider: .sqlite,&#xA;  url: &#34;sqlite::memory:&#34;&#xA;}&#xA; &#xA;server {&#xA;  bind: (&#34;0.0.0.0&#34;, 5050)&#xA;}&#xA; &#xA;model User {&#xA;  @id @autoIncrement @readonly&#xA;  id: Int&#xA;  @unique @onSet($if($presents, $isEmail))&#xA;  email: String&#xA;  name: String?&#xA;  @relation(fields: .id, references: .authorId)&#xA;  posts: Post[]&#xA;}&#xA; &#xA;model Post {&#xA;  @id @autoIncrement @readonly&#xA;  id: Int&#xA;  title: String&#xA;  content: String?&#xA;  @default(false)&#xA;  published: Bool&#xA;  @foreignKey&#xA;  authorId: Int&#xA;  @relation(fields: .authorId, references: .id)&#xA;  author: User&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start the server with &lt;code&gt;teo serve&lt;/code&gt; command. Now you can create, update, delete, read, aggregate and group by. Read our &lt;a href=&#34;https://docs.teodev.io/guides/query-client-guides/crud&#34;&gt;Query client guide&lt;/a&gt; for detailed usage.&lt;/p&gt; &#xA;&lt;h3&gt;Write custom handlers&lt;/h3&gt; &#xA;&lt;p&gt;Declare the handler in the schema.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-teo&#34;&gt;@map(.get, &#34;/echo/:data&#34;, interface: &#34;EchoPathArguments&#34;)&#xA;declare nonapi handler echo(): Any&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Implement the handler with program code.&lt;/p&gt; &#xA;&lt;h4&gt;Node.js implementation&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { App, Response, RequestCtx } from &#39;@teocloud/teo&#39;&#xA;import { EchoPathArguments } from &#39;./entities&#39;&#xA; &#xA;const app = new App()&#xA;app.mainNamespace().defineHandler(&#34;echo&#34;, (ctx: RequestCtx) =&amp;gt; {&#xA;    const pathArguments: EchoPathArguments = ctx.pathArguments()&#xA;    return Response.string(pathArguments.data, &#34;text/plain&#34;)&#xA;})&#xA;app.run()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Python implementation&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from asyncio import run&#xA;from teo import App, Response, RequestCtx&#xA;from entities import EchoPathArguments&#xA; &#xA;async def main():&#xA;    app = App()&#xA;    def echo_handler(ctx: RequestCtx):&#xA;        path_arguments: EchoPathArguments = ctx.path_arguments()&#xA;        return Response.string(path_arguments[&#34;data&#34;], &#34;text/plain&#34;)&#xA;    app.main_namespace().define_handler(&#34;echo&#34;, echo_handler)&#xA;    await app.run()&#xA; &#xA;run(main())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Rust implementation&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;mod entities;&#xA; &#xA;use tokio::main;&#xA;use teo::prelude::{App, Response, Result, path};&#xA;use crate::entities::EchoPathArguments;&#xA; &#xA;#[main]&#xA;async fn main() -&amp;gt; Result&amp;lt;()&amp;gt; {&#xA;    let app = App::new()?;&#xA;    app.main_namespace_mut().define_handler(&#34;echo&#34;, |path_args: EchoPathArguments| async move {&#xA;        Ok::&amp;lt;Response, Error&amp;gt;(Response::string(path_args.data(), &#34;text/plain&#34;))&#xA;    });&#xA;    app.run().await&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tutorials&lt;/h2&gt; &#xA;&lt;p&gt;We prepared a &lt;a href=&#34;https://docs.teodev.io/getting-started/beginner-tutorial/write-a-schema-only-app&#34;&gt;Beginner tutorial series&lt;/a&gt; to help you learn and understand Teo.&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to submit issues in this repo.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Read our &lt;a href=&#34;https://github.com/teodevgroup/teo/raw/main/CONTRIBUTING.md&#34;&gt;Contributing guide&lt;/a&gt; to set projects up and start contributing.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;TEO is under Apache 2.0 license.&lt;/p&gt;</summary>
  </entry>
</feed>