<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-28T01:46:29Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jkfran/killport</title>
    <updated>2023-04-28T01:46:29Z</updated>
    <id>tag:github.com,2023-04-28:/jkfran/killport</id>
    <link href="https://github.com/jkfran/killport" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A command-line tool to easily kill processes running on a specified port.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;killport&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;killport&lt;/code&gt; is a command-line utility for killing processes listening on specific ports. It&#39;s designed to be simple, fast, and effective. The tool is built with Rust and works on Linux and macOS.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Kill processes by port number&lt;/li&gt; &#xA; &lt;li&gt;Supports multiple port numbers&lt;/li&gt; &#xA; &lt;li&gt;Verbosity control&lt;/li&gt; &#xA; &lt;li&gt;Works on Linux and macOS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Using Homebrew&lt;/h3&gt; &#xA;&lt;p&gt;Run the following command to install killport using Homebrew.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew tap jkfran/killport&#xA;brew install killport&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using install.sh&lt;/h3&gt; &#xA;&lt;p&gt;Run the following command to automatically download and install &lt;code&gt;killport&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -sL https://bit.ly/killport | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Don&#39;t forget to add &lt;code&gt;$HOME/.local/bin&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt; environment variable, if it&#39;s not already present.&lt;/p&gt; &#xA;&lt;h3&gt;Using cargo&lt;/h3&gt; &#xA;&lt;p&gt;Run the following command to install killport using cargo. If you don&#39;t have cargo, follow the &lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;official Rust installation guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo install killport&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Binary Releases&lt;/h3&gt; &#xA;&lt;p&gt;You can download the binary releases for different architectures from the &lt;a href=&#34;https://github.com/jkfran/killport/releases&#34;&gt;releases page&lt;/a&gt; and manually install them.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;killport [FLAGS] &amp;lt;ports&amp;gt;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;p&gt;Kill a single process listening on port 8080:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;killport 8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Kill multiple processes listening on ports 8045, 8046, and 8080:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;killport 8045 8046 8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Flags&lt;/h3&gt; &#xA;&lt;p&gt;-v, --verbose Increase the verbosity level. Use multiple times for more detailed output.&lt;/p&gt; &#xA;&lt;p&gt;-h, --help Display the help message and exit.&lt;/p&gt; &#xA;&lt;p&gt;-V, --version Display the version information and exit.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions to the killport project! Before you start, please read our &lt;a href=&#34;https://raw.githubusercontent.com/jkfran/killport/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt; and the &lt;a href=&#34;https://raw.githubusercontent.com/jkfran/killport/main/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To contribute, follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the repository on GitHub.&lt;/li&gt; &#xA; &lt;li&gt;Clone your fork and create a new branch for your feature or bugfix.&lt;/li&gt; &#xA; &lt;li&gt;Make your changes, following our coding guidelines.&lt;/li&gt; &#xA; &lt;li&gt;Add tests for your changes and ensure all tests pass.&lt;/li&gt; &#xA; &lt;li&gt;Commit your changes, following our commit message guidelines.&lt;/li&gt; &#xA; &lt;li&gt;Push your changes to your fork and create a pull request.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We&#39;ll review your pull request and provide feedback or merge your changes.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/jkfran/killport/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;. See the LICENSE file for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rustic-rs/rustic</title>
    <updated>2023-04-28T01:46:29Z</updated>
    <id>tag:github.com,2023-04-28:/rustic-rs/rustic</id>
    <link href="https://github.com/rustic-rs/rustic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;rustic - fast, encrypted, deduplicated backups powered by Rust&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;rustic - fast, encrypted, deduplicated backups powered by Rust&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://crates.io/crates/rustic-rs&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/rustic-rs.svg?sanitize=true&#34; alt=&#34;crate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.rs/rustic-rs/&#34;&gt;&lt;img src=&#34;https://docs.rs/rustic-rs/badge.svg?sanitize=true&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/license-Apache2.0/MIT-blue.svg?sanitize=true&#34; alt=&#34;Apache2/MIT licensed&#34;&gt; &lt;a href=&#34;https://crates.io/crates/rustic-rs&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/d/rustic-rs.svg?sanitize=true&#34; alt=&#34;Crates.io Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Rustic is a backup tool that provides fast, encrypted, deduplicated backups written in &lt;a href=&#34;https://www.rust-lang.org/&#34;&gt;Rust&lt;/a&gt;. It reads and writes the &lt;a href=&#34;https://github.com/restic/restic&#34;&gt;restic&lt;/a&gt; repo format described in the &lt;a href=&#34;https://github.com/restic/restic/raw/master/doc/design.rst&#34;&gt;design document&lt;/a&gt; and can be used as a restic replacement in most cases.&lt;/p&gt; &#xA;&lt;p&gt;Rustic supports the major operating systems (Linux, MacOs, *BSD), Windows support is experimental.&lt;/p&gt; &#xA;&lt;p&gt;Note that rustic currently is in a beta release and misses regression tests.&lt;/p&gt; &#xA;&lt;p&gt;You can ask questions in the &lt;a href=&#34;https://github.com/rustic-rs/rustic/discussions&#34;&gt;Discussions&lt;/a&gt; or have a look at the &lt;a href=&#34;https://raw.githubusercontent.com/rustic-rs/rustic/main/FAQ.md&#34;&gt;FAQ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Backup data is deduplicated and encrypted.&lt;/li&gt; &#xA; &lt;li&gt;Backup storage can be local or cloud storages, including cold storages.&lt;/li&gt; &#xA; &lt;li&gt;Allows multiple clients to concurrently access a backup repository using lock-free operations.&lt;/li&gt; &#xA; &lt;li&gt;Backups by default are append-only on the repository.&lt;/li&gt; &#xA; &lt;li&gt;The operations are robustly designed and can be safely aborted and efficiently resumed.&lt;/li&gt; &#xA; &lt;li&gt;Snapshot organization is possible by hostname, backup paths, label and tags. Also a rich set of metadata is saved with each snapshot.&lt;/li&gt; &#xA; &lt;li&gt;Retention policies and cleaning of old backups can be highly customized.&lt;/li&gt; &#xA; &lt;li&gt;Follow-up backups only process changed files, but still create a complete backup snapshot.&lt;/li&gt; &#xA; &lt;li&gt;In-place restore only modifies files which are changed.&lt;/li&gt; &#xA; &lt;li&gt;Can use config files for easy configuration of all every-day commands, see &lt;a href=&#34;https://raw.githubusercontent.com/rustic-rs/rustic/main/examples/&#34;&gt;example config files&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick start:&lt;/h2&gt; &#xA;&lt;img src=&#34;https://github.com/rustic-rs/rustic/raw/main/screenshots/rustic.png&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/rustic-rs/rustic/raw/main/screenshots/rustic-restore.png&#34;&gt; &#xA;&lt;h2&gt;Are binaries available?&lt;/h2&gt; &#xA;&lt;p&gt;Sure. Check out the &lt;a href=&#34;https://github.com/rustic-rs/rustic/releases&#34;&gt;releases&lt;/a&gt;. Binaries for the latest development version are available &lt;a href=&#34;https://github.com/rustic-rs/rustic-beta&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What is the difference between rustic and restic?&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/rustic-rs/rustic/main/doc/comparison-restic.md&#34;&gt;Comparison between rustic and restic&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under either of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License, Version 2.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT license&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;at your option.&lt;/p&gt; &#xA;&lt;h3&gt;Contribution&lt;/h3&gt; &#xA;&lt;p&gt;Contributions in form of &lt;a href=&#34;https://github.com/rustic-rs/rustic/issues/new/choose&#34;&gt;issues&lt;/a&gt; or PRs are very welcome.&lt;/p&gt; &#xA;&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.&lt;/p&gt;</summary>
  </entry>
</feed>