<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-22T01:40:40Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tsoding/bada</title>
    <updated>2023-12-22T01:40:40Z</updated>
    <id>tag:github.com,2023-12-22:/tsoding/bada</id>
    <link href="https://github.com/tsoding/bada" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple Programming Language that compiles to BEAM bytecode&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bada&lt;/h1&gt; &#xA;&lt;p&gt;Simple Programming Language that compiles to BEAM bytecode.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Install dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rust-lang.org/&#34;&gt;Rust&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.erlang.org/&#34;&gt;Erlang&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Compile the Compiler (we don&#39;t use Cargo because we don&#39;t have any thirdparty dependencies yet):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ rustc ./src/bada.rs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Compile an example using the Compiler:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ ./bada ./examples/bada.boom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Load the example into Erlang environment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ erl&#xA;&amp;gt; code:add_path(&#34;./examples/&#34;).&#xA;&amp;gt; code:load_file(bada).&#xA;&amp;gt; bada:hello().&#xA;&amp;gt; bada:world().&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To reload the Example module:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt; code:purge(bada), code:load_file(bada).&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>vincent-herlemont/native_db</title>
    <updated>2023-12-22T01:40:40Z</updated>
    <id>tag:github.com,2023-12-22:/vincent-herlemont/native_db</id>
    <link href="https://github.com/vincent-herlemont/native_db" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Drop-in embedded database&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Native DB&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://crates.io/crates/native_db&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/native_db&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/vincent-herlemont/native_db/actions/workflows/build_and_test_release.yml&#34;&gt;&lt;img src=&#34;https://github.com/vincent-herlemont/native_db/actions/workflows/build_and_test_release.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux/Windows/macOS/Android/iOS (Build/Test/Release)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.rs/native_db&#34;&gt;&lt;img src=&#34;https://docs.rs/native_db/badge.svg?sanitize=true&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/vincent-herlemont/native_db/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/l/native_db&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vincent-herlemont/native_db/main/#contributors-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/all_contributors-1-orange.svg?sanitize=true&#34; alt=&#34;All Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt; &#xA;&lt;p&gt;Here&#39;s a drop-in, fast, embedded database for multi-platform apps (server, desktop, mobile). Sync Rust types effortlessly. Enjoy! üòåüçÉ.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simple API ü¶Ä.&lt;/li&gt; &#xA; &lt;li&gt;Support for &lt;strong&gt;multiple indexes&lt;/strong&gt; (primary, secondary, unique, non-unique, optional).&lt;/li&gt; &#xA; &lt;li&gt;Minimal boilerplate.&lt;/li&gt; &#xA; &lt;li&gt;Transparent serialization/deserialization using &lt;a href=&#34;https://crates.io/crates/native_model&#34;&gt;native_model&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Automatic model migration&lt;/strong&gt; üåü.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Thread-safe&lt;/strong&gt; and fully &lt;strong&gt;ACID-compliant&lt;/strong&gt; transactions provided by &lt;a href=&#34;https://github.com/cberner/redb&#34;&gt;redb&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-time&lt;/strong&gt; subscription with filters for &lt;code&gt;insert&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;delete&lt;/code&gt; operations.&lt;/li&gt; &#xA; &lt;li&gt;Compatible with all Rust types (&lt;code&gt;enum&lt;/code&gt;, &lt;code&gt;struct&lt;/code&gt;, &lt;code&gt;tuple&lt;/code&gt; etc.).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hot snapshots&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Add this to your &lt;code&gt;Cargo.toml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[dependencies]&#xA;native_db = &#34;0.5.1&#34;&#xA;native_model = &#34;0.4.2&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: &lt;code&gt;native_db&lt;/code&gt; requires &lt;code&gt;native_model&lt;/code&gt; to work.&lt;/p&gt; &#xA;&lt;h1&gt;Status&lt;/h1&gt; &#xA;&lt;p&gt;Active development. The API is not stable yet and may change in the future.&lt;/p&gt; &#xA;&lt;h1&gt;Usual API&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/struct.DatabaseBuilder.html&#34;&gt;&lt;strong&gt;DatabaseBuilder&lt;/strong&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/struct.DatabaseBuilder.html#method.define&#34;&gt;&lt;strong&gt;define&lt;/strong&gt;&lt;/a&gt; a model.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/struct.DatabaseBuilder.html#method.create&#34;&gt;&lt;strong&gt;create&lt;/strong&gt;&lt;/a&gt; / &lt;a href=&#34;https://docs.rs/native_db/latest/native_db/struct.DatabaseBuilder.html#method.open&#34;&gt;&lt;strong&gt;open&lt;/strong&gt;&lt;/a&gt; a database.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/struct.DatabaseBuilder.html#method.create_in_memory&#34;&gt;&lt;strong&gt;create_in_memory&lt;/strong&gt;&lt;/a&gt; an in-memory database.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/struct.Database.html&#34;&gt;&lt;strong&gt;Database&lt;/strong&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/struct.Database.html#method.snapshot&#34;&gt;&lt;strong&gt;snapshot&lt;/strong&gt;&lt;/a&gt; the database.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;rw_transaction&lt;/strong&gt; open a read-write transaction. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/transaction/struct.RwTransaction.html#method.insert&#34;&gt;&lt;strong&gt;insert&lt;/strong&gt;&lt;/a&gt; a new item.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/transaction/struct.RwTransaction.html#method.update&#34;&gt;&lt;strong&gt;update&lt;/strong&gt;&lt;/a&gt; an existing item.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/transaction/struct.RwTransaction.html#method.remove&#34;&gt;&lt;strong&gt;remove&lt;/strong&gt;&lt;/a&gt; an existing item.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/transaction/struct.RwTransaction.html#method.commit&#34;&gt;&lt;strong&gt;commit&lt;/strong&gt;&lt;/a&gt; the transaction.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/transaction/struct.RwTransaction.html#method.migrate&#34;&gt;&lt;strong&gt;migrate&lt;/strong&gt;&lt;/a&gt; a model.&lt;/li&gt; &#xA;     &lt;li&gt;plus all read-only transaction APIs.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;r_transaction&lt;/strong&gt; open a read-only transaction. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;get&lt;/strong&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/transaction/query/struct.RGet.html#method.primary&#34;&gt;&lt;strong&gt;primary&lt;/strong&gt;&lt;/a&gt; an item by its primary key.&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/transaction/query/struct.RGet.html#method.secondary&#34;&gt;&lt;strong&gt;secondary&lt;/strong&gt;&lt;/a&gt; an item by its secondary key.&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;scan&lt;/strong&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;strong&gt;primary&lt;/strong&gt; &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/transaction/query/struct.PrimaryScan.html#method.all&#34;&gt;&lt;strong&gt;all&lt;/strong&gt;&lt;/a&gt; items.&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/transaction/query/struct.PrimaryScan.html#method.start_with&#34;&gt;&lt;strong&gt;start_with&lt;/strong&gt;&lt;/a&gt; items with a primary key starting with a given value.&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/transaction/query/struct.PrimaryScan.html#method.range&#34;&gt;&lt;strong&gt;range&lt;/strong&gt;&lt;/a&gt; items with a primary key in a given range.&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;       &lt;li&gt;&lt;strong&gt;secondary&lt;/strong&gt; &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/transaction/query/struct.SecondaryScan.html#method.all&#34;&gt;&lt;strong&gt;all&lt;/strong&gt;&lt;/a&gt; items with a given secondary key.&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/transaction/query/struct.SecondaryScan.html#method.start_with&#34;&gt;&lt;strong&gt;start_with&lt;/strong&gt;&lt;/a&gt; items with a secondary key starting with a given value.&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/transaction/query/struct.SecondaryScan.html#method.range&#34;&gt;&lt;strong&gt;range&lt;/strong&gt;&lt;/a&gt; items with a secondary key in a given range.&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;len&lt;/strong&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/transaction/query/struct.RLen.html#method.primary&#34;&gt;&lt;strong&gt;primary&lt;/strong&gt;&lt;/a&gt; the number of items.&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/transaction/query/struct.RLen.html#method.secondary&#34;&gt;&lt;strong&gt;secondary&lt;/strong&gt;&lt;/a&gt; the number of items with a given secondary key.&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;watch&lt;/strong&gt; real-time subscriptions via &lt;a href=&#34;https://doc.rust-lang.org/std/sync/mpsc/fn.channel.html&#34;&gt;std channel&lt;/a&gt; based or &lt;a href=&#34;https://docs.rs/tokio/latest/tokio/sync/mpsc/fn.unbounded_channel.html&#34;&gt;tokio channel&lt;/a&gt; based depending on the feature &lt;code&gt;tokio&lt;/code&gt;. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;get&lt;/strong&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/watch/query/struct.WatchGet.html#method.primary&#34;&gt;&lt;strong&gt;primary&lt;/strong&gt;&lt;/a&gt; an item by its primary key.&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/watch/query/struct.WatchGet.html#method.secondary&#34;&gt;&lt;strong&gt;secondary&lt;/strong&gt;&lt;/a&gt; an item by its secondary key.&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;scan&lt;/strong&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;strong&gt;primary&lt;/strong&gt; &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/watch/query/struct.WatchScanPrimary.html#method.all&#34;&gt;&lt;strong&gt;all&lt;/strong&gt;&lt;/a&gt; items.&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/watch/query/struct.WatchScanPrimary.html#method.start_with&#34;&gt;&lt;strong&gt;start_with&lt;/strong&gt;&lt;/a&gt; items with a primary key starting with a given value.&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/watch/query/struct.WatchScanPrimary.html#method.range&#34;&gt;&lt;strong&gt;range&lt;/strong&gt;&lt;/a&gt; items with a primary key in a given range.&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;       &lt;li&gt;&lt;strong&gt;secondary&lt;/strong&gt; &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/watch/query/struct.WatchScanSecondary.html#method.all&#34;&gt;&lt;strong&gt;all&lt;/strong&gt;&lt;/a&gt; items with a given secondary key.&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/watch/query/struct.WatchScanSecondary.html#method.start_with&#34;&gt;&lt;strong&gt;start_with&lt;/strong&gt;&lt;/a&gt; items with a secondary key starting with a given value.&lt;/li&gt; &#xA;         &lt;li&gt;&lt;a href=&#34;https://docs.rs/native_db/latest/native_db/watch/query/struct.WatchScanSecondary.html#method.range&#34;&gt;&lt;strong&gt;range&lt;/strong&gt;&lt;/a&gt; items with a secondary key in a given range.&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Example&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;use serde::{Deserialize, Serialize};&#xA;use native_db::*;&#xA;use native_model::{native_model, Model};&#xA;&#xA;#[derive(Serialize, Deserialize, PartialEq, Debug)]&#xA;#[native_model(id = 1, version = 1)]&#xA;#[native_db]&#xA;struct Item {&#xA;    #[primary_key]&#xA;    id: u32,&#xA;    #[secondary_key]&#xA;    name: String,&#xA;}&#xA;&#xA;fn main() -&amp;gt; Result&amp;lt;(), db_type::Error&amp;gt; {&#xA;    let mut builder = DatabaseBuilder::new();&#xA;    // Initialize the model&#xA;    builder.define::&amp;lt;Item&amp;gt;()?;&#xA;    &#xA;    // Create a database in memory&#xA;    let mut db = builder.create_in_memory()?;&#xA;    &#xA;    // Insert data (open a read-write transaction)&#xA;    let rw = db.rw_transaction().unwrap();&#xA;    rw.insert(Item { id: 1, name: &#34;red&#34;.to_string() })?;&#xA;    rw.insert(Item { id: 2, name: &#34;green&#34;.to_string() })?;&#xA;    rw.insert(Item { id: 3, name: &#34;blue&#34;.to_string() })?;&#xA;    rw.commit()?;&#xA;    &#xA;    // Open a read-only transaction&#xA;    let r = db.r_transaction()?;&#xA;    // Retrieve data with id=3 &#xA;    let retrieve_data: Item = r.get().primary(3_u32)?.unwrap();&#xA;    println!(&#34;data id=&#39;3&#39;: {:?}&#34;, retrieve_data);&#xA;    // Iterate items with name starting with &#34;red&#34;&#xA;    for item in r.scan().secondary::&amp;lt;Item&amp;gt;(ItemKey::name)?.start_with(&#34;red&#34;) {&#xA;        println!(&#34;data name=\&#34;red\&#34;: {:?}&#34;, item);&#xA;    }&#xA;    &#xA;    // Remove data (open a read-write transaction)&#xA;    let rw = db.rw_transaction()?;&#xA;    rw.remove(retrieve_data)?;&#xA;    rw.commit()?;&#xA;    Ok(())&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/elliot14A&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/84667163?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Akshith Madhur&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Akshith Madhur&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/vincent-herlemont/native_db/commits?author=elliot14A&#34; title=&#34;Code&#34;&gt;üíª&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;</summary>
  </entry>
</feed>