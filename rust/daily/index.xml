<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-18T01:43:39Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rerun-io/rerun</title>
    <updated>2023-02-18T01:43:39Z</updated>
    <id>tag:github.com,2023-02-18:/rerun-io/rerun</id>
    <link href="https://github.com/rerun-io/rerun" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Log images, point clouds, etc, and visualize them effortlessly. Built in Rust using egui&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.rerun.io/&#34;&gt; &lt;img alt=&#34;banner&#34; src=&#34;https://user-images.githubusercontent.com/1148717/218142418-1d320929-6b7a-486e-8277-fbeef2432529.png&#34;&gt; &lt;/a&gt; &lt;/h1&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://pypi.org/project/rerun-sdk/&#34;&gt; &lt;img alt=&#34;PyPi&#34; src=&#34;https://img.shields.io/pypi/v/rerun-sdk.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/rerun&#34;&gt; &lt;img alt=&#34;crates.io&#34; src=&#34;https://img.shields.io/crates/v/rerun.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/rerun-io/rerun/raw/master/LICENSE-MIT&#34;&gt; &lt;img alt=&#34;MIT&#34; src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/rerun-io/rerun/raw/master/LICENSE-APACHE&#34;&gt; &lt;img alt=&#34;Apache&#34; src=&#34;https://img.shields.io/badge/license-Apache-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/Gcm8BbTaAj&#34;&gt; &lt;img alt=&#34;Rerun Discord&#34; src=&#34;https://img.shields.io/discord/1062300748202921994?label=Rerun%20Discord&#34;&gt; &lt;/a&gt; &lt;/h1&gt; &#xA;&lt;h1&gt;Rerun: Visualization infrastructure for computer vision.&lt;/h1&gt; &#xA;&lt;p&gt;Use one of our logging APIs (Python or Rust) to log rich data, such as images and point clouds, to the Rerun Viewer, where it is visualized live or after the fact.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-py&#34;&gt;import rerun as rr&#xA;&#xA;rr.init(&#34;my_app&#34;, spawn = True) # Spawn a Rerun Viewer and stream log events to it&#xA;&#xA;rr.log_image(&#34;rgb_image&#34;, image)&#xA;rr.log_points(&#34;points&#34;, positions)&#xA;rr.log_rect(&#34;car&#34;, bbox)&#xA;‚Ä¶&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;800&#34; alt=&#34;Rerun Viewer&#34; src=&#34;https://user-images.githubusercontent.com/1148717/218763490-f6261ecd-e19e-4520-9b25-446ce1ee6328.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;code&gt;pip install rerun-sdk&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Rust&lt;/strong&gt;: &lt;code&gt;cargo add rerun&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;C / C++&lt;/strong&gt;: Coming soon&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Rerun Viewer binary&lt;/h3&gt; &#xA;&lt;p&gt;Both the Python and Rust library can start the Rerun Viewer, but to stream log data over the network or load our &lt;code&gt;.rrd&lt;/code&gt; data files you also need the &lt;code&gt;rerun&lt;/code&gt; binary.&lt;/p&gt; &#xA;&lt;p&gt;It can be installed with &lt;code&gt;pip install rerun-sdk&lt;/code&gt; or with &lt;code&gt;cargo install rerun&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You should now be able to run &lt;code&gt;rerun --help&lt;/code&gt; in any terminal.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üìö &lt;a href=&#34;http://rerun.io/docs&#34;&gt;High-level docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;‚öôÔ∏è &lt;a href=&#34;https://raw.githubusercontent.com/rerun-io/rerun/main/examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üêç &lt;a href=&#34;https://ref.rerun.io/docs/python&#34;&gt;Python API docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ü¶Ä &lt;a href=&#34;https://docs.rs/rerun/&#34;&gt;Rust API docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;‚ÅâÔ∏è &lt;a href=&#34;https://www.rerun.io/docs/getting-started/troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;We are in early beta. There are many features we want to add, and the API is still evolving. &lt;em&gt;Expect breaking changes!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Some shortcomings:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Big points clouds (1M+) are slow (&lt;a href=&#34;https://github.com/rerun-io/rerun/issues/1136&#34;&gt;#1136&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;The data you want to visualize must fit in RAM. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;See &lt;a href=&#34;https://github.com/rerun-io/rerun/issues/1138&#34;&gt;https://github.com/rerun-io/rerun/issues/1138&lt;/a&gt; for how to bound memory use&lt;/li&gt; &#xA;   &lt;li&gt;We plan on having a disk-based data store some time in the future&lt;/li&gt; &#xA;   &lt;li&gt;Additionally, Rerun is using more memory than it should at the moment (&lt;a href=&#34;https://github.com/rerun-io/rerun/pull/1242&#34;&gt;#1242&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;The Rust library takes a long time to compile &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;We have way too many big dependencies, and we are planning on improving the situation (&lt;a href=&#34;https://github.com/rerun-io/rerun/pull/1316&#34;&gt;#1316&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Business model&lt;/h2&gt; &#xA;&lt;p&gt;Rerun uses an open core model. Everything in this repository will stay open source and free (as in beer), forever. In the future, Rerun will offer a commercial product that builds on top of the core free project.&lt;/p&gt; &#xA;&lt;p&gt;The Rerun open source project targets the needs of individual developers. The commercial product targets the needs specific to teams that build and run computer vision and robotics products.&lt;/p&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rerun-io/rerun/main/ARCHITECTURE.md&#34;&gt;&lt;code&gt;ARCHITECTURE.md&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rerun-io/rerun/main/BUILD.md&#34;&gt;&lt;code&gt;BUILD.md&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rerun-io/rerun/main/CODE_OF_CONDUCT.md&#34;&gt;&lt;code&gt;CODE_OF_CONDUCT.md&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rerun-io/rerun/main/CODE_STYLE.md&#34;&gt;&lt;code&gt;CODE_STYLE.md&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rerun-io/rerun/main/CONTRIBUTING.md&#34;&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rerun-io/rerun/main/RELEASES.md&#34;&gt;&lt;code&gt;RELEASES.md&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing a pre-release Python SDK&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the correct &lt;code&gt;.whl&lt;/code&gt; from &lt;a href=&#34;https://github.com/rerun-io/rerun/releases&#34;&gt;GitHub Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;pip install rerun_sdk&amp;lt;...&amp;gt;.whl&lt;/code&gt; (replace &lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt; with the actual filename)&lt;/li&gt; &#xA; &lt;li&gt;Test it: &lt;code&gt;rerun --version&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>soywod/himalaya</title>
    <updated>2023-02-18T01:43:39Z</updated>
    <id>tag:github.com,2023-02-18:/soywod/himalaya</id>
    <link href="https://github.com/soywod/himalaya" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Command-line interface for email management&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üì´ Himalaya &lt;a href=&#34;https://github.com/soywod/himalaya/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/soywod/himalaya?color=success&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#pimalaya.himalaya:matrix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/matrix/pimalaya.himalaya:matrix.org?color=success&amp;amp;label=chat&#34; alt=&#34;Matrix&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Himalaya is a CLI based on the &lt;a href=&#34;https://git.sr.ht/~soywod/himalaya-lib&#34;&gt;himalaya-lib&lt;/a&gt; that allows you to manipulate your emails using commands in your console.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/10437171/138774902-7b9de5a3-93eb-44b0-8cfb-6d2e11e3b1aa.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Disclaimer: the project is under active development, do not use in production before the &lt;code&gt;v1.0.0&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pimalaya.org/himalaya/docs/cli/usage/folders/list.html&#34;&gt;Folder listing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pimalaya.org/himalaya/docs/cli/usage/envelopes/list.html&#34;&gt;Envelopes listing&lt;/a&gt;, &lt;a href=&#34;https://pimalaya.org/himalaya/docs/cli/usage/envelopes/search.html&#34;&gt;searching&lt;/a&gt; and &lt;a href=&#34;https://pimalaya.org/himalaya/docs/cli/usage/envelopes/sort.html&#34;&gt;sorting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pimalaya.org/himalaya/docs/cli/usage/emails/write.html&#34;&gt;Email composition&lt;/a&gt; based on &lt;code&gt;$EDITOR&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Email manipulation (&lt;a href=&#34;https://pimalaya.org/himalaya/docs/cli/usage/emails/copy.html&#34;&gt;copy&lt;/a&gt;/&lt;a href=&#34;https://pimalaya.org/himalaya/docs/cli/usage/emails/move.html&#34;&gt;move&lt;/a&gt;/&lt;a href=&#34;https://pimalaya.org/himalaya/docs/cli/usage/emails/delete.html&#34;&gt;delete&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pimalaya.org/himalaya/docs/cli/configuration.html&#34;&gt;Multi-accounting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pimalaya.org/himalaya/docs/cli/usage/accounts/list.html&#34;&gt;Account listing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pimalaya.org/himalaya/docs/cli/usage/accounts/synchronize.html&#34;&gt;Account synchronization&lt;/a&gt; for offline usage&lt;/li&gt; &#xA; &lt;li&gt;IMAP, Maildir and Notmuch support&lt;/li&gt; &#xA; &lt;li&gt;IMAP IDLE mode for &lt;a href=&#34;https://pimalaya.org/himalaya/docs/cli/usage/notifications.html&#34;&gt;real-time notifications&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;PGP end-to-end encryption&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pimalaya.org/himalaya/docs/cli/tips/completion.html&#34;&gt;Completions&lt;/a&gt; for various shells&lt;/li&gt; &#xA; &lt;li&gt;JSON output&lt;/li&gt; &#xA; &lt;li&gt;‚Ä¶&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;table align=&#34;center&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;50%&#34;&gt; &lt;a href=&#34;https://repology.org/project/himalaya/versions&#34;&gt; &lt;img src=&#34;https://repology.org/badge/vertical-allrepos/himalaya.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td width=&#34;50%&#34;&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Arch Linux (official)&#xA;$ pacman -S himalaya&#xA;&#xA;# Arch Linux (from sources)&#xA;$ yay -S himalaya-git&#xA;&#xA;# Homebrew&#xA;$ brew install himalaya&#xA;&#xA;# Cargo&#xA;$ cargo install himalaya&#xA;&#xA;# Nix&#xA;$ nix-env -i himalaya&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;See the &lt;a href=&#34;https://pimalaya.org/himalaya/docs/cli/installation.html&#34;&gt;documentation&lt;/a&gt; for other installation methods.&lt;/em&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://pimalaya.org/himalaya/docs/cli/configuration.html&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you find a &lt;strong&gt;bug&lt;/strong&gt;, please send an email at &lt;a href=&#34;mailto:~soywod/pimalaya@todo.sr.ht&#34;&gt;~soywod/pimalaya@todo.sr.ht&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have a &lt;strong&gt;question&lt;/strong&gt;, please send an email at &lt;a href=&#34;mailto:~soywod/pimalaya@lists.sr.ht&#34;&gt;~soywod/pimalaya@lists.sr.ht&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to &lt;strong&gt;propose a feature&lt;/strong&gt; or &lt;strong&gt;fix a bug&lt;/strong&gt;, please send a patch at &lt;a href=&#34;mailto:~soywod/pimalaya@lists.sr.ht&#34;&gt;~soywod/pimalaya@lists.sr.ht&lt;/a&gt; using &lt;a href=&#34;https://git-scm.com/docs/git-send-email&#34;&gt;git send-email&lt;/a&gt; (see &lt;a href=&#34;https://git-send-email.io/&#34;&gt;this guide&lt;/a&gt; on how to configure it).&lt;/p&gt; &#xA;&lt;p&gt;If you want to &lt;strong&gt;subscribe&lt;/strong&gt; to the mailing list, please send an email at &lt;a href=&#34;mailto:~soywod/pimalaya+subscribe@lists.sr.ht&#34;&gt;~soywod/pimalaya+subscribe@lists.sr.ht&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to &lt;strong&gt;unsubscribe&lt;/strong&gt; to the mailing list, please send an email at &lt;a href=&#34;mailto:~soywod/pimalaya+unsubscribe@lists.sr.ht&#34;&gt;~soywod/pimalaya+unsubscribe@lists.sr.ht&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to &lt;strong&gt;discuss&lt;/strong&gt; about the project, feel free to join the &lt;a href=&#34;https://matrix.org/&#34;&gt;Matrix&lt;/a&gt; workspace &lt;a href=&#34;https://matrix.to/#/#pimalaya.himalaya:matrix.org&#34;&gt;#pimalaya.himalaya&lt;/a&gt; or contact me directly &lt;a href=&#34;https://matrix.to/#/@soywod:matrix.org&#34;&gt;@soywod&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nlnet.nl/project/Himalaya/index.html&#34;&gt;&lt;img src=&#34;https://nlnet.nl/logo/banner-160x60.png&#34; alt=&#34;nlnet&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to the &lt;a href=&#34;https://nlnet.nl/project/Himalaya/index.html&#34;&gt;nlnet&lt;/a&gt; foundation that helped Himalaya to receive financial support from the &lt;a href=&#34;https://www.ngi.eu/ngi-projects/ngi-assure/&#34;&gt;NGI Assure&lt;/a&gt; program of the European Commission in September, 2022.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git.sr.ht/~soywod/himalaya-lib&#34;&gt;himalaya-lib&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc3501&#34;&gt;IMAP RFC3501&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/soywod/iris.vim&#34;&gt;Iris&lt;/a&gt;, the himalaya predecessor&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://isync.sourceforge.io/&#34;&gt;isync&lt;/a&gt;, an email synchronizer for offline usage&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://neomutt.org/&#34;&gt;NeoMutt&lt;/a&gt;, an email terminal user interface&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://alpine.x10host.com/alpine/alpine-info/&#34;&gt;Alpine&lt;/a&gt;, an other email terminal user interface&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LukeSmithxyz/mutt-wizard&#34;&gt;mutt-wizard&lt;/a&gt;, a tool over NeoMutt and isync&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jonhoo/rust-imap&#34;&gt;rust-imap&lt;/a&gt;, a Rust IMAP library&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lettre/lettre&#34;&gt;lettre&lt;/a&gt;, a Rust mailer library&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/staktrace/mailparse&#34;&gt;mailparse&lt;/a&gt;, a Rust MIME email parser.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsoring&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/soywod&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-GitHub%20Sponsors-fafbfc?logo=GitHub%20Sponsors&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.com/paypalme/soywod&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-PayPal-0079c1?logo=PayPal&amp;amp;logoColor=ffffff&#34; alt=&#34;PayPal&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ko-fi.com/soywod&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Ko--fi-ff5e5a?logo=Ko-fi&amp;amp;logoColor=ffffff&#34; alt=&#34;Ko-fi&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.buymeacoffee.com/soywod&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Buy%20Me%20a%20Coffee-ffdd00?logo=Buy%20Me%20A%20Coffee&amp;amp;logoColor=000000&#34; alt=&#34;Buy Me a Coffee&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://liberapay.com/soywod&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Liberapay-f6c915?logo=Liberapay&amp;amp;logoColor=222222&#34; alt=&#34;Liberapay&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>matt-kimball/allocscope</title>
    <updated>2023-02-18T01:43:39Z</updated>
    <id>tag:github.com,2023-02-18:/matt-kimball/allocscope</id>
    <link href="https://github.com/matt-kimball/allocscope" rel="alternate"></link>
    <summary type="html">&lt;p&gt;allocscope - a memory tracking tool&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://allocscope.com/banner.png&#34; alt=&#34;allocscope banner&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;allocscope&lt;/h1&gt; &#xA;&lt;h3&gt;a memory tracking tool&lt;/h3&gt; &#xA;&lt;p&gt;allocscope is a tool for tracking down where the most egregiously large allocations are occurring in a C, C++ or Rust codebase. It is particilarly intendend to be useful for developers who want to get a handle on excessive allocations and are working in a large codebase with multiple contributors with allocations occuring in many modules or libraries.&lt;/p&gt; &#xA;&lt;p&gt;It is composed of two commands:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;allocscope-trace&lt;/code&gt; attaches to another process as a debugger. By using breakpoints on memory allocation functions such as &lt;code&gt;malloc&lt;/code&gt; it tracks allocations made by that process. During the trace, the callstack of all allocations are recorded to an &lt;code&gt;.atrace&lt;/code&gt; file. Tracing programs which spawn multiple threads and tracing calls through shared libraries are supported. You can spawn a process to trace by specifying a full commandline to &lt;code&gt;allocscope-trace&lt;/code&gt;, or you can attach to an existing running process.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;allocscope-view&lt;/code&gt; reads the &lt;code&gt;.atrace&lt;/code&gt; file produced by &lt;code&gt;allocscope-trace&lt;/code&gt;. It presents a summary of all allocations made in a call tree format, which can be sorted by largest concurrent allocation, total number of blocks, number of unfreed allocation blocks, or the sequence of the allocation. The summary can be navigated interactively through a curses-based terminal user interface, or a text report suitable for non-interactive use can be generated.&lt;/p&gt; &#xA;&lt;h2&gt;Installing prebuilt binaries&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to get started with allocscope is to install prebuilt binaries.&lt;/p&gt; &#xA;&lt;p&gt;To install the latest version:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;curl -s https://allocscope.com/install.sh | sudo sh&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Currently only Linux on x86_64 processors is supported, but I&#39;d like to support more operating systems and processors in the future.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;While it will likely be most useful to use allocscope on a program with symbols, which you have compiled yourself, you can verify that it functions correctly by performing a trace on a standard system command, such as &lt;code&gt;ls&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;allocscope-trace ls -l&#xA;allocscope-view ls.atrace&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building from source&lt;/h2&gt; &#xA;&lt;p&gt;On recent Ubuntu releases, allocscope can be built from source with the following sequence of commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt-get update&#xA;apt-get install cargo git libclang-dev libiberty-dev libncurses-dev libsqlite3-dev libunwind-dev&#xA;git clone https://github.com/matt-kimball/allocscope.git&#xA;cd allocscope&#xA;cargo install --path allocscope-trace&#xA;cargo install --path allocscope-view&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Statically linked binaries can also be built using the &lt;code&gt;build-static/build.sh&lt;/code&gt; script, though this requires Docker installed on the build system.&lt;/p&gt; &#xA;&lt;h2&gt;Support development&lt;/h2&gt; &#xA;&lt;p&gt;If you find allocscope useful, please consider supporting development.&lt;/p&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://allocscope.com/support&#34;&gt;https://allocscope.com/support&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;allocscope is licensed GNU General Public License version 3.&lt;/p&gt;</summary>
  </entry>
</feed>