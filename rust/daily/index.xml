<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-29T01:45:53Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>m1guelpf/browser-agent</title>
    <updated>2023-03-29T01:45:53Z</updated>
    <id>tag:github.com,2023-03-29:/m1guelpf/browser-agent</id>
    <link href="https://github.com/m1guelpf/browser-agent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A browser AI agent, using GPT-4&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;A browser AI agent, using GPT-4&lt;/h1&gt; &#xA;&lt;p&gt;This project provides a bridge between GPT-4 and a headless Chromium browser, allowing you to automate actions simply by describing them to the program. It takes the form of a Rust CLI, but also exports most of the internals as a library for others to use.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;browser-agent&lt;/code&gt; is built using Rust, so you&#39;ll need to install the Rust toolchain. You can do this by following the instructions at &lt;a href=&#34;https://rustup.rs/&#34;&gt;rustup.rs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Once you have Rust installed, you can install &lt;code&gt;browser-agent&lt;/code&gt; by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo install browser-agent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should also place your OpenAI API key in the &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; environment variable. This key should have access to the &lt;code&gt;gpt-4&lt;/code&gt; model.&lt;/p&gt; &#xA;&lt;p&gt;You can copy the contents of the &lt;code&gt;example.env&lt;/code&gt; file to a &lt;code&gt;.env&lt;/code&gt; file in the root of the project, and fill in the &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; variable. The &lt;code&gt;.env&lt;/code&gt; file is ignored by git, so you don&#39;t have to worry about accidentally committing your API key. Note though, &lt;code&gt;.env.example&lt;/code&gt; is not ignored, so you should not change that file.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: browser-agent [OPTIONS] &amp;lt;GOAL&amp;gt;&#xA;&#xA;Arguments:&#xA;  &amp;lt;GOAL&amp;gt;  The goal for the agent to achieve&#xA;&#xA;Options:&#xA;      --visual                Whether to show the browser window. Warning: this makes the agent more unreliable&#xA;  -v...                       Set the verbosity level, can be used multiple times&#xA;      --include-page-content  Whether to include text from the page in the prompt&#xA;  -h, --help                  Print help&#xA;  -V, --version               Print version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Aknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;This project was inspired and builds on top of &lt;a href=&#34;https://github.com/nat&#34;&gt;Nat Friedman&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/nat/natbot&#34;&gt;natbot&lt;/a&gt; experiment.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT license. See &lt;a href=&#34;https://raw.githubusercontent.com/m1guelpf/browser-agent/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more details.&lt;/p&gt;</summary>
  </entry>
</feed>