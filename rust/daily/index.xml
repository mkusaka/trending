<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-13T01:46:50Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>FuelLabs/fuels-rs</title>
    <updated>2023-07-13T01:46:50Z</updated>
    <id>tag:github.com,2023-07-13:/FuelLabs/fuels-rs</id>
    <link href="https://github.com/FuelLabs/fuels-rs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fuel Network Rust SDK&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;fuels-rs&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/FuelLabs/fuels-rs/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/FuelLabs/fuels-rs/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/fuels&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/fuels?label=latest&#34; alt=&#34;crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.rs/fuels&#34;&gt;&lt;img src=&#34;https://docs.rs/fuels/badge.svg?sanitize=true&#34; alt=&#34;docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/xfpK4Pe&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat%20on-discord-orange?&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&#34; alt=&#34;discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Rust SDK for Fuel. It can be used for a variety of things, including but not limited to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compiling, deploying, and testing &lt;a href=&#34;https://github.com/FuelLabs/sway&#34;&gt;Sway&lt;/a&gt; contracts;&lt;/li&gt; &#xA; &lt;li&gt;Launching a local Fuel network;&lt;/li&gt; &#xA; &lt;li&gt;Crafting and signing transactions with hand-crafted scripts or contract calls;&lt;/li&gt; &#xA; &lt;li&gt;Generating type-safe Rust bindings of contract methods;&lt;/li&gt; &#xA; &lt;li&gt;And more, &lt;code&gt;fuels-rs&lt;/code&gt; is still in active development.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://fuellabs.github.io/fuels-rs/latest/&#34;&gt;the &lt;code&gt;fuels-rs&lt;/code&gt; book&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Launch Fuel nodes&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Deploy contracts&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Interact with deployed contracts&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Type-safe Sway contracts bindings code generation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Run Sway scripts&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; CLI for common operations&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Local test wallets&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Wallet integration&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Events querying/monitoring&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;What dependencies do I need?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fuellabs.github.io/sway/master/introduction/installation.html&#34;&gt;The latest &lt;code&gt;stable&lt;/code&gt; Rust toolchain&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fuellabs.github.io/sway/master/introduction/installation.html#installing-from-cargo&#34;&gt;&lt;code&gt;forc&lt;/code&gt; and &lt;code&gt;fuel-core&lt;/code&gt; binaries&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How can I run the SDK tests?&lt;/h3&gt; &#xA;&lt;p&gt;First, build the test projects using &lt;code&gt;forc&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;forc build --path packages/fuels&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can run the SDK tests with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also run specific tests. The following example will run all integration tests in &lt;code&gt;types.rs&lt;/code&gt; whose names contain &lt;code&gt;in_vector&lt;/code&gt; and show their outputs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo test --test types in_vector -- --show-output&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;How to run WASM tests?&lt;/h3&gt; &#xA;&lt;p&gt;You need to have wasm32 as a target, if you don&#39;t already:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt; rustup target add wasm32-unknown-unknown&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You also need &lt;code&gt;wasm-pack&lt;/code&gt;, if you don&#39;t already:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo install wasm-pack&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Navigate to &lt;code&gt;packages/wasm-tests&lt;/code&gt; and run &lt;code&gt;wasm-pack test&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;What to do if my tests are failing on &lt;code&gt;master&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Before doing anything else, try all these commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo clean&#xA;rm Cargo.lock&#xA;forc build --path packages/fuels&#xA;cargo test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Why is the prefix &lt;code&gt;fuels&lt;/code&gt; and not &lt;code&gt;fuel&lt;/code&gt;?&lt;/h3&gt; &#xA;&lt;p&gt;In order to make the SDK for Fuel feel familiar with those coming from the &lt;a href=&#34;https://github.com/ethers-io/ethers.js&#34;&gt;ethers.js&lt;/a&gt; ecosystem, this project opted for an &lt;code&gt;s&lt;/code&gt; at the end. The &lt;code&gt;fuels-*&lt;/code&gt; family of SDKs is inspired by The Ethers Project.&lt;/p&gt; &#xA;&lt;h3&gt;How can I run the docs locally?&lt;/h3&gt; &#xA;&lt;p&gt;Install &lt;code&gt;mdbook&lt;/code&gt; by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo install mdbook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, navigate to the &lt;code&gt;docs&lt;/code&gt; folder and run the command below to start a local server and open a new tab in you browser.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mdbook serve --open&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can build the book by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mdbook build&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>