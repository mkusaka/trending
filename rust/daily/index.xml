<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-02T01:37:33Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tatut/pgprolog</title>
    <updated>2024-04-02T01:37:33Z</updated>
    <id>tag:github.com,2024-04-02:/tatut/pgprolog</id>
    <link href="https://github.com/tatut/pgprolog" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PostgreSQL Prolog language handler&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Prolog language for PostgreSQL&lt;/h1&gt; &#xA;&lt;p&gt;This is a PostgreSQL extension that allows writing stored procedures in Prolog.&lt;/p&gt; &#xA;&lt;p&gt;This embeds &lt;a href=&#34;https://www.scryer.pl&#34;&gt;Scryer Prolog&lt;/a&gt; into a PostgreSQL extension.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Proof of concept!&lt;/strong&gt; Not ready for any actual use.&lt;/p&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;Run with &lt;code&gt;cargo pgrx run&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then you can create the extension and language:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;CREATE EXTENSION pgprolog;&#xA;CREATE LANGUAGE plprolog HANDLER plprolog_call_handler;&#xA;CREATE FUNCTION myfunc(a TEXT) RETURNS TEXT AS &#39;parent(alice,bob). handle(In,Out) :- parent(In,Out).&#39; LANGUAGE plprolog;&#xA;SELECT myfunc(&#39;alice&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>