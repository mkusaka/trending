<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-04-19T01:37:26Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mufeedvh/pdfrip</title>
    <updated>2025-04-19T01:37:26Z</updated>
    <id>tag:github.com,2025-04-19:/mufeedvh/pdfrip</id>
    <link href="https://github.com/mufeedvh/pdfrip" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A multi-threaded PDF password cracking utility equipped with commonly encountered password format builders and dictionary attacks.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;&lt;code&gt;PDFRip&lt;/code&gt;&lt;/h1&gt; &#xA; &lt;p&gt;&lt;strong&gt;A multi-threaded PDF password cracking utility equipped with commonly encountered password format builders and dictionary attacks.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;üìñ Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mufeedvh/pdfrip/main/#%E2%84%B9%EF%B8%8F-introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mufeedvh/pdfrip/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mufeedvh/pdfrip/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mufeedvh/pdfrip/main/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mufeedvh/pdfrip/main/#contribution&#34;&gt;Contribution&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mufeedvh/pdfrip/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚ÑπÔ∏è Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;pdfrip&lt;/strong&gt; is a fast multithreaded PDF password cracking utility written in Rust with support for wordlist-based dictionary attacks, date, number range, and alphanumeric brute-forcing, and a custom query builder for password formats.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img height=&#34;300&#34; width=&#34;400&#34; src=&#34;https://raw.githubusercontent.com/mufeedvh/pdfrip/main/screenshots/pdfrip-usage.gif&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fast:&lt;/strong&gt; Performs about 50k-100k+ passwords per second utilizing full CPU cores.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Custom Query Builder:&lt;/strong&gt; You can write your own queries like &lt;code&gt;STRING{69-420}&lt;/code&gt; which would generate and use a wordlist with the full number range.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Date Bruteforce:&lt;/strong&gt; You can pass in a year which would bruteforce all 365 days of the year in &lt;code&gt;DDMMYYYY&lt;/code&gt; format which is a pretty commonly used password format for PDFs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Number Bruteforce:&lt;/strong&gt; Just give a number range like &lt;code&gt;5000-100000&lt;/code&gt; and it would bruteforce with the whole range.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Default Bruteforce:&lt;/strong&gt; Specify a maximum and optionally a minimum length for the password search and all passwords of length 4 up to the specified maximum consisting of letters and numbers (&lt;code&gt;a-zA-Z0-9&lt;/code&gt;) will be tried&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install with &lt;code&gt;cargo&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cargo install --git https://github.com/mufeedvh/pdfrip.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rust-lang.org/tools/install&#34;&gt;Install Rust/Cargo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build From Source&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.org/downloads&#34;&gt;Git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rust-lang.org/tools/install&#34;&gt;Rust&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Cargo (Automatically installed when installing Rust)&lt;/li&gt; &#xA; &lt;li&gt;A C linker (Only for Linux, generally comes pre-installed)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/mufeedvh/pdfrip.git&#xA;$ cd pdfrip/&#xA;$ cargo build --release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The first command clones this repository into your local machine and the last two commands enters the directory and builds the source in release mode.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Get a list of all the arguments:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pdfrip --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start a dictionary attack with a wordlist:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pdfrip -f encrypted.pdf wordlist rockyou.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Bruteforce number ranges for the password:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pdfrip -f encrypted.pdf range 1000 9999&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Bruteforce all dates in a span (inclusive in both ends) of years for the password in &lt;code&gt;DDMMYYYY&lt;/code&gt; format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pdfrip -f encrypted.pdf date 1900 2000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Bruteforce arbitrary strings of length 4-8:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pdfrip -f encrypted.pdf default-query --max-length 8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Bruteforce arbitrary strings of length 3:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pdfrip -f encrypted.pdf default-query --max-length 3 --min-length 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build a custom query to generate a wordlist: (useful when you know the password format)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pdfrip -f encrypted.pdf custom-query ALICE{1000-9999}&#xA;&#xA;$ pdfrip -f encrypted.pdf custom-query DOC-ID{0-99}-FILE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enable preceding zeros for custom queries: (which would make &lt;code&gt;{10-5000}&lt;/code&gt; to &lt;code&gt;{0010-5000}&lt;/code&gt; matching the end range&#39;s digits)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pdfrip -f encrypted.pdf custom-query ALICE{10-9999} --add-preceding-zeros&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Ways to contribute:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Suggest a feature&lt;/li&gt; &#xA; &lt;li&gt;Report a bug&lt;/li&gt; &#xA; &lt;li&gt;Fix something and open a pull request&lt;/li&gt; &#xA; &lt;li&gt;Help me document the code&lt;/li&gt; &#xA; &lt;li&gt;Spread the word&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the MIT License, see &lt;a href=&#34;https://github.com/mufeedvh/pdfrip/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>