<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-19T01:38:57Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ellenhp/airmail</title>
    <updated>2024-02-19T01:38:57Z</updated>
    <id>tag:github.com,2024-02-19:/ellenhp/airmail</id>
    <link href="https://github.com/ellenhp/airmail" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lightweight geocoder in pure Rust&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ðŸ“« Airmail ðŸ“«&lt;/h1&gt; &#xA;&lt;p&gt;Airmail is an extremely lightweight geocoder[^1] written in pure Rust. Built on top of &lt;a href=&#34;https://github.com/quickwit-oss/tantivy&#34;&gt;tantivy&lt;/a&gt;, it offers a low memory footprint and fast indexing (~8k POIs per second on my machine). Airmail currently supports English queries based on place names and addresses in North American address formats. Other languages and address formats work, but have not been systematically tested.&lt;/p&gt; &#xA;&lt;p&gt;[^1]: A geocoder is a search engine for places. When you type in &#34;vegan donut shop&#34; into your maps app of choice, a geocoder is what shows you nearby places that fit your query.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;p&gt;Airmail&#39;s killer feature is the ability to query remote indices, e.g. on S3. This lets you keep your index hosting costs fixed while you scale horizontally, and lowers the baseline costs associated with hosting a planet instance by around 2x-10x compared to other geocoders.&lt;/p&gt; &#xA;&lt;h3&gt;Roadmap&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; English/North American query parser for addresses, place names, and place name queries with locality or neighborhood.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Index OpenStreetMap data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Index OpenAddresses data (not currently used in demo).&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Index WhosOnFirst data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; API server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Address queries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Named POI queries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Prefix queries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Query remote indices.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support and test planet-scale indices.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Extend query parser for other locales.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Categorical search, e.g. &#34;coffee shops near me&#34;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Bounding box biasing and restriction.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Minutely updates?&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Systematic/automatic quality testing in CI.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Alternate results, e.g. returning Starbucks locations for &#34;Dunkin Donuts&#34; queries on the US west coast.[^2]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;[^2]: This will likely need to be done with a vector database and some machine learning, and may have major hosting cost implications. TBD.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;Dual MIT/Apache 2 license, at your option.&lt;/p&gt;</summary>
  </entry>
</feed>