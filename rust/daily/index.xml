<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-30T01:36:39Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>warp-tech/warpgate</title>
    <updated>2025-07-30T01:36:39Z</updated>
    <id>tag:github.com,2025-07-30:/warp-tech/warpgate</id>
    <link href="https://github.com/warp-tech/warpgate" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Smart SSH, HTTPS, MySQL and Postgres bastion/PAM that doesn&#39;t need additional client-side software&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/user-attachments/assets/89be835b-ff96-46df-94c7-ae2d176615e3&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;.github/readme/brand-dark.svg&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;warpgate-web/public/assets/brand.svg&#34;&gt; &#xA;  &lt;img alt=&#34;Shows a black logo in light color mode and a white one in dark color mode.&#34; src=&#34;https://raw.githubusercontent.com/warp-tech/warpgate/main/.github/readme/brand-dark.svg?sanitize=true&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/warp-tech/warpgate/releases/latest&#34;&gt;&lt;img alt=&#34;GitHub All Releases&#34; src=&#34;https://img.shields.io/github/downloads/warp-tech/warpgate/total.svg?label=DOWNLOADS&amp;amp;logo=github&amp;amp;style=for-the-badge&amp;amp;color=8f8&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://nightly.link/warp-tech/warpgate/workflows/build/main&#34;&gt;&lt;img src=&#34;https://shields.io/badge/-Nightly%20Builds-fa5?logo=hackthebox&amp;amp;logoColor=444&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://discord.gg/Vn7BjmzhtF&#34;&gt;&lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/1280890060195233934?style=for-the-badge&amp;amp;color=acc&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;label=Discord&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://ko-fi.com/J3J8KWTF&#34;&gt; &lt;img src=&#34;https://cdn.ko-fi.com/cdn/kofi3.png?v=2&#34; width=&#34;150&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Warpgate is a smart SSH, HTTPS, MySQL and PostgreSQL bastion host for Linux that doesn&#39;t need special client apps.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set it up in your DMZ, add user accounts and easily assign them to specific hosts and URLs within the network.&lt;/li&gt; &#xA; &lt;li&gt;Warpgate will record every session for you to view (live) and replay later through a built-in admin web UI.&lt;/li&gt; &#xA; &lt;li&gt;Not a jump host - forwards your connections straight to the target instead.&lt;/li&gt; &#xA; &lt;li&gt;Native 2FA and SSO support (TOTP &amp;amp; OpenID Connect)&lt;/li&gt; &#xA; &lt;li&gt;Single binary with no dependencies.&lt;/li&gt; &#xA; &lt;li&gt;Written in 100% safe Rust.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started &amp;amp; downloads&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See the &lt;a href=&#34;https://warpgate.null.page/getting-started/&#34;&gt;Getting started&lt;/a&gt; docs page (or &lt;a href=&#34;https://warpgate.null.page/getting-started-on-docker/&#34;&gt;Getting started on Docker&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/warp-tech/warpgate/releases&#34;&gt;Release / beta binaries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nightly.link/warp-tech/warpgate/workflows/build/main&#34;&gt;Nightly builds&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;center&gt; &#xA; &lt;img width=&#34;783&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/161476/162640762-a91a2816-48c0-44d9-8b03-5b1e2cb42d51.png&#34;&gt; &#xA;&lt;/center&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://github.com/user-attachments/assets/c9a6a372-198e-4f46-ab86-8c420dc24bca&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://github.com/user-attachments/assets/a2166426-e865-4aba-9600-520954bcfe7f&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://github.com/user-attachments/assets/366a5afb-aa86-4902-9080-eb2f40bf162c&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Reporting security issues&lt;/h2&gt; &#xA;&lt;p&gt;Please use GitHub&#39;s &lt;a href=&#34;https://github.com/warp-tech/warpgate/security/policy&#34;&gt;vulnerability reporting system&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Project Status&lt;/h2&gt; &#xA;&lt;p&gt;The project is ready for production.&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;Warpgate is a service that you deploy on the bastion/DMZ host, which will accept SSH, HTTPS, MySQL and PostgreSQL connections and provide an (optional) web admin UI.&lt;/p&gt; &#xA;&lt;p&gt;Run &lt;code&gt;warpgate setup&lt;/code&gt; to interactively generate a config file, including port bindings. See &lt;a href=&#34;https://warpgate.null.page/getting-started/&#34;&gt;Getting started&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;It receives connections with specifically formatted credentials, authenticates the user locally, connects to the target itself, and then connects both parties together while (optionally) recording the session.&lt;/p&gt; &#xA;&lt;p&gt;When connecting through HTTPS, Warpgate presents a selection of available targets, and will then proxy all traffic in a session to the selected target. You can switch between targets at any time.&lt;/p&gt; &#xA;&lt;p&gt;You manage the target and user lists and assign them to each other through the admin UI, and the session history is stored in an SQLite database (default: in &lt;code&gt;/var/lib/warpgate&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;You can also use the admin web interface to view the live session list, review session recordings, logs and more.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing / building from source&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You&#39;ll need Rust, NodeJS and NPM&lt;/li&gt; &#xA; &lt;li&gt;Clone the repo&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/casey/just&#34;&gt;Just&lt;/a&gt; is used to run tasks - install it: &lt;code&gt;cargo install just&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install the admin UI deps: &lt;code&gt;just npm&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build the frontend: &lt;code&gt;just npm run build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build Warpgate: &lt;code&gt;cargo build&lt;/code&gt; (optionally &lt;code&gt;--release&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The binary is in &lt;code&gt;target/{debug|release}&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Tech stack&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rust 🦀 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;HTTP: &lt;code&gt;poem-web&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Database: SQLite via &lt;code&gt;sea-orm&lt;/code&gt; + &lt;code&gt;sqlx&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;SSH: &lt;code&gt;russh&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Typescript &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Svelte&lt;/li&gt; &#xA;   &lt;li&gt;Bootstrap&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Backend API&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Warpgate admin and user facing APIs use autogenerated OpenAPI schemas and SDKs. To update the SDKs after changing the query/response structures, run &lt;code&gt;just openapi-all&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors ✨&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/Eugeny&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/161476?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Eugeny&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Eugeny&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Eugeny/warpgate/commits?author=Eugeny&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://the-empire.systems/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/18178614?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Spencer Heywood&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Spencer Heywood&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Eugeny/warpgate/commits?author=heywoodlh&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/apiening&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2064875?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Andreas Piening&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andreas Piening&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Eugeny/warpgate/commits?author=apiening&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/Gurkengewuerz&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/10966337?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Niklas&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Niklas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Eugeny/warpgate/commits?author=Gurkengewuerz&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/notnooblord&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/11678665?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Nooblord&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nooblord&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Eugeny/warpgate/commits?author=notnooblord&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://shea.nz/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/51303984?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Shea Smith&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shea Smith&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Eugeny/warpgate/commits?author=SheaSmith&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/samtoxie&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7732658?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;samtoxie&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;samtoxie&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/Eugeny/warpgate/commits?author=samtoxie&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>shshemi/tabiew</title>
    <updated>2025-07-30T01:36:39Z</updated>
    <id>tag:github.com,2025-07-30:/shshemi/tabiew</id>
    <link href="https://github.com/shshemi/tabiew" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A lightweight TUI application to view and query tabular data files, such as CSV, TSV, and parquet.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tabiew&lt;/h1&gt; &#xA;&lt;p&gt;Tabiew is a lightweight TUI application that allows users to view and query tabular data files, such as CSV, Parquet, Arrow, and ...&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shshemi/tabiew/main/images/main.gif&#34; alt=&#34;Image Alt text&#34; title=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;⌨️ Vim-style keybindings&lt;/li&gt; &#xA; &lt;li&gt;🛠️ SQL support&lt;/li&gt; &#xA; &lt;li&gt;📊 Support for CSV, Parquet, JSON, JSONL, Arrow, FWF, Sqlite, and Excel&lt;/li&gt; &#xA; &lt;li&gt;🔍 Fuzzy search&lt;/li&gt; &#xA; &lt;li&gt;📝 Scripting support&lt;/li&gt; &#xA; &lt;li&gt;🗂️ Multi-table functionality&lt;/li&gt; &#xA; &lt;li&gt;📈 Plotting&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Wiki&lt;/h2&gt; &#xA;&lt;p&gt;Tabiew started as a humble hobby TUI project for viewing CSV data but has evolved to incorporate various features and improvements from valuable community feedbacks. As the project expanded, so did the need for comprehensive documentation, leading to the creation of the &lt;a href=&#34;https://github.com/shshemi/tabiew/wiki&#34;&gt;wiki page&lt;/a&gt;. The wiki offers explanations of features and the best practices to get the most out of Tabiew.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;There are various ways to install Tabiew:&lt;/p&gt; &#xA;&lt;h3&gt;Arch Linux&lt;/h3&gt; &#xA;&lt;p&gt;You can install from the &lt;a href=&#34;https://archlinux.org/packages/extra/x86_64/tabiew/&#34;&gt;official repositories&lt;/a&gt; using &lt;a href=&#34;https://wiki.archlinux.org/title/pacman&#34;&gt;pacman&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman -S tabiew&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Debian-based&lt;/h3&gt; &#xA;&lt;p&gt;Download the &lt;code&gt;.deb&lt;/code&gt; package from the &lt;a href=&#34;https://github.com/shshemi/tabiew/releases&#34;&gt;GitHub releases page&lt;/a&gt; and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo dpkg -i &amp;lt;path_to_package.deb&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;RPM-based&lt;/h3&gt; &#xA;&lt;p&gt;Download the &lt;code&gt;.rpm&lt;/code&gt; package from the &lt;a href=&#34;https://github.com/shshemi/tabiew/releases&#34;&gt;GitHub releases page&lt;/a&gt; and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo rpm -i &amp;lt;path_to_package.rpm&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;MacOS&lt;/h3&gt; &#xA;&lt;p&gt;Installing Tabiew using &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; from Homebrew core:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew update&#xA;brew install tabiew&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or tap:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install shshemi/tabiew/tabiew&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: Please be aware that installing Tabiew from the tap involves compiling it from the source, which may take some time to complete.&lt;/p&gt; &#xA;&lt;h3&gt;Cargo&lt;/h3&gt; &#xA;&lt;p&gt;Installing Tabiew from &lt;em&gt;Crates.io&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo install tabiew&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build from Source&lt;/h3&gt; &#xA;&lt;p&gt;Ensure you have rustc version 1.80 (or higher) installed. Download the desired source version from the &lt;a href=&#34;https://github.com/shshemi/tabiew/releases&#34;&gt;release page&lt;/a&gt;. Extract the downloaded file and navigate into the extracted directory. Then run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo build --release&#xA;cp ./target/release/tw &amp;lt;system_or_local_bin_path&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Start Tabiew with &lt;code&gt;tw&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;tw &amp;lt;path_to_csv(s)&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To open TSV file(s), use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;tw &amp;lt;path_to_tsv(s)&amp;gt; --separator $&#39;\t&#39; --no-header&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To open parquet file(s), use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;tw &amp;lt;path_to_parquet(s)&amp;gt; -f parquet&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To open a URL, use curl to pipe the output directly to Tabiew:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -s &#34;https://raw.githubusercontent.com/wiki/shshemi/tabiew/housing.csv&#34; | tw&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Useful Keybindings️&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Key Combination&lt;/th&gt; &#xA;   &lt;th&gt;Functionality&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Enter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open sheet&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;h j k l&lt;/code&gt; or &lt;code&gt;← ↓ ↑ →&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Navigation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;b&lt;/code&gt; / &lt;code&gt;w&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Previous / next column&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;e&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Toggle Auto-Fit&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Ctrl + u&lt;/code&gt; / &lt;code&gt;Ctrl + d&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move half page up/down&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Home&lt;/code&gt; or &lt;code&gt;g&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move to first row&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;End&lt;/code&gt; or &lt;code&gt;G&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move to last row&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Ctrl + r&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Reset data frame&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;q&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Close&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Command Palette&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Fuzzy Search&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Useful Commands&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Q&lt;/code&gt; or &lt;code&gt;query&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Q SELECT * FROM df&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Query the data in Structured Query Language(SQL). The table name is the file name without extension&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;S&lt;/code&gt; or &lt;code&gt;select&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;S price, area, bedrooms, parking&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Query current data frame for columns/functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;F&lt;/code&gt; or &lt;code&gt;filter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;F price &amp;lt; 20000 AND bedrooms &amp;gt; 4&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Filter current data frame, keeping rows were the condition(s) match&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;O&lt;/code&gt; or &lt;code&gt;order&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;O area&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Sort current data frame by column(s)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;tabn&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tabn SELECT * FORM user WHERE balance &amp;gt; 1000&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create a new tab with the given query&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;q&lt;/code&gt; or &lt;code&gt;quit&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;q&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Return to table from sheet view otherwise quit&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;schema&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;schema&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Show loaded data frame(s) alongside their path(s)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Reset the table to the original data frame&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;help&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;help&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Show help menu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Themes&lt;/h2&gt; &#xA;&lt;h3&gt;Monokai (default):&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shshemi/tabiew/main/images/theme-monokai.png&#34; alt=&#34;Image Alt text&#34; title=&#34;Monokai&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Argonaut:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shshemi/tabiew/main/images/theme-argonaut.png&#34; alt=&#34;Image Alt text&#34; title=&#34;Argonaut&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Nord:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shshemi/tabiew/main/images/theme-nord.png&#34; alt=&#34;Image Alt text&#34; title=&#34;Nord&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Catppuccin:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shshemi/tabiew/main/images/theme-catppuccin.png&#34; alt=&#34;Image Alt text&#34; title=&#34;Catppuccin&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tokyo Night:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/shshemi/tabiew/main/images/theme-tokyo-night.png&#34; alt=&#34;Image Alt text&#34; title=&#34;Tokyo Night&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! Please fork the repository and submit pull requests with your features and bug fixes.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License - see the LICENSE file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>n0-computer/dumbpipe</title>
    <updated>2025-07-30T01:36:39Z</updated>
    <id>tag:github.com,2025-07-30:/n0-computer/dumbpipe</id>
    <link href="https://github.com/n0-computer/dumbpipe" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Unix pipes between devices&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dumb pipe&lt;/h1&gt; &#xA;&lt;p&gt;This is an example to use &lt;a href=&#34;https://crates.io/crates/iroh&#34;&gt;iroh&lt;/a&gt; to create a dumb pipe to connect two machines with a QUIC connection.&lt;/p&gt; &#xA;&lt;p&gt;Iroh will take care of hole punching and NAT traversal whenever possible, and fall back to a relay if hole punching does not succeed.&lt;/p&gt; &#xA;&lt;p&gt;It is also useful as a standalone tool for quick copy jobs.&lt;/p&gt; &#xA;&lt;p&gt;This is inspired by the unix tool &lt;a href=&#34;https://en.wikipedia.org/wiki/Netcat&#34;&gt;netcat&lt;/a&gt;. While netcat works with IP addresses, dumbpipe works with 256 bit node ids and therefore is somewhat location transparent. In addition, connections are encrypted using TLS.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;cargo install dumbpipe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Examples&lt;/h1&gt; &#xA;&lt;h2&gt;Use dumbpipe to stream video using &lt;a href=&#34;https://ffmpeg.org/&#34;&gt;ffmpeg / ffplay&lt;/a&gt;:&lt;/h2&gt; &#xA;&lt;p&gt;This is using standard input and output.&lt;/p&gt; &#xA;&lt;h3&gt;Sender side&lt;/h3&gt; &#xA;&lt;p&gt;On Mac OS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ffmpeg -f avfoundation -r 30 -i &#34;0&#34; -pix_fmt yuv420p -f mpegts - | dumbpipe listen&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Linux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ffmpeg -f v4l2 -i /dev/video0 -r 30 -preset ultrafast -vcodec libx264 -tune zerolatency -f mpegts - | dumbpipe listen&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;outputs ticket&lt;/p&gt; &#xA;&lt;h3&gt;Receiver side&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;dumbpipe connect nodeealvvv4nwa522qhznqrblv6jxcrgnvpapvakxw5i6mwltmm6ps2r4aicamaakdu5wtjasadei2qdfuqjadakqk3t2ieq | ffplay -f mpegts -fflags nobuffer -framedrop -&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Adjust the ffmpeg options according to your local platform and video capture devices.&lt;/li&gt; &#xA; &lt;li&gt;Use ticket from sender side&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Share a shell for pair- or ensemble programming with &lt;a href=&#34;https://github.com/elisescu/tty-share&#34;&gt;tty-share&lt;/a&gt;:&lt;/h2&gt; &#xA;&lt;p&gt;Sharing a terminal session over the internet is useful for collaboration between programmers, but the public &lt;a href=&#34;https://github.com/elisescu/tty-share&#34;&gt;tty-share&lt;/a&gt; server isn&#39;t very reliable and, more importantly, &lt;a href=&#34;https://tty-share.com/how-it-works/#end-to-end-encryption&#34;&gt;it is not end-to-end encrypted&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;On the server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ dumbpipe listen-tcp --host localhost:8000 &amp;amp;&#xA;$ tty-share&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On the client(s):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ dumbpipe connect-tcp --addr localhost:8000 &amp;lt;ticket&amp;gt; &amp;amp;&#xA;$ tty-share http://localhost:8000/s/local/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Forward development web server&lt;/h2&gt; &#xA;&lt;p&gt;You have a development webserver running on port 3000, and want to share it with a colleague in another office or on the other side of the world.&lt;/p&gt; &#xA;&lt;h3&gt;The web server&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run dev&#xA;&amp;gt;    - Local:        http://localhost:3000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;The dumbpipe listener&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;Listens&lt;/em&gt; on an endpoint and forwards all incoming requests to the dev web server that is listening on localhost on port 3000. Any number of connections can flow through a single dumb pipe, but they will be separate local tcp connections.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dumbpipe listen-tcp --host localhost:3000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will output a ticket that can be used to connect.&lt;/p&gt; &#xA;&lt;h3&gt;The dumbpipe connector&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;Listens&lt;/em&gt; on a tcp interface and port on the local machine. In this case on port 3001. Forwards all incoming connections to the endpoint given in the ticket.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dumbpipe connect-tcp --addr 0.0.0.0:3001 &amp;lt;ticket&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Testing it&lt;/h3&gt; &#xA;&lt;p&gt;You can now browse the website on port 3001.&lt;/p&gt; &#xA;&lt;h2&gt;Forward a Unix Socket Application (e.g., Zellij)&lt;/h2&gt; &#xA;&lt;p&gt;You can forward applications that communicate over Unix sockets, like the terminal multiplexer &lt;a href=&#34;https://zellij.dev/&#34;&gt;Zellij&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note: Zellij keeps its session sockets under &lt;code&gt;$ZELLIJ_SOCKET_DIR/&amp;lt;VERSION&amp;gt;/session-name&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/b8fbb988-57db-40cd-95e2-208e01fbaad6&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;On the remote host (with Zellij running):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;zellij --version&#xA;# zellij 0.42.2&#xA;# Forward the remote Zellij socket&#xA;# Socket path follows pattern: /tmp/zellij-0/&amp;lt;VERSION&amp;gt;/&amp;lt;session-name&amp;gt;&#xA;dumbpipe listen-unix --socket-path /tmp/zellij-0/0.42.2/remote-task-1234&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will give you a &lt;code&gt;&amp;lt;ticket&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;On your local machine:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;zellij --version&#xA;# zellij 0.42.1&#xA;&#xA;# Create the local socket directory structure&#xA;mkdir -p /tmp/zj-remote/0.42.1&#xA;&#xA;# Create a local socket connected to the remote one&#xA;dumbpipe connect-unix --socket-path /tmp/zj-remote/0.42.1/remote-task-1234 &amp;lt;ticket&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Attach your local Zellij client:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# In a new terminal window/tab, set the socket directory and attach&#xA;ZELLIJ_SOCKET_DIR=/tmp/zj-remote zellij attach remote-task-1234&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Advanced features&lt;/h1&gt; &#xA;&lt;h2&gt;Combining Listeners&lt;/h2&gt; &#xA;&lt;p&gt;You can mix and match listeners. For example, forward from a remote Unix socket to a local TCP port:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Machine A: Listen on a Unix socket&#xA;dumbpipe listen-unix --socket-path /var/run/my-app.sock&#xA;&#xA;# Machine B: Connect to it via a local TCP port&#xA;dumbpipe connect-tcp --addr 127.0.0.1:8080 &amp;lt;ticket&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Custom ALPNs&lt;/h2&gt; &#xA;&lt;p&gt;Dumbpipe has an expert feature to specify a custom &lt;a href=&#34;https://en.wikipedia.org/wiki/Application-Layer_Protocol_Negotiation&#34;&gt;ALPN&lt;/a&gt; string. You can use it to interact with existing iroh services.&lt;/p&gt; &#xA;&lt;p&gt;E.g. here is how to interact with the iroh-blobs protocol:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;echo request1.bin | dumbpipe connect &amp;lt;ticket&amp;gt; --custom-alpn utf8:/iroh-bytes/2 &amp;gt; response1.bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(&lt;code&gt;/iroh-bytes/2&lt;/code&gt; is the ALPN string for the iroh-blobs protocol, which used to be called iroh-bytes.)&lt;/p&gt; &#xA;&lt;p&gt;if request1.bin contained a valid request for the &lt;code&gt;/iroh-bytes/2&lt;/code&gt; protocol, response1.bin will now contain the response.&lt;/p&gt;</summary>
  </entry>
</feed>