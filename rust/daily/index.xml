<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-18T01:42:07Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>BenjaSOL/ore-cli-gpu</title>
    <updated>2024-04-18T01:42:07Z</updated>
    <id>tag:github.com,2024-04-18:/BenjaSOL/ore-cli-gpu</id>
    <link href="https://github.com/BenjaSOL/ore-cli-gpu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ore CLI with Nvidia GPU Support&lt;/h1&gt; &#xA;&lt;p&gt;A command line interface for the Ore program to utilize Nvidia GPU&#39;s.&lt;/p&gt; &#xA;&lt;p&gt;Built by &lt;a href=&#34;https://x.com/benjasol_&#34;&gt;@BenjaSOL&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://x.com/KaedonsCrypto&#34;&gt;@KaedonsCrypto&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;To build the Ore CLI, you will need to have the Rust programming language installed. You can install Rust by following the instructions on the &lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;Rust website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You must have CUDA installed&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export CUDA_VISIBLE_DEVICES=&amp;lt;GPU_INDEX&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Windows users&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvcc windows.cu -o windows&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Linux users&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvcc linux.cu -o linux&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Take the path to the executsble that was just created and replace the PATH_TO_EXE with the path to the .exe in the mine.rs.&lt;/p&gt; &#xA;&lt;p&gt;Once you have Rust installed, you can build the Ore CLI by running the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo build --release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./target/release/ore.exe --rpc &#34;&#34; --priority-fee 1 --keypair &#39;path to keypair&#39; --priority-fee 1 mine --threads 4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will now run your hashing on the GPU instead of the CPU!&lt;/p&gt; &#xA;&lt;p&gt;Donations in ORE or SOL: EVK3M6Cth3uPZcATCtnZ16mqArSNXt5oC6kcmakwXudb&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tonyke-bot/ore-miner&#34;&gt;ORE Miner&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/HardhatChad/ore-cli&#34;&gt;ORE CLI&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>soywod/neverest</title>
    <updated>2024-04-18T01:42:07Z</updated>
    <id>tag:github.com,2024-04-18:/soywod/neverest</id>
    <link href="https://github.com/soywod/neverest" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CLI to synchronize, backup and restore emails&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üì´ Neverest CLI &lt;a href=&#34;https://github.com/soywod/neverest/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/soywod/neverest?color=success&#34; alt=&#34;release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#pimalaya.neverest:matrix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/matrix/pimalaya.neverest:matrix.org?color=success&amp;amp;label=chat&#34; alt=&#34;chat&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;CLI to synchronize, backup and restore emails, based on &lt;a href=&#34;https://crates.io/crates/email-lib&#34;&gt;&lt;code&gt;email-lib&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;‚ö†Ô∏è This repository is only used for improving the visibility of the project and for building &lt;a href=&#34;https://github.com/soywod/neverest/releases&#34;&gt;releases&lt;/a&gt;, it does not contain any source code. This is not a mirror: real sources are located on &lt;a href=&#34;https://git.sr.ht/~soywod/neverest-cli&#34;&gt;SourceHut&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://pimalaya.org/neverest/cli/latest/screenshot.jpeg&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;The project is under active development, do not use in production before the final &lt;code&gt;v1.0.0&lt;/code&gt; (or at least do some backups).&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Backends configuration via interactive &lt;a href=&#34;https://pimalaya.org/neverest/cli/latest/configuration/index.html#automatically-using-the-wizard&#34;&gt;wizard&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Sync pairs of backend together (&lt;a href=&#34;https://pimalaya.org/neverest/cli/latest/configuration/imap.html&#34;&gt;IMAP&lt;/a&gt;, &lt;a href=&#34;https://pimalaya.org/neverest/cli/latest/configuration/maildir.html&#34;&gt;Maildir&lt;/a&gt; and &lt;a href=&#34;https://pimalaya.org/neverest/cli/latest/configuration/notmuch.html&#34;&gt;Notmuch&lt;/a&gt; supported).&lt;/li&gt; &#xA; &lt;li&gt;Partial sync based on &lt;a href=&#34;https://pimalaya.org/neverest/cli/latest/configuration/index.html#folderfilter&#34;&gt;filters&lt;/a&gt; (folder name, envelope date).&lt;/li&gt; &#xA; &lt;li&gt;Restricted sync based on &lt;a href=&#34;https://pimalaya.org/neverest/cli/latest/configuration/index.html#leftrightfolderpermissions&#34;&gt;permissions&lt;/a&gt; (create/delete folder, update flag, create/update message).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pimalaya.org/neverest/cli/latest/usage/backup-and-restore.html&#34;&gt;Backup and restore&lt;/a&gt; emails using the &lt;a href=&#34;https://pimalaya.org/neverest/cli/latest/configuration/maildir.html&#34;&gt;Maildir&lt;/a&gt; backend.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Coming soon:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;POP, JMAP and mbox support.&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Editing configuration via wizard.&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Native backup and restore support.&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;50%&#34;&gt; &lt;a href=&#34;https://repology.org/project/neverest/versions&#34;&gt; &lt;img src=&#34;https://repology.org/badge/vertical-allrepos/neverest.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td width=&#34;50%&#34;&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Cargo&#xA;$ cargo install neverest&#xA;&#xA;# Nix&#xA;$ nix-env -i neverest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Please read the &lt;a href=&#34;https://pimalaya.org/neverest/cli/latest/installation.html&#34;&gt;documentation&lt;/a&gt; for other installation methods.&lt;/em&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Just run &lt;code&gt;neverest&lt;/code&gt;, the wizard will help you to configure your default account. You can also manually edit your configuration at &lt;code&gt;~/.config/neverest/config.toml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;config.sample.toml&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[accounts.example]&#xA;&#xA;# The current `example` account will be used by default.&#xA;default = true&#xA;&#xA;# Filter folders according to the given rules.&#xA;#&#xA;# folder.filter.include = [&#34;INBOX&#34;, &#34;Sent&#34;]&#xA;# folder.filter.exclude = [&#34;All Mails&#34;]&#xA;folder.filter = &#34;all&#34;&#xA;&#xA;# Filter envelopes according to the given rules.&#xA;#&#xA;# envelope.filter.before = &#34;1990-12-31T23:59:60Z&#34;&#xA;# envelope.filter.after = &#34;1990-12-31T23:59:60Z&#34;&#xA;&#xA;# The left backend configuration.&#xA;#&#xA;# In this example, the left side acts as our local cache.&#xA;left.backend.type = &#34;maildir&#34;&#xA;left.backend.root-dir = &#34;/tmp/example&#34;&#xA;&#xA;# The left backend permissions.&#xA;#&#xA;# Example of a full permissive backend (default behaviour):&#xA;left.folder.permissions.create = true&#xA;left.folder.permissions.delete = true&#xA;left.flag.permissions.update = true&#xA;left.message.permissions.create = true&#xA;left.message.permissions.delete = true&#xA;&#xA;# The right backend configuration.&#xA;#&#xA;# In this example, the right side acts as our remote.&#xA;right.backend.type = &#34;imap&#34;&#xA;right.backend.host = &#34;localhost&#34;&#xA;right.backend.port = 3143&#xA;right.backend.login = &#34;alice@localhost&#34;&#xA;&#xA;# The right backend password.&#xA;#&#xA;# right.backend.passwd.cmd = &#34;echo password&#34;&#xA;# right.backend.passwd.keyring = &#34;password-keyring-entry&#34;&#xA;right.backend.passwd.raw = &#34;password&#34;&#xA;&#xA;# The right backend encryption.&#xA;#&#xA;# right.backend.encryption = &#34;tls&#34; # or true&#xA;# right.backend.encryption = &#34;start-tls&#34;&#xA;right.backend.encryption = &#34;none&#34; # or false&#xA;&#xA;# The right backend permissions.&#xA;#&#xA;# In this example, we set up safe permissions by denying deletions&#xA;# remote side.&#xA;right.folder.permissions.delete = false&#xA;right.message.permissions.delete = false&#xA;&#xA;# The right folder aliases&#xA;#&#xA;# In this example, we define custom folder aliases for the right&#xA;# side. They are useful when you need to map left and right folders&#xA;# together.&#xA;right.folder.aliases.inbox = &#34;Inbox&#34;&#xA;right.folder.aliases.sent = &#34;Sent Mails&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;em&gt;Please read the &lt;a href=&#34;https://pimalaya.org/neverest/cli/latest/configuration/&#34;&gt;documentation&lt;/a&gt; for more detailed information.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you want to &lt;strong&gt;report a bug&lt;/strong&gt;, please send an email to the &lt;a href=&#34;https://todo.sr.ht/~soywod/pimalaya&#34;&gt;bug tracker&lt;/a&gt; at &lt;a href=&#34;mailto:~soywod/pimalaya@todo.sr.ht&#34;&gt;~soywod/pimalaya@todo.sr.ht&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to &lt;strong&gt;propose a feature&lt;/strong&gt; or &lt;strong&gt;fix a bug&lt;/strong&gt;, please send a patch to the &lt;a href=&#34;https://lists.sr.ht/~soywod/pimalaya&#34;&gt;mailing list&lt;/a&gt; at &lt;a href=&#34;mailto:~soywod/pimalaya@lists.sr.ht&#34;&gt;~soywod/pimalaya@lists.sr.ht&lt;/a&gt;. The simplest way to send a patch is to use &lt;a href=&#34;https://git-scm.com/docs/git-send-email&#34;&gt;git send-email&lt;/a&gt;, follow &lt;a href=&#34;https://git-send-email.io/&#34;&gt;this guide&lt;/a&gt; to configure git properly.&lt;/p&gt; &#xA;&lt;p&gt;If you just want to &lt;strong&gt;discuss&lt;/strong&gt; about the project, feel free to join the &lt;a href=&#34;https://matrix.org/&#34;&gt;Matrix&lt;/a&gt; workspace &lt;a href=&#34;https://matrix.to/#/#pimalaya.neverest:matrix.org&#34;&gt;#pimalaya.neverest&lt;/a&gt; or contact me directly &lt;a href=&#34;https://matrix.to/#/@soywod:matrix.org&#34;&gt;@soywod&lt;/a&gt;. You can also &lt;a href=&#34;mailto:~soywod/pimalaya+subscribe@lists.sr.ht&#34;&gt;subscribe&lt;/a&gt; or &lt;a href=&#34;mailto:~soywod/pimalaya+unsubscribe@lists.sr.ht&#34;&gt;unsubscribe&lt;/a&gt; to the &lt;a href=&#34;https://lists.sr.ht/~soywod/pimalaya&#34;&gt;mailing list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Please read the &lt;a href=&#34;https://github.com/soywod/neverest/raw/master/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; for more detailed information.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsoring&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nlnet.nl/project/Neverest/index.html&#34;&gt;&lt;img src=&#34;https://nlnet.nl/logo/banner-160x60.png&#34; alt=&#34;nlnet&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to the &lt;a href=&#34;https://nlnet.nl/project/Neverest/index.html&#34;&gt;NLnet foundation&lt;/a&gt; and the &lt;a href=&#34;https://www.ngi.eu/&#34;&gt;European Commission&lt;/a&gt; that helped the project to receive financial support from:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nlnet.nl/assure/&#34;&gt;NGI Assure&lt;/a&gt; in 2022&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nlnet.nl/entrust/&#34;&gt;NGI Zero Entrust&lt;/a&gt; in 2023&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you appreciate the project, feel free to donate using one of the following providers:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/soywod&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-GitHub%20Sponsors-fafbfc?logo=GitHub%20Sponsors&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.com/paypalme/soywod&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-PayPal-0079c1?logo=PayPal&amp;amp;logoColor=ffffff&#34; alt=&#34;PayPal&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ko-fi.com/soywod&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Ko--fi-ff5e5a?logo=Ko-fi&amp;amp;logoColor=ffffff&#34; alt=&#34;Ko-fi&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.buymeacoffee.com/soywod&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Buy%20Me%20a%20Coffee-ffdd00?logo=Buy%20Me%20A%20Coffee&amp;amp;logoColor=000000&#34; alt=&#34;Buy Me a Coffee&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://liberapay.com/soywod&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Liberapay-f6c915?logo=Liberapay&amp;amp;logoColor=222222&#34; alt=&#34;Liberapay&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>paradigmxyz/alphanet</title>
    <updated>2024-04-18T01:42:07Z</updated>
    <id>tag:github.com,2024-04-18:/paradigmxyz/alphanet</id>
    <link href="https://github.com/paradigmxyz/alphanet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Reth AlphaNet is a testnet OP Stack-compatible rollup aimed at enabling experimentation of bleeding edge Ethereum Research.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;alphanet&lt;/h1&gt; &#xA;&lt;!-- [![Crates.io][crates-badge]][crates-io] --&gt; &#xA;&lt;!-- [![Downloads][downloads-badge]][crates-io] --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paradigmxyz/alphanet/main/LICENSE-MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/paradigmxyz/alphanet/main/LICENSE-APACHE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache--2.0-blue.svg?sanitize=true&#34; alt=&#34;Apache-2.0 License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/paradigmxyz/alphanet/actions?query=workflow%3ACI+branch%3Amain&#34;&gt;&lt;img src=&#34;https://github.com/paradigmxyz/alphanet/workflows/unit/badge.svg?sanitize=true&#34; alt=&#34;CI Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is Reth AlphaNet?&lt;/h2&gt; &#xA;&lt;p&gt;Reth AlphaNet is a testnet OP Stack rollup aimed at enabling experimentation of bleeding edge Ethereum Research. AlphaNet is &lt;strong&gt;not&lt;/strong&gt; a fork of reth. AlphaNet implements traits provided by the &lt;a href=&#34;https://paradigmxyz.github.io/reth/docs/reth_node_builder/index.html&#34;&gt;reth node builder API&lt;/a&gt;, allowing implementation of precompiles and instructions of experimental EIPs without forking the node.&lt;/p&gt; &#xA;&lt;p&gt;Specifically, AlphaNet currently implements the following EIPs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eips.ethereum.org/EIPS/eip-3074&#34;&gt;EIP-3074&lt;/a&gt;: &lt;code&gt;AUTH&lt;/code&gt; and &lt;code&gt;AUTHCALL&lt;/code&gt; instructions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eips.ethereum.org/EIPS/eip-7212&#34;&gt;EIP-7212&lt;/a&gt;: Precompile for secp256r1 curve support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eips.ethereum.org/EIPS/eip-2537&#34;&gt;EIP-2537&lt;/a&gt;: Precompiles for BLS12-381 curve operations.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Why AlphaNet?&lt;/h3&gt; &#xA;&lt;p&gt;AlphaNet has 2 goals:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Showcase Reth&#39;s performance at the extremes. We intend to launch a hosted version of AlphaNet on &lt;a href=&#34;https://conduit.xyz/&#34;&gt;Conduit&lt;/a&gt;, targeting 50mgas/s, and eventually ramping up to 1ggas/s and beyond. In the process we hope to hit the state growth performance bottleneck, and discover ways to solve it. If our hosted chains end up getting too big, we may possibly restart the experiment from zero, and try again.&lt;/li&gt; &#xA; &lt;li&gt;Showcase how Reth&#39;s modular architecture can serve as a distribution channel for research ideas. Specifically, AlphaNet&#39;s node extensions were chosen for their ability to enable applications that enhance the onchain user experience, and drastically reduce cost for existing applications that improve UX.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;AlphaNet Local Development&lt;/h3&gt; &#xA;&lt;p&gt;AlphaNet does not yet have a running testnet, but can be run locally for development and testing purposes. To do this, the binary can be run with the &lt;code&gt;--dev&lt;/code&gt; flag, which will start the node with a development configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;alphanet node --chain etc/alphanet-genesis.json --dev --http --http.api all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will start the node with a development configuration, and expose the HTTP API on &lt;code&gt;http://localhost:8545&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To use 3074-enabled foundry, use &lt;a href=&#34;https://github.com/clabby/eip-3074-foundry&#34;&gt;eip-3074-foundry&lt;/a&gt; and follow installation instructions.&lt;/p&gt; &#xA;&lt;h3&gt;Running AlphaNet&lt;/h3&gt; &#xA;&lt;p&gt;‚ö†Ô∏è AlphaNet does not yet have a running testnet, please use the local development instructions above! ‚ö†Ô∏è&lt;/p&gt; &#xA;&lt;p&gt;Running AlphaNet will require running additional infrastructure for the archival L1 node. These instructions are a guide for running the AlphaNet OP-stack node only.&lt;/p&gt; &#xA;&lt;p&gt;For instructions on running the full AlphaNet OP stack, including the L1 node, see the &lt;a href=&#34;https://paradigmxyz.github.io/reth/run/optimism.html&#34;&gt;Reth book section on running the OP stack&lt;/a&gt;, using the &lt;code&gt;alphanet&lt;/code&gt; binary instead of &lt;code&gt;op-reth&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Running the alphanet execution node&lt;/h4&gt; &#xA;&lt;p&gt;To run AlphaNet from source, clone the repository and run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/paradigmxyz/alphanet.git&#xA;cd alphanet&#xA;cargo install --release&#xA;alphanet node&#xA;    --chain etc/alphanet-genesis.json \&#xA;    --rollup.sequencer-http &amp;lt;TODO&amp;gt; \&#xA;    --http \&#xA;    --ws \&#xA;    --authrpc.port 9551 \&#xA;    --authrpc.jwtsecret /path/to/jwt.hex&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Running op-node with the alphanet configuration&lt;/h4&gt; &#xA;&lt;p&gt;Once &lt;code&gt;alphanet&lt;/code&gt; is started, &lt;a href=&#34;https://github.com/ethereum-optimism/optimism/tree/develop/op-node&#34;&gt;&lt;code&gt;op-node&lt;/code&gt;&lt;/a&gt; can be run with the included &lt;code&gt;alphanet-rollup.json&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd alphanet/&#xA;op-node \&#xA;    --rollup.config ./etc/alphanet-rollup.json \&#xA;    --l1=&amp;lt;your-sepolia-L1-rpc&amp;gt; \&#xA;    --l2=http://localhost:9551 \&#xA;    --l2.jwt-secret=/path/to/jwt.hex \&#xA;    --rpc.addr=0.0.0.0 \&#xA;    --rpc.port=7000 \&#xA;    --l1.trustrpc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Security&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/paradigmxyz/alphanet/main/SECURITY.md&#34;&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;License&lt;/h4&gt; &#xA;&lt;sup&gt; Licensed under either of &lt;a href=&#34;https://raw.githubusercontent.com/paradigmxyz/alphanet/main/LICENSE-APACHE&#34;&gt;Apache License, Version 2.0&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/paradigmxyz/alphanet/main/LICENSE-MIT&#34;&gt;MIT license&lt;/a&gt; at your option. &lt;/sup&gt; &#xA;&lt;br&gt; &#xA;&lt;sub&gt; Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in these crates by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions. &lt;/sub&gt; &#xA;&lt;!-- [crates-badge]: https://img.shields.io/crates/v/alphanet.svg --&gt; &#xA;&lt;!-- [crates-io]: https://crates.io/crates/alphanet --&gt; &#xA;&lt;!-- [downloads-badge]: https://img.shields.io/crates/d/alphanet --&gt;</summary>
  </entry>
</feed>