<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-29T01:43:50Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>gorgarp/ChatGPT-Code-Review</title>
    <updated>2023-05-29T01:43:50Z</updated>
    <id>tag:github.com,2023-05-29:/gorgarp/ChatGPT-Code-Review</id>
    <link href="https://github.com/gorgarp/ChatGPT-Code-Review" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ChatGPT-Code-Review is a Rust application that uses the OpenAI GPT-3.5 language model to review code. It accepts a local path to a folder containing code, and generates a review for each file in the folder and its subdirectories.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatGPT-Code-Review&lt;/h1&gt; &#xA;&lt;p&gt;ChatGPT-Code-Review is a Rust application that uses the OpenAI GPT-3.5 language model to review code. It accepts a local path to a folder containing code, and generates a review for each file in the folder and its subdirectories.&lt;/p&gt; &#xA;&lt;p&gt;The program prompts the user for an OpenAI API key, which is required to use the GPT-3.5 model. Once the API key is provided, the program generates code reviews using GPT-3.5 and prints the results to the console. Additionally, the program saves the reviews to a file named &#34;review.txt&#34; in the current directory.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To use ChatGPT-Code-Review, you will need to obtain an OpenAI API key. You can sign up for an API key on the OpenAI website.&lt;/p&gt; &#xA;&lt;p&gt;Once you have an API key, you can either compile the program in Rust or download the latest release.&lt;/p&gt; &#xA;&lt;p&gt;To compile the program in Rust, run the following command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cargo build --release&lt;/code&gt; This will generate an executable in the target/release directory.&lt;/p&gt; &#xA;&lt;p&gt;To run the program, navigate to the directory containing the executable and run the following command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;./chatgpt-code-review&lt;/code&gt; The program will prompt you for your OpenAI API key and the path to the folder containing the code you want to review. Once you provide this information, the program will generate a review for each file in the folder and its subdirectories.&lt;/p&gt; &#xA;&lt;h2&gt;Output&lt;/h2&gt; &#xA;&lt;p&gt;The output of the program is printed to the console and saved to a file named &#34;review.txt&#34; in the current directory. Each review consists of the file path and the review text generated by GPT-3.5.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of what the output might look like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;File: /path/to/file1.py&#xA;Review:&#xA;This code is well-organized and easy to read. The variable names are clear and descriptive, and the function names are consistent with Python naming conventions. Overall, this is a well-written and maintainable code.&#xA;&#xA;File: /path/to/file2.js&#xA;Review:&#xA;The code contains some syntax errors and undefined variables. Additionally, the use of nested callbacks makes the code difficult to follow. I would recommend refactoring this code to use Promises or async/await to improve readability and maintainability.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions to ChatGPT-Code-Review! If you have any feedback, suggestions or bug reports, please feel free to open an issue or submit a pull request.&lt;/p&gt;</summary>
  </entry>
</feed>