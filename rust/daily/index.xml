<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-31T01:44:47Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>grafbase/grafbase</title>
    <updated>2023-07-31T01:44:47Z</updated>
    <id>tag:github.com,2023-07-31:/grafbase/grafbase</id>
    <link href="https://github.com/grafbase/grafbase" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Instant GraphQL APIs for your data&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://grafbase.com&#34;&gt; &lt;img src=&#34;https://grafbase.com/images/other/grafbase-logo-circle.png&#34; height=&#34;96&#34;&gt; &lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 align=&#34;center&#34;&gt;&lt;a href=&#34;https://grafbase.com&#34;&gt;Grafbase&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;a href=&#34;https://grafbase.com&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; The unified data layer &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://grafbase.com/docs/quickstart/get-started&#34;&gt;&lt;strong&gt;Quickstart&lt;/strong&gt;&lt;/a&gt; ¬∑ &lt;a href=&#34;https://raw.githubusercontent.com/grafbase/grafbase/main/examples&#34;&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/a&gt; ¬∑ &lt;a href=&#34;https://raw.githubusercontent.com/grafbase/grafbase/main/templates&#34;&gt;&lt;strong&gt;Templates&lt;/strong&gt;&lt;/a&gt; ¬∑ &lt;a href=&#34;https://grafbase.com/docs&#34;&gt;&lt;strong&gt;Docs&lt;/strong&gt;&lt;/a&gt; ¬∑ &lt;a href=&#34;https://grafbase.com/cli&#34;&gt;&lt;strong&gt;CLI&lt;/strong&gt;&lt;/a&gt; ¬∑ &lt;a href=&#34;https://grafbase.com/community&#34;&gt;&lt;strong&gt;Community&lt;/strong&gt;&lt;/a&gt; ¬∑ &lt;a href=&#34;https://grafbase.com/changelog&#34;&gt;&lt;strong&gt;Changelog&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Welcome to Grafbase!&lt;/h2&gt; &#xA;&lt;p&gt;Combine your data sources into a centralized GraphQL endpoint.&lt;/p&gt; &#xA;&lt;p&gt;Deploy globally fast GraphQL APIs with a top-notch developer experience.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PeerDB-io/peerdb</title>
    <updated>2023-07-31T01:44:47Z</updated>
    <id>tag:github.com,2023-07-31:/PeerDB-io/peerdb</id>
    <link href="https://github.com/PeerDB-io/peerdb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Postgres first ETL/ELT, enabling 10x faster data movement in and out of Postgres üêò üöÄ&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/PeerDB-io/peerdb/main/images/banner.jpg&#34; alt=&#34;PeerDB Banner&#34; width=&#34;512&#34;&gt; &#xA; &lt;h4&gt;Frustratingly simple ETL for Postgres&lt;/h4&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/Peerdb-io/peerdb/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/PeerDB-io/peerdb/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Workflow Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PeerDB-io/peerdb/raw/main/LICENSE.md&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/License/Elv2/green?icon=github&#34; alt=&#34;ElV2 License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/peerdb-public/shared_invite/zt-1wo9jydev-EXInbMtCtpAKFFWdi7QvLQ&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-peerdb-brightgreen.svg?logo=slack&#34; alt=&#34;Slack Community&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;PeerDB&lt;/h2&gt; &#xA;&lt;p&gt;PeerDB is a Postgres-first data-movement platform that makes moving data in and out of Postgres fast and simple. It enables you to &lt;strong&gt;sync&lt;/strong&gt;, &lt;strong&gt;transform&lt;/strong&gt; and &lt;strong&gt;query&lt;/strong&gt; data across your stores using simple SQL commands. We implement multiple Postgres native and infrastructural optimizations for 10x faster data-movement in and out of PostgreSQL.&lt;/p&gt; &#xA;&lt;p&gt;You can use PeerDB for any of the below use-cases:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Real-time Change Data Capture from PostgreSQL.&lt;/li&gt; &#xA; &lt;li&gt;Real-time Streaming of Query results across data-stores&lt;/li&gt; &#xA; &lt;li&gt;Federated query workloads - Query multiple data-stores through a common SQL interface&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --recursive git@github.com:PeerDB-io/peerdb.git&#xA;cd peerdb&#xA;&#xA;# Run docker containers: peerdb-server, postgres as catalog, temporal&#xA;export COMPOSE_PROJECT_NAME=peerdb-stack&#xA;docker compose up&#xA;&#xA;# connect to peerdb and query away&#xA;psql &#34;port=9900 host=localhost password=peerdb&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/PeerDB-io/peerdb/main/images/peerdb-demo.gif&#34; width=&#34;512&#34;&gt; &#xA;&lt;p&gt;Follow this 5-minute &lt;a href=&#34;https://docs.peerdb.io/quickstart#quickstart&#34;&gt;Quickstart Guide&lt;/a&gt; to see PeerDB in action i.e. streaming data in real-time across stores.&lt;/p&gt; &#xA;&lt;h2&gt;Why PeerDB&lt;/h2&gt; &#xA;&lt;p&gt;Current data tools prioritize a wide range of connectors, often neglecting to optimize for Postgres users. This can be problematic for those storing large amounts of data in Postgres and frequently transferring it. As a result, many resort to building custom pipelines when existing tools don&#39;t meet their needs. We&#39;ve developed this project to provide a straightforward and reliable solution specifically for Postgres.&lt;/p&gt; &#xA;&lt;h3&gt;Postgres-first Approach&lt;/h3&gt; &#xA;&lt;p&gt;PeerDB is an ETL/ELT tool built for PostgreSQL. We implement multiple Postgres native and infrastructural optimizations to provide a fast, reliable and a feature-rich experience for moving data in/out of PostgreSQL.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;For performance&lt;/strong&gt; - we can parallelize initial load for a large table, still ensuring consistency. Syncing 100s of GB reduces from days to minutes. Our architecture is designed for real-time syncs and implements multiple logical replication related optimizations (tuning Postgres configs, parallel reading of slot etc.). This enables 10x faster Change Data Capture with data-freshness of a few 10s of seconds even at large throughputs (10k+ tps).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;For reliability&lt;/strong&gt;, we have mechanisms in place for fault tolerance - state management, automatic retries, handling idempotency and consistency and so on (&lt;a href=&#34;https://blog.peerdb.io/using-temporal-to-scale-data-synchronization-at-peerdb&#34;&gt;https://blog.peerdb.io/using-temporal-to-scale-data-synchronization-at-peerdb&lt;/a&gt;) Configurable batching and parallelism prevent out of memory (OOMs) and crashes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;From a feature richness standpoint&lt;/strong&gt;, we support efficient syncing of tables with large (TOAST) columns. We support multiple streaming modes - Log based (CDC) based, Query based streaming etc. We provide rich data-type mapping and plan to support every possible (incl. Custom types) that Postgres supports to the best extent possible on the target data-store.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;strong&gt;Postgres-compatible SQL interface to do ETL&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;p&gt;The Postgres-compatible SQL interface for ETL is unique to PeerDB and enables you to operate in a language you are familiar with. You can do ETL the same way you work with your databases.&lt;/p&gt; &#xA;&lt;p&gt;You can use Postgres‚Äô eco-system to manage your ETL ‚Äî&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Client tools like pgadmin, psql to run SQL commands.&lt;/li&gt; &#xA; &lt;li&gt;BI tools like grafana, tableau to visually monitor syncs and transforms.&lt;/li&gt; &#xA; &lt;li&gt;Database migration and versioning tools like Flyway to manage your ETL.&lt;/li&gt; &#xA; &lt;li&gt;Any language (Python, Go, Node.JS etc) and Scheduler (AirFlow) for development.&lt;/li&gt; &#xA; &lt;li&gt;And many more&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;We support multiple target connectors to move data from Postgres and a couple of source connectors to move data into Postgres. Check the status of connectors &lt;a href=&#34;https://docs.peerdb.io/sql/commands/supported-connectors&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;PeerDB is licensed under Elastic License 2.0 (ELv2). Please see the&amp;nbsp;LICENSE&amp;nbsp;file for additional information. If you have any licensing questions please email &lt;strong&gt;&lt;a href=&#34;mailto:founders@peerdb.io&#34;&gt;founders@peerdb.io&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ogham/dog</title>
    <updated>2023-07-31T01:44:47Z</updated>
    <id>tag:github.com,2023-07-31:/ogham/dog</id>
    <link href="https://github.com/ogham/dog" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A command-line DNS client.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;dog&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://dns.lookup.dog/&#34;&gt;dog&lt;/a&gt; is a command-line DNS client.&lt;/p&gt; &#xA; &lt;a href=&#34;https://travis-ci.org/github/ogham/dog&#34;&gt; &lt;img src=&#34;https://travis-ci.org/ogham/dog.svg?branch=master&#34; alt=&#34;Build status&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://saythanks.io/to/ogham%40bsago.me&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg?sanitize=true&#34; alt=&#34;Say thanks!&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ogham/dog/master/dog-screenshot.png&#34; alt=&#34;A screenshot of dog making a DNS request&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Dogs &lt;em&gt;can&lt;/em&gt; look up!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;dog&lt;/strong&gt; is a command-line DNS client, like &lt;code&gt;dig&lt;/code&gt;. It has colourful output, understands normal command-line argument syntax, supports the DNS-over-TLS and DNS-over-HTTPS protocols, and can emit JSON.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;dog example.net                          Query a domain using default settings&#xA;dog example.net MX                       ...looking up MX records instead&#xA;dog example.net MX @1.1.1.1              ...using a specific nameserver instead&#xA;dog example.net MX @1.1.1.1 -T           ...using TCP rather than UDP&#xA;dog -q example.net -t MX -n 1.1.1.1 -T   As above, but using explicit arguments&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Command-line options&lt;/h2&gt; &#xA;&lt;h3&gt;Query options&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;arguments&amp;gt;              Human-readable host names, nameservers, types, or classes&#xA;-q, --query=HOST         Host name or domain name to query&#xA;-t, --type=TYPE          Type of the DNS record being queried (A, MX, NS...)&#xA;-n, --nameserver=ADDR    Address of the nameserver to send packets to&#xA;--class=CLASS            Network class of the DNS record being queried (IN, CH, HS)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sending options&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;--edns=SETTING           Whether to OPT in to EDNS (disable, hide, show)&#xA;--txid=NUMBER            Set the transaction ID to a specific value&#xA;-Z=TWEAKS                Set uncommon protocol-level tweaks&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Protocol options&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;-U, --udp                Use the DNS protocol over UDP&#xA;-T, --tcp                Use the DNS protocol over TCP&#xA;-S, --tls                Use the DNS-over-TLS protocol&#xA;-H, --https              Use the DNS-over-HTTPS protocol&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Output options&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;-1, --short              Short mode: display nothing but the first result&#xA;-J, --json               Display the output as JSON&#xA;--color, --colour=WHEN   When to colourise the output (always, automatic, never)&#xA;--seconds                Do not format durations, display them as seconds&#xA;--time                   Print how long the response took to arrive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install dog, you can download a pre-compiled binary, or you can compile it from source. You &lt;em&gt;may&lt;/em&gt; be able to install dog using your OS‚Äôs package manager, depending on your platform.&lt;/p&gt; &#xA;&lt;h3&gt;Packages&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For Arch Linux, install the &lt;a href=&#34;https://www.archlinux.org/packages/community/x86_64/dog/&#34;&gt;&lt;code&gt;dog&lt;/code&gt;&lt;/a&gt; package.&lt;/li&gt; &#xA; &lt;li&gt;For Homebrew on macOS, install the &lt;a href=&#34;https://formulae.brew.sh/formula/dog&#34;&gt;&lt;code&gt;dog&lt;/code&gt;&lt;/a&gt; formula.&lt;/li&gt; &#xA; &lt;li&gt;For NixOS, install the &lt;a href=&#34;https://search.nixos.org/packages?channel=unstable&amp;amp;show=dogdns&amp;amp;query=dogdns&#34;&gt;&lt;code&gt;dogdns&lt;/code&gt;&lt;/a&gt; package.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Downloads&lt;/h3&gt; &#xA;&lt;p&gt;Binary downloads of dog are available from &lt;a href=&#34;https://github.com/ogham/dog/releases/&#34;&gt;the releases section on GitHub&lt;/a&gt; for 64-bit Windows, macOS, and Linux targets. They contain the compiled executable, the manual page, and shell completions.&lt;/p&gt; &#xA;&lt;h3&gt;Compilation&lt;/h3&gt; &#xA;&lt;p&gt;dog is written in &lt;a href=&#34;https://www.rust-lang.org&#34;&gt;Rust&lt;/a&gt;. You will need rustc version &lt;a href=&#34;https://blog.rust-lang.org/2020/07/16/Rust-1.45.0.html&#34;&gt;1.45.0&lt;/a&gt; or higher. The recommended way to install Rust for development is from the &lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;official download page&lt;/a&gt;, using rustup.&lt;/p&gt; &#xA;&lt;p&gt;To build, download the source code and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cargo build&#xA;$ cargo test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;a href=&#34;https://github.com/casey/just&#34;&gt;just&lt;/a&gt; command runner can be used to run some helpful development commands, in a manner similar to &lt;code&gt;make&lt;/code&gt;. Run &lt;code&gt;just --list&lt;/code&gt; to get an overview of what‚Äôs available.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you are compiling a copy for yourself, be sure to run &lt;code&gt;cargo build --release&lt;/code&gt; or &lt;code&gt;just build-release&lt;/code&gt; to benefit from release-mode optimisations. Copy the resulting binary, which will be in the &lt;code&gt;target/release&lt;/code&gt; directory, into a folder in your &lt;code&gt;$PATH&lt;/code&gt;. &lt;code&gt;/usr/local/bin&lt;/code&gt; is usually a good choice.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To compile and install the manual pages, you will need &lt;a href=&#34;https://pandoc.org/&#34;&gt;pandoc&lt;/a&gt;. The &lt;code&gt;just man&lt;/code&gt; command will compile the Markdown into manual pages, which it will place in the &lt;code&gt;target/man&lt;/code&gt; directory. To use them, copy them into a directory that &lt;code&gt;man&lt;/code&gt; will read. &lt;code&gt;/usr/local/share/man&lt;/code&gt; is usually a good choice.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Container image&lt;/h3&gt; &#xA;&lt;p&gt;To build the container image of dog, you can use Docker or Kaniko. Here an example using Docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker build -t dog .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then run it using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker run -it --rm dog&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run dog directly, you can then define the following alias:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ alias dog=&#34;docker run -it --rm dog&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;End-to-end testing&lt;/h3&gt; &#xA;&lt;p&gt;dog has an integration test suite written as &lt;a href=&#34;https://specsheet.software/&#34;&gt;Specsheet&lt;/a&gt; check documents. If you have a copy installed, you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ just xtests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Specsheet will test the compiled binary by making DNS requests over the network, checking that dog returns the correct results and does not crash. Note that this will expose your IP address. For more information, read &lt;a href=&#34;https://raw.githubusercontent.com/ogham/dog/master/xtests/README.md&#34;&gt;the xtests README&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Feature toggles&lt;/h3&gt; &#xA;&lt;p&gt;dog has three Cargo features that can be switched off to remove functionality. While doing so makes dog less useful, it results in a smaller binary that takes less time to build.&lt;/p&gt; &#xA;&lt;p&gt;There are three feature toggles available, all of which are active by default:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;with_idna&lt;/code&gt;, which enables &lt;a href=&#34;https://en.wikipedia.org/wiki/Internationalized_domain_name&#34;&gt;IDNA&lt;/a&gt; processing&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;with_tls&lt;/code&gt;, which enables DNS-over-TLS&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;with_https&lt;/code&gt;, which enables DNS-over-HTTPS (requires &lt;code&gt;with_tls&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Use &lt;code&gt;cargo&lt;/code&gt; to build a binary that uses feature toggles. For example, to disable TLS and HTTPS support but keep IDNA support enabled, you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cargo build --no-default-features --features=with_idna&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The list of features that have been disabled can be checked at runtime as part of the &lt;code&gt;--version&lt;/code&gt; string.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For documentation on how to use dog, see the website: &lt;a href=&#34;https://dns.lookup.dog/&#34;&gt;https://dns.lookup.dog/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;See also&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;mutt&lt;/code&gt;, &lt;code&gt;tail&lt;/code&gt;, &lt;code&gt;sleep&lt;/code&gt;, &lt;code&gt;roff&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Licence&lt;/h2&gt; &#xA;&lt;p&gt;dog‚Äôs source code is licenced under the &lt;a href=&#34;https://choosealicense.com/licenses/eupl-1.2/&#34;&gt;European Union Public Licence&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>