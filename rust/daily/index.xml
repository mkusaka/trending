<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-09T01:47:20Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>astral-sh/ruff</title>
    <updated>2023-06-09T01:47:20Z</updated>
    <id>tag:github.com,2023-06-09:/astral-sh/ruff</id>
    <link href="https://github.com/astral-sh/ruff" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An extremely fast Python linter, written in Rust.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ruff&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/astral-sh/ruff&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v2.json&#34; alt=&#34;Ruff&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/ruff&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/ruff.svg?sanitize=true&#34; alt=&#34;image&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/ruff&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/l/ruff.svg?sanitize=true&#34; alt=&#34;image&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.python.org/pypi/ruff&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/pyversions/ruff.svg?sanitize=true&#34; alt=&#34;image&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/astral-sh/ruff/actions&#34;&gt;&lt;img src=&#34;https://github.com/astral-sh/ruff/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Actions status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/c9MhzV8aU5&#34;&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://beta.ruff.rs/docs/&#34;&gt;&lt;strong&gt;Docs&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://play.ruff.rs/&#34;&gt;&lt;strong&gt;Playground&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;An extremely fast Python linter, written in Rust.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture align=&#34;center&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://user-images.githubusercontent.com/1309177/212613422-7faaf278-706b-4294-ad92-236ffcab3430.svg&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://user-images.githubusercontent.com/1309177/212613257-5f4bca12-6d6b-4c79-9bac-51a4c6d08928.svg&#34;&gt; &#xA;  &lt;img alt=&#34;Shows a bar chart with benchmark results.&#34; src=&#34;https://user-images.githubusercontent.com/1309177/212613257-5f4bca12-6d6b-4c79-9bac-51a4c6d08928.svg?sanitize=true&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;i&gt;Linting the CPython codebase from scratch.&lt;/i&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚ö°Ô∏è 10-100x faster than existing linters&lt;/li&gt; &#xA; &lt;li&gt;üêç Installable via &lt;code&gt;pip&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;üõ†Ô∏è &lt;code&gt;pyproject.toml&lt;/code&gt; support&lt;/li&gt; &#xA; &lt;li&gt;ü§ù Python 3.11 compatibility&lt;/li&gt; &#xA; &lt;li&gt;üì¶ Built-in caching, to avoid re-analyzing unchanged files&lt;/li&gt; &#xA; &lt;li&gt;üîß Autofix support, for automatic error correction (e.g., automatically remove unused imports)&lt;/li&gt; &#xA; &lt;li&gt;üìè Over &lt;a href=&#34;https://beta.ruff.rs/docs/rules/&#34;&gt;500 built-in rules&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;‚öñÔ∏è &lt;a href=&#34;https://beta.ruff.rs/docs/faq/#how-does-ruff-compare-to-flake8&#34;&gt;Near-parity&lt;/a&gt; with the built-in Flake8 rule set&lt;/li&gt; &#xA; &lt;li&gt;üîå Native re-implementations of dozens of Flake8 plugins, like flake8-bugbear&lt;/li&gt; &#xA; &lt;li&gt;‚å®Ô∏è First-party editor integrations for &lt;a href=&#34;https://github.com/astral-sh/ruff-vscode&#34;&gt;VS Code&lt;/a&gt; and &lt;a href=&#34;https://github.com/astral-sh/ruff-lsp&#34;&gt;more&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üåé Monorepo-friendly, with &lt;a href=&#34;https://beta.ruff.rs/docs/configuration/#pyprojecttoml-discovery&#34;&gt;hierarchical and cascading configuration&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Ruff aims to be orders of magnitude faster than alternative tools while integrating more functionality behind a single, common interface.&lt;/p&gt; &#xA;&lt;p&gt;Ruff can be used to replace &lt;a href=&#34;https://pypi.org/project/flake8/&#34;&gt;Flake8&lt;/a&gt; (plus dozens of plugins), &lt;a href=&#34;https://pypi.org/project/isort/&#34;&gt;isort&lt;/a&gt;, &lt;a href=&#34;https://pypi.org/project/pydocstyle/&#34;&gt;pydocstyle&lt;/a&gt;, &lt;a href=&#34;https://github.com/asottile/yesqa&#34;&gt;yesqa&lt;/a&gt;, &lt;a href=&#34;https://pypi.org/project/eradicate/&#34;&gt;eradicate&lt;/a&gt;, &lt;a href=&#34;https://pypi.org/project/pyupgrade/&#34;&gt;pyupgrade&lt;/a&gt;, and &lt;a href=&#34;https://pypi.org/project/autoflake/&#34;&gt;autoflake&lt;/a&gt;, all while executing tens or hundreds of times faster than any individual tool.&lt;/p&gt; &#xA;&lt;p&gt;Ruff is extremely actively developed and used in major open-source projects like:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache/airflow&#34;&gt;Apache Airflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tiangolo/fastapi&#34;&gt;FastAPI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/huggingface/transformers&#34;&gt;Hugging Face&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pandas-dev/pandas&#34;&gt;Pandas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/scipy/scipy&#34;&gt;SciPy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;...and many more.&lt;/p&gt; &#xA;&lt;p&gt;Ruff is backed by &lt;a href=&#34;https://astral.sh&#34;&gt;Astral&lt;/a&gt;. Read the &lt;a href=&#34;https://astral.sh/blog/announcing-astral-the-company-behind-ruff&#34;&gt;launch post&lt;/a&gt;, or the original &lt;a href=&#34;https://notes.crmarsh.com/python-tooling-could-be-much-much-faster&#34;&gt;project announcement&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Testimonials&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/tiangolo/status/1591912354882764802&#34;&gt;&lt;strong&gt;Sebasti√°n Ram√≠rez&lt;/strong&gt;&lt;/a&gt;, creator of &lt;a href=&#34;https://github.com/tiangolo/fastapi&#34;&gt;FastAPI&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Ruff is so fast that sometimes I add an intentional bug in the code just to confirm it&#39;s actually running and checking the code.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/schrockn/status/1612615862904827904&#34;&gt;&lt;strong&gt;Nick Schrock&lt;/strong&gt;&lt;/a&gt;, founder of &lt;a href=&#34;https://www.elementl.com/&#34;&gt;Elementl&lt;/a&gt;, co-creator of &lt;a href=&#34;https://graphql.org/&#34;&gt;GraphQL&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Why is Ruff a gamechanger? Primarily because it is nearly 1000x faster. Literally. Not a typo. On our largest module (dagster itself, 250k LOC) pylint takes about 2.5 minutes, parallelized across 4 cores on my M1. Running ruff against our &lt;em&gt;entire&lt;/em&gt; codebase takes .4 seconds.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bokeh/bokeh/pull/12605&#34;&gt;&lt;strong&gt;Bryan Van de Ven&lt;/strong&gt;&lt;/a&gt;, co-creator of &lt;a href=&#34;https://github.com/bokeh/bokeh/&#34;&gt;Bokeh&lt;/a&gt;, original author of &lt;a href=&#34;https://docs.conda.io/en/latest/&#34;&gt;Conda&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Ruff is ~150-200x faster than flake8 on my machine, scanning the whole repo takes ~0.2s instead of ~20s. This is an enormous quality of life improvement for local dev. It&#39;s fast enough that I added it as an actual commit hook, which is terrific.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/timothycrosley/status/1606420868514877440&#34;&gt;&lt;strong&gt;Timothy Crosley&lt;/strong&gt;&lt;/a&gt;, creator of &lt;a href=&#34;https://github.com/PyCQA/isort&#34;&gt;isort&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Just switched my first project to Ruff. Only one downside so far: it&#39;s so fast I couldn&#39;t believe it was working till I intentionally introduced some errors.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/astral-sh/ruff/issues/465#issuecomment-1317400028&#34;&gt;&lt;strong&gt;Tim Abbott&lt;/strong&gt;&lt;/a&gt;, lead developer of &lt;a href=&#34;https://github.com/zulip/zulip&#34;&gt;Zulip&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This is just ridiculously fast... &lt;code&gt;ruff&lt;/code&gt; is amazing.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;!-- End section: Overview --&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;p&gt;For more, see the &lt;a href=&#34;https://beta.ruff.rs/docs/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/astral-sh/ruff/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/astral-sh/ruff/main/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/astral-sh/ruff/main/#rules&#34;&gt;Rules&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/astral-sh/ruff/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/astral-sh/ruff/main/#support&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/astral-sh/ruff/main/#acknowledgements&#34;&gt;Acknowledgements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/astral-sh/ruff/main/#whos-using-ruff&#34;&gt;Who&#39;s Using Ruff?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/astral-sh/ruff/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;For more, see the &lt;a href=&#34;https://beta.ruff.rs/docs/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Ruff is available as &lt;a href=&#34;https://pypi.org/project/ruff/&#34;&gt;&lt;code&gt;ruff&lt;/code&gt;&lt;/a&gt; on PyPI:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install ruff&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also install Ruff via &lt;a href=&#34;https://formulae.brew.sh/formula/ruff&#34;&gt;Homebrew&lt;/a&gt;, &lt;a href=&#34;https://anaconda.org/conda-forge/ruff&#34;&gt;Conda&lt;/a&gt;, and with &lt;a href=&#34;https://beta.ruff.rs/docs/installation/&#34;&gt;a variety of other package managers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;To run Ruff, try any of the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;ruff check .                        # Lint all files in the current directory (and any subdirectories)&#xA;ruff check path/to/code/            # Lint all files in `/path/to/code` (and any subdirectories)&#xA;ruff check path/to/code/*.py        # Lint all `.py` files in `/path/to/code`&#xA;ruff check path/to/code/to/file.py  # Lint `file.py`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Ruff can also be used as a &lt;a href=&#34;https://pre-commit.com&#34;&gt;pre-commit&lt;/a&gt; hook:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- repo: https://github.com/astral-sh/ruff-pre-commit&#xA;  # Ruff version.&#xA;  rev: v0.0.272&#xA;  hooks:&#xA;    - id: ruff&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Ruff can also be used as a &lt;a href=&#34;https://github.com/astral-sh/ruff-vscode&#34;&gt;VS Code extension&lt;/a&gt; or alongside any other editor through the &lt;a href=&#34;https://github.com/astral-sh/ruff-lsp&#34;&gt;Ruff LSP&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Ruff can also be used as a &lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Action&lt;/a&gt; via &lt;a href=&#34;https://github.com/chartboost/ruff-action&#34;&gt;&lt;code&gt;ruff-action&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;name: Ruff&#xA;on: [ push, pull_request ]&#xA;jobs:&#xA;  ruff:&#xA;    runs-on: ubuntu-latest&#xA;    steps:&#xA;      - uses: actions/checkout@v3&#xA;      - uses: chartboost/ruff-action@v1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;Ruff can be configured through a &lt;code&gt;pyproject.toml&lt;/code&gt;, &lt;code&gt;ruff.toml&lt;/code&gt;, or &lt;code&gt;.ruff.toml&lt;/code&gt; file (see: &lt;a href=&#34;https://beta.ruff.rs/docs/configuration/&#34;&gt;&lt;em&gt;Configuration&lt;/em&gt;&lt;/a&gt;, or &lt;a href=&#34;https://beta.ruff.rs/docs/settings/&#34;&gt;&lt;em&gt;Settings&lt;/em&gt;&lt;/a&gt; for a complete list of all configuration options).&lt;/p&gt; &#xA;&lt;p&gt;If left unspecified, the default configuration is equivalent to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[tool.ruff]&#xA;# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.&#xA;select = [&#34;E&#34;, &#34;F&#34;]&#xA;ignore = []&#xA;&#xA;# Allow autofix for all enabled rules (when `--fix`) is provided.&#xA;fixable = [&#34;A&#34;, &#34;B&#34;, &#34;C&#34;, &#34;D&#34;, &#34;E&#34;, &#34;F&#34;, &#34;G&#34;, &#34;I&#34;, &#34;N&#34;, &#34;Q&#34;, &#34;S&#34;, &#34;T&#34;, &#34;W&#34;, &#34;ANN&#34;, &#34;ARG&#34;, &#34;BLE&#34;, &#34;COM&#34;, &#34;DJ&#34;, &#34;DTZ&#34;, &#34;EM&#34;, &#34;ERA&#34;, &#34;EXE&#34;, &#34;FBT&#34;, &#34;ICN&#34;, &#34;INP&#34;, &#34;ISC&#34;, &#34;NPY&#34;, &#34;PD&#34;, &#34;PGH&#34;, &#34;PIE&#34;, &#34;PL&#34;, &#34;PT&#34;, &#34;PTH&#34;, &#34;PYI&#34;, &#34;RET&#34;, &#34;RSE&#34;, &#34;RUF&#34;, &#34;SIM&#34;, &#34;SLF&#34;, &#34;TCH&#34;, &#34;TID&#34;, &#34;TRY&#34;, &#34;UP&#34;, &#34;YTT&#34;]&#xA;unfixable = []&#xA;&#xA;# Exclude a variety of commonly ignored directories.&#xA;exclude = [&#xA;    &#34;.bzr&#34;,&#xA;    &#34;.direnv&#34;,&#xA;    &#34;.eggs&#34;,&#xA;    &#34;.git&#34;,&#xA;    &#34;.git-rewrite&#34;,&#xA;    &#34;.hg&#34;,&#xA;    &#34;.mypy_cache&#34;,&#xA;    &#34;.nox&#34;,&#xA;    &#34;.pants.d&#34;,&#xA;    &#34;.pytype&#34;,&#xA;    &#34;.ruff_cache&#34;,&#xA;    &#34;.svn&#34;,&#xA;    &#34;.tox&#34;,&#xA;    &#34;.venv&#34;,&#xA;    &#34;__pypackages__&#34;,&#xA;    &#34;_build&#34;,&#xA;    &#34;buck-out&#34;,&#xA;    &#34;build&#34;,&#xA;    &#34;dist&#34;,&#xA;    &#34;node_modules&#34;,&#xA;    &#34;venv&#34;,&#xA;]&#xA;&#xA;# Same as Black.&#xA;line-length = 88&#xA;&#xA;# Allow unused variables when underscore-prefixed.&#xA;dummy-variable-rgx = &#34;^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$&#34;&#xA;&#xA;# Assume Python 3.10.&#xA;target-version = &#34;py310&#34;&#xA;&#xA;[tool.ruff.mccabe]&#xA;# Unlike Flake8, default to a complexity level of 10.&#xA;max-complexity = 10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some configuration options can be provided via the command-line, such as those related to rule enablement and disablement, file discovery, logging level, and more:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;ruff check path/to/code/ --select F401 --select F403 --quiet&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;code&gt;ruff help&lt;/code&gt; for more on Ruff&#39;s top-level commands, or &lt;code&gt;ruff help check&lt;/code&gt; for more on the linting command.&lt;/p&gt; &#xA;&lt;h2&gt;Rules&lt;/h2&gt; &#xA;&lt;!-- Begin section: Rules --&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ruff supports over 500 lint rules&lt;/strong&gt;, many of which are inspired by popular tools like Flake8, isort, pyupgrade, and others. Regardless of the rule&#39;s origin, Ruff re-implements every rule in Rust as a first-party feature.&lt;/p&gt; &#xA;&lt;p&gt;By default, Ruff enables Flake8&#39;s &lt;code&gt;E&lt;/code&gt; and &lt;code&gt;F&lt;/code&gt; rules. Ruff supports all rules from the &lt;code&gt;F&lt;/code&gt; category, and a &lt;a href=&#34;https://beta.ruff.rs/docs/rules/#error-e&#34;&gt;subset&lt;/a&gt; of the &lt;code&gt;E&lt;/code&gt; category, omitting those stylistic rules made obsolete by the use of an autoformatter, like &lt;a href=&#34;https://github.com/psf/black&#34;&gt;Black&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re just getting started with Ruff, &lt;strong&gt;the default rule set is a great place to start&lt;/strong&gt;: it catches a wide variety of common errors (like unused imports) with zero configuration.&lt;/p&gt; &#xA;&lt;!-- End section: Rules --&gt; &#xA;&lt;p&gt;Beyond the defaults, Ruff re-implements some of the most popular Flake8 plugins and related code quality tools, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/autoflake/&#34;&gt;autoflake&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/eradicate/&#34;&gt;eradicate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-2020/&#34;&gt;flake8-2020&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-annotations/&#34;&gt;flake8-annotations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-async&#34;&gt;flake8-async&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-bandit/&#34;&gt;flake8-bandit&lt;/a&gt; (&lt;a href=&#34;https://github.com/astral-sh/ruff/issues/1646&#34;&gt;#1646&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-blind-except/&#34;&gt;flake8-blind-except&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-boolean-trap/&#34;&gt;flake8-boolean-trap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-bugbear/&#34;&gt;flake8-bugbear&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-builtins/&#34;&gt;flake8-builtins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-commas/&#34;&gt;flake8-commas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-comprehensions/&#34;&gt;flake8-comprehensions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-datetimez/&#34;&gt;flake8-datetimez&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-debugger/&#34;&gt;flake8-debugger&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-django/&#34;&gt;flake8-django&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-docstrings/&#34;&gt;flake8-docstrings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-eradicate/&#34;&gt;flake8-eradicate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-errmsg/&#34;&gt;flake8-errmsg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-executable/&#34;&gt;flake8-executable&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-future-annotations/&#34;&gt;flake8-future-annotations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-gettext/&#34;&gt;flake8-gettext&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-implicit-str-concat/&#34;&gt;flake8-implicit-str-concat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joaopalmeiro/flake8-import-conventions&#34;&gt;flake8-import-conventions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-logging-format/&#34;&gt;flake8-logging-format&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-no-pep420&#34;&gt;flake8-no-pep420&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-pie/&#34;&gt;flake8-pie&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-print/&#34;&gt;flake8-print&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-pyi/&#34;&gt;flake8-pyi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-pytest-style/&#34;&gt;flake8-pytest-style&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-quotes/&#34;&gt;flake8-quotes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-raise/&#34;&gt;flake8-raise&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-return/&#34;&gt;flake8-return&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-self/&#34;&gt;flake8-self&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-simplify/&#34;&gt;flake8-simplify&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-super/&#34;&gt;flake8-super&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-tidy-imports/&#34;&gt;flake8-tidy-imports&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-todos/&#34;&gt;flake8-todos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-type-checking/&#34;&gt;flake8-type-checking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flake8-use-pathlib/&#34;&gt;flake8-use-pathlib&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/flynt/&#34;&gt;flynt&lt;/a&gt; (&lt;a href=&#34;https://github.com/astral-sh/ruff/issues/2102&#34;&gt;#2102&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/isort/&#34;&gt;isort&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/mccabe/&#34;&gt;mccabe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/pandas-vet/&#34;&gt;pandas-vet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/pep8-naming/&#34;&gt;pep8-naming&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/pydocstyle/&#34;&gt;pydocstyle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pre-commit/pygrep-hooks&#34;&gt;pygrep-hooks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/pylint-airflow/&#34;&gt;pylint-airflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/pyupgrade/&#34;&gt;pyupgrade&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/tryceratops/&#34;&gt;tryceratops&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/yesqa/&#34;&gt;yesqa&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For a complete enumeration of the supported rules, see &lt;a href=&#34;https://beta.ruff.rs/docs/rules/&#34;&gt;&lt;em&gt;Rules&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome and highly appreciated. To get started, check out the &lt;a href=&#34;https://beta.ruff.rs/docs/contributing/&#34;&gt;&lt;strong&gt;contributing guidelines&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also join us on &lt;a href=&#34;https://discord.gg/c9MhzV8aU5&#34;&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Having trouble? Check out the existing issues on &lt;a href=&#34;https://github.com/astral-sh/ruff/issues&#34;&gt;&lt;strong&gt;GitHub&lt;/strong&gt;&lt;/a&gt;, or feel free to &lt;a href=&#34;https://github.com/astral-sh/ruff/issues/new&#34;&gt;&lt;strong&gt;open a new one&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also ask for help on &lt;a href=&#34;https://discord.gg/c9MhzV8aU5&#34;&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Ruff&#39;s linter draws on both the APIs and implementation details of many other tools in the Python ecosystem, especially &lt;a href=&#34;https://github.com/PyCQA/flake8&#34;&gt;Flake8&lt;/a&gt;, &lt;a href=&#34;https://github.com/PyCQA/pyflakes&#34;&gt;Pyflakes&lt;/a&gt;, &lt;a href=&#34;https://github.com/PyCQA/pycodestyle&#34;&gt;pycodestyle&lt;/a&gt;, &lt;a href=&#34;https://github.com/PyCQA/pydocstyle&#34;&gt;pydocstyle&lt;/a&gt;, &lt;a href=&#34;https://github.com/asottile/pyupgrade&#34;&gt;pyupgrade&lt;/a&gt;, and &lt;a href=&#34;https://github.com/PyCQA/isort&#34;&gt;isort&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In some cases, Ruff includes a &#34;direct&#34; Rust port of the corresponding tool. We&#39;re grateful to the maintainers of these tools for their work, and for all the value they&#39;ve provided to the Python community.&lt;/p&gt; &#xA;&lt;p&gt;Ruff&#39;s autoformatter is built on a fork of Rome&#39;s &lt;a href=&#34;https://github.com/rome/tools/tree/main/crates/rome_formatter&#34;&gt;&lt;code&gt;rome_formatter&lt;/code&gt;&lt;/a&gt;, and again draws on both the APIs and implementation details of &lt;a href=&#34;https://github.com/rome/tools&#34;&gt;Rome&lt;/a&gt;, &lt;a href=&#34;https://github.com/prettier/prettier&#34;&gt;Prettier&lt;/a&gt;, and &lt;a href=&#34;https://github.com/psf/black&#34;&gt;Black&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Ruff is also influenced by a number of tools outside the Python ecosystem, like &lt;a href=&#34;https://github.com/rust-lang/rust-clippy&#34;&gt;Clippy&lt;/a&gt; and &lt;a href=&#34;https://github.com/eslint/eslint&#34;&gt;ESLint&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Ruff is the beneficiary of a large number of &lt;a href=&#34;https://github.com/astral-sh/ruff/graphs/contributors&#34;&gt;contributors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Ruff is released under the MIT license.&lt;/p&gt; &#xA;&lt;h2&gt;Who&#39;s Using Ruff?&lt;/h2&gt; &#xA;&lt;p&gt;Ruff is used by a number of major open-source projects and companies, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Amazon (&lt;a href=&#34;https://github.com/aws/serverless-application-model&#34;&gt;AWS SAM&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache/airflow&#34;&gt;Apache Airflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;AstraZeneca (&lt;a href=&#34;https://github.com/AstraZeneca/magnus-core&#34;&gt;Magnus&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Benchling (&lt;a href=&#34;https://github.com/benchling/refac&#34;&gt;Refac&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/python-babel/babel&#34;&gt;Babel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bokeh/bokeh&#34;&gt;Bokeh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pyca/cryptography&#34;&gt;Cryptography (PyCA)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/iterative/dvc&#34;&gt;DVC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dagger/dagger&#34;&gt;Dagger&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dagster-io/dagster&#34;&gt;Dagster&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tiangolo/fastapi&#34;&gt;FastAPI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gradio-app/gradio&#34;&gt;Gradio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/great-expectations/great_expectations&#34;&gt;Great Expectations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hugging Face (&lt;a href=&#34;https://github.com/huggingface/transformers&#34;&gt;Transformers&lt;/a&gt;, &lt;a href=&#34;https://github.com/huggingface/datasets&#34;&gt;Datasets&lt;/a&gt;, &lt;a href=&#34;https://github.com/huggingface/diffusers&#34;&gt;Diffusers&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pypa/hatch&#34;&gt;Hatch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/home-assistant/core&#34;&gt;Home Assistant&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ibis-project/ibis&#34;&gt;Ibis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jupyter-server/jupyter_server&#34;&gt;Jupyter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hwchase17/langchain&#34;&gt;LangChain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jerryjliu/llama_index&#34;&gt;LlamaIndex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Matrix (&lt;a href=&#34;https://github.com/matrix-org/synapse&#34;&gt;Synapse&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Meltano (&lt;a href=&#34;https://github.com/meltano/meltano&#34;&gt;Meltano CLI&lt;/a&gt;, &lt;a href=&#34;https://github.com/meltano/sdk&#34;&gt;Singer SDK&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Modern Treasury (&lt;a href=&#34;https://github.com/Modern-Treasury/modern-treasury-python-sdk&#34;&gt;Python SDK&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Mozilla (&lt;a href=&#34;https://github.com/mozilla/gecko-dev&#34;&gt;Firefox&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/oxsecurity/megalinter&#34;&gt;MegaLinter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Microsoft (&lt;a href=&#34;https://github.com/microsoft/semantic-kernel&#34;&gt;Semantic Kernel&lt;/a&gt;, &lt;a href=&#34;https://github.com/microsoft/onnxruntime&#34;&gt;ONNX Runtime&lt;/a&gt;, &lt;a href=&#34;https://github.com/microsoft/LightGBM&#34;&gt;LightGBM&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Netflix (&lt;a href=&#34;https://github.com/Netflix/dispatch&#34;&gt;Dispatch&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/neondatabase/neon&#34;&gt;Neon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/onnx/onnx&#34;&gt;ONNX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OpenBB-finance/OpenBBTerminal&#34;&gt;OpenBB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pdm-project/pdm&#34;&gt;PDM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/Paddle&#34;&gt;PaddlePaddle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pandas-dev/pandas&#34;&gt;Pandas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/python-poetry/poetry&#34;&gt;Poetry&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pola-rs/polars&#34;&gt;Polars&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PostHog/posthog&#34;&gt;PostHog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Prefect (&lt;a href=&#34;https://github.com/PrefectHQ/prefect&#34;&gt;Python SDK&lt;/a&gt;, &lt;a href=&#34;https://github.com/PrefectHQ/marvin&#34;&gt;Marvin&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pyinstaller/pyinstaller&#34;&gt;PyInstaller&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pytorch/pytorch&#34;&gt;PyTorch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pydantic/pydantic&#34;&gt;Pydantic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PyCQA/pylint&#34;&gt;Pylint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pynecone-io/pynecone&#34;&gt;Pynecone&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sansyrox/robyn&#34;&gt;Robyn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Scale AI (&lt;a href=&#34;https://github.com/scaleapi/launch-python-client&#34;&gt;Launch SDK&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Snowflake (&lt;a href=&#34;https://github.com/Snowflake-Labs/snowcli&#34;&gt;SnowCLI&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/saleor/saleor&#34;&gt;Saleor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/scipy/scipy&#34;&gt;SciPy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sphinx-doc/sphinx&#34;&gt;Sphinx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/DLR-RM/stable-baselines3&#34;&gt;Stable Baselines3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://litestar.dev/&#34;&gt;Litestar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TheAlgorithms/Python&#34;&gt;The Algorithms&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/altair-viz/altair&#34;&gt;Vega-Altair&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WordPress (&lt;a href=&#34;https://github.com/WordPress/openverse&#34;&gt;Openverse&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zenml-io/zenml&#34;&gt;ZenML&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zulip/zulip&#34;&gt;Zulip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pypa/build&#34;&gt;build (PyPA)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pypa/cibuildwheel&#34;&gt;cibuildwheel (PyPA)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/delta-io/delta-rs&#34;&gt;delta-rs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alteryx/featuretools&#34;&gt;featuretools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mesonbuild/meson-python&#34;&gt;meson-python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wntrblm/nox&#34;&gt;nox&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Show Your Support&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re using Ruff, consider adding the Ruff badge to project&#39;s &lt;code&gt;README.md&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;[![Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;...or &lt;code&gt;README.rst&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rst&#34;&gt;.. image:: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v2.json&#xA;    :target: https://github.com/astral-sh/ruff&#xA;    :alt: Ruff&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;...or, as HTML:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;a href=&#34;https://github.com/astral-sh/ruff&#34;&amp;gt;&amp;lt;img src=&#34;https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v2.json&#34; alt=&#34;Ruff&#34; style=&#34;max-width:100%;&#34;&amp;gt;&amp;lt;/a&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a target=&#34;_blank&#34; href=&#34;https://astral.sh&#34; style=&#34;background:none&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/svg/Astral.svg?sanitize=true&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>matter-labs/foundry-zksync</title>
    <updated>2023-06-09T01:47:20Z</updated>
    <id>tag:github.com,2023-06-09:/matter-labs/foundry-zksync</id>
    <link href="https://github.com/matter-labs/foundry-zksync" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Foundry with zkSync Era v0.1&lt;/h1&gt; &#xA;&lt;p&gt;This repository provides &lt;a href=&#34;https://github.com/foundry-rs/foundry&#34;&gt;Foundry&lt;/a&gt; functionality in Solidity for compiling, deploying, and interacting with smart contracts on zkSync Era.&lt;/p&gt; &#xA;&lt;h3&gt;Supported features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compile smart contracts with the &lt;a href=&#34;https://github.com/matter-labs/zksolc-bin&#34;&gt;zksolc compiler&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Deploy smart contracts to zkSync Era mainnet, testnet, or local test node.&lt;/li&gt; &#xA; &lt;li&gt;Bridge assets L1 &amp;lt;-&amp;gt; L2.&lt;/li&gt; &#xA; &lt;li&gt;Call deployed contracts on zkSync Era testnet or local test node.&lt;/li&gt; &#xA; &lt;li&gt;Send transactions to deployed contracts on zkSync Era testnet or local test node.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/matter-labs/foundry-zksync#set-up&#34;&gt;Set up&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/matter-labs/foundry-zksync#interact-with-blockchain&#34;&gt;Interact with blockchain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/matter-labs/foundry-zksync#compile&#34;&gt;Compile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/matter-labs/foundry-zksync#deploy&#34;&gt;Deploy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/matter-labs/foundry-zksync#bridge-assets-l1--l2&#34;&gt;Bridge assets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/matter-labs/foundry-zksync#interact-with-contract&#34;&gt;Interact with contract&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/matter-labs/foundry-zksync#deploy-and-interact-with-simplefactorysol&#34;&gt;Deploy and interact with &lt;code&gt;SimpleFactory.sol&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/matter-labs/foundry-zksync#account-abstraction-multisig&#34;&gt;Account abstraction multisig example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/matter-labs/foundry-zksync#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Set up&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;Rust compiler&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Installation steps include cloning the zkSync Era application, &lt;a href=&#34;https://github.com/matter-labs/foundry-zksync&#34;&gt;&lt;strong&gt;foundry-zksync&lt;/strong&gt;&lt;/a&gt;, and the example project, &lt;a href=&#34;https://github.com/sammyshakes/sample-fzksync-project&#34;&gt;&lt;strong&gt;sample-fzksync-project&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a top-level directory and &lt;code&gt;cd&lt;/code&gt; into it.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir fzksync &amp;amp;&amp;amp; cd fzksync&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Clone the repos into the same directory.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/matter-labs/foundry-zksync.git &#xA;git clone https://github.com/sammyshakes/sample-fzksync-project.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;code&gt;cd&lt;/code&gt; into the &lt;code&gt;foundry-zksync&lt;/code&gt; and build the application.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd foundry-zksync&#xA;cargo build -p foundry-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;&lt;code&gt;cd&lt;/code&gt; into the project folder and update the git submodules.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd ../sample-fzksync-project&#xA;git submodule update --init --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Environment variables&lt;/h3&gt; &#xA;&lt;p&gt;Create a new file &lt;code&gt;.env&lt;/code&gt; at the &lt;code&gt;PROJECT-ROOT&lt;/code&gt; and copy/paste the following environment variables.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;# ETH_RPC_URL replaces --rpc-url on the command line &#xA;ETH_RPC_URL=http://localhost:3050&#xA;&#xA;## L1_RPC_URL and L2_RPC_URL are only used for `zk-deposit`&#xA;L1_RPC_URL=https://localhost:8545&#xA;# L2_RPC_URL can be used to replace --l2-url in command line for `zk-deposit`&#xA;L2_RPC_URL=https://localhost:3050&#xA;&#xA;# CHAIN replaces --chain in command line  &#xA;# Local: 270, Testnet: 280, Mainnet: 324&#xA;CHAIN=270&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Spin up local Docker node&lt;/h3&gt; &#xA;&lt;p&gt;Follow &lt;a href=&#34;https://raw.githubusercontent.com/matter-labs/foundry-zksync/main/(https://era.zksync.io/docs/api/hardhat/testing.html)&#34;&gt;these instructions&lt;/a&gt; to set up a local Docker node.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Interact with blockchain&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Enter all commands from the &lt;code&gt;sample-fzksync-project&lt;/code&gt; project root.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Use the &lt;code&gt;zkcast&lt;/code&gt; command&lt;/h3&gt; &#xA;&lt;h4&gt;Get chain id of local node&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;../foundry-zksync/target/debug/zkcast chain-id --rpc-url http://localhost:3050&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;270&lt;/p&gt; &#xA;&lt;h4&gt;Get chain id of testnet&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;../foundry-zksync/target/debug/zkcast chain-id --rpc-url https://zksync2-testnet.zksync.dev:443&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;280&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Get client&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;../foundry-zksync/target/debug/zkcast client --rpc-url https://zksync2-testnet.zksync.dev:443&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;zkSync/v2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Get account&#39;s L2 ETH balance&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;../foundry-zksync/target/debug/zkcast balance 0x42C7eF198f8aC9888E2B1b73e5B71f1D4535194A --rpc-url https://zksync2-testnet.zksync.dev:443&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;447551277794355871&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Get gas price&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;../foundry-zksync/target/debug/zkcast gas-price --rpc-url https://zksync2-testnet.zksync.dev:443&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example output&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;250000000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Get timestamp of latest block&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;../foundry-zksync/target/debug/zkcast age --block latest --rpc-url https://zksync2-testnet.zksync.dev:443&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example output&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Mon May  1 16:11:07 2023&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Get latest block&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;../foundry-zksync/target/debug/zkcast block latest --rpc-url https://zksync2-testnet.zksync.dev:443&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example output&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;baseFeePerGas        250000000&#xA;difficulty           0&#xA;extraData            0x&#xA;gasLimit             4294967295&#xA;gasUsed              40277767&#xA;hash                 0x6c5b7c9b82b48bd77c0f506d74ed32aec6ab5c52e6c9c604ee8825a0b4a68289&#xA;logsBloom            0xxA;miner                0x0000000000000000000000000000000000000000&#xA;mixHash              0x0000000000000000000000000000000000000000000000000000000000000000&#xA;nonce                0x0000000000000000&#xA;number               5024177&#xA;parentHash           0x9fbb3c9e5ef3b7807152367eeab5759cce14c290118de0e9011777a640cd7068&#xA;receiptsRoot         0x0000000000000000000000000000000000000000000000000000000000000000&#xA;sealFields           []&#xA;sha3Uncles           0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347&#xA;size                 0&#xA;stateRoot            0x0000000000000000000000000000000000000000000000000000000000000000&#xA;timestamp            1682957640&#xA;totalDifficulty      0&#xA;l1BatchNumber        null&#xA;l1BatchTimestamp     null&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Compile with &lt;code&gt;zkforge zk-build&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Aliases: &lt;code&gt;zkforge zkbuild&lt;/code&gt;, &lt;code&gt;zkforge zk-compile&lt;/code&gt;, &lt;code&gt;zkforge zkb&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Compile smart contracts to zkEVM bytecode and store the compiled output files in a logical directory structure &lt;code&gt;&amp;lt;PROJECT-ROOT&amp;gt;/zkout/&lt;/code&gt; for easy retrieval by other components of the application.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&#xA;Compiler subcommands for zkSync&#xA;&#xA;Usage: &#xA;zkforge zk-build [OPTIONS]&#xA;&#xA;Options:&#xA;      --use-zksolc   Specify zksolc compiler version (default if left blank)&#xA;      --is-system    Enable the system contract compilation mode.&#xA;      --force-evmla  Sets the EVM legacy assembly pipeline forcibly&#xA;      -h, --help         Print help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;--is-system&lt;/code&gt; flag: It is necessary to compile some contracts, including those that deploy other contracts (such as factory contracts), using the &lt;code&gt;--is-system&lt;/code&gt; flag. These contracts should be placed in the &lt;code&gt;src/is-system/&lt;/code&gt; folder. If the folder does not exist, manually create it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;    ![image](https://user-images.githubusercontent.com/76663878/236301037-2a536ab0-3d09-44f3-a74d-5f5891af335b.png)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example usage&lt;/h3&gt; &#xA;&lt;p&gt;To compile with default compiler options (v1.3.11).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;../foundry-zksync/target/debug/zkforge zk-build &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Compiler settings&lt;/h3&gt; &#xA;&lt;p&gt;Configure the &lt;code&gt;zksolc&lt;/code&gt; compiler version using the optional &lt;code&gt;--use&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;../foundry-zksync/target/debug/zkforge zkb --use 0.8.19&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example output&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;zksolc&lt;/code&gt; compiler artifacts can be found in the output folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;lt;PROJECT-ROOT&amp;gt;/zkout/&amp;lt;CONTRACT_FILENAME&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/76663878/234152279-e144e489-41ab-4cbd-8321-8ccd9b0aa6ef.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Example terminal output:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/76663878/236305625-8c7519e2-0c5e-492f-a4bc-3b019a95e34f.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;NOTE: Currently, until &lt;code&gt;forge remappings&lt;/code&gt; are implemented, import paths must be relative to the contract importing it:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/matter-labs/foundry-zksync/assets/76663878/490b34f4-e286-42a7-8570-d4b228ec10c7&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;SimpleFactory.sol&lt;/code&gt; and &lt;code&gt;AAFactory.sol&lt;/code&gt; are in the &lt;code&gt;src/is-system/&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Deploy with &lt;code&gt;zkforge zk-create&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Aliases: &lt;code&gt;zkforge zkcreate&lt;/code&gt;, &lt;code&gt;zkforge zk-deploy&lt;/code&gt;, &lt;code&gt;zkforge zkc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Deploy smart contracts to zksync.&#xA;&#xA;Usage: zkforge zk-create &amp;lt;CONTRACT&amp;gt; [OPTIONS] --rpc-url &amp;lt;RPC-URL&amp;gt; --chain &amp;lt;CHAIN-ID&amp;gt; --private-key &amp;lt;PRIVATE-KEY&amp;gt;&#xA;&#xA;Options:&#xA;  -h, --help&#xA;          Print help (see a summary with &#39;-h&#39;)&#xA;&#xA;ZkCreate options:&#xA;      --constructor-args &amp;lt;ARGS&amp;gt;...&#xA;          The constructor arguments.&#xA;&#xA;      --constructor-args-path &amp;lt;FILE&amp;gt;&#xA;          The path to a file containing the constructor arguments.&#xA;&#xA;  &amp;lt;CONTRACT&amp;gt;&#xA;          The contract identifier in the form `&amp;lt;path&amp;gt;:&amp;lt;contractname&amp;gt;`.&#xA;&#xA;ZkSync Features:&#xA;      --factory-deps &amp;lt;FACTORY-DEPS&amp;gt;...&#xA;          The factory dependencies in the form `&amp;lt;path&amp;gt;:&amp;lt;contractname&amp;gt;`.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;p&gt;To deploy &lt;code&gt;src/Greeter.sol&lt;/code&gt; to zkSync testnet:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;../foundry-zksync/target/debug/zkforge zkc src/Greeter.sol:Greeter --constructor-args &#34;ZkSync + Pineapple&#34; --private-key &amp;lt;&#34;PRIVATE_KEY&#34;&amp;gt; --rpc-url https://zksync2-testnet.zksync.dev:443 --chain 280&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;Deploying contract...&#xA;+-------------------------------------------------+&#xA;Contract successfully deployed to address: 0x07d485ff2df314b240ec392ed86b137a661ddd35&#xA;Transaction Hash: 0xdb6864fe1d19572a3ff509c5c7ed43f033d2dab8261a843808ed46e6e6ee51be&#xA;Gas used: 89879008&#xA;Effective gas price: 250000000&#xA;Block Number: 6651906&#xA;+-------------------------------------------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Bridge assets L1 ‚Üî L2 with &lt;code&gt;zkcast zk-send&lt;/code&gt; and &lt;code&gt;zkcast zk-deposit&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;L1 ‚Üí L2 deposits&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;zkcast zk-deposit &amp;lt;TO&amp;gt; &amp;lt;AMOUNT&amp;gt; &amp;lt;TOKEN&amp;gt; --l1-rpc-url &amp;lt;L1-RPC-URL&amp;gt; --l2-url &amp;lt;L2URL&amp;gt; --chain &amp;lt;CHAIN-ID&amp;gt; --private-key &amp;lt;PRIVATE-KEY&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: Leave &lt;code&gt;&amp;lt;TOKEN&amp;gt;&lt;/code&gt; blank to bridge ETH&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Usage: zkcast zk-deposit  &amp;lt;TO&amp;gt; &amp;lt;AMOUNT&amp;gt; --l1-rpc-url &amp;lt;ETH_RPC_URL&amp;gt; --l2-url &amp;lt;L2URL&amp;gt; [OPTIONS] [BRIDGE] [TIP]&#xA;&#xA;Arguments:&#xA;  &amp;lt;TO&amp;gt;&#xA;          The L2 address that receives the tokens.&#xA;&#xA;  &amp;lt;AMOUNT&amp;gt;&#xA;          Amount of token to deposit.&#xA;&#xA;  [BRIDGE]&#xA;          The address of a custom bridge to call.&#xA;&#xA;  [TIP]&#xA;          Optional fee that the user can choose to pay in addition to the regular transaction fee.&#xA;&#xA;Options:&#xA;  -z, --l2-url &amp;lt;L2URL&amp;gt;&#xA;          The zkSync RPC Layer 2 endpoint. Can be provided via the env var ZKSYNC_RPC_URL or --l2-url from the command line.&#xA;          &#xA;          NOTE: For Deposits, ETH_RPC_URL, or --rpc-url should be set to the Layer 1 RPC URL&#xA;          &#xA;          [env: ZKSYNC_RPC_URL=https://zksync2-testnet.zksync.dev]&#xA;&#xA;      --token &amp;lt;TOKEN&amp;gt;&#xA;          Token to bridge. Leave blank for ETH.&#xA;&#xA;  -h, --help&#xA;          Print help (see a summary with &#39;-h&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Example - error on this one&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;../foundry-zksync/target/debug/zkcast zkdeposit 0x36615Cf349d7F6344891B1e7CA7C72883F5dc049 1000000 --rpc-url http://localhost:8545 --l2-url http://localhost:3050 --private-key 7726827caac94a7f9e1b160f7ea819f172f7b6f9d2a97f992c38edeab82d4110 --chain 270&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;Bridging assets....&#xA;Transaction Hash: 0x55793df0a636aedd098309e3487c6d9ec0910422d5b9f0bdbdf764bc82dc1b9f&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;L2 ‚Üí L1 withdrawals&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;zkcast zk-send --withdraw &amp;lt;TO&amp;gt; --amount &amp;lt;AMOUNT&amp;gt; &amp;lt;TOKEN&amp;gt; --rpc-url &amp;lt;RPC-URL&amp;gt; --private-key &amp;lt;PRIVATE-KEY&amp;gt;&#xA;&#xA;&#xA;Arguments:&#xA;  [TO]                  The withdraw recipient.&#xA;&#xA;&#xA;Bridging options:&#xA;  -w, --withdraw        For L2 -&amp;gt; L1 withdrawals.&#xA;&#xA;      --token &amp;lt;TOKEN&amp;gt;   Token to bridge. Leave blank for ETH.&#xA;&#xA;  -a, --amount &amp;lt;AMOUNT&amp;gt; Amount of token to bridge. Required value when bridging&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;../foundry-zksync/target/debug/zkcast zk-send --withdraw 0x36615Cf349d7F6344891B1e7CA7C72883F5dc049 --amount 1000000 --rpc-url http://localhost:3050 --private-key 7726827caac94a7f9e1b160f7ea819f172f7b6f9d2a97f992c38edeab82d4110 --chain 270&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Bridging assets....&#xA;+-------------------------------------------------+&#xA;Transaction Hash: 0x3562f47db61de149fb7266c3a65935c4e8324cceb5a1db8718390a8a5a210191&#xA;Gas used: 10276475&#xA;Effective gas price: 250000000&#xA;Block Number: 6652714&#xA;+-------------------------------------------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Interact with contract with &lt;code&gt;zkcast zk-send&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Aliases: &lt;code&gt;zkcast zks&lt;/code&gt;, &lt;code&gt;zkcast zksend&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Interact with deployed contracts in the native foundry/zkforge fashion using the CLI &lt;code&gt;zkcast zk-send&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Sign and publish a zksync transaction.&#xA;&#xA;Usage: zkcast zk-send [OPTIONS] [TO] [SIG] [ARGS]...&#xA;&#xA;Arguments:&#xA;  [TO]        The destination of the transaction.&#xA;&#xA;  [SIG]       The signature of the function to call.&#xA;&#xA;  [ARGS]...   The arguments of the function to call.&#xA;&#xA;Options:&#xA;  -h, --help   Print help (see a summary with &#39;-h&#39;)&#xA;&#xA;Bridging options:&#xA;  -d, --deposit         For L1 -&amp;gt; L2 deposits.&#xA;&#xA;  -w, --withdraw        For L2 -&amp;gt; L1 withdrawals.&#xA;&#xA;      --token &amp;lt;TOKEN&amp;gt;   Token to bridge. Leave blank for ETH.&#xA;&#xA;  -a, --amount &amp;lt;AMOUNT&amp;gt; Amount of token to bridge. Required value when bridging&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Retrieve and interact with chain data. For example, block numbers and gas estimates.&lt;/li&gt; &#xA; &lt;li&gt;Interact with deployed contracts on (zkSync Era testnet or local Docker node).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Non-state changing calls&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;zkcast call &amp;lt;CONTRACT_ADDRESS&amp;gt; &amp;lt;FUNCTION_SIG&amp;gt; --rpc-url &amp;lt;RPC-URL&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;../foundry-zksync/target/debug/zkcast call 0x97b985951fd3e0c1d996421cc783d46c12d00082 &#34;greet()(string)&#34; --rpc-url http://localhost:3050&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;ZkSync + Pineapple&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Send transactions&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;zkcast zk-send &amp;lt;CONTRACT_ADDRESS&amp;gt; &amp;lt;FUNCTION_SIG&amp;gt; &amp;lt;FUNCTION_ARGS&amp;gt; --rpc-url &amp;lt;RPC-URL&amp;gt; --private-key &amp;lt;PRIVATE-KEY&amp;gt; --chain &amp;lt;CHAIN-ID&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;../foundry-zksync/target/debug/zkcast zk-send 0x97b985951fd3e0c1d996421cc783d46c12d00082 &#34;setGreeting(string)&#34; &#34;Killer combo!&#34;  --rpc-url http://localhost:3050 --private-key 7726827caac94a7f9e1b160f7ea819f172f7b6f9d2a97f992c38edeab82d4110 --chain 270&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;Sending transaction....&#xA;Transaction Hash: 0x7651fba8ddeb624cca93f89da493675ccbc5c6d36ee25ed620b07424ce338552&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Verify output&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;../foundry-zksync/target/debug/zkcast call 0x97b985951fd3e0c1d996421cc783d46c12d00082 &#34;greet()(string)&#34; --rpc-url http://localhost:3050&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;Killer combo!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Deploy and interact with &lt;code&gt;SimpleFactory.sol&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;Compile contract&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;SimpleFactory.sol&lt;/code&gt; must be compiled with the &lt;code&gt;is-system&lt;/code&gt; flag, so they need to be placed in the &lt;code&gt;src/is-system/&lt;/code&gt; folder&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;../foundry-zksync/target/debug/zkforge zk-build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Deploy &lt;code&gt;SimpleFactory.sol&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;../foundry-zksync/target/debug/zkforge zkc src/SimpleFactory.sol:SimpleFactory --constructor-args 01000041691510d85ddfc6047cba6643748dc028636d276f09a546ab330697ef 010000238a587670be26087b7812eab86eca61e7c4014522bdceda86adb2e82f --factory-deps src/Child.sol:Child src/StepChild.sol:StepChild --private-key 7726827caac94a7f9e1b160f7ea819f172f7b6f9d2a97f992c38edeab82d4110 --rpc-url http://localhost:3050 --chain 270&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;Deploying contract...&#xA;+-------------------------------------------------+&#xA;Contract successfully deployed to address: 0xa1b809005e589f81de6ef9f48d67e35606c05fc3&#xA;Transaction Hash: 0x34782985ba7c70b6bc4a8eb2b95787baec29356171fdbb18608037a2fcd7eda8&#xA;Gas used: 168141&#xA;Effective gas price: 250000000&#xA;Block Number: 249&#xA;+-------------------------------------------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Deploy &lt;code&gt;StepChild.sol&lt;/code&gt; via &lt;code&gt;SimpleFactory.sol&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;../foundry-zksync/target/debug/zkcast zk-send 0x23cee3fb585b1e5092b7cfb222e8e873b05e9519 &#34;newStepChild()&#34; --rpc-url http://localhost:3050 --private-key 7726827caac94a7f9e1b160f7ea819f172f7b6f9d2a97f992c38edeab82d4110 --chain 270&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Sending transaction....&#xA;Transaction Hash: 0xa82a0636b71af058d4916d81868eebc41173ca07b78d30fe57f4b74e9294ef25&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Interact with &lt;code&gt;SimpleFactory.sol&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;../foundry-zksync/target/debug/zkcast call 0x23cee3fb585b1e5092b7cfb222e8e873b05e9519 &#34;stepChildren(uint256)(address)&#34; 0 --rpc-url http://localhost:3050&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;StepChild.sol&lt;/code&gt; deployed address:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;0xbc88C5Cdfe2659ebDD5dbb7e1a695A4cb189Df96&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Interact with &lt;code&gt;StepChild.sol&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;code&gt;zkcast call&lt;/code&gt; to check initial state:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;../foundry-zksync/target/debug/zkcast call 0xbc88C5Cdfe2659ebDD5dbb7e1a695A4cb189Df96 &#34;isEnabled()(bool)&#34; --rpc-url http://localhost:3050&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use &lt;code&gt;zkcast zk-send&lt;/code&gt; to modify state:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;../foundry-zksync/target/debug/zkcast zk-send 0xbc88C5Cdfe2659ebDD5dbb7e1a695A4cb189Df96 &#34;enable()&#34; --rpc-url http://localhost:3050 --private-key 7726827caac94a7f9e1b160f7ea819f172f7b6f9d2a97f992c38edeab82d4110 --chain 270&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Sending transaction....&#xA;Transaction Hash: 0xe005e15e9f58b7dcdcc7b16a9d5c706ddef7a4c9cab82216ea944d5344ba01ae&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use &lt;code&gt;zkcast call&lt;/code&gt; to check modified state.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;../foundry-zksync/target/debug/zkcast call 0xbc88C5Cdfe2659ebDD5dbb7e1a695A4cb189Df96 &#34;isEnabled()(bool)&#34; --rpc-url http://localhost:3050&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Account abstraction multisig&lt;/h2&gt; &#xA;&lt;p&gt;This section compiles, deploys, and interacts with the contracts from the zkSync Era &lt;a href=&#34;https://era.zksync.io/docs/dev/tutorials/custom-aa-tutorial.html&#34;&gt;&lt;strong&gt;Account Abstraction Multisig example&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Contracts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://era.zksync.io/docs/dev/tutorials/custom-aa-tutorial.html&#34;&gt;&lt;strong&gt;AAFactory.sol&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sammyshakes/sample-fzksync-project/raw/main/src/TwoUserMultiSig.sol&#34;&gt;&lt;strong&gt;TwoUserMultiSig.sol&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Compile &lt;code&gt;AAFactory.sol&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;AAFactory.sol&lt;/code&gt; needs to be compiled with the &lt;code&gt;--is-system&lt;/code&gt; flag because it will be interacting with system contracts to deploy the multisig wallets.&lt;/p&gt; &#xA;&lt;p&gt;Place the contract in the &lt;code&gt;src/is-system/&lt;/code&gt; folder&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# command line using zkforge zk-build&#xA;../foundry-zksync/target/debug/zkforge zk-build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;AAFactory -&amp;gt; Bytecode Hash: &#34;010000791703a54dbe2502b00ee470989c267d0f6c0d12a9009a947715683744&#34; &#xA;Compiled Successfully&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Deploy &lt;code&gt;AAFactory.sol&lt;/code&gt;:&lt;/h3&gt; &#xA;&lt;p&gt;To deploy the factory we need the &lt;code&gt;Bytecode Hash&lt;/code&gt; of the &lt;code&gt;TwoUserMultiSig.sol&lt;/code&gt; contract to provide to the constructor of &lt;code&gt;AAFactory.sol&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;constructor(bytes32 _aaBytecodeHash) {&#xA;        aaBytecodeHash = _aaBytecodeHash;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: &lt;code&gt;aaBytecodeHash&lt;/code&gt; = Bytecode hash of &lt;code&gt;TwoUserMultiSig.sol&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To deploy a contract that deploys other contracts, it is necessary to provide the bytecodes of the child contracts in the &lt;code&gt;factory-deps&lt;/code&gt; field of the transaction. This can be accomplished by using the &lt;code&gt;--factory-deps&lt;/code&gt; flag and providing the full contract path in the format: &lt;code&gt;&amp;lt;path&amp;gt;:&amp;lt;contractname&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# command line using zkforge zk-create&#xA;../foundry-zksync/target/debug/zkforge zkc src/is-system/AAFactory.sol:AAFactory --constructor-args 010007572230f4df5b4e855ff48d4cdfffc9405522117d7e020ee42650223460 --factory-deps src/TwoUserMultiSig.sol:TwoUserMultisig --private-key 7726827caac94a7f9e1b160f7ea819f172f7b6f9d2a97f992c38edeab82d4110 --rpc-url http://localhost:3050 --chain 270&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Deploying contract...&#xA;+-------------------------------------------------+&#xA;Contract successfully deployed to address: 0xd5608cec132ed4875d19f8d815ec2ac58498b4e5&#xA;Transaction Hash: 0x0e6f55ff1619af8b3277853a8f2941d0481635880358316f03ae264e2de059ed&#xA;Gas used: 154379&#xA;Effective gas price: 250000000&#xA;Block Number: 291&#xA;+-------------------------------------------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now that we have the &lt;code&gt;AAFactory.sol&lt;/code&gt; contract address we can call &lt;code&gt;deployAccount&lt;/code&gt; function to deploy a new &lt;code&gt;TwoUserMultiSig.sol&lt;/code&gt; instance.&lt;/p&gt; &#xA;&lt;p&gt;Here is the interface of &lt;code&gt;deployAccount&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;function deployAccount(bytes32 salt, address owner1, address owner2) external returns (address accountAddress)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We need to provide the two owner addresses for the newly deployed multisig:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;owner1 = 0xa61464658AfeAf65CccaaFD3a512b69A83B77618&#xA;owner2 = 0x0D43eB5B8a47bA8900d84AA36656c92024e9772e&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We are also just using a &lt;code&gt;0x00&lt;/code&gt; value for the &lt;em&gt;&lt;strong&gt;salt&lt;/strong&gt;&lt;/em&gt; parameter. (You will need a unique value for salt for each instance that uses same owner wallets).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# command line using zkcast zk-send&#xA;../foundry-zksync/target/debug/zkcast zk-send 0xd5608cec132ed4875d19f8d815ec2ac58498b4e5 &#34;deployAccount(bytes32,address,address)(address)&#34; 0x00 0xa61464658AfeAf65CccaaFD3a512b69A83B77618 0x0D43eB5B8a47bA8900d84AA36656c92024e9772e --rpc-url http://localhost:3050 --private-key 7726827caac94a7f9e1b160f7ea819f172f7b6f9d2a97f992c38edeab82d4110 --chain 270&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Sending transaction....&#xA;Transaction Hash: 0x43a4dded84a12891dfae4124b42b9f091750e953193bd779a7e5e4d422909e73&#xA;0x03e50ec034f1d363de0add752c33d4831a2731bf, &amp;lt;---- Deployed contract address&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The new &lt;code&gt;TwoUserMultiSig.sol&lt;/code&gt; contract has been deployed to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;0x03e50ec034f1d363de0add752c33d4831a2731bf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check the tx receipt using &lt;code&gt;zkcast tx &amp;lt;TX-HASH&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;../foundry-zksync/target/debug/zkcast tx 0x22364a3e191ad10013c5f20036e9696e743a4f686bc58a0106ef0b9e7592347c --rpc-url http://localhost:3050&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;blockHash            0x2f3e2be46a7cb9f9e9df503903990e6670e88224e52232c988b5a730c82d98c0&#xA;blockNumber          297&#xA;from                 0x36615Cf349d7F6344891B1e7CA7C72883F5dc049&#xA;gas                  217367&#xA;gasPrice             250000000&#xA;hash                 0x43a4dded84a12891dfae4124b42b9f091750e953193bd779a7e5e4d422909e73&#xA;input                0x76fb8b650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a61464658afeaf65cccaafd3a512b69a83b776180000000000000000000000000d43eb5b8a47ba8900d84aa36656c92024e9772e&#xA;nonce                147&#xA;r                    0x16385d99ccaaa5e84bb97d76a0afb310350c2ca4165ed41d458efa80cd76d3bd&#xA;s                    0x3ec55287f223e760b7dd82a676feece939832e4c5a3d73f3aa979bd2cd48801c&#xA;to                   0xd5608cEC132ED4875D19f8d815EC2ac58498B4E5&#xA;transactionIndex     0&#xA;v                    1&#xA;value                0&#xA;l1BatchNumber        149&#xA;l1BatchTxIndex       0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Verify with &lt;code&gt;zkcast call&lt;/code&gt; to call the public variables &#39;owner1&#39; and &#39;owner2&#39; on the newly deployed &lt;code&gt;TwoUserMultiSig.sol&lt;/code&gt; contract.&lt;/p&gt; &#xA;&lt;p&gt;Verify &lt;code&gt;owner1&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# command line using zkcast call&#xA;../foundry-zksync/target/debug/zkcast call 0x03e50ec034f1d363de0add752c33d4831a2731bf &#34;owner1()(address)&#34; --rpc-url http://localhost:3050&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;0xa61464658AfeAf65CccaaFD3a512b69A83B77618&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Verify &lt;code&gt;owner2&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# command line using zkcast call&#xA;../foundry-zksync/target/debug/zkcast call 0x03e50ec034f1d363de0add752c33d4831a2731bf &#34;owner2()(address)&#34; --rpc-url http://localhost:3050&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Output&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;0x0D43eB5B8a47bA8900d84AA36656c92024e9772e&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;Verify arguments&lt;/h3&gt; &#xA;&lt;p&gt;Make sure that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You are using zksync specific methods (&lt;code&gt;zkcreate&lt;/code&gt; not &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;zksend&lt;/code&gt; not &lt;code&gt;send&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;You set the correct &lt;code&gt;--rpc-url&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You have the proper contract address - the bytecodes in zkSync Era are different to in EVM - so the resulting contracts will be deployed at different addresses.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&#39;Method not found&#39; when calling &#39;send&#39;&lt;/h3&gt; &#xA;&lt;p&gt;If you get errors like &lt;code&gt;(code: -32601, message: Method not found, data: None)&lt;/code&gt; - you are probably using a &lt;code&gt;send&lt;/code&gt; method instead of &lt;code&gt;zksend&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&#39;Could not get solc: Unknown version provided&#39;, &#39;checksum not found&#39;&lt;/h3&gt; &#xA;&lt;p&gt;These errors might show up on the Mac with ARM chip (M1, M2) due to the fact that most recent solc compilers are not auto-downloaded there.&lt;/p&gt; &#xA;&lt;p&gt;There are 2 workarounds:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use an older compiler by adding &lt;code&gt;--use 0.8.19&lt;/code&gt; flag to the &lt;code&gt;zk-build&lt;/code&gt; command.&lt;/li&gt; &#xA; &lt;li&gt;Download the compiler manually and then use the &lt;code&gt;--offline&lt;/code&gt; mode. (Download the compiler into ~/.svm/VERSION/solc-VERSION -- for example ~/.svm/0.8.20/solc-0.8.20).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can get the latest compiler version for MacOs AARCH here: &lt;a href=&#34;https://github.com/ethers-rs/solc-builds/tree/master/macosx/aarch64&#34;&gt;https://github.com/ethers-rs/solc-builds/tree/master/macosx/aarch64&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You might have to remove the &lt;code&gt;zkout&lt;/code&gt; directory (that holds the compilation artifacts) and in some rare scenarios also cleanup the installed solc versions (by removing &lt;code&gt;~/.svm/&lt;/code&gt; directory)&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;solc&lt;/code&gt; versions &amp;gt;0.8.19 are not supported, found 0.8.20&lt;/h3&gt; &#xA;&lt;p&gt;This means that our zksync compiler doesn&#39;t support that version of solidity yet.&lt;/p&gt; &#xA;&lt;p&gt;In such case, please remove the artifacts (by removing &lt;code&gt;zkout&lt;/code&gt; directory) and re-run with the older version of solidity (&lt;code&gt;--use 0.8.19&lt;/code&gt;) for example.&lt;/p&gt; &#xA;&lt;p&gt;You might also have to remove the &lt;code&gt;~/.svm/0.8.20/solc-0.8.20&lt;/code&gt; file.&lt;/p&gt;</summary>
  </entry>
</feed>