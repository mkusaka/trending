<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-02T01:44:26Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>keep-starknet-strange/madara</title>
    <updated>2023-04-02T01:44:26Z</updated>
    <id>tag:github.com,2023-04-02:/keep-starknet-strange/madara</id>
    <link href="https://github.com/keep-starknet-strange/madara" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Madara is a ⚡ blazing fast ⚡ Starknet sequencer, based on substrate and written in Rust 🦀.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Madara&lt;/h1&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/keep-starknet-strange/madara/main/docs/images/madara-no-bg.png&#34; height=&#34;256&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://github.com/keep-starknet-strange/madara/issues/new?assignees=&amp;amp;labels=bug&amp;amp;template=01_BUG_REPORT.md&amp;amp;title=bug%3A+&#34;&gt;Report a Bug&lt;/a&gt; - &#xA; &lt;a href=&#34;https://github.com/keep-starknet-strange/madara/issues/new?assignees=&amp;amp;labels=enhancement&amp;amp;template=02_FEATURE_REQUEST.md&amp;amp;title=feat%3A+&#34;&gt;Request a Feature&lt;/a&gt; - &#xA; &lt;a href=&#34;https://github.com/keep-starknet-strange/madara/discussions&#34;&gt;Ask a Question&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/keep-starknet-strange/madara/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/keep-starknet-strange/madara/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/keep-starknet-strange/madara/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/keep-starknet-strange/madara.svg?style=flat-square&#34; alt=&#34;Project license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/keep-starknet-strange/madara/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-ff69b4.svg?style=flat-square&#34; alt=&#34;Pull Requests welcome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;Madara is a ⚡ blazing fast ⚡ Starknet sequencer, based on substrate and written in Rust 🦀.&lt;/p&gt; &#xA;&lt;p&gt;This README file provides an overview of the Madara project, including its structure, components, and instructions for building, testing and running benchmarks.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;Here is a high level overview of the current architecture of Starknet sequencer.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/keep-starknet-strange/madara/main/docs/images/starknet-sequencer-architecture.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Project Structure&lt;/h2&gt; &#xA;&lt;p&gt;The Madara project consists of the following directories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;benchmarking&lt;/code&gt;: Contains the code for benchmarking the custom FRAME pallets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;crates&lt;/code&gt;: Holds all the crates used by the project, organized into the following subdirectories: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;node&lt;/code&gt;: Implements services for the blockchain node (e.g., chain specification, RPC, etc.).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;pallets&lt;/code&gt;: Contains custom FRAME pallets, including: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;pallet-starknet&lt;/code&gt;: The Starknet pallet.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;runtime&lt;/code&gt;: Assembles Madara&#39;s custom logic with the configured pallets.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;primitives&lt;/code&gt;: Stores primitives used by the pallets.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docs&lt;/code&gt;: Contains the project&#39;s documentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;examples&lt;/code&gt;: Provides example implementations for the project.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;infra&lt;/code&gt;: Houses infrastructure-related components, such as deployment scripts and Dockerfiles.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Benchmarking&lt;/h3&gt; &#xA;&lt;p&gt;Benchmarking allows you to assess the performance of the project&#39;s pallets. To run the benchmarks, follow the instructions in the &lt;a href=&#34;https://raw.githubusercontent.com/keep-starknet-strange/madara/main/benchmarking/README.md&#34;&gt;benchmarking&lt;/a&gt; document.&lt;/p&gt; &#xA;&lt;h3&gt;Pallets&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;code&gt;pallet-starknet&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;pallet-starknet&lt;/code&gt; is a pallet that provides a way to execute Starknet contracts in a Substrate environment.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Follow the steps below to get started with Madara &lt;span&gt;🛠&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Using Nix&lt;/h3&gt; &#xA;&lt;p&gt;Install &lt;a href=&#34;https://nixos.org/&#34;&gt;nix&lt;/a&gt; and optionally &lt;a href=&#34;https://github.com/direnv/direnv&#34;&gt;direnv&lt;/a&gt; and &lt;a href=&#34;https://github.com/nix-community/lorri&#34;&gt;lorri&lt;/a&gt; for a fully plug and play experience for setting up the development environment. To get all the correct dependencies activate direnv &lt;code&gt;direnv allow&lt;/code&gt; and lorri &lt;code&gt;lorri shell&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Rust Setup&lt;/h3&gt; &#xA;&lt;p&gt;First, complete the &lt;a href=&#34;https://raw.githubusercontent.com/keep-starknet-strange/madara/main/docs/rust-setup.md&#34;&gt;basic Rust setup instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Run&lt;/h3&gt; &#xA;&lt;p&gt;Use Rust&#39;s native &lt;code&gt;cargo&lt;/code&gt; command to build and launch the template node:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo run --release -- --dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Log level can be specified with &lt;code&gt;-l&lt;/code&gt; flag. For example, &lt;code&gt;-ldebug&lt;/code&gt; will show debug logs. It can also be specified via the &lt;code&gt;RUST_LOG&lt;/code&gt; environment variable. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;RUSTLOG=runtime=info cargo run --release -- --dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;cargo run&lt;/code&gt; command will perform an initial build. Use the following command to build the node without launching it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo build --release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Embedded Docs&lt;/h3&gt; &#xA;&lt;p&gt;Once the project has been built, the following command can be used to explore all parameters and subcommands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./target/release/madara -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Run&lt;/h2&gt; &#xA;&lt;p&gt;The provided &lt;code&gt;cargo run&lt;/code&gt; command will launch a temporary node and its state will be discarded after you terminate the process. After the project has been built, there are other ways to launch the node.&lt;/p&gt; &#xA;&lt;h3&gt;Single-Node Development Chain&lt;/h3&gt; &#xA;&lt;p&gt;This command will start the single-node development chain with non-persistent state:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./target/release/madara --dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Purge the development chain&#39;s state:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./target/release/madara purge-chain --dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start the development chain with detailed logging:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;RUST_BACKTRACE=1 ./target/release/madara -ldebug --dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Development chain means that the state of our chain will be in a tmp folder while the nodes are running. Also, &lt;strong&gt;alice&lt;/strong&gt; account will be authority and sudo account as declared in the &lt;a href=&#34;https://github.com/substrate-developer-hub/substrate-madara/raw/main/node/src/chain_spec.rs#L49&#34;&gt;genesis state&lt;/a&gt;. At the same time the following accounts will be pre-funded:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Alice&lt;/li&gt; &#xA;  &lt;li&gt;Bob&lt;/li&gt; &#xA;  &lt;li&gt;Alice//stash&lt;/li&gt; &#xA;  &lt;li&gt;Bob//stash&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;In case of being interested in maintaining the chain&#39; state between runs a base path must be added so the db can be stored in the provided folder instead of a temporal one. We could use this folder to store different chain databases, as a different folder will be created per different chain that is ran. The following commands shows how to use a newly created folder as our db base path.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;// Create a folder to use as the db base path&#xA;$ mkdir my-chain-state&#xA;&#xA;// Use of that folder to store the chain state&#xA;$ ./target/release/madara --dev --base-path ./my-chain-state/&#xA;&#xA;// Check the folder structure created inside the base path after running the chain&#xA;$ ls ./my-chain-state&#xA;chains&#xA;$ ls ./my-chain-state/chains/&#xA;dev&#xA;$ ls ./my-chain-state/chains/dev&#xA;db keystore network&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Connect with Polkadot-JS Apps Front-end&lt;/h3&gt; &#xA;&lt;p&gt;Once the node template is running locally, you can connect it with &lt;strong&gt;Polkadot-JS Apps&lt;/strong&gt; front-end to interact with your chain. &lt;a href=&#34;https://polkadot.js.org/apps/#/explorer?rpc=ws://localhost:9944&#34;&gt;Click here&lt;/a&gt; connecting the Apps to your local node template.&lt;/p&gt; &#xA;&lt;h3&gt;Multi-Node Local Testnet&lt;/h3&gt; &#xA;&lt;p&gt;Build custom chain spec:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Build plain chain spec&#xA;cargo run --release -- build-spec --chain local &amp;gt; infra/chain-specs/madara-local-testnet-plain.json&#xA;# Build final raw chain spec&#xA;cargo run --release -- build-spec --chain infra/chain-specs/madara-local-testnet-plain.json --raw &amp;gt; infra/chain-specs/madara-local-testnet.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See more details about &lt;a href=&#34;https://docs.substrate.io/reference/how-to-guides/basics/customize-a-chain-specification/&#34;&gt;custom chain specs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Run the local testnet:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./infra/local-testnet/run.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Set Ethereum Node URL for offchain worker&lt;/h3&gt; &#xA;&lt;p&gt;In order for the offchain worker to access an Ethereum RPC node, we need to set the URL for that in offchain local storage. We can do that by making use of the default &lt;a href=&#34;https://polkadot.js.org/docs/substrate/rpc/#offchain&#34;&gt;&lt;code&gt;offchain&lt;/code&gt; rpc calls&lt;/a&gt; provided by Substrate.&lt;/p&gt; &#xA;&lt;p&gt;In the polkadot explorer, navigate to Developer &amp;gt; RPC calls and choose the &lt;code&gt;offchain&lt;/code&gt; endpoint. In there, you can set the value for &lt;code&gt;ETHEREUM_EXECUTION_RPC&lt;/code&gt; by using the &lt;code&gt;localStorageSet&lt;/code&gt; function. You need to select the type of storage, in this case &lt;code&gt;PERSISTENT&lt;/code&gt;, and use the &lt;code&gt;starknet::ETHEREUM_EXECUTION_RPC&lt;/code&gt; as the &lt;code&gt;key&lt;/code&gt;. The value is the RPC URL you intend to use.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/keep-starknet-strange/madara/main/docs/images/madara-set-rpc-url-in-local-storage.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can check that the value was properly set by using the &lt;code&gt;localStorageGet&lt;/code&gt; function&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/keep-starknet-strange/madara/main/docs/images/madara-get-rpc-url-from-local-storage.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Project Structure&lt;/h2&gt; &#xA;&lt;p&gt;A Substrate project such as this consists of a number of components that are spread across a few directories.&lt;/p&gt; &#xA;&lt;h3&gt;Node&lt;/h3&gt; &#xA;&lt;p&gt;A blockchain node is an application that allows users to participate in a blockchain network. Substrate-based blockchain nodes expose a number of capabilities:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Networking: Substrate nodes use the &lt;a href=&#34;https://libp2p.io/&#34;&gt;&lt;code&gt;libp2p&lt;/code&gt;&lt;/a&gt; networking stack to allow the nodes in the network to communicate with one another.&lt;/li&gt; &#xA; &lt;li&gt;Consensus: Blockchains must have a way to come to &lt;a href=&#34;https://docs.substrate.io/main-docs/fundamentals/consensus/&#34;&gt;consensus&lt;/a&gt; on the state of the network. Substrate makes it possible to supply custom consensus engines and also ships with several consensus mechanisms that have been built on top of &lt;a href=&#34;https://research.web3.foundation/en/latest/polkadot/NPoS/index.html&#34;&gt;Web3 Foundation research&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;RPC Server: A remote procedure call (RPC) server is used to interact with Substrate nodes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are several files in the &lt;code&gt;node&lt;/code&gt; directory - take special note of the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keep-starknet-strange/madara/main/node/src/chain_spec.rs&#34;&gt;&lt;code&gt;chain_spec.rs&lt;/code&gt;&lt;/a&gt;: A &lt;a href=&#34;https://docs.substrate.io/main-docs/build/chain-spec/&#34;&gt;chain specification&lt;/a&gt; is a source code file that defines a Substrate chain&#39;s initial (genesis) state. Chain specifications are useful for development and testing, and critical when architecting the launch of a production chain. Take note of the &lt;code&gt;development_config&lt;/code&gt; and &lt;code&gt;testnet_genesis&lt;/code&gt; functions, which are used to define the genesis state for the local development chain configuration. These functions identify some &lt;a href=&#34;https://docs.substrate.io/reference/command-line-tools/subkey/&#34;&gt;well-known accounts&lt;/a&gt; and use them to configure the blockchain&#39;s initial state.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/keep-starknet-strange/madara/main/node/src/service.rs&#34;&gt;&lt;code&gt;service.rs&lt;/code&gt;&lt;/a&gt;: This file defines the node implementation. Take note of the libraries that this file imports and the names of the functions it invokes. In particular, there are references to consensus-related topics, such as the &lt;a href=&#34;https://docs.substrate.io/main-docs/fundamentals/consensus/#finalization-and-forks&#34;&gt;block finalization and forks&lt;/a&gt; and other &lt;a href=&#34;https://docs.substrate.io/main-docs/fundamentals/consensus/#default-consensus-models&#34;&gt;consensus mechanisms&lt;/a&gt; such as Aura for block authoring and GRANDPA for finality.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;After the node has been &lt;a href=&#34;https://raw.githubusercontent.com/keep-starknet-strange/madara/main/#build&#34;&gt;built&lt;/a&gt;, refer to the embedded documentation to learn more about the capabilities and configuration parameters that it exposes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./target/release/madara --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Runtime&lt;/h3&gt; &#xA;&lt;p&gt;In Substrate, the terms &#34;runtime&#34; and &#34;state transition function&#34; are analogous - they refer to the core logic of the blockchain that is responsible for validating blocks and executing the state changes they define. The Substrate project in this repository uses &lt;a href=&#34;https://docs.substrate.io/main-docs/fundamentals/runtime-intro/#frame&#34;&gt;FRAME&lt;/a&gt; to construct a blockchain runtime. FRAME allows runtime developers to declare domain-specific logic in modules called &#34;pallets&#34;. At the heart of FRAME is a helpful &lt;a href=&#34;https://docs.substrate.io/reference/frame-macros/&#34;&gt;macro language&lt;/a&gt; that makes it easy to create pallets and flexibly compose them to create blockchains that can address &lt;a href=&#34;https://substrate.io/ecosystem/projects/&#34;&gt;a variety of needs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Review the &lt;a href=&#34;https://raw.githubusercontent.com/keep-starknet-strange/madara/main/runtime/src/lib.rs&#34;&gt;FRAME runtime implementation&lt;/a&gt; included in this template and note the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This file configures several pallets to include in the runtime. Each pallet configuration is defined by a code block that begins with &lt;code&gt;impl $PALLET_NAME::Config for Runtime&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The pallets are composed into a single runtime by way of the &lt;a href=&#34;https://crates.parity.io/frame_support/macro.construct_runtime.html&#34;&gt;&lt;code&gt;construct_runtime!&lt;/code&gt;&lt;/a&gt; macro, which is part of the core FRAME Support &lt;a href=&#34;https://docs.substrate.io/reference/frame-pallets/#system-pallets&#34;&gt;system&lt;/a&gt; library.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Pallets&lt;/h3&gt; &#xA;&lt;p&gt;The runtime in this project is constructed using many FRAME pallets that ship with the &lt;a href=&#34;https://github.com/paritytech/substrate/tree/master/frame&#34;&gt;core Substrate repository&lt;/a&gt; and a template pallet that is &lt;a href=&#34;https://raw.githubusercontent.com/keep-starknet-strange/madara/main/pallets/template/src/lib.rs&#34;&gt;defined in the &lt;code&gt;pallets&lt;/code&gt;&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;A FRAME pallet is compromised of a number of blockchain primitives:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Storage: FRAME defines a rich set of powerful &lt;a href=&#34;https://docs.substrate.io/main-docs/build/runtime-storage/&#34;&gt;storage abstractions&lt;/a&gt; that makes it easy to use Substrate&#39;s efficient key-value database to manage the evolving state of a blockchain.&lt;/li&gt; &#xA; &lt;li&gt;Dispatchables: FRAME pallets define special types of functions that can be invoked (dispatched) from outside of the runtime in order to update its state.&lt;/li&gt; &#xA; &lt;li&gt;Events: Substrate uses &lt;a href=&#34;https://docs.substrate.io/main-docs/build/events-errors/&#34;&gt;events and errors&lt;/a&gt; to notify users of important changes in the runtime.&lt;/li&gt; &#xA; &lt;li&gt;Errors: When a dispatchable fails, it returns an error.&lt;/li&gt; &#xA; &lt;li&gt;Config: The &lt;code&gt;Config&lt;/code&gt; configuration interface is used to define the types and parameters upon which a FRAME pallet depends.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Run in Docker&lt;/h3&gt; &#xA;&lt;p&gt;First, install &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;Docker&lt;/a&gt; and &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Docker Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then run the following command to start a single node development chain.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose -f infra/docker/docker-compose.yml up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will firstly compile your code, and then start a local development network. You can also replace the default command (&lt;code&gt;cargo build --release &amp;amp;&amp;amp; ./target/release/madara --dev --ws-external&lt;/code&gt;) by appending your own. A few useful ones are as follow.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Run Substrate node without re-compiling&#xA;./infra/docker_run.sh ./target/release/madara --dev --ws-external&#xA;&#xA;# Purge the local dev chain&#xA;./infra/docker_run.sh ./target/release/madara purge-chain --dev&#xA;&#xA;# Check whether the code is compilable&#xA;./infra/docker_run.sh cargo check&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Progress&lt;/h2&gt; &#xA;&lt;h3&gt;Block&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;State&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Parent block hash&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Block number&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Global state root&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sequencer address&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Block timestamp&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Transaction count&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Transaction commitment&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Event count&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Event commitment&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Protocol version&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Extra data&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Transaction&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;State&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Declare&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Deploy&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Invoke&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;L1 Handler&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;RPC&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;State&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_getBlockWithTxHashes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_getBlockWithTxs&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_getStateUpdate&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_getStorageAt&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_getTransactionByHash&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_getTransactionByBlockIdAndIndex&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_getTransactionReceipt&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_getClass&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_getClassHashAt&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_getClassAt&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_getBlockTransactionCount&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_call&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_estimateFee&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_blockNumber&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_blockHashAndNumber&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_chainId&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_pendingTransactions&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_syncing&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_getEvents&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_getNonce&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_traceTransaction&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_simulateTransaction&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_traceBlockTransactions&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_addInvokeTransaction&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_addDeclareTransaction&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;starknet_addDeployAccountTransaction&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Decentralisation&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;State&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Single node&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Small pool of nodes (POA)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Large pool of nodes (Base consensus)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Large pool of nodes (Custom consensus)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Optimisation&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;State&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Commitments&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Transaction validity before mempool&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/keep-starknet-strange/madara/issues&#34;&gt;open issues&lt;/a&gt; for a list of proposed features (and known issues).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/keep-starknet-strange/madara/issues?q=label%3Aenhancement+is%3Aopen+sort%3Areactions-%2B1-desc&#34;&gt;Top Feature Requests&lt;/a&gt; (Add your votes using the 👍 reaction)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/keep-starknet-strange/madara/issues?q=is%3Aissue+is%3Aopen+label%3Abug+sort%3Areactions-%2B1-desc&#34;&gt;Top Bugs&lt;/a&gt; (Add your votes using the 👍 reaction)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/keep-starknet-strange/madara/issues?q=is%3Aopen+is%3Aissue+label%3Abug&#34;&gt;Newest Bugs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Reach out to the maintainer at one of the following places:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/keep-starknet-strange/madara/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Contact options listed on &lt;a href=&#34;https://github.com/keep-starknet-strange&#34;&gt;this GitHub profile&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Project assistance&lt;/h2&gt; &#xA;&lt;p&gt;If you want to say &lt;strong&gt;thank you&lt;/strong&gt; or/and support active development of Madara:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add a &lt;a href=&#34;https://github.com/keep-starknet-strange/madara&#34;&gt;GitHub Star&lt;/a&gt; to the project.&lt;/li&gt; &#xA; &lt;li&gt;Tweet about the Madara.&lt;/li&gt; &#xA; &lt;li&gt;Write interesting articles about the project on &lt;a href=&#34;https://dev.to/&#34;&gt;Dev.to&lt;/a&gt;, &lt;a href=&#34;https://medium.com/&#34;&gt;Medium&lt;/a&gt; or your personal blog.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Together, we can make Madara &lt;strong&gt;better&lt;/strong&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;First off, thanks for taking the time to contribute! Contributions are what make the open-source community such an amazing place to learn, inspire, and create. Any contributions you make will benefit everybody else and are &lt;strong&gt;greatly appreciated&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/keep-starknet-strange/madara/main/docs/CONTRIBUTING.md&#34;&gt;our contribution guidelines&lt;/a&gt;, and thank you for being involved!&lt;/p&gt; &#xA;&lt;h2&gt;Authors &amp;amp; contributors&lt;/h2&gt; &#xA;&lt;p&gt;For a full list of all authors and contributors, see &lt;a href=&#34;https://github.com/keep-starknet-strange/madara/contributors&#34;&gt;the contributors page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;Madara follows good practices of security, but 100% security cannot be assured. Madara is provided &lt;strong&gt;&#34;as is&#34;&lt;/strong&gt; without any &lt;strong&gt;warranty&lt;/strong&gt;. Use at your own risk.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;For more information and to report security issues, please refer to our &lt;a href=&#34;https://raw.githubusercontent.com/keep-starknet-strange/madara/main/docs/SECURITY.md&#34;&gt;security documentation&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;strong&gt;MIT license&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/keep-starknet-strange/madara/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;error: failed to run custom build command for &lt;code&gt;libp2p-core v0.37.0&lt;/code&gt; / Could not find &lt;code&gt;protoc&lt;/code&gt; installation&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click to expand&lt;/summary&gt; &#xA; &lt;h4&gt;Error&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;error: failed to run custom build command for `libp2p-core v0.37.0`&#xA;&#xA;Caused by:&#xA;  process didn&#39;t exit successfully: `...` (exit status: 101)&#xA;  --- stderr&#xA;  thread &#39;main&#39; panicked at &#39;Could not find `protoc` installation and this build crate cannot proceed without&#xA;      this knowledge. If `protoc` is installed and this crate had trouble finding&#xA;      it, you can set the `PROTOC` environment variable with the specific path to your&#xA;      installed `protoc` binary.You could try running `brew install protobuf` or downloading it from https://github.com/protocolbuffers/protobuf/releases&#xA;&#xA;  For more information: https://docs.rs/prost-build/#sourcing-protoc&#xA;  &#39;, /Users/abdel/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.11.4/src/lib.rs:1296:10&#xA;  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;Solution&lt;/h4&gt; &#xA; &lt;p&gt;It means that you don&#39;t have &lt;code&gt;protoc&lt;/code&gt; installed on your machine. You can install it using &lt;code&gt;brew install protobuf&lt;/code&gt; on MacOs or downloading it from &lt;a href=&#34;https://github.com/protocolbuffers/protobuf/releases&#34;&gt;https://github.com/protocolbuffers/protobuf/releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Rust WASM toolchain not installed, please install it&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click to expand&lt;/summary&gt; &#xA; &lt;h4&gt;Error&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;error: failed to run custom build command for `madara-runtime v4.0.0-dev (/Users/abdel/dev/me/madara/runtime)`&#xA;&#xA;Caused by:&#xA;  process didn&#39;t exit successfully: `.../madara/target/release/build/madara-runtime-9df5c70f9d1b72f5/build-script-build` (exit status: 1)&#xA;  --- stderr&#xA;  Rust WASM toolchain not installed, please install it!&#xA;&#xA;  Further error information:&#xA;  ------------------------------------------------------------&#xA;     Compiling wasm-test v1.0.0 (/var/folders/...)&#xA;  error[E0463]: can&#39;t find crate for `std`&#xA;    |&#xA;    = note: the `wasm32-unknown-unknown` target may not be installed&#xA;    = help: consider downloading the target with `rustup target add wasm32-unknown-unknown`&#xA;    = help: consider building the standard library from source with `cargo build -Zbuild-std`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;Solution&lt;/h4&gt; &#xA; &lt;p&gt;It means that you don&#39;t have &lt;code&gt;wasm32-unknown-unknown&lt;/code&gt; target installed on your machine. You can install it using &lt;code&gt;rustup target add wasm32-unknown-unknown&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;h2&gt;Contributors ✨&lt;/h2&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/abdelhamidbakhta&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/45264458?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Abdel @ StarkWare &#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Abdel @ StarkWare &lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/keep-starknet-strange/madara/commits?author=abdelhamidbakhta&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/tdelabro&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/34384633?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Timothée Delabrouille&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Timothée Delabrouille&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/keep-starknet-strange/madara/commits?author=tdelabro&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/EvolveArt&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/12902455?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;0xevolve&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;0xevolve&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/keep-starknet-strange/madara/commits?author=EvolveArt&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/LucasLvy&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/70894690?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Lucas @ StarkWare&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lucas @ StarkWare&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/keep-starknet-strange/madara/commits?author=LucasLvy&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/DavideSilva&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2940022?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Davide Silva&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Davide Silva&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/keep-starknet-strange/madara/commits?author=DavideSilva&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://www.finiam.com/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/58513848?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Finiam&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Finiam&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/keep-starknet-strange/madara/commits?author=finiam&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/ZePedroResende&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/17102689?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Resende&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Resende&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/keep-starknet-strange/madara/commits?author=ZePedroResende&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/drspacemn&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/16685321?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;drspacemn&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;drspacemn&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/keep-starknet-strange/madara/commits?author=drspacemn&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/tarrencev&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4740651?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Tarrence van As&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tarrence van As&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/keep-starknet-strange/madara/commits?author=tarrencev&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ngrok/ngrok-rs</title>
    <updated>2023-04-02T01:44:26Z</updated>
    <id>tag:github.com,2023-04-02:/ngrok/ngrok-rs</id>
    <link href="https://github.com/ngrok/ngrok-rs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Embed ngrok secure ingress into your Rust apps with a single line of code.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The ngrok Agent SDK&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://crates.io/crates/ngrok&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/ngrok.svg?sanitize=true&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.rs/ngrok&#34;&gt;&lt;img src=&#34;https://img.shields.io/docsrs/ngrok.svg?sanitize=true&#34; alt=&#34;docs.rs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ngrok/ngrok-rs/raw/main/LICENSE-MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;MIT licensed&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ngrok/ngrok-rs/raw/main/LICENSE-APACHE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache_2.0-blue.svg?sanitize=true&#34; alt=&#34;Apache-2.0 licensed&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ngrok/ngrok-rs/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/ngrok/ngrok-rs/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Continuous integration&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ngrok.com&#34;&gt;Website&lt;/a&gt; | &lt;a href=&#34;https://ngrok.github.io/ngrok-rs/ngrok&#34;&gt;API Docs (main)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ngrok is a simplified API-first ingress-as-a-service that adds connectivity, security, and observability to your apps.&lt;/p&gt; &#xA;&lt;p&gt;ngrok-rs, our native and idiomatic crate for adding a public internet address with secure ingress traffic directly into your Rust apps 🦀. If you’ve used ngrok in the past, you can think of ngrok-rs as the ngrok agent packaged as a Rust crate.&lt;/p&gt; &#xA;&lt;p&gt;ngrok-rs lets developers serve Rust services on the internet in a single statement without setting up low-level network primitives like IPs, NAT, certificates, load balancers, and even ports! Applications using ngrok-rs listen on ngrok’s global ingress network for TCP and HTTP traffic. ngrok-rs listeners are usable with &lt;a href=&#34;https://docs.rs/hyper/latest/hyper/server/index.html&#34;&gt;hyper Servers&lt;/a&gt;, and connections implement &lt;a href=&#34;https://docs.rs/tokio/latest/tokio/io/index.html&#34;&gt;tokio’s AsyncRead and AsyncWrite traits&lt;/a&gt;. This makes it easy to add ngrok-rs into any application that’s built on hyper, such as the popular &lt;a href=&#34;https://docs.rs/axum/latest/axum/&#34;&gt;axum&lt;/a&gt; HTTP framework.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ngrok/ngrok-rs/raw/main/ngrok/examples&#34;&gt;&lt;code&gt;/ngrok/examples/&lt;/code&gt;&lt;/a&gt; for example usage, or the tests in &lt;a href=&#34;https://github.com/ngrok/ngrok-rs/raw/main/ngrok/src/online_tests.rs&#34;&gt;&lt;code&gt;/ngrok/src/online_tests.rs&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For working with the &lt;a href=&#34;https://ngrok.com/docs/api/&#34;&gt;ngrok API&lt;/a&gt;, check out the &lt;a href=&#34;https://github.com/ngrok/ngrok-api-rs&#34;&gt;ngrok Rust API Client Library&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re looking for the agent wrapper, it&#39;s over &lt;a href=&#34;https://github.com/nkconnor/ngrok&#34;&gt;here&lt;/a&gt;. See &lt;a href=&#34;https://github.com/ngrok/ngrok-rs/raw/main/ngrok/UPGRADING.md&#34;&gt;UPGRADING.md&lt;/a&gt; for tips on migrating.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add &lt;code&gt;ngrok&lt;/code&gt; to the &lt;code&gt;[dependencies]&lt;/code&gt; section of your &lt;code&gt;Cargo.toml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;...&#xA;&#xA;[dependencies]&#xA;ngrok = &#34;0.11&#34;&#xA;&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, with &lt;code&gt;cargo add&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cargo add ngrok&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;Create a simple HTTP server using &lt;code&gt;ngrok&lt;/code&gt; and &lt;code&gt;axum&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Cargo.toml&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[package]&#xA;name = &#34;ngrok-axum-example&#34;&#xA;version = &#34;0.1.0&#34;&#xA;edition = &#34;2021&#34;&#xA;&#xA;[dependencies]&#xA;ngrok = { version=&#34;0.11&#34;, features=[&#34;axum&#34;] }&#xA;tokio = { version = &#34;1.26&#34;, features = [&#34;full&#34;] }&#xA;axum = &#34;0.6&#34;&#xA;anyhow = &#34;1.0&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;src/main.rs&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;use std::net::SocketAddr;&#xA;&#xA;use axum::{&#xA;    extract::ConnectInfo,&#xA;    routing::get,&#xA;    Router,&#xA;};&#xA;use ngrok::prelude::*;&#xA;&#xA;#[tokio::main]&#xA;async fn main() -&amp;gt; anyhow::Result&amp;lt;()&amp;gt; {&#xA;    // build our application with a single route&#xA;    let app = Router::new().route(&#xA;        &#34;/&#34;,&#xA;        get(&#xA;            |ConnectInfo(remote_addr): ConnectInfo&amp;lt;SocketAddr&amp;gt;| async move {&#xA;                format!(&#34;Hello, {remote_addr:?}!\r\n&#34;)&#xA;            },&#xA;        ),&#xA;    );&#xA;&#xA;    let tun = ngrok::Session::builder()&#xA;        // Read the token from the NGROK_AUTHTOKEN environment variable&#xA;        .authtoken_from_env()&#xA;        // Connect the ngrok session&#xA;        .connect()&#xA;        .await?&#xA;        // Start a tunnel with an HTTP edge&#xA;        .http_endpoint()&#xA;        .listen()&#xA;        .await?;&#xA;&#xA;    println!(&#34;Tunnel started on URL: {:?}&#34;, tun.url());&#xA;&#xA;    // Instead of binding a local port like so:&#xA;    // axum::Server::bind(&amp;amp;&#34;0.0.0.0:8000&#34;.parse().unwrap())&#xA;    // Run it with an ngrok tunnel instead!&#xA;    axum::Server::builder(tun)&#xA;        .serve(app.into_make_service_with_connect_info::&amp;lt;SocketAddr&amp;gt;())&#xA;        .await&#xA;        .unwrap();&#xA;&#xA;    Ok(())&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This project is licensed under either of&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apache License, Version 2.0, (&lt;a href=&#34;https://github.com/ngrok/ngrok-rs/raw/main/LICENSE-APACHE&#34;&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;MIT license (&lt;a href=&#34;https://github.com/ngrok/ngrok-rs/raw/main/LICENSE-MIT&#34;&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;at your option.&lt;/p&gt; &#xA;&lt;h3&gt;Contribution&lt;/h3&gt; &#xA;&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in ngrok by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.&lt;/p&gt;</summary>
  </entry>
</feed>