<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-25T01:43:42Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Uriopass/Egregoria</title>
    <updated>2023-07-25T01:43:42Z</updated>
    <id>tag:github.com,2023-07-25:/Uriopass/Egregoria</id>
    <link href="https://github.com/Uriopass/Egregoria" rel="alternate"></link>
    <summary type="html">&lt;p&gt;3D City Builder without a grid&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Uriopass/Egregoria/master/assets/screen2.jpg&#34; alt=&#34;Screenshot of Egregoria 1&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Uriopass/Egregoria/master/assets/screen3.jpg&#34; alt=&#34;Screenshot of Egregoria 2&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Uriopass/Egregoria/master/assets/screen5.jpg&#34; alt=&#34;Screenshot of Egregoria 3&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Uriopass/Egregoria/master/assets/screen1.jpg&#34; alt=&#34;Screenshot of Egregoria 3&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Uriopass/Egregoria/master/#&#34;&gt;&lt;img src=&#34;https://github.com/Uriopass/Egregoria/workflows/rust-build/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/CAaZhUJ&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/709730057949544488?label=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Egregoria&lt;/h1&gt; &#xA;&lt;p&gt;Egregoria is an indie city builder, mostly inspired by Cities:Skylines.&lt;br&gt; Each individual has its own thought model, meaning every action has its importance and influences the environment.&lt;br&gt; Egregoria is focused on the socio-economical aspect of a city, with a logistics element. The game is still in early development, but you can already play it and give some feedback through &lt;a href=&#34;https://github.com/Uriopass/Egregoria/issues&#34;&gt;issues&lt;/a&gt; or on &lt;a href=&#34;https://discord.gg/CAaZhUJ&#34;&gt;discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;By being open source, the hope is to get more people involved in the development of the game.&lt;br&gt; Mod support is wanted but the design has not been found yet.&lt;/p&gt; &#xA;&lt;h2&gt;How to play&lt;/h2&gt; &#xA;&lt;p&gt;A small tutorial is available on the &lt;a href=&#34;https://raw.githubusercontent.com/Uriopass/Egregoria/master/(https://github.com/Uriopass/Egregoria/wiki/Introduction-Guide)&#34;&gt;github wiki&lt;/a&gt; to get you started.&lt;/p&gt; &#xA;&lt;h2&gt;Devblog&lt;/h2&gt; &#xA;&lt;p&gt;I keep a blog about Egregoria&#39;s development &lt;a href=&#34;http://douady.paris/blog/index.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building the project&lt;/h2&gt; &#xA;&lt;h3&gt;Git LFS&lt;/h3&gt; &#xA;&lt;p&gt;This project uses Git LFS to track assets, therefore if you want to build your own copy you will need to install &lt;a href=&#34;https://git-lfs.github.com/&#34;&gt;Git LFS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Once installed, you should be able to clone the repo and fetch the assets:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Uriopass/Egregoria&#xA;cd Egregoria&#xA;git lfs pull&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows/Mac&lt;/h3&gt; &#xA;&lt;p&gt;I personally use Windows 10 and Mac OS 10.11, and it compiles fine once the &lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;rust toolchain is installed&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo run --release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Don&#39;t forget to add the &lt;code&gt;--release&lt;/code&gt; flag, otherwise the game will be very slow.&lt;br&gt; Don&#39;t forget to pull the lfs files, otherwise the game will crash with a file not found error.&lt;/p&gt; &#xA;&lt;h3&gt;Ubuntu/Debian on x11&lt;/h3&gt; &#xA;&lt;p&gt;There are a few libraries to install that some of my dependencies need:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install libasound2-dev libudev-dev pkg-config libx11-dev&#xA;cargo run --release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Don&#39;t forget to add the &lt;code&gt;--release&lt;/code&gt; flag, otherwise the game will be very slow.&lt;br&gt; Don&#39;t forget to pull the lfs files, otherwise the game will crash with a file not found error.&lt;/p&gt; &#xA;&lt;p&gt;A GitHub Action tests the builds on Ubuntu.&lt;/p&gt; &#xA;&lt;h2&gt;Why Egregoria ?&lt;/h2&gt; &#xA;&lt;p&gt;An Egregor is an autonomous psychic entity made up of, and influencing, the thoughts of a group of people.&lt;br&gt; It represents emergence at its purest form, where individuals come together to become a collective force.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dabreegster&#34;&gt;&lt;code&gt;@dabreegster&lt;/code&gt;&lt;/a&gt;: For inspiration on the map model&lt;/li&gt; &#xA; &lt;li&gt;PBR Shaders are adapted from &lt;a href=&#34;https://learnopengl.com/PBR/Theory&#34;&gt;LearnOpenGL&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>marktoda/uniswapx-artemis</title>
    <updated>2023-07-25T01:43:42Z</updated>
    <id>tag:github.com,2023-07-25:/marktoda/uniswapx-artemis</id>
    <link href="https://github.com/marktoda/uniswapx-artemis" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sample Artemis bot to fill UniswapX orders using on-chain liquidity&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;UniswapX Atomic Filler&lt;/h1&gt; &#xA;&lt;p&gt;This is a sample &lt;a href=&#34;https://github.com/paradigmxyz/artemis&#34;&gt;Artemis&lt;/a&gt; bot that fills UniswapX orders atomically using Uniswap v2 and v3 liquidity.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to fork and modify to run any strategies you wish to fill UniswapX orders!&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;First you must deploy an executor contract that implements the &lt;a href=&#34;https://github.com/Uniswap/UniswapX/raw/main/src/interfaces/IReactorCallback.sol&#34;&gt;IReactorCallback&lt;/a&gt; interface. This sample currently uses the provided &lt;a href=&#34;https://github.com/Uniswap/UniswapX/raw/main/src/sample-executors/SwapRouter02Executor.sol&#34;&gt;SwapRouter02Executor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then update the address constant in &lt;a href=&#34;https://raw.githubusercontent.com/marktoda/uniswapx-artemis/main/src/strategies/uniswapx_strategy.rs&#34;&gt;uniswapx_strategy&lt;/a&gt; to point to your executor contract.&lt;/p&gt; &#xA;&lt;p&gt;Finally, run the bot with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cargo run -- --wss &amp;lt;websocket RPC url&amp;gt; --private-key &amp;lt;private key&amp;gt; --bid-percentage &amp;lt;percent of profit to share as gas&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Collectors&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/marktoda/uniswapx-artemis/main/src/collectors/block_collector.rs&#34;&gt;block-collector&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Collects new blocks as they are confirmed. Similar to the base one in Artemis-core but includes timestamp data to resolve dutch decays&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/marktoda/uniswapx-artemis/main/src/collectors/uniswapx_order_collector.rs&#34;&gt;uniswapx-order-collector&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Collects new executable UniswapX orders as they are posted.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/marktoda/uniswapx-artemis/main/src/collectors/uniswapx_route_collector.rs&#34;&gt;uniswapx-route-collector&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Finds on-chain AMM routes to fill UniswapX orders. Ran in a separate collector thread as these can be slow and don&#39;t want to block other processing.&lt;/p&gt; &#xA;&lt;h1&gt;Strategies&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/marktoda/uniswapx-artemis/main/src/strategies/uniswapx_strategy.rs&#34;&gt;uniswapx-strategy&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Simple strategy that batches UniswapX orders together by tokenin/tokenout pair and attempts to fill using Uniswap protocol liquidity&lt;/p&gt; &#xA;&lt;h1&gt;Crates&lt;/h1&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/marktoda/uniswapx-artemis/main/crates/uniswapx-rs&#34;&gt;uniswapx-rs&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Library for encoding, decoding, and resolving UniswapX dutch orders&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/marktoda/uniswapx-artemis/main/crates/bindings-uniswapx&#34;&gt;bindings-uniswapx&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Autogenerated forge bindings for UniswapX contracts&lt;/p&gt;</summary>
  </entry>
</feed>