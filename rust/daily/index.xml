<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-01T01:38:30Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rust-cli/config-rs</title>
    <updated>2024-12-01T01:38:30Z</updated>
    <id>tag:github.com,2024-12-01:/rust-cli/config-rs</id>
    <link href="https://github.com/rust-cli/config-rs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⚙️ Layered configuration system for Rust applications (with strong support for 12-factor applications).&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;config-rs&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/rust-stable-brightgreen.svg?sanitize=true&#34; alt=&#34;Rust&#34;&gt; &lt;a href=&#34;https://travis-ci.org/mehcode/config-rs&#34;&gt;&lt;img src=&#34;https://travis-ci.org/mehcode/config-rs.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/config&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/d/config.svg?sanitize=true&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.rs/config&#34;&gt;&lt;img src=&#34;https://docs.rs/config/badge.svg?sanitize=true&#34; alt=&#34;Docs.rs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Layered configuration system for Rust applications (with strong support for &lt;a href=&#34;https://12factor.net/config&#34;&gt;12-factor&lt;/a&gt; applications).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set defaults&lt;/li&gt; &#xA; &lt;li&gt;Set explicit values (to programmatically override)&lt;/li&gt; &#xA; &lt;li&gt;Read from &lt;a href=&#34;https://github.com/serde-rs/json&#34;&gt;JSON&lt;/a&gt;, &lt;a href=&#34;https://github.com/toml-lang/toml&#34;&gt;TOML&lt;/a&gt;, &lt;a href=&#34;https://github.com/Ethiraric/yaml-rust2&#34;&gt;YAML&lt;/a&gt;, &lt;a href=&#34;https://github.com/zonyitoo/rust-ini&#34;&gt;INI&lt;/a&gt;, &lt;a href=&#34;https://github.com/ron-rs/ron&#34;&gt;RON&lt;/a&gt;, &lt;a href=&#34;https://github.com/callum-oakley/json5-rs&#34;&gt;JSON5&lt;/a&gt; files&lt;/li&gt; &#xA; &lt;li&gt;Read from environment&lt;/li&gt; &#xA; &lt;li&gt;Loosely typed — Configuration values may be read in any supported type, as long as there exists a reasonable conversion&lt;/li&gt; &#xA; &lt;li&gt;Access nested fields using a formatted path — Uses a subset of JSONPath; currently supports the child ( &lt;code&gt;redis.port&lt;/code&gt; ) and subscript operators ( &lt;code&gt;databases[0].name&lt;/code&gt; )&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please note this library&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;can not be used to write changed configuration values back to the configuration file(s)!&lt;/li&gt; &#xA; &lt;li&gt;Is case insensitive and all the keys are converted to lowercase internally&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[dependencies]&#xA;config = &#34;0.14.0&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Feature flags&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ini&lt;/code&gt; - Adds support for reading INI files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;json&lt;/code&gt; - Adds support for reading JSON files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;yaml&lt;/code&gt; - Adds support for reading YAML files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;toml&lt;/code&gt; - Adds support for reading TOML files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ron&lt;/code&gt; - Adds support for reading RON files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;json5&lt;/code&gt; - Adds support for reading JSON5 files&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Support for custom formats&lt;/h3&gt; &#xA;&lt;p&gt;Library provides out of the box support for most renowned data formats such as JSON or Yaml. Nonetheless, it contains an extensibility point - a &lt;code&gt;Format&lt;/code&gt; trait that, once implemented, allows seamless integration with library&#39;s APIs using custom, less popular or proprietary data formats.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/mehcode/config-rs/tree/master/examples/custom_file_format&#34;&gt;custom_file_format&lt;/a&gt; example for more information.&lt;/p&gt; &#xA;&lt;h3&gt;More&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://docs.rs/config&#34;&gt;documentation&lt;/a&gt; or &lt;a href=&#34;https://github.com/mehcode/config-rs/tree/master/examples&#34;&gt;examples&lt;/a&gt; for more usage information.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under either of&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apache License, Version 2.0, (&lt;a href=&#34;https://raw.githubusercontent.com/rust-cli/config-rs/main/LICENSE-APACHE&#34;&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;MIT license (&lt;a href=&#34;https://raw.githubusercontent.com/rust-cli/config-rs/main/LICENSE-MIT&#34;&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;at your option.&lt;/p&gt;</summary>
  </entry>
</feed>