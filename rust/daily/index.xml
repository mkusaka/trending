<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-04-01T01:38:10Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>medialab/xan</title>
    <updated>2025-04-01T01:38:10Z</updated>
    <id>tag:github.com,2025-04-01:/medialab/xan</id>
    <link href="https://github.com/medialab/xan" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The CSV magician&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/medialab/xan/actions&#34;&gt;&lt;img src=&#34;https://github.com/medialab/xan/workflows/Tests/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;code&gt;xan&lt;/code&gt;, the CSV magician&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;xan&lt;/code&gt; is a command line tool that can be used to process CSV files directly from the shell.&lt;/p&gt; &#xA;&lt;p&gt;It has been written in Rust to be as fast as possible, use as little memory as possible, and can easily handle very large CSV files (Gigabytes). It is also able to leverage parallelism (through multithreading) to make some tasks complete as fast as your computer can allow.&lt;/p&gt; &#xA;&lt;p&gt;It can easily preview, filter, slice, aggregate, sort, join CSV files, and exposes a large collection of composable commands that can be chained together to perform a wide variety of typical tasks.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;xan&lt;/code&gt; also leverages its own expression language so you can perform complex tasks that cannot be done by relying on the simplest commands. This minimalistic language has been tailored for CSV data and is &lt;em&gt;way&lt;/em&gt; faster than evaluating typical dynamically-typed languages such as Python, Lua, JavaScript etc.&lt;/p&gt; &#xA;&lt;p&gt;Note that this tool is originally a fork of &lt;a href=&#34;https://github.com/BurntSushi&#34;&gt;BurntSushi&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/BurntSushi/xsv&#34;&gt;&lt;code&gt;xsv&lt;/code&gt;&lt;/a&gt;, but has been nearly entirely rewritten at that point, to fit &lt;a href=&#34;https://github.com/medialab&#34;&gt;SciencesPo&#39;s m√©dialab&lt;/a&gt; use-cases, rooted in web data collection and analysis geared towards social sciences (you might think CSV is outdated by now, but read our &lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/LOVE_LETTER.md&#34;&gt;love letter&lt;/a&gt; to the format before judging too quickly).&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;xan&lt;/code&gt; therefore goes beyond typical data manipulation and expose utilities related to lexicometry, graph theory and even scraping.&lt;/p&gt; &#xA;&lt;p&gt;Finally, &lt;code&gt;xan&lt;/code&gt; can be used to display CSV files in the terminal, for easy exploration, and can even be used to draw basic data visualisations:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;em&gt;view command&lt;/em&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;em&gt;flatten command&lt;/em&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/img/grid/view.png&#34; alt=&#34;view&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/img/grid/flatten.png&#34; alt=&#34;flatten&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;&lt;em&gt;categorical histogram&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;&lt;em&gt;scatterplot&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/img/grid/categ-hist.png&#34; alt=&#34;categ-hist&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/img/grid/correlation.png&#34; alt=&#34;correlation&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;&lt;em&gt;categorical scatterplot&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;&lt;em&gt;histograms&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/img/grid/scatter.png&#34; alt=&#34;scatter&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/img/grid/hist.png&#34; alt=&#34;hist&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;&lt;em&gt;parallel processing&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;&lt;em&gt;time series&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/img/grid/parallel.png&#34; alt=&#34;parallel&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/img/grid/series.png&#34; alt=&#34;series&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;&lt;em&gt;small multiples (facet grid)&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;&lt;em&gt;grouped view&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/img/grid/small-multiples.png&#34; alt=&#34;small-multiples&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/img/grid/view-grid.png&#34; alt=&#34;view-grid&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;&lt;em&gt;correlation matrix heatmap&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;&lt;em&gt;heatmap&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/img/grid/corr-heatmap.png&#34; alt=&#34;small-multiples&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/img/grid/heatmap.png&#34; alt=&#34;view-grid&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Summary&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/#how-to-install&#34;&gt;How to install&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/#cargo&#34;&gt;Cargo&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/#scoop-windows&#34;&gt;Scoop (Windows)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/#homebrew-macos&#34;&gt;Homebrew (macOS)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/#arch-linux&#34;&gt;Arch Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/#nix&#34;&gt;Nix&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/#pre-built-binaries&#34;&gt;Pre-built binaries&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/#installing-completions&#34;&gt;Installing completions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/#quick-tour&#34;&gt;Quick tour&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/#available-commands&#34;&gt;Available commands&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/#general-flags-and-io-model&#34;&gt;General flags and IO model&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/#expression-language-reference&#34;&gt;Expression language reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/#cookbook&#34;&gt;Cookbook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/#news&#34;&gt;News&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/#frequently-asked-questions&#34;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to install&lt;/h2&gt; &#xA;&lt;h3&gt;Cargo&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;xan&lt;/code&gt; can be installed using cargo (it usually comes with &lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;Rust&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo install xan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also tweak the build flags to make sure the Rust compiler is able to leverage all your CPU&#39;s features:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CARGO_BUILD_RUSTFLAGS=&#39;-C target-cpu=native&#39; cargo install xan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also install the latest dev version thusly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo install --git https://github.com/medialab/xan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Scoop (Windows)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;xan&lt;/code&gt; can be installed using &lt;a href=&#34;https://scoop.sh/&#34;&gt;Scoop&lt;/a&gt; on Windows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;scoop bucket add extras&#xA;scoop install xan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Homebrew (macOS)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;xan&lt;/code&gt; can be installed with &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; on macOS thusly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install xan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Arch Linux&lt;/h3&gt; &#xA;&lt;p&gt;You can install &lt;code&gt;xan&lt;/code&gt; from the &lt;a href=&#34;https://archlinux.org/packages/extra/x86_64/xan/&#34;&gt;extra repository&lt;/a&gt; using &lt;code&gt;pacman&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo pacman -S xan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Nix&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;xan&lt;/code&gt; is packaged for Nix, and is available in Nixpkgs as of 25.05 release. To install it, you may add it to your &lt;code&gt;environment.systemPackages&lt;/code&gt; as &lt;code&gt;pkgs.xan&lt;/code&gt; or use &lt;code&gt;nix-shell&lt;/code&gt; to enter an ephemeral shell.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nix-shell -p xan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pre-built binaries&lt;/h3&gt; &#xA;&lt;p&gt;Pre-built binaries can be found attached to every GitHub &lt;a href=&#34;https://github.com/medialab/xan/releases/latest&#34;&gt;releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Currently supported targets include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;x86_64-unknown-linux-musl&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;x86_64-pc-windows-gnu&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Feel free to open a PR to improve the CI by adding relevant targets.&lt;/p&gt; &#xA;&lt;h3&gt;Installing completions&lt;/h3&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;xan&lt;/code&gt; also exposes handy automatic completions for command and header/column names that you can install through the &lt;code&gt;xan completions&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;Run the following command to understand how to install those completions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xan completions -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick tour&lt;/h2&gt; &#xA;&lt;p&gt;Let&#39;s learn about the most commonly used &lt;code&gt;xan&lt;/code&gt; commands by exploring a corpus of French medias:&lt;/p&gt; &#xA;&lt;h3&gt;Downloading the corpus&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -LO https://github.com/medialab/corpora/raw/master/polarisation/medias.csv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Displaying the file&#39;s headers&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xan headers medias.csv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;0   webentity_id&#xA;1   name&#xA;2   prefixes&#xA;3   home_page&#xA;4   start_pages&#xA;5   indegree&#xA;6   hyphe_creation_timestamp&#xA;7   hyphe_last_modification_timestamp&#xA;8   outreach&#xA;9   foundation_year&#xA;10  batch&#xA;11  edito&#xA;12  parody&#xA;13  origin&#xA;14  digital_native&#xA;15  mediacloud_ids&#xA;16  wheel_category&#xA;17  wheel_subcategory&#xA;18  has_paywall&#xA;19  inactive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Counting the number of rows&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xan count medias.csv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;478&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Previewing the file in the terminal&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xan view medias.csv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Displaying 5/20 cols from 10 first rows of medias.csv&#xA;‚îå‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ - ‚îÇ name          ‚îÇ prefixes      ‚îÇ home_page  ‚îÇ ‚Ä¶ ‚îÇ has_paywall ‚îÇ inactive ‚îÇ&#xA;‚îú‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§&#xA;‚îÇ 0 ‚îÇ Acrimed.org   ‚îÇ http://acrim‚Ä¶ ‚îÇ http://ww‚Ä¶ ‚îÇ ‚Ä¶ ‚îÇ false       ‚îÇ &amp;lt;empty&amp;gt;  ‚îÇ&#xA;‚îÇ 1 ‚îÇ 24matins.fr   ‚îÇ http://24mat‚Ä¶ ‚îÇ https://w‚Ä¶ ‚îÇ ‚Ä¶ ‚îÇ false       ‚îÇ &amp;lt;empty&amp;gt;  ‚îÇ&#xA;‚îÇ 2 ‚îÇ Actumag.info  ‚îÇ http://actum‚Ä¶ ‚îÇ https://a‚Ä¶ ‚îÇ ‚Ä¶ ‚îÇ false       ‚îÇ &amp;lt;empty&amp;gt;  ‚îÇ&#xA;‚îÇ 3 ‚îÇ 2012un-Nouve‚Ä¶ ‚îÇ http://2012u‚Ä¶ ‚îÇ http://ww‚Ä¶ ‚îÇ ‚Ä¶ ‚îÇ false       ‚îÇ &amp;lt;empty&amp;gt;  ‚îÇ&#xA;‚îÇ 4 ‚îÇ 24heuresactu‚Ä¶ ‚îÇ http://24heu‚Ä¶ ‚îÇ http://24‚Ä¶ ‚îÇ ‚Ä¶ ‚îÇ false       ‚îÇ &amp;lt;empty&amp;gt;  ‚îÇ&#xA;‚îÇ 5 ‚îÇ AgoraVox      ‚îÇ http://agora‚Ä¶ ‚îÇ http://ww‚Ä¶ ‚îÇ ‚Ä¶ ‚îÇ false       ‚îÇ &amp;lt;empty&amp;gt;  ‚îÇ&#xA;‚îÇ 6 ‚îÇ Al-Kanz.org   ‚îÇ http://al-ka‚Ä¶ ‚îÇ https://w‚Ä¶ ‚îÇ ‚Ä¶ ‚îÇ false       ‚îÇ &amp;lt;empty&amp;gt;  ‚îÇ&#xA;‚îÇ 7 ‚îÇ Alalumieredu‚Ä¶ ‚îÇ http://alalu‚Ä¶ ‚îÇ http://al‚Ä¶ ‚îÇ ‚Ä¶ ‚îÇ false       ‚îÇ &amp;lt;empty&amp;gt;  ‚îÇ&#xA;‚îÇ 8 ‚îÇ Allodocteurs‚Ä¶ ‚îÇ http://allod‚Ä¶ ‚îÇ https://w‚Ä¶ ‚îÇ ‚Ä¶ ‚îÇ false       ‚îÇ &amp;lt;empty&amp;gt;  ‚îÇ&#xA;‚îÇ 9 ‚îÇ Alterinfo.net ‚îÇ http://alter‚Ä¶ ‚îÇ http://ww‚Ä¶ ‚îÇ ‚Ä¶ ‚îÇ &amp;lt;empty&amp;gt;     ‚îÇ true     ‚îÇ&#xA;‚îÇ ‚Ä¶ ‚îÇ ‚Ä¶             ‚îÇ ‚Ä¶             ‚îÇ ‚Ä¶          ‚îÇ ‚Ä¶ ‚îÇ ‚Ä¶           ‚îÇ ‚Ä¶        ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On unix, don&#39;t hesitate to use the &lt;code&gt;-p&lt;/code&gt; flag to automagically forward the full output to an appropriate pager and skim through all the columns.&lt;/p&gt; &#xA;&lt;h3&gt;Reading a flattened representation of the first row&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# NOTE: drop -c to avoid truncating the values&#xA;xan flatten -c medias.csv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Row n¬∞0&#xA;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#xA;webentity_id                      1&#xA;name                              Acrimed.org&#xA;prefixes                          http://acrimed.org|http://acrimed69.blogspot‚Ä¶&#xA;home_page                         http://www.acrimed.org&#xA;start_pages                       http://acrimed.org|http://acrimed69.blogspot‚Ä¶&#xA;indegree                          61&#xA;hyphe_creation_timestamp          1560347020330&#xA;hyphe_last_modification_timestamp 1560526005389&#xA;outreach                          nationale&#xA;foundation_year                   2002&#xA;batch                             1&#xA;edito                             media&#xA;parody                            false&#xA;origin                            france&#xA;digital_native                    true&#xA;mediacloud_ids                    258269&#xA;wheel_category                    Opinion Journalism&#xA;wheel_subcategory                 Left Wing&#xA;has_paywall                       false&#xA;inactive                          &amp;lt;empty&amp;gt;&#xA;&#xA;Row n¬∞1&#xA;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&#xA;webentity_id                      2&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Searching for rows&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xan search -s outreach internationale medias.csv | xan view&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Displaying 4/20 cols from 10 first rows of &amp;lt;stdin&amp;gt;&#xA;‚îå‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ - ‚îÇ webentity_id ‚îÇ name               ‚îÇ ‚Ä¶ ‚îÇ has_paywall ‚îÇ inactive ‚îÇ&#xA;‚îú‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§&#xA;‚îÇ 0 ‚îÇ 25           ‚îÇ Businessinsider.fr ‚îÇ ‚Ä¶ ‚îÇ false       ‚îÇ &amp;lt;empty&amp;gt;  ‚îÇ&#xA;‚îÇ 1 ‚îÇ 59           ‚îÇ Europe-Israel.org  ‚îÇ ‚Ä¶ ‚îÇ false       ‚îÇ &amp;lt;empty&amp;gt;  ‚îÇ&#xA;‚îÇ 2 ‚îÇ 66           ‚îÇ France 24          ‚îÇ ‚Ä¶ ‚îÇ false       ‚îÇ &amp;lt;empty&amp;gt;  ‚îÇ&#xA;‚îÇ 3 ‚îÇ 220          ‚îÇ RFI                ‚îÇ ‚Ä¶ ‚îÇ false       ‚îÇ &amp;lt;empty&amp;gt;  ‚îÇ&#xA;‚îÇ 4 ‚îÇ 231          ‚îÇ fr.Sott.net        ‚îÇ ‚Ä¶ ‚îÇ false       ‚îÇ &amp;lt;empty&amp;gt;  ‚îÇ&#xA;‚îÇ 5 ‚îÇ 246          ‚îÇ Voltairenet.org    ‚îÇ ‚Ä¶ ‚îÇ true        ‚îÇ &amp;lt;empty&amp;gt;  ‚îÇ&#xA;‚îÇ 6 ‚îÇ 254          ‚îÇ Afp.com /fr        ‚îÇ ‚Ä¶ ‚îÇ false       ‚îÇ &amp;lt;empty&amp;gt;  ‚îÇ&#xA;‚îÇ 7 ‚îÇ 265          ‚îÇ Euronews FR        ‚îÇ ‚Ä¶ ‚îÇ false       ‚îÇ &amp;lt;empty&amp;gt;  ‚îÇ&#xA;‚îÇ 8 ‚îÇ 333          ‚îÇ Arte.tv            ‚îÇ ‚Ä¶ ‚îÇ false       ‚îÇ &amp;lt;empty&amp;gt;  ‚îÇ&#xA;‚îÇ 9 ‚îÇ 341          ‚îÇ I24News.tv         ‚îÇ ‚Ä¶ ‚îÇ false       ‚îÇ &amp;lt;empty&amp;gt;  ‚îÇ&#xA;‚îÇ ‚Ä¶ ‚îÇ ‚Ä¶            ‚îÇ ‚Ä¶                  ‚îÇ ‚Ä¶ ‚îÇ ‚Ä¶           ‚îÇ ‚Ä¶        ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Selecting some columns&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xan select foundation_year,name medias.csv | xan view&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Displaying 2 cols from 10 first rows of &amp;lt;stdin&amp;gt;&#xA;‚îå‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ - ‚îÇ foundation_year ‚îÇ name                                  ‚îÇ&#xA;‚îú‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§&#xA;‚îÇ 0 ‚îÇ 2002            ‚îÇ Acrimed.org                           ‚îÇ&#xA;‚îÇ 1 ‚îÇ 2006            ‚îÇ 24matins.fr                           ‚îÇ&#xA;‚îÇ 2 ‚îÇ 2013            ‚îÇ Actumag.info                          ‚îÇ&#xA;‚îÇ 3 ‚îÇ 2012            ‚îÇ 2012un-Nouveau-Paradigme.com          ‚îÇ&#xA;‚îÇ 4 ‚îÇ 2010            ‚îÇ 24heuresactu.com                      ‚îÇ&#xA;‚îÇ 5 ‚îÇ 2005            ‚îÇ AgoraVox                              ‚îÇ&#xA;‚îÇ 6 ‚îÇ 2008            ‚îÇ Al-Kanz.org                           ‚îÇ&#xA;‚îÇ 7 ‚îÇ 2012            ‚îÇ Alalumieredunouveaumonde.blogspot.com ‚îÇ&#xA;‚îÇ 8 ‚îÇ 2005            ‚îÇ Allodocteurs.fr                       ‚îÇ&#xA;‚îÇ 9 ‚îÇ 2005            ‚îÇ Alterinfo.net                         ‚îÇ&#xA;‚îÇ ‚Ä¶ ‚îÇ ‚Ä¶               ‚îÇ ‚Ä¶                                     ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sorting the file&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xan sort -s foundation_year medias.csv | xan view -s name,foundation_year&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Displaying 2 cols from 10 first rows of &amp;lt;stdin&amp;gt;&#xA;‚îå‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ - ‚îÇ name                               ‚îÇ foundation_year ‚îÇ&#xA;‚îú‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§&#xA;‚îÇ 0 ‚îÇ Le Monde Num√©rique (Ouest France)  ‚îÇ &amp;lt;empty&amp;gt;         ‚îÇ&#xA;‚îÇ 1 ‚îÇ Le Figaro                          ‚îÇ 1826            ‚îÇ&#xA;‚îÇ 2 ‚îÇ Le journal de Sa√¥ne-et-Loire       ‚îÇ 1826            ‚îÇ&#xA;‚îÇ 3 ‚îÇ L&#39;Ind√©pendant                      ‚îÇ 1846            ‚îÇ&#xA;‚îÇ 4 ‚îÇ Le Progr√®s                         ‚îÇ 1859            ‚îÇ&#xA;‚îÇ 5 ‚îÇ La D√©p√™che du Midi                 ‚îÇ 1870            ‚îÇ&#xA;‚îÇ 6 ‚îÇ Le P√©lerin                         ‚îÇ 1873            ‚îÇ&#xA;‚îÇ 7 ‚îÇ Derni√®res Nouvelles d&#39;Alsace (DNA) ‚îÇ 1877            ‚îÇ&#xA;‚îÇ 8 ‚îÇ La Croix                           ‚îÇ 1883            ‚îÇ&#xA;‚îÇ 9 ‚îÇ Le Chasseur Francais               ‚îÇ 1885            ‚îÇ&#xA;‚îÇ ‚Ä¶ ‚îÇ ‚Ä¶                                  ‚îÇ ‚Ä¶               ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Deduplicating the file on some column&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Some medias of our corpus have the same ids on mediacloud.org&#xA;xan dedup -s mediacloud_ids medias.csv | xan count &amp;amp;&amp;amp; xan count medias.csv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;457&#xA;478&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Deduplicating can also be done while sorting:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xan sort -s mediacloud_ids -u medias.csv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Computing frequency tables&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xan frequency -s edito medias.csv | xan view&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Displaying 3 cols from 5 rows of &amp;lt;stdin&amp;gt;&#xA;‚îå‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ - ‚îÇ field ‚îÇ value      ‚îÇ count ‚îÇ&#xA;‚îú‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§&#xA;‚îÇ 0 ‚îÇ edito ‚îÇ media      ‚îÇ 423   ‚îÇ&#xA;‚îÇ 1 ‚îÇ edito ‚îÇ individu   ‚îÇ 30    ‚îÇ&#xA;‚îÇ 2 ‚îÇ edito ‚îÇ plateforme ‚îÇ 14    ‚îÇ&#xA;‚îÇ 3 ‚îÇ edito ‚îÇ agr√©gateur ‚îÇ 10    ‚îÇ&#xA;‚îÇ 4 ‚îÇ edito ‚îÇ agence     ‚îÇ 1     ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Printing a histogram&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xan frequency -s edito medias.csv | xan hist&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Histogram for edito (bars: 5, sum: 478, max: 423):&#xA;&#xA;media      |423  88.49%|‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ|&#xA;individu   | 30   6.28%|‚îÅ‚îÅ‚îÅ‚ï∏                                                  |&#xA;plateforme | 14   2.93%|‚îÅ‚ï∏                                                    |&#xA;agr√©gateur | 10   2.09%|‚îÅ‚ï∏                                                    |&#xA;agence     |  1   0.21%|‚ï∏                                                     |&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Computing descriptive statistics&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xan stats -s indegree,edito medias.csv | xan transpose | xan view -I&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Displaying 2 cols from 14 rows of &amp;lt;stdin&amp;gt;&#xA;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ field       ‚îÇ indegree          ‚îÇ edito      ‚îÇ&#xA;‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§&#xA;‚îÇ count       ‚îÇ 463               ‚îÇ 478        ‚îÇ&#xA;‚îÇ count_empty ‚îÇ 15                ‚îÇ 0          ‚îÇ&#xA;‚îÇ type        ‚îÇ int               ‚îÇ string     ‚îÇ&#xA;‚îÇ types       ‚îÇ int|empty         ‚îÇ string     ‚îÇ&#xA;‚îÇ sum         ‚îÇ 25987             ‚îÇ &amp;lt;empty&amp;gt;    ‚îÇ&#xA;‚îÇ mean        ‚îÇ 56.12742980561554 ‚îÇ &amp;lt;empty&amp;gt;    ‚îÇ&#xA;‚îÇ variance    ‚îÇ 4234.530197929737 ‚îÇ &amp;lt;empty&amp;gt;    ‚îÇ&#xA;‚îÇ stddev      ‚îÇ 65.07326792108829 ‚îÇ &amp;lt;empty&amp;gt;    ‚îÇ&#xA;‚îÇ min         ‚îÇ 0                 ‚îÇ &amp;lt;empty&amp;gt;    ‚îÇ&#xA;‚îÇ max         ‚îÇ 424               ‚îÇ &amp;lt;empty&amp;gt;    ‚îÇ&#xA;‚îÇ lex_first   ‚îÇ 0                 ‚îÇ agence     ‚îÇ&#xA;‚îÇ lex_last    ‚îÇ 99                ‚îÇ plateforme ‚îÇ&#xA;‚îÇ min_length  ‚îÇ 0                 ‚îÇ 5          ‚îÇ&#xA;‚îÇ max_length  ‚îÇ 3                 ‚îÇ 11         ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Evaluating an expression to filter a file&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xan filter &#39;batch &amp;gt; 1&#39; medias.csv | xan count&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;130&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To access the expression language&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/moonblade/cheatsheet.md&#34;&gt;cheatsheet&lt;/a&gt;, run &lt;code&gt;xan help cheatsheet&lt;/code&gt;. To display the full list of available &lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/moonblade/functions.md&#34;&gt;functions&lt;/a&gt;, run &lt;code&gt;xan help functions&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Evaluating an expression to create a new column based on other ones&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xan map &#39;fmt(&#34;{} ({})&#34;, name, foundation_year)&#39; key medias.csv | xan select key | xan slice -l 10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;key&#xA;Acrimed.org (2002)&#xA;24matins.fr (2006)&#xA;Actumag.info (2013)&#xA;2012un-Nouveau-Paradigme.com (2012)&#xA;24heuresactu.com (2010)&#xA;AgoraVox (2005)&#xA;Al-Kanz.org (2008)&#xA;Alalumieredunouveaumonde.blogspot.com (2012)&#xA;Allodocteurs.fr (2005)&#xA;Alterinfo.net (2005)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To access the expression language&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/moonblade/cheatsheet.md&#34;&gt;cheatsheet&lt;/a&gt;, run &lt;code&gt;xan help cheatsheet&lt;/code&gt;. To display the full list of available &lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/moonblade/functions.md&#34;&gt;functions&lt;/a&gt;, run &lt;code&gt;xan help functions&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Transform a column by evaluating an expression&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xan transform name &#39;split(name, &#34;.&#34;) | first | upper&#39; medias.csv | xan select name | xan slice -l 10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;name&#xA;ACRIMED&#xA;24MATINS&#xA;ACTUMAG&#xA;2012UN-NOUVEAU-PARADIGME&#xA;24HEURESACTU&#xA;AGORAVOX&#xA;AL-KANZ&#xA;ALALUMIEREDUNOUVEAUMONDE&#xA;ALLODOCTEURS&#xA;ALTERINFO&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To access the expression language&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/moonblade/cheatsheet.md&#34;&gt;cheatsheet&lt;/a&gt;, run &lt;code&gt;xan help cheatsheet&lt;/code&gt;. To display the full list of available &lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/moonblade/functions.md&#34;&gt;functions&lt;/a&gt;, run &lt;code&gt;xan help functions&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Performing custom aggregation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xan agg &#39;sum(indegree) as total_indegree, mean(indegree) as mean_indegree&#39; medias.csv | xan view -I&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Displaying 1 col from 1 rows of &amp;lt;stdin&amp;gt;&#xA;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ total_indegree ‚îÇ mean_indegree     ‚îÇ&#xA;‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§&#xA;‚îÇ 25987          ‚îÇ 56.12742980561554 ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To access the expression language&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/moonblade/cheatsheet.md&#34;&gt;cheatsheet&lt;/a&gt;, run &lt;code&gt;xan help cheatsheet&lt;/code&gt;. To display the full list of available &lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/moonblade/functions.md&#34;&gt;functions&lt;/a&gt;, run &lt;code&gt;xan help functions&lt;/code&gt;. Finally, to display the list of available &lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/moonblade/aggs.md&#34;&gt;aggregation functions&lt;/a&gt;, run &lt;code&gt;xan help aggs&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Grouping rows and performing per-group aggregation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;xan groupby edito &#39;sum(indegree) as indegree&#39; medias.csv | xan view -I&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Displaying 1 col from 5 rows of &amp;lt;stdin&amp;gt;&#xA;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ edito      ‚îÇ indegree ‚îÇ&#xA;‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§&#xA;‚îÇ agence     ‚îÇ 50       ‚îÇ&#xA;‚îÇ agr√©gateur ‚îÇ 459      ‚îÇ&#xA;‚îÇ plateforme ‚îÇ 658      ‚îÇ&#xA;‚îÇ media      ‚îÇ 24161    ‚îÇ&#xA;‚îÇ individu   ‚îÇ 659      ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To access the expression language&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/moonblade/cheatsheet.md&#34;&gt;cheatsheet&lt;/a&gt;, run &lt;code&gt;xan help cheatsheet&lt;/code&gt;. To display the full list of available &lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/moonblade/functions.md&#34;&gt;functions&lt;/a&gt;, run &lt;code&gt;xan help functions&lt;/code&gt;. Finally, to display the list of available &lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/moonblade/aggs.md&#34;&gt;aggregation functions&lt;/a&gt;, run &lt;code&gt;xan help aggs&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Available commands&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/help.md&#34;&gt;&lt;strong&gt;help&lt;/strong&gt;&lt;/a&gt;: Get help regarding the expression language&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Explore &amp;amp; visualize&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/count.md&#34;&gt;&lt;strong&gt;count (c)&lt;/strong&gt;&lt;/a&gt;: Count rows in file&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/headers.md&#34;&gt;&lt;strong&gt;headers (h)&lt;/strong&gt;&lt;/a&gt;: Show header names&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/view.md&#34;&gt;&lt;strong&gt;view (v)&lt;/strong&gt;&lt;/a&gt;: Preview a CSV file in a human-friendly way&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/flatten.md&#34;&gt;&lt;strong&gt;flatten&lt;/strong&gt;&lt;/a&gt;: Display a flattened version of each row of a file&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/hist.md&#34;&gt;&lt;strong&gt;hist&lt;/strong&gt;&lt;/a&gt;: Print a histogram with rows of CSV file as bars&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/plot.md&#34;&gt;&lt;strong&gt;plot&lt;/strong&gt;&lt;/a&gt;: Draw a scatter plot or line chart&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/heatmap.md&#34;&gt;&lt;strong&gt;heatmap&lt;/strong&gt;&lt;/a&gt;: Draw a heatmap of a CSV matrix&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/progress.md&#34;&gt;&lt;strong&gt;progress&lt;/strong&gt;&lt;/a&gt;: Display a progress bar while reading CSV data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Search &amp;amp; filter&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/search.md&#34;&gt;&lt;strong&gt;search&lt;/strong&gt;&lt;/a&gt;: Search for patterns in CSV data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/filter.md&#34;&gt;&lt;strong&gt;filter&lt;/strong&gt;&lt;/a&gt;: Only keep some CSV rows based on an evaluated expression&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/slice.md&#34;&gt;&lt;strong&gt;slice&lt;/strong&gt;&lt;/a&gt;: Slice rows of CSV file&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/top.md&#34;&gt;&lt;strong&gt;top&lt;/strong&gt;&lt;/a&gt;: Find top rows of a CSV file according to some column&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/sample.md&#34;&gt;&lt;strong&gt;sample&lt;/strong&gt;&lt;/a&gt;: Randomly sample CSV data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Sort &amp;amp; deduplicate&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/sort.md&#34;&gt;&lt;strong&gt;sort&lt;/strong&gt;&lt;/a&gt;: Sort CSV data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/dedup.md&#34;&gt;&lt;strong&gt;dedup&lt;/strong&gt;&lt;/a&gt;: Deduplicate a CSV file&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/shuffle.md&#34;&gt;&lt;strong&gt;shuffle&lt;/strong&gt;&lt;/a&gt;: Shuffle CSV data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Aggregate&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/frequency.md&#34;&gt;&lt;strong&gt;frequency (freq)&lt;/strong&gt;&lt;/a&gt;: Show frequency tables&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/groupby.md&#34;&gt;&lt;strong&gt;groupby&lt;/strong&gt;&lt;/a&gt;: Aggregate data by groups of a CSV file&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/stats.md&#34;&gt;&lt;strong&gt;stats&lt;/strong&gt;&lt;/a&gt;: Compute basic statistics&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/agg.md&#34;&gt;&lt;strong&gt;agg&lt;/strong&gt;&lt;/a&gt;: Aggregate data from CSV file&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/bins.md&#34;&gt;&lt;strong&gt;bins&lt;/strong&gt;&lt;/a&gt;: Dispatch numeric columns into bins&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Combine multiple CSV files&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/cat.md&#34;&gt;&lt;strong&gt;cat&lt;/strong&gt;&lt;/a&gt;: Concatenate by row or column&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/join.md&#34;&gt;&lt;strong&gt;join&lt;/strong&gt;&lt;/a&gt;: Join CSV files&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/regex-join.md&#34;&gt;&lt;strong&gt;regex-join&lt;/strong&gt;&lt;/a&gt;: Fuzzy join CSV files using regex patterns&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/url-join.md&#34;&gt;&lt;strong&gt;url-join&lt;/strong&gt;&lt;/a&gt;: Join CSV files on url prefixes&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/merge.md&#34;&gt;&lt;strong&gt;merge&lt;/strong&gt;&lt;/a&gt;: Merge multiple similar already sorted CSV files&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Add, transform, drop and move columns&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/select.md&#34;&gt;&lt;strong&gt;select&lt;/strong&gt;&lt;/a&gt;: Select columns from a CSV file&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/drop.md&#34;&gt;&lt;strong&gt;drop&lt;/strong&gt;&lt;/a&gt;: Drop columns from a CSV file&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/map.md&#34;&gt;&lt;strong&gt;map&lt;/strong&gt;&lt;/a&gt;: Create a new column by evaluating an expression on each CSV row&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/transform.md&#34;&gt;&lt;strong&gt;transform&lt;/strong&gt;&lt;/a&gt;: Transform a column by evaluating an expression on each CSV row&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/enum.md&#34;&gt;&lt;strong&gt;enum&lt;/strong&gt;&lt;/a&gt;: Enumerate CSV file by preprending an index column&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/flatmap.md&#34;&gt;&lt;strong&gt;flatmap&lt;/strong&gt;&lt;/a&gt;: Emit one row per value yielded by an expression evaluated for each CSV row&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/fill.md&#34;&gt;&lt;strong&gt;fill&lt;/strong&gt;&lt;/a&gt;: Fill empty cells&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/blank.md&#34;&gt;&lt;strong&gt;blank&lt;/strong&gt;&lt;/a&gt;: Blank down contiguous identical cell values&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Format, convert &amp;amp; recombobulate&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/behead.md&#34;&gt;&lt;strong&gt;behead&lt;/strong&gt;&lt;/a&gt;: Drop header from CSV file&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/rename.md&#34;&gt;&lt;strong&gt;rename&lt;/strong&gt;&lt;/a&gt;: Rename columns of a CSV file&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/input.md&#34;&gt;&lt;strong&gt;input&lt;/strong&gt;&lt;/a&gt;: Read unusually formatted CSV data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/fixlengths.md&#34;&gt;&lt;strong&gt;fixlengths&lt;/strong&gt;&lt;/a&gt;: Makes all rows have same length&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/fmt.md&#34;&gt;&lt;strong&gt;fmt&lt;/strong&gt;&lt;/a&gt;: Format CSV output (change field delimiter)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/explode.md&#34;&gt;&lt;strong&gt;explode&lt;/strong&gt;&lt;/a&gt;: Explode rows based on some column separator&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/implode.md&#34;&gt;&lt;strong&gt;implode&lt;/strong&gt;&lt;/a&gt;: Collapse consecutive identical rows based on a diverging column&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/from.md&#34;&gt;&lt;strong&gt;from&lt;/strong&gt;&lt;/a&gt;: Convert a variety of formats to CSV&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/to.md&#34;&gt;&lt;strong&gt;to&lt;/strong&gt;&lt;/a&gt;: Convert a CSV file to a variety of data formats&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/scrape.md&#34;&gt;&lt;strong&gt;scrape&lt;/strong&gt;&lt;/a&gt;: Scrape HTML into CSV data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/reverse.md&#34;&gt;&lt;strong&gt;reverse&lt;/strong&gt;&lt;/a&gt;: Reverse rows of CSV data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/transpose.md&#34;&gt;&lt;strong&gt;transpose (t)&lt;/strong&gt;&lt;/a&gt;: Transpose CSV file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Split a CSV file into multiple&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/split.md&#34;&gt;&lt;strong&gt;split&lt;/strong&gt;&lt;/a&gt;: Split CSV data into chunks&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/partition.md&#34;&gt;&lt;strong&gt;partition&lt;/strong&gt;&lt;/a&gt;: Partition CSV data based on a column value&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Parallel operation over multiple CSV files&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/parallel.md&#34;&gt;&lt;strong&gt;parallel (p)&lt;/strong&gt;&lt;/a&gt;: Map-reduce-like parallel computation over multiple CSV files&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Generate CSV files&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/range.md&#34;&gt;&lt;strong&gt;range&lt;/strong&gt;&lt;/a&gt;: Create a CSV file from a numerical range&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Perform side-effects&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/eval.md&#34;&gt;&lt;strong&gt;eval&lt;/strong&gt;&lt;/a&gt;: Evaluate/debug a single expression&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/foreach.md&#34;&gt;&lt;strong&gt;foreach&lt;/strong&gt;&lt;/a&gt;: Loop over a CSV file to perform side effects&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Lexicometry &amp;amp; fuzzy matching&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/tokenize.md&#34;&gt;&lt;strong&gt;tokenize&lt;/strong&gt;&lt;/a&gt;: Tokenize a text column&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/vocab.md&#34;&gt;&lt;strong&gt;vocab&lt;/strong&gt;&lt;/a&gt;: Build a vocabulary over tokenized documents&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/cluster.md&#34;&gt;&lt;strong&gt;cluster&lt;/strong&gt;&lt;/a&gt;: Cluster CSV data to find near-duplicates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Matrix &amp;amp; network-related commands&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/matrix.md&#34;&gt;&lt;strong&gt;matrix&lt;/strong&gt;&lt;/a&gt;: Convert CSV data to matrix data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cmd/network.md&#34;&gt;&lt;strong&gt;network&lt;/strong&gt;&lt;/a&gt;: Convert CSV data to network data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;General flags and IO model&lt;/h2&gt; &#xA;&lt;h3&gt;Getting help&lt;/h3&gt; &#xA;&lt;p&gt;If you ever feel lost, each command has a &lt;code&gt;-h/--help&lt;/code&gt; flag that will print the related documentation.&lt;/p&gt; &#xA;&lt;p&gt;If you need help about the expression language, check out the &lt;code&gt;help&lt;/code&gt; command itself:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Help about help ;)&#xA;xan help --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Regarding input &amp;amp; output formats&lt;/h3&gt; &#xA;&lt;p&gt;All &lt;code&gt;xan&lt;/code&gt; commands expect a &#34;standard&#34; CSV file, e.g. comma-delimited, with proper double-quote escaping. This said, &lt;code&gt;xan&lt;/code&gt; is also perfectly able to infer the delimiter from typical file extensions such as &lt;code&gt;.tsv&lt;/code&gt; or &lt;code&gt;.tab&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you need to process a file with a custom delimiter, you can either use the &lt;code&gt;xan input&lt;/code&gt; command or use the &lt;code&gt;-d/--delimiter&lt;/code&gt; flag available with all commands.&lt;/p&gt; &#xA;&lt;p&gt;If you need to output a custom CSV dialect (e.g. using &lt;code&gt;;&lt;/code&gt; delimiters), feel free to use the &lt;code&gt;xan fmt&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;Finally, even if most &lt;code&gt;xan&lt;/code&gt; commands won&#39;t even need to decode the file&#39;s bytes, some might still need to. In this case, &lt;code&gt;xan&lt;/code&gt; will expect correctly formatted UTF-8 text. Please use &lt;code&gt;iconv&lt;/code&gt; or other utils if you need to process other encodings such as &lt;code&gt;latin1&lt;/code&gt; ahead of &lt;code&gt;xan&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Working with headless CSV file&lt;/h3&gt; &#xA;&lt;p&gt;Even if this is good practice to name your columns, some CSV file simply don&#39;t have headers. Most commands are able to deal with those file if you give the &lt;code&gt;-n/--no-headers&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;p&gt;Note that this flag always relates to the input, not the output. If for some reason you want to drop a CSV output&#39;s header row, use the &lt;code&gt;xan behead&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;h3&gt;Regarding stdin&lt;/h3&gt; &#xA;&lt;p&gt;By default, all commands will try to read from stdin when the file path is not specified. This makes piping easy and comfortable as it respects typical unix standards. Some commands may have multiple inputs (&lt;code&gt;xan join&lt;/code&gt;, for instance), in which case stdin is usually specifiable using the &lt;code&gt;-&lt;/code&gt; character:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# First file given to join will be read from stdin&#xA;cat file1.csv | xan join col1 - col2 file2.csv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the command will also warn you when stdin cannot be read, in case you forgot to indicate the file&#39;s path.&lt;/p&gt; &#xA;&lt;h3&gt;Regarding stdout&lt;/h3&gt; &#xA;&lt;p&gt;By default, all commands will print their output to stdout (note that this output is usually buffered for performance reasons).&lt;/p&gt; &#xA;&lt;p&gt;In addition, all commands expose a &lt;code&gt;-o/--output&lt;/code&gt; flag that can be use to specify where to write the output. This can be useful if you do not want to or cannot use &lt;code&gt;&amp;gt;&lt;/code&gt; (typically in some Windows shells). In which case, &lt;code&gt;-&lt;/code&gt; as a output path will mean forwarding to stdout also. This can be useful when scripting sometimes.&lt;/p&gt; &#xA;&lt;h3&gt;Gzipped files&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;xan&lt;/code&gt; is able to read gzipped files (having a &lt;code&gt;.gz&lt;/code&gt; extension) out of the box.&lt;/p&gt; &#xA;&lt;h2&gt;Expression language reference&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/moonblade/cheatsheet.md&#34;&gt;Cheatsheet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/moonblade/functions.md&#34;&gt;Comprehensive list of functions &amp;amp; operators&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/moonblade/aggs.md&#34;&gt;Comprehensive list of aggregation functions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/moonblade/scraping.md&#34;&gt;Scraping DSL&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cookbook&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cookbook/frequency_tables.md&#34;&gt;Merging frequency tables, three ways&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cookbook/dates.md&#34;&gt;Parsing and visualizing dates with xan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cookbook/urls.md&#34;&gt;Joining files by URL prefixes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/cookbook/misc.md&#34;&gt;Miscellaneous&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;p&gt;For news about the tool&#39;s evolutions feel free to read:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;the &lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/CHANGELOG.md&#34;&gt;changelog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;the &lt;a href=&#34;https://raw.githubusercontent.com/medialab/xan/master/docs/XANZINE.md&#34;&gt;xan zines&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; &#xA;&lt;h3&gt;How to display a vertical bar chart?&lt;/h3&gt; &#xA;&lt;p&gt;Rotate your screen ;)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>supabase-community/postgres-language-server</title>
    <updated>2025-04-01T01:38:10Z</updated>
    <id>tag:github.com,2025-04-01:/supabase-community/postgres-language-server</id>
    <link href="https://github.com/supabase-community/postgres-language-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Language Server for Postgres&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/supabase-community/postgres-language-server/main/docs/images/pls-github.png&#34; alt=&#34;Postgres Language Server&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Postgres Language Server&lt;/h1&gt; &#xA;&lt;p&gt;A collection of language tools and a Language Server Protocol (LSP) implementation for Postgres, focusing on developer experience and reliable SQL tooling.&lt;/p&gt; &#xA;&lt;p&gt;Docs: &lt;a href=&#34;https://pgtools.dev/&#34;&gt;pgtools.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Install: &lt;a href=&#34;https://pgtools.dev/#installation&#34;&gt;instructions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/supabase-community/postgres-language-server/releases&#34;&gt;CLI releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Supabase.postgrestools&#34;&gt;VSCode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/neovim/nvim-lspconfig/raw/master/doc/configs.md#postgres_lsp&#34;&gt;Neovim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;LSP Demo&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;CLI Demo&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/supabase-community/postgres-language-server/main/docs/images/lsp-demo.gif&#34; alt=&#34;LSP Demo&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/supabase-community/postgres-language-server/main/docs/images/cli-demo.png&#34; alt=&#34;CLI Demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;This project provides a toolchain for Postgres development, built on Postgres&#39; own parser &lt;code&gt;libpg_query&lt;/code&gt; to ensure 100% syntax compatibility. It is built on a Server-Client architecture with a transport-agnostic design. This means all features can be accessed not only through the &lt;a href=&#34;https://microsoft.github.io/language-server-protocol/&#34;&gt;Language Server Protocol&lt;/a&gt;, but also through other interfaces like a CLI, HTTP APIs, or a WebAssembly module. The goal is to make all the great Postgres tooling out there as accessible as possible, and to build anything that is missing ourselves.&lt;/p&gt; &#xA;&lt;p&gt;The following features are implemented:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Autocompletion&lt;/li&gt; &#xA; &lt;li&gt;Syntax Error Highlighting&lt;/li&gt; &#xA; &lt;li&gt;Type-checking (via &lt;code&gt;EXPLAIN&lt;/code&gt; error insights)&lt;/li&gt; &#xA; &lt;li&gt;Linter, inspired by &lt;a href=&#34;https://squawkhq.com&#34;&gt;Squawk&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Our current focus is on refining and enhancing these core features while building a robust and easily accessible infrastructure. For future plans and opportunities to contribute, please check out the issues and discussions. Any contributions are welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/psteinroe&#34;&gt;psteinroe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/juleswritescode&#34;&gt;juleswritescode&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;A big thanks to the following projects, without which this project wouldn&#39;t have been possible:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pganalyze/libpg_query&#34;&gt;libpg_query&lt;/a&gt;: For extracting the Postgres&#39; parser&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/biomejs/biome&#34;&gt;Biome&lt;/a&gt;: For implementing a toolchain infrastructure we could copy from&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sbdchd/squawk&#34;&gt;Squawk&lt;/a&gt;: For the linter inspiration&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>