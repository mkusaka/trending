<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-07T01:45:52Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>paradigmxyz/artemis</title>
    <updated>2023-05-07T01:45:52Z</updated>
    <id>tag:github.com,2023-05-07:/paradigmxyz/artemis</id>
    <link href="https://github.com/paradigmxyz/artemis" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple, modular, and fast framework for writing MEV bots in Rust.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/paradigmxyz/artemis/main/assets/artemis.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/paradigmxyz/reth/actions/workflows/rust.yml&#34;&gt;&lt;img src=&#34;https://github.com/paradigmxyz/reth/workflows/ci/badge.svg?sanitize=true&#34; alt=&#34;CI status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/artemis_devs&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-telegram-blue&#34; alt=&#34;Telegram Chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is Artemis?&lt;/h2&gt; &#xA;&lt;p&gt;Artemis is a framework for writing MEV bots in Rust. It&#39;s designed to be simple, modular, and fast.&lt;/p&gt; &#xA;&lt;p&gt;At it&#39;s core, Artemis is architected as an event processing pipeline. The library is made up of three main components:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;em&gt;Collectors&lt;/em&gt;: &lt;em&gt;Collectors&lt;/em&gt; take in external events (such as pending txs, new blocks, marketplace orders, etc. ) and turn them into an internal &lt;em&gt;event&lt;/em&gt; representation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Strategies&lt;/em&gt;: &lt;em&gt;Strategies&lt;/em&gt; contain the core logic required for each MEV opportunity. They take in &lt;em&gt;events&lt;/em&gt; as inputs, and compute whether any opportunities are available (for example, a strategy might listen to a stream of marketplace orders to see if there are any cross-exchange arbs). &lt;em&gt;Strategies&lt;/em&gt; produce &lt;em&gt;actions&lt;/em&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Executors&lt;/em&gt;: &lt;em&gt;Executors&lt;/em&gt; process &lt;em&gt;actions&lt;/em&gt;, and are responsible for executing them in different domains (for example, submitting txs, posting off-chain orders, etc.).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Strategies&lt;/h2&gt; &#xA;&lt;p&gt;The following strategies have been implemented:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paradigmxyz/artemis/main/crates/strategies/opensea-sudo-arb/&#34;&gt;Opensea/Sudoswap NFT Arbitrage&lt;/a&gt;: A strategy implementing atomic, cross-market NFT arbitrage between Seaport and Sudoswap.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build, Test and Run&lt;/h2&gt; &#xA;&lt;p&gt;First, make sure the following are installed:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/foundry-rs/foundry/tree/master/anvil#installing-from-source&#34;&gt;Anvil&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;In order to build, first clone the github repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/paradigmxyz/artemis&#xA;cd artemis&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, run tests with cargo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo test --all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to run the opensea sudoswap arbitrage strategy, you can run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo run -- --wss &amp;lt;INFURA_OR_ALCHEMY_KEY&amp;gt; --opensea-api-key &amp;lt;OPENSEA_API_KEY&amp;gt; --private-key &amp;lt;PRIVATE_KEY&amp;gt; --arb-contract-address &amp;lt;ARB_CONTRACT_ADDRESS&amp;gt; --bid-percentage &amp;lt;BID_PERCENTAGE&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;where &lt;code&gt;ARB_CONTRACT_ADDRESS&lt;/code&gt; is the address to which you deploy the &lt;a href=&#34;https://raw.githubusercontent.com/paradigmxyz/artemis/main/crates/strategies/opensea-sudo-arb/contracts/src/SudoOpenseaArb.sol&#34;&gt;arb contract&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/libevm/subway&#34;&gt;subway&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/refcell/subway-rs&#34;&gt;subway-rs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/0xKitsune/cfmms-rs&#34;&gt;cfmms-rs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mouseless-eth/rusty-sando&#34;&gt;rusty-sando&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Alcibiades-Capital/mev_bundle_generator/raw/master/Cargo.toml&#34;&gt;bundle-generator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gakonst/ethers-rs&#34;&gt;ethers-rs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/onbjerg/ethers-flashbots&#34;&gt;ethers-flashbots&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>