<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-07T01:32:13Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fluencelabs/nox</title>
    <updated>2024-05-07T01:32:13Z</updated>
    <id>tag:github.com,2024-05-07:/fluencelabs/nox</id>
    <link href="https://github.com/fluencelabs/nox" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Rust implementation of the Fluence network peer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nox&lt;/h1&gt; &#xA;&lt;p&gt;Nox is the reference implementation of the &lt;a href=&#34;https://fluence.network&#34;&gt;Fluence&lt;/a&gt; peer. It is used as a Relay for all Clients and as a Host for all Workers.&lt;/p&gt; &#xA;&lt;h2&gt;Installation and Usage&lt;/h2&gt; &#xA;&lt;p&gt;nox is distributed as a &lt;a href=&#34;https://hub.docker.com/r/fluencelabs/nox&#34;&gt;docker image&lt;/a&gt;. To start a local instance of nox, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull fluencelabs/nox:latest&#xA;docker run -d --name fluence -e RUST_LOG=&#34;info&#34; -p 7777:7777 -p 9999:9999 fluencelabs/nox:latest --local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will setup a network of one nox not connected to any other network.&lt;/p&gt; &#xA;&lt;p&gt;For more info about the docker image see the &lt;a href=&#34;https://github.com/fluencelabs/nox/raw/master/docker/README.md&#34;&gt;README&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Comprehensive documentation on everything related to Fluence can be found &lt;a href=&#34;https://fluence.dev/&#34;&gt;here&lt;/a&gt;. Check also our &lt;a href=&#34;https://www.youtube.com/@fluencelabs&#34;&gt;YouTube channel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Please, file an &lt;a href=&#34;https://github.com/fluencelabs/nox/issues&#34;&gt;issue&lt;/a&gt; if you find a bug. You can also contact us at &lt;a href=&#34;https://discord.com/invite/5qSnPZKh7u&#34;&gt;Discord&lt;/a&gt; or &lt;a href=&#34;https://t.me/fluence_project&#34;&gt;Telegram&lt;/a&gt;. We will do our best to resolve the issue ASAP.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Any interested person is welcome to contribute to the project. Please, make sure you read and follow some basic &lt;a href=&#34;https://raw.githubusercontent.com/fluencelabs/nox/master/CONTRIBUTING.md&#34;&gt;rules&lt;/a&gt;. The Contributor License Agreement can be found &lt;a href=&#34;https://raw.githubusercontent.com/fluencelabs/nox/master/FluenceCLA&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;All software code is copyright (c) Fluence Labs, Inc. under the &lt;a href=&#34;https://raw.githubusercontent.com/fluencelabs/nox/master/LICENSE&#34;&gt;Apache-2.0&lt;/a&gt; license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>yetone/get-selected-text</title>
    <updated>2024-05-07T01:32:13Z</updated>
    <id>tag:github.com,2024-05-07:/yetone/get-selected-text</id>
    <link href="https://github.com/yetone/get-selected-text" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tiny Rust library that allows you to easily obtain selected text across all platforms (macOS, Windows, Linux).&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;get-selected-text&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yetone/get-selected-text/actions/workflows/lint.yaml&#34;&gt;&lt;img src=&#34;https://github.com/yetone/get-selected-text/actions/workflows/lint.yaml/badge.svg?sanitize=true&#34; alt=&#34;Lint&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/get-selected-text&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/get-selected-text.svg?sanitize=true&#34; alt=&#34;crates.io&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A tiny Rust library that allows you to easily obtain selected text across all platforms (macOS, Windows, Linux).&lt;/p&gt; &#xA;&lt;p&gt;Corresponding Node.js package: &lt;a href=&#34;https://github.com/yetone/node-get-selected-text&#34;&gt;node-get-selected-text&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Add:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo add get-selected-text&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Use:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;use get_selected_text::get_selected_text;&#xA;&#xA;fn main() {&#xA;    match get_selected_text() {&#xA;        Ok(selected_text) =&amp;gt; {&#xA;            println!(&#34;selected text: {}&#34;, selected_text);&#xA;        },&#xA;        Err(()) =&amp;gt; {&#xA;            println!(&#34;error occurred while getting the selected text&#34;);&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How does it work?&lt;/h2&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;p&gt;Prioritize using the A11y API to obtain selected text. If the application does not comply with the A11y API, simulate pressing cmd+c to borrow from the clipboard to get the selected text.&lt;/p&gt; &#xA;&lt;p&gt;To avoid annoying Alert sounds when simulating pressing cmd+c, it will automatically mute the Alert sound (Only the Alert sound is muted, it won&#39;t affect the volume of listening to music and watching videos). The volume of the Alert sound will be restored after releasing the key.&lt;/p&gt; &#xA;&lt;p&gt;Therefore, on macOS, you need to grant accessbility permissions in advance. The sample code is as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;fn query_accessibility_permissions() -&amp;gt; bool {&#xA;    let trusted = macos_accessibility_client:&lt;img alt=&#34;accessibility&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/accessibility.png?v8&#34;&gt;):application_is_trusted_with_prompt();&#xA;    if trusted {&#xA;        print!(&#34;Application is totally trusted!&#34;);&#xA;    } else {&#xA;        print!(&#34;Application isn&#39;t trusted :(&#34;);&#xA;    }&#xA;    trusted&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows + Linux&lt;/h3&gt; &#xA;&lt;p&gt;Simulate pressing ctrl+c to use the clipboard to obtain the selected text.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>verus-lang/verus</title>
    <updated>2024-05-07T01:32:13Z</updated>
    <id>tag:github.com,2024-05-07:/verus-lang/verus</id>
    <link href="https://github.com/verus-lang/verus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Verified Rust for low-level systems code&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://verus-lang.github.io/verus/guide/getting_started.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/tutorial-quick%20start-informational&#34; alt=&#34;Quick Start&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://verus-lang.github.io/verus/verusdoc/vstd/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-vstd-informational&#34; alt=&#34;Library Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://verus-lang.zulipchat.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/zulip-join_chat-brightgreen.svg?sanitize=true&#34; alt=&#34;project chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Verus is a tool for verifying the correctness of code written in Rust. Developers write specifications of what their code should do, and Verus statically checks that the executable Rust code will always satisfy the specifications for all possible executions of the code. Rather than adding run-time checks, Verus instead relies on powerful solvers to prove the code is correct. Verus currently supports a subset of Rust (which we are working to expand), and in some cases, it allows developers to go beyond the standard Rust type system and statically check the correctness of code that, for example, manipulates raw pointers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/verus-lang/verus/main/source/docs/verus-demo.png&#34; alt=&#34;VS Code Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;Verus is under &lt;em&gt;active development&lt;/em&gt;. Features may be broken and/or missing, and the documentation is still incomplete. If you want to try Verus, please be prepared to ask for help in the &lt;a href=&#34;https://verus-lang.zulipchat.com/&#34;&gt;ðŸ’¬ Zulip&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Try Verus&lt;/h2&gt; &#xA;&lt;p&gt;To try Verus in your browser, please visit the &lt;a href=&#34;https://play.verus-lang.org/&#34;&gt;Verus Playground&lt;/a&gt;. For more involved development, please follow our &lt;a href=&#34;https://raw.githubusercontent.com/verus-lang/verus/main/INSTALL.md&#34;&gt;installation instructions&lt;/a&gt;. Then you can dive into the documentation below, starting with the &lt;a href=&#34;https://verus-lang.github.io/verus/guide/&#34;&gt;ðŸ“– Tutorial and reference&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Our (work-in-progress) documentation resources include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://verus-lang.github.io/verus/guide/&#34;&gt;ðŸ“– Tutorial and reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://verus-lang.github.io/verus/verusdoc/vstd/&#34;&gt;ðŸ“– API documentation for Verus&#39;s standard library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://verus-lang.github.io/verus/state_machines/&#34;&gt;ðŸ“– Guide for verifying concurrent code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/verus-lang/wiki/Goals&#34;&gt;Project Goals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/verus-lang/verus/main/CONTRIBUTING.md&#34;&gt;Contributing to Verus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/verus-lang/verus/main/LICENSE&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting in touch, reporting issues, and starting discussions&lt;/h2&gt; &#xA;&lt;p&gt;Please report issues or start discussions here on GitHub, or join us on &lt;a href=&#34;https://verus-lang.zulipchat.com/&#34;&gt;ðŸ’¬ Zulip&lt;/a&gt; for more realtime discussions and if you need help. Thank you for using and contributing to Verus!&lt;/p&gt; &#xA;&lt;p&gt;We use GitHub discussions for feature requests and more open-ended conversations about upcoming features, and we reserve GitHub issues for actionable issues (bugs) with existing features. Don&#39;t worry though: if we think an issue should be a discussion (or vice versa) we can always move it later.&lt;/p&gt; &#xA;&lt;p&gt;We welcome contributions! If you&#39;d like to contribute code, have a look at the tips in &lt;a href=&#34;https://raw.githubusercontent.com/verus-lang/verus/main/CONTRIBUTING.md&#34;&gt;Contributing to Verus&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://zulip.com/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/verus-lang/verus/main/source/docs/zulip-icon-circle.svg?sanitize=true&#34; alt=&#34;Zulip&#34; style=&#34;height: 1em;&#34;&gt; Zulip&lt;/a&gt; sponsors free hosting for Verus. Zulip is an open-source modern team chat app designed to keep both live and asynchronous conversations organized.&lt;/p&gt;</summary>
  </entry>
</feed>