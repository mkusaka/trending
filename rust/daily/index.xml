<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-22T01:40:29Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>thed24/ascii-gen</title>
    <updated>2023-11-22T01:40:29Z</updated>
    <id>tag:github.com,2023-11-22:/thed24/ascii-gen</id>
    <link href="https://github.com/thed24/ascii-gen" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A CLI tool that converts images to ASCII art.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rust ASCII Art Converter&lt;/h1&gt; &#xA;&lt;p&gt;This Rust tool converts images into ASCII art. It takes an image file as input, resizes it according to specified width and height parameters, and then converts the image into ASCII characters.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Use cargo to quickly and easily install ascii-gen:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo install ascii-gen&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Run the tool:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ascii-gen --file path/to/your/image.jpg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optional parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--width&lt;/code&gt;: Set the width of the output (default: 80)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--height&lt;/code&gt;: Set the height of the output (default: 80)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--gamma&lt;/code&gt;: Set the gamma of the ASCII art (default: 1.0)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--live&lt;/code&gt;: Enable live editing of the ASCII art (default: false)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ascii-gen --file path/to/your/image.jpg --width 120 --height 60&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ascii-gen --file path/to/your/image.jpg --width 120 --height 60 --live&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Input&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/thed24/ascii-gen/main/examples/duck.jpg&#34; alt=&#34;Input&#34; title=&#34;Input&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Output (Small)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/thed24/ascii-gen/main/examples/duck-ascii.png&#34; alt=&#34;Output&#34; title=&#34;Output&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Output (Large)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/thed24/ascii-gen/main/examples/duck-ascii-zoomed.png&#34; alt=&#34;Output Large&#34; title=&#34;Output Large&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/clap/&#34;&gt;&lt;code&gt;clap&lt;/code&gt;&lt;/a&gt; - Command-line argument parser for Rust.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/image/&#34;&gt;&lt;code&gt;image&lt;/code&gt;&lt;/a&gt; - Image processing library for Rust.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/crossterm/&#34;&gt;&lt;code&gt;crossterm&lt;/code&gt;&lt;/a&gt; - Cross-platform terminal manipulation library for Rust.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/ratatui/&#34;&gt;&lt;code&gt;ratatui&lt;/code&gt;&lt;/a&gt; - TUI (Text-based User Interface) library for Rust.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href=&#34;https://raw.githubusercontent.com/thed24/ascii-gen/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Special thanks to the Rust community for their support and contributions.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>lldap/lldap</title>
    <updated>2023-11-22T01:40:29Z</updated>
    <id>tag:github.com,2023-11-22:/lldap/lldap</id>
    <link href="https://github.com/lldap/lldap" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Light LDAP implementation&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;lldap - Light LDAP implementation for authentication&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;i style=&#34;font-size:24px&#34;&gt;LDAP made easy.&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/lldap/lldap/actions/workflows/rust.yml?query=branch%3Amain&#34;&gt; &lt;img src=&#34;https://github.com/lldap/lldap/actions/workflows/rust.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/h5PEdRMNyP&#34;&gt; &lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/898492935446876200?label=discord&amp;amp;logo=discord&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/nitnelave1?ref_src=twsrc%5Etfw&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/nitnelave1?style=social&#34; alt=&#34;Twitter Follow&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/rust-secure-code/safety-dance/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/unsafe-forbidden-success.svg?sanitize=true&#34; alt=&#34;Unsafe forbidden&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/lldap/lldap&#34;&gt; &lt;img alt=&#34;Codecov&#34; src=&#34;https://img.shields.io/codecov/c/github/lldap/lldap&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://www.buymeacoffee.com/nitnelave&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#about&#34;&gt;About&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#with-docker&#34;&gt;With Docker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#with-kubernetes&#34;&gt;With Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#from-a-package-repository&#34;&gt;From a package repository&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#from-source&#34;&gt;From source&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#backend&#34;&gt;Backend&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#frontend&#34;&gt;Frontend&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#cross-compilation&#34;&gt;Cross-compilation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#client-configuration&#34;&gt;Client configuration&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#compatible-services&#34;&gt;Compatible services&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#general-configuration-guide&#34;&gt;General configuration guide&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#sample-client-configurations&#34;&gt;Sample client configurations&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#migrating-from-sqlite&#34;&gt;Migrating from SQLite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#comparisons-with-other-services&#34;&gt;Comparisons with other services&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#vs-openldap&#34;&gt;vs OpenLDAP&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#vs-freeipa&#34;&gt;vs FreeIPA&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#vs-kanidm&#34;&gt;vs Kanidm&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#i-cant-log-in&#34;&gt;I can&#39;t log in!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#contributions&#34;&gt;Contributions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;This project is a lightweight authentication server that provides an opinionated, simplified LDAP interface for authentication. It integrates with many backends, from KeyCloak to Authelia to Nextcloud and &lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#compatible-services&#34;&gt;more&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lldap/lldap/master/screenshot.png&#34; alt=&#34;Screenshot of the user list page&#34; width=&#34;50%&#34; align=&#34;right&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It comes with a frontend that makes user management easy, and allows users to edit their own details or reset their password by email.&lt;/p&gt; &#xA;&lt;p&gt;The goal is &lt;em&gt;not&lt;/em&gt; to provide a full LDAP server; if you&#39;re interested in that, check out OpenLDAP. This server is a user management system that is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;simple to setup (no messing around with &lt;code&gt;slapd&lt;/code&gt;),&lt;/li&gt; &#xA; &lt;li&gt;simple to manage (friendly web UI),&lt;/li&gt; &#xA; &lt;li&gt;low resources,&lt;/li&gt; &#xA; &lt;li&gt;opinionated with basic defaults so you don&#39;t have to understand the subtleties of LDAP.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It mostly targets self-hosting servers, with open-source components like Nextcloud, Airsonic and so on that only support LDAP as a source of external authentication.&lt;/p&gt; &#xA;&lt;p&gt;For more features (OAuth/OpenID support, reverse proxy, ...) you can install other components (KeyCloak, Authelia, ...) using this server as the source of truth for users, via LDAP.&lt;/p&gt; &#xA;&lt;p&gt;By default, the data is stored in SQLite, but you can swap the backend with MySQL/MariaDB or PostgreSQL.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;With Docker&lt;/h3&gt; &#xA;&lt;p&gt;The image is available at &lt;code&gt;lldap/lldap&lt;/code&gt;. You should persist the &lt;code&gt;/data&lt;/code&gt; folder, which contains your configuration, the database and the private key file.&lt;/p&gt; &#xA;&lt;p&gt;Configure the server by copying the &lt;code&gt;lldap_config.docker_template.toml&lt;/code&gt; to &lt;code&gt;/data/lldap_config.toml&lt;/code&gt; and updating the configuration values (especially the &lt;code&gt;jwt_secret&lt;/code&gt; and &lt;code&gt;ldap_user_pass&lt;/code&gt;, unless you override them with env variables). Environment variables should be prefixed with &lt;code&gt;LLDAP_&lt;/code&gt; to override the configuration.&lt;/p&gt; &#xA;&lt;p&gt;If the &lt;code&gt;lldap_config.toml&lt;/code&gt; doesn&#39;t exist when starting up, LLDAP will use default one. The default admin password is &lt;code&gt;password&lt;/code&gt;, you can change the password later using the web interface.&lt;/p&gt; &#xA;&lt;p&gt;Secrets can also be set through a file. The filename should be specified by the variables &lt;code&gt;LLDAP_JWT_SECRET_FILE&lt;/code&gt; or &lt;code&gt;LLDAP_LDAP_USER_PASS_FILE&lt;/code&gt;, and the file contents are loaded into the respective configuration parameters. Note that &lt;code&gt;_FILE&lt;/code&gt; variables take precedence.&lt;/p&gt; &#xA;&lt;p&gt;Example for docker compose:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can use either the &lt;code&gt;:latest&lt;/code&gt; tag image or &lt;code&gt;:stable&lt;/code&gt; as used in this example.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:latest&lt;/code&gt; tag image contains recently pushed code or feature tests, in which some instability can be expected.&lt;/li&gt; &#xA; &lt;li&gt;If &lt;code&gt;UID&lt;/code&gt; and &lt;code&gt;GID&lt;/code&gt; no defined LLDAP will use default &lt;code&gt;UID&lt;/code&gt; and &lt;code&gt;GID&lt;/code&gt; number &lt;code&gt;1000&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If no &lt;code&gt;TZ&lt;/code&gt; is set, default &lt;code&gt;UTC&lt;/code&gt; timezone will be used.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#34;3&#34;&#xA;&#xA;volumes:&#xA;  lldap_data:&#xA;    driver: local&#xA;&#xA;services:&#xA;  lldap:&#xA;    image: lldap/lldap:stable&#xA;    ports:&#xA;      # For LDAP&#xA;      - &#34;3890:3890&#34;&#xA;      # For LDAPS (LDAP Over SSL), enable port if LLDAP_LDAPS_OPTIONS__ENABLED set true, look env below&#xA;      #- &#34;6360:6360&#34;&#xA;      # For the web front-end&#xA;      - &#34;17170:17170&#34;&#xA;    volumes:&#xA;      - &#34;lldap_data:/data&#34;&#xA;      # Alternatively, you can mount a local folder&#xA;      # - &#34;./lldap_data:/data&#34;&#xA;    environment:&#xA;      - UID=####&#xA;      - GID=####&#xA;      - TZ=####/####&#xA;      - LLDAP_JWT_SECRET=REPLACE_WITH_RANDOM&#xA;      - LLDAP_LDAP_USER_PASS=REPLACE_WITH_PASSWORD&#xA;      - LLDAP_LDAP_BASE_DN=dc=example,dc=com&#xA;      # If using LDAPS, set enabled true and configure cert and key path&#xA;      # - LLDAP_LDAPS_OPTIONS__ENABLED=true&#xA;      # - LLDAP_LDAPS_OPTIONS__CERT_FILE=/path/to/certfile.crt&#xA;      # - LLDAP_LDAPS_OPTIONS__KEY_FILE=/path/to/keyfile.key&#xA;      # You can also set a different database:&#xA;      # - LLDAP_DATABASE_URL=mysql://mysql-user:password@mysql-server/my-database&#xA;      # - LLDAP_DATABASE_URL=postgres://postgres-user:password@postgres-server/my-database&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then the service will listen on two ports, one for LDAP and one for the web front-end.&lt;/p&gt; &#xA;&lt;h3&gt;With Kubernetes&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/Evantage-WS/lldap-kubernetes&#34;&gt;https://github.com/Evantage-WS/lldap-kubernetes&lt;/a&gt; for a LLDAP deployment for Kubernetes&lt;/p&gt; &#xA;&lt;p&gt;You can bootstrap your lldap instance (users, groups) using &lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/bootstrap/bootstrap.md#kubernetes-job&#34;&gt;bootstrap.sh&lt;/a&gt;. It can be run by Argo CD for managing users in git-opt way, or as a one-shot job.&lt;/p&gt; &#xA;&lt;h3&gt;From a package repository&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Do not open issues in this repository for problems with third-party pre-built packages. Report issues downstream.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Depending on the distribution you use, it might be possible to install lldap from a package repository, officially supported by the distribution or community contributed.&lt;/p&gt; &#xA;&lt;h4&gt;Arch Linux&lt;/h4&gt; &#xA;&lt;p&gt;Arch Linux offers unofficial support through the &lt;a href=&#34;https://wiki.archlinux.org/title/Arch_User_Repository&#34;&gt;Arch User Repository (AUR)&lt;/a&gt;. Available package descriptions in AUR are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aur.archlinux.org/packages/lldap&#34;&gt;lldap&lt;/a&gt; - Builds the latest stable version.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aur.archlinux.org/packages/lldap-bin&#34;&gt;lldap-bin&lt;/a&gt; - Uses the latest pre-compiled binaries from the &lt;a href=&#34;https://github.com/lldap/lldap/releases&#34;&gt;releases in this repository&lt;/a&gt;. This package is recommended if you want to run lldap on a system with limited resources.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aur.archlinux.org/packages/lldap-git&#34;&gt;lldap-git&lt;/a&gt; - Builds the latest main branch code.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The package descriptions can be used &lt;a href=&#34;https://wiki.archlinux.org/title/Arch_User_Repository#Getting_started&#34;&gt;to create and install packages&lt;/a&gt;. Each package places lldap&#39;s configuration file at &lt;code&gt;/etc/lldap.toml&lt;/code&gt; and offers &lt;a href=&#34;https://wiki.archlinux.org/title/systemd#Using_units&#34;&gt;systemd service&lt;/a&gt; &lt;code&gt;lldap.service&lt;/code&gt; to (auto-)start and stop lldap.&lt;/p&gt; &#xA;&lt;h3&gt;From source&lt;/h3&gt; &#xA;&lt;h4&gt;Backend&lt;/h4&gt; &#xA;&lt;p&gt;To compile the project, you&#39;ll need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;curl and gzip: &lt;code&gt;sudo apt install curl gzip&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Rust/Cargo: &lt;a href=&#34;https://rustup.rs/&#34;&gt;rustup.rs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then you can compile the server (and the migration tool if you want):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo build --release -p lldap -p lldap_migration_tool&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The resulting binaries will be in &lt;code&gt;./target/release/&lt;/code&gt;. Alternatively, you can just run &lt;code&gt;cargo run -- run&lt;/code&gt; to run the server.&lt;/p&gt; &#xA;&lt;h4&gt;Frontend&lt;/h4&gt; &#xA;&lt;p&gt;To bring up the server, you&#39;ll need to compile the frontend. In addition to &lt;code&gt;cargo&lt;/code&gt;, you&#39;ll need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WASM-pack: &lt;code&gt;cargo install wasm-pack&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then you can build the frontend files with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./app/build.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(you&#39;ll need to run this after every front-end change to update the WASM package served).&lt;/p&gt; &#xA;&lt;p&gt;The default config is in &lt;code&gt;src/infra/configuration.rs&lt;/code&gt;, but you can override it by creating an &lt;code&gt;lldap_config.toml&lt;/code&gt;, setting environment variables or passing arguments to &lt;code&gt;cargo run&lt;/code&gt;. Have a look at the docker template: &lt;code&gt;lldap_config.docker_template.toml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also install it as a systemd service, see &lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/lldap.service&#34;&gt;lldap.service&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Cross-compilation&lt;/h3&gt; &#xA;&lt;p&gt;Docker images are provided for AMD64, ARM64 and ARM/V7.&lt;/p&gt; &#xA;&lt;p&gt;If you want to cross-compile yourself, you can do so by installing &lt;a href=&#34;https://github.com/rust-embedded/cross&#34;&gt;&lt;code&gt;cross&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo install cross&#xA;cross build --target=armv7-unknown-linux-musleabihf -p lldap --release&#xA;./app/build.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(Replace &lt;code&gt;armv7-unknown-linux-musleabihf&lt;/code&gt; with the correct Rust target for your device.)&lt;/p&gt; &#xA;&lt;p&gt;You can then get the compiled server binary in &lt;code&gt;target/armv7-unknown-linux-musleabihf/release/lldap&lt;/code&gt; and the various needed files (&lt;code&gt;index.html&lt;/code&gt;, &lt;code&gt;main.js&lt;/code&gt;, &lt;code&gt;pkg&lt;/code&gt; folder) in the &lt;code&gt;app&lt;/code&gt; folder. Copy them to the Raspberry Pi (or other target), with the folder structure maintained (&lt;code&gt;app&lt;/code&gt; files in an &lt;code&gt;app&lt;/code&gt; folder next to the binary).&lt;/p&gt; &#xA;&lt;h2&gt;Client configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Compatible services&lt;/h3&gt; &#xA;&lt;p&gt;Most services that can use LDAP as an authentication provider should work out of the box. For new services, it&#39;s possible that they require a bit of tweaking on LLDAP&#39;s side to make things work. In that case, just create an issue with the relevant details (logs of the service, LLDAP logs with &lt;code&gt;verbose=true&lt;/code&gt; in the config).&lt;/p&gt; &#xA;&lt;h3&gt;General configuration guide&lt;/h3&gt; &#xA;&lt;p&gt;To configure the services that will talk to LLDAP, here are the values:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The LDAP user DN is from the configuration. By default, &lt;code&gt;cn=admin,ou=people,dc=example,dc=com&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The LDAP password is from the configuration (same as to log in to the web UI).&lt;/li&gt; &#xA; &lt;li&gt;The users are all located in &lt;code&gt;ou=people,&lt;/code&gt; + the base DN, so by default user &lt;code&gt;bob&lt;/code&gt; is at &lt;code&gt;cn=bob,ou=people,dc=example,dc=com&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Similarly, the groups are located in &lt;code&gt;ou=groups&lt;/code&gt;, so the group &lt;code&gt;family&lt;/code&gt; will be at &lt;code&gt;cn=family,ou=groups,dc=example,dc=com&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Testing group membership through &lt;code&gt;memberOf&lt;/code&gt; is supported, so you can have a filter like: &lt;code&gt;(memberOf=cn=admins,ou=groups,dc=example,dc=com)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The administrator group for LLDAP is &lt;code&gt;lldap_admin&lt;/code&gt;: anyone in this group has admin rights in the Web UI. Most LDAP integrations should instead use a user in the &lt;code&gt;lldap_strict_readonly&lt;/code&gt; or &lt;code&gt;lldap_password_manager&lt;/code&gt; group, to avoid granting full administration access to many services.&lt;/p&gt; &#xA;&lt;h3&gt;Sample client configurations&lt;/h3&gt; &#xA;&lt;p&gt;Some specific clients have been tested to work and come with sample configuration files, or guides. See the &lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs&#34;&gt;&lt;code&gt;example_configs&lt;/code&gt;&lt;/a&gt; folder for help with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/airsonic-advanced.md&#34;&gt;Airsonic Advanced&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/apacheguacamole.md&#34;&gt;Apache Guacamole&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/apereo_cas_server.md&#34;&gt;Apereo CAS Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/authelia_config.yml&#34;&gt;Authelia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/authentik.md&#34;&gt;Authentik&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/bookstack.env.example&#34;&gt;Bookstack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/calibre_web.md&#34;&gt;Calibre-Web&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/dell_idrac.md&#34;&gt;Dell iDRAC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/dex_config.yml&#34;&gt;Dex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/dokuwiki.md&#34;&gt;Dokuwiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/dolibarr.md&#34;&gt;Dolibarr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/ejabberd.md&#34;&gt;Ejabberd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/emby.md&#34;&gt;Emby&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/ergo.md&#34;&gt;Ergo IRCd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/gitea.md&#34;&gt;Gitea&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/grafana_ldap_config.toml&#34;&gt;Grafana&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/hedgedoc.md&#34;&gt;Hedgedoc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/jellyfin.md&#34;&gt;Jellyfin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/jenkins.md&#34;&gt;Jenkins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/jitsi_meet.conf&#34;&gt;Jitsi Meet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/keycloak.md&#34;&gt;KeyCloak&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/librenms.md&#34;&gt;LibreNMS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/mastodon.env.example&#34;&gt;Mastodon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/matrix_synapse.yml&#34;&gt;Matrix&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/mealie.md&#34;&gt;Mealie&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/minio.md&#34;&gt;MinIO&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/nextcloud.md&#34;&gt;Nextcloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/nexus.md&#34;&gt;Nexus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/Organizr.md&#34;&gt;Organizr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/portainer.md&#34;&gt;Portainer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/powerdns_admin.md&#34;&gt;PowerDNS Admin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/proxmox.md&#34;&gt;Proxmox VE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/rancher.md&#34;&gt;Rancher&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/seafile.md&#34;&gt;Seafile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/shaarli.md&#34;&gt;Shaarli&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/squid.md&#34;&gt;Squid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/syncthing.md&#34;&gt;Syncthing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/thelounge.md&#34;&gt;TheLounge&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/traccar.xml&#34;&gt;Traccar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/vaultwarden.md&#34;&gt;Vaultwarden&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/wekan.md&#34;&gt;WeKan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/wg_portal.env.example&#34;&gt;WG Portal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/wikijs.md&#34;&gt;WikiJS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/xbackbone_config.php&#34;&gt;XBackBone&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/zendto.md&#34;&gt;Zendto&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/zulip.md&#34;&gt;Zulip&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Migrating from SQLite&lt;/h2&gt; &#xA;&lt;p&gt;If you started with an SQLite database and would like to migrate to MySQL/MariaDB or PostgreSQL, check out the &lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/docs/database_migration.md&#34;&gt;DB migration docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Comparisons with other services&lt;/h2&gt; &#xA;&lt;h3&gt;vs OpenLDAP&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.openldap.org&#34;&gt;OpenLDAP&lt;/a&gt; is a monster of a service that implements all of LDAP and all of its extensions, plus some of its own. That said, if you need all that flexibility, it might be what you need! Note that installation can be a bit painful (figuring out how to use &lt;code&gt;slapd&lt;/code&gt;) and people have mixed experiences following tutorials online. If you don&#39;t configure it properly, you might end up storing passwords in clear, so a breach of your server would reveal all the stored passwords!&lt;/p&gt; &#xA;&lt;p&gt;OpenLDAP doesn&#39;t come with a UI: if you want a web interface, you&#39;ll have to install one (not that many look nice) and configure it.&lt;/p&gt; &#xA;&lt;p&gt;LLDAP is much simpler to setup, has a much smaller image (10x smaller, 20x if you add PhpLdapAdmin), and comes packed with its own purpose-built web UI. However, it&#39;s not as flexible as OpenLDAP.&lt;/p&gt; &#xA;&lt;h3&gt;vs FreeIPA&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.freeipa.org&#34;&gt;FreeIPA&lt;/a&gt; is the one-stop shop for identity management: LDAP, Kerberos, NTP, DNS, Samba, you name it, it has it. In addition to user management, it also does security policies, single sign-on, certificate management, linux account management and so on.&lt;/p&gt; &#xA;&lt;p&gt;If you need all of that, go for it! Keep in mind that a more complex system is more complex to maintain, though.&lt;/p&gt; &#xA;&lt;p&gt;LLDAP is much lighter to run (&amp;lt;10 MB RAM including the DB), easier to configure (no messing around with DNS or security policies) and simpler to use. It also comes conveniently packed in a docker container.&lt;/p&gt; &#xA;&lt;h3&gt;vs Kanidm&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kanidm.com&#34;&gt;Kanidm&lt;/a&gt; is an up-and-coming Rust identity management platform, covering all your bases: OAuth, Linux accounts, SSH keys, Radius, WebAuthn. It comes with a (read-only) LDAPS server.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s fairly easy to install and does much more; but their LDAP server is read-only, and by having more moving parts it is inherently more complex. If you don&#39;t need to modify the users through LDAP and you&#39;re planning on installing something like &lt;a href=&#34;https://www.keycloak.org&#34;&gt;KeyCloak&lt;/a&gt; to provide modern identity protocols, check out Kanidm.&lt;/p&gt; &#xA;&lt;h2&gt;I can&#39;t log in!&lt;/h2&gt; &#xA;&lt;p&gt;If you just set up the server, can get to the login page but the password you set isn&#39;t working, try the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(For docker): Make sure that the &lt;code&gt;/data&lt;/code&gt; folder is persistent, either to a docker volume or mounted from the host filesystem.&lt;/li&gt; &#xA; &lt;li&gt;Check if there is a &lt;code&gt;lldap_config.toml&lt;/code&gt; file (either in &lt;code&gt;/data&lt;/code&gt; for docker or in the current directory). If there isn&#39;t, copy &lt;code&gt;lldap_config.docker_template.toml&lt;/code&gt; there, and fill in the various values (passwords, secrets, ...).&lt;/li&gt; &#xA; &lt;li&gt;Check if there is a &lt;code&gt;users.db&lt;/code&gt; file (either in &lt;code&gt;/data&lt;/code&gt; for docker or where you specified the DB URL, which defaults to the current directory). If there isn&#39;t, check that the user running the command (user with ID 10001 for docker) has the rights to write to the &lt;code&gt;/data&lt;/code&gt; folder. If in doubt, you can &lt;code&gt;chmod 777 /data&lt;/code&gt; (or whatever the folder) to make it world-writeable.&lt;/li&gt; &#xA; &lt;li&gt;Make sure you restart the server.&lt;/li&gt; &#xA; &lt;li&gt;If it&#39;s still not working, join the &lt;a href=&#34;https://discord.gg/h5PEdRMNyP&#34;&gt;Discord server&lt;/a&gt; to ask for help.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! Just fork and open a PR. Or just file a bug.&lt;/p&gt; &#xA;&lt;p&gt;We don&#39;t have a code of conduct, just be respectful and remember that it&#39;s just normal people doing this for free on their free time.&lt;/p&gt; &#xA;&lt;p&gt;Make sure that you run &lt;code&gt;cargo fmt&lt;/code&gt; from the root before creating the PR. And if you change the GraphQL interface, you&#39;ll need to regenerate the schema by running &lt;code&gt;./export_schema.sh&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Join our &lt;a href=&#34;https://discord.gg/h5PEdRMNyP&#34;&gt;Discord server&lt;/a&gt; if you have any questions!&lt;/p&gt;</summary>
  </entry>
</feed>