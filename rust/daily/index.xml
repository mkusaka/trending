<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-23T01:46:22Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tauri-apps/tauri-mobile</title>
    <updated>2023-06-23T01:46:22Z</updated>
    <id>tag:github.com,2023-06-23:/tauri-apps/tauri-mobile</id>
    <link href="https://github.com/tauri-apps/tauri-mobile" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Rust on mobile made easy!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tauri-mobile&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;The answer to &#34;how do I use Rust on iOS and Android?&#34;&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p&gt;cargo-mobile takes care of generating Xcode and Android Studio project files, building and running on device, generating project boilerplate, and a few other things!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This project is a fork of &lt;a href=&#34;https://github.com/BrainiumLLC/cargo-mobile/&#34;&gt;cargo-mobile&lt;/a&gt;. Tauri uses it as a library dependency instead of using its CLI directly. For more information, please visit &lt;a href=&#34;https://next--tauri.netlify.app/next/mobile/&#34;&gt;Tauri&#39;s mobile guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In the meantime, tauri-mobile contains the template of wry, please follow &lt;a href=&#34;https://github.com/tauri-apps/wry#android--ios&#34;&gt;wry&#39;s instruction&lt;/a&gt; if you want to use with it.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The build will probably take a bit, so feel free to go get a snack or something.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo install --git https://github.com/tauri-apps/tauri-mobile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;tauri-mobile is currently supported on macOS, Linux and Windows. Note that it&#39;s not possible to target iOS on platforms other than macOS! You&#39;ll still get to target Android either way.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll need to have Xcode and the Android SDK/NDK installed. Some of this will ideally be automated in the future, or at least we&#39;ll provide a helpful guide and diagnostics.&lt;/p&gt; &#xA;&lt;p&gt;Whenever you want to update:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo mobile update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To start a new project, all you need to do is make a directory with a cute name, &lt;code&gt;cd&lt;/code&gt; into it, and then run this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo mobile init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After some straightforward prompts, you&#39;ll be asked to select a template pack. Template packs are used to generate project boilerplate, i.e. using the &lt;code&gt;wry&lt;/code&gt; template pack gives you a &lt;a href=&#34;https://github.com/tauri-apps/wry&#34;&gt;wry&lt;/a&gt; project that runs out-of-the-box on desktop and mobile.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;name&lt;/th&gt; &#xA;   &lt;th&gt;info&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;wry&lt;/td&gt; &#xA;   &lt;td&gt;Minimal wry project&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;egui&lt;/td&gt; &#xA;   &lt;td&gt;Full egui + winit + wgpu example based on &lt;a href=&#34;https://github.com/rust-mobile/rust-android-examples&#34;&gt;agdk-egui example&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Template pack contribution is welcomed&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;For all the templates available now, currently &lt;code&gt;bevy&lt;/code&gt; templates do not work and will encounter compile error if you try to build the project.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Once you&#39;ve generated your project, you can run &lt;code&gt;cargo run&lt;/code&gt; as usual to run your app on desktop. However, now you can also do &lt;code&gt;cargo apple run&lt;/code&gt; and &lt;code&gt;cargo android run&lt;/code&gt; to run on connected iOS and Android devices respectively!&lt;/p&gt; &#xA;&lt;p&gt;If you prefer to work in the usual IDEs, you can use &lt;code&gt;cargo apple open&lt;/code&gt; and &lt;code&gt;cargo android open&lt;/code&gt; to open your project in Xcode and Android Studio respectively.&lt;/p&gt; &#xA;&lt;p&gt;For more commands, run &lt;code&gt;cargo mobile&lt;/code&gt;, &lt;code&gt;cargo apple&lt;/code&gt;, or &lt;code&gt;cargo android&lt;/code&gt; to see help information.&lt;/p&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;cargo android run&lt;/code&gt; will build, install and run the app and follows device logs emitted by the app.&lt;/p&gt; &#xA;&lt;p&gt;By default, warn and error logs are displayed. Additional logging of increasing verbosity can be shown by use of the &lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;-vv&lt;/code&gt; options. These also provide more verbose logging for the build and install steps.&lt;/p&gt; &#xA;&lt;p&gt;For fine-grained control of logging, use the &lt;code&gt;--filter&lt;/code&gt; (or &lt;code&gt;-f&lt;/code&gt;) option, which takes an Android log level, such as &lt;code&gt;debug&lt;/code&gt;. This option overrides the default device logging level set by &lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;-vv&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If using the &lt;code&gt;android_logger&lt;/code&gt; crate to handle Rust log messages, &lt;code&gt;trace&lt;/code&gt; logs from Rust are mapped to &lt;code&gt;verbose&lt;/code&gt; logs in Android.&lt;/p&gt;</summary>
  </entry>
</feed>