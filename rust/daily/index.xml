<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-09T01:36:57Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>foyer-rs/foyer</title>
    <updated>2025-03-09T01:36:57Z</updated>
    <id>tag:github.com,2025-03-09:/foyer-rs/foyer</id>
    <link href="https://github.com/foyer-rs/foyer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hybrid in-memory and disk cache in Rust&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/foyer-rs/foyer/main/etc/logo/slogan.min.svg?sanitize=true&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://foyer.rs&#34;&gt; &lt;img src=&#34;https://img.shields.io/website?url=https%3A%2F%2Ffoyer.rs&amp;amp;up_message=foyer.rs&amp;amp;down_message=website&amp;amp;style=for-the-badge&amp;amp;logo=htmx&#34; alt=&#34;docs.rs&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/foyer&#34;&gt; &lt;img src=&#34;https://img.shields.io/crates/v/foyer?style=for-the-badge&amp;amp;logo=crates.io&amp;amp;labelColor=555555&#34; alt=&#34;crates.io&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://docs.rs/foyer&#34;&gt; &lt;img src=&#34;https://img.shields.io/docsrs/foyer?style=for-the-badge&amp;amp;logo=rust&amp;amp;label=docs.rs&amp;amp;labelColor=555555&#34; alt=&#34;docs.rs&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Tutorial &amp;amp; Document:&lt;/b&gt; &lt;a href=&#34;https://foyer.rs&#34;&gt;&lt;b&gt;https://foyer.rs&lt;/b&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;foyer&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/license/foyer-rs/foyer&#34; alt=&#34;GitHub License&#34;&gt; &lt;img src=&#34;https://img.shields.io/crates/msrv/foyer&#34; alt=&#34;Crates.io MSRV&#34;&gt; &lt;a href=&#34;https://github.com/foyer-rs/foyer/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/foyer-rs/foyer/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/foyer-rs/foyer/actions/workflows/license_check.yml&#34;&gt;&lt;img src=&#34;https://github.com/foyer-rs/foyer/actions/workflows/license_check.yml/badge.svg?sanitize=true&#34; alt=&#34;License Checker&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/foyer-rs/foyer&#34;&gt;&lt;img src=&#34;https://codecov.io/github/foyer-rs/foyer/branch/main/graph/badge.svg?token=YO33YQCB70&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;foyer&lt;/em&gt; aims to be an efficient and user-friendly hybrid cache lib in Rust.&lt;/p&gt; &#xA;&lt;p&gt;foyer draws inspiration from &lt;a href=&#34;https://github.com/facebook/cachelib&#34;&gt;Facebook/CacheLib&lt;/a&gt;, a highly-regarded hybrid cache library written in C++, and &lt;a href=&#34;https://github.com/ben-manes/caffeine&#34;&gt;ben-manes/caffeine&lt;/a&gt;, a popular Java caching library, among other projects.&lt;/p&gt; &#xA;&lt;p&gt;However, &lt;em&gt;foyer&lt;/em&gt; is more than just a &lt;em&gt;rewrite in Rust&lt;/em&gt; effort; it introduces a variety of new and optimized features.&lt;/p&gt; &#xA;&lt;p&gt;For more details, please visit foyer&#39;s website: &lt;a href=&#34;https://foyer.rs&#34;&gt;https://foyer.rs&lt;/a&gt; 🥰&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://foyer.rs&#34;&gt;Website&lt;/a&gt; | &lt;a href=&#34;https://foyer.rs/docs/overview&#34;&gt;Tutorial&lt;/a&gt; | &lt;a href=&#34;https://docs.rs/foyer&#34;&gt;API Docs&lt;/a&gt; | &lt;a href=&#34;https://crates.io/crates/foyer&#34;&gt;Crate&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hybrid Cache&lt;/strong&gt;: Seamlessly integrates both in-memory and disk cache for optimal performance and flexibility.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Plug-and-Play Algorithms&lt;/strong&gt;: Empowers users with easily replaceable caching algorithms, ensuring adaptability to diverse use cases.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fearless Concurrency&lt;/strong&gt;: Built to handle high concurrency with robust thread-safe mechanisms, guaranteeing reliable performance under heavy loads.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Zero-Copy In-Memory Cache Abstraction&lt;/strong&gt;: Leveraging Rust&#39;s robust type system, the in-memory cache in foyer achieves a better performance with zero-copy abstraction.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;User-Friendly Interface&lt;/strong&gt;: Offers a simple and intuitive API, making cache integration effortless and accessible for developers of all levels.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Out-of-the-Box Observability&lt;/strong&gt;: Integrate popular observation systems such as Prometheus, Grafana, Opentelemetry, and Jaeger in just &lt;em&gt;ONE&lt;/em&gt; line.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Projects Using &lt;em&gt;foyer&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to open a PR and add your projects here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/risingwavelabs/risingwave&#34;&gt;RisingWave&lt;/a&gt;: SQL stream processing, analytics, and management.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chroma-core/chroma&#34;&gt;Chroma&lt;/a&gt;: Embedding database for LLM apps.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/slatedb/slatedb&#34;&gt;SlateDB&lt;/a&gt;: A cloud native embedded storage engine built on object storage.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;This section only shows briefs. Please visit &lt;a href=&#34;https://foyer.rs&#34;&gt;https://foyer.rs&lt;/a&gt; for more details.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;To use &lt;em&gt;foyer&lt;/em&gt; in your project, add this line to the &lt;code&gt;dependencies&lt;/code&gt; section of &lt;code&gt;Cargo.toml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;foyer = &#34;0.14&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If your project is using the nightly rust toolchain, the &lt;code&gt;nightly&lt;/code&gt; feature needs to be enabled.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;foyer = { version = &#34;0.14&#34;, features = [&#34;nightly&#34;] }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Out-of-the-box In-memory Cache&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;use foyer::{Cache, CacheBuilder};&#xA;&#xA;fn main() {&#xA;    let cache: Cache&amp;lt;String, String&amp;gt; = CacheBuilder::new(16).build();&#xA;&#xA;    let entry = cache.insert(&#34;hello&#34;.to_string(), &#34;world&#34;.to_string());&#xA;    let e = cache.get(&#34;hello&#34;).unwrap();&#xA;&#xA;    assert_eq!(entry.value(), e.value());&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Easy-to-use Hybrid Cache&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;use foyer::{DirectFsDeviceOptions, Engine, HybridCache, HybridCacheBuilder};&#xA;&#xA;#[tokio::main]&#xA;async fn main() -&amp;gt; anyhow::Result&amp;lt;()&amp;gt; {&#xA;    let dir = tempfile::tempdir()?;&#xA;&#xA;    let hybrid: HybridCache&amp;lt;u64, String&amp;gt; = HybridCacheBuilder::new()&#xA;        .memory(64 * 1024 * 1024)&#xA;        .storage(Engine::Large) // use large object disk cache engine only&#xA;        .with_device_options(DirectFsDeviceOptions::new(dir.path()).with_capacity(256 * 1024 * 1024))&#xA;        .build()&#xA;        .await?;&#xA;&#xA;    hybrid.insert(42, &#34;The answer to life, the universe, and everything.&#34;.to_string());&#xA;    assert_eq!(&#xA;        hybrid.get(&amp;amp;42).await?.unwrap().value(),&#xA;        &#34;The answer to life, the universe, and everything.&#34;&#xA;    );&#xA;&#xA;    Ok(())&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Fully Configured Hybrid Cache&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;use std::sync::Arc;&#xA;&#xA;use anyhow::Result;&#xA;use chrono::Datelike;&#xA;use foyer::{&#xA;    DirectFsDeviceOptions, Engine, FifoPicker, HybridCache, HybridCacheBuilder, LargeEngineOptions, LruConfig,&#xA;    RateLimitPicker, RecoverMode, RuntimeOptions, SmallEngineOptions, TokioRuntimeOptions, TombstoneLogConfigBuilder,&#xA;};&#xA;use tempfile::tempdir;&#xA;&#xA;#[tokio::main]&#xA;async fn main() -&amp;gt; Result&amp;lt;()&amp;gt; {&#xA;    let dir = tempdir()?;&#xA;&#xA;    let hybrid: HybridCache&amp;lt;u64, String&amp;gt; = HybridCacheBuilder::new()&#xA;        .memory(1024)&#xA;        .with_shards(4)&#xA;        .with_eviction_config(LruConfig {&#xA;            high_priority_pool_ratio: 0.1,&#xA;        })&#xA;        .with_hash_builder(ahash::RandomState::default())&#xA;        .with_weighter(|_key, value: &amp;amp;String| value.len())&#xA;        .storage(Engine::Mixed(0.1))&#xA;        .with_device_options(&#xA;            DirectFsDeviceOptions::new(dir.path())&#xA;                .with_capacity(64 * 1024 * 1024)&#xA;                .with_file_size(4 * 1024 * 1024),&#xA;        )&#xA;        .with_flush(true)&#xA;        .with_recover_mode(RecoverMode::Quiet)&#xA;        .with_admission_picker(Arc::new(RateLimitPicker::new(100 * 1024 * 1024)))&#xA;        .with_compression(foyer::Compression::Lz4)&#xA;        .with_runtime_options(RuntimeOptions::Separated {&#xA;            read_runtime_options: TokioRuntimeOptions {&#xA;                worker_threads: 4,&#xA;                max_blocking_threads: 8,&#xA;            },&#xA;            write_runtime_options: TokioRuntimeOptions {&#xA;                worker_threads: 4,&#xA;                max_blocking_threads: 8,&#xA;            },&#xA;        })&#xA;        .with_large_object_disk_cache_options(&#xA;            LargeEngineOptions::new()&#xA;                .with_indexer_shards(64)&#xA;                .with_recover_concurrency(8)&#xA;                .with_flushers(2)&#xA;                .with_reclaimers(2)&#xA;                .with_buffer_pool_size(256 * 1024 * 1024)&#xA;                .with_clean_region_threshold(4)&#xA;                .with_eviction_pickers(vec![Box::&amp;lt;FifoPicker&amp;gt;::default()])&#xA;                .with_reinsertion_picker(Arc::new(RateLimitPicker::new(10 * 1024 * 1024)))&#xA;                .with_tombstone_log_config(&#xA;                    TombstoneLogConfigBuilder::new(dir.path().join(&#34;tombstone-log-file&#34;))&#xA;                        .with_flush(true)&#xA;                        .build(),&#xA;                ),&#xA;        )&#xA;        .with_small_object_disk_cache_options(&#xA;            SmallEngineOptions::new()&#xA;                .with_set_size(16 * 1024)&#xA;                .with_set_cache_capacity(64)&#xA;                .with_flushers(2),&#xA;        )&#xA;        .build()&#xA;        .await?;&#xA;&#xA;    hybrid.insert(42, &#34;The answer to life, the universe, and everything.&#34;.to_string());&#xA;    assert_eq!(&#xA;        hybrid.get(&amp;amp;42).await?.unwrap().value(),&#xA;        &#34;The answer to life, the universe, and everything.&#34;&#xA;    );&#xA;&#xA;    let e = hybrid&#xA;        .fetch(20230512, || async {&#xA;            let value = mock().await?;&#xA;            Ok(value)&#xA;        })&#xA;        .await?;&#xA;    assert_eq!(e.key(), &amp;amp;20230512);&#xA;    assert_eq!(e.value(), &#34;Hello, foyer.&#34;);&#xA;&#xA;    hybrid.close().await.unwrap();&#xA;&#xA;    Ok(())&#xA;}&#xA;&#xA;async fn mock() -&amp;gt; Result&amp;lt;String&amp;gt; {&#xA;    let now = chrono::Utc::now();&#xA;    if format!(&#34;{}{}{}&#34;, now.year(), now.month(), now.day()) == &#34;20230512&#34; {&#xA;        return Err(anyhow::anyhow!(&#34;Hi, time traveler!&#34;));&#xA;    }&#xA;    Ok(&#34;Hello, foyer.&#34;.to_string())&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Other Examples&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/foyer-rs/foyer/tree/main/examples/export_metrics_prometheus_hyper.rs&#34;&gt;Export Metrics with &lt;code&gt;prometheus&lt;/code&gt; and &lt;code&gt;hyper&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/foyer-rs/foyer/tree/main/examples/tail_based_tracing.rs&#34;&gt;Tail-based Tracing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More examples and details can be found &lt;a href=&#34;https://github.com/foyer-rs/foyer/tree/main/examples&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Rust Versions&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;foyer&lt;/em&gt; is built against the recent stable release. The minimum supported version is 1.81.0. The current &lt;em&gt;foyer&lt;/em&gt; version is not guaranteed to build on Rust versions earlier than the minimum supported version.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Platforms&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;foyer&lt;/em&gt; is designed to serve on Linux OS, but can still be built on other OS for development.&lt;/p&gt; &#xA;&lt;p&gt;However, other components may not support non-Linux OS.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Component&lt;/th&gt; &#xA;   &lt;th&gt;Linux&lt;/th&gt; &#xA;   &lt;th&gt;MacOS&lt;/th&gt; &#xA;   &lt;th&gt;Windows&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;foyer&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;foyer-bench&lt;/td&gt; &#xA;   &lt;td&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;   &lt;td&gt;✗&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Development State &amp;amp; Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;Currently, &lt;em&gt;foyer&lt;/em&gt; is still under heavy development.&lt;/p&gt; &#xA;&lt;p&gt;The development state and the roadmap can be found in &lt;a href=&#34;https://github.com/orgs/foyer-rs/projects/2&#34;&gt;foyer - Development Roadmap&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions for &lt;em&gt;foyer&lt;/em&gt; are warmly welcomed! 🥰&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t forget to pass &lt;code&gt;make fast&lt;/code&gt; (which means fast check &amp;amp; test) locally before submitting a PR. 🚀&lt;/p&gt; &#xA;&lt;p&gt;If you want to run a broader range of checks locally, run &lt;code&gt;make full&lt;/code&gt;. 🙌&lt;/p&gt; &#xA;&lt;p&gt;Thank you for your contribution~ &lt;img src=&#34;https://raw.githubusercontent.com/foyer-rs/foyer/main/etc/logo/ferris.min.svg?sanitize=true&#34; height=&#34;24px&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#foyer-rs/foyer&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=foyer-rs/foyer&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bee-san/RustScan</title>
    <updated>2025-03-09T01:36:57Z</updated>
    <id>tag:github.com,2025-03-09:/bee-san/RustScan</id>
    <link href="https://github.com/bee-san/RustScan" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🤖 The Modern Port Scanner 🤖&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34; markdown=&#34;1&#34;&gt; &#xA; &lt;p&gt;➡️ &lt;a href=&#34;http://discord.skerritt.blog&#34; title=&#34;Discord blog&#34;&gt;Discord&lt;/a&gt; | &lt;a href=&#34;https://github.com/RustScan/RustScan/wiki/Installation-Guide&#34; title=&#34;Installation Guide Wiki&#34;&gt;Installation Guide&lt;/a&gt; | &lt;a href=&#34;https://github.com/RustScan/RustScan#-usage&#34;&gt;Usage Guide&lt;/a&gt; ⬅️&lt;/p&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/pictures/rustscan.png&#34; height=&#34;400px&#34; width=&#34;400px&#34;&gt; &#xA; &lt;!--&lt;u&gt;**The Modern Port Scanner.**&lt;/u&gt;--&gt; &#xA; &lt;p&gt;&lt;strong&gt;Fast, smart, effective.&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/archlinux/v/extra/x86_64/rustscan?style=plastic&amp;amp;logo=archlinux&amp;amp;link=https%3A%2F%2Farchlinux.org%2Fpackages%2Fextra%2Fx86_64%2Frustscan%2F&#34; alt=&#34;Arch Linux package&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Built%20with-Rust-Purple&#34; alt=&#34;Built with Rust&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/rustscan/rustscan/total?label=GitHub%20Downloads&#34; alt=&#34;GitHub All Releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/crates/d/rustscan?label=Cargo%20Downloads&#34; alt=&#34;Crates.io&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/754001738184392704&#34; alt=&#34;Discord&#34;&gt; &lt;img src=&#34;https://github.com/RustScan/RustScan/actions/workflows/build.yml/badge.svg?branch=master&#34; alt=&#34;Actions&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;🤔 What is this?&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/pictures/fast.gif&#34; alt=&#34;fast&#34; title=&#34;Speed&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Modern Port Scanner. &lt;strong&gt;Find ports quickly (3 seconds at its fastest)&lt;/strong&gt;. Run scripts through our scripting engine (Python, Lua, Shell supported).&lt;/p&gt; &#xA;&lt;h1&gt;🛠️ Installation&lt;/h1&gt; &#xA;&lt;p&gt;You can install RustScan&#39;s binary from our &lt;a href=&#34;https://github.com/RustScan/RustScan/releases&#34;&gt;releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We would prefer you to install with a package manager so it is tested and works for your system.&lt;/p&gt; &#xA;&lt;p&gt;RustScan is in many repositories already. Install it with whatever tools you wish:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/rustscan/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/rustscan.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;RustScan only officially supports Cargo installations, if you want to use that please install Rust and then &lt;code&gt;cargo install rustscan&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Example installations include:&lt;/p&gt; &#xA;&lt;p&gt;MacOS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  brew install rustscan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Arch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  yay rustscan&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;✨ Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Scans all 65k ports in &lt;strong&gt;3 seconds&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Full scripting engine support. Automatically pipe results into Nmap, or use our scripts (or write your own) to do whatever you want.&lt;/li&gt; &#xA; &lt;li&gt;Adaptive learning. RustScan improves the more you use it. No bloated machine learning here, just basic maths.&lt;/li&gt; &#xA; &lt;li&gt;The usuals you would expect. IPv6, CIDR, file input and more.&lt;/li&gt; &#xA; &lt;li&gt;Automatically pipes ports into Nmap.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‼️ Important Links&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&#xA;    &lt;!--Installation Guide--&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&#xA;    &lt;!--Documentation--&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&#xA;    &lt;!--Discord--&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;📖&lt;/span&gt; &lt;a href=&#34;https://github.com/RustScan/RustScan#-full-installation-guide&#34; title=&#34;Full installation guide&#34;&gt;Installation Guide&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;📚&lt;/span&gt; &lt;a href=&#34;https://rustscan.github.io/RustScan/&#34; title=&#34;Rustscan&#34;&gt;Documentation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;🦜&lt;/span&gt; &lt;a href=&#34;http://discord.skerritt.blog&#34; title=&#34;Discord blog&#34;&gt;Discord&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;🙋 Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;📖 &lt;a href=&#34;https://github.com/RustScan/RustScan/wiki/Installation-Guide&#34; title=&#34;Installation Guide Wiki&#34;&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🐋 &lt;a href=&#34;https://github.com/RustScan/RustScan/wiki/Installation-Guide#docker-&#34; title=&#34;Docker Installation Guide Wiki&#34;&gt;Docker Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🦜 &lt;a href=&#34;http://discord.skerritt.blog&#34; title=&#34;Discord blog&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🤸 &lt;a href=&#34;https://github.com/RustScan/RustScan/wiki/Usage&#34; title=&#34;Basic Usage of Rustscan&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;🔭 Why RustScan?&lt;/h1&gt; &#xA;&lt;p&gt;RustScan is a modern take on the port scanner. Sleek &amp;amp; fast. All while providing extensive extendability to you.&lt;/p&gt; &#xA;&lt;p&gt;Not to mention RustScan uses Adaptive Learning to improve itself over time, making it the best port scanner for &lt;strong&gt;you&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🧋 Speed&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/pictures/fast.gif&#34; alt=&#34;fast&#34; title=&#34;Speed&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Speed is guaranteed via RustScan. However, if you want to run a slow scan due to stealth, that is possible too.&lt;/p&gt; &#xA;&lt;p&gt;Firstly, let&#39;s talk code.&lt;/p&gt; &#xA;&lt;p&gt;We have tests that check to see if RustScan is significantly slower than the previous version. If it is, the continuous integration fails, and we can&#39;t commit code to master unless we make it faster.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sharkdp/hyperfine&#34; title=&#34;Hyperfine&#34;&gt;HyperFine&lt;/a&gt; is used to monitor RustScan&#39;s performance over time to answer the question, &#34;Are we getting faster? Are we getting slower?&#34;.&lt;/p&gt; &#xA;&lt;p&gt;Every pull request is reviewed by &lt;strong&gt;one&lt;/strong&gt; person, but more often than not, &lt;strong&gt;two&lt;/strong&gt; people review it. We test it manually and ensure the code doesn&#39;t negatively affect performance.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/RustScan/RustScan/wiki/Increasing-Speed-&amp;amp;-Accuracy&#34; title=&#34;Increasing Speed &amp;amp; Accuracy&#34;&gt;Read more here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;⚙️ Extensible&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/pictures/scripts.gif&#34; alt=&#34;scripts&#34; title=&#34;Scripts&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;em&gt;RustScan piping results into the custom Python script&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;p&gt;RustScan has a new scripting engine that allows anyone to write scripts in most languages. Python, Lua, and Shell are all supported.&lt;/p&gt; &#xA;&lt;p&gt;Want to take your found ports and pipe them into Nmap for further analysis? That&#39;s possible. Want to run &lt;code&gt;smb-enum&lt;/code&gt; if SMB is found open? Possible.&lt;/p&gt; &#xA;&lt;p&gt;The possibilities are endless -- and you can write scripts in whatever language you feel comfortable with.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/RustScan/RustScan/wiki/RustScan-Scripting-Engine&#34; title=&#34;Scripting Engine&#34;&gt;Read more here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🌊 Adaptive&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/pictures/adaptive.gif&#34; alt=&#34;adaptive&#34; title=&#34;Adaptive&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;em&gt;RustScan automatically fine-tunes itself to match the host OS&lt;/em&gt;&lt;/h3&gt; &#xA;&lt;p&gt;RustScan has a cool set of features called &#34;Adaptive Learning&#34;. These features &#34;learn&#34; about the environment you are scanning and how &lt;em&gt;you&lt;/em&gt; use RustScan to &lt;strong&gt;improve itself over time&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We use this umbrella term for any feature that fits this criterion. The list constantly changes, so &lt;a href=&#34;https://github.com/RustScan/RustScan/wiki/Adaptive-Learning&#34; title=&#34;Adaptive Learning&#34;&gt;check out our wiki for more information&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;👩‍🦯 Accessible&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/pictures/accessible.gif&#34; alt=&#34;fast&#34; title=&#34;Fast&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;RustScan is one of the first penetration testing tools that aims to be entirely accessible.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bees.substack.com/p/making-hacking-accessible&#34; title=&#34;Making Hacking Accessible&#34;&gt;Most penetration testing tools are not accessible&lt;/a&gt;, which negatively affects the whole industry.&lt;/p&gt; &#xA;&lt;p&gt;RustScan has continuous integration testing that aims to ensure it is accessible, and we are constantly working on ways to improve our accessibility and ensure &lt;em&gt;everyone&lt;/em&gt; can use RustScan.&lt;/p&gt; &#xA;&lt;h1&gt;🤸 Usage&lt;/h1&gt; &#xA;&lt;p&gt;We have 2 usage guides. &lt;a href=&#34;https://github.com/RustScan/RustScan/wiki/Usage&#34; title=&#34;Basic Usage of Rustscan&#34;&gt;Basic Usage&lt;/a&gt; and &lt;a href=&#34;https://github.com/RustScan/RustScan/wiki/Things-you-may-want-to-do-with-RustScan-but-don&#39;t-understand-how&#34; title=&#34;Things you may want to do with rustscan but don&#39;t know how&#34;&gt;Things you may want to do&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We also have documentation about our config file &lt;a href=&#34;https://github.com/RustScan/RustScan/wiki/Config-File&#34; title=&#34;RustScan Configuration File&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;🎪 Community&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/RustScan/RustScan/wiki/Contributing&#34; title=&#34;Learn how to contribute&#34;&gt;Contributing&lt;/a&gt; Read this to learn how.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors ✨&lt;/h2&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/#contributors-&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/all_contributors-26-orange.svg?style=flat-square&#34; alt=&#34;All Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://skerritt.blog&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/10378052?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bee&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/#infra-beeskerritt&#34; title=&#34;Infrastructure (Hosting, Build-Tools, etc)&#34;&gt;🚇&lt;/a&gt; &lt;a href=&#34;https://github.com/RustScan/RustScan/commits?author=beeskerritt&#34; title=&#34;Tests&#34;&gt;⚠️&lt;/a&gt; &lt;a href=&#34;https://github.com/RustScan/RustScan/commits?author=beesan&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/#design-beeskerritt&#34; title=&#34;Design&#34;&gt;🎨&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://sakiir.ovh&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/9950578?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;SakiiR&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/RustScan/RustScan/commits?author=SakiiR&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/RustScan/RustScan/issues?q=author%3ASakiiR&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/smackhack&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/48143394?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;smackhack&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/#ideas-smackhack&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/#example-smackhack&#34; title=&#34;Examples&#34;&gt;💡&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://bernardoamc.github.io/&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/428984?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bernardo Araujo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/RustScan/RustScan/commits?author=bernardoamc&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/RustScan/RustScan/issues?q=author%3Abernardoamc&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/#design-bernardoamc&#34; title=&#34;Design&#34;&gt;🎨&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Isona&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/11759523?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Izzy Whistlecroft&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/RustScan/RustScan/issues?q=author%3AIsona&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://imlonghao.com&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/4951333?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;imlonghao&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/RustScan/RustScan/issues?q=author%3Aimlonghao&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/#maintenance-imlonghao&#34; title=&#34;Maintenance&#34;&gt;🚧&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/royharoush&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/8113056?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;royharoush&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/#ideas-royharoush&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/#design-royharoush&#34; title=&#34;Design&#34;&gt;🎨&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Atul9&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/3390330?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Atul Bhosale&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/RustScan/RustScan/commits?author=Atul9&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://tgotwig.dev&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/30773779?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Thomas Gotwig&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/#platform-TGotwig&#34; title=&#34;Packaging/porting to new platform&#34;&gt;📦&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/remigourdon&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/2874133?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rémi Gourdon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/RustScan/RustScan/commits?author=remigourdon&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://github.com/RustScan/RustScan/commits?author=remigourdon&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://cmnatic.co.uk&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/4163116?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ben (CMNatic)&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/RustScan/RustScan/commits?author=cmnatic&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/RustScan/RustScan/commits?author=cmnatic&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/#design-cmnatic&#34; title=&#34;Design&#34;&gt;🎨&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Ferryistaken&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/47927670?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alessandro Ferrari&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/#content-Ferryistaken&#34; title=&#34;Content&#34;&gt;🖋&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Phenomite&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/8285537?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Phenomite&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/#content-Phenomite&#34; title=&#34;Content&#34;&gt;🖋&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://supersandro.de/&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/7258858?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sandro&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/#content-SuperSandro2000&#34; title=&#34;Content&#34;&gt;🖋&lt;/a&gt; &lt;a href=&#34;https://github.com/RustScan/RustScan/issues?q=author%3ASuperSandro2000&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt; &lt;a href=&#34;https://github.com/RustScan/RustScan/commits?author=SuperSandro2000&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://swag.lgbt&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/25358963?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Cass&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/#platform-caass&#34; title=&#34;Packaging/porting to new platform&#34;&gt;📦&lt;/a&gt; &lt;a href=&#34;https://github.com/RustScan/RustScan/commits?author=caass&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/RustScan/RustScan/issues?q=author%3Acaass&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/niklasmohrin&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/47574893?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Niklas Mohrin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/RustScan/RustScan/commits?author=niklasmohrin&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://github.com/RustScan/RustScan/commits?author=niklasmohrin&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/RustScan/RustScan/issues?q=author%3Aniklasmohrin&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://liberapay.com/Artem4/&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/5614476?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Artem Polishchuk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/#platform-tim77&#34; title=&#34;Packaging/porting to new platform&#34;&gt;📦&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/buermarc&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/44375277?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;buermarc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/RustScan/RustScan/commits?author=buermarc&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bergabman&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/44554109?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;bergabman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/RustScan/RustScan/commits?author=bergabman&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/RustScan/RustScan/issues?q=author%3Abergabman&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/#design-bergabman&#34; title=&#34;Design&#34;&gt;🎨&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/dmitris&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/31205?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dmitry Savintsev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/RustScan/RustScan/commits?author=dmitris&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/bofh69&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/1444315?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sebastian Andersson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/RustScan/RustScan/commits?author=bofh69&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/mattcorbin&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/6537765?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matt Corbin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/RustScan/RustScan/commits?author=mattcorbin&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://rootsploit.com&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/67270834?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;RootSploit&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bee-san/RustScan/master/#blog-rootsploit&#34; title=&#34;Blogposts&#34;&gt;📝&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/eiffel-fl&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/12171754?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;eiffel-fl&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/RustScan/RustScan/commits?author=eiffel-fl&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/u5surf&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/14180225?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Y.Horie&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/RustScan/RustScan/commits?author=u5surf&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/okrplay&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/32576280?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Oskar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/RustScan/RustScan/commits?author=okrplay&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/RustScan/RustScan/commits?author=okrplay&#34; title=&#34;Tests&#34;&gt;⚠️&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-enable --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt; &#xA;&lt;!--Links--&gt; &#xA;&lt;!--Pictures--&gt;</summary>
  </entry>
</feed>