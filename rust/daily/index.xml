<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-15T01:35:20Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>renoise/pattrns</title>
    <updated>2025-07-15T01:35:20Z</updated>
    <id>tag:github.com,2025-07-15:/renoise/pattrns</id>
    <link href="https://github.com/renoise/pattrns" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Experimental imperative-style music sequence generator engine&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;pattrns&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;pattrns&lt;/strong&gt;&lt;/em&gt; is an experimental imperative-style music sequence generator engine.&lt;/p&gt; &#xA;&lt;p&gt;It allows you to programmatically create music sequences either in plain &lt;a href=&#34;https://www.rust-lang.org/&#34;&gt;Rust&lt;/a&gt; as library (&lt;em&gt;static, compiled&lt;/em&gt;) or in &lt;a href=&#34;https://www.lua.org/&#34;&gt;Lua&lt;/a&gt; as a scripting engine (&lt;em&gt;dynamic, interpreted&lt;/em&gt;). So it&#39;s also suitable for &lt;a href=&#34;https://github.com/pjagielski/awesome-live-coding-music&#34;&gt;live coding music&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In addition to its imperative event generator approach, it also supports the creation of musical events using &lt;a href=&#34;https://tidalcycles.org/&#34;&gt;tidalcycle&lt;/a&gt;&#39;s mini-notation.&lt;/p&gt; &#xA;&lt;p&gt;This crate only deals with the &lt;em&gt;generation of raw musical events&lt;/em&gt;. It does not generate audio. You must use an application with built-in support for pattrns to use it.&lt;/p&gt; &#xA;&lt;h2&gt;Conceptional Overview&lt;/h2&gt; &#xA;&lt;p&gt;pattrns generates musical sequences using three distinct components, stages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Rhythm&lt;/strong&gt;: (&lt;code&gt;pulse&lt;/code&gt; in scripts) dynamic pulse generator to define a rhythmical pulse train.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Gate&lt;/strong&gt;: (&lt;code&gt;gate&lt;/code&gt; in scripts) optional pulse filter between rhythm and event emitter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Emitter&lt;/strong&gt;: (&lt;code&gt;event&lt;/code&gt; in scripts), dynamic note or parameter event generator which gets triggered by the pulse train.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;By separating the rhythmical from the tonal part of a musical sequence, each part can be freely modified, composed and (re)combined as it fits.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation &amp;amp; Guides&lt;/h2&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://renoise.github.io/pattrns/&#34;&gt;Scripting Book&lt;/a&gt;. It contains an introduction, guides, full Lua API documentation and bunch of script examples.&lt;/p&gt; &#xA;&lt;p&gt;The Rust backend uses standard Rust documentation features. The docs are currently not hosted online (yet), but you can generate them locally via &lt;code&gt;cargo doc --open&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Applications&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pattrns.renoise.com&#34;&gt;&lt;code&gt;Online Playground&lt;/code&gt;&lt;/a&gt; is a simple browser based playground app. It allows you to learn and test how pattrns works.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.renoise.com&#34;&gt;&lt;code&gt;Renoise&lt;/code&gt;&lt;/a&gt; uses pattrns in its &lt;a href=&#34;https://tutorials.renoise.com/wiki/Phrase_Editor&#34;&gt;phrase editor&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Integration Examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/renoise/pattrns/master/examples/play.rs&#34;&gt;&lt;code&gt;examples/play.rs&lt;/code&gt;&lt;/a&gt; demonstrates how to use patterns using only Rust: it defines and plays a little music thing. The content can only be changed at compile time.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/renoise/pattrns/master/examples/play-script.rs&#34;&gt;&lt;code&gt;examples/play-script.rs&lt;/code&gt;&lt;/a&gt; is an example using the Lua API: it also defines and plays a little music thing, but its content can be added/removed and changed on the fly to do some basic live music hacking.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/unlessgames&#34;&gt;unlessgames&lt;/a&gt; for adding the Tidal Cycles mini-notation support.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Patches are welcome! Please fork the latest git repository and create a feature or bugfix branch.&lt;/p&gt; &#xA;&lt;h2&gt;Licence&lt;/h2&gt; &#xA;&lt;p&gt;pattrns is distributed under the terms of the &lt;a href=&#34;https://www.gnu.org/licenses/agpl-3.0.html&#34;&gt;GNU Affero General Public License V3&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>