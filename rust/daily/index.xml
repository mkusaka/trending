<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-09T01:34:14Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>vadimcn/codelldb</title>
    <updated>2024-11-09T01:34:14Z</updated>
    <id>tag:github.com,2024-11-09:/vadimcn/codelldb</id>
    <link href="https://github.com/vadimcn/codelldb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A native debugger extension for VSCode based on LLDB&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Conditional breakpoints, function breakpoints, logpoints,&lt;/li&gt; &#xA; &lt;li&gt;Hardware data access breakpoints (watchpoints),&lt;/li&gt; &#xA; &lt;li&gt;Launch debuggee in integrated or external terminal,&lt;/li&gt; &#xA; &lt;li&gt;Disassembly view with instruction-level stepping,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/updates/v1_46#_step-into-targets&#34;&gt;Step Into Targets&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Caller exclusion for breakpoints.&lt;/li&gt; &#xA; &lt;li&gt;Memory view.&lt;/li&gt; &#xA; &lt;li&gt;Loaded modules view,&lt;/li&gt; &#xA; &lt;li&gt;Python scripting,&lt;/li&gt; &#xA; &lt;li&gt;HTML rendering for advanced visualizations,&lt;/li&gt; &#xA; &lt;li&gt;Workspace-level defaults for launch configurations,&lt;/li&gt; &#xA; &lt;li&gt;Remote debugging,&lt;/li&gt; &#xA; &lt;li&gt;Reverse debugging (experimental, requires a compatible backend).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For full details please see &lt;a href=&#34;https://raw.githubusercontent.com/vadimcn/codelldb/master/MANUAL.md&#34;&gt;User&#39;s Manual&lt;/a&gt;.&lt;br&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Languages&lt;/h1&gt; &#xA;&lt;p&gt;The primary focus of this project are the C++ and Rust languages, for which CodeLLDB includes built-in visualizers for vectors, strings, maps, and other standard library types.&lt;br&gt; That said, it is usable with most other compiled languages whose compiler generates compatible debugging information, such as Ada, Fortran, Kotlin Native, Nim, Objective-C, Pascal, &lt;a href=&#34;https://github.com/vadimcn/codelldb/wiki/Swift&#34;&gt;Swift&lt;/a&gt; and Zig.&lt;/p&gt; &#xA;&lt;h1&gt;Supported Platforms&lt;/h1&gt; &#xA;&lt;h2&gt;Host&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux with glibc 2.18+ for x86_64, aarch64 or armhf.&lt;/li&gt; &#xA; &lt;li&gt;MacOS X 10.10+ for x86_64 and 11.0+ for arm64.&lt;/li&gt; &#xA; &lt;li&gt;Windows 10 and 11 for x86_64. &lt;a href=&#34;https://github.com/vadimcn/codelldb/wiki/Windows&#34;&gt;See Windows notes in wiki!&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Target&lt;/h2&gt; &#xA;&lt;p&gt;CodeLLDB supports AArch64, ARM, AVR, MSP430, RISCV, X86 architectures and may be used to debug on embedded platforms via &lt;a href=&#34;https://raw.githubusercontent.com/vadimcn/codelldb/master/MANUAL.md#remote-debugging&#34;&gt;remote debugging&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;More information&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vadimcn/codelldb/master/MANUAL.md&#34;&gt;CodeLLDB User&#39;s Manual&lt;/a&gt; - how to use this extension.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/editor/debugging&#34;&gt;Debugging in VS Code&lt;/a&gt; - if you are new to VSCode debugging.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lldb.llvm.org/use/tutorial.html&#34;&gt;LLDB Tutorial&lt;/a&gt; - all of LLDB&#39;s CLI commands and scripting features may be used in CodeLLDB.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vadimcn/codelldb/wiki&#34;&gt;Wiki pages&lt;/a&gt; - &lt;a href=&#34;https://github.com/vadimcn/codelldb/wiki/Troubleshooting&#34;&gt;troubleshooting&lt;/a&gt; and other tips and tricks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vadimcn/codelldb/discussions&#34;&gt;Discussions&lt;/a&gt; - for questions and discussions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Screenshots&lt;/h1&gt; &#xA;&lt;p&gt;C++ debugging with data visualization (&lt;a href=&#34;https://github.com/vadimcn/codelldb/wiki/Data-visualization&#34;&gt;Howto&lt;/a&gt;):&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/vadimcn/codelldb/master/images/plotting.png&#34; alt=&#34;source&#34;&gt; &lt;br&gt; &lt;br&gt; Rust debugging:&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/vadimcn/codelldb/master/images/source.png&#34; alt=&#34;source&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>