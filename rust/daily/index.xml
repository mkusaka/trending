<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-20T01:36:55Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>phiresky/ripgrep-all</title>
    <updated>2024-09-20T01:36:55Z</updated>
    <id>tag:github.com,2024-09-20:/phiresky/ripgrep-all</id>
    <link href="https://github.com/phiresky/ripgrep-all" rel="alternate"></link>
    <summary type="html">&lt;p&gt;rga: ripgrep, but also search in PDFs, E-Books, Office documents, zip, tar.gz, etc.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;rga: ripgrep, but also search in PDFs, E-Books, Office documents, zip, tar.gz, etc.&lt;/h1&gt; &#xA;&lt;p&gt;rga is a line-oriented search tool that allows you to look for a regex in a multitude of file types. rga wraps the awesome &lt;a href=&#34;https://github.com/BurntSushi/ripgrep&#34;&gt;ripgrep&lt;/a&gt; and enables it to search in pdf, docx, sqlite, jpg, movie subtitles (mkv, mp4), etc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/phiresky/ripgrep-all&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/repo-github.com%2Fphiresky%2Fripgrep--all-informational.svg?sanitize=true&#34; alt=&#34;github repo&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/ripgrep-all&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/ripgrep-all.svg?sanitize=true&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.reddit.com/r/rustjerk/top/?sort=top&amp;amp;t=all&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/concurrency-fearless-success.svg?sanitize=true&#34; alt=&#34;fearless concurrency&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more detail, see this introductory blogpost: &lt;a href=&#34;https://phiresky.github.io/blog/2019/rga--ripgrep-for-zip-targz-docx-odt-epub-jpg/&#34;&gt;https://phiresky.github.io/blog/2019/rga--ripgrep-for-zip-targz-docx-odt-epub-jpg/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;rga will recursively descend into archives and match text in every file type it knows.&lt;/p&gt; &#xA;&lt;p&gt;Here is an &lt;a href=&#34;https://github.com/phiresky/ripgrep-all/tree/master/exampledir/demo&#34;&gt;example directory&lt;/a&gt; with different file types:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;demo/&#xA;├── greeting.mkv&#xA;├── hello.odt&#xA;├── hello.sqlite3&#xA;└── somearchive.zip&#xA;├── dir&#xA;│ ├── greeting.docx&#xA;│ └── inner.tar.gz&#xA;│ └── greeting.pdf&#xA;└── greeting.epub&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/phiresky/ripgrep-all/master/doc/demodir.png&#34; alt=&#34;rga output&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Integration with fzf&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/phiresky/ripgrep-all/master/doc/rga-fzf.gif&#34; alt=&#34;rga-fzf&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/phiresky/ripgrep-all/wiki/fzf-Integration&#34;&gt;the wiki&lt;/a&gt; for instructions of integrating rga with fzf.&lt;/p&gt; &#xA;&lt;h2&gt;INSTALLATION&lt;/h2&gt; &#xA;&lt;p&gt;Linux x64, macOS and Windows binaries are available &lt;a href=&#34;https://github.com/phiresky/ripgrep-all/releases/latest&#34;&gt;in GitHub Releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;h4&gt;Arch Linux&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;pacman -S ripgrep-all&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Nix&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;nix-env -iA nixpkgs.ripgrep-all&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Debian-based&lt;/h4&gt; &#xA;&lt;p&gt;download the &lt;a href=&#34;https://github.com/phiresky/ripgrep-all/releases/latest&#34;&gt;rga binary&lt;/a&gt; and get the dependencies like this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;apt install ripgrep pandoc poppler-utils ffmpeg&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If ripgrep is not included in your package sources, get it from &lt;a href=&#34;https://github.com/BurntSushi/ripgrep/releases&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;rga will search for all binaries it calls in $PATH and the directory itself is in.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;Note that installing via &lt;a href=&#34;https://chocolatey.org/packages/ripgrep-all&#34;&gt;chocolatey&lt;/a&gt; or &lt;a href=&#34;https://github.com/ScoopInstaller/Main/raw/master/bucket/rga.json&#34;&gt;scoop&lt;/a&gt; is the only supported download method. If you download the binary from releases manually, you will not get the dependencies (for example pdftotext from poppler).&lt;/p&gt; &#xA;&lt;p&gt;If you get an error like &lt;code&gt;VCRUNTIME140.DLL could not be found&lt;/code&gt;, you need to install &lt;a href=&#34;https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads&#34;&gt;vc_redist.x64.exe&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Chocolatey&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;choco install ripgrep-all&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Scoop&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;scoop install rga&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Homebrew/Linuxbrew&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;rga&lt;/code&gt; can be installed with &lt;a href=&#34;https://formulae.brew.sh/formula/ripgrep-all#default&#34;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;brew install rga&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To install the dependencies that are each not strictly necessary but very useful:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;brew install pandoc poppler ffmpeg&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;MacPorts&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;rga&lt;/code&gt; can also be installed on macOS via &lt;a href=&#34;https://ports.macports.org/port/ripgrep-all/&#34;&gt;MacPorts&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sudo port install ripgrep-all&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Compile from source&lt;/h3&gt; &#xA;&lt;p&gt;rga should compile with stable Rust (v1.75.0+, check with &lt;code&gt;rustc --version&lt;/code&gt;). To build it, run the following (or the equivalent in your OS):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;~$ apt install build-essential pandoc poppler-utils ffmpeg ripgrep cargo&#xA;~$ cargo install --locked ripgrep_all&#xA;~$ rga --version    # this should work now&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Available Adapters&lt;/h2&gt; &#xA;&lt;p&gt;rga works with &lt;em&gt;adapters&lt;/em&gt; that adapt various file formats. It comes with a few adapters integrated:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rga --rga-list-adapters&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also add &lt;strong&gt;custom adapters&lt;/strong&gt;. See &lt;a href=&#34;https://github.com/phiresky/ripgrep-all/wiki&#34;&gt;the wiki&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;!-- this part generated by update-readme.sh --&gt; &#xA;&lt;p&gt;Adapters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;pandoc&lt;/strong&gt; Uses pandoc to convert binary/unreadable text documents to plain markdown-like text Runs: pandoc --from= --to=plain --wrap=none --markdown-headings=atx&lt;br&gt; Extensions: .epub, .odt, .docx, .fb2, .ipynb, .html, .htm&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;poppler&lt;/strong&gt; Uses pdftotext (from poppler-utils) to extract plain text from PDF files Runs: pdftotext - -&lt;br&gt; Extensions: .pdf&lt;br&gt; Mime Types: application/pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;postprocpagebreaks&lt;/strong&gt; Adds the page number to each line for an input file that specifies page breaks as ascii page break character. Mainly to be used internally by the poppler adapter.&lt;br&gt; Extensions: .asciipagebreaks&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ffmpeg&lt;/strong&gt; Uses ffmpeg to extract video metadata/chapters, subtitles, lyrics, and other metadata&lt;br&gt; Extensions: .mkv, .mp4, .avi, .mp3, .ogg, .flac, .webm&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;zip&lt;/strong&gt; Reads a zip file as a stream and recurses down into its contents&lt;br&gt; Extensions: .zip, .jar&lt;br&gt; Mime Types: application/zip&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;decompress&lt;/strong&gt; Reads compressed file as a stream and runs a different extractor on the contents.&lt;br&gt; Extensions: .als, .bz2, .gz, .tbz, .tbz2, .tgz, .xz, .zst&lt;br&gt; Mime Types: application/gzip, application/x-bzip, application/x-xz, application/zstd&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;tar&lt;/strong&gt; Reads a tar file as a stream and recurses down into its contents&lt;br&gt; Extensions: .tar&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;sqlite&lt;/strong&gt; Uses sqlite bindings to convert sqlite databases into a simple plain text format&lt;br&gt; Extensions: .db, .db3, .sqlite, .sqlite3&lt;br&gt; Mime Types: application/x-sqlite3&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following adapters are disabled by default, and can be enabled using &#39;--rga-adapters=+foo,bar&#39;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;mail&lt;/strong&gt; Reads mailbox/mail files and runs extractors on the contents and attachments.&lt;br&gt; Extensions: .mbox, .mbx, .eml&lt;br&gt; Mime Types: application/mbox, message/rfc822&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;USAGE:&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;rga [RGA OPTIONS] [RG OPTIONS] PATTERN [PATH ...]&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;FLAGS:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;--rga-accurate&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Use more accurate but slower matching by mime type&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;By default, rga will match files using file extensions. Some programs, such as sqlite3, don&#39;t care about the file extension at all, so users sometimes use any or no extension at all. With this flag, rga will try to detect the mime type of input files using the magic bytes (similar to the `file` utility), and use that to choose the adapter. Detection is only done on the first 8KiB of the file, since we can&#39;t always seek on the input (in archives).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;--rga-no-cache&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Disable caching of results&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;By default, rga caches the extracted text, if it is small enough, to a database in ${XDG_CACHE_DIR-~/.cache}/ripgrep-all on Linux, &lt;em&gt;~/Library/Caches/ripgrep-all&lt;/em&gt; on macOS, or C:\Users\username\AppData\Local\ripgrep-all on Windows. This way, repeated searches on the same set of files will be much faster. If you pass this flag, all caching will be disabled.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;-h&lt;/strong&gt;, &lt;strong&gt;--help&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Prints help information&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;--rga-list-adapters&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;List all known adapters&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;--rga-print-config-schema&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Print the JSON Schema of the configuration file&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;--rg-help&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Show help for ripgrep itself&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;--rg-version&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Show version of ripgrep itself&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;-V&lt;/strong&gt;, &lt;strong&gt;--version&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Prints version information&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;OPTIONS:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;--rga-adapters=&lt;/strong&gt;&amp;lt;adapters&amp;gt;...&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Change which adapters to use and in which priority order (descending)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&#34;foo,bar&#34; means use only adapters foo and bar. &#34;-bar,baz&#34; means use all default adapters except for bar and baz. &#34;+bar,baz&#34; means use all default adapters and also bar and baz.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;--rga-cache-compression-level=&lt;/strong&gt;&amp;lt;compression-level&amp;gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;ZSTD compression level to apply to adapter outputs before storing in cache db&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Ranges from 1 - 22 [default: 12]&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;--rga-config-file=&lt;/strong&gt;&amp;lt;config-file-path&amp;gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;--rga-max-archive-recursion=&lt;/strong&gt;&amp;lt;max-archive-recursion&amp;gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Maximum nestedness of archives to recurse into [default: 5]&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;--rga-cache-max-blob-len=&lt;/strong&gt;&amp;lt;max-blob-len&amp;gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Max compressed size to cache&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Longest byte length (after compression) to store in cache. Longer adapter outputs will not be cached and recomputed every time.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Allowed suffixes on command line: k M G [default: 2000000]&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;--rga-cache-path=&lt;/strong&gt;&amp;lt;path&amp;gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Path to store cache db [default: /home/phire/.cache/ripgrep-all]&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;-h&lt;/strong&gt; shows a concise overview, &lt;strong&gt;--help&lt;/strong&gt; shows more detail and advanced options.&lt;/p&gt; &#xA;&lt;p&gt;All other options not shown here are passed directly to rg, especially [PATTERN] and [PATH ...]&lt;/p&gt; &#xA;&lt;!-- end of part generated by update-readme.sh --&gt; &#xA;&lt;h2&gt;Config&lt;/h2&gt; &#xA;&lt;p&gt;The config file location leverage the mechanisms defined by&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;the &lt;a href=&#34;https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html&#34;&gt;XDG base directory&lt;/a&gt; and the &lt;a href=&#34;https://www.freedesktop.org/wiki/Software/xdg-user-dirs/&#34;&gt;XDG user directory&lt;/a&gt; specifications on Linux (ex: &lt;code&gt;~/.config/ripgrep-all/config.jsonc&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;the &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378457.aspx&#34;&gt;Known Folder&lt;/a&gt; API on Windows (ex: &lt;code&gt;C:\Users\Alice\AppData\Roaming\ripgrep-all/config.jsonc&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;the &lt;a href=&#34;https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/FileSystemOverview/FileSystemOverview.html#//apple_ref/doc/uid/TP40010672-CH2-SW6&#34;&gt;Standard Directories&lt;/a&gt; guidelines on macOS (ex: &lt;code&gt;~/Library/Application Support/ripgrep-all/config.jsonc&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;To enable debug logging:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export RUST_LOG=debug&#xA;export RUST_BACKTRACE=1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also remember to disable caching with &lt;code&gt;--rga-no-cache&lt;/code&gt; or clear the cache (&lt;code&gt;~/Library/Caches/rga&lt;/code&gt; on macOS, &lt;code&gt;~/.cache/rga&lt;/code&gt; on other Unixes, or &lt;code&gt;C:\Users\username\AppData\Local\rga&lt;/code&gt; on Windows) to debug the adapters.&lt;/p&gt; &#xA;&lt;h3&gt;Nix and Direnv&lt;/h3&gt; &#xA;&lt;p&gt;You can use the provided &lt;a href=&#34;https://raw.githubusercontent.com/phiresky/ripgrep-all/master/flake.nix&#34;&gt;&lt;code&gt;flake.nix&lt;/code&gt;&lt;/a&gt; to setup all build- and run-time dependencies:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Enable &lt;a href=&#34;https://wiki.nixos.org/wiki/Flakes&#34;&gt;Flakes&lt;/a&gt; in your Nix configuration.&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;a href=&#34;https://direnv.net/&#34;&gt;&lt;code&gt;direnv&lt;/code&gt;&lt;/a&gt; to your profile: &lt;code&gt;nix profile install nixpkgs#direnv&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd&lt;/code&gt; into the directory where you have cloned this directory.&lt;/li&gt; &#xA; &lt;li&gt;Allow use of &lt;a href=&#34;https://raw.githubusercontent.com/phiresky/ripgrep-all/master/.envrc&#34;&gt;&lt;code&gt;.envrc&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;direnv allow&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;After the dependencies have been installed, your shell will now have all of the necessary development dependencies.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>achristmascarl/rainfrog</title>
    <updated>2024-09-20T01:36:55Z</updated>
    <id>tag:github.com,2024-09-20:/achristmascarl/rainfrog</id>
    <link href="https://github.com/achristmascarl/rainfrog" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🐸 a database management tui for postgres&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🐸 rainfrog&lt;/h1&gt; &#xA;&lt;p&gt;a database management tui for postgres&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/achristmascarl/rainfrog/main/demo.gif&#34; alt=&#34;rainfrog demo&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] rainfrog is currently in beta.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;the goal for rainfrog is to provide a lightweight, terminal-based alternative to pgadmin/dbeaver.&lt;/p&gt; &#xA;&lt;h2&gt;features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;efficient navigation via vim-like keybindings and mouse controls&lt;/li&gt; &#xA; &lt;li&gt;query editor with keyword highlighting and session history&lt;/li&gt; &#xA; &lt;li&gt;quickly copy data, filter tables, and switch between schemas&lt;/li&gt; &#xA; &lt;li&gt;shortcuts to view table metadata and properties&lt;/li&gt; &#xA; &lt;li&gt;cross-platform (macOS, linux, windows, android via termux)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;why &#34;rainfrog&#34;?&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.sciencedaily.com/releases/2019/06/190604131157.htm&#34;&gt;frogs find refuge in elephant tracks&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;this software is currently under active development; expect breaking changes, and use at your own risk. it is not recommended to use this tool with write access on a production database.&lt;/p&gt; &#xA;&lt;h2&gt;installation&lt;/h2&gt; &#xA;&lt;h3&gt;cargo&lt;/h3&gt; &#xA;&lt;p&gt;after installing rust (recommended to do so via &lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;rustup&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo install rainfrog&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;arch linux&lt;/h3&gt; &#xA;&lt;p&gt;arch linux users can install from the &lt;a href=&#34;https://archlinux.org/packages/extra/x86_64/rainfrog&#34;&gt;official repositories&lt;/a&gt; using &lt;a href=&#34;https://wiki.archlinux.org/title/pacman&#34;&gt;pacman&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pacman -S rainfrog&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;termux&lt;/h3&gt; &#xA;&lt;p&gt;if you are using &lt;a href=&#34;https://termux.dev/&#34;&gt;termux&lt;/a&gt;, you&#39;ll need to install rust via their package manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pkg install rust&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and then make sure to install with termux features (and disable default features):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo install rainfrog --features termux --no-default-features&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;install script&lt;/h3&gt; &#xA;&lt;p&gt;there is a simple install script that assists in downloading and unpacking a binary from the release page to &lt;code&gt;~/.local/bin/&lt;/code&gt;, which you might want to add to your &lt;code&gt;PATH&lt;/code&gt; variable if it isn&#39;t already there. you&#39;ll need to select which binary is appropriate for your system (if you&#39;re not sure, you can find out by installing rust and running &lt;code&gt;rustc -vV&lt;/code&gt; to see the &#34;host&#34; target), and the script also needs &lt;a href=&#34;https://github.com/jqlang/jq&#34;&gt;jq&lt;/a&gt; and &lt;a href=&#34;https://github.com/junegunn/fzf&#34;&gt;fzf&lt;/a&gt; installed to run.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -LSsf https://raw.githubusercontent.com/achristmascarl/rainfrog/main/install.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;release page binaries&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;manually download and unpack the appropriate binary for your os from the latest &lt;a href=&#34;https://github.com/achristmascarl/rainfrog/releases&#34;&gt;release&lt;/a&gt; (if you&#39;re not sure which binary to pick, you can find out by installing rust and running &lt;code&gt;rustc -vV&lt;/code&gt; to see the &#34;host&#34; target)&lt;/li&gt; &#xA; &lt;li&gt;move the binary to a folder in your &lt;code&gt;PATH&lt;/code&gt; environment variable&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;usage&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] the &lt;code&gt;connection_url&lt;/code&gt; must include your credentials for accessing the database (ex. &lt;code&gt;postgres://username:password@localhost:5432/postgres&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rainfrog --url $(connection_url)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;docker run&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run --platform linux/amd64 -it --rm --name rainfrog \&#xA;  --add-host host.docker.internal:host-gateway \&#xA;  -e username=&#34;&amp;lt;username&amp;gt;&#34; \&#xA;  -e password=&#34;&amp;lt;password&amp;gt;&#34; \&#xA;  -e hostname=&#34;host.docker.internal&#34; \&#xA;  -e db_port=&#34;&amp;lt;db_port&amp;gt;&#34; \&#xA;  -e db_name=&#34;&amp;lt;db_name&amp;gt;&#34; achristmascarl/rainfrog:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;keybindings&lt;/h2&gt; &#xA;&lt;h3&gt;general&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;keybinding&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Ctrl+c&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;quit program&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Alt+1&lt;/code&gt;, &lt;code&gt;Ctrl+k&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;change focus to menu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Alt+2&lt;/code&gt;, &lt;code&gt;Ctrl+j&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;change focus to query editor&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Alt+3&lt;/code&gt;, &lt;code&gt;Ctrl+h&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;change focus to query history&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Alt+4&lt;/code&gt;, &lt;code&gt;Ctrl+g&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;change focus to results&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Tab&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;cycle focus forwards&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Shift+Tab&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;cycle focus backwards&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;q&lt;/code&gt;, &lt;code&gt;Alt+q&lt;/code&gt; in query editor&lt;/td&gt; &#xA;   &lt;td&gt;abort current query&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;menu (list of schemas and tables)&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;keybinding&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;j&lt;/code&gt;, &lt;code&gt;↓&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;move selection down by 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;k&lt;/code&gt;, &lt;code&gt;↑&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;move selection up by 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;g&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;jump to top of current list&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;G&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;jump to bottom of current list&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;h&lt;/code&gt;, &lt;code&gt;←&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;focus on schemas (if more than 1)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;l&lt;/code&gt;, &lt;code&gt;→&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;focus on tables&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;filter tables&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Esc&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;clear search&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Backspace&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;focus on tables&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Enter&lt;/code&gt; when searching&lt;/td&gt; &#xA;   &lt;td&gt;focus on tables&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Enter&lt;/code&gt; with selected schema&lt;/td&gt; &#xA;   &lt;td&gt;focus on tables&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Enter&lt;/code&gt; with selected table&lt;/td&gt; &#xA;   &lt;td&gt;preview table (100 rows)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;R&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;reload schemas and tables&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;query editor&lt;/h3&gt; &#xA;&lt;p&gt;Keybindings may not behave exactly like Vim. The full list of active Vim keybindings in Rainfrog can be found at &lt;a href=&#34;https://raw.githubusercontent.com/achristmascarl/rainfrog/main/src/vim.rs&#34;&gt;vim.rs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Keybinding&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Alt+Enter&lt;/code&gt;, &lt;code&gt;F5&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Execute query&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;j&lt;/code&gt;, &lt;code&gt;↓&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move cursor down 1 line&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;k&lt;/code&gt;, &lt;code&gt;↑&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move cursor up 1 line&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;h&lt;/code&gt;, &lt;code&gt;←&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move cursor left 1 char&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;l&lt;/code&gt;, &lt;code&gt;→&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move cursor right 1 char&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;w&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move cursor to next start of word&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;e&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move cursor to next end of word&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;b&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move cursor to previous start of word&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move cursor to beginning of line&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;$&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move cursor to end of line&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;gg&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Jump to top of editor&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;G&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Jump to bottom of current list&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Esc&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Return to normal mode&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;i&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enter insert (edit) mode&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;I&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enter insert mode at beginning of line&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;A&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enter insert mode at end of line&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;o&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Insert new line below and enter insert&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;v&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enter visual (select) mode&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;V&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enter visual mode and select line&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;r&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Begin replace operation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;y&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Begin yank (copy) operation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;x&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Begin cut operation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;p&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Paste from clipboard&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;u&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Undo&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Ctrl+r&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Redo&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Ctrl+e&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Scroll down&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Ctrl+y&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Scroll up&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;query history&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;keybinding&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;j&lt;/code&gt;, &lt;code&gt;↓&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;move selection down by 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;k&lt;/code&gt;, &lt;code&gt;↑&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;move selection up by 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;g&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;jump to top of list&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;G&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;jump to bottom of list&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;y&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;copy selected query&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;I&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;edit selected query in editor&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;D&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;delete all history&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;results&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;keybinding&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;j&lt;/code&gt;, &lt;code&gt;↓&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;scroll down by 1 row&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;k&lt;/code&gt;, &lt;code&gt;↑&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;scroll up by 1 row&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;h&lt;/code&gt;, &lt;code&gt;←&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;scroll left by 1 cell&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;l&lt;/code&gt;, &lt;code&gt;→&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;scroll right by 1 cell&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;b&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;scroll right by 1 cell&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;e&lt;/code&gt;, &lt;code&gt;w&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;scroll left by 1 column&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;{&lt;/code&gt;, &lt;code&gt;PageUp&lt;/code&gt;, &lt;code&gt;Ctrl+b&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;jump up one page&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;}&lt;/code&gt;, &lt;code&gt;PageDown&lt;/code&gt;, &lt;code&gt;Ctrl+f&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;jump down one page&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;g&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;jump to top of table&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;G&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;jump to bottom of table&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;jump to first column&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;$&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;jump to last column&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;v&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;select individual field&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;V&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;select row&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Enter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;change selection mode inwards&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Backspace&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;change selection mode outwards&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;y&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;copy selection&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Esc&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stop selecting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;roadmap&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;🏁 v0.1.0 – alpha&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; scrollable table&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; cancellable async querying (spawn tokio task)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; menu list with tables and schemas (collapsable)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; tui-textarea for query editor&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; basic tui-textarea vim keybindings&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; handle custom types / enums&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; display rows affected&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; confirm before delete/drop&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; table selection and yanking&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; multi-line pasting&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; editor os clipboard support&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; handle mouse events&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; keybindings hints at bottom&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; branch protection&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;🏁 v0.2.0 – beta&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; vhs explainer gifs&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; upgrade ratatui and tui-textarea&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; shortcuts to view indexes, keys, etc.&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; performant syntax highlighting&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; session history&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; changelog, release script&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; handle explain / analyze output&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; show query duration&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; install script for bins&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;now that rainfrog is in beta, check out the &lt;a href=&#34;https://github.com/achristmascarl/rainfrog/issues&#34;&gt;issues tab&lt;/a&gt; for planned features&lt;/p&gt; &#xA;&lt;h2&gt;known issues and limitations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;in addition to the experience being subpar if the terminal window is too small, if the terminal window is too large, rainfrog will crash due to the maximum area of ratatui buffers being &lt;code&gt;u16::MAX&lt;/code&gt; (65,535). more details in &lt;a href=&#34;https://github.com/achristmascarl/rainfrog/issues/60&#34;&gt;https://github.com/achristmascarl/rainfrog/issues/60&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;for query results with many columns, the height of the rendered &lt;code&gt;Table&lt;/code&gt; widget may be limited due to the same limitation mentioned above. Could be fixed by &lt;a href=&#34;https://github.com/ratatui-org/ratatui/issues/1250&#34;&gt;https://github.com/ratatui-org/ratatui/issues/1250&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;on mac, for VS Code and terminal (and perhaps other editors), a setting for &#34;use option as meta key&#34; needs to be turned on for Alt/Opt keybindings to work. (In VS Code, it&#39;s &lt;code&gt;&#34;terminal.integrated.macOptionIsMeta&#34;: true&lt;/code&gt;; in kitty, it&#39;s &lt;code&gt;macos_option_as_alt yes&lt;/code&gt; in the config.)&lt;/li&gt; &#xA; &lt;li&gt;in visual mode, when selecting an entire line, the behavior is not the same as vim&#39;s, as it simply moves starts the selection at the head of the line, so moving up or down in lines will break the selection.&lt;/li&gt; &#xA; &lt;li&gt;mouse events are only used for changing focus and scrolling; the editor does not currently support mouse events, and menu items cannot be selected using the mouse&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ratatui-org/ratatui&#34;&gt;ratatui&lt;/a&gt; (this project used ratatui&#39;s &lt;a href=&#34;https://github.com/ratatui-org/templates/tree/983aa3cb3b8dd743200e8e2a1faa6e7c06aad85e/component/template&#34;&gt;component template&lt;/a&gt; as a starting point)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rhysd/tui-textarea&#34;&gt;tui-textarea&lt;/a&gt; (used in the query editor)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TaKO8Ki/gobang&#34;&gt;gobang&lt;/a&gt; (a rust db tui i drew inspiration from)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://us.jellycat.com/ricky-rain-frog/&#34;&gt;ricky rainfrog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rainfrog.gg/&#34;&gt;rainfroggg&lt;/a&gt; (my wife&#39;s tattoo studio)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>