<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-12T01:36:11Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>raminfp/fuzzer-development-with-rust</title>
    <updated>2023-09-12T01:36:11Z</updated>
    <id>tag:github.com,2023-09-12:/raminfp/fuzzer-development-with-rust</id>
    <link href="https://github.com/raminfp/fuzzer-development-with-rust" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Write fuzzer with rust&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fuzzer Development With Rust (Basic)&lt;/h1&gt; &#xA;&lt;h5&gt;Each researcher needs to be able to develop their own fuzzing tools. For this reason, I have started teaching how to develop fuzzing tools from scratch in this project so that researchers can use their own fuzzer to discover security vulnerabilities of open source tools, libraries and code that companies develop internally.&lt;/h5&gt; &#xA;&lt;h5&gt;In this training, we have explained all the concepts along with examples in the rust programming language so that the desired concepts can be understood correctly.&lt;/h5&gt; &#xA;&lt;h1&gt;&lt;em&gt;Table of Contents&lt;/em&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;Chapter 1. Corpus&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Corpus/corpus&#34;&gt;Basic Corpus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Corpus/general_corpus&#34;&gt;General Corpus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Corpus/seed_corpus&#34;&gt;Seed Corpus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Corpus/targeted_corpus&#34;&gt;Targeted Corpus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Corpus/hybrid_corpus&#34;&gt;Hybrid Corpus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Corpus/generative_corpus&#34;&gt;Generative Corpus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Corpus/in_memory_corpus&#34;&gt;In Memory Corpus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Corpus/disk_based_corpus&#34;&gt;Disk Based Corpus&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Chapter 2. Mutation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Mutation/arithmetic_mutate&#34;&gt;Arithmetic Mutate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Mutation/bitmask_mutation&#34;&gt;Bitmask Mutation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Mutation/gen_rand_mutation&#34;&gt;Gen rand Mutation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Mutation/gen_rand_mutation_byte&#34;&gt;Gen Rand Mutation Byte&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Mutation/mutated_seed_files&#34;&gt;Mutated Seed Files&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Mutation/token_mutation&#34;&gt;Token Mutation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Chapter 3. Monitor&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Monitor/log_fuzzing_events&#34;&gt;Log fuzzing events&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Monitor/log_test_cases&#34;&gt;Log test cases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Monitor/panic_crash&#34;&gt;Panic Crash&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Monitor/sysinfo_test&#34;&gt;Sysinfo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Monitor/track_statistics&#34;&gt;Track statistics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Monitor/use_profiling&#34;&gt;Use profiling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Monitor/sanity_checks&#34;&gt;Sanity Checks&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Chapter 4. Coverage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Coverage/basic_feedback_driven&#34;&gt;Basic Feedback Driven&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Coverage/block_coverage&#34;&gt;Block Coverage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Coverage/branch_coverage&#34;&gt;Branch Coverage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Coverage/feedback_driven_fuzzing&#34;&gt;Corpus/Mutate Feedback Driven&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Coverage/function_coverage&#34;&gt;Function Coverage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Coverage/loop_coverage&#34;&gt;Loop Coverage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Coverage/path_coverage&#34;&gt;Path Coverage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Coverage/predicate_coverage&#34;&gt;Predicate Coverage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Coverage/statement_coverage&#34;&gt;Statement Coverage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Chapter 5. Executor&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Executor/fork-based_fuzzer&#34;&gt;Fork Based Fuzzer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Executor/target_input&#34;&gt;Target Input&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Executor/wget_fuzzer&#34;&gt;Wget Fuzzer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Executor/thread_level_parallelism&#34;&gt;Thread-level Parallelism&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raminfp/fuzzer-development-with-rust/tree/main/Executor/process_level_parallelism&#34;&gt;Process-level Parallelism&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;code&gt;TODO - Modern Fuzzer Development With Rust (Advanced)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h6&gt;Happy Birthday to me (1993-09-09)&lt;/h6&gt;</summary>
  </entry>
  <entry>
    <title>pwnwriter/kanha</title>
    <updated>2023-09-12T01:36:11Z</updated>
    <id>tag:github.com,2023-09-12:/pwnwriter/kanha</id>
    <link href="https://github.com/pwnwriter/kanha" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🦚 A web-app pentesting suite written in rust .&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/pwnwriter/kanha/raw/logos/kanha-default.png&#34; width=&#34;400px&#34; height=&#34;250px&#34;&gt; &lt;/p&gt;&#xA;&lt;h4 align=&#34;center&#34;&gt;&lt;strong&gt;&lt;code&gt;Kanha&lt;/code&gt;&lt;/strong&gt; - A web-app pentesting suite written in rust 🦀&lt;/h4&gt;  &#xA;&lt;h6 align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/pwnwriter/kanha#-installation&#34;&gt;&lt;code&gt;Installation&lt;/code&gt;&lt;/a&gt; ⦾ &lt;a href=&#34;https://github.com/pwnwriter/kanha#-Subcommands&#34;&gt;&lt;code&gt;Subcommands&lt;/code&gt;&lt;/a&gt; ⦾ &lt;a href=&#34;https://github.com/pwnwriter/kanha#-contributing&#34;&gt;&lt;code&gt;Contribute&lt;/code&gt;&lt;/a&gt; &lt;p&gt;&lt;/p&gt; &lt;/h6&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://crates.io/crates/kanha/&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/kanha?style=flat&amp;amp;labelColor=56534b&amp;amp;color=c1c1b6&amp;amp;logo=Rust&amp;amp;logoColor=white&#34; alt=&#34;Crate Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pwnwriter/kanha/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/pwnwriter/kanha.svg?style=flat-square&amp;amp;label=Issues&amp;amp;color=d77982&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pwnwriter/pwnwriter/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-white.svg?sanitize=true&#34; alt=&#34;MIT LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ko-fi.com/pwnwriter&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/support-pwnwriter%20-pink?logo=kofi&amp;amp;logoColor=white&#34; alt=&#34;Ko-fi&#34;&gt;&lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/aqua.png&#34; alt=&#34;-----------------------------------------------------&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/pwnwriter/kanha/raw/logos/kanha-help.png&#34; alt=&#34;img&#34; align=&#34;right&#34; width=&#34;50%&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;/&#34;&gt;&lt;strong&gt;&lt;code&gt;Kanha&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; is a tool that can help you perform, a variety of attacks based on the target domain . With just &lt;code&gt;kanha&lt;/code&gt; you can do, &lt;a href=&#34;https://en.wikipedia.org/wiki/Fuzzing&#34;&gt;&lt;em&gt;&lt;strong&gt;&lt;code&gt;Fuzzing&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Reverse_DNS_lookup&#34;&gt;&lt;em&gt;&lt;strong&gt;&lt;code&gt;Reverse dns lookup&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_HTTP_status_codes&#34;&gt;&lt;em&gt;&lt;strong&gt;&lt;code&gt;common http response&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Domain_hijacking&#34;&gt;&lt;em&gt;&lt;strong&gt;&lt;code&gt;subdomain takeover detection&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt; and many &lt;a href=&#34;https://raw.githubusercontent.com/pwnwriter/kanha/main/src/commands&#34;&gt;&lt;strong&gt;&lt;code&gt;more&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The project is inspird by &lt;a href=&#34;https://github.com/echasnovski/mini.nvim&#34;&gt;&lt;code&gt;mini.nvim&lt;/code&gt;&lt;/a&gt;, basically helping you to be productive with less numbers of &lt;em&gt;tools(plugins)&lt;/em&gt; installed on your system and be unobtrusive and function as a standalone &lt;strong&gt;&lt;code&gt;single binary&lt;/code&gt;&lt;/strong&gt; out of the box.&lt;/p&gt; &#xA;&lt;p&gt;Built from the ground up with performance, ease of use, and portability in mind in your favourite programming lang &lt;a href=&#34;https://www.rust-lang.org/&#34;&gt;&lt;strong&gt;&lt;code&gt;rust&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; 💝&lt;/p&gt; &#xA;&lt;h2&gt;🧠 Philosophy&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;KISS&lt;/strong&gt; - Keep things simple and stupid.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ease&lt;/strong&gt; - Write code that can be used elsewhere as well.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Efficiency&lt;/strong&gt; - Optimize for performance without sacrificing readability.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🐱 Installation&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;code&gt;🪄 Binary &lt;/code&gt;&lt;/summary&gt; &amp;nbsp; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;You can directly download the &lt;a href=&#34;https://github.com/pwnwriter/kanha/releases&#34;&gt;&lt;strong&gt;binary&lt;/strong&gt;&lt;/a&gt; of your arch and run it.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;code&gt;🌼 Source &lt;/code&gt;&lt;/summary&gt; &amp;nbsp; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --depth=1 https://github.com/pwnwriter/kanha --branch=main&#xA;cd kanha&#xA;cargo build --release &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Then go to &lt;code&gt;release&lt;/code&gt; dir and &lt;code&gt;./kanha&lt;/code&gt; or move the &lt;code&gt;binary&lt;/code&gt; to your any &lt;code&gt;$PATH&lt;/code&gt; for instant access from anywhere.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;code&gt;🎠 Cargo &lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Using &lt;a href=&#34;https://crates.io/crates/kanha&#34;&gt;crates.io&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo install kanha&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Using &lt;a href=&#34;https://github.com/cargo-bins/cargo-binstall&#34;&gt;binstall&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo binstall kanha&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; ⚠️ This requires a working setup of rust/cargo &amp;amp; binstall.&lt;/p&gt; &#xA;   &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;code&gt;🚩 METIS Linux &lt;/code&gt;&lt;/summary&gt; &amp;nbsp; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo/doas pacman -Syyy kanha&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;🌈 Subcommands&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;➊ &lt;code&gt;Status&lt;/code&gt; :- Just return the HTTP response code of URLs&lt;/p&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;👻 Help&lt;/summary&gt; &amp;nbsp; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ kanha status -h&#xA;&#xA;Just return the HTTP response code of URLs&#xA;&#xA;Usage: kanha status [OPTIONS]&#xA;&#xA;  Options:&#xA;  -f, --filename &amp;lt;FILENAME&amp;gt;  A url or a file containing multiple urls&#xA;      --stdin                Reads input from the standard in&#xA;  -t, --tasks &amp;lt;TASKS&amp;gt;        Define the maximum concurrent tasks [default: 10]&#xA;  -h, --help                 Print help&#xA;  -V, --version              Print version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;details&gt; &#xA;    &lt;summary&gt;🦊 Screenshots &lt;/summary&gt; &amp;nbsp; &#xA;    &lt;p&gt;&lt;img src=&#34;https://github.com/pwnwriter/kanha/assets/90331517/93f7656f-563c-4c92-a118-500b1fabae9e&#34; alt=&#34;status&#34;&gt; &lt;img src=&#34;https://github.com/pwnwriter/kanha/assets/90331517/5ac0d6c6-497a-4a8d-a1a2-d3326010d7a8&#34; alt=&#34;status-stdin&#34;&gt;&lt;/p&gt; &#xA;   &lt;/details&gt; &#xA;  &lt;/details&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;  &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;➋ &lt;code&gt;fuzz&lt;/code&gt; :- Fuzz URLs and return the response codes&lt;/p&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;👻 Help&lt;/summary&gt; &amp;nbsp; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ kanha fuzz -h&#xA;Fuzz URLs and return the response codes&#xA;&#xA;Usage: kanha fuzz [OPTIONS] --wordlist &amp;lt;WORDLIST&amp;gt; --url &amp;lt;URL&amp;gt;&#xA;&#xA;Options:&#xA;  -w, --wordlist &amp;lt;WORDLIST&amp;gt;  A file containing a list of possible wordlists&#xA;  -u, --url &amp;lt;URL&amp;gt;            Provide a url to fuzz&#xA;  -t, --tasks &amp;lt;TASKS&amp;gt;        Define the maximum concurrent tasks [default: 10]&#xA;  -h, --help                 Print help&#xA;  -V, --version              Print version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;details&gt; &#xA;    &lt;summary&gt;🦊 Screenshots &lt;/summary&gt; &amp;nbsp; &#xA;    &lt;p&gt;&lt;img src=&#34;https://github.com/pwnwriter/kanha/assets/90331517/171d5fb8-b4b1-480c-9331-4204fa44944f&#34; alt=&#34;fuzz&#34;&gt;&lt;/p&gt; &#xA;   &lt;/details&gt; &#xA;  &lt;/details&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;➌ &lt;code&gt;rdns&lt;/code&gt; :- Reverse dns lookup&lt;/p&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;👻 Help&lt;/summary&gt; &amp;nbsp; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;$ kanha rdns  -h&#xA;  Reverse dns lookup&#xA;&#xA;  Usage: kanha rdns [OPTIONS] --filename &amp;lt;FILENAME&amp;gt;&#xA;&#xA;  Options:&#xA;    -f, --filename &amp;lt;FILENAME&amp;gt;  a file containing a list of possible wordlists&#xA;        --stdin                Reads input from the standard in&#xA;    -h, --help                 Print help&#xA;    -V, --version              Print version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;details&gt; &#xA;    &lt;summary&gt;🦊 Screenshots &lt;/summary&gt; &amp;nbsp; &#xA;    &lt;p&gt;&lt;img src=&#34;https://github.com/pwnwriter/kanha/assets/90331517/44f2f7f1-9f47-4794-87e9-1366b4a3e443&#34; alt=&#34;rdns&#34;&gt; &lt;img src=&#34;https://github.com/pwnwriter/kanha/assets/90331517/9ad5e5b6-711e-4396-a46f-5c190000e185&#34; alt=&#34;rdns-stdin&#34;&gt;&lt;/p&gt; &#xA;   &lt;/details&gt; &#xA;  &lt;/details&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;  &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;➍ &lt;code&gt;Takeover&lt;/code&gt; :- Check possible subdomain takeover&lt;/p&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;👻 Help&lt;/summary&gt; &amp;nbsp; &#xA;   &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Check possible subdomain takeover&#xA;&#xA;Usage: kanha takeover [OPTIONS] --json-file &amp;lt;JSON_FILE&amp;gt;&#xA;&#xA;Options:&#xA;  -j, --json-file &amp;lt;JSON_FILE&amp;gt;  A json file containing signature values of different services&#xA;  -f, --filename &amp;lt;FILENAME&amp;gt;    A file containing a list of urls&#xA;      --stdin                  Reads input from the standard in&#xA;  -h, --help                   Print help&#xA;  -V, --version                Print version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;details&gt; &#xA;    &lt;summary&gt;🦊 Screenshots &lt;/summary&gt; &amp;nbsp; &#xA;    &lt;p&gt;&lt;img src=&#34;https://github.com/pwnwriter/kanha/assets/90331517/25d499b0-8e66-4cc5-a414-887deb10124f&#34; alt=&#34;takeover&#34;&gt; &lt;img src=&#34;https://github.com/pwnwriter/kanha/assets/90331517/1b956c9d-2d37-4656-97ee-2aca2199750b&#34; alt=&#34;takeover-stdin&#34;&gt;&lt;/p&gt; &#xA;   &lt;/details&gt; &#xA;  &lt;/details&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;  &#xA;&lt;!-- ➎ ➏ ➐ ➑ ➒ --&gt; &#xA;&lt;h2&gt;👐 Contributing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🪶 Recommend a new features&lt;/li&gt; &#xA; &lt;li&gt;⭐ Give the project a star&lt;/li&gt; &#xA; &lt;li&gt;🐎 Add new &lt;a href=&#34;https://raw.githubusercontent.com/pwnwriter/kanha/main/src/commands&#34;&gt;subcommand&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;🧑‍🚒 Fix docx // improve code quality&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Also see 👀&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pwnwriter/haylxon&#34;&gt;&lt;code&gt;haylxon&lt;/code&gt;&lt;/a&gt; :- Blazingly fast tool to grab screenshots of your domain list right from terminal written in rust 🦀&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/projectdiscovery/httpx&#34;&gt;&lt;code&gt;httpx&lt;/code&gt;&lt;/a&gt; :- httpx is a fast and multi-purpose HTTP toolkit.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ffuf/ffuf&#34;&gt;&lt;code&gt;ffuf&lt;/code&gt;&lt;/a&gt; :- Fast web fuzzer written in Go&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License 🔐&lt;/h2&gt; &#xA;&lt;p&gt;As always, this project is also licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/pwnwriter/kanha/main/LICENSE&#34;&gt;&lt;strong&gt;&lt;code&gt;MIT LICENSE&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; &amp;nbsp;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/footers/gray0_ctp_on_line.svg?sanitize=true&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Copyright © 2023&lt;a href=&#34;https://pwnwriter.xyz&#34; target=&#34;_blank&#34;&gt; pwnwriter xyz &lt;/a&gt; ☘️ &lt;/p&gt;</summary>
  </entry>
</feed>