<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-22T01:46:21Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TanTanDev/binary_greedy_mesher_demo</title>
    <updated>2024-04-22T01:46:21Z</updated>
    <id>tag:github.com,2024-04-22:/TanTanDev/binary_greedy_mesher_demo</id>
    <link href="https://github.com/TanTanDev/binary_greedy_mesher_demo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Binary greedy mesher demo&lt;/h1&gt; &#xA;&lt;p&gt;A voxel engine project highlighting a ðŸ”¥ blazingly ðŸ”¥ fast binary greedy mesher. Written with Rust utilizing &lt;a href=&#34;https://github.com/bevyengine/bevy&#34;&gt;bevy game engine&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TanTanDev/binary_greedy_mesher_demo/main/screenshot.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;benchmarks&lt;/h2&gt; &#xA;&lt;p&gt;There are various benchmarks implemented, but only 2 are enabled. (A simple culled mesher VS the binary greedy mesher).&lt;/p&gt; &#xA;&lt;p&gt;The project utilize the criterion library for benchmarking and it generates html report target/criterion/report.&lt;/p&gt; &#xA;&lt;h2&gt;resources I used to build this:&lt;/h2&gt; &#xA;&lt;p&gt;(video) &lt;a href=&#34;https://youtu.be/4xs66m1Of4A?si=EwYbvf75zd38hfjp&#34;&gt;Greedy Meshing Voxels Fast - Optimism in Design Handmade Seattle 2022&lt;/a&gt; - Helped me understand Binary greedy meshing algorithm&lt;/p&gt; &#xA;&lt;p&gt;(repo) &lt;a href=&#34;https://github.com/cgerikj/binary-greedy-meshing&#34;&gt;Binary Greedy Meshing&lt;/a&gt; - Helped me understand binary face culling&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;binary_greedy_mesher_demo is free and open source! All code in this repository is dual-licensed under either:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MIT License (&lt;a href=&#34;https://raw.githubusercontent.com/TanTanDev/binary_greedy_mesher_demo/main/docs/LICENSE-MIT&#34;&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Apache License, Version 2.0 (&lt;a href=&#34;https://raw.githubusercontent.com/TanTanDev/binary_greedy_mesher_demo/main/docs/LICENSE-APACHE&#34;&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;at your option.&lt;/p&gt; &#xA;&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Whitecat18/Rust-for-Malware-Development</title>
    <updated>2024-04-22T01:46:21Z</updated>
    <id>tag:github.com,2024-04-22:/Whitecat18/Rust-for-Malware-Development</id>
    <link href="https://github.com/Whitecat18/Rust-for-Malware-Development" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository contains my complete resources and coding practices for malware development using Rust ðŸ¦€.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;260px&#34; src=&#34;https://github.com/Whitecat18/Rust-for-Malware-Development/assets/96696929/08dcf469-a502-450c-ab94-3915fd4b9968&#34;&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/Whitecat18/Rust-for-Malware-Development/main/#content&#34;&gt;&lt;h3&gt;Rust for Malware Development&lt;/h3&gt;&lt;/a&gt; &#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;strong&gt;Hello Nerds, This Repo is about using Rust for malware development and for low level stuffs.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;=&amp;gt; Basics&lt;/h3&gt; &#xA;&lt;p&gt;To Learn Rust -&amp;gt; &lt;a href=&#34;https://doc.rust-lang.org/book/&#34;&gt;Rust Book&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Windows API [old]-(winapi)-&amp;gt; &lt;a href=&#34;https://docs.rs/winapi/latest/winapi/&#34;&gt;WinAPI&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Windows API (by Official Microsoft) -&amp;gt; &lt;a href=&#34;https://docs.rs/crate/windows/latest&#34;&gt;WinAPI&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ntapi Crate -&amp;gt; &lt;a href=&#34;https://docs.rs/ntapi/latest/ntapi/&#34;&gt;NtAPI&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Windows Internels -&amp;gt; &lt;a href=&#34;https://learn.microsoft.com/en-us/sysinternals/resources/windows-internals&#34;&gt;Link&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;RedTeam Notes -&amp;gt; &lt;a href=&#34;https://www.ired.team/&#34;&gt;Link&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;=&amp;gt; WinAPI Imports to Test and Execute these Codes..&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;[dependencies]&#xA;winapi = { version = &#34;0.3&#34;, features = [&#34;winuser&#34;, &#34;debugapi&#34;,&#34;winerror&#34;, &#34;wininet&#34; , &#34;winhttp&#34; ,&#34;synchapi&#34;,&#34;securitybaseapi&#34;,&#34;wincrypt&#34;,&#34;psapi&#34;, &#34;tlhelp32&#34;, &#34;heapapi&#34;,&#34;shellapi&#34;, &#34;memoryapi&#34;, &#34;processthreadsapi&#34;, &#34;errhandlingapi&#34;, &#34;winbase&#34;, &#34;handleapi&#34;, &#34;synchapi&#34;] }&#xA;ntapi = &#34;0.4.1&#34;&#xA;user32-sys = &#34;0.2.0&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Tips for Rust Beginner: save this dependencies in Cargo.toml File.&lt;/p&gt;</summary>
  </entry>
</feed>