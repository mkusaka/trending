<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-05T01:41:14Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bensadeh/tailspin</title>
    <updated>2023-11-05T01:41:14Z</updated>
    <id>tag:github.com,2023-11-05:/bensadeh/tailspin</id>
    <link href="https://github.com/bensadeh/tailspin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üåÄ A log file highlighter&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bensadeh/tailspin/main/assets/tailspin.png&#34; width=&#34;230&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A log file highlighter &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bensadeh/tailspin/main/assets/main.png&#34; width=&#34;700&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ü™µ View (or &lt;code&gt;tail&lt;/code&gt;) any log file of any format&lt;/li&gt; &#xA; &lt;li&gt;üç∞ No setup or config required&lt;/li&gt; &#xA; &lt;li&gt;üåà Highlights numbers, dates, IP-addresses, UUIDs, URLs and more&lt;/li&gt; &#xA; &lt;li&gt;‚öôÔ∏è All highlight groups are customizable&lt;/li&gt; &#xA; &lt;li&gt;üß¨ Easy to integrate with other commands&lt;/li&gt; &#xA; &lt;li&gt;üîç Uses &lt;code&gt;less&lt;/code&gt; under the hood for scrollback, search and filtering&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;/h1&gt; &#xA;&lt;h3&gt;Table of Contents&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bensadeh/tailspin/main/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bensadeh/tailspin/main/#installing&#34;&gt;Installing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bensadeh/tailspin/main/#highlight-groups&#34;&gt;Highlight Groups&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bensadeh/tailspin/main/#watching-folders&#34;&gt;Watching folders&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bensadeh/tailspin/main/#customizing-highlight-groups&#34;&gt;Customizing Highlight Groups&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bensadeh/tailspin/main/#working-with-stdin-and-stdout&#34;&gt;Working with &lt;code&gt;stdin&lt;/code&gt; and &lt;code&gt;stdout&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bensadeh/tailspin/main/#using-the-pager-less&#34;&gt;Using the pager &lt;code&gt;less&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bensadeh/tailspin/main/#settings&#34;&gt;Settings&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;tailspin&lt;/code&gt; works by reading through a log file line by line, running a series of regexes against each line. The regexes recognize patterns like dates, numbers, severity keywords and more.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;tailspin&lt;/code&gt; does not make any assumptions on the format or position of the items it wants to highlight. For this reason, it requires no configuration or setup and will work predictably regardless of the format the log file is in.&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;h3&gt;Package Managers&lt;/h3&gt; &#xA;&lt;p&gt;The binary name for &lt;code&gt;tailspin&lt;/code&gt; is &lt;code&gt;spin&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# Homebrew&#xA;brew install tailspin&#xA;&#xA;# Cargo&#xA;cargo install tailspin&#xA;&#xA;# AUR&#xA;paru -S tailspin&#xA;&#xA;# Nix&#xA;nix-shell -p tailspin&#xA;&#xA;# NetBSD&#xA;pkgin install tailspin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;From Source&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;cargo install --path .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Binary will be placed in &lt;code&gt;~/.cargo/bin&lt;/code&gt;, make sure you add the folder to your &lt;code&gt;PATH&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;h2&gt;Highlight Groups&lt;/h2&gt; &#xA;&lt;h3&gt;Dates&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bensadeh/tailspin/main/assets/examples/dates.png&#34; width=&#34;600&#34;&gt; &lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Config&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[date]&#xA;style = { fg = &#34;magenta&#34; }&#xA;# To shorten the date, uncomment the line below&#xA;# shorten = { to = &#34;‚ê£&#34;, style = { fg = &#34;magenta&#34; } }&#xA;&#xA;[time]&#xA;time = { fg = &#34;blue&#34; }&#xA;zone = { fg = &#34;red&#34; }&#xA;# To shorten the time, uncomment the line below&#xA;# shorten = { to = &#34;‚ê£&#34;, style = { fg = &#34;blue&#34; } }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Keywords&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bensadeh/tailspin/main/assets/examples/keywords.png&#34; width=&#34;600&#34;&gt; &lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Config&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[[keywords]]&#xA;words = [&#39;null&#39;, &#39;true&#39;, &#39;false&#39;]&#xA;style = { fg = &#34;red&#34;, italic = true }&#xA;&#xA;[[keywords]]&#xA;words = [&#39;GET&#39;]&#xA;style = { fg = &#34;black&#34;, bg = &#34;green&#34; }&#xA;border = true&#xA;&#xA;# You can add as many keywords as you&#39;d like&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;URLs&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bensadeh/tailspin/main/assets/examples/urls.png&#34; width=&#34;600&#34;&gt; &lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Config&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[url]&#xA;http = { faint = true }&#xA;https = { bold = true }&#xA;host = { fg = &#34;blue&#34;, faint = true }&#xA;path = { fg = &#34;blue&#34; }&#xA;query_params_key = { fg = &#34;magenta&#34; }&#xA;query_params_value = { fg = &#34;cyan&#34; }&#xA;symbols = { fg = &#34;red&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Numbers&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bensadeh/tailspin/main/assets/examples/numbers.png&#34; width=&#34;600&#34;&gt; &lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Config&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[number]&#xA;style = { fg = &#34;cyan&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;IP Addresses&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bensadeh/tailspin/main/assets/examples/ip.png&#34; width=&#34;600&#34;&gt; &lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Config&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[ip]&#xA;segment = { fg = &#34;blue&#34;, italic = true }&#xA;separator = { fg = &#34;red&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Quotes&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bensadeh/tailspin/main/assets/examples/quotes.png&#34; width=&#34;600&#34;&gt; &lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Config&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[quotes]&#xA;style = { fg = &#34;yellow&#34; }&#xA;token = &#39;&#34;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Unix file paths&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bensadeh/tailspin/main/assets/examples/paths.png&#34; width=&#34;600&#34;&gt; &lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Config&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[path]&#xA;segment = { fg = &#34;green&#34;, italic = true }&#xA;separator = { fg = &#34;yellow&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;HTTP methods&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bensadeh/tailspin/main/assets/examples/http.png&#34; width=&#34;600&#34;&gt; &lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Config&lt;/summary&gt; See Keywords &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;UUIDs&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bensadeh/tailspin/main/assets/examples/uuids.png&#34; width=&#34;600&#34;&gt; &lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Config&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[uuid]&#xA;segment = { fg = &#34;blue&#34;, italic = true }&#xA;separator = { fg = &#34;red&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Key-value pairs&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bensadeh/tailspin/main/assets/examples/kv.png&#34; width=&#34;600&#34;&gt; &lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Config&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[key_value]&#xA;key = { faint = true }&#xA;separator = { fg = &#34;white&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Unix processes&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bensadeh/tailspin/main/assets/examples/processes.png&#34; width=&#34;600&#34;&gt; &lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Config&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[process]&#xA;name = { fg = &#34;green&#34; }&#xA;separator = { fg = &#34;red&#34; }&#xA;id = { fg = &#34;yellow&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Watching folders&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;tailspin&lt;/code&gt; can listen for newline entries in a given folder. Watching folders is useful for monitoring log files that are rotated.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/bensadeh/tailspin/main/assets/examples/folder.png&#34; width=&#34;600&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;When watching folders, &lt;code&gt;tailspin&lt;/code&gt; will start in follow mode (abort with &lt;kbd&gt;Ctrl + C&lt;/kbd&gt;) and will only print newline entries which arrive after the initial start.&lt;/p&gt; &#xA;&lt;h2&gt;Customizing Highlight Groups&lt;/h2&gt; &#xA;&lt;h3&gt;Overview&lt;/h3&gt; &#xA;&lt;p&gt;Create &lt;code&gt;config.toml&lt;/code&gt; in &lt;code&gt;~/.config/tailspin&lt;/code&gt; to customize highlight groups.&lt;/p&gt; &#xA;&lt;p&gt;Styles have the following shape:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;style = { fg = &#34;color&#34;, bg = &#34;color&#34;, italic = false, bold = false, underline = false }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Disabling Highlight Groups&lt;/h3&gt; &#xA;&lt;p&gt;To disable a highlight group, set the &lt;code&gt;disabled&lt;/code&gt; field to true:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[date]&#xA;disabled = true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Adding Keywords&lt;/h3&gt; &#xA;&lt;p&gt;To add custom keywords, either include them in the list of keywords or add new entries:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[[keywords]]&#xA;words = [&#39;MyCustomKeyword&#39;]&#xA;style = { fg = &#34;green&#34; }&#xA;&#xA;[[keywords]]&#xA;words = [&#39;null&#39;, &#39;true&#39;, &#39;false&#39;]&#xA;style = { fg = &#34;red&#34;, italic = true }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Working with &lt;code&gt;stdin&lt;/code&gt; and &lt;code&gt;stdout&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;tailspin&lt;/code&gt; will open a file in the pager &lt;code&gt;less&lt;/code&gt;. However, if you pipe something into &lt;code&gt;tailspin&lt;/code&gt;, it will print the highlighted output directly to &lt;code&gt;stdout&lt;/code&gt;. This is similar to running &lt;code&gt;spin [file] --print&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To let &lt;code&gt;tailspin&lt;/code&gt; highlight the logs of different commands, you can pipe the output of those commands into &lt;code&gt;tailspin&lt;/code&gt; like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;journalctl -f | spin&#xA;cat /var/log/syslog | spin&#xA;kubectl logs -f pod_name | spin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using the pager &lt;code&gt;less&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;Overview&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;tailspin&lt;/code&gt; uses &lt;code&gt;less&lt;/code&gt; as its pager to view the highlighted log files. You can get more info on &lt;code&gt;less&lt;/code&gt; via the &lt;strong&gt;man&lt;/strong&gt; command (&lt;code&gt;man less&lt;/code&gt;) or by hitting the &lt;kbd&gt;h&lt;/kbd&gt; button to access the help screen.&lt;/p&gt; &#xA;&lt;h3&gt;Navigating&lt;/h3&gt; &#xA;&lt;p&gt;Navigating within &lt;code&gt;less&lt;/code&gt; uses a set of keybindings that may be familiar to users of &lt;code&gt;vim&lt;/code&gt; or other &lt;code&gt;vi&lt;/code&gt;-like editors. Here&#39;s a brief overview of the most useful navigation commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;kbd&gt;j&lt;/kbd&gt;/&lt;kbd&gt;k&lt;/kbd&gt;: Scroll one line up / down&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;d&lt;/kbd&gt;/&lt;kbd&gt;u&lt;/kbd&gt;: Scroll one half-page up / down&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;g&lt;/kbd&gt;/&lt;kbd&gt;G&lt;/kbd&gt;: Go to the top / bottom of the file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Follow mode&lt;/h3&gt; &#xA;&lt;p&gt;When you run &lt;code&gt;tailspin&lt;/code&gt; with the &lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--follow&lt;/code&gt; flag, it will scroll to the bottom and print new lines to the screen as they&#39;re added to the file.&lt;/p&gt; &#xA;&lt;p&gt;To stop following the file, interrupt with &lt;kbd&gt;Ctrl + C&lt;/kbd&gt;. This will stop the tailing, but keep the file open, allowing you to review the existing content.&lt;/p&gt; &#xA;&lt;p&gt;To resume following the file from within &lt;code&gt;less&lt;/code&gt;, press &lt;kbd&gt;Shift + F&lt;/kbd&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Search&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;kbd&gt;/&lt;/kbd&gt; followed by your search query. For example, &lt;code&gt;/ERROR&lt;/code&gt; finds the first occurrence of &lt;strong&gt;ERROR&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;After the search, &lt;kbd&gt;n&lt;/kbd&gt; finds the next instance, and &lt;kbd&gt;N&lt;/kbd&gt; finds the previous instance.&lt;/p&gt; &#xA;&lt;h3&gt;Filtering&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;less&lt;/code&gt; allows filtering lines by a keyword, using &lt;kbd&gt;&amp;amp;&lt;/kbd&gt; followed by the pattern. For instance, &lt;code&gt;&amp;amp;ERROR&lt;/code&gt; shows only lines with &lt;strong&gt;ERROR&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To only show lines containing either &lt;code&gt;ERROR&lt;/code&gt; or &lt;code&gt;WARN&lt;/code&gt;, use a regular expression: &lt;code&gt;&amp;amp;\(ERROR\|WARN\)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To clear the filter, use &lt;kbd&gt;&amp;amp;&lt;/kbd&gt; with no pattern.&lt;/p&gt; &#xA;&lt;h2&gt;Settings&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;-f, --follow                 Follow the contents of the file&#xA;-t, --tail                   Start at the end of the file&#xA;-p, --print                  Print the output to stdout&#xA;-c, --config-path PATH       Path to a custom configuration file&#xA;-t, --follow-command &#39;CMD&#39;   Follows the output of the provided command&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>