<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-30T01:43:42Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cbiffle/lilos</title>
    <updated>2023-06-30T01:43:42Z</updated>
    <id>tag:github.com,2023-06-30:/cbiffle/lilos</id>
    <link href="https://github.com/cbiffle/lilos" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A wee async RTOS for Cortex-M&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;lilos&lt;/code&gt;: A minimal async RTOS&lt;/h1&gt; &#xA;&lt;p&gt;(Hi! We now have a &lt;a href=&#34;https://raw.githubusercontent.com/cbiffle/lilos/main/doc/intro.adoc&#34;&gt;intro guide!&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;This is a wee operating system written to support the &lt;code&gt;async&lt;/code&gt; style of programming in Rust on microcontrollers. It fits in about 2 kiB of Flash and uses about 20 bytes of RAM (before your tasks are added). In that space, you get a full &lt;code&gt;async&lt;/code&gt; runtime with multiple tasks, support for complex concurrency via &lt;code&gt;join&lt;/code&gt; and &lt;code&gt;select&lt;/code&gt;, and a lot of convenient but simple APIs. (If you want to see what a &lt;code&gt;lilos&lt;/code&gt; program looks like, look in the &lt;code&gt;examples&lt;/code&gt; directory, or read the intro guide.)&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;lilos&lt;/code&gt; has been deployed in real embedded systems since 2019, running continuously. I&#39;ve built about a dozen systems around it of varying complexity, on half a dozen varieties of microcontroller. It works pretty okay! Perhaps you will find it useful too.&lt;/p&gt; &#xA;&lt;h2&gt;Repo layout&lt;/h2&gt; &#xA;&lt;p&gt;This repo contains crates in subdirectories, but it is &lt;em&gt;not&lt;/em&gt; a Cargo workspace. This means you will need to &lt;code&gt;cd&lt;/code&gt; into subdirectories to build things. Here is a map:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;os&lt;/code&gt; contains the operating system crate.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;testsuite&lt;/code&gt; contains a test suite for the operating system, which can run on a Cortex-M0 or better. See &lt;a href=&#34;https://github.com/cbiffle/lilos/raw/main/testsuite/README.mkdn&#34;&gt;its README&lt;/a&gt; for instructions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;examples&lt;/code&gt; contains example programs for various microcontrollers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;These instructions are mostly for building the examples or working on the operating system itself. If you&#39;re trying to use &lt;code&gt;lilos&lt;/code&gt; in a program, the usual way is to just &lt;code&gt;cargo add lilos&lt;/code&gt; to your application.&lt;/p&gt; &#xA;&lt;p&gt;To build in the repo, you will need a Rust toolchain installed through &lt;code&gt;rustup&lt;/code&gt;, because we use a &lt;code&gt;rustup&lt;/code&gt;-style &lt;code&gt;rust-toolchain.toml&lt;/code&gt; file to pin the toolchain version to ensure that you get the right results. &lt;code&gt;rustup&lt;/code&gt; will automatically ensure you&#39;ve got the appropriate toolchain version available, including support for the right target architecture for whatever program you&#39;re building.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Enter the directory you&#39;re interested in, for example, &lt;code&gt;cd os&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Build: &lt;code&gt;cargo build&lt;/code&gt; (or, for smaller binaries, &lt;code&gt;cargo build --release&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;To try an example on a microcontroller eval board, see the README in the individual example. (In most cases &lt;code&gt;cargo run&lt;/code&gt; in the directory will suffice.)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To build everything in the repo, run &lt;code&gt;./build-all.sh&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contact and License&lt;/h2&gt; &#xA;&lt;p&gt;If you have questions, or you use it for something, I&#39;d love to find out! Send me an email.&lt;/p&gt; &#xA;&lt;p&gt;All the code in this repo is MPL-2 licensed.&lt;/p&gt;</summary>
  </entry>
</feed>