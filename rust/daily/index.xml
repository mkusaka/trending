<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-10T01:41:33Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wez/govee2mqtt</title>
    <updated>2024-01-10T01:41:33Z</updated>
    <id>tag:github.com,2024-01-10:/wez/govee2mqtt</id>
    <link href="https://github.com/wez/govee2mqtt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Govee2MQTT: Connect Govee lights and devices to Home Assistant&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Govee to MQTT bridge for Home Assistant&lt;/h1&gt; &#xA;&lt;p&gt;This repo provides a &lt;code&gt;govee&lt;/code&gt; executable whose primary purpose is to act as a bridge between &lt;a href=&#34;https://govee.com&#34;&gt;Govee&lt;/a&gt; lights and Home Assistant, via the &lt;a href=&#34;https://www.home-assistant.io/integrations/mqtt/&#34;&gt;Home Assistant MQTT Integration&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Robust LAN-first design. Not all of Govee&#39;s devices support LAN control, but for those that do, you&#39;ll have the lowest latency and ability to control them even when your primary internet connection is offline.&lt;/li&gt; &#xA; &lt;li&gt;Support for per-device modes and scenes.&lt;/li&gt; &#xA; &lt;li&gt;Support for the undocumented AWS IoT interface to your devices, provides low latency status updates.&lt;/li&gt; &#xA; &lt;li&gt;Support for the new &lt;a href=&#34;https://developer.govee.com/reference/get-you-devices&#34;&gt;Platform API&lt;/a&gt; in case the AWS IoT or LAN control is unavailable.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;Requires&lt;/th&gt; &#xA;   &lt;th&gt;Notes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DIY Scenes&lt;/td&gt; &#xA;   &lt;td&gt;API Key&lt;/td&gt; &#xA;   &lt;td&gt;Find in the list of Effects for the light in Home Assistant&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Music Modes&lt;/td&gt; &#xA;   &lt;td&gt;API Key&lt;/td&gt; &#xA;   &lt;td&gt;Find in the list of Effects for the light in Home Assistant&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tap-to-Run / One Click Scene&lt;/td&gt; &#xA;   &lt;td&gt;IoT&lt;/td&gt; &#xA;   &lt;td&gt;Find in the overall list of Scenes in Home Assistant, as well as under the &lt;code&gt;Govee to MQTT&lt;/code&gt; device&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Live Device Status Updates&lt;/td&gt; &#xA;   &lt;td&gt;LAN and/or IoT&lt;/td&gt; &#xA;   &lt;td&gt;Devices typically report most changes within a couple of seconds.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Segment Color&lt;/td&gt; &#xA;   &lt;td&gt;API Key&lt;/td&gt; &#xA;   &lt;td&gt;Find the &lt;code&gt;Segment 00X&lt;/code&gt; light entities associated with your main light device in Home Assistant&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;API Key&lt;/code&gt; means that you have &lt;a href=&#34;https://developer.govee.com/reference/apply-you-govee-api-key&#34;&gt;applied for a key from Govee&lt;/a&gt; and have configured it for use in goovee2mqtt&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;IoT&lt;/code&gt; means that you have configured your Govee account email and password for use in govee2mqtt, which will then attempt to use the &lt;em&gt;undocumented and likely unsupported&lt;/em&gt; AWS MQTT-based IoT service&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;LAN&lt;/code&gt; means that you have enabled the &lt;a href=&#34;https://app-h5.govee.com/user-manual/wlan-guide&#34;&gt;Govee LAN API&lt;/a&gt; on supported devices and that the LAN API protocol is functional on your network&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wez/govee2mqtt/main/docs/ADDON.md&#34;&gt;Installing the HASS Add-On&lt;/a&gt; - for HAOS and Supervised HASS users&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wez/govee2mqtt/main/docs/DOCKER.md&#34;&gt;Running it in Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wez/govee2mqtt/main/docs/CONFIG.md&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This work is based on my earlier work with &lt;a href=&#34;https://github.com/wez/govee-lan-hass/&#34;&gt;Govee LAN Control&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The AWS IoT support was made possible by the work of @bwp91 in &lt;a href=&#34;https://github.com/bwp91/homebridge-govee/&#34;&gt;homebridge-govee&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Devolutions/IronRDP</title>
    <updated>2024-01-10T01:41:33Z</updated>
    <id>tag:github.com,2024-01-10:/Devolutions/IronRDP</id>
    <link href="https://github.com/Devolutions/IronRDP" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Rust implementation of the Microsoft Remote Desktop Protocol (RDP)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IronRDP&lt;/h1&gt; &#xA;&lt;p&gt;A collection of Rust crates providing an implementation of the Microsoft Remote Desktop Protocol, with a focus on security.&lt;/p&gt; &#xA;&lt;h2&gt;Demonstration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/3809077/202049929-76f42471-aeb0-41da-9118-0dc6ea491bd2.mp4&#34;&gt;https://user-images.githubusercontent.com/3809077/202049929-76f42471-aeb0-41da-9118-0dc6ea491bd2.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Video Codec Support&lt;/h2&gt; &#xA;&lt;p&gt;Supported codecs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Uncompressed raw bitmap&lt;/li&gt; &#xA; &lt;li&gt;Interleaved Run-Length Encoding (RLE) Bitmap Codec&lt;/li&gt; &#xA; &lt;li&gt;RDP 6.0 Bitmap Compression&lt;/li&gt; &#xA; &lt;li&gt;Microsoft RemoteFX (RFX)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Devolutions/IronRDP/master/crates/ironrdp-client&#34;&gt;&lt;code&gt;ironrdp-client&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;A full-fledged RDP client based on IronRDP crates suite, and implemented using non-blocking, asynchronous I/O.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo run --bin ironrdp-client -- &amp;lt;HOSTNAME&amp;gt; --username &amp;lt;USERNAME&amp;gt; --password &amp;lt;PASSWORD&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Devolutions/IronRDP/master/crates/ironrdp/examples/screenshot.rs&#34;&gt;&lt;code&gt;screenshot&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Example of utilizing IronRDP in a blocking, synchronous fashion.&lt;/p&gt; &#xA;&lt;p&gt;This example showcases the use of IronRDP in a blocking manner. It demonstrates how to create a basic RDP client with just a few hundred lines of code by leveraging the IronRDP crates suite.&lt;/p&gt; &#xA;&lt;p&gt;In this basic client implementation, the client establishes a connection with the destination server, decodes incoming graphics updates, and saves the resulting output as a BMP image file on the disk.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo run --example=screenshot -- --host &amp;lt;HOSTNAME&amp;gt; --username &amp;lt;USERNAME&amp;gt; --password &amp;lt;PASSWORD&amp;gt; --output out.bmp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;How to enable RemoteFX on server&lt;/h3&gt; &#xA;&lt;p&gt;Run the following PowerShell commands, and reboot.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-pwsh&#34;&gt;Set-ItemProperty -Path &#39;HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services&#39; -Name &#39;ColorDepth&#39; -Type DWORD -Value 5&#xA;Set-ItemProperty -Path &#39;HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services&#39; -Name &#39;fEnableVirtualizedGraphics&#39; -Type DWORD -Value 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you may change a few group policies using &lt;code&gt;gpedit.msc&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;gpedit.msc&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enable &lt;code&gt;Computer Configuration/Administrative Templates/Windows Components/Remote Desktop Services/Remote Desktop Session Host/Remote Session Environment/RemoteFX for Windows Server 2008 R2/Configure RemoteFX&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enable &lt;code&gt;Computer Configuration/Administrative Templates/Windows Components/Remote Desktop Services/Remote Desktop Session Host/Remote Session Environment/Enable RemoteFX encoding for RemoteFX clients designed for Windows Server 2008 R2 SP1&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enable &lt;code&gt;Computer Configuration/Administrative Templates/Windows Components/Remote Desktop Services/Remote Desktop Session Host/Remote Session Environment/Limit maximum color depth&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Reboot.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/Devolutions/IronRDP/master/ARCHITECTURE.md&#34;&gt;ARCHITECTURE.md&lt;/a&gt; document.&lt;/p&gt; &#xA;&lt;h2&gt;Getting help&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Report bugs in the &lt;a href=&#34;https://github.com/Devolutions/IronRDP/issues&#34;&gt;issue tracker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Discuss the project on the &lt;a href=&#34;https://matrix.to/#/#IronRDP:matrix.org&#34;&gt;matrix room&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>