<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-02T01:45:20Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ajeetdsouza/loxcraft</title>
    <updated>2023-05-02T01:45:20Z</updated>
    <id>tag:github.com,2023-05-02:/ajeetdsouza/loxcraft</id>
    <link href="https://github.com/ajeetdsouza/loxcraft" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Language tooling for the Lox programming language.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;loxcraft&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://crates.io/crates/loxcraft&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/loxcraft&#34; alt=&#34;crates.io&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Language tooling&lt;/strong&gt; for the &lt;strong&gt;&lt;a href=&#34;http://craftinginterpreters.com/&#34;&gt;Lox programming language&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo install loxcraft --locked&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Bytecode compiler + garbage collected runtime&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Online playground, via WebAssembly (&lt;a href=&#34;https://ajeetdsouza.github.io/loxcraft/&#34;&gt;try it out!&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; REPL&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Syntax highlighting, via &lt;a href=&#34;https://github.com/ajeetdsouza/tree-sitter-lox&#34;&gt;tree-sitter-lox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; IDE integration, via the &lt;a href=&#34;https://microsoft.github.io/language-server-protocol/&#34;&gt;Language Server Protocol&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1777663/216910834-4ea40427-34d7-43e0-8ba0-06638dfb0fa2.png&#34; alt=&#34;Screenshot of REPL&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1777663/201918922-39b567fe-9375-4990-8224-e540cf3266bc.png&#34; alt=&#34;Screenshot of online playground&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Benchmarks&lt;/h2&gt; &#xA;&lt;p&gt;Time taken to execute the &lt;a href=&#34;https://github.com/ajeetdsouza/loxcraft/tree/main/res/benchmarks&#34;&gt;benchmark suite&lt;/a&gt; (lower is better):&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Benchmark&lt;/th&gt; &#xA;   &lt;th&gt;loxcraft&lt;/th&gt; &#xA;   &lt;th&gt;clox&lt;/th&gt; &#xA;   &lt;th&gt;jlox&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;binary_tree&lt;/td&gt; &#xA;   &lt;td&gt;8.29s&lt;/td&gt; &#xA;   &lt;td&gt;8.13s&lt;/td&gt; &#xA;   &lt;td&gt;26.41s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;equality_1&lt;/td&gt; &#xA;   &lt;td&gt;7.17s&lt;/td&gt; &#xA;   &lt;td&gt;7.73s&lt;/td&gt; &#xA;   &lt;td&gt;10.01s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;equality_2&lt;/td&gt; &#xA;   &lt;td&gt;8.39s&lt;/td&gt; &#xA;   &lt;td&gt;9.66s&lt;/td&gt; &#xA;   &lt;td&gt;14.30s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fib&lt;/td&gt; &#xA;   &lt;td&gt;10.90s&lt;/td&gt; &#xA;   &lt;td&gt;10.09s&lt;/td&gt; &#xA;   &lt;td&gt;21.89s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;instantiation&lt;/td&gt; &#xA;   &lt;td&gt;10.83s&lt;/td&gt; &#xA;   &lt;td&gt;12.84s&lt;/td&gt; &#xA;   &lt;td&gt;14.24s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;invocation&lt;/td&gt; &#xA;   &lt;td&gt;9.93s&lt;/td&gt; &#xA;   &lt;td&gt;8.93s&lt;/td&gt; &#xA;   &lt;td&gt;15.77s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;method_call&lt;/td&gt; &#xA;   &lt;td&gt;11.01s&lt;/td&gt; &#xA;   &lt;td&gt;9.12s&lt;/td&gt; &#xA;   &lt;td&gt;62.03s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;properties&lt;/td&gt; &#xA;   &lt;td&gt;10.05s&lt;/td&gt; &#xA;   &lt;td&gt;5.98s&lt;/td&gt; &#xA;   &lt;td&gt;69.77s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;string_equality_1&lt;/td&gt; &#xA;   &lt;td&gt;7.76s&lt;/td&gt; &#xA;   &lt;td&gt;7.66s&lt;/td&gt; &#xA;   &lt;td&gt;34.08s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;string_equality_2&lt;/td&gt; &#xA;   &lt;td&gt;10.78s&lt;/td&gt; &#xA;   &lt;td&gt;10.52s&lt;/td&gt; &#xA;   &lt;td&gt;36.25s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;trees&lt;/td&gt; &#xA;   &lt;td&gt;9.97s&lt;/td&gt; &#xA;   &lt;td&gt;8.72s&lt;/td&gt; &#xA;   &lt;td&gt;72.87s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;zoo&lt;/td&gt; &#xA;   &lt;td&gt;10.67s&lt;/td&gt; &#xA;   &lt;td&gt;6.18s&lt;/td&gt; &#xA;   &lt;td&gt;100.10s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1777663/216903842-5d626770-e599-491e-8e09-83b2f956cf34.svg?sanitize=true&#34; alt=&#34;Benchmarks&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Benchmarks were run with the following configuration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Device: Apple MacBook Pro (16-inch, 2021)&lt;/li&gt; &#xA; &lt;li&gt;Processor: M1 Pro&lt;/li&gt; &#xA; &lt;li&gt;RAM: 16 GiB&lt;/li&gt; &#xA; &lt;li&gt;OS: macOS Ventura 13.2&lt;/li&gt; &#xA; &lt;li&gt;Rust: 1.66.1&lt;/li&gt; &#xA; &lt;li&gt;Apple Clang: 14.0.0&lt;/li&gt; &#xA; &lt;li&gt;Oracle JDK: 19.0.2&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Priler/jarvis</title>
    <updated>2023-05-02T01:45:20Z</updated>
    <id>tag:github.com,2023-05-02:/Priler/jarvis</id>
    <link href="https://github.com/Priler/jarvis" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Voice assistant made as an experiment using neural networks for things like STT/TTS/Wake Word/NLU etc.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JARVIS Voice Assistant&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Priler/jarvis/master/poster.jpg&#34; alt=&#34;We are NOT limited by the technology of our time!&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Jarvis&lt;/code&gt; - is a voice assistant made as an experiment using neural networks for things like &lt;strong&gt;STT/TTS/Wake Word/NLU&lt;/strong&gt; etc.&lt;/p&gt; &#xA;&lt;p&gt;The main project challenges we try to achieve is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;100% offline &lt;em&gt;(no cloud)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open source &lt;em&gt;(full transparency)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;No data collection &lt;em&gt;(we respect your privacy)&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Our backend stack is ü¶Ä &lt;strong&gt;&lt;a href=&#34;https://www.rust-lang.org/&#34;&gt;Rust&lt;/a&gt;&lt;/strong&gt; with ‚ù§Ô∏è &lt;strong&gt;&lt;a href=&#34;https://tauri.app/&#34;&gt;Tauri&lt;/a&gt;&lt;/strong&gt;.&lt;br&gt; For the frontend we use ‚ö°Ô∏è &lt;strong&gt;&lt;a href=&#34;https://vitejs.dev/&#34;&gt;Vite&lt;/a&gt;&lt;/strong&gt; + üõ†Ô∏è &lt;strong&gt;&lt;a href=&#34;https://svelte.dev/&#34;&gt;Svelte&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Other libraries, tools and packages can be found in source code.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Neural Networks&lt;/h2&gt; &#xA;&lt;p&gt;This are the neural networks we are currently using:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Speech-To-Text &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/alphacep/vosk-api&#34;&gt;Vosk Speech Recognition Toolkit&lt;/a&gt; via &lt;a href=&#34;https://github.com/Bear-03/vosk-rs&#34;&gt;Vosk-rs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Text-To-Speech &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/snakers4/silero-models&#34;&gt;&lt;del&gt;Silero TTS&lt;/del&gt;&lt;/a&gt; &lt;em&gt;(currently not used)&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/coqui-ai/TTS&#34;&gt;&lt;del&gt;Coqui TTS&lt;/del&gt;&lt;/a&gt; &lt;em&gt;(currently not used)&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Wake Word &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/GiviMAD/rustpotter&#34;&gt;Rustpotter&lt;/a&gt; &lt;em&gt;(Partially implemented, still WIP)&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Picovoice/porcupine&#34;&gt;Picovoice Porcupine&lt;/a&gt; via &lt;a href=&#34;https://github.com/Picovoice/porcupine#rust&#34;&gt;official SDK&lt;/a&gt; &lt;em&gt;(requires API key)&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/alphacep/vosk-api&#34;&gt;Vosk Speech Recognition Toolkit&lt;/a&gt; via &lt;a href=&#34;https://github.com/Bear-03/vosk-rs&#34;&gt;Vosk-rs&lt;/a&gt; &lt;em&gt;(very slow)&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;NLU &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Nothing yet.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Chat &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://chat.openai.com/&#34;&gt;&lt;del&gt;ChatGPT&lt;/del&gt;&lt;/a&gt; (coming soon)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Languages&lt;/h2&gt; &#xA;&lt;p&gt;Currently, only Russian language is supported.&lt;br&gt; But soon, Ukranian and English will be added for the interface, wake-word detection and speech recognition.&lt;/p&gt; &#xA;&lt;h2&gt;How to build?&lt;/h2&gt; &#xA;&lt;p&gt;Nothing special was used to build this project.&lt;br&gt; You need only Rust and NodeJS installed on your system.&lt;br&gt; Other than that, all you need is to install all the dependencies and then compile the code with &lt;code&gt;cargo tauri build&lt;/code&gt; command.&lt;br&gt; Or run dev with &lt;code&gt;cargo tauri dev&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt; &lt;em&gt;Thought you might need some of the platform specific libraries for &lt;a href=&#34;https://github.com/Picovoice/pvrecorder&#34;&gt;PvRecorder&lt;/a&gt; and &lt;a href=&#34;https://github.com/alphacep/vosk-api&#34;&gt;Vosk&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;Abraham Tugalov&lt;/p&gt; &#xA;&lt;h2&gt;Python version?&lt;/h2&gt; &#xA;&lt;p&gt;Old version of Jarvis was build with Python.&lt;br&gt; The last Python version commit can be found &lt;a href=&#34;https://github.com/Priler/jarvis/tree/943efbfbdb8aeb5889fa5e2dc7348ca4ea0b81df&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;Attribution-NonCommercial-ShareAlike 4.0 International&lt;/a&gt;&lt;br&gt; See LICENSE.txt file for more details.&lt;/p&gt;</summary>
  </entry>
</feed>