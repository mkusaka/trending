<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-05-23T01:35:24Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>modelcontextprotocol/rust-sdk</title>
    <updated>2025-05-23T01:35:24Z</updated>
    <id>tag:github.com,2025-05-23:/modelcontextprotocol/rust-sdk</id>
    <link href="https://github.com/modelcontextprotocol/rust-sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The official Rust SDK for the Model Context Protocol&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/modelcontextprotocol/rust-sdk/main/docs/readme/README.zh-cn.md&#34;&gt;简体中文(待更新)&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;RMCP&lt;/h1&gt; &#xA;&lt;p&gt;Wait for the first release.&lt;/p&gt; &#xA;&lt;!-- [![Crates.io Version](todo)](todo) --&gt; &#xA;&lt;!-- ![Release status](https://github.com/modelcontextprotocol/rust-sdk/actions/workflows/release.yml/badge.svg) --&gt; &#xA;&lt;!-- [![docs.rs](todo)](todo) --&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/modelcontextprotocol/rust-sdk/main/docs/coverage.svg?sanitize=true&#34; alt=&#34;Coverage&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;An official rust Model Context Protocol SDK implementation with tokio async runtime.&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the following crates:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/modelcontextprotocol/rust-sdk/main/crates/rmcp&#34;&gt;rmcp&lt;/a&gt;: The core crate providing the RMCP protocol implementation( If you want to get more information, please visit &lt;a href=&#34;https://raw.githubusercontent.com/modelcontextprotocol/rust-sdk/main/crates/rmcp/README.md&#34;&gt;rmcp&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/modelcontextprotocol/rust-sdk/main/crates/rmcp-macros&#34;&gt;rmcp-macros&lt;/a&gt;: A procedural macro crate for generating RMCP tool implementations(If you want to get more information, please visit &lt;a href=&#34;https://raw.githubusercontent.com/modelcontextprotocol/rust-sdk/main/crates/rmcp-macros/README.md&#34;&gt;rmcp-macros&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Import the crate&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;rmcp = { version = &#34;0.1&#34;, features = [&#34;server&#34;] }&#xA;## or dev channel&#xA;rmcp = { git = &#34;https://github.com/modelcontextprotocol/rust-sdk&#34;, branch = &#34;main&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Third Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;Basic dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tokio-rs/tokio&#34;&gt;tokio required&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/serde-rs/serde&#34;&gt;serde required&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Build a Client&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Start a client&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-rust,&#34;&gt;use rmcp::{ServiceExt, transport::{TokioChildProcess, ConfigureCommandExt}};&#xA;use tokio::process::Command;&#xA;&#xA;#[tokio::main]&#xA;async fn main() -&amp;gt; Result&amp;lt;(), Box&amp;lt;dyn std::error::Error&amp;gt;&amp;gt; {&#xA;    let client = ().serve(TokioChildProcess::new(Command::new(&#34;npx&#34;).configure(|cmd| {&#xA;        cmd.arg(&#34;-y&#34;).arg(&#34;@modelcontextprotocol/server-everything&#34;);&#xA;    }))?).await?;&#xA;    Ok(())&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Build a Server&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Build a transport&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-rust,&#34;&gt;use tokio::io::{stdin, stdout};&#xA;let transport = (stdin(), stdout());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Build a service&lt;/summary&gt; &#xA; &lt;p&gt;You can easily build a service by using &lt;a href=&#34;https://raw.githubusercontent.com/modelcontextprotocol/rust-sdk/main/crates/rmcp/src/handler/server.rs&#34;&gt;&lt;code&gt;ServerHandler&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/modelcontextprotocol/rust-sdk/main/crates/rmcp/src/handler/client.rs&#34;&gt;&lt;code&gt;ClientHandler&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-rust,&#34;&gt;let service = common::counter::Counter::new();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Start the server&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-rust,&#34;&gt;// this call will finish the initialization process&#xA;let server = service.serve(transport).await?;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Interact with the server&lt;/summary&gt; &#xA; &lt;p&gt;Once the server is initialized, you can send requests or notifications:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-rust,&#34;&gt;// request&#xA;let roots = server.list_roots().await?;&#xA;&#xA;// or send notification&#xA;server.notify_cancelled(...).await?;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Waiting for service shutdown&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-rust,&#34;&gt;let quit_reason = server.waiting().await?;&#xA;// or cancel it&#xA;let quit_reason = server.cancel().await?;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/modelcontextprotocol/rust-sdk/main/examples/README.md&#34;&gt;examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;OAuth Support&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/modelcontextprotocol/rust-sdk/main/docs/OAUTH_SUPPORT.md&#34;&gt;oauth_support&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Related Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://spec.modelcontextprotocol.io/specification/2024-11-05/&#34;&gt;MCP Specification&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/modelcontextprotocol/specification/raw/main/schema/2024-11-05/schema.ts&#34;&gt;Schema&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Related Projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jokemanfire/mcp-containerd&#34;&gt;containerd-mcp-server&lt;/a&gt; - A containerd-based MCP server implementation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development with Dev Container&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/modelcontextprotocol/rust-sdk/main/docs/DEVCONTAINER.md&#34;&gt;docs/DEVCONTAINER.md&lt;/a&gt; for instructions on using Dev Container for development.&lt;/p&gt;</summary>
  </entry>
</feed>