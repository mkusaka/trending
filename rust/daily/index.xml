<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-09T01:38:48Z</updated>
  <subtitle>Daily Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>maplibre/martin</title>
    <updated>2023-10-09T01:38:48Z</updated>
    <id>tag:github.com,2023-10-09:/maplibre/martin</id>
    <link href="https://github.com/maplibre/martin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Blazing fast and lightweight PostGIS, MBtiles and PMtiles tile server&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Martin&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://maplibre.org/martin&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-Book-informational&#34; alt=&#34;Book&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.rs/martin&#34;&gt;&lt;img src=&#34;https://docs.rs/martin/badge.svg?sanitize=true&#34; alt=&#34;docs.rs docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://slack.openstreetmap.us/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Chat-on%20Slack-blueviolet&#34; alt=&#34;Slack chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/maplibre/martin&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/github-maplibre/martin-8da0cb?logo=github&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/martin&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/martin.svg?sanitize=true&#34; alt=&#34;crates.io version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/maplibre/martin/security&#34;&gt;&lt;img src=&#34;https://github.com/maplibre/martin/workflows/Security%20audit/badge.svg?sanitize=true&#34; alt=&#34;Security audit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/maplibre/martin/actions&#34;&gt;&lt;img src=&#34;https://github.com/maplibre/martin/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://slack.openstreetmap.us/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack-%23maplibre--martin-2EB67D?logo=slack&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Martin is a tile server able to generate and serve &lt;a href=&#34;https://github.com/mapbox/vector-tile-spec&#34;&gt;vector tiles&lt;/a&gt; on the fly from large &lt;a href=&#34;https://github.com/postgis/postgis&#34;&gt;PostGIS&lt;/a&gt; databases, &lt;a href=&#34;https://protomaps.com/blog/pmtiles-v3-whats-new&#34;&gt;PMTile&lt;/a&gt;, and &lt;a href=&#34;https://github.com/mapbox/mbtiles-spec&#34;&gt;MBTile&lt;/a&gt; files, allowing multiple tile sources to be dynamically combined into one. Martin optimizes for speed and heavy traffic, and is written in &lt;a href=&#34;https://github.com/rust-lang/rust&#34;&gt;Rust&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://maplibre.org/martin/&#34;&gt;Martin book&lt;/a&gt; for complete documentation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/maplibre/martin/main/logo.png&#34; alt=&#34;Martin&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;See &lt;a href=&#34;https://maplibre.org/martin/installation.html&#34;&gt;installation instructions&lt;/a&gt; in the Martin book.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; If using Martin with PostgreSQL database, you must install PostGIS with at least v3.0+, v3.1+ recommended.&lt;/p&gt; &#xA;&lt;p&gt;You can download martin from &lt;a href=&#34;https://github.com/maplibre/martin/releases&#34;&gt;GitHub releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;AMD-64&lt;/th&gt; &#xA;   &lt;th&gt;ARM-64&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/maplibre/martin/releases/latest/download/martin-Linux-x86_64.tar.gz&#34;&gt;.tar.gz&lt;/a&gt; (gnu)&lt;br&gt;&lt;a href=&#34;https://github.com/maplibre/martin/releases/latest/download/martin-Linux-x86_64-musl.tar.gz&#34;&gt;.tar.gz&lt;/a&gt; (musl)&lt;br&gt;&lt;a href=&#34;https://github.com/maplibre/martin/releases/latest/download/martin-Debian-x86_64.deb&#34;&gt;.deb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/maplibre/martin/releases/latest/download/martin-Linux-aarch64-musl.tar.gz&#34;&gt;.tar.gz&lt;/a&gt; (musl)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/maplibre/martin/releases/latest/download/martin-Darwin-x86_64.tar.gz&#34;&gt;.tar.gz&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/maplibre/martin/releases/latest/download/martin-Darwin-aarch64.tar.gz&#34;&gt;.tar.gz&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/maplibre/martin/releases/latest/download/martin-Windows-x86_64.zip&#34;&gt;.zip&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If you are using macOS and &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; you can install martin using Homebrew tap.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew tap maplibre/martin https://github.com/maplibre/martin.git&#xA;brew install maplibre/martin/martin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running Martin Service&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;See &lt;a href=&#34;https://maplibre.org/martin/run.html&#34;&gt;running instructions&lt;/a&gt; in the Martin book.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Martin supports any number of PostgreSQL/PostGIS database connections with &lt;a href=&#34;https://postgis.net/docs/using_postgis_dbmanagement.html#geometry_columns&#34;&gt;geospatial-enabled&lt;/a&gt; tables and tile-producing SQL functions, as well as &lt;a href=&#34;https://protomaps.com/blog/pmtiles-v3-whats-new&#34;&gt;PMTile&lt;/a&gt; and &lt;a href=&#34;https://github.com/mapbox/mbtiles-spec&#34;&gt;MBTile&lt;/a&gt; files as tile sources.&lt;/p&gt; &#xA;&lt;p&gt;Martin can auto-discover tables and functions using a &lt;a href=&#34;https://maplibre.org/martin/PostgreSQL-Connection-String.html&#34;&gt;connection string&lt;/a&gt;. A PG connection string can also be passed via the &lt;code&gt;DATABASE_URL&lt;/code&gt; environment variable.&lt;/p&gt; &#xA;&lt;p&gt;Each tile source will have a &lt;a href=&#34;https://github.com/mapbox/tilejson-spec&#34;&gt;TileJSON&lt;/a&gt; endpoint.&lt;/p&gt; &#xA;&lt;h4&gt;Examples&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# publish all tables and functions from a single database&#xA;export DATABASE_URL=&#34;postgresql://user:password@host:port/database&#34;&#xA;martin&#xA;&#xA;# same as above, but passing connection string via CLI, together with a directory of .mbtiles/.pmtiles files&#xA;martin postgresql://user:password@host:port/database path/to/dir&#xA;&#xA;# publish all discovered tables/funcs from two DBs&#xA;# and generate config file with all detected sources&#xA;martin postgres://... postgres://...  --save-config config.yaml&#xA;&#xA;# use configuration file instead of auto-discovery&#xA;martin --config config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Docker Example&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;See &lt;a href=&#34;https://maplibre.org/martin/run-with-docker.html&#34;&gt;Docker instructions&lt;/a&gt; in the Martin book.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Martin is also available as a &lt;a href=&#34;https://ghcr.io/maplibre/martin&#34;&gt;Docker image&lt;/a&gt;. You could either share a configuration file from the host with the container via the &lt;code&gt;-v&lt;/code&gt; param, or you can let Martin auto-discover all sources e.g. by passing &lt;code&gt;DATABASE_URL&lt;/code&gt; or specifying the .mbtiles/.pmtiles files.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export PGPASSWORD=postgres  # secret!&#xA;docker run -p 3000:3000 \&#xA;           -e PGPASSWORD \&#xA;           -e DATABASE_URL=postgresql://user@host:port/db \&#xA;           -v /path/to/config/dir:/config \&#xA;           ghcr.io/maplibre/martin --config /config/config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;See &lt;a href=&#34;https://maplibre.org/martin/using.html&#34;&gt;API documentation&lt;/a&gt; in the Martin book.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Martin data is available via the HTTP &lt;code&gt;GET&lt;/code&gt; endpoints:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;URL&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Status text, that will eventually show web UI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;/catalog&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;List of all sources&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;/{sourceID}&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Source TileJSON&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;/{sourceID}/{z}/{x}/{y}&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Map Tiles&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;/{source1},...,{sourceN}&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Composite Source TileJSON&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;/{source1},...,{sourceN}/{z}/{x}/{y}&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Composite Source Tiles&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;/sprite/{spriteID}[@2x].{json,png}&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Sprites (low and high DPI, index/png)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;/health&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Martin server health check: returns 200 &lt;code&gt;OK&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://maplibre.org/martin/&#34;&gt;Martin book&lt;/a&gt; for complete documentation.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under either of&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apache License, Version 2.0 (&lt;a href=&#34;https://raw.githubusercontent.com/maplibre/martin/main/LICENSE-APACHE&#34;&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;MIT license (&lt;a href=&#34;https://raw.githubusercontent.com/maplibre/martin/main/LICENSE-MIT&#34;&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;http://opensource.org/licenses/MIT&lt;/a&gt;) at your option.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contribution&lt;/h3&gt; &#xA;&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.&lt;/p&gt;</summary>
  </entry>
</feed>