<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-01T02:17:26Z</updated>
  <subtitle>Monthly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>AleoHQ/leo</title>
    <updated>2024-01-01T02:17:26Z</updated>
    <id>tag:github.com,2024-01-01:/AleoHQ/leo</id>
    <link href="https://github.com/AleoHQ/leo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ü¶Å The Leo Programming Language. A Programming Language for Formally Verified, Zero-Knowledge Applications&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;1412&#34; src=&#34;https://cdn.aleo.org/leo/banner.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;The Leo Programming Language&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://circleci.com/gh/AleoHQ/leo&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/AleoHQ/leo.svg?style=svg&amp;amp;circle-token=00960191919c40be0774e00ce8f7fa1fcaa20c00&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/AleoHQ/leo&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/AleoHQ/leo/branch/testnet3/graph/badge.svg?token=S6MWO60SYL&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/5v2ynrw2ds&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/700454073459015690?logo=discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/AleoHQ/leo/raw/testnet3/CONTRIBUTORS.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contributors-393-ee8449&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;div id=&#34;top&#34;&gt;&lt;/div&gt; Leo is a functional, statically-typed programming language built for writing private applications. &#xA;&lt;h2&gt;&lt;a name=&#34;TableofContents&#34;&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AleoHQ/leo/testnet3/#-overview&#34;&gt;üçé Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AleoHQ/leo/testnet3/#-build-guide&#34;&gt;‚öôÔ∏èÔ∏è Build Guide&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AleoHQ/leo/testnet3/#-install-rust&#34;&gt;ü¶Ä Install Rust&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AleoHQ/leo/testnet3/#-build-from-source-code&#34;&gt;üêô Build from Source Code&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AleoHQ/leo/testnet3/#-quick-start&#34;&gt;üöÄ Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AleoHQ/leo/testnet3/#-troubleshooting&#34;&gt;üß∞ Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AleoHQ/leo/testnet3/#-documentation&#34;&gt;üìñ Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AleoHQ/leo/testnet3/#-contributing&#34;&gt;ü§ù Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AleoHQ/leo/testnet3/#-contributors&#34;&gt;‚ù§Ô∏è Contributors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AleoHQ/leo/testnet3/#-license&#34;&gt;üõ°Ô∏è License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üçé Overview&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to the Leo programming language.&lt;/p&gt; &#xA;&lt;p&gt;Leo provides a high-level language that abstracts low-level cryptographic concepts and makes it easy to integrate private applications into your stack. Leo compiles to circuits making zero-knowledge proofs practical.&lt;/p&gt; &#xA;&lt;p&gt;The syntax of Leo is influenced by traditional programming languages like JavaScript, Scala, and Rust, with a strong emphasis on readability and ease-of-use. Leo offers developers with tools to sanity check circuits including unit tests, integration tests, and console functions.&lt;/p&gt; &#xA;&lt;p&gt;Leo is one part of a greater ecosystem for building private applications on &lt;a href=&#34;https://aleo.org/&#34;&gt;Aleo&lt;/a&gt;. The language is currently in an alpha stage and is subject to breaking changes.&lt;/p&gt; &#xA;&lt;h2&gt;‚öôÔ∏èÔ∏è Build Guide&lt;/h2&gt; &#xA;&lt;h3&gt;ü¶Ä Install Rust&lt;/h3&gt; &#xA;&lt;p&gt;We recommend installing Rust using &lt;a href=&#34;https://www.rustup.rs/&#34;&gt;rustup&lt;/a&gt;. You can install &lt;code&gt;rustup&lt;/code&gt; as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;macOS or Linux:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Windows (64-bit):&lt;/p&gt; &lt;p&gt;Download the &lt;a href=&#34;https://win.rustup.rs/x86_64&#34;&gt;Windows 64-bit executable&lt;/a&gt; and follow the on-screen instructions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Windows (32-bit):&lt;/p&gt; &lt;p&gt;Download the &lt;a href=&#34;https://win.rustup.rs/i686&#34;&gt;Windows 32-bit executable&lt;/a&gt; and follow the on-screen instructions.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;üêô Build from Source Code&lt;/h3&gt; &#xA;&lt;p&gt;We recommend installing Leo by building from the source code as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Download the source code&#xA;git clone https://github.com/AleoHQ/leo&#xA;cd leo&#xA;&#xA;# Install &#39;leo&#39;&#xA;$ cargo install --path .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now to use leo, in your terminal, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;leo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üöÄ Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Use the Leo CLI to create a new project&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# create a new `hello-world` Leo project&#xA;leo new helloworld&#xA;cd helloworld&#xA;&#xA;# build &amp;amp; setup &amp;amp; prove &amp;amp; verify&#xA;leo run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;leo new&lt;/code&gt; command creates a new Leo project with a given name.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;leo run&lt;/code&gt; command will compile the program into Aleo instructions and run it.&lt;/p&gt; &#xA;&lt;p&gt;Congratulations! You&#39;ve just run your first Leo program.&lt;/p&gt; &#xA;&lt;h2&gt;üß∞ Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;If you are having trouble installing and using Leo, please check out our &lt;a href=&#34;https://raw.githubusercontent.com/AleoHQ/leo/testnet3/docs/troubleshooting.md&#34;&gt;guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If the issue still persists, please &lt;a href=&#34;https://github.com/AleoHQ/leo/issues/new/choose&#34;&gt;open an issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üìñ Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.aleo.org/leo/hello&#34;&gt;Hello World - Next Steps&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.aleo.org/leo/language&#34;&gt;Leo Language Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AleoHQ/grammars/raw/master/leo.abnf&#34;&gt;Leo ABNF Grammar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.aleo.org/overview/&#34;&gt;Homepage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see our guidelines in the &lt;a href=&#34;https://raw.githubusercontent.com/AleoHQ/leo/testnet3/CONTRIBUTING.md&#34;&gt;developer documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ù§Ô∏è Contributors&lt;/h2&gt; &#xA;&lt;p&gt;View all Leo contributors &lt;a href=&#34;https://raw.githubusercontent.com/AleoHQ/leo/testnet3/CONTRIBUTORS.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üõ°Ô∏è License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AleoHQ/leo/testnet3/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true&#34; alt=&#34;License: GPL v3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AleoHQ/leo/testnet3/#top&#34;&gt;üîº Back to top&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>coral-xyz/anchor</title>
    <updated>2024-01-01T02:17:26Z</updated>
    <id>tag:github.com,2024-01-01:/coral-xyz/anchor</id>
    <link href="https://github.com/coral-xyz/anchor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;‚öì Solana Sealevel Framework&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img height=&#34;170x&#34; src=&#34;https://pbs.twimg.com/media/FVUVaO9XEAAulvK?format=png&amp;amp;name=small&#34;&gt; &#xA; &lt;h1&gt;Anchor&lt;/h1&gt; &#xA; &lt;p&gt; &lt;strong&gt;Solana Sealevel Framework&lt;/strong&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://github.com/coral-xyz/anchor/actions&#34;&gt;&lt;img alt=&#34;Build Status&#34; src=&#34;https://github.com/coral-xyz/anchor/actions/workflows/tests.yaml/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://anchor-lang.com&#34;&gt;&lt;img alt=&#34;Tutorials&#34; src=&#34;https://img.shields.io/badge/docs-tutorials-blueviolet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/NHHGSXAnXk&#34;&gt;&lt;img alt=&#34;Discord Chat&#34; src=&#34;https://img.shields.io/discord/889577356681945098?color=blueviolet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/github/license/coral-xyz/anchor?color=blueviolet&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Anchor is a framework for Solana&#39;s &lt;a href=&#34;https://medium.com/solana-labs/sealevel-parallel-processing-thousands-of-smart-contracts-d814b378192&#34;&gt;Sealevel&lt;/a&gt; runtime providing several convenient developer tools for writing smart contracts.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rust eDSL for writing Solana programs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Interface_description_language&#34;&gt;IDL&lt;/a&gt; specification&lt;/li&gt; &#xA; &lt;li&gt;TypeScript package for generating clients from IDL&lt;/li&gt; &#xA; &lt;li&gt;CLI and workspace management for developing complete applications&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you&#39;re familiar with developing in Ethereum&#39;s &lt;a href=&#34;https://docs.soliditylang.org/en/v0.7.4/&#34;&gt;Solidity&lt;/a&gt;, &lt;a href=&#34;https://www.trufflesuite.com/&#34;&gt;Truffle&lt;/a&gt;, &lt;a href=&#34;https://github.com/ethereum/web3.js&#34;&gt;web3.js&lt;/a&gt;, then the experience will be familiar. Although the DSL syntax and semantics are targeted at Solana, the high level flow of writing RPC request handlers, emitting an IDL, and generating clients from IDL is the same.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;For a quickstart guide and in depth tutorials, see the &lt;a href=&#34;https://book.anchor-lang.com&#34;&gt;anchor book&lt;/a&gt; and the older &lt;a href=&#34;https://anchor-lang.com&#34;&gt;documentation&lt;/a&gt; that is being phased out. To jump straight to examples, go &lt;a href=&#34;https://github.com/coral-xyz/anchor/tree/master/examples&#34;&gt;here&lt;/a&gt;. For the latest Rust and TypeScript API documentation, see &lt;a href=&#34;https://docs.rs/anchor-lang&#34;&gt;docs.rs&lt;/a&gt; and the &lt;a href=&#34;https://coral-xyz.github.io/anchor/ts/index.html&#34;&gt;typedoc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Package&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Version&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Docs&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;anchor-lang&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Rust primitives for writing programs on Solana&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://crates.io/crates/anchor-lang&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/anchor-lang?color=blue&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.rs/anchor-lang&#34;&gt;&lt;img src=&#34;https://docs.rs/anchor-lang/badge.svg?sanitize=true&#34; alt=&#34;Docs.rs&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;anchor-spl&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;CPI clients for SPL programs on Solana&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://crates.io/crates/anchor-spl&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/anchor-spl?color=blue&#34; alt=&#34;crates&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.rs/anchor-spl&#34;&gt;&lt;img src=&#34;https://docs.rs/anchor-spl/badge.svg?sanitize=true&#34; alt=&#34;Docs.rs&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;anchor-client&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Rust client for Anchor programs&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://crates.io/crates/anchor-client&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/anchor-client?color=blue&#34; alt=&#34;crates&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.rs/anchor-client&#34;&gt;&lt;img src=&#34;https://docs.rs/anchor-client/badge.svg?sanitize=true&#34; alt=&#34;Docs.rs&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;@coral-xyz/anchor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;TypeScript client for Anchor programs&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.npmjs.com/package/@coral-xyz/anchor&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@coral-xyz/anchor.svg?color=blue&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://coral-xyz.github.io/anchor/ts/index.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-typedoc-blue&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;@coral-xyz/anchor-cli&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;CLI to support building and managing an Anchor workspace&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.npmjs.com/package/@coral-xyz/anchor-cli&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@coral-xyz/anchor-cli.svg?color=blue&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://coral-xyz.github.io/anchor/cli/commands.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-typedoc-blue&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Note&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Anchor is in active development, so all APIs are subject to change.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;This code is unaudited. Use at your own risk.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s a counter program, where only the designated &lt;code&gt;authority&lt;/code&gt; can increment the count.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;use anchor_lang::prelude::*;&#xA;&#xA;declare_id!(&#34;Fg6PaFpoGXkYsidMpWTK6W2BeZ7FEfcYkg476zPFsLnS&#34;);&#xA;&#xA;#[program]&#xA;mod counter {&#xA;    use super::*;&#xA;&#xA;    pub fn initialize(ctx: Context&amp;lt;Initialize&amp;gt;, start: u64) -&amp;gt; Result&amp;lt;()&amp;gt; {&#xA;        let counter = &amp;amp;mut ctx.accounts.counter;&#xA;        counter.authority = *ctx.accounts.authority.key;&#xA;        counter.count = start;&#xA;        Ok(())&#xA;    }&#xA;&#xA;    pub fn increment(ctx: Context&amp;lt;Increment&amp;gt;) -&amp;gt; Result&amp;lt;()&amp;gt; {&#xA;        let counter = &amp;amp;mut ctx.accounts.counter;&#xA;        counter.count += 1;&#xA;        Ok(())&#xA;    }&#xA;}&#xA;&#xA;#[derive(Accounts)]&#xA;pub struct Initialize&amp;lt;&#39;info&amp;gt; {&#xA;    #[account(init, payer = authority, space = 48)]&#xA;    pub counter: Account&amp;lt;&#39;info, Counter&amp;gt;,&#xA;    pub authority: Signer&amp;lt;&#39;info&amp;gt;,&#xA;    pub system_program: Program&amp;lt;&#39;info, System&amp;gt;,&#xA;}&#xA;&#xA;#[derive(Accounts)]&#xA;pub struct Increment&amp;lt;&#39;info&amp;gt; {&#xA;    #[account(mut, has_one = authority)]&#xA;    pub counter: Account&amp;lt;&#39;info, Counter&amp;gt;,&#xA;    pub authority: Signer&amp;lt;&#39;info&amp;gt;,&#xA;}&#xA;&#xA;#[account]&#xA;pub struct Counter {&#xA;    pub authority: Pubkey,&#xA;    pub count: u64,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more, see the &lt;a href=&#34;https://github.com/coral-xyz/anchor/tree/master/examples&#34;&gt;examples&lt;/a&gt; and &lt;a href=&#34;https://github.com/coral-xyz/anchor/tree/master/tests&#34;&gt;tests&lt;/a&gt; directories.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Anchor is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/coral-xyz/anchor/master/LICENSE&#34;&gt;Apache 2.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in Anchor by you, as defined in the Apache-2.0 license, shall be licensed as above, without any additional terms or conditions.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for your interest in contributing to Anchor! Please see the &lt;a href=&#34;https://raw.githubusercontent.com/coral-xyz/anchor/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; to learn how.&lt;/p&gt; &#xA;&lt;h3&gt;Thanks ‚ù§Ô∏è&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/coral-xyz/anchor/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=coral-xyz/anchor&#34; width=&#34;100%&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>slint-ui/slint</title>
    <updated>2024-01-01T02:17:26Z</updated>
    <id>tag:github.com,2024-01-01:/slint-ui/slint</id>
    <link href="https://github.com/slint-ui/slint" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Slint is a declarative GUI toolkit to build native user interfaces for Rust, C++, or JavaScript apps.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/logo/slint-logo-full-light.svg#gh-light-mode-only&#34; alt=&#34;Slint&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/logo/slint-logo-full-dark.svg#gh-dark-mode-only&#34; alt=&#34;Slint&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/slint-ui/slint/actions&#34;&gt;&lt;img src=&#34;https://github.com/slint-ui/slint/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://api.reuse.software/info/github.com/slint-ui/slint&#34;&gt;&lt;img src=&#34;https://api.reuse.software/badge/github.com/slint-ui/slint&#34; alt=&#34;REUSE status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/slint-ui/slint/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/slint-ui/slint&#34; alt=&#34;Discussions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Slint is a declarative GUI toolkit to build native user interfaces for desktop and embedded applications written in Rust, C++, or JavaScript. The name &lt;em&gt;Slint&lt;/em&gt; is derived from our design goals:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Scalable&lt;/strong&gt;: Slint should support responsive UI design, allow cross-platform usage across operating systems and processor architectures and support multiple programming languages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Lightweight&lt;/strong&gt;: Slint should require minimal resources, in terms of memory and processing power, and yet deliver a smooth, smartphone-like user experience on any device.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Intuitive&lt;/strong&gt;: Designers and developers should feel productive while enjoying the GUI design and development process. The design creation tools should be intuitive to use for the designers. Similarly for the developers, the APIs should be consistent and easy to use, no matter which programming language they choose.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Native&lt;/strong&gt;: GUI built with Slint should match the end users&#39; expectations of a native application irrespective of the platform - desktop, mobile, web or embedded system. The UI design should be compiled to machine code and provide flexibility that only a native application can offer: Access full operating system APIs, utilize all CPU and GPU cores, connect to any peripheral.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We invite you to use Slint and be part of its community.&lt;/p&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://madewithslint.com&#34;&gt;#MadeWithSlint&lt;/a&gt; to view some of the projects using Slint and join us in the Slint community.&lt;/p&gt; &#xA;&lt;h2&gt;Current Status&lt;/h2&gt; &#xA;&lt;p&gt;Slint is in active development. The state of support for each platform is as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Embedded&lt;/strong&gt;: &lt;em&gt;Ready&lt;/em&gt;. Slint is being used by customers in production on embedded devices running embedded Linux and Windows. The Slint run-time requires less than 300KiB of RAM and can run on different processor architectures such as ARM Cortex M, ESP32, STM32 from the MCU category to ARM Cortex A, Intel x86 from the MPU category.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Desktop&lt;/strong&gt;: &lt;em&gt;In Progress&lt;/em&gt;. While Slint is a good fit on Windows, Linux and Mac, we are working on improving the platform support in subsequent releases.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Web&lt;/strong&gt;: &lt;em&gt;In Progress&lt;/em&gt;. Slint apps can be compiled to WebAssembly and can run in a web browser. As there are many other web frameworks, the web platform is not one of our primary target platforms. The web support is currently limited to demo purposes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mobile&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Android: &lt;em&gt;In Progress&lt;/em&gt;. Track the progress of work here &lt;a href=&#34;https://github.com/slint-ui/slint/issues/46&#34;&gt;https://github.com/slint-ui/slint/issues/46&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;iOS: &lt;em&gt;Todo&lt;/em&gt;. Support for iOS will commence after the initial support for Android is completed.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Accessibility&lt;/h3&gt; &#xA;&lt;p&gt;Slint supports keyboard based navigation of many widgets, and user interfaces are scalable. The basic infrastructure for assistive technology like screen readers is in place. We&#39;re aware that more work is needed to get best-of-class support for users with special needs.&lt;/p&gt; &#xA;&lt;h2&gt;Demos&lt;/h2&gt; &#xA;&lt;h3&gt;Embedded&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;RaspberryPi&lt;/th&gt; &#xA;   &lt;th&gt;STM32&lt;/th&gt; &#xA;   &lt;th&gt;RP2040&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=_BDbNHrjK7g&#34;&gt;Video of Slint on Raspberry Pi&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=NNNOJJsOAis&#34;&gt;Video of Slint on STM32&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=dkBwNocItGs&#34;&gt;Video of Slint on RP2040&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Desktop&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Windows&lt;/th&gt; &#xA;   &lt;th&gt;macOS&lt;/th&gt; &#xA;   &lt;th&gt;Linux&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://slint.dev/resources/gallery_win_screenshot.png&#34; alt=&#34;Screenshot of the Gallery on Windows&#34; title=&#34;Gallery&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://slint.dev/resources/gallery_mac_screenshot.png&#34; alt=&#34;Screenshot of the Gallery on macOS&#34; title=&#34;Gallery&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://slint.dev/resources/gallery_linux_screenshot.png&#34; alt=&#34;Screenshot of the Gallery on Linux&#34; title=&#34;Gallery&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Web using WebAssembly&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Printer Demo&lt;/th&gt; &#xA;   &lt;th&gt;Slide Puzzle&lt;/th&gt; &#xA;   &lt;th&gt;Energy Monitor&lt;/th&gt; &#xA;   &lt;th&gt;Widget Gallery&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://slint.dev/demos/printerdemo/&#34;&gt;&lt;img src=&#34;https://slint.dev/resources/printerdemo_screenshot.png&#34; alt=&#34;Screenshot of the Printer Demo&#34; title=&#34;Printer Demo&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://slint.dev/demos/slide_puzzle/&#34;&gt;&lt;img src=&#34;https://slint.dev/resources/puzzle_screenshot.png&#34; alt=&#34;Screenshot of the Slide Puzzle&#34; title=&#34;Slide Puzzle&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://slint.dev/demos/energy-monitor/&#34;&gt;&lt;img src=&#34;https://slint.dev/resources/energy-monitor-screenshot.png&#34; alt=&#34;Screenshot of the Energy Monitor Demo&#34; title=&#34;Energy Monitor Demo&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://slint.dev/demos/gallery/&#34;&gt;&lt;img src=&#34;https://slint.dev/resources/gallery_screenshot.png&#34; alt=&#34;Screenshot of the Gallery Demo&#34; title=&#34;Gallery Demo&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;h3&gt;Hello World&lt;/h3&gt; &#xA;&lt;p&gt;The UI is defined in a Domain Specific Language that is declarative, easy to use, intuitive, and provides a powerful way to describe graphical elements, their placement, their hierarchy, property bindings, and the flow of data through the different states.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s the obligatory &#34;Hello World&#34;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-slint&#34;&gt;export component HelloWorld inherits Window {&#xA;    width: 400px;&#xA;    height: 400px;&#xA;&#xA;    Text {&#xA;       y: parent.width / 2;&#xA;       x: parent.x + 200px;&#xA;       text: &#34;Hello, world&#34;;&#xA;       color: blue;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;For more details, check out the &lt;a href=&#34;https://slint.dev/docs/slint&#34;&gt;Slint Language Documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/examples&#34;&gt;examples&lt;/a&gt; folder contains examples and demos, showing how to use the Slint markup language and how to interact with a Slint user interface from supported programming languages.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;docs&lt;/code&gt; folder contains a lot more information, including &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/docs/building.md&#34;&gt;build instructions&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/docs/development.md&#34;&gt;internal developer docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Refer to the README of each language directory in the &lt;code&gt;api&lt;/code&gt; folder:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/api/cpp&#34;&gt;C++&lt;/a&gt; (&lt;a href=&#34;https://slint.dev/docs/cpp&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://slint.dev/docs/tutorial/cpp&#34;&gt;Tutorial&lt;/a&gt; | &lt;a href=&#34;https://github.com/slint-ui/slint-cpp-template&#34;&gt;Getting Started Template&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/api/rs/slint&#34;&gt;Rust&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/slint&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/slint&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt; (&lt;a href=&#34;https://slint.dev/docs/rust/slint/&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://slint.dev/docs/tutorial/rust&#34;&gt;Tutorial&lt;/a&gt; | &lt;a href=&#34;https://youtu.be/WBcv4V-whHk&#34;&gt;Tutorial Video&lt;/a&gt; | &lt;a href=&#34;https://github.com/slint-ui/slint-rust-template&#34;&gt;Getting Started Template&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/api/node&#34;&gt;JavaScript/NodeJS (Beta)&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/slint-ui&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/slint-ui&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; (&lt;a href=&#34;https://slint.dev/docs/node&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://slint.dev/docs/tutorial/node&#34;&gt;Tutorial&lt;/a&gt; | &lt;a href=&#34;https://github.com/slint-ui/slint-nodejs-template&#34;&gt;Getting Started Template&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;An application is composed of the business logic written in Rust, C++, or JavaScript and the &lt;code&gt;.slint&lt;/code&gt; user interface design markup, which is compiled to native code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://slint.dev/resources/architecture.drawio.svg?sanitize=true&#34; alt=&#34;Architecture Overview&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Compiler&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;.slint&lt;/code&gt; files are compiled ahead of time. The expressions in the &lt;code&gt;.slint&lt;/code&gt; are pure functions that the compiler can optimize. For example, the compiler could choose to &#34;inline&#34; properties and remove those that are constant or unchanged. In the future we hope to improve rendering time on low end devices by pre-processing images and text. The compiler could determine that a &lt;code&gt;Text&lt;/code&gt; or an &lt;code&gt;Image&lt;/code&gt; element is always on top of another &lt;code&gt;Image&lt;/code&gt; in the same location. Consequently both elements could be rendered ahead of time into a single element, thus cutting down on rendering time.&lt;/p&gt; &#xA;&lt;p&gt;The compiler uses the typical compiler phases of lexing, parsing, optimization, and finally code generation. It provides different back-ends for code generation in the target language. The C++ code generator produces a C++ header file, the Rust generator produces Rust code, and so on. An interpreter for dynamic languages is also included.&lt;/p&gt; &#xA;&lt;h3&gt;Runtime&lt;/h3&gt; &#xA;&lt;p&gt;The runtime library consists of an engine that supports properties declared in the &lt;code&gt;.slint&lt;/code&gt; language. Components with their elements, items, and properties are laid out in a single memory region, to reduce memory allocations.&lt;/p&gt; &#xA;&lt;p&gt;Rendering backends and styles are configurable at compile time:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;femtovg&lt;/code&gt; renderer uses OpenGL ES 2.0 for rendering.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;skia&lt;/code&gt; renderer uses &lt;a href=&#34;https://skia.org&#34;&gt;Skia&lt;/a&gt; for rendering.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;software&lt;/code&gt; renderer uses the CPU with no additional dependencies.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;NOTE: When Qt is installed on the system, the &lt;code&gt;qt&lt;/code&gt; style becomes available, using Qt&#39;s QStyle to achieve native looking widgets.&lt;/p&gt; &#xA;&lt;h3&gt;Tooling&lt;/h3&gt; &#xA;&lt;p&gt;We have a few tools to help with the development of .slint files:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/tools/lsp&#34;&gt;&lt;strong&gt;LSP Server&lt;/strong&gt;&lt;/a&gt; that adds features like auto-complete and live preview of the .slint files to many editors.&lt;/li&gt; &#xA; &lt;li&gt;It is bundled in a &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/editors/vscode&#34;&gt;&lt;strong&gt;Visual Studio Code Extension&lt;/strong&gt;&lt;/a&gt; available from the market place.&lt;/li&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/tools/viewer&#34;&gt;&lt;strong&gt;slint-viewer&lt;/strong&gt;&lt;/a&gt; tool which displays the .slint files. The &lt;code&gt;--auto-reload&lt;/code&gt; argument makes it easy to preview your UI while you are working on it (when using the LSP preview is not possible).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://slintpad.com/&#34;&gt;&lt;strong&gt;SlintPad&lt;/strong&gt;&lt;/a&gt;, an online editor to try out .slint syntax without installing anything (&lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/tools/slintpad&#34;&gt;sources&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;An &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/tools/updater&#34;&gt;&lt;strong&gt;updater&lt;/strong&gt;&lt;/a&gt; to convert the .slint files from previous versions to newer versions.&lt;/li&gt; &#xA; &lt;li&gt;An experimental &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/tools/figma_import&#34;&gt;&lt;strong&gt;Figma importer&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please check our &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/editors/README.md&#34;&gt;Editors README&lt;/a&gt; for tips on how to configure your favorite editor to work well with Slint.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;You can use Slint under &lt;em&gt;&lt;strong&gt;any&lt;/strong&gt;&lt;/em&gt; of the following licenses, at your choice:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/LICENSES/LicenseRef-Slint-Royalty-free-1.1.md&#34;&gt;Royalty-free license&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/LICENSES/GPL-3.0-only.txt&#34;&gt;GNU GPLv3&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://slint.dev/pricing.html&#34;&gt;Paid license&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;See also the &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/FAQ.md#licensing&#34;&gt;Licensing FAQ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;We welcome your contributions: in the form of code, bug reports or feedback.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you see an &lt;a href=&#34;https://github.com/slint-ui/slint/labels/rfc&#34;&gt;RFC tag&lt;/a&gt; on an issue, feel free to chime in.&lt;/li&gt; &#xA; &lt;li&gt;For contribution guidelines see &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; &#xA;&lt;p&gt;Please see our separate &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/FAQ.md&#34;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;About us (SixtyFPS GmbH)&lt;/h2&gt; &#xA;&lt;p&gt;We are passionate about software - API design, cross-platform software development and user interface components. Our aim is to make developing user interfaces fun for everyone: from JavaScript, C++, or Rust developers all the way to UI/UX designers. We believe that software grows organically and keeping it open source is the best way to sustain that growth. Our team members are located remotely in Germany.&lt;/p&gt; &#xA;&lt;h3&gt;Stay up to date&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow &lt;a href=&#34;https://twitter.com/slint_ui&#34;&gt;@slint-ui&lt;/a&gt; on X/Twitter.&lt;/li&gt; &#xA; &lt;li&gt;Follow &lt;a href=&#34;https://mastodon.social/@slint@fosstodon.org&#34;&gt;@slint@fosstodon.org&lt;/a&gt; on Mastodon.&lt;/li&gt; &#xA; &lt;li&gt;Follow &lt;a href=&#34;https://www.linkedin.com/company/slint-ui/&#34;&gt;@slint-ui&lt;/a&gt; on LinkedIn.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contact us&lt;/h3&gt; &#xA;&lt;p&gt;Feel free to join &lt;a href=&#34;https://github.com/slint-ui/slint/discussions&#34;&gt;Github discussions&lt;/a&gt; for general chat or questions. Use &lt;a href=&#34;https://github.com/slint-ui/slint/issues&#34;&gt;Github issues&lt;/a&gt; to report public suggestions or bugs.&lt;/p&gt; &#xA;&lt;p&gt;We chat in &lt;a href=&#34;https://chat.slint.dev&#34;&gt;our Mattermost instance&lt;/a&gt; where you are welcome to listen in or ask your questions.&lt;/p&gt; &#xA;&lt;p&gt;You can of course also contact us privately via email to &lt;a href=&#34;mailto://info@slint.dev&#34;&gt;info@slint.dev&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>