<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-08-01T01:57:26Z</updated>
  <subtitle>Monthly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tursodatabase/turso</title>
    <updated>2025-08-01T01:57:26Z</updated>
    <id>tag:github.com,2025-08-01:/tursodatabase/turso</id>
    <link href="https://github.com/tursodatabase/turso" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Turso Database is a project to build the next evolution of SQLite.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/turso.png&#34; alt=&#34;Turso Database&#34; width=&#34;800&#34;&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;Turso Database&lt;/h1&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;i&gt;Turso Database&lt;/i&gt; is an in-process SQL database, compatible with SQLite. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a title=&#34;Build Status&#34; target=&#34;_blank&#34; href=&#34;https://github.com/tursodatabase/turso/actions/workflows/rust.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/tursodatabase/turso/rust.yml?style=flat-square&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Releases&#34; target=&#34;_blank&#34; href=&#34;https://github.com/tursodatabase/turso/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/tursodatabase/turso?style=flat-square&amp;amp;color=9CF&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Rust&#34; target=&#34;_blank&#34; href=&#34;https://crates.io/crates/turso&#34;&gt;&lt;img alt=&#34;PyPI&#34; src=&#34;https://img.shields.io/crates/v/turso&#34;&gt;&lt;/a&gt; &lt;a title=&#34;JavaScript&#34; target=&#34;_blank&#34; href=&#34;https://www.npmjs.com/package/@tursodatabase/turso&#34;&gt;&lt;img alt=&#34;PyPI&#34; src=&#34;https://img.shields.io/npm/v/@tursodatabase/turso&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Python&#34; target=&#34;_blank&#34; href=&#34;https://pypi.org/project/pyturso/&#34;&gt;&lt;img alt=&#34;PyPI&#34; src=&#34;https://img.shields.io/pypi/v/pyturso&#34;&gt;&lt;/a&gt; &lt;a title=&#34;MIT&#34; target=&#34;_blank&#34; href=&#34;https://github.com/tursodatabase/turso/raw/main/LICENSE.md&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/license-MIT-orange.svg?style=flat-square&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a title=&#34;GitHub Pull Requests&#34; target=&#34;_blank&#34; href=&#34;https://github.com/tursodatabase/turso/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr-closed/tursodatabase/turso.svg?style=flat-square&amp;amp;color=FF9966&#34;&gt;&lt;/a&gt; &lt;a title=&#34;GitHub Commits&#34; target=&#34;_blank&#34; href=&#34;https://github.com/tursodatabase/turso/commits/main&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/tursodatabase/turso.svg?style=flat-square&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Last Commit&#34; target=&#34;_blank&#34; href=&#34;https://github.com/tursodatabase/turso/commits/main&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/tursodatabase/turso.svg?style=flat-square&amp;amp;color=FF9900&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a title=&#34;Developer&#39;s Discord&#34; target=&#34;_blank&#34; href=&#34;https://discord.gg/jgjmyYgHwB&#34;&gt;&lt;img alt=&#34;Chat with the Core Developers on Discord&#34; src=&#34;https://img.shields.io/discord/1258658826257961020?label=Discord&amp;amp;logo=Discord&amp;amp;style=social&amp;amp;label=Core%20Developers&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a title=&#34;Users&#39;s Discord&#34; target=&#34;_blank&#34; href=&#34;https://tur.so/discord&#34;&gt;&lt;img alt=&#34;Chat with other users of Turso (and Turso Cloud) on Discord&#34; src=&#34;https://img.shields.io/discord/933071162680958986?label=Discord&amp;amp;logo=Discord&amp;amp;style=social&amp;amp;label=Users&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Turso Database is a &lt;em&gt;work-in-progress&lt;/em&gt;, in-process OLTP database engine library written in Rust that has:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;SQLite compatibility&lt;/strong&gt; for SQL dialect, file formats, and the C API [see &lt;a href=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/COMPAT.md&#34;&gt;document&lt;/a&gt; for details]&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Change data capture (CDC)&lt;/strong&gt; for real-time tracking of database changes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Language support&lt;/strong&gt; for &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/bindings/go&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/bindings/javascript&#34;&gt;JavaScript&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/bindings/java&#34;&gt;Java&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/bindings/python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/bindings/rust&#34;&gt;Rust&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/bindings/javascript&#34;&gt;WebAssembly&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Asynchronous I/O&lt;/strong&gt; support on Linux with &lt;code&gt;io_uring&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OS support&lt;/strong&gt; for Linux, macOS, and Windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Roadmap&lt;/h3&gt; &#xA;&lt;p&gt;The following features are on our current roadmap:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;BEGIN CONCURRENT&lt;/code&gt;&lt;/strong&gt; for improved write throughput using multi-version concurrency control (MVCC).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Better schema management&lt;/strong&gt;, including extended &lt;code&gt;ALTER&lt;/code&gt; support, faster schema changes, and strict column types by default.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Incremental computation&lt;/strong&gt; using DBSP to implement query subscriptions, incremental view maintenance, and triggers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vector indexing&lt;/strong&gt; for fast approximate vector search, similar to &lt;a href=&#34;https://turso.tech/vector&#34;&gt;libSQL vector search&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/docs/manual.md&#34;&gt;Turso Database Manual&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;💻 Command Line&lt;/summary&gt; &#xA; &lt;br&gt; You can install the latest `turso` release with: &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl --proto &#39;=https&#39; --tlsv1.2 -LsSf \&#xA;  https://github.com/tursodatabase/turso/releases/latest/download/turso_cli-installer.sh | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Then launch the shell to execute SQL statements:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;Turso&#xA;Enter &#34;.help&#34; for usage hints.&#xA;Connected to a transient in-memory database.&#xA;Use &#34;.open FILENAME&#34; to reopen on a persistent database&#xA;turso&amp;gt; CREATE TABLE users (id INT, username TEXT);&#xA;turso&amp;gt; INSERT INTO users VALUES (1, &#39;alice&#39;);&#xA;turso&amp;gt; INSERT INTO users VALUES (2, &#39;bob&#39;);&#xA;turso&amp;gt; SELECT * FROM users;&#xA;1|alice&#xA;2|bob&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;You can also build and run the latest development version with:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;If you like docker, we got you covered. Simply run this in the root folder:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make docker-cli-build &amp;amp;&amp;amp; \&#xA;make docker-cli-run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;MCP Server Mode&lt;/h3&gt; &#xA; &lt;p&gt;The Turso CLI includes a built-in &lt;a href=&#34;https://modelcontextprotocol.io/&#34;&gt;Model Context Protocol (MCP)&lt;/a&gt; server that allows AI assistants to interact with your databases. Start the MCP server with:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;tursodb your_database.db --mcp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;The MCP server provides seven tools for database interaction:&lt;/p&gt; &#xA; &lt;h4&gt;Available Tools&lt;/h4&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;code&gt;list_tables&lt;/code&gt;&lt;/strong&gt; - List all tables in the database&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;code&gt;describe_table&lt;/code&gt;&lt;/strong&gt; - Describe the structure of a specific table&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;code&gt;execute_query&lt;/code&gt;&lt;/strong&gt; - Execute read-only SELECT queries&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;code&gt;insert_data&lt;/code&gt;&lt;/strong&gt; - Insert new data into tables&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;code&gt;update_data&lt;/code&gt;&lt;/strong&gt; - Update existing data in tables&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;code&gt;delete_data&lt;/code&gt;&lt;/strong&gt; - Delete data from tables&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;&lt;code&gt;schema_change&lt;/code&gt;&lt;/strong&gt; - Execute schema modification statements (CREATE TABLE, ALTER TABLE, DROP TABLE)&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;h4&gt;Example Usage&lt;/h4&gt; &#xA; &lt;p&gt;The MCP server runs as a single process that handles multiple JSON-RPC requests over stdin/stdout. Here&#39;s how to interact with it:&lt;/p&gt; &#xA; &lt;h4&gt;Example with In-Memory Database&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat &amp;lt;&amp;lt; &#39;EOF&#39; | tursodb --mcp&#xA;{&#34;jsonrpc&#34;: &#34;2.0&#34;, &#34;id&#34;: 1, &#34;method&#34;: &#34;initialize&#34;, &#34;params&#34;: {&#34;protocolVersion&#34;: &#34;2024-11-05&#34;, &#34;capabilities&#34;: {}, &#34;clientInfo&#34;: {&#34;name&#34;: &#34;client&#34;, &#34;version&#34;: &#34;1.0&#34;}}}&#xA;{&#34;jsonrpc&#34;: &#34;2.0&#34;, &#34;id&#34;: 2, &#34;method&#34;: &#34;tools/call&#34;, &#34;params&#34;: {&#34;name&#34;: &#34;schema_change&#34;, &#34;arguments&#34;: {&#34;query&#34;: &#34;CREATE TABLE users (id INTEGER, name TEXT, email TEXT)&#34;}}}&#xA;{&#34;jsonrpc&#34;: &#34;2.0&#34;, &#34;id&#34;: 3, &#34;method&#34;: &#34;tools/call&#34;, &#34;params&#34;: {&#34;name&#34;: &#34;list_tables&#34;, &#34;arguments&#34;: {}}}&#xA;{&#34;jsonrpc&#34;: &#34;2.0&#34;, &#34;id&#34;: 4, &#34;method&#34;: &#34;tools/call&#34;, &#34;params&#34;: {&#34;name&#34;: &#34;insert_data&#34;, &#34;arguments&#34;: {&#34;query&#34;: &#34;INSERT INTO users VALUES (1, &#39;Alice&#39;, &#39;alice@example.com&#39;)&#34;}}}&#xA;{&#34;jsonrpc&#34;: &#34;2.0&#34;, &#34;id&#34;: 5, &#34;method&#34;: &#34;tools/call&#34;, &#34;params&#34;: {&#34;name&#34;: &#34;execute_query&#34;, &#34;arguments&#34;: {&#34;query&#34;: &#34;SELECT * FROM users&#34;}}}&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;Example with Existing Database&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Working with an existing database file&#xA;cat &amp;lt;&amp;lt; &#39;EOF&#39; | tursodb mydb.db --mcp&#xA;{&#34;jsonrpc&#34;: &#34;2.0&#34;, &#34;id&#34;: 1, &#34;method&#34;: &#34;initialize&#34;, &#34;params&#34;: {&#34;protocolVersion&#34;: &#34;2024-11-05&#34;, &#34;capabilities&#34;: {}, &#34;clientInfo&#34;: {&#34;name&#34;: &#34;client&#34;, &#34;version&#34;: &#34;1.0&#34;}}}&#xA;{&#34;jsonrpc&#34;: &#34;2.0&#34;, &#34;id&#34;: 2, &#34;method&#34;: &#34;tools/call&#34;, &#34;params&#34;: {&#34;name&#34;: &#34;list_tables&#34;, &#34;arguments&#34;: {}}}&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;🦀 Rust&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;cargo add turso&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Example usage:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;let db = Builder::new_local(&#34;sqlite.db&#34;).build().await?;&#xA;let conn = db.connect()?;&#xA;&#xA;let res = conn.query(&#34;SELECT * FROM users&#34;, ()).await?;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;✨ JavaScript&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;npm i @tursodatabase/turso&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Example usage:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { Database } from &#39;@tursodatabase/turso&#39;;&#xA;&#xA;const db = new Database(&#39;sqlite.db&#39;);&#xA;const stmt = db.prepare(&#39;SELECT * FROM users&#39;);&#xA;const users = stmt.all();&#xA;console.log(users);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;🐍 Python&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;pip install pyturso&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Example usage:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import turso&#xA;&#xA;con = turso.connect(&#34;sqlite.db&#34;)&#xA;cur = con.cursor()&#xA;res = cur.execute(&#34;SELECT * FROM users&#34;)&#xA;print(res.fetchone())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;🦫 Go&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Clone the repository&lt;/li&gt; &#xA;  &lt;li&gt;Build the library and set your LD_LIBRARY_PATH to include turso&#39;s target directory&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;cargo build --package limbo-go&#xA;export LD_LIBRARY_PATH=/path/to/limbo/target/debug:$LD_LIBRARY_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ol start=&#34;3&#34;&gt; &#xA;  &lt;li&gt;Use the driver&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;go get github.com/tursodatabase/turso&#xA;go install github.com/tursodatabase/turso&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Example usage:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;import (&#xA;    &#34;database/sql&#34;&#xA;    _ &#34;github.com/tursodatabase/turso&#34;&#xA;)&#xA;&#xA;conn, _ = sql.Open(&#34;sqlite3&#34;, &#34;sqlite.db&#34;)&#xA;defer conn.Close()&#xA;&#xA;stmt, _ := conn.Prepare(&#34;select * from users&#34;)&#xA;defer stmt.Close()&#xA;&#xA;rows, _ = stmt.Query()&#xA;for rows.Next() {&#xA;    var id int&#xA;    var username string&#xA;    _ := rows.Scan(&amp;amp;id, &amp;amp;username)&#xA;    fmt.Printf(&#34;User: ID: %d, Username: %s\n&#34;, id, username)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;☕️ Java&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;We integrated Turso Database into JDBC. For detailed instructions on how to use Turso Database with java, please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/bindings/java/README.md&#34;&gt;README.md under bindings/java&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;d love to have you contribute to Turso Database! Please check out the &lt;a href=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;h3&gt;Found a data corruption bug? Get up to $1,000.00&lt;/h3&gt; &#xA;&lt;p&gt;SQLite is loved because it is the most reliable database in the world. The next evolution of SQLite has to match or surpass this level of reliability. Turso is built with &lt;a href=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/simulator/&#34;&gt;Deterministic Simulation Testing&lt;/a&gt; from the ground up, and is also tested by &lt;a href=&#34;https://antithesis.com&#34;&gt;Antithesis&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Even during Alpha, if you find a bug that leads to a data corruption and demonstrate how our simulator failed to catch it, you can get up to $1,000.00. As the project matures we will increase the size of the prize, and the scope of the bugs.&lt;/p&gt; &#xA;&lt;p&gt;More details &lt;a href=&#34;https://turso.algora.io&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can see an example of an awarded case on &lt;a href=&#34;https://github.com/tursodatabase/turso/issues/2049&#34;&gt;#2049&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Turso core staff are not eligible.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Is Turso Database ready for production use?&lt;/h3&gt; &#xA;&lt;p&gt;Turso Database is currently under heavy development and is &lt;strong&gt;not&lt;/strong&gt; ready for production use.&lt;/p&gt; &#xA;&lt;h3&gt;How is Turso Database different from Turso&#39;s libSQL?&lt;/h3&gt; &#xA;&lt;p&gt;Turso Database is a project to build the next evolution of SQLite in Rust, with a strong open contribution focus and features like native async support, vector search, and more. The libSQL project is also an attempt to evolve SQLite in a similar direction, but through a fork rather than a rewrite.&lt;/p&gt; &#xA;&lt;p&gt;Rewriting SQLite in Rust started as an unassuming experiment, and due to its incredible success, replaces libSQL as our intended direction. At this point, libSQL is production ready, Turso Database is not - although it is evolving rapidly. More details &lt;a href=&#34;https://turso.tech/blog/we-will-rewrite-sqlite-and-we-are-going-all-in&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Publications&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pekka Enberg, Sasu Tarkoma, Jon Crowcroft Ashwin Rao (2024). Serverless Runtime / Database Co-Design With Asynchronous I/O. In &lt;em&gt;EdgeSys ‘24&lt;/em&gt;. &lt;a href=&#34;https://penberg.org/papers/penberg-edgesys24.pdf&#34;&gt;[PDF]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pekka Enberg, Sasu Tarkoma, and Ashwin Rao (2023). Towards Database and Serverless Runtime Co-Design. In &lt;em&gt;CoNEXT-SW ’23&lt;/em&gt;. [&lt;a href=&#34;https://penberg.org/papers/penberg-conext-sw-23.pdf&#34;&gt;PDF&lt;/a&gt;] [&lt;a href=&#34;https://penberg.org/papers/penberg-conext-sw-23-slides.pdf&#34;&gt;Slides&lt;/a&gt;]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/LICENSE.md&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Contribution&lt;/h3&gt; &#xA;&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in Turso Database by you, shall be licensed as MIT, without any additional terms or conditions.&lt;/p&gt; &#xA;&lt;h2&gt;Partners&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to all the partners of Turso!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://antithesis.com/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/assets/antithesis.jpg&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blacksmith.sh&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/assets/blacksmith.svg?sanitize=true&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nyrkio.com/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tursodatabase/turso/main/assets/turso-nyrkio.png&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to all the contributors to Turso Database!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/tursodatabase/turso/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=tursodatabase/turso&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>EFForg/rayhunter</title>
    <updated>2025-08-01T01:57:26Z</updated>
    <id>tag:github.com,2025-08-01:/EFForg/rayhunter</id>
    <link href="https://github.com/EFForg/rayhunter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Rust tool to detect cell site simulators on an orbic mobile hotspot&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://www.eff.org/files/styles/media_browser_preview/public/banner_library/rayhunter-banner.png&#34; alt=&#34;Rayhunter Logo - An Orca taking a bite out of a cellular signal bar&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Rayhunter&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/EFForg/rayhunter/actions/workflows/main.yml/badge.svg?sanitize=true&#34; alt=&#34;Tests&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Rayhunter is an IMSI Catcher Catcher for the Orbic mobile hotspot. To learn more, check out the &lt;a href=&#34;https://efforg.github.io/rayhunter/&#34;&gt;Rayhunter Book&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>smallcloudai/refact</title>
    <updated>2025-08-01T01:57:26Z</updated>
    <id>tag:github.com,2025-08-01:/smallcloudai/refact</id>
    <link href="https://github.com/smallcloudai/refact" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AI Agent that handles engineering tasks end-to-end: integrates with developers’ tools, plans, executes, and iterates until it achieves a successful result.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a name=&#34;readme-top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://docs.refact.ai/_astro/logo-dark.CCzD55EA.svg&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://docs.refact.ai/_astro/logo-light.CblxRz3x.svg&#34;&gt; &#xA;  &lt;!-- Fallback if neither preference is set --&gt; &#xA;  &lt;img alt=&#34;Refact.ai logo&#34; src=&#34;https://docs.refact.ai/_astro/logo-dark.CCzD55EA.svg?sanitize=true&#34; width=&#34;200&#34;&gt; &#xA; &lt;/picture&gt; &#xA; &lt;h1 align=&#34;center&#34;&gt;Refact - Open Sourced AI Software Development Agent&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/smallcloudai/refact/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/smallcloudai/refact?style=for-the-badge&amp;amp;color=blue&#34; alt=&#34;Stargazers&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://discord.gg/Kts7CYg99R&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-Join%20Us-purple?logo=discord&amp;amp;logoColor=white&amp;amp;style=for-the-badge&#34; alt=&#34;Join our Discord community&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://docs.refact.ai&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/documentation-blue?logo=googledocs&amp;amp;logoColor=FFE165&amp;amp;style=for-the-badge&#34; alt=&#34;Check out the documentation&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Refact.ai is the #1 open-source AI Agent in SWE-bench verified that handles engineering tasks end-to-end. It deeply understands your codebases and integrates with your tools, databases, and browsers to automate complex, multi-step tasks.&lt;/p&gt; &#xA;&lt;h2&gt;🚀 Seamless Integration with Your Workflow&lt;/h2&gt; &#xA;&lt;p&gt;Refact Agent works effortlessly with the tools and databases you already use:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;📁 Version Control:&lt;/strong&gt; GitHub, GitLab&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;🗄️ Databases:&lt;/strong&gt; PostgreSQL, MySQL&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;🛠️ Debugging:&lt;/strong&gt; Pdb&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;🐳 Containerization:&lt;/strong&gt; Docker&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;⚡ Why Choose Refact Agent?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;✅ &lt;strong&gt;Deploy On-Premise:&lt;/strong&gt; For maximum security, choose our self-hosted AI Agent version and run it on your own infrastructure.&lt;/li&gt; &#xA; &lt;li&gt;🧠 &lt;strong&gt;Access State-of-the-Art Models:&lt;/strong&gt; Use Claude 4, GPT-4o, or GPT-4o mini with AI Agent or for chat queries.&lt;/li&gt; &#xA; &lt;li&gt;🔑 &lt;strong&gt;Bring Your Own Key (BYOK):&lt;/strong&gt; Connect your API key and use any LLM: Gemini, Grok, OpenAI, Deepseek, and others.&lt;/li&gt; &#xA; &lt;li&gt;💬 &lt;strong&gt;Integrated IDE Chat:&lt;/strong&gt; Integrate with GitHub, PostgreSQL, Docker, and more. Refact.ai Agent accesses your resources and handles related operations autonomously, mimicking your workflow.&lt;/li&gt; &#xA; &lt;li&gt;⚡ &lt;strong&gt;Free, Unlimited, Context-Aware Auto-Completion:&lt;/strong&gt; Code faster with smart AI suggestions.&lt;/li&gt; &#xA; &lt;li&gt;🛠️ &lt;strong&gt;Supports 25+ Programming Languages:&lt;/strong&gt; Python, JavaScript, Java, Rust, TypeScript, PHP, C++, C#, Go, and many more!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🎉 Hear from our Community&lt;/h3&gt; &#xA;&lt;p&gt;Our Ambassadors shared remarkable stories of how they transform weeks of coding into minutes with Refact.ai Agent!&lt;/p&gt; &#xA;&lt;p&gt;1️. How Refact.ai built 99.9% of an IoT cloud app &lt;a href=&#34;https://www.linkedin.com/posts/refactai_refactai-agent-activity-7308103386451578881-FO23/&#34;&gt;Read&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;2️. How AI-coded prototypes help UX teams deliver real value &lt;a href=&#34;https://medium.com/@siarheimardovich/how-ai-coded-prototypes-help-ux-teams-deliver-real-value-b51eb2ea5167&#34;&gt;Read&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;3️. 80 hours of building from scratch — instead done in 30 minutes &lt;a href=&#34;https://www.linkedin.com/posts/refactai_refactai-users-stories-activity-7310996174864289793-692-/&#34;&gt;Read more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;4️. 3 weeks of waiting for a functional GUI? Built in just 14 minutes &lt;a href=&#34;https://www.linkedin.com/posts/refactai_refactai-users-stories-activity-7310996174864289793-692-/&#34;&gt;Read more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Built an automated SEO Content Generator in 60 minutes with Refact.ai &lt;a href=&#34;https://refact.ai/blog/2025/automated-seo-content-generator-in-60-minutes/&#34;&gt;Read more&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;📜 &lt;a href=&#34;https://docs.refact.ai/supported-models/&#34;&gt;View Full List of Supported Models&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;📢 &lt;strong&gt;Using AI for work? Let’s bring it to your company!&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://refact.ai/contact/?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=enterprise&#34;&gt;Fill out this form&lt;/a&gt; — Our AI Agent will be tailored to your company’s data, learning from feedback, and helping organize knowledge for &lt;strong&gt;better collaboration&lt;/strong&gt; with your team.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;📚 Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🚀 &lt;a href=&#34;https://raw.githubusercontent.com/smallcloudai/refact/main/#-core-features-and-functionality&#34;&gt;Core Features and Functionality&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🤖 &lt;a href=&#34;https://raw.githubusercontent.com/smallcloudai/refact/main/#-which-tasks-can-refact-help-you-with&#34;&gt;Which Tasks Can Refact Help You With?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;⚙️ &lt;a href=&#34;https://raw.githubusercontent.com/smallcloudai/refact/main/#%EF%B8%8F-quickstart&#34;&gt;QuickStart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🐳 &lt;a href=&#34;https://raw.githubusercontent.com/smallcloudai/refact/main/#-running-refact-self-hosted-in-a-docker-container&#34;&gt;Running Refact Self-Hosted in a Docker Container&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔌 &lt;a href=&#34;https://raw.githubusercontent.com/smallcloudai/refact/main/#-getting-started-with-plugins&#34;&gt;Getting Started with Plugins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;📖 &lt;a href=&#34;https://raw.githubusercontent.com/smallcloudai/refact/main/#-documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🥇 &lt;a href=&#34;https://raw.githubusercontent.com/smallcloudai/refact/main/#-contribution&#34;&gt;Contribution&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🎉 &lt;a href=&#34;https://raw.githubusercontent.com/smallcloudai/refact/main/#-join-the-community&#34;&gt;Join the Community&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚀 Core Features and Functionality&lt;/h2&gt; &#xA;&lt;p&gt;✅ &lt;strong&gt;Unlimited accurate auto-completion&lt;/strong&gt; with context awareness – Powered by Qwen2.5-Coder-1.5B, utilizing Retrieval-Augmented Generation (RAG).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXfClhl11Ul0YQjDTZJvrfhsj3bqK_VIz6bFfbTRc62dsMOz4LK4u72i9-gLTQDIgm0yChmFe57hvUxSoI2fQ5DSntna7_Ch0qbGx5zcB-othfwKnoYkbt3M3YgGFlrqFszuDEBhUw?key=zllGjEBckkx13bRZ6JIqX6qr&#34; alt=&#34;auto-completion&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;✅ &lt;strong&gt;Integrated in-IDE Chat&lt;/strong&gt; – AI deeply understands your code and provides relevant, intelligent answers.&lt;/p&gt; &#xA;&lt;p&gt;✅ &lt;strong&gt;Integrated with Tools&lt;/strong&gt; – Works with GitHub, GitLab, PostgreSQL, MySQL, Pdb, Docker, and shell commands.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXc4DWYXF73AgPWAaFFGLTqEprWwA0im8R_A1QMo4QW4pTnSi1MCoP9L8udMZb5FPyN-CdgefaxJFGpX2ndn5nkjGBF2b_hZBNHogM7IM6SPvUIvUd9iE1lYIq7q-TB2qKzSGLk00A?key=zllGjEBckkx13bRZ6JIqX6qr&#34; alt=&#34;integrations&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;✅ &lt;strong&gt;State-of-the-Art Models&lt;/strong&gt; – Use Claude 4, GPT-4o, or GPT-4o mini with AI Agent or for chat queries.&lt;/p&gt; &#xA;&lt;p&gt;✅ &lt;strong&gt;Bring Your Own Key (BYOK)&lt;/strong&gt; – Use your own API keys for external LLMs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://lh7-rt.googleusercontent.com/docsz/AD_4nXe1UDsuaER6WMxAnKEwz15T3OPslkpSo2vNGMGaNoEiZOJvAptY8yEvND_rI23q_5Sof1DceexyrW5x6oUwcpVr5KQvWUByrN_TnLGVY2HG_0sg8uWnRb14jKAes2MBDPM37EQO?key=zllGjEBckkx13bRZ6JIqX6qr&#34; alt=&#34;BYOK&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🤖 Which Tasks Can Refact Help You With?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;🏗 &lt;strong&gt;Generate code&lt;/strong&gt; from natural language prompts (even with typos).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🔄 &lt;strong&gt;Refactor code&lt;/strong&gt; for better quality and readability.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;📖 &lt;strong&gt;Explain code&lt;/strong&gt; to quickly understand unfamiliar code.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🐞 &lt;strong&gt;Debug code&lt;/strong&gt; to detect and fix errors faster.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🧪 &lt;strong&gt;Generate unit tests&lt;/strong&gt; for reliable code.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;📌 &lt;strong&gt;Code Review&lt;/strong&gt; with AI-assisted suggestions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;📜 &lt;strong&gt;Create Documentation&lt;/strong&gt; to keep knowledge up to date.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🏷 &lt;strong&gt;Generate Docstrings&lt;/strong&gt; for structured documentation.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⚙️ QuickStart&lt;/h2&gt; &#xA;&lt;p&gt;You can install the Refact repository without Docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For GPU with CUDA capability &amp;gt;= 8.0 and flash-attention v2 support:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;FLASH_ATTENTION_FORCE_BUILD=TRUE MAX_JOBS=4 INSTALL_OPTIONAL=TRUE pip install .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🐳 Running Refact Self-Hosted in a Docker Container&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to run the self-hosted server is using a pre-built Docker image.&lt;br&gt; See &lt;code&gt;CONTRIBUTING.md&lt;/code&gt; for installation without a Docker container.&lt;/p&gt; &#xA;&lt;h3&gt;🔌 Getting Started with Plugins&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Download Refact&lt;/strong&gt; for VS Code or JetBrains.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Set up a custom inference URL:&lt;/strong&gt; &lt;pre&gt;&lt;code&gt;http://127.0.0.1:8008&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Configure the plugin settings:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;JetBrains:&lt;/strong&gt; Settings &amp;gt; Tools &amp;gt; Refact.ai &amp;gt; Advanced &amp;gt; Inference URL&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;VSCode:&lt;/strong&gt; Extensions &amp;gt; Refact.ai Assistant &amp;gt; Settings &amp;gt; Address URL&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;📖 Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For detailed guidance and best practices, check out our &lt;a href=&#34;https://docs.refact.ai/&#34;&gt;documentation.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🥇 Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Want to contribute to our project? We&#39;re always open to new ideas and features!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Check out GitHub Issues&lt;/strong&gt; – See what we&#39;re working on or suggest your own ideas.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Read our Contributing Guide&lt;/strong&gt; – Check out &lt;code&gt;Contributing.md&lt;/code&gt; to get started.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Your contributions help shape the future of Refact Agent! 🚀&lt;/p&gt; &#xA;&lt;h3&gt;⭐ Star History&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/48440c6e-b0cd-4421-880e-44924bd21693&#34; alt=&#34;image (4)&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;🎉 Join the Community&lt;/h3&gt; &#xA;&lt;p&gt;We&#39;re all about open-source and empowering developers with AI tools. Our vision is to build the future of programming. Join us and be part of the journey!&lt;/p&gt; &#xA;&lt;p&gt;📢 &lt;strong&gt;&lt;a href=&#34;https://refact.ai/community/&#34;&gt;Join our Discord server&lt;/a&gt;&lt;/strong&gt; – A community-run space for discussion, questions, and feedback.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Made with ❤️ by developers who automate the boring, so you can focus on building the future.&lt;/strong&gt;&lt;/p&gt;</summary>
  </entry>
</feed>