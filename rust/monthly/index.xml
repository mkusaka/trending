<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-01T02:21:29Z</updated>
  <subtitle>Monthly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zurawiki/gptcommit</title>
    <updated>2023-04-01T02:21:29Z</updated>
    <id>tag:github.com,2023-04-01:/zurawiki/gptcommit</id>
    <link href="https://github.com/zurawiki/gptcommit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A git prepare-commit-msg hook for authoring commit messages with GPT-3.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;gptcommit&lt;/code&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zurawiki/gptcommit/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/zurawiki/gptcommit.svg?sanitize=true&#34; alt=&#34;Github Contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zurawiki/gptcommit/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/zurawiki/gptcommit.svg?sanitize=true&#34; alt=&#34;Github Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zurawiki/gptcommit/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/zurawiki/gptcommit/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://crates.io/crates/gptcommit&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/gptcommit.svg?sanitize=true&#34; alt=&#34;crates.io status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/gptcommit&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/d/gptcommit.svg?sanitize=true&#34; alt=&#34;crates.io downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://deps.rs/repo/github/zurawiki/gptcommit&#34;&gt;&lt;img src=&#34;https://deps.rs/repo/github/zurawiki/gptcommit/status.svg?sanitize=true&#34; alt=&#34;Rust dependency status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A git prepare-commit-msg hook for authoring commit messages with GPT-3. With this tool, you can easily generate clear, comprehensive and descriptive commit messages letting you focus on writing code.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://zura.wiki/post/never-write-a-commit-message-again-with-the-help-of-gpt-3/&#34;&gt;announcement blog post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/552380&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/552380.svg?sanitize=true&#34; alt=&#34;asciicast&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install this tool locally with &lt;code&gt;cargo&lt;/code&gt; (recommended).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo install --locked gptcommit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or on macOS, use homebrew&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install zurawiki/brews/gptcommit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;In your &lt;code&gt;git&lt;/code&gt; repository, run the following command to install &lt;code&gt;gptcommit&lt;/code&gt; as a git prepare-commit-msg hook. You will need to provide an OpenAI API key to complete the installation.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;gptcommit install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To use &lt;code&gt;gptcommit&lt;/code&gt;, simply run &lt;code&gt;git commit&lt;/code&gt; as you normally would. The hook will automatically generate a commit message for you using a large language model like GPT. If you&#39;re not satisfied with the generated message, you can always edit it before committing.&lt;/p&gt; &#xA;&lt;p&gt;Note: By default, &lt;code&gt;gptcommit&lt;/code&gt; uses the GPT-3 model. Please ensure you have sufficient credits in your OpenAI account to use it.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;gptcommit&lt;/code&gt; supports a number of configuration options that are read from &lt;code&gt;$HOME/.config/gptcommit/config.toml&lt;/code&gt;. Configs are applied in the following order:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;User settings as read from &lt;code&gt;$HOME/.config/gptcommit/config.toml&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The settings as read from the repo clone at &lt;code&gt;$GIT_ROOT/.git/gptcommit.toml&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Environment variables starting with &lt;code&gt;GPTCOMMIT__*&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See all the config options available with &lt;code&gt;gptcommit config keys&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Set your OpenAI API key&lt;/h3&gt; &#xA;&lt;p&gt;Persist your OpenAI key&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gptcommit config set openai.api_key sk-...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or set it just for you local repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gptcommit config set --local openai.api_key sk-...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also config this setting via the &lt;code&gt;GPTCOMMIT__OPENAI__API_KEY&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To maintain compatibility with other OpenAI clients, we support the &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; environment variables. This will take the highest precedence.&lt;/p&gt; &#xA;&lt;h3&gt;Set a custom OpenAI API base URL&lt;/h3&gt; &#xA;&lt;p&gt;Persist your OpenAI key&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gptcommit config set openai.api_base https://...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or set it just for you local repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gptcommit config set --local openai.api_base https://...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also config this setting via the &lt;code&gt;GPTCOMMIT__OPENAI__API_BASE&lt;/code&gt; or .&lt;/p&gt; &#xA;&lt;p&gt;To maintain compatibility with other OpenAI clients, we support the &lt;code&gt;OPENAI_API_BASE&lt;/code&gt; environment variables. This will take the highest precedence.&lt;/p&gt; &#xA;&lt;h3&gt;Try out a different OpenAI model&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;gptcommit&lt;/code&gt; uses &lt;code&gt;text-davinci-003&lt;/code&gt; by default. The model can be configured to use other models as below&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gptcommit config set openai.model text-davinci-002&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also config this setting via the &lt;code&gt;GPTCOMMIT__OPENAI__MODEL&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For a list of public OpenAI models, checkout the &lt;a href=&#34;https://beta.openai.com/docs/models/overview&#34;&gt;OpenAI docs&lt;/a&gt;. You can also bring in your own fine-tuned model.&lt;/p&gt; &#xA;&lt;h3&gt;Set summarizing language&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;gptcommit&lt;/code&gt; uses English by default. The language can be configured to use other languages as below&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gptcommit config set output.lang zh-cn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, supported languages are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;locale code&lt;/th&gt; &#xA;   &lt;th&gt;language&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;en&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;English&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;zh-cn&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;简体中文&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;zh-tw&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;繁體中文&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ja&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;日本語&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Allow re-summarizing when amending commits&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gptcommit config set allow-amend true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Proxy configuration support&lt;/h3&gt; &#xA;&lt;p&gt;Configure an OpenAI proxy using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gptcommit config set openai.proxy &#34;my_http_proxy....&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Common Issues / FAQs&lt;/h2&gt; &#xA;&lt;h3&gt;How can I reduce my OpenAI usage bill?&lt;/h3&gt; &#xA;&lt;p&gt;In the current design, gptcommit issues N+2 prompts, where N is the number of modified files with diffs under the max_token_limit. The other prompts are the title and summary.&lt;/p&gt; &#xA;&lt;p&gt;OpenAI Completions are billed by &#34;tokens&#34; that are both sent and generated. Pricing per token depends on the model used. The number of tokens generated are generally predictable (as a commit message is usually only so big) but gptcommit could be sending over a lot of tokens in the form of diff data.&lt;/p&gt; &#xA;&lt;p&gt;Today, I see two low-hanging solutions for reducing cost:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Switch to a different model using the openai.model configuration option&lt;/li&gt; &#xA; &lt;li&gt;Reduce the side of prompts and diff data sent to OpenAI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;OpenAI&#39;s pricing page can be found at &lt;a href=&#34;https://openai.com/api/pricing/#faq-completions-pricing&#34;&gt;https://openai.com/api/pricing/#faq-completions-pricing&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;The githook is not running when I commit&lt;/h3&gt; &#xA;&lt;p&gt;By default, the githook is only run for new commits. If a template is set or the commit is being amended, the githook will skip by default.&lt;/p&gt; &#xA;&lt;p&gt;Because the githook detected the user is supplying their own template, we make sure not to overwrite it with GPT. You can remove the commit template by making sure &lt;code&gt;git config --local commit.template&lt;/code&gt; is blank.&lt;/p&gt; &#xA;&lt;p&gt;You can allow gptcommit to summarize amended commits with the following configuration above.&lt;/p&gt; &#xA;&lt;h3&gt;Installing in GitHub codespaces&lt;/h3&gt; &#xA;&lt;p&gt;You&#39;ll need to install Rust and the cargo toolchain first. Remember to configure your API key.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl https://sh.rustup.rs -sSf | sh&#xA;bash&#xA;cargo install --locked gptcommit&#xA;&#xA;# insert your openai api key https://platform.openai.com/account/api-keys&#xA;gptcommit config set openai.api_key # sk-...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Derived Works&lt;/h2&gt; &#xA;&lt;p&gt;All of these awesome projects are built using &lt;code&gt;gptcommit&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A VSCode extension you can &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=pwwang.gptcommit&#34;&gt;install here&lt;/a&gt; | &lt;a href=&#34;https://github.com/pwwang/vscode-gptcommit&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Encountered any bugs?&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter any bugs or have any suggestions for improvements, please open an issue on the repository.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/zurawiki/gptcommit/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Detailed Help Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gptcommit -h&#xA;Usage: gptcommit [OPTIONS] &amp;lt;COMMAND&amp;gt;&#xA;&#xA;Commands:&#xA;  install             Install the git hook&#xA;  uninstall           Uninstall the git hook&#xA;  config              Read and modify settings&#xA;  prepare-commit-msg  Run on the prepare-commit-msg hook&#xA;  help                Print this message or the help of the given subcommand(s)&#xA;&#xA;Options:&#xA;  -v, --verbose  Enable verbose logging&#xA;  -h, --help     Print help&#xA;  -V, --version  Print version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gptcommit install -h&#xA;Install the git hook&#xA;&#xA;Usage: gptcommit install [OPTIONS]&#xA;&#xA;Options:&#xA;  -v, --verbose  Enable verbose logging&#xA;  -h, --help     Print help&#xA;  -V, --version  Print version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gptcommit uninstall -h&#xA;Uninstall the git hook&#xA;&#xA;Usage: gptcommit uninstall [OPTIONS]&#xA;&#xA;Options:&#xA;  -v, --verbose  Enable verbose logging&#xA;  -h, --help     Print help&#xA;  -V, --version  Print version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gptcommit config -h&#xA;Read and modify settings&#xA;&#xA;Usage: gptcommit config [OPTIONS] &amp;lt;COMMAND&amp;gt;&#xA;&#xA;Commands:&#xA;  keys    List all config keys&#xA;  list    List all config values&#xA;  get     Read a config value&#xA;  set     Set a config value&#xA;  delete  Clear a config value&#xA;  help    Print this message or the help of the given subcommand(s)&#xA;&#xA;Options:&#xA;  -v, --verbose  Enable verbose logging&#xA;  -h, --help     Print help&#xA;  -V, --version  Print version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gptcommit config keys&#xA;allow_amend&#xA;file_ignore&#xA;model_provider&#xA;openai.api_base&#xA;openai.api_key&#xA;openai.model&#xA;openai.proxy&#xA;openai.retries&#xA;output.conventional_commit&#xA;output.conventional_commit_prefix_format&#xA;output.lang&#xA;output.show_per_file_summary&#xA;prompt.commit_summary&#xA;prompt.commit_title&#xA;prompt.conventional_commit_prefix&#xA;prompt.file_diff&#xA;prompt.translation&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>qdrant/qdrant</title>
    <updated>2023-04-01T02:21:29Z</updated>
    <id>tag:github.com,2023-04-01:/qdrant/qdrant</id>
    <link href="https://github.com/qdrant/qdrant" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Qdrant - Vector Search Engine and Database for the next generation of AI applications. Also available in the cloud https://cloud.qdrant.io/&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img height=&#34;100&#34; src=&#34;https://github.com/qdrant/qdrant/raw/master/docs/logo.svg?sanitize=true&#34; alt=&#34;Qdrant&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Vector Search Engine for the next generation of AI applications&lt;/b&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/qdrant/qdrant/actions/workflows/rust.yml&#34;&gt;&lt;img src=&#34;https://github.com/qdrant/qdrant/workflows/Tests/badge.svg?sanitize=true&#34; alt=&#34;Tests status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://qdrant.github.io/qdrant/redoc/index.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Docs-OpenAPI%203.0-success&#34; alt=&#34;OpenAPI Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qdrant/qdrant/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-success&#34; alt=&#34;Apache 2.0 License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://qdrant.to/discord&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-Qdrant-5865F2.svg?logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://qdrant.to/roadmap&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Roadmap-2023-bc1439.svg?sanitize=true&#34; alt=&#34;Roadmap 2023&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Qdrant&lt;/strong&gt; (read: &lt;em&gt;quadrant&lt;/em&gt; ) is a vector similarity search engine and vector database. It provides a production-ready service with a convenient API to store, search, and manage points - vectors with an additional payload. Qdrant is tailored to extended filtering support. It makes it useful for all sorts of neural-network or semantic-based matching, faceted search, and other applications.&lt;/p&gt; &#xA;&lt;p&gt;Qdrant is written in Rust 🦀, which makes it fast and reliable even under high load.&lt;/p&gt; &#xA;&lt;p&gt;With Qdrant, embeddings or neural network encoders can be turned into full-fledged applications for matching, searching, recommending, and much more!&lt;/p&gt; &#xA;&lt;p&gt;Also available as managed solution in the &lt;strong&gt;Qdrant Cloud&lt;/strong&gt; &lt;a href=&#34;https://cloud.qdrant.io/&#34;&gt;https://cloud.qdrant.io/&lt;/a&gt; ⛅&lt;/p&gt; &#xA;&lt;h2&gt;Demo Projects&lt;/h2&gt; &#xA;&lt;h3&gt;Semantic Text Search 🔍&lt;/h3&gt; &#xA;&lt;p&gt;The neural search uses semantic embeddings instead of keywords and works best with short texts. With Qdrant and a pre-trained neural network, you can build and deploy semantic neural search on your data in minutes. &lt;a href=&#34;https://qdrant.to/semantic-search-demo&#34;&gt;Try it online!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Similar Image Search - Food Discovery 🍕&lt;/h3&gt; &#xA;&lt;p&gt;There are multiple ways to discover things, text search is not the only one. In the case of food, people rely more on appearance than description and ingredients. So why not let people choose their next lunch by its appearance, even if they don’t know the name of the dish? &lt;a href=&#34;https://qdrant.to/food-discovery&#34;&gt;Check it out!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Extreme classification - E-commerce Product Categorization 📺&lt;/h3&gt; &#xA;&lt;p&gt;Extreme classification is a rapidly growing research area within machine learning focusing on multi-class and multi-label problems involving an extremely large number of labels. Sometimes it is millions and tens of millions classes. The most promising way to solve this problem is to use similarity learning models. We put together a demo example of how you could approach the problem with a pre-trained transformer model and Qdrant. So you can &lt;a href=&#34;https://qdrant.to/extreme-classification-demo&#34;&gt;play with it online!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; More solutions &lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;td width=&#34;30%&#34;&gt; &lt;img src=&#34;https://qdrant.tech/content/images/text_search.png&#34;&gt; &lt;/td&gt; &#xA;    &lt;td width=&#34;30%&#34;&gt; &lt;img src=&#34;https://qdrant.tech/content/images/image_search.png&#34;&gt; &lt;/td&gt; &#xA;    &lt;td width=&#34;30%&#34;&gt; &lt;img src=&#34;https://qdrant.tech/content/images/recommendations.png&#34;&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt; Semantic Text Search &lt;/td&gt; &#xA;    &lt;td&gt; Similar Image Search &lt;/td&gt; &#xA;    &lt;td&gt; Recommendations &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA; &lt;table&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;td&gt; &lt;img width=&#34;300px&#34; src=&#34;https://qdrant.tech/content/images/chat_bots.png&#34;&gt; &lt;/td&gt; &#xA;    &lt;td&gt; &lt;img width=&#34;300px&#34; src=&#34;https://qdrant.tech/content/images/matching_engines.png&#34;&gt; &lt;/td&gt; &#xA;    &lt;td&gt; &lt;img width=&#34;300px&#34; src=&#34;https://qdrant.tech/content/images/anomalies_detection.png&#34;&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt; Chat Bots &lt;/td&gt; &#xA;    &lt;td&gt; Matching Engines &lt;/td&gt; &#xA;    &lt;td&gt; Anomaly Detection &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;h3&gt;REST&lt;/h3&gt; &#xA;&lt;p&gt;Online OpenAPI 3.0 documentation is available &lt;a href=&#34;https://qdrant.github.io/qdrant/redoc/index.html&#34;&gt;here&lt;/a&gt;. OpenAPI makes it easy to generate a client for virtually any framework or programing language.&lt;/p&gt; &#xA;&lt;p&gt;You can also download raw OpenAPI &lt;a href=&#34;https://github.com/qdrant/qdrant/raw/master/docs/redoc/master/openapi.json&#34;&gt;definitions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;gRPC&lt;/h3&gt; &#xA;&lt;p&gt;For faster production-tier searches, Qdrant also provides a gRPC interface. You can find gRPC documentation &lt;a href=&#34;https://qdrant.tech/documentation/quick_start/#grpc&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Clients&lt;/h3&gt; &#xA;&lt;p&gt;Qdrant offers the following client libraries to help you integrate it into your application stack with ease:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant-client&#34;&gt;Python client&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qdrant/go-client&#34;&gt;Go client&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qdrant/rust-client&#34;&gt;Rust client&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Filtering and Payload&lt;/h3&gt; &#xA;&lt;p&gt;Qdrant supports any JSON payload associated with vectors. It does not only store payload but also allows filter results based on payload values. It allows any combinations of &lt;code&gt;should&lt;/code&gt;, &lt;code&gt;must&lt;/code&gt;, and &lt;code&gt;must_not&lt;/code&gt; conditions, but unlike ElasticSearch post-filtering, Qdrant guarantees all relevant vectors are retrieved.&lt;/p&gt; &#xA;&lt;h3&gt;Rich Data Types&lt;/h3&gt; &#xA;&lt;p&gt;Vector payload supports a large variety of data types and query conditions, including string matching, numerical ranges, geo-locations, and more. Payload filtering conditions allow you to build almost any custom business logic that should work on top of similarity matching.&lt;/p&gt; &#xA;&lt;h3&gt;Query Planning and Payload Indexes&lt;/h3&gt; &#xA;&lt;p&gt;Using the information about the stored payload values, the &lt;code&gt;query planner&lt;/code&gt; decides on the best way to execute the query. For example, if the search space limited by filters is small, it is more efficient to use a full brute force than an index.&lt;/p&gt; &#xA;&lt;h3&gt;SIMD Hardware Acceleration&lt;/h3&gt; &#xA;&lt;p&gt;Qdrant can take advantage of modern CPU x86-x64 architectures. It allows you to search even faster on modern hardware.&lt;/p&gt; &#xA;&lt;h3&gt;Write-Ahead Logging&lt;/h3&gt; &#xA;&lt;p&gt;Once the service confirmed an update - it won&#39;t lose data even in case of power shut down. All operations are stored in the update journal and the latest database state could be easily reconstructed at any moment.&lt;/p&gt; &#xA;&lt;h3&gt;Distributed Deployment&lt;/h3&gt; &#xA;&lt;p&gt;Since &lt;a href=&#34;https://github.com/qdrant/qdrant/releases/tag/v0.8.0&#34;&gt;v0.8.0&lt;/a&gt; Qdrant supports distributed deployment. In this mode, multiple Qdrant machines are joined into a cluster to provide horizontal scaling. Coordination with the distributed consensus is provided by the &lt;a href=&#34;https://raft.github.io/&#34;&gt;Raft&lt;/a&gt; protocol.&lt;/p&gt; &#xA;&lt;h3&gt;Stand-alone&lt;/h3&gt; &#xA;&lt;p&gt;Qdrant does not rely on any external database or orchestration controller, which makes it very easy to configure.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Docker 🐳&lt;/h3&gt; &#xA;&lt;p&gt;Build your own from source&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build . --tag=qdrant/qdrant&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or use latest pre-built image from &lt;a href=&#34;https://hub.docker.com/r/qdrant/qdrant&#34;&gt;DockerHub&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull qdrant/qdrant&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the container, use the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -p 6333:6333 qdrant/qdrant&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And once you need a fine-grained setup, you can also define a storage path and custom configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -p 6333:6333 \&#xA;    -v $(pwd)/path/to/data:/qdrant/storage \&#xA;    -v $(pwd)/path/to/custom_config.yaml:/qdrant/config/production.yaml \&#xA;    qdrant/qdrant&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;/qdrant/storage&lt;/code&gt; - is a place where Qdrant persists all your data. Make sure to mount it as a volume, otherwise docker will drop it with the container.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/qdrant/config/production.yaml&lt;/code&gt; - is the file with engine configuration. You can override any value from the &lt;a href=&#34;https://github.com/qdrant/qdrant/raw/master/config/config.yaml&#34;&gt;reference config&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Now Qdrant should be accessible at &lt;a href=&#34;http://localhost:6333/&#34;&gt;localhost:6333&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Docs 📓&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The best place to start is &lt;a href=&#34;https://github.com/qdrant/qdrant/raw/master/QUICK_START.md&#34;&gt;Quick Start Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://qdrant.tech/documentation/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Use the &lt;a href=&#34;https://qdrant.github.io/qdrant/redoc/index.html&#34;&gt;OpenAPI specification&lt;/a&gt; as a reference&lt;/li&gt; &#xA; &lt;li&gt;Follow our &lt;a href=&#34;https://qdrant.to/qdrant-tutorial&#34;&gt;Step-by-Step Tutorial&lt;/a&gt; to create your first neural network project with Qdrant&lt;/li&gt; &#xA; &lt;li&gt;Assess Qdrant&#39;s performance in our &lt;a href=&#34;https://qdrant.tech/benchmarks/&#34;&gt;benchmarks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check out our further plans in &lt;a href=&#34;https://qdrant.to/roadmap&#34;&gt;v1.0 Roadmap&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contacts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join our &lt;a href=&#34;https://qdrant.to/discord&#34;&gt;Discord channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Follow us on &lt;a href=&#34;https://qdrant.to/twitter&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Subscribe to our &lt;a href=&#34;https://qdrant.to/newsletter&#34;&gt;Newsletters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Write us an email &lt;a href=&#34;mailto:info@qdrant.tech&#34;&gt;info@qdrant.tech&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Building something special with Qdrant? We can &lt;a href=&#34;https://qdrant.tech/pricing/&#34;&gt;help&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Contributors ✨&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to the people who contributed to Qdrant:&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://t.me/neural_network_engineering&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1935623?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Andrey Vasnetsov&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrey Vasnetsov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=generall&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/azayarni&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/926368?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Andre Zayarni&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andre Zayarni&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=azayarni&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://www.linkedin.com/in/joanfontanalsmartinez/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/19825685?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Joan Fontanals&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joan Fontanals&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=JoanFM&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/trean&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7085263?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;trean&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;trean&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=trean&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/kgrech&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/9020133?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Konstantin&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Konstantin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=kgrech&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/kekonen&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/11177808?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Daniil Naumetc&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniil Naumetc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=kekonen&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://dev.to/vearutop&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1381436?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Viacheslav Poturaev&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Viacheslav Poturaev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=vearutop&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/galibey&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/48586936?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Alexander Galibey&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alexander Galibey&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=galibey&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/HaiCheViet&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/37202591?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;HaiCheViet&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;HaiCheViet&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=HaiCheViet&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://tranzystorek-io.github.io/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5671049?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Marcin Puc&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Marcin Puc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=tranzystorek-io&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/anveq&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/94402218?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Anton V.&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Anton V.&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=anveq&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://agourlay.github.io&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/606963?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Arnaud Gourlay&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Arnaud Gourlay&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=agourlay&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://t.me/type_driven_thoughts&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/17401538?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Egor Ivkov&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Egor Ivkov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=eadventurous&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/IvanPleshkov&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/20946825?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Ivan Pleshkov&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ivan Pleshkov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=IvanPleshkov&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/daniilsunyaev&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3955599?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Daniil&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Daniil&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=daniilsunyaev&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://homeonrails.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1282182?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Anton Kaliaev&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Anton Kaliaev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=melekes&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://soundcloud.com/norom&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7762532?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Andre Julius&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andre Julius&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=NotNorom&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/prok20&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/20628026?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Prokudin Alexander&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Prokudin Alexander&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=prok20&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/elbart&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/48974?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Tim Eggert&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tim Eggert&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=elbart&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/gvelo&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/943360?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Gabriel Velo&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gabriel Velo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=gvelo&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://burtonqin.github.io&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/11943383?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Boqin Qin(秦 伯钦)&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Boqin Qin(秦 伯钦)&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/issues?q=author%3ABurtonQin&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://forloop.co.uk/blog&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/208231?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Russ Cam&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Russ Cam&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=russcam&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/erare-humanum&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/116254494?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;erare-humanum&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;erare-humanum&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=erare-humanum&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/ffuugoo&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2725918?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Roman Titov&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Roman Titov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=ffuugoo&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://hozan23.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/119854621?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Hozan&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hozan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=hozan23&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/joein&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/22641570?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;George&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;George&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=joein&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/csko&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/749306?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Kornél Csernai&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kornél Csernai&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=csko&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://coszio.github.io&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/62079184?v=4?s=50&#34; width=&#34;50px;&#34; alt=&#34;Luis Cossío&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Luis Cossío&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant/commits?author=coszio&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Qdrant is licensed under the Apache License, Version 2.0. View a copy of the &lt;a href=&#34;https://github.com/qdrant/qdrant/raw/master/LICENSE&#34;&gt;License file&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bevyengine/bevy</title>
    <updated>2023-04-01T02:21:29Z</updated>
    <id>tag:github.com,2023-04-01:/bevyengine/bevy</id>
    <link href="https://github.com/bevyengine/bevy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A refreshingly simple data-driven game engine built in Rust&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://bevyengine.org&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bevyengine/bevy/main/assets/branding/bevy_logo_light_dark_and_dimmed.svg?sanitize=true&#34; alt=&#34;Bevy&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://crates.io/crates/bevy&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/bevy.svg?sanitize=true&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/bevyengine/bevy#license&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT%2FApache-blue.svg?sanitize=true&#34; alt=&#34;MIT/Apache 2.0&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/bevy&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/d/bevy.svg?sanitize=true&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/bevyengine/bevy/actions&#34;&gt;&lt;img src=&#34;https://github.com/bevyengine/bevy/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Rust&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/bevyengine/bevy/workflows/iOS%20cron%20CI/badge.svg?sanitize=true&#34; alt=&#34;iOS cron CI&#34;&gt; &lt;a href=&#34;https://discord.gg/bevy&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/691052431525675048.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is Bevy?&lt;/h2&gt; &#xA;&lt;p&gt;Bevy is a refreshingly simple data-driven game engine built in Rust. It is free and open-source forever!&lt;/p&gt; &#xA;&lt;h2&gt;WARNING&lt;/h2&gt; &#xA;&lt;p&gt;Bevy is still in the early stages of development. Important features are missing. Documentation is sparse. A new version of Bevy containing breaking changes to the API is released &lt;a href=&#34;https://bevyengine.org/news/bevy-0-6/#the-train-release-schedule&#34;&gt;approximately once every 3 months&lt;/a&gt;. We provide &lt;a href=&#34;https://bevyengine.org/learn/book/migration-guides/&#34;&gt;migration guides&lt;/a&gt;, but we can&#39;t guarantee migrations will always be easy. Use only if you are willing to work in this environment.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;MSRV:&lt;/strong&gt; Bevy relies heavily on improvements in the Rust language and compiler. As a result, the Minimum Supported Rust Version (MSRV) is &#34;the latest stable release&#34; of Rust.&lt;/p&gt; &#xA;&lt;h2&gt;Design Goals&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Capable&lt;/strong&gt;: Offer a complete 2D and 3D feature set&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Simple&lt;/strong&gt;: Easy for newbies to pick up, but infinitely flexible for power users&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Data Focused&lt;/strong&gt;: Data-oriented architecture using the Entity Component System paradigm&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Modular&lt;/strong&gt;: Use only what you need. Replace what you don&#39;t like&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fast&lt;/strong&gt;: App logic should run quickly, and when possible, in parallel&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Productive&lt;/strong&gt;: Changes should compile quickly ... waiting isn&#39;t fun&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://bevyengine.org&#34;&gt;Features&lt;/a&gt;:&lt;/strong&gt; A quick overview of Bevy&#39;s features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://bevyengine.org/news/&#34;&gt;News&lt;/a&gt;&lt;/strong&gt;: A development blog that covers our progress, plans and shiny new features.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Docs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://bevyengine.org/learn/book/introduction&#34;&gt;The Bevy Book&lt;/a&gt;:&lt;/strong&gt; Bevy&#39;s official documentation. The best place to start learning Bevy.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.rs/bevy&#34;&gt;Bevy Rust API Docs&lt;/a&gt;:&lt;/strong&gt; Bevy&#39;s Rust API docs, which are automatically generated from the doc comments in this repo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/bevyengine/bevy/tree/latest/examples&#34;&gt;Official Examples&lt;/a&gt;:&lt;/strong&gt; Bevy&#39;s dedicated, runnable examples, which are great for digging into specific concepts.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://bevyengine.org/assets/#learning&#34;&gt;Community-Made Learning Resources&lt;/a&gt;&lt;/strong&gt;: More tutorials, documentation, and examples made by the Bevy community.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Before contributing or participating in discussions with the community, you should familiarize yourself with our &lt;a href=&#34;https://raw.githubusercontent.com/bevyengine/bevy/main/CODE_OF_CONDUCT.md&#34;&gt;&lt;strong&gt;Code of Conduct&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://discord.gg/bevy&#34;&gt;Discord&lt;/a&gt;:&lt;/strong&gt; Bevy&#39;s official discord server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://reddit.com/r/bevy&#34;&gt;Reddit&lt;/a&gt;:&lt;/strong&gt; Bevy&#39;s official subreddit.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/bevyengine/bevy/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;:&lt;/strong&gt; The best place for questions about Bevy, answered right here!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://bevyengine.org/assets/&#34;&gt;Bevy Assets&lt;/a&gt;:&lt;/strong&gt; A collection of awesome Bevy projects, tools, plugins and learning materials.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you&#39;d like to help build Bevy, check out the &lt;strong&gt;&lt;a href=&#34;https://github.com/bevyengine/bevy/raw/main/CONTRIBUTING.md&#34;&gt;Contributor&#39;s Guide&lt;/a&gt;&lt;/strong&gt;. For simple problems, feel free to open an issue or PR and tackle it yourself!&lt;/p&gt; &#xA;&lt;p&gt;For more complex architecture decisions and experimental mad science, please open an &lt;a href=&#34;https://github.com/bevyengine/rfcs&#34;&gt;RFC&lt;/a&gt; (Request For Comments) so we can brainstorm together effectively!&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;We recommend checking out &lt;a href=&#34;https://bevyengine.org/learn/book/introduction&#34;&gt;The Bevy Book&lt;/a&gt; for a full tutorial.&lt;/p&gt; &#xA;&lt;p&gt;Follow the &lt;a href=&#34;https://bevyengine.org/learn/book/getting-started/setup/&#34;&gt;Setup guide&lt;/a&gt; to ensure your development environment is set up correctly. Once set up, you can quickly try out the &lt;a href=&#34;https://github.com/bevyengine/bevy/tree/latest/examples&#34;&gt;examples&lt;/a&gt; by cloning this repo and running the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Switch to the correct version (latest release, default is main development branch)&#xA;git checkout latest&#xA;# Runs the &#34;breakout&#34; example&#xA;cargo run --example breakout&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To draw a window with standard functionality enabled, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;use bevy::prelude::*;&#xA;&#xA;fn main(){&#xA;  App::new()&#xA;    .add_plugins(DefaultPlugins)&#xA;    .run();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Fast Compiles&lt;/h3&gt; &#xA;&lt;p&gt;Bevy can be built just fine using default configuration on stable Rust. However for really fast iterative compiles, you should enable the &#34;fast compiles&#34; setup by &lt;a href=&#34;http://bevyengine.org/learn/book/getting-started/setup/&#34;&gt;following the instructions here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Libraries Used&lt;/h2&gt; &#xA;&lt;p&gt;Bevy is only possible because of the hard work put into these foundational technologies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wgpu.rs/&#34;&gt;wgpu&lt;/a&gt;: modern / low-level / cross-platform graphics library inspired by Vulkan&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitshifter/glam-rs&#34;&gt;glam-rs&lt;/a&gt;: a simple and fast 3D math library for games and graphics&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rust-windowing/winit&#34;&gt;winit&lt;/a&gt;: cross-platform window creation and management in Rust&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bevyengine/bevy/main/docs/cargo_features.md&#34;&gt;Bevy Cargo Features&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;This &lt;a href=&#34;https://raw.githubusercontent.com/bevyengine/bevy/main/docs/cargo_features.md&#34;&gt;list&lt;/a&gt; outlines the different cargo features supported by Bevy. These allow you to customize the Bevy feature set for your use-case.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bevyengine/bevy/main/docs/plugins_guidelines.md&#34;&gt;Third Party Plugins&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Plugins are very welcome to extend Bevy&#39;s features. &lt;a href=&#34;https://raw.githubusercontent.com/bevyengine/bevy/main/docs/plugins_guidelines.md&#34;&gt;Guidelines&lt;/a&gt; are available to help integration and usage.&lt;/p&gt; &#xA;&lt;h2&gt;Thanks and Alternatives&lt;/h2&gt; &#xA;&lt;p&gt;Additionally, we would like to thank the &lt;a href=&#34;https://github.com/amethyst/amethyst&#34;&gt;Amethyst&lt;/a&gt;, &lt;a href=&#34;https://github.com/not-fl3/macroquad&#34;&gt;macroquad&lt;/a&gt;, &lt;a href=&#34;https://github.com/hecrj/coffee&#34;&gt;coffee&lt;/a&gt;, &lt;a href=&#34;https://github.com/ggez/ggez&#34;&gt;ggez&lt;/a&gt;, &lt;a href=&#34;https://github.com/FyroxEngine/Fyrox&#34;&gt;Fyrox&lt;/a&gt;, and &lt;a href=&#34;https://github.com/PistonDevelopers/piston&#34;&gt;Piston&lt;/a&gt; projects for providing solid examples of game engine development in Rust. If you are looking for a Rust game engine, it is worth considering all of your options. Each engine has different design goals, and some will likely resonate with you more than others.&lt;/p&gt; &#xA;&lt;!-- This next line need to stay exactly as is. It is required for BrowserStack sponsorship. --&gt; &#xA;&lt;p&gt;This project is tested with BrowserStack.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Bevy is free, open source and permissively licensed! Except where noted (below and/or in individual files), all code in this repository is dual-licensed under either:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MIT License (&lt;a href=&#34;https://raw.githubusercontent.com/bevyengine/bevy/main/LICENSE-MIT&#34;&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Apache License, Version 2.0 (&lt;a href=&#34;https://raw.githubusercontent.com/bevyengine/bevy/main/LICENSE-APACHE&#34;&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;at your option. This means you can select the license you prefer! This dual-licensing approach is the de-facto standard in the Rust ecosystem and there are &lt;a href=&#34;https://github.com/bevyengine/bevy/issues/2373&#34;&gt;very good reasons&lt;/a&gt; to include both.&lt;/p&gt; &#xA;&lt;p&gt;Some of the engine&#39;s code carries additional copyright notices and license terms due to their external origins. These are generally BSD-like, but exact details vary by crate: If the README of a crate contains a &#39;License&#39; header (or similar), the additional copyright notices and license terms applicable to that crate will be listed. The above licensing requirement still applies to contributions to those crates, and sections of those crates will carry those license terms. The &lt;a href=&#34;https://doc.rust-lang.org/cargo/reference/manifest.html#the-license-and-license-file-fields&#34;&gt;license&lt;/a&gt; field of each crate will also reflect this. For example, &lt;a href=&#34;https://raw.githubusercontent.com/bevyengine/bevy/main/crates/bevy_mikktspace/README.md#license-agreement&#34;&gt;&lt;code&gt;bevy_mikktspace&lt;/code&gt;&lt;/a&gt; has code under the Zlib license (as well as a copyright notice when choosing the MIT license).&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/bevyengine/bevy/main/assets&#34;&gt;assets&lt;/a&gt; included in this repository (for our &lt;a href=&#34;https://raw.githubusercontent.com/bevyengine/bevy/main/examples/README.md&#34;&gt;examples&lt;/a&gt;) typically fall under different open licenses. These will not be included in your game (unless copied in by you), and they are not distributed in the published bevy crates. See &lt;a href=&#34;https://raw.githubusercontent.com/bevyengine/bevy/main/CREDITS.md&#34;&gt;CREDITS.md&lt;/a&gt; for the details of the licenses of those files.&lt;/p&gt; &#xA;&lt;h3&gt;Your contributions&lt;/h3&gt; &#xA;&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.&lt;/p&gt;</summary>
  </entry>
</feed>