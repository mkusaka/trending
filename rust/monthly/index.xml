<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-01T02:19:16Z</updated>
  <subtitle>Monthly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>serde-rs/serde</title>
    <updated>2023-09-01T02:19:16Z</updated>
    <id>tag:github.com,2023-09-01:/serde-rs/serde</id>
    <link href="https://github.com/serde-rs/serde" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Serialization framework for Rust&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Serde â€ƒ &lt;a href=&#34;https://github.com/serde-rs/serde/actions?query=branch%3Amaster&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/serde-rs/serde/ci.yml?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/serde&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/serde.svg?sanitize=true&#34; alt=&#34;Latest Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://blog.rust-lang.org/2018/12/06/Rust-1.31-and-rust-2018.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/serde-rustc_1.31+-lightgray.svg?sanitize=true&#34; alt=&#34;serde: rustc 1.31+&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://blog.rust-lang.org/2021/10/21/Rust-1.56.0.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/serde_derive-rustc_1.56+-lightgray.svg?sanitize=true&#34; alt=&#34;serde_derive: rustc 1.56+&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Serde is a framework for &lt;em&gt;ser&lt;/em&gt;ializing and &lt;em&gt;de&lt;/em&gt;serializing Rust data structures efficiently and generically.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;You may be looking for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://serde.rs/&#34;&gt;An overview of Serde&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://serde.rs/#data-formats&#34;&gt;Data formats supported by Serde&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://serde.rs/derive.html&#34;&gt;Setting up &lt;code&gt;#[derive(Serialize, Deserialize)]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://serde.rs/examples.html&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/serde&#34;&gt;API documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/serde-rs/serde/releases&#34;&gt;Release notes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Serde in action&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Click to show Cargo.toml. &lt;a href=&#34;https://play.rust-lang.org/?edition=2018&amp;amp;gist=72755f28f99afc95e01d63174b28c1f5&#34; target=&#34;_blank&#34;&gt;Run this code in the playground.&lt;/a&gt; &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[dependencies]&#xA;&#xA;# The core APIs, including the Serialize and Deserialize traits. Always&#xA;# required when using Serde. The &#34;derive&#34; feature is only required when&#xA;# using #[derive(Serialize, Deserialize)] to make Serde work with structs&#xA;# and enums defined in your crate.&#xA;serde = { version = &#34;1.0&#34;, features = [&#34;derive&#34;] }&#xA;&#xA;# Each data format lives in its own crate; the sample code below uses JSON&#xA;# but you may be using a different one.&#xA;serde_json = &#34;1.0&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;use serde::{Deserialize, Serialize};&#xA;&#xA;#[derive(Serialize, Deserialize, Debug)]&#xA;struct Point {&#xA;    x: i32,&#xA;    y: i32,&#xA;}&#xA;&#xA;fn main() {&#xA;    let point = Point { x: 1, y: 2 };&#xA;&#xA;    // Convert the Point to a JSON string.&#xA;    let serialized = serde_json::to_string(&amp;amp;point).unwrap();&#xA;&#xA;    // Prints serialized = {&#34;x&#34;:1,&#34;y&#34;:2}&#xA;    println!(&#34;serialized = {}&#34;, serialized);&#xA;&#xA;    // Convert the JSON string back to a Point.&#xA;    let deserialized: Point = serde_json::from_str(&amp;amp;serialized).unwrap();&#xA;&#xA;    // Prints deserialized = Point { x: 1, y: 2 }&#xA;    println!(&#34;deserialized = {:?}&#34;, deserialized);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting help&lt;/h2&gt; &#xA;&lt;p&gt;Serde is one of the most widely used Rust libraries so any place that Rustaceans congregate will be able to help you out. For chat, consider trying the &lt;a href=&#34;https://discord.com/channels/273534239310479360/274215136414400513&#34;&gt;#rust-questions&lt;/a&gt; or &lt;a href=&#34;https://discord.com/channels/273534239310479360/273541522815713281&#34;&gt;#rust-beginners&lt;/a&gt; channels of the unofficial community Discord (invite: &lt;a href=&#34;https://discord.gg/rust-lang-community&#34;&gt;https://discord.gg/rust-lang-community&lt;/a&gt;), the &lt;a href=&#34;https://discord.com/channels/442252698964721669/443150878111694848&#34;&gt;#rust-usage&lt;/a&gt; or &lt;a href=&#34;https://discord.com/channels/442252698964721669/448238009733742612&#34;&gt;#beginners&lt;/a&gt; channels of the official Rust Project Discord (invite: &lt;a href=&#34;https://discord.gg/rust-lang&#34;&gt;https://discord.gg/rust-lang&lt;/a&gt;), or the &lt;a href=&#34;https://rust-lang.zulipchat.com/#narrow/stream/122651-general&#34;&gt;#general&lt;/a&gt; stream in Zulip. For asynchronous, consider the &lt;a href=&#34;https://stackoverflow.com/questions/tagged/rust&#34;&gt;[rust] tag on StackOverflow&lt;/a&gt;, the &lt;a href=&#34;https://www.reddit.com/r/rust&#34;&gt;/r/rust&lt;/a&gt; subreddit which has a pinned weekly easy questions post, or the Rust &lt;a href=&#34;https://users.rust-lang.org&#34;&gt;Discourse forum&lt;/a&gt;. It&#39;s acceptable to file a support issue in this repo but they tend not to get as many eyes as any of the above and may get closed without a response after some time.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;License&lt;/h4&gt; &#xA;&lt;sup&gt; Licensed under either of &lt;a href=&#34;https://raw.githubusercontent.com/serde-rs/serde/master/LICENSE-APACHE&#34;&gt;Apache License, Version 2.0&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/serde-rs/serde/master/LICENSE-MIT&#34;&gt;MIT license&lt;/a&gt; at your option. &lt;/sup&gt; &#xA;&lt;br&gt; &#xA;&lt;sub&gt; Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in Serde by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions. &lt;/sub&gt;</summary>
  </entry>
  <entry>
    <title>ratatui-org/ratatui</title>
    <updated>2023-09-01T02:19:16Z</updated>
    <id>tag:github.com,2023-09-01:/ratatui-org/ratatui</id>
    <link href="https://github.com/ratatui-org/ratatui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Rust library that&#39;s all about cooking up terminal user interfaces (TUIs)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ratatui&lt;/h1&gt; &#xA;&lt;img align=&#34;left&#34; src=&#34;https://avatars.githubusercontent.com/u/125200832?s=128&amp;amp;v=4&#34;&gt; &#xA;&lt;p&gt;&lt;code&gt;ratatui&lt;/code&gt; is a &lt;a href=&#34;https://www.rust-lang.org&#34;&gt;Rust&lt;/a&gt; library that is all about cooking up terminal user interfaces. It is a community fork of the original &lt;a href=&#34;https://github.com/fdehau/tui-rs&#34;&gt;tui-rs&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://crates.io/crates/ratatui&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/ratatui?logo=rust&amp;amp;style=flat-square&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/l/ratatui?style=flat-square&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ratatui-org/ratatui/actions?query=workflow%3ACI+&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/ratatui-org/ratatui/ci.yml?style=flat-square&amp;amp;logo=github&#34; alt=&#34;GitHub CI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.rs/crate/ratatui/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docsrs/ratatui?logo=rust&amp;amp;style=flat-square&#34; alt=&#34;Docs.rs&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://deps.rs/repo/github/ratatui-org/ratatui&#34;&gt;&lt;img src=&#34;https://deps.rs/repo/github/ratatui-org/ratatui/status.svg?style=flat-square&#34; alt=&#34;Dependency Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/ratatui-org/ratatui&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/ratatui-org/ratatui?logo=codecov&amp;amp;style=flat-square&amp;amp;token=BAQ8SOKEST&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/pMCEU9hNEj&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1070692720437383208?label=discord&amp;amp;logo=discord&amp;amp;style=flat-square&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#ratatui:matrix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/matrix/ratatui-general%3Amatrix.org?style=flat-square&amp;amp;logo=matrix&amp;amp;label=Matrix&#34; alt=&#34;Matrix&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- See RELEASE.md for instructions on creating the demo gif ---&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://vhs.charm.sh/vhs-tF0QbuPbtHgUeG0sTVgFr.gif&#34; alt=&#34;Demo of Ratatui&#34;&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Table of Contents&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/#ratatui&#34;&gt;Ratatui&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/#quickstart&#34;&gt;Quickstart&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/#status-of-this-fork&#34;&gt;Status of this fork&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/#rust-version-requirements&#34;&gt;Rust version requirements&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/#examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/#widgets&#34;&gt;Widgets&lt;/a&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/#built-in&#34;&gt;Built in&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/#third-party-libraries-bootstrapping-templates-and-widgets&#34;&gt;Third-party libraries, bootstrapping templates and widgets&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/#apps&#34;&gt;Apps&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/#alternatives&#34;&gt;Alternatives&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/#acknowledgments&#34;&gt;Acknowledgments&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo add ratatui --features all-widgets&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or modify your &lt;code&gt;Cargo.toml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[dependencies]&#xA;ratatui = { version = &#34;0.23.0&#34;, features = [&#34;all-widgets&#34;]}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;ratatui&lt;/code&gt; is a terminal UI library that supports multiple backends:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossterm-rs/crossterm&#34;&gt;crossterm&lt;/a&gt; [default]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ticki/termion&#34;&gt;termion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wez/wezterm/tree/master/termwiz&#34;&gt;termwiz&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The library is based on the principle of immediate rendering with intermediate buffers. This means that at each new frame you should build all widgets that are supposed to be part of the UI. While providing a great flexibility for rich and interactive UI, this may introduce overhead for highly dynamic content. So, the implementation try to minimize the number of ansi escapes sequences generated to draw the updated UI. In practice, given the speed of &lt;code&gt;Rust&lt;/code&gt; the overhead rather comes from the terminal emulator than the library itself.&lt;/p&gt; &#xA;&lt;p&gt;Moreover, the library does not provide any input handling nor any event system and you may rely on the previously cited libraries to achieve such features.&lt;/p&gt; &#xA;&lt;p&gt;We keep a &lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; generated by &lt;a href=&#34;https://github.com/orhun/git-cliff&#34;&gt;git-cliff&lt;/a&gt; utilizing &lt;a href=&#34;https://www.conventionalcommits.org/&#34;&gt;Conventional Commits&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;The following example demonstrates the minimal amount of code necessary to setup a terminal and render &#34;Hello World!&#34;. The full code for this example which contains a little more detail is in &lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/examples/hello_world.rs&#34;&gt;hello_world.rs&lt;/a&gt;. For more guidance on how to create Ratatui apps, see the &lt;a href=&#34;https://docs.rs/ratatui&#34;&gt;Docs&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/#examples&#34;&gt;Examples&lt;/a&gt;. There is also a starter template available at &lt;a href=&#34;https://github.com/ratatui-org/rust-tui-template&#34;&gt;rust-tui-template&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;fn main() -&amp;gt; Result&amp;lt;(), Box&amp;lt;dyn Error&amp;gt;&amp;gt; {&#xA;    let mut terminal = setup_terminal()?;&#xA;    run(&amp;amp;mut terminal)?;&#xA;    restore_terminal(&amp;amp;mut terminal)?;&#xA;    Ok(())&#xA;}&#xA;&#xA;fn setup_terminal() -&amp;gt; Result&amp;lt;Terminal&amp;lt;CrosstermBackend&amp;lt;Stdout&amp;gt;&amp;gt;, Box&amp;lt;dyn Error&amp;gt;&amp;gt; {&#xA;    let mut stdout = io::stdout();&#xA;    enable_raw_mode()?;&#xA;    execute!(stdout, EnterAlternateScreen)?;&#xA;    Ok(Terminal::new(CrosstermBackend::new(stdout))?)&#xA;}&#xA;&#xA;fn restore_terminal(&#xA;    terminal: &amp;amp;mut Terminal&amp;lt;CrosstermBackend&amp;lt;Stdout&amp;gt;&amp;gt;,&#xA;) -&amp;gt; Result&amp;lt;(), Box&amp;lt;dyn Error&amp;gt;&amp;gt; {&#xA;    disable_raw_mode()?;&#xA;    execute!(terminal.backend_mut(), LeaveAlternateScreen,)?;&#xA;    Ok(terminal.show_cursor()?)&#xA;}&#xA;&#xA;fn run(terminal: &amp;amp;mut Terminal&amp;lt;CrosstermBackend&amp;lt;Stdout&amp;gt;&amp;gt;) -&amp;gt; Result&amp;lt;(), Box&amp;lt;dyn Error&amp;gt;&amp;gt; {&#xA;    Ok(loop {&#xA;        terminal.draw(|frame| {&#xA;            let greeting = Paragraph::new(&#34;Hello World!&#34;);&#xA;            frame.render_widget(greeting, frame.size());&#xA;        })?;&#xA;        if event::poll(Duration::from_millis(250))? {&#xA;            if let Event::Key(key) = event::read()? {&#xA;                if KeyCode::Char(&#39;q&#39;) == key.code {&#xA;                    break;&#xA;                }&#xA;            }&#xA;        }&#xA;    })&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Status of this fork&lt;/h2&gt; &#xA;&lt;p&gt;In response to the original maintainer &lt;a href=&#34;https://github.com/fdehau&#34;&gt;&lt;strong&gt;Florian Dehau&lt;/strong&gt;&lt;/a&gt;&#39;s issue regarding the &lt;a href=&#34;https://github.com/fdehau/tui-rs/issues/654&#34;&gt;future of &lt;code&gt;tui-rs&lt;/code&gt;&lt;/a&gt;, several members of the community forked the project and created this crate. We look forward to continuing the work started by Florian ðŸš€&lt;/p&gt; &#xA;&lt;p&gt;In order to organize ourselves, we currently use a &lt;a href=&#34;https://discord.gg/pMCEU9hNEj&#34;&gt;Discord server&lt;/a&gt;, feel free to join and come chat! There is also a &lt;a href=&#34;https://matrix.org/&#34;&gt;Matrix&lt;/a&gt; bridge available at &lt;a href=&#34;https://matrix.to/#/#ratatui:matrix.org&#34;&gt;#ratatui:matrix.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;While we do utilize Discord for coordinating, it&#39;s not essential for contributing. Our primary open-source workflow is centered around GitHub. For significant discussions, we rely on GitHub â€” please open an issue, a discussion or a PR.&lt;/p&gt; &#xA;&lt;p&gt;Please make sure you read the updated &lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/CONTRIBUTING.md&#34;&gt;contributing&lt;/a&gt; guidelines, especially if you are interested in working on a PR or issue opened in the previous repository.&lt;/p&gt; &#xA;&lt;h2&gt;Rust version requirements&lt;/h2&gt; &#xA;&lt;p&gt;Since version 0.23.0, The Minimum Supported Rust Version (MSRV) of &lt;code&gt;ratatui&lt;/code&gt; is 1.67.0.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The documentation can be found on &lt;a href=&#34;https://docs.rs/ratatui&#34;&gt;docs.rs.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;The demo shown in the gif above is available on all available backends.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# crossterm&#xA;cargo run --example demo&#xA;# termion&#xA;cargo run --example demo --no-default-features --features=termion&#xA;# termwiz&#xA;cargo run --example demo --no-default-features --features=termwiz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The UI code for this is in &lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/examples/demo/ui.rs&#34;&gt;examples/demo/ui.rs&lt;/a&gt; while the application state is in &lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/examples/demo/app.rs&#34;&gt;examples/demo/app.rs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If the user interface contains glyphs that are not displayed correctly by your terminal, you may want to run the demo without those symbols:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo run --example demo --release -- --tick-rate 200 --enhanced-graphics false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More examples are available in the &lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/examples/&#34;&gt;examples&lt;/a&gt; folder.&lt;/p&gt; &#xA;&lt;h2&gt;Widgets&lt;/h2&gt; &#xA;&lt;h3&gt;Built in&lt;/h3&gt; &#xA;&lt;p&gt;The library comes with the following &lt;a href=&#34;https://docs.rs/ratatui/latest/ratatui/widgets/index.html&#34;&gt;widgets&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/ratatui/latest/ratatui/widgets/struct.BarChart.html&#34;&gt;BarChart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/ratatui/latest/ratatui/widgets/block/struct.Block.html&#34;&gt;Block&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/ratatui/latest/ratatui/widgets/calendar/index.html&#34;&gt;Calendar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/ratatui/latest/ratatui/widgets/canvas/struct.Canvas.html&#34;&gt;Canvas&lt;/a&gt; which allows rendering &lt;a href=&#34;https://docs.rs/ratatui/latest/ratatui/widgets/canvas/index.html&#34;&gt;points, lines, shapes and a world map&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/ratatui/latest/ratatui/widgets/struct.Chart.html&#34;&gt;Chart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/ratatui/latest/ratatui/widgets/struct.Clear.html&#34;&gt;Clear&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/ratatui/latest/ratatui/widgets/struct.Gauge.html&#34;&gt;Gauge&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/ratatui/latest/ratatui/widgets/struct.List.html&#34;&gt;List&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/ratatui/latest/ratatui/widgets/struct.Paragraph.html&#34;&gt;Paragraph&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/ratatui/latest/ratatui/widgets/scrollbar/struct.Scrollbar.html&#34;&gt;Scrollbar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/ratatui/latest/ratatui/widgets/struct.Sparkline.html&#34;&gt;Sparkline&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/ratatui/latest/ratatui/widgets/struct.Table.html&#34;&gt;Table&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/ratatui/latest/ratatui/widgets/struct.Tabs.html&#34;&gt;Tabs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Each widget has an associated example which can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/examples/&#34;&gt;examples&lt;/a&gt; folder. Run each examples with cargo (e.g. to run the gauge example &lt;code&gt;cargo run --example gauge&lt;/code&gt;), and quit by pressing &lt;code&gt;q&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also run all examples by running &lt;code&gt;cargo make run-examples&lt;/code&gt; (requires &lt;code&gt;cargo-make&lt;/code&gt; that can be installed with &lt;code&gt;cargo install cargo-make&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Third-party libraries, bootstrapping templates and widgets&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uttarayan21/ansi-to-tui&#34;&gt;ansi-to-tui&lt;/a&gt; â€” Convert ansi colored text to &lt;code&gt;ratatui::text::Text&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uttarayan21/color-to-tui&#34;&gt;color-to-tui&lt;/a&gt; â€” Parse hex colors to &lt;code&gt;ratatui::style::Color&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ratatui-org/rust-tui-template&#34;&gt;rust-tui-template&lt;/a&gt; â€” A template for bootstrapping a Rust TUI application with Tui-rs &amp;amp; crossterm&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pmsanford/simple-tui-rs&#34;&gt;simple-tui-rs&lt;/a&gt; â€” A simple example tui-rs app&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jkelleyrtp/tui-builder&#34;&gt;tui-builder&lt;/a&gt; â€” Batteries-included MVC framework for Tui-rs + Crossterm apps&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kegesch/tui-clap-rs&#34;&gt;tui-clap&lt;/a&gt; â€” Use clap-rs together with Tui-rs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kegesch/tui-log-rs&#34;&gt;tui-log&lt;/a&gt; â€” Example of how to use logging with Tui-rs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gin66/tui-logger&#34;&gt;tui-logger&lt;/a&gt; â€” Logger and Widget for Tui-rs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/veeso/tui-realm&#34;&gt;tui-realm&lt;/a&gt; â€” Tui-rs framework to build stateful applications with a React/Elm inspired approach&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/veeso/tui-realm-treeview&#34;&gt;tui-realm-treeview&lt;/a&gt; â€” Treeview component for Tui-realm&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/EdJoPaTo/tui-rs-tree-widget&#34;&gt;tui-rs-tree-widgets&lt;/a&gt;: Widget for tree data structures.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/markatk/tui-windows-rs&#34;&gt;tui-windows&lt;/a&gt; â€” Tui-rs abstraction to handle multiple windows and their rendering&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rhysd/tui-textarea&#34;&gt;tui-textarea&lt;/a&gt;: Simple yet powerful multi-line text editor widget supporting several key shortcuts, undo/redo, text search, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sayanarijit/tui-input&#34;&gt;tui-input&lt;/a&gt;: TUI input library supporting multiple backends and tui-rs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/a-kenji/tui-term&#34;&gt;tui-term&lt;/a&gt;: A pseudoterminal widget library that enables the rendering of terminal applications as ratatui widgets.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Apps&lt;/h2&gt; &#xA;&lt;p&gt;Check out the list of more than 50 &lt;a href=&#34;https://github.com/ratatui-org/ratatui/wiki/Apps-using-Ratatui&#34;&gt;Apps using &lt;code&gt;Ratatui&lt;/code&gt;&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Alternatives&lt;/h2&gt; &#xA;&lt;p&gt;You might want to checkout &lt;a href=&#34;https://github.com/gyscos/Cursive&#34;&gt;Cursive&lt;/a&gt; for an alternative solution to build text user interfaces in Rust.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ratatui-org/ratatui/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=ratatui-org/ratatui&#34; alt=&#34;GitHub Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;p&gt;Special thanks to &lt;a href=&#34;https://github.com/nawok&#34;&gt;&lt;strong&gt;Pavel Fomchenkov&lt;/strong&gt;&lt;/a&gt; for his work in designing &lt;strong&gt;an awesome logo&lt;/strong&gt; for the ratatui project and ratatui-org organization.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ratatui-org/ratatui/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>awslabs/mountpoint-s3</title>
    <updated>2023-09-01T02:19:16Z</updated>
    <id>tag:github.com,2023-09-01:/awslabs/mountpoint-s3</id>
    <link href="https://github.com/awslabs/mountpoint-s3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple, high-throughput file client for mounting an Amazon S3 bucket as a local file system.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mountpoint for Amazon S3&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/awslabs/mountpoint-s3/actions/workflows/tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/awslabs/mountpoint-s3/actions/workflows/tests.yml/badge.svg?sanitize=true&#34; alt=&#34;Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/awslabs/mountpoint-s3/actions/workflows/integration_main.yml&#34;&gt;&lt;img src=&#34;https://github.com/awslabs/mountpoint-s3/actions/workflows/integration_main.yml/badge.svg?branch=main&#34; alt=&#34;Integration tests&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Mountpoint for Amazon S3 is a simple, high-throughput file client for &lt;a href=&#34;https://aws.amazon.com/blogs/storage/the-inside-story-on-mountpoint-for-amazon-s3-a-high-performance-open-source-file-client/&#34;&gt;mounting an Amazon S3 bucket as a local file system&lt;/a&gt;. With Mountpoint for Amazon S3, your applications can access objects stored in Amazon S3 through file operations like &lt;code&gt;open&lt;/code&gt; and &lt;code&gt;read&lt;/code&gt;. Mountpoint for Amazon S3 automatically translates these operations into S3 object API calls, giving your applications access to the elastic storage and throughput of Amazon S3 through a file interface.&lt;/p&gt; &#xA;&lt;p&gt;Mountpoint for Amazon S3 is optimized for applications that need high read throughput to large objects, potentially from many clients at once, and to write new objects sequentially from a single client at a time. This means it&#39;s a great fit for applications that use a file interface to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;read large objects from S3, potentially from many instances concurrently, without downloading them to local storage first&lt;/li&gt; &#xA; &lt;li&gt;access only some S3 objects out of a larger data set, but can&#39;t predict which objects in advance&lt;/li&gt; &#xA; &lt;li&gt;upload their output to S3 directly, or upload files from local storage with tools like &lt;code&gt;cp&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;but probably not the right fit for applications that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;use file operations that S3 doesn&#39;t natively support, like directory renaming or symlinks&lt;/li&gt; &#xA; &lt;li&gt;make edits or appends to existing files in-place (don&#39;t work on your Git repository or SQLite database in Mountpoint ðŸ˜„)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Mountpoint for Amazon S3 does not implement all the features of a POSIX file system, and there are some differences that may affect compatibility with your application. See &lt;a href=&#34;https://raw.githubusercontent.com/awslabs/mountpoint-s3/main/doc/SEMANTICS.md&#34;&gt;Mountpoint file system behavior&lt;/a&gt; for a detailed description of Mountpoint for Amazon S3&#39;s behavior and POSIX support and how they could affect your application.&lt;/p&gt; &#xA;&lt;h2&gt;Current status&lt;/h2&gt; &#xA;&lt;p&gt;Mountpoint for Amazon S3 is generally available! We&#39;re tracking future feature development on the &lt;a href=&#34;https://github.com/orgs/awslabs/projects/84&#34;&gt;Mountpoint for Amazon S3 public roadmap&lt;/a&gt;. We&#39;re always interested in feedback on features, performance, and compatibility. Please send feedback by &lt;a href=&#34;https://github.com/awslabs/mountpoint-s3/issues/new/choose&#34;&gt;opening a new GitHub issue&lt;/a&gt; or adding your input to an existing roadmap issue.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Run these two commands to install Mountpoint for Amazon S3 on your Amazon Linux EC2 instance (for Graviton instances, replace &lt;code&gt;x86_64&lt;/code&gt; with &lt;code&gt;arm64&lt;/code&gt; in the URL):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget https://s3.amazonaws.com/mountpoint-s3-release/latest/x86_64/mount-s3.rpm&#xA;sudo yum install -y ./mount-s3.rpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Ubuntu, use these commands instead (for Graviton instances, replace &lt;code&gt;x86_64&lt;/code&gt; with &lt;code&gt;arm64&lt;/code&gt; in the URL):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget https://s3.amazonaws.com/mountpoint-s3-release/latest/x86_64/mount-s3.deb&#xA;sudo apt-get install -y ./mount-s3.deb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/awslabs/mountpoint-s3/main/doc/INSTALL.md&#34;&gt;Installing Mountpoint for Amazon S3&lt;/a&gt; for detailed instructions and other installation options (including Docker or building from source).&lt;/p&gt; &#xA;&lt;p&gt;Once you&#39;ve got Mountpoint for Amazon S3 installed, you can mount your Amazon S3 bucket. You&#39;ll need valid AWS credentials to access your bucket; for example, Mountpoint will automatically use credentials from &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html&#34;&gt;an IAM role associated with your EC2 instance&lt;/a&gt;, or you can use the &lt;code&gt;AWS_ACCESS_KEY_ID&lt;/code&gt; and &lt;code&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt; environment variables.&lt;/p&gt; &#xA;&lt;p&gt;To mount your bucket, run this command, replacing &lt;code&gt;DOC-EXAMPLE-BUCKET&lt;/code&gt; with the name of your bucket and &lt;code&gt;/path/to/mount&lt;/code&gt; with the directory you want to mount the bucket to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mount-s3 DOC-EXAMPLE-BUCKET /path/to/mount&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you can work with your bucket contents as if they were a local file system:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ls /path/to/mount&#xA;echo &#34;Hello World!&#34; &amp;gt; /path/to/mount/Data.txt&#xA;cat /path/to/mount/Data.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you&#39;re finished accessing your bucket, you can unmount it (you might need &lt;code&gt;sudo&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;umount /path/to/mount&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/awslabs/mountpoint-s3/main/doc/CONFIGURATION.md&#34;&gt;Configuring Mountpoint for Amazon S3&lt;/a&gt; for more details on how to configure and use Mountpoint, including options for providing AWS credentials.&lt;/p&gt; &#xA;&lt;h3&gt;Compatibility with other storage services&lt;/h3&gt; &#xA;&lt;p&gt;Mountpoint for Amazon S3 is designed for high-performance access to the Amazon S3 service. While it may be functional against other storage services that use S3-like APIs, we aren&#39;t able to provide support for those use cases, and they may inadvertently break when we make changes to better support Amazon S3. We welcome contributions of minor compatibility fixes or performance improvements for these services if the changes can be tested against Amazon S3.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions to Mountpoint for Amazon S3! Please see &lt;a href=&#34;https://raw.githubusercontent.com/awslabs/mountpoint-s3/main/doc/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more information on how to report bugs or submit pull requests. We especially welcome contributions to issues tagged as &lt;a href=&#34;https://github.com/awslabs/mountpoint-s3/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&#34;&gt;good first issues to work on&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For potential bug reports, see &lt;a href=&#34;https://raw.githubusercontent.com/awslabs/mountpoint-s3/main/doc/LOGGING.md&#34;&gt;LOGGING.md&lt;/a&gt; for details on how to capture logging data. For performance issues, see &lt;a href=&#34;https://raw.githubusercontent.com/awslabs/mountpoint-s3/main/doc/BENCHMARKING.md&#34;&gt;BENCHMARKING.md&lt;/a&gt; for documentation about performance regression testing.&lt;/p&gt; &#xA;&lt;h3&gt;Security&lt;/h3&gt; &#xA;&lt;p&gt;If you discover a potential security issue in this project we ask that you notify AWS Security via our &lt;a href=&#34;http://aws.amazon.com/security/vulnerability-reporting/&#34;&gt;vulnerability reporting page&lt;/a&gt;. Please do &lt;strong&gt;not&lt;/strong&gt; create a public GitHub issue.&lt;/p&gt; &#xA;&lt;h3&gt;Code of conduct&lt;/h3&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://aws.github.io/code-of-conduct&#34;&gt;Amazon Open Source Code of Conduct&lt;/a&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/awslabs/mountpoint-s3/main/doc/CODE_OF_CONDUCT.md&#34;&gt;CODE_OF_CONDUCT.md&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the Apache-2.0 License. It builds on a number of other awesome projects with open source licenses, primarily:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://github.com/cberner/fuser&#34;&gt;fuser&lt;/a&gt; bindings for FUSE (MIT license)&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://docs.aws.amazon.com/sdkref/latest/guide/common-runtime.html&#34;&gt;AWS Common Runtime&lt;/a&gt; for interacting with S3 (Apache 2.0 license)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/awslabs/mountpoint-s3/main/deny.toml&#34;&gt;deny.toml&lt;/a&gt; for a list of licenses used by our dependencies.&lt;/p&gt;</summary>
  </entry>
</feed>