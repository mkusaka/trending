<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-01T01:53:56Z</updated>
  <subtitle>Monthly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Automattic/harper</title>
    <updated>2025-07-01T01:53:56Z</updated>
    <id>tag:github.com,2025-07-01:/Automattic/harper</id>
    <link href="https://github.com/Automattic/harper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Offline, privacy-first grammar checker. Fast, open-source, Rust-powered&lt;/p&gt;&lt;hr&gt;&lt;div id=&#34;header&#34; align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/Automattic/harper/master/logo.svg?sanitize=true&#34; width=&#34;400px&#34;&gt; &#xA; &lt;h1&gt;Harper&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/automattic/harper/actions/workflows/build_harper_binaries.yml&#34;&gt;&lt;img src=&#34;https://github.com/automattic/harper/actions/workflows/build_harper_binaries.yml/badge.svg?sanitize=true&#34; alt=&#34;Harper Binaries&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/automattic/harper/actions/workflows/build_web.yml&#34;&gt;&lt;img src=&#34;https://github.com/automattic/harper/actions/workflows/build_web.yml/badge.svg?sanitize=true&#34; alt=&#34;Website&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/automattic/harper/actions/workflows/precommit.yml&#34;&gt;&lt;img src=&#34;https://github.com/automattic/harper/actions/workflows/precommit.yml/badge.svg?sanitize=true&#34; alt=&#34;Precommit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/harper-ls&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/harper-ls&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/npm/v/harper.js&#34; alt=&#34;NPM Version&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Harper is an English grammar checker designed to be &lt;em&gt;just right.&lt;/em&gt; I created it after years of dealing with the shortcomings of the competition.&lt;/p&gt; &#xA;&lt;p&gt;Grammarly was too expensive and too overbearing. Its suggestions lacked context, and were often just plain &lt;em&gt;wrong&lt;/em&gt;. Not to mention: it&#39;s a privacy nightmare. Everything you write with Grammarly is sent to their servers. Their privacy policy claims they don&#39;t sell the data, but that doesn&#39;t mean they don&#39;t use it to train large language models and god knows what else. Not only that, but the round-trip-time of the network request makes revising your work all the more tedious.&lt;/p&gt; &#xA;&lt;p&gt;LanguageTool is great, if you have gigabytes of RAM to spare and are willing to download the ~16GB n-gram dataset. Besides the memory requirements, I found LanguageTool too slow: it would take several seconds to lint even a moderate-size document.&lt;/p&gt; &#xA;&lt;p&gt;That&#39;s why I created Harper: it is the grammar checker that fits my needs. Not only does it take milliseconds to lint a document, take less than 1/50th of LanguageTool&#39;s memory footprint, but it is also completely private.&lt;/p&gt; &#xA;&lt;p&gt;Harper is even small enough to load via &lt;a href=&#34;https://writewithharper.com&#34;&gt;WebAssembly.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Language Support&lt;/h2&gt; &#xA;&lt;p&gt;Harper currently only supports English, but the core is extensible to support other languages, so we welcome contributions that allow for other language support.&lt;/p&gt; &#xA;&lt;h2&gt;Performance Issues&lt;/h2&gt; &#xA;&lt;p&gt;We consider long lint times bugs. If you encounter any significant performance issues, please create an issue on the topic.&lt;/p&gt; &#xA;&lt;p&gt;If you find a fix to any performance issue, we would appreciate the contribution. Just please make sure to read &lt;a href=&#34;https://github.com/automattic/harper/raw/master/CONTRIBUTING.md&#34;&gt;our contribution guidelines first.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://writewithharper.com/docs/faq&#34;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://writewithharper.com/docs/integrations/obsidian&#34;&gt;Obsidian Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://writewithharper.com/docs/integrations/language-server&#34;&gt;&lt;code&gt;harper-ls&lt;/code&gt; Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Supported Editors&#39; Documentation &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://writewithharper.com/docs/integrations/visual-studio-code&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://writewithharper.com/docs/integrations/neovim&#34;&gt;Neovim&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://writewithharper.com/docs/integrations/helix&#34;&gt;Helix&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://writewithharper.com/docs/integrations/emacs&#34;&gt;Emacs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://writewithharper.com/docs/integrations/zed&#34;&gt;Zed&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://writewithharper.com/docs/harperjs/introduction&#34;&gt;&lt;code&gt;harper.js&lt;/code&gt; Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.com/invite/JBqcAaKrzQ&#34;&gt;Official Discord Server&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Huge Thanks&lt;/h2&gt; &#xA;&lt;p&gt;This project would not be possible without the hard work from those who &lt;a href=&#34;https://writewithharper.com/docs/contributors/introduction&#34;&gt;contribute&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/automattic/harper/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=automattic/harper&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Harper&#39;s logo was designed by &lt;a href=&#34;https://lukaswerner.com/&#34;&gt;Lukas Werner&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>block/goose</title>
    <updated>2025-07-01T01:53:56Z</updated>
    <id>tag:github.com,2025-07-01:/block/goose</id>
    <link href="https://github.com/block/goose" rel="alternate"></link>
    <summary type="html">&lt;p&gt;an open source, extensible AI agent that goes beyond code suggestions - install, execute, edit, and test with any LLM&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;codename goose&lt;/h1&gt; &#xA; &lt;p&gt;&lt;em&gt;a local, extensible, open source AI agent that automates engineering tasks&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/7GaTvbDwga&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/1287729918100246654?logo=discord&amp;amp;logoColor=white&amp;amp;label=Join+Us&amp;amp;color=blueviolet&#34; alt=&#34;Discord&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/block/goose/actions/workflows/ci.yml&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/block/goose/ci.yml?branch=main&#34; alt=&#34;CI&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;goose is your on-machine AI agent, capable of automating complex development tasks from start to finish. More than just code suggestions, goose can build entire projects from scratch, write and execute code, debug failures, orchestrate workflows, and interact with external APIs - &lt;em&gt;autonomously&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Whether you&#39;re prototyping an idea, refining existing code, or managing intricate engineering pipelines, goose adapts to your workflow and executes tasks with precision.&lt;/p&gt; &#xA;&lt;p&gt;Designed for maximum flexibility, goose works with any LLM and supports multi-model configuration to optimize performance and cost, seamlessly integrates with MCP servers, and is available as both a desktop app as well as CLI - making it the ultimate AI assistant for developers who want to move faster and focus on innovation.&lt;/p&gt; &#xA;&lt;h1&gt;Quick Links&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://block.github.io/goose/docs/quickstart&#34;&gt;Quickstart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://block.github.io/goose/docs/getting-started/installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://block.github.io/goose/docs/category/tutorials&#34;&gt;Tutorials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://block.github.io/goose/docs/category/getting-started&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Goose Around with Us&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/block-opensource&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/@blockopensource&#34;&gt;YouTube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/company/block-opensource&#34;&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://x.com/blockopensource&#34;&gt;Twitter/X&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bsky.app/profile/opensource.block.xyz&#34;&gt;Bluesky&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://njump.me/opensource@block.xyz&#34;&gt;Nostr&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/edit</title>
    <updated>2025-07-01T01:53:56Z</updated>
    <id>tag:github.com,2025-07-01:/microsoft/edit</id>
    <link href="https://github.com/microsoft/edit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;We all edit.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/edit/main/assets/edit.svg?sanitize=true&#34; alt=&#34;Application Icon for Edit&#34;&gt; Edit&lt;/h1&gt; &#xA;&lt;p&gt;A simple editor for simple needs.&lt;/p&gt; &#xA;&lt;p&gt;This editor pays homage to the classic &lt;a href=&#34;https://en.wikipedia.org/wiki/MS-DOS_Editor&#34;&gt;MS-DOS Editor&lt;/a&gt;, but with a modern interface and input controls similar to VS Code. The goal is to provide an accessible editor that even users largely unfamiliar with terminals can easily use.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/edit/main/assets/edit_hero_image.png&#34; alt=&#34;Screenshot of Edit with the About dialog in the foreground&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/microsoft-edit/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/microsoft-edit.svg?exclude_unsupported=1&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also download binaries from &lt;a href=&#34;https://github.com/microsoft/edit/releases/latest&#34;&gt;our Releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;You can install the latest version with WinGet:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;winget install Microsoft.Edit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Build Instructions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;Install Rust&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install the nightly toolchain: &lt;code&gt;rustup install nightly&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Alternatively, set the environment variable &lt;code&gt;RUSTC_BOOTSTRAP=1&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Clone the repository&lt;/li&gt; &#xA; &lt;li&gt;For a release build, run: &lt;code&gt;cargo build --config .cargo/release.toml --release&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Notes to Package Maintainers&lt;/h2&gt; &#xA;&lt;h3&gt;Package Naming&lt;/h3&gt; &#xA;&lt;p&gt;The canonical executable name is &#34;edit&#34; and the alternative name is &#34;msedit&#34;. We&#39;re aware of the potential conflict of &#34;edit&#34; with existing commands and recommend alternatively naming packages and executables &#34;msedit&#34;. Names such as &#34;ms-edit&#34; should be avoided. Assigning an &#34;edit&#34; alias is recommended, if possible.&lt;/p&gt; &#xA;&lt;h3&gt;ICU library name (SONAME)&lt;/h3&gt; &#xA;&lt;p&gt;This project &lt;em&gt;optionally&lt;/em&gt; depends on the ICU library for its Search and Replace functionality. By default, the project will look for a SONAME without version suffix:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows: &lt;code&gt;icuuc.dll&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;macOS: &lt;code&gt;libicuuc.dylib&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;UNIX, and other OS: &lt;code&gt;libicuuc.so&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If your installation uses a different SONAME, please set the following environment variable at build time:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;EDIT_CFG_ICUUC_SONAME&lt;/code&gt;: For instance, &lt;code&gt;libicuuc.so.76&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;EDIT_CFG_ICUI18N_SONAME&lt;/code&gt;: For instance, &lt;code&gt;libicui18n.so.76&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additionally, this project assumes that the ICU exports are exported without &lt;code&gt;_&lt;/code&gt; prefix and without version suffix, such as &lt;code&gt;u_errorName&lt;/code&gt;. If your installation uses versioned exports, please set:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;EDIT_CFG_ICU_CPP_EXPORTS&lt;/code&gt;: If set to &lt;code&gt;true&lt;/code&gt;, it&#39;ll look for C++ symbols such as &lt;code&gt;_u_errorName&lt;/code&gt;. Enabled by default on macOS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;EDIT_CFG_ICU_RENAMING_VERSION&lt;/code&gt;: If set to a version number, such as &lt;code&gt;76&lt;/code&gt;, it&#39;ll look for symbols such as &lt;code&gt;u_errorName_76&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Finally, you can set the following environment variables:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;EDIT_CFG_ICU_RENAMING_AUTO_DETECT&lt;/code&gt;: If set to &lt;code&gt;true&lt;/code&gt;, the executable will try to detect the &lt;code&gt;EDIT_CFG_ICU_RENAMING_VERSION&lt;/code&gt; value at runtime. The way it does this is not officially supported by ICU and as such is not recommended to be relied upon. Enabled by default on UNIX (excluding macOS) if no other options are set.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To test your settings, run &lt;code&gt;cargo test&lt;/code&gt; again but with the &lt;code&gt;--ignored&lt;/code&gt; flag. For instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo test -- --ignored&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>