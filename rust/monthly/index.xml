<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-01T02:09:09Z</updated>
  <subtitle>Monthly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jdx/mise</title>
    <updated>2024-02-01T02:09:09Z</updated>
    <id>tag:github.com,2024-02-01:/jdx/mise</id>
    <link href="https://github.com/jdx/mise" rel="alternate"></link>
    <summary type="html">&lt;p&gt;dev tools, env vars, task runner&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;&lt;a href=&#34;https://mise.jdx.dev&#34;&gt;mise-en-place&lt;/a&gt;&lt;/h1&gt; &#xA; &lt;!-- &lt;a href=&#34;https://mise.jdx.dev&#34;&gt;&lt;picture&gt; --&gt; &#xA; &lt;!--   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; width=&#34;617&#34; srcset=&#34;./docs/logo-dark@2x.png&#34;&gt; --&gt; &#xA; &lt;!--   &lt;img alt=&#34;mise logo&#34; width=&#34;617&#34; src=&#34;./docs/logo-light@2x.png&#34;&gt; --&gt; &#xA; &lt;!-- &lt;/picture&gt;&lt;/a&gt; --&gt; &#xA; &lt;a href=&#34;https://crates.io/crates/mise&#34;&gt;&lt;img alt=&#34;Crates.io&#34; src=&#34;https://img.shields.io/crates/v/mise?style=for-the-badge&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/jdx/mise/raw/main/LICENSE&#34;&gt;&lt;img alt=&#34;GitHub&#34; src=&#34;https://img.shields.io/github/license/jdx/mise?color=%2320A920&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/jdx/mise/actions/workflows/test.yml&#34;&gt;&lt;img alt=&#34;GitHub Workflow Status&#34; src=&#34;https://img.shields.io/github/actions/workflow/status/jdx/mise/test.yml?color=%2320A920&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://app.codacy.com/gh/jdx/mise/dashboard?utm_source=gh&amp;amp;utm_medium=referral&amp;amp;utm_content=&amp;amp;utm_campaign=Badge_coverage&#34;&gt;&lt;img alt=&#34;Codacy coverage (branch)&#34; src=&#34;https://img.shields.io/codacy/coverage/af322e1f36ca41f0a296f49733a705f5/main?color=%2320A920&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://discord.gg/mABnUDvP57&#34;&gt;&lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/1066429325269794907?color=%23738ADB&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &#xA; &lt;p&gt;&lt;em&gt;The front-end to your dev env. (&lt;a href=&#34;https://mise.jdx.dev/rtx.html&#34;&gt;formerly called &#34;rtx&#34;&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;What is it?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Like &lt;a href=&#34;https://asdf-vm.com&#34;&gt;asdf&lt;/a&gt; (or &lt;a href=&#34;https://github.com/nvm-sh/nvm&#34;&gt;nvm&lt;/a&gt; or &lt;a href=&#34;https://github.com/pyenv/pyenv&#34;&gt;pyenv&lt;/a&gt; but for any language) it manages &lt;a href=&#34;https://mise.jdx.dev/dev-tools/&#34;&gt;dev tools&lt;/a&gt; like node, python, cmake, terraform, and &lt;a href=&#34;https://mise.jdx.dev/plugins.html&#34;&gt;hundreds more&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Like &lt;a href=&#34;https://github.com/direnv/direnv&#34;&gt;direnv&lt;/a&gt; it manages &lt;a href=&#34;https://mise.jdx.dev/environments.html&#34;&gt;environment variables&lt;/a&gt; for different project directories.&lt;/li&gt; &#xA; &lt;li&gt;Like &lt;a href=&#34;https://www.gnu.org/software/make/manual/make.html&#34;&gt;make&lt;/a&gt; it manages &lt;a href=&#34;https://mise.jdx.dev/tasks/&#34;&gt;tasks&lt;/a&gt; used to build and test projects.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Migrating from rtx&lt;/h2&gt; &#xA;&lt;p&gt;mise will attempt to migrate most of its internal files making the transition as easy as possible. That said, it&#39;s worth reading the &lt;a href=&#34;https://mise.jdx.dev/rtx.html&#34;&gt;migration guide&lt;/a&gt; because there are a few things to watch out for.&lt;/p&gt; &#xA;&lt;h2&gt;30 Second Demo&lt;/h2&gt; &#xA;&lt;p&gt;The following shows using mise to install different versions of &lt;a href=&#34;https://nodejs.org&#34;&gt;node&lt;/a&gt;. Note that calling &lt;code&gt;which node&lt;/code&gt; gives us a real path to node, not a shim.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jdx/mise/main/docs/demo.gif&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jdx/mise/main/docs/demo.gif&#34; alt=&#34;demo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;Install mise (other methods &lt;a href=&#34;https://mise.jdx.dev/getting-started.html&#34;&gt;here&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh-session&#34;&gt;$ curl https://mise.jdx.dev/install.sh | sh&#xA;$ ~/.local/bin/mise --version&#xA;mise 2024.2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Hook mise into your shell (pick the right one for your shell):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh-session&#34;&gt;# note this assumes mise is located at ~/.local/bin/mise&#xA;# which is what install.sh does by default&#xA;echo &#39;eval &#34;$(~/.local/bin/mise activate bash)&#34;&#39; &amp;gt;&amp;gt; ~/.bashrc&#xA;echo &#39;eval &#34;$(~/.local/bin/mise activate zsh)&#34;&#39; &amp;gt;&amp;gt; ~/.zshrc&#xA;echo &#39;~/.local/bin/mise activate fish | source&#39; &amp;gt;&amp;gt; ~/.config/fish/config.fish&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install a runtime and set it as the global default:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh-session&#34;&gt;$ mise use --global node@20&#xA;$ node -v&#xA;v20.0.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Full Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://mise.jdx.dev&#34;&gt;mise.jdx.dev&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>solana-labs/solana</title>
    <updated>2024-02-01T02:09:09Z</updated>
    <id>tag:github.com,2024-02-01:/solana-labs/solana</id>
    <link href="https://github.com/solana-labs/solana" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Web-Scale Blockchain for fast, secure, scalable, decentralized apps and marketplaces.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://solana.com&#34;&gt; &lt;img alt=&#34;Solana&#34; src=&#34;https://i.imgur.com/IKyzQ6T.png&#34; width=&#34;250&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://crates.io/crates/solana-core&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/solana-core.svg?sanitize=true&#34; alt=&#34;Solana crate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.rs/solana-core&#34;&gt;&lt;img src=&#34;https://docs.rs/solana-core/badge.svg?sanitize=true&#34; alt=&#34;Solana documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://buildkite.com/solana-labs/solana/builds?branch=master&#34;&gt;&lt;img src=&#34;https://badge.buildkite.com/8cc350de251d61483db98bdfc895b9ea0ac8ffa4a32ee850ed.svg?branch=master&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/solana-labs/solana&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/solana-labs/solana/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Building&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;strong&gt;1. Install rustc, cargo and rustfmt.&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl https://sh.rustup.rs -sSf | sh&#xA;$ source $HOME/.cargo/env&#xA;$ rustup component add rustfmt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When building the master branch, please make sure you are using the latest stable rust version by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rustup update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When building a specific release branch, you should check the rust version in &lt;code&gt;ci/rust-version.sh&lt;/code&gt; and if necessary, install that version by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rustup install VERSION&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that if this is not the latest rust version on your machine, cargo commands may require an &lt;a href=&#34;https://rust-lang.github.io/rustup/overrides.html&#34;&gt;override&lt;/a&gt; in order to use the correct version.&lt;/p&gt; &#xA;&lt;p&gt;On Linux systems you may need to install libssl-dev, pkg-config, zlib1g-dev, protobuf etc.&lt;/p&gt; &#xA;&lt;p&gt;On Ubuntu:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo apt-get update&#xA;$ sudo apt-get install libssl-dev libudev-dev pkg-config zlib1g-dev llvm clang cmake make libprotobuf-dev protobuf-compiler&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Fedora:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo dnf install openssl-devel systemd-devel pkg-config zlib-devel llvm clang cmake make protobuf-devel protobuf-compiler perl-core&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;strong&gt;2. Download the source code.&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone https://github.com/solana-labs/solana.git&#xA;$ cd solana&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;strong&gt;3. Build.&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./cargo build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Testing&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Run the test suite:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./cargo test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Starting a local testnet&lt;/h3&gt; &#xA;&lt;p&gt;Start your own testnet locally, instructions are in the &lt;a href=&#34;https://docs.solanalabs.com/clusters/benchmark&#34;&gt;online docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Accessing the remote development cluster&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;devnet&lt;/code&gt; - stable public cluster for development accessible via devnet.solana.com. Runs 24/7. Learn more about the &lt;a href=&#34;https://docs.solanalabs.com/clusters&#34;&gt;public clusters&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Benchmarking&lt;/h1&gt; &#xA;&lt;p&gt;First, install the nightly build of rustc. &lt;code&gt;cargo bench&lt;/code&gt; requires the use of the unstable features only available in the nightly build.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rustup install nightly&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the benchmarks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cargo +nightly bench&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Release Process&lt;/h1&gt; &#xA;&lt;p&gt;The release process for this project is described &lt;a href=&#34;https://raw.githubusercontent.com/solana-labs/solana/master/RELEASE.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Code coverage&lt;/h1&gt; &#xA;&lt;p&gt;To generate code coverage statistics:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ scripts/coverage.sh&#xA;$ open target/cov/lcov-local/index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Why coverage? While most see coverage as a code quality metric, we see it primarily as a developer productivity metric. When a developer makes a change to the codebase, presumably it&#39;s a &lt;em&gt;solution&lt;/em&gt; to some problem. Our unit-test suite is how we encode the set of &lt;em&gt;problems&lt;/em&gt; the codebase solves. Running the test suite should indicate that your change didn&#39;t &lt;em&gt;infringe&lt;/em&gt; on anyone else&#39;s solutions. Adding a test &lt;em&gt;protects&lt;/em&gt; your solution from future changes. Say you don&#39;t understand why a line of code exists, try deleting it and running the unit-tests. The nearest test failure should tell you what problem was solved by that code. If no test fails, go ahead and submit a Pull Request that asks, &#34;what problem is solved by this code?&#34; On the other hand, if a test does fail and you can think of a better way to solve the same problem, a Pull Request with your solution would most certainly be welcome! Likewise, if rewriting a test can better communicate what code it&#39;s protecting, please send us that patch!&lt;/p&gt; &#xA;&lt;h1&gt;Disclaimer&lt;/h1&gt; &#xA;&lt;p&gt;All claims, content, designs, algorithms, estimates, roadmaps, specifications, and performance measurements described in this project are done with the Solana Labs, Inc. (“SL”) good faith efforts. It is up to the reader to check and validate their accuracy and truthfulness. Furthermore, nothing in this project constitutes a solicitation for investment.&lt;/p&gt; &#xA;&lt;p&gt;Any content produced by SL or developer resources that SL provides are for educational and inspirational purposes only. SL does not encourage, induce or sanction the deployment, integration or use of any such applications (including the code comprising the Solana blockchain protocol) in violation of applicable laws or regulations and hereby prohibits any such deployment, integration or use. This includes the use of any such applications by the reader (a) in violation of export control or sanctions laws of the United States or any other applicable jurisdiction, (b) if the reader is located in or ordinarily resident in a country or territory subject to comprehensive sanctions administered by the U.S. Office of Foreign Assets Control (OFAC), or (c) if the reader is or is working on behalf of a Specially Designated National (SDN) or a person subject to similar blocking or denied party prohibitions.&lt;/p&gt; &#xA;&lt;p&gt;The reader should be aware that U.S. export control and sanctions laws prohibit U.S. persons (and other persons that are subject to such laws) from transacting with persons in certain countries and territories or that are on the SDN list. Accordingly, there is a risk to individuals that other persons using any of the code contained in this repo, or a derivation thereof, may be sanctioned persons and that transactions with such persons would be a violation of U.S. export controls and sanctions law.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>alacritty/alacritty</title>
    <updated>2024-02-01T02:09:09Z</updated>
    <id>tag:github.com,2024-02-01:/alacritty/alacritty</id>
    <link href="https://github.com/alacritty/alacritty" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A cross-platform, OpenGL terminal emulator.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;200&#34; alt=&#34;Alacritty Logo&#34; src=&#34;https://raw.githubusercontent.com/alacritty/alacritty/master/extra/logo/compat/alacritty-term%2Bscanlines.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Alacritty - A fast, cross-platform, OpenGL terminal emulator&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Alacritty - A fast, cross-platform, OpenGL terminal emulator&#34; src=&#34;https://raw.githubusercontent.com/alacritty/alacritty/master/extra/promo/alacritty-readme.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;Alacritty is a modern terminal emulator that comes with sensible defaults, but allows for extensive &lt;a href=&#34;https://raw.githubusercontent.com/alacritty/alacritty/master/#configuration&#34;&gt;configuration&lt;/a&gt;. By integrating with other applications, rather than reimplementing their functionality, it manages to provide a flexible set of &lt;a href=&#34;https://raw.githubusercontent.com/alacritty/alacritty/master/docs/features.md&#34;&gt;features&lt;/a&gt; with high performance. The supported platforms currently consist of BSD, Linux, macOS and Windows.&lt;/p&gt; &#xA;&lt;p&gt;The software is considered to be at a &lt;strong&gt;beta&lt;/strong&gt; level of readiness; there are a few missing features and bugs to be fixed, but it is already used by many as a daily driver.&lt;/p&gt; &#xA;&lt;p&gt;Precompiled binaries are available from the &lt;a href=&#34;https://github.com/alacritty/alacritty/releases&#34;&gt;GitHub releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Join &lt;a href=&#34;https://web.libera.chat/gamja/?channels=#alacritty&#34;&gt;&lt;code&gt;#alacritty&lt;/code&gt;&lt;/a&gt; on libera.chat if you have questions or looking for a quick help.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;You can find an overview over the features available in Alacritty &lt;a href=&#34;https://raw.githubusercontent.com/alacritty/alacritty/master/docs/features.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Further information&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jwilm.io/blog/announcing-alacritty/&#34;&gt;Announcing Alacritty, a GPU-Accelerated Terminal Emulator&lt;/a&gt; January 6, 2017&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=qHOdYO3WUTk&#34;&gt;A talk about Alacritty at the Rust Meetup January 2017&lt;/a&gt; January 19, 2017&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jwilm.io/blog/alacritty-lands-scrollback/&#34;&gt;Alacritty Lands Scrollback, Publishes Benchmarks&lt;/a&gt; September 17, 2018&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Alacritty can be installed by using various package managers on Linux, BSD, macOS and Windows.&lt;/p&gt; &#xA;&lt;p&gt;Prebuilt binaries for macOS and Windows can also be downloaded from the &lt;a href=&#34;https://github.com/alacritty/alacritty/releases&#34;&gt;GitHub releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For everyone else, the detailed instructions to install Alacritty can be found &lt;a href=&#34;https://raw.githubusercontent.com/alacritty/alacritty/master/INSTALL.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;At least OpenGL ES 2.0&lt;/li&gt; &#xA; &lt;li&gt;[Windows] ConPTY support (Windows 10 version 1809 or higher)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;You can find the documentation for Alacritty&#39;s configuration in &lt;code&gt;man 5 alacritty&lt;/code&gt;, or by looking at &lt;a href=&#34;https://alacritty.org/config-alacritty.html&#34;&gt;the website&lt;/a&gt; if you do not have the manpages installed.&lt;/p&gt; &#xA;&lt;p&gt;Alacritty doesn&#39;t create the config file for you, but it looks for one in the following locations:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;$XDG_CONFIG_HOME/alacritty/alacritty.toml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$XDG_CONFIG_HOME/alacritty.toml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$HOME/.config/alacritty/alacritty.toml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$HOME/.alacritty.toml&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;On Windows, the config file should be located at:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;%APPDATA%\alacritty\alacritty.toml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;A guideline about contributing to Alacritty can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/alacritty/alacritty/master/CONTRIBUTING.md&#34;&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Is it really the fastest terminal emulator?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Benchmarking terminal emulators is complicated. Alacritty uses &lt;a href=&#34;https://github.com/alacritty/vtebench&#34;&gt;vtebench&lt;/a&gt; to quantify terminal emulator throughput and manages to consistently score better than the competition using it. If you have found an example where this is not the case, please report a bug.&lt;/p&gt; &#xA;&lt;p&gt;Other aspects like latency or framerate and frame consistency are more difficult to quantify. Some terminal emulators also intentionally slow down to save resources, which might be preferred by some users.&lt;/p&gt; &#xA;&lt;p&gt;If you have doubts about Alacritty&#39;s performance or usability, the best way to quantify terminal emulators is always to test them with &lt;strong&gt;your&lt;/strong&gt; specific usecases.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Why isn&#39;t feature X implemented?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alacritty has many great features, but not every feature from every other terminal. This could be for a number of reasons, but sometimes it&#39;s just not a good fit for Alacritty. This means you won&#39;t find things like tabs or splits (which are best left to a window manager or &lt;a href=&#34;https://github.com/tmux/tmux&#34;&gt;terminal multiplexer&lt;/a&gt;) nor niceties like a GUI config editor.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Alacritty is released under the &lt;a href=&#34;https://github.com/alacritty/alacritty/raw/master/LICENSE-APACHE&#34;&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>