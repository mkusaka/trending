<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-01T02:11:18Z</updated>
  <subtitle>Monthly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zed-industries/zed</title>
    <updated>2024-03-01T02:11:18Z</updated>
    <id>tag:github.com,2024-03-01:/zed-industries/zed</id>
    <link href="https://github.com/zed-industries/zed" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Code at the speed of thought – Zed is a high-performance, multiplayer code editor from the creators of Atom and Tree-sitter.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Zed&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zed-industries/zed/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/zed-industries/zed/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Welcome to Zed, a high-performance, multiplayer code editor from the creators of &lt;a href=&#34;https://github.com/atom/atom&#34;&gt;Atom&lt;/a&gt; and &lt;a href=&#34;https://github.com/tree-sitter/tree-sitter&#34;&gt;Tree-sitter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can &lt;a href=&#34;https://zed.dev/download&#34;&gt;download&lt;/a&gt; Zed today for macOS (v10.15+).&lt;/p&gt; &#xA;&lt;p&gt;Support for additional platforms is on our &lt;a href=&#34;https://zed.dev/roadmap&#34;&gt;roadmap&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux (&lt;a href=&#34;https://github.com/zed-industries/zed/issues/5395&#34;&gt;tracking issue&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Windows (&lt;a href=&#34;https://github.com/zed-industries/zed/issues/5394&#34;&gt;tracking issue&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Web (&lt;a href=&#34;https://github.com/zed-industries/zed/issues/5396&#34;&gt;tracking issue&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For macOS users, you can also install Zed from Homebrew:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew install zed&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Developing Zed&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zed-industries/zed/main/docs/src/developing_zed__building_zed_macos.md&#34;&gt;Building Zed for macOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zed-industries/zed/main/docs/src/developing_zed__building_zed_linux.md&#34;&gt;Building Zed for Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zed-industries/zed/main/docs/src/developing_zed__local_collaboration.md&#34;&gt;Running Collaboration Locally&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/zed-industries/zed/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for ways you can contribute to Zed.&lt;/p&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;License information for third party dependencies must be correctly provided for CI to pass.&lt;/p&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;https://github.com/EmbarkStudios/cargo-about&#34;&gt;&lt;code&gt;cargo-about&lt;/code&gt;&lt;/a&gt; to automatically comply with open source licenses. If CI is failing, check the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Is it showing a &lt;code&gt;no license specified&lt;/code&gt; error for a crate you&#39;ve created? If so, add &lt;code&gt;publish = false&lt;/code&gt; under &lt;code&gt;[package]&lt;/code&gt; in your crate&#39;s Cargo.toml.&lt;/li&gt; &#xA; &lt;li&gt;Is the error &lt;code&gt;failed to satisfy license requirements&lt;/code&gt; for a dependency? If so, first determine what license the project has and whether this system is sufficient to comply with this license&#39;s requirements. If you&#39;re unsure, ask a lawyer. Once you&#39;ve verified that this system is acceptable add the license&#39;s SPDX identifier to the &lt;code&gt;accepted&lt;/code&gt; array in &lt;code&gt;script/licenses/zed-licenses.toml&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Is &lt;code&gt;cargo-about&lt;/code&gt; unable to find the license for a dependency? If so, add a clarification field at the end of &lt;code&gt;script/licenses/zed-licenses.toml&lt;/code&gt;, as specified in the &lt;a href=&#34;https://embarkstudios.github.io/cargo-about/cli/generate/config.html#crate-configuration&#34;&gt;cargo-about book&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>ajeetdsouza/zoxide</title>
    <updated>2024-03-01T02:11:18Z</updated>
    <id>tag:github.com,2024-03-01:/ajeetdsouza/zoxide</id>
    <link href="https://github.com/ajeetdsouza/zoxide" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A smarter cd command. Supports all major shells.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;sup&gt;Special thanks to:&lt;/sup&gt;&lt;/p&gt; &#xA; &lt;a href=&#34;https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=zoxide_20231001&#34;&gt; &#xA;  &lt;div&gt; &#xA;   &lt;img src=&#34;https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/contrib/warp.png&#34; width=&#34;230&#34; alt=&#34;Warp&#34;&gt; &#xA;  &lt;/div&gt; &lt;b&gt; Warp is a modern, Rust-based terminal with AI built in so you and your team can build great software, faster. &lt;/b&gt; &#xA;  &lt;div&gt; &#xA;   &lt;sup&gt;Visit &lt;u&gt;warp.dev&lt;/u&gt; to learn more.&lt;/sup&gt; &#xA;  &lt;/div&gt; &lt;/a&gt; &#xA; &lt;hr&gt; &#xA; &lt;h1&gt;zoxide&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://crates.io/crates/zoxide&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/zoxide?logo=rust&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ajeetdsouza/zoxide/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/ajeetdsouza/zoxide/total?logo=github&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://builtwithnix.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/builtwith-nix-7d81f7?logo=nixos&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;Built with Nix&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;zoxide is a &lt;strong&gt;smarter cd command&lt;/strong&gt;, inspired by z and autojump.&lt;/p&gt; &#xA; &lt;p&gt;It remembers which directories you use most frequently, so you can &#34;jump&#34; to them in just a few keystrokes.&lt;br&gt; zoxide works on all major shells.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/#getting-started&#34;&gt;Getting started&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/#installation&#34;&gt;Installation&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/#configuration&#34;&gt;Configuration&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/#third-party-integrations&#34;&gt;Integrations&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/contrib/tutorial.webp&#34; alt=&#34;Tutorial&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;z foo              # cd into highest ranked directory matching foo&#xA;z foo bar          # cd into highest ranked directory matching foo and bar&#xA;z foo /            # cd into a subdirectory starting with foo&#xA;&#xA;z ~/foo            # z also works like a regular cd command&#xA;z foo/             # cd into relative path&#xA;z ..               # cd one level up&#xA;z -                # cd into previous directory&#xA;&#xA;zi foo             # cd with interactive selection (using fzf)&#xA;&#xA;z foo&amp;lt;SPACE&amp;gt;&amp;lt;TAB&amp;gt;  # show interactive completions (zoxide v0.8.0+, bash 4.4+/fish/zsh only)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Read more about the matching algorithm &lt;a href=&#34;https://github.com/ajeetdsouza/zoxide/wiki/Algorithm#matching&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;zoxide can be installed in 4 easy steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install binary&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;zoxide runs on most major platforms. If your platform isn&#39;t listed below, please &lt;a href=&#34;https://github.com/ajeetdsouza/zoxide/issues/new&#34;&gt;open an issue&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;Linux / WSL&lt;/summary&gt; &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;The recommended way to install zoxide is via the install script:&lt;/p&gt; &#xA;    &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;p&gt;Or, you can use a package manager:&lt;/p&gt; &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;Distribution&lt;/th&gt; &#xA;       &lt;th&gt;Repository&lt;/th&gt; &#xA;       &lt;th&gt;Instructions&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;     &lt;tbody&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;strong&gt;&lt;em&gt;Any&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://crates.io/crates/zoxide&#34;&gt;crates.io&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;cargo install zoxide --locked&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;em&gt;Any&lt;/em&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://github.com/asdf-vm/asdf&#34;&gt;asdf&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;asdf plugin add zoxide https://github.com/nyrst/asdf-zoxide.git&lt;/code&gt; &lt;br&gt; &lt;code&gt;asdf install zoxide latest&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;em&gt;Any&lt;/em&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/zoxide&#34;&gt;conda-forge&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;conda install -c conda-forge zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;em&gt;Any&lt;/em&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://packages.guix.gnu.org/packages/zoxide/&#34;&gt;guix&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;guix install zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;em&gt;Any&lt;/em&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://formulae.brew.sh/formula-linux/zoxide&#34;&gt;Linuxbrew&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;brew install zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;em&gt;Any&lt;/em&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://github.com/NixOS/nixpkgs/raw/master/pkgs/tools/misc/zoxide/default.nix&#34;&gt;nixpkgs&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;nix-env -iA nixpkgs.zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Alpine Linux 3.13+&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://pkgs.alpinelinux.org/packages?name=zoxide&#34;&gt;Alpine Linux Packages&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;apk add zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Arch Linux&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://archlinux.org/packages/extra/x86_64/zoxide/&#34;&gt;Arch Linux Extra&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;pacman -S zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;CentOS 7+&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://copr.fedorainfracloud.org/coprs/atim/zoxide/&#34;&gt;Copr&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;dnf copr enable atim/zoxide&lt;/code&gt; &lt;br&gt; &lt;code&gt;dnf install zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;del&gt;Debian 11+&lt;/del&gt;[^1]&lt;/td&gt; &#xA;       &lt;td&gt;&lt;del&gt;&lt;a href=&#34;https://packages.debian.org/stable/admin/zoxide&#34;&gt;Debian Packages&lt;/a&gt;&lt;/del&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;del&gt;&lt;code&gt;apt install zoxide&lt;/code&gt;&lt;/del&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Devuan 4.0+&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://pkginfo.devuan.org/cgi-bin/package-query.html?c=package&amp;amp;q=zoxide&#34;&gt;Devuan Packages&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;apt install zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Fedora 32+&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://src.fedoraproject.org/rpms/rust-zoxide&#34;&gt;Fedora Packages&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;dnf install zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Gentoo&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://github.com/gentoo-mirror/guru&#34;&gt;GURU Overlay&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;eselect repository enable guru&lt;/code&gt; &lt;br&gt; &lt;code&gt;emerge --sync guru&lt;/code&gt; &lt;br&gt; &lt;code&gt;emerge app-shells/zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Manjaro&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;pacman -S zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;openSUSE Tumbleweed&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://build.opensuse.org/package/show/openSUSE:Factory/zoxide&#34;&gt;openSUSE Factory&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;zypper install zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;del&gt;Parrot OS&lt;/del&gt;[^1]&lt;/td&gt; &#xA;       &lt;td&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;del&gt;&lt;code&gt;apt install zoxide&lt;/code&gt;&lt;/del&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;del&gt;Raspbian 11+&lt;/del&gt;[^1]&lt;/td&gt; &#xA;       &lt;td&gt;&lt;del&gt;&lt;a href=&#34;https://archive.raspbian.org/raspbian/pool/main/r/rust-zoxide/&#34;&gt;Raspbian Packages&lt;/a&gt;&lt;/del&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;del&gt;&lt;code&gt;apt install zoxide&lt;/code&gt;&lt;/del&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Rhino Linux&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://pacstall.dev/packages/zoxide-deb&#34;&gt;Pacstall Packages&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;pacstall -I zoxide-deb&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Slackware 15.0+&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://slackbuilds.org/repository/15.0/system/zoxide/&#34;&gt;SlackBuilds&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://slackbuilds.org/howto/&#34;&gt;Instructions&lt;/a&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Solus&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://github.com/getsolus/packages/tree/main/packages/z/zoxide/&#34;&gt;Solus Packages&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;eopkg install zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;del&gt;Ubuntu 21.04+&lt;/del&gt;[^1]&lt;/td&gt; &#xA;       &lt;td&gt;&lt;del&gt;&lt;a href=&#34;https://packages.ubuntu.com/jammy/zoxide&#34;&gt;Ubuntu Packages&lt;/a&gt;&lt;/del&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;del&gt;&lt;code&gt;apt install zoxide&lt;/code&gt;&lt;/del&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Void Linux&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://github.com/void-linux/void-packages/tree/master/srcpkgs/zoxide&#34;&gt;Void Linux Packages&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;xbps-install -S zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt; &#xA;    &lt;/table&gt; &#xA;   &lt;/blockquote&gt; &#xA;  &lt;/details&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;macOS&lt;/summary&gt; &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;To install zoxide, use a package manager:&lt;/p&gt; &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;Repository&lt;/th&gt; &#xA;       &lt;th&gt;Instructions&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;     &lt;tbody&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://crates.io/crates/zoxide&#34;&gt;crates.io&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;cargo install zoxide --locked&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://formulae.brew.sh/formula/zoxide&#34;&gt;Homebrew&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;brew install zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://github.com/asdf-vm/asdf&#34;&gt;asdf&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;asdf plugin add zoxide https://github.com/nyrst/asdf-zoxide.git&lt;/code&gt; &lt;br&gt; &lt;code&gt;asdf install zoxide latest&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/zoxide&#34;&gt;conda-forge&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;conda install -c conda-forge zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://ports.macports.org/port/zoxide/summary&#34;&gt;MacPorts&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;port install zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://github.com/NixOS/nixpkgs/raw/master/pkgs/tools/misc/zoxide/default.nix&#34;&gt;nixpkgs&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;nix-env -iA nixpkgs.zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt; &#xA;    &lt;/table&gt; &#xA;    &lt;p&gt;Or, run this command in your terminal:&lt;/p&gt; &#xA;    &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/blockquote&gt; &#xA;  &lt;/details&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;Windows&lt;/summary&gt; &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;zoxide works with PowerShell, as well as shells running in Cygwin, Git Bash, and MSYS2.&lt;/p&gt; &#xA;    &lt;p&gt;The recommended way to install zoxide is via &lt;code&gt;winget&lt;/code&gt;:&lt;/p&gt; &#xA;    &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;winget install ajeetdsouza.zoxide&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;p&gt;Or, you can use an alternative package manager:&lt;/p&gt; &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;Repository&lt;/th&gt; &#xA;       &lt;th&gt;Instructions&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;     &lt;tbody&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://crates.io/crates/zoxide&#34;&gt;crates.io&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;cargo install zoxide --locked&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://community.chocolatey.org/packages/zoxide&#34;&gt;Chocolatey&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;choco install zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/zoxide&#34;&gt;conda-forge&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;conda install -c conda-forge zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://github.com/ScoopInstaller/Main/tree/master/bucket/zoxide.json&#34;&gt;Scoop&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;scoop install zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt; &#xA;    &lt;/table&gt; &#xA;   &lt;/blockquote&gt; &#xA;  &lt;/details&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;BSD&lt;/summary&gt; &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;To install zoxide, use a package manager:&lt;/p&gt; &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;Distribution&lt;/th&gt; &#xA;       &lt;th&gt;Repository&lt;/th&gt; &#xA;       &lt;th&gt;Instructions&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;     &lt;tbody&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;strong&gt;&lt;em&gt;Any&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://crates.io/crates/zoxide&#34;&gt;crates.io&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;cargo install zoxide --locked&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;DragonFly BSD&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://github.com/DragonFlyBSD/DPorts/tree/master/sysutils/zoxide&#34;&gt;DPorts&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;pkg install zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;FreeBSD&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://www.freshports.org/sysutils/zoxide/&#34;&gt;FreshPorts&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;pkg install zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;NetBSD&lt;/td&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://pkgsrc.se/sysutils/zoxide&#34;&gt;pkgsrc&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;pkgin install zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt; &#xA;    &lt;/table&gt; &#xA;    &lt;p&gt;Or, run this command in your terminal:&lt;/p&gt; &#xA;    &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/blockquote&gt; &#xA;  &lt;/details&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;Android&lt;/summary&gt; &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;To install zoxide, use a package manager:&lt;/p&gt; &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;Repository&lt;/th&gt; &#xA;       &lt;th&gt;Instructions&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;     &lt;tbody&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;a href=&#34;https://github.com/termux/termux-packages/tree/master/packages/zoxide&#34;&gt;Termux&lt;/a&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;pkg install zoxide&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt; &#xA;    &lt;/table&gt; &#xA;   &lt;/blockquote&gt; &#xA;  &lt;/details&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Setup zoxide on your shell&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;To start using zoxide, add it to your shell.&lt;/p&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;Bash&lt;/summary&gt; &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;Add this to the &lt;ins&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;/ins&gt; of your config file (usually &lt;code&gt;~/.bashrc&lt;/code&gt;):&lt;/p&gt; &#xA;    &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;eval &#34;$(zoxide init bash)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/blockquote&gt; &#xA;  &lt;/details&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;Elvish&lt;/summary&gt; &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;Add this to the &lt;ins&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;/ins&gt; of your config file (usually &lt;code&gt;~/.elvish/rc.elv&lt;/code&gt;):&lt;/p&gt; &#xA;    &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;eval (zoxide init elvish | slurp)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; zoxide only supports elvish v0.18.0 and above.&lt;/p&gt; &#xA;   &lt;/blockquote&gt; &#xA;  &lt;/details&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;Fish&lt;/summary&gt; &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;Add this to the &lt;ins&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;/ins&gt; of your config file (usually &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt;):&lt;/p&gt; &#xA;    &lt;pre&gt;&lt;code class=&#34;language-fish&#34;&gt;zoxide init fish | source&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/blockquote&gt; &#xA;  &lt;/details&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;Nushell&lt;/summary&gt; &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;Add this to the &lt;ins&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;/ins&gt; of your env file (find it by running &lt;code&gt;$nu.env-path&lt;/code&gt; in Nushell):&lt;/p&gt; &#xA;    &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;zoxide init nushell | save -f ~/.zoxide.nu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;p&gt;Now, add this to the &lt;ins&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;/ins&gt; of your config file (find it by running &lt;code&gt;$nu.config-path&lt;/code&gt; in Nushell):&lt;/p&gt; &#xA;    &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;source ~/.zoxide.nu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; zoxide only supports Nushell v0.89.0+.&lt;/p&gt; &#xA;   &lt;/blockquote&gt; &#xA;  &lt;/details&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;PowerShell&lt;/summary&gt; &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;Add this to the &lt;ins&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;/ins&gt; of your config file (find it by running &lt;code&gt;echo $profile&lt;/code&gt; in PowerShell):&lt;/p&gt; &#xA;    &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Invoke-Expression (&amp;amp; { (zoxide init powershell | Out-String) })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/blockquote&gt; &#xA;  &lt;/details&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;Xonsh&lt;/summary&gt; &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;Add this to the &lt;ins&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;/ins&gt; of your config file (usually &lt;code&gt;~/.xonshrc&lt;/code&gt;):&lt;/p&gt; &#xA;    &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;execx($(zoxide init xonsh), &#39;exec&#39;, __xonsh__.ctx, filename=&#39;zoxide&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/blockquote&gt; &#xA;  &lt;/details&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;Zsh&lt;/summary&gt; &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;Add this to the &lt;ins&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;/ins&gt; of your config file (usually &lt;code&gt;~/.zshrc&lt;/code&gt;):&lt;/p&gt; &#xA;    &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;eval &#34;$(zoxide init zsh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;p&gt;For completions to work, the above line must be added &lt;em&gt;after&lt;/em&gt; &lt;code&gt;compinit&lt;/code&gt; is called. You may have to rebuild your completions cache by running &lt;code&gt;rm ~/.zcompdump*; compinit&lt;/code&gt;.&lt;/p&gt; &#xA;   &lt;/blockquote&gt; &#xA;  &lt;/details&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;Any POSIX shell&lt;/summary&gt; &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;Add this to the &lt;ins&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;/ins&gt; of your config file:&lt;/p&gt; &#xA;    &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;eval &#34;$(zoxide init posix --hook prompt)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/blockquote&gt; &#xA;  &lt;/details&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install fzf&lt;/strong&gt; &lt;sup&gt;(optional)&lt;/sup&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/junegunn/fzf&#34;&gt;fzf&lt;/a&gt; is a command-line fuzzy finder, used by zoxide for completions / interactive selection. It can be installed from &lt;a href=&#34;https://github.com/junegunn/fzf#installation&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; zoxide only supports fzf v0.33.0 and above.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Import your data&lt;/strong&gt; &lt;sup&gt;(optional)&lt;/sup&gt;&lt;/p&gt; &lt;p&gt;If you currently use any of these plugins, you may want to import your data into zoxide:&lt;/p&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;autojump&lt;/summary&gt; &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;Run this command in your terminal:&lt;/p&gt; &#xA;    &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;zoxide import --from=autojump &#34;/path/to/autojump/db&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;p&gt;The path usually varies according to your system:&lt;/p&gt; &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;OS&lt;/th&gt; &#xA;       &lt;th&gt;Path&lt;/th&gt; &#xA;       &lt;th&gt;Example&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;     &lt;tbody&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Linux&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;$XDG_DATA_HOME/autojump/autojump.txt&lt;/code&gt; or &lt;code&gt;$HOME/.local/share/autojump/autojump.txt&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;/home/alice/.local/share/autojump/autojump.txt&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;macOS&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;$HOME/Library/autojump/autojump.txt&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;/Users/Alice/Library/autojump/autojump.txt&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Windows&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;%APPDATA%\autojump\autojump.txt&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;C:\Users\Alice\AppData\Roaming\autojump\autojump.txt&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt; &#xA;    &lt;/table&gt; &#xA;   &lt;/blockquote&gt; &#xA;  &lt;/details&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;fasd, z, z.lua, zsh-z&lt;/summary&gt; &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;Run this command in your terminal:&lt;/p&gt; &#xA;    &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;zoxide import --from=z &#34;path/to/z/db&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;p&gt;The path usually varies according to your system:&lt;/p&gt; &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;Plugin&lt;/th&gt; &#xA;       &lt;th&gt;Path&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;     &lt;tbody&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;fasd&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;$_FASD_DATA&lt;/code&gt; or &lt;code&gt;$HOME/.fasd&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;z (bash/zsh)&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;$_Z_DATA&lt;/code&gt; or &lt;code&gt;$HOME/.z&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;z (fish)&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;$Z_DATA&lt;/code&gt; or &lt;code&gt;$XDG_DATA_HOME/z/data&lt;/code&gt; or &lt;code&gt;$HOME/.local/share/z/data&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;z.lua (bash/zsh)&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;$_ZL_DATA&lt;/code&gt; or &lt;code&gt;$HOME/.zlua&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;z.lua (fish)&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;$XDG_DATA_HOME/zlua/zlua.txt&lt;/code&gt; or &lt;code&gt;$HOME/.local/share/zlua/zlua.txt&lt;/code&gt; or &lt;code&gt;$_ZL_DATA&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;zsh-z&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;$ZSHZ_DATA&lt;/code&gt; or &lt;code&gt;$_Z_DATA&lt;/code&gt; or &lt;code&gt;$HOME/.z&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt; &#xA;    &lt;/table&gt; &#xA;   &lt;/blockquote&gt; &#xA;  &lt;/details&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;ZLocation&lt;/summary&gt; &#xA;   &lt;blockquote&gt; &#xA;    &lt;p&gt;Run this command in PowerShell:&lt;/p&gt; &#xA;    &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;$db = New-TemporaryFile&#xA;(Get-ZLocation).GetEnumerator() | ForEach-Object { Write-Output ($_.Name+&#39;|&#39;+$_.Value+&#39;|0&#39;) } | Out-File $db&#xA;zoxide import --from=z $db&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/blockquote&gt; &#xA;  &lt;/details&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Flags&lt;/h3&gt; &#xA;&lt;p&gt;When calling &lt;code&gt;zoxide init&lt;/code&gt;, the following flags are available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--cmd&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Changes the prefix of the &lt;code&gt;z&lt;/code&gt; and &lt;code&gt;zi&lt;/code&gt; commands.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;--cmd j&lt;/code&gt; would change the commands to (&lt;code&gt;j&lt;/code&gt;, &lt;code&gt;ji&lt;/code&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;--cmd cd&lt;/code&gt; would replace the &lt;code&gt;cd&lt;/code&gt; command.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--hook &amp;lt;HOOK&amp;gt;&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Changes how often zoxide increments a directory&#39;s score: &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;Hook&lt;/th&gt; &#xA;       &lt;th&gt;Description&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;     &lt;tbody&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;none&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Never&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;prompt&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;At every shell prompt&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;pwd&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Whenever the directory is changed&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt; &#xA;    &lt;/table&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--no-cmd&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Prevents zoxide from defining the &lt;code&gt;z&lt;/code&gt; and &lt;code&gt;zi&lt;/code&gt; commands.&lt;/li&gt; &#xA;   &lt;li&gt;These functions will still be available in your shell as &lt;code&gt;__zoxide_z&lt;/code&gt; and &lt;code&gt;__zoxide_zi&lt;/code&gt;, should you choose to redefine them.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Environment variables&lt;/h3&gt; &#xA;&lt;p&gt;Environment variables[^2] can be used for configuration. They must be set before &lt;code&gt;zoxide init&lt;/code&gt; is called.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;_ZO_DATA_DIR&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Specifies the directory in which the database is stored.&lt;/li&gt; &#xA;   &lt;li&gt;The default value varies across OSes: &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;OS&lt;/th&gt; &#xA;       &lt;th&gt;Path&lt;/th&gt; &#xA;       &lt;th&gt;Example&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;     &lt;tbody&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Linux / BSD&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;$XDG_DATA_HOME&lt;/code&gt; or &lt;code&gt;$HOME/.local/share&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;/home/alice/.local/share&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;macOS&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;$HOME/Library/Application Support&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;/Users/Alice/Library/Application Support&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Windows&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;%LOCALAPPDATA%&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;C:\Users\Alice\AppData\Local&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt; &#xA;    &lt;/table&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;_ZO_ECHO&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;When set to 1, &lt;code&gt;z&lt;/code&gt; will print the matched directory before navigating to it.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;_ZO_EXCLUDE_DIRS&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Excludes the specified directories from the database.&lt;/li&gt; &#xA;   &lt;li&gt;This is provided as a list of &lt;a href=&#34;https://man7.org/linux/man-pages/man7/glob.7.html&#34;&gt;globs&lt;/a&gt;, separated by OS-specific characters: &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;OS&lt;/th&gt; &#xA;       &lt;th&gt;Separator&lt;/th&gt; &#xA;       &lt;th&gt;Example&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;     &lt;tbody&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Linux / macOS / BSD&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;:&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;$HOME:$HOME/private/*&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Windows&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;;&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;&lt;code&gt;$HOME;$HOME/private/*&lt;/code&gt;&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt; &#xA;    &lt;/table&gt; &lt;/li&gt; &#xA;   &lt;li&gt;By default, this is set to &lt;code&gt;&#34;$HOME&#34;&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;_ZO_FZF_OPTS&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Custom options to pass to &lt;a href=&#34;https://github.com/junegunn/fzf&#34;&gt;fzf&lt;/a&gt; during interactive selection. See &lt;a href=&#34;https://manpages.ubuntu.com/manpages/en/man1/fzf.1.html&#34;&gt;&lt;code&gt;man fzf&lt;/code&gt;&lt;/a&gt; for the list of options.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;_ZO_MAXAGE&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Configures the &lt;a href=&#34;https://github.com/ajeetdsouza/zoxide/wiki/Algorithm#aging&#34;&gt;aging algorithm&lt;/a&gt;, which limits the maximum number of entries in the database.&lt;/li&gt; &#xA;   &lt;li&gt;By default, this is set to 10000.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;_ZO_RESOLVE_SYMLINKS&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;When set to 1, &lt;code&gt;z&lt;/code&gt; will resolve symlinks before adding directories to the database.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Third-party integrations&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Application&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Plugin&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rjarry/aerc&#34;&gt;aerc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Email client&lt;/td&gt; &#xA;   &lt;td&gt;Natively supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mridgers/clink&#34;&gt;clink&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Improved cmd.exe for Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/shunsambongi/clink-zoxide&#34;&gt;clink-zoxide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.gnu.org/software/emacs/&#34;&gt;emacs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Text editor&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gitlab.com/Vonfry/zoxide.el&#34;&gt;zoxide.el&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/kyoheiu/felix&#34;&gt;felix&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;File manager&lt;/td&gt; &#xA;   &lt;td&gt;Natively supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/kamiyaa/joshuto&#34;&gt;joshuto&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;File manager&lt;/td&gt; &#xA;   &lt;td&gt;Natively supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/gokcehan/lf&#34;&gt;lf&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;File manager&lt;/td&gt; &#xA;   &lt;td&gt;See the &lt;a href=&#34;https://github.com/gokcehan/lf/wiki/Integrations#zoxide&#34;&gt;wiki&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jarun/nnn&#34;&gt;nnn&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;File manager&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jarun/nnn/raw/master/plugins/autojump&#34;&gt;nnn-autojump&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ranger/ranger&#34;&gt;ranger&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;File manager&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jchook/ranger-zoxide&#34;&gt;ranger-zoxide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;telescope.nvim&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Fuzzy finder for Neovim&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jvgrootveld/telescope-zoxide&#34;&gt;telescope-zoxide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/joshmedeski/t-smart-tmux-session-manager&#34;&gt;t&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tmux&lt;/code&gt; session manager&lt;/td&gt; &#xA;   &lt;td&gt;Natively supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/27medkamal/tmux-session-wizard&#34;&gt;tmux-session-wizard&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tmux&lt;/code&gt; session manager&lt;/td&gt; &#xA;   &lt;td&gt;Natively supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vim/vim&#34;&gt;vim&lt;/a&gt; / &lt;a href=&#34;https://github.com/neovim/neovim&#34;&gt;neovim&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Text editor&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nanotee/zoxide.vim&#34;&gt;zoxide.vim&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/sayanarijit/xplr&#34;&gt;xplr&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;File manager&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/sayanarijit/zoxide.xplr&#34;&gt;zoxide.xplr&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/xxh/xxh&#34;&gt;xxh&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Transports shell configuration over SSH&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/xxh/xxh-plugin-prerun-zoxide&#34;&gt;xxh-plugin-prerun-zoxide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Mellbourn/zabb&#34;&gt;zabb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Finds the shortest possible query for a path&lt;/td&gt; &#xA;   &lt;td&gt;Natively supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/marlonrichert/zsh-autocomplete&#34;&gt;zsh-autocomplete&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Realtime completions for zsh&lt;/td&gt; &#xA;   &lt;td&gt;Natively supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;[^1]: Debian / Ubuntu derivatives update their packages very slowly. If you&#39;re using one of these distributions, consider using the install script instead.&lt;/p&gt; &#xA;&lt;p&gt;[^2]: If you&#39;re not sure how to set an environment variable on your shell, check out the &lt;a href=&#34;https://github.com/ajeetdsouza/zoxide/wiki/HOWTO:-set-environment-variables&#34; title=&#34;HOWTO: set environment variables&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nushell/nushell</title>
    <updated>2024-03-01T02:11:18Z</updated>
    <id>tag:github.com,2024-03-01:/nushell/nushell</id>
    <link href="https://github.com/nushell/nushell" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A new type of shell&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nushell &#xA; &lt;!-- omit in toc --&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://crates.io/crates/nu&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/nu.svg?sanitize=true&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nushell/nushell/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/nushell/nushell/ci.yml?branch=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nushell/nushell/actions/workflows/nightly-build.yml&#34;&gt;&lt;img src=&#34;https://github.com/nushell/nushell/actions/workflows/nightly-build.yml/badge.svg?sanitize=true&#34; alt=&#34;Nightly Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/NtAbbGn&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/601130461678272522.svg?logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://changelog.com/podcast/363&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/The%20Changelog-%23363-61c192.svg?sanitize=true&#34; alt=&#34;The Changelog #363&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/nu_shell&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/twitter-@nu_shell-1DA1F3?style=flat-square&#34; alt=&#34;@nu_shell&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nushell/nushell/graphs/commit-activity&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/nushell/nushell&#34; alt=&#34;GitHub commit activity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nushell/nushell/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/nushell/nushell&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A new type of shell.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nushell/nushell/main/assets/nushell-autocomplete6.gif&#34; alt=&#34;Example of nushell&#34; title=&#34;Example of nushell&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents &#xA; &lt;!-- omit in toc --&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nushell/nushell/main/#status&#34;&gt;Status&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nushell/nushell/main/#learning-about-nu&#34;&gt;Learning About Nu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nushell/nushell/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nushell/nushell/main/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nushell/nushell/main/#philosophy&#34;&gt;Philosophy&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nushell/nushell/main/#pipelines&#34;&gt;Pipelines&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nushell/nushell/main/#opening-files&#34;&gt;Opening files&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nushell/nushell/main/#plugins&#34;&gt;Plugins&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nushell/nushell/main/#goals&#34;&gt;Goals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nushell/nushell/main/#officially-supported-by&#34;&gt;Officially Supported By&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nushell/nushell/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nushell/nushell/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;This project has reached a minimum-viable-product level of quality. Many people use it as their daily driver, but it may be unstable for some commands. Nu&#39;s design is subject to change as it matures.&lt;/p&gt; &#xA;&lt;h2&gt;Learning About Nu&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.nushell.sh/book/&#34;&gt;Nushell book&lt;/a&gt; is the primary source of Nushell documentation. You can find &lt;a href=&#34;https://www.nushell.sh/commands/&#34;&gt;a full list of Nu commands in the book&lt;/a&gt;, and we have many examples of using Nu in our &lt;a href=&#34;https://www.nushell.sh/cookbook/&#34;&gt;cookbook&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re also active on &lt;a href=&#34;https://discord.gg/NtAbbGn&#34;&gt;Discord&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/nu_shell&#34;&gt;Twitter&lt;/a&gt;; come and chat with us!&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To quickly install Nu:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Linux and macOS&#xA;brew install nushell&#xA;# Windows&#xA;winget install nushell&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To use &lt;code&gt;Nu&lt;/code&gt; in GitHub Action, check &lt;a href=&#34;https://github.com/marketplace/actions/setup-nu&#34;&gt;setup-nu&lt;/a&gt; for more detail.&lt;/p&gt; &#xA;&lt;p&gt;Detailed installation instructions can be found in the &lt;a href=&#34;https://www.nushell.sh/book/installation.html&#34;&gt;installation chapter of the book&lt;/a&gt;. Nu is available via many package managers:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/nushell/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/nushell.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For details about which platforms the Nushell team actively supports, see &lt;a href=&#34;https://raw.githubusercontent.com/nushell/nushell/main/devdocs/PLATFORM_SUPPORT.md&#34;&gt;our platform support policy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;The default configurations can be found at &lt;a href=&#34;https://raw.githubusercontent.com/nushell/nushell/main/crates/nu-utils/src/sample_config&#34;&gt;sample_config&lt;/a&gt; which are the configuration files one gets when they startup Nushell for the first time.&lt;/p&gt; &#xA;&lt;p&gt;It sets all of the default configuration to run Nushell. From here one can then customize this file for their specific needs.&lt;/p&gt; &#xA;&lt;p&gt;To see where &lt;em&gt;config.nu&lt;/em&gt; is located on your system simply type this command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;$nu.config-path&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please see our &lt;a href=&#34;https://www.nushell.sh&#34;&gt;book&lt;/a&gt; for all of the Nushell documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Philosophy&lt;/h2&gt; &#xA;&lt;p&gt;Nu draws inspiration from projects like PowerShell, functional programming languages, and modern CLI tools. Rather than thinking of files and data as raw streams of text, Nu looks at each input as something with structure. For example, when you list the contents of a directory what you get back is a table of rows, where each row represents an item in that directory. These values can be piped through a series of steps, in a series of commands called a &#39;pipeline&#39;.&lt;/p&gt; &#xA;&lt;h3&gt;Pipelines&lt;/h3&gt; &#xA;&lt;p&gt;In Unix, it&#39;s common to pipe between commands to split up a sophisticated command over multiple steps. Nu takes this a step further and builds heavily on the idea of &lt;em&gt;pipelines&lt;/em&gt;. As in the Unix philosophy, Nu allows commands to output to stdout and read from stdin. Additionally, commands can output structured data (you can think of this as a third kind of stream). Commands that work in the pipeline fit into one of three categories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Commands that produce a stream (e.g., &lt;code&gt;ls&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commands that filter a stream (e.g., &lt;code&gt;where type == &#34;dir&#34;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commands that consume the output of the pipeline (e.g., &lt;code&gt;table&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Commands are separated by the pipe symbol (&lt;code&gt;|&lt;/code&gt;) to denote a pipeline flowing left to right.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;&amp;gt; ls | where type == &#34;dir&#34; | table&#xA;╭────┬──────────┬──────┬─────────┬───────────────╮&#xA;│ #  │   name   │ type │  size   │   modified    │&#xA;├────┼──────────┼──────┼─────────┼───────────────┤&#xA;│  0 │ .cargo   │ dir  │     0 B │ 9 minutes ago │&#xA;│  1 │ assets   │ dir  │     0 B │ 2 weeks ago   │&#xA;│  2 │ crates   │ dir  │ 4.0 KiB │ 2 weeks ago   │&#xA;│  3 │ docker   │ dir  │     0 B │ 2 weeks ago   │&#xA;│  4 │ docs     │ dir  │     0 B │ 2 weeks ago   │&#xA;│  5 │ images   │ dir  │     0 B │ 2 weeks ago   │&#xA;│  6 │ pkg_mgrs │ dir  │     0 B │ 2 weeks ago   │&#xA;│  7 │ samples  │ dir  │     0 B │ 2 weeks ago   │&#xA;│  8 │ src      │ dir  │ 4.0 KiB │ 2 weeks ago   │&#xA;│  9 │ target   │ dir  │     0 B │ a day ago     │&#xA;│ 10 │ tests    │ dir  │ 4.0 KiB │ 2 weeks ago   │&#xA;│ 11 │ wix      │ dir  │     0 B │ 2 weeks ago   │&#xA;╰────┴──────────┴──────┴─────────┴───────────────╯&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Because most of the time you&#39;ll want to see the output of a pipeline, &lt;code&gt;table&lt;/code&gt; is assumed. We could have also written the above:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;&amp;gt; ls | where type == &#34;dir&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Being able to use the same commands and compose them differently is an important philosophy in Nu. For example, we could use the built-in &lt;code&gt;ps&lt;/code&gt; command to get a list of the running processes, using the same &lt;code&gt;where&lt;/code&gt; as above.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;&amp;gt; ps | where cpu &amp;gt; 0&#xA;╭───┬───────┬───────────┬───────┬───────────┬───────────╮&#xA;│ # │  pid  │   name    │  cpu  │    mem    │  virtual  │&#xA;├───┼───────┼───────────┼───────┼───────────┼───────────┤&#xA;│ 0 │  2240 │ Slack.exe │ 16.40 │ 178.3 MiB │ 232.6 MiB │&#xA;│ 1 │ 16948 │ Slack.exe │ 16.32 │ 205.0 MiB │ 197.9 MiB │&#xA;│ 2 │ 17700 │ nu.exe    │  3.77 │  26.1 MiB │   8.8 MiB │&#xA;╰───┴───────┴───────────┴───────┴───────────┴───────────╯&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Opening files&lt;/h3&gt; &#xA;&lt;p&gt;Nu can load file and URL contents as raw text or structured data (if it recognizes the format). For example, you can load a .toml file as structured data and explore it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;&amp;gt; open Cargo.toml&#xA;╭──────────────────┬────────────────────╮&#xA;│ bin              │ [table 1 row]      │&#xA;│ dependencies     │ {record 25 fields} │&#xA;│ dev-dependencies │ {record 8 fields}  │&#xA;│ features         │ {record 10 fields} │&#xA;│ package          │ {record 13 fields} │&#xA;│ patch            │ {record 1 field}   │&#xA;│ profile          │ {record 3 fields}  │&#xA;│ target           │ {record 3 fields}  │&#xA;│ workspace        │ {record 1 field}   │&#xA;╰──────────────────┴────────────────────╯&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can pipe this into a command that gets the contents of one of the columns:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;&amp;gt; open Cargo.toml | get package&#xA;╭───────────────┬────────────────────────────────────╮&#xA;│ authors       │ [list 1 item]                      │&#xA;│ default-run   │ nu                                 │&#xA;│ description   │ A new type of shell                │&#xA;│ documentation │ https://www.nushell.sh/book/       │&#xA;│ edition       │ 2018                               │&#xA;│ exclude       │ [list 1 item]                      │&#xA;│ homepage      │ https://www.nushell.sh             │&#xA;│ license       │ MIT                                │&#xA;│ metadata      │ {record 1 field}                   │&#xA;│ name          │ nu                                 │&#xA;│ repository    │ https://github.com/nushell/nushell │&#xA;│ rust-version  │ 1.60                               │&#xA;│ version       │ 0.72.0                             │&#xA;╰───────────────┴────────────────────────────────────╯&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And if needed we can drill down further:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;&amp;gt; open Cargo.toml | get package.version&#xA;0.72.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Plugins&lt;/h3&gt; &#xA;&lt;p&gt;Nu supports plugins that offer additional functionality to the shell and follow the same structured data model that built-in commands use. There are a few examples in the &lt;code&gt;crates/nu_plugins_*&lt;/code&gt; directories.&lt;/p&gt; &#xA;&lt;p&gt;Plugins are binaries that are available in your path and follow a &lt;code&gt;nu_plugin_*&lt;/code&gt; naming convention. These binaries interact with nu via a simple JSON-RPC protocol where the command identifies itself and passes along its configuration, making it available for use. If the plugin is a filter, data streams to it one element at a time, and it can stream data back in return via stdin/stdout. If the plugin is a sink, it is given the full vector of final data and is given free reign over stdin/stdout to use as it pleases.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/nushell/awesome-nu#plugins&#34;&gt;awesome-nu repo&lt;/a&gt; lists a variety of nu-plugins while the &lt;a href=&#34;https://github.com/nushell/showcase&#34;&gt;showcase repo&lt;/a&gt; &lt;em&gt;shows&lt;/em&gt; off informative blog posts that have been written about Nushell along with videos that highlight technical topics that have been presented.&lt;/p&gt; &#xA;&lt;h2&gt;Goals&lt;/h2&gt; &#xA;&lt;p&gt;Nu adheres closely to a set of goals that make up its design philosophy. As features are added, they are checked against these goals.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;First and foremost, Nu is cross-platform. Commands and techniques should work across platforms and Nu has &lt;a href=&#34;https://raw.githubusercontent.com/nushell/nushell/main/devdocs/PLATFORM_SUPPORT.md&#34;&gt;first-class support for Windows, macOS, and Linux&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Nu ensures compatibility with existing platform-specific executables.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Nu&#39;s workflow and tools should have the usability expected of modern software in 2022 (and beyond).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Nu views data as either structured or unstructured. It is a structured shell like PowerShell.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Finally, Nu views data functionally. Rather than using mutation, pipelines act as a means to load, change, and save data without mutable state.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Officially Supported By&lt;/h2&gt; &#xA;&lt;p&gt;Please submit an issue or PR to be added to this list.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ajeetdsouza/zoxide&#34;&gt;zoxide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/starship/starship&#34;&gt;starship&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ohmyposh.dev&#34;&gt;oh-my-posh&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://couchbase.sh&#34;&gt;Couchbase Shell&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pypa/virtualenv&#34;&gt;virtualenv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ellie/atuin&#34;&gt;atuin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/clap-rs/clap/tree/master/clap_complete_nushell&#34;&gt;clap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/bevry/dorothy&#34;&gt;Dorothy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/direnv/direnv/raw/master/docs/hook.md#nushell&#34;&gt;Direnv&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/nushell/nushell/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; for details. Thanks to all the people who already contributed!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/nushell/nushell/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contributors-img.web.app/image?repo=nushell/nushell&amp;amp;max=600&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The project is made available under the MIT license. See the &lt;code&gt;LICENSE&lt;/code&gt; file for more information.&lt;/p&gt;</summary>
  </entry>
</feed>