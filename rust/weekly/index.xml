<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-03T01:59:55Z</updated>
  <subtitle>Weekly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dtolnay/cxx</title>
    <updated>2023-09-03T01:59:55Z</updated>
    <id>tag:github.com,2023-09-03:/dtolnay/cxx</id>
    <link href="https://github.com/dtolnay/cxx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Safe interop between Rust and C++&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CXX — safe FFI between Rust and C++&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dtolnay/cxx&#34;&gt;&lt;img alt=&#34;github&#34; src=&#34;https://img.shields.io/badge/github-dtolnay/cxx-8da0cb?style=for-the-badge&amp;amp;labelColor=555555&amp;amp;logo=github&#34; height=&#34;20&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/cxx&#34;&gt;&lt;img alt=&#34;crates.io&#34; src=&#34;https://img.shields.io/crates/v/cxx.svg?style=for-the-badge&amp;amp;color=fc8d62&amp;amp;logo=rust&#34; height=&#34;20&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.rs/cxx&#34;&gt;&lt;img alt=&#34;docs.rs&#34; src=&#34;https://img.shields.io/badge/docs.rs-cxx-66c2a5?style=for-the-badge&amp;amp;labelColor=555555&amp;amp;logo=docs.rs&#34; height=&#34;20&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dtolnay/cxx/actions?query=branch%3Amaster&#34;&gt;&lt;img alt=&#34;build status&#34; src=&#34;https://img.shields.io/github/actions/workflow/status/dtolnay/cxx/ci.yml?branch=master&amp;amp;style=for-the-badge&#34; height=&#34;20&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This library provides a &lt;strong&gt;safe&lt;/strong&gt; mechanism for calling C++ code from Rust and Rust code from C++, not subject to the many ways that things can go wrong when using bindgen or cbindgen to generate unsafe C-style bindings.&lt;/p&gt; &#xA;&lt;p&gt;This doesn&#39;t change the fact that 100% of C++ code is unsafe. When auditing a project, you would be on the hook for auditing all the unsafe Rust code and &lt;em&gt;all&lt;/em&gt; the C++ code. The core safety claim under this new model is that auditing just the C++ side would be sufficient to catch all problems, i.e. the Rust side can be 100% safe.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[dependencies]&#xA;cxx = &#34;1.0&#34;&#xA;&#xA;[build-dependencies]&#xA;cxx-build = &#34;1.0&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Compiler support: requires rustc 1.60+ and c++11 or newer&lt;/em&gt;&lt;br&gt; &lt;em&gt;&lt;a href=&#34;https://github.com/dtolnay/cxx/releases&#34;&gt;Release notes&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Guide&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;strong&gt;&lt;a href=&#34;https://cxx.rs&#34;&gt;https://cxx.rs&lt;/a&gt;&lt;/strong&gt; for a tutorial, reference material, and example code.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;The idea is that we define the signatures of both sides of our FFI boundary embedded together in one Rust module (the next section shows an example). From this, CXX receives a complete picture of the boundary to perform static analyses against the types and function signatures to uphold both Rust&#39;s and C++&#39;s invariants and requirements.&lt;/p&gt; &#xA;&lt;p&gt;If everything checks out statically, then CXX uses a pair of code generators to emit the relevant &lt;code&gt;extern &#34;C&#34;&lt;/code&gt; signatures on both sides together with any necessary static assertions for later in the build process to verify correctness. On the Rust side this code generator is simply an attribute procedural macro. On the C++ side it can be a small Cargo build script if your build is managed by Cargo, or for other build systems like Bazel or Buck we provide a command line tool which generates the header and source file and should be easy to integrate.&lt;/p&gt; &#xA;&lt;p&gt;The resulting FFI bridge operates at zero or negligible overhead, i.e. no copying, no serialization, no memory allocation, no runtime checks needed.&lt;/p&gt; &#xA;&lt;p&gt;The FFI signatures are able to use native types from whichever side they please, such as Rust&#39;s &lt;code&gt;String&lt;/code&gt; or C++&#39;s &lt;code&gt;std::string&lt;/code&gt;, Rust&#39;s &lt;code&gt;Box&lt;/code&gt; or C++&#39;s &lt;code&gt;std::unique_ptr&lt;/code&gt;, Rust&#39;s &lt;code&gt;Vec&lt;/code&gt; or C++&#39;s &lt;code&gt;std::vector&lt;/code&gt;, etc in any combination. CXX guarantees an ABI-compatible signature that both sides understand, based on builtin bindings for key standard library types to expose an idiomatic API on those types to the other language. For example when manipulating a C++ string from Rust, its &lt;code&gt;len()&lt;/code&gt; method becomes a call of the &lt;code&gt;size()&lt;/code&gt; member function defined by C++; when manipulating a Rust string from C++, its &lt;code&gt;size()&lt;/code&gt; member function calls Rust&#39;s &lt;code&gt;len()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;In this example we are writing a Rust application that wishes to take advantage of an existing C++ client for a large-file blobstore service. The blobstore supports a &lt;code&gt;put&lt;/code&gt; operation for a discontiguous buffer upload. For example we might be uploading snapshots of a circular buffer which would tend to consist of 2 chunks, or fragments of a file spread across memory for some other reason.&lt;/p&gt; &#xA;&lt;p&gt;A runnable version of this example is provided under the &lt;em&gt;demo&lt;/em&gt; directory of this repo. To try it out, run &lt;code&gt;cargo run&lt;/code&gt; from that directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;#[cxx::bridge]&#xA;mod ffi {&#xA;    // Any shared structs, whose fields will be visible to both languages.&#xA;    struct BlobMetadata {&#xA;        size: usize,&#xA;        tags: Vec&amp;lt;String&amp;gt;,&#xA;    }&#xA;&#xA;    extern &#34;Rust&#34; {&#xA;        // Zero or more opaque types which both languages can pass around but&#xA;        // only Rust can see the fields.&#xA;        type MultiBuf;&#xA;&#xA;        // Functions implemented in Rust.&#xA;        fn next_chunk(buf: &amp;amp;mut MultiBuf) -&amp;gt; &amp;amp;[u8];&#xA;    }&#xA;&#xA;    unsafe extern &#34;C++&#34; {&#xA;        // One or more headers with the matching C++ declarations. Our code&#xA;        // generators don&#39;t read it but it gets #include&#39;d and used in static&#xA;        // assertions to ensure our picture of the FFI boundary is accurate.&#xA;        include!(&#34;demo/include/blobstore.h&#34;);&#xA;&#xA;        // Zero or more opaque types which both languages can pass around but&#xA;        // only C++ can see the fields.&#xA;        type BlobstoreClient;&#xA;&#xA;        // Functions implemented in C++.&#xA;        fn new_blobstore_client() -&amp;gt; UniquePtr&amp;lt;BlobstoreClient&amp;gt;;&#xA;        fn put(&amp;amp;self, parts: &amp;amp;mut MultiBuf) -&amp;gt; u64;&#xA;        fn tag(&amp;amp;self, blobid: u64, tag: &amp;amp;str);&#xA;        fn metadata(&amp;amp;self, blobid: u64) -&amp;gt; BlobMetadata;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now we simply provide Rust definitions of all the things in the &lt;code&gt;extern &#34;Rust&#34;&lt;/code&gt; block and C++ definitions of all the things in the &lt;code&gt;extern &#34;C++&#34;&lt;/code&gt; block, and get to call back and forth safely.&lt;/p&gt; &#xA;&lt;p&gt;Here are links to the complete set of source files involved in the demo:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dtolnay/cxx/master/demo/src/main.rs&#34;&gt;demo/src/main.rs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dtolnay/cxx/master/demo/build.rs&#34;&gt;demo/build.rs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dtolnay/cxx/master/demo/include/blobstore.h&#34;&gt;demo/include/blobstore.h&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dtolnay/cxx/master/demo/src/blobstore.cc&#34;&gt;demo/src/blobstore.cc&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To look at the code generated in both languages for the example by the CXX code generators:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;   # run Rust code generator and print to stdout&#xA;   # (requires https://github.com/dtolnay/cargo-expand)&#xA;$ cargo expand --manifest-path demo/Cargo.toml&#xA;&#xA;   # run C++ code generator and print to stdout&#xA;$ cargo run --manifest-path gen/cmd/Cargo.toml -- demo/src/main.rs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Details&lt;/h2&gt; &#xA;&lt;p&gt;As seen in the example, the language of the FFI boundary involves 3 kinds of items:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Shared structs&lt;/strong&gt; — their fields are made visible to both languages. The definition written within cxx::bridge is the single source of truth.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Opaque types&lt;/strong&gt; — their fields are secret from the other language. These cannot be passed across the FFI by value but only behind an indirection, such as a reference &lt;code&gt;&amp;amp;&lt;/code&gt;, a Rust &lt;code&gt;Box&lt;/code&gt;, or a &lt;code&gt;UniquePtr&lt;/code&gt;. Can be a type alias for an arbitrarily complicated generic language-specific type depending on your use case.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Functions&lt;/strong&gt; — implemented in either language, callable from the other language.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Within the &lt;code&gt;extern &#34;Rust&#34;&lt;/code&gt; part of the CXX bridge we list the types and functions for which Rust is the source of truth. These all implicitly refer to the &lt;code&gt;super&lt;/code&gt; module, the parent module of the CXX bridge. You can think of the two items listed in the example above as being like &lt;code&gt;use super::MultiBuf&lt;/code&gt; and &lt;code&gt;use super::next_chunk&lt;/code&gt; except re-exported to C++. The parent module will either contain the definitions directly for simple things, or contain the relevant &lt;code&gt;use&lt;/code&gt; statements to bring them into scope from elsewhere.&lt;/p&gt; &#xA;&lt;p&gt;Within the &lt;code&gt;extern &#34;C++&#34;&lt;/code&gt; part, we list types and functions for which C++ is the source of truth, as well as the header(s) that declare those APIs. In the future it&#39;s possible that this section could be generated bindgen-style from the headers but for now we need the signatures written out; static assertions will verify that they are accurate.&lt;/p&gt; &#xA;&lt;p&gt;Your function implementations themselves, whether in C++ or Rust, &lt;em&gt;do not&lt;/em&gt; need to be defined as &lt;code&gt;extern &#34;C&#34;&lt;/code&gt; ABI or no_mangle. CXX will put in the right shims where necessary to make it all work.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Comparison vs bindgen and cbindgen&lt;/h2&gt; &#xA;&lt;p&gt;Notice that with CXX there is repetition of all the function signatures: they are typed out once where the implementation is defined (in C++ or Rust) and again inside the cxx::bridge module, though compile-time assertions guarantee these are kept in sync. This is different from &lt;a href=&#34;https://github.com/rust-lang/rust-bindgen&#34;&gt;bindgen&lt;/a&gt; and &lt;a href=&#34;https://github.com/eqrion/cbindgen/&#34;&gt;cbindgen&lt;/a&gt; where function signatures are typed by a human once and the tool consumes them in one language and emits them in the other language.&lt;/p&gt; &#xA;&lt;p&gt;This is because CXX fills a somewhat different role. It is a lower level tool than bindgen or cbindgen in a sense; you can think of it as being a replacement for the concept of &lt;code&gt;extern &#34;C&#34;&lt;/code&gt; signatures as we know them, rather than a replacement for a bindgen. It would be reasonable to build a higher level bindgen-like tool on top of CXX which consumes a C++ header and/or Rust module (and/or IDL like Thrift) as source of truth and generates the cxx::bridge, eliminating the repetition while leveraging the static analysis safety guarantees of CXX.&lt;/p&gt; &#xA;&lt;p&gt;But note in other ways CXX is higher level than the bindgens, with rich support for common standard library types. Frequently with bindgen when we are dealing with an idiomatic C++ API we would end up manually wrapping that API in C-style raw pointer functions, applying bindgen to get unsafe raw pointer Rust functions, and replicating the API again to expose those idiomatically in Rust. That&#39;s a much worse form of repetition because it is unsafe all the way through.&lt;/p&gt; &#xA;&lt;p&gt;By using a CXX bridge as the shared understanding between the languages, rather than &lt;code&gt;extern &#34;C&#34;&lt;/code&gt; C-style signatures as the shared understanding, common FFI use cases become expressible using 100% safe code.&lt;/p&gt; &#xA;&lt;p&gt;It would also be reasonable to mix and match, using CXX bridge for the 95% of your FFI that is straightforward and doing the remaining few oddball signatures the old fashioned way with bindgen and cbindgen, if for some reason CXX&#39;s static restrictions get in the way. Please file an issue if you end up taking this approach so that we know what ways it would be worthwhile to make the tool more expressive.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Cargo-based setup&lt;/h2&gt; &#xA;&lt;p&gt;For builds that are orchestrated by Cargo, you will use a build script that runs CXX&#39;s C++ code generator and compiles the resulting C++ code along with any other C++ code for your crate.&lt;/p&gt; &#xA;&lt;p&gt;The canonical build script is as follows. The indicated line returns a &lt;a href=&#34;https://docs.rs/cc/1.0/cc/struct.Build.html&#34;&gt;&lt;code&gt;cc::Build&lt;/code&gt;&lt;/a&gt; instance (from the usual widely used &lt;code&gt;cc&lt;/code&gt; crate) on which you can set up any additional source files and compiler flags as normal.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;# Cargo.toml&#xA;&#xA;[build-dependencies]&#xA;cxx-build = &#34;1.0&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;// build.rs&#xA;&#xA;fn main() {&#xA;    cxx_build::bridge(&#34;src/main.rs&#34;)  // returns a cc::Build&#xA;        .file(&#34;src/demo.cc&#34;)&#xA;        .flag_if_supported(&#34;-std=c++11&#34;)&#xA;        .compile(&#34;cxxbridge-demo&#34;);&#xA;&#xA;    println!(&#34;cargo:rerun-if-changed=src/main.rs&#34;);&#xA;    println!(&#34;cargo:rerun-if-changed=src/demo.cc&#34;);&#xA;    println!(&#34;cargo:rerun-if-changed=include/demo.h&#34;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Non-Cargo setup&lt;/h2&gt; &#xA;&lt;p&gt;For use in non-Cargo builds like Bazel or Buck, CXX provides an alternate way of invoking the C++ code generator as a standalone command line tool. The tool is packaged as the &lt;code&gt;cxxbridge-cmd&lt;/code&gt; crate on crates.io or can be built from the &lt;em&gt;gen/cmd&lt;/em&gt; directory of this repo.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cargo install cxxbridge-cmd&#xA;&#xA;$ cxxbridge src/main.rs --header &amp;gt; path/to/mybridge.h&#xA;$ cxxbridge src/main.rs &amp;gt; path/to/mybridge.cc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Safety&lt;/h2&gt; &#xA;&lt;p&gt;Be aware that the design of this library is intentionally restrictive and opinionated! It isn&#39;t a goal to be powerful enough to handle arbitrary signatures in either language. Instead this project is about carving out a reasonably expressive set of functionality about which we can make useful safety guarantees today and maybe extend over time. You may find that it takes some practice to use CXX bridge effectively as it won&#39;t work in all the ways that you are used to.&lt;/p&gt; &#xA;&lt;p&gt;Some of the considerations that go into ensuring safety are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;By design, our paired code generators work together to control both sides of the FFI boundary. Ordinarily in Rust writing your own &lt;code&gt;extern &#34;C&#34;&lt;/code&gt; blocks is unsafe because the Rust compiler has no way to know whether the signatures you&#39;ve written actually match the signatures implemented in the other language. With CXX we achieve that visibility and know what&#39;s on the other side.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Our static analysis detects and prevents passing types by value that shouldn&#39;t be passed by value from C++ to Rust, for example because they may contain internal pointers that would be screwed up by Rust&#39;s move behavior.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To many people&#39;s surprise, it is possible to have a struct in Rust and a struct in C++ with exactly the same layout / fields / alignment / everything, and still not the same ABI when passed by value. This is a longstanding bindgen bug that leads to segfaults in absolutely correct-looking code (&lt;a href=&#34;https://github.com/rust-lang/rust-bindgen/issues/778&#34;&gt;rust-lang/rust-bindgen#778&lt;/a&gt;). CXX knows about this and can insert the necessary zero-cost workaround transparently where needed, so go ahead and pass your structs by value without worries. This is made possible by owning both sides of the boundary rather than just one.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Template instantiations: for example in order to expose a UniquePtr&amp;lt;T&amp;gt; type in Rust backed by a real C++ unique_ptr, we have a way of using a Rust trait to connect the behavior back to the template instantiations performed by the other language.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Builtin types&lt;/h2&gt; &#xA;&lt;p&gt;In addition to all the primitive types (i32 &amp;lt;=&amp;gt; int32_t), the following common types may be used in the fields of shared structs and the arguments and returns of functions.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;th&gt;name in Rust&lt;/th&gt;&#xA;   &lt;th&gt;name in C++&lt;/th&gt;&#xA;   &lt;th&gt;restrictions&lt;/th&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;String&lt;/td&gt;&#xA;   &lt;td&gt;rust::String&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&amp;amp;str&lt;/td&gt;&#xA;   &lt;td&gt;rust::Str&lt;/td&gt;&#xA;   &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&amp;amp;[T]&lt;/td&gt;&#xA;   &lt;td&gt;rust::Slice&amp;lt;const T&amp;gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;sup&gt;&lt;i&gt;cannot hold opaque C++ type&lt;/i&gt;&lt;/sup&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&amp;amp;mut [T]&lt;/td&gt;&#xA;   &lt;td&gt;rust::Slice&amp;lt;T&amp;gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;sup&gt;&lt;i&gt;cannot hold opaque C++ type&lt;/i&gt;&lt;/sup&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.rs/cxx/1.0/cxx/struct.CxxString.html&#34;&gt;CxxString&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;std::string&lt;/td&gt;&#xA;   &lt;td&gt;&lt;sup&gt;&lt;i&gt;cannot be passed by value&lt;/i&gt;&lt;/sup&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Box&amp;lt;T&amp;gt;&lt;/td&gt;&#xA;   &lt;td&gt;rust::Box&amp;lt;T&amp;gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;sup&gt;&lt;i&gt;cannot hold opaque C++ type&lt;/i&gt;&lt;/sup&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.rs/cxx/1.0/cxx/struct.UniquePtr.html&#34;&gt;UniquePtr&amp;lt;T&amp;gt;&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;std::unique_ptr&amp;lt;T&amp;gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;sup&gt;&lt;i&gt;cannot hold opaque Rust type&lt;/i&gt;&lt;/sup&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.rs/cxx/1.0/cxx/struct.SharedPtr.html&#34;&gt;SharedPtr&amp;lt;T&amp;gt;&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;std::shared_ptr&amp;lt;T&amp;gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;sup&gt;&lt;i&gt;cannot hold opaque Rust type&lt;/i&gt;&lt;/sup&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;[T; N]&lt;/td&gt;&#xA;   &lt;td&gt;std::array&amp;lt;T, N&amp;gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;sup&gt;&lt;i&gt;cannot hold opaque C++ type&lt;/i&gt;&lt;/sup&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Vec&amp;lt;T&amp;gt;&lt;/td&gt;&#xA;   &lt;td&gt;rust::Vec&amp;lt;T&amp;gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;sup&gt;&lt;i&gt;cannot hold opaque C++ type&lt;/i&gt;&lt;/sup&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.rs/cxx/1.0/cxx/struct.CxxVector.html&#34;&gt;CxxVector&amp;lt;T&amp;gt;&lt;/a&gt;&lt;/td&gt;&#xA;   &lt;td&gt;std::vector&amp;lt;T&amp;gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;sup&gt;&lt;i&gt;cannot be passed by value, cannot hold opaque Rust type&lt;/i&gt;&lt;/sup&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;*mut T, *const T&lt;/td&gt;&#xA;   &lt;td&gt;T*, const T*&lt;/td&gt;&#xA;   &lt;td&gt;&lt;sup&gt;&lt;i&gt;fn with a raw pointer argument must be declared unsafe to call&lt;/i&gt;&lt;/sup&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;fn(T, U) -&amp;gt; V&lt;/td&gt;&#xA;   &lt;td&gt;rust::Fn&amp;lt;V(T, U)&amp;gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;sup&gt;&lt;i&gt;only passing from Rust to C++ is implemented so far&lt;/i&gt;&lt;/sup&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Result&amp;lt;T&amp;gt;&lt;/td&gt;&#xA;   &lt;td&gt;throw/catch&lt;/td&gt;&#xA;   &lt;td&gt;&lt;sup&gt;&lt;i&gt;allowed as return type only&lt;/i&gt;&lt;/sup&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;The C++ API of the &lt;code&gt;rust&lt;/code&gt; namespace is defined by the &lt;em&gt;include/cxx.h&lt;/em&gt; file in this repo. You will need to include this header in your C++ code when working with those types.&lt;/p&gt; &#xA;&lt;p&gt;The following types are intended to be supported &#34;soon&#34; but are just not implemented yet. I don&#39;t expect any of these to be hard to make work but it&#39;s a matter of designing a nice API for each in its non-native language.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;th&gt;name in Rust&lt;/th&gt;&#xA;   &lt;th&gt;name in C++&lt;/th&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;BTreeMap&amp;lt;K, V&amp;gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;sup&gt;&lt;i&gt;tbd&lt;/i&gt;&lt;/sup&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;HashMap&amp;lt;K, V&amp;gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;sup&gt;&lt;i&gt;tbd&lt;/i&gt;&lt;/sup&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Arc&amp;lt;T&amp;gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;sup&gt;&lt;i&gt;tbd&lt;/i&gt;&lt;/sup&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Option&amp;lt;T&amp;gt;&lt;/td&gt;&#xA;   &lt;td&gt;&lt;sup&gt;&lt;i&gt;tbd&lt;/i&gt;&lt;/sup&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;sup&gt;&lt;i&gt;tbd&lt;/i&gt;&lt;/sup&gt;&lt;/td&gt;&#xA;   &lt;td&gt;std::map&amp;lt;K, V&amp;gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;&lt;sup&gt;&lt;i&gt;tbd&lt;/i&gt;&lt;/sup&gt;&lt;/td&gt;&#xA;   &lt;td&gt;std::unordered_map&amp;lt;K, V&amp;gt;&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Remaining work&lt;/h2&gt; &#xA;&lt;p&gt;This is still early days for CXX; I am releasing it as a minimum viable product to collect feedback on the direction and invite collaborators. Please check the open issues.&lt;/p&gt; &#xA;&lt;p&gt;Especially please report issues if you run into trouble building or linking any of this stuff. I&#39;m sure there are ways to make the build aspects friendlier or more robust.&lt;/p&gt; &#xA;&lt;p&gt;Finally, I know more about Rust library design than C++ library design so I would appreciate help making the C++ APIs in this project more idiomatic where anyone has suggestions.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;License&lt;/h4&gt; &#xA;&lt;sup&gt; Licensed under either of &lt;a href=&#34;https://raw.githubusercontent.com/dtolnay/cxx/master/LICENSE-APACHE&#34;&gt;Apache License, Version 2.0&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/dtolnay/cxx/master/LICENSE-MIT&#34;&gt;MIT license&lt;/a&gt; at your option. &lt;/sup&gt; &#xA;&lt;br&gt; &#xA;&lt;sub&gt; Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in this project by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions. &lt;/sub&gt;</summary>
  </entry>
  <entry>
    <title>alacritty/alacritty</title>
    <updated>2023-09-03T01:59:55Z</updated>
    <id>tag:github.com,2023-09-03:/alacritty/alacritty</id>
    <link href="https://github.com/alacritty/alacritty" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A cross-platform, OpenGL terminal emulator.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;200&#34; alt=&#34;Alacritty Logo&#34; src=&#34;https://raw.githubusercontent.com/alacritty/alacritty/master/extra/logo/compat/alacritty-term%2Bscanlines.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Alacritty - A fast, cross-platform, OpenGL terminal emulator&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Alacritty - A fast, cross-platform, OpenGL terminal emulator&#34; src=&#34;https://raw.githubusercontent.com/alacritty/alacritty/master/extra/promo/alacritty-readme.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;Alacritty is a modern terminal emulator that comes with sensible defaults, but allows for extensive &lt;a href=&#34;https://raw.githubusercontent.com/alacritty/alacritty/master/#configuration&#34;&gt;configuration&lt;/a&gt;. By integrating with other applications, rather than reimplementing their functionality, it manages to provide a flexible set of &lt;a href=&#34;https://raw.githubusercontent.com/alacritty/alacritty/master/docs/features.md&#34;&gt;features&lt;/a&gt; with high performance. The supported platforms currently consist of BSD, Linux, macOS and Windows.&lt;/p&gt; &#xA;&lt;p&gt;The software is considered to be at a &lt;strong&gt;beta&lt;/strong&gt; level of readiness; there are a few missing features and bugs to be fixed, but it is already used by many as a daily driver.&lt;/p&gt; &#xA;&lt;p&gt;Precompiled binaries are available from the &lt;a href=&#34;https://github.com/alacritty/alacritty/releases&#34;&gt;GitHub releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Join &lt;a href=&#34;https://web.libera.chat/gamja/?channels=#alacritty&#34;&gt;&lt;code&gt;#alacritty&lt;/code&gt;&lt;/a&gt; on libera.chat if you have questions or looking for a quick help.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;You can find an overview over the features available in Alacritty &lt;a href=&#34;https://raw.githubusercontent.com/alacritty/alacritty/master/docs/features.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Further information&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jwilm.io/blog/announcing-alacritty/&#34;&gt;Announcing Alacritty, a GPU-Accelerated Terminal Emulator&lt;/a&gt; January 6, 2017&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=qHOdYO3WUTk&#34;&gt;A talk about Alacritty at the Rust Meetup January 2017&lt;/a&gt; January 19, 2017&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jwilm.io/blog/alacritty-lands-scrollback/&#34;&gt;Alacritty Lands Scrollback, Publishes Benchmarks&lt;/a&gt; September 17, 2018&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Alacritty can be installed by using various package managers on Linux, BSD, macOS and Windows.&lt;/p&gt; &#xA;&lt;p&gt;Prebuilt binaries for macOS and Windows can also be downloaded from the &lt;a href=&#34;https://github.com/alacritty/alacritty/releases&#34;&gt;GitHub releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For everyone else, the detailed instructions to install Alacritty can be found &lt;a href=&#34;https://raw.githubusercontent.com/alacritty/alacritty/master/INSTALL.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;At least OpenGL ES 2.0&lt;/li&gt; &#xA; &lt;li&gt;[Windows] ConPTY support (Windows 10 version 1809 or higher)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Alacritty versions before 0.13.0 are using YAML configuration files and all their settings were documented in the &lt;code&gt;alacritty.yml&lt;/code&gt;. The example &lt;code&gt;alacritty.yml&lt;/code&gt; file for each release can be found on &lt;a href=&#34;https://github.com/alacritty/alacritty/releases&#34;&gt;GitHub releases page&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can find the documentation for Alacritty&#39;s configuration in &lt;code&gt;man 5 alacritty&lt;/code&gt;, or by looking at &lt;a href=&#34;https://raw.githubusercontent.com/alacritty/alacritty/master/extra/man/alacritty.5.scd&#34;&gt;the scdoc file&lt;/a&gt; if you do not have the manpages installed.&lt;/p&gt; &#xA;&lt;p&gt;Alacritty doesn&#39;t create the config file for you, but it looks for one in the following locations:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;$XDG_CONFIG_HOME/alacritty/alacritty.toml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$XDG_CONFIG_HOME/alacritty.toml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$HOME/.config/alacritty/alacritty.toml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$HOME/.alacritty.toml&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;On Windows, the config file should be located at:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;%APPDATA%\alacritty\alacritty.toml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;A guideline about contributing to Alacritty can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/alacritty/alacritty/master/CONTRIBUTING.md&#34;&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Is it really the fastest terminal emulator?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Benchmarking terminal emulators is complicated. Alacritty uses &lt;a href=&#34;https://github.com/alacritty/vtebench&#34;&gt;vtebench&lt;/a&gt; to quantify terminal emulator throughput and manages to consistently score better than the competition using it. If you have found an example where this is not the case, please report a bug.&lt;/p&gt; &#xA;&lt;p&gt;Other aspects like latency or framerate and frame consistency are more difficult to quantify. Some terminal emulators also intentionally slow down to save resources, which might be preferred by some users.&lt;/p&gt; &#xA;&lt;p&gt;If you have doubts about Alacritty&#39;s performance or usability, the best way to quantify terminal emulators is always to test them with &lt;strong&gt;your&lt;/strong&gt; specific usecases.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Why isn&#39;t feature X implemented?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alacritty has many great features, but not every feature from every other terminal. This could be for a number of reasons, but sometimes it&#39;s just not a good fit for Alacritty. This means you won&#39;t find things like tabs or splits (which are best left to a window manager or &lt;a href=&#34;https://github.com/tmux/tmux&#34;&gt;terminal multiplexer&lt;/a&gt;) nor niceties like a GUI config editor.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Alacritty is released under the &lt;a href=&#34;https://github.com/alacritty/alacritty/raw/master/LICENSE-APACHE&#34;&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ClementTsang/bottom</title>
    <updated>2023-09-03T01:59:55Z</updated>
    <id>tag:github.com,2023-09-03:/ClementTsang/bottom</id>
    <link href="https://github.com/ClementTsang/bottom" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Yet another cross-platform graphical process/system monitor.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;bottom&lt;/h1&gt; &#xA; &lt;p&gt; A customizable cross-platform graphical process/system monitor for the terminal.&lt;br&gt;Supports Linux, macOS, and Windows. Inspired by &lt;a href=&#34;https://github.com/aksakalli/gtop&#34;&gt;gtop&lt;/a&gt;, &lt;a href=&#34;https://github.com/xxxserxxx/gotop&#34;&gt;gotop&lt;/a&gt;, and &lt;a href=&#34;https://github.com/htop-dev/htop/&#34;&gt;htop&lt;/a&gt;. &lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/actions?query=branch%3Amaster&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/ClementTsang/bottom/ci.yml?branch=master&amp;amp;style=flat-square&amp;amp;logo=github&#34; alt=&#34;CI status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/bottom&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/bottom.svg?style=flat-square&#34; alt=&#34;crates.io link&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://clementtsang.github.io/bottom/stable&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-stable-66c2a5?style=flat-square&amp;amp;labelColor=555555&amp;amp;logoColor=white&#34; alt=&#34;Stable documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://clementtsang.github.io/bottom/nightly&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-nightly-88c0d0?style=flat-square&amp;amp;labelColor=555555&amp;amp;logoColor=white&#34; alt=&#34;Nightly documentation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/assets/demo.gif&#34; alt=&#34;Quick demo recording showing off bottom&#39;s searching, expanding, and process killing.&#34;&gt; &#xA; &lt;p&gt; &lt;sub&gt; Demo using the &lt;a href=&#34;https://github.com/morhetz/gruvbox&#34;&gt;Gruvbox&lt;/a&gt; theme (&lt;code&gt;--color gruvbox&lt;/code&gt;), along with &lt;a href=&#34;https://www.ibm.com/plex/&#34;&gt;IBM Plex Mono&lt;/a&gt; and &lt;a href=&#34;https://sw.kovidgoyal.net/kitty/&#34;&gt;Kitty&lt;/a&gt; &lt;/sub&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Table of contents &#xA; &lt;!-- omit in toc --&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#support&#34;&gt;Support&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#official&#34;&gt;Official&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#unofficial&#34;&gt;Unofficial&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#cargo&#34;&gt;Cargo&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#arch-linux&#34;&gt;Arch Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#debian--ubuntu&#34;&gt;Debian / Ubuntu&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#snap&#34;&gt;Snap&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#fedora--centos--almalinux--rocky-linux&#34;&gt;Fedora / CentOS / AlmaLinux / Rocky Linux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#gentoo&#34;&gt;Gentoo&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#nix&#34;&gt;Nix&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#solus&#34;&gt;Solus&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#void&#34;&gt;Void&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#homebrew&#34;&gt;Homebrew&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#macports&#34;&gt;MacPorts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#scoop&#34;&gt;Scoop&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#chocolatey&#34;&gt;Chocolatey&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#winget&#34;&gt;winget&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#windows-installer&#34;&gt;Windows installer&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#manual-installation&#34;&gt;Manual installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#binaries&#34;&gt;Binaries&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#auto-completion&#34;&gt;Auto-completion&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#contribution&#34;&gt;Contribution&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#thanks&#34;&gt;Thanks&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;As (yet another) process/system visualization and management application, bottom supports the typical features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Graphical visualization widgets for:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://clementtsang.github.io/bottom/nightly/usage/widgets/cpu/&#34;&gt;CPU usage&lt;/a&gt; over time, at an average and per-core level&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://clementtsang.github.io/bottom/nightly/usage/widgets/memory/&#34;&gt;RAM and swap usage&lt;/a&gt; over time&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://clementtsang.github.io/bottom/nightly/usage/widgets/network/&#34;&gt;Network I/O usage&lt;/a&gt; over time&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;with support for zooming in/out the current time interval displayed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Widgets for displaying info about:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://clementtsang.github.io/bottom/nightly/usage/widgets/disk/&#34;&gt;Disk capacity/usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://clementtsang.github.io/bottom/nightly/usage/widgets/temperature/&#34;&gt;Temperature sensors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://clementtsang.github.io/bottom/nightly/usage/widgets/battery/&#34;&gt;Battery usage&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://clementtsang.github.io/bottom/nightly/usage/widgets/process/&#34;&gt;A process widget&lt;/a&gt; for displaying, sorting, and searching info about processes, as well as support for:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://clementtsang.github.io/bottom/nightly/usage/widgets/process/#process-termination&#34;&gt;Kill signals&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://clementtsang.github.io/bottom/nightly/usage/widgets/process/#tree-mode&#34;&gt;Tree mode&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom#support&#34;&gt;Cross-platform support&lt;/a&gt; for Linux, macOS, and Windows, with more planned in the future.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://clementtsang.github.io/bottom/nightly/configuration/command-line-flags/&#34;&gt;Customizable behaviour&lt;/a&gt; that can be controlled with command-line flags or a config file, such as:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Custom and built-in colour themes&lt;/li&gt; &#xA;   &lt;li&gt;Customizing widget behaviour&lt;/li&gt; &#xA;   &lt;li&gt;Changing the layout of widgets&lt;/li&gt; &#xA;   &lt;li&gt;Filtering out entries in some widgets&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Some other nice stuff, like:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://clementtsang.github.io/bottom/nightly/usage/basic-mode/&#34;&gt;An htop-inspired basic mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://clementtsang.github.io/bottom/nightly/usage/general-usage/#expansion&#34;&gt;Expansion, which focuses on just one widget&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;And more!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can find more details in &lt;a href=&#34;https://clementtsang.github.io/bottom/nightly/usage/general-usage/&#34;&gt;the documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;h3&gt;Official&lt;/h3&gt; &#xA;&lt;p&gt;bottom &lt;em&gt;officially&lt;/em&gt; supports the following operating systems and corresponding architectures:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;macOS (&lt;code&gt;x86_64&lt;/code&gt;, &lt;code&gt;aarch64&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Linux (&lt;code&gt;x86_64&lt;/code&gt;, &lt;code&gt;i686&lt;/code&gt;, &lt;code&gt;aarch64&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Windows (&lt;code&gt;x86_64&lt;/code&gt;, &lt;code&gt;i686&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These platforms are tested to work for the most part and issues on these platforms will be fixed if possible. Furthermore, binaries are expected to be built and tested using the most recent version of stable Rust at the time.&lt;/p&gt; &#xA;&lt;p&gt;For more details on supported platforms and known problems, check out &lt;a href=&#34;https://clementtsang.github.io/bottom/nightly/support/official/&#34;&gt;the documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Unofficial&lt;/h3&gt; &#xA;&lt;p&gt;bottom may work on a number of platforms that aren&#39;t officially supported. Note that unsupported platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Might not be tested in CI to build or pass tests (see &lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/.github/workflows/ci.yml&#34;&gt;here&lt;/a&gt; for checked platforms).&lt;/li&gt; &#xA; &lt;li&gt;Might not be properly tested by maintainers prior to a stable release.&lt;/li&gt; &#xA; &lt;li&gt;May only receive limited support, such as missing features or bugs that may not be fixed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note that some unsupported platforms may eventually be officially supported (e.g., FreeBSD).&lt;/p&gt; &#xA;&lt;p&gt;A non-comprehensive list of some currently unofficially supported platforms that may compile/work include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;FreeBSD (&lt;code&gt;x86_64&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Linux (&lt;code&gt;armv6&lt;/code&gt;, &lt;code&gt;armv7&lt;/code&gt;, &lt;code&gt;powerpc64le&lt;/code&gt;, &lt;code&gt;riscv64gc&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more details on unsupported platforms and known problems, check out &lt;a href=&#34;https://clementtsang.github.io/bottom/nightly/support/unofficial/&#34;&gt;the documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Cargo&lt;/h3&gt; &#xA;&lt;p&gt;Installation via cargo can be done by installing the &lt;a href=&#34;https://crates.io/crates/bottom&#34;&gt;&lt;code&gt;bottom&lt;/code&gt;&lt;/a&gt; crate:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# If required, update Rust to the stable channel first:&#xA;rustup update stable&#xA;&#xA;# Install&#xA;cargo install bottom --locked&#xA;&#xA;# If you use another channel by default, you can specify&#xA;# the stable channel like so:&#xA;cargo +stable install bottom --locked&#xA;&#xA;# --locked may be omitted if you wish to not use the&#xA;# locked crate versions in Cargo.lock. However, be&#xA;# aware that this may cause problems with dependencies.&#xA;cargo install bottom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Arch Linux&lt;/h3&gt; &#xA;&lt;p&gt;bottom is available as an &lt;a href=&#34;https://archlinux.org/packages/extra/x86_64/bottom/&#34;&gt;official package&lt;/a&gt; that can be installed with &lt;code&gt;pacman&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo pacman -S bottom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Debian / Ubuntu&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;code&gt;.deb&lt;/code&gt; file is provided on each &lt;a href=&#34;https://github.com/ClementTsang/bottom/releases/latest&#34;&gt;stable release&lt;/a&gt; and &lt;a href=&#34;https://github.com/ClementTsang/bottom/releases/tag/nightly&#34;&gt;nightly builds&lt;/a&gt; for x86, aarch64, and armv7 (note stable ARM builds are only available for 0.6.8 and later). An example of installing this way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# x86-64&#xA;curl -LO https://github.com/ClementTsang/bottom/releases/download/0.9.6/bottom_0.9.6_amd64.deb&#xA;sudo dpkg -i bottom_0.9.6_amd64.deb&#xA;&#xA;# ARM64&#xA;curl -LO https://github.com/ClementTsang/bottom/releases/download/0.9.6/bottom_0.9.6_arm64.deb&#xA;sudo dpkg -i bottom_0.9.6_arm64.deb&#xA;&#xA;# ARM&#xA;curl -LO https://github.com/ClementTsang/bottom/releases/download/0.9.6/bottom_0.9.6_armhf.deb&#xA;sudo dpkg -i bottom_0.9.6_armhf.deb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Snap&lt;/h3&gt; &#xA;&lt;p&gt;bottom is available as a &lt;a href=&#34;https://snapcraft.io/install/bottom/ubuntu&#34;&gt;snap&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo snap install bottom&#xA;&#xA;# To allow the program to run as intended&#xA;sudo snap connect bottom:mount-observe&#xA;sudo snap connect bottom:hardware-observe&#xA;sudo snap connect bottom:system-observe&#xA;sudo snap connect bottom:process-control&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Fedora / CentOS / AlmaLinux / Rocky Linux&lt;/h3&gt; &#xA;&lt;p&gt;bottom is available in &lt;a href=&#34;https://copr.fedorainfracloud.org/coprs/atim/bottom/&#34;&gt;COPR&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo dnf copr enable atim/bottom -y&#xA;sudo dnf install bottom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;.rpm&lt;/code&gt; files are also generated (starting from 0.9.3) for x86. If you wish to install this way, then you can do something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# x86-64&#xA;curl -LO https://github.com/ClementTsang/bottom/releases/download/0.9.6/bottom-0.9.6-1.x86_64.rpm&#xA;sudo rpm -i bottom-0.9.6-1.x86_64.rpm&#xA;&#xA;# Nightly x86-64&#xA;curl -LO https://github.com/ClementTsang/bottom/releases/download/nightly/bottom-0.9.6-1.x86_64.rpm&#xA;sudo rpm -i bottom-0.9.6-1.x86_64.rpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Gentoo&lt;/h3&gt; &#xA;&lt;p&gt;Available in the &lt;a href=&#34;https://packages.gentoo.org/packages/sys-process/bottom&#34;&gt;official Gentoo repo&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo emerge --ask sys-process/bottom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Nix&lt;/h3&gt; &#xA;&lt;p&gt;Available &lt;a href=&#34;https://github.com/nix-community/home-manager/raw/master/modules/programs/bottom.nix&#34;&gt;in the nix-community repo&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nix-env -i bottom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Solus&lt;/h3&gt; &#xA;&lt;p&gt;Available &lt;a href=&#34;https://dev.getsol.us/source/bottom/&#34;&gt;in the Solus repos&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo eopkg it bottom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Void&lt;/h3&gt; &#xA;&lt;p&gt;Available &lt;a href=&#34;https://github.com/void-linux/void-packages/tree/master/srcpkgs/bottom&#34;&gt;in the void-packages repo&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo xbps-install bottom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Homebrew&lt;/h3&gt; &#xA;&lt;p&gt;Formula available &lt;a href=&#34;https://formulae.brew.sh/formula/bottom&#34;&gt;here&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install bottom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;MacPorts&lt;/h3&gt; &#xA;&lt;p&gt;Available &lt;a href=&#34;https://ports.macports.org/port/bottom/&#34;&gt;here&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo port selfupdate&#xA;sudo port install bottom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Scoop&lt;/h3&gt; &#xA;&lt;p&gt;Available in the &lt;a href=&#34;https://github.com/ScoopInstaller/Main&#34;&gt;Main bucket&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scoop install bottom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Chocolatey&lt;/h3&gt; &#xA;&lt;p&gt;Chocolatey packages are located &lt;a href=&#34;https://chocolatey.org/packages/bottom&#34;&gt;here&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;choco install bottom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;winget&lt;/h3&gt; &#xA;&lt;p&gt;The winget package can be found &lt;a href=&#34;https://github.com/microsoft/winget-pkgs/tree/master/manifests/c/Clement/bottom&#34;&gt;here&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;winget install bottom&#xA;&#xA;# If you need a more specific app id:&#xA;winget install Clement.bottom&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can uninstall via Control Panel, Options, or &lt;code&gt;winget --uninstall bottom&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Windows installer&lt;/h3&gt; &#xA;&lt;p&gt;You can also manually install bottom as a Windows program by going to the &lt;a href=&#34;https://github.com/ClementTsang/bottom/releases/latest&#34;&gt;latest release&lt;/a&gt; and installing via the &lt;code&gt;.msi&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;Manual installation&lt;/h3&gt; &#xA;&lt;p&gt;There are a few ways to go about doing this manually. Note that you probably want to do so using the most recent version of stable Rust, which is how the binaries are built:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# If required, update Rust on the stable channel first&#xA;rustup update stable&#xA;&#xA;# Option 1 - Download from releases and install&#xA;curl -LO https://github.com/ClementTsang/bottom/archive/0.9.6.tar.gz&#xA;tar -xzvf 0.9.6.tar.gz&#xA;cargo install --path . --locked&#xA;&#xA;# Option 2 - Clone from master and install manually&#xA;git clone https://github.com/ClementTsang/bottom&#xA;cd bottom&#xA;cargo install --path . --locked&#xA;&#xA;# Option 3 - Clone and install directly from the repo all via Cargo&#xA;cargo install --git https://github.com/ClementTsang/bottom --locked&#xA;&#xA;# You can also pass in the target-cpu=native flag for&#xA;# better CPU-specific optimizations. For example:&#xA;RUSTFLAGS=&#34;-C target-cpu=native&#34; cargo install --path . --locked&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Binaries&lt;/h3&gt; &#xA;&lt;p&gt;You can also use the pre-built release binaries manually:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/releases/latest&#34;&gt;Latest stable release&lt;/a&gt;, generated off of the release branch&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/releases/tag/nightly&#34;&gt;Latest nightly release&lt;/a&gt;, generated daily off of the master branch at 00:00 UTC&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To use, download and extract the binary that matches your system. You can then run by doing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./btm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or by installing to your system following whatever the procedure is for installing a binary to your system.&lt;/p&gt; &#xA;&lt;h4&gt;Auto-completion&lt;/h4&gt; &#xA;&lt;p&gt;The release binaries are packaged with shell auto-completion files for bash, fish, zsh, and Powershell. To install them:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For bash, move &lt;code&gt;btm.bash&lt;/code&gt; to &lt;code&gt;$XDG_CONFIG_HOME/bash_completion or /etc/bash_completion.d/&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For fish, move &lt;code&gt;btm.fish&lt;/code&gt; to &lt;code&gt;$HOME/.config/fish/completions/&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For zsh, move &lt;code&gt;_btm&lt;/code&gt; to one of your &lt;code&gt;$fpath&lt;/code&gt; directories.&lt;/li&gt; &#xA; &lt;li&gt;For PowerShell, add &lt;code&gt;_btm.ps1&lt;/code&gt; to your PowerShell &lt;a href=&#34;https://docs.microsoft.com/en-us/previous-versions//bb613488(v=vs.85)&#34;&gt;profile&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The individual auto-completion files are also included in the stable/nightly releases as &lt;code&gt;completion.tar.gz&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;You can run bottom using &lt;code&gt;btm&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For help on flags, use &lt;code&gt;btm -h&lt;/code&gt; for a quick overview or &lt;code&gt;btm --help&lt;/code&gt; for more details.&lt;/li&gt; &#xA; &lt;li&gt;For info on key and mouse bindings, press &lt;code&gt;?&lt;/code&gt; inside bottom or refer to the &lt;a href=&#34;https://clementtsang.github.io/bottom/nightly/&#34;&gt;documentation&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can find more information on usage in the &lt;a href=&#34;https://clementtsang.github.io/bottom/nightly/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;bottom accepts a number of command-line arguments to change the behaviour of the application as desired. Additionally, bottom will automatically generate a configuration file on the first launch, which one can change as appropriate.&lt;/p&gt; &#xA;&lt;p&gt;More details on configuration can be found &lt;a href=&#34;https://clementtsang.github.io/bottom/nightly/configuration/config-file/default-config/&#34;&gt;in the documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;If some things aren&#39;t working, give the &lt;a href=&#34;https://clementtsang.github.io/bottom/nightly/troubleshooting&#34;&gt;troubleshooting page&lt;/a&gt; a look. If things still aren&#39;t working, then consider opening &lt;a href=&#34;https://github.com/ClementTsang/bottom/discussions&#34;&gt;a question&lt;/a&gt; or filing a &lt;a href=&#34;https://github.com/ClementTsang/bottom/issues/new/choose&#34;&gt;bug report&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Whether it&#39;s reporting bugs, suggesting features, maintaining packages, or submitting a PR, contribution is always welcome! Please read &lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for details on how to contribute to bottom.&lt;/p&gt; &#xA;&lt;h3&gt;Contributors&lt;/h3&gt; &#xA;&lt;p&gt;Thanks to all contributors:&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://shilangyu.github.io&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/29288116?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Marcin Wojnarowski&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Marcin Wojnarowski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=shilangyu&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#platform-shilangyu&#34; title=&#34;Packaging/porting to new platform&#34;&gt;📦&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://neosmart.net/&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/606923?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Mahmoud Al-Qudsi&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mahmoud Al-Qudsi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=mqudsi&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://andys8.de&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/13085980?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Andy&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=andys8&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/HarHarLinks&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/2803622?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Kim Brose&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kim Brose&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=HarHarLinks&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://svenstaro.org&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/1664?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Sven-Hendrik Haase&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sven-Hendrik Haase&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=svenstaro&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://liberapay.com/Artem4/&#34;&gt;&lt;img src=&#34;https://avatars0.githubusercontent.com/u/5614476?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Artem Polishchuk&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Artem Polishchuk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#platform-tim77&#34; title=&#34;Packaging/porting to new platform&#34;&gt;📦&lt;/a&gt; &lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=tim77&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://ruby-journal.com/&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/135605?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Trung Lê&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Trung Lê&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#platform-runlevel5&#34; title=&#34;Packaging/porting to new platform&#34;&gt;📦&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#infra-runlevel5&#34; title=&#34;Infrastructure (Hosting, Build-Tools, etc)&#34;&gt;🚇&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/dm9pZCAq&#34;&gt;&lt;img src=&#34;https://avatars1.githubusercontent.com/u/46228973?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;dm9pZCAq&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;dm9pZCAq&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#platform-dm9pZCAq&#34; title=&#34;Packaging/porting to new platform&#34;&gt;📦&lt;/a&gt; &lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=dm9pZCAq&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://lukor.org&#34;&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/10536802?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Lukas Rysavy&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lukas Rysavy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=LlinksRechts&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://hamberg.no/erlend&#34;&gt;&lt;img src=&#34;https://avatars3.githubusercontent.com/u/16063?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Erlend Hamberg&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Erlend Hamberg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=ehamberg&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://onee3.org&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4507647?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Frederick Zhang&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Frederick Zhang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=Frederick888&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/pvanheus&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4154788?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;pvanheus&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;pvanheus&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=pvanheus&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://zebulon.dev/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/14242997?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Zeb Piasecki&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Zeb Piasecki&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=vlakreeh&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/briandipalma&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1597820?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Brian Di Palma&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Brian Di Palma&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=briandipalma&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://dakyskye.github.io&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/32128756?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Lasha Kanteladze&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lasha Kanteladze&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=dakyskye&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/herbygillot&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/618376?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Herby Gillot&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Herby Gillot&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=herbygillot&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/yellowsquid&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/46519298?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Greg Brown&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Greg Brown&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=yellowsquid&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/TotalCaesar659&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/14265316?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;TotalCaesar659&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;TotalCaesar659&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=TotalCaesar659&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/grawlinson&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4408051?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;George Rawlinson&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;George Rawlinson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=grawlinson&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#platform-grawlinson&#34; title=&#34;Packaging/porting to new platform&#34;&gt;📦&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://www.frogorbits.com/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/101246?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;adiabatic&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;adiabatic&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=adiabatic&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://electronsweatshop.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/354506?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Randy Barlow&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Randy Barlow&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=bowlofeggs&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://jackson.dev&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/160646?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Patrick Jackson&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Patrick Jackson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ClementTsang/bottom/master/#ideas-patricksjackson&#34; title=&#34;Ideas, Planning, &amp;amp; Feedback&#34;&gt;🤔&lt;/a&gt; &lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=patricksjackson&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/mati865&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1174646?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Mateusz Mikuła&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mateusz Mikuła&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=mati865&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://blog.guillaume-gomez.fr&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3050060?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Guillaume Gomez&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Guillaume Gomez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=GuillaumeGomez&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/shurizzle&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/203655?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;shura&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;shura&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=shurizzle&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://www.wezm.net/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/21787?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Wesley Moore&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Wesley Moore&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=wezm&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/xgdgsc&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1189869?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;xgdgsc&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;xgdgsc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=xgdgsc&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/ViridiCanis&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/49595344?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;ViridiCanis&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ViridiCanis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=ViridiCanis&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/jamartin9&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7027701?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Justin Martin&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Justin Martin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=jamartin9&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=jamartin9&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/DianaNites&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5275194?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Diana&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Diana&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=DianaNites&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://hervyqa.id&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/45872139?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Hervy Qurrotul Ainur Rozi&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hervy Qurrotul Ainur Rozi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=hervyqa&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://mrivnak.github.io&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7389355?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Mike Rivnak&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mike Rivnak&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=mrivnak&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/lroobrou&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/35152113?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;lroobrou&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;lroobrou&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=lroobrou&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://cube64128.xyz/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/18757988?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;database64128&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;database64128&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=database64128&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/sou-chon&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/35537528?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Chon Sou&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Chon Sou&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=sou-chon&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/Drsheppard01&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/60893791?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;DrSheppard&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;DrSheppard&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=Drsheppard01&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/RaresCon&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/95525840?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Rareș Constantin&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rareș Constantin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=RaresCon&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://felipesuri.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/50281523?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;felipesuri&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;felipesuri&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=felipesuri&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/spital&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/11034264?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;spital&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;spital&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=spital&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://bikodbg.com/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1389811?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Michael Bikovitsky&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Bikovitsky&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=mbikovitsky&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/dvalter&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/38795282?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Dmitry Valter&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dmitry Valter&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=dvalter&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/aragonnetje6&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/69118097?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Twan Stok&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Twan Stok&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=aragonnetje6&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/yshui&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/366851?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Yuxuan Shui&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yuxuan Shui&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=yshui&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://zongwenqing.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/43934749?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Wenqing Zong&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Wenqing Zong&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=WenqingZong&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://gabelluardo.github.io&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/42920247?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Gabriele Belluardo&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gabriele Belluardo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=gabelluardo&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://zebulon.dev/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/14242997?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Zeb Piasecki&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Zeb Piasecki&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/ClementTsang/bottom/commits?author=zebp&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;This project is very much inspired by &lt;a href=&#34;https://github.com/xxxserxxx/gotop&#34;&gt;gotop&lt;/a&gt;, &lt;a href=&#34;https://github.com/aksakalli/gtop&#34;&gt;gtop&lt;/a&gt;, and &lt;a href=&#34;https://github.com/htop-dev/htop/&#34;&gt;htop&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;This application was written with many, &lt;em&gt;many&lt;/em&gt; libraries, and built on the work of many talented people. This application would be impossible without their work. I used to thank them all individually but the list got too large...&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;And of course, another round of thanks to all the contributors and package maintainers!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>