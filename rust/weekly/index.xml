<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-08T02:01:07Z</updated>
  <subtitle>Weekly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jetporch/jetporch</title>
    <updated>2023-10-08T02:01:07Z</updated>
    <id>tag:github.com,2023-10-08:/jetporch/jetporch</id>
    <link href="https://github.com/jetporch/jetporch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Read-only mirror: see https://www.jetporch.com/community/sourcehut&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Jetporch - the Jet Enterprise Professional Orchestrator&lt;/h1&gt; &#xA;&lt;p&gt;Jetporch (aka Jet) is a general-purpose, community-driven IT automation platform for configuration management, deployment, orchestration, patching, and arbitrary task execution workflows.&lt;/p&gt; &#xA;&lt;p&gt;Jet is a GPLv3 licensed project, created and run by &lt;a href=&#34;https://home.laserllama.net&#34;&gt;Michael DeHaan&lt;/a&gt;. &lt;a href=&#34;mailto:michael@michaeldehaan.net&#34;&gt;(&lt;/a&gt;&lt;a href=&#34;mailto:michael@michaeldehaan.net&#34;&gt;michael@michaeldehaan.net&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Links&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jetporch.com/&#34;&gt;All Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jetporch.com/basics/installing-from-source&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jetporch.substack.com/&#34;&gt;Blog and Announcements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jetporch.com/community/discord-chat&#34;&gt;Discord Chat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jetporch.com/community/contributing&#34;&gt;Contribution Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please route all questions, help requests, and feature discussion to Discord. Thanks!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>uiua-lang/uiua</title>
    <updated>2023-10-08T02:01:07Z</updated>
    <id>tag:github.com,2023-10-08:/uiua-lang/uiua</id>
    <link href="https://github.com/uiua-lang/uiua" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A stack-based array programming language&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/uiua-lang/uiua/main/site/uiua-logo.png&#34; width=&#34;140&#34;&gt; &#xA;&lt;h1&gt;Uiua&lt;/h1&gt; &#xA;&lt;p&gt;Uiua (pronounced &lt;em&gt;&#34;wee-wuh&#34;&lt;/em&gt;) is a stack-based array programming language.&lt;/p&gt; &#xA;&lt;p&gt;Documentation, examples, and an online interpreter can be found at &lt;a href=&#34;https://uiua.org&#34;&gt;uiua.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also check out the &lt;a href=&#34;https://discord.gg/3r9nrfYhCc&#34;&gt;Discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can support Uiua&#39;s development via &lt;a href=&#34;https://github.com/sponsors/uiua-lang&#34;&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can try the language without installing anything on &lt;a href=&#34;https://uiua.org&#34;&gt;the website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to install the interpreter locally, you will need to install it via Cargo. This requires &lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;Rust&lt;/a&gt; to be installed.&lt;/p&gt; &#xA;&lt;p&gt;You can install with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cargo install uiua&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To enable audio output, enable the &lt;code&gt;audio&lt;/code&gt; feature:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cargo install uiua --features audio&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want audio on Linux, you may need to install some dependencies first:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt install libasound2-dev libudev-dev pkg-config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Language Server&lt;/h2&gt; &#xA;&lt;p&gt;The interpreter has a built-in language server that implements the &lt;a href=&#34;https://microsoft.github.io/language-server-protocol/&#34;&gt;Language Server Protocol&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A language client extension is available for VSCode &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=uiua-lang.uiua-vscode&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The language client requires that the interpreter is installed locally and available on your PATH.&lt;/p&gt; &#xA;&lt;h2&gt;Formatter Configuration&lt;/h2&gt; &#xA;&lt;p&gt;You can configure Uiua&#39;s formatter by creating a file called &lt;code&gt;.fmt.ua&lt;/code&gt; in the directory from which you run the interpreter. This configuration file is also a Uiua program.&lt;/p&gt; &#xA;&lt;p&gt;Configuration options are specified by binding values to specific names.&lt;/p&gt; &#xA;&lt;p&gt;Example with default values:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TrailingNewline ← 1&#xA;CommentSpaceAfterHash ← 1&#xA;MultilineIndent ← 2&#xA;CompactMultilineMode ← &#34;auto&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following configuration options are available:&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;TrailingNewline&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Type: boolean&lt;/p&gt; &#xA;&lt;p&gt;Default: &lt;code&gt;1&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Whether to add a trailing newline to a file.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;CommentSpaceAfterHash&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Type: boolean&lt;/p&gt; &#xA;&lt;p&gt;Default: &lt;code&gt;1&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Whether to insert a space after a &lt;code&gt;#&lt;/code&gt; in a comment if there is not one already.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;MultilineIndent&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Type: natural number&lt;/p&gt; &#xA;&lt;p&gt;Default: &lt;code&gt;2&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The number of spaces to indent each line of a multiline expression.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;CompactMultilineMode&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Type: one of &lt;code&gt;&#34;always&#34;&lt;/code&gt;, &lt;code&gt;&#34;never&#34;&lt;/code&gt;, or &lt;code&gt;&#34;auto&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Default: &lt;code&gt;&#34;auto&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;How to format multiline expressions.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&#34;always&#34;&lt;/code&gt;: Always format multiline expressions in compact mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&#34;never&#34;&lt;/code&gt;: Never format multiline expressions in compact mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&#34;auto&#34;&lt;/code&gt;: Format multiline expressions in compact mode if they do not exceed &lt;code&gt;MultilineCompactThreshold&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;MultilineCompactThreshold&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Type: natural number&lt;/p&gt; &#xA;&lt;p&gt;Default: &lt;code&gt;10&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The maximum number of lines a multiline expression can have before it is formatted in compact mode.&lt;/p&gt; &#xA;&lt;p&gt;Only used if &lt;code&gt;CompactMultilineMode&lt;/code&gt; is not &lt;code&gt;&#34;never&#34;&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Valthrun/Valthrun</title>
    <updated>2023-10-08T02:01:07Z</updated>
    <id>tag:github.com,2023-10-08:/Valthrun/Valthrun</id>
    <link href="https://github.com/Valthrun/Valthrun" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Valthrun an open source external CS2 read only kernel gameplay enhancer.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Valthrun/Valthrun/master/logo.svg?sanitize=true&#34; alt=&#34;Valthrun CS2 Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;right&#34;&gt; &lt;a href=&#34;https://discord.gg/ecKbpAPW5T&#34;&gt; &lt;img src=&#34;https://discordapp.com/api/guilds/1135362291311849693/widget.png?style=shield&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Valthrun an open source external Counter-Strike 2 read only kernel gameplay enhancer.&lt;br&gt; That&#39;s a lot of descriptive words, but what does each of them mean?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Valthrun&lt;/code&gt; The name of this project&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Open Source&lt;/code&gt; This application is open source and for everbody to study&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;external&lt;/code&gt; We do not inject any ddls into the target process&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Counter-Strike 2&lt;/code&gt; The game we&#39;re enhancing&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;read only&lt;/code&gt; We do not write to the CS2 process in any way, therefore being impossible to detect by scanning the process memory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;kernel&lt;/code&gt; We do not use any user level WinAPIs in order to get information from the CS2 process&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This project is mainly a fun example for exploring the Windows Kernel with &lt;a href=&#34;https://www.rust-lang.org&#34;&gt;Rust&lt;/a&gt; and exploring the world of game enhancements :)&lt;/p&gt; &#xA;&lt;h1&gt;WARNING&lt;/h1&gt; &#xA;&lt;p&gt;Valthrun is currently &lt;strong&gt;not&lt;/strong&gt; a pnp (plug &#39;n play) application.&lt;br&gt; Please read &lt;a href=&#34;https://raw.githubusercontent.com/Valthrun/Valthrun/master/#how-to-use&#34;&gt;How to use&lt;/a&gt; carefully and try troubleshooting issues on your own.&lt;br&gt; The goal is to reach maximum stelth to avoid anti cheat detection.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;Valthrun provides a variety of external tools to enchant your gameplay experience.&lt;br&gt; As of now, Valthrun only reads memory and never writes anything. This implies some limitations as which features could be provided.&lt;br&gt; An example would be a skin changer which is not be possible without actively modifying the CS2 game state (e.g. writing into it&#39;s memory).&lt;/p&gt; &#xA;&lt;p&gt;Regardless of this limitation, Valthrun supports the following features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Player ESP Two modes are supported: &lt;code&gt;Skeleton&lt;/code&gt; and &lt;code&gt;Boxes&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Configurable colors to distinguish between enemy and team players&lt;/li&gt; &#xA;   &lt;li&gt;ESP includes player health&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Bomb Info &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Time until the bomb detonation&lt;/li&gt; &#xA;   &lt;li&gt;Defuser info such as how long until the defuse has succeeded&lt;/li&gt; &#xA;   &lt;li&gt;Bomb site where the bomb is located&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Trigger Bot&lt;/li&gt; &#xA; &lt;li&gt;Stream proof by default&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To access Valthruns settings overlay press &lt;code&gt;PAUSE&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Planned Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Aim Bot&lt;/li&gt; &#xA; &lt;li&gt;Spectator info &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;List of player currently watching you / the observer target&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Player competitive ranks / wins&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Valthrun does not need to be installed.&lt;br&gt; In order to run Valthrun you only need the kernel driver (&lt;code&gt;valthrun-driver.sys&lt;/code&gt;) and the controller (&lt;code&gt;controller.exe&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Both can be accquired by downloading the precompiled release from GitHub.&lt;br&gt; Click &lt;a href=&#34;https://github.com/WolverinDEV/Valthrun/releases&#34;&gt;here&lt;/a&gt; to view all releases.&lt;/p&gt; &#xA;&lt;p&gt;Once downloaded read &lt;a href=&#34;https://raw.githubusercontent.com/Valthrun/Valthrun/master/#how-to-use&#34;&gt;How to use&lt;/a&gt; to get started!&lt;/p&gt; &#xA;&lt;h1&gt;How to use&lt;/h1&gt; &#xA;&lt;p&gt;The following steps need to be done for starting/activating the overlay.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Load the kernel driver&lt;br&gt; The overlay requires the kernel driver for all memory reads and writes. Therefore we need to load the driver before we can start the overlay. It&#39;s not strictly required to load the driver before starting CS2 but logically it makes sense to start with the driver.&lt;/p&gt; &lt;p&gt;There are two common options to load the kernel driver:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;Manually map the driver using a vulnerable driver The Valthrun kernel driver fully supports manual driver mapping using a any vulnerable driver. In order to detect the manual mapping the second driver entry argument (the registry patch) must be a null ptr.&lt;br&gt; The kernel driver will automatically allocate a new driver for io communication.&lt;/p&gt; &lt;p&gt;In order to manually map the Valthrun driver you can use tools like&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/TheCruZ/kdmapper&#34;&gt;kdmapper&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/hfiref0x/KDU&#34;&gt;KDU&lt;/a&gt; (does not always work...)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Setting Windows into test-signing mode&lt;br&gt; TODO: Explain how to set Windows into test signing Helpfull guide: &lt;a href=&#34;https://github.com/dretax/GarHal_CSGO#starting-driver&#34;&gt;https://github.com/dretax/GarHal_CSGO#starting-driver&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start Counter-Strike 2&lt;br&gt; After loading the driver you can start Counter-Strike 2 as usual.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start Overlay&lt;br&gt; With an open instance of Counter-Strike 2 you can start the overlay.&lt;br&gt; Attention: You &lt;em&gt;must&lt;/em&gt; start the overlay as administrator!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To explore all command line options of the controller, start the controller from the terminal and pass &lt;code&gt;-h&lt;/code&gt; to display the command line interface:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ps1&#34;&gt;.\controller.exe -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you want extra/verbose output, start the overlay from the terminal and previously set the &lt;code&gt;RUST_LOG&lt;/code&gt; environment variable.&lt;br&gt; Example for executing the overlay with trace output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ps1&#34;&gt;$env:RUST_LOG=&#34;trace&#34;&#xA;.\controller.exe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Troubleshooting&lt;/h1&gt; &#xA;&lt;p&gt;If you are having issues mapping the kernel driver or starting the controller, please take a look &lt;a href=&#34;https://github.com/WolverinDEV/Valthrun/tree/master/doc/troubleshooting&#34;&gt;here&lt;/a&gt;:&lt;br&gt; &lt;a href=&#34;https://github.com/WolverinDEV/Valthrun/tree/master/doc/troubleshooting&#34;&gt;https://github.com/WolverinDEV/Valthrun/tree/master/doc/troubleshooting&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The issue you encounter is most likely covered. If you still have any questions or need assistens, feel free to checkout the official Valthrun Discord server (&lt;a href=&#34;https://discord.gg/ecKbpAPW5T&#34;&gt;click to join&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h1&gt;VAC&lt;/h1&gt; &#xA;&lt;p&gt;The same considerations as mentioned in &lt;a href=&#34;https://github.com/dretax/GarHal_CSGO#starting-driver&#34;&gt;this link&lt;/a&gt; have been taken into account.&lt;br&gt; With these precautions and some minor improvements, such as omitting the valthrun identifier and using xor-ing for strings, the driver/overlay should avoid VAC detection. However, I must clarify that I haven&#39;t extensively studied VAC, so my conclusion is speculative. Personally, I have been using a C based driver/overlay like this with CSGO for several years without ever getting VAC banned. But be aware of overwatch!&lt;br&gt; Unfortunately, since I&#39;m not part of the closed CS2 beta,&lt;br&gt; I haven&#39;t had the opportunity to test the overlay with VAC live,&lt;br&gt; but I assume it should work similarly well.&lt;/p&gt; &#xA;&lt;h1&gt;Supported Windows Versions&lt;/h1&gt; &#xA;&lt;p&gt;All recent Windows versions should be supported as all functions / struct offsets are resolved dynamically.&lt;br&gt; The latest Win 10 and Win 11 versions (22H2) have been tested. User feedback suggests, Windows versions back &#39;till 20H2 are working. If you encounter an issue, please submit an issue containing your Windows version and detailing the error you encounter.&lt;/p&gt; &#xA;&lt;h1&gt;Screenshots&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Valthrun/Valthrun/master/img/showcase_01.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Valthrun/Valthrun/master/img/showcase_02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Help&lt;/h1&gt; &#xA;&lt;p&gt;You can find help on the official Valthrun Discord server:&lt;br&gt; &lt;a href=&#34;https://discord.gg/ecKbpAPW5T&#34;&gt;&lt;img src=&#34;https://discordapp.com/api/guilds/1135362291311849693/widget.png?style=shield&#34; alt=&#34;Discord Shield&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>