<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-18T02:01:49Z</updated>
  <subtitle>Weekly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TabbyML/tabby</title>
    <updated>2023-06-18T02:01:49Z</updated>
    <id>tag:github.com,2023-06-18:/TabbyML/tabby</id>
    <link href="https://github.com/TabbyML/tabby" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Self-hosted AI coding assistant&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;üêæ Tabby&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/TabbyML/tabby/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/TabbyML/tabby/ci.yml?label=build&#34; alt=&#34;build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/tabbyml/tabby&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/tabbyml/tabby&#34; alt=&#34;Docker pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/tabbycommunity/shared_invite/zt-1xeiddizp-bciR2RtFTaJ37RBxr8VxpA&#34;&gt;&lt;img src=&#34;https://shields.io/badge/Tabby-Join%20Slack-red?logo=slack&#34; alt=&#34;Slack Community&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Self-hosted AI coding assistant. An opensource / on-prem alternative to GitHub Copilot.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; Tabby is still in the alpha phase&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Self-contained, with no need for a DBMS or cloud service&lt;/li&gt; &#xA; &lt;li&gt;Web UI for visualizing and configuration models and MLOps.&lt;/li&gt; &#xA; &lt;li&gt;OpenAPI interface, easy to integrate with existing infrastructure (e.g Cloud IDE).&lt;/li&gt; &#xA; &lt;li&gt;Consumer level GPU supports (FP-16 weight loading with various optimization).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://tabbyml.github.io/tabby/playground&#34;&gt;&lt;img alt=&#34;Open in Playground&#34; src=&#34;https://img.shields.io/badge/OPEN%20IN%20PLAYGROUND-blue?logo=xcode&amp;amp;style=for-the-badge&amp;amp;logoColor=green&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Demo&#34; src=&#34;https://user-images.githubusercontent.com/388154/230440226-9bc01d05-9f57-478b-b04d-81184eba14ca.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://tabbyml.github.io/tabby&#34;&gt;https://tabbyml.github.io/tabby&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#tabbyml/tabby&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=tabbyml/tabby&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ordinals/ord</title>
    <updated>2023-06-18T02:01:49Z</updated>
    <id>tag:github.com,2023-06-18:/ordinals/ord</id>
    <link href="https://github.com/ordinals/ord" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üëÅ‚Äçüó® Rare and exotic sats&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;ord&lt;/code&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;ord&lt;/code&gt; is an index, block explorer, and command-line wallet. It is experimental software with no warranty. See &lt;a href=&#34;https://raw.githubusercontent.com/ordinals/ord/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;Ordinal theory imbues satoshis with numismatic value, allowing them to be collected and traded as curios.&lt;/p&gt; &#xA;&lt;p&gt;Ordinal numbers are serial numbers for satoshis, assigned in the order in which they are mined, and preserved across transactions.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.ordinals.com&#34;&gt;the docs&lt;/a&gt; for documentation and guides.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/ordinals/ord/master/bip.mediawiki&#34;&gt;the BIP&lt;/a&gt; for a technical description of the assignment and transfer algorithm.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/users/casey/projects/3/&#34;&gt;the project board&lt;/a&gt; for currently prioritized issues.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ordinals/ord/milestones&#34;&gt;milestones&lt;/a&gt; to get a sense of where the project is and where it&#39;s going.&lt;/p&gt; &#xA;&lt;p&gt;Join &lt;a href=&#34;https://discord.gg/87cjuz4FYg&#34;&gt;the Discord server&lt;/a&gt; to chat with fellow ordinal degenerates.&lt;/p&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;Ordinals is open-source and community funded. The current lead maintainer of &lt;code&gt;ord&lt;/code&gt; is &lt;a href=&#34;https://github.com/raphjaph/&#34;&gt;raphjaph&lt;/a&gt;. Raph&#39;s work on &lt;code&gt;ord&lt;/code&gt; is entirely funded by donations. If you can, please consider donating!&lt;/p&gt; &#xA;&lt;p&gt;The donation address is &lt;a href=&#34;https://mempool.space/address/bc1q8kt9pyd6r27k2840l8g5d7zshz3cg9v6rfda0m248lva3ve5072q3sxelt&#34;&gt;bc1q8kt9pyd6r27k2840l8g5d7zshz3cg9v6rfda0m248lva3ve5072q3sxelt&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This address is 2 of 4 multisig wallet with keys held by &lt;a href=&#34;https://twitter.com/raphjaph&#34;&gt;raphjaph&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/realizingerin&#34;&gt;erin&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/rodarmor&#34;&gt;rodarmor&lt;/a&gt;, and &lt;a href=&#34;https://twitter.com/veryordinally&#34;&gt;ordinally&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Bitcoin received will go towards funding maintainance and development of &lt;code&gt;ord&lt;/code&gt;, as well as hosting costs for &lt;a href=&#34;https://ordinals.com&#34;&gt;ordinals.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Thank you for donating!&lt;/p&gt; &#xA;&lt;h2&gt;Wallet&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;ord&lt;/code&gt; relies on Bitcoin Core for private key management and transaction signing. This has a number of implications that you must understand in order to use &lt;code&gt;ord&lt;/code&gt; wallet commands safely:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Bitcoin Core is not aware of inscriptions and does not perform sat control. Using &lt;code&gt;bitcoin-cli&lt;/code&gt; commands and RPC calls with &lt;code&gt;ord&lt;/code&gt; wallets may lead to loss of inscriptions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;ord wallet&lt;/code&gt; commands automatically load the &lt;code&gt;ord&lt;/code&gt; wallet given by the &lt;code&gt;--wallet&lt;/code&gt; option, which defaults to &#39;ord&#39;. Keep in mind that after running an &lt;code&gt;ord wallet&lt;/code&gt; command, an &lt;code&gt;ord&lt;/code&gt; wallet may be loaded.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Because &lt;code&gt;ord&lt;/code&gt; has access to your Bitcoin Core wallets, &lt;code&gt;ord&lt;/code&gt; should not be used with wallets that contain a material amount of funds. Keep ordinal and cardinal wallets segregated.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Pre-alpha wallet migration&lt;/h3&gt; &#xA;&lt;p&gt;Alpha &lt;code&gt;ord&lt;/code&gt; wallets are not compatible with wallets created by previous versions of &lt;code&gt;ord&lt;/code&gt;. To migrate, use &lt;code&gt;ord wallet send&lt;/code&gt; from the old wallet to send sats and inscriptions to addresses generated by the new wallet with &lt;code&gt;ord wallet receive&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;ord&lt;/code&gt; is written in Rust and can be built from &lt;a href=&#34;https://github.com/ordinals/ord&#34;&gt;source&lt;/a&gt;. Pre-built binaries are available on the &lt;a href=&#34;https://github.com/ordinals/ord/releases&#34;&gt;releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can install the latest pre-built binary from the command line with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl --proto &#39;=https&#39; --tlsv1.2 -fsLS https://ordinals.com/install.sh | bash -s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once &lt;code&gt;ord&lt;/code&gt; is installed, you should be able to run &lt;code&gt;ord --version&lt;/code&gt; on the command line.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;On Debian and Ubuntu, &lt;code&gt;ord&lt;/code&gt; requires &lt;code&gt;libssl-dev&lt;/code&gt; when building from source:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install libssl-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You&#39;ll also need Rust:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build &lt;code&gt;ord&lt;/code&gt; from source:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/ordinals/ord.git&#xA;cd ord&#xA;cargo build --release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once built, the &lt;code&gt;ord&lt;/code&gt; binary can be found at &lt;code&gt;./target/release/ord&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ord&lt;/code&gt; requires &lt;code&gt;rustc&lt;/code&gt; version 1.67.0 or later. Run &lt;code&gt;rustc --version&lt;/code&gt; to ensure you have this version. Run &lt;code&gt;rustup update&lt;/code&gt; to get the latest stable release.&lt;/p&gt; &#xA;&lt;h2&gt;Syncing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;ord&lt;/code&gt; requires a synced &lt;code&gt;bitcoind&lt;/code&gt; node with &lt;code&gt;-txindex&lt;/code&gt; to build the index of satoshi locations. &lt;code&gt;ord&lt;/code&gt; communicates with &lt;code&gt;bitcoind&lt;/code&gt; via RPC.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;bitcoind&lt;/code&gt; is run locally by the same user, without additional configuration, &lt;code&gt;ord&lt;/code&gt; should find it automatically by reading the &lt;code&gt;.cookie&lt;/code&gt; file from &lt;code&gt;bitcoind&lt;/code&gt;&#39;s datadir, and connecting using the default RPC port.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;bitcoind&lt;/code&gt; is not on mainnet, is not run by the same user, has a non-default datadir, or a non-default port, you&#39;ll need to pass additional flags to &lt;code&gt;ord&lt;/code&gt;. See &lt;code&gt;ord --help&lt;/code&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;bitcoind&lt;/code&gt; RPC Authentication&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;ord&lt;/code&gt; makes RPC calls to &lt;code&gt;bitcoind&lt;/code&gt;, which usually require a username and password.&lt;/p&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;ord&lt;/code&gt; looks a username and password in the cookie file created by &lt;code&gt;bitcoind&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The cookie file path can be configured using &lt;code&gt;--cookie-file&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ord --cookie-file /path/to/cookie/file server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, &lt;code&gt;ord&lt;/code&gt; can be supplied with a username and password on the command line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ord --bitcoin-rpc-user foo --bitcoin-rpc-pass bar server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using environment variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export ORD_BITCOIN_RPC_USER=foo&#xA;export ORD_BITCOIN_RPC_PASS=bar&#xA;ord server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or in the config file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;bitcoin_rpc_user: foo&#xA;bitcoin_rpc_pass: bar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Logging&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;ord&lt;/code&gt; uses &lt;a href=&#34;https://docs.rs/env_logger/latest/env_logger/&#34;&gt;env_logger&lt;/a&gt;. Set the &lt;code&gt;RUST_LOG&lt;/code&gt; environment variable in order to turn on logging. For example, run the server and show &lt;code&gt;info&lt;/code&gt;-level log messages and above:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ RUST_LOG=info cargo run server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;New Releases&lt;/h2&gt; &#xA;&lt;p&gt;Release commit messages use the following template:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Release x.y.z&#xA;&#xA;- Bump version: x.y.z ‚Üí x.y.z&#xA;- Update changelog&#xA;- Update dependencies&#xA;- Update database schema version&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>qarmin/czkawka</title>
    <updated>2023-06-18T02:01:49Z</updated>
    <id>tag:github.com,2023-06-18:/qarmin/czkawka</id>
    <link href="https://github.com/qarmin/czkawka" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Multi functional app to find duplicates, empty folders, similar images etc.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/41945903/102616149-66490400-4137-11eb-9cd6-813b2b070834.png&#34; alt=&#34;com github qarmin czkawka&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Czkawka&lt;/strong&gt; (&lt;em&gt;tch‚Ä¢kav‚Ä¢ka&lt;/em&gt; (IPA: [Àà ßÃëkafka]), &#34;hiccup&#34; in Polish) is a simple, fast and free app to remove unnecessary files from your computer.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Written in memory-safe Rust&lt;/li&gt; &#xA; &lt;li&gt;Amazingly fast - due to using more or less advanced algorithms and multithreading&lt;/li&gt; &#xA; &lt;li&gt;Free, Open Source without ads&lt;/li&gt; &#xA; &lt;li&gt;Multiplatform - works on Linux, Windows, macOS, FreeBSD and many more&lt;/li&gt; &#xA; &lt;li&gt;Cache support - second and further scans should be much faster than the first one&lt;/li&gt; &#xA; &lt;li&gt;CLI frontend - for easy automation&lt;/li&gt; &#xA; &lt;li&gt;GUI frontend - uses GTK 4 framework and looks similar to FSlint&lt;/li&gt; &#xA; &lt;li&gt;No spying - Czkawka does not have access to the Internet, nor does it collect any user information or statistics&lt;/li&gt; &#xA; &lt;li&gt;Multilingual - support multiple languages like Polish, English or Italian&lt;/li&gt; &#xA; &lt;li&gt;Multiple tools to use: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Duplicates - Finds duplicates based on file name, size or hash&lt;/li&gt; &#xA;   &lt;li&gt;Empty Folders - Finds empty folders with the help of an advanced algorithm&lt;/li&gt; &#xA;   &lt;li&gt;Big Files - Finds the provided number of the biggest files in given location&lt;/li&gt; &#xA;   &lt;li&gt;Empty Files - Looks for empty files across the drive&lt;/li&gt; &#xA;   &lt;li&gt;Temporary Files - Finds temporary files&lt;/li&gt; &#xA;   &lt;li&gt;Similar Images - Finds images which are not exactly the same (different resolution, watermarks)&lt;/li&gt; &#xA;   &lt;li&gt;Similar Videos - Looks for visually similar videos&lt;/li&gt; &#xA;   &lt;li&gt;Same Music - Searches for music with the same artist, album etc.&lt;/li&gt; &#xA;   &lt;li&gt;Invalid Symbolic Links - Shows symbolic links which point to non-existent files/directories&lt;/li&gt; &#xA;   &lt;li&gt;Broken Files - Finds files that are invalid or corrupted&lt;/li&gt; &#xA;   &lt;li&gt;Bad Extensions - Lists files whose content not match with their extension&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/41945903/145280350-506f7e94-4db0-4de7-a68d-6e7c26bbd2bf.gif&#34; alt=&#34;Czkawka&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported OS&lt;/h2&gt; &#xA;&lt;p&gt;Linux - Ubuntu 22.04+, Fedora 36+, Alpine Linux 3.16+, Debian 12+ and a lot of more&lt;/p&gt; &#xA;&lt;p&gt;Windows - 7, 8.1, 10, 11&lt;br&gt; MacOS - 10.15+&lt;/p&gt; &#xA;&lt;p&gt;If you are looking for older version that use GTK 3 and have support for more OS(like e.g. Ubuntu 20.04), look at &lt;a href=&#34;https://github.com/qarmin/czkawka/releases/tag/4.1.0&#34;&gt;4.1.0&lt;/a&gt; or older versions.&lt;/p&gt; &#xA;&lt;h2&gt;How do I use it?&lt;/h2&gt; &#xA;&lt;p&gt;You can find the instructions on how to use Czkawka &lt;a href=&#34;https://raw.githubusercontent.com/qarmin/czkawka/master/instructions/Instruction.md&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Some helpful tricks you can find &lt;a href=&#34;https://raw.githubusercontent.com/qarmin/czkawka/master/instructions/Instruction.md#tips-tricks-and-known-bugs&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Installation instructions with download links you can find &lt;a href=&#34;https://raw.githubusercontent.com/qarmin/czkawka/master/instructions/Installation.md&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Compilation&lt;/h2&gt; &#xA;&lt;p&gt;If you want to try and develop Czkawka or just use the latest available feature, you may want to look at the &lt;a href=&#34;https://raw.githubusercontent.com/qarmin/czkawka/master/instructions/Compilation.md&#34;&gt;&lt;strong&gt;compilation instructions&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Benchmarks&lt;/h2&gt; &#xA;&lt;p&gt;Since Czkawka is written in Rust and it aims to be a faster alternative to FSlint or DupeGuru which are written in Python, we need to compare the speed of these tools.&lt;/p&gt; &#xA;&lt;p&gt;I tested it on a 256 GB SSD and an i7-4770 CPU.&lt;/p&gt; &#xA;&lt;p&gt;I prepared a disk and performed a test without any folder exceptions and with disabled ignoring of hard links. The disk contained 363 215 files, took 221,8 GB and had 62093 duplicate files in 31790 groups which occupied 4,1 GB.&lt;/p&gt; &#xA;&lt;p&gt;I set the minimal file size to check to 1KB on all programs.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;App&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Executing Time&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;FSlint 2.4.7 (First Run)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;86s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;FSlint 2.4.7 (Second Run)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;43s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Czkawka 3.0.0 (First Run)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Czkawka 3.0.0 (Second Run)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;DupeGuru 4.1.1 (First Run)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;22s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;DupeGuru 4.1.1 (Second Run)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;21s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;I used Mprof for checking memory usage of FSlint and DupeGuru, and Heaptrack for Czkawka.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;App&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Idle Ram&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Max Operational Ram Usage&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Stabilized after search&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;FSlint 2.4.7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;62 MB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;164 MB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;158 MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Dupeguru 4.1.1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;90 MB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;170 MB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;166 MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Czkawka 3.0.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;12 MB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;122 MB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;60 MB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;In Dupeguru, I enabled checking images with different dimensions to match Czkawka behavior. Both apps use a caching mechanism, so the second scan is really fast.&lt;/p&gt; &#xA;&lt;p&gt;Similar images which check 10949 files that occupied 6.6 GB&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;App&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Scan time&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Czkawka 3.0.0 (First Run)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;276s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Czkawka 3.0.0 (Second Run)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;DupeGuru 4.1.1 (First Run)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;539s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;DupeGuru 4.1.1 (Second Run)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Similar images which check 349 image files that occupied 1.7 GB&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;App&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Scan time&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Czkawka 3.0.0 (First Run)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;54s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Czkawka 3.0.0 (Second Run)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;DupeGuru 4.1.1 (First Run)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;55s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;DupeGuru 4.1.1 (Second Run)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Comparison to other tools&lt;/h2&gt; &#xA;&lt;p&gt;Bleachbit is a master at finding and removing temporary files, while Czkawka only finds the most basic ones. So these two apps shouldn&#39;t be compared directly or be considered as an alternative to one another.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Czkawka&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;FSlint&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;DupeGuru&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Bleachbit&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Language&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Rust&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Python&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Python/Obj-C&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Python&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;OS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Lin,Mac,Win&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Lin&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Lin,Mac,Win&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Lin,Mac,Win&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Framework&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;GTK 4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PyGTK2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Qt 5 (PyQt)/Cocoa&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PyGTK3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Duplicate finder&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Empty files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Empty folders&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Temporary files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Big files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Similar images&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Similar videos&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Music duplicates(tags)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Invalid symlinks&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Broken files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Names conflict&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Invalid names/extensions&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Installed packages&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Bad ID&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Non stripped binaries&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Redundant whitespace&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Overwriting files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Multiple languages&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Cache support&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úî&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;In active development&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;No&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Other apps&lt;/h2&gt; &#xA;&lt;p&gt;There are many similar applications to Czkawka on the Internet, which do some things better and some things worse:&lt;/p&gt; &#xA;&lt;h3&gt;GUI&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/arsenetar/dupeguru&#34;&gt;DupeGuru&lt;/a&gt; - Many options to customize; great photo compare tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pixelb/fslint&#34;&gt;FSlint&lt;/a&gt; - A little outdated, but still have some tools not available in Czkawka&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ermig1979/AntiDupl&#34;&gt;AntiDupl.NET&lt;/a&gt; - Shows a lot of metadata of compared images&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/0x90d/videoduplicatefinder&#34;&gt;Video Duplicate Finder&lt;/a&gt; - Finds similar videos(surprising, isn&#39;t it), supports video thumbnails&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;CLI&lt;/h3&gt; &#xA;&lt;p&gt;Due to limited time, the biggest emphasis is on the GUI version so if you are looking for really good and feature-packed console apps, then take a look at these:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pkolaczk/fclones&#34;&gt;Fclones&lt;/a&gt; - One of the fastest tools to find duplicates; it is written also in Rust&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sahib/rmlint&#34;&gt;Rmlint&lt;/a&gt; - Nice console interface and also is feature packed&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pauldreik/rdfind&#34;&gt;RdFind&lt;/a&gt; - Fast, but written in C++ ¬Ø\_(„ÉÑ)_/¬Ø&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Contributions to this repository are welcome.&lt;/p&gt; &#xA;&lt;p&gt;You can help by creating:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bug reports - memory leaks, unexpected behavior, crashes&lt;/li&gt; &#xA; &lt;li&gt;Feature proposals - proposal to change/add/delete some features&lt;/li&gt; &#xA; &lt;li&gt;Pull Requests - implementing a new feature yourself or fixing bugs. If the change is bigger, then it&#39;s a good idea to open a new issue to discuss changes, but issues with label &lt;code&gt;PR welcome&lt;/code&gt; are already checked and accepted.&lt;/li&gt; &#xA; &lt;li&gt;Documentation - There is an &lt;a href=&#34;https://raw.githubusercontent.com/qarmin/czkawka/master/instructions/Instruction.md&#34;&gt;instruction&lt;/a&gt; which you can improve.&lt;/li&gt; &#xA; &lt;li&gt;Translations - Instruction how to translate files is available &lt;a href=&#34;https://raw.githubusercontent.com/qarmin/czkawka/master/instructions/Translations.md&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;External contributions - App use big number of external libraries like &lt;a href=&#34;https://github.com/Serial-ATA/lofty-rs&#34;&gt;lofty&lt;/a&gt;, &lt;a href=&#34;https://github.com/image-rs/image&#34;&gt;image-rs&lt;/a&gt; or &lt;a href=&#34;https://github.com/pdeljanov/Symphonia&#34;&gt;symphonia&lt;/a&gt; so improving this libraries will automatically improve Czkawka&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also help by doing other things:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Creating text articles - &lt;a href=&#34;https://www.linuxuprising.com/2021/03/find-and-remove-duplicate-files-similar.html&#34;&gt;LinuxUprising&lt;/a&gt; or &lt;a href=&#34;https://ubunlog.com/en/czkawka-finds-and-removes-empty-and-broken-duplicate-files/&#34;&gt;Ubunlog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Adding Czkawka to repositories - &lt;a href=&#34;https://pkgs.alpinelinux.org/packages?name=czkawka&amp;amp;branch=edge&#34;&gt;Alpine Linux&lt;/a&gt; or &lt;a href=&#34;https://github.com/NixOS/nixpkgs/pull/116441&#34;&gt;NixOS&lt;/a&gt; or &lt;a href=&#34;https://github.com/OpenMandrivaAssociation/czkawka&#34;&gt;OpenMandriva&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Creating videos - &lt;a href=&#34;https://www.youtube.com/watch?v=CWlRiTD4vDc&#34;&gt;First Video&lt;/a&gt; or &lt;a href=&#34;https://www.youtube.com/watch?v=V9x-pHJRmKY&#34;&gt;Spanish Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Recommending it to others&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Name&lt;/h2&gt; &#xA;&lt;p&gt;Czkawka is a Polish word which means &lt;em&gt;hiccup&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;I chose this name because I wanted to hear people speaking other languages pronounce it, so feel free to spell it the way you want.&lt;/p&gt; &#xA;&lt;p&gt;This name is not as bad as it seems, because I was also thinking about using words like &lt;em&gt;≈º√≥≈Çƒá&lt;/em&gt;, &lt;em&gt;g≈ºeg≈º√≥≈Çka&lt;/em&gt; or &lt;em&gt;≈ºo≈ÇƒÖd≈∫&lt;/em&gt;, but I gave up on these ideas because they contained Polish characters, which would cause difficulty in searching for the project.&lt;/p&gt; &#xA;&lt;p&gt;At the beginning of the program creation, if the response concerning the name was unanimously negative, I prepared myself for a possible change of the name of the program, and the opinions were extremely mixed.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Code is distributed under MIT license.&lt;/p&gt; &#xA;&lt;p&gt;Icon was created by &lt;a href=&#34;https://github.com/jannuary&#34;&gt;jannuary&lt;/a&gt; and licensed CC-BY-4.0.&lt;/p&gt; &#xA;&lt;p&gt;Windows dark theme is used from project &lt;a href=&#34;https://github.com/slypy/whitesur-gtk4-theme&#34;&gt;WhiteSur&lt;/a&gt; with MIT license.&lt;/p&gt; &#xA;&lt;p&gt;Some icons were taken from &lt;a href=&#34;https://www.reshot.com&#34;&gt;ReShot&lt;/a&gt; site and are licensed under Reshot Free License.&lt;/p&gt; &#xA;&lt;p&gt;The program is completely free to use.&lt;/p&gt; &#xA;&lt;p&gt;&#34;Gratis to uczciwa cena&#34; - &#34;Free is a fair price&#34;&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;Big thanks to P√°draig Brady, creator of fantastic FSlint, because without his work I wouldn&#39;t create this tool.&lt;/p&gt; &#xA;&lt;p&gt;Thanks also to all the people who create patches for this program, make it available on other systems, create videos, articles about it etc.&lt;/p&gt; &#xA;&lt;p&gt;Also, I really appreciate work of people that create crates on which Czkawka is based and for that I try to report bugs to make it even better.&lt;/p&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;p&gt;If you are using the app, I would appreciate a donation for its further development, which can be done &lt;a href=&#34;https://github.com/sponsors/qarmin&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>