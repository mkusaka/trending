<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-12-29T01:50:14Z</updated>
  <subtitle>Weekly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>golemcloud/golem</title>
    <updated>2025-12-29T01:50:14Z</updated>
    <id>tag:github.com,2025-12-29:/golemcloud/golem</id>
    <link href="https://github.com/golemcloud/golem" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Golem is an open source durable computing platform that makes it easy to build and deploy highly reliable distributed systems.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Golem&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/golemcloud/golem/main/golem-logo-black.jpg&#34; alt=&#34;Golem Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository contains Golem - a set of services enable you to run WebAssembly components in a distributed cloud environment.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://golem.cloud&#34;&gt;Golem Cloud&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;It is possible to start using Golem locally by using our published Docker containers. Please refer to the document link below on how to get golem OSS running using docker. &lt;a href=&#34;https://learn.golem.cloud/docs/quickstart#setting-up-golem&#34;&gt;https://learn.golem.cloud/docs/quickstart#setting-up-golem&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Once you have Golem running locally, you can use &lt;code&gt;golem-cli&lt;/code&gt; to interact with Golem services.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;cargo install golem-cli&#xA;&#xA;# component is your compiled code written in Rust, C, etc&#xA;# https://learn.golem.cloud/docs/building-templates helps you write some code and create a component - as an example&#xA;golem-cli component add --compnent-name &amp;lt;component-name&amp;gt; &amp;lt;location-to-component-file&amp;gt; &#xA;&#xA;# Now we need a worker corresponding from component, that can execute one of the functions in component&#xA;# If worker doesn&#39;t exist, it is created on the fly whey you invoke a function in component&#xA;golem-cli worker invoke-and-await --component-name &amp;lt;component-name&amp;gt; --worker-name &amp;lt;worker-name&amp;gt; --function golem:it/api.{add-item} --parameters &#39;[{&#34;product-id&#34; : &#34;foo&#34;, &#34;name&#34; : &#34;foo&#34; , &#34;price&#34; : 10, &#34;quantity&#34; : 1}]&#39;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Internally, it is as simple as &lt;code&gt;golem-cli&lt;/code&gt; using &lt;code&gt;golem-client&lt;/code&gt; sending requests to Golem Services hosted in Docker container. Therefore, you can see what&#39;s going on and troubleshoot things by inspecting docker containers.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;&#xA;+-----------------------+         +-----------------------+&#xA;|                       |         |                       |&#xA;|  Use golem-cli        |  ---&amp;gt;   |  Golem Services       |&#xA;|                       |         |  hosted in            |&#xA;|  commands             |         |  Docker container     |&#xA;|  (Send Requests)      |         |                       |&#xA;+-----------------------+         +-----------------------+&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Compiling Golem locally&lt;/h2&gt; &#xA;&lt;p&gt;Find details in the &lt;a href=&#34;https://raw.githubusercontent.com/golemcloud/golem/main/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt; about how to compile the Golem services locally.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>witnessmenow/ESP32-Cheap-Yellow-Display</title>
    <updated>2025-12-29T01:50:14Z</updated>
    <id>tag:github.com,2025-12-29:/witnessmenow/ESP32-Cheap-Yellow-Display</id>
    <link href="https://github.com/witnessmenow/ESP32-Cheap-Yellow-Display" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Building a community around a cheap ESP32 Display with a touch screen&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ESP32-Cheap-Yellow-Display&lt;/h1&gt; &#xA;&lt;p&gt;There is an ESP32 with a built in 320 x 240 2.8&#34; LCD display with a touch screen called the &#34;ESP32-2432S028R&#34;, since this doesn&#39;t roll of the tongue, I propose it should be renamed the &#34;Cheap Yellow Display&#34; or CYD for short. This display is only about $15 delivered so I think it&#39;s really good value.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/witnessmenow/ESP32-Cheap-Yellow-Display/assets/1562562/76c3d481-2523-4b6f-881c-2e29f9368cd0&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;The CYD has the following features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ESP32 (With Wifi and Bluetooth)&lt;/li&gt; &#xA; &lt;li&gt;320 x 240 LCD Display (2.8&#34;)&lt;/li&gt; &#xA; &lt;li&gt;Touch Screen (Resistive)&lt;/li&gt; &#xA; &lt;li&gt;USB for powering and programming&lt;/li&gt; &#xA; &lt;li&gt;SD Card Slot, LED and some additional pins broken out&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Who is it good for?&lt;/h2&gt; &#xA;&lt;p&gt;I think it&#39;s useful for the following types of people:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;People just getting started with working hardware&lt;/strong&gt; - as everything is already connected, there is no soldering or additional components required&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;People who are familiar with working with hardware, but are lazy&lt;/strong&gt; - (like me) Sometimes you just want to build a project without having to assemble any hardware&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;People who aren&#39;t really looking to learn anything, but just want to build some cool things&lt;/strong&gt; - More about this later.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is the purpose of this page?&lt;/h2&gt; &#xA;&lt;p&gt;So this is pretty nice hardware and a cheap price, but the software instructions/support around it is pretty poor. Just a single link to a zip file on a random website.&lt;/p&gt; &#xA;&lt;p&gt;A couple of years ago I released the &lt;a href=&#34;https://github.com/witnessmenow/ESP32-Trinity&#34;&gt;ESP32 Trinity&lt;/a&gt;, which is an open source ESP32 board for controlling Matrix panels. I think the main benefit people get out of the work I did on the Trinty is not the hardware, but the documentation, example code and ready to go projects.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;m no longer creating hardware products, but I think it would be interesting if we could create the same kind of community around this display, where people can share examples and projects made for this display.&lt;/p&gt; &#xA;&lt;h2&gt;How do I know if a display is a CYD?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://www.plantuml.com/plantuml/png/RP0nJyCm48Nt_8gZNIb3fge3LD2b2q92235UamDRE7PaNuhyxxda7DGgJBs-zxtSE-yJO-IXSzKD6-e8UeVMLyQs1DJrdA6br4JRims-4fW9LiS4bY6JS-47qBTWC052QvEayyCAvA-wS-8vi01F7mS8SVevOxJeUK9zu55QzzP_Nw-exxPmz8tHJzRRsJq4cdo3Pu98oIQsCd4O6WDIbyXF4LN-JNMsYG7UNXyXUAUTLHDfqVeMJWClUfSPrY_OOyPtO_ivUPcfnoMV3iyXJh4cj_MGJd8lEleQkvQKi9TYUT_DvbukXnraIfTQURMT39Nu8kcrXInIwQYO-gCyNwgm6al-ZneTNIRqjLokqS2UV3jqxXS0&#34; alt=&#34;CYD decision tree&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Where to buy?&lt;/h2&gt; &#xA;&lt;p&gt;Buy from wherever works out cheapest for you:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://s.click.aliexpress.com/e/_DkSpIjB&#34;&gt;Aliexpress*&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://s.click.aliexpress.com/e/_DkcmuCh&#34;&gt;Aliexpress*&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.aliexpress.com/item/1005004502250619.html&#34;&gt;Aliexpress&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.makerfabs.com/sunton-esp32-2-8-inch-tft-with-touch.html&#34;&gt;Makerfabs&lt;/a&gt; - Seems to come with a 16GB SD card. Makerfabs also stock my &lt;a href=&#34;https://github.com/witnessmenow/ESP32-Trinity&#34;&gt;ESP32 Trinity&lt;/a&gt; (NOTE there will be import due in the EU from makerfabs)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;* = Affiliate Link&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started With Your CYD&lt;/h2&gt; &#xA;&lt;p&gt;For details on how to get started with your CYD, please check out the &lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/SETUP.md&#34;&gt;Setup and Configuration&lt;/a&gt; page&lt;/p&gt; &#xA;&lt;h2&gt;Code Examples&lt;/h2&gt; &#xA;&lt;h3&gt;The Basics&lt;/h3&gt; &#xA;&lt;p&gt;A collection of examples demonstrating how to use the different features of the CYD, this is a good place to get started. &lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/Examples/Basics&#34;&gt;Check them out here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Alternative Display Libraries&lt;/h3&gt; &#xA;&lt;p&gt;The basics examples are based on the TFT_eSPI display library, but the CYD also works with other display libraries too. Here is some example code if you prefer to use an alternative Arduino library. &lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/Examples/AlternativeLibraries&#34;&gt;Check them out here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ESPHome&lt;/h3&gt; &#xA;&lt;p&gt;Some examples for using the CYD in ESPHome. &lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/Examples/ESPHome&#34;&gt;Check them out here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Additional Info and Links&lt;/h2&gt; &#xA;&lt;h3&gt;Discord&lt;/h3&gt; &#xA;&lt;p&gt;Join the CYD discussion on &lt;a href=&#34;https://discord.gg/nnezpvq&#34;&gt;my Discord channel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3DPrinting&lt;/h3&gt; &#xA;&lt;p&gt;Some examples of 3D printed stands and cases. &lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/3dModels&#34;&gt;Check them out here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Pin Information&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/PINS.md&#34;&gt;This page&lt;/a&gt; contains information about what pins are used where, and what ones are free to use.&lt;/p&gt; &#xA;&lt;h3&gt;Add-ons&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/ADDONS.md&#34;&gt;This page&lt;/a&gt; contains information about additional hardware add-ons that can add functionality to your CYD&lt;/p&gt; &#xA;&lt;h3&gt;Troubleshooting&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/TROUBLESHOOTING.md&#34;&gt;This page&lt;/a&gt; contains information about how to troubleshoot your CYD device&lt;/p&gt; &#xA;&lt;h3&gt;Hardware Mods&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/Mods/README.md&#34;&gt;This page&lt;/a&gt; contains information about some hardware mods that can be performed on the CYD to improve or change some of its functionality&lt;/p&gt; &#xA;&lt;h3&gt;Media and Video Mentions&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/MEDIA.md&#34;&gt;This page&lt;/a&gt; lists any times the CYD project was mentioned somewhere!&lt;/p&gt; &#xA;&lt;h2&gt;License Info&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed as MIT as per the &lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/LICENSE&#34;&gt;license file&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The one exception to this is the &lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/OriginalDocumentation/&#34;&gt;OriginalDocumentation&lt;/a&gt; folder, that I do not have the right to license&lt;/p&gt; &#xA;&lt;h2&gt;Other Languages&lt;/h2&gt; &#xA;&lt;p&gt;Some members of the community have ported some of this information to other languages!&lt;/p&gt; &#xA;&lt;p&gt;Please note: I can&#39;t gaurantee the accuracy of the translation, how up to date they are or the content on them in general.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/usini/ESP32-Cheap-Yellow-Display-Documentation-FR&#34;&gt;French / Française&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/paelzer/ESP32-Cheap-Yellow-Display-Documentation-DE&#34;&gt;German / Deutsch&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you would like to contribure a translation, please name the repo with the language name or code in the repo name and you can link it here.&lt;/p&gt; &#xA;&lt;h2&gt;Help Support what I do!&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/witnessmenow/&#34;&gt;If you enjoy my work, please consider becoming a Github sponsor!&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>