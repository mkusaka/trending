<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-22T02:00:48Z</updated>
  <subtitle>Weekly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ArroyoSystems/arroyo</title>
    <updated>2023-10-22T02:00:48Z</updated>
    <id>tag:github.com,2023-10-22:/ArroyoSystems/arroyo</id>
    <link href="https://github.com/ArroyoSystems/arroyo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Distributed stream processing engine in Rust&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ArroyoSystems/arroyo/master/docs/images/arroyo_logo.png&#34; width=&#34;400px&#34; alt=&#34;Arroyo&#34;&gt; &lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt; &lt;a href=&#34;https://arroyo.dev/&#34;&gt;Arroyo Cloud&lt;/a&gt; | &lt;a href=&#34;https://doc.arroyo.dev/getting-started&#34;&gt;Getting started&lt;/a&gt; | &lt;a href=&#34;https://doc.arroyo.dev&#34;&gt;Docs&lt;/a&gt; | &lt;a href=&#34;https://discord.gg/cjCr5rVmyR&#34;&gt;Discord&lt;/a&gt; | &lt;a href=&#34;https://arroyo.dev&#34;&gt;Website&lt;/a&gt; &lt;/h4&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/ArroyoSystems/arroyo/raw/master/LICENSE-APACHE&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-MIT%2FApache--2.0-orange&#34; alt=&#34;Arroyo is dual-licensed under Apache 2 and MIT licenses.&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/ArroyoSystems/arroyo/raw/master/CONTRIBUTING.md&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/PRs-Welcome-brightgreen&#34; alt=&#34;PRs welcome!&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/ArroyoSystems/arroyo/commits&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/commit-activity/m/ArroyoSystems/arroyo&#34; alt=&#34;git commit activity&#34;&gt; &lt;/a&gt; &lt;img alt=&#34;CI&#34; src=&#34;https://github.com/ArroyoSystems/arroyo/actions/workflows/ci.yml/badge.svg?sanitize=true&#34;&gt; &lt;a href=&#34;https://github.com/ArroyoSystems/arroyo/releases&#34;&gt; &lt;img alt=&#34;GitHub release (latest by date)&#34; src=&#34;https://img.shields.io/github/v/release/ArroyoSystems/arroyo?display_name=release&#34;&gt; &lt;/a&gt; &lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://arroyo.dev&#34;&gt;Arroyo&lt;/a&gt; is a distributed stream processing engine written in Rust, designed to efficiently perform stateful computations on streams of data. Unlike traditional batch processing, streaming engines can operate on both bounded and unbounded sources, emitting results as soon as they are available.&lt;/p&gt; &#xA;&lt;p&gt;In short: Arroyo lets you ask complex questions of high-volume real-time data with subsecond results.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ArroyoSystems/arroyo/master/docs/images/header_image.png&#34; alt=&#34;running job&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;🦀 SQL and Rust pipelines&lt;/p&gt; &#xA;&lt;p&gt;🚀 Scales up to millions of events per second&lt;/p&gt; &#xA;&lt;p&gt;🪟 Stateful operations like windows and joins&lt;/p&gt; &#xA;&lt;p&gt;🔥State checkpointing for fault-tolerance and recovery of pipelines&lt;/p&gt; &#xA;&lt;p&gt;🕒 Timely stream processing via the &lt;a href=&#34;https://www.oreilly.com/radar/the-world-beyond-batch-streaming-101/&#34;&gt;Dataflow model&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Use cases&lt;/h2&gt; &#xA;&lt;p&gt;Some example use cases include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Detecting fraud and security incidents&lt;/li&gt; &#xA; &lt;li&gt;Real-time product and business analytics&lt;/li&gt; &#xA; &lt;li&gt;Real-time ingestion into your data warehouse or data lake&lt;/li&gt; &#xA; &lt;li&gt;Real-time ML feature generation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why Arroyo&lt;/h2&gt; &#xA;&lt;p&gt;There are already a number of existing streaming engines out there, including &lt;a href=&#34;https://flink.apache.org&#34;&gt;Apache Flink&lt;/a&gt;, &lt;a href=&#34;https://spark.apache.org/docs/latest/streaming-programming-guide.html&#34;&gt;Spark Streaming&lt;/a&gt;, and &lt;a href=&#34;https://kafka.apache.org/documentation/streams/&#34;&gt;Kafka Streams&lt;/a&gt;. Why create a new one?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Serverless operations&lt;/em&gt;: Arroyo pipelines are designed to run in modern cloud environments, supporting seamless scaling, recovery, and rescheduling&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;High performance SQL&lt;/em&gt;: SQL is a first-class concern, with consistently excellent performance&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Designed for non-experts&lt;/em&gt;: Arroyo cleanly separates the pipeline APIs from its internal implementation. You don&#39;t need to be a streaming expert to build real-time data pipelines.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;You can get started with a single node Arroyo cluster by running the following docker command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker run -p 8000:8000 ghcr.io/arroyosystems/arroyo-single:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or if you have Cargo installed, you can use the &lt;code&gt;arroyo&lt;/code&gt; cli:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cargo install arroyo&#xA;$ arroyo start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, load the Web UI at &lt;a href=&#34;http://localhost:8000&#34;&gt;http://localhost:8000&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For a more in-depth guide, see the &lt;a href=&#34;https://doc.arroyo.dev/getting-started&#34;&gt;getting started guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Once you have Arroyo running, follow the &lt;a href=&#34;https://doc.arroyo.dev/tutorial&#34;&gt;tutorial&lt;/a&gt; to create your first real-time pipeline.&lt;/p&gt; &#xA;&lt;h2&gt;Developing Arroyo&lt;/h2&gt; &#xA;&lt;p&gt;We love contributions from the community! See the &lt;a href=&#34;https://doc.arroyo.dev/developing/dev-setup&#34;&gt;developer setup&lt;/a&gt; guide to get started, and reach out to the team on &lt;a href=&#34;https://discord.gg/cjCr5rVmyR&#34;&gt;discord&lt;/a&gt; or create an issue.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/cjCr5rVmyR&#34;&gt;Discord&lt;/a&gt; — support and project discussion&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArroyoSystems/arroyo/issues&#34;&gt;GitHub issues&lt;/a&gt; — bugs and feature requests&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arroyo.dev/blog&#34;&gt;Arroyo Blog&lt;/a&gt; — updates from the Arroyo team&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Arroyo Cloud&lt;/h2&gt; &#xA;&lt;p&gt;Don&#39;t want to self-host? Arroyo Systems provides fully-managed cloud hosting for Arroyo. Sign up &lt;a href=&#34;https://arroyo.dev&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>paritytech/polkadot-sdk</title>
    <updated>2023-10-22T02:00:48Z</updated>
    <id>tag:github.com,2023-10-22:/paritytech/polkadot-sdk</id>
    <link href="https://github.com/paritytech/polkadot-sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Parity Polkadot Blockchain SDK&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: We have recently made significant changes to our repository structure. In order to streamline our development process and foster better contributions, we have merged three separate repositories Cumulus, Substrate and Polkadot into this repository. Read more about the changes &lt;a href=&#34;https://polkadot-public.notion.site/Polkadot-SDK-FAQ-fbc4cecc2c46443fb37b9eeec2f0d85f&#34;&gt; here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Polkadot SDK&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cms.polkadot.network/content/images/2021/06/1-xPcVR_fkITd0ssKBvJ3GMw.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://substrate.stackexchange.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/StackExchange-Community%20&amp;amp;%20Support-222222?logo=stackexchange&#34; alt=&#34;StackExchange&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Polkadot SDK repository provides all the resources needed to start building on the Polkadot network, a multi-chain blockchain platform that enables different blockchains to interoperate and share information in a secure and scalable way. The Polkadot SDK comprises three main pieces of software:&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paritytech/polkadot-sdk/master/polkadot/&#34;&gt;Polkadot&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://forum.polkadot.network/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Polkadot_Forum-e6007a?logo=polkadot&#34; alt=&#34;PolkadotForum&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/paritytech/polkadot-sdk/master/polkadot/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPL3-blue&#34; alt=&#34;Polkadot-license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Implementation of a node for the &lt;a href=&#34;https://polkadot.network&#34;&gt;https://polkadot.network&lt;/a&gt; in Rust, using the Substrate framework. This directory currently contains runtimes for the Polkadot, Kusama, Westend, and Rococo networks. In the future, these will be relocated to the &lt;a href=&#34;https://github.com/polkadot-fellows/runtimes/&#34;&gt;&lt;code&gt;runtimes&lt;/code&gt;&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paritytech/polkadot-sdk/master/substrate/&#34;&gt;Substrate&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://paritytech.github.io/substrate/master/substrate/index.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Rust_Docs-Substrate-24CC85?logo=rust&#34; alt=&#34;SubstrateRustDocs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/paritytech/polkadot-sdk/master/substrate/README.md#LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPL3%2FApache2.0-blue&#34; alt=&#34;Substrate-license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Substrate is the primary blockchain SDK used by developers to create the parachains that make up the Polkadot network. Additionally, it allows for the development of self-sovereign blockchains that operate completely independently of Polkadot.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/paritytech/polkadot-sdk/master/cumulus/&#34;&gt;Cumulus&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://paritytech.github.io/cumulus/cumulus_client_collator/index.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Rust_Docs-Cumulus-222222?logo=rust&#34; alt=&#34;CumulusRustDocs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/paritytech/polkadot-sdk/master/cumulus/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPL3-blue&#34; alt=&#34;Cumulus-license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Cumulus is a set of tools for writing Substrate-based Polkadot parachains.&lt;/p&gt; &#xA;&lt;h2&gt;Upstream Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;Below are the primary upstream dependencies utilized in this project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://crates.io/crates/parity-scale-codec&#34;&gt;&lt;code&gt;parity-scale-codec&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://crates.io/crates/parity-db&#34;&gt;&lt;code&gt;parity-db&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/paritytech/parity-common&#34;&gt;&lt;code&gt;parity-common&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/paritytech/trie&#34;&gt;&lt;code&gt;trie&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;The security policy and procedures can be found in &lt;a href=&#34;https://raw.githubusercontent.com/paritytech/polkadot-sdk/master/docs/SECURITY.md&#34;&gt;docs/SECURITY.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing &amp;amp; Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Ensure you follow our &lt;a href=&#34;https://raw.githubusercontent.com/paritytech/polkadot-sdk/master/docs/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt;. In every interaction and contribution, this project adheres to the &lt;a href=&#34;https://raw.githubusercontent.com/paritytech/polkadot-sdk/master/docs/CODE_OF_CONDUCT.md&#34;&gt;Contributor Covenant Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Additional Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For monitoring upcoming changes and current proposals related to the technical implementation of the Polkadot network, visit the &lt;a href=&#34;https://github.com/polkadot-fellows/RFCs&#34;&gt;&lt;code&gt;Requests for Comment (RFC)&lt;/code&gt;&lt;/a&gt; repository. While it&#39;s maintained by the Polkadot Fellowship, the RFC process welcomes contributions from everyone.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>web-infra-dev/oxc</title>
    <updated>2023-10-22T02:00:48Z</updated>
    <id>tag:github.com,2023-10-22:/web-infra-dev/oxc</id>
    <link href="https://github.com/web-infra-dev/oxc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⚓ A suite of high-performance tools for JavaScript and TypeScript written in Rust.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/Boshen/oxc-assets/main/preview-dark-transparent.png&#34; width=&#34;600&#34;&gt; &#xA;  &lt;img alt=&#34;OXC Logo&#34; src=&#34;https://raw.githubusercontent.com/Boshen/oxc-assets/main/preview-white.png&#34; width=&#34;600&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/web-infra-dev/oxc/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;MIT licensed&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/web-infra-dev/oxc/actions/workflows/ci.yml?query=event%3Apush+branch%3Amain&#34;&gt;&lt;img src=&#34;https://github.com/web-infra-dev/oxc/actions/workflows/ci.yml/badge.svg?event=push&amp;amp;branch=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/web-infra-dev/oxc&#34;&gt;&lt;img src=&#34;https://codecov.io/github/web-infra-dev/oxc/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Code Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/Boshen&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/sponsors/Boshen&#34; alt=&#34;Sponsors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://discord.gg/9uXCAwqQZW&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1079625926024900739?logo=discord&amp;amp;label=Discord&#34; alt=&#34;Discord chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://web-infra-dev.github.io/oxc/playground&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Playground-blue?color=9BE4E0&#34; alt=&#34;Playground&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;⚓ Oxc&lt;/h2&gt; &#xA;&lt;p&gt;The Oxidation Compiler is creating a suite of high-performance tools for JavaScript and TypeScript.&lt;/p&gt; &#xA;&lt;p&gt;Oxc is building a parser, linter, formatter, transpiler, minifier, resolver ... all written in Rust.&lt;/p&gt; &#xA;&lt;h2&gt;💡 Philosophy&lt;/h2&gt; &#xA;&lt;p&gt;This project shares the same philosophies as &lt;a href=&#34;https://biomejs.dev/&#34;&gt;Biome&lt;/a&gt; and &lt;a href=&#34;https://beta.ruff.rs&#34;&gt;Ruff&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;JavaScript tooling could be rewritten in a more performant language.&lt;/li&gt; &#xA; &lt;li&gt;An integrated toolchain can tap into efficiencies that are not available to a disparate set of tools.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;⚡️ Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;The linter is ready to catch mistakes for you. It comes with over 60 default rules and no configuration is required.&lt;/p&gt; &#xA;&lt;p&gt;To start using, install &lt;a href=&#34;https://www.npmjs.com/package/oxlint&#34;&gt;oxlint&lt;/a&gt; or via &lt;code&gt;npx&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx oxlint@latest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To give you an idea of its capabilities, here is an example from the &lt;a href=&#34;https://github.com/microsoft/vscode&#34;&gt;vscode&lt;/a&gt; repository, which finishes linting 4000+ files in 0.5 seconds.&lt;/p&gt; &#xA;&lt;p float=&#34;left&#34; align=&#34;left&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Boshen/oxc-assets/main/linter-screenshot.png&#34; width=&#34;60%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;⚡️ Performance&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The parser aim to be the fastest Rust-based ready-for-production parser.&lt;/li&gt; &#xA; &lt;li&gt;The linter is more than 50 times faster than &lt;a href=&#34;https://eslint.org/&#34;&gt;ESLint&lt;/a&gt;, and scales with the number of CPU cores.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p float=&#34;left&#34; align=&#34;middle&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Boshen/bench-javascript-parser-written-in-rust/main/bar-graph.svg?sanitize=true&#34; width=&#34;49%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Boshen/bench-javascript-linter/main/bar-graph.svg?sanitize=true&#34; width=&#34;49%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;⌨️ Programming Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Rust&lt;/h3&gt; &#xA;&lt;p&gt;Individual crates are published, you may use them to build your own JavaScript tools.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The umbrella crate &lt;a href=&#34;https://docs.rs/oxc&#34;&gt;oxc&lt;/a&gt; exports all public crates from this repository.&lt;/li&gt; &#xA; &lt;li&gt;The AST and parser crates &lt;a href=&#34;https://docs.rs/oxc_ast&#34;&gt;oxc_ast&lt;/a&gt; and &lt;a href=&#34;https://docs.rs/oxc_parser&#34;&gt;oxc_parser&lt;/a&gt; are production ready.&lt;/li&gt; &#xA; &lt;li&gt;See &lt;code&gt;crates/*/examples&lt;/code&gt; for example usage.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;While Rust has gained a reputation for its comparatively slower compilation speed, we have dedicated significant effort to fine-tune the Rust compilation speed. Our aim is to minimize any impact on your development workflow, ensuring that developing your own Oxc based tools remains a smooth and efficient experience.&lt;/p&gt; &#xA;&lt;p&gt;This is demonstrated by our &lt;a href=&#34;https://github.com/web-infra-dev/oxc/actions/workflows/ci.yml?query=branch%3Amain&#34;&gt;CI runs&lt;/a&gt;, where warm runs complete in 5 minutes.&lt;/p&gt; &#xA;&lt;h3&gt;Node.js&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You may use the parser via napi: &lt;a href=&#34;https://www.npmjs.com/package/@oxidation-compiler/napi&#34;&gt;@oxidation-compiler/napi&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🎯 Tools&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/web-infra-dev/oxc/main/#-ast-and-parser&#34;&gt;AST and Parser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/web-infra-dev/oxc/main/#-linter&#34;&gt;Linter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/web-infra-dev/oxc/main/#-resolver&#34;&gt;Resolver&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/web-infra-dev/oxc/main/#-minifier&#34;&gt;Minifier&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/web-infra-dev/oxc/main/#-formatter&#34;&gt;Formatter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/web-infra-dev/oxc/main/#-transpiler&#34;&gt;Transpiler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/web-infra-dev/oxc/main/#-ezno-type-checker&#34;&gt;Ezno Type Checker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🔸 AST and Parser&lt;/h3&gt; &#xA;&lt;p&gt;Oxc maintains its own AST and parser, which is by far the fastest and most conformant JavaScript and TypeScript (including JSX and TSX) parser written in Rust.&lt;/p&gt; &#xA;&lt;p&gt;As the parser often represents a key performance bottleneck in JavaScript tooling, any minor improvements can have a cascading effect on our downstream tools. By developing our parser, we have the opportunity to explore and implement well-researched performance techniques.&lt;/p&gt; &#xA;&lt;p&gt;While many existing JavaScript tools rely on &lt;a href=&#34;https://github.com/estree/estree&#34;&gt;estree&lt;/a&gt; as their AST specification, a notable drawback is its abundance of ambiguous nodes. This ambiguity often leads to confusion during development with &lt;a href=&#34;https://github.com/estree/estree&#34;&gt;estree&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The Oxc AST differs slightly from the &lt;a href=&#34;https://github.com/estree/estree&#34;&gt;estree&lt;/a&gt; AST by removing ambiguous nodes and introducing distinct types. For example, instead of using a generic &lt;a href=&#34;https://github.com/estree/estree&#34;&gt;estree&lt;/a&gt; &lt;code&gt;Identifier&lt;/code&gt;, the Oxc AST provides specific types such as &lt;code&gt;BindingIdentifier&lt;/code&gt;, &lt;code&gt;IdentifierReference&lt;/code&gt;, and &lt;code&gt;IdentifierName&lt;/code&gt;. This clear distinction greatly enhances the development experience by aligning more closely with the ECMAScript specification.&lt;/p&gt; &#xA;&lt;h4&gt;🏆 Parser Performance&lt;/h4&gt; &#xA;&lt;p&gt;Our &lt;a href=&#34;https://github.com/Boshen/bench-javascript-parser-written-in-rust&#34;&gt;benchmark&lt;/a&gt; reveals that the Oxc parser surpasses the speed of the &lt;a href=&#34;https://swc.rs&#34;&gt;swc&lt;/a&gt; parser by approximately 2 times and the &lt;a href=&#34;https://biomejs.dev/&#34;&gt;Biome&lt;/a&gt; parser by 3 times.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How is it so fast?&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;AST is allocated in a memory arena (&lt;a href=&#34;https://crates.io/crates/bumpalo&#34;&gt;bumpalo&lt;/a&gt;) for fast AST memory allocation and deallocation.&lt;/li&gt; &#xA;  &lt;li&gt;Short strings are inlined by &lt;a href=&#34;https://crates.io/crates/compact_str&#34;&gt;CompactString&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;No other heap allocations are done except the above two.&lt;/li&gt; &#xA;  &lt;li&gt;Scope binding, symbol resolution and some syntax errors are not done in the parser, they are delegated to the semantic analyzer.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;🔸 Linter&lt;/h3&gt; &#xA;&lt;p&gt;The linter embraces convention over configuration, eliminating the need for extensive configuration and plugin setup. Unlike other linters like &lt;a href=&#34;https://eslint.org/&#34;&gt;ESLint&lt;/a&gt;, which often require intricate configurations and plugin installations (e.g. &lt;a href=&#34;https://typescript-eslint.io&#34;&gt;@typescript-eslint&lt;/a&gt;), our linter only requires a single command that you can immediately run on your codebase:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx oxlint@latest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We also plan to port essential plugins such as &lt;a href=&#34;https://www.npmjs.com/package/eslint-plugin-import&#34;&gt;eslint-plugin-import&lt;/a&gt; and &lt;a href=&#34;https://www.npmjs.com/package/eslint-plugin-jest&#34;&gt;eslint-plugin-jest&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;🏆 Linter Performance&lt;/h4&gt; &#xA;&lt;p&gt;The linter is 50 - 100 times faster than &lt;a href=&#34;https://eslint.org/&#34;&gt;ESLint&lt;/a&gt; depending on the number of rules and number of CPU cores used. It completes in less than a second for most codebases with a few hundred files and completes in a few seconds for larger monorepos. See &lt;a href=&#34;https://github.com/Boshen/bench-javascript-linter&#34;&gt;bench-javascript-linter&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;As an upside, the binary is approximately 3MB, whereas &lt;a href=&#34;https://eslint.org/&#34;&gt;ESLint&lt;/a&gt; and its associated plugin dependencies can easily exceed 100.&lt;/p&gt; &#xA;&lt;p&gt;You may also download the linter binary from the &lt;a href=&#34;https://github.com/web-infra-dev/oxc/releases/latest&#34;&gt;latest release tag&lt;/a&gt; as a standalone binary, this lets you run the linter without a Node.js installation in your CI.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How is it so fast?&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Oxc parser is used.&lt;/li&gt; &#xA;  &lt;li&gt;AST visit is a fast operation due to linear memory scan from the memory arena.&lt;/li&gt; &#xA;  &lt;li&gt;Files are linted in a multi-threaded environment, so scales with the total number of CPU cores.&lt;/li&gt; &#xA;  &lt;li&gt;Every single lint rule is tuned for performance.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Linter Plugin&lt;/h4&gt; &#xA;&lt;p&gt;We are currently developing a DSL-based plugin system. The plugin system uses &lt;a href=&#34;https://github.com/obi1kenobi/trustfall&#34;&gt;trustfall&lt;/a&gt; as its query engine and a subset of GraphQL as its query language.&lt;/p&gt; &#xA;&lt;p&gt;You will not need to use JavaScript or Rust to write a plugin, this is useful for QAs and security researchers.&lt;/p&gt; &#xA;&lt;h3&gt;🔸 Resolver&lt;/h3&gt; &#xA;&lt;p&gt;Module resolution plays a crucial role in JavaScript tooling, especially for tasks like multi-file analysis or bundling. However, it can often become a performance bottleneck. To address this, we are actively working on porting &lt;a href=&#34;https://github.com/webpack/enhanced-resolve&#34;&gt;enhanced-resolve&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/eslint-plugin-import&#34;&gt;eslint-plugin-import&lt;/a&gt; will be our first application for the resolver, since it is currently a performance and complexity blocker for a lot of projects.&lt;/p&gt; &#xA;&lt;h3&gt;🔸 Transpiler&lt;/h3&gt; &#xA;&lt;p&gt;A transpiler is responsible for turning higher versions of ECMAScript to a lower version that can be used in older browsers. We are currently focusing on an esnext to es2015 transpiler. See the &lt;a href=&#34;https://github.com/web-infra-dev/oxc/issues/974&#34;&gt;umbrella issue&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h3&gt;🔸 Minifier&lt;/h3&gt; &#xA;&lt;p&gt;JavaScript minification plays a crucial role in optimizing website performance as it reduces the amount of data sent to users, resulting in faster page loads. This holds tremendous economic value, particularly for e-commerce websites, where every second can equate to millions of dollars.&lt;/p&gt; &#xA;&lt;p&gt;However, existing minifiers typically require a trade-off between compression quality and speed. You have to choose between the slowest for the best compression or the fastest for less compression. But what if we could develop a faster minifier without compromising on compression?&lt;/p&gt; &#xA;&lt;p&gt;We are actively working on a prototype that aims to achieve this goal, by porting all test cases from well-known minifiers such as &lt;a href=&#34;https://github.com/google/closure-compiler&#34;&gt;google-closure-compiler&lt;/a&gt;, &lt;a href=&#34;https://terser.org&#34;&gt;terser&lt;/a&gt;, &lt;a href=&#34;https://esbuild.github.io/&#34;&gt;esbuild&lt;/a&gt;, and &lt;a href=&#34;https://github.com/tdewolff/minify&#34;&gt;tdewolff-minify&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Preliminary results indicate that we are on track to achieve our objectives. With the Oxc minifier, you can expect faster minification times without sacrificing compression quality.&lt;/p&gt; &#xA;&lt;h3&gt;🔸 Formatter&lt;/h3&gt; &#xA;&lt;p&gt;While &lt;a href=&#34;https://github.com/prettier/prettier&#34;&gt;prettier&lt;/a&gt; has established itself as the de facto code formatter for JavaScript, there is a significant demand in the developer community for a less opinionated alternative. Recognizing this need, our ambition is to undertake research and development to create a new JavaScript formatter that offers increased flexibility and customization options. Unfortunately we are currently lacking the resources to do so.&lt;/p&gt; &#xA;&lt;h3&gt;🔸 Ezno Type Checker&lt;/h3&gt; &#xA;&lt;p&gt;Developed by @kaleidawave, &lt;a href=&#34;https://github.com/kaleidawave/ezno&#34;&gt;ezno&lt;/a&gt; is a TypeScript checker written in Rust with a focus on static analysis and runtime performance. You may read the &lt;a href=&#34;https://kaleidawave.github.io/posts/introducing-ezno/&#34;&gt;announcement blog post&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;The type checker is available via &lt;code&gt;npx oxidation-compiler@latest check path&lt;/code&gt; and the &lt;a href=&#34;https://web-infra-dev.github.io/oxc/playground&#34;&gt;playground&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;✍️ Contribute&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/web-infra-dev/oxc/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for guidance.&lt;/p&gt; &#xA;&lt;p&gt;Check out some of the &lt;a href=&#34;https://github.com/web-infra-dev/oxc/contribute&#34;&gt;good first issues&lt;/a&gt; or ask us on &lt;a href=&#34;https://discord.gg/9uXCAwqQZW&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are unable to contribute by code, you can still participate by:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add a &lt;a href=&#34;https://github.com/web-infra-dev/oxc/stargazers&#34;&gt;GitHub Star&lt;/a&gt; to the project.&lt;/li&gt; &#xA; &lt;li&gt;Join us on &lt;a href=&#34;https://discord.gg/9uXCAwqQZW&#34;&gt;Discord&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/boshen_c&#34;&gt;Follow me on twitter&lt;/a&gt; and tweet about this project.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📚 Learning Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;My small tutorial on &lt;a href=&#34;https://boshen.github.io/javascript-parser-in-rust/&#34;&gt;how to write a JavaScript Parser in Rust&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;My small article &lt;a href=&#34;https://rustmagazine.org/issue-3/javascript-compiler/&#34;&gt;Pursuit of Performance on Building a JavaScript Compiler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://craftinginterpreters.com&#34;&gt;Crafting Interpreters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vimeo.com/649009599&#34;&gt;Andrew Kelley - Practical DOD&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🧑‍💻 Maintenance&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Oxc is currently being developed and maintained by project lead &lt;a href=&#34;https://github.com/boshen&#34;&gt;Boshen&lt;/a&gt; with the help of &lt;a href=&#34;https://github.com/web-infra-dev/oxc/graphs/contributors&#34;&gt;contributors&lt;/a&gt; from all over the world&lt;/li&gt; &#xA; &lt;li&gt;APIs should be simple and well-documented&lt;/li&gt; &#xA; &lt;li&gt;All performance issues (runtime and compilation speed) are considered as bugs in this project&lt;/li&gt; &#xA; &lt;li&gt;Third-party dependencies should be minimal&lt;/li&gt; &#xA; &lt;li&gt;Code coverage should be monitored for unused code. Aim for 99% code coverage&lt;/li&gt; &#xA; &lt;li&gt;Embrace data-oriented design&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🤝 Credits&lt;/h2&gt; &#xA;&lt;p&gt;This project was incubated with the assistance of these exceptional mentors and their projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://biomejs.dev/&#34;&gt;Biome&lt;/a&gt; - &lt;a href=&#34;https://github.com/ematipico&#34;&gt;@ematipico&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://beta.ruff.rs&#34;&gt;Ruff&lt;/a&gt; - &lt;a href=&#34;https://github.com/charliermarsh&#34;&gt;@charliermarsh&lt;/a&gt;, &lt;a href=&#34;https://github.com/MichaReiser&#34;&gt;@MichaReiser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://quick-lint-js.com&#34;&gt;quick-lint-js&lt;/a&gt; - &lt;a href=&#34;https://github.com/strager&#34;&gt;@strager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://package.elm-lang.org/packages/jfmengels/elm-review/latest&#34;&gt;elm-review&lt;/a&gt; - &lt;a href=&#34;https://github.com/jfmengels&#34;&gt;@jfmengels&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Special thanks go to&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/domonji&#34;&gt;@domonji&lt;/a&gt; for contribution to the TypeScript parser&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/guan-wy&#34;&gt;@guan-wy&lt;/a&gt; for the &lt;a href=&#34;https://github.com/Boshen/oxc-assets&#34;&gt;project logo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And also&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kaleidawave&#34;&gt;@kaleidawave&lt;/a&gt; for &lt;a href=&#34;https://raw.githubusercontent.com/web-infra-dev/oxc/main/#-ezno-type-checker&#34;&gt;Ezno Type Checker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zackradisic&#34;&gt;@zackradisic&lt;/a&gt; for &lt;a href=&#34;https://github.com/zackradisic/tyvm&#34;&gt;tyvm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/u9g&#34;&gt;@u9g&lt;/a&gt; for the work in progress &lt;a href=&#34;https://raw.githubusercontent.com/web-infra-dev/oxc/main/crates/oxc_linter_plugin&#34;&gt;oxc_linter_plugin&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📖 License&lt;/h2&gt; &#xA;&lt;p&gt;Oxc is free and open-source software licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/web-infra-dev/oxc/main/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Oxc partially copies code from the following projects, their licenses are listed in &lt;a href=&#34;https://raw.githubusercontent.com/web-infra-dev/oxc/main/THIRD-PARTY-LICENSE&#34;&gt;&lt;strong&gt;Third-party library licenses&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;License&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/eslint/eslint&#34;&gt;eslint/eslint&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/eslint/eslint/raw/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/typescript-eslint/typescript-eslint&#34;&gt;typescript-eslint/typescript-eslint&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/typescript-eslint/typescript-eslint/raw/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/import-js/eslint-plugin-import&#34;&gt;import-js/eslint-plugin-import&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/import-js/eslint-plugin-import/raw/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jest-community/eslint-plugin-jest&#34;&gt;jest-community/eslint-plugin-jest&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jest-community/eslint-plugin-jest/raw/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/microsoft/TypeScript&#34;&gt;microsoft/TypeScript&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/microsoft/TypeScript/raw/main/LICENSE.txt&#34;&gt;Apache 2.0&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rome/tools&#34;&gt;rome/tools&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rome/tools/raw/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mozilla-spidermonkey/jsparagus&#34;&gt;mozilla-spidermonkey/jsparagus&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mozilla-spidermonkey/jsparagus/raw/master/LICENSE-MIT&#34;&gt;MIT&lt;/a&gt; &lt;a href=&#34;https://github.com/mozilla-spidermonkey/jsparagus/raw/master/LICENSE-APACHE-2.0&#34;&gt;Apache 2.0&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acornjs/acorn&#34;&gt;acorn&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/acornjs/acorn/raw/master/acorn/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zkat/miette&#34;&gt;zkat/miette&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zkat/miette/raw/main/LICENSE&#34;&gt;Apache 2.0&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/sindresorhus/globals&#34;&gt;sindresorhus/globals&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/sindresorhus/globals/raw/main/license&#34;&gt;MIT&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/terser/terser&#34;&gt;terser&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/terser/terser/raw/master/LICENSE&#34;&gt;BSD&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/evanw/esbuild&#34;&gt;evanw/esbuild&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/evanw/esbuild/raw/main/LICENSE.md&#34;&gt;MIT&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/google/closure-compiler&#34;&gt;google/closure-compiler&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/google/closure-compiler#closure-compiler-license&#34;&gt;Apache 2.0&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/tdewolff/minify&#34;&gt;tdewolff/minify&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/tdewolff/minify/raw/master/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/parcel-bundler/parcel&#34;&gt;parcel-bundler/parcel&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/parcel-bundler/parcel/raw/v2/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dividab/tsconfig-paths&#34;&gt;dividab/tsconfig-paths&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dividab/tsconfig-paths/raw/master/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/tmccombs/json-comments-rs&#34;&gt;tmccombs/json-comments-rs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/tmccombs/json-comments-rs/raw/main/LICENSE&#34;&gt;Apache 2.0&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
</feed>