<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-21T01:46:50Z</updated>
  <subtitle>Weekly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cloudflare/pingora</title>
    <updated>2024-07-21T01:46:50Z</updated>
    <id>tag:github.com,2024-07-21:/cloudflare/pingora</id>
    <link href="https://github.com/cloudflare/pingora" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A library for building fast, reliable and evolvable network services.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pingora&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cloudflare/pingora/main/docs/assets/pingora_banner.png&#34; alt=&#34;Pingora banner image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is Pingora&lt;/h2&gt; &#xA;&lt;p&gt;Pingora is a Rust framework to &lt;a href=&#34;https://blog.cloudflare.com/pingora-open-source&#34;&gt;build fast, reliable and programmable networked systems&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Pingora is battle tested as it has been serving more than 40 million Internet requests per second for &lt;a href=&#34;https://blog.cloudflare.com/how-we-built-pingora-the-proxy-that-connects-cloudflare-to-the-internet&#34;&gt;more than a few years&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Feature highlights&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Async Rust: fast and reliable&lt;/li&gt; &#xA; &lt;li&gt;HTTP 1/2 end to end proxy&lt;/li&gt; &#xA; &lt;li&gt;TLS over OpenSSL or BoringSSL&lt;/li&gt; &#xA; &lt;li&gt;gRPC and websocket proxying&lt;/li&gt; &#xA; &lt;li&gt;Graceful reload&lt;/li&gt; &#xA; &lt;li&gt;Customizable load balancing and failover strategies&lt;/li&gt; &#xA; &lt;li&gt;Support for a variety of observability tools&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reasons to use Pingora&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt; is your top priority: Pingora is a more memory safe alternative for services that are written in C/C++&lt;/li&gt; &#xA; &lt;li&gt;Your service is &lt;strong&gt;performance-sensitive&lt;/strong&gt;: Pingora is fast and efficient&lt;/li&gt; &#xA; &lt;li&gt;Your service requires extensive &lt;strong&gt;customization&lt;/strong&gt;: The APIs Pingora proxy framework provides are highly programmable&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Getting started&lt;/h1&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/pingora/main/docs/quick_start.md&#34;&gt;quick starting guide&lt;/a&gt; to see how easy it is to build a load balancer.&lt;/p&gt; &#xA;&lt;p&gt;Our &lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/pingora/main/docs/user_guide/index.md&#34;&gt;user guide&lt;/a&gt; covers more topics such as how to configure and run Pingora servers, as well as how to build custom HTTP servers and proxy logic on top of Pingora&#39;s framework.&lt;/p&gt; &#xA;&lt;p&gt;API docs are also available for all the crates.&lt;/p&gt; &#xA;&lt;h1&gt;Notable crates in this workspace&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pingora: the &#34;public facing&#34; crate to build networked systems and proxies&lt;/li&gt; &#xA; &lt;li&gt;Pingora-core: this crate defines the protocols, functionalities and basic traits&lt;/li&gt; &#xA; &lt;li&gt;Pingora-proxy: the logic and APIs to build HTTP proxies&lt;/li&gt; &#xA; &lt;li&gt;Pingora-error: the common error type used across Pingora crates&lt;/li&gt; &#xA; &lt;li&gt;Pingora-http: the HTTP header definitions and APIs&lt;/li&gt; &#xA; &lt;li&gt;Pingora-openssl &amp;amp; pingora-boringssl: SSL related extensions and APIs&lt;/li&gt; &#xA; &lt;li&gt;Pingora-ketama: the &lt;a href=&#34;https://github.com/RJ/ketama&#34;&gt;Ketama&lt;/a&gt; consistent algorithm&lt;/li&gt; &#xA; &lt;li&gt;Pingora-limits: efficient counting algorithms&lt;/li&gt; &#xA; &lt;li&gt;Pingora-load-balancing: load balancing algorithm extensions for pingora-proxy&lt;/li&gt; &#xA; &lt;li&gt;Pingora-memory-cache: Async in-memory caching with cache lock to prevent cache stampede&lt;/li&gt; &#xA; &lt;li&gt;Pingora-timeout: A more efficient async timer system&lt;/li&gt; &#xA; &lt;li&gt;TinyUfo: The caching algorithm behind pingora-memory-cache&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;System requirements&lt;/h1&gt; &#xA;&lt;h2&gt;Systems&lt;/h2&gt; &#xA;&lt;p&gt;Linux is our tier 1 environment and main focus.&lt;/p&gt; &#xA;&lt;p&gt;We will try our best for most code to compile for Unix environments. This is for developers and users to have an easier time developing with Pingora in Unix-like environments like macOS (though some features might be missing)&lt;/p&gt; &#xA;&lt;p&gt;Both x86_64 and aarch64 architectures will be supported.&lt;/p&gt; &#xA;&lt;h2&gt;Rust version&lt;/h2&gt; &#xA;&lt;p&gt;Pingora keeps a rolling MSRV (minimum supported Rust version) policy of 6 months. This means we will accept PRs that upgrade the MSRV as long as the new Rust version used is at least 6 months old.&lt;/p&gt; &#xA;&lt;p&gt;Our current MSRV is 1.72.&lt;/p&gt; &#xA;&lt;h2&gt;Build Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Some of the crates in this repository have dependencies on additional tools and libraries that must be satisfied in order to build them:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure that &lt;a href=&#34;https://clang.llvm.org/&#34;&gt;Clang&lt;/a&gt; is installed on your system (for boringssl)&lt;/li&gt; &#xA; &lt;li&gt;Make sure that &lt;a href=&#34;https://www.perl.org/&#34;&gt;Perl 5&lt;/a&gt; is installed on your system (for openssl)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Please see our &lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/pingora/main/.github/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This project is Licensed under &lt;a href=&#34;https://raw.githubusercontent.com/cloudflare/pingora/main/LICENSE&#34;&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lldap/lldap</title>
    <updated>2024-07-21T01:46:50Z</updated>
    <id>tag:github.com,2024-07-21:/lldap/lldap</id>
    <link href="https://github.com/lldap/lldap" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Light LDAP implementation&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;lldap - Light LDAP implementation for authentication&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;i style=&#34;font-size:24px&#34;&gt;LDAP made easy.&lt;/i&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/lldap/lldap/actions/workflows/rust.yml?query=branch%3Amain&#34;&gt; &lt;img src=&#34;https://github.com/lldap/lldap/actions/workflows/rust.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/h5PEdRMNyP&#34;&gt; &lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/898492935446876200?label=discord&amp;amp;logo=discord&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/nitnelave1?ref_src=twsrc%5Etfw&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/nitnelave1?style=social&#34; alt=&#34;Twitter Follow&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/rust-secure-code/safety-dance/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/unsafe-forbidden-success.svg?sanitize=true&#34; alt=&#34;Unsafe forbidden&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/lldap/lldap&#34;&gt; &lt;img alt=&#34;Codecov&#34; src=&#34;https://img.shields.io/codecov/c/github/lldap/lldap&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://www.buymeacoffee.com/nitnelave&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#about&#34;&gt;About&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#with-docker&#34;&gt;With Docker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#with-kubernetes&#34;&gt;With Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#from-a-package-repository&#34;&gt;From a package repository&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#with-freebsd&#34;&gt;With FreeBSD&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#from-source&#34;&gt;From source&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#backend&#34;&gt;Backend&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#frontend&#34;&gt;Frontend&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#cross-compilation&#34;&gt;Cross-compilation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#recommended-architecture&#34;&gt;Recommended architecture&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#client-configuration&#34;&gt;Client configuration&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#compatible-services&#34;&gt;Compatible services&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#general-configuration-guide&#34;&gt;General configuration guide&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#sample-client-configurations&#34;&gt;Sample client configurations&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#incompatible-services&#34;&gt;Incompatible services&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#migrating-from-sqlite&#34;&gt;Migrating from SQLite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#comparisons-with-other-services&#34;&gt;Comparisons with other services&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#vs-openldap&#34;&gt;vs OpenLDAP&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#vs-freeipa&#34;&gt;vs FreeIPA&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#vs-kanidm&#34;&gt;vs Kanidm&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#i-cant-log-in&#34;&gt;I can&#39;t log in!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#contributions&#34;&gt;Contributions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;This project is a lightweight authentication server that provides an opinionated, simplified LDAP interface for authentication. It integrates with many backends, from KeyCloak to Authelia to Nextcloud and &lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#compatible-services&#34;&gt;more&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lldap/lldap/master/screenshot.png&#34; alt=&#34;Screenshot of the user list page&#34; width=&#34;50%&#34; align=&#34;right&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It comes with a frontend that makes user management easy, and allows users to edit their own details or reset their password by email.&lt;/p&gt; &#xA;&lt;p&gt;The goal is &lt;em&gt;not&lt;/em&gt; to provide a full LDAP server; if you&#39;re interested in that, check out OpenLDAP. This server is a user management system that is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;simple to setup (no messing around with &lt;code&gt;slapd&lt;/code&gt;),&lt;/li&gt; &#xA; &lt;li&gt;simple to manage (friendly web UI),&lt;/li&gt; &#xA; &lt;li&gt;low resources,&lt;/li&gt; &#xA; &lt;li&gt;opinionated with basic defaults so you don&#39;t have to understand the subtleties of LDAP.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It mostly targets self-hosting servers, with open-source components like Nextcloud, Airsonic and so on that only support LDAP as a source of external authentication.&lt;/p&gt; &#xA;&lt;p&gt;For more features (OAuth/OpenID support, reverse proxy, ...) you can install other components (KeyCloak, Authelia, ...) using this server as the source of truth for users, via LDAP.&lt;/p&gt; &#xA;&lt;p&gt;By default, the data is stored in SQLite, but you can swap the backend with MySQL/MariaDB or PostgreSQL.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;With Docker&lt;/h3&gt; &#xA;&lt;p&gt;The image is available at &lt;code&gt;lldap/lldap&lt;/code&gt;. You should persist the &lt;code&gt;/data&lt;/code&gt; folder, which contains your configuration and the SQLite database (you can remove this step if you use a different DB and configure with environment variables only).&lt;/p&gt; &#xA;&lt;p&gt;Configure the server by copying the &lt;code&gt;lldap_config.docker_template.toml&lt;/code&gt; to &lt;code&gt;/data/lldap_config.toml&lt;/code&gt; and updating the configuration values (especially the &lt;code&gt;jwt_secret&lt;/code&gt; and &lt;code&gt;ldap_user_pass&lt;/code&gt;, unless you override them with env variables). Environment variables should be prefixed with &lt;code&gt;LLDAP_&lt;/code&gt; to override the configuration.&lt;/p&gt; &#xA;&lt;p&gt;If the &lt;code&gt;lldap_config.toml&lt;/code&gt; doesn&#39;t exist when starting up, LLDAP will use default one. The default admin password is &lt;code&gt;password&lt;/code&gt;, you can change the password later using the web interface.&lt;/p&gt; &#xA;&lt;p&gt;Secrets can also be set through a file. The filename should be specified by the variables &lt;code&gt;LLDAP_JWT_SECRET_FILE&lt;/code&gt; or &lt;code&gt;LLDAP_KEY_SEED_FILE&lt;/code&gt;, and the file contents are loaded into the respective configuration parameters. Note that &lt;code&gt;_FILE&lt;/code&gt; variables take precedence.&lt;/p&gt; &#xA;&lt;p&gt;Example for docker compose:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can use either the &lt;code&gt;:latest&lt;/code&gt; tag image or &lt;code&gt;:stable&lt;/code&gt; as used in this example.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:latest&lt;/code&gt; tag image contains recently pushed code or feature tests, in which some instability can be expected.&lt;/li&gt; &#xA; &lt;li&gt;If &lt;code&gt;UID&lt;/code&gt; and &lt;code&gt;GID&lt;/code&gt; no defined LLDAP will use default &lt;code&gt;UID&lt;/code&gt; and &lt;code&gt;GID&lt;/code&gt; number &lt;code&gt;1000&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If no &lt;code&gt;TZ&lt;/code&gt; is set, default &lt;code&gt;UTC&lt;/code&gt; timezone will be used.&lt;/li&gt; &#xA; &lt;li&gt;You can generate the secrets by running &lt;code&gt;./generate_secrets.sh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#34;3&#34;&#xA;&#xA;volumes:&#xA;  lldap_data:&#xA;    driver: local&#xA;&#xA;services:&#xA;  lldap:&#xA;    image: lldap/lldap:stable&#xA;    ports:&#xA;      # For LDAP, not recommended to expose, see Usage section.&#xA;      #- &#34;3890:3890&#34;&#xA;      # For LDAPS (LDAP Over SSL), enable port if LLDAP_LDAPS_OPTIONS__ENABLED set true, look env below&#xA;      #- &#34;6360:6360&#34;&#xA;      # For the web front-end&#xA;      - &#34;17170:17170&#34;&#xA;    volumes:&#xA;      - &#34;lldap_data:/data&#34;&#xA;      # Alternatively, you can mount a local folder&#xA;      # - &#34;./lldap_data:/data&#34;&#xA;    environment:&#xA;      - UID=####&#xA;      - GID=####&#xA;      - TZ=####/####&#xA;      - LLDAP_JWT_SECRET=REPLACE_WITH_RANDOM&#xA;      - LLDAP_KEY_SEED=REPLACE_WITH_RANDOM&#xA;      - LLDAP_LDAP_BASE_DN=dc=example,dc=com&#xA;      # If using LDAPS, set enabled true and configure cert and key path&#xA;      # - LLDAP_LDAPS_OPTIONS__ENABLED=true&#xA;      # - LLDAP_LDAPS_OPTIONS__CERT_FILE=/path/to/certfile.crt&#xA;      # - LLDAP_LDAPS_OPTIONS__KEY_FILE=/path/to/keyfile.key&#xA;      # You can also set a different database:&#xA;      # - LLDAP_DATABASE_URL=mysql://mysql-user:password@mysql-server/my-database&#xA;      # - LLDAP_DATABASE_URL=postgres://postgres-user:password@postgres-server/my-database&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then the service will listen on two ports, one for LDAP and one for the web front-end.&lt;/p&gt; &#xA;&lt;h3&gt;With Kubernetes&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/Evantage-WS/lldap-kubernetes&#34;&gt;https://github.com/Evantage-WS/lldap-kubernetes&lt;/a&gt; for a LLDAP deployment for Kubernetes&lt;/p&gt; &#xA;&lt;p&gt;You can bootstrap your lldap instance (users, groups) using &lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/bootstrap/bootstrap.md#kubernetes-job&#34;&gt;bootstrap.sh&lt;/a&gt;. It can be run by Argo CD for managing users in git-opt way, or as a one-shot job.&lt;/p&gt; &#xA;&lt;h3&gt;From a package repository&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Do not open issues in this repository for problems with third-party pre-built packages. Report issues downstream.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Depending on the distribution you use, it might be possible to install lldap from a package repository, officially supported by the distribution or community contributed.&lt;/p&gt; &#xA;&lt;h4&gt;Debian, CentOS Fedora, OpenSUSE, Ubuntu&lt;/h4&gt; &#xA;&lt;p&gt;The package for these distributions can be found at &lt;a href=&#34;https://software.opensuse.org//download.html?project=home%3AMasgalor%3ALLDAP&amp;amp;package=lldap&#34;&gt;LLDAP OBS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When using the distributed package, the default login is &lt;code&gt;admin/password&lt;/code&gt;. You can change that from the web UI after starting the service.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Arch Linux&lt;/h4&gt; &#xA;&lt;p&gt;Arch Linux offers unofficial support through the &lt;a href=&#34;https://wiki.archlinux.org/title/Arch_User_Repository&#34;&gt;Arch User Repository (AUR)&lt;/a&gt;. Available package descriptions in AUR are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aur.archlinux.org/packages/lldap&#34;&gt;lldap&lt;/a&gt; - Builds the latest stable version.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aur.archlinux.org/packages/lldap-bin&#34;&gt;lldap-bin&lt;/a&gt; - Uses the latest pre-compiled binaries from the &lt;a href=&#34;https://github.com/lldap/lldap/releases&#34;&gt;releases in this repository&lt;/a&gt;. This package is recommended if you want to run lldap on a system with limited resources.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aur.archlinux.org/packages/lldap-git&#34;&gt;lldap-git&lt;/a&gt; - Builds the latest main branch code.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The package descriptions can be used &lt;a href=&#34;https://wiki.archlinux.org/title/Arch_User_Repository#Getting_started&#34;&gt;to create and install packages&lt;/a&gt;. Each package places lldap&#39;s configuration file at &lt;code&gt;/etc/lldap.toml&lt;/code&gt; and offers &lt;a href=&#34;https://wiki.archlinux.org/title/systemd#Using_units&#34;&gt;systemd service&lt;/a&gt; &lt;code&gt;lldap.service&lt;/code&gt; to (auto-)start and stop lldap.&lt;/p&gt; &#xA;&lt;h3&gt;With FreeBSD&lt;/h3&gt; &#xA;&lt;p&gt;You can also install it as a rc.d service in FreeBSD, see &lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/freebsd/freebsd-install.md&#34;&gt;FreeBSD-install.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The rc.d script file &lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/freebsd/rc.d_lldap&#34;&gt;rc.d_lldap&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;From source&lt;/h3&gt; &#xA;&lt;h4&gt;Backend&lt;/h4&gt; &#xA;&lt;p&gt;To compile the project, you&#39;ll need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;curl and gzip: &lt;code&gt;sudo apt install curl gzip&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Rust/Cargo: &lt;a href=&#34;https://rustup.rs/&#34;&gt;rustup.rs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then you can compile the server (and the migration tool if you want):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo build --release -p lldap -p lldap_migration_tool&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The resulting binaries will be in &lt;code&gt;./target/release/&lt;/code&gt;. Alternatively, you can just run &lt;code&gt;cargo run -- run&lt;/code&gt; to run the server.&lt;/p&gt; &#xA;&lt;h4&gt;Frontend&lt;/h4&gt; &#xA;&lt;p&gt;To bring up the server, you&#39;ll need to compile the frontend. In addition to &lt;code&gt;cargo&lt;/code&gt;, you&#39;ll need WASM-pack, which can be installed by running &lt;code&gt;cargo install wasm-pack&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then you can build the frontend files with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./app/build.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(you&#39;ll need to run this after every front-end change to update the WASM package served).&lt;/p&gt; &#xA;&lt;p&gt;The default config is in &lt;code&gt;src/infra/configuration.rs&lt;/code&gt;, but you can override it by creating an &lt;code&gt;lldap_config.toml&lt;/code&gt;, setting environment variables or passing arguments to &lt;code&gt;cargo run&lt;/code&gt;. Have a look at the docker template: &lt;code&gt;lldap_config.docker_template.toml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also install it as a systemd service, see &lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/lldap.service&#34;&gt;lldap.service&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Cross-compilation&lt;/h3&gt; &#xA;&lt;p&gt;Docker images are provided for AMD64, ARM64 and ARM/V7.&lt;/p&gt; &#xA;&lt;p&gt;If you want to cross-compile yourself, you can do so by installing &lt;a href=&#34;https://github.com/rust-embedded/cross&#34;&gt;&lt;code&gt;cross&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo install cross&#xA;cross build --target=armv7-unknown-linux-musleabihf -p lldap --release&#xA;./app/build.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(Replace &lt;code&gt;armv7-unknown-linux-musleabihf&lt;/code&gt; with the correct Rust target for your device.)&lt;/p&gt; &#xA;&lt;p&gt;You can then get the compiled server binary in &lt;code&gt;target/armv7-unknown-linux-musleabihf/release/lldap&lt;/code&gt; and the various needed files (&lt;code&gt;index.html&lt;/code&gt;, &lt;code&gt;main.js&lt;/code&gt;, &lt;code&gt;pkg&lt;/code&gt; folder) in the &lt;code&gt;app&lt;/code&gt; folder. Copy them to the Raspberry Pi (or other target), with the folder structure maintained (&lt;code&gt;app&lt;/code&gt; files in an &lt;code&gt;app&lt;/code&gt; folder next to the binary).&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The simplest way to use LLDAP is through the web front-end. There you can create users, set passwords, add them to groups and so on. Users can also connect to the web UI and change their information, or request a password reset link (if you configured the SMTP client).&lt;/p&gt; &#xA;&lt;p&gt;Creating and managing custom attributes is currently in Beta. It&#39;s not supported in the Web UI. The recommended way is to use &lt;a href=&#34;https://github.com/Zepmann/lldap-cli&#34;&gt;Zepmann/lldap-cli&lt;/a&gt;, a community-contributed CLI frontend.&lt;/p&gt; &#xA;&lt;p&gt;LLDAP is also very scriptable, through its GraphQL API. See the &lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/docs/scripting.md&#34;&gt;Scripting&lt;/a&gt; docs for more info.&lt;/p&gt; &#xA;&lt;h3&gt;Recommended architecture&lt;/h3&gt; &#xA;&lt;p&gt;If you are using containers, a sample architecture could look like this:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A reverse proxy (e.g. nginx or Traefik)&lt;/li&gt; &#xA; &lt;li&gt;An authentication service (e.g. Authelia, Authentik or KeyCloak) connected to LLDAP to provide authentication for non-authenticated services, or to provide SSO with compatible ones.&lt;/li&gt; &#xA; &lt;li&gt;The LLDAP service, with the web port exposed to Traefik. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The LDAP port doesn&#39;t need to be exposed, since only the other containers will access it.&lt;/li&gt; &#xA;   &lt;li&gt;You can also set up LDAPS if you want to expose the LDAP port to the internet (not recommended) or for an extra layer of security in the inter-container communication (though it&#39;s very much optional).&lt;/li&gt; &#xA;   &lt;li&gt;The default LLDAP container starts up as root to fix up some files&#39; permissions before downgrading the privilege to the given user. However, you can (should?) use the &lt;code&gt;*-rootless&lt;/code&gt; version of the images to be able to start directly as that user, once you got the permissions right. Just don&#39;t forget to change from the &lt;code&gt;UID/GID&lt;/code&gt; env vars to the &lt;code&gt;uid&lt;/code&gt; docker-compose field.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Any other service that needs to connect to LLDAP for authentication (e.g. NextCloud) can be added to a shared network with LLDAP. The finest granularity is a network for each pair of LLDAP-service, but there are often coarser granularities that make sense (e.g. a network for the *arr stack and LLDAP).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Client configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Compatible services&lt;/h3&gt; &#xA;&lt;p&gt;Most services that can use LDAP as an authentication provider should work out of the box. For new services, it&#39;s possible that they require a bit of tweaking on LLDAP&#39;s side to make things work. In that case, just create an issue with the relevant details (logs of the service, LLDAP logs with &lt;code&gt;verbose=true&lt;/code&gt; in the config).&lt;/p&gt; &#xA;&lt;h3&gt;General configuration guide&lt;/h3&gt; &#xA;&lt;p&gt;To configure the services that will talk to LLDAP, here are the values:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The LDAP user DN is from the configuration. By default, &lt;code&gt;cn=admin,ou=people,dc=example,dc=com&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The LDAP password is from the configuration (same as to log in to the web UI).&lt;/li&gt; &#xA; &lt;li&gt;The users are all located in &lt;code&gt;ou=people,&lt;/code&gt; + the base DN, so by default user &lt;code&gt;bob&lt;/code&gt; is at &lt;code&gt;cn=bob,ou=people,dc=example,dc=com&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Similarly, the groups are located in &lt;code&gt;ou=groups&lt;/code&gt;, so the group &lt;code&gt;family&lt;/code&gt; will be at &lt;code&gt;cn=family,ou=groups,dc=example,dc=com&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Testing group membership through &lt;code&gt;memberOf&lt;/code&gt; is supported, so you can have a filter like: &lt;code&gt;(memberOf=cn=admins,ou=groups,dc=example,dc=com)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The administrator group for LLDAP is &lt;code&gt;lldap_admin&lt;/code&gt;: anyone in this group has admin rights in the Web UI. Most LDAP integrations should instead use a user in the &lt;code&gt;lldap_strict_readonly&lt;/code&gt; or &lt;code&gt;lldap_password_manager&lt;/code&gt; group, to avoid granting full administration access to many services.&lt;/p&gt; &#xA;&lt;h3&gt;Sample client configurations&lt;/h3&gt; &#xA;&lt;p&gt;Some specific clients have been tested to work and come with sample configuration files, or guides. See the &lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs&#34;&gt;&lt;code&gt;example_configs&lt;/code&gt;&lt;/a&gt; folder for help with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/airsonic-advanced.md&#34;&gt;Airsonic Advanced&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/apacheguacamole.md&#34;&gt;Apache Guacamole&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/apereo_cas_server.md&#34;&gt;Apereo CAS Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/authelia_config.yml&#34;&gt;Authelia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/authentik.md&#34;&gt;Authentik&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/bookstack.env.example&#34;&gt;Bookstack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/calibre_web.md&#34;&gt;Calibre-Web&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/carpal.md&#34;&gt;Carpal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/dell_idrac.md&#34;&gt;Dell iDRAC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/dex_config.yml&#34;&gt;Dex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/dokuwiki.md&#34;&gt;Dokuwiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/dolibarr.md&#34;&gt;Dolibarr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/ejabberd.md&#34;&gt;Ejabberd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/emby.md&#34;&gt;Emby&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/ergo.md&#34;&gt;Ergo IRCd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/gitea.md&#34;&gt;Gitea&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/gitlab.md&#34;&gt;GitLab&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/grafana_ldap_config.toml&#34;&gt;Grafana&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/grocy.md&#34;&gt;Grocy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/harbor.md&#34;&gt;Harbor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/hedgedoc.md&#34;&gt;Hedgedoc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/home-assistant.md&#34;&gt;Home Assistant&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/jellyfin.md&#34;&gt;Jellyfin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/jenkins.md&#34;&gt;Jenkins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/jitsi_meet.conf&#34;&gt;Jitsi Meet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/kasm.md&#34;&gt;Kasm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/keycloak.md&#34;&gt;KeyCloak&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/librenms.md&#34;&gt;LibreNMS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/maddy.md&#34;&gt;Maddy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/mastodon.env.example&#34;&gt;Mastodon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/matrix_synapse.yml&#34;&gt;Matrix&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/mealie.md&#34;&gt;Mealie&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/metabase.md&#34;&gt;Metabase&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/MegaRAC-SP-X-BMC.md&#34;&gt;MegaRAC-BMC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/minio.md&#34;&gt;MinIO&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/nextcloud.md&#34;&gt;Nextcloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/nexus.md&#34;&gt;Nexus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/ocis.md&#34;&gt;OCIS (OwnCloud Infinite Scale)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/Organizr.md&#34;&gt;Organizr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/portainer.md&#34;&gt;Portainer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/powerdns_admin.md&#34;&gt;PowerDNS Admin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/proxmox.md&#34;&gt;Proxmox VE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/radicale.md&#34;&gt;Radicale&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/rancher.md&#34;&gt;Rancher&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/seafile.md&#34;&gt;Seafile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/shaarli.md&#34;&gt;Shaarli&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/sonarqube.md&#34;&gt;SonarQube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/squid.md&#34;&gt;Squid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/syncthing.md&#34;&gt;Syncthing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/thelounge.md&#34;&gt;TheLounge&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/traccar.xml&#34;&gt;Traccar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/vaultwarden.md&#34;&gt;Vaultwarden&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/wekan.md&#34;&gt;WeKan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/wg_portal.env.example&#34;&gt;WG Portal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/wikijs.md&#34;&gt;WikiJS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/xbackbone_config.php&#34;&gt;XBackBone&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/zendto.md&#34;&gt;Zendto&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/zitadel.md&#34;&gt;Zitadel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/example_configs/zulip.md&#34;&gt;Zulip&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Incompatible services&lt;/h3&gt; &#xA;&lt;p&gt;Though we try to be maximally compatible, not every feature is supported; LLDAP is not a fully-featured LDAP server, intentionally so.&lt;/p&gt; &#xA;&lt;p&gt;LDAP browsing tools are generally not supported, though they could be. If you need to use one but it behaves weirdly, please file a bug.&lt;/p&gt; &#xA;&lt;p&gt;Some services use features that are not implemented, or require specific attributes. You can try to create those attributes (see custom attributes in the &lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/#usage&#34;&gt;Usage&lt;/a&gt; section).&lt;/p&gt; &#xA;&lt;p&gt;Finally, some services require password hashes so they can validate themselves the user&#39;s password without contacting LLDAP. This is not and will not be supported, it&#39;s incompatible with our password hashing scheme (a zero-knowledge proof). Furthermore, it&#39;s generally not recommended in terms of security, since it duplicates the places from which a password hash could leak.&lt;/p&gt; &#xA;&lt;p&gt;In that category, the most prominent is Synology. It is, to date, the only service that seems definitely incompatible with LLDAP.&lt;/p&gt; &#xA;&lt;h2&gt;Migrating from SQLite&lt;/h2&gt; &#xA;&lt;p&gt;If you started with an SQLite database and would like to migrate to MySQL/MariaDB or PostgreSQL, check out the &lt;a href=&#34;https://raw.githubusercontent.com/lldap/lldap/main/docs/database_migration.md&#34;&gt;DB migration docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Comparisons with other services&lt;/h2&gt; &#xA;&lt;h3&gt;vs OpenLDAP&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.openldap.org&#34;&gt;OpenLDAP&lt;/a&gt; is a monster of a service that implements all of LDAP and all of its extensions, plus some of its own. That said, if you need all that flexibility, it might be what you need! Note that installation can be a bit painful (figuring out how to use &lt;code&gt;slapd&lt;/code&gt;) and people have mixed experiences following tutorials online. If you don&#39;t configure it properly, you might end up storing passwords in clear, so a breach of your server would reveal all the stored passwords!&lt;/p&gt; &#xA;&lt;p&gt;OpenLDAP doesn&#39;t come with a UI: if you want a web interface, you&#39;ll have to install one (not that many look nice) and configure it.&lt;/p&gt; &#xA;&lt;p&gt;LLDAP is much simpler to setup, has a much smaller image (10x smaller, 20x if you add PhpLdapAdmin), and comes packed with its own purpose-built web UI. However, it&#39;s not as flexible as OpenLDAP.&lt;/p&gt; &#xA;&lt;h3&gt;vs FreeIPA&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.freeipa.org&#34;&gt;FreeIPA&lt;/a&gt; is the one-stop shop for identity management: LDAP, Kerberos, NTP, DNS, Samba, you name it, it has it. In addition to user management, it also does security policies, single sign-on, certificate management, linux account management and so on.&lt;/p&gt; &#xA;&lt;p&gt;If you need all of that, go for it! Keep in mind that a more complex system is more complex to maintain, though.&lt;/p&gt; &#xA;&lt;p&gt;LLDAP is much lighter to run (&amp;lt;10 MB RAM including the DB), easier to configure (no messing around with DNS or security policies) and simpler to use. It also comes conveniently packed in a docker container.&lt;/p&gt; &#xA;&lt;h3&gt;vs Kanidm&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kanidm.com&#34;&gt;Kanidm&lt;/a&gt; is an up-and-coming Rust identity management platform, covering all your bases: OAuth, Linux accounts, SSH keys, Radius, WebAuthn. It comes with a (read-only) LDAPS server.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s fairly easy to install and does much more; but their LDAP server is read-only, and by having more moving parts it is inherently more complex. If you don&#39;t need to modify the users through LDAP and you&#39;re planning on installing something like &lt;a href=&#34;https://www.keycloak.org&#34;&gt;KeyCloak&lt;/a&gt; to provide modern identity protocols, check out Kanidm.&lt;/p&gt; &#xA;&lt;h2&gt;I can&#39;t log in!&lt;/h2&gt; &#xA;&lt;p&gt;If you just set up the server, can get to the login page but the password you set isn&#39;t working, try the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(For docker): Make sure that the &lt;code&gt;/data&lt;/code&gt; folder is persistent, either to a docker volume or mounted from the host filesystem.&lt;/li&gt; &#xA; &lt;li&gt;Check if there is a &lt;code&gt;lldap_config.toml&lt;/code&gt; file (either in &lt;code&gt;/data&lt;/code&gt; for docker or in the current directory). If there isn&#39;t, copy &lt;code&gt;lldap_config.docker_template.toml&lt;/code&gt; there, and fill in the various values (passwords, secrets, ...).&lt;/li&gt; &#xA; &lt;li&gt;Check if there is a &lt;code&gt;users.db&lt;/code&gt; file (either in &lt;code&gt;/data&lt;/code&gt; for docker or where you specified the DB URL, which defaults to the current directory). If there isn&#39;t, check that the user running the command (user with ID 10001 for docker) has the rights to write to the &lt;code&gt;/data&lt;/code&gt; folder. If in doubt, you can &lt;code&gt;chmod 777 /data&lt;/code&gt; (or whatever the folder) to make it world-writeable.&lt;/li&gt; &#xA; &lt;li&gt;Make sure you restart the server.&lt;/li&gt; &#xA; &lt;li&gt;If it&#39;s still not working, join the &lt;a href=&#34;https://discord.gg/h5PEdRMNyP&#34;&gt;Discord server&lt;/a&gt; to ask for help.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! Just fork and open a PR. Or just file a bug.&lt;/p&gt; &#xA;&lt;p&gt;We don&#39;t have a code of conduct, just be respectful and remember that it&#39;s just normal people doing this for free on their free time.&lt;/p&gt; &#xA;&lt;p&gt;Make sure that you run &lt;code&gt;cargo fmt&lt;/code&gt; from the root before creating the PR. And if you change the GraphQL interface, you&#39;ll need to regenerate the schema by running &lt;code&gt;./export_schema.sh&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Join our &lt;a href=&#34;https://discord.gg/h5PEdRMNyP&#34;&gt;Discord server&lt;/a&gt; if you have any questions!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>greenbone/openvas-scanner</title>
    <updated>2024-07-21T01:46:50Z</updated>
    <id>tag:github.com,2024-07-21:/greenbone/openvas-scanner</id>
    <link href="https://github.com/greenbone/openvas-scanner" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository contains the scanner component for Greenbone Community Edition.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://www.greenbone.net/wp-content/uploads/gb_new-logo_horizontal_rgb_small.png&#34; alt=&#34;Greenbone Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;OpenVAS Scanner&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/greenbone/openvas-scanner/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/greenbone/openvas-scanner.svg?sanitize=true&#34; alt=&#34;GitHub releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/greenbone/openvas-scanner/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/greenbone/openvas-scanner.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/greenbone/openvas-scanner/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/image-size/greenbone/openvas-scanner.svg?maxAge=2592000&#34; alt=&#34;Docker Image Size&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/greenbone/openvas-scanner/actions/workflows/control.yml?query=branch%3Amain&#34;&gt;&lt;img src=&#34;https://github.com/greenbone/openvas-scanner/actions/workflows/control.yml/badge.svg?branch=main&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is the OpenVAS Scanner of the Greenbone Community Edition.&lt;/p&gt; &#xA;&lt;p&gt;It is used for the Greenbone Enterprise appliances and is a full-featured scan engine that executes a continuously updated and extended feed of Vulnerability Tests (VTs).&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;All &lt;a href=&#34;https://github.com/greenbone/openvas/releases&#34;&gt;release files&lt;/a&gt; are signed with the &lt;a href=&#34;https://community.greenbone.net/t/gcf-managing-the-digital-signatures/101&#34;&gt;Greenbone Community Feed integrity key&lt;/a&gt;. This gpg key can be downloaded at &lt;a href=&#34;https://www.greenbone.net/GBCommunitySigningKey.asc&#34;&gt;https://www.greenbone.net/GBCommunitySigningKey.asc&lt;/a&gt; and the fingerprint is &lt;code&gt;8AE4 BE42 9B60 A59B 311C 2E73 9823 FAA6 0ED1 E580&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;This module can be configured, built and installed with following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cmake .&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For detailed installation requirements and instructions, please see the file &lt;a href=&#34;https://raw.githubusercontent.com/greenbone/openvas-scanner/main/INSTALL.md&#34;&gt;INSTALL.md&lt;/a&gt;. The file also contains instructions for setting up &lt;code&gt;openvas&lt;/code&gt; and for making the scanner available to other GVM modules.&lt;/p&gt; &#xA;&lt;p&gt;If you are not familiar or comfortable building from source code, we recommend that you use the Greenbone Enterprise TRIAL, a prepared virtual machine with a readily available setup. Information regarding the virtual machine is available at &lt;a href=&#34;https://www.greenbone.net/en/testnow&#34;&gt;https://www.greenbone.net/en/testnow&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Rust Implementation&lt;/h2&gt; &#xA;&lt;p&gt;This repository also consists of a &lt;a href=&#34;https://raw.githubusercontent.com/greenbone/openvas-scanner/main/rust/README.md&#34;&gt;rust project&lt;/a&gt; aiming to replace the current scanner stack (openvas-scanner, ospd-openvas, notus-scanner). It simplifies the use of the scanner and centralizes everything needed for scanning. Currently it uses the openvas-scanner as scan engine.&lt;/p&gt; &#xA;&lt;h2&gt;Docker, &lt;a href=&#34;https://greenbone.github.io/docs/latest/22.4/container/&#34;&gt;Greenbone Community Containers&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;If you want to use the docker files provided in this repository you can pull them from &lt;a href=&#34;https://hub.docker.com/r/greenbone/openvas-scanner&#34;&gt;here&lt;/a&gt;. You can also locally build them using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build -t &amp;lt;image-name&amp;gt; -f .docker/prod.Dockerfile .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information about building docker images, see &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/build/&#34;&gt;official man&lt;/a&gt;. We also provide a &lt;a href=&#34;https://greenbone.github.io/docs/latest/22.4/container/&#34;&gt;fully containerized solution&lt;/a&gt; for the Greenbone Community Edition.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Please beware: The Greenbone Community Container are currently under development.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;For any question on the usage of &lt;code&gt;openvas&lt;/code&gt; please use the &lt;a href=&#34;https://community.greenbone.net/&#34;&gt;Greenbone Community Portal&lt;/a&gt;. If you found a problem with the software, please &lt;a href=&#34;https://github.com/greenbone/openvas-scanner/issues&#34;&gt;create an issue&lt;/a&gt; on GitHub. If you are a Greenbone customer you may alternatively or additionally forward your issue to the Greenbone Support Portal.&lt;/p&gt; &#xA;&lt;h2&gt;Maintainer&lt;/h2&gt; &#xA;&lt;p&gt;This project is maintained by &lt;a href=&#34;https://www.greenbone.net/&#34;&gt;Greenbone AG&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Your contributions are highly appreciated. Please &lt;a href=&#34;https://github.com/greenbone/openvas-scanner/pulls&#34;&gt;create a pull request&lt;/a&gt; on GitHub. Remember to commit the contribution agreement as explained in &lt;a href=&#34;https://github.com/greenbone/openvas-scanner/tree/main/RELICENSE&#34;&gt;RELICENSING&lt;/a&gt; folder with your first PR. Bigger changes should be discussed with the development team via the &lt;a href=&#34;https://github.com/greenbone/openvas-scanner/issues&#34;&gt;issues section at GitHub&lt;/a&gt; first.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This repository consists of two scanner implementation, one in programming language C and one in programming language Rust.&lt;/p&gt; &#xA;&lt;p&gt;This module except for the Rust-implementation in directory rust/ is licensed under the GNU General Public License v2.0 only. Single files, however, are licensed either under the GNU General Public License v2.0 only or under GNU General Public License v2.0 or later, please see the &lt;a href=&#34;https://raw.githubusercontent.com/greenbone/openvas-scanner/main/license-details.md&#34;&gt;license-details.md&lt;/a&gt; file for details.&lt;/p&gt; &#xA;&lt;p&gt;The Rust-implementation in directory rust/ is licensed under the GNU General Public License v2.0 or later with OpenSSL exception. Single files, however, are additionally licensed under MIT.&lt;/p&gt;</summary>
  </entry>
</feed>