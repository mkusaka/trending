<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-18T01:41:34Z</updated>
  <subtitle>Weekly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>actix/actix-web</title>
    <updated>2024-08-18T01:41:34Z</updated>
    <id>tag:github.com,2024-08-18:/actix/actix-web</id>
    <link href="https://github.com/actix/actix-web" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Actix Web is a powerful, pragmatic, and extremely fast web framework for Rust.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Actix Web&lt;/h1&gt; &#xA; &lt;p&gt; &lt;strong&gt;Actix Web is a powerful, pragmatic, and extremely fast web framework for Rust&lt;/strong&gt; &lt;/p&gt; &#xA; &lt;p&gt; &#xA;  &lt;!-- prettier-ignore-start --&gt; &lt;/p&gt;&#xA; &lt;p&gt;&lt;a href=&#34;https://crates.io/crates/actix-web&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/actix-web?label=latest&#34; alt=&#34;crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.rs/actix-web/4.9.0&#34;&gt;&lt;img src=&#34;https://docs.rs/actix-web/badge.svg?version=4.9.0&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/rustc-1.72+-ab6000.svg?sanitize=true&#34; alt=&#34;MSRV&#34;&gt; &lt;img src=&#34;https://img.shields.io/crates/l/actix-web.svg?sanitize=true&#34; alt=&#34;MIT or Apache 2.0 licensed&#34;&gt; &lt;a href=&#34;https://deps.rs/crate/actix-web/4.9.0&#34;&gt;&lt;img src=&#34;https://deps.rs/crate/actix-web/4.9.0/status.svg?sanitize=true&#34; alt=&#34;Dependency Status&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/actix/actix-web/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/actix/actix-web/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/actix/actix-web&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/actix/actix-web/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/crates/d/actix-web.svg?sanitize=true&#34; alt=&#34;downloads&#34;&gt; &lt;a href=&#34;https://discord.gg/NWpN5mmg3x&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/771444961383153695?label=chat&amp;amp;logo=discord&#34; alt=&#34;Chat on Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;!-- prettier-ignore-end --&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports &lt;em&gt;HTTP/1.x&lt;/em&gt; and &lt;em&gt;HTTP/2&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Streaming and pipelining&lt;/li&gt; &#xA; &lt;li&gt;Powerful &lt;a href=&#34;https://actix.rs/docs/url-dispatch/&#34;&gt;request routing&lt;/a&gt; with optional macros&lt;/li&gt; &#xA; &lt;li&gt;Full &lt;a href=&#34;https://tokio.rs&#34;&gt;Tokio&lt;/a&gt; compatibility&lt;/li&gt; &#xA; &lt;li&gt;Keep-alive and slow requests handling&lt;/li&gt; &#xA; &lt;li&gt;Client/server &lt;a href=&#34;https://actix.rs/docs/websockets/&#34;&gt;WebSockets&lt;/a&gt; support&lt;/li&gt; &#xA; &lt;li&gt;Transparent content compression/decompression (br, gzip, deflate, zstd)&lt;/li&gt; &#xA; &lt;li&gt;Multipart streams&lt;/li&gt; &#xA; &lt;li&gt;Static assets&lt;/li&gt; &#xA; &lt;li&gt;SSL support using OpenSSL or Rustls&lt;/li&gt; &#xA; &lt;li&gt;Middlewares (&lt;a href=&#34;https://actix.rs/docs/middleware/&#34;&gt;Logger, Session, CORS, etc&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Integrates with the &lt;a href=&#34;https://docs.rs/awc/&#34;&gt;&lt;code&gt;awc&lt;/code&gt; HTTP client&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Runs on stable Rust 1.72+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://actix.rs&#34;&gt;Website &amp;amp; User Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actix/examples&#34;&gt;Examples Repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/actix-web&#34;&gt;API Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://actix.rs/actix-web/actix_web&#34;&gt;API Documentation (master branch)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;Dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[dependencies]&#xA;actix-web = &#34;4&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;use actix_web::{get, web, App, HttpServer, Responder};&#xA;&#xA;#[get(&#34;/hello/{name}&#34;)]&#xA;async fn greet(name: web::Path&amp;lt;String&amp;gt;) -&amp;gt; impl Responder {&#xA;    format!(&#34;Hello {name}!&#34;)&#xA;}&#xA;&#xA;#[actix_web::main] // or #[tokio::main]&#xA;async fn main() -&amp;gt; std::io::Result&amp;lt;()&amp;gt; {&#xA;    HttpServer::new(|| {&#xA;        App::new().service(greet)&#xA;    })&#xA;    .bind((&#34;127.0.0.1&#34;, 8080))?&#xA;    .run()&#xA;    .await&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;More Examples&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actix/examples/tree/master/basics/hello-world&#34;&gt;Hello World&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actix/examples/tree/master/basics/basics&#34;&gt;Basic Setup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actix/examples/tree/master/basics/state&#34;&gt;Application State&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actix/examples/tree/master/json/json&#34;&gt;JSON Handling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actix/examples/tree/master/forms/multipart&#34;&gt;Multipart Streams&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actix/examples/tree/master/databases/mongodb&#34;&gt;MongoDB Integration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actix/examples/tree/master/databases/diesel&#34;&gt;Diesel Integration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actix/examples/tree/master/databases/sqlite&#34;&gt;SQLite Integration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actix/examples/tree/master/databases/postgres&#34;&gt;Postgres Integration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actix/examples/tree/master/templating/tera&#34;&gt;Tera Templates&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actix/examples/tree/master/templating/askama&#34;&gt;Askama Templates&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actix/examples/tree/master/https-tls/rustls&#34;&gt;HTTPS using Rustls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actix/examples/tree/master/https-tls/openssl&#34;&gt;HTTPS using OpenSSL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actix/examples/tree/master/websockets&#34;&gt;Simple WebSocket&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actix/examples/tree/master/websockets/chat&#34;&gt;WebSocket Chat&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You may consider checking out &lt;a href=&#34;https://github.com/actix/examples/tree/master&#34;&gt;this directory&lt;/a&gt; for more examples.&lt;/p&gt; &#xA;&lt;h2&gt;Benchmarks&lt;/h2&gt; &#xA;&lt;p&gt;One of the fastest web frameworks available according to the &lt;a href=&#34;https://www.techempower.com/benchmarks/#section=data-r21&amp;amp;test=composite&#34;&gt;TechEmpower Framework Benchmark&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under either of the following licenses, at your option:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apache License, Version 2.0, (&lt;a href=&#34;https://raw.githubusercontent.com/actix/actix-web/master/LICENSE-APACHE&#34;&gt;LICENSE-APACHE&lt;/a&gt; or [http://www.apache.org/licenses/LICENSE-2.0])&lt;/li&gt; &#xA; &lt;li&gt;MIT license (&lt;a href=&#34;https://raw.githubusercontent.com/actix/actix-web/master/LICENSE-MIT&#34;&gt;LICENSE-MIT&lt;/a&gt; or [http://opensource.org/licenses/MIT])&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Contribution to the &lt;code&gt;actix/actix-web&lt;/code&gt; repo is organized under the terms of the Contributor Covenant. The Actix team promises to intervene to uphold that code of conduct.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rustwasm/wasm-bindgen</title>
    <updated>2024-08-18T01:41:34Z</updated>
    <id>tag:github.com,2024-08-18:/rustwasm/wasm-bindgen</id>
    <link href="https://github.com/rustwasm/wasm-bindgen" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Facilitating high-level interactions between Wasm modules and JavaScript&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;&lt;code&gt;wasm-bindgen&lt;/code&gt;&lt;/h1&gt; &#xA; &lt;p&gt; &lt;strong&gt;Facilitating high-level interactions between Wasm modules and JavaScript.&lt;/strong&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://github.com/rustwasm/wasm-bindgen/actions/workflows/main.yml?query=branch%3Amain&#34;&gt;&lt;img src=&#34;https://github.com/rustwasm/wasm-bindgen/actions/workflows/main.yml/badge.svg?branch=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/wasm-bindgen&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/wasm-bindgen.svg?style=flat-square&#34; alt=&#34;Crates.io version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/wasm-bindgen&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/d/wasm-bindgen.svg?style=flat-square&#34; alt=&#34;Download&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.rs/wasm-bindgen&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-latest-blue.svg?style=flat-square&#34; alt=&#34;docs.rs docs&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA; &lt;h3&gt; &lt;a href=&#34;https://rustwasm.github.io/wasm-bindgen/&#34;&gt;Guide (main branch)&lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&#34;https://docs.rs/wasm-bindgen&#34;&gt;API Docs&lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&#34;https://github.com/rustwasm/wasm-bindgen/raw/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&#34;https://discord.gg/xMZ7CCY&#34;&gt;Chat&lt;/a&gt; &lt;/h3&gt; &#xA; &lt;p&gt;&lt;sub&gt;Built with 🦀🕸 by &lt;a href=&#34;https://rustwasm.github.io/&#34;&gt;The Rust and WebAssembly Working Group&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Install &lt;code&gt;wasm-bindgen-cli&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;You can install it using &lt;code&gt;cargo install&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cargo install wasm-bindgen-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, you can download it from the &lt;a href=&#34;https://github.com/rustwasm/wasm-bindgen/releases&#34;&gt;release page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have &lt;a href=&#34;https://crates.io/crates/cargo-binstall&#34;&gt;&lt;code&gt;cargo-binstall&lt;/code&gt;&lt;/a&gt; installed, then you can install the pre-built artifacts by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cargo binstall wasm-bindgen-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;Import JavaScript things into Rust and export Rust things to JavaScript.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;use wasm_bindgen::prelude::*;&#xA;&#xA;// Import the `window.alert` function from the Web.&#xA;#[wasm_bindgen]&#xA;extern &#34;C&#34; {&#xA;    fn alert(s: &amp;amp;str);&#xA;}&#xA;&#xA;// Export a `greet` function from Rust to JavaScript, that alerts a&#xA;// hello message.&#xA;#[wasm_bindgen]&#xA;pub fn greet(name: &amp;amp;str) {&#xA;    alert(&amp;amp;format!(&#34;Hello, {}!&#34;, name));&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use exported Rust things from JavaScript with ECMAScript modules!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import { greet } from &#34;./hello_world&#34;;&#xA;&#xA;greet(&#34;World!&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Lightweight.&lt;/strong&gt; Only pay for what you use. &lt;code&gt;wasm-bindgen&lt;/code&gt; only generates bindings and glue for the JavaScript imports you actually use and Rust functionality that you export. For example, importing and using the &lt;code&gt;document.querySelector&lt;/code&gt; method doesn&#39;t cause &lt;code&gt;Node.prototype.appendChild&lt;/code&gt; or &lt;code&gt;window.alert&lt;/code&gt; to be included in the bindings as well.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ECMAScript modules.&lt;/strong&gt; Just import WebAssembly modules the same way you would import JavaScript modules. Future compatible with &lt;a href=&#34;https://github.com/WebAssembly/esm-integration&#34;&gt;WebAssembly modules and ECMAScript modules integration&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Designed with the &lt;a href=&#34;https://github.com/WebAssembly/proposals/issues/8&#34;&gt;&#34;Web IDL bindings&#34; proposal&lt;/a&gt; in mind.&lt;/strong&gt; Eventually, there won&#39;t be any JavaScript shims between Rust-generated wasm functions and native DOM methods. Because the wasm functions are statically type checked, some of those native methods&#39; dynamic type checks should become unnecessary, promising to unlock even-faster-than-JavaScript DOM access.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Guide&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rustwasm.github.io/docs/wasm-bindgen/&#34;&gt;&lt;strong&gt;📚 Read the &lt;code&gt;wasm-bindgen&lt;/code&gt; guide here! 📚&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can find general documentation about using Rust and WebAssembly together &lt;a href=&#34;https://rustwasm.github.io/docs&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;API Docs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/wasm-bindgen&#34;&gt;wasm-bindgen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/js-sys&#34;&gt;js-sys&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/web-sys&#34;&gt;web-sys&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.rs/wasm-bindgen-futures&#34;&gt;wasm-bindgen-futures&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;MSRV Policy&lt;/h2&gt; &#xA;&lt;p&gt;Libraries that are released on &lt;a href=&#34;https://crates.io&#34;&gt;crates.io&lt;/a&gt; have a MSRV of v1.57. Changes to the MSRV will be accompanied by a minor version bump.&lt;/p&gt; &#xA;&lt;p&gt;CLI tools and their corresponding support libraries have a MSRV of v1.76. Changes to the MSRV will be accompanied by a patch version bump.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under either of&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apache License, Version 2.0, (&lt;a href=&#34;https://raw.githubusercontent.com/rustwasm/wasm-bindgen/main/LICENSE-APACHE&#34;&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;MIT license (&lt;a href=&#34;https://raw.githubusercontent.com/rustwasm/wasm-bindgen/main/LICENSE-MIT&#34;&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;at your option.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://rustwasm.github.io/docs/wasm-bindgen/contributing/index.html&#34;&gt;See the &#34;Contributing&#34; section of the guide for information on hacking on &lt;code&gt;wasm-bindgen&lt;/code&gt;!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in this project by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>servo/servo</title>
    <updated>2024-08-18T01:41:34Z</updated>
    <id>tag:github.com,2024-08-18:/servo/servo</id>
    <link href="https://github.com/servo/servo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Servo, the embeddable, independent, memory-safe, modular, parallel web rendering engine&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Servo Parallel Browser Engine Project&lt;/h1&gt; &#xA;&lt;p&gt;Servo is a prototype web browser engine written in the &lt;a href=&#34;https://github.com/rust-lang/rust&#34;&gt;Rust&lt;/a&gt; language. It is currently developed on 64-bit macOS, 64-bit Linux, 64-bit Windows, and Android.&lt;/p&gt; &#xA;&lt;p&gt;Servo welcomes contribution from everyone. Check out &lt;a href=&#34;https://book.servo.org&#34;&gt;The Servo Book&lt;/a&gt; to get started, or go to &lt;a href=&#34;https://servo.org/&#34;&gt;servo.org&lt;/a&gt; for news and guides.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;For more detailed build instructions, see the Servo book under &lt;a href=&#34;https://book.servo.org/hacking/setting-up-your-environment.html&#34;&gt;Setting up your environment&lt;/a&gt;, &lt;a href=&#34;https://book.servo.org/hacking/building-servo.html&#34;&gt;Building Servo&lt;/a&gt;, and &lt;a href=&#34;https://book.servo.org/hacking/building-for-android.html&#34;&gt;Building for Android&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download and install &lt;a href=&#34;https://www.python.org/downloads/macos/&#34;&gt;&lt;code&gt;python&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://developer.apple.com/xcode/&#34;&gt;Xcode&lt;/a&gt;, and &lt;a href=&#34;https://brew.sh/&#34;&gt;&lt;code&gt;brew&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;code&gt;rustup&lt;/code&gt;: &lt;code&gt;curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Restart your shell to make sure &lt;code&gt;cargo&lt;/code&gt; is available&lt;/li&gt; &#xA; &lt;li&gt;Install the other dependencies: &lt;code&gt;./mach bootstrap&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build servoshell: &lt;code&gt;./mach build&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;code&gt;curl&lt;/code&gt; and &lt;code&gt;python&lt;/code&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Arch: &lt;code&gt;sudo pacman -S --needed curl python python-pip&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Debian, Ubuntu: &lt;code&gt;sudo apt install curl python3-pip python3-venv&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Fedora: &lt;code&gt;sudo dnf install curl python3 python3-pip python3-devel&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Gentoo: &lt;code&gt;sudo emerge net-misc/curl dev-python/pip&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install &lt;code&gt;rustup&lt;/code&gt;: &lt;code&gt;curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Restart your shell to make sure &lt;code&gt;cargo&lt;/code&gt; is available&lt;/li&gt; &#xA; &lt;li&gt;Install the other dependencies: &lt;code&gt;./mach bootstrap&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build servoshell: &lt;code&gt;./mach build&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download and install &lt;a href=&#34;https://www.python.org/downloads/windows/&#34;&gt;&lt;code&gt;python&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://chocolatey.org/install#individual&#34;&gt;&lt;code&gt;choco&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&#34;https://win.rustup.rs/&#34;&gt;&lt;code&gt;rustup&lt;/code&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Be sure to select &lt;em&gt;Quick install via the Visual Studio Community installer&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;In the Visual Studio Installer, ensure the following components are installed: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Windows 10 SDK (10.0.19041.0)&lt;/strong&gt; (&lt;code&gt;Microsoft.VisualStudio.Component.Windows10SDK.19041&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;MSVC v143 - VS 2022 C++ x64/x86 build tools (Latest)&lt;/strong&gt; (&lt;code&gt;Microsoft.VisualStudio.Component.VC.Tools.x86.x64&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;C++ ATL for latest v143 build tools (x86 &amp;amp; x64)&lt;/strong&gt; (&lt;code&gt;Microsoft.VisualStudio.Component.VC.ATL&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;C++ MFC for latest v143 build tools (x86 &amp;amp; x64)&lt;/strong&gt; (&lt;code&gt;Microsoft.VisualStudio.Component.VC.ATLMFC&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Restart your shell to make sure &lt;code&gt;cargo&lt;/code&gt; is available&lt;/li&gt; &#xA; &lt;li&gt;Install the other dependencies: &lt;code&gt;.\mach bootstrap&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build servoshell: &lt;code&gt;.\mach build&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ensure that the following environment variables are set: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;ANDROID_SDK_ROOT&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;ANDROID_NDK_ROOT&lt;/code&gt;: &lt;code&gt;$ANDROID_SDK_ROOT/ndk/26.2.11394342/&lt;/code&gt; &lt;code&gt;ANDROID_SDK_ROOT&lt;/code&gt; can be any directory (such as &lt;code&gt;~/android-sdk&lt;/code&gt;). All of the Android build dependencies will be installed there.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install the latest version of the &lt;a href=&#34;https://developer.android.com/studio#command-tools&#34;&gt;Android command-line tools&lt;/a&gt; to &lt;code&gt;$ANDROID_SDK_ROOT/cmdline-tools/latest&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run the following command to install the necessary components: &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --install&#xA; &#34;build-tools;33.0.2&#34; \&#xA; &#34;emulator&#34; \&#xA; &#34;ndk;26.2.11394342&#34; \&#xA; &#34;platform-tools&#34; \&#xA; &#34;platforms;android-33&#34; \&#xA; &#34;system-images;android-33;google_apis;x86_64&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Follow the instructions above for the platform you are building on&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>