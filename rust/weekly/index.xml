<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-16T02:03:39Z</updated>
  <subtitle>Weekly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tree-sitter/tree-sitter</title>
    <updated>2023-07-16T02:03:39Z</updated>
    <id>tag:github.com,2023-07-16:/tree-sitter/tree-sitter</id>
    <link href="https://github.com/tree-sitter/tree-sitter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An incremental parsing system for programming tools&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tree-sitter&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tree-sitter/tree-sitter/actions/workflows/CICD.yml&#34;&gt;&lt;img src=&#34;https://github.com/tree-sitter/tree-sitter/actions/workflows/CICD.yml/badge.svg?sanitize=true&#34; alt=&#34;CICD badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://zenodo.org/badge/latestdoi/14164618&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/14164618.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Tree-sitter is a parser generator tool and an incremental parsing library. It can build a concrete syntax tree for a source file and efficiently update the syntax tree as the source file is edited. Tree-sitter aims to be:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;General&lt;/strong&gt; enough to parse any programming language&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fast&lt;/strong&gt; enough to parse on every keystroke in a text editor&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Robust&lt;/strong&gt; enough to provide useful results even in the presence of syntax errors&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dependency-free&lt;/strong&gt; so that the runtime library (which is written in pure C) can be embedded in any application&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tree-sitter.github.io&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tree-sitter/tree-sitter/master/lib/binding_rust/README.md&#34;&gt;Rust binding&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tree-sitter/tree-sitter/master/lib/binding_web/README.md&#34;&gt;WASM binding&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tree-sitter/tree-sitter/master/cli/README.md&#34;&gt;Command-line interface&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>FuelLabs/fuel-core</title>
    <updated>2023-07-16T02:03:39Z</updated>
    <id>tag:github.com,2023-07-16:/FuelLabs/fuel-core</id>
    <link href="https://github.com/FuelLabs/fuel-core" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Rust full node implementation of the Fuel v2 protocol.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fuel Client&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/FuelLabs/fuel-core/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/FuelLabs/fuel-core/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/fuel-core&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/fuel-core?label=latest&#34; alt=&#34;crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.rs/fuel-core/&#34;&gt;&lt;img src=&#34;https://docs.rs/fuel-core/badge.svg?sanitize=true&#34; alt=&#34;docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/xfpK4Pe&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat%20on-discord-orange?&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&#34; alt=&#34;discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Fuel client implementation.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you are interested in contributing to Fuel, see our &lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/fuel-core/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; guidelines for coding standards and review process.&lt;/p&gt; &#xA;&lt;p&gt;Before pushing any changes or creating pull request please run &lt;code&gt;source ci_checks.sh&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;h3&gt;System Requirements&lt;/h3&gt; &#xA;&lt;p&gt;There are several system requirements including clang.&lt;/p&gt; &#xA;&lt;h4&gt;MacOS&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew update&#xA;brew install cmake&#xA;brew install protobuf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Debian&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apt update&#xA;apt install -y cmake pkg-config build-essential git clang libclang-dev protobuf-compiler&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Arch&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman -Syu --needed --noconfirm cmake gcc pkgconf git clang protobuf-compiler&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Compiling&lt;/h3&gt; &#xA;&lt;p&gt;We recommend using &lt;code&gt;xtask&lt;/code&gt; to build fuel-core:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo xtask build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will run &lt;code&gt;cargo build&lt;/code&gt; as well as any other custom build processes we have such as re-generating a GraphQL schema for the client.&lt;/p&gt; &#xA;&lt;h3&gt;Testing&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/FuelLabs/fuel-core/master/ci_checks.sh&#34;&gt;ci_checks.sh&lt;/a&gt; script file can be used to run all CI checks, including the running of tests.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;source ci_checks.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The script requires pre-installed tools. For more information run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cat ci_checks.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;The service can be launched by executing &lt;code&gt;fuel-core run&lt;/code&gt;. The list of options for running can be accessed via the &lt;code&gt;help&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ ./target/debug/fuel-core run --help&#xA;&#xA;USAGE:&#xA;    fuel-core run [OPTIONS]&#xA;&#xA;OPTIONS:&#xA;        --chain &amp;lt;CHAIN_CONFIG&amp;gt;&#xA;            Specify either an alias to a built-in configuration or filepath to a JSON file [default:&#xA;            local_testnet]&#xA;        ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For many development purposes it is useful to have a state that won&#39;t persist and the &lt;code&gt;db-type&lt;/code&gt; option can be set to &lt;code&gt;in-memory&lt;/code&gt; as in the following example.&lt;/p&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ ./target/debug/fuel-core run --db-type in-memory&#xA;2023-06-13T12:45:22.860536Z  INFO fuel_core::cli::run: 230: Block production mode: Instant&#xA;2023-06-13T12:38:47.059783Z  INFO fuel_core::cli::run: 310: Fuel Core version v0.18.1&#xA;2023-06-13T12:38:47.078969Z  INFO new{name=fuel-core}:_commit_result{block_id=b1807ca9f2eec7e459b866ecf69b68679fc6b205a9a85c16bd4943d1bfc6fb2a height=0 tx_status=[]}: fuel_core_importer::importer: 231: Committed block&#xA;2023-06-13T12:38:47.097777Z  INFO new{name=fuel-core}: fuel_core::graphql_api::service: 208: Binding GraphQL provider to 127.0.0.1:4000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To disable block production on your local node, set &lt;code&gt;--poa-instant=false&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ ./target/debug/fuel-core run --poa-instant=false&#xA;2023-06-13T12:44:12.857763Z  INFO fuel_core::cli::run: 232: Block production disabled&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Troubleshooting&lt;/h3&gt; &#xA;&lt;h4&gt;Publishing&lt;/h4&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;https://github.com/katyo/publish-crates&#34;&gt;&lt;code&gt;publish-crates&lt;/code&gt;&lt;/a&gt; action for automatic publishing of all crates.&lt;/p&gt; &#xA;&lt;p&gt;If you have problems with publishing, you can troubleshoot it locally with &lt;a href=&#34;https://github.com/nektos/act&#34;&gt;&lt;code&gt;act&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;act release -s GITHUB_TOKEN=&amp;lt;YOUR_GITHUB_TOKEN&amp;gt; -j publish-crates-check --container-architecture linux/amd64 --reuse&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It requires GitHubToken to do request to the GitHub. You can create it with &lt;a href=&#34;https://docs.github.com/en/enterprise-server@3.4/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token&#34;&gt;this&lt;/a&gt; instruction.&lt;/p&gt; &#xA;&lt;h4&gt;Outdated database&lt;/h4&gt; &#xA;&lt;p&gt;If you encounter an error such as&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;thread &#39;main&#39; panicked at &#39;unable to open database: DatabaseError(Error { message: &#34;Invalid argument: Column families not opened: column-11, column-10, column-9, column-8, column-7, column-6, column-5, column-4, column-3, column-2, column-1, column-0&#34; })&#39;, fuel-core/src/main.rs:23:66&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Clear your local database using: &lt;code&gt;rm -rf ~/.fuel/db&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;File descriptor limits&lt;/h4&gt; &#xA;&lt;p&gt;On some macOS versions the default file descriptor limit is quite low, which can lead to IO errors with messages like &lt;code&gt;Too many open files&lt;/code&gt; or even &lt;code&gt;fatal runtime error: Rust cannot catch foreign exceptions&lt;/code&gt; when RocksDB encounters these issues. Use the following command to increase the open file limit. Note that this only affects the current shell session, so consider adding it to &lt;code&gt;~/.zshrc&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ulimit -n 10240&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Log level&lt;/h4&gt; &#xA;&lt;p&gt;The service relies on the environment variable &lt;code&gt;RUST_LOG&lt;/code&gt;. For more information, check the &lt;a href=&#34;https://docs.rs/tracing-subscriber/latest/tracing_subscriber/struct.EnvFilter.html#examples&#34;&gt;EnvFilter examples&lt;/a&gt; crate.&lt;/p&gt; &#xA;&lt;p&gt;Human logging can be disabled with the environment variable &lt;code&gt;HUMAN_LOGGING=false&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Docker &amp;amp; Kubernetes&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Create Docker Image&#xA;docker build -t fuel-core . -f deployment/Dockerfile&#xA;&#xA;# Delete Docker Image&#xA;docker image rm fuel-core&#xA;&#xA;# Create Kubernetes Volume, Deployment &amp;amp; Service&#xA;kubectl create -f deployment/fuel-core.yml&#xA;&#xA;# Delete Kubernetes Volume, Deployment &amp;amp; Service&#xA;kubectl delete -f deployment/fuel-core.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GraphQL service&lt;/h2&gt; &#xA;&lt;p&gt;The client functionality is available through a service endpoint that expect GraphQL queries.&lt;/p&gt; &#xA;&lt;h3&gt;Transaction executor&lt;/h3&gt; &#xA;&lt;p&gt;The transaction executor currently performs instant block production. Changes are persisted to RocksDB by default.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Service endpoint: &lt;code&gt;/graphql&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Schema (available after building): &lt;code&gt;crates/client/assets/schema.sdl&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The service expects a mutation defined as &lt;code&gt;submit&lt;/code&gt; that receives a &lt;a href=&#34;https://github.com/FuelLabs/fuel-vm/tree/master/fuel-tx&#34;&gt;Transaction&lt;/a&gt; in hex encoded binary format, as &lt;a href=&#34;https://github.com/FuelLabs/fuel-specs/raw/master/src/protocol/tx_format/transaction.md&#34;&gt;specified here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;cURL example&lt;/h3&gt; &#xA;&lt;p&gt;This example will execute a script that represents the following sequence of &lt;a href=&#34;https://github.com/FuelLabs/fuel-vm/tree/master/fuel-asm&#34;&gt;ASM&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rs&#34;&gt;ADDI(0x10, RegId::ZERO, 0xca),&#xA;ADDI(0x11, RegId::ZERO, 0xba),&#xA;LOG(0x10, 0x11, RegId::ZERO, RegId::ZERO),&#xA;RET(RegId::ONE),&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cargo run --bin fuel-core-client -- transaction submit \&#xA;&#34;{\&#34;Script\&#34;:{\&#34;gas_price\&#34;:0,\&#34;gas_limit\&#34;:1000000,\&#34;maturity\&#34;:0,\&#34;script\&#34;:[80,64,0,202,80,68,0,186,51,65,16,0,36,4,0,0],\&#34;script_data\&#34;:[],\&#34;inputs\&#34;:[&#xA;{&#xA;  \&#34;CoinSigned\&#34;: {&#xA;    \&#34;utxo_id\&#34;: {&#xA;      \&#34;tx_id\&#34;: \&#34;c49d65de61cf04588a764b557d25cc6c6b4bc0d7429227e2a21e61c213b3a3e2\&#34;,&#xA;      \&#34;output_index\&#34;: 0&#xA;    },&#xA;    \&#34;owner\&#34;: \&#34;f1e92c42b90934aa6372e30bc568a326f6e66a1a0288595e6e3fbd392a4f3e6e\&#34;,&#xA;    \&#34;amount\&#34;: 10599410012256088338,&#xA;    \&#34;asset_id\&#34;: \&#34;2cafad611543e0265d89f1c2b60d9ebf5d56ad7e23d9827d6b522fd4d6e44bc3\&#34;,&#xA;    \&#34;tx_pointer\&#34;: {&#xA;      \&#34;block_height\&#34;: 0,&#xA;      \&#34;tx_index\&#34;: 0&#xA;    },&#xA;    \&#34;witness_index\&#34;: 0,&#xA;    \&#34;maturity\&#34;: 0,&#xA;    \&#34;predicate_gas_used\&#34;: null,&#xA;    \&#34;predicate\&#34;: null,&#xA;    \&#34;predicate_data\&#34;: null&#xA;  }&#xA;}],\&#34;outputs\&#34;:[],\&#34;witnesses\&#34;:[{&#xA;  \&#34;data\&#34;: [&#xA;    150,&#xA;    31,&#xA;    98,&#xA;    51,&#xA;    6,&#xA;    239,&#xA;    255,&#xA;    243,&#xA;    45,&#xA;    35,&#xA;    182,&#xA;    26,&#xA;    129,&#xA;    152,&#xA;    46,&#xA;    95,&#xA;    45,&#xA;    211,&#xA;    114,&#xA;    58,&#xA;    51,&#xA;    64,&#xA;    129,&#xA;    194,&#xA;    97,&#xA;    14,&#xA;    181,&#xA;    70,&#xA;    190,&#xA;    37,&#xA;    106,&#xA;    223,&#xA;    170,&#xA;    174,&#xA;    221,&#xA;    230,&#xA;    87,&#xA;    239,&#xA;    67,&#xA;    224,&#xA;    100,&#xA;    137,&#xA;    25,&#xA;    249,&#xA;    193,&#xA;    14,&#xA;    184,&#xA;    195,&#xA;    15,&#xA;    85,&#xA;    156,&#xA;    82,&#xA;    91,&#xA;    78,&#xA;    91,&#xA;    80,&#xA;    126,&#xA;    168,&#xA;    215,&#xA;    170,&#xA;    139,&#xA;    48,&#xA;    19,&#xA;    5&#xA;  ]&#xA;}],\&#34;receipts_root\&#34;:\&#34;0x6114142d12e0f58cfb8c72c270cd0535944fb1ba763dce83c17e882c482224a2\&#34;}}&#34;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>FuelLabs/sway</title>
    <updated>2023-07-16T02:03:39Z</updated>
    <id>tag:github.com,2023-07-16:/FuelLabs/sway</id>
    <link href="https://github.com/FuelLabs/sway" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🌴 Empowering everyone to build reliable and efficient smart contracts.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sway&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/FuelLabs/sway/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/FuelLabs/sway/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/forc&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/forc?label=latest&#34; alt=&#34;crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.rs/forc/&#34;&gt;&lt;img src=&#34;https://docs.rs/forc/badge.svg?sanitize=true&#34; alt=&#34;docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/xfpK4Pe&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat%20on-discord-orange?&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&#34; alt=&#34;discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Sway is a language developed for the Fuel blockchain. It is heavily inspired by Rust and aims to bring modern language development and performance to the blockchain ecosystem.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For user documentation, including installing release builds, see the Sway Book: &lt;a href=&#34;https://fuellabs.github.io/sway/latest/&#34;&gt;https://fuellabs.github.io/sway/latest/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also view the technical reference for the Sway programming language: &lt;a href=&#34;https://fuellabs.github.io/sway/master/reference/&#34;&gt;https://fuellabs.github.io/sway/master/reference/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building from Source&lt;/h2&gt; &#xA;&lt;p&gt;This section is for developing the Sway compiler and toolchain. For developing contracts and using Sway, see the above documentation section.&lt;/p&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;Sway is built in Rust. To begin, install the Rust toolchain following instructions at &lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;https://www.rust-lang.org/tools/install&lt;/a&gt;. Then configure your Rust toolchain to use Rust &lt;code&gt;stable&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;rustup default stable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If not already done, add the Cargo bin directory to your &lt;code&gt;PATH&lt;/code&gt; by adding the following line to &lt;code&gt;~/.profile&lt;/code&gt; and restarting the shell session.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export PATH=&#34;${HOME}/.cargo/bin:${PATH}&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building Forc&lt;/h3&gt; &#xA;&lt;p&gt;Clone the repository and build the Sway toolchain:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone git@github.com:FuelLabs/sway.git&#xA;cd sway&#xA;cargo build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Confirm the Sway toolchain built successfully:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo run --bin forc -- --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing to Sway&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions to Sway!&lt;/p&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://fuellabs.github.io/sway/master/book/reference/contributing_to_sway.html&#34;&gt;Contributing To Sway&lt;/a&gt; section of the Sway book for guidelines and instructions to help you get started.&lt;/p&gt;</summary>
  </entry>
</feed>