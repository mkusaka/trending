<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-09T02:01:30Z</updated>
  <subtitle>Weekly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>matter-labs/zksync</title>
    <updated>2023-04-09T02:01:30Z</updated>
    <id>tag:github.com,2023-04-09:/matter-labs/zksync</id>
    <link href="https://github.com/matter-labs/zksync" rel="alternate"></link>
    <summary type="html">&lt;p&gt;zkSync: trustless scaling and privacy engine for Ethereum&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;zkSync: scaling and privacy engine for Ethereum&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://zksync.io/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/matter-labs/zksync/master/zkSyncLogo.svg?sanitize=true&#34; alt=&#34;Logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://wallet.zksync.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/wallet-Live%20on%20Mainnet-blue&#34; alt=&#34;Live on Mainnet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://rinkeby.zksync.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/wallet-Live%20on%20Rinkeby-blue&#34; alt=&#34;Live on Rinkeby&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ropsten.zksync.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/wallet-Live%20on%20Ropsten-blue&#34; alt=&#34;Live on Ropsten&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;zkSync is a scaling and privacy engine for Ethereum. Its current functionality scope includes low gas transfers of ETH and ERC20 tokens in the Ethereum network.&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;zkSync is built on ZK Rollup architecture. ZK Rollup is an L2 scaling solution in which all funds are held by a smart contract on the mainchain, while computation and storage are performed off-chain. For every Rollup block, a state transition zero-knowledge proof (SNARK) is generated and verified by the mainchain contract. This SNARK includes the proof of the validity of every single transaction in the Rollup block. Additionally, the public data update for every block is published over the mainchain network in the cheap calldata.&lt;/p&gt; &#xA;&lt;p&gt;This architecture provides the following guarantees:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The Rollup validator(s) can never corrupt the state or steal funds (unlike Sidechains).&lt;/li&gt; &#xA; &lt;li&gt;Users can always retrieve the funds from the Rollup even if validator(s) stop cooperating because the data is available (unlike Plasma).&lt;/li&gt; &#xA; &lt;li&gt;Thanks to validity proofs, neither users nor a single other trusted party needs to be online to monitor Rollup blocks in order to prevent fraud.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In other words, ZK Rollup strictly inherits the security guarantees of the underlying L1.&lt;/p&gt; &#xA;&lt;p&gt;To learn how to use zkSync, please refer to the &lt;a href=&#34;https://zksync.io/api/sdk/&#34;&gt;zkSync SDK documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The following guides for developers are available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installing development dependencies: &lt;a href=&#34;https://raw.githubusercontent.com/matter-labs/zksync/master/docs/setup-dev.md&#34;&gt;docs/setup-dev.md&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Launching zkSync locally: &lt;a href=&#34;https://raw.githubusercontent.com/matter-labs/zksync/master/docs/launch.md&#34;&gt;docs/launch.md&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Development guide: &lt;a href=&#34;https://raw.githubusercontent.com/matter-labs/zksync/master/docs/development.md&#34;&gt;docs/development.md&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Repository architecture overview: &lt;a href=&#34;https://raw.githubusercontent.com/matter-labs/zksync/master/docs/architecture.md&#34;&gt;docs/architecture.md&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matter-labs/zksync/master/core/bin/server&#34;&gt;zkSync server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matter-labs/zksync/master/core/bin/prover&#34;&gt;zkSync prover&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matter-labs/zksync/master/sdk/zksync.js&#34;&gt;JavaScript SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matter-labs/zksync/master/sdk/zksync-rs&#34;&gt;Rust SDK&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Since the repository is big and is split into independent components, there is a different changelog for each of its major parts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matter-labs/zksync/master/changelog/contracts.md&#34;&gt;Smart contracts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matter-labs/zksync/master/changelog/core.md&#34;&gt;Core&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matter-labs/zksync/master/changelog/infrastructure.md&#34;&gt;Infrastructure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matter-labs/zksync/master/changelog/js-sdk.md&#34;&gt;JavaScript SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matter-labs/zksync/master/changelog/rust-sdk.md&#34;&gt;Rust SDK&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;zkSync is distributed under the terms of both the MIT license and the Apache License (Version 2.0).&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/matter-labs/zksync/master/LICENSE-APACHE&#34;&gt;LICENSE-APACHE&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/matter-labs/zksync/master/LICENSE-MIT&#34;&gt;LICENSE-MIT&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fermyon/spin</title>
    <updated>2023-04-09T02:01:30Z</updated>
    <id>tag:github.com,2023-04-09:/fermyon/spin</id>
    <link href="https://github.com/fermyon/spin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Spin is the open source developer tool for building and running serverless applications powered by WebAssembly.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Fermyon Spin&lt;/h1&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;./docs/static/image/logo-dark.png&#34;&gt; &#xA;  &lt;img alt=&#34;spin logo&#34; src=&#34;https://raw.githubusercontent.com/fermyon/spin/main/docs/static/image/logo.png&#34; width=&#34;300&#34; height=&#34;128&#34;&gt; &#xA; &lt;/picture&gt; &#xA; &lt;p&gt;Spin is a framework for building, deploying, and running fast, secure, and composable cloud microservices with WebAssembly.&lt;/p&gt; &#xA; &lt;a href=&#34;https://github.com/fermyon/spin/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/fermyon/spin/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;build status&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://discord.gg/eGN8saYqCk&#34;&gt;&lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/926888690310053918?label=Discord&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;What is Spin?&lt;/h2&gt; &#xA;&lt;p&gt;Spin is an open source framework for building and running fast, secure, and composable cloud microservices with WebAssembly. It aims to be the easiest way to get started with WebAssembly microservices, and takes advantage of the latest developments in the &lt;a href=&#34;https://github.com/WebAssembly/component-model&#34;&gt;WebAssembly component model&lt;/a&gt; and &lt;a href=&#34;https://wasmtime.dev/&#34;&gt;Wasmtime&lt;/a&gt; runtime.&lt;/p&gt; &#xA;&lt;p&gt;Spin offers a simple CLI that helps you create, distribute, and execute applications, and in the next sections we will learn more about Spin applications and how to get started.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://developer.fermyon.com/spin/quickstart/&#34;&gt;quickstart document&lt;/a&gt; for a detailed guide on configuring Spin and writing your first Spin application, but in short:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ wget https://github.com/fermyon/spin/releases/download/&amp;lt;version&amp;gt;/spin-&amp;lt;version&amp;gt;-&amp;lt;os-arch&amp;gt;.tar.gz&#xA;$ tar xfv spin-&amp;lt;version&amp;gt;-&amp;lt;os-arch&amp;gt;.tar.gz&#xA;$ ./spin --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Alternatively, you could &lt;a href=&#34;https://developer.fermyon.com/spin/contributing/&#34;&gt;build Spin from source&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;After you follow the &lt;a href=&#34;https://developer.fermyon.com/spin/quickstart/&#34;&gt;quickstart document&lt;/a&gt;, you can follow the &lt;a href=&#34;https://developer.fermyon.com/spin/rust-components/&#34;&gt;Rust&lt;/a&gt; or &lt;a href=&#34;https://developer.fermyon.com/spin/go-components/&#34;&gt;Go&lt;/a&gt; language guides, and the &lt;a href=&#34;https://developer.fermyon.com/spin/configuration/&#34;&gt;guide on configuring Spin applications&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;After you build your application, run it using Spin:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ spin up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We are delighted that you are interested in making Spin better! Thank you! Please follow the &lt;a href=&#34;https://developer.fermyon.com/spin/contributing&#34;&gt;contributing guide&lt;/a&gt;. And join our &lt;a href=&#34;https://discord.gg/eGN8saYqCk&#34;&gt;Discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Developer Meetings&lt;/h2&gt; &#xA;&lt;p&gt;Join the Spin monthly developer meetings, which will be announced in our &lt;a href=&#34;https://discord.gg/eGN8saYqCk&#34;&gt;Discord server&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>slint-ui/slint</title>
    <updated>2023-04-09T02:01:30Z</updated>
    <id>tag:github.com,2023-04-09:/slint-ui/slint</id>
    <link href="https://github.com/slint-ui/slint" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Slint is a toolkit to efficiently develop fluid graphical user interfaces for any display: embedded devices and desktop applications. We support multiple programming languages, such as Rust, C++, or JavaScript.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/logo/slint-logo-full-light.svg#gh-light-mode-only&#34; alt=&#34;Slint&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/logo/slint-logo-full-white.svg#gh-dark-mode-only&#34; alt=&#34;Slint&#34;&gt;&lt;/h1&gt; &#xA;&lt;!-- cSpell: ignore ChipTrack Moiré Trolltech valign Woboq --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/slint-ui/slint/actions&#34;&gt;&lt;img src=&#34;https://github.com/slint-ui/slint/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://api.reuse.software/info/github.com/slint-ui/slint&#34;&gt;&lt;img src=&#34;https://api.reuse.software/badge/github.com/slint-ui/slint&#34; alt=&#34;REUSE status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/slint-ui/slint/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/slint-ui/slint&#34; alt=&#34;Discussions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Slint is a toolkit to efficiently develop fluid graphical user interfaces for any display: embedded devices and desktop applications. We support multiple programming languages, such as Rust, C++, and JavaScript. We invite you to use Slint and be part of its community.&lt;/p&gt; &#xA;&lt;h2&gt;Design Goals&lt;/h2&gt; &#xA;&lt;p&gt;We use the following design goals as a guide when developing Slint:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Scalable&lt;/strong&gt;: Run on any screen connected to a device, from desktop computers to low end embedded systems.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Lightweight&lt;/strong&gt;: Fit into a few hundred kilobytes of RAM and require little processing power.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Intuitive&lt;/strong&gt;: Both developers and designers should feel productive and enjoy the design and development process. The APIs should be consistent and easy to use, no matter the target language.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Native&lt;/strong&gt;: Slint apps should match the users&#39; expectations of a native application. Various target platforms such as embedded devices, desktops, mobile and web should be supported so that both the user and the developer feel comfortable on their platform of choice.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;The .slint Markup Language&lt;/h2&gt; &#xA;&lt;p&gt;Slint comes with a markup language that is specifically designed for user interfaces. This language is easy to learn, to read and write, and provides a powerful way to describe graphical elements, their placement, and the flow of data through the different states. It&#39;s a familiar syntax to describe the hierarchy of elements and property bindings.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s the obligatory &#34;Hello World&#34;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-slint&#34;&gt;export component HelloWorld inherits Window {&#xA;    width: 400px;&#xA;    height: 400px;&#xA;&#xA;    Text {&#xA;       y: parent.width / 2;&#xA;       x: parent.x + 200px;&#xA;       text: &#34;Hello, world&#34;;&#xA;       color: blue;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Current Status&lt;/h2&gt; &#xA;&lt;p&gt;Slint is in active development. The state of the toolkit for each platform is as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Embedded&lt;/strong&gt;: &lt;em&gt;Ready&lt;/em&gt; Slint is already being used in production projects by customers (running on an Arm processor with Linux).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Microcontrollers&lt;/strong&gt; (MCU): &lt;em&gt;Ready&lt;/em&gt;. Slint apps can run on MCUs with less than 300K of RAM.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Desktop&lt;/strong&gt;: &lt;em&gt;In Progress&lt;/em&gt;. While Slint is a good fit on Windows, Linux and Mac, we are working on improving the platform support in subsequent releases.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mobile&lt;/strong&gt; (Android/iOS): &lt;em&gt;Todo&lt;/em&gt;. We haven&#39;t started supporting mobile platforms yet, but it is our intention to do so in the near future.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Web&lt;/strong&gt;: &lt;em&gt;In Progress&lt;/em&gt;. Slint apps can be compiled to WebAssembly and can run in a web browser. As there are many other web frameworks, the web platform is not one of our primary target platforms. The web support is currently limited to demo purposes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Accessibility&lt;/h3&gt; &#xA;&lt;p&gt;Slint supports keyboard based navigation of many widgets, and user interfaces are scalable. The basic infrastructure for assistive technology like screen readers is in place, but currently requires the Qt backend. We&#39;re aware that more work is needed to get best-of-class support for users with special needs.&lt;/p&gt; &#xA;&lt;h3&gt;Stay up to date&lt;/h3&gt; &#xA;&lt;p&gt;Follow &lt;a href=&#34;https://twitter.com/slint_ui&#34;&gt;@slint-ui&lt;/a&gt; on Twitter or keep an eye out for our &lt;a href=&#34;https://slint-ui.com/thisweek/&#34;&gt;🥠 Weekly Status Updates&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For more details, check out the &lt;a href=&#34;https://slint-ui.com/docs/slint&#34;&gt;Slint Language Documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/examples&#34;&gt;examples&lt;/a&gt; folder contains examples and demos, showing how to use the Slint markup language and how to interact with a Slint user interface from supported programming languages.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;docs&lt;/code&gt; folder contains a lot more information, including &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/docs/building.md&#34;&gt;build instructions&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/docs/development.md&#34;&gt;internal developer docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Refer to the README of each language directory in the &lt;code&gt;api&lt;/code&gt; folder:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/api/cpp&#34;&gt;C++&lt;/a&gt; (&lt;a href=&#34;https://slint-ui.com/docs/cpp&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://slint-ui.com/docs/tutorial/cpp&#34;&gt;Tutorial&lt;/a&gt; | &lt;a href=&#34;https://youtu.be/_-Hxr6ZrHyo&#34;&gt;Tutorial Video&lt;/a&gt; | &lt;a href=&#34;https://github.com/slint-ui/slint-cpp-template&#34;&gt;Getting Started Template&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/api/rs/slint&#34;&gt;Rust&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/slint&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/slint&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt; (&lt;a href=&#34;https://slint-ui.com/docs/rust/slint/&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://slint-ui.com/docs/tutorial/rust&#34;&gt;Tutorial&lt;/a&gt; | &lt;a href=&#34;https://youtu.be/_-Hxr6ZrHyo&#34;&gt;Tutorial Video&lt;/a&gt; | &lt;a href=&#34;https://github.com/slint-ui/slint-rust-template&#34;&gt;Getting Started Template&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/api/node&#34;&gt;JavaScript/NodeJS (Beta)&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/slint-ui&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/slint-ui&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; (&lt;a href=&#34;https://slint-ui.com/docs/node&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://slint-ui.com/docs/tutorial/node&#34;&gt;Tutorial&lt;/a&gt; | &lt;a href=&#34;https://github.com/slint-ui/slint-nodejs-template&#34;&gt;Getting Started Template&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demos&lt;/h2&gt; &#xA;&lt;h3&gt;Embedded&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=_BDbNHrjK7g&#34;&gt;Video of Slint on RaspberryPi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;MCU&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;STM32&lt;/th&gt; &#xA;   &lt;th&gt;RP2040&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=NNNOJJsOAis&#34;&gt;Video of Slint on STM32&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=dkBwNocItGs&#34;&gt;Video of Slint on RP2040&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;WebAssembly&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Printer Demo&lt;/th&gt; &#xA;   &lt;th&gt;Slide Puzzle&lt;/th&gt; &#xA;   &lt;th&gt;Energy Monitor&lt;/th&gt; &#xA;   &lt;th&gt;Widget Gallery&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://slint-ui.com/demos/printerdemo/&#34;&gt;&lt;img src=&#34;https://slint-ui.com/resources/printerdemo_screenshot.png&#34; alt=&#34;Screenshot of the Printer Demo&#34; title=&#34;Printer Demo&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://slint-ui.com/demos/slide_puzzle/&#34;&gt;&lt;img src=&#34;https://slint-ui.com/resources/puzzle_screenshot.png&#34; alt=&#34;Screenshot of the Slide Puzzle&#34; title=&#34;Slide Puzzle&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://slint-ui.com/demos/energy-monitor/&#34;&gt;&lt;img src=&#34;https://slint-ui.com/resources/energy-monitor-screenshot.png&#34; alt=&#34;Screenshot of the Energy Monitor Demo&#34; title=&#34;Energy Monitor Demo&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://slint-ui.com/demos/gallery/&#34;&gt;&lt;img src=&#34;https://slint-ui.com/resources/gallery_screenshot.png&#34; alt=&#34;Screenshot of the Gallery Demo&#34; title=&#34;Gallery Demo&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Desktop Native Widgets&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Windows&lt;/th&gt; &#xA;   &lt;th&gt;macOS&lt;/th&gt; &#xA;   &lt;th&gt;Linux&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://slint-ui.com/resources/gallery_win_screenshot.png&#34; alt=&#34;Screenshot of the Gallery on Windows&#34; title=&#34;Gallery&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://slint-ui.com/resources/gallery_mac_screenshot.png&#34; alt=&#34;Screenshot of the Gallery on macOS&#34; title=&#34;Gallery&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://slint-ui.com/resources/gallery_linux_screenshot.png&#34; alt=&#34;Screenshot of the Gallery on Linux&#34; title=&#34;Gallery&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;An application is composed of the business logic written in Rust, C++, or JavaScript and the &lt;code&gt;.slint&lt;/code&gt; user interface design markup, which is compiled to native code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://slint-ui.com/resources/architecture.drawio.svg?sanitize=true&#34; alt=&#34;Architecture Overview&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Compiler&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;.slint&lt;/code&gt; files are compiled ahead of time. The expressions in the &lt;code&gt;.slint&lt;/code&gt; are pure functions that the compiler can optimize. For example, the compiler could choose to &#34;inline&#34; properties and remove those that are constant or unchanged. In the future we hope to improve rendering time on low end devices by pre-processing images and text. The compiler could determine that a &lt;code&gt;Text&lt;/code&gt; or an &lt;code&gt;Image&lt;/code&gt; element is always on top of another &lt;code&gt;Image&lt;/code&gt; in the same location. Consequently both elements could be rendered ahead of time into a single element, thus cutting down on rendering time.&lt;/p&gt; &#xA;&lt;p&gt;The compiler uses the typical compiler phases of lexing, parsing, optimization, and finally code generation. It provides different back-ends for code generation in the target language. The C++ code generator produces a C++ header file, the Rust generator produces Rust code, and so on. An interpreter for dynamic languages is also included.&lt;/p&gt; &#xA;&lt;h3&gt;Runtime&lt;/h3&gt; &#xA;&lt;p&gt;The runtime library consists of an engine that supports properties declared in the &lt;code&gt;.slint&lt;/code&gt; language. Components with their elements, items, and properties are laid out in a single memory region, to reduce memory allocations.&lt;/p&gt; &#xA;&lt;p&gt;Rendering backends and styles are configurable at compile time:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;femtovg&lt;/code&gt; renderer uses OpenGL ES 2.0 for rendering.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;skia&lt;/code&gt; renderer uses &lt;a href=&#34;https://skia.org&#34;&gt;Skia&lt;/a&gt; for rendering.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;software&lt;/code&gt; renderer uses the CPU with no additional dependencies.&lt;/li&gt; &#xA; &lt;li&gt;When Qt is installed on the system, the &lt;code&gt;native&lt;/code&gt; style uses Qt&#39;s QStyle to achieve native looking widgets.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Tooling&lt;/h3&gt; &#xA;&lt;p&gt;We have a few tools to help with the development of .slint files:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/tools/lsp&#34;&gt;&lt;strong&gt;LSP Server&lt;/strong&gt;&lt;/a&gt; that adds features like auto-complete and live preview of the .slint files to many editors.&lt;/li&gt; &#xA; &lt;li&gt;It is bundled in a &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/editors/vscode&#34;&gt;&lt;strong&gt;Visual Studio Code Extension&lt;/strong&gt;&lt;/a&gt; available from the market place.&lt;/li&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/tools/viewer&#34;&gt;&lt;strong&gt;slint-viewer&lt;/strong&gt;&lt;/a&gt; tool which displays the .slint files. The &lt;code&gt;--auto-reload&lt;/code&gt; argument makes it easy to preview your UI while you are working on it (when using the LSP preview is not possible).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://slint-ui.com/editor&#34;&gt;&lt;strong&gt;SlintPad&lt;/strong&gt;&lt;/a&gt;, an online editor to try out .slint syntax without installing anything (&lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/tools/slintpad&#34;&gt;sources&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;An &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/tools/updater&#34;&gt;&lt;strong&gt;updater&lt;/strong&gt;&lt;/a&gt; to convert the .slint files from previous versions to newer versions.&lt;/li&gt; &#xA; &lt;li&gt;An experimental &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/tools/figma_import&#34;&gt;&lt;strong&gt;Figma importer&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please check our &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/editors/README.md&#34;&gt;Editors README&lt;/a&gt; for tips on how to configure your favorite editor to work well with Slint.&lt;/p&gt; &#xA;&lt;h2&gt;Made with Slint&lt;/h2&gt; &#xA;&lt;p&gt;List of some open source projects using Slint: (Contact us or open a pull request to add yours)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/slint-ui/cargo-ui&#34;&gt;Cargo UI&lt;/a&gt;&lt;/strong&gt;: A graphical frontend for Cargo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Futsch1/image-sieve&#34;&gt;ImageSieve&lt;/a&gt;&lt;/strong&gt; : GUI based tool to sort and categorize images.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://codeberg.org/moire/moire&#34;&gt;Moiré&lt;/a&gt;&lt;/strong&gt; : Musical live performance application with a DAW-like timeline interface.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/jturcotte/chiptrack&#34;&gt;Chiptrack&lt;/a&gt;&lt;/strong&gt;: A cross-platform sequencer that internally uses a Game Boy emulator to synthesize the sound.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Project-Trains/launcher&#34;&gt;Project Trains Launcher&lt;/a&gt;&lt;/strong&gt;: Cross-platform game launcher made for Project Trains simulator.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/ElevenJune/mastermind_Rust&#34;&gt;Mastermind&lt;/a&gt;&lt;/strong&gt;: Mastermind game coded in Rust.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://codeberg.org/flovansl/co_sl&#34;&gt;coop_widgets&lt;/a&gt;&lt;/strong&gt;: Custom widget library for Slint &lt;a href=&#34;https://flovansl.codeberg.page/coop_sl/snapshots/examples/widgets/&#34;&gt;online demo&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Slint is available under either a &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/LICENSES/LicenseRef-Slint-commercial.md&#34;&gt;proprietary license&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/LICENSES/GPL-3.0-only.txt&#34;&gt;GNU GPLv3&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The proprietary license is provided free-of-charge in exchange for (1) consent that we can showcase the application, (2) attribution of Slint in the application and (3) feedback to improve Slint. Check out our &lt;a href=&#34;https://slint-ui.com/ambassador-program.html&#34;&gt;ambassador program&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See also the &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/FAQ.md#licensing&#34;&gt;Licensing FAQ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;We welcome your contributions: in the form of code, bug reports or feedback.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you see an &lt;a href=&#34;https://github.com/slint-ui/slint/labels/rfc&#34;&gt;RFC tag&lt;/a&gt; on an issue, feel free to chime in.&lt;/li&gt; &#xA; &lt;li&gt;For contribution guidelines see &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;. The dual-licensing of Slint requires the contributor to accept our CLA.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; &#xA;&lt;p&gt;Please see our separate &lt;a href=&#34;https://raw.githubusercontent.com/slint-ui/slint/master/FAQ.md&#34;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;About us (SixtyFPS GmbH)&lt;/h2&gt; &#xA;&lt;p&gt;We are passionate about software - API design, cross-platform software development and user interface components. Our aim is to make developing user interfaces fun for everyone: from JavaScript, C++, or Rust developers all the way to UI/UX designers. We believe that software grows organically and keeping it open source is the best way to sustain that growth. Our team members are located remotely in Germany.&lt;/p&gt; &#xA;&lt;h2&gt;Contact us&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to join &lt;a href=&#34;https://github.com/slint-ui/slint/discussions&#34;&gt;Github discussions&lt;/a&gt; for general chat or questions. Use &lt;a href=&#34;https://github.com/slint-ui/slint/issues&#34;&gt;Github issues&lt;/a&gt; to report public suggestions or bugs.&lt;/p&gt; &#xA;&lt;p&gt;We chat in &lt;a href=&#34;https://chat.slint-ui.com&#34;&gt;our Mattermost instance&lt;/a&gt; where you are welcome to listen in or ask your questions.&lt;/p&gt; &#xA;&lt;p&gt;You can of course also tweet at &lt;a href=&#34;https://twitter.com/slint_ui&#34;&gt;@slint-ui&lt;/a&gt; or contact us privately via email to &lt;a href=&#34;mailto://info@slint-ui.com&#34;&gt;info@slint-ui.com&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>