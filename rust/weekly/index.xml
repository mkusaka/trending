<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-27T01:46:48Z</updated>
  <subtitle>Weekly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cachix/devenv</title>
    <updated>2025-07-27T01:46:48Z</updated>
    <id>tag:github.com,2025-07-27:/cachix/devenv</id>
    <link href="https://github.com/cachix/devenv" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fast, Declarative, Reproducible, and Composable Developer Environments using Nix&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://devenv.sh&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;logos/devenv-horizontal-light-bg.svg&#34;&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;logos/devenv-horizontal-dark-bg.svg&#34;&gt; &#xA;   &lt;img src=&#34;https://raw.githubusercontent.com/cachix/devenv/main/logos/devenv-horizontal-light-bg.svg?sanitize=true&#34; width=&#34;500px&#34; alt=&#34;devenv logo&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://devenv.sh&#34;&gt;devenv.sh&lt;/a&gt; - Fast, Declarative, Reproducible, and Composable Developer Environments&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://builtwithnix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?logo=nixos&amp;amp;logoColor=white&amp;amp;label=&amp;amp;message=Built%20with%20Nix&amp;amp;color=41439a&#34; alt=&#34;Built with Nix&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/naMgvexb6q&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscord.com%2Fapi%2Finvites%2FnaMgvexb6q%3Fwith_counts%3Dtrue&amp;amp;query=%24.approximate_member_count&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;label=Discord%20users&amp;amp;color=green&amp;amp;style=flat&#34; alt=&#34;Discord channel&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/license/cachix/devenv&#34; alt=&#34;License: Apache 2.0&#34;&gt; &lt;a href=&#34;https://github.com/cachix/devenv/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/cachix/devenv?color=green&amp;amp;label=version&amp;amp;sort=semver&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cachix/devenv/actions/workflows/buildtest.yml?branch=main&#34;&gt;&lt;img src=&#34;https://github.com/cachix/devenv/actions/workflows/buildtest.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Running &lt;code&gt;devenv init&lt;/code&gt; generates &lt;code&gt;devenv.nix&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-nix&#34;&gt;{ pkgs, ... }:&#xA;&#xA;{&#xA;  # https://devenv.sh/basics/&#xA;  env.GREET = &#34;devenv&#34;;&#xA;&#xA;  # https://devenv.sh/packages/&#xA;  packages = [ pkgs.git ];&#xA;&#xA;  enterShell = &#39;&#39;&#xA;    hello&#xA;  &#39;&#39;;&#xA;&#xA;  # https://devenv.sh/tests/&#xA;  enterTest = &#39;&#39;&#xA;    echo &#34;Running tests&#34;&#xA;    git --version | grep --color=auto &#34;${pkgs.git.version}&#34;&#xA;  &#39;&#39;;&#xA;&#xA;  # https://devenv.sh/languages/&#xA;  languages.nix.enable = true;&#xA;&#xA;  # https://devenv.sh/scripts/&#xA;  scripts.hello.exec = &#34;echo hello from $GREET&#34;;&#xA;&#xA;  # https://devenv.sh/services/&#xA;  services.postgres.enable = true;&#xA;&#xA;  # https://devenv.sh/git-hooks/&#xA;  git-hooks.hooks.shellcheck.enable = true;&#xA;&#xA;  # https://devenv.sh/processes/&#xA;  processes.ping.exec = &#34;ping localhost&#34;;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And &lt;code&gt;devenv shell&lt;/code&gt; activates the environment.&lt;/p&gt; &#xA;&lt;h2&gt;Commands&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ devenv&#xA;https://devenv.sh 1.6.0: Fast, Declarative, Reproducible, and Composable Developer Environments&#xA;&#xA;Usage: devenv [OPTIONS] [COMMAND]&#xA;&#xA;Commands:&#xA;  init       Scaffold devenv.yaml, devenv.nix, .gitignore and .envrc.&#xA;  generate   Generate devenv.yaml and devenv.nix using AI&#xA;  shell      Activate the developer environment. https://devenv.sh/basics/&#xA;  update     Update devenv.lock from devenv.yaml inputs. http://devenv.sh/inputs/&#xA;  search     Search for packages and options in nixpkgs. https://devenv.sh/packages/#searching-for-a-file&#xA;  info       Print information about this developer environment.&#xA;  up         Start processes in the foreground. https://devenv.sh/processes/&#xA;  processes  Start or stop processes. https://devenv.sh/processes/&#xA;  tasks      Run tasks. https://devenv.sh/tasks/&#xA;  test       Run tests. http://devenv.sh/tests/&#xA;  container  Build, copy, or run a container. https://devenv.sh/containers/&#xA;  inputs     Add an input to devenv.yaml. https://devenv.sh/inputs/&#xA;  repl       Launch an interactive environment for inspecting the devenv configuration.&#xA;  gc         Delete previous shell generations. See https://devenv.sh/garbage-collection&#xA;  build      Build any attribute in devenv.nix.&#xA;  direnvrc   Print a direnvrc that adds devenv support to direnv. See https://devenv.sh/automatic-shell-activation.&#xA;  version    Print the version of devenv.&#xA;  help       Print this message or the help of the given subcommand(s)&#xA;&#xA;Options:&#xA;  -V, --version&#xA;          Print version information and exit&#xA;&#xA;  -v, --verbose&#xA;          Enable additional debug logs.&#xA;&#xA;  -q, --quiet&#xA;          Silence all logs&#xA;&#xA;      --log-format &amp;lt;LOG_FORMAT&amp;gt;&#xA;          Configure the output format of the logs.&#xA;&#xA;          [default: cli]&#xA;&#xA;          Possible values:&#xA;          - cli:            The default human-readable log format used in the CLI&#xA;          - tracing-full:   A verbose structured log format used for debugging&#xA;          - tracing-pretty: A pretty human-readable log format used for debugging&#xA;&#xA;  -j, --max-jobs &amp;lt;MAX_JOBS&amp;gt;&#xA;          Maximum number of Nix builds at any time.&#xA;&#xA;          [default: 8]&#xA;&#xA;  -u, --cores &amp;lt;CORES&amp;gt;&#xA;          Maximum number CPU cores being used by a single build.&#xA;&#xA;          [default: 2]&#xA;&#xA;  -s, --system &amp;lt;SYSTEM&amp;gt;&#xA;          [default: x86_64-linux]&#xA;&#xA;  -i, --impure&#xA;          Relax the hermeticity of the environment.&#xA;&#xA;      --no-eval-cache&#xA;          Disable caching of Nix evaluation results.&#xA;&#xA;      --refresh-eval-cache&#xA;          Force a refresh of the Nix evaluation cache.&#xA;&#xA;      --offline&#xA;          Disable substituters and consider all previously downloaded files up-to-date.&#xA;&#xA;  -c, --clean [&amp;lt;CLEAN&amp;gt;...]&#xA;          Ignore existing environment variables when entering the shell. Pass a list of comma-separated environment variables to let through.&#xA;&#xA;      --nix-debugger&#xA;          Enter the Nix debugger on failure.&#xA;&#xA;  -n, --nix-option &amp;lt;NAME&amp;gt; &amp;lt;VALUE&amp;gt;&#xA;          Pass additional options to nix commands.&#xA;&#xA;          These options are passed directly to Nix using the --option flag.&#xA;          See `man nix.conf` for the full list of available options.&#xA;&#xA;          Examples:&#xA;            --nix-option sandbox false&#xA;            --nix-option keep-outputs true&#xA;            --nix-option system x86_64-darwin&#xA;&#xA;  -o, --override-input &amp;lt;NAME&amp;gt; &amp;lt;URI&amp;gt;&#xA;          Override inputs in devenv.yaml.&#xA;&#xA;          Examples:&#xA;            --override-input nixpkgs github:NixOS/nixpkgs/nixos-unstable&#xA;            --override-input nixpkgs path:/path/to/local/nixpkgs&#xA;&#xA;  -O, --option &amp;lt;OPTION&amp;gt; &amp;lt;VALUE&amp;gt;&#xA;          Override configuration options with typed values.&#xA;&#xA;          OPTION must include a type: &amp;lt;attribute&amp;gt;:&amp;lt;type&amp;gt;&#xA;          Supported types: string, int, float, bool, path&#xA;&#xA;          Examples:&#xA;            --option languages.rust.channel:string beta&#xA;            --option services.postgres.enable:bool true&#xA;            --option languages.python.version:string 3.10&#xA;&#xA;  -h, --help&#xA;          Print help (see a summary with &#39;-h&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devenv.sh/getting-started/&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devenv.sh/basics/&#34;&gt;Basics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devenv.sh/roadmap/&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devenv.sh/blog/&#34;&gt;Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devenv.sh/reference/yaml-options/&#34;&gt;&lt;code&gt;devenv.yaml&lt;/code&gt; reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devenv.sh/reference/options/&#34;&gt;&lt;code&gt;devenv.nix&lt;/code&gt; reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devenv.sh/community/contributing/&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>szabodanika/microbin</title>
    <updated>2025-07-27T01:46:48Z</updated>
    <id>tag:github.com,2025-07-27:/szabodanika/microbin</id>
    <link href="https://github.com/szabodanika/microbin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A secure, configurable file-sharing and URL shortening web app written in Rust.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/szabodanika/microbin/master/.github/index.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;MicroBin&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/szabodanika/microbin/actions/workflows/rust.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt; &lt;a href=&#34;https://crates.io/crates/microbin&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/microbin.svg?sanitize=true&#34; alt=&#34;crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/danielszabo99/microbin&#34;&gt;&lt;img src=&#34;https://github.com/szabodanika/microbin/actions/workflows/release.yml/badge.svg?sanitize=true&#34; alt=&#34;Docker Image&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://img.shields.io/docker/pulls/danielszabo99/microbin?label=Docker%20pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/danielszabo99/microbin?label=Docker%20pulls&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;MicroBin is a super tiny, feature-rich, configurable, self-contained and self-hosted paste bin web application. It is very easy to set up and use, and will only require a few megabytes of memory and disk storage. It takes only a couple minutes to set it up, why not give it a try now?&lt;/p&gt; &#xA;&lt;h3&gt;Check out the Public Test Server at &lt;a href=&#34;https://pub.microbin.eu&#34;&gt;pub.microbin.eu&lt;/a&gt;!&lt;/h3&gt; &#xA;&lt;h3&gt;Or host MicroBin yourself&lt;/h3&gt; &#xA;&lt;p&gt;Run our quick docker setup script (&lt;a href=&#34;https://hub.docker.com/r/danielszabo99/microbin&#34;&gt;DockerHub&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash &amp;lt;(curl -s https://microbin.eu/docker.sh)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or install it manually from &lt;a href=&#34;https://crates.io/crates/microbin&#34;&gt;Cargo&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo install microbin;&#xA;curl -L -O https://raw.githubusercontent.com/szabodanika/microbin/master/.env;&#xA;source .env;&#xA;microbin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On our website &lt;a href=&#34;https://microbin.eu&#34;&gt;microbin.eu&lt;/a&gt;, you will find the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://microbin.eu/screenshots/&#34;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://microbin.eu/docs/intro&#34;&gt;Guide and Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://microbin.eu/sponsorship&#34;&gt;Donations and Sponsorships&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://microbin.eu/roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Entirely self-contained executable, MicroBin is a single file!&lt;/li&gt; &#xA; &lt;li&gt;Server-side and client-side encryption&lt;/li&gt; &#xA; &lt;li&gt;File uploads (e.g. &lt;code&gt;server.com/file/pig-dog-cat&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Raw text serving (e.g. &lt;code&gt;server.com/raw/pig-dog-cat&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;QR code support&lt;/li&gt; &#xA; &lt;li&gt;URL shortening and redirection&lt;/li&gt; &#xA; &lt;li&gt;Animal names instead of random numbers for upload identifiers (64 animals)&lt;/li&gt; &#xA; &lt;li&gt;SQLite and JSON database support&lt;/li&gt; &#xA; &lt;li&gt;Private and public, editable and uneditable, automatically and never expiring uploads&lt;/li&gt; &#xA; &lt;li&gt;Automatic dark mode and custom styling support with very little CSS and only vanilla JS (see &lt;a href=&#34;https://github.com/kognise/water.css&#34;&gt;&lt;code&gt;water.css&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;And much more!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is an upload?&lt;/h2&gt; &#xA;&lt;p&gt;In MicroBin, an upload can be:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A text that you want to paste from one machine to another, e.g. some code,&lt;/li&gt; &#xA; &lt;li&gt;A file that you want to share, e.g. a video that is too large for Discord, a zip with a code project in it or an image,&lt;/li&gt; &#xA; &lt;li&gt;A URL redirection.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;When is MicroBin useful?&lt;/h2&gt; &#xA;&lt;p&gt;You can use MicroBin:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To send long texts to other people,&lt;/li&gt; &#xA; &lt;li&gt;To send large files to other people,&lt;/li&gt; &#xA; &lt;li&gt;To share secrets or sensitive documents securely,&lt;/li&gt; &#xA; &lt;li&gt;As a URL shortener/redirect service,&lt;/li&gt; &#xA; &lt;li&gt;To serve content on the web, eg . configuration files for testing, images, or any other file content using the Raw functionality,&lt;/li&gt; &#xA; &lt;li&gt;To move files between your desktop and a server you access from the console,&lt;/li&gt; &#xA; &lt;li&gt;As a &#34;postbox&#34; service where people can upload their files or texts, but they cannot see or remove what others sent you,&lt;/li&gt; &#xA; &lt;li&gt;Or even to take quick notes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;...and many other things, why not get creative?&lt;/p&gt; &#xA;&lt;p&gt;MicroBin and MicroBin.eu are available under the &lt;a href=&#34;https://raw.githubusercontent.com/szabodanika/microbin/master/LICENSE&#34;&gt;BSD 3-Clause License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;© Dániel Szabó 2022-2024&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fujiapple852/trippy</title>
    <updated>2025-07-27T01:46:48Z</updated>
    <id>tag:github.com,2025-07-27:/fujiapple852/trippy</id>
    <link href="https://github.com/fujiapple852/trippy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A network diagnostic tool&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/fujiapple852/trippy/master/docs/src/assets/Trippy-Vertical-DarkMode.svg#gh-dark-mode-only&#34; width=&#34;300&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/fujiapple852/trippy/master/docs/src/assets/Trippy-Vertical.svg#gh-light-mode-only&#34; width=&#34;300&#34;&gt;&lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/fujiapple852/trippy/actions/workflows/ci.yml&#34;&gt; &lt;img src=&#34;https://github.com/fujiapple852/trippy/actions/workflows/ci.yml/badge.svg?branch=master&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/trippy/0.13.0&#34;&gt; &lt;img src=&#34;https://img.shields.io/crates/v/trippy.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://repology.org/project/trippy/versions&#34;&gt; &lt;img src=&#34;https://repology.org/badge/tiny-repos/trippy.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://trippy.zulipchat.com&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/zulip-join_chat-brightgreen.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/%23trippy-dev:matrix.org&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/matrix/trippy-dev:matrix.org-blue&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; Trippy combines the functionality of traceroute and ping and is designed to assist with the analysis of networking issues. &lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/fujiapple852/trippy/master/assets/0.12.0/demo.gif&#34; alt=&#34;trippy&#34;&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://trippy.rs/start/getting-started&#34;&gt;getting started&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;p&gt;Trippy runs on Linux, BSD, macOS, and Windows. It can be installed from most package managers, precompiled binaries, or source.&lt;/p&gt; &#xA;&lt;p&gt;For example, to install Trippy from &lt;code&gt;cargo&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo install trippy --locked&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;All package managers&lt;/summary&gt; &#xA; &lt;h3&gt;Cargo&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://crates.io/crates/trippy/0.13.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/trippy&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo install trippy --locked&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;APT (Debian)&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://tracker.debian.org/pkg/trippy&#34;&gt;&lt;img src=&#34;https://repology.org/badge/version-for-repo/debian_13/trippy.svg?sanitize=true&#34; alt=&#34;Debian 13 package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;apt install trippy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;ⓘ Note:&lt;/p&gt; &#xA;  &lt;p&gt;Only available for Debian 13 (&lt;code&gt;trixie&lt;/code&gt;) and later.&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;h3&gt;PPA (Ubuntu)&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://launchpad.net/~fujiapple/+archive/ubuntu/trippy/+packages&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Ubuntu%20PPA-0.13.0-brightgreen&#34; alt=&#34;Ubuntu PPA&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;add-apt-repository ppa:fujiapple/trippy&#xA;apt update &amp;amp;&amp;amp; apt install trippy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;ⓘ Note:&lt;/p&gt; &#xA;  &lt;p&gt;Only available for Ubuntu 24.04 (&lt;code&gt;Noble&lt;/code&gt;) and 22.04 (&lt;code&gt;Jammy&lt;/code&gt;).&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;h3&gt;Snap (Linux)&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://snapcraft.io/trippy&#34;&gt;&lt;img src=&#34;https://snapcraft.io/trippy/badge.svg?sanitize=true&#34; alt=&#34;trippy&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;snap install trippy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Homebrew (macOS)&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://formulae.brew.sh/formula/trippy&#34;&gt;&lt;img src=&#34;https://repology.org/badge/version-for-repo/homebrew/trippy.svg?sanitize=true&#34; alt=&#34;Homebrew package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew install trippy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;WinGet (Windows)&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/winget-pkgs/tree/master/manifests/f/FujiApple/Trippy/0.13.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/WinGet-0.13.0-brightgreen&#34; alt=&#34;winget package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;winget install trippy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Scoop (Windows)&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/ScoopInstaller/Main/raw/master/bucket/trippy.json&#34;&gt;&lt;img src=&#34;https://img.shields.io/scoop/v/trippy?style=flat&amp;amp;labelColor=5c5c5c&amp;amp;color=%234dc71f&#34; alt=&#34;Scoop package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;scoop install trippy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Chocolatey (Windows)&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://community.chocolatey.org/packages/trippy&#34;&gt;&lt;img src=&#34;https://repology.org/badge/version-for-repo/chocolatey/trippy.svg?sanitize=true&#34; alt=&#34;Chocolatey package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;choco install trippy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;NetBSD&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://pkgsrc.se/net/trippy&#34;&gt;&lt;img src=&#34;https://repology.org/badge/version-for-repo/pkgsrc_current/trippy.svg?sanitize=true&#34; alt=&#34;pkgsrc current package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pkgin install trippy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;FreeBSD&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.freshports.org/net/trippy/&#34;&gt;&lt;img src=&#34;https://repology.org/badge/version-for-repo/freebsd/trippy.svg?sanitize=true&#34; alt=&#34;FreeBSD port&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pkg install trippy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;OpenBSD&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://openports.pl/path/net/trippy&#34;&gt;&lt;img src=&#34;https://repology.org/badge/version-for-repo/openbsd/trippy.svg?sanitize=true&#34; alt=&#34;OpenBSD port&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pkg_add trippy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Arch Linux&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://archlinux.org/packages/extra/x86_64/trippy&#34;&gt;&lt;img src=&#34;https://repology.org/badge/version-for-repo/arch/trippy.svg?sanitize=true&#34; alt=&#34;Arch package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pacman -S trippy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Gentoo Linux&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://packages.gentoo.org/packages/net-analyzer/trippy&#34;&gt;&lt;img src=&#34;https://repology.org/badge/version-for-repo/gentoo/trippy.svg?sanitize=true&#34; alt=&#34;Gentoo package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;emerge -av net-analyzer/trippy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Void Linux&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/void-linux/void-packages/tree/master/srcpkgs/trippy&#34;&gt;&lt;img src=&#34;https://repology.org/badge/version-for-repo/void_x86_64/trippy.svg?sanitize=true&#34; alt=&#34;Void Linux x86_64 package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;xbps-install -S trippy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;ALT Sisyphus&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://packages.altlinux.org/en/sisyphus/srpms/trippy/&#34;&gt;&lt;img src=&#34;https://repology.org/badge/version-for-repo/altsisyphus/trippy.svg?sanitize=true&#34; alt=&#34;ALT Sisyphus package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;apt-get install trippy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Chimera Linux&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/chimera-linux/cports/tree/master/user/trippy&#34;&gt;&lt;img src=&#34;https://repology.org/badge/version-for-repo/chimera/trippy.svg?sanitize=true&#34; alt=&#34;Chimera Linux package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;apk add trippy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Nix&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/NixOS/nixpkgs/raw/master/pkgs/by-name/tr/trippy/package.nix&#34;&gt;&lt;img src=&#34;https://repology.org/badge/version-for-repo/nix_unstable/trippy.svg?sanitize=true&#34; alt=&#34;nixpkgs unstable package&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;nix-env -iA trippy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;Docker&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/fujiapple/trippy/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/v/fujiapple/trippy&#34; alt=&#34;Docker Image Version (latest by date)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -it fujiapple/trippy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h3&gt;All Repositories&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://repology.org/project/trippy/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/trippy.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://trippy.rs/start/installation&#34;&gt;installation&lt;/a&gt; guide for details of how to install Trippy on your system.&lt;/p&gt; &#xA;&lt;h3&gt;Run&lt;/h3&gt; &#xA;&lt;p&gt;To run a basic trace to &lt;code&gt;example.com&lt;/code&gt; with default settings, use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo trip example.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://trippy.rs/guides/usage&#34;&gt;usage examples&lt;/a&gt; and &lt;a href=&#34;https://trippy.rs/reference/cli&#34;&gt;CLI reference&lt;/a&gt; for details of how to use Trippy. To use Trippy without elevated privileges, see the &lt;a href=&#34;https://trippy.rs/guides/privileges&#34;&gt;privileges&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Full documentation is available at &lt;a href=&#34;https://trippy.rs&#34;&gt;trippy.rs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;documentation links&lt;/summary&gt; &#xA; &lt;h2&gt;Getting Started&lt;/h2&gt; &#xA; &lt;p&gt;See the &lt;a href=&#34;https://trippy.rs/start/getting-started/&#34;&gt;Getting Started&lt;/a&gt; guide.&lt;/p&gt; &#xA; &lt;h2&gt;Features&lt;/h2&gt; &#xA; &lt;p&gt;See the &lt;a href=&#34;https://trippy.rs/start/features/&#34;&gt;Features&lt;/a&gt; list.&lt;/p&gt; &#xA; &lt;h2&gt;Distributions&lt;/h2&gt; &#xA; &lt;p&gt;See the &lt;a href=&#34;https://trippy.rs/start/installation/&#34;&gt;Distributions&lt;/a&gt; list.&lt;/p&gt; &#xA; &lt;h2&gt;Privileges&lt;/h2&gt; &#xA; &lt;p&gt;See the &lt;a href=&#34;https://trippy.rs/guides/privileges/&#34;&gt;Privileges&lt;/a&gt; guide.&lt;/p&gt; &#xA; &lt;h2&gt;Usage Examples&lt;/h2&gt; &#xA; &lt;p&gt;See the &lt;a href=&#34;https://trippy.rs/guides/usage/&#34;&gt;Usage Examples&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h2&gt;Command Reference&lt;/h2&gt; &#xA; &lt;p&gt;See the &lt;a href=&#34;https://trippy.rs/reference/cli/&#34;&gt;Command Reference&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h2&gt;Theme Reference&lt;/h2&gt; &#xA; &lt;p&gt;See the &lt;a href=&#34;https://trippy.rs/reference/theme/&#34;&gt;Theme Reference&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h2&gt;Column Reference&lt;/h2&gt; &#xA; &lt;p&gt;See the &lt;a href=&#34;https://trippy.rs/reference/column/&#34;&gt;Column Reference&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h2&gt;Configuration Reference&lt;/h2&gt; &#xA; &lt;p&gt;See the &lt;a href=&#34;https://trippy.rs/reference/configuration/&#34;&gt;Configuration Reference&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h2&gt;Locale Reference&lt;/h2&gt; &#xA; &lt;p&gt;See the &lt;a href=&#34;https://trippy.rs/reference/locale/&#34;&gt;Locale Reference&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h2&gt;Versions&lt;/h2&gt; &#xA; &lt;p&gt;See the &lt;a href=&#34;https://trippy.rs/reference/version/&#34;&gt;Version Reference&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; &#xA; &lt;h3&gt;Why does Trippy show &#34;Awaiting data...&#34;?&lt;/h3&gt; &#xA; &lt;p&gt;See the &lt;a href=&#34;https://trippy.rs/guides/faq/&#34;&gt;Awaiting Data&lt;/a&gt; guide.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a name=&#34;windows-defender&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;How do I allow incoming ICMP traffic in the Windows Defender firewall?&lt;/h3&gt; &#xA; &lt;p&gt;See the &lt;a href=&#34;https://trippy.rs/guides/windows_firewall/&#34;&gt;Windows Defender Firewall&lt;/a&gt; guide.&lt;/p&gt; &#xA; &lt;h3&gt;What are the recommended settings for Trippy?&lt;/h3&gt; &#xA; &lt;p&gt;See the &lt;a href=&#34;https://trippy.rs/guides/recommendation/&#34;&gt;Recommended Tracing Settings&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Trippy is made possible by &lt;a href=&#34;https://github.com/ratatui-org/ratatui&#34;&gt;ratatui&lt;/a&gt; ( formerly &lt;a href=&#34;https://github.com/fdehau/tui-rs&#34;&gt;tui-rs&lt;/a&gt;), &lt;a href=&#34;https://github.com/crossterm-rs/crossterm&#34;&gt;crossterm&lt;/a&gt; as well as &lt;a href=&#34;https://github.com/fujiapple852/trippy/raw/master/Cargo.toml&#34;&gt;several&lt;/a&gt; foundational Rust libraries.&lt;/p&gt; &#xA;&lt;p&gt;Trippy draws heavily from &lt;a href=&#34;https://github.com/traviscross/mtr&#34;&gt;mtr&lt;/a&gt; and also incorporates ideas from both &lt;a href=&#34;https://github.com/libparistraceroute/libparistraceroute&#34;&gt;libparistraceroute&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/insomniacslk/dublin-traceroute&#34;&gt;Dublin Traceroute&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The Trippy networking code is inspired by &lt;a href=&#34;https://github.com/libpnet/libpnet&#34;&gt;pnet&lt;/a&gt; and some elements of that codebase are incorporated in Trippy.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://en.wikipedia.org/wiki/Autonomous_system_(Internet)&#34;&gt;AS&lt;/a&gt; data is retrieved from the &lt;a href=&#34;https://team-cymru.com/community-services/ip-asn-mapping/#dns&#34;&gt;IP to ASN Mapping Service&lt;/a&gt; provided by &lt;a href=&#34;https://team-cymru.com&#34;&gt;Team Cymru&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://trippy.cli.rs&#34;&gt;trippy.cli.rs&lt;/a&gt; CNAME hosting is provided by &lt;a href=&#34;https://cli.rs&#34;&gt;cli.rs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The Trippy chat room is sponsored by &lt;a href=&#34;https://zulip.com&#34;&gt;Zulip&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Trippy logo designed by &lt;a href=&#34;https://www.instagram.com/harunocaksiz&#34;&gt;Harun Ocaksiz Design&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is distributed under the terms of the Apache License (Version 2.0).&lt;/p&gt; &#xA;&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in time by you, as defined in the Apache-2.0 license, shall be licensed as above, without any additional terms or conditions.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/fujiapple852/trippy/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;Copyright 2022 &lt;a href=&#34;https://github.com/fujiapple852/trippy/graphs/contributors&#34;&gt;Trippy Contributors&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>