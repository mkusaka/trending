<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-25T02:05:11Z</updated>
  <subtitle>Weekly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>LemmyNet/lemmy</title>
    <updated>2023-06-25T02:05:11Z</updated>
    <id>tag:github.com,2023-06-25:/LemmyNet/lemmy</id>
    <link href="https://github.com/LemmyNet/lemmy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🐀 A link aggregator and forum for the fediverse&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/tag/LemmyNet/lemmy.svg?sanitize=true&#34; alt=&#34;GitHub tag (latest SemVer)&#34;&gt; &lt;a href=&#34;https://woodpecker.join-lemmy.org/LemmyNet/lemmy&#34;&gt;&lt;img src=&#34;https://woodpecker.join-lemmy.org/api/badges/LemmyNet/lemmy/status.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/LemmyNet/lemmy/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/LemmyNet/lemmy.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cloud.docker.com/repository/docker/dessalines/lemmy/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/dessalines/lemmy.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://weblate.join-lemmy.org/engage/lemmy/&#34;&gt;&lt;img src=&#34;http://weblate.join-lemmy.org/widgets/lemmy/-/lemmy/svg-badge.svg?sanitize=true&#34; alt=&#34;Translation status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/LemmyNet/lemmy/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/LemmyNet/lemmy.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/LemmyNet/lemmy?style=social&#34; alt=&#34;GitHub stars&#34;&gt; &lt;a href=&#34;https://codeberg.org/teaserbot-labs/delightful-humane-design&#34;&gt;&lt;img src=&#34;https://codeberg.org/teaserbot-labs/delightful-humane-design/raw/branch/main/humane-tech-badge.svg?sanitize=true&#34; alt=&#34;Delightful Humane Tech&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;span&gt;English&lt;/span&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/LemmyNet/lemmy/main/readmes/README.es.md&#34;&gt;Español&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/LemmyNet/lemmy/main/readmes/README.ru.md&#34;&gt;Русский&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/LemmyNet/lemmy/main/readmes/README.zh.hans.md&#34;&gt;汉语&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/LemmyNet/lemmy/main/readmes/README.zh.hant.md&#34;&gt;漢語&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://join-lemmy.org/&#34; rel=&#34;noopener&#34;&gt; &lt;img width=&#34;200px&#34; height=&#34;200px&#34; src=&#34;https://raw.githubusercontent.com/LemmyNet/lemmy-ui/main/src/assets/icons/favicon.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt;&#xA;&lt;h3 align=&#34;center&#34;&gt;&lt;a href=&#34;https://join-lemmy.org&#34;&gt;Lemmy&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A link aggregator and forum for the fediverse. &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://join-lemmy.org&#34;&gt;Join Lemmy&lt;/a&gt; · &lt;a href=&#34;https://join-lemmy.org/docs/index.html&#34;&gt;Documentation&lt;/a&gt; · &lt;a href=&#34;https://matrix.to/#/#lemmy-space:matrix.org&#34;&gt;Matrix Chat&lt;/a&gt; · &lt;a href=&#34;https://github.com/LemmyNet/lemmy/issues&#34;&gt;Report Bug&lt;/a&gt; · &lt;a href=&#34;https://github.com/LemmyNet/lemmy/issues&#34;&gt;Request Feature&lt;/a&gt; · &lt;a href=&#34;https://github.com/LemmyNet/lemmy/raw/main/RELEASES.md&#34;&gt;Releases&lt;/a&gt; · &lt;a href=&#34;https://join-lemmy.org/docs/code_of_conduct.html&#34;&gt;Code of Conduct&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About The Project&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Desktop&lt;/th&gt; &#xA;   &lt;th&gt;Mobile&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LemmyNet/joinlemmy-site/main/src/assets/images/main_img.webp&#34; alt=&#34;desktop&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LemmyNet/joinlemmy-site/main/src/assets/images/mobile_pic.webp&#34; alt=&#34;mobile&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/LemmyNet/lemmy&#34;&gt;Lemmy&lt;/a&gt; is similar to sites like &lt;a href=&#34;https://reddit.com&#34;&gt;Reddit&lt;/a&gt;, &lt;a href=&#34;https://lobste.rs&#34;&gt;Lobste.rs&lt;/a&gt;, or &lt;a href=&#34;https://news.ycombinator.com/&#34;&gt;Hacker News&lt;/a&gt;: you subscribe to forums you&#39;re interested in, post links and discussions, then vote, and comment on them. Behind the scenes, it is very different; anyone can easily run a server, and all these servers are federated (think email), and connected to the same universe, called the &lt;a href=&#34;https://en.wikipedia.org/wiki/Fediverse&#34;&gt;Fediverse&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For a link aggregator, this means a user registered on one server can subscribe to forums on any other server, and can have discussions with users registered elsewhere.&lt;/p&gt; &#xA;&lt;p&gt;It is an easily self-hostable, decentralized alternative to Reddit and other link aggregators, outside of their corporate control and meddling.&lt;/p&gt; &#xA;&lt;p&gt;Each Lemmy server can set its own moderation policy; appointing site-wide admins, and community moderators to keep out the trolls, and foster a healthy, non-toxic environment where all can feel comfortable contributing.&lt;/p&gt; &#xA;&lt;h3&gt;Why&#39;s it called Lemmy?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lead singer from &lt;a href=&#34;https://invidio.us/watch?v=3mbvWn1EY6g&#34;&gt;Motörhead&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The old school &lt;a href=&#34;https://en.wikipedia.org/wiki/Lemmings_(video_game)&#34;&gt;video game&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://www.mariowiki.com/Lemmy_Koopa&#34;&gt;Koopa from Super Mario&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;http://sunchild.fpwc.org/lemming-the-little-giant-of-the-north/&#34;&gt;furry rodents&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Built With&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rust-lang.org&#34;&gt;Rust&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://actix.rs/&#34;&gt;Actix&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://diesel.rs/&#34;&gt;Diesel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://infernojs.org&#34;&gt;Inferno&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;Typescript&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open source, &lt;a href=&#34;https://raw.githubusercontent.com/LemmyNet/lemmy/main/LICENSE&#34;&gt;AGPL License&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Self hostable, easy to deploy. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Comes with &lt;a href=&#34;https://join-lemmy.org/docs/administration/install_docker.html&#34;&gt;Docker&lt;/a&gt; and &lt;a href=&#34;https://join-lemmy.org/docs/administration/install_ansible.html&#34;&gt;Ansible&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Clean, mobile-friendly interface. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Only a minimum of a username and password is required to sign up!&lt;/li&gt; &#xA;   &lt;li&gt;User avatar support.&lt;/li&gt; &#xA;   &lt;li&gt;Live-updating Comment threads.&lt;/li&gt; &#xA;   &lt;li&gt;Full vote scores &lt;code&gt;(+/-)&lt;/code&gt; like old Reddit.&lt;/li&gt; &#xA;   &lt;li&gt;Themes, including light, dark, and solarized.&lt;/li&gt; &#xA;   &lt;li&gt;Emojis with autocomplete support. Start typing &lt;code&gt;:&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;User tagging using &lt;code&gt;@&lt;/code&gt;, Community tagging using &lt;code&gt;!&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Integrated image uploading in both posts and comments.&lt;/li&gt; &#xA;   &lt;li&gt;A post can consist of a title and any combination of self text, a URL, or nothing else.&lt;/li&gt; &#xA;   &lt;li&gt;Notifications, on comment replies and when you&#39;re tagged. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Notifications can be sent via email.&lt;/li&gt; &#xA;     &lt;li&gt;Private messaging support.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;i18n / internationalization support.&lt;/li&gt; &#xA;   &lt;li&gt;RSS / Atom feeds for &lt;code&gt;All&lt;/code&gt;, &lt;code&gt;Subscribed&lt;/code&gt;, &lt;code&gt;Inbox&lt;/code&gt;, &lt;code&gt;User&lt;/code&gt;, and &lt;code&gt;Community&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Cross-posting support. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A &lt;em&gt;similar post search&lt;/em&gt; when creating new posts. Great for question / answer communities.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Moderation abilities. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Public Moderation Logs.&lt;/li&gt; &#xA;   &lt;li&gt;Can sticky posts to the top of communities.&lt;/li&gt; &#xA;   &lt;li&gt;Both site admins, and community moderators, who can appoint other moderators.&lt;/li&gt; &#xA;   &lt;li&gt;Can lock, remove, and restore posts and comments.&lt;/li&gt; &#xA;   &lt;li&gt;Can ban and unban users from communities and the site.&lt;/li&gt; &#xA;   &lt;li&gt;Can transfer site and communities to others.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Can fully erase your data, replacing all posts and comments.&lt;/li&gt; &#xA; &lt;li&gt;NSFW post / community support.&lt;/li&gt; &#xA; &lt;li&gt;High performance. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Server is written in rust.&lt;/li&gt; &#xA;   &lt;li&gt;Front end is &lt;code&gt;~80kB&lt;/code&gt; gzipped.&lt;/li&gt; &#xA;   &lt;li&gt;Supports arm64 / Raspberry Pi.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join-lemmy.org/docs/administration/install_docker.html&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join-lemmy.org/docs/administration/install_ansible.html&#34;&gt;Ansible&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Lemmy Projects&lt;/h2&gt; &#xA;&lt;h3&gt;Apps&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LemmyNet/lemmy-ui&#34;&gt;lemmy-ui - The official web app for lemmy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LemmyNet/lemmyBB&#34;&gt;lemmyBB - A Lemmy forum UI based on phpBB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dessalines/jerboa&#34;&gt;Jerboa - A native Android app made by Lemmy&#39;s developers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/buresdv/Mlem&#34;&gt;Mlem - A Lemmy client for iOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lemmy-gtk/lemoa&#34;&gt;Lemoa - A Gtk client for Lemmy on Linux&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Libraries&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LemmyNet/lemmy-js-client&#34;&gt;lemmy-js-client&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LemmyNet/lemmy/tree/main/crates/api_common&#34;&gt;lemmy-rust-client&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitea.arsenm.dev/Arsen6331/go-lemmy&#34;&gt;go-lemmy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LemmurOrg/lemmy_api_client&#34;&gt;Dart API client&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rrainn/Lemmy-Swift-Client&#34;&gt;Lemmy-Swift-Client&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rileynull/RedditLemmyImporter&#34;&gt;Reddit -&amp;gt; Lemmy Importer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SleeplessOne1917/lemmy-bot&#34;&gt;lemmy-bot - Typescript library to make it easier to make bots for Lemmy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/derivator/tafkars&#34;&gt;Reddit API wrapper for Lemmy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/pythorhead/&#34;&gt;Pythörhead - Python package for integrating with the Lemmy API&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support / Donate&lt;/h2&gt; &#xA;&lt;p&gt;Lemmy is free, open-source software, meaning no advertising, monetizing, or venture capital, ever. Your donations directly support full-time development of the project.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://liberapay.com/Lemmy&#34;&gt;Support on Liberapay&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.patreon.com/dessalines&#34;&gt;Support on Patreon&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://opencollective.com/lemmy&#34;&gt;Support on OpenCollective&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join-lemmy.org/donate&#34;&gt;List of Sponsors&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Crypto&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;bitcoin: &lt;code&gt;1Hefs7miXS5ff5Ck5xvmjKjXf5242KzRtK&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;ethereum: &lt;code&gt;0x400c96c96acbC6E7B3B43B1dc1BB446540a88A01&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;monero: &lt;code&gt;41taVyY6e1xApqKyMVDRVxJ76sPkfZhALLTjRvVKpaAh2pBd4wv9RgYj1tSPrx8wc6iE1uWUfjtQdTmTy2FGMeChGVKPQuV&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;cardano: &lt;code&gt;addr1q858t89l2ym6xmrugjs0af9cslfwvnvsh2xxp6x4dcez7pf5tushkp4wl7zxfhm2djp6gq60dk4cmc7seaza5p3slx0sakjutm&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join-lemmy.org/docs/contributors/01-overview.html&#34;&gt;Contributing instructions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join-lemmy.org/docs/contributors/03-docker-development.html&#34;&gt;Docker Development&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join-lemmy.org/docs/contributors/02-local-development.html&#34;&gt;Local Development&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Translations&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you want to help with translating, take a look at &lt;a href=&#34;https://weblate.join-lemmy.org/projects/lemmy/&#34;&gt;Weblate&lt;/a&gt;. You can also help by &lt;a href=&#34;https://github.com/LemmyNet/lemmy-docs#adding-a-new-language&#34;&gt;translating the documentation&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mastodon.social/@LemmyDev&#34;&gt;Mastodon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lemmy.ml/c/lemmy_support&#34;&gt;Lemmy Support Forum&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code Mirrors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LemmyNet/lemmy&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git.join-lemmy.org/LemmyNet/lemmy&#34;&gt;Gitea&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codeberg.org/LemmyNet/lemmy&#34;&gt;Codeberg&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Logo made by Andy Cuccaro (@andycuccaro) under the CC-BY-SA 4.0 license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>DioxusLabs/dioxus</title>
    <updated>2023-06-25T02:05:11Z</updated>
    <id>tag:github.com,2023-06-25:/DioxusLabs/dioxus</id>
    <link href="https://github.com/DioxusLabs/dioxus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;React-like GUI library for desktop, web, mobile, TUI, and more.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/DioxusLabs/dioxus/master/notes/header.svg?sanitize=true&#34;&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;!-- Crates version --&gt; &#xA; &lt;a href=&#34;https://crates.io/crates/dioxus&#34;&gt; &lt;img src=&#34;https://img.shields.io/crates/v/dioxus.svg?style=flat-square&#34; alt=&#34;Crates.io version&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- Downloads --&gt; &#xA; &lt;a href=&#34;https://crates.io/crates/dioxus&#34;&gt; &lt;img src=&#34;https://img.shields.io/crates/d/dioxus.svg?style=flat-square&#34; alt=&#34;Download&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- docs --&gt; &#xA; &lt;a href=&#34;https://docs.rs/dioxus&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/docs-latest-blue.svg?style=flat-square&#34; alt=&#34;docs.rs docs&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- CI --&gt; &#xA; &lt;a href=&#34;https://github.com/jkelleyrtp/dioxus/actions&#34;&gt; &lt;img src=&#34;https://github.com/dioxuslabs/dioxus/actions/workflows/main.yml/badge.svg?sanitize=true&#34; alt=&#34;CI status&#34;&gt; &lt;/a&gt; &#xA; &lt;!--Awesome --&gt; &#xA; &lt;a href=&#34;https://github.com/dioxuslabs/awesome-dioxus&#34;&gt; &lt;img src=&#34;https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true&#34; alt=&#34;Awesome Page&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- Discord --&gt; &#xA; &lt;a href=&#34;https://discord.gg/XgGxMSkvUM&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/899851952891002890.svg?logo=discord&amp;amp;style=flat-square&#34; alt=&#34;Discord Link&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h3&gt; &lt;a href=&#34;https://dioxuslabs.com&#34;&gt; Website &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&#34;https://github.com/DioxusLabs/example-projects&#34;&gt; Examples &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&#34;https://dioxuslabs.com/docs/0.3/guide/en/&#34;&gt; Guide &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&#34;https://github.com/DioxusLabs/dioxus/raw/master/notes/README/ZH_CN.md&#34;&gt; 中文 &lt;/a&gt; &lt;span&gt; | &lt;/span&gt; &lt;a href=&#34;https://github.com/DioxusLabs/dioxus/raw/master/translations/pt-br/README.md&#34;&gt; PT-BR &lt;/a&gt; &lt;/h3&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Dioxus is a portable, performant, and ergonomic framework for building cross-platform user interfaces in Rust.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;fn app(cx: Scope) -&amp;gt; Element {&#xA;    let mut count = use_state(cx, || 0);&#xA;&#xA;    cx.render(rsx! {&#xA;        h1 { &#34;High-Five counter: {count}&#34; }&#xA;        button { onclick: move |_| count += 1, &#34;Up high!&#34; }&#xA;        button { onclick: move |_| count -= 1, &#34;Down low!&#34; }&#xA;    })&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Dioxus can be used to deliver webapps, desktop apps, static sites, mobile apps, TUI apps, liveview apps, and more. Dioxus is entirely renderer agnostic and can be used as a platform for any renderer.&lt;/p&gt; &#xA;&lt;p&gt;If you know React, then you already know Dioxus.&lt;/p&gt; &#xA;&lt;h2&gt;Unique features:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Desktop apps running natively (no Electron!) in less than 10 lines of code.&lt;/li&gt; &#xA; &lt;li&gt;Incredibly ergonomic and powerful state management.&lt;/li&gt; &#xA; &lt;li&gt;Comprehensive inline documentation - hover and guides for all HTML elements, listeners, and events.&lt;/li&gt; &#xA; &lt;li&gt;Blazingly fast 🔥🔥 and extremely memory efficient&lt;/li&gt; &#xA; &lt;li&gt;Integrated hot reloading for fast iteration&lt;/li&gt; &#xA; &lt;li&gt;First-class async support with coroutines and suspense&lt;/li&gt; &#xA; &lt;li&gt;And more! Read the &lt;a href=&#34;https://dioxuslabs.com/blog/introducing-dioxus/&#34;&gt;full release post&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Platforms&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;table style=&#34;width:100%&#34;&gt; &#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;em&gt;Web&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;Render directly to the DOM using WebAssembly&lt;/li&gt; &#xA;      &lt;li&gt;Pre-render with SSR and rehydrate on the client&lt;/li&gt; &#xA;      &lt;li&gt;Simple &#34;hello world&#34; at about 65kb, comparable to React&lt;/li&gt; &#xA;      &lt;li&gt;Built-in dev server and hot reloading for quick iteration&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;em&gt;Desktop&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;Render using Webview or - experimentally - with WGPU or Skia &lt;/li&gt; &#xA;      &lt;li&gt;Zero-config setup. Simply cargo-run to build your app &lt;/li&gt; &#xA;      &lt;li&gt;Full support for native system access without electron-esque IPC &lt;/li&gt; &#xA;      &lt;li&gt;Supports macOS, Linux, and Windows. Portable &amp;lt;3mb binaries &lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;em&gt;Mobile&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;Render using Webview or - experimentally - with WGPU or Skia &lt;/li&gt; &#xA;      &lt;li&gt;Support for iOS and Android &lt;/li&gt; &#xA;      &lt;li&gt;&lt;em&gt;Significantly&lt;/em&gt; more performant than React Native &lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;em&gt;Liveview&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;Render apps - or just a single component - entirely on the server&lt;/li&gt; &#xA;      &lt;li&gt;Integrations with popular Rust frameworks like Axum and Warp&lt;/li&gt; &#xA;      &lt;li&gt;Extremely low-latency and ability to support 10,000+ simultaneous apps&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;em&gt;Terminal&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;Render apps directly into your terminal, similar to &lt;a href=&#34;https://github.com/vadimdemedes/ink&#34;&gt; ink.js&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;Powered by the familiar flexbox and CSS model of the browser&lt;/li&gt; &#xA;      &lt;li&gt;Built-in widgets like text input, buttons, and focus system&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Why Dioxus?&lt;/h2&gt; &#xA;&lt;p&gt;There&#39;s tons of options for building apps, so why would you choose Dioxus?&lt;/p&gt; &#xA;&lt;p&gt;Well, first and foremost, Dioxus prioritizes developer experience. This is reflected in a variety of features unique to Dioxus:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Autoformatting of our meta language (RSX) and accompanying VSCode extension&lt;/li&gt; &#xA; &lt;li&gt;Hotreloading using an interpreter of RSX for both desktop and web&lt;/li&gt; &#xA; &lt;li&gt;Emphasis on good docs - our guide is complete and our HTML elements are documented&lt;/li&gt; &#xA; &lt;li&gt;Significant research in simplifying&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Dioxus is also a very extensible platform.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Easily build new renderers by implementing a very simple optimized stack-machine&lt;/li&gt; &#xA; &lt;li&gt;Build and share components and even custom elements&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;So... Dioxus is great, but why won&#39;t it work for me?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It&#39;s not fully mature yet. APIs are still shifting, things might break (though we try to avoid it)&lt;/li&gt; &#xA; &lt;li&gt;You need to run in a no-std environment.&lt;/li&gt; &#xA; &lt;li&gt;You don&#39;t like the React-hooks model of building UIs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Report issues on our &lt;a href=&#34;https://github.com/dioxuslabs/dioxus/issues&#34;&gt;issue tracker&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Join the discord and ask questions!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;a href=&#34;https://github.com/dioxuslabs/dioxus/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=dioxuslabs/dioxus&amp;amp;max=30&amp;amp;columns=10&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://github.com/DioxusLabs/dioxus/raw/master/LICENSE-MIT&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in Dioxus by you, shall be licensed as MIT, without any additional terms or conditions.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>alibaba/GraphScope</title>
    <updated>2023-06-25T02:05:11Z</updated>
    <id>tag:github.com,2023-06-25:/alibaba/GraphScope</id>
    <link href="https://github.com/alibaba/GraphScope" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔨 🍇 💻 🚀 GraphScope: A One-Stop Large-Scale Graph Computing System from Alibaba 来自阿里巴巴的一站式大规模图计算系统 图分析 图查询 图机器学习&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://graphscope.io/assets/images/graphscope-logo.svg?sanitize=true&#34; width=&#34;400&#34; alt=&#34;graphscope-logo&#34;&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A One-Stop Large-Scale Graph Computing System from Alibaba &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/alibaba/GraphScope/actions/workflows/local-ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/alibaba/GraphScope/actions/workflows/local-ci.yml/badge.svg?sanitize=true&#34; alt=&#34;GraphScope CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/alibaba/GraphScope&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/alibaba/GraphScope/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://try.graphscope.app&#34;&gt;&lt;img src=&#34;https://shields.io/badge/JupyterLab-Try%20GraphScope%20Now!-F37626?logo=jupyter&#34; alt=&#34;Playground&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://colab.research.google.com/github/alibaba/GraphScope&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open in Colab&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://artifacthub.io/packages/helm/graphscope/graphscope&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/graphscope&#34; alt=&#34;Artifact HUB&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://graphscope.io/docs&#34;&gt;&lt;img src=&#34;https://shields.io/badge/Docs-English-blue?logo=Read%20The%20Docs&#34; alt=&#34;Docs-en&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://graphscope.io/docs/frequently_asked_questions.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-FAQ-blue?logo=Read%20The%20Docs&#34; alt=&#34;FAQ-en&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://graphscope.io/docs/zh/&#34;&gt;&lt;img src=&#34;https://shields.io/badge/Docs-%E4%B8%AD%E6%96%87-blue?logo=Read%20The%20Docs&#34; alt=&#34;Docs-zh&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://graphscope.io/docs/zh/frequently_asked_questions.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-FAQ%E4%B8%AD%E6%96%87-blue?logo=Read%20The%20Docs&#34; alt=&#34;FAQ-zh&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/README-zh.md&#34;&gt;&lt;img src=&#34;https://shields.io/badge/README-%E4%B8%AD%E6%96%87-blue&#34; alt=&#34;README-zh&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;GraphScope is a unified distributed graph computing platform that provides a one-stop environment for performing diverse graph operations on a cluster of computers through a user-friendly Python interface. GraphScope makes multi-staged processing of large-scale graph data on compute clusters simply by combining several important pieces of Alibaba technology: including &lt;a href=&#34;https://github.com/alibaba/libgrape-lite&#34;&gt;GRAPE&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/interactive_engine/&#34;&gt;MaxGraph&lt;/a&gt;, and &lt;a href=&#34;https://github.com/alibaba/graph-learn&#34;&gt;Graph-Learn&lt;/a&gt; (GL) for analytics, interactive, and graph neural networks (GNN) computation, respectively, and the &lt;a href=&#34;https://github.com/v6d-io/v6d&#34;&gt;Vineyard&lt;/a&gt; store that offers efficient in-memory data transfers.&lt;/p&gt; &#xA;&lt;p&gt;Visit our website at &lt;a href=&#34;https://graphscope.io&#34;&gt;graphscope.io&lt;/a&gt; to learn more.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/#installation-for-standalone-mode&#34;&gt;Installation for Standalone Mode&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/#demo-node-classification-on-citation-network&#34;&gt;Demo: Node Classification on Citation Network&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/#loading-a-graph&#34;&gt;Loading a graph&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/#interactive-query&#34;&gt;Interactive query&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/#graph-analytics&#34;&gt;Graph analytics&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/#graph-neural-networks-gnns&#34;&gt;Graph neural networks (GNNs)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/#processing-large-graph-on-kubernetes-cluster&#34;&gt;Graph Processing on Kubernetes&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/#creating-a-session&#34;&gt;Creating a session&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/#loading-a-graph-and-processing-computation-tasks&#34;&gt;Loading graphs and graph computation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/#closing-the-session&#34;&gt;Closing the session&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/#development&#34;&gt;Development&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/#building-on-local&#34;&gt;Building from source&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/#building-docker-images&#34;&gt;Building Docker images&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/#building-client-library&#34;&gt;Building the client library&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/#testing&#34;&gt;Testing&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/#publications&#34;&gt;Publications&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/#contributing&#34;&gt;Joining our Community!&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;We provide a &lt;a href=&#34;https://try.graphscope.app&#34;&gt;Playground&lt;/a&gt; with a managed JupyterLab. &lt;a href=&#34;https://try.graphscope.app&#34;&gt;Try GraphScope&lt;/a&gt; straight away in your browser!&lt;/p&gt; &#xA;&lt;p&gt;GraphScope supports running in standalone mode or on clusters managed by &lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt; within containers. For quickly getting started, let&#39;s begin with the standalone mode.&lt;/p&gt; &#xA;&lt;h3&gt;Installation for Standalone Mode&lt;/h3&gt; &#xA;&lt;p&gt;GraphScope pre-compiled package is distributed as a python package and can be easily installed with &lt;code&gt;pip&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip3 install graphscope&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;graphscope&lt;/code&gt; requires &lt;code&gt;Python&lt;/code&gt; &amp;gt;= 3.8 and &lt;code&gt;pip&lt;/code&gt; &amp;gt;= 19.3. The package is built for and tested on the most popular Linux (Ubuntu 20.04+ / CentOS 7+) and macOS 11+ (Intel) / macOS 12+ (Apple silicon) distributions. For Windows users, you may want to install Ubuntu on WSL2 to use this package.&lt;/p&gt; &#xA;&lt;p&gt;Next, we will walk you through a concrete example to illustrate how GraphScope can be used by data scientists to effectively analyze large graphs.&lt;/p&gt; &#xA;&lt;h2&gt;Demo: Node Classification on Citation Network&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ogb.stanford.edu/docs/nodeprop/#ogbn-mag&#34;&gt;&lt;code&gt;ogbn-mag&lt;/code&gt;&lt;/a&gt; is a heterogeneous network composed of a subset of the Microsoft Academic Graph. It contains 4 types of entities(i.e., papers, authors, institutions, and fields of study), as well as four types of directed relations connecting two entities.&lt;/p&gt; &#xA;&lt;p&gt;Given the heterogeneous &lt;code&gt;ogbn-mag&lt;/code&gt; data, the task is to predict the class of each paper. Node classification can identify papers in multiple venues, which represent different groups of scientific work on different topics. We apply both the attribute and structural information to classify papers. In the graph, each paper node contains a 128-dimensional word2vec vector representing its content, which is obtained by averaging the embeddings of words in its title and abstract. The embeddings of individual words are pre-trained. The structural information is computed on-the-fly.&lt;/p&gt; &#xA;&lt;h3&gt;Loading a graph&lt;/h3&gt; &#xA;&lt;p&gt;GraphScope models graph data as property graph, in which the edges/vertices are labeled and have many properties. Taking &lt;code&gt;ogbn-mag&lt;/code&gt; as example, the figure below shows the model of the property graph.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://graphscope.io/docs/_images/sample_pg.png&#34; width=&#34;600&#34; alt=&#34;sample-of-property-graph&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;This graph has four kinds of vertices, labeled as &lt;code&gt;paper&lt;/code&gt;, &lt;code&gt;author&lt;/code&gt;, &lt;code&gt;institution&lt;/code&gt; and &lt;code&gt;field_of_study&lt;/code&gt;. There are four kinds of edges connecting them, each kind of edges has a label and specifies the vertex labels for its two ends. For example, &lt;code&gt;cites&lt;/code&gt; edges connect two vertices labeled &lt;code&gt;paper&lt;/code&gt;. Another example is &lt;code&gt;writes&lt;/code&gt;, it requires the source vertex is labeled &lt;code&gt;author&lt;/code&gt; and the destination is a &lt;code&gt;paper&lt;/code&gt; vertex. All the vertices and edges may have properties. e.g., &lt;code&gt;paper&lt;/code&gt; vertices have properties like features, publish year, subject label, etc.&lt;/p&gt; &#xA;&lt;p&gt;To load this graph to GraphScope with our retrieval module, please use these code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import graphscope&#xA;from graphscope.dataset import load_ogbn_mag&#xA;&#xA;g = load_ogbn_mag()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We provide a set of functions to load graph datasets from &lt;a href=&#34;https://ogb.stanford.edu/docs/dataset_overview/&#34;&gt;ogb&lt;/a&gt; and &lt;a href=&#34;https://snap.stanford.edu/data/index.html&#34;&gt;snap&lt;/a&gt; for convenience. Please find all the available graphs &lt;a href=&#34;https://github.com/alibaba/GraphScope/tree/docs/python/graphscope/dataset&#34;&gt;here&lt;/a&gt;. If you want to use your own graph data, please refer &lt;a href=&#34;https://graphscope.io/docs/loading_graph.html&#34;&gt;this doc&lt;/a&gt; to load vertices and edges by labels.&lt;/p&gt; &#xA;&lt;h3&gt;Interactive query&lt;/h3&gt; &#xA;&lt;p&gt;Interactive queries allow users to directly explore, examine, and present graph data in an &lt;em&gt;exploratory&lt;/em&gt; manner in order to locate specific or in-depth information in time. GraphScope adopts a high-level language called &lt;a href=&#34;http://tinkerpop.apache.org/&#34;&gt;Gremlin&lt;/a&gt; for graph traversal, and provides &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/interactive_engine/benchmark/&#34;&gt;efficient execution&lt;/a&gt; at scale.&lt;/p&gt; &#xA;&lt;p&gt;In this example, we use graph traversal to count the number of papers two given authors have co-authored. To simplify the query, we assume the authors can be uniquely identified by ID &lt;code&gt;2&lt;/code&gt; and &lt;code&gt;4307&lt;/code&gt;, respectively.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# get the endpoint for submitting Gremlin queries on graph g.&#xA;interactive = graphscope.gremlin(g)&#xA;&#xA;# count the number of papers two authors (with id 2 and 4307) have co-authored&#xA;papers = interactive.execute(&#34;g.V().has(&#39;author&#39;, &#39;id&#39;, 2).out(&#39;writes&#39;).where(__.in(&#39;writes&#39;).has(&#39;id&#39;, 4307)).count()&#34;).one()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Graph analytics&lt;/h3&gt; &#xA;&lt;p&gt;Graph analytics is widely used in real world. Many algorithms, like community detection, paths and connectivity, centrality are proven to be very useful in various businesses. GraphScope ships with a set of &lt;a href=&#34;https://graphscope.io/docs/analytics_engine.html#built-in-algorithms&#34;&gt;built-in algorithms&lt;/a&gt;, enables users easily analysis their graph data.&lt;/p&gt; &#xA;&lt;p&gt;Continuing our example, below we first derive a subgraph by extracting publications in specific time out of the entire graph (using Gremlin!), and then run k-core decomposition and triangle counting to generate the structural features of each paper node.&lt;/p&gt; &#xA;&lt;p&gt;Please note that many algorithms may only work on &lt;em&gt;homogeneous&lt;/em&gt; graphs, and therefore, to evaluate these algorithms over a property graph, we need to project it into a simple graph at first.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# extract a subgraph of publication within a time range&#xA;sub_graph = interactive.subgraph(&#34;g.V().has(&#39;year&#39;, gte(2014).and(lte(2020))).outE(&#39;cites&#39;)&#34;)&#xA;&#xA;# project the projected graph to simple graph.&#xA;simple_g = sub_graph.project(vertices={&#34;paper&#34;: []}, edges={&#34;cites&#34;: []})&#xA;&#xA;ret1 = graphscope.k_core(simple_g, k=5)&#xA;ret2 = graphscope.triangles(simple_g)&#xA;&#xA;# add the results as new columns to the citation graph&#xA;sub_graph = sub_graph.add_column(ret1, {&#34;kcore&#34;: &#34;r&#34;})&#xA;sub_graph = sub_graph.add_column(ret2, {&#34;tc&#34;: &#34;r&#34;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In addition, users can write their own algorithms in GraphScope. Currently, GraphScope supports users to write their own algorithms in Pregel model and PIE model.&lt;/p&gt; &#xA;&lt;h3&gt;Graph neural networks (GNNs)&lt;/h3&gt; &#xA;&lt;p&gt;Graph neural networks (GNNs) combines superiority of both graph analytics and machine learning. GNN algorithms can compress both structural and attribute information in a graph into low-dimensional embedding vectors on each node. These embeddings can be further fed into downstream machine learning tasks.&lt;/p&gt; &#xA;&lt;p&gt;In our example, we train a GCN model to classify the nodes (papers) into 349 categories, each of which represents a venue (e.g. pre-print and conference). To achieve this, first we launch a learning engine and build a graph with features following the last step.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&#xA;# define the features for learning&#xA;paper_features = [f&#34;feat_{i}&#34; for i in range(128)]&#xA;&#xA;paper_features.append(&#34;kcore&#34;)&#xA;paper_features.append(&#34;tc&#34;)&#xA;&#xA;# launch a learning engine.&#xA;lg = graphscope.graphlearn(sub_graph, nodes=[(&#34;paper&#34;, paper_features)],&#xA;                  edges=[(&#34;paper&#34;, &#34;cites&#34;, &#34;paper&#34;)],&#xA;                  gen_labels=[&#xA;                      (&#34;train&#34;, &#34;paper&#34;, 100, (0, 75)),&#xA;                      (&#34;val&#34;, &#34;paper&#34;, 100, (75, 85)),&#xA;                      (&#34;test&#34;, &#34;paper&#34;, 100, (85, 100))&#xA;                  ])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then we define the training process, and run it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Note: Here we use tensorflow as NN backend to train GNN model. so please&#xA;# install tensorflow.&#xA;try:&#xA;    # https://www.tensorflow.org/guide/migrate&#xA;    import tensorflow.compat.v1 as tf&#xA;    tf.disable_v2_behavior()&#xA;except ImportError:&#xA;    import tensorflow as tf&#xA;&#xA;import graphscope.learning&#xA;from graphscope.learning.examples import EgoGraphSAGE&#xA;from graphscope.learning.examples import EgoSAGESupervisedDataLoader&#xA;from graphscope.learning.examples.tf.trainer import LocalTrainer&#xA;&#xA;# supervised GCN.&#xA;def train_gcn(graph, node_type, edge_type, class_num, features_num,&#xA;              hops_num=2, nbrs_num=[25, 10], epochs=2,&#xA;              hidden_dim=256, in_drop_rate=0.5, learning_rate=0.01,&#xA;):&#xA;    graphscope.learning.reset_default_tf_graph()&#xA;&#xA;    dimensions = [features_num] + [hidden_dim] * (hops_num - 1) + [class_num]&#xA;    model = EgoGraphSAGE(dimensions, act_func=tf.nn.relu, dropout=in_drop_rate)&#xA;&#xA;    # prepare train dataset&#xA;    train_data = EgoSAGESupervisedDataLoader(&#xA;        graph, graphscope.learning.Mask.TRAIN,&#xA;        node_type=node_type, edge_type=edge_type, nbrs_num=nbrs_num, hops_num=hops_num,&#xA;    )&#xA;    train_embedding = model.forward(train_data.src_ego)&#xA;    train_labels = train_data.src_ego.src.labels&#xA;    loss = tf.reduce_mean(&#xA;        tf.nn.sparse_softmax_cross_entropy_with_logits(&#xA;            labels=train_labels, logits=train_embedding,&#xA;        )&#xA;    )&#xA;    optimizer = tf.train.AdamOptimizer(learning_rate=learning_rate)&#xA;&#xA;    # prepare test dataset&#xA;    test_data = EgoSAGESupervisedDataLoader(&#xA;        graph, graphscope.learning.Mask.TEST,&#xA;        node_type=node_type, edge_type=edge_type, nbrs_num=nbrs_num, hops_num=hops_num,&#xA;    )&#xA;    test_embedding = model.forward(test_data.src_ego)&#xA;    test_labels = test_data.src_ego.src.labels&#xA;    test_indices = tf.math.argmax(test_embedding, 1, output_type=tf.int32)&#xA;    test_acc = tf.div(&#xA;        tf.reduce_sum(tf.cast(tf.math.equal(test_indices, test_labels), tf.float32)),&#xA;        tf.cast(tf.shape(test_labels)[0], tf.float32),&#xA;    )&#xA;&#xA;    # train and test&#xA;    trainer = LocalTrainer()&#xA;    trainer.train(train_data.iterator, loss, optimizer, epochs=epochs)&#xA;    trainer.test(test_data.iterator, test_acc)&#xA;&#xA;train_gcn(lg, node_type=&#34;paper&#34;, edge_type=&#34;cites&#34;,&#xA;          class_num=349,  # output dimension&#xA;          features_num=130,  # input dimension, 128 + kcore + triangle count&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A Python script with the entire process is available &lt;a href=&#34;https://colab.research.google.com/github/alibaba/GraphScope/blob/main/tutorials/1_node_classification_on_citation.ipynb&#34;&gt;here&lt;/a&gt;, you may try it out by yourself.&lt;/p&gt; &#xA;&lt;h2&gt;Processing Large Graph on Kubernetes Cluster&lt;/h2&gt; &#xA;&lt;p&gt;GraphScope is designed for processing large graphs, which are usually hard to fit in the memory of a single machine. With &lt;a href=&#34;https://github.com/v6d-io/v6d&#34;&gt;Vineyard&lt;/a&gt; as the distributed in-memory data manager, GraphScope supports running on a cluster managed by Kubernetes(k8s).&lt;/p&gt; &#xA;&lt;p&gt;To continue this tutorial, please ensure that you have a k8s-managed cluster and know the credentials for the cluster. (e.g., address of k8s API server, usually stored a &lt;code&gt;~/.kube/config&lt;/code&gt; file.)&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can set up a local k8s cluster for testing with &lt;a href=&#34;https://kind.sigs.k8s.io/&#34;&gt;Kind&lt;/a&gt;. We provide a script for setup this environment.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# for usage, type -h&#xA;./scripts/install_deps.sh --k8s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you did not install the &lt;code&gt;graphscope&lt;/code&gt; package in the above step, you can install a subset of the whole package with client functions only.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip3 install graphscope-client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, let&#39;s revisit the example by running on a cluster instead.&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://graphscope.io/docs/_images/how-it-works.png&#34; width=&#34;600&#34; alt=&#34;how-it-works&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;The figure shows the flow of execution in the cluster mode. When users run code in the python client, it will:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Step 1&lt;/em&gt;. Create a session or workspace in GraphScope.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Step 2 - Step 5&lt;/em&gt;. Load a graph, query, analysis and run learning task on this graph via Python interface. These steps are the same to local mode, thus users process huge graphs in a distributed setting just like analysis a small graph on a single machine.(Note that &lt;code&gt;graphscope.gremlin&lt;/code&gt; and &lt;code&gt;graphscope.graphlearn&lt;/code&gt; need to be changed to &lt;code&gt;sess.gremlin&lt;/code&gt; and &lt;code&gt;sess.graphlearn&lt;/code&gt;, respectively. &lt;code&gt;sess&lt;/code&gt; is the name of the &lt;code&gt;Session&lt;/code&gt; instance user created.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Step 6&lt;/em&gt;. Close the session.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Creating a session&lt;/h3&gt; &#xA;&lt;p&gt;To use GraphScope in a distributed setting, we need to establish a session in a python interpreter.&lt;/p&gt; &#xA;&lt;p&gt;For convenience, we provide several demo datasets, and an option &lt;code&gt;with_dataset&lt;/code&gt; to mount the dataset in the graphscope cluster. The datasets will be mounted to &lt;code&gt;/dataset&lt;/code&gt; in the pods. If you want to use your own data on k8s cluster, please refer to &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/docs/deployment.rst&#34;&gt;this&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import graphscope&#xA;&#xA;sess = graphscope.session(with_dataset=True)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For macOS, the session needs to establish with the LoadBalancer service type (which is NodePort by default).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import graphscope&#xA;&#xA;sess = graphscope.session(with_dataset=True, k8s_service_type=&#34;LoadBalancer&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A session tries to launch a &lt;code&gt;coordinator&lt;/code&gt;, which is the entry for the back-end engines. The coordinator manages a cluster of resources (k8s pods), and the interactive/analytical/learning engines ran on them. For each pod in the cluster, there is a vineyard instance at service for distributed data in memory.&lt;/p&gt; &#xA;&lt;h3&gt;Loading a graph and processing computation tasks&lt;/h3&gt; &#xA;&lt;p&gt;Similar to the standalone mode, we can still use the functions to load a graph easily.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from graphscope.dataset import load_ogbn_mag&#xA;&#xA;# Note we have mounted the demo datasets to /dataset,&#xA;# There are several datasets including ogbn_mag_small,&#xA;# User can attach to the engine container and explore the directory.&#xA;g = load_ogbn_mag(sess, &#34;/dataset/ogbn_mag_small/&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here, the &lt;code&gt;g&lt;/code&gt; is loaded in parallel via vineyard and stored in vineyard instances in the cluster managed by the session.&lt;/p&gt; &#xA;&lt;p&gt;Next, we can conduct graph queries with Gremlin, invoke various graph algorithms, or run graph-based neural network tasks like we did in the standalone mode. We do not repeat code here, but a &lt;code&gt;.ipynb&lt;/code&gt; processing the classification task on k8s is available on the &lt;a href=&#34;https://try.graphscope.app/&#34;&gt;Playground&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Closing the session&lt;/h3&gt; &#xA;&lt;p&gt;Another additional step in the distribution is session close. We close the session after processing all graph tasks.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;sess.close()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This operation will notify the backend engines and vineyard to safely unload graphs and their applications, Then, the coordinator will release all the applied resources in the k8s cluster.&lt;/p&gt; &#xA;&lt;p&gt;Please note that we have not hardened this release for production use and it lacks important security features such as authentication and encryption, and therefore &lt;strong&gt;it is NOT recommended for production use (yet)!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;Building on local&lt;/h3&gt; &#xA;&lt;p&gt;To build graphscope Python package and the engine binaries, you need to install some dependencies and build tools.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./gs install-deps dev&#xA;&#xA;# With argument --cn to speed up the download if you are in China.&#xA;./gs install-deps dev --cn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can build GraphScope with pre-configured &lt;code&gt;make&lt;/code&gt; commands.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# to make graphscope whole package, including python package + engine binaries.&#xA;sudo make install&#xA;&#xA;# or make the engine components&#xA;# make interactive&#xA;# make analytical&#xA;# make learning&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building Docker images&lt;/h3&gt; &#xA;&lt;p&gt;GraphScope ships with a &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/GraphScope/main/k8s/dockerfiles/graphscope-dev.Dockerfile&#34;&gt;Dockerfile&lt;/a&gt; that can build docker images for releasing. The images are built on a &lt;code&gt;builder&lt;/code&gt; image with all dependencies installed and copied to a &lt;code&gt;runtime-base&lt;/code&gt; image. To build images with latest version of GraphScope, go to the &lt;code&gt;k8s/internal&lt;/code&gt; directory under root directory and run this command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# by default, the built image is tagged as graphscope/graphscope:SHORTSHA&#xA;# cd k8s&#xA;make graphscope&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building client library&lt;/h3&gt; &#xA;&lt;p&gt;GraphScope python interface is separate with the engines image. If you are developing python client and not modifying the protobuf files, the engines image doesn&#39;t require to be rebuilt.&lt;/p&gt; &#xA;&lt;p&gt;You may want to re-install the python client on local.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the learning engine client has C/C++ extensions modules and setting up the build environment is a bit tedious. By default the locally-built client library doesn&#39;t include the support for learning engine. If you want to build client library with learning engine enabled, please refer &lt;a href=&#34;https://graphscope.io/docs/developer_guide.html#build-python-wheels&#34;&gt;Build Python Wheels&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Testing&lt;/h3&gt; &#xA;&lt;p&gt;To verify the correctness of your developed features, your code changes should pass our tests.&lt;/p&gt; &#xA;&lt;p&gt;You may run the whole test suite with commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation can be generated using Sphinx. Users can build the documentation using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# build the docs&#xA;make graphscope-docs&#xA;&#xA;# to open preview on local&#xA;open docs/_build/latest/html/index.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The latest version of online documentation can be found at &lt;a href=&#34;https://graphscope.io/docs&#34;&gt;https://graphscope.io/docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;GraphScope is released under &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License 2.0&lt;/a&gt;. Please note that third-party libraries may not have the same license as GraphScope.&lt;/p&gt; &#xA;&lt;h2&gt;Publications&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Wenfei Fan, Tao He, Longbin Lai, Xue Li, Yong Li, Zhao Li, Zhengping Qian, Chao Tian, Lei Wang, Jingbo Xu, Youyang Yao, Qiang Yin, Wenyuan Yu, Jingren Zhou, Diwen Zhu, Rong Zhu. &lt;a href=&#34;http://vldb.org/pvldb/vol14/p2879-qian.pdf&#34;&gt;GraphScope: A Unified Engine For Big Graph Processing&lt;/a&gt;. The 47th International Conference on Very Large Data Bases (VLDB), industry, 2021.&lt;/li&gt; &#xA; &lt;li&gt;Jingbo Xu, Zhanning Bai, Wenfei Fan, Longbin Lai, Xue Li, Zhao Li, Zhengping Qian, Lei Wang, Yanyan Wang, Wenyuan Yu, Jingren Zhou. &lt;a href=&#34;http://vldb.org/pvldb/vol14/p2703-xu.pdf&#34;&gt;GraphScope: A One-Stop Large Graph Processing System&lt;/a&gt;. The 47th International Conference on Very Large Data Bases (VLDB), demo, 2021&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Any contributions you make are &lt;strong&gt;greatly appreciated&lt;/strong&gt;!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join in the &lt;a href=&#34;http://slack.graphscope.io&#34;&gt;Slack channel&lt;/a&gt; for discussion.&lt;/li&gt; &#xA; &lt;li&gt;Please report bugs by submitting a GitHub issue.&lt;/li&gt; &#xA; &lt;li&gt;Please submit contributions using pull requests.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>