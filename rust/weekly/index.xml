<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-23T01:51:33Z</updated>
  <subtitle>Weekly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>aws/amazon-q-developer-cli</title>
    <updated>2025-03-23T01:51:33Z</updated>
    <id>tag:github.com,2025-03-23:/aws/amazon-q-developer-cli</id>
    <link href="https://github.com/aws/amazon-q-developer-cli" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Add autocomplete and AI to your existing terminal on macOS &amp; Linux&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Amazon Q Developer for command line Monorepo&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;strong&gt;&lt;code&gt;amazon-q-developer-cli&lt;/code&gt;&lt;/strong&gt; monorepo houses most of the core code for the Amazon Q Developer desktop app and CLI.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install Amazon Q Developer for command line see the AWS public documentation &lt;a href=&#34;https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line-installing.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Several projects live here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/packages/autocomplete/&#34;&gt;&lt;code&gt;autocomplete&lt;/code&gt;&lt;/a&gt; - The autocomplete react app&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/packages/dashboard/&#34;&gt;&lt;code&gt;dashboard&lt;/code&gt;&lt;/a&gt; - The dashboard react app&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/crates/figterm/&#34;&gt;&lt;code&gt;figterm&lt;/code&gt;&lt;/a&gt; - figterm, our headless terminal/pseudoterminal that intercepts the user’s terminal edit buffer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/crates/q_cli/&#34;&gt;&lt;code&gt;q_cli&lt;/code&gt;&lt;/a&gt; - the &lt;code&gt;q&lt;/code&gt; CLI, allows users to interface with Amazon Q Developer from the command line&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/crates/fig_desktop/&#34;&gt;&lt;code&gt;fig_desktop&lt;/code&gt;&lt;/a&gt; - the Rust desktop app, uses &lt;a href=&#34;https://docs.rs/tao/latest/tao/&#34;&gt;&lt;code&gt;tao&lt;/code&gt;&lt;/a&gt;/&lt;a href=&#34;https://docs.rs/wry/latest/wry/&#34;&gt;&lt;code&gt;wry&lt;/code&gt;&lt;/a&gt; for windowing/webviews&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/crates/fig_input_method/&#34;&gt;&lt;code&gt;fig_input_method&lt;/code&gt;&lt;/a&gt; - The input method used to get cursor position on macOS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/extensions/vscode/&#34;&gt;&lt;code&gt;vscode&lt;/code&gt;&lt;/a&gt; - Contains the VSCode plugin needed for the Amazon Q Developer for command line to work in VSCode&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/extensions/jetbrains/&#34;&gt;&lt;code&gt;jetbrains&lt;/code&gt;&lt;/a&gt; - Contains the VSCode plugin needed for the Amazon Q Developer for command line to work in Jetbrains IDEs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Other folder to be aware of&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/build-scripts/&#34;&gt;&lt;code&gt;build-scripts/&lt;/code&gt;&lt;/a&gt; - Contains all python scripts to build, sign, and test the project on macOS and Linux&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/crates/&#34;&gt;&lt;code&gt;crates/&lt;/code&gt;&lt;/a&gt; - Contains all internal rust crates&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/packages/&#34;&gt;&lt;code&gt;packages/&lt;/code&gt;&lt;/a&gt; - Contains all internal npm packages&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/proto/&#34;&gt;&lt;code&gt;proto/&lt;/code&gt;&lt;/a&gt; - &lt;a href=&#34;https://developers.google.com/protocol-buffers/&#34;&gt;protocol buffer&lt;/a&gt; message specification for inter-process communication&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/tests/&#34;&gt;&lt;code&gt;tests/&lt;/code&gt;&lt;/a&gt; - Contain integration tests for the projects&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Below is a high level architecture of how the different components of the app and their IPC:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/docs/assets/architecture.svg?sanitize=true&#34; alt=&#34;architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MacOS &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Xcode 13 or later&lt;/li&gt; &#xA;   &lt;li&gt;Brew&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1. Clone repo&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/aws/amazon-q-for-command-line.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Install platform dependencies&lt;/h3&gt; &#xA;&lt;p&gt;This is all the dep&lt;/p&gt; &#xA;&lt;p&gt;For Debian/Ubuntu:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt update&#xA;sudo apt install build-essential pkg-config jq dpkg curl wget cmake clang libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev libdbus-1-dev libwebkit2gtk-4.1-dev libjavascriptcoregtk-4.1-dev valac libibus-1.0-dev libglib2.0-dev sqlite3 libxdo-dev protobuf-compiler&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Arch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo pacman -Syu&#xA;sudo pacman -S --needed webkit2gtk base-devel curl wget openssl appmenu-gtk-module gtk3 libappindicator-gtk3 librsvg libvips cmake jq pkgconf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Fedora:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo dnf check-update&#xA;sudo dnf install webkit2gtk3-devel.x86_64 openssl-devel curl wget libappindicator-gtk3 librsvg2-devel jq&#xA;sudo dnf group install &#34;C Development Tools and Libraries&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For MacOS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;xcode-select --install&#xA;brew install mise pnpm protobuf zsh bash fish shellcheck jq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Install Rust toolchain using &lt;a href=&#34;https://rustup.rs&#34;&gt;Rustup&lt;/a&gt;:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh&#xA;rustup default stable&#xA;# for pre-commit hooks the two following commands are required&#xA;rustup toolchain install nightly&#xA;cargo install typos-cli&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For MacOS development make sure the right targets are installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rustup target add x86_64-apple-darwin&#xA;rustup target add aarch64-apple-darwin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Setup Python and Node using &lt;a href=&#34;https://mise.jdx.dev&#34;&gt;&lt;code&gt;mise&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Add mise integrations to your shell shell&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# zsh&#xA;echo &#39;eval &#34;$(mise activate zsh)&#34;&#39; &amp;gt;&amp;gt; &#34;${ZDOTDIR-$HOME}/.zshrc&#34;&#xA;&#xA;# bash&#xA;echo &#39;eval &#34;$(mise activate bash)&#34;&#39; &amp;gt;&amp;gt; ~/.bashrc&#xA;&#xA;# fish&#xA;echo &#39;mise activate fish | source&#39; &amp;gt;&amp;gt; ~/.config/fish/config.fish&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install the Python and Node toolchains using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mise trust&#xA;mise install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4. Setup precommit hooks&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Run `pnpm` in root directory to add pre-commit hooks&#xA;pnpm install --ignore-scripts &amp;amp;&amp;amp; pnpm husky install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/CONTRIBUTING.md#security-issue-notifications&#34;&gt;CONTRIBUTING&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;This repo is dual licensed under MIT and Apache 2.0 licenses.&lt;/p&gt; &#xA;&lt;p&gt;“Amazon Web Services” and all related marks, including logos, graphic designs, and service names, are trademarks or trade dress of AWS in the U.S. and other countries. AWS’s trademarks and trade dress may not be used in connection with any product or service that is not AWS’s, in any manner that is likely to cause confusion among customers, or in any manner that disparages or discredits AWS.&lt;/p&gt;</summary>
  </entry>
</feed>