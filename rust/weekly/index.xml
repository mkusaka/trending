<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-02T01:57:07Z</updated>
  <subtitle>Weekly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>louis-e/arnis</title>
    <updated>2025-03-02T01:57:07Z</updated>
    <id>tag:github.com,2025-03-02:/louis-e/arnis</id>
    <link href="https://github.com/louis-e/arnis" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Generate any location from the real world in Minecraft Java Edition with a high level of detail.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;456&#34; height=&#34;125&#34; src=&#34;https://github.com/louis-e/arnis/raw/main/gui-src/images/logo.png?raw=true&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Arnis &lt;a href=&#34;https://github.com/louis-e/arnis/actions&#34;&gt;&lt;img src=&#34;https://github.com/louis-e/arnis/actions/workflows/ci-build.yml/badge.svg?sanitize=true&#34; alt=&#34;CI Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/louis-e/arnis/releases&#34;&gt;&lt;img alt=&#34;GitHub Release&#34; src=&#34;https://img.shields.io/github/v/release/louis-e/arnis&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/louis-e/arnis/releases&#34;&gt;&lt;img alt=&#34;GitHub Downloads (all assets, all releases&#34; src=&#34;https://img.shields.io/github/downloads/louis-e/arnis/total&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;This open source project written in Rust generates any chosen location from the real world in Minecraft Java Edition with a high level of detail.&lt;/p&gt; &#xA;&lt;h6&gt;‚ö†Ô∏è This Github page is the official project website. Do not download Arnis from any other website.&lt;/h6&gt; &#xA;&lt;h2&gt;&lt;span&gt;üñ•&lt;/span&gt; Example&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/louis-e/arnis/raw/main/gitassets/mc.gif?raw=true&#34; alt=&#34;Minecraft Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;By leveraging geospatial data from OpenStreetMap and utilizing the powerful capabilities of Rust, Arnis provides an efficient and robust solution for creating complex and accurate Minecraft worlds that reflect real-world geography and architecture.&lt;/p&gt; &#xA;&lt;p&gt;Arnis is designed to handle large-scale data and generate rich, immersive environments that bring real-world cities, landmarks, and natural features into the Minecraft universe. Whether you&#39;re looking to replicate your hometown, explore urban environments, or simply build something unique and realistic, Arnis generates your vision.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;‚å®&lt;/span&gt; Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img width=&#34;60%&#34; src=&#34;https://github.com/louis-e/arnis/raw/main/gitassets/gui.png?raw=true&#34;&gt;&lt;br&gt; Download the &lt;a href=&#34;https://github.com/louis-e/arnis/releases/&#34;&gt;latest release&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/louis-e/arnis/main/#trophy-open-source&#34;&gt;compile&lt;/a&gt; the project on your own.&lt;/p&gt; &#xA;&lt;p&gt;Choose your area in Arnis using the rectangle tool and select your Minecraft world - then simply click on &#39;Start Generation&#39;! The world will always be generated starting from the Minecraft coordinates 0 0 0 (/tp 0 0 0). This is the top left of your selected area.&lt;/p&gt; &#xA;&lt;p&gt;To generate your world with terrain, make sure to enable the corresponding feature in the generation settings.&lt;/p&gt; &#xA;&lt;p&gt;Minecraft version 1.16.5 and below is currently not supported, but we are working on it! For the best results, use Minecraft version 1.21.4. If you choose to select an own world, be aware that Arnis will overwrite certain areas.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üíæ&lt;/span&gt; How it works&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/louis-e/arnis/raw/main/gitassets/cli.gif?raw=true&#34; alt=&#34;CLI Generation&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The raw data obtained from the API &lt;em&gt;&lt;a href=&#34;https://raw.githubusercontent.com/louis-e/arnis/main/#question-faq&#34;&gt;(see FAQ)&lt;/a&gt;&lt;/em&gt; includes each element (buildings, walls, fountains, farmlands, etc.) with its respective corner coordinates (nodes) and descriptive tags. When you run Arnis, the following steps are performed automatically to generate a Minecraft world:&lt;/p&gt; &#xA;&lt;h4&gt;Processing Pipeline&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fetching Data from the Overpass API:&lt;/strong&gt; The script retrieves geospatial data for the desired bounding box from the Overpass API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Parsing Raw Data:&lt;/strong&gt; The raw data is parsed to extract essential information like nodes, ways, and relations. Nodes are converted into Minecraft coordinates, and relations are handled similarly to ways, ensuring all relevant elements are processed correctly. Relations and ways cluster several nodes into one specific object.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Prioritizing and Sorting Elements:&lt;/strong&gt; The elements (nodes, ways, relations) are sorted by priority to establish a layering system, which ensures that certain types of elements (e.g., entrances and buildings) are generated in the correct order to avoid conflicts and overlapping structures.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Generating Minecraft World:&lt;/strong&gt; The Minecraft world is generated using a series of element processors (generate_buildings, generate_highways, generate_landuse, etc.) that interpret the tags and nodes of each element to place the appropriate blocks in the Minecraft world. These processors handle the logic for creating 3D structures, roads, natural formations, and more, as specified by the processed data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Generating Ground Layer:&lt;/strong&gt; A ground layer is generated based on the provided scale factors to provide a base for the entire Minecraft world. This step ensures all areas have an appropriate foundation (e.g., grass and dirt layers).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Saving the Minecraft World:&lt;/strong&gt; All the modified chunks are saved back to the Minecraft region files.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;&lt;span&gt;‚ùì&lt;/span&gt; FAQ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Wasn&#39;t this written in Python before?&lt;/em&gt;&lt;br&gt; Yes! Arnis was initially developed in Python, which benefited from Python&#39;s open-source friendliness and ease of readability. This is why we strive for clear, well-documented code in the Rust port of this project to find the right balance. I decided to port the project to Rust to learn more about the language and push the algorithm&#39;s performance further. We were nearing the limits of optimization in Python, and Rust&#39;s capabilities allow for even better performance and efficiency. The old Python implementation is still available in the python-legacy branch.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Where does the data come from?&lt;/em&gt;&lt;br&gt; The geographic data is sourced from OpenStreetMap (OSM)&lt;a href=&#34;https://en.wikipedia.org/wiki/OpenStreetMap&#34;&gt;^1&lt;/a&gt;, a free, collaborative mapping project that serves as an open-source alternative to commercial mapping services. The data is accessed via the Overpass API, which queries OSM&#39;s database. Other services like Google Maps do not provide data like this, which makes OSM perfect for this project.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;How does the Minecraft world generation work?&lt;/em&gt;&lt;br&gt; The script uses the &lt;a href=&#34;https://github.com/owengage/fastnbt&#34;&gt;fastnbt&lt;/a&gt; cargo package to interact with Minecraft&#39;s world format. This library allows Arnis to manipulate Minecraft region files, enabling the generation of real-world locations. The section &#39;Processing Pipeline&#39; goes a bit further into the details and steps of the generation process itself.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Where does the name come from?&lt;/em&gt;&lt;br&gt; The project is named after the smallest city in Germany, Arnis&lt;a href=&#34;https://en.wikipedia.org/wiki/Arnis,_Germany&#34;&gt;^2&lt;/a&gt;. The city&#39;s small size made it an ideal test case for developing and debugging the algorithm efficiently.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;I don&#39;t have Minecraft installed but want to generate a world for my kids. How?&lt;/em&gt;&lt;br&gt; When selecting a world, click on &#39;Select existing world&#39; and choose a directory. The world will be generated there.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Arnis instantly closes again or the window is empty!&lt;/em&gt;&lt;br&gt; If you&#39;re on Windows, please install the &lt;a href=&#34;https://developer.microsoft.com/en-us/microsoft-edge/webview2/?form=MA13LH#download&#34;&gt;Evergreen Bootstrapper from Microsoft&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;If you&#39;re on Linux, your system might be missing the webkit2gtk-4.1 library, install the corresponding package using your distro&#39;s package manager.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;What Minecraft version should I use?&lt;/em&gt;&lt;br&gt; Please use Minecraft version 1.21.4 for the best results. Minecraft version 1.16.5 and below is currently not supported, but we are working on it!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;The generation did finish, but there&#39;s nothing in the world!&lt;/em&gt;&lt;br&gt; Make sure to teleport to the generation starting point (/tp 0 0 0). If there is still nothing, you might need to travel a bit further into the positive X and positive Z direction.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;What features are in the world generation settings?&lt;/em&gt;&lt;br&gt; &lt;strong&gt;Terrain:&lt;/strong&gt; Make sure to enable this feature to generate your world with elevation data included.&lt;br&gt; &lt;strong&gt;Winter Mode:&lt;/strong&gt; This setting changes the generation style to a snowy theme and adds snow layers to the ground.&lt;br&gt; &lt;strong&gt;Scale Factor:&lt;/strong&gt; The scale factor determines the size of the generated world.&lt;br&gt; &lt;strong&gt;Custom BBOX Input:&lt;/strong&gt; This setting allows you to manually input the bounding box coordinates for the area you want to generate.&lt;br&gt; &lt;strong&gt;Floodfill-Timeout (Sec):&lt;/strong&gt; This setting determines the maximum time the floodfill algorithm is allowed to run before being terminated. Increasing this value may improve the generation of large water areas but may also increase processing time.&lt;br&gt; &lt;strong&gt;Ground Height:&lt;/strong&gt; This setting determines the base height of the generated world and can be adjusted to create different terrain types.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;üìù&lt;/span&gt; ToDo and Known Bugs&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to choose an item from the To-Do or Known Bugs list, or bring your own idea to the table. Bug reports shall be raised as a Github issue. Contributions are highly welcome and appreciated!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Fix compilation for Linux&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Rotate maps (&lt;a href=&#34;https://github.com/louis-e/arnis/issues/97&#34;&gt;https://github.com/louis-e/arnis/issues/97&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Fix coastal cities generation duration time (water_areas.rs)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add street names as signs&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add support for older Minecraft versions (&amp;lt;=1.16.5) (&lt;a href=&#34;https://github.com/louis-e/arnis/issues/124&#34;&gt;https://github.com/louis-e/arnis/issues/124&lt;/a&gt;, &lt;a href=&#34;https://github.com/louis-e/arnis/issues/137&#34;&gt;https://github.com/louis-e/arnis/issues/137&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Mapping real coordinates to Minecraft coordinates (&lt;a href=&#34;https://github.com/louis-e/arnis/issues/29&#34;&gt;https://github.com/louis-e/arnis/issues/29&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add interior to buildings&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Implement house roof types&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add support for inner attribute in multipolygons and multipolygon elements other than buildings&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Refactor bridges implementation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Better code documentation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Refactor fountain structure implementation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Luanti Support (&lt;a href=&#34;https://github.com/louis-e/arnis/issues/120&#34;&gt;https://github.com/louis-e/arnis/issues/120&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Minecraft Bedrock Edition Support (&lt;a href=&#34;https://github.com/louis-e/arnis/issues/148&#34;&gt;https://github.com/louis-e/arnis/issues/148&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Evaluate and implement elevation (&lt;a href=&#34;https://github.com/louis-e/arnis/issues/66&#34;&gt;https://github.com/louis-e/arnis/issues/66&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Refactor railway implementation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Evaluate and implement faster region saving&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support multipolygons (&lt;a href=&#34;https://github.com/louis-e/arnis/issues/112&#34;&gt;https://github.com/louis-e/arnis/issues/112&lt;/a&gt;, &lt;a href=&#34;https://github.com/louis-e/arnis/issues/114&#34;&gt;https://github.com/louis-e/arnis/issues/114&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Memory optimization&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Fix Github Action Workflow for releasing MacOS Binary&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Design and implement a GUI&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Automatic new world creation instead of using an existing world&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Fix faulty empty chunks (&lt;a href=&#34;https://github.com/owengage/fastnbt/issues/120&#34;&gt;https://github.com/owengage/fastnbt/issues/120&lt;/a&gt;) (workaround found)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Setup fork of &lt;a href=&#34;https://github.com/aaronr/bboxfinder.com&#34;&gt;https://github.com/aaronr/bboxfinder.com&lt;/a&gt; for easy bbox picking&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;üèÜ&lt;/span&gt; Open Source&lt;/h2&gt; &#xA;&lt;h4&gt;Key objectives of this project&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Modularity&lt;/strong&gt;: Ensure that all components (e.g., data fetching, processing, and world generation) are cleanly separated into distinct modules for better maintainability and scalability.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Performance Optimization&lt;/strong&gt;: Utilize Rust‚Äôs memory safety and concurrency features to optimize the performance of the world generation process.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Comprehensive Documentation&lt;/strong&gt;: Detailed in-code documentation for a clear structure and logic.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;User-Friendly Experience&lt;/strong&gt;: Focus on making the project easy to use for end users.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cross-Platform Support&lt;/strong&gt;: Ensure the project runs smoothly on Windows, macOS, and Linux.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;How to contribute&lt;/h4&gt; &#xA;&lt;p&gt;This project is open source and welcomes contributions from everyone! Whether you&#39;re interested in fixing bugs, improving performance, adding new features, or enhancing documentation, your input is valuable. Simply fork the repository, make your changes, and submit a pull request. We encourage discussions and suggestions to ensure the project remains modular, optimized, and easy to use for the community. You can use the parameter --debug to get a more detailed output of the processed values, which can be helpful for debugging and development. Contributions of all levels are appreciated, and your efforts help improve this tool for everyone.&lt;/p&gt; &#xA;&lt;p&gt;Build and run it using: &lt;code&gt;cargo run --release --no-default-features -- --path=&#34;C:/YOUR_PATH/.minecraft/saves/worldname&#34; --bbox=&#34;min_lng,min_lat,max_lng,max_lat&#34;&lt;/code&gt;&lt;br&gt; For the GUI: &lt;code&gt;cargo run --release&lt;/code&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;After your pull request was merged, I will take care of regularly creating update releases which will include your changes.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;‚≠ê&lt;/span&gt; Star History&lt;/h2&gt; &#xA;&lt;a href=&#34;https://star-history.com/#louis-e/arnis&amp;amp;Date&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=louis-e/arnis&amp;amp;Date&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=louis-e/arnis&amp;amp;Date&amp;amp;type=Date&#34;&gt; &#xA;  &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=louis-e/arnis&amp;amp;Date&amp;amp;type=Date&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt; &#xA;&lt;h2&gt;&lt;span&gt;¬©&lt;/span&gt; License Information&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2022-2025 Louis Erbkamm (louis-e)&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;a href=&#34;https://github.com/louis-e/arnis/raw/main/LICENSE&#34;&gt;^3&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Download Arnis only from the official source (&lt;a href=&#34;https://github.com/louis-e/arnis/&#34;&gt;https://github.com/louis-e/arnis/&lt;/a&gt;). Every other website providing a download and claiming to be affiliated with the project is unofficial and may be malicious.&lt;/p&gt; &#xA;&lt;p&gt;The logo was made by @nxfx21.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>get-convex/convex-backend</title>
    <updated>2025-03-02T01:57:07Z</updated>
    <id>tag:github.com,2025-03-02:/get-convex/convex-backend</id>
    <link href="https://github.com/get-convex/convex-backend" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The open-source reactive database for app developers&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://static-http.s3.amazonaws.com/logo/convex-logo-light.svg&#34; width=&#34;600&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://static-http.s3.amazonaws.com/logo/convex-logo.svg&#34; width=&#34;600&#34;&gt; &#xA;  &lt;img alt=&#34;Convex logo&#34; src=&#34;https://static-http.s3.amazonaws.com/logo/convex-logo.svg?sanitize=true&#34; width=&#34;600&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://convex.dev&#34;&gt;Convex&lt;/a&gt; is the open-source reactive database designed to make life easy for web app developers, whether human or LLM. Fetch data and perform business logic with strong consistency by writing pure TypeScript.&lt;/p&gt; &#xA;&lt;p&gt;Convex provides a database, a place to write your server functions, and client libraries. It makes it easy to build and scale dynamic live-updating apps. &lt;a href=&#34;https://docs.convex.dev/understanding/&#34;&gt;Read the docs to learn more&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Development of the Convex backend is led by the Convex team. We &lt;a href=&#34;https://raw.githubusercontent.com/get-convex/convex-backend/main/CONTRIBUTING.md&#34;&gt;welcome bug fixes&lt;/a&gt; and &lt;a href=&#34;https://discord.gg/convex&#34;&gt;love receiving feedback&lt;/a&gt;. We keep this repository synced with any internal development work within a handful of days.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Visit our &lt;a href=&#34;https://docs.convex.dev/&#34;&gt;documentation&lt;/a&gt; to learn more about Convex and follow our getting started guides.&lt;/p&gt; &#xA;&lt;p&gt;The easiest way to build with Convex is through our &lt;a href=&#34;https://www.convex.dev/plans&#34;&gt;cloud platform&lt;/a&gt;, which includes a generous free tier and lets you focus on building your application without worrying about infrastructure. Many small applications and side-projects can operate entirely on the free tier with zero cost and zero maintenance.&lt;/p&gt; &#xA;&lt;h2&gt;Self Hosting&lt;/h2&gt; &#xA;&lt;p&gt;The self-hosted product includes most features of the cloud product, including the dashboard and CLI. Self-hosted Convex works well with a variety of tools including Neon, Fly.io, Vercel, Netlify, RDS, Sqlite, Postgres, and more.&lt;/p&gt; &#xA;&lt;p&gt;You can either use Docker (recommended) or a prebuilt binary to self host Convex. Check out our &lt;a href=&#34;https://raw.githubusercontent.com/get-convex/convex-backend/main/self-hosted/README.md&#34;&gt;self-hosting guide&lt;/a&gt; for detailed instructions. Community support for self-hosting is available in the &lt;code&gt;#self-hosted&lt;/code&gt; channel on &lt;a href=&#34;https://discord.gg/convex&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community &amp;amp; Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join our &lt;a href=&#34;https://discord.gg/convex&#34;&gt;Discord community&lt;/a&gt; for help and discussions.&lt;/li&gt; &#xA; &lt;li&gt;Report issues when building and using the open source Convex backend through &lt;a href=&#34;https://github.com/get-convex/convex-backend/issues&#34;&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building from source&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/get-convex/convex-backend/main/BUILD.md&#34;&gt;BUILD.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you choose to self-host, we recommend following the self-hosting guide. If you are instead building from source, make sure to change your instance secret and admin key from the defaults in the repo.&lt;/li&gt; &#xA; &lt;li&gt;Convex is battle tested most thoroughly on Linux and Mac. On Windows, it has less experience. If you run into issues, please message us on &lt;a href=&#34;https://convex.dev/community&#34;&gt;Discord&lt;/a&gt; in the &lt;code&gt;#self-hosted&lt;/code&gt; channel.&lt;/li&gt; &#xA; &lt;li&gt;Convex self-hosted builds contain a beacon to help Convex improve the improve the product. The information is minimal and anonymous and helpful to Convex, but if you really want to disable it, you can set the &lt;code&gt;--disable-beacon&lt;/code&gt; flag on the backend binary. The beacon&#39;s messages print in the log and only include &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A random identifier for your deployment (not used elsewhere)&lt;/li&gt; &#xA;   &lt;li&gt;Migration version of your database&lt;/li&gt; &#xA;   &lt;li&gt;Git rev of the backend&lt;/li&gt; &#xA;   &lt;li&gt;Uptime of the backend&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Repository layout&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;crates/&lt;/code&gt; contains Rust code&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Main binary &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;local_backend/&lt;/code&gt; is an application server on top of the &lt;code&gt;Runtime&lt;/code&gt;. This is the serving edge for the Convex cloud.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;npm-packages/&lt;/code&gt; contains both our public and internal TypeScript packages.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Internal packages &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;udf-runtime/&lt;/code&gt; sets up the user-defined functions JS environment for queries and mutations&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;udf-tests/&lt;/code&gt; is a collection of functions used in testing the isolate layer&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;system-udfs/&lt;/code&gt; contains functions used by the Convex system e.g. the CLI&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>