<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-05-25T01:43:26Z</updated>
  <subtitle>Weekly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>espanso/espanso</title>
    <updated>2025-05-25T01:43:26Z</updated>
    <id>tag:github.com,2025-05-25:/espanso/espanso</id>
    <link href="https://github.com/espanso/espanso" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cross-platform Text Expander written in Rust&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/espanso/espanso/dev/images/logo_extended.png&#34; alt=&#34;espanso&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A cross-platform Text Expander written in Rust&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/espanso/espanso&#34; alt=&#34;GitHub release (latest by date)&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/language-rust-orange&#34; alt=&#34;Language&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/platforms-Windows%2C%20macOS%20and%20Linux-blue&#34; alt=&#34;Platforms&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/espanso/espanso&#34; alt=&#34;License&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/espanso/espanso/dev/images/example.gif&#34; alt=&#34;example&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Visit the &lt;a href=&#34;https://espanso.org&#34;&gt;espanso website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;What is a Text Expander?&lt;/h4&gt; &#xA;&lt;p&gt;A &lt;em&gt;text expander&lt;/em&gt; is a program that detects when you type a specific &lt;strong&gt;keyword&lt;/strong&gt; and replaces it with &lt;strong&gt;something else&lt;/strong&gt;. This is useful in many ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Save a lot of typing&lt;/strong&gt;, expanding common sentences.&lt;/li&gt; &#xA; &lt;li&gt;Create &lt;strong&gt;system-wide&lt;/strong&gt; code snippets.&lt;/li&gt; &#xA; &lt;li&gt;Execute &lt;strong&gt;custom scripts&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;strong&gt;emojis&lt;/strong&gt; like a pro.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Works on &lt;strong&gt;Windows&lt;/strong&gt;, &lt;strong&gt;macOS&lt;/strong&gt; and &lt;strong&gt;Linux&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Works with almost &lt;strong&gt;any program&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Works with &lt;strong&gt;Emojis&lt;/strong&gt; ðŸ˜„&lt;/li&gt; &#xA; &lt;li&gt;Works with &lt;strong&gt;Images&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Includes a powerful &lt;strong&gt;Search Bar&lt;/strong&gt; ðŸ”Ž&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Date&lt;/strong&gt; expansion support&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Custom scripts&lt;/strong&gt; support&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Shell commands&lt;/strong&gt; support&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;App-specific&lt;/strong&gt; configurations&lt;/li&gt; &#xA; &lt;li&gt;Support &lt;a href=&#34;https://espanso.org/docs/matches/forms/&#34;&gt;Forms&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Expandable with &lt;strong&gt;packages&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Built-in &lt;strong&gt;package manager&lt;/strong&gt; for &lt;a href=&#34;https://hub.espanso.org/&#34;&gt;espanso hub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;File based configuration&lt;/li&gt; &#xA; &lt;li&gt;Support Regex triggers&lt;/li&gt; &#xA; &lt;li&gt;Experimental Wayland support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;p&gt;Visit the &lt;a href=&#34;https://espanso.org/docs/&#34;&gt;official documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you need some help to setup espanso, want to ask a question or simply get involved in the community, you can &lt;a href=&#34;https://www.reddit.com/r/espanso/&#34;&gt;join the official Subreddit&lt;/a&gt; or &lt;a href=&#34;https://discord.gg/DFcCNDg7bB&#34;&gt;join the official Discord&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;p&gt;espanso is a free, open source software developed in my (little) spare time. If you liked the project and would like to support further development, please consider making a small donation, it really helps :)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=FHNLR5DRS267E&amp;amp;source=url&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/espanso/espanso/dev/images/donate.gif&#34; alt=&#34;Donate with PayPal&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Many people helped the project along the way, thank you to all of you!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/espanso/espanso/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=espanso/espanso&#34; alt=&#34;Image&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Remarks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Thanks to &lt;a href=&#34;https://github.com/jordansissel/xdotool&#34;&gt;libxdo&lt;/a&gt; and &lt;a href=&#34;https://github.com/astrand/xclip&#34;&gt;xclip&lt;/a&gt;, used to implement the Linux port.&lt;/li&gt; &#xA; &lt;li&gt;Thanks to &lt;a href=&#34;https://xkbcommon.org/&#34;&gt;libxkbcommon&lt;/a&gt; and &lt;a href=&#34;https://github.com/bugaevc/wl-clipboard&#34;&gt;wl-clipboard&lt;/a&gt;, used to implement the Wayland port.&lt;/li&gt; &#xA; &lt;li&gt;Thanks to &lt;a href=&#34;https://www.wxwidgets.org/&#34;&gt;wxWidgets&lt;/a&gt; for providing a powerful cross-platform GUI library.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;espanso was created by &lt;a href=&#34;http://federicoterzi.com&#34;&gt;Federico Terzi&lt;/a&gt; and is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/espanso/espanso/dev/LICENSE&#34;&gt;GPL-3.0 license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mxsm/rocketmq-rust</title>
    <updated>2025-05-25T01:43:26Z</updated>
    <id>tag:github.com,2025-05-25:/mxsm/rocketmq-rust</id>
    <link href="https://github.com/mxsm/rocketmq-rust" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ðŸš€Apache RocketMQ build in RustðŸ¦€. Faster, safer, and with lower memory usage.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mxsm/rocketmq-rust/main/resources/logo.png&#34; width=&#34;30%&#34; height=&#34;auto&#34;&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/mxsm/rocketmq-rust&#34; alt=&#34;GitHub last commit&#34;&gt; &lt;a href=&#34;https://crates.io/crates/rocketmq-rust&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/rocketmq-rust.svg?sanitize=true&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://docs.rs/rocketmq-rust&#34;&gt;&lt;img src=&#34;https://docs.rs/rocketmq-rust/badge.svg?sanitize=true&#34; alt=&#34;Docs.rs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/actions&#34;&gt;&lt;img src=&#34;https://github.com/mxsm/rocketmq-rust/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/mxsm/rocketmq-rust&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/mxsm/rocketmq-rust/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;CodeCov&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/mxsm/rocketmq-rust&#34; alt=&#34;GitHub contributors&#34;&gt; &lt;img src=&#34;https://img.shields.io/crates/l/rocketmq-rust&#34; alt=&#34;Crates.io License&#34;&gt; &lt;br&gt; &lt;img src=&#34;https://img.shields.io/github/repo-size/mxsm/rocketmq-rust&#34; alt=&#34;GitHub repo size&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/MSRV-1.75.0%2B-25b373&#34; alt=&#34;Static Badge&#34;&gt; &lt;a href=&#34;https://deepwiki.com/mxsm/rocketmq-rust&#34;&gt;&lt;img src=&#34;https://deepwiki.com/badge.svg?sanitize=true&#34; alt=&#34;Ask DeepWiki&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://trendshift.io/repositories/12176&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://trendshift.io/api/badge/repositories/12176&#34; alt=&#34;mxsm%2Frocketmq-rust | Trendshift&#34; style=&#34;width: 250px; height: 55px;&#34; width=&#34;250&#34; height=&#34;55&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://trendshift.io/developers/3818&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://trendshift.io/api/badge/developers/3818&#34; alt=&#34;mxsm | Trendshift&#34; style=&#34;width: 250px; height: 55px;&#34; width=&#34;250&#34; height=&#34;55&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;RocketMQ-Rust&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to &lt;a href=&#34;https://github.com/apache/rocketmq&#34;&gt;Apache Rocketmq&lt;/a&gt; Rust implementation. &lt;strong&gt;RocketMQ-Rust(Rust library)&lt;/strong&gt; is a reimplementation of the Apache RocketMQ message middleware in the Rust language. This project aims to provide Rust developers with a high-performance and reliable message queue service, making full use of the features of the Rust language.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mxsm/rocketmq-rust/main/resources/Rocketmq-rust.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;RocketMQ-Rust Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Rust Language Advantages:&lt;/strong&gt; Leveraging the benefits of Rust, such as memory safety, zero-cost abstractions, and high concurrency performance, RocketMQ-Rust offers an efficient and reliable message middleware.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Asynchronous and Non-blocking Design:&lt;/strong&gt; RocketMQ-Rust takes full advantage of Rust&#39;s asynchronous programming capabilities, adopting a non-blocking design that supports high-concurrency message processing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ecosystem Integration:&lt;/strong&gt; As part of the Rust ecosystem, RocketMQ-Rust integrates well with other libraries and frameworks within the Rust ecosystem, providing flexible integration options for developers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cross-platform Support:&lt;/strong&gt; RocketMQ-Rust supports multiple platforms, including Linux, Windows, macOS, making it convenient for use in different environments.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mxsm/rocketmq-rust/main/resources/architecture.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Document&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;Manual official documentation&lt;/code&gt;&lt;/strong&gt;ï¼š&lt;a href=&#34;https://rocketmq-rust.ljbmxsm.com/&#34;&gt;Rocketmq-rust website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;code&gt;AI documentation&lt;/code&gt;&lt;/strong&gt;: &lt;a href=&#34;https://deepwiki.com/mxsm/rocketmq-rust&#34;&gt;Rocketmq-rust Deepwiki&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;rust toolchain MSRV is 1.75.(stable,nightly)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Run name server&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Run the following command to see usageï¼š&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;windows platform&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;cargo run --bin rocketmq-namesrv-rust -- --help&#xA;&#xA;RocketMQ Name remoting_server(Rust)&#xA;&#xA;Usage: rocketmq-namesrv-rust.exe [OPTIONS]&#xA;&#xA;Options:&#xA;  -p, --port &amp;lt;PORT&amp;gt;                rocketmq name remoting_server port [default: 9876]&#xA;  -i, --ip &amp;lt;IP&amp;gt;                    rocketmq name remoting_server ip [default: 0.0.0.0]&#xA;  -c, --config-file &amp;lt;CONFIG FILE&amp;gt;  Name server config properties file&#xA;  -h, --help                       Print help&#xA;  -V, --version                    Print version&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Linux platform&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ cargo run --bin rocketmq-namesrv-rust -- --help&#xA;&#xA;RocketMQ Name server(Rust)&#xA;&#xA;Usage: rocketmq-namesrv-rust [OPTIONS]&#xA;&#xA;Options:&#xA;  -p, --port &amp;lt;PORT&amp;gt;                rocketmq name remoting_server port [default: 9876]&#xA;  -i, --ip &amp;lt;IP&amp;gt;                    rocketmq name remoting_server ip [default: 0.0.0.0]&#xA;  -c, --config-file &amp;lt;CONFIG FILE&amp;gt;  Name server config properties file&#xA;  -h, --help                       Print help&#xA;  -V, --version                    Print version&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Run the following command to start the name server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo run --bin rocketmq-namesrv-rust&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run Broker&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Run the following command to see usageï¼š&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;windows platform&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo run --bin rocketmq-broker-rust -- --help&#xA;&#xA;RocketMQ Broker Server(Rust)&#xA;&#xA;Usage: rocketmq-broker-rust.exe [OPTIONS]&#xA;&#xA;Options:&#xA;  -c, --config-file &amp;lt;FILE&amp;gt;      Broker config properties file&#xA;  -m, --print-important-config  Print important config item&#xA;  -n, --namesrv-addr &amp;lt;IP&amp;gt;       Name server address list, eg: &#39;192.168.0.1:9876;192.168.0.2:9876&#39; [default: 127.0.0.1:9876]&#xA;  -p, --print-config-item       Print all config item&#xA;  -h, --help                    Print help&#xA;  -V, --version                 Print version&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Linux platform&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ cargo run --bin rocketmq-broker-rust -- --help&#xA;&#xA;RocketMQ Broker Server(Rust)&#xA;&#xA;Usage: rocketmq-broker-rust [OPTIONS]&#xA;&#xA;Options:&#xA;  -c, --config-file &amp;lt;FILE&amp;gt;      Broker config properties file&#xA;  -m, --print-important-config  Print important config item&#xA;  -n, --namesrv-addr &amp;lt;IP&amp;gt;       Name server address list, eg: &#39;192.168.0.1:9876;192.168.0.2:9876&#39; [default: 127.0.0.1:9876]&#xA;  -p, --print-config-item       Print all config item&#xA;  -h, --help                    Print help&#xA;  -V, --version                 Print version&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Run the following command to start the name server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cargo run --bin rocketmq-broker-rust&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Client how to send message&lt;/h2&gt; &#xA;&lt;p&gt;First, start the RocketMQ NameServer and Broker services.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/raw/main/rocketmq-client/README.md#Send-a-single-message&#34;&gt;&lt;strong&gt;Send a single message&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/raw/main/rocketmq-client/README.md#Send-batch-messages&#34;&gt;&lt;strong&gt;Send batch messages&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/raw/main/rocketmq-client/README.md#Send-RPC-messages&#34;&gt;&lt;strong&gt;Send RPC messages&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/tree/main/rocketmq-client/examples&#34;&gt;&lt;strong&gt;For more examples, you can check here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Modules&lt;/h2&gt; &#xA;&lt;p&gt;The existing RocketMQ has the following functional modules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/tree/main/rocketmq-namesrv&#34;&gt;&lt;strong&gt;Name Server&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/tree/main/rocketmq-broker&#34;&gt;&lt;strong&gt;Broker&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/tree/main/rocketmq-store&#34;&gt;&lt;strong&gt;Store (Local Storage)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Controller (High Availability)&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/tree/main/rocketmq-client&#34;&gt;&lt;strong&gt;Client (SDK)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Proxy&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tiered Store (Tiered Storage Module)&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The specific functions of each module can be referred to in the &lt;a href=&#34;https://github.com/apache/rocketmq/tree/develop/docs&#34;&gt;official RocketMQ documentation&lt;/a&gt;. The Rust implementation will be carried out sequentially in the following order.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions to code, issue reporting, and suggestions are welcome. The development of RocketMQ-Rust relies on the support of developers. Let&#39;s collaborate to advance Rust in the message middleware domain. &lt;a href=&#34;https://rocketmq-rust.ljbmxsm.com/docs/contribute-guide/&#34;&gt;&lt;strong&gt;&lt;code&gt;Contribute Guide&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://repobeats.axiom.co/api/embed/6ca125de92b36e1f78c6681d0a1296b8958adea1.svg?sanitize=true&#34; alt=&#34;&#34; title=&#34;Repobeats analytics image&#34;&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=mxsm/rocketmq-rust&amp;amp;anon=1&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://api.star-history.com/svg?repos=mxsm/rocketmq-rust&amp;amp;type=Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=mxsm/rocketmq-rust&amp;amp;type=Date&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;RocketMQ-Rust is licensed under the &lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/raw/main/LICENSE-APACHE&#34;&gt;Apache License 2.0&lt;/a&gt; and &lt;a href=&#34;https://github.com/mxsm/rocketmq-rust/raw/main/LICENSE-MIT&#34;&gt;MIT license&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hrkfdn/ncspot</title>
    <updated>2025-05-25T01:43:26Z</updated>
    <id>tag:github.com,2025-05-25:/hrkfdn/ncspot</id>
    <link href="https://github.com/hrkfdn/ncspot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cross-platform ncurses Spotify client written in Rust, inspired by ncmpc and the likes.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34; style=&#34;text-align:center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;images/logo_text_dark.svg&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;images/logo_text_light.svg&#34;&gt; &#xA;  &lt;img alt=&#34;ncspot logo&#34; height=&#34;128&#34; src=&#34;https://raw.githubusercontent.com/hrkfdn/ncspot/main/images/logo_text_light.svg?sanitize=true&#34;&gt; &#xA; &lt;/picture&gt; &#xA; &lt;h3&gt;An ncurses Spotify client written in Rust using librespot&lt;/h3&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://crates.io/crates/ncspot&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/ncspot.svg?sanitize=true&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/ncspot/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/ncspot/community.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;img alt=&#34;ncspot search tab&#34; src=&#34;https://raw.githubusercontent.com/hrkfdn/ncspot/main/images/screenshot.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;ncspot is an ncurses Spotify client written in Rust using librespot. It is heavily inspired by ncurses MPD clients, such as &lt;a href=&#34;https://musicpd.org/clients/ncmpc/&#34;&gt;ncmpc&lt;/a&gt;. My motivation was to provide a simple and resource friendly alternative to the official client as well as to support platforms that currently don&#39;t have a Spotify client, such as the *BSDs.&lt;/p&gt; &#xA;&lt;p&gt;ncspot only works with a Spotify premium account as it offers features that are not available for free accounts.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support for tracks, albums, playlists, genres, searching...&lt;/li&gt; &#xA; &lt;li&gt;Small &lt;a href=&#34;https://raw.githubusercontent.com/hrkfdn/ncspot/main/doc/resource_footprint.md&#34;&gt;resource footprint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Support for a lot of platforms&lt;/li&gt; &#xA; &lt;li&gt;Vim keybindings out of the box&lt;/li&gt; &#xA; &lt;li&gt;IPC socket for remote control&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;ncspot is available on macOS (Homebrew), Windows (Scoop, WinGet), Linux (native package, Flathub and Snapcraft) and the BSD&#39;s. Detailed installation instructions for each platform can be found &lt;a href=&#34;https://raw.githubusercontent.com/hrkfdn/ncspot/main/doc/users.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;A configuration file can be provided. The default location is &lt;code&gt;~/.config/ncspot&lt;/code&gt;. Detailed configuration information can be found &lt;a href=&#34;https://raw.githubusercontent.com/hrkfdn/ncspot/main/doc/users.md#configuration&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Building ncspot requires a working &lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;Rust installation&lt;/a&gt; and a Python 3 installation. To compile ncspot, run &lt;code&gt;cargo build&lt;/code&gt;. For detailed instructions on building ncspot, there is more information &lt;a href=&#34;https://raw.githubusercontent.com/hrkfdn/ncspot/main/doc/developers.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Packaging&lt;/h2&gt; &#xA;&lt;p&gt;Information about provided files, how to generate some of them and current package status accross platforms can be found &lt;a href=&#34;https://raw.githubusercontent.com/hrkfdn/ncspot/main/doc/package_maintainers.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>