<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-20T01:46:20Z</updated>
  <subtitle>Weekly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>solana-foundation/anchor</title>
    <updated>2025-07-20T01:46:20Z</updated>
    <id>tag:github.com,2025-07-20:/solana-foundation/anchor</id>
    <link href="https://github.com/solana-foundation/anchor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⚓ Solana Sealevel Framework&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img height=&#34;170x&#34; src=&#34;https://pbs.twimg.com/media/FVUVaO9XEAAulvK?format=png&amp;amp;name=small&#34;&gt; &#xA; &lt;h1&gt;Anchor&lt;/h1&gt; &#xA; &lt;p&gt; &lt;strong&gt;Solana Program Framework&lt;/strong&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://github.com/coral-xyz/anchor/actions&#34;&gt;&lt;img alt=&#34;Build Status&#34; src=&#34;https://github.com/coral-xyz/anchor/actions/workflows/tests.yaml/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://anchor-lang.com&#34;&gt;&lt;img alt=&#34;Tutorials&#34; src=&#34;https://img.shields.io/badge/docs-tutorials-blueviolet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/NHHGSXAnXk&#34;&gt;&lt;img alt=&#34;Discord Chat&#34; src=&#34;https://img.shields.io/discord/889577356681945098?color=blueviolet&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/github/license/coral-xyz/anchor?color=blueviolet&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.anchor-lang.com/&#34;&gt;Anchor&lt;/a&gt; is a framework providing several convenient developer tools for writing Solana programs (sometimes called &#39;smart contracts&#39;).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rust eDSL for writing Solana programs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Interface_description_language&#34;&gt;IDL&lt;/a&gt; specification&lt;/li&gt; &#xA; &lt;li&gt;TypeScript package for generating clients from IDL&lt;/li&gt; &#xA; &lt;li&gt;CLI and workspace management for developing complete applications&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Anchor is the most popular framework for Solana programs.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] If you&#39;re familiar with developing in Ethereum&#39;s &lt;a href=&#34;https://docs.soliditylang.org/en/&#34;&gt;Solidity&lt;/a&gt;, &lt;a href=&#34;https://www.trufflesuite.com/&#34;&gt;Truffle&lt;/a&gt;, &lt;a href=&#34;https://github.com/ethereum/web3.js&#34;&gt;web3.js&lt;/a&gt;, then using Anchor be familiar. Although the DSL syntax and semantics are targeted at Solana, the high level flow of writing RPC request handlers, emitting an IDL, and generating clients from IDL is the same.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;For a quickstart guide and in depth tutorials, see the &lt;a href=&#34;https://book.anchor-lang.com&#34;&gt;Anchor book&lt;/a&gt; and the &lt;a href=&#34;https://anchor-lang.com&#34;&gt;Anchor documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To jump straight to examples, go &lt;a href=&#34;https://github.com/coral-xyz/anchor/tree/master/examples&#34;&gt;here&lt;/a&gt;. For the latest Rust and TypeScript API documentation, see &lt;a href=&#34;https://docs.rs/anchor-lang&#34;&gt;docs.rs&lt;/a&gt; and the &lt;a href=&#34;https://www.anchor-lang.com/docs/clients/typescript&#34;&gt;typedoc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Package&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Version&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Docs&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;anchor-lang&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Rust primitives for writing programs on Solana&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://crates.io/crates/anchor-lang&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/anchor-lang?color=blue&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.rs/anchor-lang&#34;&gt;&lt;img src=&#34;https://docs.rs/anchor-lang/badge.svg?sanitize=true&#34; alt=&#34;Docs.rs&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;anchor-spl&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;CPI clients for SPL programs on Solana&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://crates.io/crates/anchor-spl&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/anchor-spl?color=blue&#34; alt=&#34;crates&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.rs/anchor-spl&#34;&gt;&lt;img src=&#34;https://docs.rs/anchor-spl/badge.svg?sanitize=true&#34; alt=&#34;Docs.rs&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;anchor-client&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Rust client for Anchor programs&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://crates.io/crates/anchor-client&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/anchor-client?color=blue&#34; alt=&#34;crates&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.rs/anchor-client&#34;&gt;&lt;img src=&#34;https://docs.rs/anchor-client/badge.svg?sanitize=true&#34; alt=&#34;Docs.rs&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;@coral-xyz/anchor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;TypeScript client for Anchor programs&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.npmjs.com/package/@coral-xyz/anchor&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@coral-xyz/anchor.svg?color=blue&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://coral-xyz.github.io/anchor/ts/index.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-typedoc-blue&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;@coral-xyz/anchor-cli&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;CLI to support building and managing an Anchor workspace&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.npmjs.com/package/@coral-xyz/anchor-cli&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/@coral-xyz/anchor-cli.svg?color=blue&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://coral-xyz.github.io/anchor/cli/commands.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-typedoc-blue&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Note&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Anchor is in active development, so all APIs are subject to change.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;This code is unaudited. Use at your own risk.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s a counter program, where only the designated &lt;code&gt;authority&lt;/code&gt; can increment the count.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;use anchor_lang::prelude::*;&#xA;&#xA;declare_id!(&#34;Fg6PaFpoGXkYsidMpWTK6W2BeZ7FEfcYkg476zPFsLnS&#34;);&#xA;&#xA;#[program]&#xA;mod counter {&#xA;    use super::*;&#xA;&#xA;    pub fn initialize(ctx: Context&amp;lt;Initialize&amp;gt;, start: u64) -&amp;gt; Result&amp;lt;()&amp;gt; {&#xA;        let counter = &amp;amp;mut ctx.accounts.counter;&#xA;        counter.authority = *ctx.accounts.authority.key;&#xA;        counter.count = start;&#xA;        Ok(())&#xA;    }&#xA;&#xA;    pub fn increment(ctx: Context&amp;lt;Increment&amp;gt;) -&amp;gt; Result&amp;lt;()&amp;gt; {&#xA;        let counter = &amp;amp;mut ctx.accounts.counter;&#xA;        counter.count += 1;&#xA;        Ok(())&#xA;    }&#xA;}&#xA;&#xA;#[derive(Accounts)]&#xA;pub struct Initialize&amp;lt;&#39;info&amp;gt; {&#xA;    #[account(init, payer = authority, space = 48)]&#xA;    pub counter: Account&amp;lt;&#39;info, Counter&amp;gt;,&#xA;    pub authority: Signer&amp;lt;&#39;info&amp;gt;,&#xA;    pub system_program: Program&amp;lt;&#39;info, System&amp;gt;,&#xA;}&#xA;&#xA;#[derive(Accounts)]&#xA;pub struct Increment&amp;lt;&#39;info&amp;gt; {&#xA;    #[account(mut, has_one = authority)]&#xA;    pub counter: Account&amp;lt;&#39;info, Counter&amp;gt;,&#xA;    pub authority: Signer&amp;lt;&#39;info&amp;gt;,&#xA;}&#xA;&#xA;#[account]&#xA;pub struct Counter {&#xA;    pub authority: Pubkey,&#xA;    pub count: u64,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more, see the &lt;a href=&#34;https://github.com/coral-xyz/anchor/tree/master/examples&#34;&gt;examples&lt;/a&gt; and &lt;a href=&#34;https://github.com/coral-xyz/anchor/tree/master/tests&#34;&gt;tests&lt;/a&gt; directories.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Anchor is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/solana-foundation/anchor/master/LICENSE&#34;&gt;Apache 2.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in Anchor by you, as defined in the Apache-2.0 license, shall be licensed as above, without any additional terms or conditions.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for your interest in contributing to Anchor! Please see the &lt;a href=&#34;https://raw.githubusercontent.com/solana-foundation/anchor/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; to learn how.&lt;/p&gt; &#xA;&lt;h3&gt;Thanks ❤️&lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/coral-xyz/anchor/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=coral-xyz/anchor&#34; width=&#34;100%&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>Xerxes-2/clewdr</title>
    <updated>2025-07-20T01:46:20Z</updated>
    <id>tag:github.com,2025-07-20:/Xerxes-2/clewdr</id>
    <link href="https://github.com/Xerxes-2/clewdr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;High Performance LLM Reverse Proxy&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/Xerxes-2/clewdr/master/assets/clewdr-logo.svg?sanitize=true&#34; alt=&#34;ClewdR&#34; height=&#34;60&#34;&gt; &#xA; &lt;p&gt;&lt;em&gt;High-Performance LLM Proxy for the Modern Era&lt;/em&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://deepwiki.com/Xerxes-2/clewdr&#34;&gt;&lt;img src=&#34;https://deepwiki.com/badge.svg?sanitize=true&#34; alt=&#34;Ask DeepWiki&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Xerxes-2/clewdr/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/Xerxes-2/clewdr?style=for-the-badge&amp;amp;logo=github&amp;amp;color=blue&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Xerxes-2/clewdr/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/Xerxes-2/clewdr?style=for-the-badge&amp;amp;color=green&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Xerxes-2/clewdr/master/#performance-metrics&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Performance-10x%20Faster-orange?style=for-the-badge&#34; alt=&#34;Performance&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Xerxes-2/clewdr/master/#technical-architecture&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Memory-Single%20Digit%20MB-purple?style=for-the-badge&#34; alt=&#34;Memory&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h3&gt;🌍 Language Support&lt;/h3&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Xerxes-2/clewdr/master/README.md&#34;&gt;&lt;strong&gt;🇺🇸 English&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/Xerxes-2/clewdr/master/README_zh.md&#34;&gt;&lt;strong&gt;🇨🇳 简体中文&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🎯 &lt;strong&gt;What is ClewdR?&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;ClewdR&lt;/strong&gt; is a production-grade, high-performance proxy server engineered specifically for &lt;strong&gt;Claude&lt;/strong&gt; (Claude.ai, Claude Code) and &lt;strong&gt;Google Gemini&lt;/strong&gt; (AI Studio, Vertex AI). Built with &lt;strong&gt;Rust&lt;/strong&gt; for maximum performance and minimal resource usage, it provides enterprise-level reliability with consumer-friendly simplicity.&lt;/p&gt; &#xA;&lt;h3&gt;🏆 &lt;strong&gt;Why ClewdR?&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;🚄 10x Performance&lt;/strong&gt;: Outperforms script-language implementations&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;💾 1/10th Memory&lt;/strong&gt;: Uses only single-digit MB in production&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;🔧 Production Ready&lt;/strong&gt;: Handles thousands of requests per second&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;🌐 Multi-Platform&lt;/strong&gt;: Native support for Windows, macOS, Linux, Android&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;✨ &lt;strong&gt;Core Features&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;50%&#34;&gt; &lt;h3&gt;🎨 &lt;strong&gt;Full-Featured Web Interface&lt;/strong&gt;&lt;/h3&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;React-powered dashboard&lt;/strong&gt; with real-time monitoring&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Multi-language support&lt;/strong&gt; (English/Chinese)&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Secure authentication&lt;/strong&gt; with auto-generated passwords&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Hot configuration reload&lt;/strong&gt; without service interruption&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Visual cookie &amp;amp; key management&lt;/strong&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;h3&gt;🏗️ &lt;strong&gt;Enterprise Architecture&lt;/strong&gt;&lt;/h3&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Tokio + Axum&lt;/strong&gt; async runtime for maximum throughput&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Event-driven design&lt;/strong&gt; with decoupled components&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Moka-powered caching&lt;/strong&gt; with intelligent invalidation&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Chrome-level fingerprinting&lt;/strong&gt; for seamless API access&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Multi-threaded processing&lt;/strong&gt; with optimal resource usage&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;h3&gt;🧠 &lt;strong&gt;Intelligent Resource Management&lt;/strong&gt;&lt;/h3&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;strong&gt;Smart cookie rotation&lt;/strong&gt; with status classification&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;strong&gt;API key health monitoring&lt;/strong&gt; and automatic failover&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;strong&gt;Rate limiting protection&lt;/strong&gt; with exponential backoff&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;strong&gt;Connection pooling&lt;/strong&gt; with keep-alive optimization&lt;/p&gt; &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;   &lt;td width=&#34;50%&#34;&gt;   &lt;h3&gt;🌍 &lt;strong&gt;Universal Compatibility&lt;/strong&gt;&lt;/h3&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Static compilation&lt;/strong&gt; - single binary, zero dependencies&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Cross-platform native&lt;/strong&gt; - Windows, macOS, Linux, Android&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Docker ready&lt;/strong&gt; with optimized images&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Reverse proxy friendly&lt;/strong&gt; with custom endpoint support&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;h3&gt;🚀 &lt;strong&gt;Protocol Support&lt;/strong&gt;&lt;/h3&gt; &lt;h4&gt;&lt;strong&gt;Claude Integration&lt;/strong&gt;&lt;/h4&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;✅ &lt;strong&gt;Claude.ai&lt;/strong&gt; web interface&lt;/li&gt; &#xA;     &lt;li&gt;✅ &lt;strong&gt;Claude Code&lt;/strong&gt; specialized support&lt;/li&gt; &#xA;     &lt;li&gt;✅ &lt;strong&gt;System prompt caching&lt;/strong&gt; for efficiency&lt;/li&gt; &#xA;     &lt;li&gt;✅ &lt;strong&gt;Extended Thinking&lt;/strong&gt; mode&lt;/li&gt; &#xA;     &lt;li&gt;✅ &lt;strong&gt;Image attachments&lt;/strong&gt; &amp;amp; web search&lt;/li&gt; &#xA;     &lt;li&gt;✅ &lt;strong&gt;Custom stop sequences&lt;/strong&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;h4&gt;&lt;strong&gt;Google Gemini Integration&lt;/strong&gt;&lt;/h4&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;✅ &lt;strong&gt;AI Studio&lt;/strong&gt; &amp;amp; &lt;strong&gt;Vertex AI&lt;/strong&gt;&lt;/li&gt; &#xA;     &lt;li&gt;✅ &lt;strong&gt;OAuth2 authentication&lt;/strong&gt; for Vertex&lt;/li&gt; &#xA;     &lt;li&gt;✅ &lt;strong&gt;HTTP Keep-Alive&lt;/strong&gt; optimization&lt;/li&gt; &#xA;     &lt;li&gt;✅ &lt;strong&gt;Model switching&lt;/strong&gt; with automatic detection&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;h4&gt;&lt;strong&gt;API Compatibility&lt;/strong&gt;&lt;/h4&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;✅ &lt;strong&gt;OpenAI format&lt;/strong&gt; - drop-in replacement&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;✅ &lt;strong&gt;Native formats&lt;/strong&gt; - Claude &amp;amp; Gemini&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;✅ &lt;strong&gt;Streaming responses&lt;/strong&gt; with real-time processing&lt;/p&gt; &lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt;   &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;📊 &lt;strong&gt;Performance Metrics&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Metric&lt;/th&gt; &#xA;    &lt;th&gt;ClewdR&lt;/th&gt; &#xA;    &lt;th&gt;Traditional Proxies&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Memory Usage&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;10 MB&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;100-500 MB&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Requests/sec&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;1000+&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;100-200&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Startup Time&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;1 second&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;5-15 seconds&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Binary Size&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;~15 MB&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;50-200 MB&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;Dependencies&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;Zero&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;Node.js/Python + libs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🚀 &lt;strong&gt;Quick Start Guide&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Step 1: Download &amp;amp; Run&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Download the latest release for your platform&#xA;wget https://github.com/Xerxes-2/clewdr/releases/latest/download/clewdr-[platform]&#xA;&#xA;# Extract the binary (if necessary)&#xA;tar -xzf clewdr-[platform].tar.gz&#xA;&#xA;# Navigate to the directory&#xA;cd clewdr-[platform]&#xA;&#xA;# Make executable (Linux/macOS)&#xA;chmod +x clewdr&#xA;&#xA;# Run ClewdR&#xA;./clewdr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;📦 &lt;strong&gt;Platform Downloads&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Platform&lt;/th&gt; &#xA;    &lt;th&gt;Architecture&lt;/th&gt; &#xA;    &lt;th&gt;Download Link&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;🪟 Windows&lt;/td&gt; &#xA;    &lt;td&gt;x64&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Xerxes-2/clewdr/releases/latest&#34;&gt;clewdr-windows-x64.exe&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;🐧 Linux&lt;/td&gt; &#xA;    &lt;td&gt;x64&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Xerxes-2/clewdr/releases/latest&#34;&gt;clewdr-linux-x64&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;🐧 Linux&lt;/td&gt; &#xA;    &lt;td&gt;ARM64&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Xerxes-2/clewdr/releases/latest&#34;&gt;clewdr-linux-arm64&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;🍎 macOS&lt;/td&gt; &#xA;    &lt;td&gt;x64&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Xerxes-2/clewdr/releases/latest&#34;&gt;clewdr-macos-x64&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;🍎 macOS&lt;/td&gt; &#xA;    &lt;td&gt;ARM64 (M1/M2)&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Xerxes-2/clewdr/releases/latest&#34;&gt;clewdr-macos-arm64&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;🤖 Android&lt;/td&gt; &#xA;    &lt;td&gt;ARM64&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/Xerxes-2/clewdr/releases/latest&#34;&gt;clewdr-android-arm64&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Step 2: Access Web Interface&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;🌐 Open your browser to &lt;strong&gt;&lt;code&gt;http://127.0.0.1:8484&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔐 Use the &lt;strong&gt;Web Admin Password&lt;/strong&gt; displayed in the console&lt;/li&gt; &#xA; &lt;li&gt;🎉 Welcome to ClewdR&#39;s management interface!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;💡 Pro Tips:&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Forgot password?&lt;/strong&gt; Delete &lt;code&gt;clewdr.toml&lt;/code&gt; and restart&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Docker users:&lt;/strong&gt; Password appears in container logs&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Change password:&lt;/strong&gt; Use the web interface settings&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Step 3: Configure Your Services&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;50%&#34;&gt; &lt;h4&gt;🍃 &lt;strong&gt;Claude Setup&lt;/strong&gt;&lt;/h4&gt; &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Add Cookies&lt;/strong&gt;: Paste your Claude.ai session cookies&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Configure Proxy&lt;/strong&gt;: Set upstream proxy if needed&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Test Connection&lt;/strong&gt;: Verify cookie status in dashboard&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/td&gt; &#xA;   &lt;td width=&#34;50%&#34;&gt; &lt;h4&gt;🔹 &lt;strong&gt;Gemini Setup&lt;/strong&gt;&lt;/h4&gt; &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Add API Keys&lt;/strong&gt;: Input your Google AI Studio keys&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Vertex AI&lt;/strong&gt; (Optional): Configure OAuth2 for enterprise&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Model Selection&lt;/strong&gt;: Choose your preferred models&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Step 4: Connect Your Applications&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;ClewdR provides multiple API endpoints. Check the console output for available endpoints:&lt;/p&gt; &#xA;&lt;h4&gt;🔗 &lt;strong&gt;API Endpoints&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Claude Endpoints&#xA;Claude Web:    http://127.0.0.1:8484/v1/messages          # Native format&#xA;Claude OpenAI: http://127.0.0.1:8484/v1/chat/completions  # OpenAI compatible&#xA;Claude Code:   http://127.0.0.1:8484/code/v1/messages     # Claude Code&#xA;&#xA;# Gemini Endpoints  &#xA;Gemini Native: http://127.0.0.1:8484/v1/v1beta/generateContent    # Native format&#xA;Gemini OpenAI: http://127.0.0.1:8484/gemini/chat/completions      # OpenAI compatible&#xA;Vertex AI:     http://127.0.0.1:8484/v1/vertex/v1beta/            # Vertex AI&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;⚙️ &lt;strong&gt;Application Configuration Examples&lt;/strong&gt;&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;SillyTavern Configuration&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;api_url&#34;: &#34;http://127.0.0.1:8484/v1/chat/completions&#34;,&#xA;  &#34;api_key&#34;: &#34;your-api-password-from-console&#34;,&#xA;  &#34;model&#34;: &#34;claude-3-sonnet-20240229&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Continue VSCode Extension&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;models&#34;: [&#xA;    {&#xA;      &#34;title&#34;: &#34;Claude via ClewdR&#34;,&#xA;      &#34;provider&#34;: &#34;openai&#34;,&#xA;      &#34;model&#34;: &#34;claude-3-sonnet-20240229&#34;,&#xA;      &#34;apiBase&#34;: &#34;http://127.0.0.1:8484/v1/&#34;,&#xA;      &#34;apiKey&#34;: &#34;your-api-password-from-console&#34;&#xA;    }&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Cursor IDE Configuration&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;openaiApiBase&#34;: &#34;http://127.0.0.1:8484/v1/&#34;,&#xA;  &#34;openaiApiKey&#34;: &#34;your-api-password-from-console&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Step 5: Verify &amp;amp; Monitor&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;✅ Check cookie/key status in the web dashboard&lt;/li&gt; &#xA; &lt;li&gt;✅ Monitor request logs for successful connections&lt;/li&gt; &#xA; &lt;li&gt;✅ Test with a simple chat request&lt;/li&gt; &#xA; &lt;li&gt;✅ Enjoy blazing-fast LLM proxy performance!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community Resources&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Github Aggregated Wiki&lt;/strong&gt;: &lt;a href=&#34;https://github.com/Xerxes-2/clewdr/wiki&#34;&gt;https://github.com/Xerxes-2/clewdr/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/teralomaniac/clewd&#34;&gt;Clewd Modified Version&lt;/a&gt; - A modified version of the original Clewd, providing many inspirations and foundational features.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mirrorange/clove&#34;&gt;Clove&lt;/a&gt; - Provides the support logic for Claude Code.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>restatedev/restate</title>
    <updated>2025-07-20T01:46:20Z</updated>
    <id>tag:github.com,2025-07-20:/restatedev/restate</id>
    <link href="https://github.com/restatedev/restate" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Restate is the platform for building resilient applications that tolerate all infrastructure faults w/o the need for a PhD.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://docs.restate.dev&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/doc-reference-blue&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/restatedev/examples&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/view-examples-blue&#34; alt=&#34;Examples&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/skW3AZ6uGd&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1128210118216007792?logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/restatecommunity/shared_invite/zt-2v9gl005c-WBpr167o5XJZI1l7HWKImA&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack-4A154B?logo=slack&amp;amp;logoColor=fff&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://x.com/intent/follow?screen_name=restatedev&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/restatedev.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Restate - Building resilient applications made easy!&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://restate.dev/blog/announcing-restate-1.0-restate-cloud-and-our-seed-funding-round/title_figure_hudf3f5cd4c2c091de8198c7c4b273b831_2636815_6620x0_resize_q75_h2_box_3.webp&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://restate.dev/blog/announcing-restate-1.0-restate-cloud-and-our-seed-funding-round/title_figure_hudf3f5cd4c2c091de8198c7c4b273b831_2636815_6620x0_resize_q75_h2_box_3.webp&#34;&gt; &#xA;  &lt;img alt=&#34;Restate overview&#34; src=&#34;https://restate.dev/blog/announcing-restate-1.0-restate-cloud-and-our-seed-funding-round/title_figure_hudf3f5cd4c2c091de8198c7c4b273b831_2636815_6620x0_resize_q75_h2_box_3.webp&#34; width=&#34;100%&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://restate.dev&#34;&gt;Restate&lt;/a&gt; is the simplest way to build resilient applications.&lt;/p&gt; &#xA;&lt;p&gt;Restate provides a distributed durable version of your everyday building blocks, letting you build a wide range of use cases:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/restatedev/ai-examples&#34;&gt;Durable AI Agents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.restate.dev/use-cases/workflows&#34;&gt;Workflows-as-Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.restate.dev/use-cases/microservice-orchestration&#34;&gt;Microservice Orchestration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.restate.dev/use-cases/event-processing&#34;&gt;Event Processing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.restate.dev/use-cases/async-tasks&#34;&gt;Async Tasks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/restatedev/examples&#34;&gt;Agents, Stateful Actors, state machines, and much more&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get started with Restate&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;🏎 &lt;a href=&#34;https://docs.restate.dev/get_started/quickstart&#34;&gt;Follow the Quickstart&lt;/a&gt; to get Restate up and running within 2 minutes!&lt;/li&gt; &#xA; &lt;li&gt;💡 &lt;a href=&#34;https://docs.restate.dev/get_started/tour&#34;&gt;The Tour of Restate&lt;/a&gt; walks you through the most important features of Restate.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;SDKs&lt;/h2&gt; &#xA;&lt;p&gt;Restate supports the following SDKs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/restatedev/sdk-typescript&#34;&gt;Typescript&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/restatedev/sdk-java&#34;&gt;Java and Kotlin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/restatedev/sdk-python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/restatedev/sdk-go&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/restatedev/sdk-rust&#34;&gt;Rust&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;We offer pre-built binaries of the CLI and the server for MacOS and Linux.&lt;/p&gt; &#xA;&lt;p&gt;Have a look at the &lt;a href=&#34;https://docs.restate.dev/get_started/quickstart&#34;&gt;Quickstart&lt;/a&gt; or &lt;a href=&#34;https://docs.restate.dev/develop/local_dev&#34;&gt;installation instructions in the docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Install the server&lt;/h3&gt; &#xA;&lt;p&gt;Install via Homebrew:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install restatedev/tap/restate-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run via npx:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx @restatedev/restate-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run via docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -p 8080:8080 -p 9070:9070 -p 9071:9071 \&#xA;    --add-host=host.docker.internal:host-gateway docker.restate.dev/restatedev/restate:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install the CLI&lt;/h3&gt; &#xA;&lt;p&gt;Install via Homebrew:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install restatedev/tap/restate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install via npm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install --global @restatedev/restate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run via npx:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx @restatedev/restate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also download the binaries from the &lt;a href=&#34;https://github.com/restatedev/restate/releases&#34;&gt;release page&lt;/a&gt; or our &lt;a href=&#34;https://restate.dev/get-restate/&#34;&gt;download page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🤗️ Join our online community on &lt;a href=&#34;https://discord.gg/skW3AZ6uGd&#34;&gt;Discord&lt;/a&gt; or &lt;a href=&#34;https://join.slack.com/t/restatecommunity/shared_invite/zt-2v9gl005c-WBpr167o5XJZI1l7HWKImA&#34;&gt;Slack&lt;/a&gt; for help, sharing feedback and talking to the community.&lt;/li&gt; &#xA; &lt;li&gt;📖 &lt;a href=&#34;https://docs.restate.dev&#34;&gt;Check out our documentation&lt;/a&gt; to get started quickly!&lt;/li&gt; &#xA; &lt;li&gt;📣 &lt;a href=&#34;https://twitter.com/restatedev&#34;&gt;Follow us on Twitter&lt;/a&gt; for staying up to date.&lt;/li&gt; &#xA; &lt;li&gt;🙋 &lt;a href=&#34;https://github.com/restatedev/restate/issues&#34;&gt;Create a GitHub issue&lt;/a&gt; for requesting a new feature or reporting a problem.&lt;/li&gt; &#xA; &lt;li&gt;🏠 &lt;a href=&#34;https://github.com/restatedev&#34;&gt;Visit our GitHub org&lt;/a&gt; for exploring other repositories.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Core primitives&lt;/h2&gt; &#xA;&lt;p&gt;The basic primitives Restate offers to simplify application development are the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reliable Execution&lt;/strong&gt;: Restate guarantees code runs to completion. Failures result in retries that use the &lt;a href=&#34;https://docs.restate.dev/concepts/durable_execution&#34;&gt;Durable Execution mechanism&lt;/a&gt; to recover partial progress and prevent re-executing completed steps.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reliable Communication&lt;/strong&gt;: Services communicate with exactly-once semantics: whether it&#39;s &lt;a href=&#34;https://docs.restate.dev/concepts/invocations&#34;&gt;request-response, one-way messages, or scheduled tasks&lt;/a&gt;. Restate reliably delivers messages and uses Durable Execution to ensure no losses or duplicates can happen.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Durable Promises and Timers&lt;/strong&gt;: Register Promises/Futures and timers in Restate to make them resilient to failures (e.g. sleep, webhooks, timers). Restate can recover them across failures, processes, and time.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Consistent State&lt;/strong&gt;: Implement &lt;a href=&#34;https://docs.restate.dev/concepts/services&#34;&gt;stateful entities&lt;/a&gt; with isolated K/V state per entity. Restate persists the K/V state updates together with the execution progress to ensure consistent state. Restate attaches the K/V state to the request on invocation, and writes it back upon completion. This is particularly efficient for FaaS deployments (stateful serverless, yay!).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Suspending User Code&lt;/strong&gt;: long-running code suspends when awaiting on a Promise/Future and resumes when that promise is resolved. This is particularly useful in combination with serverless deployments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Observability &amp;amp; Introspection&lt;/strong&gt;: Restate includes a UI and CLI to inspect the &lt;a href=&#34;https://docs.restate.dev/operate/introspection&#34;&gt;state of your application&lt;/a&gt; across services and invocations. Restate automatically generates Open Telemetry traces for the interactions between handlers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We’re excited if you join the Restate community and start contributing! Whether it is feature requests, bug reports, ideas &amp;amp; feedback or PRs, we appreciate any and all contributions. We know that your time is precious and, therefore, deeply value any effort to contribute!&lt;/p&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://raw.githubusercontent.com/restatedev/restate/main/docs/dev/development-guidelines.md&#34;&gt;development guidelines&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/restatedev/restate/main/docs/dev/local-development.md&#34;&gt;tips for local development&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;p&gt;Restate follows &lt;a href=&#34;https://semver.org/&#34;&gt;Semantic Versioning&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can safely upgrade from a Restate &lt;code&gt;x.y&lt;/code&gt; to &lt;code&gt;x.(y+1)&lt;/code&gt; release without performing any manual data migration, as Restate performs an automatic data migration for you.&lt;/p&gt; &#xA;&lt;p&gt;For SDK compatibility, refer to the supported version matrix in the respective READMEs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/restatedev/sdk-java#versions&#34;&gt;Restate Java/Kotlin SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/restatedev/sdk-typescript#versions&#34;&gt;Restate TypeScript SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/restatedev/sdk-go#versions&#34;&gt;Restate Go SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/restatedev/sdk-python#versions&#34;&gt;Restate Python SDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/restatedev/sdk-rust#versions&#34;&gt;Restate Rust SDK&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building Restate locally&lt;/h3&gt; &#xA;&lt;p&gt;In order to build Restate locally &lt;a href=&#34;https://github.com/restatedev/restate/raw/main/docs/dev/local-development.md#building-restate&#34;&gt;follow the build instructions&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>