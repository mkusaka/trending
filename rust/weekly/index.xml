<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Rust Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-20T01:45:13Z</updated>
  <subtitle>Weekly Trending of Rust in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ReFirmLabs/binwalk</title>
    <updated>2024-10-20T01:45:13Z</updated>
    <id>tag:github.com,2024-10-20:/ReFirmLabs/binwalk</id>
    <link href="https://github.com/ReFirmLabs/binwalk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Firmware Analysis Tool&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Binwalk v3&lt;/h1&gt; &#xA;&lt;p&gt;This is an updated version of the Binwalk firmware analysis tool.&lt;/p&gt; &#xA;&lt;p&gt;It has been re-written in Rust, and is currently in the beta testing phase.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ReFirmLabs/binwalk/master/images/binwalk_animated.svg?sanitize=true&#34; alt=&#34;binwalk v3&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What does it do?&lt;/h2&gt; &#xA;&lt;p&gt;Binwalk can identify, and optionally extract, files and data that have been embedded inside of other files.&lt;/p&gt; &#xA;&lt;p&gt;While its primary focus is firmware analysis, it supports a &lt;a href=&#34;https://github.com/ReFirmLabs/binwalk/wiki/Supported-Signatures&#34;&gt;wide variety&lt;/a&gt; of file and data types.&lt;/p&gt; &#xA;&lt;p&gt;Through &lt;a href=&#34;https://github.com/ReFirmLabs/binwalk/wiki/Generating-Entropy-Graphs&#34;&gt;entropy analysis&lt;/a&gt;, it can even help to identify unknown compression or encryption!&lt;/p&gt; &#xA;&lt;p&gt;Binwalk can be customized and &lt;a href=&#34;https://github.com/ReFirmLabs/binwalk/wiki/Using-the-Rust-Library&#34;&gt;integrated&lt;/a&gt; into your own Rust projects.&lt;/p&gt; &#xA;&lt;h2&gt;How do I get it?&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to install Binwalk and all dependencies is to &lt;a href=&#34;https://github.com/ReFirmLabs/binwalk/wiki/Building-A-Binwalk-Docker-Image&#34;&gt;build a Docker image&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Or, you can &lt;a href=&#34;https://github.com/ReFirmLabs/binwalk/wiki/Compile-From-Source&#34;&gt;compile from source&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;How do I use it?&lt;/h2&gt; &#xA;&lt;p&gt;Usage is &lt;em&gt;&lt;strong&gt;simple&lt;/strong&gt;&lt;/em&gt;, analysis is &lt;em&gt;&lt;strong&gt;fast&lt;/strong&gt;&lt;/em&gt;, and results are &lt;em&gt;&lt;strong&gt;detailed&lt;/strong&gt;&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;binwalk DIR-890L_AxFW110b07.bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ReFirmLabs/binwalk/master/images/output.png&#34; alt=&#34;example output&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;--help&lt;/code&gt;, or check out the &lt;a href=&#34;https://github.com/ReFirmLabs/binwalk/wiki#usage&#34;&gt;Wiki&lt;/a&gt; for more advanced options!&lt;/p&gt;</summary>
  </entry>
</feed>