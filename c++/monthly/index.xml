<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-01T02:00:34Z</updated>
  <subtitle>Monthly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mixxxdj/mixxx</title>
    <updated>2024-03-01T02:00:34Z</updated>
    <id>tag:github.com,2024-03-01:/mixxxdj/mixxx</id>
    <link href="https://github.com/mixxxdj/mixxx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mixxx is Free DJ software that gives you everything you need to perform live mixes.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mixxx&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mixxx.org/download&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/mixxxdj/mixxx.svg?sanitize=true&#34; alt=&#34;GitHub latest tag&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://repology.org/metapackage/mixxx/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/tiny-repos/mixxx.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mixxxdj/mixxx/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/mixxxdj/mixxx/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/mixxxdj/mixxx&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/mixxxdj/mixxx/badge.svg?sanitize=true&#34; alt=&#34;Coverage status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mixxx.zulipchat.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/zulip-join_chat-brightgreen.svg?sanitize=true&#34; alt=&#34;Zulip chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mixxx.org/donate&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-green.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mixxx.org&#34;&gt;Mixxx&lt;/a&gt; is Free DJ software that gives you everything you need to perform live DJ mixes. Mixxx works on GNU/Linux, Windows, and macOS.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;To get started with Mixxx:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;For live use, &lt;a href=&#34;https://mixxx.org/download/#stable&#34;&gt;download the latest stable version&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For experimentation and testing, &lt;a href=&#34;https://mixxx.org/download/#testing&#34;&gt;download a development release&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To live on the bleeding edge, clone the repo: &lt;code&gt;git clone https://github.com/mixxxdj/mixxx.git&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Bug tracker&lt;/h2&gt; &#xA;&lt;p&gt;The Mixxx team uses &lt;a href=&#34;https://github.com/mixxxdj/mixxx/issues&#34;&gt;Github Issues&lt;/a&gt; to manage Mixxx development.&lt;/p&gt; &#xA;&lt;p&gt;Have a bug or feature request? &lt;a href=&#34;https://github.com/mixxxdj/mixxx/issues/new/choose&#34;&gt;File a bug on Github&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Want to get involved in Mixxx development? Assign yourself a bug from the &lt;a href=&#34;https://github.com/mixxxdj/mixxx/issues?q=is%3Aopen+is%3Aissue+label%3Aeasy&#34;&gt;easy bug list&lt;/a&gt; and get started!&lt;/p&gt; &#xA;&lt;h2&gt;Building Mixxx&lt;/h2&gt; &#xA;&lt;p&gt;First, open a terminal (on Windows, use &#34;x64 Native Tools Command Prompt for &lt;a href=&#34;https://docs.microsoft.com/visualstudio/install/install-visual-studio?view=vs-2019&#34;&gt;VS 2019&lt;/a&gt;&#34;), download the mixxx source code and navigate to it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/mixxxdj/mixxx.git&#xA;$ cd mixxx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Fetch the required dependencies and set up the build environment (on Windows, macOS and Debian/Ubuntu, you can do that by running &lt;code&gt;tools\windows_buildenv.bat&lt;/code&gt;, &lt;code&gt;source tools/macos_buildenv.sh setup&lt;/code&gt; or &lt;code&gt;source tools/debian_buildenv.sh setup&lt;/code&gt; respectively), then run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mkdir build&#xA;$ cd build&#xA;$ cmake ..&#xA;$ cmake --build .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There should now be a &lt;code&gt;mixxx&lt;/code&gt; executable in the current directory that you can run. Alternatively, can generate a package using &lt;code&gt;cpack&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For help using Mixxx, there are a variety of options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://manual.mixxx.org/&#34;&gt;Mixxx manual&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mixxxdj/mixxx/wiki&#34;&gt;Mixxx wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mixxxdj/mixxx/wiki/Faq&#34;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://manual.mixxx.org/2.3/en/hardware/manuals.html&#34;&gt;Hardware Compatibility&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mixxx.org/wiki/doku.php/Creating-Skins&#34;&gt;Creating Skins&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Translation&lt;/h2&gt; &#xA;&lt;p&gt;Help to spread Mixxx with translations into more languages, as well as to update and ensure the accuracy of existing translations.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.transifex.com/projects/p/mixxxdj&#34;&gt;Help translate content&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mixxxdj/mixxx/wiki/Internationalization&#34;&gt;Mixxx i18n wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mixxx.discourse.group/c/translation/13&#34;&gt;Mixxx localization forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.transifex.com/projects/p/mixxxdj/glossary/l/en/&#34;&gt;Mixxx glossary&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Mixxx is a vibrant community of hackers, DJs and artists. To keep track of development and community news:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chat with us on &lt;a href=&#34;https://mixxx.zulipchat.com/&#34;&gt;Zulip&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Follow us on &lt;a href=&#34;https://floss.social/@mixxx&#34;&gt;Mastodon&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/mixxxdj&#34;&gt;Twitter&lt;/a&gt; and &lt;a href=&#34;https://www.facebook.com/pages/Mixxx-DJ-Software/21723485212&#34;&gt;Facebook&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Subscribe to the &lt;a href=&#34;https://mixxx.org/news/&#34;&gt;Mixxx Blog&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Post on the &lt;a href=&#34;https://mixxx.discourse.group/&#34;&gt;Mixxx forums&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Mixxx is released under the GPLv2. See the LICENSE file for a full copy of the license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>prusa3d/PrusaSlicer</title>
    <updated>2024-03-01T02:00:34Z</updated>
    <id>tag:github.com,2024-03-01:/prusa3d/PrusaSlicer</id>
    <link href="https://github.com/prusa3d/PrusaSlicer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;G-code generator for 3D printers (RepRap, Makerbot, Ultimaker etc.)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/prusa3d/PrusaSlicer/master/resources/icons/PrusaSlicer.png?raw=true&#34; alt=&#34;PrusaSlicer logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;PrusaSlicer&lt;/h1&gt; &#xA;&lt;p&gt;You may want to check the &lt;a href=&#34;https://www.prusa3d.com/prusaslicer/&#34;&gt;PrusaSlicer project page&lt;/a&gt;. Prebuilt Windows, OSX and Linux binaries are available through the &lt;a href=&#34;https://github.com/prusa3d/PrusaSlicer/releases&#34;&gt;git releases page&lt;/a&gt; or from the &lt;a href=&#34;https://www.prusa3d.com/drivers/&#34;&gt;Prusa3D downloads page&lt;/a&gt;. There are also &lt;a href=&#34;https://github.com/prusa3d/PrusaSlicer/wiki/PrusaSlicer-on-Linux---binary-distributions&#34;&gt;3rd party Linux builds available&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;PrusaSlicer takes 3D models (STL, OBJ, AMF) and converts them into G-code instructions for FFF printers or PNG layers for mSLA 3D printers. It&#39;s compatible with any modern printer based on the RepRap toolchain, including all those based on the Marlin, Prusa, Sprinter and Repetier firmware. It also works with Mach3, LinuxCNC and Machinekit controllers.&lt;/p&gt; &#xA;&lt;p&gt;PrusaSlicer is based on &lt;a href=&#34;https://github.com/Slic3r/Slic3r&#34;&gt;Slic3r&lt;/a&gt; by Alessandro Ranellucci and the RepRap community.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://www.prusa3d.com/slic3r-prusa-edition/&#34;&gt;project homepage&lt;/a&gt; and the &lt;a href=&#34;https://raw.githubusercontent.com/prusa3d/PrusaSlicer/master/doc/&#34;&gt;documentation directory&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;What language is it written in?&lt;/h3&gt; &#xA;&lt;p&gt;All user facing code is written in C++. The slicing core is the &lt;code&gt;libslic3r&lt;/code&gt; library, which can be built and used in a standalone way. The command line interface is a thin wrapper over &lt;code&gt;libslic3r&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;What are PrusaSlicer&#39;s main features?&lt;/h3&gt; &#xA;&lt;p&gt;Key features are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;multi-platform&lt;/strong&gt; (Linux/Mac/Win) and packaged as standalone-app with no dependencies required&lt;/li&gt; &#xA; &lt;li&gt;complete &lt;strong&gt;command-line interface&lt;/strong&gt; to use it with no GUI&lt;/li&gt; &#xA; &lt;li&gt;multi-material &lt;strong&gt;(multiple extruders)&lt;/strong&gt; object printing&lt;/li&gt; &#xA; &lt;li&gt;multiple G-code flavors supported (RepRap, Makerbot, Mach3, Machinekit etc.)&lt;/li&gt; &#xA; &lt;li&gt;ability to plate &lt;strong&gt;multiple objects having distinct print settings&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;multithread&lt;/strong&gt; processing&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;STL auto-repair&lt;/strong&gt; (tolerance for broken models)&lt;/li&gt; &#xA; &lt;li&gt;wide automated unit testing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Other major features are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;combine infill every &#39;n&#39; perimeters layer to speed up printing&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;3D preview&lt;/strong&gt; (including multi-material files)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;multiple layer heights&lt;/strong&gt; in a single print&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;spiral vase&lt;/strong&gt; mode for bumpless vases&lt;/li&gt; &#xA; &lt;li&gt;fine-grained configuration of speed, acceleration, extrusion width&lt;/li&gt; &#xA; &lt;li&gt;several infill patterns including honeycomb, spirals, Hilbert curves&lt;/li&gt; &#xA; &lt;li&gt;support material, raft, brim, skirt&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;standby temperature&lt;/strong&gt; and automatic wiping for multi-extruder printing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/prusa3d/PrusaSlicer/wiki/Slic3r-Prusa-Edition-Macro-Language&#34;&gt;customizable &lt;strong&gt;G-code macros&lt;/strong&gt;&lt;/a&gt; and output filename with variable placeholders&lt;/li&gt; &#xA; &lt;li&gt;support for &lt;strong&gt;post-processing scripts&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;cooling logic&lt;/strong&gt; controlling fan speed and dynamic print speed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Development&lt;/h3&gt; &#xA;&lt;p&gt;If you want to compile the source yourself, follow the instructions on one of these documentation pages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prusa3d/PrusaSlicer/master/doc/How%20to%20build%20-%20Linux%20et%20al.md&#34;&gt;Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prusa3d/PrusaSlicer/master/doc/How%20to%20build%20-%20Mac%20OS.md&#34;&gt;macOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/prusa3d/PrusaSlicer/master/doc/How%20to%20build%20-%20Windows.md&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Can I help?&lt;/h3&gt; &#xA;&lt;p&gt;Sure! You can do the following to find things that are available to help with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add an &lt;a href=&#34;https://github.com/prusa3d/PrusaSlicer/issues&#34;&gt;issue&lt;/a&gt; to the github tracker if it isn&#39;t already present.&lt;/li&gt; &#xA; &lt;li&gt;Look at &lt;a href=&#34;https://github.com/prusa3d/PrusaSlicer/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aopen+is%3Aissue+label%3A%22volunteer+needed%22&#34;&gt;issues labeled &#34;volunteer needed&#34;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;What&#39;s PrusaSlicer license?&lt;/h3&gt; &#xA;&lt;p&gt;PrusaSlicer is licensed under the &lt;em&gt;GNU Affero General Public License, version 3&lt;/em&gt;. The PrusaSlicer is originally based on Slic3r by Alessandro Ranellucci.&lt;/p&gt; &#xA;&lt;h3&gt;How can I use PrusaSlicer from the command line?&lt;/h3&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://github.com/prusa3d/PrusaSlicer/wiki/Command-Line-Interface&#34;&gt;Command Line Interface&lt;/a&gt; wiki page.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/terminal</title>
    <updated>2024-03-01T02:00:34Z</updated>
    <id>tag:github.com,2024-03-01:/microsoft/terminal</id>
    <link href="https://github.com/microsoft/terminal" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The new Windows Terminal and the original Windows console host, all in the same place!&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/microsoft/terminal/assets/91625426/333ddc76-8ab2-4eb4-a8c0-4d7b953b1179&#34; alt=&#34;terminal-logos&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Welcome to the Windows Terminal, Console and Command-Line repo&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the source code for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/terminal&#34;&gt;Windows Terminal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/terminal-preview&#34;&gt;Windows Terminal Preview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The Windows console host (&lt;code&gt;conhost.exe&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Components shared between the two projects&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/terminal/main/src/tools/ColorTool&#34;&gt;ColorTool&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/terminal/main/samples&#34;&gt;Sample projects&lt;/a&gt; that show how to consume the Windows Console APIs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Related repositories include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/terminal&#34;&gt;Windows Terminal Documentation&lt;/a&gt; (&lt;a href=&#34;https://github.com/MicrosoftDocs/terminal&#34;&gt;Repo: Contribute to the docs&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MicrosoftDocs/Console-Docs&#34;&gt;Console API Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/Cascadia-Code&#34;&gt;Cascadia Code Font&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing and running Windows Terminal&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Windows Terminal requires Windows 10 2004 (build 19041) or later&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Microsoft Store [Recommended]&lt;/h3&gt; &#xA;&lt;p&gt;Install the &lt;a href=&#34;https://aka.ms/terminal&#34;&gt;Windows Terminal from the Microsoft Store&lt;/a&gt;. This allows you to always be on the latest version when we release new builds with automatic upgrades.&lt;/p&gt; &#xA;&lt;p&gt;This is our preferred method.&lt;/p&gt; &#xA;&lt;h3&gt;Other install methods&lt;/h3&gt; &#xA;&lt;h4&gt;Via GitHub&lt;/h4&gt; &#xA;&lt;p&gt;For users who are unable to install Windows Terminal from the Microsoft Store, released builds can be manually downloaded from this repository&#39;s &lt;a href=&#34;https://github.com/microsoft/terminal/releases&#34;&gt;Releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Download the &lt;code&gt;Microsoft.WindowsTerminal_&amp;lt;versionNumber&amp;gt;.msixbundle&lt;/code&gt; file from the &lt;strong&gt;Assets&lt;/strong&gt; section. To install the app, you can simply double-click on the &lt;code&gt;.msixbundle&lt;/code&gt; file, and the app installer should automatically run. If that fails for any reason, you can try the following command at a PowerShell prompt:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# NOTE: If you are using PowerShell 7+, please run&#xA;# Import-Module Appx -UseWindowsPowerShell&#xA;# before using Add-AppxPackage.&#xA;&#xA;Add-AppxPackage Microsoft.WindowsTerminal_&amp;lt;versionNumber&amp;gt;.msixbundle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] If you install Terminal manually:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;You may need to install the &lt;a href=&#34;https://docs.microsoft.com/troubleshoot/cpp/c-runtime-packages-desktop-bridge#how-to-install-and-update-desktop-framework-packages&#34;&gt;VC++ v14 Desktop Framework Package&lt;/a&gt;. This should only be necessary on older builds of Windows 10 and only if you get an error about missing framework packages.&lt;/li&gt; &#xA;  &lt;li&gt;Terminal will not auto-update when new builds are released so you will need to regularly install the latest Terminal release to receive all the latest fixes and improvements!&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Via Windows Package Manager CLI (aka winget)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/winget-cli&#34;&gt;winget&lt;/a&gt; users can download and install the latest Terminal release by installing the &lt;code&gt;Microsoft.WindowsTerminal&lt;/code&gt; package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;winget install --id Microsoft.WindowsTerminal -e&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Dependency support is available in WinGet version &lt;a href=&#34;https://github.com/microsoft/winget-cli/releases&#34;&gt;1.6.2631 or later&lt;/a&gt;. To install the Terminal stable release 1.18 or later, please make sure you have the updated version of the WinGet client.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Via Chocolatey (unofficial)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chocolatey.org&#34;&gt;Chocolatey&lt;/a&gt; users can download and install the latest Terminal release by installing the &lt;code&gt;microsoft-windows-terminal&lt;/code&gt; package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco install microsoft-windows-terminal&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To upgrade Windows Terminal using Chocolatey, run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco upgrade microsoft-windows-terminal&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have any issues when installing/upgrading the package please go to the &lt;a href=&#34;https://chocolatey.org/packages/microsoft-windows-terminal&#34;&gt;Windows Terminal package page&lt;/a&gt; and follow the &lt;a href=&#34;https://chocolatey.org/docs/package-triage-process&#34;&gt;Chocolatey triage process&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Via Scoop (unofficial)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scoop.sh&#34;&gt;Scoop&lt;/a&gt; users can download and install the latest Terminal release by installing the &lt;code&gt;windows-terminal&lt;/code&gt; package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;scoop bucket add extras&#xA;scoop install windows-terminal&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To update Windows Terminal using Scoop, run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;scoop update windows-terminal&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have any issues when installing/updating the package, please search for or report the same on the &lt;a href=&#34;https://github.com/lukesampson/scoop-extras/issues&#34;&gt;issues page&lt;/a&gt; of Scoop Extras bucket repository.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Installing Windows Terminal Canary&lt;/h2&gt; &#xA;&lt;p&gt;Windows Terminal Canary is a nightly build of Windows Terminal. This build has the latest code from our &lt;code&gt;main&lt;/code&gt; branch, giving you an opportunity to try features before they make it to Windows Terminal Preview.&lt;/p&gt; &#xA;&lt;p&gt;Windows Terminal Canary is our least stable offering, so you may discover bugs before we have had a chance to find them.&lt;/p&gt; &#xA;&lt;p&gt;Windows Terminal Canary is available as an App Installer distribution and a Portable ZIP distribution.&lt;/p&gt; &#xA;&lt;p&gt;The App Installer distribution supports automatic updates. Due to platform limitations, this installer only works on Windows 11.&lt;/p&gt; &#xA;&lt;p&gt;The Portable ZIP distribution is a portable application. It will not automatically update and will not automatically check for updates. This portable ZIP distribution works on Windows 10 (19041+) and Windows 11.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Distribution&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Architecture&lt;/th&gt; &#xA;   &lt;th&gt;Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;App Installer&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x64, arm64, x86&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://aka.ms/terminal-canary-installer&#34;&gt;download&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Portable ZIP&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x64&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://aka.ms/terminal-canary-zip-x64&#34;&gt;download&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Portable ZIP&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ARM64&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://aka.ms/terminal-canary-zip-arm64&#34;&gt;download&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Portable ZIP&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://aka.ms/terminal-canary-zip-x86&#34;&gt;download&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;Learn more about the &lt;a href=&#34;https://learn.microsoft.com/windows/terminal/distributions&#34;&gt;types of Windows Terminal distributions&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Windows Terminal Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;The plan for the Windows Terminal &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/terminal/main/doc/roadmap-2023.md&#34;&gt;is described here&lt;/a&gt; and will be updated as the project proceeds.&lt;/p&gt; &#xA;&lt;h2&gt;Project Build Status&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;Build Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Terminal&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dev.azure.com/ms/terminal/_build?definitionId=136&#34;&gt;&lt;img src=&#34;https://dev.azure.com/ms/terminal/_apis/build/status/terminal%20CI?branchName=main&#34; alt=&#34;Terminal Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ColorTool&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://microsoft.visualstudio.com/_apis/public/build/definitions/c93e867a-8815-43c1-92c4-e7dd5404f1e1/17023/badge&#34; alt=&#34;Colortool Build Status&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Terminal &amp;amp; Console Overview&lt;/h2&gt; &#xA;&lt;p&gt;Please take a few minutes to review the overview below before diving into the code:&lt;/p&gt; &#xA;&lt;h3&gt;Windows Terminal&lt;/h3&gt; &#xA;&lt;p&gt;Windows Terminal is a new, modern, feature-rich, productive terminal application for command-line users. It includes many of the features most frequently requested by the Windows command-line community including support for tabs, rich text, globalization, configurability, theming &amp;amp; styling, and more.&lt;/p&gt; &#xA;&lt;p&gt;The Terminal will also need to meet our goals and measures to ensure it remains fast and efficient, and doesn&#39;t consume vast amounts of memory or power.&lt;/p&gt; &#xA;&lt;h3&gt;The Windows Console Host&lt;/h3&gt; &#xA;&lt;p&gt;The Windows Console host, &lt;code&gt;conhost.exe&lt;/code&gt;, is Windows&#39; original command-line user experience. It also hosts Windows&#39; command-line infrastructure and the Windows Console API server, input engine, rendering engine, user preferences, etc. The console host code in this repository is the actual source from which the &lt;code&gt;conhost.exe&lt;/code&gt; in Windows itself is built.&lt;/p&gt; &#xA;&lt;p&gt;Since taking ownership of the Windows command-line in 2014, the team added several new features to the Console, including background transparency, line-based selection, support for &lt;a href=&#34;https://en.wikipedia.org/wiki/ANSI_escape_code&#34;&gt;ANSI / Virtual Terminal sequences&lt;/a&gt;, &lt;a href=&#34;https://devblogs.microsoft.com/commandline/24-bit-color-in-the-windows-console/&#34;&gt;24-bit color&lt;/a&gt;, a &lt;a href=&#34;https://devblogs.microsoft.com/commandline/windows-command-line-introducing-the-windows-pseudo-console-conpty/&#34;&gt;Pseudoconsole (&#34;ConPTY&#34;)&lt;/a&gt;, and more.&lt;/p&gt; &#xA;&lt;p&gt;However, because Windows Console&#39;s primary goal is to maintain backward compatibility, we have been unable to add many of the features the community (and the team) have been wanting for the last several years including tabs, unicode text, and emoji.&lt;/p&gt; &#xA;&lt;p&gt;These limitations led us to create the new Windows Terminal.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can read more about the evolution of the command-line in general, and the Windows command-line specifically in &lt;a href=&#34;https://devblogs.microsoft.com/commandline/windows-command-line-backgrounder/&#34;&gt;this accompanying series of blog posts&lt;/a&gt; on the Command-Line team&#39;s blog.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Shared Components&lt;/h3&gt; &#xA;&lt;p&gt;While overhauling Windows Console, we modernized its codebase considerably, cleanly separating logical entities into modules and classes, introduced some key extensibility points, replaced several old, home-grown collections and containers with safer, more efficient &lt;a href=&#34;https://docs.microsoft.com/en-us/cpp/standard-library/stl-containers?view=vs-2022&#34;&gt;STL containers&lt;/a&gt;, and made the code simpler and safer by using Microsoft&#39;s &lt;a href=&#34;https://github.com/Microsoft/wil&#34;&gt;Windows Implementation Libraries - WIL&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This overhaul resulted in several of Console&#39;s key components being available for re-use in any terminal implementation on Windows. These components include a new DirectWrite-based text layout and rendering engine, a text buffer capable of storing both UTF-16 and UTF-8, a VT parser/emitter, and more.&lt;/p&gt; &#xA;&lt;h3&gt;Creating the new Windows Terminal&lt;/h3&gt; &#xA;&lt;p&gt;When we started planning the new Windows Terminal application, we explored and evaluated several approaches and technology stacks. We ultimately decided that our goals would be best met by continuing our investment in our C++ codebase, which would allow us to reuse several of the aforementioned modernized components in both the existing Console and the new Terminal. Further, we realized that this would allow us to build much of the Terminal&#39;s core itself as a reusable UI control that others can incorporate into their own applications.&lt;/p&gt; &#xA;&lt;p&gt;The result of this work is contained within this repo and delivered as the Windows Terminal application you can download from the Microsoft Store, or &lt;a href=&#34;https://github.com/microsoft/terminal/releases&#34;&gt;directly from this repo&#39;s releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;p&gt;For more information about Windows Terminal, you may find some of these resources useful and interesting:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devblogs.microsoft.com/commandline&#34;&gt;Command-Line Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devblogs.microsoft.com/commandline/windows-command-line-backgrounder/&#34;&gt;Command-Line Backgrounder Blog Series&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Windows Terminal Launch: &lt;a href=&#34;https://www.youtube.com/watch?v=8gw0rXPMMPE&amp;amp;list=PLEHMQNlPj-Jzh9DkNpqipDGCZZuOwrQwR&amp;amp;index=2&amp;amp;t=0s&#34;&gt;Terminal &#34;Sizzle Video&#34;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Windows Terminal Launch: &lt;a href=&#34;https://www.youtube.com/watch?v=KMudkRcwjCw&#34;&gt;Build 2019 Session&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run As Radio: &lt;a href=&#34;https://www.runasradio.com/Shows/Show/645&#34;&gt;Show 645 - Windows Terminal with Richard Turner&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Azure Devops Podcast: &lt;a href=&#34;http://azuredevopspodcast.clear-measure.com/kayla-cinnamon-and-rich-turner-on-devops-on-the-windows-terminal-team-episode-54&#34;&gt;Episode 54 - Kayla Cinnamon and Rich Turner on DevOps on the Windows Terminal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Microsoft Ignite 2019 Session: &lt;a href=&#34;https://myignite.techcommunity.microsoft.com/sessions/81329?source=sessions&#34;&gt;The Modern Windows Command Line: Windows Terminal - BRK3321&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;I built and ran the new Terminal, but it looks just like the old console&lt;/h3&gt; &#xA;&lt;p&gt;Cause: You&#39;re launching the incorrect solution in Visual Studio.&lt;/p&gt; &#xA;&lt;p&gt;Solution: Make sure you&#39;re building &amp;amp; deploying the &lt;code&gt;CascadiaPackage&lt;/code&gt; project in Visual Studio.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] &lt;code&gt;OpenConsole.exe&lt;/code&gt; is just a locally-built &lt;code&gt;conhost.exe&lt;/code&gt;, the classic Windows Console that hosts Windows&#39; command-line infrastructure. OpenConsole is used by Windows Terminal to connect to and communicate with command-line applications (via &lt;a href=&#34;https://devblogs.microsoft.com/commandline/windows-command-line-introducing-the-windows-pseudo-console-conpty/&#34;&gt;ConPty&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;All project documentation is located at &lt;a href=&#34;https://aka.ms/terminal-docs&#34;&gt;aka.ms/terminal-docs&lt;/a&gt;. If you would like to contribute to the documentation, please submit a pull request on the &lt;a href=&#34;https://github.com/MicrosoftDocs/terminal&#34;&gt;Windows Terminal Documentation repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We are excited to work alongside you, our amazing community, to build and enhance Windows Terminal!&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;BEFORE you start work on a feature/fix&lt;/strong&gt;&lt;/em&gt;, please read &amp;amp; follow our &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/terminal/main/CONTRIBUTING.md&#34;&gt;Contributor&#39;s Guide&lt;/a&gt; to help avoid any wasted or duplicate effort.&lt;/p&gt; &#xA;&lt;h2&gt;Communicating with the Team&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to communicate with the team is via GitHub issues.&lt;/p&gt; &#xA;&lt;p&gt;Please file new issues, feature requests and suggestions, but &lt;strong&gt;DO search for similar open/closed preexisting issues before creating a new issue.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you would like to ask a question that you feel doesn&#39;t warrant an issue (yet), please reach out to us via Twitter:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Christopher Nguyen, Product Manager: &lt;a href=&#34;https://twitter.com/nguyen_dows&#34;&gt;@nguyen_dows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dustin Howett, Engineering Lead: &lt;a href=&#34;https://twitter.com/DHowett&#34;&gt;@dhowett&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mike Griese, Senior Developer: &lt;a href=&#34;https://mastodon.social/@zadjii&#34;&gt;@zadjii@mastodon.social&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Carlos Zamora, Developer: &lt;a href=&#34;https://twitter.com/cazamor_msft&#34;&gt;@cazamor_msft&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pankaj Bhojwani, Developer&lt;/li&gt; &#xA; &lt;li&gt;Leonard Hecker, Developer: &lt;a href=&#34;https://twitter.com/LeonardHecker&#34;&gt;@LeonardHecker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developer Guidance&lt;/h2&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You must be running Windows 10 2004 (build &amp;gt;= 10.0.19041.0) or later to run Windows Terminal&lt;/li&gt; &#xA; &lt;li&gt;You must &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/get-started/enable-your-device-for-development&#34;&gt;enable Developer Mode in the Windows Settings app&lt;/a&gt; to locally install and run Windows Terminal&lt;/li&gt; &#xA; &lt;li&gt;You must have &lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/latest&#34;&gt;PowerShell 7 or later&lt;/a&gt; installed&lt;/li&gt; &#xA; &lt;li&gt;You must have the &lt;a href=&#34;https://developer.microsoft.com/en-us/windows/downloads/windows-sdk/&#34;&gt;Windows 11 (10.0.22621.0) SDK&lt;/a&gt; installed&lt;/li&gt; &#xA; &lt;li&gt;You must have at least &lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt;VS 2022&lt;/a&gt; installed&lt;/li&gt; &#xA; &lt;li&gt;You must install the following Workloads via the VS Installer. Note: Opening the solution in VS 2022 will &lt;a href=&#34;https://devblogs.microsoft.com/setup/configure-visual-studio-across-your-organization-with-vsconfig/&#34;&gt;prompt you to install missing components automatically&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Desktop Development with C++&lt;/li&gt; &#xA;   &lt;li&gt;Universal Windows Platform Development&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;The following Individual Components&lt;/strong&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;C++ (v143) Universal Windows Platform Tools&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You must install the &lt;a href=&#34;https://docs.microsoft.com/dotnet/framework/install/guide-for-developers#to-install-the-net-framework-developer-pack-or-targeting-pack&#34;&gt;.NET Framework Targeting Pack&lt;/a&gt; to build test projects&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building the Code&lt;/h2&gt; &#xA;&lt;p&gt;This repository uses &lt;a href=&#34;https://git-scm.com/book/en/v2/Git-Tools-Submodules&#34;&gt;git submodules&lt;/a&gt; for some of its dependencies. To make sure submodules are restored or updated, be sure to run the following prior to building:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git submodule update --init --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OpenConsole.sln may be built from within Visual Studio or from the command-line using a set of convenience scripts &amp;amp; tools in the &lt;strong&gt;/tools&lt;/strong&gt; directory:&lt;/p&gt; &#xA;&lt;h3&gt;Building in PowerShell&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Import-Module .\tools\OpenConsole.psm1&#xA;Set-MsBuildDevEnvironment&#xA;Invoke-OpenConsoleBuild&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building in Cmd&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;.\tools\razzle.cmd&#xA;bcz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running &amp;amp; Debugging&lt;/h2&gt; &#xA;&lt;p&gt;To debug the Windows Terminal in VS, right click on &lt;code&gt;CascadiaPackage&lt;/code&gt; (in the Solution Explorer) and go to properties. In the Debug menu, change &#34;Application process&#34; and &#34;Background task process&#34; to &#34;Native Only&#34;.&lt;/p&gt; &#xA;&lt;p&gt;You should then be able to build &amp;amp; debug the Terminal project by hitting &lt;kbd&gt;F5&lt;/kbd&gt;. Make sure to select either the &#34;x64&#34; or the &#34;x86&#34; platform - the Terminal doesn&#39;t build for &#34;Any Cpu&#34; (because the Terminal is a C++ application, not a C# one).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;👉 You will &lt;em&gt;not&lt;/em&gt; be able to launch the Terminal directly by running the WindowsTerminal.exe. For more details on why, see &lt;a href=&#34;https://github.com/microsoft/terminal/issues/926&#34;&gt;#926&lt;/a&gt;, &lt;a href=&#34;https://github.com/microsoft/terminal/issues/4043&#34;&gt;#4043&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Coding Guidance&lt;/h3&gt; &#xA;&lt;p&gt;Please review these brief docs below about our coding practices.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;👉 If you find something missing from these docs, feel free to contribute to any of our documentation files anywhere in the repository (or write some new ones!)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This is a work in progress as we learn what we&#39;ll need to provide people in order to be effective contributors to our project.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/terminal/main/doc/STYLE.md&#34;&gt;Coding Style&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/terminal/main/doc/ORGANIZATION.md&#34;&gt;Code Organization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/terminal/main/doc/EXCEPTIONS.md&#34;&gt;Exceptions in our legacy codebase&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/terminal/main/doc/WIL.md&#34;&gt;Helpful smart pointers and macros for interfacing with Windows in WIL&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</summary>
  </entry>
</feed>