<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-01T01:49:25Z</updated>
  <subtitle>Monthly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>PCSX2/pcsx2</title>
    <updated>2024-08-01T01:49:25Z</updated>
    <id>tag:github.com,2024-08-01:/PCSX2/pcsx2</id>
    <link href="https://github.com/PCSX2/pcsx2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PCSX2 - The Playstation 2 Emulator&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PCSX2&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/PCSX2/pcsx2/windows_build_matrix.yml?label=%F0%9F%96%A5%EF%B8%8F%20Windows%20Builds&#34; alt=&#34;Windows Build Status&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/PCSX2/pcsx2/linux_build_matrix.yml?label=%F0%9F%90%A7%20Linux%20Builds&#34; alt=&#34;Linux Build Status&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/PCSX2/pcsx2/macos_build_matrix.yml?label=%F0%9F%8D%8E%20MacOS%20Builds&#34; alt=&#34;MacOS Build Status&#34;&gt; &lt;a href=&#34;https://app.codacy.com/gh/PCSX2/pcsx2/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=PCSX2/pcsx2&amp;amp;utm_campaign=Badge_Grade&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Grade/1f7c0d75fec74d6daa6adb084e5b4f71&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.com/invite/TCz3t9k&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/309643527816609793?color=%235CA8FA&amp;amp;label=PCSX2%20Discord&amp;amp;logo=discord&amp;amp;logoColor=white&#34; alt=&#34;Discord Server&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;PCSX2 is a free and open-source PlayStation 2 (PS2) emulator. Its purpose is to emulate the PS2&#39;s hardware, using a combination of MIPS CPU &lt;a href=&#34;https://en.wikipedia.org/wiki/Interpreter_(computing)&#34;&gt;Interpreters&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Dynamic_recompilation&#34;&gt;Recompilers&lt;/a&gt; and a &lt;a href=&#34;https://en.wikipedia.org/wiki/Virtual_machine&#34;&gt;Virtual Machine&lt;/a&gt; which manages hardware states and PS2 system memory. This allows you to play PS2 games on your PC, with many additional features and benefits.&lt;/p&gt; &#xA;&lt;h2&gt;Project Details&lt;/h2&gt; &#xA;&lt;p&gt;PCSX2 has been in development for more than 20 years. Past versions could only run a few public domain game demos, but newer versions can run most games at full speed, including popular titles such as Final Fantasy X and Devil May Cry 3. Visit the &lt;a href=&#34;https://pcsx2.net/compat/&#34;&gt;PCSX2 compatibility list&lt;/a&gt; to check the latest compatibility status of games (with more than 2500 titles tested).&lt;/p&gt; &#xA;&lt;p&gt;Installers and binaries for both stable and nightly builds are available from &lt;a href=&#34;https://pcsx2.net/downloads/&#34;&gt;our website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;System Requirements&lt;/h2&gt; &#xA;&lt;p&gt;PCSX2 supports Windows, Linux, and Mac platforms. Our &lt;a href=&#34;https://pcsx2.net/docs/setup/requirements&#34;&gt;setup documentation page&lt;/a&gt; contains additional details on software and hardware requirements.&lt;/p&gt; &#xA;&lt;p&gt;Please note that a BIOS dump from a legitimately-owned PS2 console is required to use the emulator. For more information, visit &lt;a href=&#34;https://pcsx2.net/docs/setup/bios/&#34;&gt;this page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing / Building&lt;/h2&gt; &#xA;&lt;p&gt;PCSX2 supports translation into other languages using &lt;a href=&#34;https://crowdin.com/project/pcsx2-emulator&#34;&gt;Crowdin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/PCSX2/pcsx2/raw/master/.github/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt; or visit the &lt;a href=&#34;https://github.com/PCSX2/pcsx2/wiki&#34;&gt;GitHub Wiki&lt;/a&gt; for more info on how to contribute.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>doitsujin/dxvk</title>
    <updated>2024-08-01T01:49:25Z</updated>
    <id>tag:github.com,2024-08-01:/doitsujin/dxvk</id>
    <link href="https://github.com/doitsujin/dxvk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Vulkan-based implementation of D3D8, 9, 10 and 11 for Linux / Wine&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DXVK&lt;/h1&gt; &#xA;&lt;p&gt;A Vulkan-based translation layer for Direct3D 8/9/10/11 which allows running 3D applications on Linux using Wine.&lt;/p&gt; &#xA;&lt;p&gt;For the current status of the project, please refer to the &lt;a href=&#34;https://github.com/doitsujin/dxvk/wiki&#34;&gt;project wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The most recent development builds can be found &lt;a href=&#34;https://github.com/doitsujin/dxvk/actions/workflows/artifacts.yml?query=branch%3Amaster&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Release builds can be found &lt;a href=&#34;https://github.com/doitsujin/dxvk/releases&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;p&gt;In order to install a DXVK package obtained from the &lt;a href=&#34;https://github.com/doitsujin/dxvk/releases&#34;&gt;release&lt;/a&gt; page into a given wine prefix, copy or symlink the DLLs into the following directories as follows, then open &lt;code&gt;winecfg&lt;/code&gt; and manually add DLL overrides for &lt;code&gt;d3d8&lt;/code&gt;, &lt;code&gt;d3d9&lt;/code&gt;, &lt;code&gt;d3d10core&lt;/code&gt;, &lt;code&gt;d3d11&lt;/code&gt; and &lt;code&gt;dxgi&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In a default Wine prefix that would be as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export WINEPREFIX=/path/to/wineprefix&#xA;cp x64/*.dll $WINEPREFIX/drive_c/windows/system32&#xA;cp x32/*.dll $WINEPREFIX/drive_c/windows/syswow64&#xA;winecfg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a pure 32-bit Wine prefix (non default) the 32-bit DLLs instead go to the &lt;code&gt;system32&lt;/code&gt; directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export WINEPREFIX=/path/to/wineprefix&#xA;cp x32/*.dll $WINEPREFIX/drive_c/windows/system32&#xA;winecfg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Verify that your application uses DXVK instead of wined3d by enabling the HUD (see notes below).&lt;/p&gt; &#xA;&lt;p&gt;In order to remove DXVK from a prefix, remove the DLLs and DLL overrides, and run &lt;code&gt;wineboot -u&lt;/code&gt; to restore the original DLL files.&lt;/p&gt; &#xA;&lt;p&gt;Tools such as Steam Play, Lutris, Bottles, Heroic Launcher, etc will automatically handle setup of dxvk on their own when enabled.&lt;/p&gt; &#xA;&lt;h4&gt;DLL dependencies&lt;/h4&gt; &#xA;&lt;p&gt;Listed below are the DLL requirements for using DXVK with any single API.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;d3d8: &lt;code&gt;d3d8.dll&lt;/code&gt; and &lt;code&gt;d3d9.dll&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;d3d9: &lt;code&gt;d3d9.dll&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;d3d10: &lt;code&gt;d3d10core.dll&lt;/code&gt;, &lt;code&gt;d3d11.dll&lt;/code&gt; and &lt;code&gt;dxgi.dll&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;d3d11: &lt;code&gt;d3d11.dll&lt;/code&gt; and &lt;code&gt;dxgi.dll&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Notes on Vulkan drivers&lt;/h3&gt; &#xA;&lt;p&gt;Before reporting an issue, please check the &lt;a href=&#34;https://github.com/doitsujin/dxvk/wiki/Driver-support&#34;&gt;Wiki&lt;/a&gt; page on the current driver status and make sure you run a recent enough driver version for your hardware.&lt;/p&gt; &#xA;&lt;h3&gt;Online multi-player games&lt;/h3&gt; &#xA;&lt;p&gt;Manipulation of Direct3D libraries in multi-player games may be considered cheating and can get your account &lt;strong&gt;banned&lt;/strong&gt;. This may also apply to single-player games with an embedded or dedicated multiplayer portion. &lt;strong&gt;Use at your own risk.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;HUD&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;DXVK_HUD&lt;/code&gt; environment variable controls a HUD which can display the framerate and some stat counters. It accepts a comma-separated list of the following options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;devinfo&lt;/code&gt;: Displays the name of the GPU and the driver version.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fps&lt;/code&gt;: Shows the current frame rate.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;frametimes&lt;/code&gt;: Shows a frame time graph.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;submissions&lt;/code&gt;: Shows the number of command buffers submitted per frame.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;drawcalls&lt;/code&gt;: Shows the number of draw calls and render passes per frame.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pipelines&lt;/code&gt;: Shows the total number of graphics and compute pipelines.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;descriptors&lt;/code&gt;: Shows the number of descriptor pools and descriptor sets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;memory&lt;/code&gt;: Shows the amount of device memory allocated and used.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gpuload&lt;/code&gt;: Shows estimated GPU load. May be inaccurate.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;version&lt;/code&gt;: Shows DXVK version.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;api&lt;/code&gt;: Shows the D3D feature level used by the application.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cs&lt;/code&gt;: Shows worker thread statistics.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;compiler&lt;/code&gt;: Shows shader compiler activity&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;samplers&lt;/code&gt;: Shows the current number of sampler pairs used &lt;em&gt;[D3D9 Only]&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;scale=x&lt;/code&gt;: Scales the HUD by a factor of &lt;code&gt;x&lt;/code&gt; (e.g. &lt;code&gt;1.5&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;opacity=y&lt;/code&gt;: Adjusts the HUD opacity by a factor of &lt;code&gt;y&lt;/code&gt; (e.g. &lt;code&gt;0.5&lt;/code&gt;, &lt;code&gt;1.0&lt;/code&gt; being fully opaque).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additionally, &lt;code&gt;DXVK_HUD=1&lt;/code&gt; has the same effect as &lt;code&gt;DXVK_HUD=devinfo,fps&lt;/code&gt;, and &lt;code&gt;DXVK_HUD=full&lt;/code&gt; enables all available HUD elements.&lt;/p&gt; &#xA;&lt;h3&gt;Logs&lt;/h3&gt; &#xA;&lt;p&gt;When used with Wine, DXVK will print log messages to &lt;code&gt;stderr&lt;/code&gt;. Additionally, standalone log files can optionally be generated by setting the &lt;code&gt;DXVK_LOG_PATH&lt;/code&gt; variable, where log files in the given directory will be called &lt;code&gt;app_d3d11.log&lt;/code&gt;, &lt;code&gt;app_dxgi.log&lt;/code&gt; etc., where &lt;code&gt;app&lt;/code&gt; is the name of the game executable.&lt;/p&gt; &#xA;&lt;p&gt;On Windows, log files will be created in the game&#39;s working directory by default, which is usually next to the game executable.&lt;/p&gt; &#xA;&lt;h3&gt;Frame rate limit&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;DXVK_FRAME_RATE&lt;/code&gt; environment variable can be used to limit the frame rate. A value of &lt;code&gt;0&lt;/code&gt; uncaps the frame rate, while any positive value will limit rendering to the given number of frames per second. Alternatively, the configuration file can be used.&lt;/p&gt; &#xA;&lt;h3&gt;Device filter&lt;/h3&gt; &#xA;&lt;p&gt;Some applications do not provide a method to select a different GPU. In that case, DXVK can be forced to use a given device:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;DXVK_FILTER_DEVICE_NAME=&#34;Device Name&#34;&lt;/code&gt; Selects devices with a matching Vulkan device name, which can be retrieved with tools such as &lt;code&gt;vulkaninfo&lt;/code&gt;. Matches on substrings, so &#34;VEGA&#34; or &#34;AMD RADV VEGA10&#34; is supported if the full device name is &#34;AMD RADV VEGA10 (LLVM 9.0.0)&#34;, for example. If the substring matches more than one device, the first device matched will be used.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If the device filter is configured incorrectly, it may filter out all devices and applications will be unable to create a D3D device.&lt;/p&gt; &#xA;&lt;h3&gt;Debugging&lt;/h3&gt; &#xA;&lt;p&gt;The following environment variables can be used for &lt;strong&gt;debugging&lt;/strong&gt; purposes.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;VK_INSTANCE_LAYERS=VK_LAYER_KHRONOS_validation&lt;/code&gt; Enables Vulkan debug layers. Highly recommended for troubleshooting rendering issues and driver crashes. Requires the Vulkan SDK to be installed on the host system.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DXVK_LOG_LEVEL=none|error|warn|info|debug&lt;/code&gt; Controls message logging.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DXVK_LOG_PATH=/some/directory&lt;/code&gt; Changes path where log files are stored. Set to &lt;code&gt;none&lt;/code&gt; to disable log file creation entirely, without disabling logging.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DXVK_DEBUG=markers|validation&lt;/code&gt; Enables use of the &lt;code&gt;VK_EXT_debug_utils&lt;/code&gt; extension for translating performance event markers, or to enable Vulkan validation, respecticely.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DXVK_CONFIG_FILE=/xxx/dxvk.conf&lt;/code&gt; Sets path to the configuration file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DXVK_CONFIG=&#34;dxgi.hideAmdGpu = True; dxgi.syncInterval = 0&#34;&lt;/code&gt; Can be used to set config variables through the environment instead of a configuration file using the same syntax. &lt;code&gt;;&lt;/code&gt; is used as a seperator.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Graphics Pipeline Library&lt;/h3&gt; &#xA;&lt;p&gt;On drivers which support &lt;code&gt;VK_EXT_graphics_pipeline_library&lt;/code&gt; Vulkan shaders will be compiled at the time the game loads its D3D shaders, rather than at draw time. This reduces or eliminates shader compile stutter in many games when compared to the previous system.&lt;/p&gt; &#xA;&lt;p&gt;In games that load their shaders during loading screens or in the menu, this can lead to prolonged periods of very high CPU utilization, especially on weaker CPUs. For affected games it is recommended to wait for shader compilation to finish before starting the game to avoid stutter and low performance. Shader compiler activity can be monitored with &lt;code&gt;DXVK_HUD=compiler&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This feature largely replaces the state cache.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Games which only load their D3D shaders at draw time (e.g. most Unreal Engine games) will still exhibit some stutter, although it should still be less severe than without this feature.&lt;/p&gt; &#xA;&lt;h3&gt;State cache&lt;/h3&gt; &#xA;&lt;p&gt;DXVK caches pipeline state by default, so that shaders can be recompiled ahead of time on subsequent runs of an application, even if the driver&#39;s own shader cache got invalidated in the meantime. This cache is enabled by default, and generally reduces stuttering.&lt;/p&gt; &#xA;&lt;p&gt;The following environment variables can be used to control the cache:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;DXVK_STATE_CACHE&lt;/code&gt;: Controls the state cache. The following values are supported: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;disable&lt;/code&gt;: Disables the cache entirely.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;reset&lt;/code&gt;: Clears the cache file.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DXVK_STATE_CACHE_PATH=/some/directory&lt;/code&gt; Specifies a directory where to put the cache files. Defaults to the current working directory of the application.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This feature is mostly only relevant on systems without support for &lt;code&gt;VK_EXT_graphics_pipeline_library&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build instructions&lt;/h2&gt; &#xA;&lt;p&gt;In order to pull in all submodules that are needed for building, clone the repository using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recursive https://github.com/doitsujin/dxvk.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Requirements:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.winehq.org/&#34;&gt;wine 7.1&lt;/a&gt; or newer&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mesonbuild.com/&#34;&gt;Meson&lt;/a&gt; build system (at least version 0.49)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mingw-w64.org&#34;&gt;Mingw-w64&lt;/a&gt; compiler and headers (at least version 10.0)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KhronosGroup/glslang&#34;&gt;glslang&lt;/a&gt; compiler&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building DLLs&lt;/h3&gt; &#xA;&lt;h4&gt;The simple way&lt;/h4&gt; &#xA;&lt;p&gt;Inside the DXVK directory, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./package-release.sh master /your/target/directory --no-package&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create a folder &lt;code&gt;dxvk-master&lt;/code&gt; in &lt;code&gt;/your/target/directory&lt;/code&gt;, which contains both 32-bit and 64-bit versions of DXVK, which can be set up in the same way as the release versions as noted above.&lt;/p&gt; &#xA;&lt;p&gt;In order to preserve the build directories for development, pass &lt;code&gt;--dev-build&lt;/code&gt; to the script. This option implies &lt;code&gt;--no-package&lt;/code&gt;. After making changes to the source code, you can then do the following to rebuild DXVK:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# change to build.32 for 32-bit&#xA;cd /your/target/directory/build.64&#xA;ninja install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Compiling manually&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;# 64-bit build. For 32-bit builds, replace&#xA;# build-win64.txt with build-win32.txt&#xA;meson setup --cross-file build-win64.txt --buildtype release --prefix /your/dxvk/directory build.w64&#xA;cd build.w64&#xA;ninja install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The D3D8, D3D9, D3D10, D3D11 and DXGI DLLs will be located in &lt;code&gt;/your/dxvk/directory/bin&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Build troubleshooting&lt;/h3&gt; &#xA;&lt;p&gt;DXVK requires threading support from your mingw-w64 build environment. If you are missing this, you may see &#34;error: ‘std::cv_status’ has not been declared&#34; or similar threading related errors.&lt;/p&gt; &#xA;&lt;p&gt;On Debian and Ubuntu, this can be resolved by using the posix alternate, which supports threading. For example, choose the posix alternate from these commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;update-alternatives --config x86_64-w64-mingw32-gcc&#xA;update-alternatives --config x86_64-w64-mingw32-g++&#xA;update-alternatives --config i686-w64-mingw32-gcc&#xA;update-alternatives --config i686-w64-mingw32-g++&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For non debian based distros, make sure that your mingw-w64-gcc cross compiler does have &lt;code&gt;--enable-threads=posix&lt;/code&gt; enabled during configure. If your distro does ship its mingw-w64-gcc binary with &lt;code&gt;--enable-threads=win32&lt;/code&gt; you might have to recompile locally or open a bug at your distro&#39;s bugtracker to ask for it.&lt;/p&gt; &#xA;&lt;h1&gt;DXVK Native&lt;/h1&gt; &#xA;&lt;p&gt;DXVK Native is a version of DXVK which allows it to be used natively without Wine.&lt;/p&gt; &#xA;&lt;p&gt;This is primarily useful for game and application ports to either avoid having to write another rendering backend, or to help with port bringup during development.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/doitsujin/dxvk/releases&#34;&gt;Release builds&lt;/a&gt; are built using the Steam Runtime.&lt;/p&gt; &#xA;&lt;h3&gt;How does it work?&lt;/h3&gt; &#xA;&lt;p&gt;DXVK Native replaces certain Windows-isms with a platform and framework-agnostic replacement, for example, &lt;code&gt;HWND&lt;/code&gt;s can become &lt;code&gt;SDL_Window*&lt;/code&gt;s, etc. All it takes to do that is to add another WSI backend.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; DXVK Native requires a backend to be explicitly set via the &lt;code&gt;DXVK_WSI_DRIVER&lt;/code&gt; environment variable. The current built-in options are &lt;code&gt;SDL2&lt;/code&gt; and &lt;code&gt;GLFW&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;DXVK Native comes with a slim set of Windows header definitions required for D3D9/11 and the MinGW headers for D3D9/11. In most cases, it will end up being plug and play with your renderer, but there may be certain teething issues such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;__uuidof(type)&lt;/code&gt; is supported, but &lt;code&gt;__uuidof(variable)&lt;/code&gt; is not supported. Use &lt;code&gt;__uuidof_var(variable)&lt;/code&gt; instead.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>oceanbase/oceanbase</title>
    <updated>2024-08-01T01:49:25Z</updated>
    <id>tag:github.com,2024-08-01:/oceanbase/oceanbase</id>
    <link href="https://github.com/oceanbase/oceanbase" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OceanBase is an enterprise distributed relational database with high availability, high performance, horizontal scalability, and compatibility with SQL standards.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/oceanbase/oceanbase&#34;&gt; &lt;img alt=&#34;OceanBase Logo&#34; src=&#34;https://raw.githubusercontent.com/oceanbase/oceanbase/develop/images/logo.svg?sanitize=true&#34; width=&#34;50%&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://en.oceanbase.com/docs/oceanbase-database&#34;&gt; &lt;img alt=&#34;English doc&#34; src=&#34;https://img.shields.io/badge/docs-English-blue&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.oceanbase.com/docs/oceanbase-database-cn&#34;&gt; &lt;img alt=&#34;Chinese doc&#34; src=&#34;https://img.shields.io/badge/%E6%96%87%E6%A1%A3-%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87-blue&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/oceanbase/oceanbase/commits/master&#34;&gt; &lt;img alt=&#34;last commit&#34; src=&#34;https://img.shields.io/github/last-commit/oceanbase/oceanbase/master&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/oceanbase/oceanbase&#34;&gt; &lt;img alt=&#34;stars&#34; src=&#34;https://img.shields.io/badge/dynamic/json?color=blue&amp;amp;label=stars&amp;amp;query=stargazers_count&amp;amp;url=https%3A%2F%2Fapi.github.com%2Frepos%2Foceanbase%2Foceanbase&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/oceanbase/oceanbase/actions/workflows/compile.yml&#34;&gt; &lt;img alt=&#34;building status&#34; src=&#34;https://img.shields.io/github/actions/workflow/status/oceanbase/oceanbase/compile.yml?branch=master&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/oceanbase/oceanbase/raw/master/LICENSE&#34;&gt; &lt;img alt=&#34;license&#34; src=&#34;https://img.shields.io/badge/license-MulanPubL--2.0-blue&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://join.slack.com/t/oceanbase/shared_invite/zt-1e25oz3ol-lJ6YNqPHaKwY_mhhioyEuw&#34;&gt; &lt;img alt=&#34;Join Slack&#34; src=&#34;https://img.shields.io/badge/slack-Join%20Oceanbase-brightgreen?logo=slack&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://stackoverflow.com/questions/tagged/oceanbase&#34;&gt; &lt;img alt=&#34;Stack Overflow&#34; src=&#34;https://img.shields.io/badge/Stack-Stack%20Overflow-brightgreen?logo=stackoverflow&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/oceanbase/oceanbase/develop/README_CN.md&#34;&gt;中文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;OceanBase Database&lt;/strong&gt; is a distributed relational database. It is developed entirely by Ant Group. The OceanBase Database is built on a common server cluster. Based on the &lt;a href=&#34;https://lamport.azurewebsites.net/pubs/lamport-paxos.pdf&#34;&gt;Paxos&lt;/a&gt;&amp;nbsp;protocol and its distributed structure, the OceanBase Database provides high availability and linear scalability. The OceanBase Database is not dependent on specific hardware architectures.&lt;/p&gt; &#xA;&lt;h1&gt;Key features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Transparent Scalability&lt;/strong&gt;: 1,500 nodes, PB data and a trillion rows of records in one cluster.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ultra-fast Performance&lt;/strong&gt;: TPC-C 707 million tmpC and TPC-H 15.26 million QphH @30000GB.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cost Efficiency&lt;/strong&gt;: saves 70%–90% of storage costs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-time Analytics&lt;/strong&gt;: supports HTAP without additional cost.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Continuous Availability&lt;/strong&gt;: RPO = 0(zero data loss) and RTO &amp;lt; 8s(recovery time)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MySQL Compatible&lt;/strong&gt;: easily migrated from MySQL database.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See also&amp;nbsp;&lt;a href=&#34;https://en.oceanbase.com/product/opensource&#34;&gt;key features&lt;/a&gt;&amp;nbsp;for more details.&lt;/p&gt; &#xA;&lt;h1&gt;Quick start&lt;/h1&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://en.oceanbase.com/docs/community-observer-en-10000000000829647&#34;&gt;Quick experience&lt;/a&gt; or &lt;a href=&#34;https://open.oceanbase.com/quickStart&#34;&gt;Quick Start (Simplified Chinese)&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;🔥 Start with all-in-one&lt;/h2&gt; &#xA;&lt;p&gt;You can quickly deploy a stand-alone OceanBase Database to experience with the following commands:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Linux Only&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# download and install all-in-one package (internet connection is required)&#xA;bash -c &#34;$(curl -s https://obbusiness-private.oss-cn-shanghai.aliyuncs.com/download-center/opensource/oceanbase-all-in-one/installer.sh)&#34;&#xA;source ~/.oceanbase-all-in-one/bin/env.sh&#xA;&#xA;# quickly deploy OceanBase database&#xA;obd demo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🐳 Start with docker&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: We provide images on &lt;a href=&#34;https://hub.docker.com/r/oceanbase/oceanbase-ce/tags&#34;&gt;dockerhub&lt;/a&gt;, &lt;a href=&#34;https://quay.io/repository/oceanbase/oceanbase-ce?tab=tags&#34;&gt;quay.io&lt;/a&gt; and &lt;a href=&#34;https://github.com/oceanbase/docker-images/pkgs/container/oceanbase-ce&#34;&gt;ghcr.io&lt;/a&gt;. If you have problems pulling images from dockerhub, please try the other two registries.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Start an OceanBase Database instance:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Deploy a mini standalone instance.&#xA;docker run -p 2881:2881 --name oceanbase-ce -e MODE=mini -d oceanbase/oceanbase-ce&#xA;&#xA;# Deploy a mini standalone instance using image from quay.io.&#xA;# docker run -p 2881:2881 --name oceanbase-ce -e MODE=mini -d quay.io/oceanbase/oceanbase-ce&#xA;&#xA;# Deploy a mini standalone instance using image from ghcr.io.&#xA;# docker run -p 2881:2881 --name oceanbase-ce -e MODE=mini -d ghcr.io/oceanbase/oceanbase-ce&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Connect to the OceanBase Database instance:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker exec -it oceanbase-ce obclient -h127.0.0.1 -P2881 -uroot # Connect to the root user of the sys tenant.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://github.com/oceanbase/docker-images/tree/main/oceanbase-ce&#34;&gt;Docker Readme&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;☸️ Start with Kubernetes&lt;/h2&gt; &#xA;&lt;p&gt;You can deploy and manage OceanBase Database instance in kubernetes cluster with &lt;a href=&#34;https://github.com/oceanbase/ob-operator&#34;&gt;ob-operator&lt;/a&gt; quickly. Refer to the document &lt;a href=&#34;https://oceanbase.github.io/ob-operator&#34;&gt;Quick Start for ob-operator&lt;/a&gt; to see details.&lt;/p&gt; &#xA;&lt;h2&gt;👨‍💻 Start developing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://oceanbase.github.io/oceanbase/build-and-run&#34;&gt;OceanBase Developer Document&lt;/a&gt; to learn how to compile and deploy a manually compiled observer.&lt;/p&gt; &#xA;&lt;h1&gt;Roadmap&lt;/h1&gt; &#xA;&lt;p&gt;For future plans, see &lt;a href=&#34;https://github.com/oceanbase/oceanbase/issues/1839&#34;&gt;Product Iteration Progress&lt;/a&gt;. See also &lt;a href=&#34;https://github.com/orgs/oceanbase/projects/4&#34;&gt;OceanBase Roadmap&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h1&gt;Case study&lt;/h1&gt; &#xA;&lt;p&gt;OceanBase has been serving more than 1000 customers and upgraded their database from different industries, including Financial Services, Telecom, Retail, Internet, and more.&lt;/p&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://en.oceanbase.com/customer/home&#34;&gt;success stories&lt;/a&gt; and &lt;a href=&#34;https://github.com/oceanbase/oceanbase/issues/1301&#34;&gt;Who is using OceanBase&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h1&gt;System architecture&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://en.oceanbase.com/docs/community-observer-en-10000000000829641&#34;&gt;Introduction to system architecture&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Contributions are highly appreciated. Read the &lt;a href=&#34;https://oceanbase.github.io/oceanbase&#34;&gt;development guide&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;OceanBase Database is licensed under the Mulan Public License, Version 2. See the &lt;a href=&#34;https://raw.githubusercontent.com/oceanbase/oceanbase/develop/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for more info.&lt;/p&gt; &#xA;&lt;h1&gt;Community&lt;/h1&gt; &#xA;&lt;p&gt;Join the OceanBase community via:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/oceanbase/shared_invite/zt-1e25oz3ol-lJ6YNqPHaKwY_mhhioyEuw&#34;&gt;Slack Workspace&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/oceanbase&#34;&gt;Ask on Stack Overflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ask.oceanbase.com/&#34;&gt;Chinese User Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;DingTalk Group: 33254054 (&lt;a href=&#34;https://raw.githubusercontent.com/oceanbase/oceanbase/develop/images/dingtalk.svg&#34;&gt;QR code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;WeChat Group (Add the assistant with WeChat ID: OBCE666)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>