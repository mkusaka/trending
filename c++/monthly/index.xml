<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-01T02:09:48Z</updated>
  <subtitle>Monthly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bambulab/BambuStudio</title>
    <updated>2023-02-01T02:09:48Z</updated>
    <id>tag:github.com,2023-02-01:/bambulab/BambuStudio</id>
    <link href="https://github.com/bambulab/BambuStudio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PC Software for BambuLab&#39;s 3D printers&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/106916061/179006347-497d24c0-9bd6-45b7-8c49-d5cc8ecfe5d7.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;BambuStudio&lt;/h1&gt; &#xA;&lt;p&gt;Bambu Studio is a cutting-edge, feature-rich slicing software.&lt;br&gt; It contains project-based workflows, systematically optimized slicing algorithms, and an easy-to-use graphic interface, bringing users an incredibly smooth printing experience.&lt;/p&gt; &#xA;&lt;p&gt;Prebuilt Windows, macOS 64-bit releases are available through the &lt;a href=&#34;https://github.com/bambulab/BambuStudio/releases/&#34;&gt;github releases page&lt;/a&gt;.&lt;br&gt; Linux version currently is not supported.&lt;/p&gt; &#xA;&lt;p&gt;Bambu Studio is based on &lt;a href=&#34;https://github.com/prusa3d/PrusaSlicer&#34;&gt;PrusaSlicer&lt;/a&gt; by Prusa Research, which is from &lt;a href=&#34;https://github.com/Slic3r/Slic3r&#34;&gt;Slic3r&lt;/a&gt; by Alessandro Ranellucci and the RepRap community.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/bambulab/BambuStudio/wiki&#34;&gt;wiki&lt;/a&gt; and the &lt;a href=&#34;https://github.com/bambulab/BambuStudio/tree/master/doc&#34;&gt;documentation directory&lt;/a&gt; for more informations.&lt;/p&gt; &#xA;&lt;h1&gt;What are Bambu Studio&#39;s main features?&lt;/h1&gt; &#xA;&lt;p&gt;Key features are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Basic slicing features &amp;amp; GCode viewer&lt;/li&gt; &#xA; &lt;li&gt;Multiple plates management&lt;/li&gt; &#xA; &lt;li&gt;Remote control &amp;amp; monitoring&lt;/li&gt; &#xA; &lt;li&gt;Auto-arrange objects&lt;/li&gt; &#xA; &lt;li&gt;Auto-orient objects&lt;/li&gt; &#xA; &lt;li&gt;Hybrid/Tree/Normal support types, Customized support&lt;/li&gt; &#xA; &lt;li&gt;multi-material printing and rich painting tools&lt;/li&gt; &#xA; &lt;li&gt;multi-platform (Win/Mac/Linux) support&lt;/li&gt; &#xA; &lt;li&gt;Global/Object/Part level slicing parameters&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Other major features are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Advanced cooling logic controlling fan speed and dynamic print speed&lt;/li&gt; &#xA; &lt;li&gt;Auto brim according to mechanical analysis&lt;/li&gt; &#xA; &lt;li&gt;Support arc path(G2/G3)&lt;/li&gt; &#xA; &lt;li&gt;Support STEP format&lt;/li&gt; &#xA; &lt;li&gt;Assembly &amp;amp; explosion view&lt;/li&gt; &#xA; &lt;li&gt;Flushing transition-filament into infill/object during filament change&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;How to compile&lt;/h1&gt; &#xA;&lt;p&gt;Following platforms are currently supported to compile:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows 64-bit, &lt;a href=&#34;https://github.com/bambulab/BambuStudio/wiki/Windows-Compile-Guide&#34;&gt;Compile Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mac 64-bit, &lt;a href=&#34;https://github.com/bambulab/BambuStudio/wiki/Mac-Compile-Guide&#34;&gt;Compile Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Report issue&lt;/h1&gt; &#xA;&lt;p&gt;You can add an issue to the &lt;a href=&#34;https://github.com/bambulab/BambuStudio/issues&#34;&gt;github tracker&lt;/a&gt; if &lt;strong&gt;it isn&#39;t already present.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Bambu Studio is licensed under the GNU Affero General Public License, version 3. Bambu Studio is based on PrusaSlicer by PrusaResearch.&lt;/p&gt; &#xA;&lt;p&gt;PrusaSlicer is licensed under the GNU Affero General Public License, version 3. PrusaSlicer is owned by Prusa Research. PrusaSlicer is originally based on Slic3r by Alessandro Ranellucci.&lt;/p&gt; &#xA;&lt;p&gt;Slic3r is licensed under the GNU Affero General Public License, version 3. Slic3r was created by Alessandro Ranellucci with the help of many other contributors.&lt;/p&gt; &#xA;&lt;p&gt;The GNU Affero General Public License, version 3 ensures that if you use any part of this software in any way (even behind a web server), your software must be released under the same license.&lt;/p&gt; &#xA;&lt;p&gt;The bambu networking plugin is based on non-free libraries. It is optional to the Bambu Studio and provides extended functionalities for users.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mriscoc/Ender3V2S1</title>
    <updated>2023-02-01T02:09:48Z</updated>
    <id>tag:github.com,2023-02-01:/mriscoc/Ender3V2S1</id>
    <link href="https://github.com/mriscoc/Ender3V2S1" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is optimized firmware for Ender3 V2/S1 3D printers.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Professional Firmware for the Creality Ender 3 V2/S1 Printers&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/mriscoc/Ender3V2S1.svg?sanitize=true&#34; alt=&#34;GitHub contributors&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release-date/mriscoc/Ender3V2S1.svg?sanitize=true&#34; alt=&#34;GitHub Release Date&#34;&gt; &lt;a href=&#34;https://github.com/mriscoc/Ender3V2S1/actions&#34;&gt;&lt;img src=&#34;https://github.com/mriscoc/Ender3V2S1/workflows/CI/badge.svg?branch=Ender3V2S1-Released&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Universal RET6/RCT6 Edition&lt;/h2&gt; &#xA;&lt;p&gt;The Precompiled binary files of this firmware can work with STM32FX RET6 or RCT6 and can be downloader from: &lt;a href=&#34;https://github.com/mriscoc/Ender3V2S1/releases/latest&#34;&gt;Latest Release&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img aling=&#34;left&#34; height=&#34;240&#34; src=&#34;https://raw.githubusercontent.com/mriscoc/Ender3V2S1/Ender3V2S1-Released/buildroot/share/pixmaps/Ender-3V2.jpg&#34;&gt; &lt;img height=&#34;300&#34; src=&#34;https://raw.githubusercontent.com/mriscoc/Ender3V2S1/Ender3V2S1-Released/buildroot/share/pixmaps/Ender-3S1.jpg&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for your support, I receive donations through &lt;a href=&#34;https://www.patreon.com/mriscoc&#34;&gt;Patreon&lt;/a&gt; and &lt;a href=&#34;https://www.paypal.com/paypalme/mriscoc&#34;&gt;Paypal&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.com/donate?business=85SPAAR6UZEE8&amp;amp;currency_code=USD&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Wiki&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mriscoc/Ender3V2S1/wiki&#34;&gt;About of this firmware and features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mriscoc/Ender3V2S1/wiki/How-to-install-the-firmware&#34;&gt;How to install the firmware&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mriscoc/Ender3V2S1/wiki/Calibration-Guides&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mriscoc/Ender3V2S1/wiki/Configuration-files&#34;&gt;Saving preferences in Configuration Files&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mriscoc/Ender3V2S1/wiki/3D-BLTouch&#34;&gt;Installing a 3D/BLTouch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mriscoc/Ender3V2S1/wiki/Color-Themes&#34;&gt;Color themes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mriscoc/Ender3V2S1/wiki/Octoprint&#34;&gt;How to use with Octoprint&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/ender3v2s1firmware&#34;&gt;Telegram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/Ender3v2Firmware&#34;&gt;Reddit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/groups/ender3v2firmware&#34;&gt;Ender 3V2 Facebook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/groups/ender3s1printer&#34;&gt;Ender 3S1 Facebook&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mriscoc/Ender3V2S1/Ender3V2S1-Released/screenshots/main.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This is a Marlin based firmware and is maintained by &lt;a href=&#34;https://github.com/mriscoc&#34;&gt;@mriscoc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This work would not be possible without the supporters, helpers and betatesters at the &lt;strong&gt;Telegram&lt;/strong&gt; group.&lt;/p&gt; &#xA;&lt;p&gt;Marlin firmware is an Open Source project hosted on Github, &lt;a href=&#34;https://marlinfw.org/&#34;&gt;Marlin&lt;/a&gt; is owned and maintained by the maker community.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;THIS FIRMWARE AND ALL OTHER FILES IN THE DOWNLOAD ARE PROVIDED FREE OF CHARGE WITH NO WARRANTY OR GUARANTEE. SUPPORT IS NOT INCLUDED JUST BECAUSE YOU DOWNLOADED THE FIRMWARE. WE ARE NOT LIABLE FOR ANY DAMAGE TO YOUR PRINTER, PERSON, OR ANY OTHER PROPERTY DUE TO USE OF THIS FIRMWARE. IF YOU DO NOT AGREE TO THESE TERMS THEN DO NOT USE THE FIRMWARE.&lt;/p&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;For the license, check the header of each file, if the license is not specified there, the project license will be used. Marlin is licensed under the GPL.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>electron/electron</title>
    <updated>2023-02-01T02:09:48Z</updated>
    <id>tag:github.com,2023-02-01:/electron/electron</id>
    <link href="https://github.com/electron/electron" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Build cross-platform desktop apps with JavaScript, HTML, and CSS&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://electronjs.org&#34;&gt;&lt;img src=&#34;https://electronjs.org/images/electron-logo.svg?sanitize=true&#34; alt=&#34;Electron Logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/electron/electron/tree/main&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/electron/electron/tree/main.svg?style=shield&#34; alt=&#34;CircleCI Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/electron-bot/electron-ljo26/branch/main&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/4lggi9dpjc1qob7k/branch/main?svg=true&#34; alt=&#34;AppVeyor Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/electronjs&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/745037351163527189?color=%237289DA&amp;amp;label=chat&amp;amp;logo=discord&amp;amp;logoColor=white&#34; alt=&#34;Electron Discord Invite&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;📝&lt;/span&gt; Available Translations: 🇨🇳 🇧🇷 🇪🇸 🇯🇵 🇷🇺 🇫🇷 🇺🇸 🇩🇪. View these docs in other languages on our &lt;a href=&#34;https://crowdin.com/project/electron&#34;&gt;Crowdin&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;p&gt;The Electron framework lets you write cross-platform desktop applications using JavaScript, HTML and CSS. It is based on &lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; and &lt;a href=&#34;https://www.chromium.org&#34;&gt;Chromium&lt;/a&gt; and is used by the &lt;a href=&#34;https://github.com/atom/atom&#34;&gt;Atom editor&lt;/a&gt; and many other &lt;a href=&#34;https://electronjs.org/apps&#34;&gt;apps&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Follow &lt;a href=&#34;https://twitter.com/electronjs&#34;&gt;@electronjs&lt;/a&gt; on Twitter for important announcements.&lt;/p&gt; &#xA;&lt;p&gt;This project adheres to the Contributor Covenant &lt;a href=&#34;https://github.com/electron/electron/tree/main/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt;. By participating, you are expected to uphold this code. Please report unacceptable behavior to &lt;a href=&#34;mailto:coc@electronjs.org&#34;&gt;coc@electronjs.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install prebuilt Electron binaries, use &lt;a href=&#34;https://docs.npmjs.com/&#34;&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/a&gt;. The preferred method is to install Electron as a development dependency in your app:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install electron --save-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more installation options and troubleshooting tips, see &lt;a href=&#34;https://raw.githubusercontent.com/electron/electron/main/docs/tutorial/installation.md&#34;&gt;installation&lt;/a&gt;. For info on how to manage Electron versions in your apps, see &lt;a href=&#34;https://raw.githubusercontent.com/electron/electron/main/docs/tutorial/electron-versioning.md&#34;&gt;Electron versioning&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Platform support&lt;/h2&gt; &#xA;&lt;p&gt;Each Electron release provides binaries for macOS, Windows, and Linux.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;macOS (High Sierra and up): Electron provides 64-bit Intel and ARM binaries for macOS. Apple Silicon support was added in Electron 11.&lt;/li&gt; &#xA; &lt;li&gt;Windows (Windows 10 and up): Electron provides &lt;code&gt;ia32&lt;/code&gt; (&lt;code&gt;x86&lt;/code&gt;), &lt;code&gt;x64&lt;/code&gt; (&lt;code&gt;amd64&lt;/code&gt;), and &lt;code&gt;arm64&lt;/code&gt; binaries for Windows. Windows on ARM support was added in Electron 5.0.8. Support for Windows 7, 8 and 8.1 was &lt;a href=&#34;https://www.electronjs.org/blog/windows-7-to-8-1-deprecation-notice&#34;&gt;removed in Electron 23, in line with Chromium&#39;s Windows deprecation policy&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Linux: The prebuilt binaries of Electron are built on Ubuntu 20.04. They have also been verified to work on: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ubuntu 14.04 and newer&lt;/li&gt; &#xA;   &lt;li&gt;Fedora 24 and newer&lt;/li&gt; &#xA;   &lt;li&gt;Debian 8 and newer&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick start &amp;amp; Electron Fiddle&lt;/h2&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://github.com/electron/fiddle&#34;&gt;&lt;code&gt;Electron Fiddle&lt;/code&gt;&lt;/a&gt; to build, run, and package small Electron experiments, to see code examples for all of Electron&#39;s APIs, and to try out different versions of Electron. It&#39;s designed to make the start of your journey with Electron easier.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, clone and run the &lt;a href=&#34;https://github.com/electron/electron-quick-start&#34;&gt;electron/electron-quick-start&lt;/a&gt; repository to see a minimal Electron app in action:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/electron/electron-quick-start&#xA;cd electron-quick-start&#xA;npm install&#xA;npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Resources for learning Electron&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://electronjs.org/docs&#34;&gt;electronjs.org/docs&lt;/a&gt; - All of Electron&#39;s documentation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/electron/fiddle&#34;&gt;electron/fiddle&lt;/a&gt; - A tool to build, run, and package small Electron experiments&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/electron/electron-quick-start&#34;&gt;electron/electron-quick-start&lt;/a&gt; - A very basic starter Electron app&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://electronjs.org/community#boilerplates&#34;&gt;electronjs.org/community#boilerplates&lt;/a&gt; - Sample starter apps created by the community&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Programmatic usage&lt;/h2&gt; &#xA;&lt;p&gt;Most people use Electron from the command line, but if you require &lt;code&gt;electron&lt;/code&gt; inside your &lt;strong&gt;Node app&lt;/strong&gt; (not your Electron app) it will return the file path to the binary. Use this to spawn Electron from Node scripts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const electron = require(&#39;electron&#39;)&#xA;const proc = require(&#39;child_process&#39;)&#xA;&#xA;// will print something similar to /Users/maf/.../Electron&#xA;console.log(electron)&#xA;&#xA;// spawn Electron&#xA;const child = proc.spawn(electron)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Mirrors&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://npmmirror.com/mirrors/electron/&#34;&gt;China&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://www.electronjs.org/docs/latest/tutorial/installation#mirror&#34;&gt;Advanced Installation Instructions&lt;/a&gt; to learn how to use a custom mirror.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation translations&lt;/h2&gt; &#xA;&lt;p&gt;We crowdsource translations for our documentation via &lt;a href=&#34;https://crowdin.com/project/electron&#34;&gt;Crowdin&lt;/a&gt;. We currently accept translations for Chinese (Simplified), French, German, Japanese, Portuguese, Russian, and Spanish.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you are interested in reporting/fixing issues and contributing directly to the code base, please see &lt;a href=&#34;https://raw.githubusercontent.com/electron/electron/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more information on what we&#39;re looking for and how to get started.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Info on reporting bugs, getting help, finding third-party tools and sample apps, and more can be found on the &lt;a href=&#34;https://www.electronjs.org/community&#34;&gt;Community page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/electron/electron/raw/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;When using Electron logos, make sure to follow &lt;a href=&#34;https://openjsf.org/wp-content/uploads/sites/84/2021/01/OpenJS-Foundation-Trademark-Policy-2021-01-12.docx.pdf&#34;&gt;OpenJS Foundation Trademark Policy&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>