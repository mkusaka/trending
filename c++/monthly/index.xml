<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-01T02:11:45Z</updated>
  <subtitle>Monthly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MaaAssistantArknights/MaaAssistantArknights</title>
    <updated>2023-05-01T02:11:45Z</updated>
    <id>tag:github.com,2023-05-01:/MaaAssistantArknights/MaaAssistantArknights</id>
    <link href="https://github.com/MaaAssistantArknights/MaaAssistantArknights" rel="alternate"></link>
    <summary type="html">&lt;p&gt;《明日方舟》小助手，全日常一键长草！| A one-click tool for the daily tasks of Arknights, supporting all clients.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img alt=&#34;LOGO&#34; src=&#34;https://cdn.jsdelivr.net/gh/MaaAssistantArknights/design@main/logo/maa-logo_512x512.png&#34; width=&#34;256&#34; height=&#34;256&#34;&gt; &#xA; &lt;h1&gt;MaaAssistantArknights&lt;/h1&gt; &#xA; &lt;br&gt; &#xA; &lt;div&gt; &#xA;  &lt;img alt=&#34;C++&#34; src=&#34;https://img.shields.io/badge/c++-20-%2300599C?logo=cplusplus&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;div&gt; &#xA;  &lt;img alt=&#34;platform&#34; src=&#34;https://img.shields.io/badge/platform-Windows%20%7C%20Linux%20%7C%20macOS-blueviolet&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;div&gt; &#xA;  &lt;img alt=&#34;license&#34; src=&#34;https://img.shields.io/github/license/MaaAssistantArknights/MaaAssistantArknights&#34;&gt; &#xA;  &lt;img alt=&#34;commit&#34; src=&#34;https://img.shields.io/github/commit-activity/m/MaaAssistantArknights/MaaAssistantArknights?color=%23ff69b4&#34;&gt; &#xA;  &lt;img alt=&#34;stars&#34; src=&#34;https://img.shields.io/github/stars/MaaAssistantArknights/MaaAssistantArknights?style=social&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://maa.plus/docs/&#34;&gt;简体中文&lt;/a&gt; | &lt;a href=&#34;https://maa.plus/docs/zh-tw/&#34;&gt;繁體中文&lt;/a&gt; | &lt;a href=&#34;https://maa.plus/docs/en-us/&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://maa.plus/docs/ja-jp/&#34;&gt;日本語&lt;/a&gt; | &lt;a href=&#34;https://maa.plus/docs/ko-kr/&#34;&gt;한국어&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;MAA 的意思是 MAA Assistant Arknights&lt;/p&gt; &#xA; &lt;p&gt;一款明日方舟游戏小助手&lt;/p&gt; &#xA; &lt;p&gt;基于图像识别技术，一键完成全部日常任务！&lt;/p&gt; &#xA; &lt;p&gt;绝赞更新中 ✿✿ヽ(°▽°)ノ✿&lt;br&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;亮点功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;刷理智，掉落识别及上传 &lt;a href=&#34;https://penguin-stats.cn/&#34;&gt;企鹅物流&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;智能基建换班，自动计算干员效率，单设施内最优解；同时也支持 &lt;a href=&#34;https://maa.plus/docs/3.6-%E5%9F%BA%E5%BB%BA%E6%8E%92%E7%8F%AD%E5%8D%8F%E8%AE%AE.html&#34;&gt;自定义排班&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;自动公招，可选使用加急许可，一次全部刷完！公招数据上传 &lt;a href=&#34;https://penguin-stats.cn/result/stage/recruit/recruit&#34;&gt;企鹅物流&lt;/a&gt;，&lt;a href=&#34;https://yituliu.site/maarecruitdata&#34;&gt;一图流&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;访问好友、收取信用及购物、领取日常奖励等。一键全日常自动长草！&lt;/li&gt; &#xA; &lt;li&gt;肉鸽全自动刷源石锭和蜡烛，自动识别干员及练度&lt;/li&gt; &#xA; &lt;li&gt;选择作业 JSON 文件，自动抄作业！ &lt;a href=&#34;https://www.bilibili.com/video/BV1H841177Fk/&#34;&gt;视频演示&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;仓库识别并支持导出至 &lt;a href=&#34;https://penguin-stats.cn/planner&#34;&gt;企鹅物流刷图规划器&lt;/a&gt;, &lt;a href=&#34;https://arkn.lolicon.app/#/material&#34;&gt;明日方舟工具箱&lt;/a&gt;, &lt;a href=&#34;https://ark-nights.com/settings&#34;&gt;ARK-NIGHTS 干员培养表&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;支持 C, Python, Java, Rust, Golang, Java HTTP, Rust HTTP 等多种接口，方便集成调用，自定义你的 MAA！&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;话不多说，看图！&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/99072975/232381589-558a8213-d840-4d00-a8f6-89467e2d35c9.png&#34; alt=&#34;zh1&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/99072975/232381604-4066d3f5-dfee-45e5-a10f-8ca91ad4404b.png&#34; alt=&#34;zh2&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;下载地址&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaAssistantArknights/releases&#34;&gt;稳定版/公测版&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaRelease/releases&#34;&gt;内测版&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;使用说明&lt;/h2&gt; &#xA;&lt;h3&gt;基本说明&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;请根据 &lt;a href=&#34;https://maa.plus/docs/1.3-%E6%A8%A1%E6%8B%9F%E5%99%A8%E6%94%AF%E6%8C%81.html&#34;&gt;模拟器支持情况&lt;/a&gt;，进行对应的操作。&lt;/li&gt; &#xA; &lt;li&gt;修改模拟器分辨率为 &lt;code&gt;16:9&lt;/code&gt; 比例，最低 &lt;code&gt;1280 * 720&lt;/code&gt;，更高不限。&lt;/li&gt; &#xA; &lt;li&gt;开始使用吧！&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;更多使用说明请参考 &lt;a href=&#34;https://maa.plus/docs/1.1-%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D.html&#34;&gt;详细介绍&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;常见问题&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;软件一打开就闪退&lt;/li&gt; &#xA; &lt;li&gt;连接错误、不知道 adb 路径怎么填写&lt;/li&gt; &#xA; &lt;li&gt;连接成功了，但没反应&lt;/li&gt; &#xA; &lt;li&gt;如何连接自定义端口&lt;/li&gt; &#xA; &lt;li&gt;下载速度慢，且镜像站无法打开网页&lt;/li&gt; &#xA; &lt;li&gt;下载到一半提示“登陆”/“鉴权”&lt;/li&gt; &#xA; &lt;li&gt;连接正常，任务开始了，但是没反应&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;请参考 &lt;a href=&#34;https://maa.plus/docs/1.2-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.html&#34;&gt;常见问题&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;外服支持&lt;/h2&gt; &#xA;&lt;p&gt;目前国际服（美服）、日服、韩服、繁中服的绝大部分功能均已支持。但由于外服用户较少及项目人手不足，很多功能并没有进行全面的测试，所以请自行体验。&lt;br&gt; 若您遇到了 Bug，或对某个功能有强需求，欢迎在 &lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaAssistantArknights/issues&#34;&gt;Issues&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaAssistantArknights/discussions&#34;&gt;讨论区&lt;/a&gt; 催更；或加入我们一起建设 MAA！请参考 &lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/dev/#%E5%A4%96%E6%9C%8D%E9%80%82%E9%85%8D&#34;&gt;外服适配教程&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;主要关联项目&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;目前项目组非常缺前端大佬，若您有相关经验，欢迎加入我们！&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;全新 GUI：&lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaAsstElectronUI&#34;&gt;MaaAsstElectronUI&lt;/a&gt; （正在开发中，欢迎加入！）&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://prts.plus&#34;&gt;作业站&lt;/a&gt; 前端：&lt;a href=&#34;https://github.com/MaaAssistantArknights/maa-copilot-frontend&#34;&gt;maa-copilot-frontend&lt;/a&gt; （正在开发中，欢迎加入！）&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://prts.plus&#34;&gt;作业站&lt;/a&gt; 后端：&lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaBackendCenter&#34;&gt;MaaBackendCenter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://maa.plus&#34;&gt;官网&lt;/a&gt;：&lt;a href=&#34;https://github.com/MaaAssistantArknights/maa-website&#34;&gt;前端&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;深度学习：&lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaAI&#34;&gt;MaaAI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;致谢&lt;/h2&gt; &#xA;&lt;h3&gt;开源库&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;图像识别库：&lt;a href=&#34;https://github.com/opencv/opencv.git&#34;&gt;opencv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;文字识别库：&lt;a href=&#34;https://github.com/DayBreak-u/chineseocr_lite.git&#34;&gt;chineseocr_lite&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;文字识别库：&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR&#34;&gt;PaddleOCR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;深度学习部署库：&lt;a href=&#34;https://github.com/PaddlePaddle/FastDeploy&#34;&gt;FastDeploy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;机器学习加速器：&lt;a href=&#34;https://github.com/microsoft/onnxruntime&#34;&gt;onnxruntime&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;关卡掉落识别：&lt;a href=&#34;https://github.com/penguin-statistics/recognizer&#34;&gt;企鹅物流识别&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;地图格子识别：&lt;a href=&#34;https://github.com/yuanyan3060/Arknights-Tile-Pos&#34;&gt;Arknights-Tile-Pos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C++ JSON库：&lt;a href=&#34;https://github.com/MistEO/meojson.git&#34;&gt;meojson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C++ 运算符解析器：&lt;a href=&#34;https://github.com/kimwalisch/calculator&#34;&gt;calculator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;C++ base64编解码：&lt;a href=&#34;https://github.com/ReneNyffenegger/cpp-base64&#34;&gt;cpp-base64&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;C++ 解压压缩库：&lt;a href=&#34;https://github.com/madler/zlib&#34;&gt;zlib&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C++ Gzip封装：&lt;a href=&#34;https://github.com/mapbox/gzip-hpp&#34;&gt;gzip-hpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;安卓触控事件器：&lt;a href=&#34;https://github.com/openstf/minitouch&#34;&gt;minitouch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;安卓触控事件器：&lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaTouch&#34;&gt;MaaTouch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WPF MVVM框架：&lt;a href=&#34;https://github.com/canton7/Stylet&#34;&gt;Stylet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WPF控件库：&lt;a href=&#34;https://github.com/HandyOrg/HandyControl&#34;&gt;HandyControl&lt;/a&gt; -&amp;gt; &lt;a href=&#34;https://github.com/ghost1372/HandyControls&#34;&gt;HandyControls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C# 日志：&lt;a href=&#34;https://github.com/serilog/serilog&#34;&gt;Serilog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C# JSON库：&lt;a href=&#34;https://github.com/JamesNK/Newtonsoft.Json&#34;&gt;Newtonsoft.Json&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/dotnet/runtime&#34;&gt;System.Text.Json&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;下载器：&lt;a href=&#34;https://github.com/aria2/aria2&#34;&gt;aria2&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;数据源&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;公开招募数据：&lt;a href=&#34;https://www.bigfun.cn/tools/aktools/hr&#34;&gt;明日方舟工具箱&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;干员及基建数据：&lt;a href=&#34;http://prts.wiki/&#34;&gt;PRTS明日方舟中文WIKI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;关卡数据：&lt;a href=&#34;https://penguin-stats.cn/&#34;&gt;企鹅物流数据统计&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;游戏数据及资源：&lt;a href=&#34;https://github.com/yuanyan3060/Arknights-Bot-Resource&#34;&gt;明日方舟bot常用素材&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;游戏数据：&lt;a href=&#34;https://github.com/Kengxxiao/ArknightsGameData&#34;&gt;《明日方舟》游戏数据&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;贡献/参与者&lt;/h3&gt; &#xA;&lt;p&gt;感谢所有参与到开发/测试中的朋友们，是大家的帮助让 MAA 越来越好！ (*´▽｀)ノノ&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaAssistantArknights/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contributors-img.web.app/image?repo=MaaAssistantArknights/MaaAssistantArknights&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;开发相关&lt;/h2&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;下载预构建的第三方库&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;python maadeps-download.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;使用 Visual Studio 2022 打开 &lt;code&gt;MAA.sln&lt;/code&gt;，右键 &lt;code&gt;MaaWpfGui&lt;/code&gt;，设为启动项目&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;VS 上方配置选择 &lt;code&gt;RelWithDebInfo&lt;/code&gt; &lt;code&gt;x64&lt;/code&gt; （如果编译 Release 包 或 ARM 平台，请忽略这步）&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;右键 &lt;code&gt;MaaWpfGui&lt;/code&gt; - 属性 - 调试 - 启用本地调试（这样就能把断点挂到 C++ Core 那边了）&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;（可选）若准备提交 PR，建议启用 &lt;a href=&#34;https://maa.plus/docs/2.2-%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3.html#%E5%9C%A8-visual-studio-%E4%B8%AD%E5%90%AF%E7%94%A8-clang-format&#34;&gt;clang-format 支持&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Linux | macOS&lt;/h3&gt; &#xA;&lt;p&gt;请参考 &lt;a href=&#34;https://maa.plus/docs/2.1-Linux%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B.html&#34;&gt;Linux 编译教程&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;API&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/dev/include/AsstCaller.h&#34;&gt;C 接口&lt;/a&gt;：&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/dev/src/Cpp/main.cpp&#34;&gt;集成示例&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/dev/src/Python/asst/asst.py&#34;&gt;Python 接口&lt;/a&gt;：&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/dev/src/Python/sample.py&#34;&gt;集成示例&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/dev/src/Golang/&#34;&gt;Golang 接口&lt;/a&gt;：&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/dev/src/Golang/maa/maa.go&#34;&gt;集成示例&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/dev/src/Dart/&#34;&gt;Dart 接口&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/dev/src/Java/src/main/java/com/iguigui/maaj/easySample/MaaCore.java&#34;&gt;Java 接口&lt;/a&gt;：&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/dev/src/Java/src/main/java/com/iguigui/maaj/easySample/MaaJavaSample.java&#34;&gt;集成示例&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/dev/src/Java/Readme.md&#34;&gt;Java HTTP 接口&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/dev/src/Rust/src/maa_sys/&#34;&gt;Rust 接口&lt;/a&gt;：&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/dev/src/Rust&#34;&gt;HTTP 接口&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaAsstElectronUI/tree/main/packages/main/coreLoader&#34;&gt;TypeScript 接口&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://maa.plus/docs/3.1-%E9%9B%86%E6%88%90%E6%96%87%E6%A1%A3.html&#34;&gt;集成文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://maa.plus/docs/3.2-%E5%9B%9E%E8%B0%83%E6%B6%88%E6%81%AF%E5%8D%8F%E8%AE%AE.html&#34;&gt;回调消息协议&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://maa.plus/docs/3.4-%E4%BB%BB%E5%8A%A1%E6%B5%81%E7%A8%8B%E5%8D%8F%E8%AE%AE.html&#34;&gt;任务流程协议&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://maa.plus/docs/3.3-%E6%88%98%E6%96%97%E6%B5%81%E7%A8%8B%E5%8D%8F%E8%AE%AE.html&#34;&gt;自动抄作业协议&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;外服适配&lt;/h3&gt; &#xA;&lt;p&gt;请参考 &lt;a href=&#34;https://maa.plus/docs/2.5-%E5%A4%96%E6%9C%8D%E9%80%82%E9%85%8D%E6%95%99%E7%A8%8B.html&#34;&gt;外服适配教程&lt;/a&gt;，对于国服已支持的功能，绝大部分的外服适配工作仅需要截图 + 简单的 JSON 修改即可。&lt;/p&gt; &#xA;&lt;h3&gt;想参与开发，但不太会用 Github?&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://maa.plus/docs/2.2-%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3.html#github-pull-request-%E6%B5%81%E7%A8%8B%E7%AE%80%E8%BF%B0&#34;&gt;Github Pull Request 流程简述&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Issue bot&lt;/h3&gt; &#xA;&lt;p&gt;请参考 &lt;a href=&#34;https://maa.plus/docs/2.3-IssueBot%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.html&#34;&gt;Issue bot 使用方法&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;声明&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本软件 logo 并非使用 AGPL 3.0 协议开源，&lt;a href=&#34;https://weibo.com/u/3251357314&#34;&gt;耗毛&lt;/a&gt;、vie 两位画师及软件全体开发者保留所有权利。不得以 AGPL 3.0 协议已授权为由在未经授权的情况下使用本软件 logo，不得在未经授权的情况下将本软件 logo 用于任何商业用途。&lt;/li&gt; &#xA; &lt;li&gt;本软件开源、免费，仅供学习交流使用。若您遇到商家使用本软件进行代练并收费，可能是设备与时间等费用，产生的问题及后果与本软件无关。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;广告&lt;/h2&gt; &#xA;&lt;p&gt;用户交流 QQ 群：&lt;a href=&#34;https://ota.maa.plus/MaaAssistantArknights/api/qqgroup/index.html&#34;&gt;MAA 使用 &amp;amp; 粥游交流 QQ 群&lt;/a&gt;&lt;br&gt; 用户交流 TG 群：&lt;a href=&#34;https://t.me/+Mgc2Zngr-hs3ZjU1&#34;&gt;Telegram 群&lt;/a&gt;&lt;br&gt; 自动战斗 JSON 作业分享：&lt;a href=&#34;https://prts.plus&#34;&gt;prts.plus&lt;/a&gt; 或 &lt;a href=&#34;http://%E6%8A%84%E4%BD%9C%E4%B8%9A.com&#34;&gt;抄作业.com&lt;/a&gt;&lt;br&gt; Bilibili 直播间：&lt;a href=&#34;https://live.bilibili.com/2808861&#34;&gt;直播间&lt;/a&gt; 每晚直播敲代码，近期很长一段时间应该都是在写本软件~&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;技术 &amp;amp; 吹水群（舟无关）：&lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=ypbzXcA2&#34;&gt;内卷地狱！(QQ 群)&lt;/a&gt;&lt;br&gt; 开发者群：&lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=JM9oCk3C&#34;&gt;QQ 群&lt;/a&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;如果觉得软件对你有帮助，帮忙点个 Star 吧！~（网页最上方右上角的小星星），这就是对我们最大的支持了！&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>topjohnwu/Magisk</title>
    <updated>2023-05-01T02:11:45Z</updated>
    <id>tag:github.com,2023-05-01:/topjohnwu/Magisk</id>
    <link href="https://github.com/topjohnwu/Magisk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Magic Mask for Android&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/topjohnwu/Magisk/master/docs/images/logo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/topjohnwu/magisk-files/count/count.json&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/json?color=green&amp;amp;label=Downloads&amp;amp;query=totalString&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Ftopjohnwu%2Fmagisk-files%2Fcount%2Fcount.json&amp;amp;cacheSeconds=1800&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;This is not an officially supported Google product&lt;/h4&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Magisk is a suite of open source software for customizing Android, supporting devices higher than Android 6.0.&lt;br&gt; Some highlight features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;MagiskSU&lt;/strong&gt;: Provide root access for applications&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Magisk Modules&lt;/strong&gt;: Modify read-only partitions by installing modules&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MagiskBoot&lt;/strong&gt;: The most complete tool for unpacking and repacking Android boot images&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Zygisk&lt;/strong&gt;: Run code in every Android applications&#39; processes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/topjohnwu/Magisk/&#34;&gt;Github&lt;/a&gt; is the only source where you can get official Magisk information and downloads.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/topjohnwu/Magisk/releases/tag/v26.1&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Magisk-v26.1-blue&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/topjohnwu/Magisk/releases/tag/v26.1&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Magisk%20Beta-v26.1-blue&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/topjohnwu/magisk-files/canary/app-release.apk&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Magisk-Canary-red&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/topjohnwu/magisk-files/canary/app-debug.apk&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Magisk-Debug-red&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Useful Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://topjohnwu.github.io/Magisk/install.html&#34;&gt;Installation Instruction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://topjohnwu.github.io/Magisk/&#34;&gt;Magisk Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Bug Reports&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Only bug reports from Debug builds will be accepted.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;For installation issues, upload both boot image and install logs.&lt;br&gt; For Magisk issues, upload boot logcat or dmesg.&lt;br&gt; For Magisk app crashes, record and upload the logcat when the crash occurs.&lt;/p&gt; &#xA;&lt;h2&gt;Building and Development&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Magisk builds on any OS Android Studio supports. Install Android Studio and do the initial setups.&lt;/li&gt; &#xA; &lt;li&gt;Clone sources: &lt;code&gt;git clone --recurse-submodules https://github.com/topjohnwu/Magisk.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install Python 3.8+ &lt;br&gt; (Windows only: select &lt;strong&gt;&#39;Add Python to PATH&#39;&lt;/strong&gt; in installer, and run &lt;code&gt;pip install colorama&lt;/code&gt; after install)&lt;/li&gt; &#xA; &lt;li&gt;Configure to use the JDK bundled in Android Studio: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;macOS: &lt;code&gt;export JAVA_HOME=&#34;/Applications/Android Studio.app/Contents/jre/Contents/Home&#34;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Linux: &lt;code&gt;export PATH=&#34;/path/to/androidstudio/jre/bin:$PATH&#34;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Windows: Add &lt;code&gt;C:\Path\To\Android Studio\jre\bin&lt;/code&gt; to environment variable &lt;code&gt;PATH&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Set environment variable &lt;code&gt;ANDROID_SDK_ROOT&lt;/code&gt; to the Android SDK folder (can be found in Android Studio settings)&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./build.py ndk&lt;/code&gt; to let the script download and install NDK for you&lt;/li&gt; &#xA; &lt;li&gt;To start building, run &lt;code&gt;build.py&lt;/code&gt; to see your options. &lt;br&gt; For each action, use &lt;code&gt;-h&lt;/code&gt; to access help (e.g. &lt;code&gt;./build.py all -h&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;To start development, open the project with Android Studio. The IDE can be used for both app (Kotlin/Java) and native sources.&lt;/li&gt; &#xA; &lt;li&gt;Optionally, set custom configs with &lt;code&gt;config.prop&lt;/code&gt;. A sample &lt;code&gt;config.prop.sample&lt;/code&gt; is provided.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Signing and Distribution&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The certificate of the key used to sign the final Magisk APK product is also directly embedded into some executables. In release builds, Magisk&#39;s root daemon will enforce this certificate check and reject and forcefully uninstall any non-matching Magisk apps to protect users from malicious and unverified Magisk APKs.&lt;/li&gt; &#xA; &lt;li&gt;To do any development on Magisk itself, switch to an &lt;strong&gt;official debug build and reinstall Magisk&lt;/strong&gt; to bypass the signature check.&lt;/li&gt; &#xA; &lt;li&gt;To distribute your own Magisk builds signed with your own keys, set your signing configs in &lt;code&gt;config.prop&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Check &lt;a href=&#34;https://developer.android.com/studio/publish/app-signing.html#generate-key&#34;&gt;Google&#39;s Documentation&lt;/a&gt; for more details on generating your own key.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Translation Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Default string resources for the Magisk app and its stub APK are located here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;app/src/main/res/values/strings.xml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stub/src/main/res/values/strings.xml&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Translate each and place them in the respective locations (&lt;code&gt;[module]/src/main/res/values-[lang]/strings.xml&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Magisk, including all git submodules are free software:&#xA;you can redistribute it and/or modify it under the terms of the&#xA;GNU General Public License as published by the Free Software Foundation,&#xA;either version 3 of the License, or (at your option) any later version.&#xA;&#xA;This program is distributed in the hope that it will be useful,&#xA;but WITHOUT ANY WARRANTY; without even the implied warranty of&#xA;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xA;GNU General Public License for more details.&#xA;&#xA;You should have received a copy of the GNU General Public License&#xA;along with this program.  If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>Const-me/Whisper</title>
    <updated>2023-05-01T02:11:45Z</updated>
    <id>tag:github.com,2023-05-01:/Const-me/Whisper</id>
    <link href="https://github.com/Const-me/Whisper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;High-performance GPGPU inference of OpenAI&#39;s Whisper automatic speech recognition (ASR) model&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This project is a Windows port of the &lt;a href=&#34;https://github.com/ggerganov/whisper.cpp&#34;&gt;whisper.cpp&lt;/a&gt; implementation.&lt;br&gt; Which in turn is a C++ port of &lt;a href=&#34;https://github.com/openai/whisper&#34;&gt;OpenAI&#39;s Whisper&lt;/a&gt; automatic speech recognition (ASR) model.&lt;/p&gt; &#xA;&lt;h1&gt;Quick Start Guide&lt;/h1&gt; &#xA;&lt;p&gt;Download WhisperDesktop.zip from the “Releases” section of this repository, unpack the ZIP, and run WhisperDesktop.exe.&lt;/p&gt; &#xA;&lt;p&gt;On the first screen it will ask you to download a model.&lt;br&gt; I recommend &lt;code&gt;ggml-medium.bin&lt;/code&gt; (1.42GB in size), because I’ve mostly tested the software with that model.&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Const-me/Whisper/master/gui-load-model.png&#34; alt=&#34;Load Model Screen&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The next screen allows to transcribe an audio file.&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Const-me/Whisper/master/gui-transcribe.png&#34; alt=&#34;Transcribe Screen&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;There’s another screen which allows to capture and transcribe or translate live audio from a microphone.&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Const-me/Whisper/master/gui-capture.png&#34; alt=&#34;Capture Screen&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Vendor-agnostic GPGPU based on DirectCompute; another name for that technology is “compute shaders in Direct3D 11”&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Plain C++ implementation, no runtime dependencies except essential OS components&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Much faster than OpenAI’s implementation.&lt;br&gt; On my desktop computer with GeForce &lt;a href=&#34;https://en.wikipedia.org/wiki/GeForce_10_series#GeForce_10_(10xx)_series_for_desktops&#34;&gt;1080Ti&lt;/a&gt; GPU, medium model, &lt;a href=&#34;https://upload.wikimedia.org/wikipedia/commons/1/1f/George_W_Bush_Columbia_FINAL.ogg&#34;&gt;3:24 min speech&lt;/a&gt; took 45 seconds to transcribe with PyTorch and CUDA, but only 19 seconds with my implementation and DirectCompute.&lt;br&gt; Funfact: that’s 9.63 gigabytes runtime dependencies, versus 431 kilobytes &lt;code&gt;Whisper.dll&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mixed F16 / F32 precision: Windows &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/win32/direct3ddxgi/format-support-for-direct3d-feature-level-10-0-hardware#dxgi_format_r16_floatfcs-54&#34;&gt;requires support&lt;/a&gt; of &lt;code&gt;R16_FLOAT&lt;/code&gt; buffers since D3D version 10.0&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Built-in performance profiler which measures execution time of individual compute shaders&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Low memory usage&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Media Foundation for audio handling, supports most audio and video formats (with the notable exception of Ogg Vorbis), and most audio capture devices which work on Windows (except some professional ones, which only implementing &lt;a href=&#34;https://en.wikipedia.org/wiki/Audio_Stream_Input/Output&#34;&gt;ASIO&lt;/a&gt; API).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Voice activity detection for audio capture.&lt;br&gt; The implementation is based on the &lt;a href=&#34;https://www.researchgate.net/publication/255667085_A_simple_but_efficient_real-time_voice_activity_detection_algorithm&#34;&gt;2009 article&lt;/a&gt; “A simple but efficient real-time voice activity detection algorithm” by Mohammad Moattar and Mahdi Homayoonpoor.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Easy to use COM-style API. Idiomatic C# wrapper &lt;a href=&#34;https://www.nuget.org/packages/WhisperNet/&#34;&gt;available on nuget&lt;/a&gt;.&lt;br&gt; Version 1.10 &lt;a href=&#34;https://github.com/Const-me/Whisper/tree/master/WhisperPS&#34;&gt;introduced&lt;/a&gt; scripting support for PowerShell 5.1, that’s the older “Windows PowerShell” version which comes pre-installed on Windows.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pre-built binaries available&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The only supported platform is 64-bit Windows.&lt;br&gt; Should work on Windows 8.1 or newer, but I have only tested on Windows 10.&lt;br&gt; The library requires a Direct3D 11.0 capable GPU, which in 2023 simply means “any hardware GPU”. The most recent GPU without D3D 11.0 support was Intel &lt;a href=&#34;https://en.wikipedia.org/wiki/Sandy_Bridge&#34;&gt;Sandy Bridge&lt;/a&gt; from 2011.&lt;/p&gt; &#xA;&lt;p&gt;On the CPU side, the library requires &lt;a href=&#34;https://en.wikipedia.org/wiki/Advanced_Vector_Extensions&#34;&gt;AVX1&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/F16C&#34;&gt;F16C&lt;/a&gt; support.&lt;/p&gt; &#xA;&lt;h1&gt;Developer Guide&lt;/h1&gt; &#xA;&lt;h2&gt;Build Instructions&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this repository&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;code&gt;WhisperCpp.sln&lt;/code&gt; in Visual Studio 2022. I’m using the freeware community edition, version 17.4.4.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Switch to &lt;code&gt;Release&lt;/code&gt; configuration&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build and run &lt;code&gt;CompressShaders&lt;/code&gt; C# project, in the &lt;code&gt;Tools&lt;/code&gt; subfolder of the solution. To run that project, right click in visual studio, “Set as startup project”, then in the main menu of VS “Debug / Start Without Debugging”. When completed successfully, you should see a console window with a line like that:&lt;br&gt; &lt;code&gt;Compressed 46 compute shaders, 123.5 kb -&amp;gt; 18.0 kb&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build &lt;code&gt;Whisper&lt;/code&gt; project to get the native DLL, or &lt;code&gt;WhisperNet&lt;/code&gt; for the C# wrapper and nuget package, or the examples.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Other Notes&lt;/h2&gt; &#xA;&lt;p&gt;If you gonna consume the library in a software built with Visual C++ 2022 or newer, you probably redistribute Visual C++ runtime DLLs in the form of the &lt;code&gt;.msm&lt;/code&gt; merge module, or &lt;a href=&#34;https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist?view=msvc-170&#34;&gt;vc_redist.x64.exe&lt;/a&gt; binary.&lt;br&gt; If you do that, right click on the &lt;code&gt;Whisper&lt;/code&gt; project, Properties, C/C++, Code Generation, switch “Runtime Library” setting from &lt;code&gt;Multi-threaded (/MT)&lt;/code&gt; to &lt;code&gt;Multi-threaded DLL (/MD)&lt;/code&gt;, and rebuild: the binary will become smaller.&lt;/p&gt; &#xA;&lt;p&gt;The library includes &lt;a href=&#34;https://renderdoc.org/&#34;&gt;RenderDoc&lt;/a&gt; GPU debugger integration.&lt;br&gt; When launched your program from RenderDoc, hold F12 key to capture the compute calls.&lt;br&gt; If you gonna debug HLSL shaders, use the debug build of the DLL, it includes debug build of the shaders and you’ll get better UX in the debugger.&lt;/p&gt; &#xA;&lt;p&gt;The repository includes a lot of code which was only used for development: couple alternative model implementations, compatible FP64 versions of some compute shaders, debug tracing and the tool to compare the traces, etc.&lt;br&gt; That stuff is disabled by preprocessor macros or &lt;code&gt;constexpr&lt;/code&gt; flags, I hope it’s fine to keep here.&lt;/p&gt; &#xA;&lt;h2&gt;Performance Notes&lt;/h2&gt; &#xA;&lt;p&gt;I have a limited selection of GPUs in this house.&lt;br&gt; Specifically, I have optimized for nVidia 1080Ti, Radeon Vega 8 inside Ryzen 7 5700G, and Radeon Vega 7 inside Ryzen 5 5600U.&lt;br&gt; &lt;a href=&#34;https://github.com/Const-me/Whisper/raw/master/SampleClips/summary.tsv&#34;&gt;Here’s the summary&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The nVidia delivers relative speed 5.8 for the large model, 10.6 for the medium model.&lt;br&gt; The AMD Ryzen 5 5600U APU delivers relative speed about 2.2 for the medium model. Not great, but still, much faster than realtime.&lt;/p&gt; &#xA;&lt;p&gt;I have also tested on &lt;a href=&#34;https://en.wikipedia.org/wiki/GeForce_16_series#Desktop&#34;&gt;nVidia 1650&lt;/a&gt;: slower than 1080Ti but pretty good, much faster than realtime.&lt;br&gt; I have also tested on Intel HD Graphics 4000 inside Core i7-3612QM, the relative speed was 0.14 for medium model, 0.44 for small model. That’s much slower than realtime, but I was happy to find my software works even on the integrated mobile GPU &lt;a href=&#34;https://ark.intel.com/products/64901&#34;&gt;launched&lt;/a&gt; in 2012.&lt;/p&gt; &#xA;&lt;p&gt;I’m not sure the performance is ideal on discrete AMD GPUs, or integrated Intel GPUs, have not specifically optimized for them.&lt;br&gt; Ideally, they might need slightly different builds of a couple of the most expensive compute shaders, &lt;code&gt;mulMatTiled.hlsl&lt;/code&gt; and &lt;code&gt;mulMatByRowTiled.hlsl&lt;/code&gt;&lt;br&gt; And maybe other adjustments, like the &lt;code&gt;useReshapedMatMul()&lt;/code&gt; value in &lt;code&gt;Whisper/D3D/device.h&lt;/code&gt; header file.&lt;/p&gt; &#xA;&lt;p&gt;I don’t know how to measure that, but I have a feeling the bottleneck is memory, not compute.&lt;br&gt; Someone on Hacker News &lt;a href=&#34;https://news.ycombinator.com/item?id=34408429&#34;&gt;has tested&lt;/a&gt; on &lt;a href=&#34;https://en.wikipedia.org/wiki/GeForce_30_series#Desktop&#34;&gt;3060Ti&lt;/a&gt;, the version with GDDR6 memory. Compared to 1080Ti, that GPU has 1.3x FP32 FLOPS, but 0.92x VRAM bandwidth. The app was about 10% slower on the 3060Ti.&lt;/p&gt; &#xA;&lt;h2&gt;Further Optimisations&lt;/h2&gt; &#xA;&lt;p&gt;I have only spent a few days optimizing performance of these shaders.&lt;br&gt; It might be possible to do much better, here’s a few ideas.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Newer GPUs like Radeon Vega or nVidia 1650 have higher FP16 performance compared to FP32, yet my compute shaders are only using FP32 data type.&lt;br&gt; &lt;a href=&#34;https://therealmjp.github.io/posts/shader-fp16/&#34;&gt;Half The Precision, Twice The Fun&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In the current version, FP16 tensors are using shader resource views to upcast loaded values, and unordered access views to downcast stored ones.&lt;br&gt; Might be a good idea to switch to &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/win32/direct3d11/direct3d-11-advanced-stages-cs-resources#byte-address-buffer&#34;&gt;byte address buffers&lt;/a&gt;, load/store complete 4-bytes values, and upcast / downcast in HLSL with &lt;code&gt;f16tof32&lt;/code&gt; / &lt;code&gt;f32tof16&lt;/code&gt; intrinsics.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In the current version all shaders are compiled offline, and &lt;code&gt;Whisper.dll&lt;/code&gt; includes DXBC byte codes.&lt;br&gt; The HLSL compiler &lt;code&gt;D3DCompiler_47.dll&lt;/code&gt; is an OS component, and is pretty fast. For the expensive compute shaders, it’s probably a good idea to ship HLSL instead of DXBC, and &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/win32/api/d3dcompiler/nf-d3dcompiler-d3dcompile&#34;&gt;compile&lt;/a&gt; on startup with environment-specific &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/win32/api/d3dcommon/ns-d3dcommon-d3d_shader_macro&#34;&gt;values&lt;/a&gt; for the macros.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It might be a good idea to upgrade the whole thing from D3D11 to D3D12.&lt;br&gt; The newer API is harder to use, but includes potentially useful features not exposed to D3D11: &lt;a href=&#34;https://github.com/Microsoft/DirectXShaderCompiler/wiki/Wave-Intrinsics&#34;&gt;wave intrinsics&lt;/a&gt;, and &lt;a href=&#34;https://github.com/microsoft/DirectXShaderCompiler/wiki/16-Bit-Scalar-Types&#34;&gt;explicit FP16&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Missing Features&lt;/h2&gt; &#xA;&lt;p&gt;Automatic language detection is not implemented.&lt;/p&gt; &#xA;&lt;p&gt;In the current version there’s high latency for realtime audio capture.&lt;br&gt; Specifically, depending on voice detection the figure is about 5-10 seconds.&lt;br&gt; At least in my tests, the model wasn’t happy when I supplied too short pieces of the audio.&lt;br&gt; I have increased the latency and called it a day, but ideally this needs a better fix for optimal UX.&lt;/p&gt; &#xA;&lt;h1&gt;Final Words&lt;/h1&gt; &#xA;&lt;p&gt;From my perspective, this is an unpaid hobby project, which I completed over the 2022-23 winter holydays.&lt;br&gt; The code probably has bugs.&lt;br&gt; The software is provided “as is”, without warranty of any kind.&lt;/p&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/ggerganov&#34;&gt;Georgi Gerganov&lt;/a&gt; for &lt;a href=&#34;https://github.com/ggerganov/whisper.cpp&#34;&gt;whisper.cpp&lt;/a&gt; implementation, and the models in GGML binary format.&lt;br&gt; I don’t program Python, and I don’t know anything about the ML ecosystem.&lt;br&gt; I wouldn’t even start this project without a good C++ reference implementation, to test my version against.&lt;/p&gt; &#xA;&lt;p&gt;That whisper.cpp project has an example which &lt;a href=&#34;https://github.com/ggerganov/whisper.cpp/raw/master/examples/talk/gpt-2.cpp&#34;&gt;uses&lt;/a&gt; the same GGML implementation to run another OpenAI’s model, &lt;a href=&#34;https://en.wikipedia.org/wiki/GPT-2&#34;&gt;GPT-2&lt;/a&gt;.&lt;br&gt; It shouldn’t be hard to support that ML model with the compute shaders and relevant infrastructure already implemented in this project.&lt;/p&gt; &#xA;&lt;p&gt;If you find this useful, I’ll be very grateful if you consider a donation to &lt;a href=&#34;https://savelife.in.ua/en/&#34;&gt;“Come Back Alive” foundation&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>