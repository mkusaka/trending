<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-01T02:27:33Z</updated>
  <subtitle>Monthly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>skyline-emu/skyline</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/skyline-emu/skyline</id>
    <link href="https://github.com/skyline-emu/skyline" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Run Nintendo Switch homebrew &amp; games on your Android device!&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/skyline-emu/skyline&#34; target=&#34;_blank&#34;&gt; &lt;img height=&#34;60%&#34; width=&#34;60%&#34; src=&#34;https://raw.github.com/skyline-emu/branding/master/banner/skyline-banner-rounded.png&#34;&gt;&lt;br&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/XnbXNQM&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/545842171459272705.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=5865F2&amp;amp;labelColor=404EED&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/skyline-emu/skyline/actions/workflows/ci.yml&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/skyline-emu/skyline/actions/workflows/ci.yml/badge.svg?sanitize=true&#34;&gt;&lt;br&gt; &lt;/a&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;&lt;a href=&#34;https://raw.githubusercontent.com/skyline-emu/skyline/master/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/skyline-emu/skyline/master/BUILDING.md&#34;&gt;Building Guide&lt;/a&gt;&lt;/b&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Skyline&lt;/b&gt; is an experimental emulator that runs on &lt;b&gt;ARMv8 Android™&lt;/b&gt; devices and emulates the functionality of a &lt;b&gt;Nintendo Switch™&lt;/b&gt; system, licensed under &lt;a href=&#34;https://github.com/skyline-emu/skyline/raw/master/LICENSE.md&#34;&gt;&lt;b&gt;Mozilla Public License 2.0&lt;/b&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Contact&lt;/h3&gt; &#xA;&lt;p&gt;You can contact the core developers of Skyline at our &lt;strong&gt;&lt;a href=&#34;https://discord.gg/XnbXNQM&#34;&gt;Discord&lt;/a&gt;&lt;/strong&gt;. If you have any questions, feel free to ask. It&#39;s also a good place to just keep up with the emulator, as most talk regarding development goes on over there.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Special Thanks&lt;/h3&gt; &#xA;&lt;p&gt;A few noteworthy teams/projects who&#39;ve helped us along the way are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://ryujinx.org/&#34;&gt;Ryujinx&lt;/a&gt;:&lt;/strong&gt; We&#39;ve used Ryujinx for reference throughout the project, the accuracy of their HLE implementations of Switch subsystems make it an amazing reference. The team behind the project has been extremely helpful with any queries we&#39;ve had and have constantly helped us with any issues we&#39;ve come across. &lt;strong&gt;It should be noted that Skyline is not based on Ryujinx&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://yuzu-emu.org/&#34;&gt;yuzu&lt;/a&gt;:&lt;/strong&gt; Skyline&#39;s shader compiler is a &lt;strong&gt;fork&lt;/strong&gt; of &lt;em&gt;yuzu&lt;/em&gt;&#39;s shader compiler with Skyline-specific changes, using it allowed us to focus on the parts of GPU emulation that we could specifically optimize for mobile while having a high-quality shader compiler implementation as a base. The team behind &lt;em&gt;yuzu&lt;/em&gt; has also often helped us and have graciously provided us with a license exemption.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/switchbrew/&#34;&gt;Switchbrew&lt;/a&gt;:&lt;/strong&gt; We&#39;ve extensively used Switchbrew whether that be their &lt;strong&gt;&lt;a href=&#34;https://switchbrew.org/&#34;&gt;wiki&lt;/a&gt;&lt;/strong&gt; with its colossal amount of information on the Switch that has saved us countless hours of time or &lt;strong&gt;&lt;a href=&#34;https://github.com/switchbrew/libnx&#34;&gt;libnx&lt;/a&gt;&lt;/strong&gt; which was crucial to initial development of the emulator to ensure that our HLE kernel and sysmodule implementations were accurate.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Disclaimer&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Nintendo Switch&lt;/strong&gt; is a trademark of &lt;strong&gt;Nintendo Co., Ltd&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Android&lt;/strong&gt; is a trademark of &lt;strong&gt;Google LLC&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>alphacep/vosk-api</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/alphacep/vosk-api</id>
    <link href="https://github.com/alphacep/vosk-api" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Offline speech recognition API for Android, iOS, Raspberry Pi and servers with Python, Java, C# and Node&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Vosk Speech Recognition Toolkit&lt;/h1&gt; &#xA;&lt;p&gt;Vosk is an offline open source speech recognition toolkit. It enables speech recognition for 20+ languages and dialects - English, Indian English, German, French, Spanish, Portuguese, Chinese, Russian, Turkish, Vietnamese, Italian, Dutch, Catalan, Arabic, Greek, Farsi, Filipino, Ukrainian, Kazakh, Swedish, Japanese, Esperanto, Hindi, Czech. More to come.&lt;/p&gt; &#xA;&lt;p&gt;Vosk models are small (50 Mb) but provide continuous large vocabulary transcription, zero-latency response with streaming API, reconfigurable vocabulary and speaker identification.&lt;/p&gt; &#xA;&lt;p&gt;Speech recognition bindings implemented for various programming languages like Python, Java, Node.JS, C#, C++ and others.&lt;/p&gt; &#xA;&lt;p&gt;Vosk supplies speech recognition for chatbots, smart home appliances, virtual assistants. It can also create subtitles for movies, transcription for lectures and interviews.&lt;/p&gt; &#xA;&lt;p&gt;Vosk scales from small devices like Raspberry Pi or Android smartphone to big clusters.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;For installation instructions, examples and documentation visit &lt;a href=&#34;https://alphacephei.com/vosk&#34;&gt;Vosk Website&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google/googletest</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/google/googletest</id>
    <link href="https://github.com/google/googletest" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GoogleTest - Google Testing and Mocking Framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GoogleTest&lt;/h1&gt; &#xA;&lt;h3&gt;Announcements&lt;/h3&gt; &#xA;&lt;h4&gt;Live at Head&lt;/h4&gt; &#xA;&lt;p&gt;GoogleTest now follows the &lt;a href=&#34;https://abseil.io/about/philosophy#upgrade-support&#34;&gt;Abseil Live at Head philosophy&lt;/a&gt;. We recommend &lt;a href=&#34;https://github.com/abseil/abseil-cpp/raw/master/FAQ.md#what-is-live-at-head-and-how-do-i-do-it&#34;&gt;updating to the latest commit in the &lt;code&gt;main&lt;/code&gt; branch as often as possible&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Documentation Updates&lt;/h4&gt; &#xA;&lt;p&gt;Our documentation is now live on GitHub Pages at &lt;a href=&#34;https://google.github.io/googletest/&#34;&gt;https://google.github.io/googletest/&lt;/a&gt;. We recommend browsing the documentation on GitHub Pages rather than directly in the repository.&lt;/p&gt; &#xA;&lt;h4&gt;Release 1.11.0&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/google/googletest/releases/tag/release-1.11.0&#34;&gt;Release 1.11.0&lt;/a&gt; is now available.&lt;/p&gt; &#xA;&lt;h4&gt;Coming Soon&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We are planning to take a dependency on &lt;a href=&#34;https://github.com/abseil/abseil-cpp&#34;&gt;Abseil&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;More documentation improvements are planned.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Welcome to &lt;strong&gt;GoogleTest&lt;/strong&gt;, Google&#39;s C++ test framework!&lt;/h2&gt; &#xA;&lt;p&gt;This repository is a merger of the formerly separate GoogleTest and GoogleMock projects. These were so closely related that it makes sense to maintain and release them together.&lt;/p&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://google.github.io/googletest/&#34;&gt;GoogleTest User&#39;s Guide&lt;/a&gt; for documentation. We recommend starting with the &lt;a href=&#34;https://google.github.io/googletest/primer.html&#34;&gt;GoogleTest Primer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;More information about building GoogleTest can be found at &lt;a href=&#34;https://raw.githubusercontent.com/google/googletest/main/googletest/README.md&#34;&gt;googletest/README.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An &lt;a href=&#34;https://en.wikipedia.org/wiki/XUnit&#34;&gt;xUnit&lt;/a&gt; test framework.&lt;/li&gt; &#xA; &lt;li&gt;Test discovery.&lt;/li&gt; &#xA; &lt;li&gt;A rich set of assertions.&lt;/li&gt; &#xA; &lt;li&gt;User-defined assertions.&lt;/li&gt; &#xA; &lt;li&gt;Death tests.&lt;/li&gt; &#xA; &lt;li&gt;Fatal and non-fatal failures.&lt;/li&gt; &#xA; &lt;li&gt;Value-parameterized tests.&lt;/li&gt; &#xA; &lt;li&gt;Type-parameterized tests.&lt;/li&gt; &#xA; &lt;li&gt;Various options for running the tests.&lt;/li&gt; &#xA; &lt;li&gt;XML test report generation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Platforms&lt;/h2&gt; &#xA;&lt;p&gt;GoogleTest requires a codebase and compiler compliant with the C++11 standard or newer.&lt;/p&gt; &#xA;&lt;p&gt;The GoogleTest code is officially supported on the following platforms. Operating systems or tools not listed below are community-supported. For community-supported platforms, patches that do not complicate the code may be considered.&lt;/p&gt; &#xA;&lt;p&gt;If you notice any problems on your platform, please file an issue on the &lt;a href=&#34;https://github.com/google/googletest/issues&#34;&gt;GoogleTest GitHub Issue Tracker&lt;/a&gt;. Pull requests containing fixes are welcome!&lt;/p&gt; &#xA;&lt;h3&gt;Operating Systems&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux&lt;/li&gt; &#xA; &lt;li&gt;macOS&lt;/li&gt; &#xA; &lt;li&gt;Windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Compilers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;gcc 5.0+&lt;/li&gt; &#xA; &lt;li&gt;clang 5.0+&lt;/li&gt; &#xA; &lt;li&gt;MSVC 2015+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;macOS users:&lt;/strong&gt; Xcode 9.3+ provides clang 5.0+.&lt;/p&gt; &#xA;&lt;h3&gt;Build Systems&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bazel.build/&#34;&gt;Bazel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cmake.org/&#34;&gt;CMake&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Bazel is the build system used by the team internally and in tests. CMake is supported on a best-effort basis and by the community.&lt;/p&gt; &#xA;&lt;h2&gt;Who Is Using GoogleTest?&lt;/h2&gt; &#xA;&lt;p&gt;In addition to many internal projects at Google, GoogleTest is also used by the following notable projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;http://www.chromium.org/&#34;&gt;Chromium projects&lt;/a&gt; (behind the Chrome browser and Chrome OS).&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;http://llvm.org/&#34;&gt;LLVM&lt;/a&gt; compiler.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/protobuf&#34;&gt;Protocol Buffers&lt;/a&gt;, Google&#39;s data interchange format.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;http://opencv.org/&#34;&gt;OpenCV&lt;/a&gt; computer vision library.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Related Open Source Projects&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nholthaus/gtest-runner&#34;&gt;GTest Runner&lt;/a&gt; is a Qt5 based automated test-runner and Graphical User Interface with powerful features for Windows and Linux platforms.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ospector/gtest-gbar&#34;&gt;GoogleTest UI&lt;/a&gt; is a test runner that runs your test binary, allows you to track its progress via a progress bar, and displays a list of test failures. Clicking on one shows failure text. GoogleTest UI is written in C#.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kinow/gtest-tap-listener&#34;&gt;GTest TAP Listener&lt;/a&gt; is an event listener for GoogleTest that implements the &lt;a href=&#34;https://en.wikipedia.org/wiki/Test_Anything_Protocol&#34;&gt;TAP protocol&lt;/a&gt; for test result output. If your test runner understands TAP, you may find it useful.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/google/gtest-parallel&#34;&gt;gtest-parallel&lt;/a&gt; is a test runner that runs tests from your binary in parallel to provide significant speed-up.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=DavidSchuldenfrei.gtest-adapter&#34;&gt;GoogleTest Adapter&lt;/a&gt; is a VS Code extension allowing to view GoogleTest in a tree view and run/debug your tests.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/matepek/vscode-catch2-test-adapter&#34;&gt;C++ TestMate&lt;/a&gt; is a VS Code extension allowing to view GoogleTest in a tree view and run/debug your tests.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cornichon/&#34;&gt;Cornichon&lt;/a&gt; is a small Gherkin DSL parser that generates stub code for GoogleTest.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing Changes&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://github.com/google/googletest/raw/master/CONTRIBUTING.md&#34;&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; for details on how to contribute to this project.&lt;/p&gt; &#xA;&lt;p&gt;Happy testing!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/terminal</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/microsoft/terminal</id>
    <link href="https://github.com/microsoft/terminal" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The new Windows Terminal and the original Windows console host, all in the same place!&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/48369326/115790869-4c852b00-a37c-11eb-97f1-f61972c7800c.png&#34; alt=&#34;terminal-logos&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Welcome to the Windows Terminal, Console and Command-Line repo&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the source code for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/terminal&#34;&gt;Windows Terminal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/terminal-preview&#34;&gt;Windows Terminal Preview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The Windows console host (&lt;code&gt;conhost.exe&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Components shared between the two projects&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/terminal/tree/main/src/tools/ColorTool&#34;&gt;ColorTool&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/terminal/tree/main/samples&#34;&gt;Sample projects&lt;/a&gt; that show how to consume the Windows Console APIs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Related repositories include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/terminal&#34;&gt;Windows Terminal Documentation&lt;/a&gt; (&lt;a href=&#34;https://github.com/MicrosoftDocs/terminal&#34;&gt;Repo: Contribute to the docs&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MicrosoftDocs/Console-Docs&#34;&gt;Console API Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/Cascadia-Code&#34;&gt;Cascadia Code Font&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing and running Windows Terminal&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;🔴 Note: Windows Terminal requires Windows 10 2004 (build 19041) or later&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Microsoft Store [Recommended]&lt;/h3&gt; &#xA;&lt;p&gt;Install the &lt;a href=&#34;https://aka.ms/terminal&#34;&gt;Windows Terminal from the Microsoft Store&lt;/a&gt;. This allows you to always be on the latest version when we release new builds with automatic upgrades.&lt;/p&gt; &#xA;&lt;p&gt;This is our preferred method.&lt;/p&gt; &#xA;&lt;h3&gt;Other install methods&lt;/h3&gt; &#xA;&lt;h4&gt;Via GitHub&lt;/h4&gt; &#xA;&lt;p&gt;For users who are unable to install Windows Terminal from the Microsoft Store, released builds can be manually downloaded from this repository&#39;s &lt;a href=&#34;https://github.com/microsoft/terminal/releases&#34;&gt;Releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Download the &lt;code&gt;Microsoft.WindowsTerminal_&amp;lt;versionNumber&amp;gt;.msixbundle&lt;/code&gt; file from the &lt;strong&gt;Assets&lt;/strong&gt; section. To install the app, you can simply double-click on the &lt;code&gt;.msixbundle&lt;/code&gt; file, and the app installer should automatically run. If that fails for any reason, you can try the following command at a PowerShell prompt:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# NOTE: If you are using PowerShell 7+, please run&#xA;# Import-Module Appx -UseWindowsPowerShell&#xA;# before using Add-AppxPackage.&#xA;&#xA;Add-AppxPackage Microsoft.WindowsTerminal_&amp;lt;versionNumber&amp;gt;.msixbundle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;🔴 Note: If you install Terminal manually:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Terminal will not auto-update when new builds are released so you will need to regularly install the latest Terminal release to receive all the latest fixes and improvements!&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Via Windows Package Manager CLI (aka winget)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/winget-cli&#34;&gt;winget&lt;/a&gt; users can download and install the latest Terminal release by installing the &lt;code&gt;Microsoft.WindowsTerminal&lt;/code&gt; package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;winget install --id=Microsoft.WindowsTerminal -e&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Via Chocolatey (unofficial)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chocolatey.org&#34;&gt;Chocolatey&lt;/a&gt; users can download and install the latest Terminal release by installing the &lt;code&gt;microsoft-windows-terminal&lt;/code&gt; package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco install microsoft-windows-terminal&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To upgrade Windows Terminal using Chocolatey, run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;choco upgrade microsoft-windows-terminal&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have any issues when installing/upgrading the package please go to the &lt;a href=&#34;https://chocolatey.org/packages/microsoft-windows-terminal&#34;&gt;Windows Terminal package page&lt;/a&gt; and follow the &lt;a href=&#34;https://chocolatey.org/docs/package-triage-process&#34;&gt;Chocolatey triage process&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Via Scoop (unofficial)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scoop.sh&#34;&gt;Scoop&lt;/a&gt; users can download and install the latest Terminal release by installing the &lt;code&gt;windows-terminal&lt;/code&gt; package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;scoop bucket add extras&#xA;scoop install windows-terminal&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To update Windows Terminal using Scoop, run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;scoop update windows-terminal&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have any issues when installing/updating the package, please search for or report the same on the &lt;a href=&#34;https://github.com/lukesampson/scoop-extras/issues&#34;&gt;issues page&lt;/a&gt; of Scoop Extras bucket repository.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Windows Terminal 2.0 Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;The plan for delivering Windows Terminal 2.0 &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/terminal/main/doc/terminal-v2-roadmap.md&#34;&gt;is described here&lt;/a&gt; and will be updated as the project proceeds.&lt;/p&gt; &#xA;&lt;h2&gt;Project Build Status&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;Build Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Terminal&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dev.azure.com/ms/terminal/_build?definitionId=136&#34;&gt;&lt;img src=&#34;https://dev.azure.com/ms/terminal/_apis/build/status/terminal%20CI?branchName=main&#34; alt=&#34;Terminal Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ColorTool&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://microsoft.visualstudio.com/_apis/public/build/definitions/c93e867a-8815-43c1-92c4-e7dd5404f1e1/17023/badge&#34; alt=&#34;Colortool Build Status&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Terminal &amp;amp; Console Overview&lt;/h2&gt; &#xA;&lt;p&gt;Please take a few minutes to review the overview below before diving into the code:&lt;/p&gt; &#xA;&lt;h3&gt;Windows Terminal&lt;/h3&gt; &#xA;&lt;p&gt;Windows Terminal is a new, modern, feature-rich, productive terminal application for command-line users. It includes many of the features most frequently requested by the Windows command-line community including support for tabs, rich text, globalization, configurability, theming &amp;amp; styling, and more.&lt;/p&gt; &#xA;&lt;p&gt;The Terminal will also need to meet our goals and measures to ensure it remains fast and efficient, and doesn&#39;t consume vast amounts of memory or power.&lt;/p&gt; &#xA;&lt;h3&gt;The Windows Console Host&lt;/h3&gt; &#xA;&lt;p&gt;The Windows Console host, &lt;code&gt;conhost.exe&lt;/code&gt;, is Windows&#39; original command-line user experience. It also hosts Windows&#39; command-line infrastructure and the Windows Console API server, input engine, rendering engine, user preferences, etc. The console host code in this repository is the actual source from which the &lt;code&gt;conhost.exe&lt;/code&gt; in Windows itself is built.&lt;/p&gt; &#xA;&lt;p&gt;Since taking ownership of the Windows command-line in 2014, the team added several new features to the Console, including background transparency, line-based selection, support for &lt;a href=&#34;https://en.wikipedia.org/wiki/ANSI_escape_code&#34;&gt;ANSI / Virtual Terminal sequences&lt;/a&gt;, &lt;a href=&#34;https://devblogs.microsoft.com/commandline/24-bit-color-in-the-windows-console/&#34;&gt;24-bit color&lt;/a&gt;, a &lt;a href=&#34;https://devblogs.microsoft.com/commandline/windows-command-line-introducing-the-windows-pseudo-console-conpty/&#34;&gt;Pseudoconsole (&#34;ConPTY&#34;)&lt;/a&gt;, and more.&lt;/p&gt; &#xA;&lt;p&gt;However, because Windows Console&#39;s primary goal is to maintain backward compatibility, we have been unable to add many of the features the community (and the team) have been wanting for the last several years including tabs, unicode text, and emoji.&lt;/p&gt; &#xA;&lt;p&gt;These limitations led us to create the new Windows Terminal.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can read more about the evolution of the command-line in general, and the Windows command-line specifically in &lt;a href=&#34;https://devblogs.microsoft.com/commandline/windows-command-line-backgrounder/&#34;&gt;this accompanying series of blog posts&lt;/a&gt; on the Command-Line team&#39;s blog.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Shared Components&lt;/h3&gt; &#xA;&lt;p&gt;While overhauling Windows Console, we modernized its codebase considerably, cleanly separating logical entities into modules and classes, introduced some key extensibility points, replaced several old, home-grown collections and containers with safer, more efficient &lt;a href=&#34;https://docs.microsoft.com/en-us/cpp/standard-library/stl-containers?view=vs-2019&#34;&gt;STL containers&lt;/a&gt;, and made the code simpler and safer by using Microsoft&#39;s &lt;a href=&#34;https://github.com/Microsoft/wil&#34;&gt;Windows Implementation Libraries - WIL&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This overhaul resulted in several of Console&#39;s key components being available for re-use in any terminal implementation on Windows. These components include a new DirectWrite-based text layout and rendering engine, a text buffer capable of storing both UTF-16 and UTF-8, a VT parser/emitter, and more.&lt;/p&gt; &#xA;&lt;h3&gt;Creating the new Windows Terminal&lt;/h3&gt; &#xA;&lt;p&gt;When we started planning the new Windows Terminal application, we explored and evaluated several approaches and technology stacks. We ultimately decided that our goals would be best met by continuing our investment in our C++ codebase, which would allow us to reuse several of the aforementioned modernized components in both the existing Console and the new Terminal. Further, we realized that this would allow us to build much of the Terminal&#39;s core itself as a reusable UI control that others can incorporate into their own applications.&lt;/p&gt; &#xA;&lt;p&gt;The result of this work is contained within this repo and delivered as the Windows Terminal application you can download from the Microsoft Store, or &lt;a href=&#34;https://github.com/microsoft/terminal/releases&#34;&gt;directly from this repo&#39;s releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;p&gt;For more information about Windows Terminal, you may find some of these resources useful and interesting:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devblogs.microsoft.com/commandline&#34;&gt;Command-Line Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devblogs.microsoft.com/commandline/windows-command-line-backgrounder/&#34;&gt;Command-Line Backgrounder Blog Series&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Windows Terminal Launch: &lt;a href=&#34;https://www.youtube.com/watch?v=8gw0rXPMMPE&amp;amp;list=PLEHMQNlPj-Jzh9DkNpqipDGCZZuOwrQwR&amp;amp;index=2&amp;amp;t=0s&#34;&gt;Terminal &#34;Sizzle Video&#34;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Windows Terminal Launch: &lt;a href=&#34;https://www.youtube.com/watch?v=KMudkRcwjCw&#34;&gt;Build 2019 Session&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run As Radio: &lt;a href=&#34;https://www.runasradio.com/Shows/Show/645&#34;&gt;Show 645 - Windows Terminal with Richard Turner&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Azure Devops Podcast: &lt;a href=&#34;http://azuredevopspodcast.clear-measure.com/kayla-cinnamon-and-rich-turner-on-devops-on-the-windows-terminal-team-episode-54&#34;&gt;Episode 54 - Kayla Cinnamon and Rich Turner on DevOps on the Windows Terminal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Microsoft Ignite 2019 Session: &lt;a href=&#34;https://myignite.techcommunity.microsoft.com/sessions/81329?source=sessions&#34;&gt;The Modern Windows Command Line: Windows Terminal - BRK3321&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;I built and ran the new Terminal, but it looks just like the old console&lt;/h3&gt; &#xA;&lt;p&gt;Cause: You&#39;re launching the incorrect solution in Visual Studio.&lt;/p&gt; &#xA;&lt;p&gt;Solution: Make sure you&#39;re building &amp;amp; deploying the &lt;code&gt;CascadiaPackage&lt;/code&gt; project in Visual Studio.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠ Note: &lt;code&gt;OpenConsole.exe&lt;/code&gt; is just a locally-built &lt;code&gt;conhost.exe&lt;/code&gt;, the classic Windows Console that hosts Windows&#39; command-line infrastructure. OpenConsole is used by Windows Terminal to connect to and communicate with command-line applications (via &lt;a href=&#34;https://devblogs.microsoft.com/commandline/windows-command-line-introducing-the-windows-pseudo-console-conpty/&#34;&gt;ConPty&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;All project documentation is located at &lt;a href=&#34;https://aka.ms/terminal-docs&#34;&gt;aka.ms/terminal-docs&lt;/a&gt;. If you would like to contribute to the documentation, please submit a pull request on the &lt;a href=&#34;https://github.com/MicrosoftDocs/terminal&#34;&gt;Windows Terminal Documentation repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We are excited to work alongside you, our amazing community, to build and enhance Windows Terminal!&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;BEFORE you start work on a feature/fix&lt;/strong&gt;&lt;/em&gt;, please read &amp;amp; follow our &lt;a href=&#34;https://github.com/microsoft/terminal/raw/main/CONTRIBUTING.md&#34;&gt;Contributor&#39;s Guide&lt;/a&gt; to help avoid any wasted or duplicate effort.&lt;/p&gt; &#xA;&lt;h2&gt;Communicating with the Team&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to communicate with the team is via GitHub issues.&lt;/p&gt; &#xA;&lt;p&gt;Please file new issues, feature requests and suggestions, but &lt;strong&gt;DO search for similar open/closed pre-existing issues before creating a new issue.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you would like to ask a question that you feel doesn&#39;t warrant an issue (yet), please reach out to us via Twitter:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Kayla Cinnamon, Program Manager: &lt;a href=&#34;https://twitter.com/cinnamon_msft&#34;&gt;@cinnamon_msft&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dustin Howett, Engineering Lead: &lt;a href=&#34;https://twitter.com/DHowett&#34;&gt;@dhowett&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mike Griese, Senior Developer: &lt;a href=&#34;https://twitter.com/zadjii&#34;&gt;@zadjii&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Carlos Zamora, Developer: &lt;a href=&#34;https://twitter.com/cazamor_msft&#34;&gt;@cazamor_msft&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pankaj Bhojwani, Developer&lt;/li&gt; &#xA; &lt;li&gt;Leonard Hecker, Developer: &lt;a href=&#34;https://twitter.com/LeonardHecker&#34;&gt;@LeonardHecker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developer Guidance&lt;/h2&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You must be running Windows 10 2004 (build &amp;gt;= 10.0.19041.0) or later to run Windows Terminal&lt;/li&gt; &#xA; &lt;li&gt;You must &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/uwp/get-started/enable-your-device-for-development&#34;&gt;enable Developer Mode in the Windows Settings app&lt;/a&gt; to locally install and run Windows Terminal&lt;/li&gt; &#xA; &lt;li&gt;You must have &lt;a href=&#34;https://github.com/PowerShell/PowerShell/releases/latest&#34;&gt;PowerShell 7 or later&lt;/a&gt; installed&lt;/li&gt; &#xA; &lt;li&gt;You must have the &lt;a href=&#34;https://developer.microsoft.com/en-us/windows/downloads/windows-sdk/&#34;&gt;Windows 11 (10.0.22000.0) SDK&lt;/a&gt; installed&lt;/li&gt; &#xA; &lt;li&gt;You must have at least &lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt;VS 2019&lt;/a&gt; installed&lt;/li&gt; &#xA; &lt;li&gt;You must install the following Workloads via the VS Installer. Note: Opening the solution in VS 2019 will &lt;a href=&#34;https://devblogs.microsoft.com/setup/configure-visual-studio-across-your-organization-with-vsconfig/&#34;&gt;prompt you to install missing components automatically&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Desktop Development with C++&lt;/li&gt; &#xA;   &lt;li&gt;Universal Windows Platform Development&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;The following Individual Components&lt;/strong&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;C++ (v142) Universal Windows Platform Tools&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;You must install the &lt;a href=&#34;https://docs.microsoft.com/dotnet/framework/install/guide-for-developers#to-install-the-net-framework-developer-pack-or-targeting-pack&#34;&gt;.NET Framework Targeting Pack&lt;/a&gt; to build test projects&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building the Code&lt;/h2&gt; &#xA;&lt;p&gt;This repository uses &lt;a href=&#34;https://git-scm.com/book/en/v2/Git-Tools-Submodules&#34;&gt;git submodules&lt;/a&gt; for some of its dependencies. To make sure submodules are restored or updated, be sure to run the following prior to building:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git submodule update --init --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;OpenConsole.sln may be built from within Visual Studio or from the command-line using a set of convenience scripts &amp;amp; tools in the &lt;strong&gt;/tools&lt;/strong&gt; directory:&lt;/p&gt; &#xA;&lt;h3&gt;Building in PowerShell&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Import-Module .\tools\OpenConsole.psm1&#xA;Set-MsBuildDevEnvironment&#xA;Invoke-OpenConsoleBuild&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building in Cmd&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;.\tools\razzle.cmd&#xA;bcz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running &amp;amp; Debugging&lt;/h2&gt; &#xA;&lt;p&gt;To debug the Windows Terminal in VS, right click on &lt;code&gt;CascadiaPackage&lt;/code&gt; (in the Solution Explorer) and go to properties. In the Debug menu, change &#34;Application process&#34; and &#34;Background task process&#34; to &#34;Native Only&#34;.&lt;/p&gt; &#xA;&lt;p&gt;You should then be able to build &amp;amp; debug the Terminal project by hitting &lt;kbd&gt;F5&lt;/kbd&gt;. Make sure to select either the &#34;x64&#34; or the &#34;x86&#34; platform - the Terminal doesn&#39;t build for &#34;Any Cpu&#34; (because the Terminal is a C++ application, not a C# one).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;👉 You will &lt;em&gt;not&lt;/em&gt; be able to launch the Terminal directly by running the WindowsTerminal.exe. For more details on why, see &lt;a href=&#34;https://github.com/microsoft/terminal/issues/926&#34;&gt;#926&lt;/a&gt;, &lt;a href=&#34;https://github.com/microsoft/terminal/issues/4043&#34;&gt;#4043&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Coding Guidance&lt;/h3&gt; &#xA;&lt;p&gt;Please review these brief docs below about our coding practices.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;👉 If you find something missing from these docs, feel free to contribute to any of our documentation files anywhere in the repository (or write some new ones!)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This is a work in progress as we learn what we&#39;ll need to provide people in order to be effective contributors to our project.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/terminal/raw/main/doc/STYLE.md&#34;&gt;Coding Style&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/terminal/raw/main/doc/ORGANIZATION.md&#34;&gt;Code Organization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/terminal/raw/main/doc/EXCEPTIONS.md&#34;&gt;Exceptions in our legacy codebase&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/terminal/raw/main/doc/WIL.md&#34;&gt;Helpful smart pointers and macros for interfacing with Windows in WIL&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dolphin-emu/dolphin</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/dolphin-emu/dolphin</id>
    <link href="https://github.com/dolphin-emu/dolphin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dolphin is a GameCube / Wii emulator, allowing you to play games for these two platforms on PC with improvements.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dolphin - A GameCube and Wii Emulator&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dolphin-emu.org/&#34;&gt;Homepage&lt;/a&gt; | &lt;a href=&#34;https://github.com/dolphin-emu/dolphin&#34;&gt;Project Site&lt;/a&gt; | &lt;a href=&#34;https://dolphin.ci&#34;&gt;Buildbot&lt;/a&gt; | &lt;a href=&#34;https://forums.dolphin-emu.org/&#34;&gt;Forums&lt;/a&gt; | &lt;a href=&#34;https://wiki.dolphin-emu.org/&#34;&gt;Wiki&lt;/a&gt; | &lt;a href=&#34;https://bugs.dolphin-emu.org/projects/emulator/issues&#34;&gt;Issue Tracker&lt;/a&gt; | &lt;a href=&#34;https://github.com/dolphin-emu/dolphin/raw/master/Contributing.md&#34;&gt;Coding Style&lt;/a&gt; | &lt;a href=&#34;https://www.transifex.com/projects/p/dolphin-emu/&#34;&gt;Transifex Page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Dolphin is an emulator for running GameCube and Wii games on Windows, Linux, macOS, and recent Android devices. It&#39;s licensed under the terms of the GNU General Public License, version 2 or later (GPLv2+).&lt;/p&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://dolphin-emu.org/docs/faq/&#34;&gt;FAQ&lt;/a&gt; before using Dolphin.&lt;/p&gt; &#xA;&lt;h2&gt;System Requirements&lt;/h2&gt; &#xA;&lt;h3&gt;Desktop&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OS &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Windows (10 or higher).&lt;/li&gt; &#xA;   &lt;li&gt;Linux.&lt;/li&gt; &#xA;   &lt;li&gt;macOS (10.13 High Sierra or higher).&lt;/li&gt; &#xA;   &lt;li&gt;Unix-like systems other than Linux are not officially supported but might work.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Processor &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A CPU with SSE2 support.&lt;/li&gt; &#xA;   &lt;li&gt;A modern CPU (3 GHz and Dual Core, not older than 2008) is highly recommended.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Graphics &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A reasonably modern graphics card (Direct3D 11.1 / OpenGL 3.3).&lt;/li&gt; &#xA;   &lt;li&gt;A graphics card that supports Direct3D 11.1 / OpenGL 4.4 is recommended.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OS &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Android (5.0 Lollipop or higher).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Processor &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A processor with support for 64-bit applications (either ARMv8 or x86-64).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Graphics &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A graphics processor that supports OpenGL ES 3.0 or higher. Performance varies heavily with &lt;a href=&#34;https://dolphin-emu.org/blog/2013/09/26/dolphin-emulator-and-opengl-drivers-hall-fameshame/&#34;&gt;driver quality&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;A graphics processor that supports standard desktop OpenGL features is recommended for best performance.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Dolphin can only be installed on devices that satisfy the above requirements. Attempting to install on an unsupported device will fail and display an error message.&lt;/p&gt; &#xA;&lt;h2&gt;Building for Windows&lt;/h2&gt; &#xA;&lt;p&gt;Use the solution file &lt;code&gt;Source/dolphin-emu.sln&lt;/code&gt; to build Dolphin on Windows. Visual Studio 2022 17.2 or later is a hard requirement. Other compilers might be able to build Dolphin on Windows but have not been tested and are not recommended to be used. Git and Windows 11 SDK must be installed when building.&lt;/p&gt; &#xA;&lt;p&gt;Make sure to pull submodules before building:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git submodule update --init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &#34;Release&#34; solution configuration includes performance optimizations for the best user experience but complicates debugging Dolphin. The &#34;Debug&#34; solution configuration is significantly slower, more verbose and less permissive but makes debugging Dolphin easier.&lt;/p&gt; &#xA;&lt;p&gt;An installer can be created by using the &lt;code&gt;Installer.nsi&lt;/code&gt; script in the Installer directory. This will require the Nullsoft Scriptable Install System (NSIS) to be installed. Creating an installer is not necessary to run Dolphin since the Binary directory contains a working Dolphin distribution.&lt;/p&gt; &#xA;&lt;h2&gt;Building for Linux and macOS&lt;/h2&gt; &#xA;&lt;p&gt;Dolphin requires &lt;a href=&#34;https://cmake.org/&#34;&gt;CMake&lt;/a&gt; for systems other than Windows. Many libraries are bundled with Dolphin and used if they&#39;re not installed on your system. CMake will inform you if a bundled library is used or if you need to install any missing packages yourself.&lt;/p&gt; &#xA;&lt;p&gt;Make sure to pull submodules before building:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git submodule update --init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;macOS Build Steps:&lt;/h3&gt; &#xA;&lt;p&gt;A binary supporting a single architecture can be built using the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;mkdir build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cmake ..&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;An application bundle will be created in &lt;code&gt;./Binaries&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A script is also provided to build universal binaries supporting both x64 and ARM in the same application bundle using the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;mkdir build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;python ../BuildMacOSUniversalBinary.py&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Universal binaries will be available in the &lt;code&gt;universal&lt;/code&gt; folder&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Doing this is more complex as it requires installation of library dependencies for both x64 and ARM (or universal library equivalents) and may require specifying additional arguments to point to relevant library locations. Execute BuildMacOSUniversalBinary.py --help for more details.&lt;/p&gt; &#xA;&lt;h3&gt;Linux Global Build Steps:&lt;/h3&gt; &#xA;&lt;p&gt;To install to your system.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;mkdir build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cmake ..&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo make install&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Linux Local Build Steps:&lt;/h3&gt; &#xA;&lt;p&gt;Useful for development as root access is not required.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;mkdir Build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd Build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cmake .. -DLINUX_LOCAL_DEV=true&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ln -s ../../Data/Sys Binaries/&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Linux Portable Build Steps:&lt;/h3&gt; &#xA;&lt;p&gt;Can be stored on external storage and used on different Linux systems. Or useful for having multiple distinct Dolphin setups for testing/development/TAS.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;mkdir Build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd Build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cmake .. -DLINUX_LOCAL_DEV=true&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cp -r ../Data/Sys/ Binaries/&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;touch Binaries/portable.txt&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Building for Android&lt;/h2&gt; &#xA;&lt;p&gt;These instructions assume familiarity with Android development. If you do not have an Android dev environment set up, see &lt;a href=&#34;https://raw.githubusercontent.com/dolphin-emu/dolphin/master/AndroidSetup.md&#34;&gt;AndroidSetup.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Make sure to pull submodules before building:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git submodule update --init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If using Android Studio, import the Gradle project located in &lt;code&gt;./Source/Android&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Android apps are compiled using a build system called Gradle. Dolphin&#39;s native component, however, is compiled using CMake. The Gradle script will attempt to run a CMake build automatically while building the Java code.&lt;/p&gt; &#xA;&lt;h2&gt;Uninstalling&lt;/h2&gt; &#xA;&lt;p&gt;When Dolphin has been installed with the NSIS installer, you can uninstall Dolphin like any other Windows application.&lt;/p&gt; &#xA;&lt;p&gt;Linux users can run &lt;code&gt;cat install_manifest.txt | xargs -d &#39;\n&#39; rm&lt;/code&gt; as root from the build directory to uninstall Dolphin from their system.&lt;/p&gt; &#xA;&lt;p&gt;macOS users can simply delete Dolphin.app to uninstall it.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, you&#39;ll want to remove the global user directory (see below to see where it&#39;s stored) if you don&#39;t plan to reinstall Dolphin.&lt;/p&gt; &#xA;&lt;h2&gt;Command Line Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Usage: Dolphin [-h] [-d] [-l] [-e &amp;lt;str&amp;gt;] [-b] [-v &amp;lt;str&amp;gt;] [-a &amp;lt;str&amp;gt;]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;-h, --help Show this help message&lt;/li&gt; &#xA; &lt;li&gt;-d, --debugger Show the debugger pane and additional View menu options&lt;/li&gt; &#xA; &lt;li&gt;-l, --logger Open the logger&lt;/li&gt; &#xA; &lt;li&gt;-e, --exec=&#xA;  &lt;str&gt;&#xA;    Load the specified file (DOL,ELF,WAD,GCM,ISO)&#xA;  &lt;/str&gt;&lt;/li&gt; &#xA; &lt;li&gt;-b, --batch Exit Dolphin with emulator&lt;/li&gt; &#xA; &lt;li&gt;-v, --video_backend=&#xA;  &lt;str&gt;&#xA;    Specify a video backend&#xA;  &lt;/str&gt;&lt;/li&gt; &#xA; &lt;li&gt;-a, --audio_emulation=&#xA;  &lt;str&gt;&#xA;    Low level (LLE) or high level (HLE) audio&#xA;  &lt;/str&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Available DSP emulation engines are HLE (High Level Emulation) and LLE (Low Level Emulation). HLE is faster but less accurate whereas LLE is slower but close to perfect. Note that LLE has two submodes (Interpreter and Recompiler) but they cannot be selected from the command line.&lt;/p&gt; &#xA;&lt;p&gt;Available video backends are &#34;D3D&#34; and &#34;D3D12&#34; (they are only available on Windows), &#34;OGL&#34;, and &#34;Vulkan&#34;. There&#39;s also &#34;Null&#34;, which will not render anything, and &#34;Software Renderer&#34;, which uses the CPU for rendering and is intended for debugging purposes only.&lt;/p&gt; &#xA;&lt;h2&gt;Sys Files&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;wiitdb.txt&lt;/code&gt;: Wii title database from &lt;a href=&#34;https://www.gametdb.com/&#34;&gt;GameTDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;totaldb.dsy&lt;/code&gt;: Database of symbols (for devs only)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GC/font_western.bin&lt;/code&gt;: font dumps&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GC/font_japanese.bin&lt;/code&gt;: font dumps&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GC/dsp_coef.bin&lt;/code&gt;: DSP dumps&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GC/dsp_rom.bin&lt;/code&gt;: DSP dumps&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Wii/clientca.pem&lt;/code&gt;: Wii network certificate&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Wii/clientcakey.pem&lt;/code&gt;: Wii network certificate key&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Wii/rootca.pem&lt;/code&gt;: Wii network certificate issuer / CA&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The DSP dumps included with Dolphin have been written from scratch and do not contain any copyrighted material. They should work for most purposes, however some games implement copy protection by checksumming the dumps. You will need to dump the DSP files from a console and replace the default dumps if you want to fix those issues.&lt;/p&gt; &#xA;&lt;p&gt;Wii network certificates must be extracted from a Wii IOS. A guide for that can be found &lt;a href=&#34;https://wiki.dolphin-emu.org/index.php?title=Wii_Network_Guide&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Folder Structure&lt;/h2&gt; &#xA;&lt;p&gt;These folders are installed read-only and should not be changed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;GameSettings&lt;/code&gt;: per-game default settings database&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GC&lt;/code&gt;: DSP and font dumps&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Shaders&lt;/code&gt;: post-processing shaders&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Themes&lt;/code&gt;: icon themes for GUI&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Resources&lt;/code&gt;: icons that are theme-agnostic&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Wii&lt;/code&gt;: default Wii NAND contents&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Packaging and udev&lt;/h2&gt; &#xA;&lt;p&gt;The Data folder contains a udev rule file for the official GameCube controller adapter and the Mayflash DolphinBar. Package maintainers can use that file in their packages for Dolphin. Users compiling Dolphin on Linux can also just copy the file to their udev rules folder.&lt;/p&gt; &#xA;&lt;h2&gt;User Folder Structure&lt;/h2&gt; &#xA;&lt;p&gt;A number of user writeable directories are created for caching purposes or for allowing the user to edit their contents. On macOS and Linux these folders are stored in &lt;code&gt;~/Library/Application Support/Dolphin/&lt;/code&gt; and &lt;code&gt;~/.dolphin-emu&lt;/code&gt; respectively, but can be overwritten by setting the environment variable &lt;code&gt;DOLPHIN_EMU_USERPATH&lt;/code&gt;. On Windows the user directory is stored in the &lt;code&gt;My Documents&lt;/code&gt; folder by default, but there are various way to override this behavior:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Creating a file called &lt;code&gt;portable.txt&lt;/code&gt; next to the Dolphin executable will store the user directory in a local directory called &#34;User&#34; next to the Dolphin executable.&lt;/li&gt; &#xA; &lt;li&gt;If the registry string value &lt;code&gt;LocalUserConfig&lt;/code&gt; exists in &lt;code&gt;HKEY_CURRENT_USER/Software/Dolphin Emulator&lt;/code&gt; and has the value &lt;strong&gt;1&lt;/strong&gt;, Dolphin will always start in portable mode.&lt;/li&gt; &#xA; &lt;li&gt;If the registry string value &lt;code&gt;UserConfigPath&lt;/code&gt; exists in &lt;code&gt;HKEY_CURRENT_USER/Software/Dolphin Emulator&lt;/code&gt;, the user folders will be stored in the directory given by that string. The other two methods will be prioritized over this setting.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;List of user folders:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Cache&lt;/code&gt;: used to cache the ISO list&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Config&lt;/code&gt;: configuration files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Dump&lt;/code&gt;: anything dumped from Dolphin&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GameConfig&lt;/code&gt;: additional settings to be applied per-game&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GC&lt;/code&gt;: memory cards and system BIOS&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Load&lt;/code&gt;: custom textures&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Logs&lt;/code&gt;: logs, if enabled&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ScreenShots&lt;/code&gt;: screenshots taken via Dolphin&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;StateSaves&lt;/code&gt;: save states&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Wii&lt;/code&gt;: Wii NAND contents&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Custom Textures&lt;/h2&gt; &#xA;&lt;p&gt;Custom textures have to be placed in the user directory under &lt;code&gt;Load/Textures/[GameID]/&lt;/code&gt;. You can find the Game ID by right-clicking a game in the ISO list and selecting &#34;ISO Properties&#34;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PaddlePaddle/PaddleSpeech</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/PaddlePaddle/PaddleSpeech</id>
    <link href="https://github.com/PaddlePaddle/PaddleSpeech" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Easy-to-use Speech Toolkit including SOTA/Streaming ASR with punctuation, influential TTS with text frontend, Speaker Verification System and End-to-End Speech Simultaneous Translation.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/README_cn.md&#34;&gt;简体中文&lt;/a&gt;|English)&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/images/PaddleSpeech_logo.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-red.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/PaddlePaddle/PaddleSpeech?color=ffa&#34;&gt;&lt;/a&gt; &lt;a href=&#34;support os&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/os-linux%2C%20win%2C%20mac-pink.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/python-3.7+-aff.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/PaddlePaddle/PaddleSpeech?color=9ea&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech/commits&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/PaddlePaddle/PaddleSpeech?color=3af&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/PaddlePaddle/PaddleSpeech?color=9cc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/PaddlePaddle/PaddleSpeech?color=ccf&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/=https://pypi.org/project/paddlespeech/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dm/PaddleSpeech&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/=https://pypi.org/project/paddlespeech/&#34;&gt;&lt;img src=&#34;https://static.pepy.tech/badge/paddlespeech&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/spaces&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Spaces-blue&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h4&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#quick-start&#34;&gt; Quick Start &lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#quick-start-server&#34;&gt; Quick Start Server &lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#quick-start-streaming-server&#34;&gt; Quick Start Streaming Server&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#documents&#34;&gt; Documents &lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#model-list&#34;&gt; Models List &lt;/a&gt; | &lt;a href=&#34;https://aistudio.baidu.com/aistudio/education/group/info/25130&#34;&gt; AIStudio Courses &lt;/a&gt; | &lt;a href=&#34;https://arxiv.org/abs/2205.12007&#34;&gt; Paper &lt;/a&gt; | &lt;a href=&#34;https://gitee.com/paddlepaddle/PaddleSpeech&#34;&gt; Gitee &lt;/a&gt; &lt;/h4&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;PaddleSpeech&lt;/strong&gt; is an open-source toolkit on &lt;a href=&#34;https://github.com/PaddlePaddle/Paddle&#34;&gt;PaddlePaddle&lt;/a&gt; platform for a variety of critical tasks in speech and audio, with the state-of-art and influential models.&lt;/p&gt; &#xA;&lt;h5&gt;Speech Recognition&lt;/h5&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;table style=&#34;width:100%&#34;&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt; Input Audio &lt;/th&gt; &#xA;    &lt;th width=&#34;550&#34;&gt; Recognition Result &lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://paddlespeech.bj.bcebos.com/PaddleAudio/en.wav&#34; rel=&#34;nofollow&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/images/audio_icon.png&#34; width=&#34;200 style=&#34; max-width: 100%;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;/td&gt; &#xA;    &lt;td&gt;I knocked at the door on the ancient side of the building.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://paddlespeech.bj.bcebos.com/PaddleAudio/zh.wav&#34; rel=&#34;nofollow&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/images/audio_icon.png&#34; width=&#34;200&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;/td&gt; &#xA;    &lt;td&gt;我认为跑步最重要的就是给我带来了身体健康。&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;h5&gt;Speech Translation (English to Chinese)&lt;/h5&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;table style=&#34;width:100%&#34;&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt; Input Audio &lt;/th&gt; &#xA;    &lt;th width=&#34;550&#34;&gt; Translations Result &lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://paddlespeech.bj.bcebos.com/PaddleAudio/en.wav&#34; rel=&#34;nofollow&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/images/audio_icon.png&#34; width=&#34;200 style=&#34; max-width: 100%;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;/td&gt; &#xA;    &lt;td&gt;我 在 这栋 建筑 的 古老 门上 敲门。&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;h5&gt;Text-to-Speech&lt;/h5&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;table style=&#34;width:100%&#34;&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th width=&#34;550&#34;&gt; Input Text&lt;/th&gt; &#xA;    &lt;th&gt;Synthetic Audio&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Life was like a box of chocolates, you never know what you&#39;re gonna get.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://paddlespeech.bj.bcebos.com/Parakeet/docs/demos/tacotron2_ljspeech_waveflow_samples_0.2/sentence_1.wav&#34; rel=&#34;nofollow&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/images/audio_icon.png&#34; width=&#34;200&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;早上好，今天是2020/10/29，最低温度是-3°C。&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://paddlespeech.bj.bcebos.com/Parakeet/docs/demos/parakeet_espnet_fs2_pwg_demo/tn_g2p/parakeet/001.wav&#34; rel=&#34;nofollow&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/images/audio_icon.png&#34; width=&#34;200&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;季姬寂，集鸡，鸡即棘鸡。棘鸡饥叽，季姬及箕稷济鸡。鸡既济，跻姬笈，季姬忌，急咭鸡，鸡急，继圾几，季姬急，即籍箕击鸡，箕疾击几伎，伎即齑，鸡叽集几基，季姬急极屐击鸡，鸡既殛，季姬激，即记《季姬击鸡记》。&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://paddlespeech.bj.bcebos.com/Parakeet/docs/demos/jijiji.wav&#34; rel=&#34;nofollow&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/images/audio_icon.png&#34; width=&#34;200&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;For more synthesized audios, please refer to &lt;a href=&#34;https://paddlespeech.readthedocs.io/en/latest/tts/demo.html&#34;&gt;PaddleSpeech Text-to-Speech samples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Punctuation Restoration&lt;/h5&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;table style=&#34;width:100%&#34;&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th width=&#34;390&#34;&gt; Input Text &lt;/th&gt; &#xA;    &lt;th width=&#34;390&#34;&gt; Output Text &lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;今天的天气真不错啊你下午有空吗我想约你一起去吃饭&lt;/td&gt; &#xA;    &lt;td&gt;今天的天气真不错啊！你下午有空吗？我想约你一起去吃饭。&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;p&gt;Via the easy-to-use, efficient, flexible and scalable implementation, our vision is to empower both industrial application and academic research, including training, inference &amp;amp; testing modules, and deployment process. To be more specific, this toolkit features at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;📦 &lt;strong&gt;Ease of Use&lt;/strong&gt;: low barriers to install, &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#quick-start&#34;&gt;CLI&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#quick-start-server&#34;&gt;Server&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#quick-start-streaming-server&#34;&gt;Streaming Server&lt;/a&gt; is available to quick-start your journey.&lt;/li&gt; &#xA; &lt;li&gt;🏆 &lt;strong&gt;Align to the State-of-the-Art&lt;/strong&gt;: we provide high-speed and ultra-lightweight models, and also cutting-edge technology.&lt;/li&gt; &#xA; &lt;li&gt;🏆 &lt;strong&gt;Streaming ASR and TTS System&lt;/strong&gt;: we provide production ready streaming asr and streaming tts system.&lt;/li&gt; &#xA; &lt;li&gt;💯 &lt;strong&gt;Rule-based Chinese frontend&lt;/strong&gt;: our frontend contains Text Normalization and Grapheme-to-Phoneme (G2P, including Polyphone and Tone Sandhi). Moreover, we use self-defined linguistic rules to adapt Chinese context.&lt;/li&gt; &#xA; &lt;li&gt;📦 &lt;strong&gt;Varieties of Functions that Vitalize both Industrial and Academia&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;🛎️ &lt;em&gt;Implementation of critical audio tasks&lt;/em&gt;: this toolkit contains audio functions like Automatic Speech Recognition, Text-to-Speech Synthesis, Speaker Verfication, KeyWord Spotting, Audio Classification, and Speech Translation, etc.&lt;/li&gt; &#xA;   &lt;li&gt;🔬 &lt;em&gt;Integration of mainstream models and datasets&lt;/em&gt;: the toolkit implements modules that participate in the whole pipeline of the speech tasks, and uses mainstream datasets like LibriSpeech, LJSpeech, AIShell, CSMSC, etc. See also &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#model-list&#34;&gt;model list&lt;/a&gt; for more details.&lt;/li&gt; &#xA;   &lt;li&gt;🧩 &lt;em&gt;Cascaded models application&lt;/em&gt;: as an extension of the typical traditional audio tasks, we combine the workflows of the aforementioned tasks with other fields like Natural language processing (NLP) and Computer Vision (CV).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Recent Update&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;👑 2022.05.13: Release &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/asr/PPASR.md&#34;&gt;PP-ASR&lt;/a&gt;、&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/tts/PPTTS.md&#34;&gt;PP-TTS&lt;/a&gt;、&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/vpr/PPVPR.md&#34;&gt;PP-VPR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;👏🏻 2022.05.06: &lt;code&gt;Streaming ASR&lt;/code&gt; with &lt;code&gt;Punctuation Restoration&lt;/code&gt; and &lt;code&gt;Token Timestamp&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;👏🏻 2022.05.06: &lt;code&gt;Server&lt;/code&gt; is available for &lt;code&gt;Speaker Verification&lt;/code&gt;, and &lt;code&gt;Punctuation Restoration&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;👏🏻 2022.04.28: &lt;code&gt;Streaming Server&lt;/code&gt; is available for &lt;code&gt;Automatic Speech Recognition&lt;/code&gt; and &lt;code&gt;Text-to-Speech&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;👏🏻 2022.03.28: &lt;code&gt;Server&lt;/code&gt; is available for &lt;code&gt;Audio Classification&lt;/code&gt;, &lt;code&gt;Automatic Speech Recognition&lt;/code&gt; and &lt;code&gt;Text-to-Speech&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;👏🏻 2022.03.28: &lt;code&gt;CLI&lt;/code&gt; is available for &lt;code&gt;Speaker Verification&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;🤗 2021.12.14: &lt;a href=&#34;https://huggingface.co/spaces/KPatrick/PaddleSpeechASR&#34;&gt;ASR&lt;/a&gt; and &lt;a href=&#34;https://huggingface.co/spaces/KPatrick/PaddleSpeechTTS&#34;&gt;TTS&lt;/a&gt; Demos on Hugging Face Spaces are available!&lt;/li&gt; &#xA; &lt;li&gt;👏🏻 2021.12.10: &lt;code&gt;CLI&lt;/code&gt; is available for &lt;code&gt;Audio Classification&lt;/code&gt;, &lt;code&gt;Automatic Speech Recognition&lt;/code&gt;, &lt;code&gt;Speech Translation (English to Chinese)&lt;/code&gt; and &lt;code&gt;Text-to-Speech&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Community&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Scan the QR code below with your Wechat, you can access to official technical exchange group and get the bonus ( more than 20GB learning materials, such as papers, codes and videos ) and the live link of the lessons. Look forward to your participation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/23690325/169763015-cbd8e28d-602c-4723-810d-dbc6da49441e.jpg&#34; width=&#34;200&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;We strongly recommend our users to install PaddleSpeech in &lt;strong&gt;Linux&lt;/strong&gt; with &lt;em&gt;python&amp;gt;=3.7&lt;/em&gt;. Up to now, &lt;strong&gt;Linux&lt;/strong&gt; supports CLI for the all our tasks, &lt;strong&gt;Mac OSX&lt;/strong&gt; and &lt;strong&gt;Windows&lt;/strong&gt; only supports PaddleSpeech CLI for Audio Classification, Speech-to-Text and Text-to-Speech. To install &lt;code&gt;PaddleSpeech&lt;/code&gt;, please see &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/install.md&#34;&gt;installation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;quickstart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Developers can have a try of our models with &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/paddlespeech/cli/README.md&#34;&gt;PaddleSpeech Command Line&lt;/a&gt;. Change &lt;code&gt;--input&lt;/code&gt; to test your own audio/text.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Audio Classification&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;paddlespeech cls --input input.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Speaker Verification&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;paddlespeech vector --task spk --input input_16k.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Automatic Speech Recognition&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;paddlespeech asr --lang zh --input input_16k.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;web demo for Automatic Speech Recognition is integrated to &lt;a href=&#34;https://huggingface.co/spaces&#34;&gt;Huggingface Spaces&lt;/a&gt; with &lt;a href=&#34;https://github.com/gradio-app/gradio&#34;&gt;Gradio&lt;/a&gt;. See Demo: &lt;a href=&#34;https://huggingface.co/spaces/KPatrick/PaddleSpeechASR&#34;&gt;ASR Demo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Speech Translation&lt;/strong&gt; (English to Chinese) (not support for Mac and Windows now)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;paddlespeech st --input input_16k.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Text-to-Speech&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;paddlespeech tts --input &#34;你好，欢迎使用飞桨深度学习框架！&#34; --output output.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;web demo for Text to Speech is integrated to &lt;a href=&#34;https://huggingface.co/spaces&#34;&gt;Huggingface Spaces&lt;/a&gt; with &lt;a href=&#34;https://github.com/gradio-app/gradio&#34;&gt;Gradio&lt;/a&gt;. See Demo: &lt;a href=&#34;https://huggingface.co/spaces/KPatrick/PaddleSpeechTTS&#34;&gt;TTS Demo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Text Postprocessing&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Punctuation Restoration &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;paddlespeech text --task punc --input 今天的天气真不错啊你下午有空吗我想约你一起去吃饭&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Batch Process&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;echo -e &#34;1 欢迎光临。\n2 谢谢惠顾。&#34; | paddlespeech tts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Shell Pipeline&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ASR + Punctuation Restoration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;paddlespeech asr --input ./zh.wav | paddlespeech text --task punc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more command lines, please see: &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech/tree/develop/demos&#34;&gt;demos&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to try more functions like training and tuning, please have a look at &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/asr/quick_start.md&#34;&gt;Speech-to-Text Quick Start&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/tts/quick_start.md&#34;&gt;Text-to-Speech Quick Start&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;quickstartserver&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start Server&lt;/h2&gt; &#xA;&lt;p&gt;Developers can have a try of our speech server with &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/paddlespeech/server/README.md&#34;&gt;PaddleSpeech Server Command Line&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Start server&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;paddlespeech_server start --config_file ./paddlespeech/server/conf/application.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Access Speech Recognition Services&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;paddlespeech_client asr --server_ip 127.0.0.1 --port 8090 --input input_16k.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Access Text to Speech Services&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;paddlespeech_client tts --server_ip 127.0.0.1 --port 8090 --input &#34;您好，欢迎使用百度飞桨语音合成服务。&#34; --output output.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Access Audio Classification Services&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;paddlespeech_client cls --server_ip 127.0.0.1 --port 8090 --input input.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information about server command lines, please see: &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech/tree/develop/demos/speech_server&#34;&gt;speech server demos&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;quickstartstreamingserver&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start Streaming Server&lt;/h2&gt; &#xA;&lt;p&gt;Developers can have a try of &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/demos/streaming_asr_server/README.md&#34;&gt;streaming asr&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/demos/streaming_tts_server/README.md&#34;&gt;streaming tts&lt;/a&gt; server.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Start Streaming Speech Recognition Server&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;paddlespeech_server start --config_file ./demos/streaming_asr_server/conf/application.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Access Streaming Speech Recognition Services&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;paddlespeech_client asr_online --server_ip 127.0.0.1 --port 8090 --input input_16k.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Start Streaming Text to Speech Server&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;paddlespeech_server start --config_file ./demos/streaming_tts_server/conf/tts_online_application.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Access Streaming Text to Speech Services&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;paddlespeech_client tts_online --server_ip 127.0.0.1 --port 8092 --protocol http --input &#34;您好，欢迎使用百度飞桨语音合成服务。&#34; --output output.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information please see: &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/demos/streaming_asr_server/README.md&#34;&gt;streaming asr&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/demos/streaming_tts_server/README.md&#34;&gt;streaming tts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;ModelList&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Model List&lt;/h2&gt; &#xA;&lt;p&gt;PaddleSpeech supports a series of most popular models. They are summarized in &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/released_model.md&#34;&gt;released models&lt;/a&gt; and attached with available pretrained models.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;SpeechToText&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Speech-to-Text&lt;/strong&gt; contains &lt;em&gt;Acoustic Model&lt;/em&gt;, &lt;em&gt;Language Model&lt;/em&gt;, and &lt;em&gt;Speech Translation&lt;/em&gt;, with the following details:&lt;/p&gt; &#xA;&lt;table style=&#34;width:100%&#34;&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Speech-to-Text Module Type&lt;/th&gt; &#xA;   &lt;th&gt;Dataset&lt;/th&gt; &#xA;   &lt;th&gt;Model Type&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td rowspan=&#34;4&#34;&gt;Speech Recogination&lt;/td&gt; &#xA;   &lt;td rowspan=&#34;2&#34;&gt;Aishell&lt;/td&gt; &#xA;   &lt;td&gt;DeepSpeech2 RNN + Conv based Models&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/aishell/asr0&#34;&gt;deepspeech2-aishell&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Transformer based Attention Models &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/aishell/asr1&#34;&gt;u2.transformer.conformer-aishell&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; Librispeech&lt;/td&gt; &#xA;   &lt;td&gt;Transformer based Attention Models &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/librispeech/asr0&#34;&gt;deepspeech2-librispeech&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/librispeech/asr1&#34;&gt;transformer.conformer.u2-librispeech&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/librispeech/asr2&#34;&gt;transformer.conformer.u2-kaldi-librispeech&lt;/a&gt; &lt;/td&gt;  &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TIMIT&lt;/td&gt; &#xA;   &lt;td&gt;Unified Streaming &amp;amp; Non-streaming Two-pass&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/timit/asr1&#34;&gt; u2-timit&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Alignment&lt;/td&gt; &#xA;   &lt;td&gt;THCHS30&lt;/td&gt; &#xA;   &lt;td&gt;MFA&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/.examples/thchs30/align0&#34;&gt;mfa-thchs30&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td rowspan=&#34;1&#34;&gt;Language Model&lt;/td&gt; &#xA;   &lt;td colspan=&#34;2&#34;&gt;Ngram Language Model&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/other/ngram_lm&#34;&gt;kenlm&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td rowspan=&#34;2&#34;&gt;Speech Translation (English to Chinese)&lt;/td&gt; &#xA;   &lt;td rowspan=&#34;2&#34;&gt;TED En-Zh&lt;/td&gt; &#xA;   &lt;td&gt;Transformer + ASR MTL&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/ted_en_zh/st0&#34;&gt;transformer-ted&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FAT + Transformer + ASR MTL&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/ted_en_zh/st1&#34;&gt;fat-st-ted&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a name=&#34;TextToSpeech&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Text-to-Speech&lt;/strong&gt; in PaddleSpeech mainly contains three modules: &lt;em&gt;Text Frontend&lt;/em&gt;, &lt;em&gt;Acoustic Model&lt;/em&gt; and &lt;em&gt;Vocoder&lt;/em&gt;. Acoustic Model and Vocoder models are listed as follow:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt; Text-to-Speech Module Type &lt;/th&gt; &#xA;   &lt;th&gt; Model Type &lt;/th&gt; &#xA;   &lt;th&gt; Dataset &lt;/th&gt; &#xA;   &lt;th&gt; Example &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; Text Frontend &lt;/td&gt; &#xA;   &lt;td colspan=&#34;2&#34;&gt;   &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/other/tn&#34;&gt;tn&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/other/g2p&#34;&gt;g2p&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td rowspan=&#34;4&#34;&gt;Acoustic Model&lt;/td&gt; &#xA;   &lt;td&gt;Tacotron2&lt;/td&gt; &#xA;   &lt;td&gt;LJSpeech / CSMSC&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/ljspeech/tts0&#34;&gt;tacotron2-ljspeech&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/csmsc/tts0&#34;&gt;tacotron2-csmsc&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Transformer TTS&lt;/td&gt; &#xA;   &lt;td&gt;LJSpeech&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/ljspeech/tts1&#34;&gt;transformer-ljspeech&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SpeedySpeech&lt;/td&gt; &#xA;   &lt;td&gt;CSMSC&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/csmsc/tts2&#34;&gt;speedyspeech-csmsc&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FastSpeech2&lt;/td&gt; &#xA;   &lt;td&gt;LJSpeech / VCTK / CSMSC / AISHELL-3&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/ljspeech/tts3&#34;&gt;fastspeech2-ljspeech&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/vctk/tts3&#34;&gt;fastspeech2-vctk&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/csmsc/tts3&#34;&gt;fastspeech2-csmsc&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/aishell3/tts3&#34;&gt;fastspeech2-aishell3&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td rowspan=&#34;6&#34;&gt;Vocoder&lt;/td&gt; &#xA;   &lt;td&gt;WaveFlow&lt;/td&gt; &#xA;   &lt;td&gt;LJSpeech&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/ljspeech/voc0&#34;&gt;waveflow-ljspeech&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Parallel WaveGAN&lt;/td&gt; &#xA;   &lt;td&gt;LJSpeech / VCTK / CSMSC / AISHELL-3&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/ljspeech/voc1&#34;&gt;PWGAN-ljspeech&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/vctk/voc1&#34;&gt;PWGAN-vctk&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/csmsc/voc1&#34;&gt;PWGAN-csmsc&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/aishell3/voc1&#34;&gt;PWGAN-aishell3&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Multi Band MelGAN&lt;/td&gt; &#xA;   &lt;td&gt;CSMSC&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/csmsc/voc3&#34;&gt;Multi Band MelGAN-csmsc&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Style MelGAN&lt;/td&gt; &#xA;   &lt;td&gt;CSMSC&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/csmsc/voc4&#34;&gt;Style MelGAN-csmsc&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HiFiGAN&lt;/td&gt; &#xA;   &lt;td&gt;LJSpeech / VCTK / CSMSC / AISHELL-3&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/ljspeech/voc5&#34;&gt;HiFiGAN-ljspeech&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/vctk/voc5&#34;&gt;HiFiGAN-vctk&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/csmsc/voc5&#34;&gt;HiFiGAN-csmsc&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/aishell3/voc5&#34;&gt;HiFiGAN-aishell3&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WaveRNN&lt;/td&gt; &#xA;   &lt;td&gt;CSMSC&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/csmsc/voc6&#34;&gt;WaveRNN-csmsc&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td rowspan=&#34;3&#34;&gt;Voice Cloning&lt;/td&gt; &#xA;   &lt;td&gt;GE2E&lt;/td&gt; &#xA;   &lt;td&gt;Librispeech, etc.&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/other/ge2e&#34;&gt;ge2e&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GE2E + Tacotron2&lt;/td&gt; &#xA;   &lt;td&gt;AISHELL-3&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/aishell3/vc0&#34;&gt;ge2e-tacotron2-aishell3&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GE2E + FastSpeech2&lt;/td&gt; &#xA;   &lt;td&gt;AISHELL-3&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/aishell3/vc1&#34;&gt;ge2e-fastspeech2-aishell3&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a name=&#34;AudioClassification&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Audio Classification&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table style=&#34;width:100%&#34;&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt; Task &lt;/th&gt; &#xA;   &lt;th&gt; Dataset &lt;/th&gt; &#xA;   &lt;th&gt; Model Type &lt;/th&gt; &#xA;   &lt;th&gt; Example &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Audio Classification&lt;/td&gt; &#xA;   &lt;td&gt;ESC-50&lt;/td&gt; &#xA;   &lt;td&gt;PANN&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/esc50/cls0&#34;&gt;pann-esc50&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a name=&#34;SpeakerVerification&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Speaker Verification&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table style=&#34;width:100%&#34;&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt; Task &lt;/th&gt; &#xA;   &lt;th&gt; Dataset &lt;/th&gt; &#xA;   &lt;th&gt; Model Type &lt;/th&gt; &#xA;   &lt;th&gt; Example &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Speaker Verification&lt;/td&gt; &#xA;   &lt;td&gt;VoxCeleb12&lt;/td&gt; &#xA;   &lt;td&gt;ECAPA-TDNN&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/voxceleb/sv0&#34;&gt;ecapa-tdnn-voxceleb12&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a name=&#34;PunctuationRestoration&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Punctuation Restoration&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table style=&#34;width:100%&#34;&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt; Task &lt;/th&gt; &#xA;   &lt;th&gt; Dataset &lt;/th&gt; &#xA;   &lt;th&gt; Model Type &lt;/th&gt; &#xA;   &lt;th&gt; Example &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Punctuation Restoration&lt;/td&gt; &#xA;   &lt;td&gt;IWLST2012_zh&lt;/td&gt; &#xA;   &lt;td&gt;Ernie Linear&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/iwslt2012/punc0&#34;&gt;iwslt2012-punc0&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Documents&lt;/h2&gt; &#xA;&lt;p&gt;Normally, &lt;a href=&#34;https://paperswithcode.com/area/speech&#34;&gt;Speech SoTA&lt;/a&gt;, &lt;a href=&#34;https://paperswithcode.com/area/audio&#34;&gt;Audio SoTA&lt;/a&gt; and &lt;a href=&#34;https://paperswithcode.com/area/music&#34;&gt;Music SoTA&lt;/a&gt; give you an overview of the hot academic topics in the related area. To focus on the tasks in PaddleSpeech, you will find the following guidelines are helpful to grasp the core ideas.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/install.md&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#quickstart&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/demos/README.md&#34;&gt;Some Demos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tutorials &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/asr/quick_start.md&#34;&gt;Automatic Speech Recognition&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/asr/models_introduction.md&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/asr/data_preparation.md&#34;&gt;Data Preparation&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/asr/ngram_lm.md&#34;&gt;Ngram LM&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/tts/quick_start.md&#34;&gt;Text-to-Speech&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/tts/models_introduction.md&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/tts/advanced_usage.md&#34;&gt;Advanced Usage&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/tts/zh_text_frontend.md&#34;&gt;Chinese Rule Based Text Frontend&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://paddlespeech.readthedocs.io/en/latest/tts/demo.html&#34;&gt;Test Audio Samples&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Speaker Verification &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/demos/audio_searching/README.md&#34;&gt;Audio Searching&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/demos/speaker_verification/README.md&#34;&gt;Speaker Verification&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/demos/audio_tagging/README.md&#34;&gt;Audio Classification&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/demos/speech_translation/README.md&#34;&gt;Speech Translation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/demos/speech_server/README.md&#34;&gt;Speech Server&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/released_model.md&#34;&gt;Released Models&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#SpeechToText&#34;&gt;Speech-to-Text&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#TextToSpeech&#34;&gt;Text-to-Speech&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#AudioClassification&#34;&gt;Audio Classification&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#SpeakerVerification&#34;&gt;Speaker Verification&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#PunctuationRestoration&#34;&gt;Punctuation Restoration&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#Community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#contribution&#34;&gt;Welcome to contribute&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#License&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The Text-to-Speech module is originally called &lt;a href=&#34;https://github.com/PaddlePaddle/Parakeet&#34;&gt;Parakeet&lt;/a&gt;, and now merged with this repository. If you are interested in academic research about this task, please see &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech/tree/develop/docs/source/tts#overview&#34;&gt;TTS research overview&lt;/a&gt;. Also, &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech/raw/develop/docs/source/tts/models_introduction.md&#34;&gt;this document&lt;/a&gt; is a good guideline for the pipeline components.&lt;/p&gt; &#xA;&lt;h2&gt;⭐ Examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/JiehangXie/PaddleBoBo&#34;&gt;PaddleBoBo&lt;/a&gt;: Use PaddleSpeech TTS to generate virtual human voice.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;a href=&#34;https://www.bilibili.com/video/BV1cL411V71o?share_source=copy_web&#34;&gt;&lt;img src=&#34;https://ai-studio-static-online.cdn.bcebos.com/06fd746ab32042f398fb6f33f873e6869e846fe63c214596ae37860fe8103720&#34; width=&#34;500px&#34;&gt;&lt;/a&gt;&#xA;&lt;/div&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://paddlespeech.readthedocs.io/en/latest/demo_video.html&#34;&gt;PaddleSpeech Demo Video&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/jerryuhoo/VTuberTalk&#34;&gt;VTuberTalk&lt;/a&gt;: Use PaddleSpeech TTS and ASR to clone voice from videos.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/jerryuhoo/VTuberTalk/main/gui/gui.png&#34; width=&#34;500px&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;To cite PaddleSpeech for research, please use the following format.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;@inproceedings{zhang2022paddlespeech,&#xA;    title = {PaddleSpeech: An Easy-to-Use All-in-One Speech Toolkit},&#xA;    author = {Hui Zhang, Tian Yuan, Junkun Chen, Xintong Li, Renjie Zheng, Yuxin Huang, Xiaojie Chen, Enlei Gong, Zeyu Chen, Xiaoguang Hu, dianhai yu, Yanjun Ma, Liang Huang},&#xA;    booktitle = {Proceedings of the 2022 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies: Demonstrations},&#xA;    year = {2022},&#xA;    publisher = {Association for Computational Linguistics},&#xA;}&#xA;&#xA;@inproceedings{zheng2021fused,&#xA;  title={Fused acoustic and text encoding for multimodal bilingual pretraining and speech translation},&#xA;  author={Zheng, Renjie and Chen, Junkun and Ma, Mingbo and Huang, Liang},&#xA;  booktitle={International Conference on Machine Learning},&#xA;  pages={12736--12746},&#xA;  year={2021},&#xA;  organization={PMLR}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a name=&#34;contribution&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contribute to PaddleSpeech&lt;/h2&gt; &#xA;&lt;p&gt;You are warmly welcome to submit questions in &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech/discussions&#34;&gt;discussions&lt;/a&gt; and bug reports in &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech/issues&#34;&gt;issues&lt;/a&gt;! Also, we highly appreciate if you are willing to contribute to this project!&lt;/p&gt; &#xA;&lt;h3&gt;Contributors&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/zh794390558&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3038472?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Jackwaterveg&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/87408988?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/yt605155624&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/24568452?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kuke&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3064195?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xinghai-sun&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7038341?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pkuyym&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5782283?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/KPatr1ck&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/22954146?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/LittleChenCc&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/10339970?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/745165806&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/20623194?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Mingxue-Xu&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/92848346?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/chrisxu2016&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/18379485?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lfchener&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6771821?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/luotao1&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6836917?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wanghaoshuang&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7534971?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gongel&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/24390500?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mmglove&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/38800877?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iclementine&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/16222986?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ZeyuChen&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1371212?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/AK391&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/81195143?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qingqing01&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7845005?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ericxk&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4719594?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kvinwang&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6442159?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jiqiren11&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/82639260?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/AshishKarel&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/58069375?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/chesterkuo&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6285069?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tensor-tang&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/21351065?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hysunflower&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/52739577?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wwhu&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6081200?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lispc&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2833376?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jerryuhoo&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/24245709?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/harisankarh&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1307053?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Jackiexiao&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/18050469?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/limpidezza&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/71760778?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Many thanks to &lt;a href=&#34;https://github.com/yeyupiaoling&#34;&gt;yeyupiaoling&lt;/a&gt;/&lt;a href=&#34;https://github.com/yeyupiaoling/PPASR&#34;&gt;PPASR&lt;/a&gt;/&lt;a href=&#34;https://github.com/yeyupiaoling/PaddlePaddle-DeepSpeech&#34;&gt;PaddlePaddle-DeepSpeech&lt;/a&gt;/&lt;a href=&#34;https://github.com/yeyupiaoling/VoiceprintRecognition-PaddlePaddle&#34;&gt;VoiceprintRecognition-PaddlePaddle&lt;/a&gt;/&lt;a href=&#34;https://github.com/yeyupiaoling/AudioClassification-PaddlePaddle&#34;&gt;AudioClassification-PaddlePaddle&lt;/a&gt; for years of attention, constructive advice and great help.&lt;/li&gt; &#xA; &lt;li&gt;Many thanks to &lt;a href=&#34;https://github.com/mymagicpower&#34;&gt;mymagicpower&lt;/a&gt; for the Java implementation of ASR upon &lt;a href=&#34;https://github.com/mymagicpower/AIAS/tree/main/3_audio_sdks/asr_sdk&#34;&gt;short&lt;/a&gt; and &lt;a href=&#34;https://github.com/mymagicpower/AIAS/tree/main/3_audio_sdks/asr_long_audio_sdk&#34;&gt;long&lt;/a&gt; audio files.&lt;/li&gt; &#xA; &lt;li&gt;Many thanks to &lt;a href=&#34;https://github.com/JiehangXie&#34;&gt;JiehangXie&lt;/a&gt;/&lt;a href=&#34;https://github.com/JiehangXie/PaddleBoBo&#34;&gt;PaddleBoBo&lt;/a&gt; for developing Virtual Uploader(VUP)/Virtual YouTuber(VTuber) with PaddleSpeech TTS function.&lt;/li&gt; &#xA; &lt;li&gt;Many thanks to &lt;a href=&#34;https://github.com/745165806&#34;&gt;745165806&lt;/a&gt;/&lt;a href=&#34;https://github.com/745165806/PaddleSpeechTask&#34;&gt;PaddleSpeechTask&lt;/a&gt; for contributing Punctuation Restoration model.&lt;/li&gt; &#xA; &lt;li&gt;Many thanks to &lt;a href=&#34;https://github.com/745165806&#34;&gt;kslz&lt;/a&gt; for supplementary Chinese documents.&lt;/li&gt; &#xA; &lt;li&gt;Many thanks to &lt;a href=&#34;https://github.com/awmmmm&#34;&gt;awmmmm&lt;/a&gt; for contributing fastspeech2 aishell3 conformer pretrained model.&lt;/li&gt; &#xA; &lt;li&gt;Many thanks to &lt;a href=&#34;https://github.com/phecda-xu&#34;&gt;phecda-xu&lt;/a&gt;/&lt;a href=&#34;https://github.com/phecda-xu/PaddleDubbing&#34;&gt;PaddleDubbing&lt;/a&gt; for developing a dubbing tool with GUI based on PaddleSpeech TTS model.&lt;/li&gt; &#xA; &lt;li&gt;Many thanks to &lt;a href=&#34;https://github.com/jerryuhoo&#34;&gt;jerryuhoo&lt;/a&gt;/&lt;a href=&#34;https://github.com/jerryuhoo/VTuberTalk&#34;&gt;VTuberTalk&lt;/a&gt; for developing a GUI tool based on PaddleSpeech TTS and code for making datasets from videos based on PaddleSpeech ASR.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Besides, PaddleSpeech depends on a lot of open source repositories. See &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/reference.md&#34;&gt;references&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;PaddleSpeech is provided under the &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/LICENSE&#34;&gt;Apache-2.0 License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MaaAssistantArknights/MaaAssistantArknights</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/MaaAssistantArknights/MaaAssistantArknights</id>
    <link href="https://github.com/MaaAssistantArknights/MaaAssistantArknights" rel="alternate"></link>
    <summary type="html">&lt;p&gt;《明日方舟》小助手，自动刷图、智能基建换班，全日常一键长草！&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img alt=&#34;LOGO&#34; src=&#34;https://user-images.githubusercontent.com/18511905/148931479-23aef436-2fc1-4c1e-84c9-bae17be710a5.png&#34; width=&#34;360&#34; height=&#34;270/&#34;&gt; &#xA; &lt;h1&gt;MaaAssistantArknights&lt;/h1&gt; &#xA; &lt;br&gt; &#xA; &lt;div&gt; &#xA;  &lt;img alt=&#34;C++&#34; src=&#34;https://img.shields.io/badge/c++-17-%2300599C?logo=cplusplus&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;div&gt; &#xA;  &lt;img alt=&#34;platform&#34; src=&#34;https://img.shields.io/badge/platform-Windows%20%7C%20Linux%20%7C%20macOS-blueviolet&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;div&gt; &#xA;  &lt;img alt=&#34;license&#34; src=&#34;https://img.shields.io/github/license/MaaAssistantArknights/MaaAssistantArknights&#34;&gt; &#xA;  &lt;img alt=&#34;commit&#34; src=&#34;https://img.shields.io/github/commit-activity/m/MaaAssistantArknights/MaaAssistantArknights?color=%23ff69b4&#34;&gt; &#xA;  &lt;img alt=&#34;stars&#34; src=&#34;https://img.shields.io/github/stars/MaaAssistantArknights/MaaAssistantArknights?style=social&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;MAA 的意思是 MAA Assistant Arknights&lt;/p&gt; &#xA; &lt;p&gt;一款明日方舟游戏小助手&lt;/p&gt; &#xA; &lt;p&gt;基于图像识别技术，一键完成全部日常任务！&lt;/p&gt; &#xA; &lt;p&gt;绝赞更新中 ✿✿ヽ(°▽°)ノ✿&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;亮点功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;刷理智，掉落识别及上传 &lt;a href=&#34;https://penguin-stats.cn/&#34;&gt;企鹅物流&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;智能基建换班，自动计算干员效率，单设施内最优解&lt;/li&gt; &#xA; &lt;li&gt;自动公招，可选使用加急许可，一次全部刷完&lt;/li&gt; &#xA; &lt;li&gt;访问好友、收取信用及购物、领取日常奖励等。一键全日常自动长草！&lt;/li&gt; &#xA; &lt;li&gt;肉鸽全自动刷源石锭和蜡烛，自动识别干员及练度&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;新功能！导入作业 JSON 文件，自动抄作业！&lt;/strong&gt; &lt;a href=&#34;https://www.bilibili.com/video/BV14u411673q/&#34;&gt;视频演示&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;话不多说，看图！&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/18511905/148376809-a80537b7-5e97-4978-959e-afada28c03c3.png&#34; alt=&#34;image&#34;&gt;&lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/18511905/152695664-382dc0cd-de6c-4012-890f-456f697e8724.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;下载地址&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaAssistantArknights/releases/latest&#34;&gt;稳定版&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaAssistantArknights/releases&#34;&gt;测试版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;使用说明&lt;/h2&gt; &#xA;&lt;h3&gt;基本说明&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;请根据 &lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E6%A8%A1%E6%8B%9F%E5%99%A8%E6%94%AF%E6%8C%81.md&#34;&gt;模拟器支持情况&lt;/a&gt;，进行对应的操作。&lt;/li&gt; &#xA; &lt;li&gt;解压压缩包，到 &lt;strong&gt;没有中文或特殊符号&lt;/strong&gt; 的文件夹路径。&lt;/li&gt; &#xA; &lt;li&gt;开始运行后，除 &lt;code&gt;自动关机&lt;/code&gt; 外，所有设置均不可再修改。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;目前仅对 &lt;code&gt;16:9&lt;/code&gt; 分辨率支持较好，最低支持 &lt;code&gt;1280 * 720&lt;/code&gt;，更高不限。非 &lt;code&gt;16:9&lt;/code&gt; 分辨率可能会有奇奇怪怪的问题，正在进一步适配中_(:з」∠)_&lt;/p&gt; &#xA;&lt;p&gt;更多使用说明请参考 &lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D.md&#34;&gt;详细介绍&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;常见问题&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;软件一打开就闪退&lt;/li&gt; &#xA; &lt;li&gt;连接错误、不知道 adb 路径怎么填写&lt;/li&gt; &#xA; &lt;li&gt;识别错误/任务开始后一直不动、没有反应&lt;/li&gt; &#xA; &lt;li&gt;如何连接自定义端口&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;请参考 &lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.md&#34;&gt;常见问题&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;主要关联项目&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;全新 GUI: &lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaAsstElectronUI&#34;&gt;MaaAsstElectronUI&lt;/a&gt; （正在开发中，欢迎加入！）&lt;/li&gt; &#xA; &lt;li&gt;更新服务器: &lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaDownloadServer&#34;&gt;MaaDownloadServer&lt;/a&gt; （正在开发中，欢迎加入！）&lt;/li&gt; &#xA; &lt;li&gt;自动战斗作业服务器: &lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaCopilotServer&#34;&gt;MaaCopilotServer&lt;/a&gt; （正在开发中，欢迎加入！）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;致谢&lt;/h2&gt; &#xA;&lt;h3&gt;开源库&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;图像识别库：&lt;a href=&#34;https://github.com/opencv/opencv.git&#34;&gt;opencv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;文字识别库：&lt;a href=&#34;https://github.com/DayBreak-u/chineseocr_lite.git&#34;&gt;chineseocr_lite&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;文字识别库：&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR&#34;&gt;PaddleOCR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;关卡掉落识别：&lt;a href=&#34;https://github.com/penguin-statistics/recognizer&#34;&gt;企鹅物流识别&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;地图格子识别：&lt;a href=&#34;https://github.com/yuanyan3060/Arknights-Tile-Pos&#34;&gt;Arknights-Tile-Pos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C++ JSON库：&lt;a href=&#34;https://github.com/MistEO/meojson.git&#34;&gt;meojson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C++ 运算符解析器：&lt;a href=&#34;https://github.com/kimwalisch/calculator&#34;&gt;calculator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C++ base64编解码：&lt;a href=&#34;https://github.com/ReneNyffenegger/cpp-base64&#34;&gt;cpp-base64&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C++ 解压压缩库：&lt;a href=&#34;https://github.com/madler/zlib&#34;&gt;zlib&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C++ Gzip封装：&lt;a href=&#34;https://github.com/mapbox/gzip-hpp&#34;&gt;gzip-hpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WPF MVVW框架：&lt;a href=&#34;https://github.com/canton7/Stylet&#34;&gt;Stylet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WPF控件库：&lt;a href=&#34;https://github.com/HandyOrg/HandyControl&#34;&gt;HandyControl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C# JSON库: &lt;a href=&#34;https://github.com/JamesNK/Newtonsoft.Json&#34;&gt;Newtonsoft.Json&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;下载器：&lt;a href=&#34;https://github.com/aria2/aria2&#34;&gt;aria2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;数据源&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;公开招募数据：&lt;a href=&#34;https://www.bigfun.cn/tools/aktools/hr&#34;&gt;明日方舟工具箱&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;干员及基建数据：&lt;a href=&#34;http://prts.wiki/&#34;&gt;PRTS明日方舟中文WIKI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;关卡数据：&lt;a href=&#34;https://penguin-stats.cn/&#34;&gt;企鹅物流数据统计&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;材料数据：&lt;a href=&#34;https://github.com/yuanyan3060/Arknights-Bot-Resource&#34;&gt;明日方舟bot常用素材&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;贡献/参与者&lt;/h3&gt; &#xA;&lt;p&gt;感谢所有参与到开发/测试中的朋友们，是大家的帮助让 MAA 越来越好！ (*´▽｀)ノノ&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaAssistantArknights/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contributors-img.web.app/image?repo=MaaAssistantArknights/MaaAssistantArknights&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;开发相关&lt;/h2&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;直接使用 Visual Studio 2019 &lt;del&gt;或更高版本&lt;/del&gt; 打开 &lt;code&gt;MeoAssistantArknights.sln&lt;/code&gt; 即可，所有环境都是配置好的&lt;/p&gt; &#xA;&lt;h3&gt;Linux | macOS&lt;/h3&gt; &#xA;&lt;p&gt;请参考 &lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/Linux%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B.md&#34;&gt;Linux 编译教程&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;API&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/include/AsstCaller.h&#34;&gt;C 接口&lt;/a&gt;：&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/tools/TestCaller/main.cpp&#34;&gt;集成示例&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/src/Python/asst.py&#34;&gt;Python 接口&lt;/a&gt;：&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/src/Python/sample.py&#34;&gt;集成示例&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/src/Golang/maa/&#34;&gt;Golang 接口&lt;/a&gt;：&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/src/Golang/cli.go&#34;&gt;集成示例&lt;/a&gt;（已停止维护 orz）&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/src/dart/&#34;&gt;Dart 接口&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/src/Java/Maaj&#34;&gt;Java 接口&lt;/a&gt;：&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/src/Java/Maaj/src/main/java/com/iguigui/maaj/MaaJavaSample.java&#34;&gt;集成示例&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E9%9B%86%E6%88%90%E6%96%87%E6%A1%A3.md&#34;&gt;集成文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E5%9B%9E%E8%B0%83%E6%B6%88%E6%81%AF%E5%8D%8F%E8%AE%AE.md&#34;&gt;回调消息协议&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E4%BB%BB%E5%8A%A1%E6%B5%81%E7%A8%8B%E5%8D%8F%E8%AE%AE.md&#34;&gt;任务流程协议&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E6%88%98%E6%96%97%E6%B5%81%E7%A8%8B%E5%8D%8F%E8%AE%AE.md&#34;&gt;自动抄作业协议&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;对连 Git 都不熟悉的超级萌新，请看&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E5%86%99%E7%BB%99%E8%90%8C%E6%96%B0%E7%9A%84%E5%8F%91%E7%94%B5%E5%85%A8%E6%B5%81%E7%A8%8B.md&#34;&gt;写给萌新的发电全流程&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;声明&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本软件 logo 并非使用 AGPL 3.0 协议开源，画师 &lt;a href=&#34;https://weibo.com/u/3251357314&#34;&gt;耗毛&lt;/a&gt; 及软件全体开发者保留所有权利。不得以 AGPL 3.0 协议已授权为由在未经授权的情况下使用本软件 logo, 不得在未经授权的情况下将本软件 logo 用于任何商业用途。&lt;/li&gt; &#xA; &lt;li&gt;本软件开源、免费，仅供学习交流使用。若您遇到商家使用本软件进行代练并收费，可能是设备与时间等费用，产生的问题及后果与本软件无关。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;广告&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://live.bilibili.com/2808861&#34;&gt;B 站直播间&lt;/a&gt;：每晚直播敲代码，近期很长一段时间应该都是在写本软件~&lt;br&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=ypbzXcA2&#34;&gt;技术交流 &amp;amp; 吹水群&lt;/a&gt;：内卷地狱！（明日方舟弱相关）&lt;br&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=1giyMpPb&#34;&gt;自动战斗 JSON 作业分享群&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=JM9oCk3C&#34;&gt;开发者群&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;如果觉得软件对你有帮助，帮忙点个 Star 吧！~（网页最上方右上角的小星星），这就是对我们最大的支持了！&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>o3de/o3de</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/o3de/o3de</id>
    <link href="https://github.com/o3de/o3de" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open 3D Engine (O3DE) is an Apache 2.0-licensed multi-platform 3D engine that enables developers and content creators to build AAA games, cinema-quality 3D worlds, and high-fidelity simulations without any fees or commercial obligations.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;O3DE (Open 3D Engine)&lt;/h1&gt; &#xA;&lt;p&gt;O3DE (Open 3D Engine) is an open-source, real-time, multi-platform 3D engine that enables developers and content creators to build AAA games, cinema-quality 3D worlds, and high-fidelity simulations without any fees or commercial obligations.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;For information about contributing to Open 3D Engine, visit &lt;a href=&#34;https://o3de.org/docs/contributing/&#34;&gt;https://o3de.org/docs/contributing/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Download and Install&lt;/h2&gt; &#xA;&lt;p&gt;This repository uses Git LFS for storing large binary files.&lt;/p&gt; &#xA;&lt;p&gt;Verify you have Git LFS installed by running the following command to print the version number.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git lfs --version &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If Git LFS is not installed, download and run the installer from: &lt;a href=&#34;https://git-lfs.github.com/&#34;&gt;https://git-lfs.github.com/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Install Git LFS hooks&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;git lfs install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Clone the repository&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/o3de/o3de.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building the Engine&lt;/h2&gt; &#xA;&lt;h3&gt;Build requirements and redistributables&lt;/h3&gt; &#xA;&lt;p&gt;For the latest details and system requirements, refer to &lt;a href=&#34;https://o3de.org/docs/welcome-guide/requirements/&#34;&gt;System Requirements&lt;/a&gt; in the documentation.&lt;/p&gt; &#xA;&lt;h4&gt;Windows&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visual Studio 2019 16.9.2 minimum (All editions supported, including Community):&amp;nbsp;&lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt;https://visualstudio.microsoft.com/downloads/&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Check &lt;a href=&#34;https://o3de.org/docs/welcome-guide/requirements/&#34;&gt;System Requirements&lt;/a&gt; for other supported versions.&lt;/li&gt; &#xA;   &lt;li&gt;Install the following workloads: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Game Development with C++&lt;/li&gt; &#xA;     &lt;li&gt;MSVC v142 - VS 2019 C++ x64/x86&lt;/li&gt; &#xA;     &lt;li&gt;C++ 2019 redistributable update&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;CMake 3.20.5 minimum:&amp;nbsp;&lt;a href=&#34;https://cmake.org/download/#latest&#34;&gt;https://cmake.org/download/#latest&lt;/a&gt; (Release Candidate versions are not supported)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Optional&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Wwise audio SDK &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For the latest version requirements and setup instructions, refer to the &lt;a href=&#34;https://o3de.org/docs/user-guide/gems/reference/audio/wwise/audio-engine-wwise/&#34;&gt;Wwise Audio Engine Gem&lt;/a&gt; reference in the documentation.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Quick start engine setup&lt;/h3&gt; &#xA;&lt;p&gt;To set up a project-centric source engine, complete the following steps. For other build options, refer to &lt;a href=&#34;https://o3de.org/docs/welcome-guide/setup/setup-from-github/&#34;&gt;Setting up O3DE from GitHub&lt;/a&gt; in the documentation.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a writable folder to cache downloadable third-party packages. You can also use this to store other redistributable SDKs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the following redistributables:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Visual Studio and VC++ redistributable can be installed to any location.&lt;/li&gt; &#xA;   &lt;li&gt;CMake can be installed to any location, as long as it&#39;s available in the system path.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure the engine source into a solution using this command line, replacing &lt;code&gt;&amp;lt;your build path&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;your source path&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;3rdParty package path&amp;gt;&lt;/code&gt; with the paths you&#39;ve created:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cmake -B &amp;lt;your build path&amp;gt; -S &amp;lt;your source path&amp;gt; -G &#34;Visual Studio 16&#34; -DLY_3RDPARTY_PATH=&amp;lt;3rdParty package path&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cmake -B C:\o3de\build\windows -S C:\o3de -G &#34;Visual Studio 16&#34; -DLY_3RDPARTY_PATH=C:\o3de-packages&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Note: Do not use trailing slashes for the &amp;lt;3rdParty package path&amp;gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Alternatively, you can do this through the CMake GUI:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Start &lt;code&gt;cmake-gui.exe&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Select the local path of the repo under &#34;Where is the source code&#34;.&lt;/li&gt; &#xA;   &lt;li&gt;Select a path where to build binaries under &#34;Where to build the binaries&#34;.&lt;/li&gt; &#xA;   &lt;li&gt;Click &lt;strong&gt;Add Entry&lt;/strong&gt; and add a cache entry for the &amp;lt;3rdParty package path&amp;gt; folder you created, using the following values: &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Name:&lt;/strong&gt; LY_3RDPARTY_PATH&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; STRING&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Value:&lt;/strong&gt; &lt;code&gt;&amp;lt;3rdParty package path&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Click &lt;strong&gt;Configure&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Wait for the key values to populate. Update or add any additional fields that are needed for your project.&lt;/li&gt; &#xA;   &lt;li&gt;Click &lt;strong&gt;Generate&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Register the engine with this command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;scripts\o3de.bat register --this-engine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The configuration of the solution is complete. You are now ready to create a project and build the engine.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For more details on the steps above, refer to &lt;a href=&#34;https://o3de.org/docs/welcome-guide/setup/setup-from-github/&#34;&gt;Setting up O3DE from GitHub&lt;/a&gt; in the documentation.&lt;/p&gt; &#xA;&lt;h3&gt;Setting up new projects and building the engine&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;From the O3DE repo folder, set up a new project using the &lt;code&gt;o3de create-project&lt;/code&gt; command.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;scripts\o3de.bat create-project --project-path &amp;lt;your new project path&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure a solution for your project.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cmake -B &amp;lt;your project build path&amp;gt; -S &amp;lt;your new project source path&amp;gt; -G &#34;Visual Studio 16&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cmake -B C:\my-project\build\windows -S C:\my-project -G &#34;Visual Studio 16&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Note: Do not use trailing slashes for the &amp;lt;3rdParty cache path&amp;gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the project, Asset Processor, and Editor to binaries by running this command inside your project:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cmake --build &amp;lt;your project build path&amp;gt; --target &amp;lt;New Project Name&amp;gt;.GameLauncher Editor --config profile -- /m&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Note: Your project name used in the build target is the same as the directory name of your project.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This will compile after some time and binaries will be available in the project build path you&#39;ve specified, under &lt;code&gt;bin/profile&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For a complete tutorial on project configuration, see &lt;a href=&#34;https://o3de.org/docs/welcome-guide/create/creating-projects-using-cli/&#34;&gt;Creating Projects Using the Command Line Interface&lt;/a&gt; in the documentation.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;For terms please see the LICENSE*.TXT files at the root of this distribution.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>RPCS3/rpcs3</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/RPCS3/rpcs3</id>
    <link href="https://github.com/RPCS3/rpcs3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PS3 emulator/debugger&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RPCS3&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/nekotekina/nekotekina/_build?definitionId=4&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/nekotekina/nekotekina/_apis/build/status/RPCS3.rpcs3?branchName=master&#34; alt=&#34;Azure Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cirrus-ci.com/github/RPCS3/rpcs3&#34;&gt;&lt;img src=&#34;https://img.shields.io/cirrus/github/RPCS3/rpcs3?label=Cirrus%20CI%20(FreeBSD)&amp;amp;logo=cirrus-ci&#34; alt=&#34;Cirrus CI - Base Branch Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.me/rpcs3&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/272035812277878785?color=5865F2&amp;amp;label=RPCS3%20Discord&amp;amp;logo=discord&amp;amp;logoColor=white&#34; alt=&#34;RPCS3 discord server&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The world&#39;s first free and open-source PlayStation 3 emulator/debugger, written in C++ for Windows and Linux.&lt;/p&gt; &#xA;&lt;p&gt;You can find some basic information on our &lt;a href=&#34;https://rpcs3.net/&#34;&gt;&lt;strong&gt;website&lt;/strong&gt;&lt;/a&gt;. Game info is being populated on the &lt;a href=&#34;https://wiki.rpcs3.net/&#34;&gt;&lt;strong&gt;Wiki&lt;/strong&gt;&lt;/a&gt;. For discussion about this emulator, PS3 emulation, and game compatibility reports, please visit our &lt;a href=&#34;https://forums.rpcs3.net&#34;&gt;&lt;strong&gt;forums&lt;/strong&gt;&lt;/a&gt; and our &lt;a href=&#34;https://discord.me/RPCS3&#34;&gt;&lt;strong&gt;Discord server&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.patreon.com/Nekotekina&#34;&gt;&lt;strong&gt;Support Lead Developers Nekotekina and kd-11 on Patreon&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you want to help the project but do not code, the best way to help out is to test games and make bug reports. See:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rpcs3.net/quickstart&#34;&gt;Quickstart&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want to contribute as a developer, please take a look at the following pages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RPCS3/rpcs3/wiki/Coding-Style&#34;&gt;Coding Style&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RPCS3/rpcs3/wiki/Developer-Information&#34;&gt;Developer Information&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rpcs3.net/roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You should also contact any of the developers in the forums or in the Discord server to learn more about the current state of the emulator.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/RPCS3/rpcs3/master/BUILDING.md&#34;&gt;BUILDING.md&lt;/a&gt; for more information about how to setup an environment to build RPCS3.&lt;/p&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;Check our friendly &lt;a href=&#34;https://rpcs3.net/quickstart&#34;&gt;quickstart&lt;/a&gt; guide to make sure your computer meets the minimum system requirements to run RPCS3.&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t forget to have your graphics driver up to date and to install the &lt;a href=&#34;https://aka.ms/vs/16/release/VC_redist.x64.exe&#34;&gt;Visual C++ Redistributable Packages for Visual Studio 2019&lt;/a&gt; if you are a Windows user.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Most files are licensed under the terms of GNU GPL-2.0-only License; see LICENSE file for details. Some files may be licensed differently; check appropriate file headers for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>catchorg/Catch2</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/catchorg/Catch2</id>
    <link href="https://github.com/catchorg/Catch2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A modern, C++-native, test framework for unit-tests, TDD and BDD - using C++14, C++17 and later (C++11 support is in v2.x branch, and C++03 on the Catch1.x branch)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a id=&#34;top&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/catchorg/Catch2/devel/data/artwork/catch2-logo-small.png&#34; alt=&#34;Catch2 logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/catchorg/catch2/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/catchorg/catch2.svg?sanitize=true&#34; alt=&#34;Github Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/catchorg/Catch2/actions/workflows/linux-simple-builds.yml&#34;&gt;&lt;img src=&#34;https://github.com/catchorg/Catch2/actions/workflows/linux-simple-builds.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/catchorg/Catch2/actions/workflows/linux-other-builds.yml&#34;&gt;&lt;img src=&#34;https://github.com/catchorg/Catch2/actions/workflows/linux-other-builds.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/catchorg/Catch2/actions/workflows/mac-builds.yml&#34;&gt;&lt;img src=&#34;https://github.com/catchorg/Catch2/actions/workflows/mac-builds.yml/badge.svg?sanitize=true&#34; alt=&#34;MacOS build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/catchorg/catch2&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/catchorg/Catch2?svg=true&amp;amp;branch=devel&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/catchorg/Catch2&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/catchorg/Catch2/branch/devel/graph/badge.svg?sanitize=true&#34; alt=&#34;Code Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://godbolt.org/z/9x9qoM&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/try-online-blue.svg?sanitize=true&#34; alt=&#34;Try online&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/4CWS9zD&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-Chat!-brightgreen.svg?sanitize=true&#34; alt=&#34;Join the chat in Discord: https://discord.gg/4CWS9zD&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s the Catch2?&lt;/h2&gt; &#xA;&lt;p&gt;Catch2 is mainly a unit testing framework for C++, but it also provides basic micro-benchmarking features, and simple BDD macros.&lt;/p&gt; &#xA;&lt;p&gt;Catch2&#39;s main advantage is that using it is both simple and natural. Tests autoregister themselves and do not have to be named with valid identifiers, assertions look like normal C++ code, and sections provide a nice way to share set-up and tear-down code in tests.&lt;/p&gt; &#xA;&lt;h2&gt;Catch2 v3 is being developed!&lt;/h2&gt; &#xA;&lt;p&gt;You are on the &lt;code&gt;devel&lt;/code&gt; branch, where the next major version, v3, of Catch2 is being developed. As it is a significant rework, you will find that parts of this documentation are likely still stuck on v2.&lt;/p&gt; &#xA;&lt;p&gt;For stable (and documentation-matching) version of Catch2, &lt;a href=&#34;https://github.com/catchorg/Catch2/tree/v2.x&#34;&gt;go to the &lt;code&gt;v2.x&lt;/code&gt; branch&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For migrating from the v2 releases to v3, you should look at &lt;a href=&#34;https://raw.githubusercontent.com/catchorg/Catch2/devel/docs/migrate-v2-to-v3.md#top&#34;&gt;our documentation&lt;/a&gt;. It provides a simple guidelines on getting started, and collects most common migration problems.&lt;/p&gt; &#xA;&lt;h2&gt;How to use it&lt;/h2&gt; &#xA;&lt;p&gt;This documentation comprises these three parts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/catchorg/Catch2/devel/docs/why-catch.md#top&#34;&gt;Why do we need yet another C++ Test Framework?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/catchorg/Catch2/devel/docs/tutorial.md#top&#34;&gt;Tutorial&lt;/a&gt; - getting started&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/catchorg/Catch2/devel/docs/Readme.md#top&#34;&gt;Reference section&lt;/a&gt; - all the details&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;More&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Issues and bugs can be raised on the &lt;a href=&#34;https://github.com/catchorg/Catch2/issues&#34;&gt;Issue tracker on GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For discussion or questions please use &lt;a href=&#34;https://discord.gg/4CWS9zD&#34;&gt;our Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;See who else is using Catch2 in &lt;a href=&#34;https://raw.githubusercontent.com/catchorg/Catch2/devel/docs/opensource-users.md#top&#34;&gt;Open Source Software&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/catchorg/Catch2/devel/docs/commercial-users.md#top&#34;&gt;commercially&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>WasmEdge/WasmEdge</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/WasmEdge/WasmEdge</id>
    <link href="https://github.com/WasmEdge/WasmEdge" rel="alternate"></link>
    <summary type="html">&lt;p&gt;WasmEdge is a lightweight, high-performance, and extensible WebAssembly runtime for cloud native, edge, and decentralized applications. It powers serverless apps, embedded functions, microservices, smart contracts, and IoT devices.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/README-zh.md&#34;&gt;中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/README-zh-TW.md&#34;&gt;正體中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/docs/wasmedge-runtime-logo.png&#34; alt=&#34;WasmEdge Logo&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;WasmEdge is a lightweight, high-performance, and extensible WebAssembly runtime. It is &lt;a href=&#34;https://ieeexplore.ieee.org/document/9214403&#34;&gt;the fastest Wasm VM&lt;/a&gt; today. WasmEdge is an official sandbox project hosted by the &lt;a href=&#34;https://www.cncf.io/&#34;&gt;CNCF&lt;/a&gt;. Its &lt;a href=&#34;https://wasmedge.org/book/en/intro/use.html&#34;&gt;use cases&lt;/a&gt; include modern web application architectures (Isomorphic &amp;amp; Jamstack applications), microservices on the edge cloud, serverless SaaS APIs, embedded functions, smart contracts, and smart devices.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/WasmEdge/WasmEdge/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt; &lt;a href=&#34;https://codecov.io/gh/WasmEdge/WasmEdge&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/WasmEdge/WasmEdge/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/WasmEdge/WasmEdge/actions/workflows/codeql-analysis.yml&#34;&gt;&lt;img src=&#34;https://github.com/WasmEdge/WasmEdge/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&#34; alt=&#34;CodeQL&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2FWasmEdge%2FWasmEdge?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2FWasmEdge%2FWasmEdge.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/5059&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/5059/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;Quick start guides&lt;/h1&gt; &#xA;&lt;p&gt;🚀 &lt;a href=&#34;https://wasmedge.org/book/en/start/install.html&#34;&gt;Install&lt;/a&gt; WasmEdge &lt;br&gt; 🤖 &lt;a href=&#34;https://wasmedge.org/book/en/extend/build.html&#34;&gt;Build&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/docs/CONTRIBUTING.md&#34;&gt;contribute to&lt;/a&gt; WasmEdge &lt;br&gt; ⌨️ &lt;a href=&#34;https://wasmedge.org/book/en/index.html#webassembly-examples&#34;&gt;Run&lt;/a&gt; a standalone Wasm program or a &lt;a href=&#34;https://wasmedge.org/book/en/dev/js.html&#34;&gt;JavaScript program&lt;/a&gt; from CLI or &lt;a href=&#34;https://wasmedge.org/book/en/start/docker.html&#34;&gt;Docker&lt;/a&gt; &lt;br&gt; 🔌 Embed a Wasm function in your &lt;a href=&#34;https://wasmedge.org/book/en/embed/node.html&#34;&gt;Node.js&lt;/a&gt;, &lt;a href=&#34;https://wasmedge.org/book/en/embed/go.html&#34;&gt;Go&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/bindings/rust/&#34;&gt;Rust&lt;/a&gt;, or &lt;a href=&#34;https://wasmedge.org/book/en/embed/c.html&#34;&gt;C&lt;/a&gt; app &lt;br&gt; 🛠 Manage and orchestrate Wasm runtimes using &lt;a href=&#34;https://wasmedge.org/book/en/kubernetes.html&#34;&gt;Kubernetes&lt;/a&gt;, &lt;a href=&#34;https://wasmedge.org/book/en/frameworks/app/yomo.html&#34;&gt;data streaming frameworks&lt;/a&gt;, and &lt;a href=&#34;https://medium.com/ethereum-on-steroids/running-ethereum-smart-contracts-in-a-substrate-blockchain-56fbc27fc95a&#34;&gt;blockchains&lt;/a&gt; &lt;br&gt; 📚 &lt;strong&gt;&lt;a href=&#34;https://wasmedge.org/book/en/&#34;&gt;Check out our official documentation&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;The WasmEdge Runtime provides a well-defined execution sandbox for its contained WebAssembly bytecode program. The runtime offers isolation and protection for operating system resources (e.g., file system, sockets, environment variables, processes) and memory space. The most important use case for WasmEdge is to safely execute user-defined or community-contributed code as plug-ins in a software product (e.g., SaaS, software-defined vehicles, edge nodes, or even blockchain nodes). It enables third-party developers, vendors, suppliers, and community members to extend and customize the software product. &lt;strong&gt;&lt;a href=&#34;https://wasmedge.org/book/en/intro/use.html&#34;&gt;Learn more here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2010.07115&#34;&gt;A Lightweight Design for High-performance Serverless Computing&lt;/a&gt;, published on IEEE Software, Jan 2021. &lt;a href=&#34;https://arxiv.org/abs/2010.07115&#34;&gt;https://arxiv.org/abs/2010.07115&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.infoq.com/articles/arm-vs-x86-cloud-performance/&#34;&gt;Performance Analysis for Arm vs. x86 CPUs in the Cloud&lt;/a&gt;, published on infoQ.com, Jan 2021. &lt;a href=&#34;https://www.infoq.com/articles/arm-vs-x86-cloud-performance/&#34;&gt;https://www.infoq.com/articles/arm-vs-x86-cloud-performance/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.suborbital.dev/suborbital-wasmedge&#34;&gt;WasmEdge is the fastest WebAssembly Runtime in Suborbital Reactr test suite&lt;/a&gt;, Dec 2021&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;WasmEdge can run standard WebAssembly bytecode programs compiled from C/C++, Rust, Swift, AssemblyScript, or Kotlin source code. It &lt;a href=&#34;https://wasmedge.org/book/en/dev/js.html&#34;&gt;runs JavaScript&lt;/a&gt;, including 3rd party ES6, CJS, and NPM modules, in a secure, fast, lightweight, portable, and containerized sandbox. It also supports mixing of those languages (e.g., to &lt;a href=&#34;https://wasmedge.org/book/en/dev/js/rust.html&#34;&gt;use Rust to implement a JavaScript API&lt;/a&gt;), the &lt;a href=&#34;https://wasmedge.org/book/en/dev/js/fetch.html&#34;&gt;Fetch&lt;/a&gt; API, and &lt;a href=&#34;https://wasmedge.org/book/en/dev/js/ssr.html&#34;&gt;Server-side Rendering (SSR)&lt;/a&gt; functions on edge servers.&lt;/p&gt; &#xA;&lt;p&gt;WasmEdge supports all standard WebAssembly features and many proposed extensions. It also supports a number of extensions tailored for cloud-native and edge computing uses (e.g., the &lt;a href=&#34;https://wasmedge.org/book/en/dev/rust/networking.html&#34;&gt;WasmEdge network sockets&lt;/a&gt;, and the &lt;a href=&#34;https://wasmedge.org/book/en/dev/rust/tensorflow.html&#34;&gt;WasmEdge Tensorflow extension&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Learn more about &lt;a href=&#34;https://wasmedge.org/book/en/intro/features.html&#34;&gt;technical highlights&lt;/a&gt; of WasmEdge.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Integrations and management&lt;/h2&gt; &#xA;&lt;p&gt;WasmEdge and its contained wasm program can be started from the &lt;a href=&#34;https://wasmedge.org/book/en/index.html&#34;&gt;CLI&lt;/a&gt; as a new process, or from a existing process. If started from an existing process (e.g., from a running &lt;a href=&#34;https://wasmedge.org/book/en/embed/node.html&#34;&gt;Node.js&lt;/a&gt; or &lt;a href=&#34;https://wasmedge.org/book/en/embed/go.html&#34;&gt;Go&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/bindings/rust/wasmedge-rs&#34;&gt;Rust&lt;/a&gt; program), WasmEdge will simply run inside the process as a function. Currently, WasmEdge is not yet thread-safe. In order to use WasmEdge in your own application or cloud-native frameworks, please refer to the guides below.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wasmedge.org/book/en/embed.html&#34;&gt;Embed WasmEdge into a host application&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wasmedge.org/book/en/kubernetes.html&#34;&gt;Orchestrate and manage WasmEdge instances using container tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wasmedge.org/book/en/frameworks/mesh/dapr.html&#34;&gt;Run a WasmEdge app as a Dapr microservice&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wasmedge.org/book/en/frameworks/app/reactr.html&#34;&gt;Use Reactr to embed and extend WasmEdge functions in SaaS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Community&lt;/h1&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to contribute to the WasmEdge project, please refer to our &lt;a href=&#34;https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/docs/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; document for details. If you are looking for ideas, checkout our &lt;a href=&#34;https://github.com/WasmEdge/WasmEdge/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&#34;&gt;&#34;help wanted&#34; issues&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;If you have any questions, feel free to open a GitHub issue on a related project or to join the following channels:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mailing list: Send an email to &lt;a href=&#34;https://groups.google.com/g/wasmedge/&#34;&gt;WasmEdge@googlegroups.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Discord: Join the &lt;a href=&#34;https://discord.gg/h4KDyB8XTt&#34;&gt;WasmEdge Discord server&lt;/a&gt;!&lt;/li&gt; &#xA; &lt;li&gt;Slack: Join the #WasmEdge channel on the &lt;a href=&#34;https://slack.cncf.io/&#34;&gt;CNCF Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter: Follow @realwasmedge on &lt;a href=&#34;https://twitter.com/realwasmedge&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community Meeting&lt;/h2&gt; &#xA;&lt;p&gt;We host a monthly community meeting to showcase new features, demo new use cases, and a Q&amp;amp;A part. Everyone is welcome!&lt;/p&gt; &#xA;&lt;p&gt;Time: The first Tuesday of each month at 11PM Hong Kong Time/ 7AM PST.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.google.com/document/d/1iFlVl7R97Lze4RDykzElJGDjjWYDlkI8Rhf8g4dQ5Rk/edit#&#34;&gt;Public meeting agenda/notes&lt;/a&gt; | &lt;a href=&#34;https://us06web.zoom.us/j/88282362606?pwd=UFhOdzlVKyswdW43c21BKy9DdkdyUT09&#34;&gt;Zoom link&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2FWasmEdge%2FWasmEdge?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2FWasmEdge%2FWasmEdge.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>drogonframework/drogon</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/drogonframework/drogon</id>
    <link href="https://github.com/drogonframework/drogon" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Drogon: A C++14/17/20 based HTTP web application framework running on Linux/macOS/Unix/Windows&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/an-tao/drogon/wiki/images/drogon-white.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.com/an-tao/drogon&#34;&gt;&lt;img src=&#34;https://travis-ci.com/an-tao/drogon.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/an-tao/drogon/workflows/Build%20Drogon/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt; &lt;a href=&#34;https://lgtm.com/projects/g/an-tao/drogon/alerts/&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/alerts/g/an-tao/drogon.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Total alerts&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/drogon-web/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/drogon-web/community.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/drogon-web/community&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/joinchat/_mMNGv0748ZkMDAx&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Telegram-2CA5E0?style=flat&amp;amp;logo=telegram&amp;amp;logoColor=white&#34; alt=&#34;Join the telegram group at https://t.me/joinchat/_mMNGv0748ZkMDAx&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cloud.docker.com/u/drogonframework/repository/docker/drogonframework/drogon&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Docker-image-blue.svg?sanitize=true&#34; alt=&#34;Docker image&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/drogonframework/drogon/master/README.zh-CN.md&#34;&gt;简体中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/drogonframework/drogon/master/README.zh-TW.md&#34;&gt;繁體中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Overview&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Drogon&lt;/strong&gt; is a C++14/17-based HTTP application framework. Drogon can be used to easily build various types of web application server programs using C++. &lt;strong&gt;Drogon&lt;/strong&gt; is the name of a dragon in the American TV series &#34;Game of Thrones&#34; that I really like.&lt;/p&gt; &#xA;&lt;p&gt;Drogon is a cross-platform framework, It supports Linux, macOS, FreeBSD, OpenBSD, HaikuOS, and Windows. Its main features are as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use a non-blocking I/O network lib based on epoll (kqueue under macOS/FreeBSD) to provide high-concurrency, high-performance network IO, please visit the &lt;a href=&#34;https://www.techempower.com/benchmarks/#section=data-r19&amp;amp;hw=ph&amp;amp;test=composite&#34;&gt;TFB Tests Results&lt;/a&gt; for more details;&lt;/li&gt; &#xA; &lt;li&gt;Provide a completely asynchronous programming mode;&lt;/li&gt; &#xA; &lt;li&gt;Support Http1.0/1.1 (server side and client side);&lt;/li&gt; &#xA; &lt;li&gt;Based on template, a simple reflection mechanism is implemented to completely decouple the main program framework, controllers and views.&lt;/li&gt; &#xA; &lt;li&gt;Support cookies and built-in sessions;&lt;/li&gt; &#xA; &lt;li&gt;Support back-end rendering, the controller generates the data to the view to generate the Html page. Views are described by CSP template files, C++ codes are embedded into Html pages through CSP tags. And the drogon command-line tool automatically generates the C++ code files for compilation;&lt;/li&gt; &#xA; &lt;li&gt;Support view page dynamic loading (dynamic compilation and loading at runtime);&lt;/li&gt; &#xA; &lt;li&gt;Provide a convenient and flexible routing solution from the path to the controller handler;&lt;/li&gt; &#xA; &lt;li&gt;Support filter chains to facilitate the execution of unified logic (such as login verification, Http Method constraint verification, etc.) before handling HTTP requests;&lt;/li&gt; &#xA; &lt;li&gt;Support https (based on OpenSSL);&lt;/li&gt; &#xA; &lt;li&gt;Support WebSocket (server side and client side);&lt;/li&gt; &#xA; &lt;li&gt;Support JSON format request and response, very friendly to the Restful API application development;&lt;/li&gt; &#xA; &lt;li&gt;Support file download and upload;&lt;/li&gt; &#xA; &lt;li&gt;Support gzip, brotli compression transmission;&lt;/li&gt; &#xA; &lt;li&gt;Support pipelining;&lt;/li&gt; &#xA; &lt;li&gt;Provide a lightweight command line tool, drogon_ctl, to simplify the creation of various classes in Drogon and the generation of view code;&lt;/li&gt; &#xA; &lt;li&gt;Support non-blocking I/O based asynchronously reading and writing database (PostgreSQL and MySQL(MariaDB) database);&lt;/li&gt; &#xA; &lt;li&gt;Support asynchronously reading and writing sqlite3 database based on thread pool;&lt;/li&gt; &#xA; &lt;li&gt;Support Redis with asynchronous reading and writing;&lt;/li&gt; &#xA; &lt;li&gt;Support ARM Architecture;&lt;/li&gt; &#xA; &lt;li&gt;Provide a convenient lightweight ORM implementation that supports for regular object-to-database bidirectional mapping;&lt;/li&gt; &#xA; &lt;li&gt;Support plugins which can be installed by the configuration file at load time;&lt;/li&gt; &#xA; &lt;li&gt;Support AOP with build-in joinpoints.&lt;/li&gt; &#xA; &lt;li&gt;Support C++ coroutines&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;A very simple example&lt;/h2&gt; &#xA;&lt;p&gt;Unlike most C++ frameworks, the main program of the drogon application can be kept clean and simple. Drogon uses a few tricks to decouple controllers from the main program. The routing settings of controllers can be done through macros or configuration file.&lt;/p&gt; &#xA;&lt;p&gt;Below is the main program of a typical drogon application:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#include &amp;lt;drogon/drogon.h&amp;gt;&#xA;using namespace drogon;&#xA;int main()&#xA;{&#xA;    app().setLogPath(&#34;./&#34;)&#xA;         .setLogLevel(trantor::Logger::kWarn)&#xA;         .addListener(&#34;0.0.0.0&#34;, 80)&#xA;         .setThreadNum(16)&#xA;         .enableRunAsDaemon()&#xA;         .run();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It can be further simplified by using configuration file as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#include &amp;lt;drogon/drogon.h&amp;gt;&#xA;using namespace drogon;&#xA;int main()&#xA;{&#xA;    app().loadConfigFile(&#34;./config.json&#34;).run();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Drogon provides some interfaces for adding controller logic directly in the main() function, for example, user can register a handler like this in Drogon:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;app().registerHandler(&#34;/test?username={name}&#34;,&#xA;                    [](const HttpRequestPtr&amp;amp; req,&#xA;                       std::function&amp;lt;void (const HttpResponsePtr &amp;amp;)&amp;gt; &amp;amp;&amp;amp;callback,&#xA;                       const std::string &amp;amp;name)&#xA;                    {&#xA;                        Json::Value json;&#xA;                        json[&#34;result&#34;]=&#34;ok&#34;;&#xA;                        json[&#34;message&#34;]=std::string(&#34;hello,&#34;)+name;&#xA;                        auto resp=HttpResponse::newHttpJsonResponse(json);&#xA;                        callback(resp);&#xA;                    },&#xA;                    {Get,&#34;LoginFilter&#34;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;While such interfaces look intuitive, they are not suitable for complex business logic scenarios. Assuming there are tens or even hundreds of handlers that need to be registered in the framework, isn&#39;t it a better practice to implement them separately in their respective classes? So unless your logic is very simple, we don&#39;t recommend using above interfaces. Instead, we can create an HttpSimpleController as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;/// The TestCtrl.h file&#xA;#pragma once&#xA;#include &amp;lt;drogon/HttpSimpleController.h&amp;gt;&#xA;using namespace drogon;&#xA;class TestCtrl:public drogon::HttpSimpleController&amp;lt;TestCtrl&amp;gt;&#xA;{&#xA;public:&#xA;    virtual void asyncHandleHttpRequest(const HttpRequestPtr&amp;amp; req, std::function&amp;lt;void (const HttpResponsePtr &amp;amp;)&amp;gt; &amp;amp;&amp;amp;callback) override;&#xA;    PATH_LIST_BEGIN&#xA;    PATH_ADD(&#34;/test&#34;,Get);&#xA;    PATH_LIST_END&#xA;};&#xA;&#xA;/// The TestCtrl.cc file&#xA;#include &#34;TestCtrl.h&#34;&#xA;void TestCtrl::asyncHandleHttpRequest(const HttpRequestPtr&amp;amp; req,&#xA;                                      std::function&amp;lt;void (const HttpResponsePtr &amp;amp;)&amp;gt; &amp;amp;&amp;amp;callback)&#xA;{&#xA;    //write your application logic here&#xA;    auto resp = HttpResponse::newHttpResponse();&#xA;    resp-&amp;gt;setBody(&#34;&amp;lt;p&amp;gt;Hello, world!&amp;lt;/p&amp;gt;&#34;);&#xA;    resp-&amp;gt;setExpiredTime(0);&#xA;    callback(resp);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Most of the above programs can be automatically generated by the command line tool &lt;code&gt;drogon_ctl&lt;/code&gt; provided by drogon&lt;/strong&gt; (The command is &lt;code&gt;drogon_ctl create controller TestCtrl&lt;/code&gt;). All the user needs to do is add their own business logic. In the example, the controller returns a &lt;code&gt;Hello, world!&lt;/code&gt; string when the client accesses the &lt;code&gt;http://ip/test&lt;/code&gt; URL.&lt;/p&gt; &#xA;&lt;p&gt;For JSON format response, we create the controller as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;/// The header file&#xA;#pragma once&#xA;#include &amp;lt;drogon/HttpSimpleController.h&amp;gt;&#xA;using namespace drogon;&#xA;class JsonCtrl : public drogon::HttpSimpleController&amp;lt;JsonCtrl&amp;gt;&#xA;{&#xA;  public:&#xA;    virtual void asyncHandleHttpRequest(const HttpRequestPtr &amp;amp;req, std::function&amp;lt;void(const HttpResponsePtr &amp;amp;)&amp;gt; &amp;amp;&amp;amp;callback) override;&#xA;    PATH_LIST_BEGIN&#xA;    //list path definitions here;&#xA;    PATH_ADD(&#34;/json&#34;, Get);&#xA;    PATH_LIST_END&#xA;};&#xA;&#xA;/// The source file&#xA;#include &#34;JsonCtrl.h&#34;&#xA;void JsonCtrl::asyncHandleHttpRequest(const HttpRequestPtr &amp;amp;req,&#xA;                                      std::function&amp;lt;void(const HttpResponsePtr &amp;amp;)&amp;gt; &amp;amp;&amp;amp;callback)&#xA;{&#xA;    Json::Value ret;&#xA;    ret[&#34;message&#34;] = &#34;Hello, World!&#34;;&#xA;    auto resp = HttpResponse::newHttpJsonResponse(ret);&#xA;    callback(resp);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Let&#39;s go a step further and create a demo RESTful API with the HttpController class, as shown below (Omit the source file):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;/// The header file&#xA;#pragma once&#xA;#include &amp;lt;drogon/HttpController.h&amp;gt;&#xA;using namespace drogon;&#xA;namespace api&#xA;{&#xA;namespace v1&#xA;{&#xA;class User : public drogon::HttpController&amp;lt;User&amp;gt;&#xA;{&#xA;  public:&#xA;    METHOD_LIST_BEGIN&#xA;    //use METHOD_ADD to add your custom processing function here;&#xA;    METHOD_ADD(User::getInfo, &#34;/{id}&#34;, Get);                  //path is /api/v1/User/{arg1}&#xA;    METHOD_ADD(User::getDetailInfo, &#34;/{id}/detailinfo&#34;, Get);  //path is /api/v1/User/{arg1}/detailinfo&#xA;    METHOD_ADD(User::newUser, &#34;/{name}&#34;, Post);                 //path is /api/v1/User/{arg1}&#xA;    METHOD_LIST_END&#xA;    //your declaration of processing function maybe like this:&#xA;    void getInfo(const HttpRequestPtr &amp;amp;req, std::function&amp;lt;void(const HttpResponsePtr &amp;amp;)&amp;gt; &amp;amp;&amp;amp;callback, int userId) const;&#xA;    void getDetailInfo(const HttpRequestPtr &amp;amp;req, std::function&amp;lt;void(const HttpResponsePtr &amp;amp;)&amp;gt; &amp;amp;&amp;amp;callback, int userId) const;&#xA;    void newUser(const HttpRequestPtr &amp;amp;req, std::function&amp;lt;void(const HttpResponsePtr &amp;amp;)&amp;gt; &amp;amp;&amp;amp;callback, std::string &amp;amp;&amp;amp;userName);&#xA;  public:&#xA;    User()&#xA;    {&#xA;        LOG_DEBUG &amp;lt;&amp;lt; &#34;User constructor!&#34;;&#xA;    }&#xA;};&#xA;} // namespace v1&#xA;} // namespace api&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As you can see, users can use the &lt;code&gt;HttpController&lt;/code&gt; to map paths and parameters at the same time. This is a very convenient way to create a RESTful API application.&lt;/p&gt; &#xA;&lt;p&gt;In addition, you can also find that all handler interfaces are in asynchronous mode, where the response is returned by a callback object. This design is for performance reasons because in asynchronous mode the drogon application can handle a large number of concurrent requests with a small number of threads.&lt;/p&gt; &#xA;&lt;p&gt;After compiling all of the above source files, we get a very simple web application. This is a good start. &lt;strong&gt;For more information, please visit the &lt;a href=&#34;https://github.com/an-tao/drogon/wiki/ENG-01-Overview&#34;&gt;wiki&lt;/a&gt; or &lt;a href=&#34;https://drogon.docsforge.com/master/overview/&#34;&gt;DocsForge&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Every contribution is welcome. Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/drogonframework/drogon/master/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PolyMC/PolyMC</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/PolyMC/PolyMC</id>
    <link href="https://github.com/PolyMC/PolyMC" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A custom launcher for Minecraft that allows you to easily manage multiple installations of Minecraft at once (Fork of MultiMC)&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/PolyMC/PolyMC/develop/program_info/polymc-header-black.svg#gh-light-mode-only&#34; alt=&#34;PolyMC logo&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/PolyMC/PolyMC/develop/program_info/polymc-header.svg#gh-dark-mode-only&#34; alt=&#34;PolyMC logo&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;PolyMC is a custom launcher for Minecraft that focuses on predictability, long term stability and simplicity.&lt;/p&gt; &#xA;&lt;p&gt;This is a &lt;strong&gt;fork&lt;/strong&gt; of the MultiMC Launcher and not endorsed by MultiMC. If you want to read about why this fork was created, check out &lt;a href=&#34;https://polymc.org/wiki/overview/faq/&#34;&gt;our FAQ page&lt;/a&gt;. &lt;br&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All downloads and instructions for PolyMC can be found &lt;a href=&#34;https://polymc.org/download/&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Last build status: &lt;a href=&#34;https://github.com/PolyMC/PolyMC/actions&#34;&gt;https://github.com/PolyMC/PolyMC/actions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development Builds&lt;/h2&gt; &#xA;&lt;p&gt;There are per-commit development builds available &lt;a href=&#34;https://github.com/PolyMC/PolyMC/actions&#34;&gt;here&lt;/a&gt;. These have debug information in the binaries, so their file sizes are relatively larger. Portable builds are provided for AppImage on Linux, Windows, and macOS.&lt;/p&gt; &#xA;&lt;p&gt;For Debian and Arch, you can use these packages for the latest development versions:&lt;br&gt; &lt;a href=&#34;https://aur.archlinux.org/packages/polymc-git/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/aur-polymc--git-blue&#34; alt=&#34;polymc-git&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mpr.makedeb.org/packages/polymc-git&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/mpr-polymc--git-orange&#34; alt=&#34;polymc-git&#34;&gt;&lt;/a&gt;&lt;br&gt; For flatpak, you can use &lt;a href=&#34;https://discourse.flathub.org/t/how-to-use-flathub-beta/2111&#34;&gt;flathub-beta&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Help &amp;amp; Support&lt;/h1&gt; &#xA;&lt;p&gt;Feel free to create an issue if you need help. However, you might find it easier to ask in the Discord server.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/xq7fxrgtMP&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/923671181020766230?label=PolyMC%20Discord&#34; alt=&#34;PolyMC Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For people who don&#39;t want to use Discord, we have a Matrix Space which is bridged to the Discord server:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://matrix.to/#/#polymc:matrix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/matrix/polymc:matrix.org?label=PolyMC%20space&#34; alt=&#34;PolyMC Space&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If there are any issues with the space or you are using a client that does not support the feature here are the individual rooms:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://matrix.to/#/#polymc-development:matrix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/matrix/polymc-development:matrix.org?label=PolyMC%20Development&#34; alt=&#34;Development&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#polymc-discussion:matrix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/matrix/polymc-discussion:matrix.org?label=PolyMC%20Discussion&#34; alt=&#34;Discussion&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#polymc-github:matrix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/matrix/polymc-github:matrix.org?label=PolyMC%20Github&#34; alt=&#34;Github&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#polymc-maintainers:matrix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/matrix/polymc-maintainers:matrix.org?label=PolyMC%20Maintainers&#34; alt=&#34;Maintainers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#polymc-news:matrix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/matrix/polymc-news:matrix.org?label=PolyMC%20News&#34; alt=&#34;News&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#polymc-offtopic:matrix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/matrix/polymc-offtopic:matrix.org?label=PolyMC%20Offtopic&#34; alt=&#34;Offtopic&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#polymc-support:matrix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/matrix/polymc-support:matrix.org?label=PolyMC%20Support&#34; alt=&#34;Support&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#polymc-voice:matrix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/matrix/polymc-voice:matrix.org?label=PolyMC%20Voice&#34; alt=&#34;Voice&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;we also have a subreddit you can post your issues and suggestions on:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.reddit.com/r/PolyMCLauncher/&#34;&gt;r/PolyMCLauncher&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;p&gt;If you want to contribute to PolyMC you might find it useful to join our Discord Server or Matrix Space.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;If you want to build PolyMC yourself, check &lt;a href=&#34;https://polymc.org/wiki/development/build-instructions/&#34;&gt;Build Instructions&lt;/a&gt; for build instructions.&lt;/p&gt; &#xA;&lt;h2&gt;Code formatting&lt;/h2&gt; &#xA;&lt;p&gt;Just follow the existing formatting.&lt;/p&gt; &#xA;&lt;p&gt;In general, in order of importance:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure your IDE is not messing up line endings or whitespace and avoid using linters.&lt;/li&gt; &#xA; &lt;li&gt;Prefer readability over dogma.&lt;/li&gt; &#xA; &lt;li&gt;Keep to the existing formatting.&lt;/li&gt; &#xA; &lt;li&gt;Indent with 4 space unless it&#39;s in a submodule.&lt;/li&gt; &#xA; &lt;li&gt;Keep lists (of arguments, parameters, initializers...) as lists, not paragraphs. It should either read from top to bottom, or left to right. Not both.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Translations&lt;/h2&gt; &#xA;&lt;p&gt;The translation effort for PolyMC is hosted on &lt;a href=&#34;https://hosted.weblate.org/projects/polymc/polymc/&#34;&gt;Weblate&lt;/a&gt; and information about translating PolyMC is available at &lt;a href=&#34;https://github.com/PolyMC/Translations&#34;&gt;https://github.com/PolyMC/Translations&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download information&lt;/h2&gt; &#xA;&lt;p&gt;To modify download information or change packaging information send a pull request or issue to the website &lt;a href=&#34;https://github.com/PolyMC/polymc.github.io/raw/master/src/download.md&#34;&gt;Here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Forking/Redistributing/Custom builds policy&lt;/h2&gt; &#xA;&lt;p&gt;We don&#39;t care what you do with your fork/custom build as long as you do the following as a basic courtesy:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow the terms of the &lt;a href=&#34;https://raw.githubusercontent.com/PolyMC/PolyMC/develop/LICENSE&#34;&gt;license&lt;/a&gt; (not just a courtesy, but also a legal responsibility)&lt;/li&gt; &#xA; &lt;li&gt;Make it clear that your fork is not PolyMC and is not endorsed by or affiliated with the PolyMC project (&lt;a href=&#34;https://polymc.org&#34;&gt;https://polymc.org&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Go through &lt;a href=&#34;https://raw.githubusercontent.com/PolyMC/PolyMC/develop/CMakeLists.txt&#34;&gt;CMakeLists.txt&lt;/a&gt; and change PolyMC&#39;s API keys to your own or set them to empty strings (&lt;code&gt;&#34;&#34;&lt;/code&gt;) to disable them (this way the program will still compile but the functionality requiring those keys will be disabled).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you have any questions or want any clarification on the above conditions please make an issue and ask us.&lt;/p&gt; &#xA;&lt;p&gt;Be aware that if you build this software without removing the provided API keys in &lt;a href=&#34;https://raw.githubusercontent.com/PolyMC/PolyMC/develop/CMakeLists.txt&#34;&gt;CMakeLists.txt&lt;/a&gt; you are accepting the following terms and conditions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/legal/microsoft-identity-platform/terms-of-use&#34;&gt;Microsoft Identity Platform Terms of Use&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://support.curseforge.com/en/support/solutions/articles/9000207405-curse-forge-3rd-party-api-terms-and-conditions&#34;&gt;CurseForge 3rd Party API Terms and Conditions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you do not agree with these terms and conditions, then remove the associated API keys from the &lt;a href=&#34;https://raw.githubusercontent.com/PolyMC/PolyMC/develop/CMakeLists.txt&#34;&gt;CMakeLists.txt&lt;/a&gt; file by setting them to an empty string (&lt;code&gt;&#34;&#34;&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;All launcher code is available under the GPL-3.0-only license.&lt;/p&gt; &#xA;&lt;p&gt;The logo and related assets are under the CC BY-SA 4.0 license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>duckdb/duckdb</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/duckdb/duckdb</id>
    <link href="https://github.com/duckdb/duckdb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DuckDB is an in-process SQL OLAP Database Management System&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://duckdb.org/images/DuckDB_Logo_dl.png&#34; height=&#34;50&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/duckdb/duckdb/actions&#34;&gt; &lt;img src=&#34;https://github.com/duckdb/duckdb/actions/workflows/Main.yml/badge.svg?branch=master&#34; alt=&#34;Github Actions Badge&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.codefactor.io/repository/github/cwida/duckdb&#34;&gt; &lt;img src=&#34;https://www.codefactor.io/repository/github/cwida/duckdb/badge&#34; alt=&#34;CodeFactor&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/duckdb/duckdb&#34;&gt; &lt;img src=&#34;https://codecov.io/gh/duckdb/duckdb/branch/master/graph/badge.svg?token=FaxjcfFghN&#34; alt=&#34;codecov&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/tcvwpjfnZx&#34;&gt; &lt;img src=&#34;https://shields.io/discord/909674491309850675&#34; alt=&#34;discord&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;DuckDB&lt;/h2&gt; &#xA;&lt;p&gt;DuckDB is a high-performance analytical database system. It is designed to be fast, reliable and easy to use. DuckDB provides a rich SQL dialect, with support far beyond basic SQL. DuckDB supports arbitrary and nested correlated subqueries, window functions, collations, complex types (arrays, structs), and more. For more information on the goals of DuckDB, please refer to &lt;a href=&#34;https://duckdb.org/why_duckdb&#34;&gt;the Why DuckDB page on our website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;If you want to install and use DuckDB, please see &lt;a href=&#34;https://www.duckdb.org&#34;&gt;our website&lt;/a&gt; for installation and usage instructions.&lt;/p&gt; &#xA;&lt;h2&gt;Data Import&lt;/h2&gt; &#xA;&lt;p&gt;For CSV files and Parquet files, data import is as simple as referencing the file in the FROM clause:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT * FROM &#39;myfile.csv&#39;;&#xA;SELECT * FROM &#39;myfile.parquet&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Refer to our &lt;a href=&#34;https://duckdb.org/docs/data/overview&#34;&gt;Data Import&lt;/a&gt; section for more information.&lt;/p&gt; &#xA;&lt;h2&gt;SQL Reference&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://duckdb.org/docs/sql/introduction&#34;&gt;website&lt;/a&gt; contains a reference of functions and SQL constructs available in DuckDB.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;For development, DuckDB requires &lt;a href=&#34;https://cmake.org&#34;&gt;CMake&lt;/a&gt;, Python3 and a &lt;code&gt;C++11&lt;/code&gt; compliant compiler. Run &lt;code&gt;make&lt;/code&gt; in the root directory to compile the sources. For development, use &lt;code&gt;make debug&lt;/code&gt; to build a non-optimized debug version. You should run &lt;code&gt;make unit&lt;/code&gt; and &lt;code&gt;make allunit&lt;/code&gt; to verify that your version works properly after making changes. To test performance, you can run &lt;code&gt;BUILD_BENCHMARK=1 BUILD_TPCH=1 make&lt;/code&gt; and then perform several standard benchmarks from the root directory by executing &lt;code&gt;./build/release/benchmark/benchmark_runner&lt;/code&gt;. The detail of benchmarks is in our &lt;a href=&#34;https://raw.githubusercontent.com/duckdb/duckdb/master/benchmark/README.md&#34;&gt;Benchmark Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please also refer to our &lt;a href=&#34;https://raw.githubusercontent.com/duckdb/duckdb/master/CONTRIBUTING.md&#34;&gt;Contribution Guide&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zrax/pycdc</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/zrax/pycdc</id>
    <link href="https://github.com/zrax/pycdc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;C++ python bytecode disassembler and decompiler&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Decompyle++&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;A Python Byte-code Disassembler/Decompiler&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Decompyle++ aims to translate compiled Python byte-code back into valid and human-readable Python source code. While other projects have achieved this with varied success, Decompyle++ is unique in that it seeks to support byte-code from any version of Python.&lt;/p&gt; &#xA;&lt;p&gt;Decompyle++ includes both a byte-code disassembler (pycdas) and a decompiler (pycdc).&lt;/p&gt; &#xA;&lt;p&gt;As the name implies, Decompyle++ is written in C++. If you wish to contribute, please fork us on github at &lt;a href=&#34;https://github.com/zrax/pycdc&#34;&gt;https://github.com/zrax/pycdc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building Decompyle++&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Generate a project or makefile with &lt;a href=&#34;http://www.cmake.org&#34;&gt;CMake&lt;/a&gt; (See CMake&#39;s documentation for details)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;The following options can be passed to CMake to control debug features:&lt;/p&gt; &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;Option&lt;/th&gt; &#xA;       &lt;th&gt;Description&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;     &lt;tbody&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;-DCMAKE_BUILD_TYPE=Debug&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Produce debugging symbols&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;-DENABLE_BLOCK_DEBUG=ON&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Enable block debugging output&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;&lt;code&gt;-DENABLE_STACK_DEBUG=ON&lt;/code&gt;&lt;/td&gt; &#xA;       &lt;td&gt;Enable stack debugging output&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt; &#xA;    &lt;/table&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the generated project or makefile&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For projects (e.g. MSVC), open the generated project file and build it&lt;/li&gt; &#xA;   &lt;li&gt;For makefiles, just run &lt;code&gt;make&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;To run tests (on *nix or MSYS), run &lt;code&gt;make check&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;To run pycdas&lt;/strong&gt;, the PYC Disassembler: &lt;code&gt;./pycdas [PATH TO PYC FILE]&lt;/code&gt; The byte-code disassembly is printed to stdout.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;To run pycdc&lt;/strong&gt;, the PYC Decompiler: &lt;code&gt;./pycdc [PATH TO PYC FILE]&lt;/code&gt; The decompiled Python source is printed to stdout. Any errors are printed to stderr.&lt;/p&gt; &#xA;&lt;h2&gt;Authors, Licence, Credits&lt;/h2&gt; &#xA;&lt;p&gt;Decompyle++ is the work of Michael Hansen and Darryl Pogue.&lt;/p&gt; &#xA;&lt;p&gt;Additional contributions from:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;charlietang98&lt;/li&gt; &#xA; &lt;li&gt;Kunal Parmar&lt;/li&gt; &#xA; &lt;li&gt;Olivier Iffrig&lt;/li&gt; &#xA; &lt;li&gt;Zlodiy&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It is released under the terms of the GNU General Public License, version 3; See LICENSE file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>facebook/rocksdb</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/facebook/rocksdb</id>
    <link href="https://github.com/facebook/rocksdb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A library that provides an embeddable, persistent key-value store for fast storage.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;RocksDB: A Persistent Key-Value Store for Flash and RAM Storage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/facebook/rocksdb&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/facebook/rocksdb.svg?style=svg&#34; alt=&#34;CircleCI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.com/github/facebook/rocksdb&#34;&gt;&lt;img src=&#34;https://api.travis-ci.com/facebook/rocksdb.svg?branch=main&#34; alt=&#34;TravisCI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/Facebook/rocksdb/branch/main&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/fbgfu0so3afcno78/branch/main?svg=true&#34; alt=&#34;Appveyor Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://140-211-168-68-openstack.osuosl.org:8080/job/rocksdb&#34;&gt;&lt;img src=&#34;http://140-211-168-68-openstack.osuosl.org:8080/buildStatus/icon?job=rocksdb&amp;amp;style=plastic&#34; alt=&#34;PPC64le Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;RocksDB is developed and maintained by Facebook Database Engineering Team. It is built on earlier work on &lt;a href=&#34;https://github.com/google/leveldb&#34;&gt;LevelDB&lt;/a&gt; by Sanjay Ghemawat (&lt;a href=&#34;mailto:sanjay@google.com&#34;&gt;sanjay@google.com&lt;/a&gt;) and Jeff Dean (&lt;a href=&#34;mailto:jeff@google.com&#34;&gt;jeff@google.com&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;This code is a library that forms the core building block for a fast key-value server, especially suited for storing data on flash drives. It has a Log-Structured-Merge-Database (LSM) design with flexible tradeoffs between Write-Amplification-Factor (WAF), Read-Amplification-Factor (RAF) and Space-Amplification-Factor (SAF). It has multi-threaded compactions, making it especially suitable for storing multiple terabytes of data in a single database.&lt;/p&gt; &#xA;&lt;p&gt;Start with example usage here: &lt;a href=&#34;https://github.com/facebook/rocksdb/tree/main/examples&#34;&gt;https://github.com/facebook/rocksdb/tree/main/examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/facebook/rocksdb/wiki&#34;&gt;github wiki&lt;/a&gt; for more explanation.&lt;/p&gt; &#xA;&lt;p&gt;The public interface is in &lt;code&gt;include/&lt;/code&gt;. Callers should not include or rely on the details of any other header files in this package. Those internal APIs may be changed without warning.&lt;/p&gt; &#xA;&lt;p&gt;Questions and discussions are welcome on the &lt;a href=&#34;https://www.facebook.com/groups/rocksdb.dev/&#34;&gt;RocksDB Developers Public&lt;/a&gt; Facebook group and &lt;a href=&#34;https://groups.google.com/g/rocksdb&#34;&gt;email list&lt;/a&gt; on Google Groups.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;RocksDB is dual-licensed under both the GPLv2 (found in the COPYING file in the root directory) and Apache 2.0 License (found in the LICENSE.Apache file in the root directory). You may select, at your option, one of the above-listed licenses.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>notepad-plus-plus/notepad-plus-plus</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/notepad-plus-plus/notepad-plus-plus</id>
    <link href="https://github.com/notepad-plus-plus/notepad-plus-plus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Notepad++ official repository&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;What is Notepad++ ?&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/notepad-plus-plus/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/notepad-plus-plus/notepad-plus-plus.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://ci.appveyor.com/project/donho/notepad-plus-plus&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/notepad-plus-plus/notepad-plus-plus?branch=master&amp;amp;svg=true&#34; alt=&#34;Appveyor build status&#34;&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://community.notepad-plus-plus.org/&#34;&gt;&lt;img src=&#34;https://notepad-plus-plus.org/assets/images/NppCommunityBadge.svg?sanitize=true&#34; alt=&#34;Join the disscussions at https://community.notepad-plus-plus.org/&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Notepad++ is a free (free as in both &#34;free speech&#34; and &#34;free beer&#34;) source code editor and Notepad replacement that supports several programming languages and natural languages. Running in the MS Windows environment, its use is governed by &lt;a href=&#34;https://raw.githubusercontent.com/notepad-plus-plus/notepad-plus-plus/master/LICENSE&#34;&gt;GPL License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://notepad-plus-plus.org/&#34;&gt;Notepad++ official site&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Notepad++ Release Key&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Since the release of version 7.6.5 Notepad++ is signed using GPG with the following key:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Signer:&lt;/strong&gt; Notepad++&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;E-mail:&lt;/strong&gt; &lt;a href=&#34;mailto:don.h@free.fr&#34;&gt;don.h@free.fr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Key ID:&lt;/strong&gt; 0x8D84F46E&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Key fingerprint:&lt;/strong&gt; 14BC E436 2749 B2B5 1F8C 7122 6C42 9F1D 8D84 F46E&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Key type:&lt;/strong&gt; RSA 4096/4096&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Created:&lt;/strong&gt; 2019-03-11&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Expires:&lt;/strong&gt; 2024-03-11&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/notepad-plus-plus/notepad-plus-plus/raw/master/nppGpgPub.asc&#34;&gt;https://github.com/notepad-plus-plus/notepad-plus-plus/blob/master/nppGpgPub.asc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported OS&lt;/h2&gt; &#xA;&lt;p&gt;All the Windows systems still supported by Microsoft are supported by Notepad++. However, not all Notepad++ users can or want to use the newest system. Here is the &lt;a href=&#34;https://raw.githubusercontent.com/notepad-plus-plus/notepad-plus-plus/master/SUPPORTED_SYSTEM.md&#34;&gt;Supported systems information&lt;/a&gt; you may need in case you are one of them.&lt;/p&gt; &#xA;&lt;h2&gt;Build Notepad++&lt;/h2&gt; &#xA;&lt;p&gt;Please follow &lt;a href=&#34;https://raw.githubusercontent.com/notepad-plus-plus/notepad-plus-plus/master/BUILD.md&#34;&gt;build guide&lt;/a&gt; to build Notepad++ from source.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome. Be mindful of our &lt;a href=&#34;https://raw.githubusercontent.com/notepad-plus-plus/notepad-plus-plus/master/CONTRIBUTING.md&#34;&gt;Contribution Rules&lt;/a&gt; to increase the likelihood of your contribution getting accepted.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/notepad-plus-plus/notepad-plus-plus/graphs/contributors&#34;&gt;Notepad++ Contributors&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zhongyang219/TrafficMonitor</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/zhongyang219/TrafficMonitor</id>
    <link href="https://github.com/zhongyang219/TrafficMonitor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;这是一个用于显示当前网速、CPU及内存利用率的桌面悬浮窗软件，并支持任务栏显示，支持更换皮肤。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;简体中文 | &lt;a href=&#34;https://raw.githubusercontent.com/zhongyang219/TrafficMonitor/master/README_en-us.md&#34;&gt;English&lt;/a&gt;&lt;/strong&gt;&lt;br&gt; &lt;a href=&#34;https://996.icu/#/en_US&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/link-996.icu-%23FF4D5B.svg?style=flat-square&#34; alt=&#34;Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/996icu/996.ICU/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Anti%20996-blue.svg?style=flat-square&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zhongyang219/TrafficMonitor/actions?query=workflow:%22Release+CI%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/zhongyang219/TrafficMonitor/Release%20CI?label=Release%20CI&amp;amp;logo=github&amp;amp;style=flat-square&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zhongyang219/TrafficMonitor/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/zhongyang219/TrafficMonitor.svg?style=flat-square&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;TrafficMonitor 简介&lt;/h1&gt; &#xA;&lt;p&gt;Traffic Monitor是一款用于Windows平台的网速监控悬浮窗软件，可以显示当前网速、CPU及内存利用率，支持嵌入到任务栏显示，支持更换皮肤、历史流量统计等功能。&lt;/p&gt; &#xA;&lt;h1&gt;相关链接：&lt;/h1&gt; &#xA;&lt;p&gt;请&lt;a href=&#34;https://github.com/zhongyang219/TrafficMonitor/releases/latest&#34;&gt;点击此处&lt;/a&gt;下载TrafficMonitor的最新版本。&lt;br&gt; 备用链接：&lt;a href=&#34;https://pan.baidu.com/s/15PMt7s-ASpyDwtS__4cUhg&#34;&gt;百度网盘下载&lt;/a&gt; 提取码：&lt;code&gt;ou0m&lt;/code&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;国内用户如果遇到Github下载缓慢的问题，可以&lt;a href=&#34;https://gitee.com/zhongyang219/TrafficMonitor&#34;&gt;点击此处&lt;/a&gt;转到此项目在Gitee上的页面。&lt;/p&gt; &#xA;&lt;p&gt;如果遇到问题，请&lt;a href=&#34;https://raw.githubusercontent.com/zhongyang219/TrafficMonitor/master/Help.md&#34;&gt;点击此处&lt;/a&gt;。&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;你也可以&lt;a href=&#34;https://github.com/zhongyang219/TrafficMonitor/actions?query=workflow:%22Release+CI%22&#34;&gt;点击此处&lt;/a&gt;下载TrafficMonitor的预发行构建版本。&lt;/p&gt; &#xA;&lt;p&gt;从1.80版本开始，TrafficMonitor加入了温度监控功能，如果你不需要温度监控功能，并且在使用1.80以上版本中遇到了问题，建议下载不含温度监控的版本（Lite版本）。（在Release页面找到文件名包含&lt;code&gt;Lite&lt;/code&gt;的版本。）&lt;/p&gt; &#xA;&lt;p&gt;TrafficMonitor依赖于Microsoft Visual C++ 运行环境，如果程序启动时提示“找不到MSVC*.dll”，请点击以下链接下载并安装Microsoft Visual C++ 运行环境。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/zh-CN/cpp/windows/latest-supported-vc-redist?view=msvc-170&#34;&gt;最新支持的 Visual C++ 可再发行程序包下载 | Microsoft Docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;版本说明&lt;/h1&gt; &#xA;&lt;p&gt;TrafficMonitor提供了普通版和Lite版两种版本可用。普通版包含了所有的功能，Lite版本则不包含温度监控、显卡利用率、硬盘利用率等硬件监控功能。普通版运行需要管理员权限，而Lite版本则不需要。&lt;/p&gt; &#xA;&lt;p&gt;如果没有监控温度等硬件信息的需要，建议使用Lite版。&lt;/p&gt; &#xA;&lt;p&gt;以下是两个版本功能对比。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;功能&lt;/th&gt; &#xA;   &lt;th&gt;普通版&lt;/th&gt; &#xA;   &lt;th&gt;Lite版&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;网速监控&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CPU、内存利用率&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CPU、显卡、硬盘、主板温度监控、CPU频率监控&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;显卡利用率监控&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;硬盘利用率监控&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;网络详细信息&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;插件系统&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;主窗口更换皮肤&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;   &lt;td&gt;✔&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;需要管理员权限&lt;/td&gt; &#xA;   &lt;td&gt;是&lt;/td&gt; &#xA;   &lt;td&gt;否&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;主要特性&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;显示当前实现网络传输速率、CPU和内存占用率&lt;/li&gt; &#xA; &lt;li&gt;如果电脑有多个网卡，支持自动和手动选择网络连接&lt;/li&gt; &#xA; &lt;li&gt;查看网络详细信息&lt;/li&gt; &#xA; &lt;li&gt;支持嵌入到任务栏显示&lt;/li&gt; &#xA; &lt;li&gt;支持更换皮肤和自定义皮肤&lt;/li&gt; &#xA; &lt;li&gt;历史流量统计&lt;/li&gt; &#xA; &lt;li&gt;硬件信息监控&lt;/li&gt; &#xA; &lt;li&gt;插件系统&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;使用说明&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/zhongyang219/TrafficMonitor/wiki&#34;&gt;点击这里&lt;/a&gt;转到Wiki页面查看关于TrafficMonitor的详细说明文档。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;截图&lt;/h1&gt; &#xA;&lt;p&gt;主悬浮窗：&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zhongyang219/TrafficMonitor/master/Screenshots/main1.png&#34; alt=&#34;&#34;&gt;&lt;br&gt; 右键菜单：&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zhongyang219/TrafficMonitor/master/Screenshots/main.png&#34; alt=&#34;&#34;&gt;&lt;br&gt; 任务栏窗口：&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zhongyang219/TrafficMonitor/master/Screenshots/taskbar.PNG&#34; alt=&#34;&#34;&gt;&lt;br&gt; 多彩皮肤：&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zhongyang219/TrafficMonitor/master/Screenshots/skins.PNG&#34; style=&#34;zoom:80%;&#34;&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h1&gt;如何使用&lt;/h1&gt; &#xA;&lt;p&gt;程序启动后在会在屏幕中显示一个显示网速的悬浮窗。在悬浮窗上点击鼠标右键可以弹出右键菜单。&lt;/p&gt; &#xA;&lt;p&gt;TrafficMonitor支持将信息显示到任务栏。但是TrafficMonitor默认只显示主窗口（悬浮窗），如果需要让它嵌入到任务栏显示，请在右键菜单中选择“显示任务栏窗口”命令。&lt;/p&gt; &#xA;&lt;p&gt;任务栏窗口支持自定义显示项目，默认情况下只显示网速，如果需要显示CPU和内存利用率，请在任务栏右键菜单中的“显示设置”子菜单下勾选需要显示的项目，如下图所示：&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/zhongyang219/TrafficMonitor/master/Screenshots/taskbar_item_settings.png&#34; style=&#34;zoom:80%;&#34;&gt; &#xA;&lt;h1&gt;自定义皮肤&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zhongyang219/TrafficMonitor/master/Screenshots/selecte_skin.png&#34; style=&#34;zoom:80%;&#34;&gt;&lt;br&gt; 在主窗口或通知区图标右键菜单上选择“其他功能”——“更换皮肤”可以打开更换皮肤界面。&lt;a href=&#34;https://github.com/zhongyang219/TrafficMonitorSkin/raw/master/%E7%9A%AE%E8%82%A4%E4%B8%8B%E8%BD%BD.md&#34;&gt;点击此处&lt;/a&gt;可以下载更多皮肤。用户还可以根据自己的需要编辑自己的皮肤。&lt;br&gt; 皮肤文件放在程序所在目录的&lt;code&gt;skins&lt;/code&gt;目录下，每个皮肤被放到单独的文件夹下，文件夹的名称就是皮肤的名称。&lt;br&gt; 其中&lt;code&gt;background.bmp&lt;/code&gt;和&lt;code&gt;background_l.bmp&lt;/code&gt;是背景图片，&lt;code&gt;skin.ini&lt;/code&gt;是皮肤的配置文件，可以通过&lt;code&gt;skin.ini&lt;/code&gt;指定文本颜色、字体、皮肤作者、每个项目的大小和位置等信息。&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;从1.80版本开始增加了xml格式的皮肤配置文件&lt;code&gt;skin.xml&lt;/code&gt;，只有xml格式的皮肤配置文件才支持温度和显卡使用率显示。&lt;/p&gt; &#xA;&lt;p&gt;详细的皮肤制作教程请点击以下链接：&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zhongyang219/TrafficMonitor/wiki/%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C%E6%95%99%E7%A8%8B&#34;&gt;皮肤制作教程 · zhongyang219/TrafficMonitor Wiki (github.com)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;推荐使用&lt;a href=&#34;https://github.com/zhongyang219/TrafficMonitorSkinEditor/releases&#34;&gt;皮肤编辑器&lt;/a&gt;来创建或编辑皮肤。&lt;br&gt;&lt;/p&gt; &#xA;&lt;h1&gt;选项设置&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zhongyang219/TrafficMonitor/master/Screenshots/option.jpg&#34; style=&#34;zoom:80%;&#34;&gt;&lt;br&gt; 在右键菜单选择“选项...”可以进入选项设置。在选项设置对话框中，可以单独设置主窗口和任务栏窗口的文本颜色、字体、背景颜色、网速单位、显示的文本等。&lt;br&gt; 在“常规设置”选项卡中，可以设置是否在程序时自动检查更新，以及是否需要在开机是自动运行。可以设置在什么时候需要发出消息通知。&lt;br&gt; 从1.72版本开始，支持每个项目文本颜色单独设置。勾选“指定每个项目的颜色”后，点击“文本颜色”右边的颜色框，会弹出详细颜色设置的对话框，可以在这里单独指定每个项目的颜色。&lt;br&gt;&lt;/p&gt; &#xA;&lt;h1&gt;插件系统&lt;/h1&gt; &#xA;&lt;p&gt;从1.82版本开始增加了插件系统，插件dll必须放在“TrafficMonitor.exe”同级目录的“plugins”目录下。程序启动后，插件会自动加载。你可以在右键菜单“更多功能”——“插件管理”中查看并管理已加载的插件。&lt;/p&gt; &#xA;&lt;p&gt;关于如何开发TrafficMonitor的说明，请参见&lt;a href=&#34;https://github.com/zhongyang219/TrafficMonitor/wiki/%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97&#34;&gt;插件开发指南 · zhongyang219/TrafficMonitor Wiki (github.com)&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;要下载TrafficMonitor插件，请&lt;a href=&#34;https://github.com/zhongyang219/TrafficMonitorPlugins/raw/main/download/plugin_download.md&#34;&gt;点击这里&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h1&gt;关于硬件监控功能&lt;/h1&gt; &#xA;&lt;p&gt;从1.80版本开始，TrafficMonitor加入了硬件监控功能（包括温度监控和显卡使用率监控、CPU频率监控），它使用了第三方开源库&lt;a href=&#34;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor&#34;&gt;LibreHardwareMonitor&lt;/a&gt;。如果你在使用温度监控功能时遇到了问题，请&lt;a href=&#34;https://raw.githubusercontent.com/zhongyang219/TrafficMonitor/master/Help.md#13-%E5%85%B3%E4%BA%8Etrafficmonitor%E6%B8%A9%E5%BA%A6%E7%9B%91%E6%8E%A7%E7%9A%84%E9%97%AE%E9%A2%98&#34;&gt;点击这里&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;需要注意的是，温度监控功能默认是关闭的，如果你要使用TrafficMonitor的温度监控功能，请到&lt;a href=&#34;https://github.com/zhongyang219/TrafficMonitor/wiki/%E9%80%89%E9%A1%B9%E8%AE%BE%E7%BD%AE#%E7%A1%AC%E4%BB%B6%E7%9B%91%E6%8E%A7&#34;&gt;“选项设置”-“常规设置”-“硬件监控”&lt;/a&gt;中开启。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;注意：硬件监控功能（包括温度监控和显卡使用率监控）可能存在一些问题，它可能会占用更多的CPU和内存。据部分用户反馈，开启温度功能后会导致程序崩溃和系统死机等问题，请在知晓以上风险后再决定开启硬件监控功能。否则，请不要使用硬件监控功能。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;更新日志&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zhongyang219/TrafficMonitor/master/UpdateLog/update_log.md&#34;&gt;点击此处查看更新日志&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flutter/engine</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/flutter/engine</id>
    <link href="https://github.com/flutter/engine" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Flutter engine&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter Engine&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cirrus-ci.com/github/flutter/engine&#34;&gt;&lt;img src=&#34;https://api.cirrus-ci.com/github/flutter/engine.svg?branch=main&#34; alt=&#34;Build Status - Cirrus&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flutter is Google&#39;s SDK for crafting beautiful, fast user experiences for mobile, web, and desktop from a single codebase. Flutter works with existing code, is used by developers and organizations around the world, and is free and open source.&lt;/p&gt; &#xA;&lt;p&gt;The Flutter Engine is a portable runtime for hosting &lt;a href=&#34;https://flutter.dev&#34;&gt;Flutter&lt;/a&gt; applications. It implements Flutter&#39;s core libraries, including animation and graphics, file and network I/O, accessibility support, plugin architecture, and a Dart runtime and compile toolchain. Most developers will interact with Flutter via the &lt;a href=&#34;https://github.com/flutter/flutter&#34;&gt;Flutter Framework&lt;/a&gt;, which provides a modern, reactive framework, and a rich set of platform, layout and foundation widgets.&lt;/p&gt; &#xA;&lt;p&gt;If you want to run/contribute to Flutter Web engine, more tooling can be found at &lt;a href=&#34;https://github.com/flutter/engine/tree/main/lib/web_ui#using-felt&#34;&gt;felt&lt;/a&gt;. This is a tool written to make web engine development experience easy.&lt;/p&gt; &#xA;&lt;p&gt;If you are new to Flutter, then you will find more general information on the Flutter project, including tutorials and samples, on our Web site at &lt;a href=&#34;https://flutter.dev&#34;&gt;Flutter.dev&lt;/a&gt;. For specific information about Flutter&#39;s APIs, consider our API reference which can be found at the &lt;a href=&#34;https://docs.flutter.dev/&#34;&gt;docs.flutter.dev&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Flutter is a fully open source project, and we welcome contributions. Information on how to get started can be found at our &lt;a href=&#34;https://raw.githubusercontent.com/flutter/engine/main/CONTRIBUTING.md&#34;&gt;contributor guide&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/calculator</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/microsoft/calculator</id>
    <link href="https://github.com/microsoft/calculator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Windows Calculator: A simple yet powerful calculator that ships with Windows&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Calculator&lt;/h1&gt; &#xA;&lt;p&gt;The Windows Calculator app is a modern Windows app written in C++ and C# that ships pre-installed with Windows. The app provides standard, scientific, and programmer calculator functionality, as well as a set of converters between various units of measurement and currencies.&lt;/p&gt; &#xA;&lt;p&gt;Calculator ships regularly with new features and bug fixes. You can get the latest version of Calculator in the &lt;a href=&#34;https://www.microsoft.com/store/apps/9WZDNCRFHVN5&#34;&gt;Microsoft Store&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/ms/calculator/_build/latest?definitionId=57&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/ms/calculator/_apis/build/status/Calculator-CI?branchName=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/calculator/master/docs/Images/CalculatorScreenshot.png&#34; alt=&#34;Calculator Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Standard Calculator functionality which offers basic operations and evaluates commands immediately as they are entered.&lt;/li&gt; &#xA; &lt;li&gt;Scientific Calculator functionality which offers expanded operations and evaluates commands using order of operations.&lt;/li&gt; &#xA; &lt;li&gt;Programmer Calculator functionality which offers common mathematical operations for developers including conversion between common bases.&lt;/li&gt; &#xA; &lt;li&gt;Date Calculation functionality which offers the difference between two dates, as well as the ability to add/subtract years, months and/or days to/from a given input date.&lt;/li&gt; &#xA; &lt;li&gt;Calculation history and memory capabilities.&lt;/li&gt; &#xA; &lt;li&gt;Conversion between many units of measurement.&lt;/li&gt; &#xA; &lt;li&gt;Currency conversion based on data retrieved from &lt;a href=&#34;https://www.bing.com&#34;&gt;Bing&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Arbitrary-precision_arithmetic&#34;&gt;Infinite precision&lt;/a&gt; for basic arithmetic operations (addition, subtraction, multiplication, division) so that calculations never lose precision.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Prerequisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Your computer must be running Windows 10, version 1809 or newer. Windows 11 is recommended.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the latest version of &lt;a href=&#34;https://developer.microsoft.com/en-us/windows/downloads&#34;&gt;Visual Studio&lt;/a&gt; (the free community edition is sufficient).&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Install the &#34;Universal Windows Platform Development&#34; workload.&lt;/li&gt; &#xA;   &lt;li&gt;Install the optional &#34;C++ Universal Windows Platform tools&#34; component.&lt;/li&gt; &#xA;   &lt;li&gt;Install the latest Windows 11 SDK.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/calculator/master/docs/Images/VSInstallationScreenshot.png&#34; alt=&#34;Visual Studio Installation Screenshot&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=TeamXavalon.XAMLStyler&#34;&gt;XAML Styler&lt;/a&gt; Visual Studio extension.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Get the code:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git clone https://github.com/Microsoft/calculator.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/calculator/master/src/Calculator.sln&#34;&gt;src\Calculator.sln&lt;/a&gt; in Visual Studio to build and run the Calculator app.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For a general description of the Calculator project architecture see &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/calculator/master/docs/ApplicationArchitecture.md&#34;&gt;ApplicationArchitecture.md&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To run the UI Tests, you need to make sure that &lt;a href=&#34;https://github.com/microsoft/WinAppDriver/releases/latest&#34;&gt;Windows Application Driver (WinAppDriver)&lt;/a&gt; is installed.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Want to contribute? The team encourages community feedback and contributions. Please follow our &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/calculator/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If Calculator is not working properly, please file a report in the &lt;a href=&#34;https://insider.windows.com/en-us/fb/?contextid=130&#34;&gt;Feedback Hub&lt;/a&gt;. We also welcome &lt;a href=&#34;https://github.com/Microsoft/calculator/issues&#34;&gt;issues submitted on GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;For information regarding Windows Calculator plans and release schedule, please see the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/calculator/master/docs/Roadmap.md&#34;&gt;Windows Calculator Roadmap&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Graphing Mode&lt;/h3&gt; &#xA;&lt;p&gt;Adding graphing calculator functionality &lt;a href=&#34;https://github.com/Microsoft/calculator/issues/338&#34;&gt;is on the project roadmap&lt;/a&gt; and we hope that this project can create a great end-user experience around graphing. To that end, the UI from the official in-box Windows Calculator is currently part of this repository, although the proprietary Microsoft-built graphing engine, which also drives graphing in Microsoft Mathematics and OneNote, is not. Community members can still be involved in the creation of the UI, however developer builds will not have graphing functionality due to the use of a &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/calculator/master/src/GraphingImpl/Mocks&#34;&gt;mock implementation of the engine&lt;/a&gt; built on top of a &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/calculator/master/src/GraphingInterfaces&#34;&gt;common graphing API&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Diagnostic Data&lt;/h2&gt; &#xA;&lt;p&gt;This project collects usage data and sends it to Microsoft to help improve our products and services. Read our &lt;a href=&#34;https://go.microsoft.com/fwlink/?LinkId=521839&#34;&gt;privacy statement&lt;/a&gt; to learn more. Diagnostic data is disabled in development builds by default, and can be enabled with the &lt;code&gt;SEND_DIAGNOSTICS&lt;/code&gt; build flag.&lt;/p&gt; &#xA;&lt;h2&gt;Currency Converter&lt;/h2&gt; &#xA;&lt;p&gt;Windows Calculator includes a currency converter feature that uses mock data in developer builds. The data that Microsoft uses for the currency converter feature (e.g., in the retail version of the application) is not licensed for your use. The mock data will be clearly identifiable as it references planets instead of countries, and remains static regardless of selected inputs.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting Security Issues&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/calculator/master/SECURITY.md&#34;&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/calculator/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>oneapi-src/oneDNN</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/oneapi-src/oneDNN</id>
    <link href="https://github.com/oneapi-src/oneDNN" rel="alternate"></link>
    <summary type="html">&lt;p&gt;oneAPI Deep Neural Network Library (oneDNN)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;oneAPI Deep Neural Network Library (oneDNN)&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This software was previously known as &lt;strong&gt;Intel(R) Math Kernel Library for Deep Neural Networks (Intel(R) MKL-DNN)&lt;/strong&gt; and &lt;strong&gt;Deep Neural Network Library (DNNL)&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;img align=&#34;left&#34; src=&#34;https://spec.oneapi.io/oneapi-logo-white-scaled.jpg&#34; alt=&#34;oneAPI logo&#34;&gt; &#xA;&lt;p&gt;oneAPI Deep Neural Network Library (oneDNN) is an open-source cross-platform performance library of basic building blocks for deep learning applications. oneDNN is part of &lt;a href=&#34;https://oneapi.io&#34;&gt;oneAPI&lt;/a&gt;. The library is optimized for Intel(R) Architecture Processors, Intel Processor Graphics and Xe Architecture graphics. oneDNN has experimental support for the following architectures: Arm* 64-bit Architecture (AArch64), NVIDIA* GPU, OpenPOWER* Power ISA (PPC64), IBMz* (s390x), and RISC-V.&lt;/p&gt; &#xA;&lt;p&gt;oneDNN is intended for deep learning applications and framework developers interested in improving application performance on Intel CPUs and GPUs. Deep learning practitioners should use one of the &lt;a href=&#34;https://raw.githubusercontent.com/oneapi-src/oneDNN/master/#applications-enabled-with-onednn&#34;&gt;applications enabled with oneDNN&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oneapi-src/oneDNN/master/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oneapi-src/oneDNN/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oneapi-src/oneDNN/master/#system-requirements&#34;&gt;System Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oneapi-src/oneDNN/master/#applications-enabled-with-onednn&#34;&gt;Applications Enabled with oneDNN&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oneapi-src/oneDNN/master/#support&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oneapi-src/oneDNN/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oneapi-src/oneDNN/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oneapi-src/oneDNN/master/#security&#34;&gt;Security&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oneapi-src/oneDNN/master/#trademark-information&#34;&gt;Trademark Information&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oneapi-src.github.io/oneDNN&#34;&gt;Developer guide&lt;/a&gt; explains programming model, supported functionality, and implementation details, and includes annotated examples.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oneapi-src.github.io/oneDNN/group_dnnl_api.html&#34;&gt;API reference&lt;/a&gt; provides a comprehensive reference of the library API.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Binary distribution of this software is available in:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/onednn&#34;&gt;Anaconda&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://software.intel.com/en-us/oneapi/onednn&#34;&gt;Intel oneAPI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The packages do not include library dependencies and these need to be resolved in the application at build time. See the &lt;a href=&#34;https://raw.githubusercontent.com/oneapi-src/oneDNN/master/#system-requirements&#34;&gt;System Requirements&lt;/a&gt; section below and the &lt;a href=&#34;https://oneapi-src.github.io/oneDNN/dev_guide_build_options.html&#34;&gt;Build Options&lt;/a&gt; section in the &lt;a href=&#34;https://oneapi-src.github.io/oneDNN&#34;&gt;developer guide&lt;/a&gt; for more details on CPU and GPU runtimes.&lt;/p&gt; &#xA;&lt;p&gt;If the configuration you need is not available, you can &lt;a href=&#34;https://oneapi-src.github.io/oneDNN/dev_guide_build.html&#34;&gt;build the library from source&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;System Requirements&lt;/h1&gt; &#xA;&lt;p&gt;oneDNN supports platforms based on the following architectures:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/X86-64&#34;&gt;Intel 64 or AMD64&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.arm.com/architectures/cpu-architecture/a-profile&#34;&gt;Arm 64-bit Architecture (AArch64)&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openpowerfoundation.org/&#34;&gt;OpenPOWER&lt;/a&gt; / &lt;a href=&#34;https://en.wikipedia.org/wiki/Power_ISA&#34;&gt;IBM Power ISA&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Z/Architecture&#34;&gt;IBMz z/Architecture (s390x)&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/RISC-V&#34;&gt;RISC-V 64-bit (RV64)&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Arm 64-bit Architecture (AArch64), Power ISA (PPC64), IBMz (s390x), and RISC-V (RV64) support is &lt;strong&gt;experimental&lt;/strong&gt; with limited testing validation.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The library is optimized for the following CPUs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Intel Atom(R) processors (at least Intel SSE4.1 support is required)&lt;/li&gt; &#xA; &lt;li&gt;Intel Core(TM) processors (at least Intel SSE4.1 support is required)&lt;/li&gt; &#xA; &lt;li&gt;Intel Xeon(R) processor E3, E5, and E7 family (formerly Sandy Bridge, Ivy Bridge, Haswell, and Broadwell)&lt;/li&gt; &#xA; &lt;li&gt;Intel Xeon Scalable processor (formerly Skylake, Cascade Lake, and Cooper Lake)&lt;/li&gt; &#xA; &lt;li&gt;future Intel Xeon Scalable processor (code name Sapphire Rapids)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On a CPU based on Intel 64 or on AMD64 architecture, oneDNN detects the instruction set architecture (ISA) at runtime and uses just-in-time (JIT) code generation to deploy the code optimized for the latest supported ISA. Future ISAs may have initial support in the library disabled by default and require the use of run-time controls to enable them. See &lt;a href=&#34;https://oneapi-src.github.io/oneDNN/dev_guide_cpu_dispatcher_control.html&#34;&gt;CPU dispatcher control&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;On a CPU based on Arm AArch64 architecture, oneDNN can be built with Arm Compute Library integration. Compute Library is an open-source library for machine learning applications and provides AArch64 optimized implementations of core functions. This functionality currently requires that Compute Library is downloaded and built separately, see &lt;a href=&#34;https://oneapi-src.github.io/oneDNN/dev_guide_build.html&#34;&gt;Build from Source&lt;/a&gt;. oneDNN is only compatible with Compute Library versions 22.02 or later.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;On macOS, applications that use oneDNN may need to request special entitlements if they use the hardened runtime. See the &lt;a href=&#34;https://oneapi-src.github.io/oneDNN/dev_guide_link.html&#34;&gt;linking guide&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The library is optimized for the following GPUs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Intel Processor Graphics based on Gen9, Gen9.5 and Gen11, and Gen12 architectures&lt;/li&gt; &#xA; &lt;li&gt;Intel Iris(R) Xe graphics (formerly DG1)&lt;/li&gt; &#xA; &lt;li&gt;future Intel Arc(TM) graphics (code name Alchemist and DG2)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements for Building from Source&lt;/h2&gt; &#xA;&lt;p&gt;oneDNN supports systems meeting the following requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Operating system with Intel 64 / Arm 64 / Power / IBMz architecture support&lt;/li&gt; &#xA; &lt;li&gt;C++ compiler with C++11 standard support&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cmake.org/download/&#34;&gt;CMake&lt;/a&gt; 2.8.12 or later&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/arm-software/ComputeLibrary&#34;&gt;Arm Compute Library&lt;/a&gt; for builds using Compute Library on AArch64.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following tools are required to build oneDNN documentation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.doxygen.nl/download.html#srcbin&#34;&gt;Doxygen&lt;/a&gt; 1.8.5 or later&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vovkos/doxyrest&#34;&gt;Doxyrest&lt;/a&gt; 2.1.2 or later&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sphinx-doc.org/en/master/usage/installation.html&#34;&gt;Sphinx&lt;/a&gt; 4.0.2 or later&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sphinx-book-theme.readthedocs.io/en/latest&#34;&gt;sphinx-book-theme&lt;/a&gt; 0.0.41 or later&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Configurations of CPU and GPU engines may introduce additional build time dependencies.&lt;/p&gt; &#xA;&lt;h3&gt;CPU Engine&lt;/h3&gt; &#xA;&lt;p&gt;oneDNN CPU engine is used to execute primitives on Intel Architecture Processors, 64-bit Arm Architecture (AArch64) processors, 64-bit Power ISA (PPC64) processors, IBMz (s390x), and compatible devices.&lt;/p&gt; &#xA;&lt;p&gt;The CPU engine is built by default but can be disabled at build time by setting &lt;code&gt;DNNL_CPU_RUNTIME&lt;/code&gt; to &lt;code&gt;NONE&lt;/code&gt;. In this case, GPU engine must be enabled. The CPU engine can be configured to use the OpenMP, TBB or DPCPP runtime. The following additional requirements apply:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OpenMP runtime requires C++ compiler with OpenMP 2.0 or later standard support&lt;/li&gt; &#xA; &lt;li&gt;TBB runtime requires &lt;a href=&#34;https://www.threadingbuildingblocks.org/&#34;&gt;Threading Building Blocks (TBB)&lt;/a&gt; 2017 or later.&lt;/li&gt; &#xA; &lt;li&gt;DPCPP runtime requires &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://software.intel.com/en-us/oneapi/dpc-compiler&#34;&gt;Intel oneAPI DPC++ Compiler&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.threadingbuildingblocks.org/&#34;&gt;Threading Building Blocks (TBB)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some implementations rely on OpenMP 4.0 SIMD extensions. For the best performance results on Intel Architecture Processors we recommend using the Intel C++ Compiler.&lt;/p&gt; &#xA;&lt;h3&gt;GPU Engine&lt;/h3&gt; &#xA;&lt;p&gt;Intel Processor Graphics and Xe Architecture graphics are supported by the oneDNN GPU engine. The GPU engine is disabled in the default build configuration. The following additional requirements apply when GPU engine is enabled:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OpenCL runtime requires &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;OpenCL* runtime library (OpenCL version 1.2 or later)&lt;/li&gt; &#xA;   &lt;li&gt;OpenCL driver (with kernel language support for OpenCL C 2.0 or later) with Intel subgroups and USM extensions support&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;DPCPP runtime requires &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://software.intel.com/en-us/oneapi/dpc-compiler&#34;&gt;Intel oneAPI DPC++ Compiler&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;OpenCL runtime library (OpenCL version 1.2 or later)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/oneapi-src/level-zero&#34;&gt;oneAPI Level Zero&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;DPCPP runtime with NVIDIA GPU support requires &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/intel/llvm&#34;&gt;oneAPI DPC++ Compiler&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;NVIDIA CUDA* driver&lt;/li&gt; &#xA;   &lt;li&gt;cuBLAS 10.1 or later&lt;/li&gt; &#xA;   &lt;li&gt;cuDNN 7.6 or later&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;NVIDIA GPU support is experimental. General information, build instructions and implementation limitations is available in &lt;a href=&#34;https://github.com/oneapi-src/oneDNN/raw/master/src/gpu/nvidia/README.md&#34;&gt;NVIDIA backend readme&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Runtime Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;When oneDNN is built from source, the library runtime dependencies and specific versions are defined by the build environment.&lt;/p&gt; &#xA;&lt;h4&gt;Linux&lt;/h4&gt; &#xA;&lt;p&gt;Common dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GNU C Library (&lt;code&gt;libc.so&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;GNU Standard C++ Library v3 (&lt;code&gt;libstdc++.so&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Dynamic Linking Library (&lt;code&gt;libdl.so&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;C Math Library (&lt;code&gt;libm.so&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;POSIX Threads Library (&lt;code&gt;libpthread.so&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Runtime-specific dependencies:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Runtime configuration&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Compiler&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Dependency&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;DNNL_CPU_RUNTIME=OMP&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;GCC&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;GNU OpenMP runtime (&lt;code&gt;libgomp.so&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;DNNL_CPU_RUNTIME=OMP&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Intel C/C++ Compiler&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Intel OpenMP runtime (&lt;code&gt;libiomp5.so&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;DNNL_CPU_RUNTIME=OMP&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Clang&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Intel OpenMP runtime (&lt;code&gt;libiomp5.so&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;DNNL_CPU_RUNTIME=TBB&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;any&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;TBB (&lt;code&gt;libtbb.so&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;DNNL_CPU_RUNTIME=DPCPP&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Intel oneAPI DPC++ Compiler&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Intel oneAPI DPC++ Compiler runtime (&lt;code&gt;libsycl.so&lt;/code&gt;), TBB (&lt;code&gt;libtbb.so&lt;/code&gt;), OpenCL loader (&lt;code&gt;libOpenCL.so&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;DNNL_GPU_RUNTIME=OCL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;any&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OpenCL loader (&lt;code&gt;libOpenCL.so&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;DNNL_GPU_RUNTIME=DPCPP&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Intel oneAPI DPC++ Compiler&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Intel oneAPI DPC++ Compiler runtime (&lt;code&gt;libsycl.so&lt;/code&gt;), OpenCL loader (&lt;code&gt;libOpenCL.so&lt;/code&gt;), oneAPI Level Zero loader (&lt;code&gt;libze_loader.so&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Windows&lt;/h4&gt; &#xA;&lt;p&gt;Common dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Microsoft Visual C++ Redistributable (&lt;code&gt;msvcrt.dll&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Runtime-specific dependencies:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Runtime configuration&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Compiler&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Dependency&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;DNNL_CPU_RUNTIME=OMP&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Microsoft Visual C++ Compiler&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;No additional requirements&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;DNNL_CPU_RUNTIME=OMP&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Intel C/C++ Compiler&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Intel OpenMP runtime (&lt;code&gt;iomp5.dll&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;DNNL_CPU_RUNTIME=TBB&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;any&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;TBB (&lt;code&gt;tbb.dll&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;DNNL_CPU_RUNTIME=DPCPP&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Intel oneAPI DPC++ Compiler&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Intel oneAPI DPC++ Compiler runtime (&lt;code&gt;sycl.dll&lt;/code&gt;), TBB (&lt;code&gt;tbb.dll&lt;/code&gt;), OpenCL loader (&lt;code&gt;OpenCL.dll&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;DNNL_GPU_RUNTIME=OCL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;any&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OpenCL loader (&lt;code&gt;OpenCL.dll&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;DNNL_GPU_RUNTIME=DPCPP&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Intel oneAPI DPC++ Compiler&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Intel oneAPI DPC++ Compiler runtime (&lt;code&gt;sycl.dll&lt;/code&gt;), OpenCL loader (&lt;code&gt;OpenCL.dll&lt;/code&gt;), oneAPI Level Zero loader (&lt;code&gt;ze_loader.dll&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;macOS&lt;/h4&gt; &#xA;&lt;p&gt;Common dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;System C/C++ runtime (&lt;code&gt;libc++.dylib&lt;/code&gt;, &lt;code&gt;libSystem.dylib&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Runtime-specific dependencies:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Runtime configuration&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Compiler&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Dependency&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;DNNL_CPU_RUNTIME=OMP&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Intel C/C++ Compiler&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Intel OpenMP runtime (&lt;code&gt;libiomp5.dylib&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;code&gt;DNNL_CPU_RUNTIME=TBB&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;any&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;TBB (&lt;code&gt;libtbb.dylib&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Validated Configurations&lt;/h3&gt; &#xA;&lt;p&gt;CPU engine was validated on RedHat* Enterprise Linux 7 with&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GNU Compiler Collection 4.8, 5.4, 6.1, 7.2, 8.1, and 9.1&lt;/li&gt; &#xA; &lt;li&gt;Clang* 3.8.1, 7.1, 8.0, and 9.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://software.intel.com/content/www/us/en/develop/tools/parallel-studio-xe.html&#34;&gt;Intel C/C++ Compiler&lt;/a&gt; 19.1&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://software.intel.com/en-us/oneapi/dpc-compiler&#34;&gt;Intel oneAPI DPC++ Compiler&lt;/a&gt; 2021.1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;on Windows Server* 2016 with&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Microsoft Visual Studio 2015, 2017, and 2019&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://software.intel.com/content/www/us/en/develop/tools/parallel-studio-xe.html&#34;&gt;Intel C/C++ Compiler&lt;/a&gt; 19.1&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://software.intel.com/en-us/oneapi/dpc-compiler&#34;&gt;Intel oneAPI DPC++ Compiler&lt;/a&gt; 2021.1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;on macOS 10.13 (High Sierra) with&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apple LLVM version 9.1&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://software.intel.com/content/www/us/en/develop/tools/parallel-studio-xe.html&#34;&gt;Intel C/C++ Compiler&lt;/a&gt; 19.1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;GPU engine was validated on Ubuntu* 20.04 with&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GNU Compiler Collection 7.2, 8.1, and 9.1&lt;/li&gt; &#xA; &lt;li&gt;Clang 3.8.1, 7.1, 8.0, and 9.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://software.intel.com/content/www/us/en/develop/tools/parallel-studio-xe.html&#34;&gt;Intel C/C++ Compiler&lt;/a&gt; 19.1&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://software.intel.com/en-us/oneapi/dpc-compiler&#34;&gt;Intel oneAPI DPC++ Compiler&lt;/a&gt; 2021.1&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dgpu-docs.intel.com/index.html&#34;&gt;Intel Software for General Purpose GPU capabilities&lt;/a&gt; latest stable version available at the time of release&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;on Windows Server 2019 with&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Microsoft Visual Studio 2015, 2017, and 2019&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://software.intel.com/content/www/us/en/develop/tools/parallel-studio-xe.html&#34;&gt;Intel C/C++ Compiler&lt;/a&gt; 19.1&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://software.intel.com/en-us/oneapi/dpc-compiler&#34;&gt;Intel oneAPI DPC++ Compiler&lt;/a&gt; 2021.1&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://downloadcenter.intel.com/download/29808/Intel-Graphics-Windows-10-DCH-Drivers&#34;&gt;Intel Graphics - Windows 10 DCH Drivers&lt;/a&gt; latest stable version available at the time of release&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements for Pre-built Binaries&lt;/h2&gt; &#xA;&lt;p&gt;See the README included in the corresponding binary package.&lt;/p&gt; &#xA;&lt;h1&gt;Applications Enabled with oneDNN&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mxnet.apache.org&#34;&gt;Apache* MXNet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://singa.apache.org&#34;&gt;Apache* SINGA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://deeplearning4j.org&#34;&gt;DeepLearning4J*&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/facebookresearch/flashlight&#34;&gt;Flashlight*&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cselab/korali&#34;&gt;Korali&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mathworks.com/help/deeplearning/&#34;&gt;MATLAB* Deep Learning Toolbox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/onnxruntime&#34;&gt;ONNX Runtime&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://01.org/openvinotoolkit&#34;&gt;OpenVINO(TM) toolkit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.paddlepaddle.org&#34;&gt;PaddlePaddle*&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pytorch.org/&#34;&gt;PyTorch*&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tensorflow.org&#34;&gt;Tensorflow*&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Support&lt;/h1&gt; &#xA;&lt;p&gt;Please submit your questions, feature requests, and bug reports on the &lt;a href=&#34;https://github.com/oneapi-src/oneDNN/issues&#34;&gt;GitHub issues&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;You may reach out to project maintainers privately at &lt;a href=&#34;mailto:dnnl.maintainers@intel.com&#34;&gt;dnnl.maintainers@intel.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;We welcome community contributions to oneDNN. If you have an idea on how to improve the library:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For changes impacting the public API or library overall, such as adding new primitives or changes to the architecture, submit an &lt;a href=&#34;https://github.com/oneapi-src/oneDNN/tree/rfcs&#34;&gt;RFC pull request&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Ensure that the changes are consistent with the &lt;a href=&#34;https://raw.githubusercontent.com/oneapi-src/oneDNN/master/CONTRIBUTING.md#code-contribution-guidelines&#34;&gt;code contribution guidelines&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/oneapi-src/oneDNN/master/CONTRIBUTING.md#coding-standards&#34;&gt;coding standards&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Ensure that you can build the product and run all the examples with your patch.&lt;/li&gt; &#xA; &lt;li&gt;Submit a &lt;a href=&#34;https://github.com/oneapi-src/oneDNN/pulls&#34;&gt;pull request&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For additional details, see &lt;a href=&#34;https://raw.githubusercontent.com/oneapi-src/oneDNN/master/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the &lt;a href=&#34;https://raw.githubusercontent.com/oneapi-src/oneDNN/master/CODE_OF_CONDUCT.md&#34;&gt;Contributor Covenant&lt;/a&gt; code of conduct.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;oneDNN is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/oneapi-src/oneDNN/master/LICENSE&#34;&gt;Apache License Version 2.0&lt;/a&gt;. Refer to the &#34;&lt;a href=&#34;https://raw.githubusercontent.com/oneapi-src/oneDNN/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt;&#34; file for the full license text and copyright notice.&lt;/p&gt; &#xA;&lt;p&gt;This distribution includes third party software governed by separate license terms.&lt;/p&gt; &#xA;&lt;p&gt;3-clause BSD license:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/herumi/xbyak&#34;&gt;Xbyak&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/googletest&#34;&gt;gtest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/intel/ittapi&#34;&gt;Instrumentation and Tracing Technology API (ITT API)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Kitware/CMake&#34;&gt;CMake&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;2-clause BSD license:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sphinx-doc.org/&#34;&gt;Sphinx&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Apache License Version 2.0:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fujitsu/xbyak_aarch64&#34;&gt;Xbyak_aarch64&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Boost Software License, Version 1.0:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.boost.org/&#34;&gt;Boost C++ Libraries&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;MIT License:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/intel/compute-runtime&#34;&gt;Intel Graphics Compute Runtime for oneAPI Level Zero and OpenCL Driver&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/intel/intel-graphics-compiler&#34;&gt;Intel Graphics Compiler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/oneapi-src/level-zero&#34;&gt;oneAPI Level Zero&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vovkos/doxyrest&#34;&gt;Doxyrest&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This third party software, even if included with the distribution of the Intel software, may be governed by separate license terms, including without limitation, third party license terms, other Intel software license terms, and open source software license terms. These separate license terms govern your use of the third party programs as set forth in the &#34;&lt;a href=&#34;https://raw.githubusercontent.com/oneapi-src/oneDNN/master/THIRD-PARTY-PROGRAMS&#34;&gt;THIRD-PARTY-PROGRAMS&lt;/a&gt;&#34; file.&lt;/p&gt; &#xA;&lt;h1&gt;Security&lt;/h1&gt; &#xA;&lt;p&gt;See Intel&#39;s &lt;a href=&#34;https://www.intel.com/content/www/us/en/security-center/default.html&#34;&gt;Security Center&lt;/a&gt; for information on how to report a potential security issue or vulnerability.&lt;/p&gt; &#xA;&lt;p&gt;See also: &lt;a href=&#34;https://raw.githubusercontent.com/oneapi-src/oneDNN/master/SECURITY.md&#34;&gt;Security Policy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Trademark Information&lt;/h1&gt; &#xA;&lt;p&gt;Intel, the Intel logo, Arc, Intel Atom, Intel Core, Iris, OpenVINO, the OpenVINO logo, Pentium, VTune, and Xeon are trademarks of Intel Corporation or its subsidiaries.&lt;/p&gt; &#xA;&lt;p&gt;* Other names and brands may be claimed as the property of others.&lt;/p&gt; &#xA;&lt;p&gt;Microsoft, Windows, and the Windows logo are trademarks, or registered trademarks of Microsoft Corporation in the United States and/or other countries.&lt;/p&gt; &#xA;&lt;p&gt;OpenCL and the OpenCL logo are trademarks of Apple Inc. used by permission by Khronos.&lt;/p&gt; &#xA;&lt;p&gt;(C) Intel Corporation&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cocos/cocos-engine</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/cocos/cocos-engine</id>
    <link href="https://github.com/cocos/cocos-engine" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cocos Engine is an open-source framework for building 2D &amp; 3D real-time rendering and interactive contents, especially video games, which can be deployed to mobile, desktop and web. It is inherited from the legacy Cocos2d-x with a redesigned modern architecture. To run this engine, please download Cocos Creator.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.cocos.com/&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1503156/112012067-d5cdf580-8b63-11eb-819a-1c32cf253b25.png&#34; alt=&#34;Cocos Creator Logo&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/cocos/cocos-engine/stargazers&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/cocos/cocos-engine.svg?style=flat-square&amp;amp;colorB=4183c4&#34; alt=&#34;stars&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/cocos-creator/engine/network&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/cocos/cocos-engine.svg?style=flat-square&amp;amp;colorB=4183c4&#34; alt=&#34;forks&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/cocos-creator/engine/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/tag/cocos/cocos-engine.svg?label=version&amp;amp;style=flat-square&amp;amp;colorB=4183c4&#34; alt=&#34;version&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/cocos/cocos-engine/develop/licenses/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square&amp;amp;colorB=4183c4&#34; alt=&#34;license&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/CocosEngine&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/CocosEngine.svg?logo=twitter&amp;amp;label=follow&amp;amp;style=flat-square&amp;amp;colorB=4183c4&#34; alt=&#34;twitter&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Engine for Cocos Creator&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1503156/111035862-53548000-8457-11eb-8e8b-52d854caf627.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Cocos Engine is the framework for Cocos Creator editor. Cocos Creator is the new generation of game development tool in Cocos family, it brings a complete set of 3D features and provides an intuitive, low cost and collaboration friendly workflow to game developers.&lt;/p&gt; &#xA;&lt;p&gt;Cocos Creator inherited many good qualities and cool features from its previous versions, such as cross-platform support including instant gaming platforms like WeChat mini game, asset management, powerful animation editing, etc. Furthermore, Cocos Creator has pushed our technology to a whole new level. Our GFX implementation is designed to adapt to the latest graphic backend APIs, it already supports WebGL 2 and can be seamlessly fall back to WebGL 1, it will support Vulkan and Metal in the native build. The material system is built on our own effect format which uses GLSL 300 and can be easily adapted to lower version on low end devices. Developers can produce high performance, extremely expressive shaders with good compatibility. Along with physical based camera and lighting, high level game graphic can be easily achieved. Our pure GPU driven skeleton animation also make sure your game runs as smooth as possible. Besides all these exciting features, Cocos Creator have builtin physics support, terrain editing support, visual effect editing, ui system, TypeScript support, instant preview etc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1503156/111037166-f27c7600-845d-11eb-988f-4c2c8b5c7321.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repo is the engine part of Cocos Creator, it&#39;s mainly written in TypeScript and support users to use TypeScript or ES6 to write game logics. The engine itself is mostly self-contained, with full-fledged runtime modules including lighting, material, particle, animation, physical, UI, terrain, sound, resource and scene-graph management, etc. It supports both native and web platforms, including Windows, Mac, iOS, Android, Web. What&#39;s more exciting is that it supports rapidly expanding instant gaming platforms like WeChat Mini Game and Facebook Instant Games.&lt;/p&gt; &#xA;&lt;p&gt;The engine is naturally integrated within Cocos Creator, designed to only be the essential runtime library and not to be used independently.&lt;/p&gt; &#xA;&lt;h2&gt;Developer&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisite&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://nodejs.org/&#34;&gt;node.js v9.11.2 +&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://github.com/gulpjs/gulp/tree/master/docs/getting-started&#34;&gt;gulp-cli v2.3.0 +&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;p&gt;In the cloned repo, run the following command to setup dev environment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# download &amp;amp; build engine dependencies&#xA;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is all you have to do to setup engine development environment.&lt;/p&gt; &#xA;&lt;h3&gt;Build&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If running inside Cocos Creator, the engine will automatically compile and build after the editor window is opened.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Outside the editor, you need to run the following command to build:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Example Project&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cocos-creator/example-3d&#34;&gt;Example Cases&lt;/a&gt;: Simple yet expressive demo scenes for baseline testing and topic-specific case study.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cocos-creator/tutorial-mind-your-step-3d&#34;&gt;Mind Your Step 3D&lt;/a&gt;: Beginner&#39;s step-by-step tutorial project repo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cocos-creator/demo-ui/tree/3d&#34;&gt;UI Demo&lt;/a&gt;: use cases for various kinds of UI components.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cocos-creator/test-cases-3d&#34;&gt;Test Cases&lt;/a&gt;: Unit test scenes for every engine module.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cocos.com/products#CocosCreator&#34;&gt;Official site&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cocos.com/creator&#34;&gt;Download&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.cocos.com/creator/manual/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.cocos.com/creator/api/&#34;&gt;API References&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discuss.cocos2d-x.org/c/creator&#34;&gt;Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Road Map: To be announced&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>project-chip/connectedhomeip</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/project-chip/connectedhomeip</id>
    <link href="https://github.com/project-chip/connectedhomeip" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Matter (formerly Project CHIP) is creating more connections between more objects, simplifying development for manufacturers and increasing compatibility for consumers, guided by the Connectivity Standards Alliance (formerly Zigbee Alliance).&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Matter&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/build.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Builds/badge.svg?sanitize=true&#34; alt=&#34;Builds&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-efr32.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20EFR32/badge.svg?sanitize=true&#34; alt=&#34;Examples - EFR32&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-esp32.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20ESP32/badge.svg?sanitize=true&#34; alt=&#34;Examples - ESP32&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-linux-imx.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20i.MX%20Linux/badge.svg?sanitize=true&#34; alt=&#34;Examples - i.MX Linux&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-k32w.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20K32W%20with%20SE051/badge.svg?sanitize=true&#34; alt=&#34;Examples - K32W with SE051&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-linux-standalone.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20Linux%20Standalone/badge.svg?sanitize=true&#34; alt=&#34;Examples - Linux Standalone&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-nrfconnect.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20nRF%20Connect%20SDK/badge.svg?sanitize=true&#34; alt=&#34;Examples - nRF Connect SDK&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-qpg.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20QPG/badge.svg?sanitize=true&#34; alt=&#34;Examples - QPG&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-cc13x2x7_26x2x7.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20TI%20CC26X2X7/badge.svg?sanitize=true&#34; alt=&#34;Examples - TI CC26X2X7&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/android.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Android/badge.svg?sanitize=true&#34; alt=&#34;Android&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/unit_integration_test.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Unit%20/%20Interation%20Tests/badge.svg?sanitize=true&#34; alt=&#34;Unit / Interation Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/cirque.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Cirque/badge.svg?sanitize=true&#34; alt=&#34;Cirque&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/qemu.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/QEMU/badge.svg?sanitize=true&#34; alt=&#34;QEMU&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/zap_templates.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/ZAP/badge.svg?sanitize=true&#34; alt=&#34;ZAP Templates&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;What is Matter?&lt;/h1&gt; &#xA;&lt;p&gt;Matter (formerly Project Connected Home over IP, or Project CHIP) is a new Working Group within the Connectivity Standards Alliance (CSA, formerly Zigbee Alliance). This Working Group plans to develop and promote the adoption of a new, royalty-free connectivity standard to increase compatibility among smart home products, with security as a fundamental design tenet.&lt;/p&gt; &#xA;&lt;p&gt;The goal of the Matter project is to simplify development for manufacturers and increase compatibility for consumers. The project is built around a shared belief that smart home devices should be secure, reliable, and seamless to use. By building upon Internet Protocol (IP), the project aims to enable communication across smart home devices, mobile apps, and cloud services and to define a specific set of IP-based networking technologies for device certification.&lt;/p&gt; &#xA;&lt;p&gt;The CSA officially opened the Matter Working Group on January 17, 2020 and is in the process of drafting the specification.&lt;/p&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://buildwithmatter.com&#34;&gt;buildwithmatter.com&lt;/a&gt; to learn more and read the latest news and updates about the project.&lt;/p&gt; &#xA;&lt;h1&gt;Project Overview&lt;/h1&gt; &#xA;&lt;h2&gt;Development Goals&lt;/h2&gt; &#xA;&lt;p&gt;Matter is developed with the following goals and principles in mind:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Unifying:&lt;/strong&gt; Matter will produce a new specification, building with and on top of market-tested, existing technologies.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Interoperable:&lt;/strong&gt; The specification permits communication between any Matter-certified device, subject to users’ permission.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Secure:&lt;/strong&gt; The specification leverages modern security practices and protocols.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;User Control:&lt;/strong&gt; The end user is in control of authorization for interaction with devices.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Federated:&lt;/strong&gt; No single entity serves as a throttle or a single-point-of-failure for root of trust.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Robust:&lt;/strong&gt; The set of protocols specify a complete lifecycle of a device — starting with the seamless out-of-box experience, through operational protocols, to device and system management specifications required for proper function in the presence of change.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Low Overhead:&lt;/strong&gt; The protocols are practically implementable on low compute-resource devices, such as MCUs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Pervasive:&lt;/strong&gt; The protocols are broadly deployable and accessible, thanks to leveraging IP and being implementable on low-capability devices.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ecosystem-Flexible:&lt;/strong&gt; The protocol must be flexible enough to accommodate deployment in ecosystems with differing policies.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Easy to Use:&lt;/strong&gt; The protocol should aim to provide smooth, cohesive, integrated provisioning and out-of-box experience.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Open:&lt;/strong&gt; The Project’s design and technical processes should be open and transparent to the general public, including to non-members wherever possible.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/project-chip/connectedhomeip/master/docs/images/CHIP_IP_pyramid.png&#34; alt=&#34;Matter Architecture Overview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Project, as illustrated above, defines the application layer that will be deployed on devices and controllers as well as the supported IPv6-based networks to help achieve our interoperability architectural goal. Matter will initially support Wi-Fi and Thread for core, operational communications and Bluetooth Low Energy (BLE) to simplify device commissioning and setup.&lt;/p&gt; &#xA;&lt;p&gt;The Application Layer can be further broken down into seven main components:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/project-chip/connectedhomeip/master/docs/images/CHIP_Arch_Pyramid.png&#34; alt=&#34;Matter Stack Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Application:&lt;/strong&gt; High order business logic of a device. For example, an application that is focused on lighting might contain logic to handle turning on/off the bulb as well as its color characteristics.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Data Model:&lt;/strong&gt; Data primitives that help describe the various functionalities of the devices. The Application operates on these data structures when there is intent to interact with the device.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Interaction Model:&lt;/strong&gt; Represents a set of actions that can be performed on the devices to interact with it. For example, reading or writing attributes on a device would correspond to interactions with the devices. These actions operate on the structures defined by the data model.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Action Framing:&lt;/strong&gt; Once an action is constructed using the Interaction Model, it is framed into a prescriptive packed binary format to enable being well represented on the “wire”.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Security:&lt;/strong&gt; An encoded action frame is then sent down to the Security Layer to encrypt and sign the payload to ensure that data is secured and authenticated by both sender and receiver of a packet.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Message Framing &amp;amp; Routing:&lt;/strong&gt; With an interaction encrypted and signed, the Message Layer constructs the payload format with required and optional header fields; which specify properties of the message as well as some routing information.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;IP Framing &amp;amp; Transport Management:&lt;/strong&gt; After the final payload has been constructed, it is sent to the underlying transport protocol for IP management of the data.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Current Status of Matter&lt;/h1&gt; &#xA;&lt;p&gt;Matter’s design and technical processes are intended to be open and transparent to the general public, including to Work Group non-members wherever possible. The availability of this GitHub repository and its source code under an Apache v2 license is an important and demonstrable step to achieving this commitment.&lt;/p&gt; &#xA;&lt;p&gt;Matter endeavors to bring together the best aspects of market-tested technologies and to redeploy them as a unified and cohesive whole-system solution. The overall goal of this approach is to bring the benefits of Matter to consumers and manufacturers as quickly as possible. As a result, what you observe in this repository is an implementation-first approach to the technical specification, vetting integrations in practice.&lt;/p&gt; &#xA;&lt;p&gt;The Matter repository is growing and evolving to implement the overall architecture. The repository currently contains the security foundations, message framing and dispatch, an implementation of the interaction model and data model. The code examples show simple interactions, and are supported on multiple transports -- Wi-Fi and Thread -- starting with resource-constrained (i.e., memory, processing) silicon platforms to help ensure Matter’s scalability.&lt;/p&gt; &#xA;&lt;h1&gt;How to Contribute&lt;/h1&gt; &#xA;&lt;p&gt;We welcome your contributions to Matter. Read our contribution guidelines &lt;a href=&#34;https://raw.githubusercontent.com/project-chip/connectedhomeip/master/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Building and Developing in Matter&lt;/h1&gt; &#xA;&lt;p&gt;Instructions about how to build Matter can be found &lt;a href=&#34;https://raw.githubusercontent.com/project-chip/connectedhomeip/master/docs/README.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Directory Structure&lt;/h1&gt; &#xA;&lt;p&gt;The Matter repository is structured as follows:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;File / Folder&lt;/th&gt; &#xA;   &lt;th&gt;Contents&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;build/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build system support content and build output directories&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/project-chip/connectedhomeip/master/docs/guides/BUILDING.md&#34;&gt;BUILDING.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;More detailed information on configuring and building Matter for different targets&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CODE_OF_CONDUCT.md&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Code of Conduct for Matter, and contributions to it&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/project-chip/connectedhomeip/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Guidelines for contributing to Matter&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;docs/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Documentation, including &lt;a href=&#34;https://raw.githubusercontent.com/project-chip/connectedhomeip/master/docs/guides&#34;&gt;guides&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;examples/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Example firmware applications that demonstrate use of the Matter technology&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;integrations/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Third party integrations related to this project&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;integrations/docker/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Docker scripts and Dockerfiles&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Matter &lt;a href=&#34;https://raw.githubusercontent.com/project-chip/connectedhomeip/master/LICENSE&#34;&gt;License file&lt;/a&gt; (Apache 2.0)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;BUILD.gn&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Top level GN build file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;README.md&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;src/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Implementation of Matter&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;third_party/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Third-party code used by Matter&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;scripts/&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Scripts needed to work with the Matter repository&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Matter is released under the &lt;a href=&#34;https://raw.githubusercontent.com/project-chip/connectedhomeip/master/LICENSE&#34;&gt;Apache 2.0 license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ros-planning/navigation2</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/ros-planning/navigation2</id>
    <link href="https://github.com/ros-planning/navigation2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ROS2 Navigation Framework and System&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nav2&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ros-planning/navigation2/actions/workflows/update_ci_image.yaml&#34;&gt;&lt;img src=&#34;https://github.com/ros-planning/navigation2/actions/workflows/update_ci_image.yaml/badge.svg?sanitize=true&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/ros-planning/navigation2&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/ros-planning/navigation2/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img height=&#34;300&#34; src=&#34;https://raw.githubusercontent.com/ros-planning/navigation2/main/doc/nav2_logo.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;For detailed instructions on how to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://navigation.ros.org/getting_started/index.html&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://navigation.ros.org/concepts/index.html&#34;&gt;Concepts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://navigation.ros.org/build_instructions/index.html#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://navigation.ros.org/build_instructions/index.html#install&#34;&gt;Install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://navigation.ros.org/tutorials/index.html&#34;&gt;General Tutorials&lt;/a&gt; and &lt;a href=&#34;https://navigation.ros.org/plugin_tutorials/index.html&#34;&gt;Algorithm Developer Tutorials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://navigation.ros.org/configuration/index.html&#34;&gt;Configure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://navigation.ros.org/plugins/index.html&#34;&gt;Navigation Plugins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://navigation.ros.org/migration/index.html&#34;&gt;Migration Guides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/orgs/ros-planning/packages/container/package/navigation2&#34;&gt;Container Images for Building Nav2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://navigation.ros.org/contribute/index.html&#34;&gt;Contribute&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please visit our &lt;a href=&#34;https://navigation.ros.org/&#34;&gt;documentation site&lt;/a&gt;. &lt;a href=&#34;https://join.slack.com/t/navigation2/shared_invite/zt-hu52lnnq-cKYjuhTY~sEMbZXL8p9tOw&#34;&gt;Please visit our community Slack here&lt;/a&gt; (if this link does not work, please contact maintainers to reactivate).&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you use the navigation framework, an algorithm from this repository, or ideas from it please cite this work in your papers!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;S. Macenski, F. Martín, R. White, J. Clavero. &lt;a href=&#34;https://arxiv.org/abs/2003.00368&#34;&gt;&lt;strong&gt;The Marathon 2: A Navigation System&lt;/strong&gt;&lt;/a&gt;. IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS), 2020.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@InProceedings{macenski2020marathon2,&#xA;  title = {The Marathon 2: A Navigation System},&#xA;  author = {Macenski, Steve and Martín, Francisco and White, Ruffin and Ginés Clavero, Jonatan},&#xA;  year = {2020},&#xA;  booktitle = {2020 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS)},&#xA;  url = {https://github.com/ros-planning/navigation2},&#xA;  pdf = {https://arxiv.org/abs/2003.00368}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you use our work on VSLAM and formal comparisons for service robot needs, please cite the paper:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A. Merzlyakov, S. Macenski. &lt;a href=&#34;https://arxiv.org/abs/2107.07589&#34;&gt;&lt;strong&gt;A Comparison of Modern General-Purpose Visual SLAM Approaches&lt;/strong&gt;&lt;/a&gt;. IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS), 2021.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@InProceedings{vslamComparison2021,&#xA;  title = {A Comparison of Modern General-Purpose Visual SLAM Approaches},&#xA;  author = {Merzlyakov, Alexey and Macenski, Steven},&#xA;  year = {2021},&#xA;  booktitle = {2021 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS)},&#xA;  pdf = {https://arxiv.org/abs/2107.07589}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Build Status&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Service&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Foxy&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Galactic&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Main&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ROS Build Farm&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fdev__navigation2__ubuntu_focal_amd64/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fdev__navigation2__ubuntu_focal_amd64/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gdev__navigation2__ubuntu_focal_amd64/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gdev__navigation2__ubuntu_focal_amd64/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Circle CI&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://circleci.com/gh/ros-planning/navigation2/tree/main&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/ros-planning/navigation2/tree/main.svg?style=svg&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Package&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Foxy Source&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Foxy Debian&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Galactic Source&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Galactic Debian&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Navigation2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fsrc_uF__navigation2__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fsrc_uF__navigation2__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fbin_uF64__navigation2__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fbin_uF64__navigation2__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gsrc_uF__navigation2__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gsrc_uF__navigation2__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gbin_uF64__navigation2__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gbin_uF64__navigation2__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nav2_amcl&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_amcl__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_amcl__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_amcl__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_amcl__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_amcl__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_amcl__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_amcl__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_amcl__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nav2_behavior_tree&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_behavior_tree__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_behavior_tree__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_behavior_tree__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_behavior_tree__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_behavior_tree__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_behavior_tree__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_behavior_tree__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_behavior_tree__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nav2_bringup&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_bringup__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_bringup__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_bringup__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_bringup__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_bringup__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_bringup__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_bringup__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_bringup__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nav2_bt_navigator&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_bt_navigator__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_bt_navigator__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_bt_navigator__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_bt_navigator__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_bt_navigator__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_bt_navigator__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_bt_navigator__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_bt_navigator__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nav2_common&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_common__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_common__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_common__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_common__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_common__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_common__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_common__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_common__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nav2_controller&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_controller__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_controller__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_controller__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_controller__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_controller__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_controller__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_controller__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_controller__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nav2_core&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_core__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_core__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_core__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_core__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_core__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_core__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_core__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_core__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nav2_costmap_2d&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_costmap_2d__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_costmap_2d__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_costmap_2d__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_costmap_2d__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_costmap_2d__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_costmap_2d__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_costmap_2d__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_costmap_2d__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nav2_dwb_controller&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_dwb_controller__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_dwb_controller__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_dwb_controller__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_dwb_controller__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_dwb_controller__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_dwb_controller__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_dwb_controller__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_dwb_controller__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nav2_lifecycle_manager&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_lifecycle_manager__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_lifecycle_manager__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_lifecycle_manager__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_lifecycle_manager__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_lifecycle_manager__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_lifecycle_manager__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_lifecycle_manager__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_lifecycle_manager__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nav2_map_server&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_map_server__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_map_server__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_map_server__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_map_server__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_map_server__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_map_server__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_map_server__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_map_server__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nav2_msgs&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_msgs__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_msgs__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_msgs__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_msgs__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_msgs__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_msgs__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_msgs__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_msgs__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nav2_navfn_planner&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_navfn_planner__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_navfn_planner__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_navfn_planner__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_navfn_planner__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_navfn_planner__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_navfn_planner__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_navfn_planner__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_navfn_planner__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nav2_planner&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_planner__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_planner__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_planner__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_planner__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_planner__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_planner__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_planner__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_planner__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nav2_recoveries&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_recoveries__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_recoveries__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_recoveries__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_recoveries__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_recoveries__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_recoveries__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_recoveries__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_recoveries__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nav2_regulated_pure_pursuit&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_regulated_pure_pursuit_controller__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_regulated_pure_pursuit_controller__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://build.ros2.org/job/Fbin_uF64__nav2_regulated_pure_pursuit_controller__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_regulated_pure_pursuit_controller__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_regulated_pure_pursuit_controller__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_regulated_pure_pursuit_controller__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://build.ros2.org/job/Gbin_uF64__nav2_regulated_pure_pursuit_controller__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_regulated_pure_pursuit_controller__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nav2_rviz_plugins&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_rviz_plugins__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_rviz_plugins__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_rviz_plugins__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_rviz_plugins__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_rviz_plugins__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_rviz_plugins__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_rviz_plugins__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_rviz_plugins__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nav2_smac_planner&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fsrc_uF__smac_planner__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fsrc_uF__smac_planner__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fbin_uF64__smac_planner__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fbin_uF64__smac_planner__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_smac_planner__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_smac_planner__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_smac_planner__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_smac_planner__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nav2_system_tests&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_system_tests__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_system_tests__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_system_tests__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_system_tests__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_system_tests__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_system_tests__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_system_tests__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_system_tests__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nav2_util&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_util__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_util__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_util__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_util__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_util__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_util__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_util__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_util__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nav2_waypoint_follower&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_waypoint_follower__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fsrc_uF__nav2_waypoint_follower__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_waypoint_follower__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Fbin_uF64__nav2_waypoint_follower__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_waypoint_follower__ubuntu_focal__source/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gsrc_uF__nav2_waypoint_follower__ubuntu_focal__source/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_waypoint_follower__ubuntu_focal_amd64__binary/&#34;&gt;&lt;img src=&#34;http://build.ros2.org/job/Gbin_uF64__nav2_waypoint_follower__ubuntu_focal_amd64__binary/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>pytorch/pytorch</title>
    <updated>2022-06-01T02:27:33Z</updated>
    <id>tag:github.com,2022-06-01:/pytorch/pytorch</id>
    <link href="https://github.com/pytorch/pytorch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tensors and Dynamic neural networks in Python with strong GPU acceleration&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/pytorch/pytorch/raw/master/docs/source/_static/img/pytorch-logo-dark.png&#34; alt=&#34;PyTorch Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;PyTorch is a Python package that provides two high-level features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tensor computation (like NumPy) with strong GPU acceleration&lt;/li&gt; &#xA; &lt;li&gt;Deep neural networks built on a tape-based autograd system&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can reuse your favorite Python packages such as NumPy, SciPy, and Cython to extend PyTorch when needed.&lt;/p&gt; &#xA;&lt;p&gt;Our trunk health (Continuous Integration signals) can be found at &lt;a href=&#34;https://hud.pytorch.org/ci/pytorch/pytorch/master&#34;&gt;hud.pytorch.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- toc --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#more-about-pytorch&#34;&gt;More About PyTorch&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#a-gpu-ready-tensor-library&#34;&gt;A GPU-Ready Tensor Library&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#dynamic-neural-networks-tape-based-autograd&#34;&gt;Dynamic Neural Networks: Tape-Based Autograd&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#python-first&#34;&gt;Python First&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#imperative-experiences&#34;&gt;Imperative Experiences&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#fast-and-lean&#34;&gt;Fast and Lean&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#extensions-without-pain&#34;&gt;Extensions Without Pain&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#binaries&#34;&gt;Binaries&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#nvidia-jetson-platforms&#34;&gt;NVIDIA Jetson Platforms&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#from-source&#34;&gt;From Source&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#install-dependencies&#34;&gt;Install Dependencies&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#get-the-pytorch-source&#34;&gt;Get the PyTorch Source&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#install-pytorch&#34;&gt;Install PyTorch&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#adjust-build-options-optional&#34;&gt;Adjust Build Options (Optional)&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#docker-image&#34;&gt;Docker Image&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#using-pre-built-images&#34;&gt;Using pre-built images&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#building-the-image-yourself&#34;&gt;Building the image yourself&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#building-the-documentation&#34;&gt;Building the Documentation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#previous-versions&#34;&gt;Previous Versions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#resources&#34;&gt;Resources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#communication&#34;&gt;Communication&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#releases-and-contributing&#34;&gt;Releases and Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#the-team&#34;&gt;The Team&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- tocstop --&gt; &#xA;&lt;h2&gt;More About PyTorch&lt;/h2&gt; &#xA;&lt;p&gt;At a granular level, PyTorch is a library that consists of the following components:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Component&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pytorch.org/docs/stable/torch.html&#34;&gt;&lt;strong&gt;torch&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;a Tensor library like NumPy, with strong GPU support&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pytorch.org/docs/stable/autograd.html&#34;&gt;&lt;strong&gt;torch.autograd&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;a tape-based automatic differentiation library that supports all differentiable Tensor operations in torch&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pytorch.org/docs/stable/jit.html&#34;&gt;&lt;strong&gt;torch.jit&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;a compilation stack (TorchScript) to create serializable and optimizable models from PyTorch code&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pytorch.org/docs/stable/nn.html&#34;&gt;&lt;strong&gt;torch.nn&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;a neural networks library deeply integrated with autograd designed for maximum flexibility&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pytorch.org/docs/stable/multiprocessing.html&#34;&gt;&lt;strong&gt;torch.multiprocessing&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python multiprocessing, but with magical memory sharing of torch Tensors across processes. Useful for data loading and Hogwild training&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pytorch.org/docs/stable/data.html&#34;&gt;&lt;strong&gt;torch.utils&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;DataLoader and other utility functions for convenience&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Usually, PyTorch is used either as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A replacement for NumPy to use the power of GPUs.&lt;/li&gt; &#xA; &lt;li&gt;A deep learning research platform that provides maximum flexibility and speed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Elaborating Further:&lt;/p&gt; &#xA;&lt;h3&gt;A GPU-Ready Tensor Library&lt;/h3&gt; &#xA;&lt;p&gt;If you use NumPy, then you have used Tensors (a.k.a. ndarray).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/docs/source/_static/img/tensor_illustration.png&#34; alt=&#34;Tensor illustration&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;PyTorch provides Tensors that can live either on the CPU or the GPU and accelerates the computation by a huge amount.&lt;/p&gt; &#xA;&lt;p&gt;We provide a wide variety of tensor routines to accelerate and fit your scientific computation needs such as slicing, indexing, math operations, linear algebra, reductions. And they are fast!&lt;/p&gt; &#xA;&lt;h3&gt;Dynamic Neural Networks: Tape-Based Autograd&lt;/h3&gt; &#xA;&lt;p&gt;PyTorch has a unique way of building neural networks: using and replaying a tape recorder.&lt;/p&gt; &#xA;&lt;p&gt;Most frameworks such as TensorFlow, Theano, Caffe, and CNTK have a static view of the world. One has to build a neural network and reuse the same structure again and again. Changing the way the network behaves means that one has to start from scratch.&lt;/p&gt; &#xA;&lt;p&gt;With PyTorch, we use a technique called reverse-mode auto-differentiation, which allows you to change the way your network behaves arbitrarily with zero lag or overhead. Our inspiration comes from several research papers on this topic, as well as current and past work such as &lt;a href=&#34;https://github.com/twitter/torch-autograd&#34;&gt;torch-autograd&lt;/a&gt;, &lt;a href=&#34;https://github.com/HIPS/autograd&#34;&gt;autograd&lt;/a&gt;, &lt;a href=&#34;https://chainer.org&#34;&gt;Chainer&lt;/a&gt;, etc.&lt;/p&gt; &#xA;&lt;p&gt;While this technique is not unique to PyTorch, it&#39;s one of the fastest implementations of it to date. You get the best of speed and flexibility for your crazy research.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/pytorch/pytorch/raw/master/docs/source/_static/img/dynamic_graph.gif&#34; alt=&#34;Dynamic graph&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Python First&lt;/h3&gt; &#xA;&lt;p&gt;PyTorch is not a Python binding into a monolithic C++ framework. It is built to be deeply integrated into Python. You can use it naturally like you would use &lt;a href=&#34;https://www.numpy.org/&#34;&gt;NumPy&lt;/a&gt; / &lt;a href=&#34;https://www.scipy.org/&#34;&gt;SciPy&lt;/a&gt; / &lt;a href=&#34;https://scikit-learn.org&#34;&gt;scikit-learn&lt;/a&gt; etc. You can write your new neural network layers in Python itself, using your favorite libraries and use packages such as &lt;a href=&#34;https://cython.org/&#34;&gt;Cython&lt;/a&gt; and &lt;a href=&#34;http://numba.pydata.org/&#34;&gt;Numba&lt;/a&gt;. Our goal is to not reinvent the wheel where appropriate.&lt;/p&gt; &#xA;&lt;h3&gt;Imperative Experiences&lt;/h3&gt; &#xA;&lt;p&gt;PyTorch is designed to be intuitive, linear in thought, and easy to use. When you execute a line of code, it gets executed. There isn&#39;t an asynchronous view of the world. When you drop into a debugger or receive error messages and stack traces, understanding them is straightforward. The stack trace points to exactly where your code was defined. We hope you never spend hours debugging your code because of bad stack traces or asynchronous and opaque execution engines.&lt;/p&gt; &#xA;&lt;h3&gt;Fast and Lean&lt;/h3&gt; &#xA;&lt;p&gt;PyTorch has minimal framework overhead. We integrate acceleration libraries such as &lt;a href=&#34;https://software.intel.com/mkl&#34;&gt;Intel MKL&lt;/a&gt; and NVIDIA (&lt;a href=&#34;https://developer.nvidia.com/cudnn&#34;&gt;cuDNN&lt;/a&gt;, &lt;a href=&#34;https://developer.nvidia.com/nccl&#34;&gt;NCCL&lt;/a&gt;) to maximize speed. At the core, its CPU and GPU Tensor and neural network backends are mature and have been tested for years.&lt;/p&gt; &#xA;&lt;p&gt;Hence, PyTorch is quite fast – whether you run small or large neural networks.&lt;/p&gt; &#xA;&lt;p&gt;The memory usage in PyTorch is extremely efficient compared to Torch or some of the alternatives. We&#39;ve written custom memory allocators for the GPU to make sure that your deep learning models are maximally memory efficient. This enables you to train bigger deep learning models than before.&lt;/p&gt; &#xA;&lt;h3&gt;Extensions Without Pain&lt;/h3&gt; &#xA;&lt;p&gt;Writing new neural network modules, or interfacing with PyTorch&#39;s Tensor API was designed to be straightforward and with minimal abstractions.&lt;/p&gt; &#xA;&lt;p&gt;You can write new neural network layers in Python using the torch API &lt;a href=&#34;https://pytorch.org/tutorials/advanced/numpy_extensions_tutorial.html&#34;&gt;or your favorite NumPy-based libraries such as SciPy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to write your layers in C/C++, we provide a convenient extension API that is efficient and with minimal boilerplate. No wrapper code needs to be written. You can see &lt;a href=&#34;https://pytorch.org/tutorials/advanced/cpp_extension.html&#34;&gt;a tutorial here&lt;/a&gt; and &lt;a href=&#34;https://github.com/pytorch/extension-cpp&#34;&gt;an example here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Binaries&lt;/h3&gt; &#xA;&lt;p&gt;Commands to install binaries via Conda or pip wheels are on our website: &lt;a href=&#34;https://pytorch.org/get-started/locally/&#34;&gt;https://pytorch.org/get-started/locally/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;NVIDIA Jetson Platforms&lt;/h4&gt; &#xA;&lt;p&gt;Python wheels for NVIDIA&#39;s Jetson Nano, Jetson TX2, and Jetson AGX Xavier are provided &lt;a href=&#34;https://forums.developer.nvidia.com/t/pytorch-for-jetson-version-1-10-now-available/72048&#34;&gt;here&lt;/a&gt; and the L4T container is published &lt;a href=&#34;https://catalog.ngc.nvidia.com/orgs/nvidia/containers/l4t-pytorch&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;They require JetPack 4.2 and above, and &lt;a href=&#34;https://github.com/dusty-nv&#34;&gt;@dusty-nv&lt;/a&gt; and &lt;a href=&#34;https://github.com/ptrblck&#34;&gt;@ptrblck&lt;/a&gt; are maintaining them.&lt;/p&gt; &#xA;&lt;h3&gt;From Source&lt;/h3&gt; &#xA;&lt;p&gt;If you are installing from source, you will need Python 3.7 or later and a C++14 compiler. Also, we highly recommend installing an &lt;a href=&#34;https://www.anaconda.com/distribution/#download-section&#34;&gt;Anaconda&lt;/a&gt; environment. You will get a high-quality BLAS library (MKL) and you get controlled dependency versions regardless of your Linux distro.&lt;/p&gt; &#xA;&lt;p&gt;Once you have &lt;a href=&#34;https://www.anaconda.com/distribution/#download-section&#34;&gt;Anaconda&lt;/a&gt; installed, here are the instructions.&lt;/p&gt; &#xA;&lt;p&gt;If you want to compile with CUDA support, install&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.nvidia.com/cuda-downloads&#34;&gt;NVIDIA CUDA&lt;/a&gt; 10.2 or above&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.nvidia.com/cudnn&#34;&gt;NVIDIA cuDNN&lt;/a&gt; v7 or above&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/ax3l/9489132&#34;&gt;Compiler&lt;/a&gt; compatible with CUDA Note: You could refer to the &lt;a href=&#34;https://docs.nvidia.com/deeplearning/cudnn/pdf/cuDNN-Support-Matrix.pdf&#34;&gt;cuDNN Support Matrix&lt;/a&gt; for cuDNN versions with the various supported CUDA, CUDA driver and NVIDIA hardwares&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want to disable CUDA support, export the environment variable &lt;code&gt;USE_CUDA=0&lt;/code&gt;. Other potentially useful environment variables may be found in &lt;code&gt;setup.py&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are building for NVIDIA&#39;s Jetson platforms (Jetson Nano, TX1, TX2, AGX Xavier), Instructions to install PyTorch for Jetson Nano are &lt;a href=&#34;https://devtalk.nvidia.com/default/topic/1049071/jetson-nano/pytorch-for-jetson-nano/&#34;&gt;available here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to compile with ROCm support, install&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rocmdocs.amd.com/en/latest/Installation_Guide/Installation-Guide.html&#34;&gt;AMD ROCm&lt;/a&gt; 4.0 and above installation&lt;/li&gt; &#xA; &lt;li&gt;ROCm is currently supported only for Linux systems.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want to disable ROCm support, export the environment variable &lt;code&gt;USE_ROCM=0&lt;/code&gt;. Other potentially useful environment variables may be found in &lt;code&gt;setup.py&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Install Dependencies&lt;/h4&gt; &#xA;&lt;p&gt;Common&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conda install astunparse numpy ninja pyyaml mkl mkl-include setuptools cmake cffi typing_extensions future six requests dataclasses&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Linux&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# CUDA only: Add LAPACK support for the GPU if needed&#xA;conda install -c pytorch magma-cuda110  # or the magma-cuda* that matches your CUDA version from https://anaconda.org/pytorch/repo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On MacOS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Add these packages if torch.distributed is needed&#xA;conda install pkg-config libuv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Windows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Add these packages if torch.distributed is needed.&#xA;# Distributed package support on Windows is a prototype feature and is subject to changes.&#xA;conda install -c conda-forge libuv=1.39&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Get the PyTorch Source&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --recursive https://github.com/pytorch/pytorch&#xA;cd pytorch&#xA;# if you are updating an existing checkout&#xA;git submodule sync&#xA;git submodule update --init --recursive --jobs 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Install PyTorch&lt;/h4&gt; &#xA;&lt;p&gt;On Linux&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-&#34;$(dirname $(which conda))/../&#34;}&#xA;python setup.py install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that if you are compiling for ROCm, you must run this command first:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python tools/amd_build/build_amd.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that if you are using &lt;a href=&#34;https://www.anaconda.com/distribution/#download-section&#34;&gt;Anaconda&lt;/a&gt;, you may experience an error caused by the linker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-plaintext&#34;&gt;build/temp.linux-x86_64-3.7/torch/csrc/stub.o: file not recognized: file format not recognized&#xA;collect2: error: ld returned 1 exit status&#xA;error: command &#39;g++&#39; failed with exit status 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is caused by &lt;code&gt;ld&lt;/code&gt; from Conda environment shadowing the system &lt;code&gt;ld&lt;/code&gt;. You should use a newer version of Python that fixes this issue. The recommended Python version is 3.7.6+ and 3.8.1+.&lt;/p&gt; &#xA;&lt;p&gt;On macOS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-&#34;$(dirname $(which conda))/../&#34;}&#xA;MACOSX_DEPLOYMENT_TARGET=10.9 CC=clang CXX=clang++ python setup.py install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;CUDA is not supported on macOS.&lt;/p&gt; &#xA;&lt;p&gt;On Windows&lt;/p&gt; &#xA;&lt;p&gt;Choose Correct Visual Studio Version.&lt;/p&gt; &#xA;&lt;p&gt;Sometimes there are regressions in new versions of Visual Studio, so it&#39;s best to use the same Visual Studio Version &lt;a href=&#34;https://github.com/pytorch/pytorch/raw/master/.circleci/scripts/vs_install.ps1&#34;&gt;16.8.5&lt;/a&gt; as Pytorch CI&#39;s.&lt;/p&gt; &#xA;&lt;p&gt;PyTorch CI uses Visual C++ BuildTools, which come with Visual Studio Enterprise, Professional, or Community Editions. You can also install the build tools from &lt;a href=&#34;https://visualstudio.microsoft.com/visual-cpp-build-tools/&#34;&gt;https://visualstudio.microsoft.com/visual-cpp-build-tools/&lt;/a&gt;. The build tools &lt;em&gt;do not&lt;/em&gt; come with Visual Studio Code by default.&lt;/p&gt; &#xA;&lt;p&gt;If you want to build legacy python code, please refer to &lt;a href=&#34;https://github.com/pytorch/pytorch/raw/master/CONTRIBUTING.md#building-on-legacy-code-and-cuda&#34;&gt;Building on legacy code and CUDA&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Build with CPU&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s fairly easy to build with CPU.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;conda activate&#xA;python setup.py install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note on OpenMP: The desired OpenMP implementation is Intel OpenMP (iomp). In order to link against iomp, you&#39;ll need to manually download the library and set up the building environment by tweaking &lt;code&gt;CMAKE_INCLUDE_PATH&lt;/code&gt; and &lt;code&gt;LIB&lt;/code&gt;. The instruction &lt;a href=&#34;https://github.com/pytorch/pytorch/raw/master/docs/source/notes/windows.rst#building-from-source&#34;&gt;here&lt;/a&gt; is an example for setting up both MKL and Intel OpenMP. Without these configurations for CMake, Microsoft Visual C OpenMP runtime (vcomp) will be used.&lt;/p&gt; &#xA;&lt;p&gt;Build with CUDA&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.nvidia.com/gameworks/content/gameworkslibrary/nvtx/nvidia_tools_extension_library_nvtx.htm&#34;&gt;NVTX&lt;/a&gt; is needed to build Pytorch with CUDA. NVTX is a part of CUDA distributive, where it is called &#34;Nsight Compute&#34;. To install it onto already installed CUDA run CUDA installation once again and check the corresponding checkbox. Make sure that CUDA with Nsight Compute is installed after Visual Studio.&lt;/p&gt; &#xA;&lt;p&gt;Currently, VS 2017 / 2019, and Ninja are supported as the generator of CMake. If &lt;code&gt;ninja.exe&lt;/code&gt; is detected in &lt;code&gt;PATH&lt;/code&gt;, then Ninja will be used as the default generator, otherwise, it will use VS 2017 / 2019. &lt;br&gt; If Ninja is selected as the generator, the latest MSVC will get selected as the underlying toolchain.&lt;/p&gt; &#xA;&lt;p&gt;Additional libraries such as &lt;a href=&#34;https://developer.nvidia.com/magma&#34;&gt;Magma&lt;/a&gt;, &lt;a href=&#34;https://github.com/oneapi-src/oneDNN&#34;&gt;oneDNN, a.k.a MKLDNN or DNNL&lt;/a&gt;, and &lt;a href=&#34;https://github.com/mozilla/sccache&#34;&gt;Sccache&lt;/a&gt; are often needed. Please refer to the &lt;a href=&#34;https://github.com/pytorch/pytorch/tree/master/.jenkins/pytorch/win-test-helpers/installation-helpers&#34;&gt;installation-helper&lt;/a&gt; to install them.&lt;/p&gt; &#xA;&lt;p&gt;You can refer to the &lt;a href=&#34;https://github.com/pytorch/pytorch/raw/master/.jenkins/pytorch/win-test-helpers/build_pytorch.bat&#34;&gt;build_pytorch.bat&lt;/a&gt; script for some other environment variables configurations&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;cmd&#xA;&#xA;:: Set the environment variables after you have downloaded and upzipped the mkl package,&#xA;:: else CMake would throw an error as `Could NOT find OpenMP`.&#xA;set CMAKE_INCLUDE_PATH={Your directory}\mkl\include&#xA;set LIB={Your directory}\mkl\lib;%LIB%&#xA;&#xA;:: Read the content in the previous section carefully before you proceed.&#xA;:: [Optional] If you want to override the underlying toolset used by Ninja and Visual Studio with CUDA, please run the following script block.&#xA;:: &#34;Visual Studio 2019 Developer Command Prompt&#34; will be run automatically.&#xA;:: Make sure you have CMake &amp;gt;= 3.12 before you do this when you use the Visual Studio generator.&#xA;set CMAKE_GENERATOR_TOOLSET_VERSION=14.27&#xA;set DISTUTILS_USE_SDK=1&#xA;for /f &#34;usebackq tokens=*&#34; %i in (`&#34;%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe&#34; -version [15^,17^) -products * -latest -property installationPath`) do call &#34;%i\VC\Auxiliary\Build\vcvarsall.bat&#34; x64 -vcvars_ver=%CMAKE_GENERATOR_TOOLSET_VERSION%&#xA;&#xA;:: [Optional] If you want to override the CUDA host compiler&#xA;set CUDAHOSTCXX=C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\bin\HostX64\x64\cl.exe&#xA;&#xA;python setup.py install&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Adjust Build Options (Optional)&lt;/h5&gt; &#xA;&lt;p&gt;You can adjust the configuration of cmake variables optionally (without building first), by doing the following. For example, adjusting the pre-detected directories for CuDNN or BLAS can be done with such a step.&lt;/p&gt; &#xA;&lt;p&gt;On Linux&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-&#34;$(dirname $(which conda))/../&#34;}&#xA;python setup.py build --cmake-only&#xA;ccmake build  # or cmake-gui build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On macOS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-&#34;$(dirname $(which conda))/../&#34;}&#xA;MACOSX_DEPLOYMENT_TARGET=10.9 CC=clang CXX=clang++ python setup.py build --cmake-only&#xA;ccmake build  # or cmake-gui build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker Image&lt;/h3&gt; &#xA;&lt;h4&gt;Using pre-built images&lt;/h4&gt; &#xA;&lt;p&gt;You can also pull a pre-built docker image from Docker Hub and run with docker v19.03+&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --gpus all --rm -ti --ipc=host pytorch/pytorch:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note that PyTorch uses shared memory to share data between processes, so if torch multiprocessing is used (e.g. for multithreaded data loaders) the default shared memory segment size that container runs with is not enough, and you should increase shared memory size either with &lt;code&gt;--ipc=host&lt;/code&gt; or &lt;code&gt;--shm-size&lt;/code&gt; command line options to &lt;code&gt;nvidia-docker run&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Building the image yourself&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Must be built with a docker version &amp;gt; 18.06&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;Dockerfile&lt;/code&gt; is supplied to build images with CUDA 11.1 support and cuDNN v8. You can pass &lt;code&gt;PYTHON_VERSION=x.y&lt;/code&gt; make variable to specify which Python version is to be used by Miniconda, or leave it unset to use the default.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make -f docker.Makefile&#xA;# images are tagged as docker.io/${your_docker_username}/pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building the Documentation&lt;/h3&gt; &#xA;&lt;p&gt;To build documentation in various formats, you will need &lt;a href=&#34;http://www.sphinx-doc.org&#34;&gt;Sphinx&lt;/a&gt; and the readthedocs theme.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd docs/&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then build the documentation by running &lt;code&gt;make &amp;lt;format&amp;gt;&lt;/code&gt; from the &lt;code&gt;docs/&lt;/code&gt; folder. Run &lt;code&gt;make&lt;/code&gt; to get a list of all available output formats.&lt;/p&gt; &#xA;&lt;p&gt;If you get a katex error run &lt;code&gt;npm install katex&lt;/code&gt;. If it persists, try &lt;code&gt;npm install -g katex&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Previous Versions&lt;/h3&gt; &#xA;&lt;p&gt;Installation instructions and binaries for previous PyTorch versions may be found on &lt;a href=&#34;https://pytorch.org/previous-versions&#34;&gt;our website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Three-pointers to get you started:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pytorch.org/tutorials/&#34;&gt;Tutorials: get you started with understanding and using PyTorch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pytorch/examples&#34;&gt;Examples: easy to understand PyTorch code across all domains&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pytorch.org/docs/&#34;&gt;The API Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pytorch/pytorch/raw/master/GLOSSARY.md&#34;&gt;Glossary&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pytorch.org/&#34;&gt;PyTorch.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pytorch.org/tutorials/&#34;&gt;PyTorch Tutorials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pytorch/examples&#34;&gt;PyTorch Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pytorch.org/hub/&#34;&gt;PyTorch Models&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.udacity.com/course/deep-learning-pytorch--ud188&#34;&gt;Intro to Deep Learning with PyTorch from Udacity&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.udacity.com/course/intro-to-machine-learning-nanodegree--nd229&#34;&gt;Intro to Machine Learning with PyTorch from Udacity&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.coursera.org/learn/deep-neural-networks-with-pytorch&#34;&gt;Deep Neural Networks with PyTorch from Coursera&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/PyTorch&#34;&gt;PyTorch Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pytorch.org/blog/&#34;&gt;PyTorch Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCWXI5YeOsh03QvJ59PMaXFw&#34;&gt;PyTorch YouTube&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Communication&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Forums: Discuss implementations, research, etc. &lt;a href=&#34;https://discuss.pytorch.org&#34;&gt;https://discuss.pytorch.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GitHub Issues: Bug reports, feature requests, install issues, RFCs, thoughts, etc.&lt;/li&gt; &#xA; &lt;li&gt;Slack: The &lt;a href=&#34;https://pytorch.slack.com/&#34;&gt;PyTorch Slack&lt;/a&gt; hosts a primary audience of moderate to experienced PyTorch users and developers for general chat, online discussions, collaboration, etc. If you are a beginner looking for help, the primary medium is &lt;a href=&#34;https://discuss.pytorch.org&#34;&gt;PyTorch Forums&lt;/a&gt;. If you need a slack invite, please fill this form: &lt;a href=&#34;https://goo.gl/forms/PP1AGvNHpSaJP8to1&#34;&gt;https://goo.gl/forms/PP1AGvNHpSaJP8to1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Newsletter: No-noise, a one-way email newsletter with important announcements about PyTorch. You can sign-up here: &lt;a href=&#34;https://eepurl.com/cbG0rv&#34;&gt;https://eepurl.com/cbG0rv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Facebook Page: Important announcements about PyTorch. &lt;a href=&#34;https://www.facebook.com/pytorch&#34;&gt;https://www.facebook.com/pytorch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For brand guidelines, please visit our website at &lt;a href=&#34;https://pytorch.org/&#34;&gt;pytorch.org&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Releases and Contributing&lt;/h2&gt; &#xA;&lt;p&gt;PyTorch has a 90-day release cycle (major releases). Please let us know if you encounter a bug by &lt;a href=&#34;https://github.com/pytorch/pytorch/issues&#34;&gt;filing an issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We appreciate all contributions. If you are planning to contribute back bug-fixes, please do so without any further discussion.&lt;/p&gt; &#xA;&lt;p&gt;If you plan to contribute new features, utility functions, or extensions to the core, please first open an issue and discuss the feature with us. Sending a PR without discussion might end up resulting in a rejected PR because we might be taking the core in a different direction than you might be aware of.&lt;/p&gt; &#xA;&lt;p&gt;To learn more about making a contribution to Pytorch, please see our &lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/CONTRIBUTING.md&#34;&gt;Contribution page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;The Team&lt;/h2&gt; &#xA;&lt;p&gt;PyTorch is a community-driven project with several skillful engineers and researchers contributing to it.&lt;/p&gt; &#xA;&lt;p&gt;PyTorch is currently maintained by &lt;a href=&#34;https://apaszke.github.io/&#34;&gt;Adam Paszke&lt;/a&gt;, &lt;a href=&#34;https://github.com/colesbury&#34;&gt;Sam Gross&lt;/a&gt;, &lt;a href=&#34;http://soumith.ch&#34;&gt;Soumith Chintala&lt;/a&gt; and &lt;a href=&#34;https://github.com/gchanan&#34;&gt;Gregory Chanan&lt;/a&gt; with major contributions coming from hundreds of talented individuals in various forms and means. A non-exhaustive but growing list needs to mention: Trevor Killeen, Sasank Chilamkurthy, Sergey Zagoruyko, Adam Lerer, Francisco Massa, Alykhan Tejani, Luca Antiga, Alban Desmaison, Andreas Koepf, James Bradbury, Zeming Lin, Yuandong Tian, Guillaume Lample, Marat Dukhan, Natalia Gimelshein, Christian Sarofeen, Martin Raison, Edward Yang, Zachary Devito.&lt;/p&gt; &#xA;&lt;p&gt;Note: This project is unrelated to &lt;a href=&#34;https://github.com/hughperkins/pytorch&#34;&gt;hughperkins/pytorch&lt;/a&gt; with the same name. Hugh is a valuable contributor to the Torch community and has helped with many things Torch and PyTorch.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;PyTorch has a BSD-style license, as found in the &lt;a href=&#34;https://raw.githubusercontent.com/pytorch/pytorch/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;</summary>
  </entry>
</feed>