<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-01T01:56:23Z</updated>
  <subtitle>Monthly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SerenityOS/serenity</title>
    <updated>2022-10-01T01:56:23Z</updated>
    <id>tag:github.com,2022-10-01:/SerenityOS/serenity</id>
    <link href="https://github.com/SerenityOS/serenity" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Serenity Operating System üêû&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SerenityOS&lt;/h1&gt; &#xA;&lt;p&gt;Graphical Unix-like operating system for x86 computers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SerenityOS/serenity/actions?query=workflow%3A%22Build%2C%20lint%2C%20and%20test%22&#34;&gt;&lt;img src=&#34;https://github.com/SerenityOS/serenity/workflows/Build,%20lint,%20and%20test/badge.svg?sanitize=true&#34; alt=&#34;GitHub Actions Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/SerenityOS/SerenityOS/_build/latest?definitionId=1&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/SerenityOS/SerenityOS/_apis/build/status/CI?branchName=master&#34; alt=&#34;Azure DevOps Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:serenity&#34;&gt;&lt;img src=&#34;https://oss-fuzz-build-logs.storage.googleapis.com/badges/serenity.svg?sanitize=true&#34; alt=&#34;Fuzzing Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=SerenityOS_serenity&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=SerenityOS_serenity&amp;amp;metric=ncloc&#34; alt=&#34;Sonar Cube Static Analysis&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/serenityos&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/830522505605283862.svg?logo=discord&amp;amp;logoColor=white&amp;amp;logoWidth=20&amp;amp;labelColor=7289DA&amp;amp;label=Discord&amp;amp;color=17cf48&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;SerenityOS is a love letter to &#39;90s user interfaces with a custom Unix-like core. It flatters with sincerity by stealing beautiful ideas from various other systems.&lt;/p&gt; &#xA;&lt;p&gt;Roughly speaking, the goal is a marriage between the aesthetic of late-1990s productivity software and the power-user accessibility of late-2000s *nix. This is a system by us, for us, based on the things we like.&lt;/p&gt; &#xA;&lt;p&gt;You can watch videos of the system being developed on YouTube:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtube.com/andreaskling&#34;&gt;Andreas Kling&#39;s channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtube.com/linusgroh&#34;&gt;Linus Groh&#39;s channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/c/kleinesfilmroellchen&#34;&gt;kleines Filmr√∂llchen&#39;s channel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;FAQ&lt;/strong&gt;: &lt;a href=&#34;https://github.com/SerenityOS/serenity/raw/master/Documentation/FAQ.md&#34;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screenshot&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SerenityOS/serenity/master/Meta/Screenshots/screenshot-b36968c.png&#34; alt=&#34;Screenshot as of b36968c.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Modern x86 32-bit and 64-bit kernel with pre-emptive multi-threading&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SerenityOS/serenity/master/Userland/Applications/Browser/&#34;&gt;Browser&lt;/a&gt; with JavaScript, WebAssembly, and more (check the spec compliance for &lt;a href=&#34;https://libjs.dev/test262/&#34;&gt;JS&lt;/a&gt;, &lt;a href=&#34;https://css.tobyase.de/&#34;&gt;CSS&lt;/a&gt;, and &lt;a href=&#34;https://libjs.dev/wasm/&#34;&gt;WASM&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Security features (hardware protections, limited userland capabilities, W^X memory, &lt;code&gt;pledge&lt;/code&gt; &amp;amp; &lt;code&gt;unveil&lt;/code&gt;, (K)ASLR, OOM-resistance, web-content isolation, state-of-the-art TLS algorithms, ...)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SerenityOS/serenity/master/Userland/Services/&#34;&gt;System services&lt;/a&gt; (WindowServer, LoginServer, AudioServer, WebServer, RequestServer, CrashServer, ...) and modern IPC&lt;/li&gt; &#xA; &lt;li&gt;Good POSIX compatibility (&lt;a href=&#34;https://raw.githubusercontent.com/SerenityOS/serenity/master/Userland/Libraries/LibC/&#34;&gt;LibC&lt;/a&gt;, Shell, syscalls, signals, pseudoterminals, filesystem notifications, standard Unix &lt;a href=&#34;https://raw.githubusercontent.com/SerenityOS/serenity/master/Userland/Utilities/&#34;&gt;utilities&lt;/a&gt;, ...)&lt;/li&gt; &#xA; &lt;li&gt;POSIX-like virtual file systems (/proc, /dev, /sys, /tmp, ...) and ext2 file system&lt;/li&gt; &#xA; &lt;li&gt;Network stack and applications with support for IPv4, TCP, UDP; DNS, HTTP, Gemini, IMAP, NTP&lt;/li&gt; &#xA; &lt;li&gt;Profiling, debugging and other development tools (Kernel-supported profiling, detailed program analysis with software emulation in UserspaceEmulator, CrashReporter, interactive GUI playground, HexEditor, HackStudio IDE for C++ and more)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SerenityOS/serenity/master/Userland/Libraries/&#34;&gt;Libraries&lt;/a&gt; for everything from cryptography to OpenGL, audio, JavaScript, GUI, playing chess, ...&lt;/li&gt; &#xA; &lt;li&gt;Support for many common and uncommon file formats (PNG, JPEG, GIF, MP3, WAV, FLAC, ZIP, TAR, PDF, QOI, Gemini, ...)&lt;/li&gt; &#xA; &lt;li&gt;Unified style and design philosophy, flexible theming system, &lt;a href=&#34;https://fonts.serenityos.net/font-family&#34;&gt;custom (bitmap and vector) fonts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SerenityOS/serenity/master/Userland/Games/&#34;&gt;Games&lt;/a&gt; (Solitaire, Minesweeper, 2048, chess, Conway&#39;s Game of Life, ...) and &lt;a href=&#34;https://raw.githubusercontent.com/SerenityOS/serenity/master/Userland/Demos/&#34;&gt;demos&lt;/a&gt; (CatDog, Starfield, Eyes, mandelbrot set, WidgetGallery, ...)&lt;/li&gt; &#xA; &lt;li&gt;Every-day GUI programs and utilities (Spreadsheet with JavaScript, TextEditor, Terminal, PixelPaint, various multimedia viewers and players, Mail, Assistant, Calculator, ...)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;... and all of the above are right in this repository, no extra dependencies, built from-scratch by us :^)&lt;/p&gt; &#xA;&lt;p&gt;Additionally, there are &lt;a href=&#34;https://raw.githubusercontent.com/SerenityOS/serenity/master/Ports/AvailablePorts.md&#34;&gt;over two hundred ports of popular open-source software&lt;/a&gt;, including games, compilers, Unix tools, multimedia apps and more.&lt;/p&gt; &#xA;&lt;h2&gt;How do I read the documentation?&lt;/h2&gt; &#xA;&lt;p&gt;Man pages are available online at &lt;a href=&#34;https://man.serenityos.org&#34;&gt;man.serenityos.org&lt;/a&gt;. These pages are generated from the Markdown source files in &lt;a href=&#34;https://github.com/SerenityOS/serenity/tree/master/Base/usr/share/man&#34;&gt;&lt;code&gt;Base/usr/share/man&lt;/code&gt;&lt;/a&gt; and updated automatically.&lt;/p&gt; &#xA;&lt;p&gt;When running SerenityOS you can use &lt;code&gt;man&lt;/code&gt; for the terminal interface, or &lt;code&gt;help&lt;/code&gt; for the GUI.&lt;/p&gt; &#xA;&lt;p&gt;Code-related documentation can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/SerenityOS/serenity/master/Documentation/&#34;&gt;documentation&lt;/a&gt; folder.&lt;/p&gt; &#xA;&lt;h2&gt;How do I build and run this?&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/SerenityOS/serenity/raw/master/Documentation/BuildInstructions.md&#34;&gt;SerenityOS build instructions&lt;/a&gt;. Serenity runs on Linux, macOS (aarch64 might be a challenge), Windows (with WSL2) and many other *Nixes with hardware or software virtualization.&lt;/p&gt; &#xA;&lt;h2&gt;Get in touch and participate!&lt;/h2&gt; &#xA;&lt;p&gt;Join our Discord server: &lt;a href=&#34;https://discord.gg/serenityos&#34;&gt;SerenityOS Discord&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Before opening an issue, please see the &lt;a href=&#34;https://github.com/SerenityOS/serenity/raw/master/CONTRIBUTING.md#issue-policy&#34;&gt;issue policy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A general guide for contributing can be found in &lt;a href=&#34;https://raw.githubusercontent.com/SerenityOS/serenity/master/CONTRIBUTING.md&#34;&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Andreas Kling&lt;/strong&gt; - &lt;a href=&#34;https://twitter.com/awesomekling&#34;&gt;awesomekling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Robin Burchell&lt;/strong&gt; - &lt;a href=&#34;https://github.com/rburchell&#34;&gt;rburchell&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Conrad Pankoff&lt;/strong&gt; - &lt;a href=&#34;https://github.com/deoxxa&#34;&gt;deoxxa&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sergey Bugaev&lt;/strong&gt; - &lt;a href=&#34;https://github.com/bugaevc&#34;&gt;bugaevc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Liav A&lt;/strong&gt; - &lt;a href=&#34;https://github.com/supercomputer7&#34;&gt;supercomputer7&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linus Groh&lt;/strong&gt; - &lt;a href=&#34;https://github.com/linusg&#34;&gt;linusg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ali Mohammad Pur&lt;/strong&gt; - &lt;a href=&#34;https://github.com/alimpfard&#34;&gt;alimpfard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Shannon Booth&lt;/strong&gt; - &lt;a href=&#34;https://github.com/shannonbooth&#34;&gt;shannonbooth&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;H√ºseyin ASLIT√úRK&lt;/strong&gt; - &lt;a href=&#34;https://github.com/asliturk&#34;&gt;asliturk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Matthew Olsson&lt;/strong&gt; - &lt;a href=&#34;https://github.com/mattco98&#34;&gt;mattco98&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Nico Weber&lt;/strong&gt; - &lt;a href=&#34;https://github.com/nico&#34;&gt;nico&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Brian Gianforcaro&lt;/strong&gt; - &lt;a href=&#34;https://github.com/bgianfo&#34;&gt;bgianfo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ben Wiederhake&lt;/strong&gt; - &lt;a href=&#34;https://github.com/BenWiederhake&#34;&gt;BenWiederhake&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tom&lt;/strong&gt; - &lt;a href=&#34;https://github.com/tomuta&#34;&gt;tomuta&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Paul Scharnofske&lt;/strong&gt; - &lt;a href=&#34;https://github.com/asynts&#34;&gt;asynts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Itamar Shenhar&lt;/strong&gt; - &lt;a href=&#34;https://github.com/itamar8910&#34;&gt;itamar8910&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Luke Wilde&lt;/strong&gt; - &lt;a href=&#34;https://github.com/Lubrsi&#34;&gt;Lubrsi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Brendan Coles&lt;/strong&gt; - &lt;a href=&#34;https://github.com/bcoles&#34;&gt;bcoles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Andrew Kaster&lt;/strong&gt; - &lt;a href=&#34;https://github.com/ADKaster&#34;&gt;ADKaster&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;thankyouverycool&lt;/strong&gt; - &lt;a href=&#34;https://github.com/thankyouverycool&#34;&gt;thankyouverycool&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Idan Horowitz&lt;/strong&gt; - &lt;a href=&#34;https://github.com/IdanHo&#34;&gt;IdanHo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Gunnar Beutner&lt;/strong&gt; - &lt;a href=&#34;https://github.com/gunnarbeutner&#34;&gt;gunnarbeutner&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tim Flynn&lt;/strong&gt; - &lt;a href=&#34;https://github.com/trflynn89&#34;&gt;trflynn89&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Jean-Baptiste Boric&lt;/strong&gt; - &lt;a href=&#34;https://github.com/boricj&#34;&gt;boricj&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Stephan Unverwerth&lt;/strong&gt; - &lt;a href=&#34;https://github.com/sunverwerth&#34;&gt;sunverwerth&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Max Wipfli&lt;/strong&gt; - &lt;a href=&#34;https://github.com/MaxWipfli&#34;&gt;MaxWipfli&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Daniel Bertalan&lt;/strong&gt; - &lt;a href=&#34;https://github.com/BertalanD&#34;&gt;BertalanD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Jelle Raaijmakers&lt;/strong&gt; - &lt;a href=&#34;https://github.com/GMTA&#34;&gt;GMTA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sam Atkins&lt;/strong&gt; - &lt;a href=&#34;https://github.com/AtkinsSJ&#34;&gt;AtkinsSJ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tobias Christiansen&lt;/strong&gt; - &lt;a href=&#34;https://github.com/TobyAsE&#34;&gt;TobyAsE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Lenny Maiorani&lt;/strong&gt; - &lt;a href=&#34;https://github.com/ldm5180&#34;&gt;ldm5180&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;sin-ack&lt;/strong&gt; - &lt;a href=&#34;https://github.com/sin-ack&#34;&gt;sin-ack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Jesse Buhagiar&lt;/strong&gt; - &lt;a href=&#34;https://github.com/Quaker762&#34;&gt;Quaker762&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Peter Elliott&lt;/strong&gt; - &lt;a href=&#34;https://github.com/Petelliott&#34;&gt;Petelliott&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Karol Kosek&lt;/strong&gt; - &lt;a href=&#34;https://github.com/krkk&#34;&gt;krkk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mustafa Quraish&lt;/strong&gt; - &lt;a href=&#34;https://github.com/mustafaquraish&#34;&gt;mustafaquraish&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;David Tuin&lt;/strong&gt; - &lt;a href=&#34;https://github.com/davidot&#34;&gt;davidot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Leon Albrecht&lt;/strong&gt; - &lt;a href=&#34;https://github.com/Hendiadyoin1&#34;&gt;Hendiadyoin1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tim Schumacher&lt;/strong&gt; - &lt;a href=&#34;https://github.com/timschumi&#34;&gt;timschumi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Marcus Nilsson&lt;/strong&gt; - &lt;a href=&#34;https://github.com/metmo&#34;&gt;metmo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Gegga Thor&lt;/strong&gt; - &lt;a href=&#34;https://github.com/Xexxa&#34;&gt;Xexxa&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;kleines Filmr√∂llchen&lt;/strong&gt; - &lt;a href=&#34;https://github.com/kleinesfilmroellchen&#34;&gt;kleinesfilmroellchen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Kenneth Myhra&lt;/strong&gt; - &lt;a href=&#34;https://github.com/kennethmyhra&#34;&gt;kennethmyhra&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Maciej&lt;/strong&gt; - &lt;a href=&#34;https://github.com/sppmacd&#34;&gt;sppmacd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sahan Fernando&lt;/strong&gt; - &lt;a href=&#34;https://github.com/ccapitalK&#34;&gt;ccapitalK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Benjamin Maxwell&lt;/strong&gt; - &lt;a href=&#34;https://github.com/MacDue&#34;&gt;MacDue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dennis Esternon&lt;/strong&gt; - &lt;a href=&#34;https://github.com/djwisdom&#34;&gt;djwisdom&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;frhun&lt;/strong&gt; - &lt;a href=&#34;https://github.com/frhun&#34;&gt;frhun&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;networkException&lt;/strong&gt; - &lt;a href=&#34;https://github.com/networkException&#34;&gt;networkException&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Brandon Jordan&lt;/strong&gt; - &lt;a href=&#34;https://github.com/electrikmilk&#34;&gt;electrikmilk&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And many more! &lt;a href=&#34;https://github.com/SerenityOS/serenity/graphs/contributors&#34;&gt;See here&lt;/a&gt; for a full contributor list. The people listed above have landed more than 100 commits in the project. :^)&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;SerenityOS is licensed under a 2-clause BSD license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>facebookincubator/velox</title>
    <updated>2022-10-01T01:56:23Z</updated>
    <id>tag:github.com,2022-10-01:/facebookincubator/velox</id>
    <link href="https://github.com/facebookincubator/velox" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A C++ vectorized database acceleration library aimed to optimizing query engines and data processing systems.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/facebookincubator/velox/main/static/logo.svg?sanitize=true&#34; alt=&#34;Velox logo&#34; width=&#34;50%&#34; align=&#34;center&#34;&gt; &#xA;&lt;p&gt;Velox is a C++ database acceleration library which provides reusable, extensible, and high-performance data processing components. These components can be reused to build compute engines focused on different analytical workloads, including batch, interactive, stream processing, and AI/ML. Velox was created by Facebook and it is currently developed in partnership with Intel, ByteDance, and Ahana.&lt;/p&gt; &#xA;&lt;p&gt;In common usage scenarios, Velox takes a fully optimized query plan as input and performs the described computation. Considering Velox does not provide a SQL parser, a dataframe layer, or a query optimizer, it is usually not meant to be used directly by end-users; rather, it is mostly used by developers integrating and optimizing their compute engines.&lt;/p&gt; &#xA;&lt;p&gt;Velox provides the following high-level components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Type&lt;/strong&gt;: a generic typing system that supports scalar, complex, and nested types, such as structs, maps, arrays, tensors, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vector&lt;/strong&gt;: an &lt;a href=&#34;https://facebookincubator.github.io/velox/develop/vectors.html&#34;&gt;Arrow-compatible columnar memory layout module&lt;/a&gt;, which provides multiple encodings, such as Flat, Dictionary, Constant, Sequence/RLE, and Bias, in addition to a lazy materialization pattern and support for out-of-order writes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Expression Eval&lt;/strong&gt;: a &lt;a href=&#34;https://facebookincubator.github.io/velox/develop/expression-evaluation.html&#34;&gt;fully vectorized expression evaluation engine&lt;/a&gt; that allows expressions to be efficiently executed on top of Vector/Arrow encoded data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Function Packages&lt;/strong&gt;: sets of vectorized function implementations following the Presto and Spark semantic.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Operators&lt;/strong&gt;: implementation of common data processing operators such as scans, projection, filtering, groupBy, orderBy, shuffle, &lt;a href=&#34;https://facebookincubator.github.io/velox/develop/joins.html&#34;&gt;hash join&lt;/a&gt;, unnest, and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;I/O&lt;/strong&gt;: a generic connector interface that allows different file formats (ORC/DWRF and Parquet) and storage adapters (S3, HDFS, local files) to be used.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Network Serializers&lt;/strong&gt;: an interface where different wire protocols can be implemented, used for network communication, supporting &lt;a href=&#34;https://prestodb.io/docs/current/develop/serialized-page.html&#34;&gt;PrestoPage&lt;/a&gt; and Spark&#39;s UnsafeRow.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Resource Management&lt;/strong&gt;: a collection of primitives for handling computational resources, such as &lt;a href=&#34;https://facebookincubator.github.io/velox/develop/arena.html&#34;&gt;memory arenas&lt;/a&gt; and buffer management, tasks, drivers, and thread pools for CPU and thread execution, spilling, and caching.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Velox is extensible and allows developers to define their own engine-specific specializations, including:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Custom types&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://facebookincubator.github.io/velox/develop/scalar-functions.html&#34;&gt;Simple and vectorized functions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://facebookincubator.github.io/velox/develop/aggregate-functions.html&#34;&gt;Aggregate functions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Operators&lt;/li&gt; &#xA; &lt;li&gt;File formats&lt;/li&gt; &#xA; &lt;li&gt;Storage adapters&lt;/li&gt; &#xA; &lt;li&gt;Network serializers&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Examples of extensibility and integration with different component APIs &lt;a href=&#34;https://raw.githubusercontent.com/facebookincubator/velox/main/velox/examples&#34;&gt;can be found here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Developer guides detailing many aspects of the library, in addition to the list of available functions &lt;a href=&#34;https://facebookincubator.github.io/velox&#34;&gt;can be found here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;We provide scripts to help developers setup and install Velox dependencies.&lt;/p&gt; &#xA;&lt;h3&gt;Get the Velox Source&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recursive https://github.com/facebookincubator/velox.git&#xA;cd velox&#xA;# if you are updating an existing checkout&#xA;git submodule sync --recursive&#xA;git submodule update --init --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setting up on macOS&lt;/h3&gt; &#xA;&lt;p&gt;Once you have checked out Velox, on an Intel MacOS machine you can setup and then build like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ./scripts/setup-macos.sh &#xA;$ make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On an M1 MacOS machine you can build like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ CPU_TARGET=&#34;arm64&#34; ./scripts/setup-macos.sh&#xA;$ CPU_TARGET=&#34;arm64&#34; make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also produce intel binaries on an M1, use &lt;code&gt;CPU_TARGET=&#34;sse&#34;&lt;/code&gt; for the above.&lt;/p&gt; &#xA;&lt;h3&gt;Setting up on Linux (Ubuntu 20.04 or later)&lt;/h3&gt; &#xA;&lt;p&gt;Once you have checked out Velox, you can setup and build like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ./scripts/setup-ubuntu.sh &#xA;$ make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building Velox&lt;/h3&gt; &#xA;&lt;p&gt;Run &lt;code&gt;make&lt;/code&gt; in the root directory to compile the sources. For development, use &lt;code&gt;make debug&lt;/code&gt; to build a non-optimized debug version, or &lt;code&gt;make release&lt;/code&gt; to build an optimized version. Use &lt;code&gt;make unittest&lt;/code&gt; to build and run tests.&lt;/p&gt; &#xA;&lt;p&gt;Note that,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Velox requires C++17 , thus minimum supported compiler is GCC 5.0 and Clang 5.0.&lt;/li&gt; &#xA; &lt;li&gt;Velox requires the CPU to support instruction sets: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;bmi&lt;/li&gt; &#xA;   &lt;li&gt;bmi2&lt;/li&gt; &#xA;   &lt;li&gt;f16c&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Velox tries to use the following (or equivalent) instruction sets where available: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;On Intel CPUs &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;avx&lt;/li&gt; &#xA;     &lt;li&gt;avx2&lt;/li&gt; &#xA;     &lt;li&gt;sse&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;On ARM &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Neon&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building Velox with docker-compose&lt;/h3&gt; &#xA;&lt;p&gt;If you don&#39;t want to install the system dependencies required to build Velox, you can also build and run tests for Velox on a docker container using &lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;docker-compose&lt;/a&gt;. Use the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ docker-compose build ubuntu-cpp&#xA;$ docker-compose run ubuntu-cpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Check our &lt;a href=&#34;https://raw.githubusercontent.com/facebookincubator/velox/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; to learn about how to contribute to the project.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;The main communication channel with the Velox OSS community is through the &lt;a href=&#34;http://velox-oss.slack.com&#34;&gt;the Velox-OSS Slack workspace&lt;/a&gt;. Please reach out to &lt;strong&gt;&lt;a href=&#34;mailto:velox@fb.com&#34;&gt;velox@fb.com&lt;/a&gt;&lt;/strong&gt; to get access to Velox Slack Channel.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Velox is licensed under the Apache 2.0 License. A copy of the license &lt;a href=&#34;https://raw.githubusercontent.com/facebookincubator/velox/main/LICENSE&#34;&gt;can be found here.&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cmu-db/bustub</title>
    <updated>2022-10-01T01:56:23Z</updated>
    <id>tag:github.com,2022-10-01:/cmu-db/bustub</id>
    <link href="https://github.com/cmu-db/bustub" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The BusTub Relational Database Management System (Educational)&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cmu-db/bustub/master/logo/bustub-whiteborder.svg?sanitize=true&#34; alt=&#34;BusTub Logo&#34; height=&#34;200&#34;&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cmu-db/bustub/actions/workflows/cmake.yml&#34;&gt;&lt;img src=&#34;https://github.com/cmu-db/bustub/actions/workflows/cmake.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;BusTub is a relational database management system built at &lt;a href=&#34;https://db.cs.cmu.edu&#34;&gt;Carnegie Mellon University&lt;/a&gt; for the &lt;a href=&#34;https://15445.courses.cs.cmu.edu&#34;&gt;Introduction to Database Systems&lt;/a&gt; (15-445/645) course. This system was developed for educational purposes and should not be used in production environments.&lt;/p&gt; &#xA;&lt;p&gt;BusTub supports basic SQL and comes with an interactive shell. You can get it running after finishing all the course projects.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/cmu-db/bustub/master/logo/sql.png&#34; alt=&#34;BusTub SQL&#34; width=&#34;400&#34;&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARNING: IF YOU ARE A STUDENT IN THE CLASS, DO NOT DIRECTLY FORK THIS REPO. DO NOT PUSH PROJECT SOLUTIONS PUBLICLY. THIS IS AN ACADEMIC INTEGRITY VIOLATION AND CAN LEAD TO GETTING YOUR DEGREE REVOKED, EVEN AFTER YOU GRADUATE.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Cloning this Repository&lt;/h2&gt; &#xA;&lt;p&gt;The following instructions are adapted from the Github documentation on &lt;a href=&#34;https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/duplicating-a-repository&#34;&gt;duplicating a repository&lt;/a&gt;. The procedure below walks you through creating a private BusTub repository that you can use for development.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go &lt;a href=&#34;https://github.com/new&#34;&gt;here&lt;/a&gt; to create a new repository under your account. Pick a name (e.g. &lt;code&gt;bustub-private&lt;/code&gt;) and select &lt;strong&gt;Private&lt;/strong&gt; for the repository visibility level.&lt;/li&gt; &#xA; &lt;li&gt;On your development machine, create a bare clone of the public BusTub repository: &lt;pre&gt;&lt;code&gt;$ git clone --bare https://github.com/cmu-db/bustub.git bustub-public&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Next, &lt;a href=&#34;https://git-scm.com/docs/git-push#Documentation/git-push.txt---mirror&#34;&gt;mirror&lt;/a&gt; the public BusTub repository to your own private BusTub repository. Suppose your GitHub name is &lt;code&gt;student&lt;/code&gt; and your repository name is &lt;code&gt;bustub-private&lt;/code&gt;. The procedure for mirroring the repository is then: &lt;pre&gt;&lt;code&gt;$ cd bustub-public&#xA;&#xA;# If you pull / push over HTTPS&#xA;$ git push https://github.com/student/bustub-private.git master&#xA;&#xA;# If you pull / push over SSH&#xA;$ git push git@github.com:student/bustub-private.git master&#xA;&lt;/code&gt;&lt;/pre&gt; This copies everything in the public BusTub repository to your own private repository. You can now delete your local clone of the public repository: &lt;pre&gt;&lt;code&gt;$ cd ..&#xA;$ rm -rf bustub-public&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Clone your private repository to your development machine: &lt;pre&gt;&lt;code&gt;# If you pull / push over HTTPS&#xA;$ git clone https://github.com/student/bustub-private.git&#xA;&#xA;# If you pull / push over SSH&#xA;$ git clone git@github.com:student/bustub-private.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Add the public BusTub repository as a second remote. This allows you to retrieve changes from the CMU-DB repository and merge them with your solution throughout the semester: &lt;pre&gt;&lt;code&gt;$ git remote add public https://github.com/cmu-db/bustub.git&#xA;&lt;/code&gt;&lt;/pre&gt; You can verify that the remote was added with the following command: &lt;pre&gt;&lt;code&gt;$ git remote -v&#xA;origin&#x9;https://github.com/student/bustub-private.git (fetch)&#xA;origin&#x9;https://github.com/student/bustub-private.git (push)&#xA;public&#x9;https://github.com/cmu-db/bustub.git (fetch)&#xA;public&#x9;https://github.com/cmu-db/bustub.git (push)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can now pull in changes from the public BusTub repository as needed with: &lt;pre&gt;&lt;code&gt;$ git pull public master&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Disable GitHub Actions&lt;/strong&gt; from the project settings of your private repository, otherwise you may run out of GitHub Actions quota. &lt;pre&gt;&lt;code&gt;Settings &amp;gt; Actions &amp;gt; General &amp;gt; Actions permissions &amp;gt; Disable actions.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We suggest working on your projects in separate branches. If you do not understand how Git branches work, &lt;a href=&#34;https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging&#34;&gt;learn how&lt;/a&gt;. If you fail to do this, you might lose all your work at some point in the semester, and nobody will be able to help you.&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;p&gt;We recommend developing BusTub on Ubuntu 20.04, Ubuntu 22.04, or macOS (M1/M2/Intel). We do not support any other environments (i.e., do not open issues or come to office hours to debug them). We do not support WSL.&lt;/p&gt; &#xA;&lt;h3&gt;Linux / Mac (Recommended)&lt;/h3&gt; &#xA;&lt;p&gt;To ensure that you have the proper packages on your machine, run the following script to automatically install them:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Linux&#xA;$ sudo build_support/packages.sh&#xA;# macOS&#xA;$ build_support/packages.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run the following commands to build the system:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mkdir build&#xA;$ cd build&#xA;$ cmake ..&#xA;$ make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to compile the system in debug mode, pass in the following flag to cmake: Debug mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cmake -DCMAKE_BUILD_TYPE=Debug ..&#xA;$ make -j&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This enables &lt;a href=&#34;https://github.com/google/sanitizers&#34;&gt;AddressSanitizer&lt;/a&gt; by default.&lt;/p&gt; &#xA;&lt;p&gt;If you want to use other sanitizers,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cmake -DCMAKE_BUILD_TYPE=Debug -DBUSTUB_SANITIZER=thread ..&#xA;$ make -j&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows (Not Guaranteed to Work)&lt;/h3&gt; &#xA;&lt;p&gt;If you are using Windows 10, you can use the Windows Subsystem for Linux (WSL) to develop, build, and test Bustub. All you need is to &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install-win10&#34;&gt;Install WSL&lt;/a&gt;. You can just choose &#34;Ubuntu&#34; (no specific version) in Microsoft Store. Then, enter WSL and follow the above instructions.&lt;/p&gt; &#xA;&lt;p&gt;If you are using CLion, it also &lt;a href=&#34;https://blog.jetbrains.com/clion/2018/01/clion-and-linux-toolchain-on-windows-are-now-friends&#34;&gt;works with WSL&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Vagrant (Not Guaranteed to Work)&lt;/h3&gt; &#xA;&lt;p&gt;First, make sure you have Vagrant and Virtualbox installed&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo apt update&#xA;$ sudo apt install vagrant virtualbox&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From the repository directory, run this command to create and start a Vagrant box:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ vagrant up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will start a Vagrant box running Ubuntu 20.02 in the background with all the packages needed. To access it, type&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ vagrant ssh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to open a shell within the box. You can find Bustub&#39;s code mounted at &lt;code&gt;/bustub&lt;/code&gt; and run the commands mentioned above like normal.&lt;/p&gt; &#xA;&lt;h3&gt;Docker (Not Guaranteed to Work)&lt;/h3&gt; &#xA;&lt;p&gt;First, make sure that you have docker installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo apt update&#xA;$ sudo apt install docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From the repository directory, run these commands to create a Docker image and container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker build . -t bustub&#xA;$ docker create -t -i --name bustub -v $(pwd):/bustub bustub bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create a Docker image and container. To run it, type:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker start -a -i bustub&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to open a shell within the box. You can find Bustub&#39;s code mounted at &lt;code&gt;/bustub&lt;/code&gt; and run the commands mentioned above like normal.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd build&#xA;$ make check-tests&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>