<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-01T01:44:11Z</updated>
  <subtitle>Monthly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mudler/LocalAI</title>
    <updated>2024-05-01T01:44:11Z</updated>
    <id>tag:github.com,2024-05-01:/mudler/LocalAI</id>
    <link href="https://github.com/mudler/LocalAI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ü§ñ The free, Open Source OpenAI alternative. Self-hosted, community-driven and local-first. Drop-in replacement for OpenAI running on consumer-grade hardware. No GPU required. Runs gguf, transformers, diffusers and many more models architectures. It allows to generate Text, Audio, Video, Images. Also with voice cloning capabilities.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;br&gt; &lt;img height=&#34;300&#34; src=&#34;https://github.com/go-skynet/LocalAI/assets/2420543/0966aa2a-166e-4f99-a3e5-6c915fc997dd&#34;&gt; &lt;br&gt; LocalAI &lt;br&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/go-skynet/LocalAI/fork&#34; target=&#34;blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/go-skynet/LocalAI?style=for-the-badge&#34; alt=&#34;LocalAI forks&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/go-skynet/LocalAI/stargazers&#34; target=&#34;blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/go-skynet/LocalAI?style=for-the-badge&#34; alt=&#34;LocalAI stars&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/go-skynet/LocalAI/pulls&#34; target=&#34;blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-pr/go-skynet/LocalAI?style=for-the-badge&#34; alt=&#34;LocalAI pull-requests&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/go-skynet/LocalAI/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release/go-skynet/LocalAI?&amp;amp;label=Latest&amp;amp;style=for-the-badge&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://hub.docker.com/r/localai/localai&#34; target=&#34;blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/dockerhub-images-important.svg?logo=Docker&#34; alt=&#34;LocalAI Docker hub&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://quay.io/repository/go-skynet/local-ai?tab=tags&amp;amp;tag=latest&#34; target=&#34;blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/quay.io-images-important.svg?&#34; alt=&#34;LocalAI Quay.io&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://twitter.com/LocalAI_API&#34; target=&#34;blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/LocalAI_API?label=Follow: LocalAI_API&amp;amp;style=social&#34; alt=&#34;Follow LocalAI_API&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/uJAeKSAGDy&#34; target=&#34;blank&#34;&gt; &lt;img src=&#34;https://dcbadge.vercel.app/api/server/uJAeKSAGDy?style=flat-square&amp;amp;theme=default-inverted&#34; alt=&#34;Join LocalAI Discord Community&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;üí°&lt;/span&gt; Get help - &lt;a href=&#34;https://localai.io/faq/&#34;&gt;‚ùìFAQ&lt;/a&gt; &lt;a href=&#34;https://github.com/go-skynet/LocalAI/discussions&#34;&gt;üí≠Discussions&lt;/a&gt; &lt;a href=&#34;https://discord.gg/uJAeKSAGDy&#34;&gt;&lt;span&gt;üí¨&lt;/span&gt; Discord&lt;/a&gt; &lt;a href=&#34;https://localai.io/&#34;&gt;&lt;span&gt;üìñ&lt;/span&gt; Documentation website&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://localai.io/basics/getting_started/&#34;&gt;üíª Quickstart&lt;/a&gt; &lt;a href=&#34;https://localai.io/basics/news/&#34;&gt;üì£ News&lt;/a&gt; &lt;a href=&#34;https://github.com/go-skynet/LocalAI/tree/master/examples/&#34;&gt; üõ´ Examples &lt;/a&gt; &lt;a href=&#34;https://localai.io/models/&#34;&gt; üñºÔ∏è Models &lt;/a&gt; &lt;a href=&#34;https://github.com/mudler/LocalAI/issues?q=is%3Aissue+is%3Aopen+label%3Aroadmap&#34;&gt; üöÄ Roadmap &lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/go-skynet/LocalAI/actions/workflows/test.yml&#34;&gt;&lt;img src=&#34;https://github.com/go-skynet/LocalAI/actions/workflows/test.yml/badge.svg?sanitize=true&#34; alt=&#34;tests&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/go-skynet/LocalAI/actions/workflows/release.yaml&#34;&gt;&lt;img src=&#34;https://github.com/go-skynet/LocalAI/actions/workflows/release.yaml/badge.svg?sanitize=true&#34; alt=&#34;Build and Release&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/go-skynet/LocalAI/actions/workflows/image.yml&#34;&gt;&lt;img src=&#34;https://github.com/go-skynet/LocalAI/actions/workflows/image.yml/badge.svg?sanitize=true&#34; alt=&#34;build container images&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/go-skynet/LocalAI/actions/workflows/bump_deps.yaml&#34;&gt;&lt;img src=&#34;https://github.com/go-skynet/LocalAI/actions/workflows/bump_deps.yaml/badge.svg?sanitize=true&#34; alt=&#34;Bump dependencies&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://artifacthub.io/packages/search?repo=localai&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/localai&#34; alt=&#34;Artifact Hub&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;LocalAI&lt;/strong&gt; is the free, Open Source OpenAI alternative. LocalAI act as a drop-in replacement REST API that‚Äôs compatible with OpenAI (Elevenlabs, Anthropic... ) API specifications for local AI inferencing. It allows you to run LLMs, generate images, audio (and not only) locally or on-prem with consumer grade hardware, supporting multiple model families. Does not require GPU. It is created and maintained by &lt;a href=&#34;https://github.com/mudler&#34;&gt;Ettore Di Giacinto&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üî•üî• Hot topics / Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mudler/LocalAI/issues?q=is%3Aissue+is%3Aopen+label%3Aroadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reranker API: &lt;a href=&#34;https://github.com/mudler/LocalAI/pull/2121&#34;&gt;https://github.com/mudler/LocalAI/pull/2121&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gallery WebUI: &lt;a href=&#34;https://github.com/mudler/LocalAI/pull/2104&#34;&gt;https://github.com/mudler/LocalAI/pull/2104&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;llama3: &lt;a href=&#34;https://github.com/mudler/LocalAI/discussions/2076&#34;&gt;https://github.com/mudler/LocalAI/discussions/2076&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Parler-TTS: &lt;a href=&#34;https://github.com/mudler/LocalAI/pull/2027&#34;&gt;https://github.com/mudler/LocalAI/pull/2027&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Openvino support: &lt;a href=&#34;https://github.com/mudler/LocalAI/pull/1892&#34;&gt;https://github.com/mudler/LocalAI/pull/1892&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Vector store: &lt;a href=&#34;https://github.com/mudler/LocalAI/pull/1795&#34;&gt;https://github.com/mudler/LocalAI/pull/1795&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;All-in-one container image: &lt;a href=&#34;https://github.com/mudler/LocalAI/issues/1855&#34;&gt;https://github.com/mudler/LocalAI/issues/1855&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Hot topics (looking for contributors):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WebUI improvements: &lt;a href=&#34;https://github.com/mudler/LocalAI/issues/2156&#34;&gt;https://github.com/mudler/LocalAI/issues/2156&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Backends v2: &lt;a href=&#34;https://github.com/mudler/LocalAI/issues/1126&#34;&gt;https://github.com/mudler/LocalAI/issues/1126&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Improving UX v2: &lt;a href=&#34;https://github.com/mudler/LocalAI/issues/1373&#34;&gt;https://github.com/mudler/LocalAI/issues/1373&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Assistant API: &lt;a href=&#34;https://github.com/mudler/LocalAI/issues/1273&#34;&gt;https://github.com/mudler/LocalAI/issues/1273&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Moderation endpoint: &lt;a href=&#34;https://github.com/mudler/LocalAI/issues/999&#34;&gt;https://github.com/mudler/LocalAI/issues/999&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Vulkan: &lt;a href=&#34;https://github.com/mudler/LocalAI/issues/1647&#34;&gt;https://github.com/mudler/LocalAI/issues/1647&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want to help and contribute, issues up for grabs: &lt;a href=&#34;https://github.com/mudler/LocalAI/issues?q=is%3Aissue+is%3Aopen+label%3A%22up+for+grabs%22&#34;&gt;https://github.com/mudler/LocalAI/issues?q=is%3Aissue+is%3Aopen+label%3A%22up+for+grabs%22&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üíª &lt;a href=&#34;https://localai.io/basics/getting_started/index.html&#34;&gt;Getting started&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;For a detailed step-by-step introduction, refer to the &lt;a href=&#34;https://localai.io/basics/getting_started/index.html&#34;&gt;Getting Started&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;p&gt;For those in a hurry, here&#39;s a straightforward one-liner to launch a LocalAI AIO(All-in-one) Image using &lt;code&gt;docker&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -ti --name local-ai -p 8080:8080 localai/localai:latest-aio-cpu&#xA;# or, if you have an Nvidia GPU:&#xA;# docker run -ti --name local-ai -p 8080:8080 --gpus all localai/localai:latest-aio-gpu-nvidia-cuda-12&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üöÄ &lt;a href=&#34;https://localai.io/features/&#34;&gt;Features&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üìñ &lt;a href=&#34;https://localai.io/features/text-generation/&#34;&gt;Text generation with GPTs&lt;/a&gt; (&lt;code&gt;llama.cpp&lt;/code&gt;, &lt;code&gt;gpt4all.cpp&lt;/code&gt;, ... &lt;a href=&#34;https://localai.io/model-compatibility/index.html#model-compatibility-table&#34;&gt;&lt;span&gt;üìñ&lt;/span&gt; and more&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;üó£ &lt;a href=&#34;https://localai.io/features/text-to-audio/&#34;&gt;Text to Audio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üîà &lt;a href=&#34;https://localai.io/features/audio-to-text/&#34;&gt;Audio to Text&lt;/a&gt; (Audio transcription with &lt;code&gt;whisper.cpp&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;üé® &lt;a href=&#34;https://localai.io/features/image-generation&#34;&gt;Image generation with stable diffusion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üî• &lt;a href=&#34;https://localai.io/features/openai-functions/&#34;&gt;OpenAI functions&lt;/a&gt; üÜï&lt;/li&gt; &#xA; &lt;li&gt;üß† &lt;a href=&#34;https://localai.io/features/embeddings/&#34;&gt;Embeddings generation for vector databases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;‚úçÔ∏è &lt;a href=&#34;https://localai.io/features/constrained_grammars/&#34;&gt;Constrained grammars&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üñºÔ∏è &lt;a href=&#34;https://localai.io/models/&#34;&gt;Download Models directly from Huggingface &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ü•Ω &lt;a href=&#34;https://localai.io/features/gpt-vision/&#34;&gt;Vision API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üÜï &lt;a href=&#34;https://localai.io/features/reranker/&#34;&gt;Reranker API&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üíª Usage&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://localai.io/basics/getting_started/index.html&#34;&gt;Getting started&lt;/a&gt; section in our documentation.&lt;/p&gt; &#xA;&lt;h3&gt;üîó Community and integrations&lt;/h3&gt; &#xA;&lt;p&gt;Build and deploy custom containers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sozercan/aikit&#34;&gt;https://github.com/sozercan/aikit&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;WebUIs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Jirubizu/localai-admin&#34;&gt;https://github.com/Jirubizu/localai-admin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/go-skynet/LocalAI-frontend&#34;&gt;https://github.com/go-skynet/LocalAI-frontend&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Model galleries&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/go-skynet/model-gallery&#34;&gt;https://github.com/go-skynet/model-gallery&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Other:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Helm chart &lt;a href=&#34;https://github.com/go-skynet/helm-charts&#34;&gt;https://github.com/go-skynet/helm-charts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;VSCode extension &lt;a href=&#34;https://github.com/badgooooor/localai-vscode-plugin&#34;&gt;https://github.com/badgooooor/localai-vscode-plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Local Smart assistant &lt;a href=&#34;https://github.com/mudler/LocalAGI&#34;&gt;https://github.com/mudler/LocalAGI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Home Assistant &lt;a href=&#34;https://github.com/sammcj/homeassistant-localai&#34;&gt;https://github.com/sammcj/homeassistant-localai&lt;/a&gt; / &lt;a href=&#34;https://github.com/drndos/hass-openai-custom-conversation&#34;&gt;https://github.com/drndos/hass-openai-custom-conversation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Discord bot &lt;a href=&#34;https://github.com/mudler/LocalAGI/tree/main/examples/discord&#34;&gt;https://github.com/mudler/LocalAGI/tree/main/examples/discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Slack bot &lt;a href=&#34;https://github.com/mudler/LocalAGI/tree/main/examples/slack&#34;&gt;https://github.com/mudler/LocalAGI/tree/main/examples/slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Telegram bot &lt;a href=&#34;https://github.com/mudler/LocalAI/tree/master/examples/telegram-bot&#34;&gt;https://github.com/mudler/LocalAI/tree/master/examples/telegram-bot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Examples: &lt;a href=&#34;https://github.com/mudler/LocalAI/tree/master/examples/&#34;&gt;https://github.com/mudler/LocalAI/tree/master/examples/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;üîó Resources&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üÜï New! &lt;a href=&#34;https://localai.io/docs/advanced/fine-tuning/&#34;&gt;LLM finetuning guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://localai.io/basics/build/index.html&#34;&gt;How to build locally&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://localai.io/basics/getting_started/index.html#run-localai-in-kubernetes&#34;&gt;How to install in Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://localai.io/docs/integrations/&#34;&gt;Projects integrating LocalAI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://io.midori-ai.xyz/howtos/&#34;&gt;How tos section&lt;/a&gt; (curated by our community)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;üìñ&lt;/span&gt; üé• &lt;a href=&#34;https://localai.io/basics/news/#media-blogs-social&#34;&gt;Media, Blogs, Social&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.pulumi.com/ai/answers/tiZMDoZzZV6TLxgDXNBnFE/deploying-helm-charts-on-aws-eks&#34;&gt;Run LocalAI on AWS EKS with Pulumi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://staleks.hashnode.dev/installing-localai-on-aws-ec2-instance&#34;&gt;Run LocalAI on AWS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mudler.pm/posts/smart-slackbot-for-teams/&#34;&gt;Create a slackbot for teams and OSS projects that answer to documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=PKrDNuJ_dfE&#34;&gt;LocalAI meets k8sgpt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mudler.pm/posts/localai-question-answering/&#34;&gt;Question Answering on Documents locally with LangChain, LocalAI, Chroma, and GPT4All&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@tyler_97636/k8sgpt-localai-unlock-kubernetes-superpowers-for-free-584790de9b65&#34;&gt;Tutorial to use k8sgpt with LocalAI&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you utilize this repository, data in a downstream project, please consider citing it with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{localai,&#xA;  author = {Ettore Di Giacinto},&#xA;  title = {LocalAI: The free, Open source OpenAI alternative},&#xA;  year = {2023},&#xA;  publisher = {GitHub},&#xA;  journal = {GitHub repository},&#xA;  howpublished = {\url{https://github.com/go-skynet/LocalAI}},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;‚ù§Ô∏è Sponsors&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Do you find LocalAI useful?&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Support the project by becoming &lt;a href=&#34;https://github.com/sponsors/mudler&#34;&gt;a backer or sponsor&lt;/a&gt;. Your logo will show up here with a link to your website.&lt;/p&gt; &#xA;&lt;p&gt;A huge thank you to our generous sponsors who support this project:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/go-skynet/LocalAI/assets/2420543/68a6f3cb-8a65-4a4d-99b5-6417a8905512&#34; alt=&#34;Spectro Cloud logo_600x600px_transparent bg&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.spectrocloud.com/&#34;&gt;Spectro Cloud&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Spectro Cloud kindly supports LocalAI by providing GPU and computing resources to run tests on lamdalabs!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;And a huge shout-out to individuals sponsoring the project by donating hardware or backing the project.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sponsors/mudler&#34;&gt;Sponsor list&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;JDAM00 (donating HW for the CI)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üåü Star history&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#go-skynet/LocalAI&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=go-skynet/LocalAI&amp;amp;type=Date&#34; alt=&#34;LocalAI Star history Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üìñ License&lt;/h2&gt; &#xA;&lt;p&gt;LocalAI is a community-driven project created by &lt;a href=&#34;https://github.com/mudler/&#34;&gt;Ettore Di Giacinto&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;MIT - Author Ettore Di Giacinto&lt;/p&gt; &#xA;&lt;h2&gt;üôá Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;LocalAI couldn&#39;t have been built without the help of great software already available from the community. Thank you!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ggerganov/llama.cpp&#34;&gt;llama.cpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tatsu-lab/stanford_alpaca&#34;&gt;https://github.com/tatsu-lab/stanford_alpaca&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cornelk/llama-go&#34;&gt;https://github.com/cornelk/llama-go&lt;/a&gt; for the initial ideas&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/antimatter15/alpaca.cpp&#34;&gt;https://github.com/antimatter15/alpaca.cpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/EdVince/Stable-Diffusion-NCNN&#34;&gt;https://github.com/EdVince/Stable-Diffusion-NCNN&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ggerganov/whisper.cpp&#34;&gt;https://github.com/ggerganov/whisper.cpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/saharNooby/rwkv.cpp&#34;&gt;https://github.com/saharNooby/rwkv.cpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rhasspy/piper&#34;&gt;https://github.com/rhasspy/piper&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ü§ó Contributors&lt;/h2&gt; &#xA;&lt;p&gt;This is a community project, a special thanks to our contributors! ü§ó &lt;a href=&#34;https://github.com/go-skynet/LocalAI/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=go-skynet/LocalAI&#34;&gt; &lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>suyu-emu/suyu</title>
    <updated>2024-05-01T01:44:11Z</updated>
    <id>tag:github.com,2024-05-01:/suyu-emu/suyu</id>
    <link href="https://github.com/suyu-emu/suyu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;suyu is the continuation of the world&#39;s most popular, open-source, Nintendo Switch emulator, yuzu. It is written in C++ with portability in mind, and we&#39;re actively working on builds for Windows, Linux and Android.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: We do not support or condone piracy in any form. In order to use suyu, you&#39;ll need keys from your real Switch system, and games which you have legally obtained and paid for. We do not intend to make money or profit from this project.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;re in need of developers. Please join our chat below if you want to contribute! This repo was based on Yuzu EA 4176 but the code is being rewritten from the ground up for legal and performance reasons.&lt;/p&gt; &#xA;&lt;p&gt;Support the original suyu developer team &lt;a href=&#34;https://discord.gg/ajz5hdrZ&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; &lt;br&gt; &lt;a href=&#34;https://suyu.dev&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/suyu-emu/suyu/dev/dist/readme/suyu__Logo-Pill.svg?sanitize=true&#34; alt=&#34;suyu&#34; height=&#34;128&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;b&gt;suyu&lt;/b&gt; &lt;br&gt; &lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;&lt;b&gt;suyu&lt;/b&gt; was the continuation of the world&#39;s most popular, open-source Nintendo Switch emulator, yuzu, but is now something more. &lt;br&gt; It is written in C++ (C# possibly required soon) with portability in mind, we actively work on builds for Windows, Linux, Android and hopefully IOS, along with a WIP custom OS called suyuOS (https://git.suyu.dev/suyu/suyu-os) . &lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://chat.suyu.dev&#34;&gt;Chat&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/suyu-emu/suyu/dev/#status&#34;&gt;Status&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/suyu-emu/suyu/dev/#development&#34;&gt;Development&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/suyu-emu/suyu/dev/#downloads&#34;&gt;Downloads&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/suyu-emu/suyu/dev/#building&#34;&gt;Building&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/suyu-emu/suyu/dev/#support&#34;&gt;Support&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/suyu-emu/suyu/dev/#license&#34;&gt;License&lt;/a&gt; | &lt;a href=&#34;https://git.suyu.dev/suyu/suyu/actions&#34;&gt;Pipelines&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Hardware Requirements&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://git.suyu.dev/suyu/suyu/wiki/Hardware-Requirements&#34;&gt;Click here to see the Hardware Requirements&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;We currently have builds over at the &lt;a href=&#34;https://git.suyu.dev/suyu/suyu/releases&#34;&gt;Releases&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: We try to update this README whenever we can, but some links might be broken, and some information may be outdated or irrelevant.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;This project is completely free and open source, and anyone can contribute to help improve suyu.&lt;/p&gt; &#xA;&lt;p&gt;Most of the development happens on GitLab. For development discussion, please join us in our &lt;a href=&#34;https://chat.suyu.dev&#34;&gt;Chat&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to contribute, please take a look at the &lt;a href=&#34;https://git.suyu.dev/suyu/suyu/wiki/Contributing&#34;&gt;Contributor&#39;s Guide&lt;/a&gt; and &lt;a href=&#34;https://git.suyu.dev/suyu/suyu/wiki/Developer-Information&#34;&gt;Developer Information&lt;/a&gt;. You can also contact any of the developers on Discord to learn more about the current state of suyu.&lt;/p&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;a href=&#34;https://git.suyu.dev/suyu/suyu/releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;a href=&#34;https://git.suyu.dev/suyu/suyu/releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;a href=&#34;https://git.suyu.dev/suyu/suyu/releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Android&lt;/strong&gt;: &lt;a href=&#34;https://git.suyu.dev/suyu/suyu/releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;For IOS users, we recommend Sudachi&lt;/strong&gt;: &lt;a href=&#34;https://github.com/emuPlace/Sudachi/releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want daily builds then &lt;a href=&#34;https://git.suyu.dev/suyu/suyu/actions&#34;&gt;Click here&lt;/a&gt; If you don&#39;t know how to download the daily builds then &lt;a href=&#34;https://git.suyu.dev/suyu/suyu/raw/branch/dev/img/daily-builds.png&#34;&gt;Click here&lt;/a&gt; Right now we only have daily builds for Linux and Android.&lt;/p&gt; &#xA;&lt;p&gt;We have official builds &lt;a href=&#34;https://git.suyu.dev/suyu/suyu/releases&#34;&gt;here.&lt;/a&gt; If any website or person is claiming to have a build for suyu, take that with a grain of salt.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;a href=&#34;https://git.suyu.dev/suyu/suyu/wiki/Building-For-Windows&#34;&gt;Windows Build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;a href=&#34;https://git.suyu.dev/suyu/suyu/wiki/Building-For-Linux&#34;&gt;Linux Build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Android&lt;/strong&gt;: &lt;a href=&#34;https://git.suyu.dev/suyu/suyu/wiki/Building-For-Android&#34;&gt;Android Build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;a href=&#34;https://git.suyu.dev/suyu/suyu/wiki/Building-for-macOS&#34;&gt;macOS Build&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you have any questions, don&#39;t hesitate to ask us in our &lt;a href=&#34;https://chat.suyu.dev&#34;&gt;chat&lt;/a&gt;. We don&#39;t bite!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;suyu is licensed under the free and open-source GPL-3.0-or-later license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>sogou/workflow</title>
    <updated>2024-05-01T01:44:11Z</updated>
    <id>tag:github.com,2024-05-01:/sogou/workflow</id>
    <link href="https://github.com/sogou/workflow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;C++ Parallel Computing and Asynchronous Networking Framework&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/README_cn.md&#34;&gt;ÁÆÄ‰Ωì‰∏≠ÊñáÁâàÔºàÊé®ËçêÔºâ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sogou C++ Workflow&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sogou/workflow/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-green.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://en.cppreference.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/language-c++-red.svg?sanitize=true&#34; alt=&#34;Language&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://img.shields.io/badge/platform-linux%20%7C%20macos20%7C%20windows-lightgrey.svg&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/platform-linux%20%7C%20macos%20%7C%20windows-lightgrey.svg?sanitize=true&#34; alt=&#34;Platform&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sogou/workflow/actions?query=workflow%3A%22ci+build%22++&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/sogou/workflow/ci.yml?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;As &lt;strong&gt;Sogou`s C++ server engine&lt;/strong&gt;, Sogou C++ Workflow supports almost all &lt;strong&gt;back-end C++ online services&lt;/strong&gt; of Sogou, including all search services, cloud input method, online advertisements, etc., handling more than &lt;strong&gt;10 billion&lt;/strong&gt; requests every day. This is an &lt;strong&gt;enterprise-level programming engine&lt;/strong&gt; in light and elegant design which can satisfy most C++ back-end development requirements.&lt;/p&gt; &#xA;&lt;h4&gt;You can use it:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To quickly build an &lt;strong&gt;HTTP server&lt;/strong&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&#xA;#include &#34;workflow/WFHttpServer.h&#34;&#xA;&#xA;int main()&#xA;{&#xA;    WFHttpServer server([](WFHttpTask *task) {&#xA;        task-&amp;gt;get_resp()-&amp;gt;append_output_body(&#34;&amp;lt;html&amp;gt;Hello World!&amp;lt;/html&amp;gt;&#34;);&#xA;    });&#xA;&#xA;    if (server.start(8888) == 0) { // start server on port 8888&#xA;        getchar(); // press &#34;Enter&#34; to end.&#xA;        server.stop();&#xA;    }&#xA;&#xA;    return 0;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;As a &lt;strong&gt;multifunctional asynchronous client&lt;/strong&gt;, it currently supports &lt;code&gt;HTTP&lt;/code&gt;, &lt;code&gt;Redis&lt;/code&gt;, &lt;code&gt;MySQL&lt;/code&gt; and &lt;code&gt;Kafka&lt;/code&gt; protocols.&lt;/li&gt; &#xA; &lt;li&gt;To implement &lt;strong&gt;client/server on user-defined protocol&lt;/strong&gt; and build your own &lt;strong&gt;RPC system&lt;/strong&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/sogou/srpc&#34;&gt;srpc&lt;/a&gt; is based on it and it is an independent open source project, which supports srpc, brpc, trpc and thrift protocols.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;To build &lt;strong&gt;asynchronous workflow&lt;/strong&gt;; support common &lt;strong&gt;series&lt;/strong&gt; and &lt;strong&gt;parallel&lt;/strong&gt; structures, and also support any &lt;strong&gt;DAG&lt;/strong&gt; structures.&lt;/li&gt; &#xA; &lt;li&gt;As a &lt;strong&gt;parallel computing tool&lt;/strong&gt;. In addition to &lt;strong&gt;networking tasks&lt;/strong&gt;, Sogou C++ Workflow also includes &lt;strong&gt;the scheduling of computing tasks&lt;/strong&gt;. All types of tasks can be put into &lt;strong&gt;the same&lt;/strong&gt; flow.&lt;/li&gt; &#xA; &lt;li&gt;As an &lt;strong&gt;asynchronous file IO tool&lt;/strong&gt; in &lt;code&gt;Linux&lt;/code&gt; system, with high performance exceeding any system call. Disk file IO is also a task.&lt;/li&gt; &#xA; &lt;li&gt;To realize any &lt;strong&gt;high-performance&lt;/strong&gt; and &lt;strong&gt;high-concurrency&lt;/strong&gt; back-end service with a very complex relationship between computing and networking.&lt;/li&gt; &#xA; &lt;li&gt;To build a &lt;strong&gt;micro service&lt;/strong&gt; system. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This project has built-in &lt;strong&gt;service governance&lt;/strong&gt; and &lt;strong&gt;load balancing&lt;/strong&gt; features.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Wiki link : &lt;a href=&#34;https://github.com/sogou/workflow/wiki&#34;&gt;PaaS Architecture&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Compiling and running environment&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This project supports &lt;code&gt;Linux&lt;/code&gt;, &lt;code&gt;macOS&lt;/code&gt;, &lt;code&gt;Windows&lt;/code&gt;, &lt;code&gt;Android&lt;/code&gt; and other operating systems. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;Windows&lt;/code&gt; version is currently released as an independent &lt;a href=&#34;https://github.com/sogou/workflow/tree/windows&#34;&gt;branch&lt;/a&gt;, using &lt;code&gt;iocp&lt;/code&gt; to implement asynchronous networking. All user interfaces are consistent with the &lt;code&gt;Linux&lt;/code&gt; version.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Supports all CPU platforms, including 32 or 64-bit &lt;code&gt;x86&lt;/code&gt; processors, big-endian or little-endian &lt;code&gt;arm&lt;/code&gt; processors, &lt;code&gt;loongson&lt;/code&gt; processors.&lt;/li&gt; &#xA; &lt;li&gt;Master branch requires SSL and &lt;code&gt;OpenSSL 1.1&lt;/code&gt; or above is recommended. Fully compatible with BoringSSL. If you don&#39;t like SSL, you may checkout the &lt;a href=&#34;https://github.com/sogou/workflow/tree/nossl&#34;&gt;nossl&lt;/a&gt; branch.&lt;/li&gt; &#xA; &lt;li&gt;Uses the &lt;code&gt;C++11&lt;/code&gt; standard and therefore, it should be compiled with a compiler which supports &lt;code&gt;C++11&lt;/code&gt;. Does not rely on &lt;code&gt;boost&lt;/code&gt; or &lt;code&gt;asio&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;No other dependencies. However, if you need &lt;code&gt;Kafka&lt;/code&gt; protocol, some compression libraries should be installed, including &lt;code&gt;lz4&lt;/code&gt;, &lt;code&gt;zstd&lt;/code&gt; and &lt;code&gt;snappy&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Get started (Linux, macOS):&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/sogou/workflow&#xA;cd workflow&#xA;make&#xA;cd tutorial&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;With SRPC Tool (NEW!)Ôºö&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sogou/srpc/raw/master/tools/README.md&#34;&gt;https://github.com/sogou/srpc/blob/master/tools/README.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;With &lt;a href=&#34;https://launchpad.net/ubuntu/+source/workflow&#34;&gt;apt-get&lt;/a&gt; on Debian Linux, ubuntu:&lt;/h4&gt; &#xA;&lt;p&gt;Sogou C++ Workflow has been packaged for Debian Linux and ubuntu 22.04.&lt;br&gt; To install the Workflow library for development purposes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt-get install libworkflow-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install the Workflow library for deployment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt-get install libworkflow1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;With &lt;a href=&#34;https://packages.fedoraproject.org/pkgs/workflow&#34;&gt;dnf&lt;/a&gt; on Fedora Linux:&lt;/h4&gt; &#xA;&lt;p&gt;Sogou C++ Workflow has been packaged for Fedora Linux.&lt;br&gt; To install the Workflow library for development purposes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo dnf install workflow-devel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install the Workflow library for deployment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo dnf install workflow&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;With xmake&lt;/h4&gt; &#xA;&lt;p&gt;If you want to use xmake to build workflow, you can see &lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/xmake.md&#34;&gt;xmake build document&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Tutorials&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Client &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/tutorial-01-wget.md&#34;&gt;Creating your first taskÔºöwget&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/tutorial-02-redis_cli.md&#34;&gt;Implementing Redis set and getÔºöredis_cli&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/tutorial-03-wget_to_redis.md&#34;&gt;More features about seriesÔºöwget_to_redis&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Server &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/tutorial-04-http_echo_server.md&#34;&gt;First serverÔºöhttp_echo_server&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/tutorial-05-http_proxy.md&#34;&gt;Asynchronous serverÔºöhttp_proxy&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Parallel tasks and Series„ÄÄ &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/tutorial-06-parallel_wget.md&#34;&gt;A simple parallel wgetÔºöparallel_wget&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Important topics &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/about-error.md&#34;&gt;About error&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/about-timeout.md&#34;&gt;About timeout&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/about-config.md&#34;&gt;About global configuration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/about-dns.md&#34;&gt;About DNS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/about-exit.md&#34;&gt;About exit&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Computing tasks &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/tutorial-07-sort_task.md&#34;&gt;Using the build-in algorithm factoryÔºösort_task&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/tutorial-08-matrix_multiply.md&#34;&gt;User-defined computing taskÔºömatrix_multiply&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/about-go-task.md&#34;&gt;Use computing task in a simple way: go task&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Asynchronous File IO tasks &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/tutorial-09-http_file_server.md&#34;&gt;Http server with file IOÔºöhttp_file_server&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;User-defined protocol &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/tutorial-10-user_defined_protocol.md&#34;&gt;A simple user-defined protocol: client/server&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/about-tlv-message.md&#34;&gt;Use TLV message&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Other important tasks/components &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/about-timer.md&#34;&gt;About timer&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/about-counter.md&#34;&gt;About counter&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/about-resource-pool.md&#34;&gt;About resource pool&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/about-module.md&#34;&gt;About module&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/tutorial-11-graph_task.md&#34;&gt;About DAG&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Service governance &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/about-service-governance.md&#34;&gt;About service governance&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/about-upstream.md&#34;&gt;More documents about upstream&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Connection context &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/about-connection-context.md&#34;&gt;About connection context&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Built-in clients &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/tutorial-12-mysql_cli.md&#34;&gt;Asynchronous MySQL clientÔºömysql_cli&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sogou/workflow/master/docs/en/tutorial-13-kafka_cli.md&#34;&gt;Asynchronous Kafka client: kafka_cli&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Programming paradigm&lt;/h4&gt; &#xA;&lt;p&gt;We believe that a typical back-end program=protocol+algorithm+workflow and should be developed completely independently.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Protocol &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In most cases, users use built-in common network protocols, such as HTTP, Redis or various rpc.&lt;/li&gt; &#xA;   &lt;li&gt;Users can also easily customize user-defined network protocol. In the customization, they only need to provide serialization and deserialization functions to define their own client/server.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Algorithm &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In our design, the algorithm is a concept symmetrical to the protocol. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;If protocol call is rpc, then algorithm call is an apc (Async Procedure Call).&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;We have provided some general algorithms, such as sort, merge, psort, reduce, which can be used directly.&lt;/li&gt; &#xA;   &lt;li&gt;Compared with a user-defined protocol, a user-defined algorithm is much more common. Any complicated computation with clear boundaries should be packaged into an algorithm.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Workflow &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Workflow is the actual business logic, which is to put the protocols and algorithms into the flow graph for use.&lt;/li&gt; &#xA;   &lt;li&gt;The typical workflow is a closed series-parallel graph. Complex business logic may be a non-closed DAG.&lt;/li&gt; &#xA;   &lt;li&gt;The workflow graph can be constructed directly or dynamically generated based on the results of each step. All tasks are executed asynchronously.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Basic task, task factory and complex task&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Our system contains six basic tasks: networking, file IO, CPU, GPU, timer, and counter.&lt;/li&gt; &#xA; &lt;li&gt;All tasks are generated by the task factory and automatically recycled after callback. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Server task is one kind of special networking task, generated by the framework which calls the task factory, and handed over to the user through the process function.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;In most cases, the task generated by the user through the task factory is a complex task, which is transparent to the user. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For example, an HTTP request may include many asynchronous processes (DNS, redirection), but for user, it is just a networking task.&lt;/li&gt; &#xA;   &lt;li&gt;File sorting seems to be an algorithm, but it actually includes many complex interaction processes between file IO and CPU computation.&lt;/li&gt; &#xA;   &lt;li&gt;If you think of business logic as building circuits with well-designed electronic components, then each electronic component may be a complex circuit.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Asynchrony and encapsulation based on &lt;code&gt;C++11 std::function&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Not based on user mode coroutines. Users need to know that they are writing asynchronous programs.&lt;/li&gt; &#xA; &lt;li&gt;All calls are executed asynchronously, and there is almost no operation that occupies a thread. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Although we also provide some facilities with semi-synchronous interfaces, they are not core features.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;We try to avoid user&#39;s derivations, and encapsulate user behavior with &lt;code&gt;std::function&lt;/code&gt; instead, including: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The callback of any task.&lt;/li&gt; &#xA;   &lt;li&gt;Any server&#39;s process. This conforms to the &lt;code&gt;FaaS&lt;/code&gt; (Function as a Service) idea.&lt;/li&gt; &#xA;   &lt;li&gt;The realization of an algorithm is simply a &lt;code&gt;std::function&lt;/code&gt;. But the algorithm can also be implemented by derivation.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Memory reclamation mechanism&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Every task will be automatically reclaimed after the callback. If a task is created but a user does not want to run it, the user needs to release it through the dismiss method.&lt;/li&gt; &#xA; &lt;li&gt;Any data in the task, such as the response of the network request, will also be recycled with the task. At this time, the user can use &lt;code&gt;std::move()&lt;/code&gt; to move the required data.&lt;/li&gt; &#xA; &lt;li&gt;SeriesWork and ParallelWork are two kinds of framework objects, which are also recycled after their callback. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;When a series is a branch of a parallel, it will be recycled after the callback of the parallel that it belongs to.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;This project doesn‚Äôt use &lt;code&gt;std::shared_ptr&lt;/code&gt; to manage memory.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Any other questions?&lt;/h4&gt; &#xA;&lt;p&gt;You may check the &lt;a href=&#34;https://github.com/sogou/workflow/issues/406&#34;&gt;FAQ&lt;/a&gt; and &lt;a href=&#34;https://github.com/sogou/workflow/issues&#34;&gt;issues&lt;/a&gt; list first to see if you can find the answer.&lt;/p&gt; &#xA;&lt;p&gt;You are very welcome to send the problems you encounter in use to &lt;a href=&#34;https://github.com/sogou/workflow/issues&#34;&gt;issues&lt;/a&gt;, and we will answer them as soon as possible. At the same time, more issues will also help new users.&lt;/p&gt;</summary>
  </entry>
</feed>