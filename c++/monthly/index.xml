<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-01T02:09:35Z</updated>
  <subtitle>Monthly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>abseil/abseil-cpp</title>
    <updated>2023-07-01T02:09:35Z</updated>
    <id>tag:github.com,2023-07-01:/abseil/abseil-cpp</id>
    <link href="https://github.com/abseil/abseil-cpp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Abseil Common Libraries (C++)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Abseil - C++ Common Libraries&lt;/h1&gt; &#xA;&lt;p&gt;The repository contains the Abseil C++ library code. Abseil is an open-source collection of C++ code (compliant to C++14) designed to augment the C++ standard library.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/#about&#34;&gt;About Abseil&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/#quickstart&#34;&gt;Quickstart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/#build&#34;&gt;Building Abseil&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/#support&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/#codemap&#34;&gt;Codemap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/#releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/#links&#34;&gt;Links&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;about&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About Abseil&lt;/h2&gt; &#xA;&lt;p&gt;Abseil is an open-source collection of C++ library code designed to augment the C++ standard library. The Abseil library code is collected from Google&#39;s own C++ code base, has been extensively tested and used in production, and is the same code we depend on in our daily coding lives.&lt;/p&gt; &#xA;&lt;p&gt;In some cases, Abseil provides pieces missing from the C++ standard; in others, Abseil provides alternatives to the standard for special needs we&#39;ve found through usage in the Google code base. We denote those cases clearly within the library code we provide you.&lt;/p&gt; &#xA;&lt;p&gt;Abseil is not meant to be a competitor to the standard library; we&#39;ve just found that many of these utilities serve a purpose within our code base, and we now want to provide those resources to the C++ community as a whole.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;quickstart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;If you want to just get started, make sure you at least run through the &lt;a href=&#34;https://abseil.io/docs/cpp/quickstart&#34;&gt;Abseil Quickstart&lt;/a&gt;. The Quickstart contains information about setting up your development environment, downloading the Abseil code, running tests, and getting a simple binary working.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building Abseil&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bazel.build&#34;&gt;Bazel&lt;/a&gt; and &lt;a href=&#34;https://cmake.org/&#34;&gt;CMake&lt;/a&gt; are the official build systems for Abseil. See the &lt;a href=&#34;https://abseil.io/docs/cpp/quickstart&#34;&gt;quickstart&lt;/a&gt; for more information on building Abseil using the Bazel build system. If you require CMake support, please check the &lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/CMake/README.md&#34;&gt;CMake build instructions&lt;/a&gt; and &lt;a href=&#34;https://abseil.io/docs/cpp/quickstart-cmake&#34;&gt;CMake Quickstart&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;support&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Abseil follows Google&#39;s &lt;a href=&#34;https://opensource.google/documentation/policies/cplusplus-support&#34;&gt;Foundational C++ Support Policy&lt;/a&gt;. See &lt;a href=&#34;https://github.com/google/oss-policies-info/raw/main/foundational-cxx-support-matrix.md&#34;&gt;this table&lt;/a&gt; for a list of currently supported versions compilers, platforms, and build tools.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;codemap&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Codemap&lt;/h2&gt; &#xA;&lt;p&gt;Abseil contains the following C++ library components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/base/&#34;&gt;&lt;code&gt;base&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;base&lt;/code&gt; library contains initialization code and other code which all other Abseil code depends on. Code within &lt;code&gt;base&lt;/code&gt; may not depend on any other code (other than the C++ standard library).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/algorithm/&#34;&gt;&lt;code&gt;algorithm&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;algorithm&lt;/code&gt; library contains additions to the C++ &lt;code&gt;&amp;lt;algorithm&amp;gt;&lt;/code&gt; library and container-based versions of such algorithms.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/cleanup/&#34;&gt;&lt;code&gt;cleanup&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;cleanup&lt;/code&gt; library contains the control-flow-construct-like type &lt;code&gt;absl::Cleanup&lt;/code&gt; which is used for executing a callback on scope exit.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/container/&#34;&gt;&lt;code&gt;container&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;container&lt;/code&gt; library contains additional STL-style containers, including Abseil&#39;s unordered &#34;Swiss table&#34; containers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/crc/&#34;&gt;&lt;code&gt;crc&lt;/code&gt;&lt;/a&gt; The &lt;code&gt;crc&lt;/code&gt; library contains code for computing error-detecting cyclic redundancy checks on data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/debugging/&#34;&gt;&lt;code&gt;debugging&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;debugging&lt;/code&gt; library contains code useful for enabling leak checks, and stacktrace and symbolization utilities.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/flags/&#34;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;flags&lt;/code&gt; library contains code for handling command line flags for libraries and binaries built with Abseil.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/hash/&#34;&gt;&lt;code&gt;hash&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;hash&lt;/code&gt; library contains the hashing framework and default hash functor implementations for hashable types in Abseil.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/log/&#34;&gt;&lt;code&gt;log&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;log&lt;/code&gt; library contains &lt;code&gt;LOG&lt;/code&gt; and &lt;code&gt;CHECK&lt;/code&gt; macros and facilities for writing logged messages out to disk, &lt;code&gt;stderr&lt;/code&gt;, or user-extensible destinations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/memory/&#34;&gt;&lt;code&gt;memory&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;memory&lt;/code&gt; library contains memory management facilities that augment C++&#39;s &lt;code&gt;&amp;lt;memory&amp;gt;&lt;/code&gt; library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/meta/&#34;&gt;&lt;code&gt;meta&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;meta&lt;/code&gt; library contains compatible versions of type checks available within C++14 and C++17 versions of the C++ &lt;code&gt;&amp;lt;type_traits&amp;gt;&lt;/code&gt; library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/numeric/&#34;&gt;&lt;code&gt;numeric&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;numeric&lt;/code&gt; library contains 128-bit integer types as well as implementations of C++20&#39;s bitwise math functions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/profiling/&#34;&gt;&lt;code&gt;profiling&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;profiling&lt;/code&gt; library contains utility code for profiling C++ entities. It is currently a private dependency of other Abseil libraries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/random/&#34;&gt;&lt;code&gt;random&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;random&lt;/code&gt; library contains functions for generating psuedorandom values.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/status/&#34;&gt;&lt;code&gt;status&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;status&lt;/code&gt; library contains abstractions for error handling, specifically &lt;code&gt;absl::Status&lt;/code&gt; and &lt;code&gt;absl::StatusOr&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/strings/&#34;&gt;&lt;code&gt;strings&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;strings&lt;/code&gt; library contains a variety of strings routines and utilities, including a C++14-compatible version of the C++17 &lt;code&gt;std::string_view&lt;/code&gt; type.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/synchronization/&#34;&gt;&lt;code&gt;synchronization&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;synchronization&lt;/code&gt; library contains concurrency primitives (Abseil&#39;s &lt;code&gt;absl::Mutex&lt;/code&gt; class, an alternative to &lt;code&gt;std::mutex&lt;/code&gt;) and a variety of synchronization abstractions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/time/&#34;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;time&lt;/code&gt; library contains abstractions for computing with absolute points in time, durations of time, and formatting and parsing time within time zones.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/types/&#34;&gt;&lt;code&gt;types&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;types&lt;/code&gt; library contains non-container utility types, like a C++14-compatible version of the C++17 &lt;code&gt;std::optional&lt;/code&gt; type.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/utility/&#34;&gt;&lt;code&gt;utility&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;utility&lt;/code&gt; library contains utility and helper code.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;releases&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;Abseil recommends users &#34;live-at-head&#34; (update to the latest commit from the master branch as often as possible). However, we realize this philosophy doesn&#39;t work for every project, so we also provide &lt;a href=&#34;https://github.com/abseil/abseil-cpp/releases&#34;&gt;Long Term Support Releases&lt;/a&gt; to which we backport fixes for severe bugs. See our &lt;a href=&#34;https://abseil.io/about/releases&#34;&gt;release management&lt;/a&gt; document for more details.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The Abseil C++ library is licensed under the terms of the Apache license. See &lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;links&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;p&gt;For more information about Abseil:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Consult our &lt;a href=&#34;https://abseil.io/about/intro&#34;&gt;Abseil Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Read &lt;a href=&#34;https://abseil.io/about/philosophy&#34;&gt;Why Adopt Abseil&lt;/a&gt; to understand our design philosophy.&lt;/li&gt; &#xA; &lt;li&gt;Peruse our &lt;a href=&#34;https://abseil.io/about/compatibility&#34;&gt;Abseil Compatibility Guarantees&lt;/a&gt; to understand both what we promise to you, and what we expect of you in return.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>ossrs/srs</title>
    <updated>2023-07-01T02:09:35Z</updated>
    <id>tag:github.com,2023-07-01:/ossrs/srs</id>
    <link href="https://github.com/ossrs/srs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SRS is a simple, high-efficiency, real-time video server supporting RTMP, WebRTC, HLS, HTTP-FLV, SRT, MPEG-DASH, and GB28181.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SRS(Simple Realtime Server)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://ossrs.net/gif/v1/sls.gif?site=github.com&amp;amp;path=/srs/develop&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://github.com/ossrs/srs/actions?query=workflow%3ACodeQL+branch%3Adevelop&#34;&gt;&lt;img src=&#34;https://github.com/ossrs/srs/actions/workflows/codeql-analysis.yml/badge.svg?branch=develop&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ossrs/srs/actions/workflows/release.yml?query=workflow%3ARelease&#34;&gt;&lt;img src=&#34;https://github.com/ossrs/srs/actions/workflows/release.yml/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ossrs/srs/actions?query=workflow%3ATest+branch%3Adevelop&#34;&gt;&lt;img src=&#34;https://github.com/ossrs/srs/actions/workflows/test.yml/badge.svg?branch=develop&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/ossrs/srs/tree/develop&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/ossrs/srs/branch/develop/graph/badge.svg?token=Zx2LhdtA39&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ossrs.net/lts/zh-cn/contact#discussion&#34;&gt;&lt;img src=&#34;https://ossrs.net/wiki/images/wechat-badge4.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/srs_server&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/srs_server?style=social&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/@srs_server&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/SRS-YouTube-red&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/yZ4BnPmHAd&#34;&gt;&lt;img src=&#34;https://badgen.net/discord/members/yZ4BnPmHAd&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2Fossrs%2Fsrs?ref=badge_small&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fossrs%2Fsrs.svg?type=small&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ossrs.net/lts/zh-cn/faq&#34;&gt;&lt;img src=&#34;https://ossrs.net/wiki/images/srs-faq.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://stackoverflow.com/questions/tagged/simple-realtime-server&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/srs/stackoverflow/orange?icon=terminal&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/srs-server/contribute&#34;&gt;&lt;img src=&#34;https://opencollective.com/srs-server/tiers/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/ossrs/srs/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/ossrs/srs&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cloud.digitalocean.com/droplets/new?appId=133468816&amp;amp;size=s-1vcpu-512mb-10gb&amp;amp;region=sgp1&amp;amp;image=ossrs-srs&amp;amp;type=applications&#34;&gt;&lt;img src=&#34;https://ossrs.net/wiki/images/do-btn-srs-125x20.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://api.securityscorecards.dev/projects/github.com/ossrs/srs&#34;&gt;&lt;img src=&#34;https://api.securityscorecards.dev/projects/github.com/ossrs/srs/badge&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/5619&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/5619/badge&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;SRS/6.0 (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/product#release60&#34;&gt;Hang&lt;/a&gt;) is a simple, high-efficiency, and real-time video server, supporting RTMP/WebRTC/HLS/HTTP-FLV/SRT/MPEG-DASH/GB28181, Linux/Windows/macOS, X86_64/ARMv7/AARCH64/M1/RISCV/LOONGARCH/MIPS, and essential &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/doc/Features.md#features&#34;&gt;features&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ossrs.net/wiki/images/SRS-SingleNode-4.0-hd.png&#34;&gt;&lt;img src=&#34;https://ossrs.net/wiki/images/SRS-SingleNode-4.0-sd.png?v=114&#34; alt=&#34;SRS Overview&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: For more details on the single-node architecture for SRS, please visit the following &lt;a href=&#34;https://www.figma.com/file/333POxVznQ8Wz1Rxlppn36/SRS-4.0-Server-Arch&#34;&gt;link&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;SRS is licenced under &lt;a href=&#34;https://github.com/ossrs/srs/raw/develop/LICENSE&#34;&gt;MIT&lt;/a&gt; or &lt;a href=&#34;https://spdx.org/licenses/MulanPSL-2.0.html&#34;&gt;MulanPSL-2.0&lt;/a&gt;. Please note that while &lt;a href=&#34;https://www.apache.org/legal/resolved.html#category-a&#34;&gt;MulanPSL-2.0 is compatible with Apache-2.0&lt;/a&gt;, some third-party libraries are distributed under their &lt;a href=&#34;https://ossrs.io/lts/en-us/license&#34;&gt;licenses&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;product&#34;&gt;&lt;/a&gt; &lt;a name=&#34;usage-docker&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/getting-started&#34;&gt;Getting Started&lt;/a&gt; or &lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/getting-started&#34;&gt;中文文档：起步&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;p&gt;To compile SRS from source:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone -b develop https://gitee.com/ossrs/srs.git &amp;amp;&amp;amp;&#xA;cd srs/trunk &amp;amp;&amp;amp; ./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; ./objs/srs -c conf/srs.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:8080/&#34;&gt;http://localhost:8080/&lt;/a&gt; to verify, and then stream using the following &lt;a href=&#34;https://ffmpeg.org/download.html&#34;&gt;FFmpeg&lt;/a&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ffmpeg -re -i ./doc/source.flv -c copy -f flv -y rtmp://localhost/live/livestream&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, stream by &lt;a href=&#34;https://obsproject.com/download&#34;&gt;OBS&lt;/a&gt; using the following configuration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Service: &lt;code&gt;Custom&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Server: &lt;code&gt;rtmp://localhost/live&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stream Key: &lt;code&gt;livestream&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Play the following streams using media players:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To play an RTMP stream with URL &lt;code&gt;rtmp://localhost/live/livestream&lt;/code&gt; on &lt;a href=&#34;https://www.videolan.org/&#34;&gt;VLC player&lt;/a&gt;, open the player, go to Media &amp;gt; Open Network Stream, enter the URL and click Play.&lt;/li&gt; &#xA; &lt;li&gt;You can play HTTP-FLV stream URL &lt;a href=&#34;http://localhost:8080/players/srs_player.html?autostart=true&amp;amp;stream=livestream.flv&#34;&gt;http://localhost:8080/live/livestream.flv&lt;/a&gt; on a webpage using the srs-player, an HTML5-based player.&lt;/li&gt; &#xA; &lt;li&gt;Use srs-player for playing HLS stream with URL &lt;a href=&#34;http://localhost:8080/players/srs_player.html?autostart=true&amp;amp;stream=livestream.m3u8&#34;&gt;http://localhost:8080/live/livestream.m3u8&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please note that to convert RTMP to WebRTC, you should use the file &lt;a href=&#34;https://github.com/ossrs/srs/issues/2728#issuecomment-964686152&#34;&gt;rtmp2rtc.conf&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use the srs-player to play the WebRTC stream with URL &lt;a href=&#34;http://localhost:8080/players/whep.html?autostart=true&#34;&gt;http://localhost:1985/rtc/v1/whip-play/?app=live&amp;amp;stream=livestream&lt;/a&gt; via WHEP.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: In addition to FFmpeg or OBS, it is possible to &lt;a href=&#34;http://localhost:8080/players/whip.html&#34;&gt;publish by H5&lt;/a&gt; via WHIP as well. To enable WebRTC to publish and convert it to RTMP, please refer to the wiki(&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/webrtc#rtc-to-rtmp&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/webrtc#rtc-to-rtmp&#34;&gt;EN&lt;/a&gt;) documentation. It is essential to ensure the candidate(&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/webrtc#config-candidate&#34;&gt;CN&lt;/a&gt; or &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/webrtc#config-candidate&#34;&gt;EN&lt;/a&gt;) is set correctly for WebRTC to avoid potential issues, as it can cause significant problems.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: It is highly recommended to run SRS directly with docker(&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/getting-started&#34;&gt;CN&lt;/a&gt; / &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/getting-started&#34;&gt;EN&lt;/a&gt;), CVM(&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/getting-started-cloud&#34;&gt;CN&lt;/a&gt; / &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/getting-started-cloud&#34;&gt;EN&lt;/a&gt;), or K8s(&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/getting-started-k8s&#34;&gt;CN&lt;/a&gt; / &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/getting-started-k8s&#34;&gt;EN&lt;/a&gt;). However, compiling SRS from source code is also possible and easy. For detailed instructions, please refer to the &#34;Getting Started&#34;(&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/getting-started&#34;&gt;CN&lt;/a&gt; / &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/getting-started&#34;&gt;EN&lt;/a&gt;) guide.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: If you require HTTPS for WebRTC and modern browsers, please refer to the HTTPS API(&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/http-api#https-api&#34;&gt;CN&lt;/a&gt; / &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/http-api#https-api&#34;&gt;EN&lt;/a&gt;), HTTPS Callback(&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/http-callback#https-callback&#34;&gt;CN&lt;/a&gt; / &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/http-callback#https-callback&#34;&gt;EN&lt;/a&gt;), and HTTPS Live Streaming(&lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/delivery-http-flv#https-flv-live-stream&#34;&gt;CN&lt;/a&gt; / &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/delivery-http-flv#https-flv-live-stream&#34;&gt;EN&lt;/a&gt;) documentation. Additionally, SRS works perfectly with an HTTPS proxy like Nginx.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a name=&#34;srs-40-wiki&#34;&gt;&lt;/a&gt; &lt;a name=&#34;wiki&#34;&gt;&lt;/a&gt; Please refer to the following wikis for more information:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;What are the steps to deliver RTMP streaming? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-rtmp&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-rtmp&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;What is the process for delivering WebRTC streaming? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/webrtc&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/webrtc&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;What are the steps to convert RTMP to HTTP-FLV streaming? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-http-flv&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-http-flv&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;How can RTMP be converted to HLS streaming? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-hls&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-hls&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;What is the best approach for delivering low-latency streaming? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-realtime&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-realtime&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;How can an RTMP Edge-Cluster be constructed? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-rtmp-cluster&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-rtmp-cluster&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;What is the process for building an RTMP Origin-Cluster? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-origin-cluster&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-origin-cluster&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;How can an HLS Edge-Cluster be set up?(&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-hls-cluster&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-hls-cluster&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here are some other important wikis:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Usage: What is the method for delivering DASH (Experimental)? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-dash&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-dash&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Usage: How can an RTMP stream be transcoded using FFMPEG? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-ffmpeg&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-ffmpeg&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Usage: What is the process for setting up an HTTP FLV Live Streaming Cluster? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-http-flvCluster&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-http-flvCluster&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Usage: How can HLS be delivered using an NGINX Cluster? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-hls-cluster&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-hls-cluster&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Usage: What steps are to ingest a file, stream, or device to RTMP? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-ingest&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-ingest&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Usage: How can a stream be forwarded to other servers? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-forward&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-forward&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Usage: What are the strategies for improving edge performance on multiple CPUs? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/reuse-port&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/reuse-port&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Usage: How can bugs be reported or contact be made with us? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/contact&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/contact&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;AUTHORS&lt;/h2&gt; &#xA;&lt;p&gt;We highly appreciate all our contributors for their significant contributions that have made a remarkable difference. Thank you! 🙏&lt;/p&gt; &#xA;&lt;p&gt;If you wish to support this project financially, you can donate &lt;a href=&#34;https://opencollective.com/srs-server&#34;&gt;through Open Collective&lt;/a&gt;. We appreciate your contribution!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/srs-server/contribute/backer-34941/checkout?interval=month&amp;amp;amount=5&#34;&gt;&lt;img src=&#34;https://opencollective.com/srs-server/backers.svg?width=800&amp;amp;button=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/AUTHORS.md#toc&#34;&gt;TOC(Technical Oversight Committee)&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/AUTHORS.md#contributors&#34;&gt;contributors&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/winlinvip&#34;&gt;Winlin&lt;/a&gt;: Founder of the project, focusing on ST and Issues/PR. Responsible for architecture and maintenance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wenjiegit&#34;&gt;ZhaoWenjie&lt;/a&gt;: One of the earliest contributors, focusing on HDS and Windows. Has expertise in client technology.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/runner365&#34;&gt;ShiWei&lt;/a&gt;: Specializes in SRT and H.265, maintaining SRT and FLV patches for FFmpeg. An expert in codecs and FFmpeg.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xiaozhihong&#34;&gt;XiaoZhihong&lt;/a&gt;: Concentrates on WebRTC/QUIC and SRT, with expertise in network QoS. Contributed to ARM on ST and was the original contributor for WebRTC.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Bepartofyou&#34;&gt;WuPengqiang&lt;/a&gt;: Focused on H.265, initially contributed to the FFmpeg module in SRS for transcoding AAC with OPUS for WebRTC.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xialixin&#34;&gt;XiaLixin&lt;/a&gt;: Specializes in GB28181, with expertise in live streaming and WebRTC.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lipeng19811218&#34;&gt;LiPeng&lt;/a&gt;: Concentrates on WebRTC and contributes to memory management and smart pointers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chen-guanghua&#34;&gt;ChenGuanghua&lt;/a&gt;: Focused on WebRTC/QoS and introduced the Asan toolchain to SRS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/duiniuluantanqin&#34;&gt;ChenHaibo&lt;/a&gt;: Specializes in GB28181 and HTTP API, contributing to patches for FFmpeg with WHIP.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chundonglinlin&#34;&gt;ZhangJunqin&lt;/a&gt;: Focused on H.265, Prometheus Exporter, and API module.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A big &lt;code&gt;THANK YOU&lt;/code&gt; also goes to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/AUTHORS.md#contributors&#34;&gt;contributors&lt;/a&gt; of SRS.&lt;/li&gt; &#xA; &lt;li&gt;All friends of SRS for &lt;a href=&#34;https://ossrs.net/lts/zh-cn/product&#34;&gt;big supports&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://sourceforge.net/users/genes&#34;&gt;Genes&lt;/a&gt;, &lt;a href=&#34;http://sourceforge.net/users/mabbott&#34;&gt;Mabbott&lt;/a&gt; and &lt;a href=&#34;https://github.com/michaeltalyansky&#34;&gt;Michael Talyanksy&lt;/a&gt; for creating and introducing &lt;a href=&#34;https://github.com/ossrs/state-threads/tree/srs&#34;&gt;st&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We extend our heartfelt gratitude to the community for their contributions in identifying bugs and enhancing the project. To stay connected with us and keep contributing to our community, please follow the &lt;a href=&#34;https://github.com/ossrs/srs/contribute&#34;&gt;guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2Fossrs%2Fsrs?ref=badge_small&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fossrs%2Fsrs.svg?type=small&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;SRS is licenced under &lt;a href=&#34;https://github.com/ossrs/srs/raw/develop/LICENSE&#34;&gt;MIT&lt;/a&gt; or &lt;a href=&#34;https://spdx.org/licenses/MulanPSL-2.0.html&#34;&gt;MulanPSL-2.0&lt;/a&gt;. Please note that while &lt;a href=&#34;https://www.apache.org/legal/resolved.html#category-a&#34;&gt;MulanPSL-2.0 is compatible with Apache-2.0&lt;/a&gt;, some third-party libraries are distributed under their &lt;a href=&#34;https://ossrs.io/lts/en-us/license&#34;&gt;licenses&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2Fossrs%2Fsrs?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fossrs%2Fsrs.svg?type=large&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2023-05-14, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v5.0-b0&#34;&gt;Release v5.0-b0&lt;/a&gt;, v5.0-b0, 5.0 beta0, v5.0.155, 162600 lines.&lt;/li&gt; &#xA; &lt;li&gt;2023-03-23, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v5.0-a5&#34;&gt;Release v5.0-a5&lt;/a&gt;, v5.0-a5, 5.0 alpha5, v5.0.148, 162066 lines.&lt;/li&gt; &#xA; &lt;li&gt;2023-02-12, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v5.0-a4&#34;&gt;Release v5.0-a4&lt;/a&gt;, v5.0-a4, 5.0 alpha4, v5.0.141, 161897 lines.&lt;/li&gt; &#xA; &lt;li&gt;2023-01-02, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v5.0-a3&#34;&gt;Release v5.0-a3&lt;/a&gt;, v5.0-a3, 5.0 alpha3, v5.0.128, 161327 lines.&lt;/li&gt; &#xA; &lt;li&gt;2022-12-18, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v5.0-a2&#34;&gt;Release v5.0-a2&lt;/a&gt;, v5.0-a2, 5.0 alpha2, v5.0.112, 161233 lines.&lt;/li&gt; &#xA; &lt;li&gt;2022-12-01, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v5.0-a1&#34;&gt;Release v5.0-a1&lt;/a&gt;, v5.0-a1, 5.0 alpha1, v5.0.100, 160817 lines.&lt;/li&gt; &#xA; &lt;li&gt;2022-11-25, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v5.0-a0&#34;&gt;Release v5.0-a0&lt;/a&gt;, v5.0-a0, 5.0 alpha0, v5.0.98, 159813 lines.&lt;/li&gt; &#xA; &lt;li&gt;2022-11-22, Release &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v4.0-r4&#34;&gt;v4.0-r4&lt;/a&gt;, v4.0-r4, 4.0 release4, v4.0.268, 145482 lines.&lt;/li&gt; &#xA; &lt;li&gt;2022-09-16, Release &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v4.0-r3&#34;&gt;v4.0-r3&lt;/a&gt;, v4.0-r3, 4.0 release3, v4.0.265, 145328 lines.&lt;/li&gt; &#xA; &lt;li&gt;2022-08-24, Release &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v4.0-r2&#34;&gt;v4.0-r2&lt;/a&gt;, v4.0-r2, 4.0 release2, v4.0.257, 144890 lines.&lt;/li&gt; &#xA; &lt;li&gt;2022-06-29, Release &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v4.0-r1&#34;&gt;v4.0-r1&lt;/a&gt;, v4.0-r1, 4.0 release1, v4.0.253, 144680 lines.&lt;/li&gt; &#xA; &lt;li&gt;2022-06-11, Release &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v4.0-r0&#34;&gt;v4.0-r0&lt;/a&gt;, v4.0-r0, 4.0 release0, v4.0.252, 144680 lines.&lt;/li&gt; &#xA; &lt;li&gt;2020-06-27, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v3.0-r0&#34;&gt;Release v3.0-r0&lt;/a&gt;, 3.0 release0, 3.0.141, 122674 lines.&lt;/li&gt; &#xA; &lt;li&gt;2020-02-02, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v3.0-b0&#34;&gt;Release v3.0-b0&lt;/a&gt;, 3.0 beta0, 3.0.112, 121709 lines.&lt;/li&gt; &#xA; &lt;li&gt;2019-10-04, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v3.0-a0&#34;&gt;Release v3.0-a0&lt;/a&gt;, 3.0 alpha0, 3.0.56, 107946 lines.&lt;/li&gt; &#xA; &lt;li&gt;2017-03-03, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v2.0-r0&#34;&gt;Release v2.0-r0&lt;/a&gt;, 2.0 release0, 2.0.234, 86373 lines.&lt;/li&gt; &#xA; &lt;li&gt;2016-08-06, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v2.0-b0&#34;&gt;Release v2.0-b0&lt;/a&gt;, 2.0 beta0, 2.0.210, 89704 lines.&lt;/li&gt; &#xA; &lt;li&gt;2015-08-23, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v2.0-a0&#34;&gt;Release v2.0-a0&lt;/a&gt;, 2.0 alpha0, 2.0.185, 89022 lines.&lt;/li&gt; &#xA; &lt;li&gt;2014-12-05, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v1.0-r0&#34;&gt;Release v1.0-r0&lt;/a&gt;, all bug fixed, 1.0.10, 59391 lines.&lt;/li&gt; &#xA; &lt;li&gt;2014-10-09, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v0.9.8&#34;&gt;Release v0.9.8&lt;/a&gt;, all bug fixed, 1.0.0, 59316 lines.&lt;/li&gt; &#xA; &lt;li&gt;2014-04-07, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v0.9.1&#34;&gt;Release v0.9.1&lt;/a&gt;, live streaming. 30000 lines.&lt;/li&gt; &#xA; &lt;li&gt;2013-10-23, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v0.1.0&#34;&gt;Release v0.1.0&lt;/a&gt;, rtmp. 8287 lines.&lt;/li&gt; &#xA; &lt;li&gt;2013-10-17, Created.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/doc/Features.md#features&#34;&gt;FEATURES&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;history&#34;&gt;&lt;/a&gt; &lt;a name=&#34;change-logs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/doc/CHANGELOG.md#changelog&#34;&gt;CHANGELOG&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/doc/PERFORMANCE.md#performance&#34;&gt;PERFORMANCE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/doc/Architecture.md#architecture&#34;&gt;ARCHITECTURE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Ports&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/doc/Resources.md#ports&#34;&gt;PORTS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;APIs&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/doc/Resources.md#apis&#34;&gt;APIS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Mirrors&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/doc/Resources.md#mirrors&#34;&gt;MIRRORS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Dockers&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/doc/Dockers.md&#34;&gt;DOCKERS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Beijing, 2013.10&lt;br&gt; Winlin&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>protocolbuffers/protobuf</title>
    <updated>2023-07-01T02:09:35Z</updated>
    <id>tag:github.com,2023-07-01:/protocolbuffers/protobuf</id>
    <link href="https://github.com/protocolbuffers/protobuf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Protocol Buffers - Google&#39;s data interchange format&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Protocol Buffers - Google&#39;s data interchange format&lt;/h1&gt; &#xA;&lt;p&gt;Copyright 2008 Google Inc.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Protocol Buffers (a.k.a., protobuf) are Google&#39;s language-neutral, platform-neutral, extensible mechanism for serializing structured data. You can learn more about it in &lt;a href=&#34;https://protobuf.dev&#34;&gt;protobuf&#39;s documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This README file contains protobuf installation instructions. To install protobuf, you need to install the protocol compiler (used to compile .proto files) and the protobuf runtime for your chosen programming language.&lt;/p&gt; &#xA;&lt;h2&gt;Protocol Compiler Installation&lt;/h2&gt; &#xA;&lt;p&gt;The protocol compiler is written in C++. If you are using C++, please follow the &lt;a href=&#34;https://raw.githubusercontent.com/protocolbuffers/protobuf/main/src/README.md&#34;&gt;C++ Installation Instructions&lt;/a&gt; to install protoc along with the C++ runtime.&lt;/p&gt; &#xA;&lt;p&gt;For non-C++ users, the simplest way to install the protocol compiler is to download a pre-built binary from our &lt;a href=&#34;https://github.com/protocolbuffers/protobuf/releases&#34;&gt;GitHub release page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In the downloads section of each release, you can find pre-built binaries in zip packages: &lt;code&gt;protoc-$VERSION-$PLATFORM.zip&lt;/code&gt;. It contains the protoc binary as well as a set of standard &lt;code&gt;.proto&lt;/code&gt; files distributed along with protobuf.&lt;/p&gt; &#xA;&lt;p&gt;If you are looking for an old version that is not available in the release page, check out the &lt;a href=&#34;https://repo1.maven.org/maven2/com/google/protobuf/protoc/&#34;&gt;Maven repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;These pre-built binaries are only provided for released versions. If you want to use the github main version at HEAD, or you need to modify protobuf code, or you are using C++, it&#39;s recommended to build your own protoc binary from source.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to build protoc binary from source, see the &lt;a href=&#34;https://raw.githubusercontent.com/protocolbuffers/protobuf/main/src/README.md&#34;&gt;C++ Installation Instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Protobuf Runtime Installation&lt;/h2&gt; &#xA;&lt;p&gt;Protobuf supports several different programming languages. For each programming language, you can find instructions in the corresponding source directory about how to install protobuf runtime for that specific language:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;   &lt;th&gt;Source&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C++ (include C++ runtime and protoc)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/protocolbuffers/protobuf/main/src&#34;&gt;src&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Java&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/protocolbuffers/protobuf/main/java&#34;&gt;java&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/protocolbuffers/protobuf/main/python&#34;&gt;python&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Objective-C&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/protocolbuffers/protobuf/main/objectivec&#34;&gt;objectivec&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C#&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/protocolbuffers/protobuf/main/csharp&#34;&gt;csharp&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ruby&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/protocolbuffers/protobuf/main/ruby&#34;&gt;ruby&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Go&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/protocolbuffers/protobuf-go&#34;&gt;protocolbuffers/protobuf-go&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PHP&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/protocolbuffers/protobuf/main/php&#34;&gt;php&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dart&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dart-lang/protobuf&#34;&gt;dart-lang/protobuf&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JavaScript&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/protocolbuffers/protobuf-javascript&#34;&gt;protocolbuffers/protobuf-javascript&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;The best way to learn how to use protobuf is to follow the &lt;a href=&#34;https://protobuf.dev/getting-started&#34;&gt;tutorials in our developer guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to learn from code examples, take a look at the examples in the &lt;a href=&#34;https://raw.githubusercontent.com/protocolbuffers/protobuf/main/examples&#34;&gt;examples&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The complete documentation is available at the &lt;a href=&#34;https://protobuf.dev&#34;&gt;Protocol Buffers doc site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support Policy&lt;/h2&gt; &#xA;&lt;p&gt;Read about our &lt;a href=&#34;https://protobuf.dev/version-support/&#34;&gt;version support policy&lt;/a&gt; to stay current on support timeframes for the language libraries.&lt;/p&gt; &#xA;&lt;h2&gt;Developer Community&lt;/h2&gt; &#xA;&lt;p&gt;To be alerted to upcoming changes in Protocol Buffers and connect with protobuf developers and users, &lt;a href=&#34;https://groups.google.com/g/protobuf&#34;&gt;join the Google Group&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>