<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-01T02:06:10Z</updated>
  <subtitle>Monthly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Alexays/Waybar</title>
    <updated>2023-09-01T02:06:10Z</updated>
    <id>tag:github.com,2023-09-01:/Alexays/Waybar</id>
    <link href="https://github.com/Alexays/Waybar" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Highly customizable Wayland bar for Sway and Wlroots based compositors. ‚úåÔ∏è üéâ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Waybar &lt;a href=&#34;https://raw.githubusercontent.com/Alexays/Waybar/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;Licence&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://paypal.me/ARouillard&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-Paypal-2244dd.svg?sanitize=true&#34; alt=&#34;Paypal Donate&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alexays/waybar/master/preview-2.png&#34; alt=&#34;Waybar&#34;&gt;&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Highly customizable Wayland bar for Sway and Wlroots based compositors.&lt;br&gt; Available in Arch &lt;a href=&#34;https://www.archlinux.org/packages/extra/x86_64/waybar/&#34;&gt;extra&lt;/a&gt; or &lt;a href=&#34;https://aur.archlinux.org/packages/waybar-git/&#34;&gt;AUR&lt;/a&gt;, &lt;a href=&#34;https://packages.gentoo.org/packages/gui-apps/waybar&#34;&gt;Gentoo&lt;/a&gt;, &lt;a href=&#34;https://build.opensuse.org/package/show/X11:Wayland/waybar&#34;&gt;openSUSE&lt;/a&gt;, and &lt;a href=&#34;https://pkgs.alpinelinux.org/packages?name=waybar&#34;&gt;Alpine Linux&lt;/a&gt;.&lt;br&gt; &lt;em&gt;Waybar &lt;a href=&#34;https://github.com/Alexays/Waybar/wiki/Examples&#34;&gt;examples&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Current features&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sway (Workspaces, Binding mode, Focused window name)&lt;/li&gt; &#xA; &lt;li&gt;River (Mapping mode, Tags, Focused window name)&lt;/li&gt; &#xA; &lt;li&gt;Hyprland (Focused window name)&lt;/li&gt; &#xA; &lt;li&gt;DWL (Tags) &lt;a href=&#34;https://github.com/djpohly/dwl/wiki/ipc&#34;&gt;requires dwl ipc patch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tray &lt;a href=&#34;https://github.com/Alexays/Waybar/issues/21&#34;&gt;#21&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Local time&lt;/li&gt; &#xA; &lt;li&gt;Battery&lt;/li&gt; &#xA; &lt;li&gt;UPower&lt;/li&gt; &#xA; &lt;li&gt;Network&lt;/li&gt; &#xA; &lt;li&gt;Bluetooth&lt;/li&gt; &#xA; &lt;li&gt;Pulseaudio&lt;/li&gt; &#xA; &lt;li&gt;Wireplumber&lt;/li&gt; &#xA; &lt;li&gt;Disk&lt;/li&gt; &#xA; &lt;li&gt;Memory&lt;/li&gt; &#xA; &lt;li&gt;Cpu load average&lt;/li&gt; &#xA; &lt;li&gt;Temperature&lt;/li&gt; &#xA; &lt;li&gt;MPD&lt;/li&gt; &#xA; &lt;li&gt;Custom scripts&lt;/li&gt; &#xA; &lt;li&gt;Custom image&lt;/li&gt; &#xA; &lt;li&gt;Multiple output configuration&lt;/li&gt; &#xA; &lt;li&gt;And many more customizations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Configuration and Styling&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Alexays/Waybar/wiki&#34;&gt;See the wiki for more details&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Waybar is available from a number of Linux distributions:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/waybar/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/waybar.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;An Ubuntu PPA with more recent versions is available &lt;a href=&#34;https://launchpad.net/~nschloe/+archive/ubuntu/waybar&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Building from source&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone https://github.com/Alexays/Waybar&#xA;$ cd Waybar&#xA;$ meson build&#xA;$ ninja -C build&#xA;$ ./build/waybar&#xA;# If you want to install it&#xA;$ ninja -C build install&#xA;$ waybar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Dependencies&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gtkmm3&#xA;jsoncpp&#xA;libsigc++&#xA;fmt&#xA;wayland&#xA;chrono-date&#xA;spdlog&#xA;libgtk-3-dev [gtk-layer-shell]&#xA;gobject-introspection [gtk-layer-shell]&#xA;libgirepository1.0-dev [gtk-layer-shell]&#xA;libpulse [Pulseaudio module]&#xA;libnl [Network module]&#xA;libappindicator-gtk3 [Tray module]&#xA;libdbusmenu-gtk3 [Tray module]&#xA;libmpdclient [MPD module]&#xA;libsndio [sndio module]&#xA;libevdev [KeyboardState module]&#xA;xkbregistry&#xA;upower [UPower battery module]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Build dependencies&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cmake&#xA;meson&#xA;scdoc&#xA;wayland-protocols&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Ubuntu, you can install all the relevant dependencies using this command (tested with 19.10 and 20.04):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install \&#xA;  clang-tidy \&#xA;  gobject-introspection \&#xA;  libdbusmenu-gtk3-dev \&#xA;  libevdev-dev \&#xA;  libfmt-dev \&#xA;  libgirepository1.0-dev \&#xA;  libgtk-3-dev \&#xA;  libgtkmm-3.0-dev \&#xA;  libinput-dev \&#xA;  libjsoncpp-dev \&#xA;  libmpdclient-dev \&#xA;  libnl-3-dev \&#xA;  libnl-genl-3-dev \&#xA;  libpulse-dev \&#xA;  libsigc++-2.0-dev \&#xA;  libspdlog-dev \&#xA;  libwayland-dev \&#xA;  scdoc \&#xA;  upower \&#xA;  libxkbregistry-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Contributions welcome!&lt;br&gt; Have fun :)&lt;br&gt; The style guidelines are &lt;a href=&#34;https://google.github.io/styleguide/cppguide.html&#34;&gt;Google&#39;s&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Waybar is licensed under the MIT license. &lt;a href=&#34;https://github.com/Alexays/Waybar/raw/master/LICENSE&#34;&gt;See LICENSE for more information&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>manticoresoftware/manticoresearch</title>
    <updated>2023-09-01T02:06:10Z</updated>
    <id>tag:github.com,2023-09-01:/manticoresoftware/manticoresearch</id>
    <link href="https://github.com/manticoresoftware/manticoresearch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Easy to use open source fast database for search | Good alternative to Elasticsearch now | Drop-in replacement for E in the ELK soon&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://manticoresearch.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; &lt;img src=&#34;https://manticoresearch.com/logo.png&#34; width=&#34;50%&#34; alt=&#34;Manticore Search Logo&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; &lt;a href=&#34;https://manticoresearch.com&#34;&gt;Website&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://manticoresearch.com/install/&#34;&gt;Downloads&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://manual.manticoresearch.com&#34;&gt;Docs&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://manticoresearch.com/blog/&#34;&gt;Blog&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://play.manticoresearch.com&#34;&gt;Courses&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://forum.manticoresearch.com&#34;&gt;Forum&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://slack.manticoresearch.com&#34;&gt;Slack&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://t.me/manticoresearch_en&#34;&gt;Telegram (En)&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://t.me/manticore_chat&#34;&gt;Telegram (Ru)&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://twitter.com/manticoresearch&#34;&gt;Twitter&lt;/a&gt; &lt;a href=&#34;https://github.com/manticoresoftware/manticoresearch/discussions/categories/feedback&#34;&gt;User feedback&lt;/a&gt; &lt;/h3&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/manticoresoftware/manticoresearch/master/COPYING&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPL%20V2-green?style=plastic&#34; alt=&#34;License: GPLv2&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/manticoresearch&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/manticoresearch?color=green&amp;amp;logo=Twitter&amp;amp;style=plastic&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://slack.manticoresearch.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-manticoresearch-green.svg?logo=slack&amp;amp;style=plastic&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/manticoresoftware/docker&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/manticoresearch/manticore?color=green&amp;amp;style=plastic&#34; alt=&#34;Docker pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://eepurl.com/dkUTHv&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/newsletter-green?style=plastic&#34; alt=&#34;Newsletter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/manticoresoftware/manticoresearch/graphs/commit-activity&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/manticoresoftware/manticoresearch?color=green&amp;amp;style=plastic&#34; alt=&#34;Activity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/manticoresoftware/manticoresearch/issues?q=is%3Aissue+is%3Aclosed&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-closed/manticoresoftware/manticoresearch?color=green&amp;amp;style=plastic&#34; alt=&#34;GitHub closed issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;‚ùóRead recent &lt;a href=&#34;https://manticoresearch.com/blog/manticore-alternative-to-elasticsearch/&#34;&gt;blog post about Manticore vs Elasticsearch&lt;/a&gt;‚ùó&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Manticore Search is an easy to use open source fast database for search. Good alternative for Elasticsearch. What distinguishes it from other solutions is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It&#39;s very fast and therefore more cost-efficient than alternatives, for example Manticore is: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;182x faster&lt;/strong&gt; than MySQL for &lt;a href=&#34;https://db-benchmarks.com/test-hn-small/#mysql-vs-manticore-search&#34;&gt;small data&lt;/a&gt; (&lt;a href=&#34;https://github.com/db-benchmarks/db-benchmarks#get-started&#34;&gt;reproducible&lt;/a&gt;‚ùó)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;29x faster&lt;/strong&gt; than Elasticsearch for &lt;a href=&#34;https://db-benchmarks.com/test-logs10m/#elasticsearch-with-no-tuning-vs-manticore-search-default-row-wise-storage&#34;&gt;log analytics&lt;/a&gt; (&lt;a href=&#34;https://github.com/db-benchmarks/db-benchmarks#get-started&#34;&gt;reproducible&lt;/a&gt;‚ùó)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;15x faster&lt;/strong&gt; than Elasticsearch for &lt;a href=&#34;https://db-benchmarks.com/test-hn-small/#manticore-search-vs-elasticsearch&#34;&gt;small dataset&lt;/a&gt; (&lt;a href=&#34;https://github.com/db-benchmarks/db-benchmarks#get-started&#34;&gt;reproducible&lt;/a&gt;‚ùó)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;5x faster&lt;/strong&gt; than Elasticsearch for &lt;a href=&#34;https://db-benchmarks.com/test-hn/#manticore-search-columnar-storage-vs-elasticsearch&#34;&gt;medium-size data&lt;/a&gt; (&lt;a href=&#34;https://github.com/db-benchmarks/db-benchmarks#get-started&#34;&gt;reproducible&lt;/a&gt;‚ùó)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;4x faster&lt;/strong&gt; than Elasticsearch for &lt;a href=&#34;https://db-benchmarks.com/test-taxi/#manticore-search-vs-elasticsearch&#34;&gt;big data&lt;/a&gt; (&lt;a href=&#34;https://github.com/db-benchmarks/db-benchmarks#get-started&#34;&gt;reproducible&lt;/a&gt;‚ùó)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;up to 2x faster&lt;/strong&gt; max throughput than Elasticsearch&#39;s for data ingestion on a single server (&lt;a href=&#34;https://manticoresearch.com/blog/manticore-alternative-to-elasticsearch/#data-ingestion-performance&#34;&gt;reproducible&lt;/a&gt;‚ùó)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;With its modern multithreading architecture and efficient query parallelization capabilities, Manticore is able to fully utilize all your CPU cores to achieve the quickest response times possible.&lt;/li&gt; &#xA; &lt;li&gt;The powerful and speedy full-text search works seamlessly with both small and large datasets.&lt;/li&gt; &#xA; &lt;li&gt;Row-wise storage for small, medium and big size datasets.&lt;/li&gt; &#xA; &lt;li&gt;For even larger datasets, Manticore offers columnar storage support through the &lt;a href=&#34;https://github.com/manticoresoftware/columnar/&#34;&gt;Manticore Columnar Library&lt;/a&gt;, capable of handling datasets too big to fit in RAM.&lt;/li&gt; &#xA; &lt;li&gt;Performant secondary indexes are automatically created, saving you time and effort.&lt;/li&gt; &#xA; &lt;li&gt;The cost-based query optimizer optimizes search queries for optimal performance.&lt;/li&gt; &#xA; &lt;li&gt;Manticore is SQL-first, utilizing SQL as its native syntax, and offers compatibility with the MySQL protocol, allowing you to use your preferred MySQL client.&lt;/li&gt; &#xA; &lt;li&gt;With clients available in &lt;a href=&#34;https://github.com/manticoresoftware/manticoresearch-php&#34;&gt;PHP&lt;/a&gt;, &lt;a href=&#34;https://github.com/manticoresoftware/manticoresearch-python&#34;&gt;Python&lt;/a&gt;, &lt;a href=&#34;https://github.com/manticoresoftware/manticoresearch-javascript&#34;&gt;JavaScript&lt;/a&gt;, &lt;a href=&#34;https://github.com/manticoresoftware/manticoresearch-java&#34;&gt;Java&lt;/a&gt;, &lt;a href=&#34;https://github.com/manticoresoftware/manticoresearch-elixir&#34;&gt;Elixir&lt;/a&gt;, and &lt;a href=&#34;https://github.com/manticoresoftware/go-sdk&#34;&gt;Go&lt;/a&gt;, integration with Manticore Search becomes easy.&lt;/li&gt; &#xA; &lt;li&gt;Manticore also provides a programmatic HTTP JSON protocol for more versatile data and schema management.&lt;/li&gt; &#xA; &lt;li&gt;Built in C++, Manticore Search starts quickly and uses minimal RAM, with low-level optimizations contributing to its impressive performance.&lt;/li&gt; &#xA; &lt;li&gt;With real-time inserts, newly added documents are immediately accessible.&lt;/li&gt; &#xA; &lt;li&gt;Interactive courses are available through &lt;a href=&#34;https://play.manticoresearch.com/&#34;&gt;Interactive courses&lt;/a&gt; to make learning a breeze.&lt;/li&gt; &#xA; &lt;li&gt;Manticore also boasts built-in replication and load balancing for added reliability.&lt;/li&gt; &#xA; &lt;li&gt;Data can be synced from sources such as MySQL, PostgreSQL, ODBC, xml, and csv with ease.&lt;/li&gt; &#xA; &lt;li&gt;While not fully ACID-compliant, Manticore still supports transactions and binlog to ensure safe writes.&lt;/li&gt; &#xA; &lt;li&gt;Effortless data backup and recovery with built-in tools and SQL commands&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.craigslist.org/&#34;&gt;Craigslist&lt;/a&gt;, &lt;a href=&#34;https://socialgist.com/&#34;&gt;Socialgist&lt;/a&gt;, &lt;a href=&#34;https://pubchem.ncbi.nlm.nih.gov/&#34;&gt;PubChem&lt;/a&gt;, &lt;a href=&#34;https://rozetka.com.ua/&#34;&gt;Rozetka&lt;/a&gt; and many others use Manticore for efficient searching and stream filtering.&lt;/p&gt; &#xA;&lt;p&gt;Manticore Search was forked from &lt;a href=&#34;https://github.com/sphinxsearch/sphinx&#34;&gt;Sphinx 2.3.2&lt;/a&gt; in 2017.&lt;/p&gt; &#xA;&lt;h1&gt;More features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full-text search and relevance: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Over 20 &lt;a href=&#34;https://play.manticoresearch.com/fulltextintro/&#34;&gt;full-text operators&lt;/a&gt; and over 20 ranking factors&lt;/li&gt; &#xA;   &lt;li&gt;Custom ranking&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Other search capabilities: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://manual.manticoresearch.com/Searching/Full_text_matching/Operators&#34;&gt;Rich filtering functionality&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://play.manticoresearch.com/faceting/&#34;&gt;Faceted search&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://play.manticoresearch.com/geosearch/&#34;&gt;Geo-spatial search&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://play.manticoresearch.com/didyoumean/&#34;&gt;Spelling correction&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://play.manticoresearch.com/simpleautocomplete/&#34;&gt;Autocomplete&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;A wide range of functions for filtering and data manipulation&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Natural language processing (NLP): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://manual.manticoresearch.com/Creating_a_table/NLP_and_tokenization/Morphology&#34;&gt;Stemming&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://manual.manticoresearch.com/Creating_a_table/NLP_and_tokenization/Morphology&#34;&gt;Lemmatization&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://manual.manticoresearch.com/Creating_a_table/NLP_and_tokenization/Ignoring_stop-words#stopwords&#34;&gt;Stopwords&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://manual.manticoresearch.com/Creating_a_table/NLP_and_tokenization/Exceptions&#34;&gt;Synonyms&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://manual.manticoresearch.com/Creating_a_table/NLP_and_tokenization/Wordforms#wordforms&#34;&gt;Wordforms&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://manual.manticoresearch.com/Creating_a_table/NLP_and_tokenization/Low-level_tokenization#charset_table&#34;&gt;Advanced tokenization at character and word level&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://play.manticoresearch.com/icu-chinese/&#34;&gt;Proper Chinese segmentation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://play.manticoresearch.com/highlighting/&#34;&gt;Text highlighting&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Stream filtering &lt;a href=&#34;https://play.manticoresearch.com/pq/&#34;&gt;using a &#34;percolate&#34; table&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;High-availability: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Data can be distributed across servers and data-centers&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://play.manticoresearch.com/replication/&#34;&gt;Synchronous replication&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Built-in load balancing&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Security: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://play.manticoresearch.com/https/&#34;&gt;https support&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://manual.manticoresearch.com/Security/Read_only&#34;&gt;read-only mode&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Data safety: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://manual.manticoresearch.com/Securing_and_compacting_a_table/Backup_and_restore&#34;&gt;manticore-backup tool and SQL command BACKUP&lt;/a&gt; to back up and restore your data&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Data storages: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;row-wise - requires more RAM, provides faster performance&lt;/li&gt; &#xA;   &lt;li&gt;columnar - requires less RAM, still provides decent performance, but lower than the row-wise storage for some kinds of queries&lt;/li&gt; &#xA;   &lt;li&gt;docstore - doesn&#39;t require RAM at all, but allows only fetching original value, not sorting/grouping/filtering&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Performance optimizations: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://manual.manticoresearch.com/Server_settings/Searchd#secondary_indexes&#34;&gt;Secondary indexes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Cost-based optimizer determines the most efficient execution plan of a search query&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Data types: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;full-text field - inverted index&lt;/li&gt; &#xA;   &lt;li&gt;int, bigint and float numeric fields in row-wise and columnar fashion&lt;/li&gt; &#xA;   &lt;li&gt;multi-value attributes (array)&lt;/li&gt; &#xA;   &lt;li&gt;string and JSON&lt;/li&gt; &#xA;   &lt;li&gt;on-disk &#34;&lt;a href=&#34;https://play.manticoresearch.com/docstore/&#34;&gt;stored&lt;/a&gt;&#34; for key-value purpose&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Integrations: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://manual.manticoresearch.com/Creating_a_table/Local_tables/Plain_table#Plain-table&#34;&gt;Sync from MySQL and PostgreSQL&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://manual.manticoresearch.com/Adding_data_from_external_storages/Fetching_from_XML_streams#XML-file-format&#34;&gt;Sync from XML&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://manual.manticoresearch.com/Adding_data_from_external_storages/Fetching_from_CSV,TSV#Fetching-from-TSV,CSV&#34;&gt;Sync from CSV&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://manual.manticoresearch.com/Extensions/SphinxSE#Using-SphinxSE&#34;&gt;With MySQL as a storage engine&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://manual.manticoresearch.com/Extensions/FEDERATED&#34;&gt;With MySQL via FEDERATED engine&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://manticoresearch.com/2018/06/18/using-proxysql-to-route-inserts-in-a-distributed-realtime-index/&#34;&gt;ProxySQL&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/manticoresoftware/columnar&#34;&gt;Manticore Columnar Library&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;Docker image is available on &lt;a href=&#34;https://dockr.ly/33biV0U&#34;&gt;Docker Hub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To experiment with Manticore Search in Docker just run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -e EXTRA=1 --name manticore --rm -d manticoresearch/manticore &amp;amp;&amp;amp; until docker logs manticore 2&amp;gt;&amp;amp;1 | grep -q &#34;accepting connections&#34;; do sleep 1; done &amp;amp;&amp;amp; docker exec -it manticore mysql &amp;amp;&amp;amp; docker stop manticore&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then: create a table, add data and run searches. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;create table movies(title text, year int) morphology=&#39;stem_en&#39; html_strip=&#39;1&#39; stopwords=&#39;en&#39;;&#xA;&#xA;insert into movies(title, year) values (&#39;The Seven Samurai&#39;, 1954), (&#39;Bonnie and Clyde&#39;, 1954), (&#39;Reservoir Dogs&#39;, 1992), (&#39;Airplane!&#39;, 1980), (&#39;Raging Bull&#39;, 1980), (&#39;Groundhog Day&#39;, 1993), (&#39;&amp;lt;a href=&#34;http://google.com/&#34;&amp;gt;Jurassic Park&amp;lt;/a&amp;gt;&#39;, 1993), (&#39;Ferris Bueller\&#39;s Day Off&#39;, 1986);&#xA;&#xA;select highlight(), year from movies where match(&#39;the dog&#39;);&#xA;&#xA;select highlight(), year from movies where match(&#39;days&#39;) facet year;&#xA;&#xA;select * from movies where match(&#39;google&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that upon exiting the MySQL client, the Manticore container will be stopped and removed, resulting in no saved data, so &lt;strong&gt;use this way only for testing / sandboxing purposes&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Read &lt;a href=&#34;https://github.com/manticoresoftware/docker&#34;&gt;the full instruction for the docker image&lt;/a&gt; for more details including our recommendations on running it in production.&lt;/p&gt; &#xA;&lt;h3&gt;Packages&lt;/h3&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://manticoresearch.com/install/&#34;&gt;Ubuntu, Debian, Centos, Windows and MacOS packages are here&lt;/a&gt;.&lt;/h2&gt; &#xA;&lt;h3&gt;YUM repo for RHEL/Centos/Amazon/Oracle Linux&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo yum install https://repo.manticoresearch.com/manticore-repo.noarch.rpm&#xA;sudo yum install manticore manticore-extra&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;APT repo for Ubuntu/Debian/Mint&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget https://repo.manticoresearch.com/manticore-repo.noarch.deb&#xA;sudo dpkg -i manticore-repo.noarch.deb&#xA;sudo apt update&#xA;sudo apt install manticore manticore-extra&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Homebrew on MacOS&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install manticoresoftware/tap/manticoresearch manticoresoftware/tap/manticore-extra&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://manual.manticoresearch.com/Installation/Windows&#34;&gt;instruction here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation and community sites&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://manual.manticoresearch.com&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://play.manticoresearch.com&#34;&gt;Interactive courses&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.manticoresearch.com/&#34;&gt;Manticore Community Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://slack.manticoresearch.com/&#34;&gt;Public Slack chat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/manticoresearch_en&#34;&gt;Public Telegram chat (En)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/manticore_chat&#34;&gt;Public Telegram chat (Ru)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/manticoresoftware/manticore/issues&#34;&gt;Bug tracker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Third-party integrations&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.tiki.org/Manticore-Search&#34;&gt;https://dev.tiki.org/Manticore-Search&lt;/a&gt; - TikiWiki CMS Groupware integration&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/EvilFreelancer/laravel-manticoresearch&#34;&gt;https://github.com/EvilFreelancer/laravel-manticoresearch&lt;/a&gt; - Laravel ManticoreSearch plugin&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mediawiki.org/wiki/Extension:SphinxSearch&#34;&gt;https://www.mediawiki.org/wiki/Extension:SphinxSearch&lt;/a&gt; - extension for MediaWiki&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gordonbanderson/silverstripe-manticore-search&#34;&gt;https://github.com/gordonbanderson/silverstripe-manticore-search&lt;/a&gt; - integration for SilverStripe&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://drwho.virtadpt.net/archive/2022-05-13/combining-manticore-and-searx/&#34;&gt;https://drwho.virtadpt.net/archive/2022-05-13/combining-manticore-and-searx/&lt;/a&gt; - integration for SearX&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dimv36/sphinxlink&#34;&gt;https://github.com/dimv36/sphinxlink&lt;/a&gt; - Extension for PostgreSQL for running search queries and returning data as PostgreSQL tables&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;How we can support you&lt;/h1&gt; &#xA;&lt;p&gt;Should your company require any help - we provide full-cycle services in the areas of Sphinx and Manticore Search:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Audit&lt;/li&gt; &#xA; &lt;li&gt;Support&lt;/li&gt; &#xA; &lt;li&gt;Consulting&lt;/li&gt; &#xA; &lt;li&gt;Development&lt;/li&gt; &#xA; &lt;li&gt;Training&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://manticoresearch.com/services/&#34;&gt;More details here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;‚ù§Ô∏è How you can support Manticore Search&lt;/h1&gt; &#xA;&lt;p&gt;Manticore Search is a GPLv2-licensed Open Source project with development made possible by support from our core team, contributors, and sponsors. Building premium Open Source software is not easy. If you would like to make sure Manticore Search stays free, here is how you can help the project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.paypal.me/manticoresearch&#34;&gt;Donation through PayPal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://manticoresearch.com/services&#34;&gt;Become our client and let us help you&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>ocornut/imgui</title>
    <updated>2023-09-01T02:06:10Z</updated>
    <id>tag:github.com,2023-09-01:/ocornut/imgui</id>
    <link href="https://github.com/ocornut/imgui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dear ImGui: Bloat-free Graphical User interface for C++ with minimal dependencies&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dear ImGui&lt;/h1&gt; &#xA;&lt;center&gt;&#xA; &lt;b&gt;&lt;i&gt;&#34;Give someone state and they&#39;ll have a bug one day, but teach them how to represent state in two separate locations that have to be kept in sync and they&#39;ll have bugs for a lifetime.&#34;&lt;/i&gt;&lt;/b&gt;&#xA;&lt;/center&gt; &#xA;&lt;a href=&#34;https://twitter.com/rygorous/status/1507178315886444544&#34;&gt;-ryg&lt;/a&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ocornut/imgui/actions?workflow=build&#34;&gt;&lt;img src=&#34;https://github.com/ocornut/imgui/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ocornut/imgui/actions?workflow=static-analysis&#34;&gt;&lt;img src=&#34;https://github.com/ocornut/imgui/workflows/static-analysis/badge.svg?sanitize=true&#34; alt=&#34;Static Analysis Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ocornut/imgui_test_engine/actions?workflow=tests&#34;&gt;&lt;img src=&#34;https://github.com/ocornut/imgui_test_engine/workflows/tests/badge.svg?sanitize=true&#34; alt=&#34;Tests Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;(This library is available under a free and permissive license, but needs financial support to sustain its continued improvements. In addition to maintenance and stability there are many desirable features yet to be added. If your company is using Dear ImGui, please consider reaching out.)&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;p&gt;Businesses: support continued development and maintenance via invoiced sponsoring/support contracts: &lt;br&gt;&amp;nbsp;&amp;nbsp;&lt;em&gt;E-mail: contact @ dearimgui dot com&lt;/em&gt; &lt;br&gt;Individuals: support continued development and maintenance &lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=WGHNC6MBFLZ2S&#34;&gt;here&lt;/a&gt;. Also see &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Sponsors&#34;&gt;Sponsors&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#the-pitch&#34;&gt;The Pitch&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#usage&#34;&gt;Usage&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#how-it-works&#34;&gt;How it works&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#releases--changelogs&#34;&gt;Releases &amp;amp; Changelogs&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#demo&#34;&gt;Demo&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#integration&#34;&gt;Integration&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#gallery&#34;&gt;Gallery&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#support-frequently-asked-questions-faq&#34;&gt;Support, FAQ&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#how-to-help&#34;&gt;How to help&lt;/a&gt; - &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Sponsors&#34;&gt;Sponsors&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#credits&#34;&gt;Credits&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#license&#34;&gt;License&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ocornut/imgui/wiki&#34;&gt;Wiki&lt;/a&gt; - &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Bindings&#34;&gt;Languages &amp;amp; frameworks backends/bindings&lt;/a&gt; - &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Software-using-dear-imgui&#34;&gt;Software using Dear ImGui&lt;/a&gt; - &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Quotes&#34;&gt;User quotes&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;The Pitch&lt;/h3&gt; &#xA;&lt;p&gt;Dear ImGui is a &lt;strong&gt;bloat-free graphical user interface library for C++&lt;/strong&gt;. It outputs optimized vertex buffers that you can render anytime in your 3D-pipeline-enabled application. It is fast, portable, renderer agnostic, and self-contained (no external dependencies).&lt;/p&gt; &#xA;&lt;p&gt;Dear ImGui is designed to &lt;strong&gt;enable fast iterations&lt;/strong&gt; and to &lt;strong&gt;empower programmers&lt;/strong&gt; to create &lt;strong&gt;content creation tools and visualization / debug tools&lt;/strong&gt; (as opposed to UI for the average end-user). It favors simplicity and productivity toward this goal and lacks certain features commonly found in more high-level libraries.&lt;/p&gt; &#xA;&lt;p&gt;Dear ImGui is particularly suited to integration in game engines (for tooling), real-time 3D applications, fullscreen applications, embedded applications, or any applications on console platforms where operating system features are non-standard.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Minimize state synchronization.&lt;/li&gt; &#xA; &lt;li&gt;Minimize state storage on user side.&lt;/li&gt; &#xA; &lt;li&gt;Minimize setup and maintenance.&lt;/li&gt; &#xA; &lt;li&gt;Easy to use to create dynamic UI which are the reflection of a dynamic data set.&lt;/li&gt; &#xA; &lt;li&gt;Easy to use to create code-driven and data-driven tools.&lt;/li&gt; &#xA; &lt;li&gt;Easy to use to create ad hoc short-lived tools and long-lived, more elaborate tools.&lt;/li&gt; &#xA; &lt;li&gt;Easy to hack and improve.&lt;/li&gt; &#xA; &lt;li&gt;Portable, minimize dependencies, run on target (consoles, phones, etc.).&lt;/li&gt; &#xA; &lt;li&gt;Efficient runtime and memory consumption.&lt;/li&gt; &#xA; &lt;li&gt;Battle-tested, used by &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Software-using-dear-imgui&#34;&gt;many major actors in the game industry&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;The core of Dear ImGui is self-contained within a few platform-agnostic files&lt;/strong&gt; which you can easily compile in your application/engine. They are all the files in the root folder of the repository (imgui*.cpp, imgui*.h). &lt;strong&gt;No specific build process is required&lt;/strong&gt;. You can add the .cpp files into your existing project.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Backends for a variety of graphics API and rendering platforms&lt;/strong&gt; are provided in the &lt;a href=&#34;https://github.com/ocornut/imgui/tree/master/backends&#34;&gt;backends/&lt;/a&gt; folder, along with example applications in the &lt;a href=&#34;https://github.com/ocornut/imgui/tree/master/examples&#34;&gt;examples/&lt;/a&gt; folder. You may also create your own backend. Anywhere where you can render textured triangles, you can render Dear ImGui.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Getting-Started&#34;&gt;Getting Started&lt;/a&gt; guide and &lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#integration&#34;&gt;Integration&lt;/a&gt; section of this document for more details.&lt;/p&gt; &#xA;&lt;p&gt;After Dear ImGui is set up in your application, you can use it from _anywhere_ in your program loop:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;ImGui::Text(&#34;Hello, world %d&#34;, 123);&#xA;if (ImGui::Button(&#34;Save&#34;))&#xA;    MySaveFunction();&#xA;ImGui::InputText(&#34;string&#34;, buf, IM_ARRAYSIZE(buf));&#xA;ImGui::SliderFloat(&#34;float&#34;, &amp;amp;f, 0.0f, 1.0f);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/8225057/191050833-b7ecf528-bfae-4a9f-ac1b-f3d83437a2f4.png&#34; alt=&#34;sample code output (dark, segoeui font, freetype)&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/8225057/191050838-8742efd4-504d-4334-a9a2-e756d15bc2ab.png&#34; alt=&#34;sample code output (light, segoeui font, freetype)&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// Create a window called &#34;My First Tool&#34;, with a menu bar.&#xA;ImGui::Begin(&#34;My First Tool&#34;, &amp;amp;my_tool_active, ImGuiWindowFlags_MenuBar);&#xA;if (ImGui::BeginMenuBar())&#xA;{&#xA;    if (ImGui::BeginMenu(&#34;File&#34;))&#xA;    {&#xA;        if (ImGui::MenuItem(&#34;Open..&#34;, &#34;Ctrl+O&#34;)) { /* Do stuff */ }&#xA;        if (ImGui::MenuItem(&#34;Save&#34;, &#34;Ctrl+S&#34;))   { /* Do stuff */ }&#xA;        if (ImGui::MenuItem(&#34;Close&#34;, &#34;Ctrl+W&#34;))  { my_tool_active = false; }&#xA;        ImGui::EndMenu();&#xA;    }&#xA;    ImGui::EndMenuBar();&#xA;}&#xA;&#xA;// Edit a color stored as 4 floats&#xA;ImGui::ColorEdit4(&#34;Color&#34;, my_color);&#xA;&#xA;// Generate samples and plot them&#xA;float samples[100];&#xA;for (int n = 0; n &amp;lt; 100; n++)&#xA;    samples[n] = sinf(n * 0.2f + ImGui::GetTime() * 1.5f);&#xA;ImGui::PlotLines(&#34;Samples&#34;, samples, 100);&#xA;&#xA;// Display contents in a scrolling region&#xA;ImGui::TextColored(ImVec4(1,1,0,1), &#34;Important Stuff&#34;);&#xA;ImGui::BeginChild(&#34;Scrolling&#34;);&#xA;for (int n = 0; n &amp;lt; 50; n++)&#xA;    ImGui::Text(&#34;%04d: Some text&#34;, n);&#xA;ImGui::EndChild();&#xA;ImGui::End();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/8225057/191055698-690a5651-458f-4856-b5a9-e8cc95c543e2.gif&#34; alt=&#34;my_first_tool_v188&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Dear ImGui allows you to &lt;strong&gt;create elaborate tools&lt;/strong&gt; as well as very short-lived ones. On the extreme side of short-livedness: using the Edit&amp;amp;Continue (hot code reload) feature of modern compilers you can add a few widgets to tweak variables while your application is running, and remove the code a minute later! Dear ImGui is not just for tweaking values. You can use it to trace a running algorithm by just emitting text commands. You can use it along with your own reflection data to browse your dataset live. You can use it to expose the internals of a subsystem in your engine, to create a logger, an inspection tool, a profiler, a debugger, an entire game-making editor/framework, etc.&lt;/p&gt; &#xA;&lt;h3&gt;How it works&lt;/h3&gt; &#xA;&lt;p&gt;The IMGUI paradigm through its API tries to minimize superfluous state duplication, state synchronization, and state retention from the user&#39;s point of view. It is less error-prone (less code and fewer bugs) than traditional retained-mode interfaces, and lends itself to creating dynamic user interfaces. Check out the Wiki&#39;s &lt;a href=&#34;https://github.com/ocornut/imgui/wiki#about-the-imgui-paradigm&#34;&gt;About the IMGUI paradigm&lt;/a&gt; section for more details.&lt;/p&gt; &#xA;&lt;p&gt;Dear ImGui outputs vertex buffers and command lists that you can easily render in your application. The number of draw calls and state changes required to render them is fairly small. Because Dear ImGui doesn&#39;t know or touch graphics state directly, you can call its functions anywhere in your code (e.g. in the middle of a running algorithm, or in the middle of your own rendering process). Refer to the sample applications in the examples/ folder for instructions on how to integrate Dear ImGui with your existing codebase.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;A common misunderstanding is to mistake immediate mode GUI for immediate mode rendering, which usually implies hammering your driver/GPU with a bunch of inefficient draw calls and state changes as the GUI functions are called. This is NOT what Dear ImGui does. Dear ImGui outputs vertex buffers and a small list of draw calls batches. It never touches your GPU directly. The draw call batches are decently optimal and you can render them later, in your app or even remotely.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Releases &amp;amp; Changelogs&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ocornut/imgui/releases&#34;&gt;Releases&lt;/a&gt; page for decorated Changelogs. Reading the changelogs is a good way to keep up to date with the things Dear ImGui has to offer, and maybe will give you ideas of some features that you&#39;ve been ignoring until now!&lt;/p&gt; &#xA;&lt;h3&gt;Demo&lt;/h3&gt; &#xA;&lt;p&gt;Calling the &lt;code&gt;ImGui::ShowDemoWindow()&lt;/code&gt; function will create a demo window showcasing a variety of features and examples. The code is always available for reference in &lt;code&gt;imgui_demo.cpp&lt;/code&gt;. &lt;a href=&#34;https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v167/v167-misc.png&#34;&gt;Here&#39;s how the demo looks&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You should be able to build the examples from sources. If you don&#39;t, let us know! If you want to have a quick look at some Dear ImGui features, you can download Windows binaries of the demo app here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.dearimgui.com/binaries/imgui-demo-binaries-20230704.zip&#34;&gt;imgui-demo-binaries-20230704.zip&lt;/a&gt; (Windows, 1.89.7, built 2023/07/04, master) or &lt;a href=&#34;https://www.dearimgui.com/binaries&#34;&gt;older binaries&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The demo applications are not DPI aware so expect some blurriness on a 4K screen. For DPI awareness in your application, you can load/reload your font at a different scale and scale your style with &lt;code&gt;style.ScaleAllSizes()&lt;/code&gt; (see &lt;a href=&#34;https://www.dearimgui.com/faq&#34;&gt;FAQ&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Integration&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Getting-Started&#34;&gt;Getting Started&lt;/a&gt; guide for details.&lt;/p&gt; &#xA;&lt;p&gt;On most platforms and when using C++, &lt;strong&gt;you should be able to use a combination of the &lt;a href=&#34;https://github.com/ocornut/imgui/tree/master/backends&#34;&gt;imgui_impl_xxxx&lt;/a&gt; backends without modification&lt;/strong&gt; (e.g. &lt;code&gt;imgui_impl_win32.cpp&lt;/code&gt; + &lt;code&gt;imgui_impl_dx11.cpp&lt;/code&gt;). If your engine supports multiple platforms, consider using more imgui_impl_xxxx files instead of rewriting them: this will be less work for you, and you can get Dear ImGui running immediately. You can &lt;em&gt;later&lt;/em&gt; decide to rewrite a custom backend using your custom engine functions if you wish so.&lt;/p&gt; &#xA;&lt;p&gt;Integrating Dear ImGui within your custom engine is a matter of 1) wiring mouse/keyboard/gamepad inputs 2) uploading a texture to your GPU/render engine 3) providing a render function that can bind textures and render textured triangles, which is essentially what Backends are doing. The &lt;a href=&#34;https://github.com/ocornut/imgui/tree/master/examples&#34;&gt;examples/&lt;/a&gt; folder is populated with applications doing just that: setting up a window and using backends. If you follow the &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Getting-Started&#34;&gt;Getting Started&lt;/a&gt; guide it should in theory takes you less than an hour to integrate Dear ImGui. &lt;strong&gt;Make sure to spend time reading the &lt;a href=&#34;https://www.dearimgui.com/faq&#34;&gt;FAQ&lt;/a&gt;, comments, and the examples applications!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Officially maintained backends/bindings (in repository):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Renderers: DirectX9, DirectX10, DirectX11, DirectX12, Metal, OpenGL/ES/ES2, SDL_Renderer, Vulkan, WebGPU.&lt;/li&gt; &#xA; &lt;li&gt;Platforms: GLFW, SDL2/SDL3, Win32, Glut, OSX, Android.&lt;/li&gt; &#xA; &lt;li&gt;Frameworks: Allegro5, Emscripten.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Bindings&#34;&gt;Third-party backends/bindings&lt;/a&gt; wiki page:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Languages: C, C# and: Beef, ChaiScript, Crystal, D, Go, Haskell, Haxe/hxcpp, Java, JavaScript, Julia, Kotlin, Lobster, Lua, Odin, Pascal, PureBasic, Python, Ruby, Rust, Swift...&lt;/li&gt; &#xA; &lt;li&gt;Frameworks: AGS/Adventure Game Studio, Amethyst, Blender, bsf, Cinder, Cocos2d-x, Diligent Engine, Flexium, GML/Game Maker Studio2, GLEQ, Godot, GTK3+OpenGL3, Irrlicht Engine, L√ñVE+LUA, Magnum, Monogame, NanoRT, nCine, Nim Game Lib, Nintendo 3DS &amp;amp; Switch (homebrew), Ogre, openFrameworks, OSG/OpenSceneGraph, Orx, Photoshop, px_render, Qt/QtDirect3D, SDL_Renderer, SFML, Sokol, Unity, Unreal Engine 4, vtk, VulkanHpp, VulkanSceneGraph, Win32 GDI, WxWidgets.&lt;/li&gt; &#xA; &lt;li&gt;Many bindings are auto-generated (by good old &lt;a href=&#34;https://github.com/cimgui/cimgui&#34;&gt;cimgui&lt;/a&gt; or newer/experimental &lt;a href=&#34;https://github.com/dearimgui/dear_bindings&#34;&gt;dear_bindings&lt;/a&gt;), you can use their metadata output to generate bindings for other languages.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Useful-Extensions&#34;&gt;Useful Extensions/Widgets&lt;/a&gt; wiki page:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automation/testing, Text editors, node editors, timeline editors, plotting, software renderers, remote network access, memory editors, gizmos, etc. One of the most notable and well supported extension is &lt;a href=&#34;https://github.com/epezent/implot&#34;&gt;ImPlot&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also see &lt;a href=&#34;https://github.com/ocornut/imgui/wiki&#34;&gt;Wiki&lt;/a&gt; for more links and ideas.&lt;/p&gt; &#xA;&lt;h3&gt;Gallery&lt;/h3&gt; &#xA;&lt;p&gt;For more user-submitted screenshots of projects using Dear ImGui, check out the &lt;a href=&#34;https://github.com/ocornut/imgui/issues/6478&#34;&gt;Gallery Threads&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;For a list of third-party widgets and extensions, check out the &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Useful-Extensions&#34;&gt;Useful Extensions/Widgets&lt;/a&gt; wiki page.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Custom engine &lt;a href=&#34;https://github.com/tksuoran/erhe&#34;&gt;erhe&lt;/a&gt; (docking branch)&lt;br&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/994606/147875067-a848991e-2ad2-4fd3-bf71-4aeb8a547bcf.png&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/8225057/190203358-6988b846-0686-480e-8663-1311fbd18abd.jpg&#34; alt=&#34;erhe&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Custom engine for &lt;a href=&#34;http://www.TheDragonsTrap.com&#34;&gt;Wonder Boy: The Dragon&#39;s Trap&lt;/a&gt; (2017)&lt;br&gt;&lt;a href=&#34;https://cloud.githubusercontent.com/assets/8225057/20628927/33e14cac-b329-11e6-80f6-9524e93b048a.png&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/8225057/190203379-57fcb80e-4aec-4fec-959e-17ddd3cd71e5.jpg&#34; alt=&#34;the dragon&#39;s trap&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Custom engine (untitled)&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v160/editor_white.png&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/8225057/190203393-c5ac9f22-b900-4d1e-bfeb-6027c63e3d92.jpg&#34; alt=&#34;editor white&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Tracy Profiler (&lt;a href=&#34;https://github.com/wolfpld/tracy&#34;&gt;github&lt;/a&gt;)&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v176/tracy_profiler.png&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/8225057/190203401-7b595f6e-607c-44d3-97ea-4c2673244dfb.jpg&#34; alt=&#34;tracy profiler&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Support, Frequently Asked Questions (FAQ)&lt;/h3&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;https://github.com/ocornut/imgui/raw/master/docs/FAQ.md&#34;&gt;Frequently Asked Questions (FAQ)&lt;/a&gt; where common questions are answered.&lt;/p&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Getting-Started&#34;&gt;Getting Started&lt;/a&gt; and &lt;a href=&#34;https://github.com/ocornut/imgui/wiki&#34;&gt;Wiki&lt;/a&gt; for many links, references, articles.&lt;/p&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;https://github.com/ocornut/imgui/wiki#about-the-imgui-paradigm&#34;&gt;Articles about the IMGUI paradigm&lt;/a&gt; to read/learn about the Immediate Mode GUI paradigm.&lt;/p&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Upcoming-Changes&#34;&gt;Upcoming Changes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;https://github.com/ocornut/imgui_test_engine&#34;&gt;Dear ImGui Test Engine + Test Suite&lt;/a&gt; for Automation &amp;amp; Testing.&lt;/p&gt; &#xA;&lt;p&gt;Getting started? For first-time users having issues compiling/linking/running or issues loading fonts, please use &lt;a href=&#34;https://github.com/ocornut/imgui/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;. For other questions, bug reports, requests, feedback, you may post on &lt;a href=&#34;https://github.com/ocornut/imgui/issues&#34;&gt;GitHub Issues&lt;/a&gt;. Please read and fill the New Issue template carefully.&lt;/p&gt; &#xA;&lt;p&gt;Private support is available for paying business customers (E-mail: &lt;em&gt;contact @ dearimgui dot com&lt;/em&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Which version should I get?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;We occasionally tag &lt;a href=&#34;https://github.com/ocornut/imgui/releases&#34;&gt;Releases&lt;/a&gt; (with nice releases notes) but it is generally safe and recommended to sync to latest &lt;code&gt;master&lt;/code&gt; or &lt;code&gt;docking&lt;/code&gt; branch. The library is fairly stable and regressions tend to be fixed fast when reported. Advanced users may want to use the &lt;code&gt;docking&lt;/code&gt; branch with &lt;a href=&#34;https://github.com/ocornut/imgui/issues/1542&#34;&gt;Multi-Viewport&lt;/a&gt; and &lt;a href=&#34;https://github.com/ocornut/imgui/issues/2109&#34;&gt;Docking&lt;/a&gt; features. This branch is kept in sync with master regularly.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Who uses Dear ImGui?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Quotes&#34;&gt;Quotes&lt;/a&gt;, &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Sponsors&#34;&gt;Sponsors&lt;/a&gt;, and &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Software-using-dear-imgui&#34;&gt;Software using Dear ImGui&lt;/a&gt; Wiki pages for an idea of who is using Dear ImGui. Please add your game/software if you can! Also, see the &lt;a href=&#34;https://github.com/ocornut/imgui/issues/6478&#34;&gt;Gallery Threads&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;How to help&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;How can I help?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://github.com/ocornut/imgui/issues&#34;&gt;GitHub Forum/Issues&lt;/a&gt; and &lt;a href=&#34;https://github.com/ocornut/imgui/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You may help with development and submit pull requests! Please understand that by submitting a PR you are also submitting a request for the maintainer to review your code and then take over its maintenance forever. PR should be crafted both in the interest of the end-users and also to ease the maintainer into understanding and accepting it.&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Help-Wanted&#34;&gt;Help wanted&lt;/a&gt; on the &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/&#34;&gt;Wiki&lt;/a&gt; for some more ideas.&lt;/li&gt; &#xA; &lt;li&gt;Have your company financially support this project with invoiced sponsoring/support contracts or by buying a license for &lt;a href=&#34;https://github.com/ocornut/imgui_test_engine&#34;&gt;Dear ImGui Test Engine&lt;/a&gt; (please reach out: contact at dearimgui dot com).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Ongoing Dear ImGui development is and has been financially supported by users and private sponsors. &lt;br&gt;Please see the &lt;strong&gt;&lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Sponsors&#34;&gt;detailed list of current and past Dear ImGui supporters&lt;/a&gt;&lt;/strong&gt; for details. &lt;br&gt;From November 2014 to December 2019, ongoing development has also been financially supported by its users on Patreon and through individual donations.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;THANK YOU to all past and present supporters for helping to keep this project alive and thriving!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Dear ImGui is using software and services provided free of charge for open source projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.viva64.com/en/b/0570/&#34;&gt;PVS-Studio&lt;/a&gt; for static analysis.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub actions&lt;/a&gt; for continuous integration systems.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OpenCppCoverage/OpenCppCoverage&#34;&gt;OpenCppCoverage&lt;/a&gt; for code coverage analysis.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Developed by &lt;a href=&#34;https://www.miracleworld.net&#34;&gt;Omar Cornut&lt;/a&gt; and every direct or indirect &lt;a href=&#34;https://github.com/ocornut/imgui/graphs/contributors&#34;&gt;contributors&lt;/a&gt; to the GitHub. The early version of this library was developed with the support of &lt;a href=&#34;https://www.mediamolecule.com&#34;&gt;Media Molecule&lt;/a&gt; and first used internally on the game &lt;a href=&#34;https://tearaway.mediamolecule.com&#34;&gt;Tearaway&lt;/a&gt; (PS Vita).&lt;/p&gt; &#xA;&lt;p&gt;Recurring contributors (2022): Omar Cornut &lt;a href=&#34;https://github.com/ocornut&#34;&gt;@ocornut&lt;/a&gt;, Rokas Kupstys &lt;a href=&#34;https://github.com/rokups&#34;&gt;@rokups&lt;/a&gt; (a good portion of work on automation system and regression tests now available in &lt;a href=&#34;https://github.com/ocornut/imgui_test_engine&#34;&gt;Dear ImGui Test Engine&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Sponsoring, support contracts and other B2B transactions are hosted and handled by &lt;a href=&#34;https://www.discohello.com&#34;&gt;Disco Hello&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Omar: &#34;I first discovered the IMGUI paradigm at &lt;a href=&#34;https://www.q-games.com&#34;&gt;Q-Games&lt;/a&gt; where Atman Binstock had dropped his own simple implementation in the codebase, which I spent quite some time improving and thinking about. It turned out that Atman was exposed to the concept directly by working with Casey. When I moved to Media Molecule I rewrote a new library trying to overcome the flaws and limitations of the first one I&#39;ve worked with. It became this library and since then I have spent an unreasonable amount of time iterating and improving it.&#34;&lt;/p&gt; &#xA;&lt;p&gt;Embeds &lt;a href=&#34;http://upperbounds.net&#34;&gt;ProggyClean.ttf&lt;/a&gt; font by Tristan Grimmer (MIT license). &lt;br&gt;Embeds &lt;a href=&#34;https://github.com/nothings/stb/&#34;&gt;stb_textedit.h, stb_truetype.h, stb_rect_pack.h&lt;/a&gt; by Sean Barrett (public domain).&lt;/p&gt; &#xA;&lt;p&gt;Inspiration, feedback, and testing for early versions: Casey Muratori, Atman Binstock, Mikko Mononen, Emmanuel Briney, Stefan Kamoda, Anton Mikhailov, Matt Willis. Also thank you to everyone posting feedback, questions and patches on GitHub.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Dear ImGui is licensed under the MIT License, see &lt;a href=&#34;https://github.com/ocornut/imgui/raw/master/LICENSE.txt&#34;&gt;LICENSE.txt&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>