<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-12-29T01:39:52Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>vnotex/vnote</title>
    <updated>2025-12-29T01:39:52Z</updated>
    <id>tag:github.com,2025-12-29:/vnotex/vnote</id>
    <link href="https://github.com/vnotex/vnote" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A pleasant note-taking platform in native C++.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VNote&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/vnotex/vnote/actions/workflows/ci-win.yml/badge.svg?branch=master&#34; alt=&#34;CI-Windows&#34;&gt; &lt;img src=&#34;https://github.com/vnotex/vnote/actions/workflows/ci-linux.yml/badge.svg?branch=master&#34; alt=&#34;CI-Linux&#34;&gt; &lt;img src=&#34;https://github.com/vnotex/vnote/actions/workflows/ci-macos.yml/badge.svg?branch=master&#34; alt=&#34;CI-MacOS&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vnotex/vnote/master/README_zh_CN.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A pleasant note-taking platform.&lt;/p&gt; &#xA;&lt;p&gt;For more information, please visit &lt;a href=&#34;https://vnotex.github.io/vnote&#34;&gt;&lt;strong&gt;VNote&#39;s Home Page&lt;/strong&gt;&lt;/a&gt; or &lt;a href=&#34;https://tamlok.gitee.io/vnote&#34;&gt;Home Page on Gitee&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vnotex/vnote/master/pics/vnote.png&#34; alt=&#34;VNote&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;VNote&lt;/strong&gt; is a Qt-based, free and open source note-taking application, focusing on Markdown now. VNote is designed to provide a pleasant note-taking platform with excellent editing experience.&lt;/p&gt; &#xA;&lt;p&gt;VNote is &lt;strong&gt;NOT&lt;/strong&gt; just a simple editor for Markdown. By providing notes management, VNote makes taking notes in Markdown simpler. In the future, VNote will support more formats besides Markdown.&lt;/p&gt; &#xA;&lt;p&gt;Utilizing Qt, VNote could run on &lt;strong&gt;Linux&lt;/strong&gt;, &lt;strong&gt;Windows&lt;/strong&gt;, and &lt;strong&gt;macOS&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vnotex/vnote/master/pics/main.png&#34; alt=&#34;Main&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vnotex/vnote/master/pics/main2.png&#34; alt=&#34;Main2&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;p&gt;Continuous builds on &lt;code&gt;master&lt;/code&gt; branch could be found at the &lt;a href=&#34;https://github.com/vnotex/vnote/releases/tag/continuous-build&#34;&gt;Continuous Build&lt;/a&gt; release.&lt;/p&gt; &#xA;&lt;p&gt;Latest stable builds could be found at the &lt;a href=&#34;https://github.com/vnotex/vnote/releases/latest&#34;&gt;latest release&lt;/a&gt;. Alternative download services are available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.189.cn/t/Av67NvmEJVBv&#34;&gt;Tianyi Netdisk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pan.baidu.com/s/1Fou1flmBsQUQ8Qs9V_M6Aw&#34;&gt;Baidu Netdisk&lt;/a&gt; with the code &lt;code&gt;note&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supports&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vnotex/vnote/issues&#34;&gt;GitHub Issues&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;Email: &lt;code&gt;tamlokveer at gmail.com&lt;/code&gt;;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/vnotex&#34;&gt;Telegram&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;WeChat Public Account: vnotex;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thank &lt;a href=&#34;https://github.com/vnotex/vnote/wiki/Donate-List&#34;&gt;users who donated to VNote&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;VNote is licensed under &lt;a href=&#34;https://opensource.org/licenses/LGPL-3.0&#34;&gt;GNU LGPLv3&lt;/a&gt;. Code base of VNote could be used freely by VNoteX.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ggerganov/ggml</title>
    <updated>2025-12-29T01:39:52Z</updated>
    <id>tag:github.com,2025-12-29:/ggerganov/ggml</id>
    <link href="https://github.com/ggerganov/ggml" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tensor library for machine learning&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ggml&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/users/ggerganov/projects/7&#34;&gt;Roadmap&lt;/a&gt; / &lt;a href=&#34;https://github.com/ggerganov/llama.cpp/discussions/205&#34;&gt;Manifesto&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Tensor library for machine learning&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note that this project is under active development. &lt;br&gt; Some of the development is currently happening in the &lt;a href=&#34;https://github.com/ggerganov/llama.cpp&#34;&gt;llama.cpp&lt;/a&gt; and &lt;a href=&#34;https://github.com/ggerganov/whisper.cpp&#34;&gt;whisper.cpp&lt;/a&gt; repos&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Low-level cross-platform implementation&lt;/li&gt; &#xA; &lt;li&gt;Integer quantization support&lt;/li&gt; &#xA; &lt;li&gt;Broad hardware support&lt;/li&gt; &#xA; &lt;li&gt;Automatic differentiation&lt;/li&gt; &#xA; &lt;li&gt;ADAM and L-BFGS optimizers&lt;/li&gt; &#xA; &lt;li&gt;No third-party dependencies&lt;/li&gt; &#xA; &lt;li&gt;Zero memory allocations during runtime&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/ggerganov/ggml&#xA;cd ggml&#xA;&#xA;# install python dependencies in a virtual environment&#xA;python3.10 -m venv .venv&#xA;source .venv/bin/activate&#xA;pip install -r requirements.txt&#xA;&#xA;# build the examples&#xA;mkdir build &amp;amp;&amp;amp; cd build&#xA;cmake ..&#xA;cmake --build . --config Release -j 8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GPT inference (example)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# run the GPT-2 small 117M model&#xA;../examples/gpt-2/download-ggml-model.sh 117M&#xA;./bin/gpt-2-backend -m models/gpt-2-117M/ggml-model.bin -p &#34;This is an example&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information, checkout the corresponding programs in the &lt;a href=&#34;https://raw.githubusercontent.com/ggerganov/ggml/master/examples&#34;&gt;examples&lt;/a&gt; folder.&lt;/p&gt; &#xA;&lt;h2&gt;Using CUDA&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# fix the path to point to your CUDA compiler&#xA;cmake -DGGML_CUDA=ON -DCMAKE_CUDA_COMPILER=/usr/local/cuda-12.1/bin/nvcc ..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using hipBLAS&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cmake -DCMAKE_C_COMPILER=&#34;$(hipconfig -l)/clang&#34; -DCMAKE_CXX_COMPILER=&#34;$(hipconfig -l)/clang++&#34; -DGGML_HIP=ON&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using SYCL&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# linux&#xA;source /opt/intel/oneapi/setvars.sh&#xA;cmake -G &#34;Ninja&#34; -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icpx -DGGML_SYCL=ON ..&#xA;&#xA;# windows&#xA;&#34;C:\Program Files (x86)\Intel\oneAPI\setvars.bat&#34;&#xA;cmake -G &#34;Ninja&#34; -DCMAKE_C_COMPILER=cl -DCMAKE_CXX_COMPILER=icx -DGGML_SYCL=ON ..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Compiling for Android&lt;/h2&gt; &#xA;&lt;p&gt;Download and unzip the NDK from this download &lt;a href=&#34;https://developer.android.com/ndk/downloads&#34;&gt;page&lt;/a&gt;. Set the NDK_ROOT_PATH environment variable or provide the absolute path to the CMAKE_ANDROID_NDK in the command below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cmake .. \&#xA;   -DCMAKE_SYSTEM_NAME=Android \&#xA;   -DCMAKE_SYSTEM_VERSION=33 \&#xA;   -DCMAKE_ANDROID_ARCH_ABI=arm64-v8a \&#xA;   -DCMAKE_ANDROID_NDK=$NDK_ROOT_PATH&#xA;   -DCMAKE_ANDROID_STL_TYPE=c++_shared&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# create directories&#xA;adb shell &#39;mkdir /data/local/tmp/bin&#39;&#xA;adb shell &#39;mkdir /data/local/tmp/models&#39;&#xA;&#xA;# push the compiled binaries to the folder&#xA;adb push bin/* /data/local/tmp/bin/&#xA;&#xA;# push the ggml library&#xA;adb push src/libggml.so /data/local/tmp/&#xA;&#xA;# push model files&#xA;adb push models/gpt-2-117M/ggml-model.bin /data/local/tmp/models/&#xA;&#xA;adb shell&#xA;cd /data/local/tmp&#xA;export LD_LIBRARY_PATH=/data/local/tmp&#xA;./bin/gpt-2-backend -m models/ggml-model.bin -p &#34;this is an example&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huggingface.co/blog/introduction-to-ggml&#34;&gt;Introduction to ggml&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ggerganov/ggml/raw/master/docs/gguf.md&#34;&gt;The GGUF file format&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>love2d/love</title>
    <updated>2025-12-29T01:39:52Z</updated>
    <id>tag:github.com,2025-12-29:/love2d/love</id>
    <link href="https://github.com/love2d/love" rel="alternate"></link>
    <summary type="html">&lt;p&gt;LÖVE is an awesome 2D game framework for Lua.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;LÖVE is an &lt;em&gt;awesome&lt;/em&gt; framework you can use to make 2D games in Lua. It&#39;s free, open-source, and works on Windows, macOS, Linux, Android, and iOS.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/love2d/love/actions?query=workflow%3Acontinuous-integration&#34;&gt;&lt;img src=&#34;https://github.com/love2d/love/workflows/continuous-integration/badge.svg?sanitize=true&#34; alt=&#34;Build Status: Github CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;We use our &lt;a href=&#34;https://love2d.org/wiki&#34;&gt;wiki&lt;/a&gt; for documentation. If you need further help, feel free to ask on our &lt;a href=&#34;https://love2d.org/forums&#34;&gt;forums&lt;/a&gt;, our &lt;a href=&#34;https://discord.gg/rhUets9&#34;&gt;Discord server&lt;/a&gt;, or our &lt;a href=&#34;https://www.reddit.com/r/love2d&#34;&gt;subreddit&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Repository&lt;/h2&gt; &#xA;&lt;p&gt;We use the &#39;main&#39; branch for development of the next major release, and therefore it should not be considered stable.&lt;/p&gt; &#xA;&lt;p&gt;There are also branches for currently released major versions, which may have fixes and changes meant for upcoming patch releases within that major version.&lt;/p&gt; &#xA;&lt;p&gt;We tag all our releases (since we started using mercurial and git), and have binary downloads available for them.&lt;/p&gt; &#xA;&lt;p&gt;Experimental changes are sometimes developed in a separate &lt;a href=&#34;https://github.com/slime73/love-experiments&#34;&gt;love-experiments&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;h2&gt;Builds&lt;/h2&gt; &#xA;&lt;p&gt;Files for releases are in the &lt;a href=&#34;https://github.com/love2d/love/releases&#34;&gt;releases&lt;/a&gt; section on GitHub. &lt;a href=&#34;https://love2d.org&#34;&gt;The site&lt;/a&gt; has links to files and additional platform content for the latest release.&lt;/p&gt; &#xA;&lt;p&gt;There are also unstable/nightly builds:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Builds for some platforms are automatically created after each commit and are available through GitHub&#39;s CI interfaces.&lt;/li&gt; &#xA; &lt;li&gt;For ubuntu linux they are in &lt;a href=&#34;https://launchpad.net/~bartbes/+archive/love-unstable&#34;&gt;ppa:bartbes/love-unstable&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For arch linux there&#39;s &lt;a href=&#34;https://aur.archlinux.org/packages/love-git&#34;&gt;love-git&lt;/a&gt; in the AUR.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Test Suite&lt;/h2&gt; &#xA;&lt;p&gt;The test suite in &lt;code&gt;testing/&lt;/code&gt; covers all the LÖVE APIs, and tests them the same way developers use them. You can view current test coverage from any &lt;a href=&#34;https://github.com/love2d/love/actions/workflows/main.yml?query=branch%3Amain&#34;&gt;action&lt;/a&gt;.&lt;br&gt; You can run the suite locally like you would run a normal LÖVE project, e.g.:&lt;br&gt; &lt;code&gt;love testing&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/love2d/love/tree/main/testing&#34;&gt;readme&lt;/a&gt; in the testing folder for more info.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;The best places to contribute are through the issue tracker and the official Discord server or IRC channel.&lt;/p&gt; &#xA;&lt;p&gt;For code contributions, pull requests and patches are welcome. Be sure to read the &lt;a href=&#34;https://love2d.org/wiki/Code_Style&#34;&gt;source code style guide&lt;/a&gt;. Changes and new features typically get discussed in the issue tracker or on Discord or the forums before a pull request is made.&lt;/p&gt; &#xA;&lt;h2&gt;Compilation&lt;/h2&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;Follow the instructions at the &lt;a href=&#34;https://github.com/love2d/megasource&#34;&gt;megasource&lt;/a&gt; repository page.&lt;/p&gt; &#xA;&lt;h3&gt;*nix&lt;/h3&gt; &#xA;&lt;p&gt;Because in-tree builds are not allowed, the Makefiles needs to be generated in a separate build directory. In this example, folder named &lt;code&gt;build&lt;/code&gt; is used:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cmake -B build -S. --install-prefix $PWD/prefix # this will create the directory `build/`.&#xA;$ cmake --build build --target install -j$(nproc) # this will build with all cores and put the files in `prefix/`.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;br&gt; CMake 3.15 and earlier doesn&#39;t support &lt;code&gt;--install-prefix&lt;/code&gt;. In that case, use &lt;code&gt;-DCMAKE_INSTALL_PREFIX=&lt;/code&gt; instead.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;p&gt;Download or clone &lt;a href=&#34;https://github.com/love2d/love-apple-dependencies&#34;&gt;this repository&lt;/a&gt; and copy, move, or symlink the &lt;code&gt;macOS/Frameworks&lt;/code&gt; subfolder into love&#39;s &lt;code&gt;platform/xcode/macosx&lt;/code&gt; folder and the &lt;code&gt;shared&lt;/code&gt; subfolder into love&#39;s &lt;code&gt;platform/xcode&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;Then use the Xcode project found at &lt;code&gt;platform/xcode/love.xcodeproj&lt;/code&gt; to build the &lt;code&gt;love-macosx&lt;/code&gt; target.&lt;/p&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;p&gt;Building for iOS requires macOS and Xcode.&lt;/p&gt; &#xA;&lt;p&gt;Download the &lt;code&gt;love-apple-dependencies&lt;/code&gt; zip file corresponding to the LÖVE version being used from the &lt;a href=&#34;https://github.com/love2d/love/releases&#34;&gt;Releases page&lt;/a&gt;, unzip it, and place the &lt;code&gt;iOS/libraries&lt;/code&gt; subfolder into love&#39;s &lt;code&gt;platform/xcode/ios&lt;/code&gt; folder and the &lt;code&gt;shared&lt;/code&gt; subfolder into love&#39;s &lt;code&gt;platform/xcode&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;Or, download or clone &lt;a href=&#34;https://github.com/love2d/love-apple-dependencies&#34;&gt;this repository&lt;/a&gt; and copy, move, or symlink the &lt;code&gt;iOS/libraries&lt;/code&gt; subfolder into love&#39;s &lt;code&gt;platform/xcode/ios&lt;/code&gt; folder and the &lt;code&gt;shared&lt;/code&gt; subfolder into love&#39;s &lt;code&gt;platform/xcode&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;Then use the Xcode project found at &lt;code&gt;platform/xcode/love.xcodeproj&lt;/code&gt; to build the &lt;code&gt;love-ios&lt;/code&gt; target.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;code&gt;readme-iOS.rtf&lt;/code&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;p&gt;Visit the &lt;a href=&#34;https://github.com/love2d/love-android&#34;&gt;Android build repository&lt;/a&gt; for build instructions.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SDL3&lt;/li&gt; &#xA; &lt;li&gt;OpenGL 3.3+ / OpenGL ES 3.0+ / Vulkan / Metal&lt;/li&gt; &#xA; &lt;li&gt;OpenAL&lt;/li&gt; &#xA; &lt;li&gt;Lua / LuaJIT / LLVM-lua&lt;/li&gt; &#xA; &lt;li&gt;FreeType&lt;/li&gt; &#xA; &lt;li&gt;harfbuzz&lt;/li&gt; &#xA; &lt;li&gt;ModPlug&lt;/li&gt; &#xA; &lt;li&gt;Vorbisfile&lt;/li&gt; &#xA; &lt;li&gt;Theora&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>