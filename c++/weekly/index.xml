<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-07T01:37:31Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>baldurk/renderdoc</title>
    <updated>2024-07-07T01:37:31Z</updated>
    <id>tag:github.com,2024-07-07:/baldurk/renderdoc</id>
    <link href="https://github.com/baldurk/renderdoc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;RenderDoc is a stand-alone graphics debugging tool.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/661798/36482670-f81601c0-170b-11e8-8adb-2365b346ac27.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/baldurk/renderdoc/v1.x/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;MIT licensed&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/baldurk/renderdoc/actions&#34;&gt;&lt;img src=&#34;https://github.com/baldurk/renderdoc/workflows/CI/badge.svg?branch=v1.x&amp;amp;event=push&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/baldurk/renderdoc/v1.x/docs/CODE_OF_CONDUCT.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg?sanitize=true&#34; alt=&#34;Contributor Covenant&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;RenderDoc is a frame-capture based graphics debugger, currently available for Vulkan, D3D11, D3D12, OpenGL, and OpenGL ES development on Windows, Linux, Android, and Nintendo Switch™. It is completely open-source under the MIT license.&lt;/p&gt; &#xA;&lt;p&gt;RenderDoc is intended for debugging your own programs only. Any discussion of capturing programs that you did not create will not be allowed in any official public RenderDoc setting, including the issue tracker, discord, or via email. For example this includes capturing commercial games that you did not create, or capturing Google Maps or Google Earth. Note: Capturing projects you created that use a third party engine like Unreal or Unity, or open source and free projects is completely fine and supported.&lt;/p&gt; &#xA;&lt;p&gt;If you have any questions, suggestions or problems or you can &lt;a href=&#34;https://github.com/baldurk/renderdoc/issues/new/choose&#34;&gt;create an issue&lt;/a&gt; here on github, &lt;a href=&#34;mailto:baldurk@baldurk.org&#34;&gt;email me directly&lt;/a&gt; or come into &lt;a href=&#34;https://webchat.oftc.net/?channels=renderdoc&#34;&gt;IRC&lt;/a&gt; or &lt;a href=&#34;https://discord.gg/ahq6yRB&#34;&gt;Discord&lt;/a&gt; to discuss it.&lt;/p&gt; &#xA;&lt;p&gt;To install on windows run the appropriate installer for your OS (&lt;a href=&#34;https://renderdoc.org/stable/latest/RenderDoc_latest_64.msi&#34;&gt;64-bit&lt;/a&gt; | &lt;a href=&#34;https://renderdoc.org/stable/latest/RenderDoc_latest_32.msi&#34;&gt;32-bit&lt;/a&gt;) or download the portable zip from the &lt;a href=&#34;https://renderdoc.org/builds&#34;&gt;builds page&lt;/a&gt;. The 64-bit windows build fully supports capturing from 32-bit programs. On linux only 64-bit x86 is supported - there is a precompiled &lt;a href=&#34;https://renderdoc.org/stable/latest/renderdoc_latest.tar.gz&#34;&gt;binary tarball&lt;/a&gt; available, or your distribution may package it. If not you can &lt;a href=&#34;https://raw.githubusercontent.com/baldurk/renderdoc/v1.x/docs/CONTRIBUTING/Compiling.md&#34;&gt;build from source&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Downloads&lt;/strong&gt;: Stable and nightly builds: &lt;a href=&#34;https://renderdoc.org/builds&#34;&gt;https://renderdoc.org/builds&lt;/a&gt; ( &lt;a href=&#34;https://renderdoc.org/symbols&#34;&gt;Symbol server&lt;/a&gt; )&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: &lt;a href=&#34;https://renderdoc.org/docs&#34;&gt;HTML online&lt;/a&gt;, &lt;a href=&#34;https://renderdoc.org/docs/renderdoc.chm&#34;&gt;CHM in builds&lt;/a&gt;, &lt;a href=&#34;https://www.youtube.com/user/baldurkarlsson&#34;&gt;Videos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Contact&lt;/strong&gt;: &lt;a href=&#34;mailto:baldurk@baldurk.org&#34;&gt;baldurk@baldurk.org&lt;/a&gt;, &lt;a href=&#34;https://webchat.oftc.net/?channels=renderdoc&#34;&gt;#renderdoc on OFTC IRC&lt;/a&gt;, &lt;a href=&#34;https://discord.gg/ahq6yRB&#34;&gt;Discord server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Code of Conduct&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/baldurk/renderdoc/v1.x/docs/CODE_OF_CONDUCT.md&#34;&gt;Contributor Covenant&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Information for contributors&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/baldurk/renderdoc/v1.x/docs/CONTRIBUTING.md&#34;&gt;All contribution information&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/baldurk/renderdoc/v1.x/docs/CONTRIBUTING/Compiling.md&#34;&gt;Compilation instructions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Community extensions&lt;/strong&gt;: &lt;a href=&#34;https://github.com/baldurk/renderdoc-contrib&#34;&gt;Extensions repository&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://renderdoc.org/fp/screen1.jpg&#34;&gt; &lt;img src=&#34;https://renderdoc.org/fp/ts_screen1.jpg?2&#34; alt=&#34;Texture view&#34;&gt; &lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://renderdoc.org/fp/screen2.png&#34;&gt; &lt;img src=&#34;https://renderdoc.org/fp/ts_screen2.jpg?2&#34; alt=&#34;Pixel history &amp;amp; shader debug&#34;&gt; &lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://renderdoc.org/fp/screen3.png&#34;&gt; &lt;img src=&#34;https://renderdoc.org/fp/ts_screen3.jpg?2&#34; alt=&#34;Mesh viewer&#34;&gt; &lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://renderdoc.org/fp/screen4.png&#34;&gt; &lt;img src=&#34;https://renderdoc.org/fp/ts_screen4.jpg?2&#34; alt=&#34;Pipeline viewer &amp;amp; constants&#34;&gt; &lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;API Support&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Windows&lt;/th&gt; &#xA;   &lt;th&gt;Linux&lt;/th&gt; &#xA;   &lt;th&gt;Android&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Vulkan&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OpenGL ES 2.0 - 3.2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OpenGL 3.2 - 4.6 Core&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;D3D11 &amp;amp; D3D12&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OpenGL 1.0 - 2.0 Compat&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✖&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✖&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;D3D9 &amp;amp; 10&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✖&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Metal&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Nintendo Switch™ support is distributed separately for authorized developers as part of the NintendoSDK. For more information, consult the Nintendo Developer Portal.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;p&gt;There are &lt;a href=&#34;https://renderdoc.org/builds&#34;&gt;binary releases&lt;/a&gt; available, built from the release targets. If you just want to use the program and you ended up here, this is what you want :).&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s recommended that if you&#39;re new you start with the stable builds. Nightly builds are available every day from the &lt;a href=&#34;https://renderdoc.org/builds#nightly&#34;&gt;v1.x branch here&lt;/a&gt; if you need it, but correspondingly may be less stable.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The text documentation is available &lt;a href=&#34;https://renderdoc.org/docs/&#34;&gt;online for the latest stable version&lt;/a&gt;, as well as in &lt;a href=&#34;https://renderdoc.org/docs/renderdoc.chm&#34;&gt;renderdoc.chm&lt;/a&gt; in any build. It&#39;s built from &lt;a href=&#34;https://raw.githubusercontent.com/baldurk/renderdoc/v1.x/docs&#34;&gt;restructured text with sphinx&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;As mentioned above there are some &lt;a href=&#34;https://www.youtube.com/user/baldurkarlsson&#34;&gt;youtube videos&lt;/a&gt; showing the use of some basic features and an introduction/overview.&lt;/p&gt; &#xA;&lt;p&gt;There is also a great presentation by &lt;a href=&#34;https://twitter.com/Icetigris&#34;&gt;@Icetigris&lt;/a&gt; which goes into some details of how RenderDoc can be used in real world situations: &lt;a href=&#34;https://docs.google.com/presentation/d/1LQUMIld4SGoQVthnhT1scoA3k4Sg0as14G4NeSiSgFU/edit#slide=id.p&#34;&gt;slides are up here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;RenderDoc is released under the MIT license, see &lt;a href=&#34;https://raw.githubusercontent.com/baldurk/renderdoc/v1.x/LICENSE.md&#34;&gt;LICENSE.md&lt;/a&gt; for full text as well as 3rd party library acknowledgements.&lt;/p&gt; &#xA;&lt;h2&gt;Compiling&lt;/h2&gt; &#xA;&lt;p&gt;Building RenderDoc is fairly straight forward on most platforms. See &lt;a href=&#34;https://raw.githubusercontent.com/baldurk/renderdoc/v1.x/docs/CONTRIBUTING/Compiling.md&#34;&gt;Compiling.md&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing &amp;amp; Development&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;ve added some notes on how to contribute, as well as where to get started looking through the code in &lt;a href=&#34;https://raw.githubusercontent.com/baldurk/renderdoc/v1.x/docs/CONTRIBUTING/Developing-Change.md&#34;&gt;Developing-Change.md&lt;/a&gt;. All contribution information is available under &lt;a href=&#34;https://raw.githubusercontent.com/baldurk/renderdoc/v1.x/docs/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Z3Prover/z3</title>
    <updated>2024-07-07T01:37:31Z</updated>
    <id>tag:github.com,2024-07-07:/Z3Prover/z3</id>
    <link href="https://github.com/Z3Prover/z3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Z3 Theorem Prover&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Z3&lt;/h1&gt; &#xA;&lt;p&gt;Z3 is a theorem prover from Microsoft Research. It is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/Z3Prover/z3/master/LICENSE.txt&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are not familiar with Z3, you can start &lt;a href=&#34;https://github.com/Z3Prover/z3/wiki#background&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Pre-built binaries for stable and nightly releases are available from &lt;a href=&#34;https://github.com/Z3Prover/z3/releases&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Z3 can be built using &lt;a href=&#34;https://raw.githubusercontent.com/Z3Prover/z3/master/#building-z3-on-windows-using-visual-studio-command-prompt&#34;&gt;Visual Studio&lt;/a&gt;, a &lt;a href=&#34;https://raw.githubusercontent.com/Z3Prover/z3/master/#building-z3-using-make-and-gccclang&#34;&gt;Makefile&lt;/a&gt; or using &lt;a href=&#34;https://raw.githubusercontent.com/Z3Prover/z3/master/#building-z3-using-cmake&#34;&gt;CMake&lt;/a&gt;. It provides &lt;a href=&#34;https://raw.githubusercontent.com/Z3Prover/z3/master/#z3-bindings&#34;&gt;bindings for several programming languages&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/Z3Prover/z3/master/RELEASE_NOTES.md&#34;&gt;release notes&lt;/a&gt; for notes on various stable releases of Z3.&lt;/p&gt; &#xA;&lt;h2&gt;Build status&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Azure Pipelines&lt;/th&gt; &#xA;   &lt;th&gt;Code Coverage&lt;/th&gt; &#xA;   &lt;th&gt;Open Bugs&lt;/th&gt; &#xA;   &lt;th&gt;Android Build&lt;/th&gt; &#xA;   &lt;th&gt;WASM Build&lt;/th&gt; &#xA;   &lt;th&gt;Windows Build&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dev.azure.com/Z3Public/Z3/_build/latest?definitionId=1&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/Z3Public/Z3/_apis/build/status/Z3Prover.z3?branchName=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Z3Prover/z3/actions/workflows/coverage.yml&#34;&gt;&lt;img src=&#34;https://github.com/Z3Prover/z3/actions/workflows/coverage.yml/badge.svg?sanitize=true&#34; alt=&#34;CodeCoverage&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Z3Prover/z3/actions/workflows/wip.yml&#34;&gt;&lt;img src=&#34;https://github.com/Z3Prover/z3/actions/workflows/wip.yml/badge.svg?sanitize=true&#34; alt=&#34;Open Issues&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Z3Prover/z3/actions/workflows/android-build.yml&#34;&gt;&lt;img src=&#34;https://github.com/Z3Prover/z3/actions/workflows/android-build.yml/badge.svg?sanitize=true&#34; alt=&#34;Android Build&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Z3Prover/z3/actions/workflows/wasm.yml&#34;&gt;&lt;img src=&#34;https://github.com/Z3Prover/z3/actions/workflows/wasm.yml/badge.svg?sanitize=true&#34; alt=&#34;WASM Build&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Z3Prover/z3/actions/workflows/Windows.yml&#34;&gt;&lt;img src=&#34;https://github.com/Z3Prover/z3/actions/workflows/Windows.yml/badge.svg?sanitize=true&#34; alt=&#34;Windows&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/z3prover/z3/pkgs/container/z3&#34;&gt;Docker image&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building Z3 on Windows using Visual Studio Command Prompt&lt;/h2&gt; &#xA;&lt;p&gt;32-bit builds, start with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/mk_make.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or instead, for a 64-bit build:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/mk_make.py -x&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd build&#xA;nmake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Z3 uses C++17. The recommended version of Visual Studio is therefore VS2019.&lt;/p&gt; &#xA;&lt;h2&gt;Building Z3 using make and GCC/Clang&lt;/h2&gt; &#xA;&lt;p&gt;Execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/mk_make.py&#xA;cd build&#xA;make&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note by default &lt;code&gt;g++&lt;/code&gt; is used as the C++ compiler if it is available. If you would prefer to use Clang change the &lt;code&gt;mk_make.py&lt;/code&gt; invocation to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CXX=clang++ CC=clang python scripts/mk_make.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that Clang &amp;lt; 3.7 does not support OpenMP.&lt;/p&gt; &#xA;&lt;p&gt;You can also build Z3 for Windows using Cygwin and the Mingw-w64 cross-compiler. To configure that case correctly, make sure to use Cygwin&#39;s own python and not some Windows installation of Python.&lt;/p&gt; &#xA;&lt;p&gt;For a 64 bit build (from Cygwin64), configure Z3&#39;s sources with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CXX=x86_64-w64-mingw32-g++ CC=x86_64-w64-mingw32-gcc AR=x86_64-w64-mingw32-ar python scripts/mk_make.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A 32 bit build should work similarly (but is untested); the same is true for 32/64 bit builds from within Cygwin32.&lt;/p&gt; &#xA;&lt;p&gt;By default, it will install z3 executable at &lt;code&gt;PREFIX/bin&lt;/code&gt;, libraries at &lt;code&gt;PREFIX/lib&lt;/code&gt;, and include files at &lt;code&gt;PREFIX/include&lt;/code&gt;, where &lt;code&gt;PREFIX&lt;/code&gt; installation prefix is inferred by the &lt;code&gt;mk_make.py&lt;/code&gt; script. It is usually &lt;code&gt;/usr&lt;/code&gt; for most Linux distros, and &lt;code&gt;/usr/local&lt;/code&gt; for FreeBSD and macOS. Use the &lt;code&gt;--prefix=&lt;/code&gt; command line option to change the install prefix. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/mk_make.py --prefix=/home/leo&#xA;cd build&#xA;make&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To uninstall Z3, use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo make uninstall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To clean Z3 you can delete the build directory and run the &lt;code&gt;mk_make.py&lt;/code&gt; script again.&lt;/p&gt; &#xA;&lt;h2&gt;Building Z3 using CMake&lt;/h2&gt; &#xA;&lt;p&gt;Z3 has a build system using CMake. Read the &lt;a href=&#34;https://raw.githubusercontent.com/Z3Prover/z3/master/README-CMake.md&#34;&gt;README-CMake.md&lt;/a&gt; file for details. It is recommended for most build tasks, except for building OCaml bindings.&lt;/p&gt; &#xA;&lt;h2&gt;Building Z3 using vcpkg&lt;/h2&gt; &#xA;&lt;p&gt;vcpkg is a full platform package manager, you can easily install libzmq with vcpkg.&lt;/p&gt; &#xA;&lt;p&gt;Execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/microsoft/vcpkg.git&#xA;./bootstrap-vcpkg.bat # For powershell&#xA;./bootstrap-vcpkg.sh # For bash&#xA;./vcpkg install z3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;Z3 itself has few dependencies. It uses C++ runtime libraries, including pthreads for multi-threading. It is optionally possible to use GMP for multi-precision integers, but Z3 contains its own self-contained multi-precision functionality. Python is required to build Z3. To build Java, .Net, OCaml, Julia APIs requires installing relevant tool chains.&lt;/p&gt; &#xA;&lt;h2&gt;Z3 bindings&lt;/h2&gt; &#xA;&lt;p&gt;Z3 has bindings for various programming languages.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;.NET&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You can install a nuget package for the latest release Z3 from &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.Z3/&#34;&gt;nuget.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--dotnet&lt;/code&gt; command line flag with &lt;code&gt;mk_make.py&lt;/code&gt; to enable building these.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Z3Prover/z3/master/examples/dotnet&#34;&gt;&lt;code&gt;examples/dotnet&lt;/code&gt;&lt;/a&gt; for examples.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;C&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;These are always enabled.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Z3Prover/z3/master/examples/c&#34;&gt;&lt;code&gt;examples/c&lt;/code&gt;&lt;/a&gt; for examples.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;C++&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;These are always enabled.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Z3Prover/z3/master/examples/c++&#34;&gt;&lt;code&gt;examples/c++&lt;/code&gt;&lt;/a&gt; for examples.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;Java&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--java&lt;/code&gt; command line flag with &lt;code&gt;mk_make.py&lt;/code&gt; to enable building these.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Z3Prover/z3/master/examples/java&#34;&gt;&lt;code&gt;examples/java&lt;/code&gt;&lt;/a&gt; for examples.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;OCaml&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--ml&lt;/code&gt; command line flag with &lt;code&gt;mk_make.py&lt;/code&gt; to enable building these.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Z3Prover/z3/master/examples/ml&#34;&gt;&lt;code&gt;examples/ml&lt;/code&gt;&lt;/a&gt; for examples.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;Python&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You can install the Python wrapper for Z3 for the latest release from pypi using the command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;   pip install z3-solver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--python&lt;/code&gt; command line flag with &lt;code&gt;mk_make.py&lt;/code&gt; to enable building these.&lt;/p&gt; &#xA;&lt;p&gt;Note that it is required on certain platforms that the Python package directory (&lt;code&gt;site-packages&lt;/code&gt; on most distributions and &lt;code&gt;dist-packages&lt;/code&gt; on Debian based distributions) live under the install prefix. If you use a non standard prefix you can use the &lt;code&gt;--pypkgdir&lt;/code&gt; option to change the Python package directory used for installation. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python scripts/mk_make.py --prefix=/home/leo --python --pypkgdir=/home/leo/lib/python-2.7/site-packages&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you do need to install to a non standard prefix a better approach is to use a &lt;a href=&#34;https://virtualenv.readthedocs.org/en/latest/&#34;&gt;Python virtual environment&lt;/a&gt; and install Z3 there. Python packages also work for Python3. Under Windows, recall to build inside the Visual C++ native command build environment. Note that the &lt;code&gt;build/python/z3&lt;/code&gt; directory should be accessible from where python is used with Z3 and it depends on &lt;code&gt;libz3.dll&lt;/code&gt; to be in the path.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;virtualenv venv&#xA;source venv/bin/activate&#xA;python scripts/mk_make.py --python&#xA;cd build&#xA;make&#xA;make install&#xA;# You will find Z3 and the Python bindings installed in the virtual environment&#xA;venv/bin/z3 -h&#xA;...&#xA;python -c &#39;import z3; print(z3.get_version_string())&#39;&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Z3Prover/z3/master/examples/python&#34;&gt;&lt;code&gt;examples/python&lt;/code&gt;&lt;/a&gt; for examples.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;Julia&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The Julia package &lt;a href=&#34;https://github.com/ahumenberger/Z3.jl&#34;&gt;Z3.jl&lt;/a&gt; wraps the C++ API of Z3. Information about updating and building the Julia bindings can be found in &lt;a href=&#34;https://raw.githubusercontent.com/Z3Prover/z3/master/src/api/julia&#34;&gt;src/api/julia&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;Web Assembly&lt;/code&gt; / &lt;code&gt;TypeScript&lt;/code&gt; / &lt;code&gt;JavaScript&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;A WebAssembly build with associated TypeScript typings is published on npm as &lt;a href=&#34;https://www.npmjs.com/package/z3-solver&#34;&gt;z3-solver&lt;/a&gt;. Information about building these bindings can be found in &lt;a href=&#34;https://raw.githubusercontent.com/Z3Prover/z3/master/src/api/js&#34;&gt;src/api/js&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Smalltalk (&lt;code&gt;Pharo&lt;/code&gt; / &lt;code&gt;Smalltalk/X&lt;/code&gt;)&lt;/h3&gt; &#xA;&lt;p&gt;Project &lt;a href=&#34;https://github.com/shingarov/MachineArithmetic&#34;&gt;MachineArithmetic&lt;/a&gt; provides Smalltalk interface to Z3&#39;s C API. For more information, see &lt;a href=&#34;https://github.com/shingarov/MachineArithmetic/raw/pure-z3/MachineArithmetic/README.md&#34;&gt;MachineArithmetic/README.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;System Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Z3Prover/doc/raw/master/programmingz3/images/Z3Overall.jpg&#34; alt=&#34;System Diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Interfaces&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Default input format is &lt;a href=&#34;http://smtlib.cs.uiowa.edu&#34;&gt;SMTLIB2&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Other native foreign function interfaces:&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://z3prover.github.io/api/html/namespacez3.html&#34;&gt;C++ API&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://z3prover.github.io/api/html/namespace_microsoft_1_1_z3.html&#34;&gt;.NET API&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://z3prover.github.io/api/html/namespacecom_1_1microsoft_1_1z3.html&#34;&gt;Java API&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://z3prover.github.io/api/html/namespacez3py.html&#34;&gt;Python API&lt;/a&gt; (also available in &lt;a href=&#34;https://z3prover.github.io/api/html/z3.html&#34;&gt;pydoc format&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/prove-rs/z3.rs&#34;&gt;Rust&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;C&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;OCaml&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ahumenberger/Z3.jl&#34;&gt;Julia&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/shingarov/MachineArithmetic/raw/pure-z3/MachineArithmetic/README.md&#34;&gt;Smalltalk&lt;/a&gt; (supports Pharo and Smalltalk/X)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>ydb-platform/ydb</title>
    <updated>2024-07-07T01:37:31Z</updated>
    <id>tag:github.com,2024-07-07:/ydb-platform/ydb</id>
    <link href="https://github.com/ydb-platform/ydb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;YDB is an open source Distributed SQL Database that combines high availability and scalability with strong consistency and ACID transactions&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img width=&#34;64&#34; src=&#34;https://raw.githubusercontent.com/ydb-platform/ydb/main/ydb/docs/_assets/logo.svg?sanitize=true&#34;&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ydb-platform/ydb/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ydb-platform/ydb/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/ydb-platform/ydb.svg?style=flat-square&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/R5MvZTESWc&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1158573985894772827?logo=discord&amp;amp;logoColor=%23fff&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;YDB&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ydb.tech&#34;&gt;Website&lt;/a&gt; | &lt;a href=&#34;https://ydb.tech/docs/en/&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://github.com/ydb-platform/ydb&#34;&gt;Official Repository&lt;/a&gt; | &lt;a href=&#34;https://blog-redirect.ydb.tech&#34;&gt;Blog&lt;/a&gt; | &lt;a href=&#34;https://www.youtube.com/c/YDBPlatform&#34;&gt;YouTube&lt;/a&gt; | &lt;a href=&#34;https://discord.gg/R5MvZTESWc&#34;&gt;Discord&lt;/a&gt; | &lt;a href=&#34;https://t.me/ydb_en&#34;&gt;Telegram&lt;/a&gt; | &lt;a href=&#34;https://www.linkedin.com/company/ydb-platform&#34;&gt;LinkedIn&lt;/a&gt; | &lt;a href=&#34;https://x.com/YDBPlatform&#34;&gt;X&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;YDB is an open source Distributed SQL Database that combines high availability and scalability with strict consistency and ACID transactions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/bxZRUtMAlFI&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ydb-platform/ydb/main/ydb/docs/_assets/ydb-promo-video.png&#34; alt=&#34;YDB Product Video&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Main YDB Advantages&lt;/h2&gt; &#xA;&lt;p&gt;YDB was designed from scratch to respond to the growing demand for scalable interactive web services. Scalability, strict consistency, and effective cross-row transactions were a must for such an OLTP-like workload. YDB was built by people with strong backgrounds in databases and distributed systems who have experience developing a NoSQL database and the MapReduce system for one of the largest search engines in the world.&lt;/p&gt; &#xA;&lt;p&gt;Basic YDB features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Both row-oriented and column-oriented &lt;a href=&#34;https://ydb.tech/docs/en/concepts/datamodel/table&#34;&gt;tables&lt;/a&gt; for transactional and analytical workloads. Also, &lt;a href=&#34;https://ydb.tech/docs/en/concepts/topic&#34;&gt;persistent queues (topics)&lt;/a&gt; for moving data around.&lt;/li&gt; &#xA; &lt;li&gt;Fault-tolerant configuration that survives disk, node, rack, or even datacenter outages.&lt;/li&gt; &#xA; &lt;li&gt;Automatic disaster recovery with minimum latency disruptions for applications.&lt;/li&gt; &#xA; &lt;li&gt;Independent horizontal scalability of storage and compute layers.&lt;/li&gt; &#xA; &lt;li&gt;ACID transactions across multiple nodes and tables with strict consistency.&lt;/li&gt; &#xA; &lt;li&gt;Rich &lt;a href=&#34;https://ydb.tech/docs/en/yql/reference/&#34;&gt;SQL dialect (YQL)&lt;/a&gt; for data manipulation and schema definition.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ydb.tech/docs/en/postgresql/intro&#34;&gt;PostgreSQL-compatible mode&lt;/a&gt; for table operations and &lt;a href=&#34;https://ydb.tech/docs/en/reference/kafka-api/&#34;&gt;Kafka-compatible mode&lt;/a&gt; for topics.&lt;/li&gt; &#xA; &lt;li&gt;YDB clusters can be deployed with &lt;a href=&#34;https://ydb.tech/docs/en/devops/ansible/&#34;&gt;Ansible&lt;/a&gt;, &lt;a href=&#34;https://ydb.tech/docs/en/devops/kubernetes/&#34;&gt;Kubernetes&lt;/a&gt;, or &lt;a href=&#34;https://ydb.tech/docs/en/devops/manual/&#34;&gt;manually&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Fault-tolerant Configurations&lt;/h3&gt; &#xA;&lt;p&gt;YDB can be deployed in three availability zones (datacenters). A cluster remains available for both reads and writes during a complete outage of a single zone. Availability zones and regions are covered in more detail &lt;a href=&#34;https://ydb.tech/en/docs/concepts/databases#regions-az&#34;&gt;in documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Horizontal Scalability&lt;/h3&gt; &#xA;&lt;p&gt;Unlike traditional relational databases, YDB &lt;a href=&#34;https://en.wikipedia.org/wiki/Scalability#Horizontal_or_scale_out&#34;&gt;scales out&lt;/a&gt;, providing developers with the capability to simply extend clusters with computation or storage resources to handle increasing load. YDB has disaggregated storage and compute layers, which allow you to scale storage and compute resources independently.&lt;/p&gt; &#xA;&lt;p&gt;Current production installations have over 10000 nodes, store petabytes of data, and handle millions of distributed transactions per second.&lt;/p&gt; &#xA;&lt;h3&gt;Automatic Disaster Recovery&lt;/h3&gt; &#xA;&lt;p&gt;YDB&#39;s built-in automatic recovery support allows it to seamlessly survive hardware failures. After unpredictable disk, node, rack, or even datacenter failure, YDB remains fully available for reads and writes and automatically restores required data redundancy.&lt;/p&gt; &#xA;&lt;h3&gt;Multitenant and Serverless Database&lt;/h3&gt; &#xA;&lt;p&gt;YDB supports multitenant and serverless setups. A user can run a YDB cluster and create several databases that share one pool of storage and have different compute nodes. Alternatively, a user can run several serverless databases that share one pool of compute resources to utilize them effectively.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Platforms&lt;/h2&gt; &#xA;&lt;h3&gt;Minimal system requirements&lt;/h3&gt; &#xA;&lt;p&gt;YDB runs on x86 64-bit platforms with at least 8 GB of RAM.&lt;/p&gt; &#xA;&lt;h3&gt;Operating Systems&lt;/h3&gt; &#xA;&lt;p&gt;In most production environments, YDB runs on 64-bit x86 machines working under Ubuntu Linux.&lt;/p&gt; &#xA;&lt;p&gt;For development purposes, it is regularly tested that YDB can be compiled and run under the latest versions of MacOS and Microsoft Windows.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;If you want to experiment with YDB, start with the &lt;a href=&#34;https://ydb.tech/docs/en/quickstart&#34;&gt;Quick Start guide&lt;/a&gt;. It will yield a single-node cluster suitable for functional testing, app development, and similar tasks.&lt;/p&gt; &#xA;&lt;p&gt;Suppose you want to jump into more serious scenarios like testing YDB fault tolerance, running performance benchmarks, or even running production or preproduction workloads. In that case, you&#39;ll need a full-fledged multi-node YDB cluster that can be deployed with either &lt;a href=&#34;https://ydb.tech/docs/en/devops/ansible/initial-deployment&#34;&gt;Ansible&lt;/a&gt; for bare metal or virtual machines or &lt;a href=&#34;https://ydb.tech/docs/en/devops/kubernetes/initial-deployment&#34;&gt;Kubernetes&lt;/a&gt; for containers.&lt;/p&gt; &#xA;&lt;h2&gt;How to Build from Source Code&lt;/h2&gt; &#xA;&lt;p&gt;Instructions on how to build YDB server (ydbd) and client (ydb) binaries are provided in &lt;a href=&#34;https://raw.githubusercontent.com/ydb-platform/ydb/main/BUILD.md&#34;&gt;BUILD.md&lt;/a&gt;. Also, see documentation on &lt;a href=&#34;https://ydb.tech/docs/en/contributor/build-ya&#34;&gt;Ya Make build system&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to Contribute&lt;/h2&gt; &#xA;&lt;p&gt;We are glad to welcome new contributors! The &lt;a href=&#34;https://raw.githubusercontent.com/ydb-platform/ydb/main/CONTRIBUTING.md&#34;&gt;contributor&#39;s guide&lt;/a&gt; provides more details on how to get started as a contributor.&lt;/p&gt; &#xA;&lt;p&gt;There&#39;s also a separate section of &lt;a href=&#34;https://ydb.tech/docs/en/contributor/&#34;&gt;YDB documentation for contributors&lt;/a&gt;, mostly with more technical content.&lt;/p&gt; &#xA;&lt;h2&gt;Success Stories&lt;/h2&gt; &#xA;&lt;p&gt;Visit YDB &lt;a href=&#34;https://ydb.tech/&#34;&gt;website&lt;/a&gt; for the latest success stories and user scenarios.&lt;/p&gt;</summary>
  </entry>
</feed>