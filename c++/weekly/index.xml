<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-02T01:52:23Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>weidai11/cryptopp</title>
    <updated>2023-07-02T01:52:23Z</updated>
    <id>tag:github.com,2023-07-02:/weidai11/cryptopp</id>
    <link href="https://github.com/weidai11/cryptopp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;free C++ class library of cryptographic schemes&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Crypto++: free C++ Class Library of Cryptographic Schemes Version 8.9 - TBD&lt;/p&gt; &#xA;&lt;p&gt;Crypto++ Library is a free C++ class library of cryptographic schemes. Currently the library contains the following algorithms:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;               algorithm type  name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;authenticated encryption schemes GCM, CCM, EAX, ChaCha20Poly1305 and XChaCha20Poly1305&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    high speed stream ciphers  ChaCha (8/12/20), ChaCha (IETF), Panama, Salsa20,&#xA;                               Sosemanuk, XSalsa20, XChaCha20&#xA;&#xA;       AES and AES candidates  AES (Rijndael), RC6, MARS, Twofish, Serpent,&#xA;                               CAST-256&#xA;&#xA;                               ARIA, Blowfish, Camellia, CHAM, HIGHT, IDEA,&#xA;                               Kalyna (128/256/512), LEA, SEED, RC5, SHACAL-2,&#xA;          other block ciphers  SIMON (64/128), Skipjack, SPECK (64/128),&#xA;                               Simeck, SM4, Threefish (256/512/1024),&#xA;                               Triple-DES (DES-EDE2 and DES-EDE3), TEA, XTEA&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;block cipher modes of operation ECB, CBC, CBC ciphertext stealing (CTS), CFB, OFB, counter mode (CTR), XTS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; message authentication codes  BLAKE2s, BLAKE2b, CMAC, CBC-MAC, DMAC, GMAC, HMAC,&#xA;                               Poly1305, Poly1305 (IETF), SipHash, Two-Track-MAC,&#xA;                               VMAC&#xA;&#xA;                               BLAKE2s, BLAKE2b, Keccack (F1600), LSH (256/512),&#xA;               hash functions  SHA-1, SHA-2 (224/256/384/512), SHA-3 (224/256),&#xA;                               SHA-3 (384/512), SHAKE (128/256), SipHash, SM3, Tiger,&#xA;                               RIPEMD (128/160/256/320), WHIRLPOOL&#xA;&#xA;                               RSA, DSA, Deterministic DSA, ElGamal,&#xA;      public-key cryptography  Nyberg-Rueppel (NR), Rabin-Williams (RW), LUC,&#xA;                               LUCELG, EC-based German Digital Signature (ECGDSA),&#xA;                               DLIES (variants of DHAES), ESIGN&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;padding schemes for public-key PKCS#1 v2.0, OAEP, PSS, PSSR, IEEE P1363 systems EMSA2 and EMSA5&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;                               Diffie-Hellman (DH), Unified Diffie-Hellman (DH2),&#xA;        key agreement schemes  Menezes-Qu-Vanstone (MQV), Hashed MQV (HMQV),&#xA;                               Fully Hashed MQV (FHMQV), LUCDIF, XTR-DH&#xA;&#xA;  elliptic curve cryptography  ECDSA, Deterministic ECDSA, ed25519, ECNR, ECIES,&#xA;                               ECDH, ECMQV, x25519&#xA;&#xA;      insecure or obsolescent  MD2, MD4, MD5, Panama Hash, DES, ARC4, SEAL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;algorithms retained for backwards 3.0, WAKE-OFB, DESX (DES-XEX3), RC2, compatibility and historical SAFER, 3-WAY, GOST, SHARK, CAST-128, Square value&lt;/p&gt; &#xA;&lt;p&gt;Other features include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;pseudo random number generators (PRNG): ANSI X9.17 appendix C, RandomPool, DARN, VIA Padlock, RDRAND, RDSEED, NIST Hash and HMAC DRBGs&lt;/li&gt; &#xA; &lt;li&gt;password based key derivation functions: PBKDF1 and PBKDF2 from PKCS #5, PBKDF from PKCS #12 appendix B, HKDF from RFC 5869, Scrypt from RFC 7914&lt;/li&gt; &#xA; &lt;li&gt;Shamir&#39;s secret sharing scheme and Rabin&#39;s information dispersal algorithm (IDA)&lt;/li&gt; &#xA; &lt;li&gt;fast multi-precision integer (bignum) and polynomial operations&lt;/li&gt; &#xA; &lt;li&gt;finite field arithmetics, including GF(p) and GF(2^n)&lt;/li&gt; &#xA; &lt;li&gt;prime number generation and verification&lt;/li&gt; &#xA; &lt;li&gt;useful non-cryptographic algorithms &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;DEFLATE (RFC 1951) compression/decompression with gzip (RFC 1952) and zlib (RFC 1950) format support&lt;/li&gt; &#xA;   &lt;li&gt;Hex, base-32, base-64, URL safe base-64 encoding and decoding&lt;/li&gt; &#xA;   &lt;li&gt;32-bit CRC, CRC-C and Adler32 checksum&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;class wrappers for these platform and operating system features (optional): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;high resolution timers on Windows, Unix, and Mac OS&lt;/li&gt; &#xA;   &lt;li&gt;/dev/random, /dev/urandom, /dev/srandom&lt;/li&gt; &#xA;   &lt;li&gt;Microsoft&#39;s CryptGenRandom or BCryptGenRandom on Windows&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;A high level interface for most of the above, using a filter/pipeline metaphor&lt;/li&gt; &#xA; &lt;li&gt;benchmarks and validation testing&lt;/li&gt; &#xA; &lt;li&gt;x86, x64 (x86-64), x32 (ILP32), ARM-32, Aarch32, Aarch64 and Power8 in-core code for the commonly used algorithms &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;run-time CPU feature detection and code selection&lt;/li&gt; &#xA;   &lt;li&gt;supports GCC-style and MSVC-style inline assembly, and MASM for x64&lt;/li&gt; &#xA;   &lt;li&gt;x86, x64 (x86-64), x32 provides MMX, SSE2, and SSE4 implementations&lt;/li&gt; &#xA;   &lt;li&gt;ARM-32, Aarch32 and Aarch64 provides NEON, ASIMD and ARMv8 implementations&lt;/li&gt; &#xA;   &lt;li&gt;Power8 provides in-core AES using NX Crypto Acceleration&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The Crypto++ library was originally written by Wei Dai. The library is now maintained by several team members and the community. You are welcome to use it for any purpose without paying anyone, but see License.txt for the fine print.&lt;/p&gt; &#xA;&lt;p&gt;The following compilers are supported for this release. Please visit &lt;a href=&#34;http://www.cryptopp.com&#34;&gt;http://www.cryptopp.com&lt;/a&gt; the most up to date build instructions and porting notes.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visual Studio 2003 - 2022&lt;/li&gt; &#xA; &lt;li&gt;GCC 3.3 - 13.1&lt;/li&gt; &#xA; &lt;li&gt;Apple Clang 4.3 - 12.0&lt;/li&gt; &#xA; &lt;li&gt;LLVM Clang 2.9 - 14.0&lt;/li&gt; &#xA; &lt;li&gt;C++ Builder 2015&lt;/li&gt; &#xA; &lt;li&gt;Intel C++ Compiler 9 - 16.0&lt;/li&gt; &#xA; &lt;li&gt;Sun Studio 12u1 - 12.7&lt;/li&gt; &#xA; &lt;li&gt;IBM XL C/C++ 10.0 - 14.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;*** Important Usage Notes ***&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If a constructor for A takes a pointer to an object B (except primitive types such as int and char), then A owns B and will delete B at A&#39;s destruction. If a constructor for A takes a reference to an object B, then the caller retains ownership of B and should not destroy it until A no longer needs it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Crypto++ is thread safe at the class level. This means you can use Crypto++ safely in a multithreaded application, but you must provide synchronization when multiple threads access a common Crypto++ object.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;*** MSVC-Specific Information ***&lt;/p&gt; &#xA;&lt;p&gt;To compile Crypto++ with MSVC, open &#34;cryptest.sln&#34; (for MSVC 2003 - 2015) and build one or more of the following projects:&lt;/p&gt; &#xA;&lt;p&gt;cryptest Non-DLL-Import Configuration - This builds the full static library along with a full test driver. cryptest DLL-Import Configuration - This builds a static library containing only algorithms not in the DLL, along with a full test driver that uses both the DLL and the static library. cryptdll - This builds the DLL. Please note that if you wish to use Crypto++ as a FIPS validated module, you must use a pre-built DLL that has undergone the FIPS validation process instead of building your own. dlltest - This builds a sample application that only uses the DLL.&lt;/p&gt; &#xA;&lt;p&gt;The DLL used to provide FIPS validated cryptography. The library was moved to the CMVP&#39;s &lt;a href=&#34;http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140val-historical.htm&#34;&gt;Historical Validation List&lt;/a&gt;. The library and the DLL are no longer considered validated. You should no longer use the DLL.&lt;/p&gt; &#xA;&lt;p&gt;To use the Crypto++ DLL in your application, #include &#34;dll.h&#34; before including any other Crypto++ header files, and place the DLL in the same directory as your .exe file. dll.h includes the line #pragma comment(lib, &#34;cryptopp&#34;) so you don&#39;t have to explicitly list the import library in your project settings. To use a static library form of Crypto++, make the &#34;cryptlib&#34; project a dependency of your application project, or specify it as an additional library to link with in your project settings. In either case you should check the compiler options to make sure that the library and your application are using the same C++ run-time libraries and calling conventions.&lt;/p&gt; &#xA;&lt;p&gt;*** DLL Memory Management ***&lt;/p&gt; &#xA;&lt;p&gt;Because it&#39;s possible for the Crypto++ DLL to delete objects allocated by the calling application, they must use the same C++ memory heap. Three methods are provided to achieve this.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The calling application can tell Crypto++ what heap to use. This method is required when the calling application uses a non-standard heap.&lt;/li&gt; &#xA; &lt;li&gt;Crypto++ can tell the calling application what heap to use. This method is required when the calling application uses a statically linked C++ Run Time Library. (Method 1 does not work in this case because the Crypto++ DLL is initialized before the calling application&#39;s heap is initialized.)&lt;/li&gt; &#xA; &lt;li&gt;Crypto++ can automatically use the heap provided by the calling application&#39;s dynamically linked C++ Run Time Library. The calling application must make sure that the dynamically linked C++ Run Time Library is initialized before Crypto++ is loaded. (At this time it is not clear if it is possible to control the order in which DLLs are initialized on Windows 9x machines, so it might be best to avoid using this method.)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;When Crypto++ attaches to a new process, it searches all modules loaded into the process space for exported functions &#34;GetNewAndDeleteForCryptoPP&#34; and &#34;SetNewAndDeleteFromCryptoPP&#34;. If one of these functions is found, Crypto++ uses methods 1 or 2, respectively, by calling the function. Otherwise, method 3 is used.&lt;/p&gt; &#xA;&lt;p&gt;*** Linux and Unix-like Specific Information ***&lt;/p&gt; &#xA;&lt;p&gt;A makefile is included for you to compile Crypto++ with GCC and compatibles. Make sure you are using GNU Make and GNU ld. The make process will produce two files, libcryptopp.a and cryptest.exe. Run &#34;cryptest.exe v&#34; for the validation suite and &#34;cryptest.exe tv all&#34; for additional test vectors.&lt;/p&gt; &#xA;&lt;p&gt;The makefile uses &#39;-DNDEBUG -g2 -O2&#39; CXXFLAGS by default. If you use an alternate build system, like Autotools or CMake, then ensure the build system includes &#39;-DNDEBUG&#39; for production or release builds. The Crypto++ library uses asserts for debugging and diagnostics during development; it does not rely on them to crash a program at runtime.&lt;/p&gt; &#xA;&lt;p&gt;If an assert triggers in production software, then unprotected sensitive information could be egressed from the program to the filesystem or the platform&#39;s error reporting program, like Apport on Ubuntu or CrashReporter on Apple.&lt;/p&gt; &#xA;&lt;p&gt;The makefile orders object files to help remediate problems associated with C++ static initialization order. The library does not use custom linker scripts. If you use an alternate build system, like Autotools or CMake, and collect source files into a list, then ensure these three are at the head of the list: &#39;cryptlib.cpp cpu.cpp integer.cpp &#xA; &lt;other sources&gt;&#xA;  &#39;. They should be linked in the same order: &#39;cryptlib.o cpu.o integer.o &#xA;  &lt;other objects&gt;&#xA;   &#39;.&#xA;  &lt;/other&gt;&#xA; &lt;/other&gt;&lt;/p&gt; &#xA;&lt;p&gt;If your linker supports initialization attributes, like init_priority, then you can define CRYPTOPP_INIT_PRIORITY to control object initialization order. Set it to a value like 250. User programs can use CRYPTOPP_USER_PRIORITY to avoid conflicts with library values. Initialization attributes are more reliable than object file ordering, but its not ubiquitously supported by linkers.&lt;/p&gt; &#xA;&lt;p&gt;The makefile links to the static version of the Crypto++ library to avoid binary planting and other LD_PRELOAD tricks. You should use the static version of the library in your programs to help avoid unwanted redirections.&lt;/p&gt; &#xA;&lt;p&gt;*** Side Channel Attacks ***&lt;/p&gt; &#xA;&lt;p&gt;Crypto++ attempts to resist side channel attacks using various remediations. The remediations are applied as a best effort but are probably incomplete. They are incomplete due to cpu speculation bugs like Spectre, Meltdown, Foreshadow. The attacks target both cpu caches and internal buffers. Intel generally refers to internal buffer attacks as &#34;Microarchitectural Data Sampling&#34; (MDS).&lt;/p&gt; &#xA;&lt;p&gt;The library uses hardware instructions when possible for block ciphers, hashes and other operations. The hardware acceleration remediates some timing attacks. The library also uses cache-aware algorithms and access patterns to minimize leakage cache evictions.&lt;/p&gt; &#xA;&lt;p&gt;Elliptic curves over binary fields are believed to leak information. The task is a work in progress. We don&#39;t believe binary fields are used in production, so we feel it is a low risk at the moment.&lt;/p&gt; &#xA;&lt;p&gt;Crypto++ does not engage Specter remediations at this time. The GCC options for Specter are -mfunction-return=thunk and -mindirect-branch=thunk, and the library uses them during testing. If you want the Specter workarounds then add the GCC options to your CXXFLAGS when building the library.&lt;/p&gt; &#xA;&lt;p&gt;To help resist attacks you should disable hyperthreading on cpus. If you suspect or find an information leak then please report it.&lt;/p&gt; &#xA;&lt;p&gt;*** Documentation and Support ***&lt;/p&gt; &#xA;&lt;p&gt;Crypto++ is documented through inline comments in header files, which are processed through Doxygen to produce an HTML reference manual. You can find a link to the manual from &lt;a href=&#34;http://www.cryptopp.com&#34;&gt;http://www.cryptopp.com&lt;/a&gt;. Also at that site is the Crypto++ FAQ, which you should browse through before attempting to use this library, because it will likely answer many of questions that may come up. Finally, the site provides the wiki which has many topics and code examples.&lt;/p&gt; &#xA;&lt;p&gt;If you run into any problems, please try the Crypto++ mailing list. The subscription information and the list archive are available on &lt;a href=&#34;http://www.cryptopp.com&#34;&gt;http://www.cryptopp.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;*** Source Code and Contributing ***&lt;/p&gt; &#xA;&lt;p&gt;The source code and its planned changes are available at the following locations.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The Crypto++ GitHub repository allows you to view the latest (unreleased) Crypto++ source code via the Linux kernel&#39;s git beginning around June 2015. Its also serves as an incubator to nurture and grow the library.&lt;/li&gt; &#xA; &lt;li&gt;The former Crypto++ SourceForge repository allows you to view the Crypto++ source code via Apache&#39;s subversion until about July 2015. At that time, SourceForge had infrastructure problems and a cutover to GutHub was performed.&lt;/li&gt; &#xA; &lt;li&gt;The Roadmap on the wiki provides the general direction the library is heading. It includes planned features and releases, and even some wishlist items.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Contributions of all types are welcomed. Contributions include the following.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bug finding and fixes&lt;/li&gt; &#xA; &lt;li&gt;Features and enhancements&lt;/li&gt; &#xA; &lt;li&gt;Test scripts and test cases&lt;/li&gt; &#xA; &lt;li&gt;Branch and release testing&lt;/li&gt; &#xA; &lt;li&gt;Documentation and updates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you think you have found a bug in the library, then you should discuss it on the Users mailing list. Discussing it will help bring the issue to the attention of folks who can help resolve the issue. If you want to contribute a bug fix to the library, then make a Pull Request or make a Diff available somewhere. Also see Bug Reports on the wiki.&lt;/p&gt; &#xA;&lt;p&gt;Features and enhancements are welcomed additions to the library. This category tends to be time consuming because algorithms and their test cases need to be reviewed and merged. Please be mindful of the test cases, and attempt to procure them from an independent source.&lt;/p&gt; &#xA;&lt;p&gt;The library cherishes test scripts and test cases. They ensure the library is fit and they help uncover issues with the library before users experience them. If you have some time, then write some test cases, especially the ones that are intended to break things.&lt;/p&gt; &#xA;&lt;p&gt;Branch and release testing is your chance to ensure Master (and planned merges) meets your expectations and perform as expected. If you have a few spare cycles, then please test Master on your favorite platform. We need more testing on MinGW, Windows Phone, Windows Store, Solaris 10 (and below), and modern iOS and OS X (including TV and Watch builds).&lt;/p&gt; &#xA;&lt;p&gt;Documentation and updates includes both the inline source code annotations using Doxygen, and the online information provided in the wiki. The wiki is more verbose and usually provides more contextual information than the API reference. Besides testing, documentation is one of the highest returns on investment.&lt;/p&gt; &#xA;&lt;p&gt;*** History ***&lt;/p&gt; &#xA;&lt;p&gt;The items in this section comprise the most recent history. Please see History.txt for the record back to Crypto++ 1.0.&lt;/p&gt; &#xA;&lt;p&gt;8.8.0 - June 25, 2023 - minor release, recompile of programs required - expanded community input and support * 88 unique contributors as of this release - fix crash in cryptest.exe when invoked with no options - fix crash in library due to GCC removing live code - fix RSA with key size 16 may provide an invalid key - fix failure to build on 32-bit x86 - fix failure to build on iPhone Simulator for arm64 - fix failure to build on Windows arm64 - test for SSSE3 before using the ISA - fix include of &amp;lt;x86intrin.h&amp;gt; when using MSVC - improve performance of CRC32C_Update_SSE42 for x86-64 - update documentation&lt;/p&gt; &#xA;&lt;p&gt;8.7.0 - August 7, 2022 - minor release, recompile of programs required - expanded community input and support * 81 unique contributors as of this release - fix RSA key generation for small moduli - fix AES-GCM with AESNI but without CLMUL - fix Clang warning with C++17 - fix MinGW builds due to use of O_NOFOLLOW - rework CFB_CipherTemplate::ProcessData and AdditiveCipherTemplate::ProcessData * restored performance and avoided performance penalty of a temp buffer - fix undersized SecBlock buffer in Integer bit operations - work around several GCC 11 &amp;amp; 12 problems&lt;/p&gt; &#xA;&lt;p&gt;8.6.0 - September 21, 2021 - minor release, recompile of programs required - expanded community input and support * 74 unique contributors as of this release - fix ElGamal encryption - fix ChaCha20 AVX2 implementation - add octal and decimal literal prefix parsing to Integer - add missing overload in ed25519Signer and ed25519Verifier - make SHA-NI independent of AVX and AVX2 - fix OldRandomPool GenerateWord32 - use CPPFLAGS during feature testing - fix compile on CentOS 5 - fix compile on FreeBSD - fix feature testing on ARM A-32 and Aarch64 - enable inline ASM for CRC and PMULL on Apple M1 - fix Intel oneAPI compile - rename test files with *.cpp extension - fix GCC compile error due to missing _mm256_set_m128i - add LSH-256 and LSH-512 hash functions - add ECIES_P1363 for backwards compatibility - fix AdditiveCipherTemplate&#xA; &lt;t&gt;&#xA;   ProcessData - remove CRYPTOPP_NO_CXX11 define - add -fno-common for Darwin builds - update documentation&#xA; &lt;/t&gt;&lt;/p&gt; &#xA;&lt;p&gt;8.5.0 - March 7, 2021 - minor release, no recompile of programs required - expanded community input and support * 70 unique contributors as of this release - port to Apple M1 hardware&lt;/p&gt; &#xA;&lt;p&gt;8.4.0 - January 2, 2021 - minor release, recompile of programs required - expanded community input and support * 67 unique contributors as of this release - fix SIGILL on POWER8 when compiling with GCC 10 - fix potential out-of-bounds write in FixedSizeAllocatorWithCleanup - fix compile on AIX POWER7 with IBM XLC 12.01 - fix compile on Solaris with SunCC 12.6 - revert changes for constant-time elliptic curve algorithms - fix makefile clean and distclean recipes&lt;/p&gt; &#xA;&lt;p&gt;8.3.0 - December 20, 2020 - minor release, recompile of programs required - expanded community input and support * 66 unique contributors as of this release - fix use of macro CRYPTOPP_ALIGN_DATA - fix potential out-of-bounds read in ECDSA - fix std::bad_alloc when using ByteQueue in pipeline - fix missing CRYPTOPP_CXX17_EXCEPTIONS with Clang - fix potential out-of-bounds read in GCM mode - add configure.sh when preprocessor macros fail - fix potential out-of-bounds read in SipHash - fix compile error on POWER9 due to vec_xl_be - fix K233 curve on POWER8 - add Cirrus CI testing - fix broken encryption for some 64-bit ciphers - fix Android cpu-features.c using C++ compiler - disable RDRAND and RDSEED for some AMD processors - fix BLAKE2 hash calculation using Salt and Personalization - refresh Android and iOS build scripts - add XTS mode - fix circular dependency between misc.h and secblock.h - add Certificate interface - fix recursion in AES::Encryption without AESNI - add missing OID for ElGamal encryption - fix missing override in KeyDerivationFunction-derived classes - fix RDSEED assemble under MSVC - fix elliptic curve timing leaks (CVE-2019-14318) - add link-library variable to Makefiles - fix SIZE_MAX definition in misc.h - add GetWord64 and PutWord64 to BufferedTransformation - use HKDF in AutoSeededX917RNG::Reseed - fix Asan finding in VMAC on i686 in inline asm - fix undeclared identifier _mm_roti_epi64 on Gentoo - fix ECIES and GetSymmetricKeyLength - fix possible divide by zero in PKCS5_PBKDF2_HMAC - refine ASN.1 encoders and decoders - disable BMI2 code paths in Integer class - fix use of CRYPTOPP_CLANG_VERSION - add NEON SHA1, SHA256 and SHA512 from Cryptogams - add ARM SHA1, SHA256 and SHA512 from Cryptogams - make config.h more autoconf friendly - handle Clang triplet armv8l-unknown-linux-gnueabihf - fix reference binding to misaligned address in xed25519 - clear asserts in TestDataNameValuePairs&lt;/p&gt; &#xA;&lt;p&gt;8.2.0 - April 28, 2019 - minor release, no recompile of programs required - expanded community input and support * 56 unique contributors as of this release - use PowerPC unaligned loads and stores with Power8 - add SKIPJACK test vectors - fix SHAKE-128 and SHAKE-256 compile - removed IS_NEON from Makefile - fix Aarch64 build on Fedora 29 - fix missing GF2NT_233_Multiply_Reduce_CLMUL in FIPS DLL - add missing BLAKE2 constructors - fix missing BlockSize() in BLAKE2 classes&lt;/p&gt; &#xA;&lt;p&gt;8.1.0 - February 22, 2019 - minor release, no recompile of programs required - expanded community input and support * 56 unique contributors as of this release - fix OS X PowerPC builds with Clang - add Microsoft ARM64 support - fix iPhone Simulator build due to missing symbols - add CRYPTOPP_BUGGY_SIMD_LOAD_AND_STORE - add carryless multiplies for NIST b233 and k233 curves - fix OpenMP build due to use of OpenMP 4 with down-level compilers - add SignStream and VerifyStream for ed25519 and large files - fix missing AlgorithmProvider in PanamaHash - add SHAKE-128 and SHAKE-256 - fix AVX2 build due to _mm256_broadcastsi128_si256 - add IETF ChaCha, XChaCha, ChaChaPoly1305 and XChaChaPoly1305&lt;/p&gt; &#xA;&lt;p&gt;8.0.0 - December 28, 2018 - major release, recompile of programs required - expanded community input and support * 54 unique contributors as of this release - add x25519 key exchange and ed25519 signature scheme - add limited Asymmetric Key Package support from RFC 5958 - add Power9 DARN random number generator support - add CHAM, HC-128, HC-256, Hight, LEA, Rabbit, Simeck - fix FixedSizeAllocatorWithCleanup may be unaligned on some platforms - cutover to GNU Make-based cpu feature tests - rename files with dashes to underscores - fix LegacyDecryptor and LegacyDecryptorWithMAC use wrong MAC - fix incorrect AES/CBC decryption on Windows - avoid Singleton&#xA; &lt;t&gt;&#xA;   when possible, avoid std::call_once completely - fix SPARC alignment problems due to GetAlignmentOf&#xA;  &lt;t&gt;&#xA;   () on word64 - add ARM AES asm implementation from Cryptogams - remove CRYPTOPP_ALLOW_UNALIGNED_DATA_ACCESS support&#xA;  &lt;/t&gt;&#xA; &lt;/t&gt;&lt;/p&gt; &#xA;&lt;p&gt;June 2015 - Changing of the guard. Wei Dai turned the library over to the community. The first community release was Crypto++ 5.6.3. Wei is no longer involved with the daily operations of the project. Wei still provides guidance when we have questions.&lt;/p&gt; &#xA;&lt;p&gt;Originally written by Wei Dai, maintained by the Crypto++ Project&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ossrs/srs</title>
    <updated>2023-07-02T01:52:23Z</updated>
    <id>tag:github.com,2023-07-02:/ossrs/srs</id>
    <link href="https://github.com/ossrs/srs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SRS is a simple, high-efficiency, real-time video server supporting RTMP, WebRTC, HLS, HTTP-FLV, SRT, MPEG-DASH, and GB28181.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SRS(Simple Realtime Server)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://ossrs.net/gif/v1/sls.gif?site=github.com&amp;amp;path=/srs/develop&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://github.com/ossrs/srs/actions?query=workflow%3ACodeQL+branch%3Adevelop&#34;&gt;&lt;img src=&#34;https://github.com/ossrs/srs/actions/workflows/codeql-analysis.yml/badge.svg?branch=develop&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ossrs/srs/actions/workflows/release.yml?query=workflow%3ARelease&#34;&gt;&lt;img src=&#34;https://github.com/ossrs/srs/actions/workflows/release.yml/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ossrs/srs/actions?query=workflow%3ATest+branch%3Adevelop&#34;&gt;&lt;img src=&#34;https://github.com/ossrs/srs/actions/workflows/test.yml/badge.svg?branch=develop&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/ossrs/srs/tree/develop&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/ossrs/srs/branch/develop/graph/badge.svg?token=Zx2LhdtA39&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ossrs.net/lts/zh-cn/contact#discussion&#34;&gt;&lt;img src=&#34;https://ossrs.net/wiki/images/wechat-badge4.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/srs_server&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/srs_server?style=social&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/@srs_server&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/SRS-YouTube-red&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/yZ4BnPmHAd&#34;&gt;&lt;img src=&#34;https://badgen.net/discord/members/yZ4BnPmHAd&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2Fossrs%2Fsrs?ref=badge_small&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fossrs%2Fsrs.svg?type=small&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ossrs.net/lts/zh-cn/faq&#34;&gt;&lt;img src=&#34;https://ossrs.net/wiki/images/srs-faq.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://stackoverflow.com/questions/tagged/simple-realtime-server&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/srs/stackoverflow/orange?icon=terminal&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/srs-server/contribute&#34;&gt;&lt;img src=&#34;https://opencollective.com/srs-server/tiers/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/ossrs/srs/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/ossrs/srs&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cloud.digitalocean.com/droplets/new?appId=133468816&amp;amp;size=s-1vcpu-512mb-10gb&amp;amp;region=sgp1&amp;amp;image=ossrs-srs&amp;amp;type=applications&#34;&gt;&lt;img src=&#34;https://ossrs.net/wiki/images/do-btn-srs-125x20.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://api.securityscorecards.dev/projects/github.com/ossrs/srs&#34;&gt;&lt;img src=&#34;https://api.securityscorecards.dev/projects/github.com/ossrs/srs/badge&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/5619&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/5619/badge&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;SRS/6.0 (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/product#release60&#34;&gt;Hang&lt;/a&gt;) is a simple, high-efficiency, and real-time video server, supporting RTMP/WebRTC/HLS/HTTP-FLV/SRT/MPEG-DASH/GB28181, Linux/Windows/macOS, X86_64/ARMv7/AARCH64/M1/RISCV/LOONGARCH/MIPS, and essential &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/doc/Features.md#features&#34;&gt;features&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ossrs.net/wiki/images/SRS-SingleNode-4.0-hd.png&#34;&gt;&lt;img src=&#34;https://ossrs.net/wiki/images/SRS-SingleNode-4.0-sd.png?v=114&#34; alt=&#34;SRS Overview&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: For more details on the single-node architecture for SRS, please visit the following &lt;a href=&#34;https://www.figma.com/file/333POxVznQ8Wz1Rxlppn36/SRS-4.0-Server-Arch&#34;&gt;link&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;SRS is licenced under &lt;a href=&#34;https://github.com/ossrs/srs/raw/develop/LICENSE&#34;&gt;MIT&lt;/a&gt; or &lt;a href=&#34;https://spdx.org/licenses/MulanPSL-2.0.html&#34;&gt;MulanPSL-2.0&lt;/a&gt;. Please note that while &lt;a href=&#34;https://www.apache.org/legal/resolved.html#category-a&#34;&gt;MulanPSL-2.0 is compatible with Apache-2.0&lt;/a&gt;, some third-party libraries are distributed under their &lt;a href=&#34;https://ossrs.io/lts/en-us/license&#34;&gt;licenses&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;product&#34;&gt;&lt;/a&gt; &lt;a name=&#34;usage-docker&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/getting-started&#34;&gt;Getting Started&lt;/a&gt; or &lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/getting-started&#34;&gt;中文文档：起步&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;p&gt;To compile SRS from source:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone -b develop https://gitee.com/ossrs/srs.git &amp;amp;&amp;amp;&#xA;cd srs/trunk &amp;amp;&amp;amp; ./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; ./objs/srs -c conf/srs.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;http://localhost:8080/&#34;&gt;http://localhost:8080/&lt;/a&gt; to verify, and then stream using the following &lt;a href=&#34;https://ffmpeg.org/download.html&#34;&gt;FFmpeg&lt;/a&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ffmpeg -re -i ./doc/source.flv -c copy -f flv -y rtmp://localhost/live/livestream&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, stream by &lt;a href=&#34;https://obsproject.com/download&#34;&gt;OBS&lt;/a&gt; using the following configuration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Service: &lt;code&gt;Custom&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Server: &lt;code&gt;rtmp://localhost/live&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stream Key: &lt;code&gt;livestream&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Play the following streams using media players:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To play an RTMP stream with URL &lt;code&gt;rtmp://localhost/live/livestream&lt;/code&gt; on &lt;a href=&#34;https://www.videolan.org/&#34;&gt;VLC player&lt;/a&gt;, open the player, go to Media &amp;gt; Open Network Stream, enter the URL and click Play.&lt;/li&gt; &#xA; &lt;li&gt;You can play HTTP-FLV stream URL &lt;a href=&#34;http://localhost:8080/players/srs_player.html?autostart=true&amp;amp;stream=livestream.flv&#34;&gt;http://localhost:8080/live/livestream.flv&lt;/a&gt; on a webpage using the srs-player, an HTML5-based player.&lt;/li&gt; &#xA; &lt;li&gt;Use srs-player for playing HLS stream with URL &lt;a href=&#34;http://localhost:8080/players/srs_player.html?autostart=true&amp;amp;stream=livestream.m3u8&#34;&gt;http://localhost:8080/live/livestream.m3u8&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please note that to convert RTMP to WebRTC, you should use the file &lt;a href=&#34;https://github.com/ossrs/srs/issues/2728#issuecomment-964686152&#34;&gt;rtmp2rtc.conf&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use the srs-player to play the WebRTC stream with URL &lt;a href=&#34;http://localhost:8080/players/whep.html?autostart=true&#34;&gt;http://localhost:1985/rtc/v1/whip-play/?app=live&amp;amp;stream=livestream&lt;/a&gt; via WHEP.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: In addition to FFmpeg or OBS, it is possible to &lt;a href=&#34;http://localhost:8080/players/whip.html&#34;&gt;publish by H5&lt;/a&gt; via WHIP as well. To enable WebRTC to publish and convert it to RTMP, please refer to the wiki(&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/webrtc#rtc-to-rtmp&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/webrtc#rtc-to-rtmp&#34;&gt;EN&lt;/a&gt;) documentation. It is essential to ensure the candidate(&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/webrtc#config-candidate&#34;&gt;CN&lt;/a&gt; or &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/webrtc#config-candidate&#34;&gt;EN&lt;/a&gt;) is set correctly for WebRTC to avoid potential issues, as it can cause significant problems.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: It is highly recommended to run SRS directly with docker(&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/getting-started&#34;&gt;CN&lt;/a&gt; / &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/getting-started&#34;&gt;EN&lt;/a&gt;), CVM(&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/getting-started-cloud&#34;&gt;CN&lt;/a&gt; / &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/getting-started-cloud&#34;&gt;EN&lt;/a&gt;), or K8s(&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/getting-started-k8s&#34;&gt;CN&lt;/a&gt; / &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/getting-started-k8s&#34;&gt;EN&lt;/a&gt;). However, compiling SRS from source code is also possible and easy. For detailed instructions, please refer to the &#34;Getting Started&#34;(&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/getting-started&#34;&gt;CN&lt;/a&gt; / &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/getting-started&#34;&gt;EN&lt;/a&gt;) guide.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: If you require HTTPS for WebRTC and modern browsers, please refer to the HTTPS API(&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/http-api#https-api&#34;&gt;CN&lt;/a&gt; / &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/http-api#https-api&#34;&gt;EN&lt;/a&gt;), HTTPS Callback(&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/http-callback#https-callback&#34;&gt;CN&lt;/a&gt; / &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/http-callback#https-callback&#34;&gt;EN&lt;/a&gt;), and HTTPS Live Streaming(&lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/delivery-http-flv#https-flv-live-stream&#34;&gt;CN&lt;/a&gt; / &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/delivery-http-flv#https-flv-live-stream&#34;&gt;EN&lt;/a&gt;) documentation. Additionally, SRS works perfectly with an HTTPS proxy like Nginx.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a name=&#34;srs-40-wiki&#34;&gt;&lt;/a&gt; &lt;a name=&#34;wiki&#34;&gt;&lt;/a&gt; Please refer to the following wikis for more information:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;What are the steps to deliver RTMP streaming? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-rtmp&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-rtmp&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;What is the process for delivering WebRTC streaming? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/webrtc&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/webrtc&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;What are the steps to convert RTMP to HTTP-FLV streaming? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-http-flv&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-http-flv&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;How can RTMP be converted to HLS streaming? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-hls&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-hls&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;What is the best approach for delivering low-latency streaming? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-realtime&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-realtime&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;How can an RTMP Edge-Cluster be constructed? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-rtmp-cluster&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-rtmp-cluster&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;What is the process for building an RTMP Origin-Cluster? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-origin-cluster&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-origin-cluster&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;How can an HLS Edge-Cluster be set up?(&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-hls-cluster&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-hls-cluster&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here are some other important wikis:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Usage: What is the method for delivering DASH (Experimental)? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-dash&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-dash&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Usage: How can an RTMP stream be transcoded using FFMPEG? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-ffmpeg&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-ffmpeg&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Usage: What is the process for setting up an HTTP FLV Live Streaming Cluster? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-http-flvCluster&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-http-flvCluster&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Usage: How can HLS be delivered using an NGINX Cluster? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-hls-cluster&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-hls-cluster&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Usage: What steps are to ingest a file, stream, or device to RTMP? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-ingest&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-ingest&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Usage: How can a stream be forwarded to other servers? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/sample-forward&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/sample-forward&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Usage: What are the strategies for improving edge performance on multiple CPUs? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/docs/v5/doc/reuse-port&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/docs/v5/doc/reuse-port&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Usage: How can bugs be reported or contact be made with us? (&lt;a href=&#34;https://ossrs.net/lts/zh-cn/contact&#34;&gt;CN&lt;/a&gt;, &lt;a href=&#34;https://ossrs.io/lts/en-us/contact&#34;&gt;EN&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;AUTHORS&lt;/h2&gt; &#xA;&lt;p&gt;We highly appreciate all our contributors for their significant contributions that have made a remarkable difference. Thank you! 🙏&lt;/p&gt; &#xA;&lt;p&gt;If you wish to support this project financially, you can donate &lt;a href=&#34;https://opencollective.com/srs-server&#34;&gt;through Open Collective&lt;/a&gt;. We appreciate your contribution!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/srs-server/contribute/backer-34941/checkout?interval=month&amp;amp;amount=5&#34;&gt;&lt;img src=&#34;https://opencollective.com/srs-server/backers.svg?width=800&amp;amp;button=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/AUTHORS.md#toc&#34;&gt;TOC(Technical Oversight Committee)&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/AUTHORS.md#contributors&#34;&gt;contributors&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/winlinvip&#34;&gt;Winlin&lt;/a&gt;: Founder of the project, focusing on ST and Issues/PR. Responsible for architecture and maintenance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wenjiegit&#34;&gt;ZhaoWenjie&lt;/a&gt;: One of the earliest contributors, focusing on HDS and Windows. Has expertise in client technology.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/runner365&#34;&gt;ShiWei&lt;/a&gt;: Specializes in SRT and H.265, maintaining SRT and FLV patches for FFmpeg. An expert in codecs and FFmpeg.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xiaozhihong&#34;&gt;XiaoZhihong&lt;/a&gt;: Concentrates on WebRTC/QUIC and SRT, with expertise in network QoS. Contributed to ARM on ST and was the original contributor for WebRTC.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Bepartofyou&#34;&gt;WuPengqiang&lt;/a&gt;: Focused on H.265, initially contributed to the FFmpeg module in SRS for transcoding AAC with OPUS for WebRTC.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xialixin&#34;&gt;XiaLixin&lt;/a&gt;: Specializes in GB28181, with expertise in live streaming and WebRTC.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lipeng19811218&#34;&gt;LiPeng&lt;/a&gt;: Concentrates on WebRTC and contributes to memory management and smart pointers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chen-guanghua&#34;&gt;ChenGuanghua&lt;/a&gt;: Focused on WebRTC/QoS and introduced the Asan toolchain to SRS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/duiniuluantanqin&#34;&gt;ChenHaibo&lt;/a&gt;: Specializes in GB28181 and HTTP API, contributing to patches for FFmpeg with WHIP.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chundonglinlin&#34;&gt;ZhangJunqin&lt;/a&gt;: Focused on H.265, Prometheus Exporter, and API module.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A big &lt;code&gt;THANK YOU&lt;/code&gt; also goes to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/AUTHORS.md#contributors&#34;&gt;contributors&lt;/a&gt; of SRS.&lt;/li&gt; &#xA; &lt;li&gt;All friends of SRS for &lt;a href=&#34;https://ossrs.net/lts/zh-cn/product&#34;&gt;big supports&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://sourceforge.net/users/genes&#34;&gt;Genes&lt;/a&gt;, &lt;a href=&#34;http://sourceforge.net/users/mabbott&#34;&gt;Mabbott&lt;/a&gt; and &lt;a href=&#34;https://github.com/michaeltalyansky&#34;&gt;Michael Talyanksy&lt;/a&gt; for creating and introducing &lt;a href=&#34;https://github.com/ossrs/state-threads/tree/srs&#34;&gt;st&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We extend our heartfelt gratitude to the community for their contributions in identifying bugs and enhancing the project. To stay connected with us and keep contributing to our community, please follow the &lt;a href=&#34;https://github.com/ossrs/srs/contribute&#34;&gt;guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2Fossrs%2Fsrs?ref=badge_small&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fossrs%2Fsrs.svg?type=small&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;SRS is licenced under &lt;a href=&#34;https://github.com/ossrs/srs/raw/develop/LICENSE&#34;&gt;MIT&lt;/a&gt; or &lt;a href=&#34;https://spdx.org/licenses/MulanPSL-2.0.html&#34;&gt;MulanPSL-2.0&lt;/a&gt;. Please note that while &lt;a href=&#34;https://www.apache.org/legal/resolved.html#category-a&#34;&gt;MulanPSL-2.0 is compatible with Apache-2.0&lt;/a&gt;, some third-party libraries are distributed under their &lt;a href=&#34;https://ossrs.io/lts/en-us/license&#34;&gt;licenses&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2Fossrs%2Fsrs?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fossrs%2Fsrs.svg?type=large&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2023-05-14, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v5.0-b0&#34;&gt;Release v5.0-b0&lt;/a&gt;, v5.0-b0, 5.0 beta0, v5.0.155, 162600 lines.&lt;/li&gt; &#xA; &lt;li&gt;2023-03-23, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v5.0-a5&#34;&gt;Release v5.0-a5&lt;/a&gt;, v5.0-a5, 5.0 alpha5, v5.0.148, 162066 lines.&lt;/li&gt; &#xA; &lt;li&gt;2023-02-12, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v5.0-a4&#34;&gt;Release v5.0-a4&lt;/a&gt;, v5.0-a4, 5.0 alpha4, v5.0.141, 161897 lines.&lt;/li&gt; &#xA; &lt;li&gt;2023-01-02, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v5.0-a3&#34;&gt;Release v5.0-a3&lt;/a&gt;, v5.0-a3, 5.0 alpha3, v5.0.128, 161327 lines.&lt;/li&gt; &#xA; &lt;li&gt;2022-12-18, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v5.0-a2&#34;&gt;Release v5.0-a2&lt;/a&gt;, v5.0-a2, 5.0 alpha2, v5.0.112, 161233 lines.&lt;/li&gt; &#xA; &lt;li&gt;2022-12-01, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v5.0-a1&#34;&gt;Release v5.0-a1&lt;/a&gt;, v5.0-a1, 5.0 alpha1, v5.0.100, 160817 lines.&lt;/li&gt; &#xA; &lt;li&gt;2022-11-25, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v5.0-a0&#34;&gt;Release v5.0-a0&lt;/a&gt;, v5.0-a0, 5.0 alpha0, v5.0.98, 159813 lines.&lt;/li&gt; &#xA; &lt;li&gt;2022-11-22, Release &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v4.0-r4&#34;&gt;v4.0-r4&lt;/a&gt;, v4.0-r4, 4.0 release4, v4.0.268, 145482 lines.&lt;/li&gt; &#xA; &lt;li&gt;2022-09-16, Release &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v4.0-r3&#34;&gt;v4.0-r3&lt;/a&gt;, v4.0-r3, 4.0 release3, v4.0.265, 145328 lines.&lt;/li&gt; &#xA; &lt;li&gt;2022-08-24, Release &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v4.0-r2&#34;&gt;v4.0-r2&lt;/a&gt;, v4.0-r2, 4.0 release2, v4.0.257, 144890 lines.&lt;/li&gt; &#xA; &lt;li&gt;2022-06-29, Release &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v4.0-r1&#34;&gt;v4.0-r1&lt;/a&gt;, v4.0-r1, 4.0 release1, v4.0.253, 144680 lines.&lt;/li&gt; &#xA; &lt;li&gt;2022-06-11, Release &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v4.0-r0&#34;&gt;v4.0-r0&lt;/a&gt;, v4.0-r0, 4.0 release0, v4.0.252, 144680 lines.&lt;/li&gt; &#xA; &lt;li&gt;2020-06-27, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v3.0-r0&#34;&gt;Release v3.0-r0&lt;/a&gt;, 3.0 release0, 3.0.141, 122674 lines.&lt;/li&gt; &#xA; &lt;li&gt;2020-02-02, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v3.0-b0&#34;&gt;Release v3.0-b0&lt;/a&gt;, 3.0 beta0, 3.0.112, 121709 lines.&lt;/li&gt; &#xA; &lt;li&gt;2019-10-04, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v3.0-a0&#34;&gt;Release v3.0-a0&lt;/a&gt;, 3.0 alpha0, 3.0.56, 107946 lines.&lt;/li&gt; &#xA; &lt;li&gt;2017-03-03, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v2.0-r0&#34;&gt;Release v2.0-r0&lt;/a&gt;, 2.0 release0, 2.0.234, 86373 lines.&lt;/li&gt; &#xA; &lt;li&gt;2016-08-06, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v2.0-b0&#34;&gt;Release v2.0-b0&lt;/a&gt;, 2.0 beta0, 2.0.210, 89704 lines.&lt;/li&gt; &#xA; &lt;li&gt;2015-08-23, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v2.0-a0&#34;&gt;Release v2.0-a0&lt;/a&gt;, 2.0 alpha0, 2.0.185, 89022 lines.&lt;/li&gt; &#xA; &lt;li&gt;2014-12-05, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v1.0-r0&#34;&gt;Release v1.0-r0&lt;/a&gt;, all bug fixed, 1.0.10, 59391 lines.&lt;/li&gt; &#xA; &lt;li&gt;2014-10-09, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v0.9.8&#34;&gt;Release v0.9.8&lt;/a&gt;, all bug fixed, 1.0.0, 59316 lines.&lt;/li&gt; &#xA; &lt;li&gt;2014-04-07, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v0.9.1&#34;&gt;Release v0.9.1&lt;/a&gt;, live streaming. 30000 lines.&lt;/li&gt; &#xA; &lt;li&gt;2013-10-23, &lt;a href=&#34;https://github.com/ossrs/srs/releases/tag/v0.1.0&#34;&gt;Release v0.1.0&lt;/a&gt;, rtmp. 8287 lines.&lt;/li&gt; &#xA; &lt;li&gt;2013-10-17, Created.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/doc/Features.md#features&#34;&gt;FEATURES&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;history&#34;&gt;&lt;/a&gt; &lt;a name=&#34;change-logs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/doc/CHANGELOG.md#changelog&#34;&gt;CHANGELOG&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/doc/PERFORMANCE.md#performance&#34;&gt;PERFORMANCE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/doc/Architecture.md#architecture&#34;&gt;ARCHITECTURE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Ports&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/doc/Resources.md#ports&#34;&gt;PORTS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;APIs&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/doc/Resources.md#apis&#34;&gt;APIS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Mirrors&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/doc/Resources.md#mirrors&#34;&gt;MIRRORS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Dockers&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/ossrs/srs/develop/trunk/doc/Dockers.md&#34;&gt;DOCKERS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Beijing, 2013.10&lt;br&gt; Winlin&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>OpenTTD/OpenTTD</title>
    <updated>2023-07-02T01:52:23Z</updated>
    <id>tag:github.com,2023-07-02:/OpenTTD/OpenTTD</id>
    <link href="https://github.com/OpenTTD/OpenTTD" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenTTD is an open source simulation game based upon Transport Tycoon Deluxe&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenTTD&lt;/h1&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;1.0) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#10-about&#34;&gt;About&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;1.1) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#11-downloading-openttd&#34;&gt;Downloading OpenTTD&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;1.2) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#12-openttd-gameplay-manual&#34;&gt;OpenTTD gameplay manual&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;1.3) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#13-supported-platforms&#34;&gt;Supported platforms&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;1.4) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#14-installing-and-running-openttd&#34;&gt;Installing and running OpenTTD&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;1.5) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#15-add-on-content--mods&#34;&gt;Add-on content / mods&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;1.6) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#16-openttd-directories&#34;&gt;OpenTTD directories&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;1.7) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#17-compiling-openttd&#34;&gt;Compiling OpenTTD&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2.0) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#20-contact-and-community&#34;&gt;Contact and community&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;2.1) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#21-contributing-to-openttd&#34;&gt;Contributing to OpenTTD&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;2.2) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#22-reporting-bugs&#34;&gt;Reporting bugs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;2.3) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#23-translating&#34;&gt;Translating&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;3.0) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#30-licensing&#34;&gt;Licensing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;4.0) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#40-credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;1.0) About&lt;/h2&gt; &#xA;&lt;p&gt;OpenTTD is a transport simulation game based upon the popular game Transport Tycoon Deluxe, written by Chris Sawyer. It attempts to mimic the original game as closely as possible while extending it with new features.&lt;/p&gt; &#xA;&lt;p&gt;OpenTTD is licensed under the GNU General Public License version 2.0, but includes some 3rd party software under different licenses. See the section &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#30-licensing&#34;&gt;&#34;Licensing&#34;&lt;/a&gt; below for details.&lt;/p&gt; &#xA;&lt;h2&gt;1.1) Downloading OpenTTD&lt;/h2&gt; &#xA;&lt;p&gt;OpenTTD can be downloaded from the &lt;a href=&#34;https://www.openttd.org/&#34;&gt;official OpenTTD website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Both &#39;stable&#39; and &#39;nightly&#39; versions are available for download:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;most people should choose the &#39;stable&#39; version, as this has been more extensively tested&lt;/li&gt; &#xA; &lt;li&gt;the &#39;nightly&#39; version includes the latest changes and features, but may sometimes be less reliable&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;OpenTTD is also available for free on &lt;a href=&#34;https://store.steampowered.com/app/1536610/OpenTTD/&#34;&gt;Steam&lt;/a&gt;, &lt;a href=&#34;https://www.gog.com/game/openttd&#34;&gt;GOG.com&lt;/a&gt;, and the &lt;a href=&#34;https://www.microsoft.com/p/openttd-official/9ncjg5rvrr1c&#34;&gt;Microsoft Store&lt;/a&gt;. On some platforms OpenTTD will be available via your OS package manager or a similar service.&lt;/p&gt; &#xA;&lt;h2&gt;1.2) OpenTTD gameplay manual&lt;/h2&gt; &#xA;&lt;p&gt;OpenTTD has a &lt;a href=&#34;https://wiki.openttd.org/&#34;&gt;community-maintained wiki&lt;/a&gt;, including a gameplay manual and tips.&lt;/p&gt; &#xA;&lt;h2&gt;1.3) Supported platforms&lt;/h2&gt; &#xA;&lt;p&gt;OpenTTD has been ported to several platforms and operating systems.&lt;/p&gt; &#xA;&lt;p&gt;The currently supported platforms are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux (SDL (OpenGL and non-OpenGL))&lt;/li&gt; &#xA; &lt;li&gt;macOS (universal) (Cocoa)&lt;/li&gt; &#xA; &lt;li&gt;Windows (Win32 GDI / OpenGL)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Other platforms may also work (in particular various BSD systems), but we don&#39;t actively test or maintain these.&lt;/p&gt; &#xA;&lt;h3&gt;1.3.1) Legacy support&lt;/h3&gt; &#xA;&lt;p&gt;Platforms, languages and compilers change. We&#39;ll keep support going on old platforms as long as someone is interested in supporting them, except where it means the project can&#39;t move forward to keep up with language and compiler features.&lt;/p&gt; &#xA;&lt;p&gt;We guarantee that every revision of OpenTTD will be able to load savegames from every older revision (excepting where the savegame is corrupt). Please report a bug if you find a save that doesn&#39;t load.&lt;/p&gt; &#xA;&lt;h2&gt;1.4) Installing and running OpenTTD&lt;/h2&gt; &#xA;&lt;p&gt;OpenTTD is usually straightforward to install, but for more help the wiki &lt;a href=&#34;https://wiki.openttd.org/en/Manual/Installation&#34;&gt;includes an installation guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;OpenTTD needs some additional graphics and sound files to run.&lt;/p&gt; &#xA;&lt;p&gt;For some platforms these will be downloaded during the installation process if required.&lt;/p&gt; &#xA;&lt;p&gt;For some platforms, you will need to refer to &lt;a href=&#34;https://wiki.openttd.org/en/Manual/Installation&#34;&gt;the installation guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;1.4.1) Free graphics and sound files&lt;/h3&gt; &#xA;&lt;p&gt;The free data files, split into OpenGFX for graphics, OpenSFX for sounds and OpenMSX for music can be found at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.openttd.org/downloads/opengfx-releases/latest&#34;&gt;https://www.openttd.org/downloads/opengfx-releases/latest&lt;/a&gt; for OpenGFX&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.openttd.org/downloads/opensfx-releases/latest&#34;&gt;https://www.openttd.org/downloads/opensfx-releases/latest&lt;/a&gt; for OpenSFX&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.openttd.org/downloads/openmsx-releases/latest&#34;&gt;https://www.openttd.org/downloads/openmsx-releases/latest&lt;/a&gt; for OpenMSX&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please follow the readme of these packages about the installation procedure. The Windows installer can optionally download and install these packages.&lt;/p&gt; &#xA;&lt;h3&gt;1.4.2) Original Transport Tycoon Deluxe graphics and sound files&lt;/h3&gt; &#xA;&lt;p&gt;If you want to play with the original Transport Tycoon Deluxe data files you have to copy the data files from the CD-ROM into the baseset/ directory. It does not matter whether you copy them from the DOS or Windows version of Transport Tycoon Deluxe. The Windows install can optionally copy these files.&lt;/p&gt; &#xA;&lt;p&gt;You need to copy the following files:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;sample.cat&lt;/li&gt; &#xA; &lt;li&gt;trg1r.grf or TRG1.GRF&lt;/li&gt; &#xA; &lt;li&gt;trgcr.grf or TRGC.GRF&lt;/li&gt; &#xA; &lt;li&gt;trghr.grf or TRGH.GRF&lt;/li&gt; &#xA; &lt;li&gt;trgir.grf or TRGI.GRF&lt;/li&gt; &#xA; &lt;li&gt;trgtr.grf or TRGT.GRF&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.4.3) Original Transport Tycoon Deluxe music&lt;/h3&gt; &#xA;&lt;p&gt;If you want the Transport Tycoon Deluxe music, copy the appropriate files from the original game into the baseset folder.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TTD for Windows: All files in the gm/ folder (gm_tt00.gm up to gm_tt21.gm)&lt;/li&gt; &#xA; &lt;li&gt;TTD for DOS: The GM.CAT file&lt;/li&gt; &#xA; &lt;li&gt;Transport Tycoon Original: The GM.CAT file, but rename it to GM-TTO.CAT&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;1.5) Add-on content / mods&lt;/h2&gt; &#xA;&lt;p&gt;OpenTTD features multiple types of add-on content, which modify gameplay in different ways.&lt;/p&gt; &#xA;&lt;p&gt;Most types of add-on content can be downloaded within OpenTTD via the &#39;Check Online Content&#39; button in the main menu.&lt;/p&gt; &#xA;&lt;p&gt;Add-on content can also be installed manually, but that&#39;s more complicated; the &lt;a href=&#34;https://wiki.openttd.org/&#34;&gt;OpenTTD wiki&lt;/a&gt; may offer help with that, or the &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/docs/directory_structure.md&#34;&gt;OpenTTD directory structure guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;1.6) OpenTTD directories&lt;/h3&gt; &#xA;&lt;p&gt;OpenTTD uses its own directory structure to store game data, add-on content etc.&lt;/p&gt; &#xA;&lt;p&gt;For more information, see the &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/docs/directory_structure.md&#34;&gt;directory structure guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;1.7) Compiling OpenTTD&lt;/h3&gt; &#xA;&lt;p&gt;If you want to compile OpenTTD from source, instructions can be found in &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/COMPILING.md&#34;&gt;COMPILING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;2.0) Contact and Community&lt;/h2&gt; &#xA;&lt;p&gt;&#39;Official&#39; channels&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.openttd.org&#34;&gt;OpenTTD website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/openttd&#34;&gt;OpenTTD official Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;IRC chat using #openttd on irc.oftc.net &lt;a href=&#34;https://wiki.openttd.org/en/Development/IRC%20channel&#34;&gt;more info about our irc channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OpenTTD/&#34;&gt;OpenTTD on Github&lt;/a&gt; for code repositories and for reporting issues&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.openttd.org/&#34;&gt;forum.openttd.org&lt;/a&gt; - the primary community forum site for discussing OpenTTD and related games&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.openttd.org/&#34;&gt;OpenTTD wiki&lt;/a&gt; community-maintained wiki, including topics like gameplay guide, detailed explanation of some game mechanics, how to use add-on content (mods) and much more&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&#39;Unofficial&#39; channels&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;the OpenTTD wiki has a &lt;a href=&#34;https://wiki.openttd.org/en/Community/Community&#34;&gt;page listing OpenTTD communities&lt;/a&gt; including some in languages other than English&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2.1) Contributing to OpenTTD&lt;/h3&gt; &#xA;&lt;p&gt;We welcome contributors to OpenTTD. More information for contributors can be found in &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2.2) Reporting bugs&lt;/h3&gt; &#xA;&lt;p&gt;Good bug reports are very helpful. We have a &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/CONTRIBUTING.md#bug-reports&#34;&gt;guide to reporting bugs&lt;/a&gt; to help with this.&lt;/p&gt; &#xA;&lt;p&gt;Desyncs in multiplayer are complex to debug and report (some software development skils are required). Instructions can be found in &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/docs/debugging_desyncs.md&#34;&gt;debugging and reporting desyncs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;2.3) Translating&lt;/h3&gt; &#xA;&lt;p&gt;OpenTTD is translated into many languages. Translations are added and updated via the &lt;a href=&#34;https://translator.openttd.org&#34;&gt;online translation tool&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;3.0) Licensing&lt;/h2&gt; &#xA;&lt;p&gt;OpenTTD is licensed under the GNU General Public License version 2.0. For the complete license text, see the file &#39;&lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/COPYING.md&#34;&gt;COPYING.md&lt;/a&gt;&#39;. This license applies to all files in this distribution, except as noted below.&lt;/p&gt; &#xA;&lt;p&gt;The squirrel implementation in &lt;code&gt;src/3rdparty/squirrel&lt;/code&gt; is licensed under the Zlib license. See &lt;code&gt;src/3rdparty/squirrel/COPYRIGHT&lt;/code&gt; for the complete license text.&lt;/p&gt; &#xA;&lt;p&gt;The md5 implementation in &lt;code&gt;src/3rdparty/md5&lt;/code&gt; is licensed under the Zlib license. See the comments in the source files in &lt;code&gt;src/3rdparty/md5&lt;/code&gt; for the complete license text.&lt;/p&gt; &#xA;&lt;p&gt;The fmt implementation in &lt;code&gt;src/3rdparty/fmt&lt;/code&gt; is licensed under the MIT license. See &lt;code&gt;src/3rdparty/fmt/LICENSE.rst&lt;/code&gt; for the complete license text.&lt;/p&gt; &#xA;&lt;p&gt;The catch2 implementation in &lt;code&gt;src/3rdparty/catch2&lt;/code&gt; is licensed under the Boost Software License, Version 1.0. See &lt;code&gt;src/3rdparty/catch2/LICENSE.txt&lt;/code&gt; for the complete license text.&lt;/p&gt; &#xA;&lt;p&gt;The icu scriptrun implementation in &lt;code&gt;src/3rdparty/icu&lt;/code&gt; is licensed under the Unicode license. See &lt;code&gt;src/3rdparty/icu/LICENSE&lt;/code&gt; for the complete license text.&lt;/p&gt; &#xA;&lt;h2&gt;4.0 Credits&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/CREDITS.md&#34;&gt;CREDITS.md&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>