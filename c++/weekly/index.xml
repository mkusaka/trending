<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-24T01:47:18Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cocos2d/cocos2d-x</title>
    <updated>2023-09-24T01:47:18Z</updated>
    <id>tag:github.com,2023-09-24:/cocos2d/cocos2d-x</id>
    <link href="https://github.com/cocos2d/cocos2d-x" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cocos2d-x is a suite of open-source, cross-platform, game-development tools utilized by millions of developers across the globe. Its core has evolved to serve as the foundation for Cocos Creator 1.x &amp; 2.x.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;http://www.cocos2d-x.org/attachments/801/cocos2dx_portrait.png&#34; width=&#34;200&#34;&gt; &#xA;&lt;h1&gt;cocos2d-x&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Win32&lt;/th&gt; &#xA;   &lt;th&gt;Others&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ci.appveyor.com/project/minggo/cocos2d-x/branch/v4&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/nlgirox464j6ldg5/branch/v4?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://travis-ci.org/cocos2d/cocos2d-x&#34;&gt;&lt;img src=&#34;https://travis-ci.org/cocos2d/cocos2d-x.svg?branch=v4&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.cocos.com/en/cocos2d-x&#34; title=&#34;cocos2d-x&#34;&gt;cocos2d-x&lt;/a&gt; is a multi-platform framework for building 2d games, interactive books, demos and other graphical applications. It is based on &lt;strong&gt;cocos2d-iphone&lt;/strong&gt;, but instead of using Objective-C, it uses C++. It works on iOS, Android, macOS, Windows and Linux.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Cocos2d-x Framework Architecture&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cocos2d/cocos2d-x/v4/docs/framework_architecture_v4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;cocos2d-x is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fast&lt;/li&gt; &#xA; &lt;li&gt;Free&lt;/li&gt; &#xA; &lt;li&gt;Easy to use&lt;/li&gt; &#xA; &lt;li&gt;Community supported&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Git user attention&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repo from GitHub.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  $ git clone https://github.com/cocos2d/cocos2d-x.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;After cloning the repo, please execute &lt;code&gt;download-deps.py&lt;/code&gt; to download and install dependencies.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  $ cd cocos2d-x&#xA;  cocos2d-x $ python download-deps.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;After running &lt;code&gt;download-deps.py&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  cocos2d-x $ git submodule update --init&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Download stable versions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cocos2d-x.org/download&#34;&gt;Cocos2d-x stable versions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentations and samples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.cocos2d-x.org/&#34;&gt;All Docs in a single place!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.cocos2d-x.org/api-ref/index.html&#34;&gt;Online API Reference&lt;/a&gt; &lt;em&gt;Note that Cocos2d-x and Cocos Creator have different API set&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.cocos2d-x.org/cocos2d-x/v4/en/basic_concepts/&#34;&gt;Programmers Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cocos2d/cocos2d-x/raw/v4/docs/RELEASE_NOTES.md&#34;&gt;Latest Release Note&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cocos2d/cocos2d-x/raw/v4/CHANGELOG&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Main features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Scene management (workflow)&lt;/li&gt; &#xA; &lt;li&gt;Transitions between scenes&lt;/li&gt; &#xA; &lt;li&gt;Sprites and Sprite Sheets&lt;/li&gt; &#xA; &lt;li&gt;Effects: Lens, Ripple, Waves, Liquid, etc.&lt;/li&gt; &#xA; &lt;li&gt;Actions (behaviours): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Transformation Actions: Move, Rotate, Scale, Fade, Tint, etc.&lt;/li&gt; &#xA;   &lt;li&gt;Composable actions: Sequence, Spawn, Repeat, Reverse&lt;/li&gt; &#xA;   &lt;li&gt;Ease Actions: Exp, Sin, Cubic, Elastic, etc.&lt;/li&gt; &#xA;   &lt;li&gt;Misc actions: CallFunc, OrbitCamera, Follow, Tween&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Basic menus and buttons&lt;/li&gt; &#xA; &lt;li&gt;Integrated with physics engines: &lt;a href=&#34;http://www.box2d.org&#34; title=&#34;Box2D&#34;&gt;Box2d&lt;/a&gt; and &lt;a href=&#34;http://www.chipmunk-physics.net&#34; title=&#34;Chipmunk2D&#34;&gt;Chipmunk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Particle system&lt;/li&gt; &#xA; &lt;li&gt;Skeleton Animations: &lt;a href=&#34;http://esotericsoftware.com/&#34; title=&#34;http://esotericsoftware.com/&#34;&gt;Spine&lt;/a&gt; and Armature support&lt;/li&gt; &#xA; &lt;li&gt;Fonts: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Fast font rendering using Fixed and Variable width fonts&lt;/li&gt; &#xA;   &lt;li&gt;Support for .ttf fonts&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Tile Map support: Orthogonal, Isometric and Hexagonal&lt;/li&gt; &#xA; &lt;li&gt;Parallax scrolling&lt;/li&gt; &#xA; &lt;li&gt;Motion Streak&lt;/li&gt; &#xA; &lt;li&gt;Render To Texture&lt;/li&gt; &#xA; &lt;li&gt;Touch/Accelerometer on mobile devices&lt;/li&gt; &#xA; &lt;li&gt;Touch/Mouse/Keyboard on desktop&lt;/li&gt; &#xA; &lt;li&gt;Sound Engine support&lt;/li&gt; &#xA; &lt;li&gt;Integrated Slow motion/Fast forward&lt;/li&gt; &#xA; &lt;li&gt;Fast and compressed textures: PVR compressed and uncompressed textures, ETC1 compressed textures, and more&lt;/li&gt; &#xA; &lt;li&gt;Resolution Independent&lt;/li&gt; &#xA; &lt;li&gt;Language: C++, with Lua and JavaScript bindings&lt;/li&gt; &#xA; &lt;li&gt;Open Source Commercial Friendly(MIT): Compatible with open and closed source projects&lt;/li&gt; &#xA; &lt;li&gt;OpenGL ES 2.0 (mobile) / OpenGL 2.1 (desktop) / metal(macos and iOS) based&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mac OS X 10.7+, Xcode 8+&lt;/li&gt; &#xA; &lt;li&gt;or Ubuntu 14.04+, CMake 3.1+&lt;/li&gt; &#xA; &lt;li&gt;or Windows 7+, VS 2015&lt;/li&gt; &#xA; &lt;li&gt;Python 2.7.5+(NOT Python 3)&lt;/li&gt; &#xA; &lt;li&gt;NDK r16+ is required to build Android games&lt;/li&gt; &#xA; &lt;li&gt;Android Studio 3.0.0+ to build Android games(tested with 3.0.0)&lt;/li&gt; &#xA; &lt;li&gt;JRE or JDK 1.6+ is required for web publishing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Runtime Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS 8.0+ for iPhone / iPad games&lt;/li&gt; &#xA; &lt;li&gt;Android 3.0.0+ for Android&lt;/li&gt; &#xA; &lt;li&gt;OS X v10.9+ for Mac games&lt;/li&gt; &#xA; &lt;li&gt;Windows 7+ for Win games&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Environment Setup&lt;/h2&gt; &#xA;&lt;p&gt;Should set up environment before starting a new game or running tests&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd cocos2d-x&#xA;$ ./setup.py&#xA;$ source FILE_TO_SAVE_SYSTEM_VARIABLE&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Should invoke this script if using linux system&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd cocos2d-x&#xA;$ ./install-linux-deps.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running Tests&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd cocos2d-x&#xA;$ mkdir build&#xA;$ cd build&#xA;$ cocos run --proj-dir .. -p [mac|win32|android|linux|ios]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to start a new game&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd cocos2d-x&#xA;$ ./setup.py&#xA;$ source FILE_TO_SAVE_SYSTEM_VARIABLE&#xA;$ cocos new MyGame -p com.your_company.mygame -l cpp -d NEW_PROJECTS_DIR&#xA;$ cd NEW_PROJECTS_DIR/MyGame&#xA;$ mkdir build&#xA;$ cd build&#xA;$ cocos run --proj-dir .. -p [mac|win32|android|linux|ios]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also create a Lua project with &lt;code&gt;-l lua&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Using IDE&lt;/h2&gt; &#xA;&lt;p&gt;If need to debug program, then it is more convinent to use IDE to run and debug it. All platforms other than Android can use CMake to generate corresponding project file. Can refer to &lt;a href=&#34;https://raw.githubusercontent.com/cocos2d/cocos2d-x/v4/cmake/README.md&#34;&gt;Detail CMake Guide&lt;/a&gt; for detail information.&lt;/p&gt; &#xA;&lt;p&gt;For Android, the Android Studio project file lies in &lt;code&gt;PROJECT_DIR/proj.android&lt;/code&gt;. Can just use Android Studio to import the exsting project file.&lt;/p&gt; &#xA;&lt;h2&gt;Learning Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.cocos2d-x.org/cocos2d-x/v4/en/basic_concepts/&#34;&gt;Programmers Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/guide/components/fundamentals.html&#34;&gt;Android Fundamentals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.gamefromscratch.com/page/Cocos2d-x-CPP-Game-Programming-Tutorial-Series.aspx&#34;&gt;Games From Scratch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MakeSchool?utf8=%E2%9C%93&amp;amp;q=cocos2d&amp;amp;type=&amp;amp;language=&#34;&gt;Make School Tutorials&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Spreading the word!&lt;/h2&gt; &#xA;&lt;p&gt;You can help us spread the word about cocos2d-x! We would surely appreciate it!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Twitter: &lt;a href=&#34;https://twitter.com/CocosEngine&#34;&gt;@CocosEngine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Facebook: &lt;a href=&#34;https://www.facebook.com/CocosEngine&#34;&gt;https://www.facebook.com/CocosEngine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;YouTube: &lt;a href=&#34;https://www.youtube.com/cocosengine&#34;&gt;https://www.youtube.com/cocosengine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Weibo: &lt;a href=&#34;https://weibo.com/cocos2dx&#34;&gt;@Cocos引擎&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;bilibili: &lt;a href=&#34;https://space.bilibili.com/491120849&#34;&gt;https://space.bilibili.com/491120849&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Where to get help&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discuss.cocos2d-x.org/c/cocos2d-x/21&#34;&gt;English Forums&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.cocos.org/c/cocos2d-x/16&#34;&gt;中文社区&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cocos2d/cocos2d-x/issues&#34;&gt;Bug Tracker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.cocos2d-x.org/api-ref/index.html&#34;&gt;API Reference&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cocos2d/cocos2d-x/raw/v4/docs/RELEASE_NOTES.md&#34;&gt;Latest Release Note&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cocos2d/cocos2d-x/raw/v4/CHANGELOG&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/pVqab4K&#34;&gt;Discord Channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cpp-tests&lt;/code&gt; project. This project is our basis for testing. Use this project to learn how we implement the functionality of the engine. This project is located in &lt;strong&gt;cocos2d-x_root/build.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing to the Project&lt;/h2&gt; &#xA;&lt;p&gt;Cocos2d-x is licensed under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;. We welcome participation!&lt;/p&gt; &#xA;&lt;p&gt;Did you find a bug? Do you have feature request? Do you want to merge a feature?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cocos2d/cocos2d-x/raw/v3/CONTRIBUTING.md&#34;&gt;contributing to cocos2d-x&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Embrace the Future: Switch to Cocos Creator for a Better Experience&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.cocos.com/en/creator&#34;&gt;Cocos Creator&lt;/a&gt; is the new generation of Cocos game engine with a full featured editor and content creation friendly workflow. It supports all major platforms allowing games to be quickly released for the web, iOS, Android, Windows, Mac, and various mini-game platforms. Millions of developers have built 2D / 3D experiences, from hardcore games to web instant entertainment. A pure JavaScript-developed engine runtime is available on the web and mini-game platforms for better performance and smaller packages. On other native platforms, C++ is used to implement the underlying framework, providing greater operational efficiency. The engine is completely &lt;a href=&#34;https://github.com/cocos/cocos-engine&#34;&gt;open source&lt;/a&gt;, and retains the advantages of Cocos2d-x which includes high performance, customizability, ease for debugging, easy to learn, and small package size.&lt;/p&gt; &#xA;&lt;p&gt;Therefore, we no longer recommend new users to start with Cocos2d-x. Instead, please use the brand-new &lt;a href=&#34;https://www.cocos.com/en/creator&#34;&gt;Cocos Creator&lt;/a&gt; for project development to enjoy the best editor and 3D support.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>FlaxEngine/FlaxEngine</title>
    <updated>2023-09-24T01:47:18Z</updated>
    <id>tag:github.com,2023-09-24:/FlaxEngine/FlaxEngine</id>
    <link href="https://github.com/FlaxEngine/FlaxEngine" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flax Engine – multi-platform 3D game engine&lt;/p&gt;&lt;hr&gt;&lt;img align=&#34;left&#34; src=&#34;https://raw.githubusercontent.com/FlaxEngine/FlaxEngine/master/Development/Images/Logo.png&#34; width=&#34;100px&#34;&gt; &#xA;&lt;h1&gt;Flax Engine&lt;/h1&gt; &#xA;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Flax.FlaxVS&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/vs-extension-green.svg?sanitize=true&#34;&gt;&lt;/a&gt; &#xA;&lt;a href=&#34;https://flaxengine.com/discord&#34;&gt;&lt;img src=&#34;https://discordapp.com/api/guilds/437989205315158016/widget.png&#34;&gt;&lt;/a&gt; &#xA;&lt;p&gt;Flax Engine is a high quality modern 3D game engine written in C++ and C#. From stunning graphics to powerful scripts - Flax can give everything for your games. Designed for fast workflow with many ready to use features waiting for you right now. To learn more see the website (&lt;a href=&#34;https://flaxengine.com&#34;&gt;www.flaxengine.com&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;This repository contains full source code of the Flax Engine (excluding NDA-protected platforms support). Anyone is welcome to contribute or use the modified source in Flax-based games.&lt;/p&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flaxengine.com&#34;&gt;Homepage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flaxengine.com/blog&#34;&gt;Dev Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.flaxengine.com&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.flaxengine.com&#34;&gt;Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://trello.com/b/NQjLXRCP/flax-roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Screenshots&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/FlaxEngine/FlaxEngine/master/Development/Images/flax-pic-2.jpg&#34; alt=&#34;pbr-rendering&#34; title=&#34;PBR Rendering and Global Illumination&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/FlaxEngine/FlaxEngine/master/Development/Images/flax-pic-1.jpg&#34; alt=&#34;rendering&#34; title=&#34;Rendering&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/FlaxEngine/FlaxEngine/master/Development/Images/flax-pic-3.jpg&#34; alt=&#34;performance&#34; title=&#34;High Performance&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Getting started&lt;/h1&gt; &#xA;&lt;p&gt;Follow the instructions below to compile and run the engine from source.&lt;/p&gt; &#xA;&lt;h2&gt;Windows&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install Visual Studio 2022 or newer&lt;/li&gt; &#xA; &lt;li&gt;Install Windows 8.1 SDK or newer (via Visual Studio Installer)&lt;/li&gt; &#xA; &lt;li&gt;Install Microsoft Visual C++ 2015 v140 toolset or newer (via Visual Studio Installer)&lt;/li&gt; &#xA; &lt;li&gt;Install .NET 7 SDK for &lt;strong&gt;Windows x64&lt;/strong&gt; (via Visual Studio Installer or &lt;a href=&#34;https://dotnet.microsoft.com/en-us/download/dotnet/7.0&#34;&gt;from web&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Install Git with LFS&lt;/li&gt; &#xA; &lt;li&gt;Clone repo (with LFS)&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;strong&gt;GenerateProjectFiles.bat&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;Flax.sln&lt;/code&gt; and set solution configuration to &lt;strong&gt;Editor.Development&lt;/strong&gt; and solution platform to &lt;strong&gt;Win64&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Set Flax (C++) or FlaxEngine (C#) as startup project&lt;/li&gt; &#xA; &lt;li&gt;Compile Flax project (hit F7 or CTRL+Shift+B)&lt;/li&gt; &#xA; &lt;li&gt;Optionally set Debug Type to &lt;strong&gt;Managed Only (.NET Core)&lt;/strong&gt; to debug C#-only, or &lt;strong&gt;Mixed (.NET Core)&lt;/strong&gt; to debug both C++ and C#&lt;/li&gt; &#xA; &lt;li&gt;Run Flax (hit F5 key)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Linux&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install Visual Studio Code&lt;/li&gt; &#xA; &lt;li&gt;Install .NET 7 SDK (&lt;a href=&#34;https://dotnet.microsoft.com/en-us/download/dotnet/7.0&#34;&gt;https://dotnet.microsoft.com/en-us/download/dotnet/7.0&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ubuntu: &lt;code&gt;sudo apt install dotnet-sdk-7.0&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install Vulkan SDK (&lt;a href=&#34;https://vulkan.lunarg.com/&#34;&gt;https://vulkan.lunarg.com/&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ubuntu: &lt;code&gt;sudo apt install vulkan-sdk&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Arch: &lt;code&gt;sudo pacman -S spirv-tools vulkan-headers vulkan-tools vulkan-validation-layers&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install Git with LFS &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ubuntu: &lt;code&gt;sudo apt-get install git git-lfs&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Arch: &lt;code&gt;sudo pacman -S git git-lfs&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;git-lfs install&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install the required packages: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ubuntu: &lt;code&gt;sudo apt-get install libx11-dev libxcursor-dev libxinerama-dev zlib1g-dev&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Arch: &lt;code&gt;sudo pacman -S base-devel libx11 libxcursor libxinerama zlib&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install Clang compiler (version 6 or later): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ubuntu: &lt;code&gt;sudo apt-get install clang lldb lld&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Arch: &lt;code&gt;sudo pacman -S clang lldb lld&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Clone the repository (with LFS)&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./GenerateProjectFiles.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open workspace with Visual Code&lt;/li&gt; &#xA; &lt;li&gt;Build and run (configuration and task named &lt;code&gt;Flax|Editor.Linux.Development|x64&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mac&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install XCode&lt;/li&gt; &#xA; &lt;li&gt;Install .NET 7 SDK (&lt;a href=&#34;https://dotnet.microsoft.com/en-us/download/dotnet/7.0&#34;&gt;https://dotnet.microsoft.com/en-us/download/dotnet/7.0&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Install Vulkan SDK (&lt;a href=&#34;https://vulkan.lunarg.com/&#34;&gt;https://vulkan.lunarg.com/&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Clone repo (with LFS)&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;GenerateProjectFiles.command&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open workspace with XCode or Visual Studio Code&lt;/li&gt; &#xA; &lt;li&gt;Build and run (configuration &lt;code&gt;Editor.Mac.Development&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Troubleshooting&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Could not execute because the specified command or file was not found.&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Restart PC - ensure DotNet is added to PATH for command line tools execution.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Microsoft.NET.TargetFrameworkInference.targets(141,5): error NETSDK1045: The current .NET SDK does not support targeting .NET 7.0. Either target .NET 5.0 or lower, or use a version of the .NET SDK that supports .NET 7.0&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Use Visual Studio 2022, older versions are not supported by .NET SDK 7.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Building for Windows without Vulkan rendering backend (Vulkan SDK is missing)&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Install the Vulkan SDK then set an environment variable to provide the path to the SDK prior to running GenerateProjectFiles.bat: &lt;code&gt;set VULKAN_SDK=%sdk_path%&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;The NuGetSdkResolver did not resolve this SDK&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Install &lt;code&gt;.NET SDK&lt;/code&gt;, &lt;code&gt;NuGet package manager&lt;/code&gt; and &lt;code&gt;NuGet targets and build tasks&lt;/code&gt; in Visual Studio components.&lt;/p&gt; &#xA;&lt;h2&gt;Workspace directory&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Binaries/&lt;/strong&gt; - executable files &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Editor/&lt;/strong&gt; - Flax Editor binaries&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Tools/&lt;/strong&gt; - tools binaries&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cache/&lt;/strong&gt; - local data cache folder used by the engine and tools &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Intermediate/&lt;/strong&gt; - intermediate files and cache for engine build &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;&lt;em&gt;ProjectName&lt;/em&gt;/&lt;/strong&gt; - per-project build cache data&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Deps/&lt;/strong&gt; - Flax.Build dependencies building cache&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Projects/&lt;/strong&gt; - project files location&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Content/&lt;/strong&gt; - assets and binary files used by the engine and editor&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Development/&lt;/strong&gt; - engine development files &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Scripts/&lt;/strong&gt; - utility scripts&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Source/&lt;/strong&gt; - source code location &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Editor/&lt;/strong&gt; - Flax Editor source code&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Engine/&lt;/strong&gt; - Flax Engine source code&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Platforms/&lt;/strong&gt; - per-platform sources and dependency files &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;DotNet/&lt;/strong&gt; - C# dependencies&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;Editor/&lt;/strong&gt; - Flax Editor binaries&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;&lt;em&gt;PlatformName&lt;/em&gt;/&lt;/strong&gt; - per-platform files &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;strong&gt;Binaries/&lt;/strong&gt; - per-platform binaries &#xA;        &lt;ul&gt; &#xA;         &lt;li&gt;&lt;strong&gt;Game/&lt;/strong&gt; - Flax Game binaries&lt;/li&gt; &#xA;         &lt;li&gt;&lt;strong&gt;ThirdParty/&lt;/strong&gt; - prebuilt 3rd Party binaries&lt;/li&gt; &#xA;        &lt;/ul&gt; &lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Shaders/&lt;/strong&gt; - shaders source code&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;ThirdParty/&lt;/strong&gt; - 3rd Party source code&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Tools/&lt;/strong&gt; - development tools source code&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Licensing and Contributions&lt;/h1&gt; &#xA;&lt;p&gt;Using Flax source code is strictly governed by the Flax Engine End User License Agreement. If you don&#39;t agree to those terms, as amended from time to time, you are not permitted to access or use Flax Engine.&lt;/p&gt; &#xA;&lt;p&gt;We welcome any contributions to Flax Engine development through pull requests on GitHub. Most of our active development is in the master branch, so we prefer to take pull requests there (particularly for new features). We try to make sure that all new code adheres to the Flax coding standards. All contributions are governed by the terms of the &lt;a href=&#34;https://flaxengine.com/licensing/&#34;&gt;EULA&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SoftFever/OrcaSlicer</title>
    <updated>2023-09-24T01:47:18Z</updated>
    <id>tag:github.com,2023-09-24:/SoftFever/OrcaSlicer</id>
    <link href="https://github.com/SoftFever/OrcaSlicer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;G-code generator for 3D printers (Bambu, Prusa, Voron, VzBot, RatRig, Creality, etc.)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/SoftFever/OrcaSlicer/actions/workflows/build_orca.yml&#34;&gt;&lt;img src=&#34;https://github.com/SoftFever/OrcaSlicer/actions/workflows/build_orca.yml/badge.svg?branch=main&#34; alt=&#34;Build OrcaSlicer&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Orca Slicer&lt;/h1&gt; &#xA;&lt;p&gt;Orca Slicer is an open source slicer for FDM printers.&lt;br&gt; You can download Orca Slicer here: &lt;a href=&#34;https://github.com/SoftFever/OrcaSlicer/releases/&#34;&gt;github releases page&lt;/a&gt;.&lt;br&gt; &lt;img src=&#34;https://github.com/SoftFever/OrcaSlicer/assets/103989404/b97d5ffc-072d-4d0a-bbda-e67ef373876f&#34; alt=&#34;discord-mark-blue&#34;&gt; Join community: &lt;a href=&#34;https://discord.gg/WTEkCR6SnV&#34;&gt;OrcaSlicer Official Discord Server&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Main features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Auto calibrations for all printers&lt;/li&gt; &#xA; &lt;li&gt;Sandwich(inner-outer-inner) mode - an improved version of the &lt;code&gt;External perimeters first&lt;/code&gt; mode&lt;/li&gt; &#xA; &lt;li&gt;Precise wall&lt;/li&gt; &#xA; &lt;li&gt;Klipper support&lt;/li&gt; &#xA; &lt;li&gt;More granular controls&lt;/li&gt; &#xA; &lt;li&gt;More features can be found in &lt;a href=&#34;https://github.com/SoftFever/OrcaSlicer/releases/&#34;&gt;change notes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Some background&lt;/h3&gt; &#xA;&lt;p&gt;OrcaSlicer is fork of Bambu Studio&lt;br&gt; It was previously known as BambuStudio-SoftFever&lt;br&gt; Bambu Studio is forked from &lt;a href=&#34;https://github.com/prusa3d/PrusaSlicer&#34;&gt;PrusaSlicer&lt;/a&gt; by Prusa Research, which is from &lt;a href=&#34;https://github.com/Slic3r/Slic3r&#34;&gt;Slic3r&lt;/a&gt; by Alessandro Ranellucci and the RepRap community. Orca Slicer incorporates a lot of features from SuperSlicer by @supermerill Orca Slicer&#39;s logo is designed by community member Justin Levine(@freejstnalxndr)&lt;/p&gt; &#xA;&lt;h1&gt;How to install&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install and run &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;If you have troubles to run the build, you might need to install following runtimes:&lt;/em&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/SoftFever/BambuStudio-SoftFever/releases/download/v1.0.10-sf2/MicrosoftEdgeWebView2RuntimeInstallerX64.exe&#34;&gt;MicrosoftEdgeWebView2RuntimeInstallerX64&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/SoftFever/BambuStudio-SoftFever/releases/download/v1.0.10-sf2/vcredist2019_x64.exe&#34;&gt;vcredist2019_x64&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Mac&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the DMG for your computer: &lt;code&gt;arm64&lt;/code&gt; version for Apple Silicon and &lt;code&gt;x86_64&lt;/code&gt; for Intel CPU.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Drag OrcaSlicer.app to Application folder.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;If you want to run a build from a PR, you also need following instructions bellow&lt;/em&gt;&lt;/p&gt; &#xA;  &lt;details quarantine&gt;&#xA;    - Option 1 (You only need to do this once. After that the app can be oppened normally.): - Step 1: Hold _cmd_ and right click the app, from the context menu choose **Open**. - Step 2: A warning window will pop up, click _Open_ &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Option 2:&lt;br&gt; Execute this command in terminal: &lt;code&gt;xattr -dr com.apple.quarantine /Applications/OrcaSlicer.app&lt;/code&gt; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;    softfever@mac:~$ xattr -dr com.apple.quarantine /Applications/OrcaSlicer.app&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;li&gt;Option 3: &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;Step 1: open the app, a warning window will pop up&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SoftFever/OrcaSlicer/main/SoftFever_doc/mac_cant_open.png&#34; alt=&#34;image&#34;&gt;&lt;/li&gt; &#xA;      &lt;li&gt;Step 2: in &lt;code&gt;System Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Privacy &amp;amp; Security&lt;/code&gt;, click &lt;code&gt;Open Anyway&lt;/code&gt;:&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/SoftFever/OrcaSlicer/main/SoftFever_doc/mac_security_setting.png&#34; alt=&#34;image&#34;&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/details&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Linux(Ubuntu)&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;If you run into trouble to execute it, try this command in terminal:&lt;br&gt; &lt;code&gt;chmod +x /path_to_appimage/OrcaSlicer_ubu64.AppImage&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;How to compile&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Windows 64-bit&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Tools needed: Visual Studio 2019, Cmake, git, Strawberry Perl.&lt;/li&gt; &#xA;   &lt;li&gt;Run &lt;code&gt;build_release.bat&lt;/code&gt; in &lt;code&gt;x64 Native Tools Command Prompt for VS 2019&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mac 64-bit&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Tools needed: Xcode, Cmake, git, gettext&lt;/li&gt; &#xA;   &lt;li&gt;run &lt;code&gt;build_release_macos.sh&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ubuntu&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;run &#39;sudo ./BuildLinux.sh -u&#39;&lt;/li&gt; &#xA;   &lt;li&gt;run &#39;./BuildLinux.sh -dsir&#39;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Note:&lt;/h1&gt; &#xA;&lt;p&gt;If you&#39;re running Klipper, it&#39;s recommended to add the following configuration to your &lt;code&gt;printer.cfg&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Enable object exclusion&#xA;[exclude_object]&#xA;&#xA;# Enable arcs support&#xA;[gcode_arcs]&#xA;resolution: 0.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Supports&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Orca Slicer&lt;/strong&gt; is an open-source project, and I&#39;m deeply grateful to all my sponsors and backers.&lt;br&gt; Their generous support enables me to purchase filaments and other essential 3D printing materials for the project.&lt;br&gt; Thank you! :)&lt;/p&gt; &#xA;&lt;h3&gt;Sponsors:&lt;/h3&gt; &#xA;&lt;a href=&#34;https://peopoly.net/&#34;&gt; &lt;img src=&#34;SoftFever_doc\sponsor_logos\peopoly-standard-logo.png&#34; alt=&#34;Peopoly&#34; width=&#34;64&#34; height=&#34;&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;Backers:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;todo: extract ko-fi backers list&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Support me&lt;br&gt; &lt;a href=&#34;https://ko-fi.com/G2G5IP3CP&#34;&gt;&lt;img src=&#34;https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true&#34; alt=&#34;ko-fi&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Orca Slicer is licensed under the GNU Affero General Public License, version 3. Orca Slicer is based on Bambu Studio by BambuLab.&lt;/p&gt; &#xA;&lt;p&gt;Bambu Studio is licensed under the GNU Affero General Public License, version 3. Bambu Studio is based on PrusaSlicer by PrusaResearch.&lt;/p&gt; &#xA;&lt;p&gt;PrusaSlicer is licensed under the GNU Affero General Public License, version 3. PrusaSlicer is owned by Prusa Research. PrusaSlicer is originally based on Slic3r by Alessandro Ranellucci.&lt;/p&gt; &#xA;&lt;p&gt;Slic3r is licensed under the GNU Affero General Public License, version 3. Slic3r was created by Alessandro Ranellucci with the help of many other contributors.&lt;/p&gt; &#xA;&lt;p&gt;The GNU Affero General Public License, version 3 ensures that if you use any part of this software in any way (even behind a web server), your software must be released under the same license.&lt;/p&gt; &#xA;&lt;p&gt;Orca Slicer includes a pressure advance calibration pattern test adapted from Andrew Ellis&#39; generator, which is licensed under GNU General Public License, version 3. Ellis&#39; generator is itself adapted from a generator developed by Sineos for Marlin, which is licensed under GNU General Public License, version 3.&lt;/p&gt; &#xA;&lt;p&gt;The bambu networking plugin is based on non-free libraries from Bambulab. It is optional to the Orca Slicer and provides extended functionalities for Bambulab printer users.&lt;/p&gt;</summary>
  </entry>
</feed>