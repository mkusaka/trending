<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-04T02:02:00Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tdlib/td</title>
    <updated>2022-06-04T02:02:00Z</updated>
    <id>tag:github.com,2022-06-04:/tdlib/td</id>
    <link href="https://github.com/tdlib/td" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cross-platform library for building Telegram clients&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TDLib&lt;/h1&gt; &#xA;&lt;p&gt;TDLib (Telegram Database library) is a cross-platform library for building &lt;a href=&#34;https://telegram.org&#34;&gt;Telegram&lt;/a&gt; clients. It can be easily used from almost any programming language.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#usage&#34;&gt;Examples and documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#dependencies&#34;&gt;Dependencies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#building&#34;&gt;Building&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#using-cxx&#34;&gt;Using in CMake C++ projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#using-java&#34;&gt;Using in Java projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#using-dotnet&#34;&gt;Using in .NET projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#using-json&#34;&gt;Using with other programming languages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;features&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;TDLib&lt;/code&gt; has many advantages. Notably &lt;code&gt;TDLib&lt;/code&gt; is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cross-platform&lt;/strong&gt;: &lt;code&gt;TDLib&lt;/code&gt; can be used on Android, iOS, Windows, macOS, Linux, FreeBSD, OpenBSD, NetBSD, illumos, Windows Phone, WebAssembly, watchOS, tvOS, Tizen, Cygwin. It should also work on other *nix systems with or without minimal effort.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multilanguage&lt;/strong&gt;: &lt;code&gt;TDLib&lt;/code&gt; can be easily used with any programming language that is able to execute C functions. Additionally it already has native Java (using &lt;code&gt;JNI&lt;/code&gt;) bindings and .NET (using &lt;code&gt;C++/CLI&lt;/code&gt; and &lt;code&gt;C++/CX&lt;/code&gt;) bindings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easy to use&lt;/strong&gt;: &lt;code&gt;TDLib&lt;/code&gt; takes care of all network implementation details, encryption and local data storage.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;High-performance&lt;/strong&gt;: in the &lt;a href=&#34;https://core.telegram.org/bots/api&#34;&gt;Telegram Bot API&lt;/a&gt;, each &lt;code&gt;TDLib&lt;/code&gt; instance handles more than 24000 active bots simultaneously.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Well-documented&lt;/strong&gt;: all &lt;code&gt;TDLib&lt;/code&gt; API methods and public interfaces are fully documented.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Consistent&lt;/strong&gt;: &lt;code&gt;TDLib&lt;/code&gt; guarantees that all updates are delivered in the right order.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reliable&lt;/strong&gt;: &lt;code&gt;TDLib&lt;/code&gt; remains stable on slow and unreliable Internet connections.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Secure&lt;/strong&gt;: all local data is encrypted using a user-provided encryption key.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fully-asynchronous&lt;/strong&gt;: requests to &lt;code&gt;TDLib&lt;/code&gt; don&#39;t block each other or anything else, responses are sent when they are available.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;usage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Examples and documentation&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://core.telegram.org/tdlib/getting-started&#34;&gt;Getting Started&lt;/a&gt; tutorial for a description of basic TDLib concepts.&lt;/p&gt; &#xA;&lt;p&gt;Take a look at our &lt;a href=&#34;https://github.com/tdlib/td/raw/master/example/README.md#tdlib-usage-and-build-examples&#34;&gt;examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See a &lt;a href=&#34;https://tdlib.github.io/td/build.html&#34;&gt;TDLib build instructions generator&lt;/a&gt; for detailed instructions on how to build TDLib.&lt;/p&gt; &#xA;&lt;p&gt;See description of our &lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#using-json&#34;&gt;JSON&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#using-cxx&#34;&gt;C++&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#using-java&#34;&gt;Java&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#using-dotnet&#34;&gt;.NET&lt;/a&gt; interfaces.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/tdlib/td/raw/master/td/generate/scheme/td_api.tl&#34;&gt;td_api.tl&lt;/a&gt; scheme or the automatically generated &lt;a href=&#34;https://core.telegram.org/tdlib/docs/td__api_8h.html&#34;&gt;HTML documentation&lt;/a&gt; for a list of all available &lt;code&gt;TDLib&lt;/code&gt; &lt;a href=&#34;https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1_function.html&#34;&gt;methods&lt;/a&gt; and &lt;a href=&#34;https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1_object.html&#34;&gt;classes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;dependencies&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;TDLib&lt;/code&gt; depends on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;C++14 compatible compiler (Clang 3.4+, GCC 4.9+, MSVC 19.0+ (Visual Studio 2015+), Intel C++ Compiler 17+)&lt;/li&gt; &#xA; &lt;li&gt;OpenSSL&lt;/li&gt; &#xA; &lt;li&gt;zlib&lt;/li&gt; &#xA; &lt;li&gt;gperf (build only)&lt;/li&gt; &#xA; &lt;li&gt;CMake (3.0.2+, build only)&lt;/li&gt; &#xA; &lt;li&gt;PHP (optional, for documentation generation)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;building&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;The simplest way to build &lt;code&gt;TDLib&lt;/code&gt; is to use our &lt;a href=&#34;https://tdlib.github.io/td/build.html&#34;&gt;TDLib build instructions generator&lt;/a&gt;. You need only to choose your programming language and target operating system to receive complete build instructions.&lt;/p&gt; &#xA;&lt;p&gt;In general, you need to install all &lt;code&gt;TDLib&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#dependencies&#34;&gt;dependencies&lt;/a&gt;, enter directory containing &lt;code&gt;TDLib&lt;/code&gt; sources and compile them using CMake:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir build&#xA;cd build&#xA;cmake -DCMAKE_BUILD_TYPE=Release ..&#xA;cmake --build .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build &lt;code&gt;TDLib&lt;/code&gt; on low memory devices you can run &lt;a href=&#34;https://github.com/tdlib/td/raw/master/SplitSource.php&#34;&gt;SplitSource.php&lt;/a&gt; script before compiling main &lt;code&gt;TDLib&lt;/code&gt; source code and compile only needed targets:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir build&#xA;cd build&#xA;cmake -DCMAKE_BUILD_TYPE=Release ..&#xA;cmake --build . --target prepare_cross_compiling&#xA;cd ..&#xA;php SplitSource.php&#xA;cd build&#xA;cmake --build . --target tdjson&#xA;cmake --build . --target tdjson_static&#xA;cd ..&#xA;php SplitSource.php --undo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In our tests clang 6.0 with libc++ required less than 500 MB of RAM per file and GCC 4.9/6.3 used less than 1 GB of RAM per file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;using-cxx&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Using in CMake C++ projects&lt;/h2&gt; &#xA;&lt;p&gt;For C++ projects that use CMake, the best approach is to build &lt;code&gt;TDLib&lt;/code&gt; as part of your project or to install it system-wide.&lt;/p&gt; &#xA;&lt;p&gt;There are several libraries that you could use in your CMake project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Td::TdJson, Td::TdJsonStatic&amp;nbsp;— dynamic and static version of a JSON interface. This has a simple C interface, so it can be easily used with any programming language that is able to execute C functions. See &lt;a href=&#34;https://core.telegram.org/tdlib/docs/td__json__client_8h.html&#34;&gt;td_json_client&lt;/a&gt; documentation for more information.&lt;/li&gt; &#xA; &lt;li&gt;Td::TdStatic — static library with C++ interface for general usage. See &lt;a href=&#34;https://core.telegram.org/tdlib/docs/classtd_1_1_client_manager.html&#34;&gt;ClientManager&lt;/a&gt; and &lt;a href=&#34;https://core.telegram.org/tdlib/docs/classtd_1_1_client.html&#34;&gt;Client&lt;/a&gt; documentation for more information.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, part of your CMakeLists.txt may look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;add_subdirectory(td)&#xA;target_link_libraries(YourTarget PRIVATE Td::TdStatic)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you could install &lt;code&gt;TDLib&lt;/code&gt; and then reference it in your CMakeLists.txt like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;find_package(Td 1.8.3 REQUIRED)&#xA;target_link_libraries(YourTarget PRIVATE Td::TdStatic)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/tdlib/td/tree/master/example/cpp/CMakeLists.txt&#34;&gt;example/cpp/CMakeLists.txt&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;using-java&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Using in Java projects&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;TDLib&lt;/code&gt; provides native Java interface through JNI. To enable it, specify option &lt;code&gt;-DTD_ENABLE_JNI=ON&lt;/code&gt; to CMake.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/tdlib/td/tree/master/example/java&#34;&gt;example/java&lt;/a&gt; for example of using &lt;code&gt;TDLib&lt;/code&gt; from Java and detailed build and usage instructions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;using-dotnet&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Using in .NET projects&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;TDLib&lt;/code&gt; provides native .NET interface through &lt;code&gt;C++/CLI&lt;/code&gt; and &lt;code&gt;C++/CX&lt;/code&gt;. To enable it, specify option &lt;code&gt;-DTD_ENABLE_DOTNET=ON&lt;/code&gt; to CMake. .NET Core supports &lt;code&gt;C++/CLI&lt;/code&gt; only since version 3.1 and only on Windows, so if older .NET Core is used or portability is needed, then &lt;code&gt;TDLib&lt;/code&gt; JSON interface should be used through P/Invoke instead.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/tdlib/td/tree/master/example/csharp&#34;&gt;example/csharp&lt;/a&gt; for example of using &lt;code&gt;TDLib&lt;/code&gt; from C# and detailed build and usage instructions. See &lt;a href=&#34;https://github.com/tdlib/td/tree/master/example/uwp&#34;&gt;example/uwp&lt;/a&gt; for example of using &lt;code&gt;TDLib&lt;/code&gt; from C# UWP application and detailed build and usage instructions for Visual Studio Extension &#34;TDLib for Universal Windows Platform&#34;.&lt;/p&gt; &#xA;&lt;p&gt;When &lt;code&gt;TDLib&lt;/code&gt; is built with &lt;code&gt;TD_ENABLE_DOTNET&lt;/code&gt; option enabled, &lt;code&gt;C++&lt;/code&gt; documentation is removed from some files. You need to checkout these files to return &lt;code&gt;C++&lt;/code&gt; documentation back:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git checkout td/telegram/Client.h td/telegram/Log.h td/tl/TlObject.h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a name=&#34;using-json&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Using from other programming languages&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;TDLib&lt;/code&gt; provides efficient native C++, Java, and .NET interfaces. But for most use cases we suggest to use the JSON interface, which can be easily used with any programming language that is able to execute C functions. See &lt;a href=&#34;https://core.telegram.org/tdlib/docs/td__json__client_8h.html&#34;&gt;td_json_client&lt;/a&gt; documentation for detailed JSON interface description, the &lt;a href=&#34;https://github.com/tdlib/td/raw/master/td/generate/scheme/td_api.tl&#34;&gt;td_api.tl&lt;/a&gt; scheme or the automatically generated &lt;a href=&#34;https://core.telegram.org/tdlib/docs/td__api_8h.html&#34;&gt;HTML documentation&lt;/a&gt; for a list of all available &lt;code&gt;TDLib&lt;/code&gt; &lt;a href=&#34;https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1_function.html&#34;&gt;methods&lt;/a&gt; and &lt;a href=&#34;https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1_object.html&#34;&gt;classes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;TDLib&lt;/code&gt; JSON interface adheres to semantic versioning and versions with the same major version number are binary and backward compatible, but the underlying &lt;code&gt;TDLib&lt;/code&gt; API can be different for different minor and even patch versions. If you need to support different &lt;code&gt;TDLib&lt;/code&gt; versions, then you can use a value of the &lt;code&gt;version&lt;/code&gt; option to find exact &lt;code&gt;TDLib&lt;/code&gt; version to use appropriate API methods.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/tdlib/td/tree/master/example/python/tdjson_example.py&#34;&gt;example/python/tdjson_example.py&lt;/a&gt; for an example of such usage.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;TDLib&lt;/code&gt; is licensed under the terms of the Boost Software License. See &lt;a href=&#34;http://www.boost.org/LICENSE_1_0.txt&#34;&gt;LICENSE_1_0.txt&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google/re2</title>
    <updated>2022-06-04T02:02:00Z</updated>
    <id>tag:github.com,2022-06-04:/google/re2</id>
    <link href="https://github.com/google/re2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;RE2 is a fast, safe, thread-friendly alternative to backtracking regular expression engines like those used in PCRE, Perl, and Python. It is a C++ library.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This is the source code repository for RE2, a regular expression library.&lt;/p&gt; &#xA;&lt;p&gt;For documentation about how to install and use RE2, visit &lt;a href=&#34;https://github.com/google/re2/&#34;&gt;https://github.com/google/re2/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The short version is:&lt;/p&gt; &#xA;&lt;p&gt;make make test make install make testinstall&lt;/p&gt; &#xA;&lt;p&gt;There is a fair amount of documentation (including code snippets) in the re2.h header file.&lt;/p&gt; &#xA;&lt;p&gt;More information can be found on the wiki: &lt;a href=&#34;https://github.com/google/re2/wiki&#34;&gt;https://github.com/google/re2/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Issue tracker: &lt;a href=&#34;https://github.com/google/re2/issues&#34;&gt;https://github.com/google/re2/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Mailing list: &lt;a href=&#34;https://groups.google.com/group/re2-dev&#34;&gt;https://groups.google.com/group/re2-dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless otherwise noted, the RE2 source files are distributed under the BSD-style license found in the LICENSE file.&lt;/p&gt; &#xA;&lt;p&gt;RE2&#39;s native language is C++.&lt;/p&gt; &#xA;&lt;p&gt;The Python wrapper is at &lt;a href=&#34;https://github.com/google/re2/tree/abseil/python&#34;&gt;https://github.com/google/re2/tree/abseil/python&lt;/a&gt; and on PyPI (&lt;a href=&#34;https://pypi.org/project/google-re2/&#34;&gt;https://pypi.org/project/google-re2/&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;A C wrapper is at &lt;a href=&#34;https://github.com/marcomaggi/cre2/&#34;&gt;https://github.com/marcomaggi/cre2/&lt;/a&gt;. A D wrapper is at &lt;a href=&#34;https://github.com/ShigekiKarita/re2d/&#34;&gt;https://github.com/ShigekiKarita/re2d/&lt;/a&gt; and on DUB (code.dlang.org). An Erlang wrapper is at &lt;a href=&#34;https://github.com/dukesoferl/re2/&#34;&gt;https://github.com/dukesoferl/re2/&lt;/a&gt; and on Hex (hex.pm). An Inferno wrapper is at &lt;a href=&#34;https://github.com/powerman/inferno-re2/&#34;&gt;https://github.com/powerman/inferno-re2/&lt;/a&gt;. A Node.js wrapper is at &lt;a href=&#34;https://github.com/uhop/node-re2/&#34;&gt;https://github.com/uhop/node-re2/&lt;/a&gt; and on NPM (npmjs.com). An OCaml wrapper is at &lt;a href=&#34;https://github.com/janestreet/re2/&#34;&gt;https://github.com/janestreet/re2/&lt;/a&gt; and on OPAM (opam.ocaml.org). A Perl wrapper is at &lt;a href=&#34;https://github.com/dgl/re-engine-RE2/&#34;&gt;https://github.com/dgl/re-engine-RE2/&lt;/a&gt; and on CPAN (cpan.org). An R wrapper is at &lt;a href=&#34;https://github.com/girishji/re2/&#34;&gt;https://github.com/girishji/re2/&lt;/a&gt; and on CRAN (cran.r-project.org). A Ruby wrapper is at &lt;a href=&#34;https://github.com/mudge/re2/&#34;&gt;https://github.com/mudge/re2/&lt;/a&gt; and on RubyGems (rubygems.org). A WebAssembly wrapper is at &lt;a href=&#34;https://github.com/google/re2-wasm/&#34;&gt;https://github.com/google/re2-wasm/&lt;/a&gt; and on NPM (npmjs.com).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>xournalpp/xournalpp</title>
    <updated>2022-06-04T02:02:00Z</updated>
    <id>tag:github.com,2022-06-04:/xournalpp/xournalpp</id>
    <link href="https://github.com/xournalpp/xournalpp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Xournal++ is a handwriting notetaking software with PDF annotation support. Written in C++ with GTK3, supporting Linux (e.g. Ubuntu, Debian, Arch, SUSE), macOS and Windows 10. Supports pen input from devices such as Wacom Tablets.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Xournal++&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/xournalpp/xournalpp/_build/latest?definitionId=1&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/xournalpp/xournalpp/_apis/build/status/CI?branchName=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/xournalpp/xournalpp?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/xournalpp/xournalpp&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table border=&#34;0px&#34;&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td width=&#34;600px&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/main.png&#34; width=&#34;550px%&#34; title=&#34;Xournal++ Screenshot on Linux&#34;&gt; &lt;/td&gt;&#xA;   &lt;td&gt; &lt;h2&gt;Shout out - Translators Needed!&lt;/h2&gt; &lt;p&gt;Recently we revisited the settings dialog to improve the feeling and usability. While doing that we also added better descriptions, for which we require new translations.&lt;/p&gt; &lt;p&gt;Partial translations, which need to be updated:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Czech&lt;/li&gt; &#xA;     &lt;li&gt;Polish&lt;/li&gt; &#xA;     &lt;li&gt;Chinese&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;p&gt;Full translations for all languages not mentioned previously &lt;strong&gt;except&lt;/strong&gt;:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;English&lt;/li&gt; &#xA;     &lt;li&gt;German&lt;/li&gt; &#xA;     &lt;li&gt;Italian&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;p&gt;If you would like to help us improve the localization of Xournal++, take a look at &lt;a href=&#34;https://crowdin.com/project/xournalpp&#34;&gt;our Crowdin project&lt;/a&gt;. If you are interested in translating a new language, contact us on &lt;a href=&#34;https://gitter.im/xournalpp/xournalpp&#34;&gt;Gitter&lt;/a&gt; or create a new issue and we will unlock the language on Crowdin.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Thanks in advance!&lt;/strong&gt;&lt;/p&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Xournal++ (/ˌzɚnl̟ˌplʌsˈplʌs/) is a hand note-taking software written in C++ with the target of flexibility, functionality and speed. Stroke recognizer and other parts are based on Xournal Code, which you can find at &lt;a href=&#34;http://sourceforge.net/projects/xournal/&#34;&gt;sourceforge&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Xournal++ features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports pressure-sensitive styluses and digital pen tables (e.g. Wacom, Huion, XP Pen, etc. tablets)&lt;/li&gt; &#xA; &lt;li&gt;Paper backgrounds for note-taking, scratch paper, or whiteboarding&lt;/li&gt; &#xA; &lt;li&gt;Annotate on top of PDFs&lt;/li&gt; &#xA; &lt;li&gt;Export to a variety of formats including SVG, PNG and PDF, both from the GUI and command line&lt;/li&gt; &#xA; &lt;li&gt;Different drawing tools (e.g. pen, highlighter) and stroke styles (e.g. solid, dotted)&lt;/li&gt; &#xA; &lt;li&gt;Shape drawing (line, arrow, circle, rectangle, spline)&lt;/li&gt; &#xA; &lt;li&gt;Fill shape functionality&lt;/li&gt; &#xA; &lt;li&gt;Shape resizing and rotation&lt;/li&gt; &#xA; &lt;li&gt;Rotation and grid snapping for precise alignment of objects&lt;/li&gt; &#xA; &lt;li&gt;Input stabilization for smoother writing/drawing&lt;/li&gt; &#xA; &lt;li&gt;Text tool for adding text in different fonts, colors, and sizes&lt;/li&gt; &#xA; &lt;li&gt;Enhanced support for image insertion&lt;/li&gt; &#xA; &lt;li&gt;Eraser with multiple configurations&lt;/li&gt; &#xA; &lt;li&gt;LaTeX support (requires a working LaTeX installation) with customizable template&lt;/li&gt; &#xA; &lt;li&gt;Sidebar containing page previews with advanced page sorting, PDF bookmarks and layers (can be individually hidden/edited)&lt;/li&gt; &#xA; &lt;li&gt;Allows mapping different tools/colors etc. to stylus/mouse buttons&lt;/li&gt; &#xA; &lt;li&gt;Customizable toolbar with multiple configurations, e.g. to optimize toolbar for portrait/landscape&lt;/li&gt; &#xA; &lt;li&gt;Page template definitions&lt;/li&gt; &#xA; &lt;li&gt;Bug reporting, auto-save, and auto backup tools&lt;/li&gt; &#xA; &lt;li&gt;Audio recording and playback alongside with handwritten notes&lt;/li&gt; &#xA; &lt;li&gt;Multi language support (over 20 languages supported)&lt;/li&gt; &#xA; &lt;li&gt;Plugins using Lua scripting&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mobile &amp;amp; web app&lt;/h2&gt; &#xA;&lt;p&gt;Since mid 2020, there is a Flutter-written mobile app for &lt;strong&gt;Android&lt;/strong&gt;, &lt;strong&gt;Chrome OS&lt;/strong&gt; and &lt;strong&gt;iOS&lt;/strong&gt; (coming soon) as well as a &lt;strong&gt;web app&lt;/strong&gt; available. Even though it is not perfectly stable nor are all of Xournal++&#39;s features fully supported yet, you may check it out and open your Xournal++ notebooks on your mobile devices. You can get in touch in its &lt;a href=&#34;https://gitlab.com/TheOneWithTheBraid/xournalpp_mobile&#34;&gt;separate repository on GitLab&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=online.xournal.mobile&#34;&gt;Get it on Google Play&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The web app is available at &lt;a href=&#34;https://xournal.online&#34;&gt;xournal.online&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Why is the iOS app not published yet?&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;According to the Apple App Store guidelines, it is prohibited to publish unstable or beta apps. Hence we wait until Xournal++ Mobile works more stable and offers more complete feature compatibility to Xournal++.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;h2&gt;Linux&lt;/h2&gt; &lt;img src=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/main.png&#34; width=&#34;100%&#34; title=&#34;Xournal++ Screenshot on Linux&#34;&gt; &lt;/td&gt;&#xA;   &lt;td&gt; &lt;h2&gt;Windows 10&lt;/h2&gt; &lt;img src=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/main-win.png&#34; width=&#34;100%&#34; title=&#34;Xournal++ Screenshot on Win10&#34;&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; &lt;h2&gt;macOS Catalina&lt;/h2&gt; &lt;img src=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/main-mac.png&#34; width=&#34;100%&#34; title=&#34;Xournal++ Screenshot on macOS&#34;&gt; &lt;/td&gt;&#xA;   &lt;td&gt; &lt;h2&gt;Xournal++ Mobile&lt;/h2&gt; &lt;img src=&#34;https://gitlab.com/TheOneWithTheBraid/xournalpp_mobile/-/raw/master/fastlane/metadata/android/en_US/images/tenInchScreenshots/03.png&#34; width=&#34;100%&#34; title=&#34;Xournal++ Mobile Screenshot on Chromium OS&#34;&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; &lt;h2&gt;Toolbar / Page Background / Layer&lt;/h2&gt; &lt;p&gt;Multiple page background, easy selectable on the toolbar &lt;img src=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/background.png&#34; width=&#34;100%&#34; title=&#34;Xournal++ Screenshot&#34;&gt;&lt;/p&gt; &lt;/td&gt;&#xA;   &lt;td&gt; &lt;h2&gt;Layer sidebar and advanced layer selection&lt;/h2&gt; &lt;img src=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/layer.png&#34; width=&#34;100%&#34; title=&#34;Xournal++ Screenshot&#34;&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; &lt;h2&gt;Multiple predefined and fully customizable toolbars&lt;/h2&gt; &lt;img src=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/toolbar.png&#34; width=&#34;100%&#34; title=&#34;Xournal++ Screenshot&#34;&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;User Manual and FAQ&lt;/h2&gt; &#xA;&lt;p&gt;For general usage, consult the &lt;a href=&#34;https://github.com/xournalpp/xournalpp/wiki/User-Manual&#34;&gt;User Manual&lt;/a&gt;. Answers to some common questions can be found in the &lt;a href=&#34;https://github.com/xournalpp/xournalpp/wiki/Frequently-Asked-Questions-&amp;amp;-Problem-Solving&#34;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Experimental Features&lt;/h2&gt; &#xA;&lt;p&gt;Sometimes a feature is added that might not be rock solid, or the developers aren&#39;t sure if it is useful. Try these out and give us some feedback.&lt;/p&gt; &#xA;&lt;p&gt;Here are a few under development that you can play with now:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/floatingtoolboxmbmenu.png&#34; title=&#34;Xournal++ Screenshot&#34;&gt; Assign a mouse button or stylus button to bring up a toolbox of toolbars right under the cursor. You can also modify what is in the toolbox through the usual View → Toolbars → Customize although &lt;strong&gt;it won&#39;t appear unless you&#39;ve assigned a button in preferences: mouse or stylus&lt;/strong&gt; (or selected a toolbar configuration that uses it).&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;This is an experimental feature because not everything you can put in the toolbox behaves. So be aware.&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/floatingtoolbox.png&#34; width=&#34;25%&#34;&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Keep your eyes out for other experimental features in preferences as seen here:&lt;/p&gt; &lt;p&gt;DrawingTools: When drawing a box, circle etc, simulate ctrl or shift modifiers by the initial direction you move the mouse.&lt;/p&gt; &lt;p&gt;Action on Tool Tap: Allow a brief tap on the screen to bring up the floating toolbox and/or select an object. May work with pen and highlighter only.&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/moreexperimentals.png&#34; width=&#34;50%&#34;&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;The official releases of Xournal++ can be found on the &lt;a href=&#34;https://github.com/xournalpp/xournalpp/releases&#34;&gt;Releases&lt;/a&gt; page. We provide binaries for Debian (Buster), Ubuntu (16.04), MacOS (10.15 and newer), and Windows. For other Linux distributions (or older/newer ones), we also provide an AppImage that is binary compatible with any distribution released around or after Ubuntu 16.04. For installing Xournal++ Mobile on handheld devices, please check out &lt;a href=&#34;https://gitlab.com/TheOneWithTheBraid/xournalpp_mobile#try-it-out&#34;&gt;Xournal++ Mobile&#39;s instructions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A note for Ubuntu/Debian users&lt;/strong&gt;: The official binaries that we provide are only compatible with the &lt;em&gt;specific version of Debian or Ubuntu&lt;/em&gt; indicated by the file name. For example, if you are on Ubuntu 20.04, the binary whose name contains &lt;code&gt;Ubuntu-bionic&lt;/code&gt; is &lt;em&gt;only&lt;/em&gt; compatible with Ubuntu 18.04. If your system is not one of the specific Debian or Ubuntu versions that are supported by the official binaries, we recommend you use either the PPA (Ubuntu only), the Flatpak, or the AppImage.&lt;/p&gt; &#xA;&lt;p&gt;There is also an &lt;em&gt;unstable&lt;/em&gt;, &lt;a href=&#34;https://github.com/xournalpp/xournalpp/releases/tag/nightly&#34;&gt;automated nightly release&lt;/a&gt; that includes the very latest features and bug fixes.&lt;/p&gt; &#xA;&lt;p&gt;With the help of the community, Xournal++ is also available on official repositories of some popular Linux distros and platforms.&lt;/p&gt; &#xA;&lt;h3&gt;Debian&lt;/h3&gt; &#xA;&lt;p&gt;On Debian bookworm and Debian sid the &lt;code&gt;xournalpp&lt;/code&gt; package (stable version) is contained in the official repositories. Simply install via&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install xournalpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are also the official &lt;a href=&#34;https://github.com/xournalpp/xournalpp/releases&#34;&gt;Stable releases&lt;/a&gt; and &lt;em&gt;unstable&lt;/em&gt; &lt;a href=&#34;https://github.com/xournalpp/xournalpp/releases/tag/nightly&#34;&gt;automated nightly releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Ubuntu and derivatives&lt;/h3&gt; &#xA;&lt;p&gt;On distros based on Ubuntu 22.04 Jammy Jellyfish (and later) the &lt;code&gt;xournalpp&lt;/code&gt; package (stable version) is contained in the official repositories. Simply install via&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install xournalpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Stable PPA&lt;/h4&gt; &#xA;&lt;p&gt;The latest stable version is available via the following &lt;a href=&#34;https://github.com/xournalpp/xournalpp/issues/1013#issuecomment-692656810&#34;&gt;&lt;em&gt;unofficial&lt;/em&gt; PPA&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo add-apt-repository ppa:apandada1/xournalpp-stable&#xA;sudo apt update&#xA;sudo apt install xournalpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Unstable PPA&lt;/h4&gt; &#xA;&lt;p&gt;An &lt;em&gt;unstable&lt;/em&gt;, nightly release is available for Ubuntu-based distributions via the following PPA:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo add-apt-repository ppa:andreasbutti/xournalpp-master&#xA;sudo apt update&#xA;sudo apt install xournalpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This PPA is provided by the Xournal++ team. While it has the latest features and bug fixes, it has also not been tested thoroughly and may break periodically (we try our best not to break things, though).&lt;/p&gt; &#xA;&lt;h3&gt;Fedora&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://src.fedoraproject.org/rpms/xournalpp&#34;&gt;released version of xournalpp&lt;/a&gt; is available in the &lt;a href=&#34;https://bodhi.fedoraproject.org/updates/?packages=xournalpp&#34;&gt;main repository&lt;/a&gt; via &lt;em&gt;Software&lt;/em&gt; application or the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo dnf install xournalpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pkcon install xournalpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The bleeding edge packages synced to xournalpp git master on a daily basis are available from &lt;a href=&#34;https://copr.fedorainfracloud.org/coprs/luya/xournalpp/&#34;&gt;COPR luya/xournalpp&lt;/a&gt;. &lt;a href=&#34;https://copr.fedorainfracloud.org/coprs/luya/xournalpp/package/xournalpp/&#34;&gt;&lt;img src=&#34;https://copr.fedorainfracloud.org/coprs/luya/xournalpp/package/xournalpp/status_image/last_build.png&#34; alt=&#34;Copr build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;openSUSE&lt;/h3&gt; &#xA;&lt;p&gt;On openSUSE Tumbleweed, the released version of Xournal++ is available from the main repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo zypper in xournalpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For openSUSE Leap 15.0 and earlier, use the install link from &lt;a href=&#34;https://software.opensuse.org//download.html?project=X11%3AUtilities&amp;amp;package=xournalpp&#34;&gt;X11:Utilities&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For all versions of openSUSE, bleeding edge packages synced to xournalpp git master on a weekly basis are available from &lt;a href=&#34;https://software.opensuse.org//download.html?project=home%3Abadshah400%3AStaging&amp;amp;package=xournalpp&#34;&gt;home:badshah400:Staging&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Arch Linux&lt;/h3&gt; &#xA;&lt;p&gt;The latest stable release is available &lt;a href=&#34;https://www.archlinux.org/packages/community/x86_64/xournalpp/&#34;&gt;in the [community] repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To build the latest state of the master branch yourself, use &lt;a href=&#34;https://aur.archlinux.org/packages/xournalpp-git/&#34;&gt;this AUR package&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Solus&lt;/h3&gt; &#xA;&lt;p&gt;The latest stable release is available in the main repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo eopkg it xournalpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Flatpak&lt;/h3&gt; &#xA;&lt;p&gt;The Xournal++ team officially supports a &lt;a href=&#34;https://flathub.org/apps/details/com.github.xournalpp.xournalpp&#34;&gt;FlatHub release&lt;/a&gt;, which can be installed with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;flatpak install flathub com.github.xournalpp.xournalpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that for Xournal++ to work properly, you must have at least one GTK theme and one icon theme installed on Flatpak. To enable LaTeX support, you will also need to install the TeX Live extension:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;flatpak install flathub org.freedesktop.Sdk.Extension.texlive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Flatpak manifest can be found at the &lt;a href=&#34;https://github.com/flathub/com.github.xournalpp.xournalpp&#34;&gt;Xournal++ Flatpak packaging repository&lt;/a&gt;, and all Flatpak-related packaging issues should be reported there.&lt;/p&gt; &#xA;&lt;h3&gt;Android and Chrome OS&lt;/h3&gt; &#xA;&lt;p&gt;Android is supported by Xournal++ Mobile. It can be downloaded either on the &lt;a href=&#34;https://gitlab.com/TheOneWithTheBraid/xournalpp_mobile/-/tags&#34;&gt;Tags page&lt;/a&gt; or &lt;a href=&#34;https://play.google.com/store/apps/details?id=online.xournal.mobile&#34;&gt;from Google Play&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;p&gt;Unfortunately, the iOS app is not published yet in the Apple App Store. See &lt;a href=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/#mobile--web-app&#34;&gt;here&lt;/a&gt; to learn, why. Anyway, in the &lt;a href=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/#building&#34;&gt;Building section&lt;/a&gt; you can learn how to build an early preview.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;Official Windows releases are provided on the &lt;a href=&#34;https://github.com/xournalpp/xournalpp/releases&#34;&gt;Releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Mac OS X&lt;/h3&gt; &#xA;&lt;p&gt;Mac OS X releases are provided on the &lt;a href=&#34;https://github.com/xournalpp/xournalpp/releases&#34;&gt;Releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There have been compatibility problems with Mac OS X Catalina regarding both file permissions and stylus support (&lt;a href=&#34;https://github.com/xournalpp/xournalpp/issues/1772&#34;&gt;#1772&lt;/a&gt; and &lt;a href=&#34;https://github.com/xournalpp/xournalpp/issues/1757&#34;&gt;#1757&lt;/a&gt;). Unfortunately, we don&#39;t have the resources to adequately support Catalina at this time. Help would be appreciated!&lt;/li&gt; &#xA; &lt;li&gt;Xournal++ will be delivered with a patched GTK. Else, pressure sensitivity will not work on Mac &lt;a href=&#34;https://github.com/xournalpp/xournalpp/issues/569&#34;&gt;#569&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/LinuxBuild.md&#34;&gt;Linux Build&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/MacBuild.md&#34;&gt;Mac Build&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/WindowsBuild.md&#34;&gt;Windows Build&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitlab.com/TheOneWithTheBraid/xournalpp_mobile#getting-started&#34;&gt;Android Build&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitlab.com/TheOneWithTheBraid/xournalpp_mobile#getting-started&#34;&gt;iOS Build&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;File format&lt;/h2&gt; &#xA;&lt;p&gt;The file format _.xopp is an XML which is .gz compressed. PDFs are not embedded into the file, so if the PDF is deleted, the background is lost. _.xopp is basically the same file format as _.xoj, which is used by Xournal. Therefore Xournal++ is able to read _.xoj files, and can also export to _.xoj. As soon as notes are exported to a _.xoj-file, all Xournal++ specific extensions, like additional background types, are lost.&lt;/p&gt; &#xA;&lt;p&gt;*.xopp can theoretically be read by Xournal, as long as you do not use any new feature. Xournal does not open files that contain new attributes or unknown values, so Xournal++ will add the extension .xopp to all saved files to indicate the potential presence of Xournal++-only features.&lt;/p&gt; &#xA;&lt;p&gt;All new files will be saved as _.xopp. If an _.xoj file that was created by Xournal is opened, the Save-As dialog will be displayed on save. If the *.xoj file was created by Xournal++, the file will be overwritten on save and the file extension will not change.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;We are currently introducing a new file format that can efficiently store attached PDF files and other attachments internally. We will still allow for attachments that are linked to external files. Please refer to &lt;a href=&#34;https://github.com/xournalpp/xournalpp/issues/937&#34;&gt;#937&lt;/a&gt; for further details.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;For developing new features, create an issue or comment on an existing issue to let others know what you are doing. For development, create a fork and use the master as base. Create a pull request for each fix. Do not create big pull requests, as long as you don&#39;t break anything features also can be merged, even if they are not 100% finished.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;http://github.com/xournalpp/xournalpp&#34;&gt;GitHub:xournalpp&lt;/a&gt; for current development. You can also join our Gitter channel via the badge on top.&lt;/p&gt; &#xA;&lt;p&gt;Also take a look at our &lt;a href=&#34;https://github.com/xournalpp/xournalpp/wiki/Coding-conventions&#34;&gt;coding conventions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Code documentation&lt;/h2&gt; &#xA;&lt;p&gt;The code documentation is generated using Doxygen.&lt;/p&gt; &#xA;&lt;p&gt;In order to generate the documentation yourself, first install Doxygen and graphviz, i.e.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install doxygen&#xA;sudo apt install graphviz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;on Debian or Ubuntu. Finally, execute &lt;code&gt;doxygen&lt;/code&gt; in the root directory of the repository. The documentation can be found in &lt;code&gt;doc/html&lt;/code&gt; and &lt;code&gt;doc/latex&lt;/code&gt;. Conveniently display the documentation with &lt;code&gt;python3 -m http.server 8000&lt;/code&gt; and visit the shown URL to view the documentation.&lt;/p&gt;</summary>
  </entry>
</feed>