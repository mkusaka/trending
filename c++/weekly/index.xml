<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-17T01:51:24Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>apple/swift</title>
    <updated>2023-12-17T01:51:24Z</updated>
    <id>tag:github.com,2023-12-17:/apple/swift</id>
    <link href="https://github.com/apple/swift" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Swift Programming Language&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://www.swift.org/assets/images/swift~dark.svg&#34;&gt; &#xA; &lt;img src=&#34;https://www.swift.org/assets/images/swift.svg?sanitize=true&#34; alt=&#34;Swift logo&#34; height=&#34;70&#34;&gt; &#xA;&lt;/picture&gt; &#xA;&lt;h1&gt;Swift Programming Language&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Architecture&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Build&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86_64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://ci.swift.org/job/oss-swift-package-macos&#34;&gt;&lt;img src=&#34;https://ci.swift.org/job/oss-swift-package-macos/lastCompletedBuild/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Ubuntu 18.04&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86_64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://ci.swift.org/job/oss-swift-package-ubuntu-18_04&#34;&gt;&lt;img src=&#34;https://ci.swift.org/job/oss-swift-package-ubuntu-18_04/lastCompletedBuild/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Ubuntu 20.04&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86_64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://ci.swift.org/job/oss-swift-package-ubuntu-20_04&#34;&gt;&lt;img src=&#34;https://ci.swift.org/job/oss-swift-package-ubuntu-20_04/lastCompletedBuild/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Ubuntu 20.04&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;AArch64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://ci.swift.org/job/oss-swift-package-ubuntu-20_04-aarch64&#34;&gt;&lt;img src=&#34;https://ci.swift.org/job/oss-swift-package-ubuntu-20_04-aarch64/lastCompletedBuild/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Ubuntu 22.04&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86_64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://ci.swift.org/job/oss-swift-package-ubuntu-22_04&#34;&gt;&lt;img src=&#34;https://ci.swift.org/job/oss-swift-package-ubuntu-22_04/lastCompletedBuild/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Ubuntu 22.04&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;AArch64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://ci.swift.org/job/oss-swift-package-ubuntu-22_04-aarch64&#34;&gt;&lt;img src=&#34;https://ci.swift.org/job/oss-swift-package-ubuntu-22_04-aarch64/lastCompletedBuild/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;CentOS 7&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86_64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://ci.swift.org/job/oss-swift-package-centos-7&#34;&gt;&lt;img src=&#34;https://ci.swift.org/job/oss-swift-package-centos-7/lastCompletedBuild/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Amazon Linux 2&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86_64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://ci.swift.org/job/oss-swift-package-amazon-linux-2&#34;&gt;&lt;img src=&#34;https://ci.swift.org/job/oss-swift-package-amazon-linux-2/lastCompletedBuild/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Amazon Linux 2&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;AArch64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://ci.swift.org/job/oss-swift-package-amazon-linux-2-aarch64&#34;&gt;&lt;img src=&#34;https://ci.swift.org/job/oss-swift-package-amazon-linux-2-aarch64/lastCompletedBuild/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Universal Base Image 9&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86_64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://ci.swift.org/job/oss-swift-package-ubi-9&#34;&gt;&lt;img src=&#34;https://ci.swift.org/job/oss-swift-package-ubi-9/lastCompletedBuild/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Swift Community-Hosted CI Platforms&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;strong&gt;OS&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Architecture&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Build&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/apple/swift-community-hosted-continuous-integration/raw/main/nodes/wasm32_ubuntu_20.04.json&#34;&gt;Ubuntu 20.04&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;wasm32&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-20.04-webassembly&#34;&gt;&lt;img src=&#34;https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-20.04-webassembly/lastCompletedBuild/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/apple/swift-community-hosted-continuous-integration/raw/main/nodes/x86_64_ubuntu_16_04_LTS_android.json&#34;&gt;Android&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ARMv7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-android&#34;&gt;&lt;img src=&#34;https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-android/lastCompletedBuild/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/apple/swift-community-hosted-continuous-integration/raw/main/nodes/x86_64_ubuntu_16_04_LTS_android.json&#34;&gt;Android&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;AArch64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-android-arm64&#34;&gt;&lt;img src=&#34;https://ci-external.swift.org/job/oss-swift-RA-linux-ubuntu-16.04-android-arm64/lastCompletedBuild/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/apple/swift-community-hosted-continuous-integration/raw/main/nodes/x86_64_windows_2019_VS2019.json&#34;&gt;Windows 2019 (VS 2019)&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;x86_64&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://ci-external.swift.org/job/oss-swift-windows-x86_64-vs2019&#34;&gt;&lt;img src=&#34;https://ci-external.swift.org/job/oss-swift-windows-x86_64-vs2019/lastCompletedBuild/badge/icon&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Welcome to Swift&lt;/h2&gt; &#xA;&lt;p&gt;Swift is a high-performance system programming language. It has a clean and modern syntax, offers seamless access to existing C and Objective-C code and frameworks, and is memory-safe by default.&lt;/p&gt; &#xA;&lt;p&gt;Although inspired by Objective-C and many other languages, Swift is not itself a C-derived language. As a complete and independent language, Swift packages core features like flow control, data structures, and functions, with high-level constructs like objects, protocols, closures, and generics. Swift embraces modules, eliminating the need for headers and the code duplication they entail.&lt;/p&gt; &#xA;&lt;p&gt;To learn more about the programming language, visit &lt;a href=&#34;https://swift.org/documentation/&#34;&gt;swift.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apple/swift/main/#contributing-to-swift&#34;&gt;Contributing to Swift&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apple/swift/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apple/swift/main/#swift-toolchains&#34;&gt;Swift Toolchains&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apple/swift/main/#build-failures&#34;&gt;Build Failures&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apple/swift/main/#learning-more&#34;&gt;Learning More&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing to Swift&lt;/h2&gt; &#xA;&lt;p&gt;Contributions to Swift are welcomed and encouraged! Please see the &lt;a href=&#34;https://swift.org/contributing/&#34;&gt;Contributing to Swift guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To be a truly great community, &lt;a href=&#34;https://swift.org/&#34;&gt;Swift.org&lt;/a&gt; needs to welcome developers from all walks of life, with different backgrounds, and with a wide range of experience. A diverse and friendly community will have more great ideas, more unique perspectives, and produce more great code. We will work diligently to make the Swift community welcoming to everyone.&lt;/p&gt; &#xA;&lt;p&gt;To give clarity of what is expected of our members, Swift has adopted the code of conduct defined by the Contributor Covenant. This document is used across many open source communities, and we think it articulates our values well. For more, see the &lt;a href=&#34;https://swift.org/code-of-conduct/&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;If you are interested in:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Contributing fixes and features to the compiler: See our &lt;a href=&#34;https://raw.githubusercontent.com/apple/swift/main/docs/HowToGuides/FirstPullRequest.md&#34;&gt;How to Submit Your First Pull Request guide&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Building the compiler as a one-off: See our &lt;a href=&#34;https://raw.githubusercontent.com/apple/swift/main/docs/HowToGuides/GettingStarted.md&#34;&gt;Getting Started guide&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Building a toolchain as a one-off: Follow the &lt;a href=&#34;https://raw.githubusercontent.com/apple/swift/main/docs/HowToGuides/GettingStarted.md&#34;&gt;Getting Started guide&lt;/a&gt; up until the &#34;Building the project&#34; section. After that, follow the instructions in the &lt;a href=&#34;https://raw.githubusercontent.com/apple/swift/main/#swift-toolchains&#34;&gt;Swift Toolchains&lt;/a&gt; section below.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We also have an &lt;a href=&#34;https://raw.githubusercontent.com/apple/swift/main/docs/HowToGuides/FAQ.md&#34;&gt;FAQ&lt;/a&gt; that answers common questions.&lt;/p&gt; &#xA;&lt;h3&gt;Swift Toolchains&lt;/h3&gt; &#xA;&lt;h4&gt;Building&lt;/h4&gt; &#xA;&lt;p&gt;Swift toolchains are created using the script &lt;a href=&#34;https://github.com/apple/swift/raw/main/utils/build-toolchain&#34;&gt;build-toolchain&lt;/a&gt;. This script is used by swift.org&#39;s CI to produce snapshots and can allow for one to locally reproduce such builds for development or distribution purposes. A typical invocation looks like the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  $ ./swift/utils/build-toolchain $BUNDLE_PREFIX&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;where &lt;code&gt;$BUNDLE_PREFIX&lt;/code&gt; is a string that will be prepended to the build date to give the bundle identifier of the toolchain&#39;s &lt;code&gt;Info.plist&lt;/code&gt;. For instance, if &lt;code&gt;$BUNDLE_PREFIX&lt;/code&gt; was &lt;code&gt;com.example&lt;/code&gt;, the toolchain produced will have the bundle identifier &lt;code&gt;com.example.YYYYMMDD&lt;/code&gt;. It will be created in the directory you run the script with a filename of the form: &lt;code&gt;swift-LOCAL-YYYY-MM-DD-a-osx.tar.gz&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Beyond building the toolchain, &lt;code&gt;build-toolchain&lt;/code&gt; also supports the following (non-exhaustive) set of useful options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--dry-run&lt;/code&gt;: Perform a dry run build. This is off by default.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--test&lt;/code&gt;: Test the toolchain after it has been compiled. This is off by default.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--distcc&lt;/code&gt;: Use distcc to speed up the build by distributing the C++ part of the swift build. This is off by default.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--sccache&lt;/code&gt;: Use sccache to speed up subsequent builds of the compiler by caching more C++ build artifacts. This is off by default.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More options may be added over time. Please pass &lt;code&gt;--help&lt;/code&gt; to &lt;code&gt;build-toolchain&lt;/code&gt; to see the full set of options.&lt;/p&gt; &#xA;&lt;h4&gt;Installing into Xcode&lt;/h4&gt; &#xA;&lt;p&gt;On macOS if one wants to install such a toolchain into Xcode:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Untar and copy the toolchain to one of &lt;code&gt;/Library/Developer/Toolchains/&lt;/code&gt; or &lt;code&gt;~/Library/Developer/Toolchains/&lt;/code&gt;. E.g.:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;  $ sudo tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx.tar.gz -C /&#xA;  $ tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx.tar.gz -C ~/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The script also generates an archive containing debug symbols which can be installed over the main archive allowing symbolication of any compiler crashes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  $ sudo tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx-symbols.tar.gz -C /&#xA;  $ tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx-symbols.tar.gz -C ~/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Specify the local toolchain for Xcode&#39;s use via &lt;code&gt;Xcode-&amp;gt;Toolchains&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Build Failures&lt;/h3&gt; &#xA;&lt;p&gt;Try the suggestions in &lt;a href=&#34;https://raw.githubusercontent.com/apple/swift/main/docs/HowToGuides/GettingStarted.md#troubleshooting-build-issues&#34;&gt;Troubleshooting build issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Make sure you are using the &lt;a href=&#34;https://raw.githubusercontent.com/apple/swift/main/docs/HowToGuides/GettingStarted.md#installing-dependencies&#34;&gt;correct release&lt;/a&gt; of Xcode.&lt;/p&gt; &#xA;&lt;p&gt;If you have changed Xcode versions but still encounter errors that appear to be related to the Xcode version, try passing &lt;code&gt;--clean&lt;/code&gt; to &lt;code&gt;build-script&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When a new version of Xcode is released, you can update your build without recompiling the entire project by passing &lt;code&gt;--reconfigure&lt;/code&gt; to &lt;code&gt;build-script&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Learning More&lt;/h2&gt; &#xA;&lt;p&gt;Be sure to look at the &lt;a href=&#34;https://raw.githubusercontent.com/apple/swift/main/docs/README.md&#34;&gt;documentation index&lt;/a&gt; for a bird&#39;s eye view of the available documentation. In particular, the documents titled &lt;a href=&#34;https://raw.githubusercontent.com/apple/swift/main/docs/DebuggingTheCompiler.md&#34;&gt;Debugging the Swift Compiler&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/apple/swift/main/docs/ContinuousIntegration.md&#34;&gt;Continuous Integration for Swift&lt;/a&gt; are very helpful to understand before submitting your first PR.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>RobotLocomotion/drake</title>
    <updated>2023-12-17T01:51:24Z</updated>
    <id>tag:github.com,2023-12-17:/RobotLocomotion/drake</id>
    <link href="https://github.com/RobotLocomotion/drake" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Model-based design and verification for robotics.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Drake&lt;/h1&gt; &#xA;&lt;p&gt;Model-Based Design and Verification for Robotics.&lt;/p&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://drake.mit.edu&#34;&gt;Drake Documentation&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>OpenSalamander/salamander</title>
    <updated>2023-12-17T01:51:24Z</updated>
    <id>tag:github.com,2023-12-17:/OpenSalamander/salamander</id>
    <link href="https://github.com/OpenSalamander/salamander" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open Salamander&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Open Salamander&lt;/h1&gt; &#xA;&lt;p&gt;Open Salamander is a fast and reliable two-panel file manager for Windows.&lt;/p&gt; &#xA;&lt;h2&gt;Origin&lt;/h2&gt; &#xA;&lt;p&gt;The original version of Servant Salamander was developed by Petr Šolín during his studies at the Czech Technical University. He released it as freeware in 1997. After graduation, Petr Šolín founded the company &lt;a href=&#34;https://www.altap.cz/&#34;&gt;Altap&lt;/a&gt; in cooperation with Jan Ryšavý. In 2001 they released the first shareware version of the program. In 2007 a new version was renamed to Altap Salamander 2.5. Many other programmers and translators &lt;a href=&#34;https://raw.githubusercontent.com/OpenSalamander/salamander/main/AUTHORS&#34;&gt;contributed&lt;/a&gt; to the project. In 2019, Altap was acquired by &lt;a href=&#34;https://www.finesoftware.eu/&#34;&gt;Fine&lt;/a&gt;. After this acquisition, Altap Salamander 4.0 was released as freeware. In 2023, the project was open sourced under the GPLv2 license as Open Salamander 5.0.&lt;/p&gt; &#xA;&lt;p&gt;The name Servant Salamander came about when Petr Šolín and his friend Pavel Schreib were brainstorming name for this project. At that time, the well-known file managers were the aging Norton Commander and the rising Windows Commander. They questioned why a file manager should be named Commander, which implied that it commanded instead of served. This thought led to the birth of the name Servant Salamander.&lt;/p&gt; &#xA;&lt;p&gt;Please bear with us as Salamander was our first major project where we learned to program in C++. From a technology standpoint, it does not use &lt;a href=&#34;https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines&#34;&gt;C++ Core Guidelines&lt;/a&gt;, smart pointers, &lt;a href=&#34;https://en.cppreference.com/w/cpp/language/raii&#34;&gt;RAII&lt;/a&gt;, &lt;a href=&#34;https://github.com/microsoft/STL&#34;&gt;STL&lt;/a&gt;, or &lt;a href=&#34;https://github.com/microsoft/wil&#34;&gt;WIL&lt;/a&gt;, all of which were just beginning to evolve during the time Salamander was created. Many of the comments are written in Czech, but this is manageable due to recent progress in AI-powered translation. Salamander is a pure WinAPI application and does not use any frameworks, such as MFC.&lt;/p&gt; &#xA;&lt;p&gt;We would like to thank &lt;a href=&#34;https://www.finesoftware.eu/&#34;&gt;Fine company&lt;/a&gt; for making the open sourced Salamander release possible.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows 10 or newer&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt;Visual Studio 2022&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/cpp/build/vscpp-step-0-installation?view=msvc-170&#34;&gt;Desktop development with C++&lt;/a&gt; workload installed in VS2022&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.microsoft.com/en-us/windows/downloads/windows-sdk/&#34;&gt;Windows 11 (10.0.22621.0) SDK&lt;/a&gt; optional component installed in VS2022&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Optional requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-windows&#34;&gt;PowerShell 7.2&lt;/a&gt; or newer&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/answers/questions/265752/htmlhelp-workshop-download-for-chm-compiler-instal&#34;&gt;HTMLHelp Workshop 1.3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Set the &lt;code&gt;OPENSAL_BUILD_DIR&lt;/code&gt; environment variable to specify the build directory. Make sure the path has a trailing backslah, e.q. &lt;code&gt;D:\Build\OpenSal\&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;p&gt;Solution &lt;code&gt;\src\vcxproj\salamand.sln&lt;/code&gt; may be built from within Visual Studio or from the command-line using &lt;code&gt;\src\vcxproj\rebuild.cmd&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;\src\vcxproj\!populate_build_dir.cmd&lt;/code&gt; to populate build directory with files required to run Open Salamander.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;This project welcomes contributions to build and enhance Open Salamander!&lt;/p&gt; &#xA;&lt;h2&gt;Repository Content&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;\convert         Conversion tables for the Convert command&#xA;\doc             Documentation&#xA;\help            User manual source files&#xA;\src             Open Salamander core source code&#xA;\src\common      Shared libraries&#xA;\src\common\dep  Shared third-party libraries&#xA;\src\lang        English resources&#xA;\src\plugins     Plugins source code&#xA;\src\reglib      Access to Windows Registry files&#xA;\src\res         Image resources&#xA;\src\salmon      Crash detecting and reporting&#xA;\src\salopen     Open files helper&#xA;\src\salspawn    Process spawning helper&#xA;\src\setup       Installer and uinstaller&#xA;\src\sfx7zip     Self-extractor based on 7-Zip&#xA;\src\shellext    Shell extension DLL&#xA;\src\translator  Translate Salamander UI to other languages&#xA;\src\tserver     Trace Server to display info and error messages&#xA;\src\vcxproj     Visual Studio project files&#xA;\tools           Minor utilities&#xA;\translations    Translations into other languages&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A few Altap Salamander 4.0 plugins are either not included or cannot be compiled. For instance, the PictView engine &lt;code&gt;pvw32cnv.dll&lt;/code&gt; is not open-sourced, so we should consider switching to &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/win32/wic/-wic-about-windows-imaging-codec&#34;&gt;WIC&lt;/a&gt; or another library. The Encrypt plugin is incompatible with modern SSD disks and has been deprecated. The UnRAR plugin lacks &lt;a href=&#34;https://www.rarlab.com/rar_add.htm&#34;&gt;unrar.dll&lt;/a&gt;, and the FTP plugin is missing &lt;a href=&#34;https://www.openssl.org/&#34;&gt;OpenSSL&lt;/a&gt; libraries. Both issues are solvable as both projects are open source. To build WinSCP plugin you need Embarcadero C++ Builder.&lt;/p&gt; &#xA;&lt;p&gt;All the source code uses UTF-8-BOM encoding and is formatted with &lt;code&gt;clang-format&lt;/code&gt;. Refer to the &lt;code&gt;\normalize.ps1&lt;/code&gt; script for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.altap.cz/&#34;&gt;Altap Salamander Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Altap Salamander 4.0 &lt;a href=&#34;https://www.altap.cz/salamander/features/&#34;&gt;features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Altap Salamander 4.0 &lt;a href=&#34;https://www.altap.cz/salamander/help/&#34;&gt;documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Servant Salamander and Altap Salamander &lt;a href=&#34;https://www.altap.cz/salamander/changelogs/&#34;&gt;changelogs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.altap.cz/&#34;&gt;User Community Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Altap Salamander on &lt;a href=&#34;https://en.wikipedia.org/wiki/Altap_Salamander&#34;&gt;Wikipedia&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Open Salamander is open source software licensed &lt;a href=&#34;https://raw.githubusercontent.com/OpenSalamander/salamander/main/doc/license_gpl.txt&#34;&gt;GPLv2&lt;/a&gt; and later. Individual &lt;a href=&#34;https://raw.githubusercontent.com/OpenSalamander/salamander/main/doc/third_party.txt&#34;&gt;files and libraries&lt;/a&gt; have a different, but compatible license.&lt;/p&gt;</summary>
  </entry>
</feed>