<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-12T01:45:05Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wolfpld/tracy</title>
    <updated>2023-11-12T01:45:05Z</updated>
    <id>tag:github.com,2023-11-12:/wolfpld/tracy</id>
    <link href="https://github.com/wolfpld/tracy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Frame profiler&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tracy Profiler&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/wolfpld/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wolfpld/tracy/master/.github/sponsor.png&#34; alt=&#34;Sponsor&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;A real time, nanosecond resolution, remote telemetry, hybrid frame and sampling profiler for games and other applications.&lt;/h3&gt; &#xA;&lt;p&gt;Tracy supports profiling CPU (Direct support is provided for C, C++, and Lua integration. At the same time, third-party bindings to many other languages exist on the internet, such as &lt;a href=&#34;https://github.com/nagisa/rust_tracy_client&#34;&gt;Rust&lt;/a&gt;, &lt;a href=&#34;https://github.com/nektro/zig-tracy&#34;&gt;Zig&lt;/a&gt;, &lt;a href=&#34;https://github.com/clibequilibrium/Tracy-CSharp&#34;&gt;C#&lt;/a&gt;, &lt;a href=&#34;https://github.com/imandra-ai/ocaml-tracy&#34;&gt;OCaml&lt;/a&gt;, &lt;a href=&#34;https://github.com/oskarnp/odin-tracy&#34;&gt;Odin&lt;/a&gt;, etc.), GPU (All major graphic APIs: OpenGL, Vulkan, Direct3D 11/12, OpenCL.), memory allocations, locks, context switches, automatically attribute screenshots to captured frames, and much more.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wolfpld/tracy/releases/latest/download/tracy.pdf&#34;&gt;Documentation&lt;/a&gt; for usage and build process instructions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wolfpld/tracy/releases&#34;&gt;Releases&lt;/a&gt; containing the documentation (&lt;code&gt;tracy.pdf&lt;/code&gt;) and compiled Windows x64 binaries (&lt;code&gt;Tracy-&amp;lt;version&amp;gt;.7z&lt;/code&gt;) as assets&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wolfpld/tracy/master/NEWS&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tracy.nereid.pl/&#34;&gt;Interactive demo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wolfpld/tracy/master/doc/profiler.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wolfpld/tracy/master/doc/profiler2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wolfpld/tracy/master/doc/profiler3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=fB5B46lbapc&#34;&gt;Introduction to Tracy Profiler v0.2&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=3SXpDpDh2Uo&#34;&gt;New features in Tracy Profiler v0.3&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=eAkgkaO8B9o&#34;&gt;New features in Tracy Profiler v0.4&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=P6E7qLMmzTQ&#34;&gt;New features in Tracy Profiler v0.5&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=uJkrFgriuOo&#34;&gt;New features in Tracy Profiler v0.6&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=_hU7vw00MZ4&#34;&gt;New features in Tracy Profiler v0.7&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=30wpRpHTTag&#34;&gt;New features in Tracy Profiler v0.8&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ckcr4lyf/EvilAppleJuice-ESP32</title>
    <updated>2023-11-12T01:45:05Z</updated>
    <id>tag:github.com,2023-11-12:/ckcr4lyf/EvilAppleJuice-ESP32</id>
    <link href="https://github.com/ckcr4lyf/EvilAppleJuice-ESP32" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Spam Apple Proximity Messages via an ESP32&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;EvilAppleJuice ESP32&lt;/h1&gt; &#xA;&lt;p&gt;Spam BLE advertisements on iPhones!&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;iPhone 15s (latest)&lt;/th&gt; &#xA;   &lt;th&gt;Older iPhones&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&#xA;    &lt;video controls width=&#34;250&#34; src=&#34;https://user-images.githubusercontent.com/6680615/274864225-53ed6d7c-0569-4f22-b55b-bc9973c4bc93.mp4&#34;&gt;&lt;/video&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;video controls width=&#34;250&#34; src=&#34;https://user-images.githubusercontent.com/6680615/274864287-c6e871fd-9fdf-4507-ae21-a566beead5cc.mp4&#34;&gt;&lt;/video&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Based off of the work of &lt;a href=&#34;https://github.com/ronaldstoner&#34;&gt;ronaldstoner&lt;/a&gt; in the &lt;a href=&#34;https://github.com/ECTO-1A/AppleJuice/raw/e6a61f6a199075f5bb5b1a00768e317571d25bb9/ESP32-Arduino/applejuice.ino&#34;&gt;AppleJuice repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;With the randomization optimizations it can render an iPhone almost useless with a single ESP32 (a new notification as soon as you close the old one).&lt;/p&gt; &#xA;&lt;p&gt;Confirmed on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iPhone 14 Pro (running iOS 16.6.1)&lt;/li&gt; &#xA; &lt;li&gt;iPhone 13 Pro (TBD which iOS)&lt;/li&gt; &#xA; &lt;li&gt;iPhone 11 (running iOS 16.6.1)&lt;/li&gt; &#xA; &lt;li&gt;iPhone X (running iOS 14.8 (18H17)) - only &#34;AppleTV Keyboard&#34;, &#34;TV Color Balance&#34;, &#34;AppleTV Setup&#34;, &#34;AppleTV Homekit Setup&#34;, &#34;AppleTV New User&#34;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Not working on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iPhone 4S (running iOS 10.3 (14E277))&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Other observations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Doesn&#39;t seem to spawn notifications if Keyboard is open / Camera is open&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Video Demo&lt;/h3&gt; &#xA;&lt;p&gt;Single ESP32 vs. iPhone 14 Pro @ iOS 16.6.1&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ECTO-1A/AppleJuice/assets/6680615/47466ed6-03c9-43b2-a0d0-aac2e2aaa228&#34;&gt;https://github.com/ECTO-1A/AppleJuice/assets/6680615/47466ed6-03c9-43b2-a0d0-aac2e2aaa228&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Notable Differences&lt;/h2&gt; &#xA;&lt;p&gt;This implementation makes the following changes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Random source MAC address (including &lt;code&gt;BLE_ADDR_TYPE_RANDOM&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Randomly pick BLE Advertisement Type (&lt;a href=&#34;https://github.com/ECTO-1A/AppleJuice/pull/25&#34;&gt;this may lead to more success&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Randomly pick one of the possible devices&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And it makes these random choices every time it runs (default re-advertise every second).&lt;/p&gt; &#xA;&lt;p&gt;Given the 29 devices and the 3 advertisement types, there are a total of 87 unique possible advertisements (ignoring the random source MAC) possible, of which one is broadcast every second.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Clone the repo, and easiest would be to use VS Code w/ PlatformIO to upload it to your ESP32.&lt;/p&gt; &#xA;&lt;p&gt;This project has been tested on an &lt;a href=&#34;https://wiki.luatos.com/chips/esp32c3/board.html&#34;&gt;ESP32-C3 from AirM2M&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>trojan-gfw/trojan</title>
    <updated>2023-11-12T01:45:05Z</updated>
    <id>tag:github.com,2023-11-12:/trojan-gfw/trojan</id>
    <link href="https://github.com/trojan-gfw/trojan" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An unidentifiable mechanism that helps you bypass GFW.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;trojan&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/GreaterFire/Trojan-GFW/_build/latest?definitionId=5&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/GreaterFire/Trojan-GFW/_apis/build/status/trojan-gfw.trojan?branchName=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;An unidentifiable mechanism that helps you bypass GFW.&lt;/p&gt; &#xA;&lt;p&gt;Trojan features multiple protocols over &lt;code&gt;TLS&lt;/code&gt; to avoid both active/passive detections and ISP &lt;code&gt;QoS&lt;/code&gt; limitations.&lt;/p&gt; &#xA;&lt;p&gt;Trojan is not a fixed program or protocol. It&#39;s an idea, an idea that imitating the most common service, to an extent that it behaves identically, could help you get across the Great FireWall permanently, without being identified ever. We are the GreatER Fire; we ship Trojan Horses.&lt;/p&gt; &#xA;&lt;h2&gt;Documentations&lt;/h2&gt; &#xA;&lt;p&gt;An online documentation can be found &lt;a href=&#34;https://trojan-gfw.github.io/trojan/&#34;&gt;here&lt;/a&gt;.&lt;br&gt; Installation guide on various platforms can be found in the &lt;a href=&#34;https://github.com/trojan-gfw/trojan/wiki/Binary-&amp;amp;-Package-Distributions&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/trojan-gfw/trojan/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cmake.org/&#34;&gt;CMake&lt;/a&gt; &amp;gt;= 3.7.2&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.boost.org/&#34;&gt;Boost&lt;/a&gt; &amp;gt;= 1.66.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.openssl.org/&#34;&gt;OpenSSL&lt;/a&gt; &amp;gt;= 1.1.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.mysql.com/downloads/connector/c/&#34;&gt;libmysqlclient&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/trojan-gfw/trojan/master/LICENSE&#34;&gt;GPLv3&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>