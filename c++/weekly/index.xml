<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-04T01:42:19Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>facebookincubator/velox</title>
    <updated>2022-09-04T01:42:19Z</updated>
    <id>tag:github.com,2022-09-04:/facebookincubator/velox</id>
    <link href="https://github.com/facebookincubator/velox" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A C++ vectorized database acceleration library aimed to optimizing query engines and data processing systems.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/facebookincubator/velox/main/static/logo.svg?sanitize=true&#34; alt=&#34;Velox logo&#34; width=&#34;50%&#34; align=&#34;center&#34;&gt; &#xA;&lt;p&gt;Velox is a C++ database acceleration library which provides reusable, extensible, and high-performance data processing components. These components can be reused to build compute engines focused on different analytical workloads, including batch, interactive, stream processing, and AI/ML. Velox was created by Facebook and it is currently developed in partnership with Intel, ByteDance, and Ahana.&lt;/p&gt; &#xA;&lt;p&gt;In common usage scenarios, Velox takes a fully optimized query plan as input and performs the described computation. Considering Velox does not provide a SQL parser, a dataframe layer, or a query optimizer, it is usually not meant to be used directly by end-users; rather, it is mostly used by developers integrating and optimizing their compute engines.&lt;/p&gt; &#xA;&lt;p&gt;Velox provides the following high-level components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Type&lt;/strong&gt;: a generic typing system that supports scalar, complex, and nested types, such as structs, maps, arrays, tensors, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vector&lt;/strong&gt;: an &lt;a href=&#34;https://facebookincubator.github.io/velox/develop/vectors.html&#34;&gt;Arrow-compatible columnar memory layout module&lt;/a&gt;, which provides multiple encodings, such as Flat, Dictionary, Constant, Sequence/RLE, and Bias, in addition to a lazy materialization pattern and support for out-of-order writes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Expression Eval&lt;/strong&gt;: a &lt;a href=&#34;https://facebookincubator.github.io/velox/develop/expression-evaluation.html&#34;&gt;fully vectorized expression evaluation engine&lt;/a&gt; that allows expressions to be efficiently executed on top of Vector/Arrow encoded data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Function Packages&lt;/strong&gt;: sets of vectorized function implementations following the Presto and Spark semantic.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Operators&lt;/strong&gt;: implementation of common data processing operators such as scans, projection, filtering, groupBy, orderBy, shuffle, &lt;a href=&#34;https://facebookincubator.github.io/velox/develop/joins.html&#34;&gt;hash join&lt;/a&gt;, unnest, and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;I/O&lt;/strong&gt;: a generic connector interface that allows different file formats (ORC/DWRF and Parquet) and storage adapters (S3, HDFS, local files) to be used.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Network Serializers&lt;/strong&gt;: an interface where different wire protocols can be implemented, used for network communication, supporting &lt;a href=&#34;https://prestodb.io/docs/current/develop/serialized-page.html&#34;&gt;PrestoPage&lt;/a&gt; and Spark&#39;s UnsafeRow.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Resource Management&lt;/strong&gt;: a collection of primitives for handling computational resources, such as &lt;a href=&#34;https://facebookincubator.github.io/velox/develop/arena.html&#34;&gt;memory arenas&lt;/a&gt; and buffer management, tasks, drivers, and thread pools for CPU and thread execution, spilling, and caching.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Velox is extensible and allows developers to define their own engine-specific specializations, including:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Custom types&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://facebookincubator.github.io/velox/develop/scalar-functions.html&#34;&gt;Simple and vectorized functions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://facebookincubator.github.io/velox/develop/aggregate-functions.html&#34;&gt;Aggregate functions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Operators&lt;/li&gt; &#xA; &lt;li&gt;File formats&lt;/li&gt; &#xA; &lt;li&gt;Storage adapters&lt;/li&gt; &#xA; &lt;li&gt;Network serializers&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Examples of extensibility and integration with different component APIs &lt;a href=&#34;https://raw.githubusercontent.com/facebookincubator/velox/main/velox/examples&#34;&gt;can be found here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Developer guides detailing many aspects of the library, in addition to the list of available functions &lt;a href=&#34;https://facebookincubator.github.io/velox&#34;&gt;can be found here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;We provide scripts to help developers setup and install Velox dependencies.&lt;/p&gt; &#xA;&lt;h3&gt;Get the Velox Source&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recursive https://github.com/facebookincubator/velox.git&#xA;cd velox&#xA;# if you are updating an existing checkout&#xA;git submodule sync --recursive&#xA;git submodule update --init --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setting up on macOS&lt;/h3&gt; &#xA;&lt;p&gt;Once you have checked out Velox, on an Intel MacOS machine you can setup and then build like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ./scripts/setup-macos.sh &#xA;$ make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On an M1 MacOS machine you can build like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ CPU_TARGET=&#34;arm64&#34; ./scripts/setup-macos.sh&#xA;$ CPU_TARGET=&#34;arm64&#34; make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also produce intel binaries on an M1, use &lt;code&gt;CPU_TARGET=&#34;sse&#34;&lt;/code&gt; for the above.&lt;/p&gt; &#xA;&lt;h3&gt;Setting up on Linux (Ubuntu 20.04 or later)&lt;/h3&gt; &#xA;&lt;p&gt;Once you have checked out Velox, you can setup and build like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ./scripts/setup-ubuntu.sh &#xA;$ make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building Velox&lt;/h3&gt; &#xA;&lt;p&gt;Run &lt;code&gt;make&lt;/code&gt; in the root directory to compile the sources. For development, use &lt;code&gt;make debug&lt;/code&gt; to build a non-optimized debug version, or &lt;code&gt;make release&lt;/code&gt; to build an optimized version. Use &lt;code&gt;make unittest&lt;/code&gt; to build and run tests.&lt;/p&gt; &#xA;&lt;p&gt;Note that,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Velox requires C++17 , thus minimum supported compiler is GCC 5.0 and Clang 5.0.&lt;/li&gt; &#xA; &lt;li&gt;Velox requires the CPU to support instruction sets: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;bmi&lt;/li&gt; &#xA;   &lt;li&gt;bmi2&lt;/li&gt; &#xA;   &lt;li&gt;f16c&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Velox tries to use the following (or equivalent) instruction sets where available: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;On Intel CPUs &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;avx&lt;/li&gt; &#xA;     &lt;li&gt;avx2&lt;/li&gt; &#xA;     &lt;li&gt;sse&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;On ARM &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Neon&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building Velox with docker-compose&lt;/h3&gt; &#xA;&lt;p&gt;If you don&#39;t want to install the system dependencies required to build Velox, you can also build and run tests for Velox on a docker container using &lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;docker-compose&lt;/a&gt;. Use the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ docker-compose build ubuntu-cpp&#xA;$ docker-compose run ubuntu-cpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Check our &lt;a href=&#34;https://raw.githubusercontent.com/facebookincubator/velox/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; to learn about how to contribute to the project.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;The main communication channel with the Velox OSS community is through the &lt;a href=&#34;http://velox-oss.slack.com&#34;&gt;the Velox-OSS Slack workspace&lt;/a&gt;. Please reach out to &lt;strong&gt;&lt;a href=&#34;mailto:velox@fb.com&#34;&gt;velox@fb.com&lt;/a&gt;&lt;/strong&gt; to get access to Velox Slack Channel.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Velox is licensed under the Apache 2.0 License. A copy of the license &lt;a href=&#34;https://raw.githubusercontent.com/facebookincubator/velox/main/LICENSE&#34;&gt;can be found here.&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google/googletest</title>
    <updated>2022-09-04T01:42:19Z</updated>
    <id>tag:github.com,2022-09-04:/google/googletest</id>
    <link href="https://github.com/google/googletest" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GoogleTest - Google Testing and Mocking Framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GoogleTest&lt;/h1&gt; &#xA;&lt;h3&gt;Announcements&lt;/h3&gt; &#xA;&lt;h4&gt;Live at Head&lt;/h4&gt; &#xA;&lt;p&gt;GoogleTest now follows the &lt;a href=&#34;https://abseil.io/about/philosophy#upgrade-support&#34;&gt;Abseil Live at Head philosophy&lt;/a&gt;. We recommend &lt;a href=&#34;https://github.com/abseil/abseil-cpp/raw/master/FAQ.md#what-is-live-at-head-and-how-do-i-do-it&#34;&gt;updating to the latest commit in the &lt;code&gt;main&lt;/code&gt; branch as often as possible&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Documentation Updates&lt;/h4&gt; &#xA;&lt;p&gt;Our documentation is now live on GitHub Pages at &lt;a href=&#34;https://google.github.io/googletest/&#34;&gt;https://google.github.io/googletest/&lt;/a&gt;. We recommend browsing the documentation on GitHub Pages rather than directly in the repository.&lt;/p&gt; &#xA;&lt;h4&gt;Release 1.12.1&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/google/googletest/releases/tag/release-1.12.1&#34;&gt;Release 1.12.1&lt;/a&gt; is now available.&lt;/p&gt; &#xA;&lt;p&gt;The 1.12.x branch will be the last to support C++11. Future releases will require at least C++14.&lt;/p&gt; &#xA;&lt;h4&gt;Coming Soon&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We are planning to take a dependency on &lt;a href=&#34;https://github.com/abseil/abseil-cpp&#34;&gt;Abseil&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;More documentation improvements are planned.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Welcome to &lt;strong&gt;GoogleTest&lt;/strong&gt;, Google&#39;s C++ test framework!&lt;/h2&gt; &#xA;&lt;p&gt;This repository is a merger of the formerly separate GoogleTest and GoogleMock projects. These were so closely related that it makes sense to maintain and release them together.&lt;/p&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://google.github.io/googletest/&#34;&gt;GoogleTest User&#39;s Guide&lt;/a&gt; for documentation. We recommend starting with the &lt;a href=&#34;https://google.github.io/googletest/primer.html&#34;&gt;GoogleTest Primer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;More information about building GoogleTest can be found at &lt;a href=&#34;https://raw.githubusercontent.com/google/googletest/main/googletest/README.md&#34;&gt;googletest/README.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An &lt;a href=&#34;https://en.wikipedia.org/wiki/XUnit&#34;&gt;xUnit&lt;/a&gt; test framework.&lt;/li&gt; &#xA; &lt;li&gt;Test discovery.&lt;/li&gt; &#xA; &lt;li&gt;A rich set of assertions.&lt;/li&gt; &#xA; &lt;li&gt;User-defined assertions.&lt;/li&gt; &#xA; &lt;li&gt;Death tests.&lt;/li&gt; &#xA; &lt;li&gt;Fatal and non-fatal failures.&lt;/li&gt; &#xA; &lt;li&gt;Value-parameterized tests.&lt;/li&gt; &#xA; &lt;li&gt;Type-parameterized tests.&lt;/li&gt; &#xA; &lt;li&gt;Various options for running the tests.&lt;/li&gt; &#xA; &lt;li&gt;XML test report generation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Platforms&lt;/h2&gt; &#xA;&lt;p&gt;GoogleTest follows Google&#39;s &lt;a href=&#34;https://opensource.google/documentation/policies/cplusplus-support&#34;&gt;Foundational C++ Support Policy&lt;/a&gt;. See &lt;a href=&#34;https://github.com/google/oss-policies-info/raw/main/foundational-cxx-support-matrix.md&#34;&gt;this table&lt;/a&gt; for a list of currently supported versions compilers, platforms, and build tools.&lt;/p&gt; &#xA;&lt;h2&gt;Who Is Using GoogleTest?&lt;/h2&gt; &#xA;&lt;p&gt;In addition to many internal projects at Google, GoogleTest is also used by the following notable projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;http://www.chromium.org/&#34;&gt;Chromium projects&lt;/a&gt; (behind the Chrome browser and Chrome OS).&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;http://llvm.org/&#34;&gt;LLVM&lt;/a&gt; compiler.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/protobuf&#34;&gt;Protocol Buffers&lt;/a&gt;, Google&#39;s data interchange format.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;http://opencv.org/&#34;&gt;OpenCV&lt;/a&gt; computer vision library.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Related Open Source Projects&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nholthaus/gtest-runner&#34;&gt;GTest Runner&lt;/a&gt; is a Qt5 based automated test-runner and Graphical User Interface with powerful features for Windows and Linux platforms.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ospector/gtest-gbar&#34;&gt;GoogleTest UI&lt;/a&gt; is a test runner that runs your test binary, allows you to track its progress via a progress bar, and displays a list of test failures. Clicking on one shows failure text. GoogleTest UI is written in C#.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kinow/gtest-tap-listener&#34;&gt;GTest TAP Listener&lt;/a&gt; is an event listener for GoogleTest that implements the &lt;a href=&#34;https://en.wikipedia.org/wiki/Test_Anything_Protocol&#34;&gt;TAP protocol&lt;/a&gt; for test result output. If your test runner understands TAP, you may find it useful.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/google/gtest-parallel&#34;&gt;gtest-parallel&lt;/a&gt; is a test runner that runs tests from your binary in parallel to provide significant speed-up.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=DavidSchuldenfrei.gtest-adapter&#34;&gt;GoogleTest Adapter&lt;/a&gt; is a VS Code extension allowing to view GoogleTest in a tree view and run/debug your tests.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/matepek/vscode-catch2-test-adapter&#34;&gt;C++ TestMate&lt;/a&gt; is a VS Code extension allowing to view GoogleTest in a tree view and run/debug your tests.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cornichon/&#34;&gt;Cornichon&lt;/a&gt; is a small Gherkin DSL parser that generates stub code for GoogleTest.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing Changes&lt;/h2&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://github.com/google/googletest/raw/main/CONTRIBUTING.md&#34;&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; for details on how to contribute to this project.&lt;/p&gt; &#xA;&lt;p&gt;Happy testing!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cemu-project/Cemu</title>
    <updated>2022-09-04T01:42:19Z</updated>
    <id>tag:github.com,2022-09-04:/cemu-project/Cemu</id>
    <link href="https://github.com/cemu-project/Cemu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cemu is a Wii U emulator&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;strong&gt;Cemu - Wii U emulator&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cemu-project/Cemu/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/cemu-project/Cemu/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Process&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/5psYsup&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/286429969104764928?label=Cemu&amp;amp;logo=discord&amp;amp;logoColor=FFFFFF&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is the code repository of Cemu, a Wii U emulator that is able to run most Wii U games and homebrew in a playable state. It&#39;s written in C/C++ and is being actively developed with new features and fixes to increase compatibility, convenience and usability.&lt;/p&gt; &#xA;&lt;p&gt;Cemu is currently only available for 64-bit Windows and Linux devices.&lt;/p&gt; &#xA;&lt;h3&gt;Links:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/cemu/comments/wwa22c/cemu_20_announcement_linux_builds_opensource_and/&#34;&gt;Original 2.0 announcement post&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cemu.info&#34;&gt;Official Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.cemu.info/wiki/Main_Page&#34;&gt;Compatibility List/Wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reddit.com/r/Cemu&#34;&gt;Official Subreddit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/5psYsup&#34;&gt;Official Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cemu.cfw.guide&#34;&gt;Unofficial Setup Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Other relevant repositories:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cemu-project/Cemu-Language&#34;&gt;Cemu-Language&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ActualMandM/cemu_graphic_packs&#34;&gt;Cemu&#39;s Community Graphic Packs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;You can download the latest Cemu releases from the &lt;a href=&#34;https://github.com/cemu-project/Cemu/releases/&#34;&gt;Github Releases&lt;/a&gt; or from &lt;a href=&#34;https://cemu.info&#34;&gt;Cemu&#39;s website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Cemu is currently only available in a portable format so no installation is required besides extracting it in a safe place.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/cemu-project/Cemu/issues/1&#34;&gt;Current State Of Linux builds&lt;/a&gt; for information on using Cemu natively on Linux.&lt;/p&gt; &#xA;&lt;p&gt;Pre-2.0 releases can be found on Cemu&#39;s &lt;a href=&#34;https://cemu.info/changelog.html&#34;&gt;changelog page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build Instructions&lt;/h2&gt; &#xA;&lt;p&gt;To compile Cemu yourself on Windows or Linux, view the &lt;a href=&#34;https://raw.githubusercontent.com/cemu-project/Cemu/main/BUILD.md&#34;&gt;BUILD.md file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;Issues with the emulator should be filed using &lt;a href=&#34;https://github.com/cemu-project/Cemu/issues&#34;&gt;Github Issues&lt;/a&gt;.&lt;br&gt; The old bug tracker can be found at &lt;a href=&#34;http://bugs.cemu.info&#34;&gt;bugs.cemu.info&lt;/a&gt; and still contains relevant issues and feature suggestions.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are very welcome. For easier coordination you can visit the developer discussion channel on Discord: &lt;a href=&#34;https://discord.gg/5psYsup&#34;&gt;https://discord.gg/5psYsup&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If coding isn&#39;t your thing, testing games and making detailed bug reports or updating the (usually outdated) compatibility wiki is also appreciated!&lt;/p&gt; &#xA;&lt;p&gt;Questions about Cemu&#39;s software architecture can also be answered on Discord. Alternative communication channels (like IRC) are being considered.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Cemu is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/cemu-project/Cemu/main/LICENSE.txt&#34;&gt;Mozilla Public License 2.0&lt;/a&gt;. Exempt from this are all files in the dependencies directory for which the licenses of the original code apply as well as some individual files in the src folder, as specified in those file headers respectively.&lt;/p&gt;</summary>
  </entry>
</feed>