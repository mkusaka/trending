<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-13T01:42:20Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mumble-voip/mumble</title>
    <updated>2024-10-13T01:42:20Z</updated>
    <id>tag:github.com,2024-10-13:/mumble-voip/mumble</id>
    <link href="https://github.com/mumble-voip/mumble" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mumble is an open-source, low-latency, high quality voice chat software.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mumble-voip/mumble/master/screenshots/Mumble.png&#34; alt=&#34;Mumble screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Mumble - Open Source voice-chat software&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.mumble.info&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Website-https%3A%2F%2Fwww.mumble.info-blue?style=for-the-badge&#34; alt=&#34;https://www.mumble.info&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://matrix.to/#/%23mumble:matrix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/matrix/mumble:matrix.org?label=%23mumble:matrix.org&amp;amp;style=for-the-badge&#34; alt=&#34;#mumble:matrix.org&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.codacy.com/manual/mumble-voip/mumble&#34;&gt;&lt;img src=&#34;https://img.shields.io/codacy/grade/262a5e20c83a40599050e22e700d8a3e?label=Codacy&amp;amp;style=for-the-badge&#34; alt=&#34;Codacy&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/Mumble-VoIP/Mumble&#34;&gt;&lt;img src=&#34;https://img.shields.io/azure-devops/build/Mumble-VoIP/c819eb06-7b22-4ef3-bbcd-860094454eb3/1?label=Azure&amp;amp;style=for-the-badge&#34; alt=&#34;Azure&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cirrus-ci.com/github/mumble-voip/mumble&#34;&gt;&lt;img src=&#34;https://img.shields.io/cirrus/github/mumble-voip/mumble?label=Cirrus%20CI&amp;amp;style=for-the-badge&#34; alt=&#34;Cirrus CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.com/mumble-voip/mumble&#34;&gt;&lt;img src=&#34;https://img.shields.io/travis/com/mumble-voip/mumble?label=Travis%20CI&amp;amp;style=for-the-badge&#34; alt=&#34;Travis CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Mumble is an Open Source, low-latency and high-quality voice-chat program written on top of Qt and Opus.&lt;/p&gt; &#xA;&lt;p&gt;There are two modules in Mumble; the client (mumble) and the server (mumble-server formerly known as murmur). The client works on Windows, Linux, FreeBSD, OpenBSD, and macOS, while the server should work on anything Qt can be installed on.&lt;/p&gt; &#xA;&lt;p&gt;The documentation of the project can be found on &lt;a href=&#34;https://www.mumble.info/documentation/&#34;&gt;the website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We always welcome contributions to the project. If you have some code that you would like to contribute, please go ahead and create a PR. While doing so, please try to make sure that you follow our &lt;a href=&#34;https://raw.githubusercontent.com/mumble-voip/mumble/master/COMMIT_GUIDELINES.md&#34;&gt;commit guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are new to the Mumble project, you may want to check out the general &lt;a href=&#34;https://raw.githubusercontent.com/mumble-voip/mumble/master/docs/dev/TheMumbleSourceCode.md&#34;&gt;introduction to the Mumble source code&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Translating&lt;/h3&gt; &#xA;&lt;p&gt;Mumble supports various languages. We are always looking for qualified people to contribute translations.&lt;/p&gt; &#xA;&lt;p&gt;We are using Weblate as a translation platform. &lt;a href=&#34;https://hosted.weblate.org/accounts/register/&#34;&gt;Register on Weblate&lt;/a&gt;, and join &lt;a href=&#34;https://hosted.weblate.org/projects/mumble/&#34;&gt;our translation project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Writing plugins&lt;/h3&gt; &#xA;&lt;p&gt;Mumble supports general-purpose plugins that can provide functionality that is not implemented in the main Mumble application. You can find more information on how this works and how these have to be created in the &lt;a href=&#34;https://raw.githubusercontent.com/mumble-voip/mumble/master/docs/dev/plugins/README.md&#34;&gt;plugin documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;For information on how to build Mumble, check out &lt;a href=&#34;https://raw.githubusercontent.com/mumble-voip/mumble/master/docs/dev/build-instructions/README.md&#34;&gt;the dedicated documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting issues&lt;/h2&gt; &#xA;&lt;p&gt;If you want to report a bug or create a feature request, you can open a new issue (after you have checked that there is none already) on &lt;a href=&#34;https://github.com/mumble-voip/mumble/issues/new/choose&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Code Signing&lt;/h2&gt; &#xA;&lt;p&gt;We graciously acknowledge that this program uses free code signing provided by &lt;a href=&#34;https://signpath.io?utm_source=foundation&amp;amp;utm_medium=github&amp;amp;utm_campaign=mumble&#34;&gt;SignPath.io&lt;/a&gt;, and a free code signing certificate by the &lt;a href=&#34;https://signpath.org?utm_source=foundation&amp;amp;utm_medium=github&amp;amp;utm_campaign=mumble&#34;&gt;SignPath Foundation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Windows&lt;/h2&gt; &#xA;&lt;h3&gt;Running Mumble&lt;/h3&gt; &#xA;&lt;p&gt;After installation, you should have a new Mumble folder in your Start Menu, from which you can start Mumble.&lt;/p&gt; &#xA;&lt;h3&gt;Running Mumble-Server&lt;/h3&gt; &#xA;&lt;p&gt;Double-click the icon to start &lt;code&gt;mumble-server&lt;/code&gt;. There will be a small icon on your taskbar from which you can view the log.&lt;/p&gt; &#xA;&lt;p&gt;To set the superuser password, run &lt;code&gt;mumble-server&lt;/code&gt; with the parameters &lt;code&gt;-supw &amp;lt;password&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;MacOS&lt;/h2&gt; &#xA;&lt;h3&gt;Running Mumble&lt;/h3&gt; &#xA;&lt;p&gt;To install Mumble, drag the application from the downloaded disk image into your &lt;code&gt;/Applications&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h3&gt;Running Mumble-Server&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;mumble-server&lt;/code&gt; is distributed separately from the Mumble client on MacOS. It is called Static OS X Server and can be downloaded from the main webpage.&lt;/p&gt; &#xA;&lt;p&gt;Once downloaded it can be run in the same way as on any other Unix-like system. For more information please see the &#34;Running mumble-server&#34; in the Linux/Unix section below.&lt;/p&gt; &#xA;&lt;h2&gt;Linux/Unix&lt;/h2&gt; &#xA;&lt;h3&gt;Running Mumble&lt;/h3&gt; &#xA;&lt;p&gt;If you have installed Mumble through your distribution package repository, you should be able to find Mumble in your start menu. No additional steps are necessary.&lt;/p&gt; &#xA;&lt;h3&gt;Running Mumble-Server&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;mumble-server&lt;/code&gt; should be run from the command line, so start a shell (command prompt) and go to wherever you installed Mumble. Run &lt;code&gt;mumble-server&lt;/code&gt; as&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mumble-server [-supw &amp;lt;password&amp;gt;] [-ini &amp;lt;inifile&amp;gt;] [-fg] [v]&#xA;&#xA;-supw   Set a new password for the user SuperUser, which is hardcoded to&#xA;        bypass ACLs. Keep this password safe. Until you set a password,&#xA;        the SuperUser is disabled. If you use this option, mumble-server will&#xA;        set the password in the database and then exit.&#xA;&#xA;-ini    Use an inifile other than mumble-server.ini, use this to run several instances&#xA;        of mumble-server from the same directory. Make sure each instance is using&#xA;        a separate database.&#xA;&#xA;-fg     Run in the foreground, logging to standard output.&#xA;&#xA;-v      More verbose logging.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Docker image&lt;/h4&gt; &#xA;&lt;p&gt;Our official Docker image along with instructions on how to use it can be found at &lt;a href=&#34;https://github.com/mumble-voip/mumble-docker&#34;&gt;https://github.com/mumble-voip/mumble-docker&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Server configuration&lt;/h3&gt; &#xA;&lt;p&gt;You can find an up-to-date &lt;code&gt;mumble-server&lt;/code&gt; configuration template in &lt;a href=&#34;https://raw.githubusercontent.com/mumble-voip/mumble/master/auxiliary_files/mumble-server.ini&#34;&gt;this repository&lt;/a&gt;. Further server configuration documentation can be found &lt;a href=&#34;https://www.mumble.info/documentation/administration/&#34;&gt;on the project website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;OpenGL Overlay&lt;/h3&gt; &#xA;&lt;p&gt;The OpenGL overlay works by intercepting the call to switch buffers, and just before the buffer switch, we draw our nice GUI.&lt;/p&gt; &#xA;&lt;p&gt;To load a game with the overlay enabled, start the game like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;LD_PRELOAD=/path/to/libmumble.so.1.1 gamename&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have Mumble installed through the binary packages, this can be done by simply typing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mumble-overlay gamename&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>electronicarts/EASTL</title>
    <updated>2024-10-13T01:42:20Z</updated>
    <id>tag:github.com,2024-10-13:/electronicarts/EASTL</id>
    <link href="https://github.com/electronicarts/EASTL" rel="alternate"></link>
    <summary type="html">&lt;p&gt;EASTL stands for Electronic Arts Standard Template Library. It is an extensive and robust implementation that has an emphasis on high performance.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;EA Standard Template Library&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/electronicarts/EASTL&#34;&gt;&lt;img src=&#34;https://travis-ci.org/electronicarts/EASTL.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;EASTL stands for Electronic Arts Standard Template Library. It is a C++ template library of containers, algorithms, and iterators useful for runtime and tool development across multiple platforms. It is a fairly extensive and robust implementation of such a library and has an emphasis on high performance above all other considerations.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;If you are familiar with the C++ STL or have worked with other templated container/algorithm libraries, you probably don&#39;t need to read this. If you have no familiarity with C++ templates at all, then you probably will need more than this document to get you up to speed. In this case, you need to understand that templates, when used properly, are powerful vehicles for the ease of creation of optimized C++ code. A description of C++ templates is outside the scope of this documentation, but there is plenty of such documentation on the Internet.&lt;/p&gt; &#xA;&lt;p&gt;EASTL is suitable for any tools and shipping applications where the functionality of EASTL is useful. Modern compilers are capable of producing good code with templates and many people are using them in both current generation and future generation applications on multiple platforms from embedded systems to servers and mainframes.&lt;/p&gt; &#xA;&lt;h2&gt;Package Managers&lt;/h2&gt; &#xA;&lt;p&gt;You can download and install EASTL using the &lt;a href=&#34;https://github.com/conan-io/conan&#34;&gt;Conan&lt;/a&gt; package manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;conan install eastl/3.15.00@&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The EASTL package in conan is kept up to date by Conan team members and community contributors. If the version is out-of-date, please &lt;a href=&#34;https://github.com/conan-io/conan-center-index&#34;&gt;create an issue or pull request&lt;/a&gt; on the Conan Center Index repository.&lt;/p&gt; &#xA;&lt;p&gt;You can download and install EASTL using the &lt;a href=&#34;https://github.com/Microsoft/vcpkg&#34;&gt;vcpkg&lt;/a&gt; dependency manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/Microsoft/vcpkg.git&#xA;cd vcpkg&#xA;./bootstrap-vcpkg.sh&#xA;./vcpkg integrate install&#xA;vcpkg install eastl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The EASTL port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please &lt;a href=&#34;https://github.com/Microsoft/vcpkg&#34;&gt;create an issue or pull request&lt;/a&gt; on the vcpkg repository.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/electronicarts/EASTL/master/doc/Introduction.md&#34;&gt;EASTL Introduction&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Compiling sources&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/electronicarts/EASTL/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for details on compiling and testing the source.&lt;/p&gt; &#xA;&lt;h2&gt;Credits And Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;EASTL was created by Paul Pedriana and he maintained the project for roughly 10 years.&lt;/p&gt; &#xA;&lt;p&gt;EASTL was subsequently maintained by Roberto Parolin for more than 8 years. He was the driver and proponent for getting EASTL opensourced. Rob was a mentor to all members of the team and taught us everything we ever wanted to know about C++ spookyness.&lt;/p&gt; &#xA;&lt;p&gt;After Rob, maintenance of EASTL passed to Max Winkler for roughly a year, until landing with its current maintainer Liam Mitchell.&lt;/p&gt; &#xA;&lt;p&gt;Significant EASTL contributions were made by (in alphabetical order):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Avery Lee&lt;/li&gt; &#xA; &lt;li&gt;Colin Andrews&lt;/li&gt; &#xA; &lt;li&gt;JP Flouret&lt;/li&gt; &#xA; &lt;li&gt;Liam Mitchell&lt;/li&gt; &#xA; &lt;li&gt;Matt Newport&lt;/li&gt; &#xA; &lt;li&gt;Max Winkler&lt;/li&gt; &#xA; &lt;li&gt;Paul Pedriana&lt;/li&gt; &#xA; &lt;li&gt;Roberto Parolin&lt;/li&gt; &#xA; &lt;li&gt;Simon Everett&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;h2&gt;Projects And Products Using EASTL&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Frostbite - Electronic Arts - [https://www.ea.com/frostbite]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Modified BSD License (3-Clause BSD license) see the file LICENSE in the project root.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>colmap/glomap</title>
    <updated>2024-10-13T01:42:20Z</updated>
    <id>tag:github.com,2024-10-13:/colmap/glomap</id>
    <link href="https://github.com/colmap/glomap" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GLOMAP - Global Structured-from-Motion Revisited&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GLOMAP: Global Structure-from-Motion Revisited&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://lpanaf.github.io/eccv24_glomap/&#34;&gt;Project page&lt;/a&gt; | &lt;a href=&#34;https://arxiv.org/pdf/2407.20219&#34;&gt;Paper&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;GLOMAP is a general purpose global structure-from-motion pipeline for image-based reconstruction. GLOMAP requires a COLMAP database as input and outputs a COLMAP sparse reconstruction. As compared to COLMAP, this project provides a much more efficient and scalable reconstruction process, typically 1-2 orders of magnitude faster, with on-par or superior reconstruction quality.&lt;/p&gt; &#xA;&lt;p&gt;If you use this project for your research, please cite&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@inproceedings{pan2024glomap,&#xA;    author={Pan, Linfei and Barath, Daniel and Pollefeys, Marc and Sch\&#34;{o}nberger, Johannes Lutz},&#xA;    title={{Global Structure-from-Motion Revisited}},&#xA;    booktitle={European Conference on Computer Vision (ECCV)},&#xA;    year={2024},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To build GLOMAP, first install &lt;a href=&#34;https://colmap.github.io/install.html#build-from-source&#34;&gt;COLMAP&lt;/a&gt; dependencies and then build GLOMAP using the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mkdir build&#xA;cd build&#xA;cmake .. -GNinja&#xA;ninja &amp;amp;&amp;amp; ninja install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pre-compiled Windows binaries can be downloaded from the official &lt;a href=&#34;https://github.com/colmap/glomap/releases&#34;&gt;release page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;After installation, one can run GLOMAP by (starting from a database)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;glomap mapper --database_path DATABASE_PATH --output_path OUTPUT_PATH --image_path IMAGE_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more details on the command line interface, one can type &lt;code&gt;glomap -h&lt;/code&gt; or &lt;code&gt;glomap mapper -h&lt;/code&gt; for help.&lt;/p&gt; &#xA;&lt;p&gt;We also provide a guide on improving the obtained reconstruction, which can be found &lt;a href=&#34;https://raw.githubusercontent.com/colmap/glomap/main/docs/getting_started.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GLOMAP depends on two external libraries - &lt;a href=&#34;https://github.com/colmap/colmap&#34;&gt;COLMAP&lt;/a&gt; and &lt;a href=&#34;https://github.com/PoseLib/PoseLib&#34;&gt;PoseLib&lt;/a&gt;. With the default setting, the library is built automatically by GLOMAP via &lt;code&gt;FetchContent&lt;/code&gt;. However, if a self-installed version is preferred, one can also disable the &lt;code&gt;FETCH_COLMAP&lt;/code&gt; and &lt;code&gt;FETCH_POSELIB&lt;/code&gt; CMake options.&lt;/li&gt; &#xA; &lt;li&gt;To use &lt;code&gt;FetchContent&lt;/code&gt;, the minimum required version of &lt;code&gt;cmake&lt;/code&gt; is 3.28. If a self-installed version is used, &lt;code&gt;cmake&lt;/code&gt; can be downgraded to 3.10.&lt;/li&gt; &#xA; &lt;li&gt;If your system does not provide a recent enough CMake version, you can install it as: &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;wget https://github.com/Kitware/CMake/releases/download/v3.30.1/cmake-3.30.1.tar.gz&#xA;tar xfvz cmake-3.30.1.tar.gz &amp;amp;&amp;amp; cd cmake-3.30.1&#xA;./bootstrap &amp;amp;&amp;amp; make -j$(nproc) &amp;amp;&amp;amp; sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;End-to-End Example&lt;/h2&gt; &#xA;&lt;p&gt;In this section, we will use datasets from &lt;a href=&#34;https://demuc.de/colmap/datasets&#34;&gt;this link&lt;/a&gt; as examples. Download the datasets and put them under &lt;code&gt;data&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h3&gt;From database&lt;/h3&gt; &#xA;&lt;p&gt;If a COLMAP database already exists, GLOMAP can directly use it to perform mapping:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;glomap mapper \&#xA;    --database_path ./data/gerrard-hall/database.db \&#xA;    --image_path    ./data/gerrard-hall/images \&#xA;    --output_path   ./output/gerrard-hall/sparse&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;From images&lt;/h3&gt; &#xA;&lt;p&gt;To obtain a reconstruction from images, the database needs to be established first. Here, we utilize the functions from COLMAP:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;colmap feature_extractor \&#xA;    --image_path    ./data/south-building/images \&#xA;    --database_path ./data/south-building/database.db&#xA;colmap exhaustive_matcher \&#xA;    --database_path ./data/south-building/database.db &#xA;glomap mapper \&#xA;    --database_path ./data/south-building/database.db \&#xA;    --image_path    ./data/south-building/images \&#xA;    --output_path   ./output/south-building/sparse&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Visualize and use the results&lt;/h3&gt; &#xA;&lt;p&gt;The results are written out in the COLMAP sparse reconstruction format. Please refer to &lt;a href=&#34;https://colmap.github.io/format.html#sparse-reconstruction&#34;&gt;COLMAP&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;The reconstruction can be visualized using the COLMAP GUI, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;colmap gui --import_path ./output/south-building/sparse/0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatives like &lt;a href=&#34;https://rerun.io/examples/3d-reconstruction/glomap&#34;&gt;rerun.io&lt;/a&gt; also enable visualization of COLMAP and GLOMAP outputs.&lt;/p&gt; &#xA;&lt;p&gt;If you want to inspect the reconstruction programmatically, you can use &lt;code&gt;pycolmap&lt;/code&gt; in Python or link against COLMAP&#39;s C++ library interface.&lt;/p&gt; &#xA;&lt;h3&gt;Notes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For larger scale datasets, it is recommended to use &lt;code&gt;sequential_matcher&lt;/code&gt; or &lt;code&gt;vocab_tree_matcher&lt;/code&gt; from &lt;code&gt;COLMAP&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;colmap sequential_matcher --database_path DATABASE_PATH&#xA;colmap vocab_tree_matcher --database_path DATABASE_PATH --VocabTreeMatching.vocab_tree_path VOCAB_TREE_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Alternatively, one can use &lt;a href=&#34;https://github.com/cvg/Hierarchical-Localization/&#34;&gt;hloc&lt;/a&gt; for image retrieval and matching with learning-based descriptors.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;p&gt;We are highly inspired by COLMAP, PoseLib, Theia. Please consider also citing them, if using GLOMAP in your work.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Please, use GitHub Discussions at &lt;a href=&#34;https://github.com/colmap/glomap/discussions&#34;&gt;https://github.com/colmap/glomap/discussions&lt;/a&gt; for questions and the GitHub issue tracker at &lt;a href=&#34;https://github.com/colmap/glomap&#34;&gt;https://github.com/colmap/glomap&lt;/a&gt; for bug reports, feature requests/additions, etc.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Contributions (bug reports, bug fixes, improvements, etc.) are very welcome and should be submitted in the form of new issues and/or pull requests on GitHub.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright (c) 2024, ETH Zurich.&#xA;All rights reserved.&#xA;&#xA;Redistribution and use in source and binary forms, with or without&#xA;modification, are permitted provided that the following conditions are met:&#xA;&#xA;    * Redistributions of source code must retain the above copyright&#xA;      notice, this list of conditions and the following disclaimer.&#xA;&#xA;    * Redistributions in binary form must reproduce the above copyright&#xA;      notice, this list of conditions and the following disclaimer in the&#xA;      documentation and/or other materials provided with the distribution.&#xA;&#xA;    * Neither the name of ETH Zurich nor the names of its contributors may&#xA;      be used to endorse or promote products derived from this software&#xA;      without specific prior written permission.&#xA;&#xA;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &#34;AS IS&#34;&#xA;AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE&#xA;IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE&#xA;ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE&#xA;LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR&#xA;CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF&#xA;SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS&#xA;INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN&#xA;CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#xA;ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE&#xA;POSSIBILITY OF SUCH DAMAGE.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>