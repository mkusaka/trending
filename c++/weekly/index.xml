<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-04T01:40:18Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bitcoin/bitcoin</title>
    <updated>2022-12-04T01:40:18Z</updated>
    <id>tag:github.com,2022-12-04:/bitcoin/bitcoin</id>
    <link href="https://github.com/bitcoin/bitcoin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bitcoin Core integration/staging tree&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bitcoin Core integration/staging tree&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bitcoincore.org&#34;&gt;https://bitcoincore.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For an immediately usable, binary version of the Bitcoin Core software, see &lt;a href=&#34;https://bitcoincore.org/en/download/&#34;&gt;https://bitcoincore.org/en/download/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What is Bitcoin Core?&lt;/h2&gt; &#xA;&lt;p&gt;Bitcoin Core connects to the Bitcoin peer-to-peer network to download and fully validate blocks and transactions. It also includes a wallet and graphical user interface, which can be optionally built.&lt;/p&gt; &#xA;&lt;p&gt;Further information about Bitcoin Core is available in the &lt;a href=&#34;https://raw.githubusercontent.com/bitcoin/bitcoin/master/doc&#34;&gt;doc folder&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Bitcoin Core is released under the terms of the MIT license. See &lt;a href=&#34;https://raw.githubusercontent.com/bitcoin/bitcoin/master/COPYING&#34;&gt;COPYING&lt;/a&gt; for more information or see &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;https://opensource.org/licenses/MIT&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development Process&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;master&lt;/code&gt; branch is regularly built (see &lt;code&gt;doc/build-*.md&lt;/code&gt; for instructions) and tested, but it is not guaranteed to be completely stable. &lt;a href=&#34;https://github.com/bitcoin/bitcoin/tags&#34;&gt;Tags&lt;/a&gt; are created regularly from release branches to indicate new official, stable release versions of Bitcoin Core.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/bitcoin-core/gui&#34;&gt;https://github.com/bitcoin-core/gui&lt;/a&gt; repository is used exclusively for the development of the GUI. Its master branch is identical in all monotree repositories. Release branches and tags do not exist, so please do not fork that repository unless it is for development reasons.&lt;/p&gt; &#xA;&lt;p&gt;The contribution workflow is described in &lt;a href=&#34;https://raw.githubusercontent.com/bitcoin/bitcoin/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; and useful hints for developers can be found in &lt;a href=&#34;https://raw.githubusercontent.com/bitcoin/bitcoin/master/doc/developer-notes.md&#34;&gt;doc/developer-notes.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;Testing and code review is the bottleneck for development; we get more pull requests than we can review and test on short notice. Please be patient and help out by testing other people&#39;s pull requests, and remember this is a security-critical project where any mistake might cost people lots of money.&lt;/p&gt; &#xA;&lt;h3&gt;Automated Testing&lt;/h3&gt; &#xA;&lt;p&gt;Developers are strongly encouraged to write &lt;a href=&#34;https://raw.githubusercontent.com/bitcoin/bitcoin/master/src/test/README.md&#34;&gt;unit tests&lt;/a&gt; for new code, and to submit new unit tests for old code. Unit tests can be compiled and run (assuming they weren&#39;t disabled in configure) with: &lt;code&gt;make check&lt;/code&gt;. Further details on running and extending unit tests can be found in &lt;a href=&#34;https://raw.githubusercontent.com/bitcoin/bitcoin/master/src/test/README.md&#34;&gt;/src/test/README.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There are also &lt;a href=&#34;https://raw.githubusercontent.com/bitcoin/bitcoin/master/test&#34;&gt;regression and integration tests&lt;/a&gt;, written in Python. These tests can be run (if the &lt;a href=&#34;https://raw.githubusercontent.com/bitcoin/bitcoin/master/test&#34;&gt;test dependencies&lt;/a&gt; are installed) with: &lt;code&gt;test/functional/test_runner.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The CI (Continuous Integration) systems make sure that every pull request is built for Windows, Linux, and macOS, and that unit/sanity tests are run automatically.&lt;/p&gt; &#xA;&lt;h3&gt;Manual Quality Assurance (QA) Testing&lt;/h3&gt; &#xA;&lt;p&gt;Changes should be tested by somebody other than the developer who wrote the code. This is especially important for large or high-risk changes. It is useful to add a test plan to the pull request description if testing the changes is not straightforward.&lt;/p&gt; &#xA;&lt;h2&gt;Translations&lt;/h2&gt; &#xA;&lt;p&gt;Changes to translations as well as new translations can be submitted to &lt;a href=&#34;https://www.transifex.com/bitcoin/bitcoin/&#34;&gt;Bitcoin Core&#39;s Transifex page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Translations are periodically pulled from Transifex and merged into the git repository. See the &lt;a href=&#34;https://raw.githubusercontent.com/bitcoin/bitcoin/master/doc/translation_process.md&#34;&gt;translation process&lt;/a&gt; for details on how this works.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: We do not accept translation changes as GitHub pull requests because the next pull from Transifex would automatically overwrite them again.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>WasmEdge/WasmEdge</title>
    <updated>2022-12-04T01:40:18Z</updated>
    <id>tag:github.com,2022-12-04:/WasmEdge/WasmEdge</id>
    <link href="https://github.com/WasmEdge/WasmEdge" rel="alternate"></link>
    <summary type="html">&lt;p&gt;WasmEdge is a lightweight, high-performance, and extensible WebAssembly runtime for cloud native, edge, and decentralized applications. It powers serverless apps, embedded functions, microservices, smart contracts, and IoT devices.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;right&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/README-zh.md&#34;&gt;‰∏≠Êñá&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/README-zh-TW.md&#34;&gt;Ê≠£È´î‰∏≠Êñá&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/docs/wasmedge-runtime-logo.png&#34; alt=&#34;WasmEdge Logo&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;WasmEdge is a lightweight, high-performance, and extensible WebAssembly runtime. It is &lt;a href=&#34;https://ieeexplore.ieee.org/document/9214403&#34;&gt;the fastest Wasm VM&lt;/a&gt; today. WasmEdge is an official sandbox project hosted by the &lt;a href=&#34;https://www.cncf.io/&#34;&gt;CNCF&lt;/a&gt;. Its &lt;a href=&#34;https://wasmedge.org/book/en/use_cases.html&#34;&gt;use cases&lt;/a&gt; include modern web application architectures (Isomorphic &amp;amp; Jamstack applications), microservices on the edge cloud, serverless SaaS APIs, embedded functions, smart contracts, and smart devices.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/WasmEdge/WasmEdge/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt; &lt;a href=&#34;https://codecov.io/gh/WasmEdge/WasmEdge&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/WasmEdge/WasmEdge/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/WasmEdge/WasmEdge/actions/workflows/codeql-analysis.yml&#34;&gt;&lt;img src=&#34;https://github.com/WasmEdge/WasmEdge/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&#34; alt=&#34;CodeQL&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2FWasmEdge%2FWasmEdge?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2FWasmEdge%2FWasmEdge.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/5059&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/5059/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;Quick start guides&lt;/h1&gt; &#xA;&lt;p&gt;üöÄ &lt;a href=&#34;https://wasmedge.org/book/en/quick_start/install.html&#34;&gt;Install&lt;/a&gt; WasmEdge &lt;br&gt; ü§ñ &lt;a href=&#34;https://wasmedge.org/book/en/extend/build.html&#34;&gt;Build&lt;/a&gt; and &lt;a href=&#34;https://wasmedge.org/book/en/contribute.html&#34;&gt;contribute to&lt;/a&gt; WasmEdge &lt;br&gt; ‚å®Ô∏è &lt;a href=&#34;https://wasmedge.org/book/en/quick_start/run_cli.html&#34;&gt;Run&lt;/a&gt; a standalone Wasm program or a &lt;a href=&#34;https://wasmedge.org/book/en/dev/js.html&#34;&gt;JavaScript program&lt;/a&gt; from CLI or &lt;a href=&#34;https://wasmedge.org/book/en/quick_start/use_docker.html&#34;&gt;Docker&lt;/a&gt; &lt;br&gt; üîå Embed a Wasm function in your &lt;a href=&#34;https://wasmedge.org/book/en/embed/node.html&#34;&gt;Node.js&lt;/a&gt;, &lt;a href=&#34;https://wasmedge.org/book/en/embed/go.html&#34;&gt;Go&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/bindings/rust/&#34;&gt;Rust&lt;/a&gt;, or &lt;a href=&#34;https://wasmedge.org/book/en/embed/c.html&#34;&gt;C&lt;/a&gt; app &lt;br&gt; üõ† Manage and orchestrate Wasm runtimes using &lt;a href=&#34;https://wasmedge.org/book/en/use_cases/kubernetes.html&#34;&gt;Kubernetes&lt;/a&gt;, &lt;a href=&#34;https://wasmedge.org/book/en/use_cases/frameworks/app/yomo.html&#34;&gt;data streaming frameworks&lt;/a&gt;, and &lt;a href=&#34;https://medium.com/ethereum-on-steroids/running-ethereum-smart-contracts-in-a-substrate-blockchain-56fbc27fc95a&#34;&gt;blockchains&lt;/a&gt; &lt;br&gt; üìö &lt;strong&gt;&lt;a href=&#34;https://wasmedge.org/book/en/&#34;&gt;Check out our official documentation&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;The WasmEdge Runtime provides a well-defined execution sandbox for its contained WebAssembly bytecode program. The runtime offers isolation and protection for operating system resources (e.g., file system, sockets, environment variables, processes) and memory space. The most important use case for WasmEdge is to safely execute user-defined or community-contributed code as plug-ins in a software product (e.g., SaaS, software-defined vehicles, edge nodes, or even blockchain nodes). It enables third-party developers, vendors, suppliers, and community members to extend and customize the software product. &lt;strong&gt;&lt;a href=&#34;https://wasmedge.org/book/en/use_cases.html&#34;&gt;Learn more here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2010.07115&#34;&gt;A Lightweight Design for High-performance Serverless Computing&lt;/a&gt;, published on IEEE Software, Jan 2021. &lt;a href=&#34;https://arxiv.org/abs/2010.07115&#34;&gt;https://arxiv.org/abs/2010.07115&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.infoq.com/articles/arm-vs-x86-cloud-performance/&#34;&gt;Performance Analysis for Arm vs. x86 CPUs in the Cloud&lt;/a&gt;, published on infoQ.com, Jan 2021. &lt;a href=&#34;https://www.infoq.com/articles/arm-vs-x86-cloud-performance/&#34;&gt;https://www.infoq.com/articles/arm-vs-x86-cloud-performance/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.suborbital.dev/suborbital-wasmedge&#34;&gt;WasmEdge is the fastest WebAssembly Runtime in Suborbital Reactr test suite&lt;/a&gt;, Dec 2021&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;WasmEdge can run standard WebAssembly bytecode programs compiled from C/C++, Rust, Swift, AssemblyScript, or Kotlin source code. It &lt;a href=&#34;https://wasmedge.org/book/en/dev/js.html&#34;&gt;runs JavaScript&lt;/a&gt;, including 3rd party ES6, CJS, and NPM modules, in a secure, fast, lightweight, portable, and containerized sandbox. It also supports mixing of those languages (e.g., to &lt;a href=&#34;https://wasmedge.org/book/en/dev/js/rust.html&#34;&gt;use Rust to implement a JavaScript API&lt;/a&gt;), the &lt;a href=&#34;https://wasmedge.org/book/en/dev/js/fetch.html&#34;&gt;Fetch&lt;/a&gt; API, and &lt;a href=&#34;https://wasmedge.org/book/en/dev/js/ssr.html&#34;&gt;Server-side Rendering (SSR)&lt;/a&gt; functions on edge servers.&lt;/p&gt; &#xA;&lt;p&gt;WasmEdge supports &lt;a href=&#34;https://wasmedge.org/book/en/intro/standard.html&#34;&gt;all standard WebAssembly features and many proposed extensions&lt;/a&gt;. It also supports a number of extensions tailored for cloud-native and edge computing uses (e.g., the &lt;a href=&#34;https://wasmedge.org/book/en/dev/rust/networking.html&#34;&gt;WasmEdge network sockets&lt;/a&gt;, and the &lt;a href=&#34;https://wasmedge.org/book/en/dev/rust/tensorflow.html&#34;&gt;WasmEdge Tensorflow extension&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Learn more about &lt;a href=&#34;https://wasmedge.org/book/en/intro/features.html&#34;&gt;technical highlights&lt;/a&gt; of WasmEdge.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Integrations and management&lt;/h2&gt; &#xA;&lt;p&gt;WasmEdge and its contained wasm program can be started from the &lt;a href=&#34;https://wasmedge.org/book/en/index.html&#34;&gt;CLI&lt;/a&gt; as a new process, or from a existing process. If started from an existing process (e.g., from a running &lt;a href=&#34;https://wasmedge.org/book/en/embed/node.html&#34;&gt;Node.js&lt;/a&gt; or &lt;a href=&#34;https://wasmedge.org/book/en/embed/go.html&#34;&gt;Go&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/bindings/rust/wasmedge-rs&#34;&gt;Rust&lt;/a&gt; program), WasmEdge will simply run inside the process as a function. Currently, WasmEdge is not yet thread-safe. In order to use WasmEdge in your own application or cloud-native frameworks, please refer to the guides below.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wasmedge.org/book/en/embed.html&#34;&gt;Embed WasmEdge into a host application&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wasmedge.org/book/en/use_cases/kubernetes.html&#34;&gt;Orchestrate and manage WasmEdge instances using container tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wasmedge.org/book/en/use_cases/frameworks/mesh/dapr.html&#34;&gt;Run a WasmEdge app as a Dapr microservice&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wasmedge.org/book/en/use_cases/frameworks/app/reactr.html&#34;&gt;Use Reactr to embed and extend WasmEdge functions in SaaS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Community&lt;/h1&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to contribute to the WasmEdge project, please refer to our &lt;a href=&#34;https://wasmedge.org/book/en/contribute.html&#34;&gt;CONTRIBUTING&lt;/a&gt; document for details. If you are looking for ideas, checkout our &lt;a href=&#34;https://github.com/WasmEdge/WasmEdge/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&#34;&gt;&#34;help wanted&#34; issues&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;If you have any questions, feel free to open a GitHub issue on a related project or to join the following channels:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mailing list: Send an email to &lt;a href=&#34;https://groups.google.com/g/wasmedge/&#34;&gt;WasmEdge@googlegroups.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Discord: Join the &lt;a href=&#34;https://discord.gg/h4KDyB8XTt&#34;&gt;WasmEdge Discord server&lt;/a&gt;!&lt;/li&gt; &#xA; &lt;li&gt;Slack: Join the #WasmEdge channel on the &lt;a href=&#34;https://slack.cncf.io/&#34;&gt;CNCF Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter: Follow @realwasmedge on &lt;a href=&#34;https://twitter.com/realwasmedge&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community Meeting&lt;/h2&gt; &#xA;&lt;p&gt;We host a monthly community meeting to showcase new features, demo new use cases, and a Q&amp;amp;A part. Everyone is welcome!&lt;/p&gt; &#xA;&lt;p&gt;Time: The first Tuesday of each month at 11PM Hong Kong Time/ 7AM PST.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.google.com/document/d/1iFlVl7R97Lze4RDykzElJGDjjWYDlkI8Rhf8g4dQ5Rk/edit#&#34;&gt;Public meeting agenda/notes&lt;/a&gt; | &lt;a href=&#34;https://us06web.zoom.us/j/88282362606?pwd=UFhOdzlVKyswdW43c21BKy9DdkdyUT09&#34;&gt;Zoom link&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2FWasmEdge%2FWasmEdge?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2FWasmEdge%2FWasmEdge.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>BlackINT3/OpenArk</title>
    <updated>2022-12-04T01:40:18Z</updated>
    <id>tag:github.com,2022-12-04:/BlackINT3/OpenArk</id>
    <link href="https://github.com/BlackINT3/OpenArk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenArk is an open source anti-rookit(ARK) tool for Windows.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenArk &lt;img src=&#34;https://raw.githubusercontent.com/BlackINT3/OpenArk/master/doc/resources/logo.png&#34; alt=&#34;image&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/License-LGPL-green.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Introduction&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlackINT3/OpenArk/master/doc/README-zh.md&#34;&gt;‰∏≠ÊñáËØ¥Êòé&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;OpenArk is an open source anti-rookit(ARK) tool for Windows. Ark is Anti-Rootkit abbreviated, it aimmed at reversing/programming helper and also users can find out hidden malwares in the OS. More and more powerful features will be supported in future.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/BlackINT3/OpenArk/master/doc/resources/snapshot-en-v122.png&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/BlackINT3/OpenArk/master/doc/resources/snapshot-en-v122-01.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Process - Process/Thread/Module/Handles/Memory/Window... information view, Dll Injector x86/x64.&lt;/li&gt; &#xA; &lt;li&gt;Kernel - OS Kernel internal toolkit, eg: Memory, Drivers, Hotkey, Callback, Filters, IDT/SDT/NDIS/WFP etc.&lt;/li&gt; &#xA; &lt;li&gt;CoderKit - Helper for coders.&lt;/li&gt; &#xA; &lt;li&gt;Scanner - PE/ELF file parsers, evolved to virus analyzer in future.&lt;/li&gt; &#xA; &lt;li&gt;Bundler - Directory and files could be bundled to one executable file, it also support scripts.&lt;/li&gt; &#xA; &lt;li&gt;Utilities - Cleaner/System tools etc.&lt;/li&gt; &#xA; &lt;li&gt;Reverse - Collect many useful tools that functional complementation each others, for efficient, always thinking.&lt;/li&gt; &#xA; &lt;li&gt;Console - Many useful coammands in here.&lt;/li&gt; &#xA; &lt;li&gt;Language - Support English and Chinese now, more in future.&lt;/li&gt; &#xA; &lt;li&gt;More powerful features in developing...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Distributions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Program: one exe binary, no dependence, support 32/64 bit.&lt;/li&gt; &#xA; &lt;li&gt;Supported OS: Windows XP ... Win7 ... Win10 ... Win11 ...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Compile&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlackINT3/OpenArk/master/doc/build-openark.md&#34;&gt;How To Build OpenArk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BlackINT3/none&#34;&gt;UNONE &amp;amp; KNONE&lt;/a&gt; - User &amp;amp; Kernel mode BaseLibrary&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contributing/Donate&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Issues and Push Request is welcome.&lt;/li&gt; &#xA; &lt;li&gt;If you like that you can donate to our develop.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlackINT3/OpenArk/master/doc/code-style-guide.md&#34;&gt;OpenArk Code Style Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Official Links&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Website: &lt;a href=&#34;https://openark.blackint3.com/&#34;&gt;https://openark.blackint3.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Source: &lt;a href=&#34;https://github.com/BlackINT3/OpenArk/&#34;&gt;https://github.com/BlackINT3/OpenArk/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Manuals: &lt;a href=&#34;https://openark.blackint3.com/manuals/&#34;&gt;https://openark.blackint3.com/manuals/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;QQ Group: 535752025 836208099(full)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>