<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-23T01:50:28Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>topjohnwu/zygisk-module-sample</title>
    <updated>2023-04-23T01:50:28Z</updated>
    <id>tag:github.com,2023-04-23:/topjohnwu/zygisk-module-sample</id>
    <link href="https://github.com/topjohnwu/zygisk-module-sample" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A sample project for building Zygisk modules&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Developing Zygisk Modules&lt;/h1&gt; &#xA;&lt;p&gt;This repository hosts a template zygisk module for developers to start developing Zygisk modules. Before developing Zygisk modules, you should first check out the official documentation for &lt;a href=&#34;https://topjohnwu.github.io/Magisk/guides.html&#34;&gt;Magisk Modules&lt;/a&gt;. Do not fork this repository for your new module; either manually clone this repository, or press the &#34;Use this template&#34; button in the GitHub UI.&lt;/p&gt; &#xA;&lt;p&gt;This repository is archived because it is meant to be read-only; the project is not abandoned. For any issues, please report them to the main Magisk repository.&lt;/p&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The canonical URL of the latest public Zygisk API is &lt;a href=&#34;https://github.com/topjohnwu/zygisk-module-sample/raw/master/module/jni/zygisk.hpp&#34;&gt;module/jni/zygisk.hpp&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The header file is self documented; directly refer to the header source code for all Zygisk API details.&lt;/li&gt; &#xA; &lt;li&gt;Magisk is committed to maintain backwards compatibility forever. That is, whenever there is an API update for Zygisk in a newer Magisk version, Magisk can always load Zygisk modules built for an older Zygisk API.&lt;/li&gt; &#xA; &lt;li&gt;If you do not need the new features introduced in newer API versions, it&#39;s perfectly fine to stay on the older API version to maintain maximum compatibility.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Zygisk API&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Minimal Magisk&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Diff&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/topjohnwu/zygisk-module-sample/raw/master/module/jni/zygisk.hpp&#34;&gt;v4&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;26000&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/topjohnwu/zygisk-module-sample/compare/v3..master&#34;&gt;v3..v4&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/topjohnwu/zygisk-module-sample/raw/v3/module/jni/zygisk.hpp&#34;&gt;v3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;24300&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/topjohnwu/zygisk-module-sample/compare/v2..v3&#34;&gt;v2..v3&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/topjohnwu/zygisk-module-sample/raw/v2/module/jni/zygisk.hpp&#34;&gt;v2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;24000&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This repository can be opened with Android Studio.&lt;/li&gt; &#xA; &lt;li&gt;Developing Zygisk modules requires a modern C++ compiler. Please use NDK r21 or higher.&lt;/li&gt; &#xA; &lt;li&gt;All the C++ code is in the &lt;a href=&#34;https://github.com/topjohnwu/zygisk-module-sample/tree/master/module/jni&#34;&gt;module/jni&lt;/a&gt; folder.&lt;/li&gt; &#xA; &lt;li&gt;DO NOT modify the default configurations in &lt;code&gt;Application.mk&lt;/code&gt; unless you know what you are doing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;C++ STL&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;APP_STL&lt;/code&gt; variable in &lt;code&gt;Application.mk&lt;/code&gt; is set to &lt;code&gt;none&lt;/code&gt;. &lt;strong&gt;DO NOT&lt;/strong&gt; use any C++ STL included in NDK.&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;d like to use C++ STL, you &lt;strong&gt;have to&lt;/strong&gt; use the &lt;code&gt;libcxx&lt;/code&gt; included as a git submodule in this repository. Zygisk modules&#39; code are injected into Zygote, and the included &lt;code&gt;libc++&lt;/code&gt; is setup to be lightweight and fully self contained that prevents conflicts with the hosting program.&lt;/li&gt; &#xA; &lt;li&gt;If you do not need STL, link to the system &lt;code&gt;libstdc++&lt;/code&gt; so that you can at least call the &lt;code&gt;new&lt;/code&gt; operator.&lt;/li&gt; &#xA; &lt;li&gt;Both configurations are demonstrated in the example &lt;code&gt;Android.mk&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In the &lt;code&gt;module&lt;/code&gt; folder, call &lt;a href=&#34;https://developer.android.com/ndk/guides/ndk-build&#34;&gt;&lt;code&gt;ndk-build&lt;/code&gt;&lt;/a&gt; to compile your modules.&lt;/li&gt; &#xA; &lt;li&gt;Your module libraries will be in &lt;code&gt;libs/&amp;lt;abi&amp;gt;/lib&amp;lt;module_name&amp;gt;.so&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Copy the libraries into your module&#39;s &lt;code&gt;zygisk&lt;/code&gt; folder, with the ABI as it&#39;s file name:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;module_id&#xA;├── module.prop&#xA;└── zygisk&#xA;    ├── arm64-v8a.so&#xA;    ├── armeabi-v7a.so&#xA;    ├── x86.so&#xA;    └── x86_64.so&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Although the main Magisk project is licensed under GPLv3, the Zygisk API and its headers are not. Every source code in this repository is released under 0BSD (a public domain equivalent license), so you don&#39;t have to worry about any licensing issues while developing Zygisk modules.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>envoyproxy/envoy</title>
    <updated>2023-04-23T01:50:28Z</updated>
    <id>tag:github.com,2023-04-23:/envoyproxy/envoy</id>
    <link href="https://github.com/envoyproxy/envoy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cloud-native high-performance edge/middle/service proxy&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/envoyproxy/artwork/raw/main/PNG/Envoy_Logo_Final_PANTONE.png&#34; alt=&#34;Envoy Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.envoyproxy.io/&#34;&gt;Cloud-native high-performance edge/middle/service proxy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Envoy is hosted by the &lt;a href=&#34;https://cncf.io&#34;&gt;Cloud Native Computing Foundation&lt;/a&gt; (CNCF). If you are a company that wants to help shape the evolution of technologies that are container-packaged, dynamically-scheduled and microservices-oriented, consider joining the CNCF. For details about who&#39;s involved and how Envoy plays a role, read the CNCF &lt;a href=&#34;https://www.cncf.io/blog/2017/09/13/cncf-hosts-envoy/&#34;&gt;announcement&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/1266&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/1266/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/cncf/envoy/_build/latest?definitionId=11&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/cncf/envoy/_apis/build/status/11?branchName=main&#34; alt=&#34;Azure Pipelines&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:envoy&#34;&gt;&lt;img src=&#34;https://oss-fuzz-build-logs.storage.googleapis.com/badges/envoy.svg?sanitize=true&#34; alt=&#34;Fuzzing Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://powerci.osuosl.org/job/build-envoy-static-master/&#34;&gt;&lt;img src=&#34;https://powerci.osuosl.org/buildStatus/icon?job=build-envoy-static-master&amp;amp;subject=ppc64le%20build&#34; alt=&#34;Jenkins&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.envoyproxy.io/&#34;&gt;Official documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/faq/overview&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloudnative.to/envoy/&#34;&gt;Unofficial Chinese documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Watch &lt;a href=&#34;https://www.youtube.com/watch?v=RVZX4CwKhGE&#34;&gt;a video overview of Envoy&lt;/a&gt; (&lt;a href=&#34;https://www.microservices.com/talks/lyfts-envoy-monolith-service-mesh-matt-klein/&#34;&gt;transcript&lt;/a&gt;) to find out more about the origin story and design philosophy of Envoy&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@mattklein123/envoy-threading-model-a8d44b922310&#34;&gt;Blog&lt;/a&gt; about the threading model&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@mattklein123/envoy-hot-restart-1d16b14555b5&#34;&gt;Blog&lt;/a&gt; about hot restart&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@mattklein123/envoy-stats-b65c7f363342&#34;&gt;Blog&lt;/a&gt; about stats architecture&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@mattklein123/the-universal-data-plane-api-d15cec7a&#34;&gt;Blog&lt;/a&gt; about universal data plane API&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@mattklein123/lyfts-envoy-dashboards-5c91738816b1&#34;&gt;Blog&lt;/a&gt; on Lyft&#39;s Envoy dashboards&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Related&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/envoyproxy/data-plane-api&#34;&gt;data-plane-api&lt;/a&gt;: v2 API definitions as a standalone repository. This is a read-only mirror of &lt;a href=&#34;https://raw.githubusercontent.com/envoyproxy/envoy/main/api/&#34;&gt;api&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/envoyproxy/envoy-perf&#34;&gt;envoy-perf&lt;/a&gt;: Performance testing framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/envoyproxy/envoy-filter-example&#34;&gt;envoy-filter-example&lt;/a&gt;: Example of how to add new filters and link to the main repository.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/envoy-announce&#34;&gt;envoy-announce&lt;/a&gt;: Low frequency mailing list where we will email announcements only.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/envoy-security-announce&#34;&gt;envoy-security-announce&lt;/a&gt;: Low frequency mailing list where we will email security related announcements only.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/envoy-users&#34;&gt;envoy-users&lt;/a&gt;: General user discussion.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/envoy-dev&#34;&gt;envoy-dev&lt;/a&gt;: Envoy developer discussion (APIs, feature design, etc.).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/envoy-maintainers&#34;&gt;envoy-maintainers&lt;/a&gt;: Use this list to reach all core Envoy maintainers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/EnvoyProxy/&#34;&gt;Twitter&lt;/a&gt;: Follow along on Twitter!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://envoyproxy.slack.com/&#34;&gt;Slack&lt;/a&gt;: Slack, to get invited go &lt;a href=&#34;https://communityinviter.com/apps/envoyproxy/envoy&#34;&gt;here&lt;/a&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;NOTE: Response to user questions is best effort on Slack. For a &#34;guaranteed&#34; response please email envoy-users@ per the guidance in the following linked thread.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://groups.google.com/forum/#!topic/envoy-announce/l9zjYsnS3TY&#34;&gt;this&lt;/a&gt; email thread for information on email list usage.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributing to Envoy is fun and modern C++ is a lot less scary than you might think if you don&#39;t have prior experience. To get started:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/envoyproxy/envoy/main/CONTRIBUTING.md&#34;&gt;Contributing guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/envoyproxy/envoy/issues?q=is%3Aopen+is%3Aissue+label%3Abeginner&#34;&gt;Beginner issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/envoyproxy/envoy/main/ci#building-and-running-tests-as-a-developer&#34;&gt;Build/test quick start using docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/envoyproxy/envoy/main/DEVELOPER.md&#34;&gt;Developer guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Consider installing the Envoy &lt;a href=&#34;https://github.com/envoyproxy/envoy/raw/main/support/README.md&#34;&gt;development support toolchain&lt;/a&gt;, which helps automate parts of the development process, particularly those involving code review.&lt;/li&gt; &#xA; &lt;li&gt;Please make sure that you let us know if you are working on an issue so we don&#39;t duplicate work!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community Meeting&lt;/h2&gt; &#xA;&lt;p&gt;The Envoy team meets twice per month on Tuesday at 9am PT. The public Google calendar is here: &lt;a href=&#34;https://goo.gl/PkDijT&#34;&gt;https://goo.gl/PkDijT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Meeting minutes are &lt;a href=&#34;https://goo.gl/5Cergb&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Recorded videos are posted &lt;a href=&#34;https://www.youtube.com/channel/UC5z5mvPgqMs1xo5VuIWzYTA&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;h3&gt;Security Audit&lt;/h3&gt; &#xA;&lt;p&gt;There has been several third party engagements focused on Envoy security:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In 2018 Cure53 performed a security audit, &lt;a href=&#34;https://raw.githubusercontent.com/envoyproxy/envoy/main/docs/security/audit_cure53_2018.pdf&#34;&gt;full report&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;In 2021 Ada Logics performed an audit on our fuzzing infrastructure with recommendations for improvements, &lt;a href=&#34;https://raw.githubusercontent.com/envoyproxy/envoy/main/docs/security/audit_fuzzer_adalogics_2021.pdf&#34;&gt;full report&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Reporting security vulnerabilities&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;ve found a vulnerability or a potential vulnerability in Envoy please let us know at &lt;a href=&#34;mailto:envoy-security@googlegroups.com&#34;&gt;envoy-security&lt;/a&gt;. We&#39;ll send a confirmation email to acknowledge your report, and we&#39;ll send an additional email when we&#39;ve identified the issue positively or negatively.&lt;/p&gt; &#xA;&lt;p&gt;For further details please see our complete &lt;a href=&#34;https://raw.githubusercontent.com/envoyproxy/envoy/main/SECURITY.md&#34;&gt;security release process&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nomic-ai/gpt4all-chat</title>
    <updated>2023-04-23T01:50:28Z</updated>
    <id>tag:github.com,2023-04-23:/nomic-ai/gpt4all-chat</id>
    <link href="https://github.com/nomic-ai/gpt4all-chat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;gpt4all-j chat&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gpt4all-chat&lt;/h1&gt; &#xA;&lt;p&gt;Cross platform Qt based GUI for GPT4All versions with GPT-J as the base model. NOTE: The model seen in the screenshot is actually a preview of a new training run for GPT4All based on GPT-J. The GPT4All project is busy at work getting ready to release this model including installers for all three major OS&#39;s. In the meantime, you can try this UI out with the original GPT-J model by following build instructions below.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/50458173/231464085-da9edff6-a593-410e-8f38-7513f75c8aab.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Cross-platform (Linux, Windows, MacOSX)&lt;/li&gt; &#xA; &lt;li&gt;Fast CPU based inference using ggml for GPT-J based models&lt;/li&gt; &#xA; &lt;li&gt;The UI is made to look and feel like you&#39;ve come to expect from a chatty gpt&lt;/li&gt; &#xA; &lt;li&gt;Check for updates so you can alway stay fresh with latest models&lt;/li&gt; &#xA; &lt;li&gt;Easy to install with precompiled binaries available for all three major desktop platforms&lt;/li&gt; &#xA; &lt;li&gt;Multi-modal - Ability to load more than one model and switch between them&lt;/li&gt; &#xA; &lt;li&gt;Supports both llama.cpp and gptj.cpp style models&lt;/li&gt; &#xA; &lt;li&gt;Model downloader in GUI featuring many popular open source models&lt;/li&gt; &#xA; &lt;li&gt;Settings dialog to change temp, top_p, top_k, threads, etc&lt;/li&gt; &#xA; &lt;li&gt;Copy your conversation to clipboard&lt;/li&gt; &#xA; &lt;li&gt;Check for updates to get the very latest GUI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Feature wishlist&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Multi-chat - a list of current and past chats and the ability to save/delete/export and switch between&lt;/li&gt; &#xA; &lt;li&gt;Text to speech - have the AI response with voice&lt;/li&gt; &#xA; &lt;li&gt;Speech to text - give the prompt with your voice&lt;/li&gt; &#xA; &lt;li&gt;Python bindings&lt;/li&gt; &#xA; &lt;li&gt;Typescript bindings&lt;/li&gt; &#xA; &lt;li&gt;Plugin support for langchain other developer tools&lt;/li&gt; &#xA; &lt;li&gt;Save your prompt/responses to disk&lt;/li&gt; &#xA; &lt;li&gt;Upload prompt/respones manually/automatically to nomic.ai to aid future training runs&lt;/li&gt; &#xA; &lt;li&gt;Syntax highlighting support for programming languages, etc.&lt;/li&gt; &#xA; &lt;li&gt;REST API with a built-in webserver in the chat gui itself with a headless operation mode as well&lt;/li&gt; &#xA; &lt;li&gt;Advanced settings for changing temperature, topk, etc. (DONE)&lt;/li&gt; &#xA; &lt;li&gt;YOUR IDEA HERE&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building and running&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install Qt 6.x for your platform &lt;a href=&#34;https://doc.qt.io/qt-6/get-and-install-qt.html&#34;&gt;https://doc.qt.io/qt-6/get-and-install-qt.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install cmake for your platform &lt;a href=&#34;https://cmake.org/install/&#34;&gt;https://cmake.org/install/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Download &lt;a href=&#34;https://huggingface.co/EleutherAI/gpt-j-6b&#34;&gt;https://huggingface.co/EleutherAI/gpt-j-6b&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Clone this repo and build&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/ggerganov/ggml.git&#xA;cd ggml&#xA;mkdir build&#xA;cd build&#xA;cmake ..&#xA;cmake --build . --parallel&#xA;python3 ../ggml/examples/gpt-j/convert-h5-to-ggml.py /path/to/your/local/copy/of/EleutherAI/gpt-j-6B 0&#xA;./bin/gpt-j-quantize /path/to/your/local/copy/of/EleutherAI/gpt-j-6B/ggml-model-f32.bin ./ggml-model-q4_0.bin 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and then&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recurse-submodules https://github.com/nomic-ai/gpt4all-chat&#xA;cd gpt4all-chat&#xA;mkdir build&#xA;cd build&#xA;cmake ..&#xA;cmake --build . --parallel&#xA;mv /path/to/ggml-model-q4_0.bin .&#xA;./chat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building and running CLI tools only (no Qt required)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install cmake for your platform &lt;a href=&#34;https://cmake.org/install/&#34;&gt;https://cmake.org/install/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Clone this repo and build the &lt;code&gt;ggml&lt;/code&gt; subfolder&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recurse-submodules https://github.com/nomic-ai/gpt4all-chat&#xA;cd gpt4all-chat/ggml&#xA;mkdir build&#xA;cd build&#xA;cmake ..&#xA;cmake --build . --parallel&#xA;wget https://gpt4all.io/models/ggml-gpt4all-j-v1.2-jazzy.bin # Download GGML model if you don&#39;t already have it.&#xA;./bin/gpt-j -m ggml-gpt4all-j.bin -n 200 --top_k 40 --top_p 0.9 -b 9 --temp 0.9 -p &#34;Below is an instruction that describes a task. Write a response that appropriately completes the request.&#xA;### Instruction:&#xA;Tell me about artifical intelligence&#xA;### Response:&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;To get Qt installed for your system&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Highly advise using the official Qt online open source installer.&lt;/li&gt; &#xA; &lt;li&gt;You can obtain this by creating an account on qt.io and downloading the installer.&lt;/li&gt; &#xA; &lt;li&gt;You should get latest Qt {Qt 6.5.x} for your system and the developer tools including QtCreator, cmake, ninja.&lt;/li&gt; &#xA; &lt;li&gt;WINDOWS NOTE: you need to use the mingw64 toolchain and not msvc&lt;/li&gt; &#xA; &lt;li&gt;ALL PLATFORMS NOTE: the installer has options for lots of different targets which will add a lot of download overhead. You can deselect webassembly target, android, sources, etc to save space on your disk.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pull requests welcome. See the feature wish list for ideas :)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The source code of this chat interface is currently under a MIT license. The underlying GPT4All-j model is released under non-restrictive open-source Apache 2 License.&lt;/p&gt; &#xA;&lt;p&gt;The GPT4All-J license allows for users to use generated outputs as they see fit. Users take responsibility for ensuring their content meets applicable requirements for publication in a given context or region.&lt;/p&gt;</summary>
  </entry>
</feed>