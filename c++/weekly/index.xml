<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-05T02:02:35Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>johnBuffer/NoCol</title>
    <updated>2022-06-05T02:02:35Z</updated>
    <id>tag:github.com,2022-06-05:/johnBuffer/NoCol</id>
    <link href="https://github.com/johnBuffer/NoCol" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Trajectories finder&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&#39;Anti-collision&#39; system, as demonstrated in this &lt;a href=&#34;https://www.youtube.com/watch?v=SqpIcsN0FTI&#34;&gt;YouTube video&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/159109/115645659-bc4cd480-a2ee-11eb-885e-ab72cb75205d.png&#34; alt=&#34;Picture of various sized balls missing one another&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The following keyboard shortcuts are available&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;kbd&gt;E&lt;/kbd&gt; toggle v-sync. V-sync limits the number of frames per second, so disabling it speeds up the simulation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;A&lt;/kbd&gt; toggle the visibility of the traces.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;space&lt;/kbd&gt; toggle slow-motion.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;R&lt;/kbd&gt; reset the view.&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;esc&lt;/kbd&gt; close the application.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can zoom into the simulation by scrolling, and move around by dragging with the mouse.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>InoriRus/Kyty</title>
    <updated>2022-06-05T02:02:35Z</updated>
    <id>tag:github.com,2022-06-05:/InoriRus/Kyty</id>
    <link href="https://github.com/InoriRus/Kyty" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PS4 &amp; PS5 emulator&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/InoriRus/kyty&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/0du32fg9flol63to?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Kyty&lt;/h1&gt; &#xA;&lt;h2&gt;PS4 &amp;amp; PS5 emulator&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;The project is in its early stage.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;mailto:inorirus@gmail.com&#34;&gt;Vladimir M&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the MIT license.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Graphics for PS5 is not yet implemented&lt;/p&gt; &#xA;&lt;p&gt;It is possible to run some simple games for PS4&lt;/p&gt; &#xA;&lt;p&gt;There maybe graphics glitches, crashes, freezes and low FPS. It&#39;s OK for now.&lt;/p&gt; &#xA;&lt;p&gt;Features that are not implemented:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Audio input/output&lt;/li&gt; &#xA; &lt;li&gt;MP4 video&lt;/li&gt; &#xA; &lt;li&gt;Network&lt;/li&gt; &#xA; &lt;li&gt;Multi-user&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Path to Savedata folder is hardcoded and can&#39;t be configured. System parameters (language, date format, etc.) are also hardcoded.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Screenshots&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7149418/169674296-4185e2da-99f9-4073-8ca9-19dc124c7459.png&#34; width=&#34;400&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/7149418/169674298-df817d95-7288-46fe-a040-3c0a40c29a6b.png&#34; width=&#34;400&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/7149418/169674301-37a3f947-76cd-4a9b-8c81-adec3d5d9c59.png&#34; width=&#34;400&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/7149418/169674303-13edae7d-24d3-4ec6-ba94-586e13c69df5.png&#34; width=&#34;400&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;p&gt;Supported platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows 10 x64&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Toolchains:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visual Studio + clang-cl + ninja&lt;/li&gt; &#xA; &lt;li&gt;Eclipse CDT + mingw-w64 + gcc/clang + ninja/mingw32-make&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Supported versions:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Tool&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;cmake&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;3.12&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Visual Studio 2019&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;16.10.3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;clang&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;12.0.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;clang-cl&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;11.0.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;gcc (MinGW-W64 x86_64-posix-seh)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;10.2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ninja&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1.10.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MinGW-w64&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;8.0.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Eclipse CDT&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;10.3.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Qt&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;5.15.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Define environment variable named Qt5_DIR pointing to the proper version of Qt&lt;/p&gt; &#xA;&lt;p&gt;MSVC compiler (cl.exe) is not supported!&lt;/p&gt; &#xA;&lt;p&gt;External dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vulkan SDK 1.2.198.1&lt;/li&gt; &#xA; &lt;li&gt;Qt 5.15.0&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>topjohnwu/Magisk</title>
    <updated>2022-06-05T02:02:35Z</updated>
    <id>tag:github.com,2022-06-05:/topjohnwu/Magisk</id>
    <link href="https://github.com/topjohnwu/Magisk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Magic Mask for Android&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/topjohnwu/Magisk/master/docs/images/logo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/topjohnwu/magisk-files/count/count.json&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/json?color=green&amp;amp;label=Downloads&amp;amp;query=totalString&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Ftopjohnwu%2Fmagisk-files%2Fcount%2Fcount.json&amp;amp;cacheSeconds=1800&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;This is not an officially supported Google product&lt;/h4&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Magisk is a suite of open source software for customizing Android, supporting devices higher than Android 5.0.&lt;br&gt; Some highlight features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;MagiskSU&lt;/strong&gt;: Provide root access for applications&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Magisk Modules&lt;/strong&gt;: Modify read-only partitions by installing modules&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MagiskBoot&lt;/strong&gt;: The most complete tool for unpacking and repacking Android boot images&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Zygisk&lt;/strong&gt;: Run code in every Android applications&#39; processes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/topjohnwu/Magisk/&#34;&gt;Github&lt;/a&gt; is the only source where you can get official Magisk information and downloads.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/topjohnwu/Magisk/releases/tag/v24.3&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Magisk-v24.3-blue&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/topjohnwu/Magisk/releases/tag/v24.3&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Magisk%20Beta-v24.3-blue&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/topjohnwu/magisk-files/canary/app-release.apk&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Magisk-Canary-red&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/topjohnwu/magisk-files/canary/app-debug.apk&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Magisk-Debug-red&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Useful Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://topjohnwu.github.io/Magisk/install.html&#34;&gt;Installation Instruction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://topjohnwu.github.io/Magisk/&#34;&gt;Magisk Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.didgeridoohan.com/magisk/HomePage&#34;&gt;Magisk Troubleshoot Wiki&lt;/a&gt; (by &lt;a href=&#34;https://github.com/Didgeridoohan&#34;&gt;@Didgeridoohan&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Bug Reports&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Only bug reports from Debug builds will be accepted.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;For installation issues, upload both boot image and install logs.&lt;br&gt; For Magisk issues, upload boot logcat or dmesg.&lt;br&gt; For Magisk app crashes, record and upload the logcat when the crash occurs.&lt;/p&gt; &#xA;&lt;h2&gt;Building and Development&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Magisk builds on any OS Android Studio supports. Install Android Studio and do the initial setups.&lt;/li&gt; &#xA; &lt;li&gt;Clone sources: &lt;code&gt;git clone --recurse-submodules https://github.com/topjohnwu/Magisk.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install Python 3.6+ &lt;br&gt; (Windows only: select &lt;strong&gt;&#39;Add Python to PATH&#39;&lt;/strong&gt; in installer, and run &lt;code&gt;pip install colorama&lt;/code&gt; after install)&lt;/li&gt; &#xA; &lt;li&gt;Configure to use the JDK bundled in Android Studio: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;macOS: &lt;code&gt;export JAVA_HOME=&#34;/Applications/Android Studio.app/Contents/jre/Contents/Home&#34;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Linux: &lt;code&gt;export PATH=&#34;/path/to/androidstudio/jre/bin:$PATH&#34;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Windows: Add &lt;code&gt;C:\Path\To\Android Studio\jre\bin&lt;/code&gt; to environment variable &lt;code&gt;PATH&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Set environment variable &lt;code&gt;ANDROID_SDK_ROOT&lt;/code&gt; to the Android SDK folder (can be found in Android Studio settings)&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./build.py ndk&lt;/code&gt; to let the script download and install NDK for you&lt;/li&gt; &#xA; &lt;li&gt;To start building, run &lt;code&gt;build.py&lt;/code&gt; to see your options. &lt;br&gt; For each action, use &lt;code&gt;-h&lt;/code&gt; to access help (e.g. &lt;code&gt;./build.py all -h&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;To start development, open the project with Android Studio. The IDE can be used for both app (Kotlin/Java) and native (C++/C) sources.&lt;/li&gt; &#xA; &lt;li&gt;Optionally, set custom configs with &lt;code&gt;config.prop&lt;/code&gt;. A sample &lt;code&gt;config.prop.sample&lt;/code&gt; is provided.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Signing and Distribution&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The certificate of the key used to sign the final Magisk APK product is also directly embedded into some executables. In release builds, Magisk&#39;s root daemon will enforce this certificate check and reject and forcefully uninstall any non-matching Magisk apps to protect users from malicious and unverified Magisk APKs.&lt;/li&gt; &#xA; &lt;li&gt;To do any development on Magisk itself, switch to an &lt;strong&gt;official debug build and reinstall Magisk&lt;/strong&gt; to bypass the signature check.&lt;/li&gt; &#xA; &lt;li&gt;To distribute your own Magisk builds signed with your own keys, set your signing configs in &lt;code&gt;config.prop&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Check &lt;a href=&#34;https://developer.android.com/studio/publish/app-signing.html#generate-key&#34;&gt;Google&#39;s Documentation&lt;/a&gt; for more details on generating your own key.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Translation Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Default string resources for the Magisk app and its stub APK are located here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;app/src/main/res/values/strings.xml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stub/src/main/res/values/strings.xml&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Translate each and place them in the respective locations (&lt;code&gt;[module]/src/main/res/values-[lang]/strings.xml&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Magisk, including all git submodules are free software:&#xA;you can redistribute it and/or modify it under the terms of the&#xA;GNU General Public License as published by the Free Software Foundation,&#xA;either version 3 of the License, or (at your option) any later version.&#xA;&#xA;This program is distributed in the hope that it will be useful,&#xA;but WITHOUT ANY WARRANTY; without even the implied warranty of&#xA;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xA;GNU General Public License for more details.&#xA;&#xA;You should have received a copy of the GNU General Public License&#xA;along with this program.  If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>