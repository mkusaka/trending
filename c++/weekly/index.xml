<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-07T01:59:21Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>userver-framework/userver</title>
    <updated>2022-08-07T01:59:21Z</updated>
    <id>tag:github.com,2022-08-07:/userver-framework/userver</id>
    <link href="https://github.com/userver-framework/userver" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The C++ Asynchronous Framework (beta)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;userver &lt;img src=&#34;https://raw.githubusercontent.com/userver-framework/userver/develop/scripts/docs/logo.svg?sanitize=true&#34; align=&#34;right&#34; width=&#34;30%&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;userver&lt;/strong&gt; is an open source asynchronous framework with a rich set of abstractions for fast and comfortable creation of C++ microservices, services and utilities.&lt;/p&gt; &#xA;&lt;p&gt;The framework solves the problem of efficient I/O interactions transparently for the developers. Operations that would typically suspend the thread of execution do not suspend it. Instead of that, the thread processes other requests and tasks and returns to the handling of the operation only when it is guaranteed to execute immediately:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;std::size_t Ins(storages::postgres::Transaction&amp;amp; tr, std::string_view key) {&#xA;  // Asynchronous execution of the SQL query in transaction. Current thread&#xA;  // handles other requests while the response from the DB is being received:&#xA;  auto res = tr.Execute(&#34;INSERT INTO keys VALUES ($1)&#34;, key);&#xA;  return res.RowsAffected();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As a result, with the framework you get straightforward source code, avoid CPU-consuming context switches from OS, efficiently utilize the CPU with a small amount of execution threads.&lt;/p&gt; &#xA;&lt;p&gt;You can learn more about history and key features of userver from our articles on &lt;a href=&#34;https://medium.com/p/d5d9c4204dc2&#34;&gt;Medium&lt;/a&gt; (English) or &lt;a href=&#34;https://habr.com/post/674902&#34;&gt;Habr&lt;/a&gt; (Russian).&lt;/p&gt; &#xA;&lt;h2&gt;Other Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Efficient asynchronous drivers for databases (MongoDB, PostgreSQL, Redis, ...) and data transfer protocols (HTTP, GRPC, TCP, ...), tasks construction and cancellation.&lt;/li&gt; &#xA; &lt;li&gt;Rich set of high-level components for caches, tasks, distributed locking, logging, tracing, statistics, metrics, JSON/YAML/BSON.&lt;/li&gt; &#xA; &lt;li&gt;Functionality to change the service configuration on-the-fly.&lt;/li&gt; &#xA; &lt;li&gt;On-the-fly configurable drivers, options of the deadline propagation, timeouts, congestion-control.&lt;/li&gt; &#xA; &lt;li&gt;Comprehensive set of asynchronous low-level synchronization primitives and OS abstractions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://userver.tech/d6/d2f/md_en_index.html&#34;&gt;See the docs for more info&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>minetest/minetest</title>
    <updated>2022-08-07T01:59:21Z</updated>
    <id>tag:github.com,2022-08-07:/minetest/minetest</id>
    <link href="https://github.com/minetest/minetest" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Minetest is an open source voxel game engine with easy modding and game creation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Minetest&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/minetest/minetest/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt; &lt;a href=&#34;https://hosted.weblate.org/engage/minetest/?utm_source=widget&#34;&gt;&lt;img src=&#34;https://hosted.weblate.org/widgets/minetest/-/svg-badge.svg?sanitize=true&#34; alt=&#34;Translation status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-LGPLv2.1%2B-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Minetest is a free open-source voxel game engine with easy modding and game creation.&lt;/p&gt; &#xA;&lt;p&gt;Copyright (C) 2010-2022 Perttu Ahola &lt;a href=&#34;mailto:celeron55@gmail.com&#34;&gt;celeron55@gmail.com&lt;/a&gt; and contributors (see source file comments and the version control log)&lt;/p&gt; &#xA;&lt;h2&gt;In case you downloaded the source code&lt;/h2&gt; &#xA;&lt;p&gt;If you downloaded the Minetest Engine source code in which this file is contained, you probably want to download the &lt;a href=&#34;https://github.com/minetest/minetest_game/&#34;&gt;Minetest Game&lt;/a&gt; project too. See its README.txt for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/minetest/minetest/master/#further-documentation&#34;&gt;Further Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/minetest/minetest/master/#default-controls&#34;&gt;Default Controls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/minetest/minetest/master/#paths&#34;&gt;Paths&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/minetest/minetest/master/#configuration-file&#34;&gt;Configuration File&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/minetest/minetest/master/#command-line-options&#34;&gt;Command-line Options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/minetest/minetest/master/#compiling&#34;&gt;Compiling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/minetest/minetest/master/#docker&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/minetest/minetest/master/#version-scheme&#34;&gt;Version Scheme&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Further documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Website: &lt;a href=&#34;https://minetest.net/&#34;&gt;https://minetest.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wiki: &lt;a href=&#34;https://wiki.minetest.net/&#34;&gt;https://wiki.minetest.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Developer wiki: &lt;a href=&#34;https://dev.minetest.net/&#34;&gt;https://dev.minetest.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Forum: &lt;a href=&#34;https://forum.minetest.net/&#34;&gt;https://forum.minetest.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GitHub: &lt;a href=&#34;https://github.com/minetest/minetest/&#34;&gt;https://github.com/minetest/minetest/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/minetest/minetest/master/doc/&#34;&gt;doc/&lt;/a&gt; directory of source distribution&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Default controls&lt;/h2&gt; &#xA;&lt;p&gt;All controls are re-bindable using settings. Some can be changed in the key config dialog in the settings tab.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Button&lt;/th&gt; &#xA;   &lt;th&gt;Action&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Move mouse&lt;/td&gt; &#xA;   &lt;td&gt;Look around&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;W, A, S, D&lt;/td&gt; &#xA;   &lt;td&gt;Move&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Space&lt;/td&gt; &#xA;   &lt;td&gt;Jump/move up&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shift&lt;/td&gt; &#xA;   &lt;td&gt;Sneak/move down&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Q&lt;/td&gt; &#xA;   &lt;td&gt;Drop itemstack&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shift + Q&lt;/td&gt; &#xA;   &lt;td&gt;Drop single item&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Left mouse button&lt;/td&gt; &#xA;   &lt;td&gt;Dig/punch/take item&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Right mouse button&lt;/td&gt; &#xA;   &lt;td&gt;Place/use&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shift + right mouse button&lt;/td&gt; &#xA;   &lt;td&gt;Build (without using)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;I&lt;/td&gt; &#xA;   &lt;td&gt;Inventory menu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mouse wheel&lt;/td&gt; &#xA;   &lt;td&gt;Select item&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0-9&lt;/td&gt; &#xA;   &lt;td&gt;Select item&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Z&lt;/td&gt; &#xA;   &lt;td&gt;Zoom (needs zoom privilege)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;T&lt;/td&gt; &#xA;   &lt;td&gt;Chat&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;Command&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Esc&lt;/td&gt; &#xA;   &lt;td&gt;Pause menu/abort/exit (pauses only singleplayer game)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;R&lt;/td&gt; &#xA;   &lt;td&gt;Enable/disable full range view&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;+&lt;/td&gt; &#xA;   &lt;td&gt;Increase view range&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Decrease view range&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;K&lt;/td&gt; &#xA;   &lt;td&gt;Enable/disable fly mode (needs fly privilege)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;P&lt;/td&gt; &#xA;   &lt;td&gt;Enable/disable pitch move mode&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;J&lt;/td&gt; &#xA;   &lt;td&gt;Enable/disable fast mode (needs fast privilege)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;H&lt;/td&gt; &#xA;   &lt;td&gt;Enable/disable noclip mode (needs noclip privilege)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;E&lt;/td&gt; &#xA;   &lt;td&gt;Aux1 (Move fast in fast mode. Games may add special features)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C&lt;/td&gt; &#xA;   &lt;td&gt;Cycle through camera modes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;V&lt;/td&gt; &#xA;   &lt;td&gt;Cycle through minimap modes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shift + V&lt;/td&gt; &#xA;   &lt;td&gt;Change minimap orientation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F1&lt;/td&gt; &#xA;   &lt;td&gt;Hide/show HUD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F2&lt;/td&gt; &#xA;   &lt;td&gt;Hide/show chat&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F3&lt;/td&gt; &#xA;   &lt;td&gt;Disable/enable fog&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F4&lt;/td&gt; &#xA;   &lt;td&gt;Disable/enable camera update (Mapblocks are not updated anymore when disabled, disabled in release builds)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F5&lt;/td&gt; &#xA;   &lt;td&gt;Cycle through debug information screens&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F6&lt;/td&gt; &#xA;   &lt;td&gt;Cycle through profiler info screens&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F10&lt;/td&gt; &#xA;   &lt;td&gt;Show/hide console&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F12&lt;/td&gt; &#xA;   &lt;td&gt;Take screenshot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Paths&lt;/h2&gt; &#xA;&lt;p&gt;Locations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;bin&lt;/code&gt; - Compiled binaries&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;share&lt;/code&gt; - Distributed read-only data&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;user&lt;/code&gt; - User-created modifiable data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Where each location is on each platform:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows .zip / RUN_IN_PLACE source: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;bin&lt;/code&gt; = &lt;code&gt;bin&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;share&lt;/code&gt; = &lt;code&gt;.&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;user&lt;/code&gt; = &lt;code&gt;.&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Windows installed: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;bin&lt;/code&gt; = &lt;code&gt;C:\Program Files\Minetest\bin (Depends on the install location)&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;share&lt;/code&gt; = &lt;code&gt;C:\Program Files\Minetest (Depends on the install location)&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;user&lt;/code&gt; = &lt;code&gt;%APPDATA%\Minetest&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Linux installed: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;bin&lt;/code&gt; = &lt;code&gt;/usr/bin&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;share&lt;/code&gt; = &lt;code&gt;/usr/share/minetest&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;user&lt;/code&gt; = &lt;code&gt;~/.minetest&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;macOS: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;bin&lt;/code&gt; = &lt;code&gt;Contents/MacOS&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;share&lt;/code&gt; = &lt;code&gt;Contents/Resources&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;user&lt;/code&gt; = &lt;code&gt;Contents/User OR ~/Library/Application Support/minetest&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Worlds can be found as separate folders in: &lt;code&gt;user/worlds/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Configuration file&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Default location: &lt;code&gt;user/minetest.conf&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;This file is created by closing Minetest for the first time.&lt;/li&gt; &#xA; &lt;li&gt;A specific file can be specified on the command line: &lt;code&gt;--config &amp;lt;path-to-file&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;A run-in-place build will look for the configuration file in &lt;code&gt;location_of_exe/../minetest.conf&lt;/code&gt; and also &lt;code&gt;location_of_exe/../../minetest.conf&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Command-line options&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use &lt;code&gt;--help&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compiling&lt;/h2&gt; &#xA;&lt;h3&gt;Compiling on GNU/Linux&lt;/h3&gt; &#xA;&lt;h4&gt;Dependencies&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Dependency&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Commentary&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GCC&lt;/td&gt; &#xA;   &lt;td&gt;5.1+&lt;/td&gt; &#xA;   &lt;td&gt;or Clang 3.5+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CMake&lt;/td&gt; &#xA;   &lt;td&gt;3.5+&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IrrlichtMt&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Custom version of Irrlicht, see &lt;a href=&#34;https://github.com/minetest/irrlicht&#34;&gt;https://github.com/minetest/irrlicht&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Freetype&lt;/td&gt; &#xA;   &lt;td&gt;2.0+&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SQLite3&lt;/td&gt; &#xA;   &lt;td&gt;3+&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Zstd&lt;/td&gt; &#xA;   &lt;td&gt;1.0+&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LuaJIT&lt;/td&gt; &#xA;   &lt;td&gt;2.0+&lt;/td&gt; &#xA;   &lt;td&gt;Bundled Lua 5.1 is used if not present&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GMP&lt;/td&gt; &#xA;   &lt;td&gt;5.0.0+&lt;/td&gt; &#xA;   &lt;td&gt;Bundled mini-GMP is used if not present&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JsonCPP&lt;/td&gt; &#xA;   &lt;td&gt;1.0.0+&lt;/td&gt; &#xA;   &lt;td&gt;Bundled JsonCPP is used if not present&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For Debian/Ubuntu users:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install g++ make libc6-dev cmake libpng-dev libjpeg-dev libxi-dev libgl1-mesa-dev libsqlite3-dev libogg-dev libvorbis-dev libopenal-dev libcurl4-gnutls-dev libfreetype6-dev zlib1g-dev libgmp-dev libjsoncpp-dev libzstd-dev libluajit-5.1-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Fedora users:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo dnf install make automake gcc gcc-c++ kernel-devel cmake libcurl-devel openal-soft-devel libvorbis-devel libXi-devel libogg-devel freetype-devel mesa-libGL-devel zlib-devel jsoncpp-devel gmp-devel sqlite-devel luajit-devel leveldb-devel ncurses-devel spatialindex-devel libzstd-devel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Arch users:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo pacman -S base-devel libcurl-gnutls cmake libxi libpng sqlite libogg libvorbis openal freetype2 jsoncpp gmp luajit leveldb ncurses zstd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Alpine users:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apk add build-base cmake libpng-dev jpeg-dev libxi-dev mesa-dev sqlite-dev libogg-dev libvorbis-dev openal-soft-dev curl-dev freetype-dev zlib-dev gmp-dev jsoncpp-dev luajit-dev zstd-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Download&lt;/h4&gt; &#xA;&lt;p&gt;You can install Git for easily keeping your copy up to date. If you don’t want Git, read below on how to get the source without Git. This is an example for installing Git on Debian/Ubuntu:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Fedora users:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo dnf install git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Download source (this is the URL to the latest of source repository, which might not work at all times) using Git:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --depth 1 https://github.com/minetest/minetest.git&#xA;cd minetest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Download minetest_game (otherwise only the &#34;Development Test&#34; game is available) using Git:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --depth 1 https://github.com/minetest/minetest_game.git games/minetest_game&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Download IrrlichtMt to &lt;code&gt;lib/irrlichtmt&lt;/code&gt;, it will be used to satisfy the IrrlichtMt dependency that way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --depth 1 https://github.com/minetest/irrlicht.git lib/irrlichtmt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Download source, without using Git:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget https://github.com/minetest/minetest/archive/master.tar.gz&#xA;tar xf master.tar.gz&#xA;cd minetest-master&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Download minetest_game, without using Git:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd games/&#xA;wget https://github.com/minetest/minetest_game/archive/master.tar.gz&#xA;tar xf master.tar.gz&#xA;mv minetest_game-master minetest_game&#xA;cd ..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Download IrrlichtMt, without using Git:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd lib/&#xA;wget https://github.com/minetest/irrlicht/archive/master.tar.gz&#xA;tar xf master.tar.gz&#xA;mv irrlicht-master irrlichtmt&#xA;cd ..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Build&lt;/h4&gt; &#xA;&lt;p&gt;Build a version that runs directly from the source directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cmake . -DRUN_IN_PLACE=TRUE&#xA;make -j$(nproc)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./bin/minetest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Use &lt;code&gt;cmake . -LH&lt;/code&gt; to see all CMake options and their current state.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you want to install it system-wide (or are making a distribution package), you will want to use &lt;code&gt;-DRUN_IN_PLACE=FALSE&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can build a bare server by specifying &lt;code&gt;-DBUILD_SERVER=TRUE&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can disable the client build by specifying &lt;code&gt;-DBUILD_CLIENT=FALSE&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can select between Release and Debug build by &lt;code&gt;-DCMAKE_BUILD_TYPE=&amp;lt;Debug or Release&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Debug build is slower, but gives much more useful output in a debugger.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you build a bare server you don&#39;t need to compile IrrlichtMt, just the headers suffice.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In that case use &lt;code&gt;-DIRRLICHT_INCLUDE_DIR=/some/where/irrlichtmt/include&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Minetest will use the IrrlichtMt package that is found first, given by the following order:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Specified &lt;code&gt;IRRLICHTMT_BUILD_DIR&lt;/code&gt; CMake variable&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;${PROJECT_SOURCE_DIR}/lib/irrlichtmt&lt;/code&gt; (if existent)&lt;/li&gt; &#xA;   &lt;li&gt;Installation of IrrlichtMt in the system-specific library paths&lt;/li&gt; &#xA;   &lt;li&gt;For server builds with disabled &lt;code&gt;BUILD_CLIENT&lt;/code&gt; variable, the headers from &lt;code&gt;IRRLICHT_INCLUDE_DIR&lt;/code&gt; will be used.&lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;NOTE: Changing the IrrlichtMt build directory (includes system installs) requires regenerating the CMake cache (&lt;code&gt;rm CMakeCache.txt&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;CMake options&lt;/h3&gt; &#xA;&lt;p&gt;General options and their default values:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;BUILD_CLIENT=TRUE          - Build Minetest client&#xA;BUILD_SERVER=FALSE         - Build Minetest server&#xA;BUILD_UNITTESTS=TRUE       - Build unittest sources&#xA;BUILD_BENCHMARKS=FALSE     - Build benchmark sources&#xA;CMAKE_BUILD_TYPE=Release   - Type of build (Release vs. Debug)&#xA;    Release                - Release build&#xA;    Debug                  - Debug build&#xA;    SemiDebug              - Partially optimized debug build&#xA;    RelWithDebInfo         - Release build with debug information&#xA;    MinSizeRel             - Release build with -Os passed to compiler to make executable as small as possible&#xA;ENABLE_CURL=ON             - Build with cURL; Enables use of online mod repo, public serverlist and remote media fetching via http&#xA;ENABLE_CURSES=ON           - Build with (n)curses; Enables a server side terminal (command line option: --terminal)&#xA;ENABLE_GETTEXT=ON          - Build with Gettext; Allows using translations&#xA;ENABLE_GLES=OFF            - Enable extra support code for OpenGL ES (requires support by IrrlichtMt)&#xA;ENABLE_LEVELDB=ON          - Build with LevelDB; Enables use of LevelDB map backend&#xA;ENABLE_POSTGRESQL=ON       - Build with libpq; Enables use of PostgreSQL map backend (PostgreSQL 9.5 or greater recommended)&#xA;ENABLE_REDIS=ON            - Build with libhiredis; Enables use of Redis map backend&#xA;ENABLE_SPATIAL=ON          - Build with LibSpatial; Speeds up AreaStores&#xA;ENABLE_SOUND=ON            - Build with OpenAL, libogg &amp;amp; libvorbis; in-game sounds&#xA;ENABLE_LUAJIT=ON           - Build with LuaJIT (much faster than non-JIT Lua)&#xA;ENABLE_PROMETHEUS=OFF      - Build with Prometheus metrics exporter (listens on tcp/30000 by default)&#xA;ENABLE_SYSTEM_GMP=ON       - Use GMP from system (much faster than bundled mini-gmp)&#xA;ENABLE_SYSTEM_JSONCPP=ON   - Use JsonCPP from system&#xA;RUN_IN_PLACE=FALSE         - Create a portable install (worlds, settings etc. in current directory)&#xA;ENABLE_UPDATE_CHECKER=TRUE - Whether to enable update checks by default&#xA;USE_GPROF=FALSE            - Enable profiling using GProf&#xA;VERSION_EXTRA=             - Text to append to version (e.g. VERSION_EXTRA=foobar -&amp;gt; Minetest 0.4.9-foobar)&#xA;ENABLE_TOUCH=FALSE         - Enable Touchscreen support (requires support by IrrlichtMt)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Library specific options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;CURL_DLL                        - Only if building with cURL on Windows; path to libcurl.dll&#xA;CURL_INCLUDE_DIR                - Only if building with cURL; directory where curl.h is located&#xA;CURL_LIBRARY                    - Only if building with cURL; path to libcurl.a/libcurl.so/libcurl.lib&#xA;EGL_INCLUDE_DIR                 - Only if building with GLES; directory that contains egl.h&#xA;EGL_LIBRARY                     - Only if building with GLES; path to libEGL.a/libEGL.so&#xA;EXTRA_DLL                       - Only on Windows; optional paths to additional DLLs that should be packaged&#xA;FREETYPE_INCLUDE_DIR_freetype2  - Directory that contains files such as ftimage.h&#xA;FREETYPE_INCLUDE_DIR_ft2build   - Directory that contains ft2build.h&#xA;FREETYPE_LIBRARY                - Path to libfreetype.a/libfreetype.so/freetype.lib&#xA;FREETYPE_DLL                    - Only on Windows; path to libfreetype-6.dll&#xA;GETTEXT_DLL                     - Only when building with gettext on Windows; paths to libintl + libiconv DLLs&#xA;GETTEXT_INCLUDE_DIR             - Only when building with gettext; directory that contains iconv.h&#xA;GETTEXT_LIBRARY                 - Only when building with gettext on Windows; path to libintl.dll.a&#xA;GETTEXT_MSGFMT                  - Only when building with gettext; path to msgfmt/msgfmt.exe&#xA;IRRLICHT_DLL                    - Only on Windows; path to IrrlichtMt.dll&#xA;IRRLICHT_INCLUDE_DIR            - Directory that contains IrrCompileConfig.h (usable for server build only)&#xA;LEVELDB_INCLUDE_DIR             - Only when building with LevelDB; directory that contains db.h&#xA;LEVELDB_LIBRARY                 - Only when building with LevelDB; path to libleveldb.a/libleveldb.so/libleveldb.dll.a&#xA;LEVELDB_DLL                     - Only when building with LevelDB on Windows; path to libleveldb.dll&#xA;PostgreSQL_INCLUDE_DIR          - Only when building with PostgreSQL; directory that contains libpq-fe.h&#xA;PostgreSQL_LIBRARY              - Only when building with PostgreSQL; path to libpq.a/libpq.so/libpq.lib&#xA;REDIS_INCLUDE_DIR               - Only when building with Redis; directory that contains hiredis.h&#xA;REDIS_LIBRARY                   - Only when building with Redis; path to libhiredis.a/libhiredis.so&#xA;SPATIAL_INCLUDE_DIR             - Only when building with LibSpatial; directory that contains spatialindex/SpatialIndex.h&#xA;SPATIAL_LIBRARY                 - Only when building with LibSpatial; path to libspatialindex_c.so/spatialindex-32.lib&#xA;LUA_INCLUDE_DIR                 - Only if you want to use LuaJIT; directory where luajit.h is located&#xA;LUA_LIBRARY                     - Only if you want to use LuaJIT; path to libluajit.a/libluajit.so&#xA;OGG_DLL                         - Only if building with sound on Windows; path to libogg.dll&#xA;OGG_INCLUDE_DIR                 - Only if building with sound; directory that contains an ogg directory which contains ogg.h&#xA;OGG_LIBRARY                     - Only if building with sound; path to libogg.a/libogg.so/libogg.dll.a&#xA;OPENAL_DLL                      - Only if building with sound on Windows; path to OpenAL32.dll&#xA;OPENAL_INCLUDE_DIR              - Only if building with sound; directory where al.h is located&#xA;OPENAL_LIBRARY                  - Only if building with sound; path to libopenal.a/libopenal.so/OpenAL32.lib&#xA;SQLITE3_INCLUDE_DIR             - Directory that contains sqlite3.h&#xA;SQLITE3_LIBRARY                 - Path to libsqlite3.a/libsqlite3.so/sqlite3.lib&#xA;VORBISFILE_LIBRARY              - Only if building with sound; path to libvorbisfile.a/libvorbisfile.so/libvorbisfile.dll.a&#xA;VORBIS_DLL                      - Only if building with sound on Windows; paths to vorbis DLLs&#xA;VORBIS_INCLUDE_DIR              - Only if building with sound; directory that contains a directory vorbis with vorbisenc.h inside&#xA;VORBIS_LIBRARY                  - Only if building with sound; path to libvorbis.a/libvorbis.so/libvorbis.dll.a&#xA;ZLIB_DLL                        - Only on Windows; path to zlib1.dll&#xA;ZLIB_INCLUDE_DIR                - Directory that contains zlib.h&#xA;ZLIB_LIBRARY                    - Path to libz.a/libz.so/zlib.lib&#xA;ZSTD_DLL                        - Only on Windows; path to libzstd.dll&#xA;ZSTD_INCLUDE_DIR                - Directory that contains zstd.h&#xA;ZSTD_LIBRARY                    - Path to libzstd.a/libzstd.so/ztd.lib&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Compiling on Windows using MSVC&lt;/h3&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://visualstudio.microsoft.com&#34;&gt;Visual Studio 2015 or newer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cmake.org/download/&#34;&gt;CMake&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/vcpkg&#34;&gt;vcpkg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Compiling and installing the dependencies&lt;/h3&gt; &#xA;&lt;p&gt;It is highly recommended to use vcpkg as package manager.&lt;/p&gt; &#xA;&lt;p&gt;After you successfully built vcpkg you can easily install the required libraries:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;vcpkg install zlib zstd curl[winssl] openal-soft libvorbis libogg libjpeg-turbo sqlite3 freetype luajit gmp jsoncpp opengl-registry --triplet x64-windows&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Don&#39;t forget about IrrlichtMt.&lt;/strong&gt; The easiest way is to clone it to &lt;code&gt;lib/irrlichtmt&lt;/code&gt; as described in the Linux section.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;curl&lt;/code&gt; is optional, but required to read the serverlist, &lt;code&gt;curl[winssl]&lt;/code&gt; is required to use the content store.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;openal-soft&lt;/code&gt;, &lt;code&gt;libvorbis&lt;/code&gt; and &lt;code&gt;libogg&lt;/code&gt; are optional, but required to use sound.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;luajit&lt;/code&gt; is optional, it replaces the integrated Lua interpreter with a faster just-in-time interpreter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gmp&lt;/code&gt; and &lt;code&gt;jsoncpp&lt;/code&gt; are optional, otherwise the bundled versions will be compiled&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are other optional libraries, but they are not tested if they can build and link correctly.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;--triplet&lt;/code&gt; to specify the target triplet, e.g. &lt;code&gt;x64-windows&lt;/code&gt; or &lt;code&gt;x86-windows&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Compile Minetest&lt;/h3&gt; &#xA;&lt;h4&gt;a) Using the vcpkg toolchain and CMake GUI&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Start up the CMake GUI&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;strong&gt;Browse Source...&lt;/strong&gt; and select DIR/minetest&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;strong&gt;Browse Build...&lt;/strong&gt; and select DIR/minetest-build&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;strong&gt;Configure&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Choose the right visual Studio version and target platform. It has to match the version of the installed dependencies&lt;/li&gt; &#xA; &lt;li&gt;Choose &lt;strong&gt;Specify toolchain file for cross-compiling&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Next&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select the vcpkg toolchain file e.g. &lt;code&gt;D:/vcpkg/scripts/buildsystems/vcpkg.cmake&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click Finish&lt;/li&gt; &#xA; &lt;li&gt;Wait until cmake have generated the cash file&lt;/li&gt; &#xA; &lt;li&gt;If there are any errors, solve them and hit &lt;strong&gt;Configure&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Generate&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Open Project&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Compile Minetest inside Visual studio.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;b) Using the vcpkg toolchain and the commandline&lt;/h4&gt; &#xA;&lt;p&gt;Run the following script in PowerShell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;cmake . -G&#34;Visual Studio 15 2017 Win64&#34; -DCMAKE_TOOLCHAIN_FILE=D:/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_GETTEXT=OFF -DENABLE_CURSES=OFF&#xA;cmake --build . --config Release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure that the right compiler is selected and the path to the vcpkg toolchain is correct.&lt;/p&gt; &#xA;&lt;h3&gt;Windows Installer using WiX Toolset&lt;/h3&gt; &#xA;&lt;p&gt;Requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://visualstudio.microsoft.com/&#34;&gt;Visual Studio 2017&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wixtoolset.org/&#34;&gt;WiX Toolset&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In the Visual Studio 2017 Installer select &lt;strong&gt;Optional Features -&amp;gt; WiX Toolset&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Build the binaries as described above, but make sure you unselect &lt;code&gt;RUN_IN_PLACE&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Open the generated project file with Visual Studio. Right-click &lt;strong&gt;Package&lt;/strong&gt; and choose &lt;strong&gt;Generate&lt;/strong&gt;. It may take some minutes to generate the installer.&lt;/p&gt; &#xA;&lt;h3&gt;Compiling on MacOS&lt;/h3&gt; &#xA;&lt;h4&gt;Requirements&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Install dependencies with homebrew:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install cmake freetype gettext gmp hiredis jpeg jsoncpp leveldb libogg libpng libvorbis luajit zstd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Download&lt;/h4&gt; &#xA;&lt;p&gt;Download source (this is the URL to the latest of source repository, which might not work at all times) using Git:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --depth 1 https://github.com/minetest/minetest.git&#xA;cd minetest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Download minetest_game (otherwise only the &#34;Development Test&#34; game is available) using Git:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --depth 1 https://github.com/minetest/minetest_game.git games/minetest_game&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Download Minetest&#39;s fork of Irrlicht:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --depth 1 https://github.com/minetest/irrlicht.git lib/irrlichtmt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Build&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir build&#xA;cd build&#xA;&#xA;cmake .. \&#xA;    -DCMAKE_OSX_DEPLOYMENT_TARGET=10.14 \&#xA;    -DCMAKE_FIND_FRAMEWORK=LAST \&#xA;    -DCMAKE_INSTALL_PREFIX=../build/macos/ \&#xA;    -DRUN_IN_PLACE=FALSE -DENABLE_GETTEXT=TRUE&#xA;&#xA;make -j$(sysctl -n hw.logicalcpu)&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Run&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;open ./build/macos/minetest.app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;p&gt;We provide Minetest server Docker images using the GitLab mirror registry.&lt;/p&gt; &#xA;&lt;p&gt;Images are built on each commit and available using the following tag scheme:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;registry.gitlab.com/minetest/minetest/server:latest&lt;/code&gt; (latest build)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;registry.gitlab.com/minetest/minetest/server:&amp;lt;branch/tag&amp;gt;&lt;/code&gt; (current branch or current tag)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;registry.gitlab.com/minetest/minetest/server:&amp;lt;commit-id&amp;gt;&lt;/code&gt; (current commit id)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want to test it on a Docker server you can easily run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo docker run registry.gitlab.com/minetest/minetest/server:&amp;lt;docker tag&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use it in a production environment you should use volumes bound to the Docker host to persist data and modify the configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo docker create -v /home/minetest/data/:/var/lib/minetest/ -v /home/minetest/conf/:/etc/minetest/ registry.gitlab.com/minetest/minetest/server:master&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Data will be written to &lt;code&gt;/home/minetest/data&lt;/code&gt; on the host, and configuration will be read from &lt;code&gt;/home/minetest/conf/minetest.conf&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you don&#39;t understand the previous commands please read the official Docker documentation before use.&lt;/p&gt; &#xA;&lt;p&gt;You can also host your Minetest server inside a Kubernetes cluster. See our example implementation in &lt;a href=&#34;https://raw.githubusercontent.com/minetest/minetest/master/misc/kubernetes.yml&#34;&gt;&lt;code&gt;misc/kubernetes.yml&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Version scheme&lt;/h2&gt; &#xA;&lt;p&gt;We use &lt;code&gt;major.minor.patch&lt;/code&gt; since 5.0.0-dev. Prior to that we used &lt;code&gt;0.major.minor&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Major is incremented when the release contains breaking changes, all other numbers are set to 0.&lt;/li&gt; &#xA; &lt;li&gt;Minor is incremented when the release contains new non-breaking features, patch is set to 0.&lt;/li&gt; &#xA; &lt;li&gt;Patch is incremented when the release only contains bugfixes and very minor/trivial features considered necessary.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Since 5.0.0-dev and 0.4.17-dev, the dev notation refers to the next release, i.e.: 5.0.0-dev is the development version leading to 5.0.0. Prior to that we used &lt;code&gt;previous_version-dev&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>grindylow/ahoy</title>
    <updated>2022-08-07T01:59:21Z</updated>
    <id>tag:github.com,2022-08-07:/grindylow/ahoy</id>
    <link href="https://github.com/grindylow/ahoy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Various tools, examples, and documentation for communicating with Hoymiles microinverters&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/grindylow/ahoy/raw/main/doc/logo1_small.png?raw=true&#34; alt=&#34;Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ahoy&lt;/h1&gt; &#xA;&lt;p&gt;Various tools, examples, and documentation for communicating with Hoymiles microinverters.&lt;/p&gt; &#xA;&lt;p&gt;In particular:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;doc/hoymiles-format-description.txt&lt;/code&gt; is a &lt;a href=&#34;https://raw.githubusercontent.com/grindylow/ahoy/main/doc/hoymiles-format-description.md&#34;&gt;detailed description of the communications format&lt;/a&gt; and the history of this project&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;doc/getting-started-ESP8266.md&lt;/code&gt; shows the &lt;a href=&#34;https://raw.githubusercontent.com/grindylow/ahoy/main/doc/getting-started-ESP8266.md&#34;&gt;hardware setup for an ESP8266-based system&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;tools&lt;/code&gt; folder contains various software tools for RaspberryPi, Arduino and ESP8266/ESP32: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/grindylow/ahoy/main/tools/esp8266/&#34;&gt;version for ESP8266&lt;/a&gt; that includes an web interface &lt;img src=&#34;https://raw.githubusercontent.com/grindylow/actions/workflows/compile_esp8266.yml/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;   &lt;li&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/grindylow/ahoy/main/tools/nano/NRF24_SendRcv/&#34;&gt;version for Arduino Nano&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;An &lt;a href=&#34;https://raw.githubusercontent.com/grindylow/ahoy/main/tools/NRF24_SendRcv/&#34;&gt;alternative Version of the above&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/grindylow/ahoy/main/tools/HoyDtuSim/&#34;&gt;different implementation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;An &lt;a href=&#34;https://raw.githubusercontent.com/grindylow/ahoy/main/tools/rpi/&#34;&gt;implementation for Raspberry Pi&lt;/a&gt; that polls an inverter and archives results as log files/stdout as well as posting them to an MQTT broker.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Contributors are always welcome!&lt;/p&gt;</summary>
  </entry>
</feed>