<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-29T01:51:28Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>catchorg/Catch2</title>
    <updated>2023-01-29T01:51:28Z</updated>
    <id>tag:github.com,2023-01-29:/catchorg/Catch2</id>
    <link href="https://github.com/catchorg/Catch2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A modern, C++-native, test framework for unit-tests, TDD and BDD - using C++14, C++17 and later (C++11 support is in v2.x branch, and C++03 on the Catch1.x branch)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a id=&#34;top&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/catchorg/Catch2/devel/data/artwork/catch2-logo-small-with-background.png&#34; alt=&#34;Catch2 logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/catchorg/catch2/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/catchorg/catch2.svg?sanitize=true&#34; alt=&#34;Github Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/catchorg/Catch2/actions/workflows/linux-simple-builds.yml&#34;&gt;&lt;img src=&#34;https://github.com/catchorg/Catch2/actions/workflows/linux-simple-builds.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/catchorg/Catch2/actions/workflows/linux-other-builds.yml&#34;&gt;&lt;img src=&#34;https://github.com/catchorg/Catch2/actions/workflows/linux-other-builds.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/catchorg/Catch2/actions/workflows/mac-builds.yml&#34;&gt;&lt;img src=&#34;https://github.com/catchorg/Catch2/actions/workflows/mac-builds.yml/badge.svg?sanitize=true&#34; alt=&#34;MacOS build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/catchorg/catch2&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/catchorg/Catch2?svg=true&amp;amp;branch=devel&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/catchorg/Catch2&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/catchorg/Catch2/branch/devel/graph/badge.svg?sanitize=true&#34; alt=&#34;Code Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://godbolt.org/z/EdoY15q9G&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/try-online-blue.svg?sanitize=true&#34; alt=&#34;Try online&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/4CWS9zD&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-Chat!-brightgreen.svg?sanitize=true&#34; alt=&#34;Join the chat in Discord: https://discord.gg/4CWS9zD&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is Catch2?&lt;/h2&gt; &#xA;&lt;p&gt;Catch2 is mainly a unit testing framework for C++, but it also provides basic micro-benchmarking features, and simple BDD macros.&lt;/p&gt; &#xA;&lt;p&gt;Catch2&#39;s main advantage is that using it is both simple and natural. Test names do not have to be valid identifiers, assertions look like normal C++ boolean expressions, and sections provide a nice and local way to share set-up and tear-down code in tests.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example unit test&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;catch2/catch_test_macros.hpp&amp;gt;&#xA;&#xA;#include &amp;lt;cstdint&amp;gt;&#xA;&#xA;uint32_t factorial( uint32_t number ) {&#xA;    return number &amp;lt;= 1 ? number : factorial(number-1) * number;&#xA;}&#xA;&#xA;TEST_CASE( &#34;Factorials are computed&#34;, &#34;[factorial]&#34; ) {&#xA;    REQUIRE( factorial( 1) == 1 );&#xA;    REQUIRE( factorial( 2) == 2 );&#xA;    REQUIRE( factorial( 3) == 6 );&#xA;    REQUIRE( factorial(10) == 3&#39;628&#39;800 );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example microbenchmark&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;catch2/catch_test_macros.hpp&amp;gt;&#xA;#include &amp;lt;catch2/benchmark/catch_benchmark.hpp&amp;gt;&#xA;&#xA;#include &amp;lt;cstdint&amp;gt;&#xA;&#xA;uint64_t fibonacci(uint64_t number) {&#xA;    return number &amp;lt; 2 ? number : fibonacci(number - 1) + fibonacci(number - 2);&#xA;}&#xA;&#xA;TEST_CASE(&#34;Benchmark Fibonacci&#34;, &#34;[!benchmark]&#34;) {&#xA;    REQUIRE(fibonacci(5) == 5);&#xA;&#xA;    REQUIRE(fibonacci(20) == 6&#39;765);&#xA;    BENCHMARK(&#34;fibonacci 20&#34;) {&#xA;        return fibonacci(20);&#xA;    };&#xA;&#xA;    REQUIRE(fibonacci(25) == 75&#39;025);&#xA;    BENCHMARK(&#34;fibonacci 25&#34;) {&#xA;        return fibonacci(25);&#xA;    };&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note that benchmarks are not run by default, so you need to run it explicitly with the &lt;code&gt;[!benchmark]&lt;/code&gt; tag.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Catch2 v3 has been released!&lt;/h2&gt; &#xA;&lt;p&gt;You are on the &lt;code&gt;devel&lt;/code&gt; branch, where the v3 version is being developed. v3 brings a bunch of significant changes, the big one being that Catch2 is no longer a single-header library. Catch2 now behaves as a normal library, with multiple headers and separately compiled implementation.&lt;/p&gt; &#xA;&lt;p&gt;The documentation is slowly being updated to take these changes into account, but this work is currently still ongoing.&lt;/p&gt; &#xA;&lt;p&gt;For migrating from the v2 releases to v3, you should look at &lt;a href=&#34;https://raw.githubusercontent.com/catchorg/Catch2/devel/docs/migrate-v2-to-v3.md#top&#34;&gt;our documentation&lt;/a&gt;. It provides a simple guidelines on getting started, and collects most common migration problems.&lt;/p&gt; &#xA;&lt;p&gt;For the previous major version of Catch2 &lt;a href=&#34;https://github.com/catchorg/Catch2/tree/v2.x&#34;&gt;look into the &lt;code&gt;v2.x&lt;/code&gt; branch here on GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to use it&lt;/h2&gt; &#xA;&lt;p&gt;This documentation comprises these three parts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/catchorg/Catch2/devel/docs/why-catch.md#top&#34;&gt;Why do we need yet another C++ Test Framework?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/catchorg/Catch2/devel/docs/tutorial.md#top&#34;&gt;Tutorial&lt;/a&gt; - getting started&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/catchorg/Catch2/devel/docs/Readme.md#top&#34;&gt;Reference section&lt;/a&gt; - all the details&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;More&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Issues and bugs can be raised on the &lt;a href=&#34;https://github.com/catchorg/Catch2/issues&#34;&gt;Issue tracker on GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For discussion or questions please use &lt;a href=&#34;https://discord.gg/4CWS9zD&#34;&gt;our Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;See who else is using Catch2 in &lt;a href=&#34;https://raw.githubusercontent.com/catchorg/Catch2/devel/docs/opensource-users.md#top&#34;&gt;Open Source Software&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/catchorg/Catch2/devel/docs/commercial-users.md#top&#34;&gt;commercially&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>DFHack/dfhack</title>
    <updated>2023-01-29T01:51:28Z</updated>
    <id>tag:github.com,2023-01-29:/DFHack/dfhack</id>
    <link href="https://github.com/DFHack/dfhack" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Memory hacking library for Dwarf Fortress and a set of tools that use it&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DFHack Readme&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/DFHack/dfhack/actions?query=workflow%3ABuild&#34;&gt;&lt;img src=&#34;https://github.com/DFHack/dfhack/workflows/Build/badge.svg?event=push&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dfhack.readthedocs.org&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/dfhack/badge&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/Zlib_License&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-ZLib-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dfhack.org/discord&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/793331351645323264&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;DFHack is a Dwarf Fortress memory access library, distributed with scripts and plugins implementing a wide variety of useful functions and tools.&lt;/p&gt; &#xA;&lt;p&gt;The full documentation &lt;a href=&#34;https://dfhack.readthedocs.org&#34;&gt;is available online here&lt;/a&gt;. It is also accessible via the README.html page in the DFHack distribution or as raw text in the &lt;code&gt;./docs&lt;/code&gt; folder. If you&#39;re an end-user, modder, or interested in contributing to DFHack - go read those docs.&lt;/p&gt; &#xA;&lt;p&gt;If the docs are unclear or you need more help, please check out our &lt;a href=&#34;https://docs.dfhack.org/en/latest/docs/Support.html&#34;&gt;support page&lt;/a&gt; for ways to contact the DFHack developers.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>AcademySoftwareFoundation/xstudio</title>
    <updated>2023-01-29T01:51:28Z</updated>
    <id>tag:github.com,2023-01-29:/AcademySoftwareFoundation/xstudio</id>
    <link href="https://github.com/AcademySoftwareFoundation/xstudio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to xSTUDIO&lt;/h1&gt; &#xA;&lt;p&gt;xSTUDIO is a media playback and review application designed for professionals working in the film and TV post production industries, particularly the Visual Effects and Feature Animation sectors. xSTUDIO is focused on providing an intuitive, easy to use interface with a high performance playback engine at its core and C++ and Python APIs for pipeline integration and customisation for total flexibility.&lt;/p&gt; &#xA;&lt;h2&gt;Building xSTUDIO&lt;/h2&gt; &#xA;&lt;p&gt;This release of xSTUDIO can be built on various Linux flavours. MacOS and Windows compatibility is not available yet but this work is on the roadmap for 2023.&lt;/p&gt; &#xA;&lt;p&gt;We provide comprehensive build steps for 3 of the most popular Linux distributions.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AcademySoftwareFoundation/xstudio/main/docs/build_guides/centos_7.md&#34;&gt;CentOS 7&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AcademySoftwareFoundation/xstudio/main/docs/build_guides/rocky_linux_9_1.md&#34;&gt;Rocky Linux 9.1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AcademySoftwareFoundation/xstudio/main/docs/build_guides/ubuntu_22_04.md&#34;&gt;Ubuntu 22.04&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note that the xSTUDIO user guide is built with Sphinx using the Read-The-Docs theme. The package dependencies for building the docs are somewhat onerous to install and as such we have ommitted these steps from the instructions and instead recommend that you turn off the docs build. Instead, we include the fully built docs (as html pages) as part of this repo and building xSTUDIO will install these pages so that they can be loaded into your browser via the Help menu in the main UI.&lt;/p&gt;</summary>
  </entry>
</feed>