<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-13T01:43:55Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Oneflow-Inc/oneflow</title>
    <updated>2022-11-13T01:43:55Z</updated>
    <id>tag:github.com,2022-11-13:/Oneflow-Inc/oneflow</id>
    <link href="https://github.com/Oneflow-Inc/oneflow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OneFlow is a deep learning framework designed to be user-friendly, scalable and efficient.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OneFlow&lt;/h1&gt; &#xA;&lt;p&gt;OneFlow is a deep learning framework designed to be &lt;strong&gt;user-friendly, scalable and efficient&lt;/strong&gt;. With OneFlow, it is easy to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;program a model with &lt;strong&gt;PyTorch-like API&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;scale a model to n-dimensional-parallel/distributed execution with the &lt;strong&gt;Global View API&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;accelerate/deploy a model with the &lt;strong&gt;Static Graph Compiler&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Oneflow-Inc/oneflow/actions/workflows/simple.yml&#34;&gt;&lt;img src=&#34;https://github.com/Oneflow-Inc/oneflow/actions/workflows/simple.yml/badge.svg?sanitize=true&#34; alt=&#34;Simple CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Oneflow-Inc/docker-images/actions/workflows/oneflow-nightly.yml&#34;&gt;&lt;img src=&#34;https://github.com/Oneflow-Inc/docker-images/actions/workflows/oneflow-nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;Nightly Docker Image&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Oneflow-Inc/oneflow/actions/workflows/release.yml&#34;&gt;&lt;img src=&#34;https://github.com/Oneflow-Inc/oneflow/actions/workflows/release.yml/badge.svg?sanitize=true&#34; alt=&#34;Nightly Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://oneflow.readthedocs.io/en/master/?badge=master&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/oneflow/badge/?version=master&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Latest News&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Version 0.8.0 is out! &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Oneflow-Inc/oneflow/releases/tag/v0.8.0&#34;&gt;Full changelog&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Publication&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2110.15032&#34;&gt;OneFlow: Redesign the Distributed Deep Learning Framework from Scratch&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Bibtex Citation&lt;/p&gt; &lt;pre&gt;&lt;code&gt;@misc{yuan2021oneflow,&#xA;      title={OneFlow: Redesign the Distributed Deep Learning Framework from Scratch},&#xA;      author={Jinhui Yuan and Xinqi Li and Cheng Cheng and Juncheng Liu and Ran Guo and Shenghang Cai and Chi Yao and Fei Yang and Xiaodong Yi and Chuan Wu and Haoran Zhang and Jie Zhao},&#xA;      year={2021},&#xA;      eprint={2110.15032},&#xA;      archivePrefix={arXiv},&#xA;      primaryClass={cs.DC}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install OneFlow&lt;/h2&gt; &#xA;&lt;h3&gt;System Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Linux. As for now, there is no pre-built release for macOS, Windows.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Python 3.7, 3.8, 3.9, 3.10&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;(&lt;strong&gt;Highly recommended&lt;/strong&gt;) Upgrade pip&lt;/p&gt; &lt;pre&gt;&lt;code&gt;python3 -m pip install --upgrade pip #--user&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;CUDA Toolkit Linux x86_64 Driver&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;CUDA runtime is statically linked into OneFlow. OneFlow will work on a minimum supported driver, and any driver beyond. For more information, please refer to &lt;a href=&#34;https://docs.nvidia.com/deploy/cuda-compatibility/index.html&#34;&gt;CUDA compatibility documentation&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Please upgrade your Nvidia driver to version 440.33 or above and install OneFlow for CUDA 10.2 if possible.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Install with Pip Package&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;To install latest stable release of OneFlow with CUDA support:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 -m pip install oneflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To install nightly release of OneFlow with CUDA support:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 -m pip install --pre oneflow -f https://staging.oneflow.info/branch/master/cu102&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To install other available builds for different variants:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Stable &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 -m pip install --find-links https://release.oneflow.info oneflow==0.8.0+[PLATFORM]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Nightly &lt;pre&gt;&lt;code&gt;python3 -m pip install --pre oneflow -f https://staging.oneflow.info/branch/master/[PLATFORM]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;All available &lt;code&gt;[PLATFORM]&lt;/code&gt;: &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;Platform&lt;/th&gt; &#xA;       &lt;th&gt;CUDA Driver Version&lt;/th&gt; &#xA;       &lt;th&gt;Supported GPUs&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;     &lt;tbody&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;cu112&lt;/td&gt; &#xA;       &lt;td&gt;&amp;gt;= 450.80.02&lt;/td&gt; &#xA;       &lt;td&gt;GTX 10xx, RTX 20xx, A100, RTX 30xx&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;cu102&lt;/td&gt; &#xA;       &lt;td&gt;&amp;gt;= 440.33&lt;/td&gt; &#xA;       &lt;td&gt;GTX 10xx, RTX 20xx&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;cpu&lt;/td&gt; &#xA;       &lt;td&gt;N/A&lt;/td&gt; &#xA;       &lt;td&gt;N/A&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt; &#xA;    &lt;/table&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you are in China, you could run this to have pip download packages from domestic mirror of pypi:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;python3 -m pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more information on this, please refer to &lt;a href=&#34;https://mirror.tuna.tsinghua.edu.cn/help/pypi/&#34;&gt;pypi 镜像使用帮助&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Use docker image&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker pull oneflowinc/oneflow:nightly-cuda10.2&#xA;docker pull oneflowinc/oneflow:nightly-cuda11.2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build from Source&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Clone Source Code&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;h4&gt;Option 1: Clone source code from GitHub&lt;/h4&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Oneflow-Inc/oneflow --depth=1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;h4&gt;Option 2: Download from Aliyun&lt;/h4&gt; &lt;p&gt;If you are in China, please download OneFlow source code from: &lt;a href=&#34;https://oneflow-public.oss-cn-beijing.aliyuncs.com/oneflow-src.zip&#34;&gt;https://oneflow-public.oss-cn-beijing.aliyuncs.com/oneflow-src.zip&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl https://oneflow-public.oss-cn-beijing.aliyuncs.com/oneflow-src.zip -o oneflow-src.zip&#xA;unzip oneflow-src.zip&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;   &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Build OneFlow&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;h4&gt;Option 1: Build with Conda (recommended)&lt;/h4&gt; &lt;p&gt;Please refer to &lt;a href=&#34;https://github.com/Oneflow-Inc/conda-env&#34;&gt;this repo&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;h4&gt;Option 2: Build in docker container (recommended)&lt;/h4&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;Pull the docker image:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull oneflowinc/manylinux2014_x86_64_cuda11.2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Follow the instructions in the bare metal build guide below.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;h4&gt;Option 3: Build on bare metal&lt;/h4&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;Install dependencies (not required if you are using docker):&lt;/p&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;on Ubuntu 20.04, run: &lt;pre&gt;&lt;code&gt;sudo apt install -y libopenblas-dev nasm g++ gcc python3-pip cmake autoconf libtool&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;      &lt;li&gt;on macOS, run: &lt;pre&gt;&lt;code&gt;brew install nasm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;In the root directory of OneFlow source code, run:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;mkdir build&#xA;cd build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Config the project, inside &lt;code&gt;build&lt;/code&gt; directory:&lt;/p&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt; &lt;p&gt;If you are in China&lt;/p&gt; &lt;p&gt;run this to config for CUDA:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cmake .. -C ../cmake/caches/cn/cuda.cmake&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;run this to config for CPU-only:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cmake .. -C ../cmake/caches/cn/cpu.cmake&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;      &lt;li&gt; &lt;p&gt;If you are not in China&lt;/p&gt; &lt;p&gt;run this to config for CUDA:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cmake .. -C ../cmake/caches/international/cuda.cmake&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;run this to config for CPU-only:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cmake .. -C ../cmake/caches/international/cpu.cmake&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Build the project, inside &lt;code&gt;build&lt;/code&gt; directory, run:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;make -j$(nproc)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Add oneflow to your PYTHONPATH, inside &lt;code&gt;build&lt;/code&gt; directory, run:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;source source.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Please note that this change is not permanent.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Simple validation&lt;/p&gt; &lt;pre&gt;&lt;code&gt;python3 -m oneflow --doctor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt;&#xA;   &lt;/ul&gt;&lt;/li&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;     &#xA;&lt;h3&gt;Troubleshooting&lt;/h3&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/Oneflow-Inc/oneflow/master/docs/source/troubleshooting.md&#34;&gt;troubleshooting&lt;/a&gt; for common issues you might encounter when compiling and running OneFlow.&lt;/p&gt; &#xA;&lt;h3&gt;Advanced features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Oneflow-Inc/oneflow-xrt&#34;&gt;OneFlow-XRT&lt;/a&gt;: An extension for OneFlow to target third-party compiler, such as XLA, TensorRT and OpenVINO etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please refer to &lt;a href=&#34;https://docs.oneflow.org/en/master/basics/01_quickstart.html&#34;&gt;QUICKSTART&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;中文版请参见 &lt;a href=&#34;https://docs.oneflow.org/master/basics/01_quickstart.html&#34;&gt;快速上手&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://oneflow.readthedocs.io/en/master/&#34;&gt;API Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.oneflow.org/&#34;&gt;Usage &amp;amp; Design Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.oneflow.org/en/v0.4.0/basics_topics/essentials_of_oneflow.html&#34;&gt;System Design&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Model Zoo and Benchmark&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Oneflow-Inc/libai&#34;&gt;Libai(Toolbox for Parallel Training Large-Scale Transformer Models)&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://libai.readthedocs.io/en/latest/tutorials/get_started/quick_run.html&#34;&gt;BERT-large&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://libai.readthedocs.io/en/latest/modules/libai.models.html#id5&#34;&gt;GPT&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://libai.readthedocs.io/en/latest/modules/libai.models.html#id4&#34;&gt;T5&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://libai.readthedocs.io/en/latest/modules/libai.models.html#id1&#34;&gt;VisionTransformer&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://libai.readthedocs.io/en/latest/modules/libai.models.html#id2&#34;&gt;SwinTransformer&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Oneflow-Inc/vision&#34;&gt;FlowVision(Toolbox for Computer Vision Datasets, SOTA Models and Utils)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Oneflow-Inc/models&#34;&gt;OneFlow-Models(Examples of How to Implement Models in Various Fields with OneFlow)&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Oneflow-Inc/models/tree/main/Vision/classification/image/resnet50&#34;&gt;ResNet-50&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Oneflow-Inc/models/tree/main/RecommenderSystems/wide_and_deep&#34;&gt;Wide&amp;amp;Deep&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Oneflow-Inc/OneFlow-Benchmark&#34;&gt;OneFlow-Benchmark(Outdated)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Communication&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Oneflow-Inc/oneflow/issues&#34;&gt;GitHub issues&lt;/a&gt;: any install, bug, feature issues.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://www.oneflow.org&#34;&gt;www.oneflow.org&lt;/a&gt;: brand related information.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;中文&lt;/h3&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;QQ 群: 331883&lt;/li&gt; &#xA;   &lt;li&gt;微信号（加好友入交流群）: OneFlowXZS&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/org/oneflow-17&#34;&gt;知乎&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;International&lt;/h3&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://discord.gg/4kpjGA5bZY&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://twitter.com/OneFlowNews&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/company/oneflow-inc&#34;&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://oneflow2020.medium.com&#34;&gt;Medium&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;The Team&lt;/h2&gt; &#xA;&lt;p&gt;OneFlow was originally developed by &lt;a href=&#34;http://www.oneflow.org&#34;&gt;OneFlow Inc&lt;/a&gt; and &lt;a href=&#34;http://www.zhejianglab.com/&#34;&gt;Zhejiang Lab&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Oneflow-Inc/oneflow/master/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>yuzu-emu/yuzu</title>
    <updated>2022-11-13T01:43:55Z</updated>
    <id>tag:github.com,2022-11-13:/yuzu-emu/yuzu</id>
    <link href="https://github.com/yuzu-emu/yuzu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Nintendo Switch Emulator&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;br&gt; &lt;a href=&#34;https://yuzu-emu.org/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yuzu-emu/yuzu-assets/master/icons/icon.png&#34; alt=&#34;yuzu&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;b&gt;yuzu&lt;/b&gt; &lt;br&gt; &lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;&lt;b&gt;yuzu&lt;/b&gt; is the world&#39;s most popular, open-source, Nintendo Switch emulator — started by the creators of &lt;a href=&#34;https://citra-emu.org&#34; target=&#34;_blank&#34;&gt;Citra&lt;/a&gt;. &lt;br&gt; It is written in C++ with portability in mind, and we actively maintain builds for Windows and Linux. &lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://dev.azure.com/yuzu-emu/yuzu/&#34;&gt; &lt;img src=&#34;https://dev.azure.com/yuzu-emu/yuzu/_apis/build/status/yuzu%20mainline?branchName=master&#34; alt=&#34;Azure Mainline CI Build Status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.com/invite/u77vRWY&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/398318088170242053?color=5865F2&amp;amp;label=yuzu&amp;amp;logo=discord&amp;amp;logoColor=white&#34; alt=&#34;Discord&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/yuzu-emu/yuzu/master/#compatibility&#34;&gt;Compatibility&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/yuzu-emu/yuzu/master/#development&#34;&gt;Development&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/yuzu-emu/yuzu/master/#building&#34;&gt;Building&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/yuzu-emu/yuzu/master/#download&#34;&gt;Download&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/yuzu-emu/yuzu/master/#support&#34;&gt;Support&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/yuzu-emu/yuzu/master/#license&#34;&gt;License&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;The emulator is capable of running most commercial games at full speed, provided you meet the &lt;a href=&#34;https://yuzu-emu.org/help/quickstart/#hardware-requirements&#34;&gt;necessary hardware requirements&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For a full list of games yuzu support, please visit our &lt;a href=&#34;https://yuzu-emu.org/game/&#34;&gt;Compatibility page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://yuzu-emu.org/&#34;&gt;website&lt;/a&gt; for the latest news on exciting features, monthly progress reports, and more!&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Most of the development happens on GitHub. It&#39;s also where &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;our central repository&lt;/a&gt; is hosted. For development discussion, please join us on &lt;a href=&#34;https://discord.com/invite/u77vRWY&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to contribute, please take a look at the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/wiki/Contributing&#34;&gt;Contributor&#39;s Guide&lt;/a&gt; and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/wiki/Developer-Information&#34;&gt;Developer Information&lt;/a&gt;. You can also contact any of the developers on Discord in order to know about the current state of the emulator.&lt;/p&gt; &#xA;&lt;p&gt;If you want to contribute to the user interface translation project, please check out the &lt;a href=&#34;https://www.transifex.com/yuzu-emulator/yuzu&#34;&gt;yuzu project on transifex&lt;/a&gt;. We centralize translation work there, and periodically upstream translations.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/wiki/Building-For-Windows&#34;&gt;Windows Build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/wiki/Building-For-Linux&#34;&gt;Linux Build&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;You can download the latest releases automatically via the installer on our &lt;a href=&#34;https://yuzu-emu.org/downloads/&#34;&gt;downloads&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you enjoy the project and want to support us financially, check out our Patreon!&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt; &lt;img src=&#34;https://c5.patreon.com/external/logo/become_a_patron_button@2x.png&#34; width=&#34;160&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Any donations received will go towards things like:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Switch consoles to explore and reverse-engineer the hardware&lt;/li&gt; &#xA; &lt;li&gt;Switch games for testing, reverse-engineering, and implementing new features&lt;/li&gt; &#xA; &lt;li&gt;Web hosting and infrastructure setup&lt;/li&gt; &#xA; &lt;li&gt;Software licenses (e.g. Visual Studio, IDA Pro, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Additional hardware (e.g. GPUs as-needed to improve rendering support, other peripherals to add support for, etc.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you wish to support us a different way, please join our &lt;a href=&#34;https://discord.gg/u77vRWY&#34;&gt;Discord&lt;/a&gt; and talk to bunnei. You may also contact: &lt;a href=&#34;mailto:donations@yuzu-emu.org&#34;&gt;donations@yuzu-emu.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;yuzu is licensed under the GPLv3 (or any later version). Refer to the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/raw/master/LICENSE.txt&#34;&gt;LICENSE.txt&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/skyline-emu/skyline&#34;&gt;Skyline-Emulator Team&lt;/a&gt; may choose to use the code from these contributors under the GPL-3.0-or-later OR MPL-2.0: &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;FernandoS27&lt;/a&gt;, &lt;a href=&#34;https://github.com/lioncash&#34;&gt;lioncash&lt;/a&gt;, &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt;, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;ReinUsesLisp&lt;/a&gt;, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph1984&lt;/a&gt;, &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK5377&lt;/a&gt;, &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt;, &lt;a href=&#34;https://github.com/ameerj&#34;&gt;ameerj&lt;/a&gt;, &lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Kelebek1&lt;/a&gt; and &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;lat9nq&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/winget-cli</title>
    <updated>2022-11-13T01:43:55Z</updated>
    <id>tag:github.com,2022-11-13:/microsoft/winget-cli</id>
    <link href="https://github.com/microsoft/winget-cli" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Windows Package Manager CLI (aka winget)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Windows Package Manager Client&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/winget-cli/master/.github/images/Logo.png&#34; align=&#34;left&#34; width=&#34;50&#34; height=&#34;39&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the source code for the Windows Package Manager Client.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/winget-cli/master/.github/images/WingetInstall.gif&#34; alt=&#34;winget install wingetcreate&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are new to the Windows Package Manager, you might want to &lt;a href=&#34;https://docs.microsoft.com/learn/modules/explore-windows-package-manager-tool/?WT.mc_id=AZ-MVP-5004737&#34;&gt;Explore the Windows Package Manager tool&lt;/a&gt;. The packages available to the client are in the &lt;a href=&#34;https://github.com/microsoft/winget-pkgs&#34;&gt;Windows Package Manager Community Repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installing The Client&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The client requires Windows 10 1809 (build 17763) or later at this time. Windows Server 2019 is not supported as the Microsoft Store is not available nor are updated dependencies. It may be possible to install on Windows Server 2022, this should be considered experimental (not supported), and requires dependencies to be manually installed as well.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Microsoft Store [Recommended]&lt;/h3&gt; &#xA;&lt;p&gt;The client is distributed within the &lt;a href=&#34;https://www.microsoft.com/p/app-installer/9nblggh4nns1&#34;&gt;App Installer&lt;/a&gt; package.&lt;/p&gt; &#xA;&lt;h3&gt;Development Releases&lt;/h3&gt; &#xA;&lt;p&gt;There are two methods to get development releases:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install a &lt;a href=&#34;https://insider.windows.com/&#34;&gt;Windows 10 or Windows 11 Insider&lt;/a&gt; build.&lt;/li&gt; &#xA; &lt;li&gt;Join the Windows Package Manager Insider program by &lt;a href=&#34;http://aka.ms/winget-InsiderProgram&#34;&gt;signing up&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note: it may take a few days to get the updated App Installer after you receive e-mail confirmation from joining the Windows Package Manager Insider program. If you decide to install the latest release from GitHub, and you have successfully joined the insider program, you will receive updates when the next development release has been published in the Microsoft Store.&lt;/p&gt; &#xA;&lt;p&gt;Once you have received the updated App Installer from the Microsoft Store you should be able to execute &lt;code&gt;winget features&lt;/code&gt; to see experimental features. Some users have reported &lt;a href=&#34;https://github.com/microsoft/winget-cli/issues/210&#34;&gt;issues&lt;/a&gt; with the client not being on their PATH.&lt;/p&gt; &#xA;&lt;h3&gt;Manually Update&lt;/h3&gt; &#xA;&lt;p&gt;The same Microsoft Store package will be made available via our &lt;a href=&#34;https://github.com/microsoft/winget-cli/releases&#34;&gt;Releases&lt;/a&gt;. Note that installing this package will give you the WinGet client, but it will not enable automatic updates from the Microsoft Store if you have not joined the Windows Package Manager Insider program.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You may need to install the &lt;a href=&#34;https://docs.microsoft.com/troubleshoot/cpp/c-runtime-packages-desktop-bridge#how-to-install-and-update-desktop-framework-packages&#34;&gt;VC++ v14 Desktop Framework Package&lt;/a&gt;. This should only be necessary on older builds of Windows 10 and only if you get an error about missing framework packages.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Troubleshooting&lt;/h3&gt; &#xA;&lt;p&gt;Please read our &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/winget-cli/master/doc/troubleshooting/README.md&#34;&gt;troubleshooting guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Administrator Considerations&lt;/h2&gt; &#xA;&lt;p&gt;Installer behavior can be different depending on whether you are running &lt;strong&gt;winget&lt;/strong&gt; with administrator privileges.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;When running &lt;strong&gt;winget&lt;/strong&gt; without administrator privileges, some applications may &lt;a href=&#34;https://docs.microsoft.com/windows/security/identity-protection/user-account-control/how-user-account-control-works&#34;&gt;require elevation&lt;/a&gt; to install. When the installer runs, Windows will prompt you to &lt;a href=&#34;https://docs.microsoft.com/windows/security/identity-protection/user-account-control/how-user-account-control-works#the-uac-user-experience&#34;&gt;elevate&lt;/a&gt;. If you choose not to elevate, the application will fail to install.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;When running &lt;strong&gt;winget&lt;/strong&gt; in an Administrator Command Prompt, you will not see &lt;a href=&#34;https://docs.microsoft.com/windows/security/identity-protection/user-account-control/how-user-account-control-works#the-uac-user-experience&#34;&gt;elevation prompts&lt;/a&gt; if the application requires it. Always use caution when running your command prompt as an administrator, and only install applications you trust.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Build your own&lt;/h3&gt; &#xA;&lt;p&gt;You can also &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/winget-cli/master/#building-the-client&#34;&gt;build the client yourself&lt;/a&gt;. While the client should be perfectly functional, we are not ready to provide full support for clients running outside of the official distribution mechanisms yet. Feel free to file an Issue, but know that it may get lower prioritization.&lt;/p&gt; &#xA;&lt;h2&gt;Build Status&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/ms/winget-cli/_build/latest?definitionId=344&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/ms/winget-cli/_apis/build/status/microsoft.winget-cli?branchName=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Windows Package Manager Release Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;The plan for delivering next Windows Package Manager releases is described included in our &lt;a href=&#34;https://github.com/microsoft/winget-cli/discussions/2063&#34;&gt;discussions&lt;/a&gt;, and will be updated as the project proceeds.&lt;/p&gt; &#xA;&lt;h2&gt;Overview of the Windows Package Manager&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;strong&gt;Windows Package Manager&lt;/strong&gt; is a tool designed to help you quickly and easily discover and install those packages that make your PC environment special. By using the &lt;strong&gt;Windows Package Manager&lt;/strong&gt;, from one command, you can install your favorite packages:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;winget install &amp;lt;package&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;h3&gt;Client Repository&lt;/h3&gt; &#xA;&lt;p&gt;This winget-cli repository includes the source code designed to build the client. You are encouraged to participate in the development of this client. We have plenty of backlog features in our &lt;a href=&#34;https://github.com/microsoft/winget-cli/issues&#34;&gt;Issues&lt;/a&gt;. You can upvote the ones you want, add more, or even &lt;a href=&#34;https://github.com/microsoft/winget-cli/projects/1&#34;&gt;get started on one.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Sources&lt;/h3&gt; &#xA;&lt;p&gt;The client is built around the concept of sources; a set of packages effectively. Sources provide the ability to discover and retrieve the metadata about the packages, so that the client can act on it.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The default &#34;winget&#34; source includes packages in the &lt;a href=&#34;https://github.com/microsoft/winget-pkgs&#34;&gt;Windows Package Manager Community Repository&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The default &#34;msstore&#34; source includes packages in the Microsoft Store.&lt;/li&gt; &#xA; &lt;li&gt;It is also possible to host your own private &lt;a href=&#34;https://github.com/microsoft/winget-cli-restsource&#34;&gt;REST based&lt;/a&gt; source.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building the client&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows 10 1809 (17763) or later&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/windows/uwp/get-started/enable-your-device-for-development&#34;&gt;Developer Mode enabled&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt;Visual Studio 2022&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Or use winget to install it ;) (although you may need to adjust the workloads via Tools-&amp;gt;Get Tools and Features...)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;The following workloads: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;.NET Desktop Development&lt;/li&gt; &#xA;   &lt;li&gt;Desktop Development with C++&lt;/li&gt; &#xA;   &lt;li&gt;Universal Windows Platform Development&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;The following extensions: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=VisualStudioClient.MicrosoftVisualStudio2022InstallerProjects&#34;&gt;Microsoft Visual Studio Installer Projects&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;p&gt;We currently only build using the solution; command line methods of building a VS solution should work as well.&lt;/p&gt; &#xA;&lt;h2&gt;Credit&lt;/h2&gt; &#xA;&lt;p&gt;We would like to thank &lt;a href=&#34;https://github.com/kayone&#34;&gt;Keivan Beigi (@kayone)&lt;/a&gt; for his work on AppGet which helped us on the initial project direction for Windows Package Manager.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&#34;https://cla.opensource.microsoft.com&#34;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;. More information is available in our &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/winget-cli/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information, please refer to the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;Data/Telemetry&lt;/h2&gt; &#xA;&lt;p&gt;The winget.exe client is instrumented to collect usage and diagnostic (error) data and sends it to Microsoft to help improve the product.&lt;/p&gt; &#xA;&lt;p&gt;If you build the client yourself the instrumentation will not be enabled and no data will be sent to Microsoft.&lt;/p&gt; &#xA;&lt;p&gt;The winget.exe client respects machine wide privacy settings and users can opt-out on their device, as documented in the Microsoft Windows privacy statement &lt;a href=&#34;https://support.microsoft.com/help/4468236/diagnostics-feedback-and-privacy-in-windows-10-microsoft-privacy&#34;&gt;here&lt;/a&gt;. In addition, you may also explicitly block telemetry using &lt;a href=&#34;https://docs.microsoft.com/windows/package-manager/winget/settings&#34;&gt;settings&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In short to opt-out, go to &lt;code&gt;Start&lt;/code&gt;, then select &lt;code&gt;Settings&lt;/code&gt; &amp;gt; &lt;code&gt;Privacy&lt;/code&gt; &amp;gt; &lt;code&gt;Diagnostics &amp;amp; feedback&lt;/code&gt;, and select &lt;code&gt;Basic&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/winget-cli/master/privacy.md&#34;&gt;privacy statement&lt;/a&gt; for more details.&lt;/p&gt;</summary>
  </entry>
</feed>