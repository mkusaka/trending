<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-25T01:43:02Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cocos/cocos-engine</title>
    <updated>2024-02-25T01:43:02Z</updated>
    <id>tag:github.com,2024-02-25:/cocos/cocos-engine</id>
    <link href="https://github.com/cocos/cocos-engine" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cocos simplifies game creation and distribution with Cocos Creator, a free, open-source, cross-platform game engine. Empowering millions of developers to create high-performance, engaging 2D/3D games and instant web entertainment.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.cocos.com/&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1503156/112012067-d5cdf580-8b63-11eb-819a-1c32cf253b25.png&#34; alt=&#34;Cocos Creator Logo&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/cocos/cocos-engine/stargazers&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/cocos/cocos-engine.svg?style=flat-square&amp;amp;colorB=4183c4&#34; alt=&#34;stars&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/cocos-creator/engine/network&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/cocos/cocos-engine.svg?style=flat-square&amp;amp;colorB=4183c4&#34; alt=&#34;forks&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/cocos/cocos-engine/v3.8.3/licenses/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square&amp;amp;colorB=4183c4&#34; alt=&#34;license&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/CocosEngine&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/CocosEngine.svg?logo=twitter&amp;amp;label=follow&amp;amp;style=flat-square&amp;amp;colorB=4183c4&#34; alt=&#34;twitter&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Engine for Cocos Creator&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Cocos Creator is the new generation of game development tool in Cocos family, it brings a complete set of 3D and 2D features while providing an intuitive, low cost and collaboration friendly workflow to game developers.&lt;/strong&gt; Cocos Engine is the runtime framework for Cocos Creator editor.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cocos/cocos-engine/v3.8.3/ui.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Cocos Creator inherited many good qualities and cool features from its previous versions, such as high performance low level C++ implementation, intuitive editor, cross-platform support. It supports native platforms, web platforms and rapidly expanding instant gaming platforms, including Windows, Mac, iOS, Android, HarmonyOS, Web, Facebook Instant Games, WeChat Mini Game and TikTok Mini Games.&lt;/p&gt; &#xA;&lt;p&gt;Furthermore, Cocos Creator has pushed the engine technology to a whole new level for high performance with scalability on various platforms, full extensibility and easy development.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Modern Graphics&lt;/strong&gt;: The GFX implementation is designed to adapt to the modern graphics APIs, it uses Vulkan on Windows and Android, Metal on Mac OS and iOS, WebGL on Web platform.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;High Performance&lt;/strong&gt;: The runtime engine is built with half C++ and half TypeScript, low level infrastructure, native platform adaptation, renderer and scene management are all written in C++ to ensure high runtime performance. We continue to move heavy lifting work to native as much as possible.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Customizable Render Pipeline&lt;/strong&gt;: The render pipeline is designed to be fully customizable, it has supported the builtin forward and deferred render pipeline across all platforms. Developers can customize their own render pipeline following the same approach.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Extensible Surface Shader&lt;/strong&gt;: The material system is built on Cocos effect format which uses GLSL 300, the shader programs will be converted to suitable runtime format automatically. The surface shader permit to fully customize the surface material while ensuring universal lighting model.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Physically Based Rendering (PBR)&lt;/strong&gt;: The standard effect adopts physically based rendering, along with the physically based camera and the lighting based on physical metrics, developers can easily achieve realistic and seamless rendering results across different environment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easy TypeScript API&lt;/strong&gt;: The user level API set is provided in TypeScript, along with the powerful VSCode editor, development with Cocos Creator is incredibly efficient.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Besides all these highlights, Cocos Creator also provides builtin animation system, physics system, particle system, terrain editing support, complex UI system, instant preview etc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1503156/111037166-f27c7600-845d-11eb-988f-4c2c8b5c7321.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This open source repository is the runtime engine of Cocos Creator, the engine is naturally integrated within Cocos Creator, designed to only be the essential runtime library and not to be used independently.&lt;/p&gt; &#xA;&lt;h2&gt;Development and Contribution Notice&lt;/h2&gt; &#xA;&lt;p&gt;Cocos Creator engine is open source and welcomes community participation, for open source engine development with Cocos Creator editor, you should fork this repository and setup &lt;a href=&#34;https://docs.cocos.com/creator/manual/en/advanced-topics/engine-customization.html&#34;&gt;custom engine&lt;/a&gt; in the editor.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisite&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://nodejs.org/&#34;&gt;node.js v9.11.2 +&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://github.com/gulpjs/gulp/tree/master/docs/getting-started&#34;&gt;gulp-cli v2.3.0 +&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Clone&lt;/h3&gt; &#xA;&lt;p&gt;Clone this repository into your local environment.&lt;/p&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;p&gt;In the cloned engine folder, run the following command to setup development environment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# download &amp;amp; build engine dependencies&#xA;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is all you have to do to setup engine development environment.&lt;/p&gt; &#xA;&lt;h3&gt;Build&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If running inside Cocos Creator, the engine will automatically compile and build after the editor window is opened. For more instructions on modifying the engine in Cocos Creator, please refer to &lt;a href=&#34;https://docs.cocos.com/creator/manual/en/advanced-topics/engine-customization.html&#34;&gt;Engine Customization Workflow&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Outside the editor, you need to run the following command to build:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm run build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/cocos/cocos-engine/v3.8.3/native/README.md&#34;&gt;native readme&lt;/a&gt; if you want to develop native applications.&lt;/p&gt; &#xA;&lt;h3&gt;Contribution&lt;/h3&gt; &#xA;&lt;p&gt;You can contribute to the Cocos Creator open source engine in many ways, they are very much appreciated:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Report bug or feature requests by &lt;a href=&#34;https://github.com/cocos/cocos-engine/issues/new/choose&#34;&gt;creating an issue&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Participate discussions in the &lt;a href=&#34;https://github.com/cocos/cocos-engine/issues/&#34;&gt;issues&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Create a pull request if you have fixed or improved anything, implemented any features.&lt;/li&gt; &#xA; &lt;li&gt;Improve the documentations with pull request to the &lt;a href=&#34;https://github.com/cocos/cocos-docs&#34;&gt;usage documentation repository&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Help other developers in our &lt;a href=&#34;https://discuss.cocos2d-x.org/c/creator&#34;&gt;Forum&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Contribution notice&lt;/h3&gt; &#xA;&lt;p&gt;If you are trying to make a pull request, there are some requirements that must be met so that your pull request can be accepted:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Follow our &lt;a href=&#34;https://raw.githubusercontent.com/cocos/cocos-engine/v3.8.3/docs/CPP_CODING_STYLE.md&#34;&gt;Cpp Coding Style Guide&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/cocos/cocos-engine/v3.8.3/docs/TS_CODING_STYLE.md&#34;&gt;TypeScript Coding Style Reference&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Try to integrate ESLint and &lt;a href=&#34;https://raw.githubusercontent.com/cocos/cocos-engine/v3.8.3/docs/CPP_LINTER_AUTOFIX_GUIDE.md&#34;&gt;CPP auto fix tools&lt;/a&gt; in your coding environment.&lt;/li&gt; &#xA; &lt;li&gt;Link related issues or discussions in your pull request and clearly state the purpose of your pull request.&lt;/li&gt; &#xA; &lt;li&gt;Pass all automatic continuous integration tests.&lt;/li&gt; &#xA; &lt;li&gt;Request file owner or engine developers to review your pull request.&lt;/li&gt; &#xA; &lt;li&gt;Get one valid approval from the engine architects.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Example Project&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cocos/cocos-tutorial-mind-your-step&#34;&gt;Mind Your Step 3D&lt;/a&gt;: Beginner&#39;s step-by-step tutorial project repo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cocos/cocos-test-projects&#34;&gt;Test Cases&lt;/a&gt;: Unit test scenes for every engine module.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cocos/cocos-example-projects&#34;&gt;Example Cases&lt;/a&gt;: Simple yet expressive demo scenes for baseline testing and topic-specific case study.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cocos/awesome-cocos&#34;&gt;Awesome Cocos&lt;/a&gt;: You can find out other useful tools and show cases here.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cocos.com/&#34;&gt;Official site&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cocos.com/en/creator/download&#34;&gt;Download&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.cocos.com/creator/manual/en/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.cocos.com/creator/api/en/&#34;&gt;API References&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/orgs/cocos/projects?query=is%3Aopen&amp;amp;type=new&#34;&gt;Projects and road map&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discuss.cocos2d-x.org/c/creator&#34;&gt;Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Discord community: Search for Cocos in the Discover panel of Discord.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>lballabio/QuantLib</title>
    <updated>2024-02-25T01:43:02Z</updated>
    <id>tag:github.com,2024-02-25:/lballabio/QuantLib</id>
    <link href="https://github.com/lballabio/QuantLib" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The QuantLib C++ library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;QuantLib: the free/open-source library for quantitative finance&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lballabio/QuantLib/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/lballabio/QuantLib?label=Download&amp;amp;sort=semver&#34; alt=&#34;Download&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lballabio/QuantLib/raw/master/LICENSE.TXT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-BSD--3--Clause-blue.svg?sanitize=true&#34; alt=&#34;Licensed under the BSD 3-Clause License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://doi.org/10.5281/zenodo.1440997&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/DOI/10.5281/zenodo.1440997.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lballabio/QuantLib/raw/master/CONTRIBUTING.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs%20-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lballabio/QuantLib/actions?query=workflow%3A%22Linux+build%22&#34;&gt;&lt;img src=&#34;https://github.com/lballabio/QuantLib/workflows/Linux%20build/badge.svg?branch=master&#34; alt=&#34;Linux build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/lballabio/quantlib/branch/master&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/bmpiucu74eldfkm0/branch/master?svg=true&#34; alt=&#34;Windows build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lballabio/QuantLib/actions?query=workflow%3A%22Mac+OS+build%22&#34;&gt;&lt;img src=&#34;https://github.com/lballabio/QuantLib/workflows/Mac%20OS%20build/badge.svg?branch=master&#34; alt=&#34;Mac OS build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lballabio/QuantLib/actions?query=workflow%3A%22CMake+build%22&#34;&gt;&lt;img src=&#34;https://github.com/lballabio/QuantLib/workflows/CMake%20build/badge.svg?branch=master&#34; alt=&#34;CMake build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.codacy.com/gh/lballabio/QuantLib/dashboard&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Grade/b4bc1058db994f24aa931b119a885eea&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/lballabio/QuantLib?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/lballabio/QuantLib/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;The QuantLib project (&lt;a href=&#34;https://www.quantlib.org&#34;&gt;https://www.quantlib.org&lt;/a&gt;) is aimed at providing a comprehensive software framework for quantitative finance. QuantLib is a free/open-source library for modeling, trading, and risk management in real-life.&lt;/p&gt; &#xA;&lt;p&gt;QuantLib is Non-Copylefted Free Software and OSI Certified Open Source Software.&lt;/p&gt; &#xA;&lt;h2&gt;Download and usage&lt;/h2&gt; &#xA;&lt;p&gt;QuantLib can be downloaded from &lt;a href=&#34;https://www.quantlib.org/download.shtml&#34;&gt;https://www.quantlib.org/download.shtml&lt;/a&gt;; installation instructions are available at &lt;a href=&#34;https://www.quantlib.org/install.shtml&#34;&gt;https://www.quantlib.org/install.shtml&lt;/a&gt; for most platforms.&lt;/p&gt; &#xA;&lt;p&gt;Documentation for the usage and the design of the QuantLib library is available from &lt;a href=&#34;https://www.quantlib.org/docs.shtml&#34;&gt;https://www.quantlib.org/docs.shtml&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A list of changes for each past versions of the library can be browsed at &lt;a href=&#34;https://www.quantlib.org/reference/history.html&#34;&gt;https://www.quantlib.org/reference/history.html&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Questions and feedback&lt;/h2&gt; &#xA;&lt;p&gt;The preferred channel for questions (and the one with the largest audience) is the quantlib-users mailing list. Instructions for subscribing are at &lt;a href=&#34;https://www.quantlib.org/mailinglists.shtml&#34;&gt;https://www.quantlib.org/mailinglists.shtml&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Bugs can be reported as a GitHub issue at &lt;a href=&#34;https://github.com/lballabio/QuantLib/issues&#34;&gt;https://github.com/lballabio/QuantLib/issues&lt;/a&gt;; if you have a patch available, you can open a pull request instead (see &#34;Contributing&#34; below).&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are very welcome! Details are in &lt;a href=&#34;https://github.com/lballabio/QuantLib/raw/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>opencv/opencv_contrib</title>
    <updated>2024-02-25T01:43:02Z</updated>
    <id>tag:github.com,2024-02-25:/opencv/opencv_contrib</id>
    <link href="https://github.com/opencv/opencv_contrib" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repository for OpenCV&#39;s extra modules&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Repository for OpenCV&#39;s extra modules&lt;/h2&gt; &#xA;&lt;p&gt;This repository is intended for the development of so-called &#34;extra&#34; modules, contributed functionality. New modules quite often do not have stable API, and they are not well-tested. Thus, they shouldn&#39;t be released as a part of the official OpenCV distribution, since the library maintains binary compatibility, and tries to provide decent performance and stability.&lt;/p&gt; &#xA;&lt;p&gt;So, all the new modules should be developed separately, and published in the &lt;code&gt;opencv_contrib&lt;/code&gt; repository at first. Later, when the module matures and gains popularity, it is moved to the central OpenCV repository, and the development team provides production-quality support for this module.&lt;/p&gt; &#xA;&lt;h3&gt;How to build OpenCV with extra modules&lt;/h3&gt; &#xA;&lt;p&gt;You can build OpenCV, so it will include the modules from this repository. Contrib modules are under constant development and it is recommended to use them alongside the master branch or latest releases of OpenCV.&lt;/p&gt; &#xA;&lt;p&gt;Here is the CMake command for you:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd &amp;lt;opencv_build_directory&amp;gt;&#xA;$ cmake -DOPENCV_EXTRA_MODULES_PATH=&amp;lt;opencv_contrib&amp;gt;/modules &amp;lt;opencv_source_directory&amp;gt;&#xA;$ make -j5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As the result, OpenCV will be built in the &lt;code&gt;&amp;lt;opencv_build_directory&amp;gt;&lt;/code&gt; with all modules from &lt;code&gt;opencv_contrib&lt;/code&gt; repository. If you don&#39;t want all of the modules, use CMake&#39;s &lt;code&gt;BUILD_opencv_*&lt;/code&gt; options. Like in this example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cmake -DOPENCV_EXTRA_MODULES_PATH=&amp;lt;opencv_contrib&amp;gt;/modules -DBUILD_opencv_legacy=OFF &amp;lt;opencv_source_directory&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you also want to build the samples from the &#34;samples&#34; folder of each module, also include the &#34;-DBUILD_EXAMPLES=ON&#34; option.&lt;/p&gt; &#xA;&lt;p&gt;If you prefer using the GUI version of CMake (cmake-gui), then, you can add &lt;code&gt;opencv_contrib&lt;/code&gt; modules within &lt;code&gt;opencv&lt;/code&gt; core by doing the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Start cmake-gui.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Select the opencv source code folder and the folder where binaries will be built (the 2 upper forms of the interface).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Press the &lt;code&gt;configure&lt;/code&gt; button. You will see all the opencv build parameters in the central interface.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Browse the parameters and look for the form called &lt;code&gt;OPENCV_EXTRA_MODULES_PATH&lt;/code&gt; (use the search form to focus rapidly on it).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Complete this &lt;code&gt;OPENCV_EXTRA_MODULES_PATH&lt;/code&gt; by the proper pathname to the &lt;code&gt;&amp;lt;opencv_contrib&amp;gt;/modules&lt;/code&gt; value using its browse button.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Press the &lt;code&gt;configure&lt;/code&gt; button followed by the &lt;code&gt;generate&lt;/code&gt; button (the first time, you will be asked which makefile style to use).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the &lt;code&gt;opencv&lt;/code&gt; core with the method you chose (make and make install if you chose Unix makefile at step 6).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To run, linker flags to contrib modules will need to be added to use them in your code/IDE. For example to use the aruco module, &#34;-lopencv_aruco&#34; flag will be added.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Update the repository documentation&lt;/h3&gt; &#xA;&lt;p&gt;In order to keep a clean overview containing all contributed modules, the following files need to be created/adapted:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Update the README.md file under the modules folder. Here, you add your model with a single-line description.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add a README.md inside your own module folder. This README explains which functionality (separate functions) is available, links to the corresponding samples, and explains in somewhat more detail what the module is expected to do. If any extra requirements are needed to build the module without problems, add them here also.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>