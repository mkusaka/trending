<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-19T01:37:42Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Project-OSRM/osrm-backend</title>
    <updated>2025-01-19T01:37:42Z</updated>
    <id>tag:github.com,2025-01-19:/Project-OSRM/osrm-backend</id>
    <link href="https://github.com/Project-OSRM/osrm-backend" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open Source Routing Machine - C++ backend&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Open Source Routing Machine&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Project-OSRM/osrm-backend/actions/workflows/osrm-backend.yml&#34;&gt;&lt;img src=&#34;https://github.com/Project-OSRM/osrm-backend/actions/workflows/osrm-backend.yml/badge.svg?sanitize=true&#34; alt=&#34;osrm-backend CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/Project-OSRM/osrm-backend&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/Project-OSRM/osrm-backend/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/es9CdcCXcb&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1034487840219860992&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;High performance routing engine written in C++ designed to run on OpenStreetMap data.&lt;/p&gt; &#xA;&lt;p&gt;The following services are available via HTTP API, C++ library interface and NodeJs wrapper:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Nearest - Snaps coordinates to the street network and returns the nearest matches&lt;/li&gt; &#xA; &lt;li&gt;Route - Finds the fastest route between coordinates&lt;/li&gt; &#xA; &lt;li&gt;Table - Computes the duration or distances of the fastest route between all pairs of supplied coordinates&lt;/li&gt; &#xA; &lt;li&gt;Match - Snaps noisy GPS traces to the road network in the most plausible way&lt;/li&gt; &#xA; &lt;li&gt;Trip - Solves the Traveling Salesman Problem using a greedy heuristic&lt;/li&gt; &#xA; &lt;li&gt;Tile - Generates Mapbox Vector Tiles with internal routing metadata&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To quickly try OSRM use our &lt;a href=&#34;http://map.project-osrm.org&#34;&gt;demo server&lt;/a&gt; which comes with both the backend and a frontend on top.&lt;/p&gt; &#xA;&lt;p&gt;For a quick introduction about how the road network is represented in OpenStreetMap and how to map specific road network features have a look at &lt;a href=&#34;https://wiki.openstreetmap.org/wiki/Routing&#34;&gt;the OSM wiki on routing&lt;/a&gt; or &lt;a href=&#34;https://web.archive.org/web/20221206013651/https://labs.mapbox.com/mapping/mapping-for-navigation/&#34;&gt;this guide about mapping for navigation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Related &lt;a href=&#34;https://github.com/Project-OSRM&#34;&gt;Project-OSRM&lt;/a&gt; repositories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Project-OSRM/osrm-frontend&#34;&gt;osrm-frontend&lt;/a&gt; - User-facing frontend with map. The demo server runs this on top of the backend&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Project-OSRM/osrm-text-instructions&#34;&gt;osrm-text-instructions&lt;/a&gt; - Text instructions from OSRM route response&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/project-osrm/osrm-backend/pkgs/container/osrm-backend&#34;&gt;osrm-backend-docker&lt;/a&gt; - Ready to use Docker images&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;h3&gt;Full documentation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://project-osrm.org&#34;&gt;Hosted documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Project-OSRM/osrm-backend/master/docs/http.md&#34;&gt;osrm-routed HTTP API documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Project-OSRM/osrm-backend/master/docs/libosrm.md&#34;&gt;libosrm API documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Discord: &lt;a href=&#34;https://discord.gg/es9CdcCXcb&#34;&gt;join&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;IRC: &lt;code&gt;irc.oftc.net&lt;/code&gt;, channel: &lt;code&gt;#osrm&lt;/code&gt; (&lt;a href=&#34;https://webchat.oftc.net&#34;&gt;Webchat&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Mailinglist: &lt;code&gt;https://lists.openstreetmap.org/listinfo/osrm-talk&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;The easiest and quickest way to setup your own routing engine is to use Docker images we provide.&lt;/p&gt; &#xA;&lt;p&gt;There are two pre-processing pipelines available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Contraction Hierarchies (CH)&lt;/li&gt; &#xA; &lt;li&gt;Multi-Level Dijkstra (MLD)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;we recommend using MLD by default except for special use-cases such as very large distance matrices where CH is still a better fit for the time being. In the following we explain the MLD pipeline. If you want to use the CH pipeline instead replace &lt;code&gt;osrm-partition&lt;/code&gt; and &lt;code&gt;osrm-customize&lt;/code&gt; with a single &lt;code&gt;osrm-contract&lt;/code&gt; and change the algorithm option for &lt;code&gt;osrm-routed&lt;/code&gt; to &lt;code&gt;--algorithm ch&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Using Docker&lt;/h3&gt; &#xA;&lt;p&gt;We base our Docker images (&lt;a href=&#34;https://github.com/Project-OSRM/osrm-backend/pkgs/container/osrm-backend&#34;&gt;backend&lt;/a&gt;, &lt;a href=&#34;https://hub.docker.com/r/osrm/osrm-frontend/&#34;&gt;frontend&lt;/a&gt;) on Debian and make sure they are as lightweight as possible. Older backend versions can be found on &lt;a href=&#34;https://hub.docker.com/r/osrm/osrm-backend/&#34;&gt;Docker Hub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Download OpenStreetMap extracts for example from &lt;a href=&#34;http://download.geofabrik.de/&#34;&gt;Geofabrik&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget http://download.geofabrik.de/europe/germany/berlin-latest.osm.pbf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pre-process the extract with the car profile and start a routing engine HTTP server on port 5000&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -t -v &#34;${PWD}:/data&#34; ghcr.io/project-osrm/osrm-backend osrm-extract -p /opt/car.lua /data/berlin-latest.osm.pbf || echo &#34;osrm-extract failed&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The flag &lt;code&gt;-v &#34;${PWD}:/data&#34;&lt;/code&gt; creates the directory &lt;code&gt;/data&lt;/code&gt; inside the docker container and makes the current working directory &lt;code&gt;&#34;${PWD}&#34;&lt;/code&gt; available there. The file &lt;code&gt;/data/berlin-latest.osm.pbf&lt;/code&gt; inside the container is referring to &lt;code&gt;&#34;${PWD}/berlin-latest.osm.pbf&#34;&lt;/code&gt; on the host.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -t -v &#34;${PWD}:/data&#34; ghcr.io/project-osrm/osrm-backend osrm-partition /data/berlin-latest.osrm || echo &#34;osrm-partition failed&#34;&#xA;docker run -t -v &#34;${PWD}:/data&#34; ghcr.io/project-osrm/osrm-backend osrm-customize /data/berlin-latest.osrm || echo &#34;osrm-customize failed&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note there is no &lt;code&gt;berlin-latest.osrm&lt;/code&gt; file, but multiple &lt;code&gt;berlin-latest.osrm.*&lt;/code&gt; files, i.e. &lt;code&gt;berlin-latest.osrm&lt;/code&gt; is not file path, but &#34;base&#34; path referring to set of files and there is an option to omit this &lt;code&gt;.osrm&lt;/code&gt; suffix completely(e.g. &lt;code&gt;osrm-partition /data/berlin-latest&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -t -i -p 5000:5000 -v &#34;${PWD}:/data&#34; ghcr.io/project-osrm/osrm-backend osrm-routed --algorithm mld /data/berlin-latest.osrm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make requests against the HTTP server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl &#34;http://127.0.0.1:5000/route/v1/driving/13.388860,52.517037;13.385983,52.496891?steps=true&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optionally start a user-friendly frontend on port 9966, and open it up in your browser&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -p 9966:9966 osrm/osrm-frontend&#xA;xdg-open &#39;http://127.0.0.1:9966&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In case Docker complains about not being able to connect to the Docker daemon make sure you are in the &lt;code&gt;docker&lt;/code&gt; group.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo usermod -aG docker $USER&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After adding yourself to the &lt;code&gt;docker&lt;/code&gt; group make sure to log out and back in again with your terminal.&lt;/p&gt; &#xA;&lt;p&gt;We support the following images in the Container Registry:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;latest&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;master&lt;/code&gt; compiled with release flag&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;latest-assertions&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;master&lt;/code&gt; compiled with with release flag, assertions enabled and debug symbols&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;latest-debug&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;master&lt;/code&gt; compiled with debug flag&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;tag&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;specific tag compiled with release flag&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;tag&amp;gt;-debug&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;specific tag compiled with debug flag&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Building from Source&lt;/h3&gt; &#xA;&lt;p&gt;The following targets Ubuntu 22.04. For instructions how to build on different distributions, macOS or Windows see our &lt;a href=&#34;https://github.com/Project-OSRM/osrm-backend/wiki&#34;&gt;Wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Install dependencies&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install build-essential git cmake pkg-config \&#xA;libbz2-dev libxml2-dev libzip-dev libboost-all-dev \&#xA;lua5.2 liblua5.2-dev libtbb-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Compile and install OSRM binaries&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p build&#xA;cd build&#xA;cmake ..&#xA;cmake --build .&#xA;sudo cmake --build . --target install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Request Against the Demo Server&lt;/h3&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://github.com/Project-OSRM/osrm-backend/wiki/Demo-server&#34;&gt;API usage policy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Simple query with instructions and alternatives on Berlin:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl &#34;https://router.project-osrm.org/route/v1/driving/13.388860,52.517037;13.385983,52.496891?steps=true&amp;amp;alternatives=true&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using the Node.js Bindings&lt;/h3&gt; &#xA;&lt;p&gt;The Node.js bindings provide read-only access to the routing engine. We provide API documentation and examples &lt;a href=&#34;https://raw.githubusercontent.com/Project-OSRM/osrm-backend/master/docs/nodejs/api.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You will need a modern &lt;code&gt;libstdc++&lt;/code&gt; toolchain (&lt;code&gt;&amp;gt;= GLIBCXX_3.4.26&lt;/code&gt;) for binary compatibility if you want to use the pre-built binaries. For older Ubuntu systems you can upgrade your standard library for example with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:ubuntu-toolchain-r/test&#xA;sudo apt-get update -y&#xA;sudo apt-get install -y libstdc++-9-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can install the Node.js bindings via &lt;code&gt;npm install @project-osrm/osrm&lt;/code&gt; or from this repository either via&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which will check and use pre-built binaries if they&#39;re available for this release and your Node version, or via&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install --build-from-source&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to always force building the Node.js bindings from source.&lt;/p&gt; &#xA;&lt;h4&gt;Unscoped packages&lt;/h4&gt; &#xA;&lt;p&gt;Prior to v5.27.0, the &lt;code&gt;osrm&lt;/code&gt; Node package was unscoped. If you are upgrading from an old package, you will need to do the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm uninstall osrm --save&#xA;npm install @project-osrm/osrm --save&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Package docs&lt;/h4&gt; &#xA;&lt;p&gt;For usage details have a look &lt;a href=&#34;https://raw.githubusercontent.com/Project-OSRM/osrm-backend/master/docs/nodejs/api.md&#34;&gt;these API docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;An exemplary implementation by a 3rd party with Docker and Node.js can be found &lt;a href=&#34;https://github.com/door2door-io/osrm-express-server-demo&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;References in publications&lt;/h2&gt; &#xA;&lt;p&gt;When using the code in a (scientific) publication, please cite&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@inproceedings{luxen-vetter-2011,&#xA; author = {Luxen, Dennis and Vetter, Christian},&#xA; title = {Real-time routing with OpenStreetMap data},&#xA; booktitle = {Proceedings of the 19th ACM SIGSPATIAL International Conference on Advances in Geographic Information Systems},&#xA; series = {GIS &#39;11},&#xA; year = {2011},&#xA; isbn = {978-1-4503-1031-4},&#xA; location = {Chicago, Illinois},&#xA; pages = {513--516},&#xA; numpages = {4},&#xA; url = {http://doi.acm.org/10.1145/2093973.2094062},&#xA; doi = {10.1145/2093973.2094062},&#xA; acmid = {2094062},&#xA; publisher = {ACM},&#xA; address = {New York, NY, USA},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>dalathegreat/Battery-Emulator</title>
    <updated>2025-01-19T01:37:42Z</updated>
    <id>tag:github.com,2025-01-19:/dalathegreat/Battery-Emulator</id>
    <link href="https://github.com/dalathegreat/Battery-Emulator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This revolutionary software enables EV battery packs to be easily reused for stationary storage in combination with solar inverters&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Battery-Emulator ⚡🔋&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/dalathegreat/BYD-Battery-Emulator-For-Gen24?color=%23008000&#34; alt=&#34;GitHub release (with filter)&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/dalathegreat/Battery-Emulator?style=flat&amp;amp;color=%23128512&#34; alt=&#34;GitHub Repo stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/dalathegreat/Battery-Emulator?style=flat&amp;amp;color=%23128512&#34; alt=&#34;GitHub forks&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/dalathegreat/BYD-Battery-Emulator-For-Gen24/compile-all-batteries.yml?color=0E810E&#34; alt=&#34;GitHub actions&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/made-with_love-blue?color=%23008000&#34; alt=&#34;Static Badge&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This software enables EV battery packs to be used for stationary storage. It achieves this by converting the EV battery CAN data into a brand battery format that solar inverters can understand. This makes it extremely cheap and easy to use large EV batteries in a true plug&#39;n&#39;play fashion!&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!CAUTION] Working with high voltage is dangerous. Always follow local laws and regulations regarding high voltage work. If you are unsure about the rules in your country, consult a licensed electrician for more information.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/dalathegreat/Battery-Emulator/assets/26695010/741c3237-8074-4891-9cd1-f47f0fe45cb5&#34; alt=&#34;Fronius&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Hardware requirements 📜&lt;/h2&gt; &#xA;&lt;p&gt;This code fits on the LilyGo ESP32 T-CAN485 devboard , see &lt;a href=&#34;https://github.com/Xinyuan-LilyGO/T-CAN485&#34;&gt;https://github.com/Xinyuan-LilyGO/T-CAN485&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You will also need a complete EV battery. &lt;a href=&#34;https://github.com/dalathegreat/BYD-Battery-Emulator-For-Gen24/wiki#supported-batteries-list&#34;&gt;See the battery compatibility list on which are supported.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Finally, you will need a &lt;a href=&#34;https://github.com/dalathegreat/BYD-Battery-Emulator-For-Gen24/wiki#supported-inverters-list&#34;&gt;compatible hybrid solar inverter&lt;/a&gt;, for example the &#34;Fronius Gen24&#34; or &#34;GoodWe ET&#34;&lt;/p&gt; &#xA;&lt;h2&gt;Installation basics 🪛&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Connect one end of the LilyGo RS485 to the Gen24 Modbus&lt;/li&gt; &#xA; &lt;li&gt;Connect the other end of the LilyGo to the CAN side of the battery&lt;/li&gt; &#xA; &lt;li&gt;Wire up high voltage cable between the Gen24 and the battery&lt;/li&gt; &#xA; &lt;li&gt;Add a 5-12V power source to power the LilyGo and 12V to the battery (uninterruptible PSU or 12V lead acid recommended in parallel)&lt;/li&gt; &#xA; &lt;li&gt;Some batteries need manual pre-charge circuit and positive/negative contactor control. Others are automatic. See the wiki for more info.&lt;/li&gt; &#xA; &lt;li&gt;Enjoy a big cheap grid connected battery!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Wiring example, LEAF battery 💡&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s how to wire up the communication between the components. &lt;img src=&#34;https://github.com/dalathegreat/Battery-Emulator/assets/26695010/29edeeda-1002-4826-9183-39a027b3b9ed&#34; alt=&#34;Wiring&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s how to connect the high voltage lines &lt;img src=&#34;https://github.com/dalathegreat/Battery-Emulator/assets/26695010/f70e6262-d630-4148-9a39-dad32e79b3d6&#34; alt=&#34;HighVoltageWiring&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more examples showing wiring, see each battery types own Wiki page. For instance the &lt;a href=&#34;https://github.com/dalathegreat/Battery-Emulator/wiki/Battery:-Nissan-LEAF---e%E2%80%90NV200&#34;&gt;Nissan LEAF page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to compile the software 💻&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the Arduino IDE: &lt;a href=&#34;https://www.arduino.cc/en/software&#34;&gt;https://www.arduino.cc/en/software&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open the Arduino IDE.&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;File&lt;/code&gt; menu -&amp;gt; &lt;code&gt;Preferences&lt;/code&gt; -&amp;gt; &lt;code&gt;Additional Development&lt;/code&gt; -&amp;gt; &lt;code&gt;Additional Board Manager URLs&lt;/code&gt; -&amp;gt; Enter the URL in the input box: &lt;code&gt;https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json&lt;/code&gt; and click OK.&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;Tools&lt;/code&gt; menu -&amp;gt; &lt;code&gt;Board: &#34;....&#34;&lt;/code&gt; -&amp;gt; &lt;code&gt;Boards Manager...&lt;/code&gt;, install the &lt;code&gt;esp32&lt;/code&gt; package by &lt;code&gt;Espressif Systems&lt;/code&gt; (not &lt;code&gt;Arduino ESP32 Boards&lt;/code&gt;), then press &lt;code&gt;Close&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE: The ESP32 version depends on which release of Battery-Emulator you are running!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;⚠️ Make sure to use a 2.x.x version if you are on a release &lt;strong&gt;older&lt;/strong&gt; than 6.0.0 (For instance ESP32 v2.0.11 when using Battery-Emulator v5.4.0)&lt;/li&gt; &#xA; &lt;li&gt;⚠️ Make sure to use a 3.0.x version if you are on a release &lt;strong&gt;newer&lt;/strong&gt; than 6.0.0 (For instance ESP32 v3.0.0 when using Battery-Emulator v6.0.0)&lt;/li&gt; &#xA; &lt;li&gt;⚠️ Make sure to use a 3.1.x version if you are on a release &lt;strong&gt;newer&lt;/strong&gt; than 8.0.0 (For instance ESP32 v3.1.0 when using Battery-Emulator v8.0.0)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/dalathegreat/Battery-Emulator/assets/26695010/6a2414b1-f2ca-4746-8e8d-9afd78bd9252&#34; alt=&#34;bild&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;The Arduino board should be set to &lt;code&gt;ESP32 Dev Module&lt;/code&gt; (under &lt;code&gt;Tools&lt;/code&gt; -&amp;gt; &lt;code&gt;Board&lt;/code&gt; -&amp;gt; &lt;code&gt;ESP32 Arduino&lt;/code&gt;) with the following settings: &lt;img src=&#34;https://github.com/Xinyuan-LilyGO/T-CAN485/raw/main/img/arduino_setting.png&#34; alt=&#34;alt text&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select which battery type you will use, along with other optional settings. This is done in the &lt;code&gt;USER_SETTINGS.h&lt;/code&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;Copy the &lt;code&gt;USER_SECRETS.TEMPLATE.h&lt;/code&gt; file to &lt;code&gt;USER_SECRETS.h&lt;/code&gt; and update connectivity settings inside this file.&lt;/li&gt; &#xA; &lt;li&gt;Press &lt;code&gt;Verify&lt;/code&gt; and &lt;code&gt;Upload&lt;/code&gt; to send the sketch to the board. NOTE: In some cases, the LilyGo must be powered through the main power connector instead of USB-C when performing the initial firmware upload. NOTE: On Mac, the following USB driver may need to be installed: &lt;a href=&#34;https://github.com/WCHSoftGroup/ch34xser_macos&#34;&gt;https://github.com/WCHSoftGroup/ch34xser_macos&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;NOTE: If you see garbled messages on the serial console, change the serial console to match the baud rate to the code, currently 115200.&lt;/p&gt; &#xA;&lt;p&gt;This video explains all the above mentioned steps: &lt;a href=&#34;https://youtu.be/_mH2AjnAjDk&#34;&gt;https://youtu.be/_mH2AjnAjDk&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Linux Development Environment Setup&lt;/h3&gt; &#xA;&lt;p&gt;In addition to the steps above, ESP32 requires a dependency for a Python module, pyserial install using the cli.&lt;br&gt; &lt;code&gt;python3 -m pip install pyserial&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re using Ubuntu , use apt to manage the dependencies of arduino:&lt;br&gt; pyserial install: &lt;code&gt;sudo apt install python3-serial&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Arduino AppImage must be set as executable after downloading to run correctly&lt;br&gt; example: &lt;code&gt;chmod 775 arduino-ide_2.3.3_Linux_64bit.AppImage&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies 📖&lt;/h2&gt; &#xA;&lt;p&gt;This code uses the following excellent libraries:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/adafruit/Adafruit_NeoPixel&#34;&gt;adafruit/Adafruit_NeoPixel&lt;/a&gt; LGPL-3.0 license&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ayushsharma82/ElegantOTA&#34;&gt;ayushsharma82/ElegantOTA&lt;/a&gt; AGPL-3.0 license&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bblanchon/ArduinoJson&#34;&gt;bblanchon/ArduinoJson&lt;/a&gt; MIT-License&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eModbus/eModbus&#34;&gt;eModbus/eModbus&lt;/a&gt; MIT-License&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/knolleary/pubsubclient&#34;&gt;knolleary/pubsubclient&lt;/a&gt; MIT-License&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mackelec/SerialDataLink&#34;&gt;mackelec/SerialDataLink&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mathieucarbou/AsyncTCPSock&#34;&gt;mathieucarbou/AsyncTCPsock&lt;/a&gt; LGPL-3.0 license&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mathieucarbou/ESPAsyncWebServer&#34;&gt;mathieucarbou/ESPAsyncWebServer&lt;/a&gt; LGPL-3.0 license&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/miwagner/ESP32-Arduino-CAN/&#34;&gt;miwagner/ESP32-Arduino-CAN&lt;/a&gt; MIT-License&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pierremolinaro/acan2515&#34;&gt;pierremolinaro/acan2515&lt;/a&gt; MIT-License&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pierremolinaro/acan2517FD&#34;&gt;pierremolinaro/acan2517FD&lt;/a&gt; MIT-License&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YiannisBourkelis/Uptime-Library&#34;&gt;YiannisBourkelis/Uptime-Library&lt;/a&gt; GPL-3.0 license&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It is also based on the information found in the following excellent repositories/websites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/pelle8/inverter_resources&#34;&gt;https://gitlab.com/pelle8/inverter_resources&lt;/a&gt; //new url&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/burra/byd_battery&#34;&gt;https://github.com/burra/byd_battery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flodorn/TeslaBMSV2&#34;&gt;https://github.com/flodorn/TeslaBMSV2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SunshadeCorp/can-service&#34;&gt;https://github.com/SunshadeCorp/can-service&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openvehicles/Open-Vehicle-Monitoring-System-3&#34;&gt;https://github.com/openvehicles/Open-Vehicle-Monitoring-System-3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dalathegreat/leaf_can_bus_messages&#34;&gt;https://github.com/dalathegreat/leaf_can_bus_messages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rand12345/solax_can_bus&#34;&gt;https://github.com/rand12345/solax_can_bus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tom-evnut/BMWI3BMS/&#34;&gt;https://github.com/Tom-evnut/BMWI3BMS/&lt;/a&gt; SMA-CAN&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FozzieUK/FoxESS-Canbus-Protocol&#34;&gt;https://github.com/FozzieUK/FoxESS-Canbus-Protocol&lt;/a&gt; FoxESS-CAN&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/maciek16c/hyundai-santa-fe-phev-battery&#34;&gt;https://github.com/maciek16c/hyundai-santa-fe-phev-battery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ljames28/Renault-Zoe-PH2-ZE50-Canbus-LBC-Information&#34;&gt;https://github.com/ljames28/Renault-Zoe-PH2-ZE50-Canbus-LBC-Information&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Renault Zoe CAN Matrix &lt;a href=&#34;https://docs.google.com/spreadsheets/u/0/d/1Qnk-yzzcPiMArO-QDzO4a8ptAS2Sa4HhVu441zBzlpM/edit?pli=1#gid=0&#34;&gt;https://docs.google.com/spreadsheets/u/0/d/1Qnk-yzzcPiMArO-QDzO4a8ptAS2Sa4HhVu441zBzlpM/edit?pli=1#gid=0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pylon hacking &lt;a href=&#34;https://www.eevblog.com/forum/programming/pylontech-sc0500-protocol-hacking/&#34;&gt;https://www.eevblog.com/forum/programming/pylontech-sc0500-protocol-hacking/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Like this project? 💖&lt;/h2&gt; &#xA;&lt;p&gt;Leave a ⭐ If you think this project is useful. Consider hopping onto my Patreon to encourage more open-source projects!&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.patreon.com/dala&#34;&gt; &lt;img src=&#34;https://c5.patreon.com/external/logo/become_a_patron_button@2x.png&#34; width=&#34;160&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>gem5/gem5</title>
    <updated>2025-01-19T01:37:42Z</updated>
    <id>tag:github.com,2025-01-19:/gem5/gem5</id>
    <link href="https://github.com/gem5/gem5" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The official repository for the gem5 computer-system architecture simulator.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The gem5 Simulator&lt;/h1&gt; &#xA;&lt;p&gt;This is the repository for the gem5 simulator. It contains the full source code for the simulator and all tests and regressions.&lt;/p&gt; &#xA;&lt;p&gt;The gem5 simulator is a modular platform for computer-system architecture research, encompassing system-level architecture as well as processor microarchitecture. It is primarily used to evaluate new hardware designs, system software changes, and compile-time and run-time system optimizations.&lt;/p&gt; &#xA;&lt;p&gt;The main website can be found at &lt;a href=&#34;http://www.gem5.org&#34;&gt;http://www.gem5.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Testing status&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: These regard tests run on the develop branch of gem5: &lt;a href=&#34;https://github.com/gem5/gem5/tree/develop&#34;&gt;https://github.com/gem5/gem5/tree/develop&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gem5/gem5/actions/workflows/daily-tests.yaml&#34;&gt;&lt;img src=&#34;https://github.com/gem5/gem5/actions/workflows/daily-tests.yaml/badge.svg?branch=develop&#34; alt=&#34;Daily Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gem5/gem5/actions/workflows/weekly-tests.yaml&#34;&gt;&lt;img src=&#34;https://github.com/gem5/gem5/actions/workflows/weekly-tests.yaml/badge.svg?branch=develop&#34; alt=&#34;Weekly Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gem5/gem5/actions/workflows/compiler-tests.yaml&#34;&gt;&lt;img src=&#34;https://github.com/gem5/gem5/actions/workflows/compiler-tests.yaml/badge.svg?branch=develop&#34; alt=&#34;Compiler Tests&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;A good starting point is &lt;a href=&#34;http://www.gem5.org/about&#34;&gt;http://www.gem5.org/about&lt;/a&gt;, and for more information about building the simulator and getting started please see &lt;a href=&#34;http://www.gem5.org/documentation&#34;&gt;http://www.gem5.org/documentation&lt;/a&gt; and &lt;a href=&#34;http://www.gem5.org/documentation/learning_gem5/introduction&#34;&gt;http://www.gem5.org/documentation/learning_gem5/introduction&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building gem5&lt;/h2&gt; &#xA;&lt;p&gt;To build gem5, you will need the following software: g++ or clang, Python (gem5 links in the Python interpreter), SCons, zlib, m4, and lastly protobuf if you want trace capture and playback support. Please see &lt;a href=&#34;http://www.gem5.org/documentation/general_docs/building&#34;&gt;http://www.gem5.org/documentation/general_docs/building&lt;/a&gt; for more details concerning the minimum versions of these tools.&lt;/p&gt; &#xA;&lt;p&gt;Once you have all dependencies resolved, execute &lt;code&gt;scons build/ALL/gem5.opt&lt;/code&gt; to build an optimized version of the gem5 binary (&lt;code&gt;gem5.opt&lt;/code&gt;) containing all gem5 ISAs. If you only wish to compile gem5 to include a single ISA, you can replace &lt;code&gt;ALL&lt;/code&gt; with the name of the ISA. Valid options include &lt;code&gt;ARM&lt;/code&gt;, &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;MIPS&lt;/code&gt;, &lt;code&gt;POWER&lt;/code&gt;, &lt;code&gt;RISCV&lt;/code&gt;, &lt;code&gt;SPARC&lt;/code&gt;, and &lt;code&gt;X86&lt;/code&gt; The complete list of options can be found in the build_opts directory.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://www.gem5.org/documentation/general_docs/building&#34;&gt;https://www.gem5.org/documentation/general_docs/building&lt;/a&gt; for more information on building gem5.&lt;/p&gt; &#xA;&lt;h2&gt;The Source Tree&lt;/h2&gt; &#xA;&lt;p&gt;The main source tree includes these subdirectories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;build_opts: pre-made default configurations for gem5&lt;/li&gt; &#xA; &lt;li&gt;build_tools: tools used internally by gem5&#39;s build process.&lt;/li&gt; &#xA; &lt;li&gt;configs: example simulation configuration scripts&lt;/li&gt; &#xA; &lt;li&gt;ext: less-common external packages needed to build gem5&lt;/li&gt; &#xA; &lt;li&gt;include: include files for use in other programs&lt;/li&gt; &#xA; &lt;li&gt;site_scons: modular components of the build system&lt;/li&gt; &#xA; &lt;li&gt;src: source code of the gem5 simulator. The C++ source, Python wrappers, and Python standard library are found in this directory.&lt;/li&gt; &#xA; &lt;li&gt;system: source for some optional system software for simulated systems&lt;/li&gt; &#xA; &lt;li&gt;tests: regression tests&lt;/li&gt; &#xA; &lt;li&gt;util: useful utility programs and files&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;gem5 Resources&lt;/h2&gt; &#xA;&lt;p&gt;To run full-system simulations, you may need compiled system firmware, kernel binaries and one or more disk images, depending on gem5&#39;s configuration and what type of workload you&#39;re trying to run. Many of these resources can be obtained from &lt;a href=&#34;https://resources.gem5.org&#34;&gt;https://resources.gem5.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;More information on gem5 Resources can be found at &lt;a href=&#34;https://www.gem5.org/documentation/general_docs/gem5_resources/&#34;&gt;https://www.gem5.org/documentation/general_docs/gem5_resources/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Help, Reporting bugs, and Requesting Features&lt;/h2&gt; &#xA;&lt;p&gt;We provide a variety of channels for users and developers to get help, report bugs, requests features, or engage in community discussions. Below are a few of the most common we recommend using.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;GitHub Discussions&lt;/strong&gt;: A GitHub Discussions page. This can be used to start discussions or ask questions. Available at &lt;a href=&#34;https://github.com/orgs/gem5/discussions&#34;&gt;https://github.com/orgs/gem5/discussions&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;GitHub Issues&lt;/strong&gt;: A GitHub Issues page for reporting bugs or requesting features. Available at &lt;a href=&#34;https://github.com/gem5/gem5/issues&#34;&gt;https://github.com/gem5/gem5/issues&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Jira Issue Tracker&lt;/strong&gt;: A Jira Issue Tracker for reporting bugs or requesting features. Available at &lt;a href=&#34;https://gem5.atlassian.net/&#34;&gt;https://gem5.atlassian.net/&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Slack&lt;/strong&gt;: A Slack server with a variety of channels for the gem5 community to engage in a variety of discussions. Please visit &lt;a href=&#34;https://www.gem5.org/join-slack&#34;&gt;https://www.gem5.org/join-slack&lt;/a&gt; to join.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;mailto:gem5-users@gem5.org&#34;&gt;gem5-users@gem5.org&lt;/a&gt;&lt;/strong&gt;: A mailing list for users of gem5 to ask questions or start discussions. To join the mailing list please visit &lt;a href=&#34;https://www.gem5.org/mailing_lists&#34;&gt;https://www.gem5.org/mailing_lists&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;mailto:gem5-dev@gem5.org&#34;&gt;gem5-dev@gem5.org&lt;/a&gt;&lt;/strong&gt;: A mailing list for developers of gem5 to ask questions or start discussions. To join the mailing list please visit &lt;a href=&#34;https://www.gem5.org/mailing_lists&#34;&gt;https://www.gem5.org/mailing_lists&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing to gem5&lt;/h2&gt; &#xA;&lt;p&gt;We hope you enjoy using gem5. When appropriate we advise sharing your contributions to the project. &lt;a href=&#34;https://www.gem5.org/contributing&#34;&gt;https://www.gem5.org/contributing&lt;/a&gt; can help you get started. Additional information can be found in the CONTRIBUTING.md file.&lt;/p&gt;</summary>
  </entry>
</feed>