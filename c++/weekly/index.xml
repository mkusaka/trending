<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-03T01:39:01Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>WinMerge/winmerge</title>
    <updated>2024-11-03T01:39:01Z</updated>
    <id>tag:github.com,2024-11-03:/WinMerge/winmerge</id>
    <link href="https://github.com/WinMerge/winmerge" rel="alternate"></link>
    <summary type="html">&lt;p&gt;WinMerge is an Open Source differencing and merging tool for Windows. WinMerge can compare both folders and files, presenting differences in a visual text format that is easy to understand and handle.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/WinMerge/winmerge&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/WinMerge/winmerge/master/Docs/Logos/WinMerge_logo_24bit.png&#34; alt=&#34;logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;WinMerge&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/sdottaka/winmerge/build/artifacts&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/h3v3ap1kswi1tyyt?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/WinMerge/winmerge/actions&#34;&gt;&lt;img src=&#34;https://github.com/WinMerge/winmerge/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sourceforge.net/projects/winmerge/files/&#34;&gt;&lt;img src=&#34;https://img.shields.io/sourceforge/dt/winmerge&#34; alt=&#34;sourceforge.net downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/WinMerge/winmerge/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/winmerge/winmerge/total.svg?sanitize=true&#34; alt=&#34;Github Releases All&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/WinMerge/winmerge/raw/master/Translations/TranslationsStatus.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/translations-37-green&#34; alt=&#34;Translation status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://winmerge.org/&#34;&gt;WinMerge&lt;/a&gt; is an open source differencing and merging tool for Windows. WinMerge can compare files and folders, presenting differences in a visual format that is easy to understand and manipulate.&lt;/p&gt; &#xA;&lt;h2&gt;Build Requirements&lt;/h2&gt; &#xA;&lt;h3&gt;Visual Studio 2017&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Community&lt;/em&gt;, &lt;em&gt;Professional&lt;/em&gt; or &lt;em&gt;Enterprise&lt;/em&gt; Edition&lt;/li&gt; &#xA; &lt;li&gt;VC++ 2017 latest v141 tools&lt;/li&gt; &#xA; &lt;li&gt;Visual C++ compilers and libraries for (ARM, ARM64)&lt;/li&gt; &#xA; &lt;li&gt;Windows XP support for C++&lt;/li&gt; &#xA; &lt;li&gt;Visual C++ MFC for (x86 and x64, ARM, ARM64)&lt;/li&gt; &#xA; &lt;li&gt;Visual C++ ATL for (x86 and x64, ARM, ARM64)&lt;/li&gt; &#xA; &lt;li&gt;Windows 10 SDK&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Visual Studio 2019&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Community&lt;/em&gt;, &lt;em&gt;Professional&lt;/em&gt; or &lt;em&gt;Enterprise&lt;/em&gt; Edition&lt;/li&gt; &#xA; &lt;li&gt;MSVC v142 - VS 2019 C++ (x64/x86, ARM, ARM64) build tools (Latest)&lt;/li&gt; &#xA; &lt;li&gt;C++ MFC for latest v142 build tools (x86 &amp;amp; x64, ARM, ARM64)&lt;/li&gt; &#xA; &lt;li&gt;C++ ATL for latest v142 build tools (x86 &amp;amp; x64, ARM, ARM64)&lt;/li&gt; &#xA; &lt;li&gt;Windows 10 SDK&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Visual Studio 2022&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Community&lt;/em&gt;, &lt;em&gt;Professional&lt;/em&gt; or &lt;em&gt;Enterprise&lt;/em&gt; Edition&lt;/li&gt; &#xA; &lt;li&gt;MSVC v143 Buildtools (x64/x86, ARM, ARM64)&lt;/li&gt; &#xA; &lt;li&gt;C++ MFC for latest v143 build tools (x64/x86, ARM, ARM64)&lt;/li&gt; &#xA; &lt;li&gt;C++ ATL for latest v143 build tools (x64/x86, ARM, ARM64)&lt;/li&gt; &#xA; &lt;li&gt;Windows 10 SDK&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Other utilities/programs&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;git&lt;/li&gt; &#xA; &lt;li&gt;Inno Setup 5.x and 6.x&lt;/li&gt; &#xA; &lt;li&gt;7-Zip&lt;/li&gt; &#xA; &lt;li&gt;Python&lt;/li&gt; &#xA; &lt;li&gt;Pandoc&lt;/li&gt; &#xA; &lt;li&gt;MSYS2 and MSYS2 packages (po4a and diffutils)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to Build&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recurse-submodules https://github.com/WinMerge/winmerge&#xA;cd winmerge&#xA;DownloadDeps.cmd&#xA;BuildAll.vs2022.cmd [x86|x64|ARM|ARM64] or BuildAll.vs2019.cmd [x86|x64|ARM|ARM64] or BuildAll.vs2017.cmd [x86|x64|ARM|ARM64]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Folder Structure&lt;/h2&gt; &#xA;&lt;p&gt;Source code for the WinMerge program, its plugins, filters, setup program, and various utilities are all kept in the subfolders listed below.&lt;/p&gt; &#xA;&lt;p&gt;The changelog file is in &lt;code&gt;Docs/Users/ChangeLog.md&lt;/code&gt; and it documents both user-visible and significant changes.&lt;/p&gt; &#xA;&lt;p&gt;Subfolders include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Docs&lt;/code&gt;&lt;br&gt; Both user and developer documentation, in different subfolders.&lt;br&gt; Can be browsed by opening &lt;code&gt;index.html&lt;/code&gt; in the &lt;code&gt;Docs&lt;/code&gt; folder.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Src&lt;/code&gt;&lt;br&gt; Source code to the WinMerge program itself.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Plugins&lt;/code&gt;&lt;br&gt; Source code and binaries for WinMerge runtime plugin dlls &amp;amp; scripts.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Filters&lt;/code&gt;&lt;br&gt; WinMerge file filters which are shipped with the distribution.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;ArchiveSupport&lt;/code&gt;&lt;br&gt; Source code for the Merge7z dlls, which connect WinMerge with 7-Zip.&lt;br&gt; Also this folder is required to compile &lt;code&gt;WinMergeU.exe&lt;/code&gt;.&lt;br&gt; There is also a standalone installer for Merge7z dlls.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Externals&lt;/code&gt;&lt;br&gt; This folder contains several libraries whose sources come from outside WinMerge project.&lt;br&gt; They are stored here for convenience for building and possibly needed small changes for WinMerge.&lt;br&gt; Libraries include an XML parser and a regular expression parser.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Installer&lt;/code&gt;&lt;br&gt; Installer for WinMerge.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Tools&lt;/code&gt;&lt;br&gt; Various utilities used by WinMerge developers; see readme files in each.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;ShellExtension&lt;/code&gt;&lt;br&gt; Windows Shell (Explorer) integration.&lt;br&gt; Adds menuitems to Explorer context menu for comparing files and folders.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Testing&lt;/code&gt;&lt;br&gt; A suite of test diff files and a script to run them and report the results.&lt;br&gt; This folder also has a &lt;code&gt;Google Test&lt;/code&gt; subfolder containing unit tests made with &lt;a href=&#34;https://github.com/google/googletest&#34;&gt;Google Test Framework&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Build&lt;/code&gt;&lt;br&gt; This folder gets created by the compiler when WinMerge is compiled.&lt;br&gt; It contains compiled executables, libraries, the user manual, etc.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BuildTmp&lt;/code&gt;&lt;br&gt; This folder gets created by the compiler when WinMerge is compiled.&lt;br&gt; It contains temporary files created during the compilation and can be safely deleted.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to CONTRIBUTE&lt;/h2&gt; &#xA;&lt;p&gt;You will need to fork the main Winmerge repository and create a branch on that fork&lt;/p&gt; &#xA;&lt;p&gt;Your new code needs to follow &lt;a href=&#34;https://en.wikipedia.org/wiki/Indentation_style#Allman_style&#34;&gt;Eric Allman indentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;When your code is ready for a review/merge create a pull request explaining the changes that you made&lt;/p&gt; &#xA;&lt;h2&gt;How to RUN and DEBUG&lt;/h2&gt; &#xA;&lt;p&gt;The winmerge folder has different Visual Studio solution files (.sln) that you can use to build, debug and run while you test your changes&lt;/p&gt; &#xA;&lt;p&gt;If you have run any of the BuildAll scripts you can run WinMerge from path &lt;code&gt;\Build\X64\Release\WinMergeU.exe&lt;/code&gt; if your architecture is not &lt;code&gt;X64&lt;/code&gt; look for any of the other folders generated after the build has finished&lt;/p&gt; &#xA;&lt;p&gt;Another way to Debug, run the exe from previous step, then from VS attach to the running process.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ml-explore/mlx</title>
    <updated>2024-11-03T01:39:01Z</updated>
    <id>tag:github.com,2024-11-03:/ml-explore/mlx</id>
    <link href="https://github.com/ml-explore/mlx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MLX: An array framework for Apple silicon&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MLX&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-explore/mlx/main/#quickstart&#34;&gt;&lt;strong&gt;Quickstart&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ml-explore/mlx/main/#installation&#34;&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://ml-explore.github.io/mlx/build/html/index.html&#34;&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ml-explore/mlx/main/#examples&#34;&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/ml-explore/mlx&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/ml-explore/mlx.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;MLX is an array framework for machine learning on Apple silicon, brought to you by Apple machine learning research.&lt;/p&gt; &#xA;&lt;p&gt;Some key features of MLX include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Familiar APIs&lt;/strong&gt;: MLX has a Python API that closely follows NumPy. MLX also has fully featured C++, &lt;a href=&#34;https://github.com/ml-explore/mlx-c&#34;&gt;C&lt;/a&gt;, and &lt;a href=&#34;https://github.com/ml-explore/mlx-swift/&#34;&gt;Swift&lt;/a&gt; APIs, which closely mirror the Python API. MLX has higher-level packages like &lt;code&gt;mlx.nn&lt;/code&gt; and &lt;code&gt;mlx.optimizers&lt;/code&gt; with APIs that closely follow PyTorch to simplify building more complex models.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Composable function transformations&lt;/strong&gt;: MLX supports composable function transformations for automatic differentiation, automatic vectorization, and computation graph optimization.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Lazy computation&lt;/strong&gt;: Computations in MLX are lazy. Arrays are only materialized when needed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Dynamic graph construction&lt;/strong&gt;: Computation graphs in MLX are constructed dynamically. Changing the shapes of function arguments does not trigger slow compilations, and debugging is simple and intuitive.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Multi-device&lt;/strong&gt;: Operations can run on any of the supported devices (currently the CPU and the GPU).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unified memory&lt;/strong&gt;: A notable difference from MLX and other frameworks is the &lt;em&gt;unified memory model&lt;/em&gt;. Arrays in MLX live in shared memory. Operations on MLX arrays can be performed on any of the supported device types without transferring data.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;MLX is designed by machine learning researchers for machine learning researchers. The framework is intended to be user-friendly, but still efficient to train and deploy models. The design of the framework itself is also conceptually simple. We intend to make it easy for researchers to extend and improve MLX with the goal of quickly exploring new ideas.&lt;/p&gt; &#xA;&lt;p&gt;The design of MLX is inspired by frameworks like &lt;a href=&#34;https://numpy.org/doc/stable/index.html&#34;&gt;NumPy&lt;/a&gt;, &lt;a href=&#34;https://pytorch.org/&#34;&gt;PyTorch&lt;/a&gt;, &lt;a href=&#34;https://github.com/google/jax&#34;&gt;Jax&lt;/a&gt;, and &lt;a href=&#34;https://arrayfire.org/&#34;&gt;ArrayFire&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/ml-explore/mlx-examples&#34;&gt;MLX examples repo&lt;/a&gt; has a variety of examples, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ml-explore/mlx-examples/tree/main/transformer_lm&#34;&gt;Transformer language model&lt;/a&gt; training.&lt;/li&gt; &#xA; &lt;li&gt;Large-scale text generation with &lt;a href=&#34;https://github.com/ml-explore/mlx-examples/tree/main/llms/llama&#34;&gt;LLaMA&lt;/a&gt; and finetuning with &lt;a href=&#34;https://github.com/ml-explore/mlx-examples/tree/main/lora&#34;&gt;LoRA&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Generating images with &lt;a href=&#34;https://github.com/ml-explore/mlx-examples/tree/main/stable_diffusion&#34;&gt;Stable Diffusion&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Speech recognition with &lt;a href=&#34;https://github.com/ml-explore/mlx-examples/tree/main/whisper&#34;&gt;OpenAI&#39;s Whisper&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://ml-explore.github.io/mlx/build/html/usage/quick_start.html&#34;&gt;quick start guide&lt;/a&gt; in the documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;MLX is available on &lt;a href=&#34;https://pypi.org/project/mlx/&#34;&gt;PyPI&lt;/a&gt;. To install the Python API, run:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;With &lt;code&gt;pip&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install mlx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;With &lt;code&gt;conda&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;conda install -c conda-forge mlx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Checkout the &lt;a href=&#34;https://ml-explore.github.io/mlx/build/html/install.html#&#34;&gt;documentation&lt;/a&gt; for more information on building the C++ and Python APIs from source.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://github.com/ml-explore/mlx/tree/main/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt; for more information on contributing to MLX. See the &lt;a href=&#34;https://ml-explore.github.io/mlx/build/html/install.html&#34;&gt;docs&lt;/a&gt; for more information on building from source, and running tests.&lt;/p&gt; &#xA;&lt;p&gt;We are grateful for all of &lt;a href=&#34;https://github.com/ml-explore/mlx/tree/main/ACKNOWLEDGMENTS.md#Individual-Contributors&#34;&gt;our contributors&lt;/a&gt;. If you contribute to MLX and wish to be acknowledged, please add your name to the list in your pull request.&lt;/p&gt; &#xA;&lt;h2&gt;Citing MLX&lt;/h2&gt; &#xA;&lt;p&gt;The MLX software suite was initially developed with equal contribution by Awni Hannun, Jagrit Digani, Angelos Katharopoulos, and Ronan Collobert. If you find MLX useful in your research and wish to cite it, please use the following BibTex entry:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@software{mlx2023,&#xA;  author = {Awni Hannun and Jagrit Digani and Angelos Katharopoulos and Ronan Collobert},&#xA;  title = {{MLX}: Efficient and flexible machine learning on Apple silicon},&#xA;  url = {https://github.com/ml-explore},&#xA;  version = {0.0},&#xA;  year = {2023},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>dogecoin/dogecoin</title>
    <updated>2024-11-03T01:39:01Z</updated>
    <id>tag:github.com,2024-11-03:/dogecoin/dogecoin</id>
    <link href="https://github.com/dogecoin/dogecoin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;very currency&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/dogecoin/dogecoin/master/share/pixmaps/dogecoin256.svg?sanitize=true&#34; alt=&#34;Dogecoin&#34; width=&#34;256&#34;&gt; &lt;br&gt;&lt;br&gt; Dogecoin Core [DOGE, Ð] &lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANT: Starting August 2024, the &lt;code&gt;master&lt;/code&gt; branch has become the primary integration branch and has become unstable. Please check out a tagged version before compiling production binaries.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;For internationalized documentation, see the index at &lt;a href=&#34;https://raw.githubusercontent.com/dogecoin/dogecoin/master/doc/intl/README.md&#34;&gt;doc/intl&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Dogecoin is a community-driven cryptocurrency that was inspired by a Shiba Inu meme. The Dogecoin Core software allows anyone to operate a node in the Dogecoin blockchain networks and uses the Scrypt hashing method for Proof of Work. It is adapted from Bitcoin Core and other cryptocurrencies.&lt;/p&gt; &#xA;&lt;p&gt;For information about the default fees used on the Dogecoin network, please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/dogecoin/dogecoin/master/doc/fee-recommendation.md&#34;&gt;fee recommendation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage 💻&lt;/h2&gt; &#xA;&lt;p&gt;To start your journey with Dogecoin Core, see the &lt;a href=&#34;https://raw.githubusercontent.com/dogecoin/dogecoin/master/INSTALL.md&#34;&gt;installation guide&lt;/a&gt; and the &lt;a href=&#34;https://raw.githubusercontent.com/dogecoin/dogecoin/master/doc/getting-started.md&#34;&gt;getting started&lt;/a&gt; tutorial.&lt;/p&gt; &#xA;&lt;p&gt;The JSON-RPC API provided by Dogecoin Core is self-documenting and can be browsed with &lt;code&gt;dogecoin-cli help&lt;/code&gt;, while detailed information for each command can be viewed with &lt;code&gt;dogecoin-cli help &amp;lt;command&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Such ports&lt;/h3&gt; &#xA;&lt;p&gt;Dogecoin Core by default uses port &lt;code&gt;22556&lt;/code&gt; for peer-to-peer communication that is needed to synchronize the &#34;mainnet&#34; blockchain and stay informed of new transactions and blocks. Additionally, a JSONRPC port can be opened, which defaults to port &lt;code&gt;22555&lt;/code&gt; for mainnet nodes. It is strongly recommended to not expose RPC ports to the public internet.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Function&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;mainnet&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;testnet&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;regtest&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;P2P&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;22556&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;44556&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;18444&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;RPC&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;22555&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;44555&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;18332&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Ongoing development - Moon plan 🌒&lt;/h2&gt; &#xA;&lt;p&gt;Dogecoin Core is an open source and community driven software. The development process is open and publicly visible; anyone can see, discuss and work on the software.&lt;/p&gt; &#xA;&lt;p&gt;Main development resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dogecoin/dogecoin/projects&#34;&gt;GitHub Projects&lt;/a&gt; is used to follow planned and in-progress work for upcoming releases.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dogecoin/dogecoin/discussions&#34;&gt;GitHub Discussions&lt;/a&gt; is used to discuss features, planned and unplanned, related to both the development of the Dogecoin Core software, the underlying protocols and the DOGE asset.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version strategy&lt;/h3&gt; &#xA;&lt;p&gt;Version numbers are following &lt;code&gt;major.minor.patch&lt;/code&gt; semantics.&lt;/p&gt; &#xA;&lt;h3&gt;Branches&lt;/h3&gt; &#xA;&lt;p&gt;There are 4 types of branches in this repository:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;master:&lt;/strong&gt; Unstable, contains the latest code under development.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;maintenance:&lt;/strong&gt; Stable, contains the latest version of previous releases, which are still under active maintenance. Format: &lt;code&gt;&amp;lt;version&amp;gt;-maint&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;development:&lt;/strong&gt; Unstable, contains new code for upcoming releases. Format: &lt;code&gt;&amp;lt;version&amp;gt;-dev&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;archive:&lt;/strong&gt; Stable, immutable branches for old versions that no longer change because they are no longer maintained.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Submit your pull requests against &lt;code&gt;master&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Maintenance branches are exclusively mutable by release. When a release is&lt;/em&gt; &lt;em&gt;planned, a development branch will be created and commits from master will&lt;/em&gt; &lt;em&gt;be cherry-picked into these by maintainers.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing 🤝&lt;/h2&gt; &#xA;&lt;p&gt;If you find a bug or experience issues with this software, please report it using the &lt;a href=&#34;https://github.com/dogecoin/dogecoin/issues/new?assignees=&amp;amp;labels=bug&amp;amp;template=bug_report.md&amp;amp;title=%5Bbug%5D+&#34;&gt;issue system&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/dogecoin/dogecoin/master/CONTRIBUTING.md&#34;&gt;the contribution guide&lt;/a&gt; to see how you can participate in the development of Dogecoin Core. There are often &lt;a href=&#34;https://github.com/dogecoin/dogecoin/labels/help%20wanted&#34;&gt;topics seeking help&lt;/a&gt; where your contributions will have high impact and get very appreciation. wow.&lt;/p&gt; &#xA;&lt;h2&gt;Very Much Frequently Asked Questions ❓&lt;/h2&gt; &#xA;&lt;p&gt;Do you have a question regarding Dogecoin? An answer is perhaps already in the &lt;a href=&#34;https://raw.githubusercontent.com/dogecoin/dogecoin/master/doc/FAQ.md&#34;&gt;FAQ&lt;/a&gt; or the &lt;a href=&#34;https://github.com/dogecoin/dogecoin/discussions/categories/q-a&#34;&gt;Q&amp;amp;A section&lt;/a&gt; of the discussion board!&lt;/p&gt; &#xA;&lt;h2&gt;License - Much license ⚖️&lt;/h2&gt; &#xA;&lt;p&gt;Dogecoin Core is released under the terms of the MIT license. See &lt;a href=&#34;https://raw.githubusercontent.com/dogecoin/dogecoin/master/COPYING&#34;&gt;COPYING&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>