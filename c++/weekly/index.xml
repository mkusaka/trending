<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-17T02:00:53Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Akebi-Group/Akebi-GC</title>
    <updated>2022-07-17T02:00:53Z</updated>
    <id>tag:github.com,2022-07-17:/Akebi-Group/Akebi-GC</id>
    <link href="https://github.com/Akebi-Group/Akebi-GC" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The great software for some game that exploiting anime girls (and boys).&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Akebi-Group/Akebi-GC/master/#&#34;&gt;&lt;img width=&#34;500&#34; height=&#34;500&#34; src=&#34;https://user-images.githubusercontent.com/67109235/176832758-7089defd-0edd-4c7a-bd69-60eeef99dca7.png&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Akebi-Group/Akebi-GC/master/#&#34;&gt;&lt;img width=&#34;690&#34; height=&#34;133&#34; src=&#34;https://user-images.githubusercontent.com/67109235/176832764-471a6bd5-405f-43dd-97ec-c11997880993.png&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Akebi-Group/Akebi-GC/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/Akebi-Group/Akebi-GC?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Akebi-Group/Akebi-GC/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/Akebi-Group/Akebi-GC/total.svg?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Akebi-Group/Akebi-GC/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/Akebi-Group/Akebi-GC?style=for-the-badge&amp;amp;color=red&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/MmV8hNZB9S&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/440536354544156683?label=Discord&amp;amp;logo=discord&amp;amp;style=for-the-badge&amp;amp;color=blueviolet&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Getting Started&lt;/h1&gt; &#xA;&lt;h2&gt;Building from source&lt;/h2&gt; &#xA;&lt;p&gt;It is recommended to use &lt;a href=&#34;https://visualstudio.microsoft.com/&#34;&gt;Visual Studio 2022.&lt;/a&gt; As well as setting up &lt;strong&gt;&lt;code&gt;cheat-library&lt;/code&gt;&lt;/strong&gt; as startup project. &lt;strong&gt;The following is a recommended procedure, but others may be used.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone repository with &lt;code&gt;git clone --recurse-submodules https://github.com/Akebi-Group/Akebi-GC.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;Akebi-GC/akebi-gc.sln&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build solution &lt;code&gt;akebi-gc.sln&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Release&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Head over to the releases page&lt;/li&gt; &#xA; &lt;li&gt;Download the latest binaries&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/vs/17/release/vc_redist.x64.exe&#34;&gt;Visual C++ Redistributable packages for Visual Studio 2015-2022&lt;/a&gt; (x64)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/vs/17/release/vc_redist.x86.exe&#34;&gt;Visual C++ Redistributable packages for Visual Studio 2015-2022&lt;/a&gt; (x86)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;(1-2 are optional if you didn&#39;t build from source)&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;code&gt;/bin&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open Compiled version (debug, release)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure that &lt;code&gt;CLibrary.dll&lt;/code&gt; is in the same folder that &lt;code&gt;injector.exe&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;injector.exe&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;After the login page appeared, press F1 to open Akebi GUI.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Features&lt;/h1&gt; &#xA;&lt;h4&gt;General&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Protection Bypass&lt;/li&gt; &#xA; &lt;li&gt;In-Game GUI&lt;/li&gt; &#xA; &lt;li&gt;Hotkeys&lt;/li&gt; &#xA; &lt;li&gt;Notifications&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Player&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Invincible&lt;/li&gt; &#xA; &lt;li&gt;Attack Modifier&lt;/li&gt; &#xA; &lt;li&gt;No Cooldown Skill/Ultimate/Sprint&lt;/li&gt; &#xA; &lt;li&gt;Unlimited Stamina&lt;/li&gt; &#xA; &lt;li&gt;No Clip&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;World&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Auto Seelie&lt;/li&gt; &#xA; &lt;li&gt;Vacuum Loot&lt;/li&gt; &#xA; &lt;li&gt;Dumb Enemies&lt;/li&gt; &#xA; &lt;li&gt;Auto Destroy Objects&lt;/li&gt; &#xA; &lt;li&gt;Auto Loot&lt;/li&gt; &#xA; &lt;li&gt;Pickup Range&lt;/li&gt; &#xA; &lt;li&gt;Auto Talk&lt;/li&gt; &#xA; &lt;li&gt;Auto Tree Farm&lt;/li&gt; &#xA; &lt;li&gt;Auto Cook&lt;/li&gt; &#xA; &lt;li&gt;Fake Time&lt;/li&gt; &#xA; &lt;li&gt;Auto Fish&lt;/li&gt; &#xA; &lt;li&gt;Kill Aura&lt;/li&gt; &#xA; &lt;li&gt;Mob Vacuum&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Teleport&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chest/Oculi Teleport (Teleports to nearest)&lt;/li&gt; &#xA; &lt;li&gt;Map Teleport (Teleport to mark on map)&lt;/li&gt; &#xA; &lt;li&gt;Custom Teleport (Teleport through list)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Visuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ESP&lt;/li&gt; &#xA; &lt;li&gt;Interactive Map&lt;/li&gt; &#xA; &lt;li&gt;Elemental Sight&lt;/li&gt; &#xA; &lt;li&gt;No Fog&lt;/li&gt; &#xA; &lt;li&gt;FPS Unlock&lt;/li&gt; &#xA; &lt;li&gt;Camera Zoom&lt;/li&gt; &#xA; &lt;li&gt;Chest Indicator&lt;/li&gt; &#xA; &lt;li&gt;Hide UI&lt;/li&gt; &#xA; &lt;li&gt;In-game Embedded Browser&lt;/li&gt; &#xA; &lt;li&gt;Enable Peaking&lt;/li&gt; &#xA; &lt;li&gt;Profile Changer&lt;/li&gt; &#xA; &lt;li&gt;Free Camera&lt;/li&gt; &#xA; &lt;li&gt;Texture Changer&lt;/li&gt; &#xA; &lt;li&gt;Paimon Follow&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Debugging&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Entities Manager&lt;/li&gt; &#xA; &lt;li&gt;Position Info&lt;/li&gt; &#xA; &lt;li&gt;FPS Graph&lt;/li&gt; &#xA; &lt;li&gt;Packet Sniffer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Demo&lt;/h1&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Map Teleportation&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/CallowBlack/gif-demos/raw/main/genshin-cheat/map-teleport-demo.gif&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Noclip&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/CallowBlack/gif-demos/raw/main/genshin-cheat/noclip-demo.gif&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;TP to Oculi&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/CallowBlack/gif-demos/raw/main/genshin-cheat/oculi-teleport-demo.gif&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;TP to Chests&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/CallowBlack/gif-demos/raw/main/genshin-cheat/chest-teleport-demo.gif&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Rapid Fire&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/CallowBlack/gif-demos/raw/main/genshin-cheat/rapid-fire-demo.gif&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Auto Talk&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/CallowBlack/gif-demos/raw/main/genshin-cheat/auto-talk-demo.gif&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Bugs&lt;/h1&gt; Welcome to the short explanation for bug reporting &#xA;&lt;ol&gt; &#xA; &lt;li&gt;You Found a bug.&lt;/li&gt; &#xA; &lt;li&gt;write down what happened, as well as your first thoughts on what you think caused it.&lt;/li&gt; &#xA; &lt;li&gt;can it be reproduced? Yes or no. If yes: Explain in as much clear as possible. i.e what happens when the bug occurs and why it occurs.&lt;/li&gt; &#xA; &lt;li&gt;Tell us which version you are using. copy the &lt;code&gt;SHA&lt;/code&gt;/ Version Number of the latest commit when you built the mod. For example: &lt;code&gt;bd17a00ec388f3b93624280cde9e1c66e740edf9&lt;/code&gt; / Release 0.7&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Bug reporting template&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Ex.&lt;/h3&gt; &#xA;&lt;p&gt;I found a bug in the feature &lt;code&gt;enemy vacuum&lt;/code&gt;.&lt;br&gt; I think it&#39;s caused by the filter functions that are defined in &lt;code&gt;someFeature.cpp&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Date Occured: 5/3/2022  &#xA;Is it reproducible: Occasionally&#xA;Latest Commit used: bd17a00ec388f3b93624280cde9e1c66e740edf9&#xA;Release Version: 0.7  &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Contributing&lt;/h1&gt; &#xA;&lt;h2&gt;Adding a feature&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the Project&lt;/li&gt; &#xA; &lt;li&gt;Create your Feature Branch (&lt;code&gt;git checkout -b feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit your Changes (&lt;code&gt;git commit -m &#39;Add some AmazingFeature&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the Branch (&lt;code&gt;git push origin feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Open a Pull Request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Suggestions&lt;/h2&gt; &#xA;&lt;p&gt;Open an issue with the title of the suggestion you want to make. In the description, make sure it is descriptive enough so our devs can understand what you want and how you want it.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>TheCherno/Hazel</title>
    <updated>2022-07-17T02:00:53Z</updated>
    <id>tag:github.com,2022-07-17:/TheCherno/Hazel</id>
    <link href="https://github.com/TheCherno/Hazel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hazel Engine&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hazel &lt;a href=&#34;https://github.com/TheCherno/Hazel/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/TheCherno/Hazel.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TheCherno/Hazel/master/Resources/Branding/Hazel_Logo_Text_Light_Square.png?raw=true&#34; alt=&#34;Hazel&#34; title=&#34;Hazel&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Hazel is primarily an early-stage interactive application and rendering engine for Windows. Currently not much is implemented, however (almost) everything inside this repository is being created within YouTube videos, found at &lt;a href=&#34;https://thecherno.com/engine&#34;&gt;thecherno.com/engine&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Visual Studio 2017 or 2019 is recommended, Hazel is officially untested on other development environments whilst we focus on a Windows build.&lt;/p&gt; &#xA;&lt;p&gt;&lt;ins&gt;&lt;strong&gt;1. Downloading the repository:&lt;/strong&gt;&lt;/ins&gt;&lt;/p&gt; &#xA;&lt;p&gt;Start by cloning the repository with &lt;code&gt;git clone --recursive https://github.com/TheCherno/Hazel&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If the repository was cloned non-recursively previously, use &lt;code&gt;git submodule update --init&lt;/code&gt; to clone the necessary submodules.&lt;/p&gt; &#xA;&lt;p&gt;&lt;ins&gt;&lt;strong&gt;2. Configuring the dependencies:&lt;/strong&gt;&lt;/ins&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run the &lt;a href=&#34;https://github.com/TheCherno/Hazel/raw/master/scripts/Setup.bat&#34;&gt;Setup.bat&lt;/a&gt; file found in &lt;code&gt;scripts&lt;/code&gt; folder. This will download the required prerequisites for the project if they are not present yet.&lt;/li&gt; &#xA; &lt;li&gt;One prerequisite is the Vulkan SDK. If it is not installed, the script will execute the &lt;code&gt;VulkanSDK.exe&lt;/code&gt; file, and will prompt the user to install the SDK.&lt;/li&gt; &#xA; &lt;li&gt;After installation, run the &lt;a href=&#34;https://github.com/TheCherno/Hazel/raw/master/scripts/Setup.bat&#34;&gt;Setup.bat&lt;/a&gt; file again. If the Vulkan SDK is installed properly, it will then download the Vulkan SDK Debug libraries. (This may take a longer amount of time)&lt;/li&gt; &#xA; &lt;li&gt;After downloading and unzipping the files, the &lt;a href=&#34;https://github.com/TheCherno/Hazel/raw/master/scripts/Win-GenProjects.bat&#34;&gt;Win-GenProjects.bat&lt;/a&gt; script file will get executed automatically, which will then generate a Visual Studio solution file for user&#39;s usage.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If changes are made, or if you want to regenerate project files, rerun the &lt;a href=&#34;https://github.com/TheCherno/Hazel/raw/master/scripts/Win-GenProjects.bat&#34;&gt;Win-GenProjects.bat&lt;/a&gt; script file found in &lt;code&gt;scripts&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;The Plan&lt;/h2&gt; &#xA;&lt;p&gt;The plan for Hazel is two-fold: to create a powerful 3D engine, but also to serve as an education tool for teaching game engine design and architecture. Because of this the development inside this repository is rather slow, since everything has to be taught and implemented on-camera. There is a much more advanced version of the engine in a private repository called &lt;code&gt;Hazel-dev&lt;/code&gt;, accessible to supporters on &lt;a href=&#34;https://patreon.com/thecherno&#34;&gt;Patreon&lt;/a&gt;. The plan for this project is to mostly take already implemented code from the &lt;code&gt;Hazel-dev&lt;/code&gt; repository and integrate it into this one, done within videos and supported by explanations.&lt;/p&gt; &#xA;&lt;h3&gt;Main features to come:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fast 2D rendering (UI, particles, sprites, etc.)&lt;/li&gt; &#xA; &lt;li&gt;High-fidelity Physically-Based 3D rendering (this will be expanded later, 2D to come first)&lt;/li&gt; &#xA; &lt;li&gt;Support for Mac, Linux, Android and iOS &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Native rendering API support (DirectX, Vulkan, Metal)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Fully featured viewer and editor applications&lt;/li&gt; &#xA; &lt;li&gt;Fully scripted interaction and behavior&lt;/li&gt; &#xA; &lt;li&gt;Integrated 3rd party 2D and 3D physics engine&lt;/li&gt; &#xA; &lt;li&gt;Procedural terrain and world generation&lt;/li&gt; &#xA; &lt;li&gt;Artificial Intelligence&lt;/li&gt; &#xA; &lt;li&gt;Audio system&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Short term goals :&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: this is subject to change at any time! Follow the roadmap over at &lt;a href=&#34;http://hazelengine.com/roadmap&#34;&gt;hazelengine.com/roadmap&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;By the end 2020, we want to make a game using the Hazel game engine. Not like the time I made a game in one hour using the engine, but this time by using the proper tools that would be required to make a game with Hazel. This means we need to add a full 2D workflow:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Design the game scene by using Hazelnut, the Hazel editor,&lt;/li&gt; &#xA; &lt;li&gt;Test the game inside Hazelnut, including the ability to save/load the created game,&lt;/li&gt; &#xA; &lt;li&gt;Load and play the game inside Sandbox.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We want everyone to be able to play the game on all desktop platforms (Windows, Mac and Linux). When this is implemented, another attempt at the &#34;Creating a game in one hour using Hazel&#34; will be made to see how far the engine has become.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/thecherno&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%40thecherno--blue.svg?style=social&amp;amp;logo=Twitter&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.instagram.com/thecherno&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/thecherno--red.svg?style=social&amp;amp;logo=Instagram&#34; alt=&#34;Instagram&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/user/TheChernoProject&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/TheChernoProject--red.svg?style=social&amp;amp;logo=youtube&#34; alt=&#34;Youtube&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/K2eSyQA&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/TheCherno%20Server--blue.svg?style=social&amp;amp;logo=Discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://patreon.com/thecherno&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%40thecherno--green.svg?style=social&amp;amp;logo=Patreon&#34; alt=&#34;Patreon&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>linyacool/WebServer</title>
    <updated>2022-07-17T02:00:53Z</updated>
    <id>tag:github.com,2022-07-17:/linyacool/WebServer</id>
    <link href="https://github.com/linyacool/WebServer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A C++ High Performance Web Server&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;A C++ High Performance Web Server&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/linyacool/WebServer&#34;&gt;&lt;img src=&#34;https://travis-ci.org/linyacool/WebServer.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/mashape/apistatus.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;本项目为C++11编写的Web服务器，解析了get、head请求，可处理静态资源，支持HTTP长连接，支持管线化请求，并实现了异步日志，记录服务器运行状态。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Part Ⅰ&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Part Ⅱ&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Part Ⅲ&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Part Ⅳ&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Part Ⅴ&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Part Ⅵ&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/linyacool/WebServer/raw/master/%E5%B9%B6%E5%8F%91%E6%A8%A1%E5%9E%8B.md&#34;&gt;并发模型&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/linyacool/WebServer/raw/master/%E8%BF%9E%E6%8E%A5%E7%9A%84%E7%BB%B4%E6%8A%A4.md&#34;&gt;连接的维护&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/linyacool/WebServer/raw/master/%E7%89%88%E6%9C%AC%E5%8E%86%E5%8F%B2.md&#34;&gt;版本历史&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/linyacool/WebServer/raw/master/%E6%B5%8B%E8%AF%95%E5%8F%8A%E6%94%B9%E8%BF%9B.md&#34;&gt;测试及改进&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/linyacool/WebServer/raw/master/%E9%A1%B9%E7%9B%AE%E7%9B%AE%E7%9A%84.md&#34;&gt;项目目的&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/linyacool/WebServer/raw/master/%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98.md&#34;&gt;面试问题&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Envoirment&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OS: Ubuntu 14.04&lt;/li&gt; &#xA; &lt;li&gt;Complier: g++ 4.8&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;./build.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;./WebServer [-t thread_numbers] [-p port] [-l log_file_path(should begin with &#39;/&#39;)]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Technical points&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用Epoll边沿触发的IO多路复用技术，非阻塞IO，使用Reactor模式&lt;/li&gt; &#xA; &lt;li&gt;使用多线程充分利用多核CPU，并使用线程池避免线程频繁创建销毁的开销&lt;/li&gt; &#xA; &lt;li&gt;使用基于小根堆的定时器关闭超时请求&lt;/li&gt; &#xA; &lt;li&gt;主线程只负责accept请求，并以Round Robin的方式分发给其它IO线程(兼计算线程)，锁的争用只会出现在主线程和某一特定线程中&lt;/li&gt; &#xA; &lt;li&gt;使用eventfd实现了线程的异步唤醒&lt;/li&gt; &#xA; &lt;li&gt;使用双缓冲区技术实现了简单的异步日志系统&lt;/li&gt; &#xA; &lt;li&gt;为减少内存泄漏的可能，使用智能指针等RAII机制&lt;/li&gt; &#xA; &lt;li&gt;使用状态机解析了HTTP请求,支持管线化&lt;/li&gt; &#xA; &lt;li&gt;支持优雅关闭连接 &amp;nbsp;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Model&lt;/h2&gt; &#xA;&lt;p&gt;并发模型为Reactor+非阻塞IO+线程池，新连接Round Robin分配，详细介绍请参考&lt;a href=&#34;https://github.com/linyacool/WebServer/raw/master/%E5%B9%B6%E5%8F%91%E6%A8%A1%E5%9E%8B.md&#34;&gt;并发模型&lt;/a&gt; &lt;img src=&#34;https://github.com/linyacool/WebServer/raw/master/datum/model.png&#34; alt=&#34;并发模型&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;代码统计&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/linyacool/WebServer/raw/master/datum/cloc.png&#34; alt=&#34;cloc&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Others&lt;/h2&gt; &#xA;&lt;p&gt;除了项目基本的代码，进服务器进行压测时，对开源测试工具Webbench增加了Keep-Alive选项和测试功能: 改写后的&lt;a href=&#34;https://github.com/linyacool/WebBench&#34;&gt;Webbench&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>