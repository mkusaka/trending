<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-13T01:37:58Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tindy2013/subconverter</title>
    <updated>2025-07-13T01:37:58Z</updated>
    <id>tag:github.com,2025-07-13:/tindy2013/subconverter</id>
    <link href="https://github.com/tindy2013/subconverter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Utility to convert between various subscription format&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;subconverter&lt;/h1&gt; &#xA;&lt;p&gt;Utility to convert between various proxy subscription formats.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tindy2013/subconverter/actions&#34;&gt;&lt;img src=&#34;https://github.com/tindy2013/subconverter/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tindy2013/subconverter/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/tindy2013/subconverter.svg?sanitize=true&#34; alt=&#34;GitHub tag (latest SemVer)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tindy2013/subconverter/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/tindy2013/subconverter.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tindy2013/subconverter/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/tindy2013/subconverter.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tindy2013/subconverter/raw/master/README-docker.md&#34;&gt;Docker README&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tindy2013/subconverter/raw/master/README-cn.md&#34;&gt;中文文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#subconverter&#34;&gt;subconverter&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#supported-types&#34;&gt;Supported Types&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#quick-usage&#34;&gt;Quick Usage&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#access-interface&#34;&gt;Access Interface&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#advanced-usage&#34;&gt;Advanced Usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#auto-upload&#34;&gt;Auto Upload&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Types&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;As Source&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;As Target&lt;/th&gt; &#xA;   &lt;th&gt;Target Name&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clash&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;clash&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ClashR&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;clashr&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Quantumult&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;quan&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Quantumult X&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;quanx&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Loon&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;loon&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SS (SIP002)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;ss&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SS Android&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;sssub&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SSD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;ssd&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SSR&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;ssr&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Surfboard&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;surfboard&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Surge 2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;surge&amp;amp;ver=2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Surge 3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;surge&amp;amp;ver=3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Surge 4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;surge&amp;amp;ver=4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;V2Ray&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;v2ray&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Telegram-liked HTTP/Socks 5 links&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;Only as source&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Notice:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Shadowrocket users should use &lt;code&gt;ss&lt;/code&gt;, &lt;code&gt;ssr&lt;/code&gt; or &lt;code&gt;v2ray&lt;/code&gt; as target.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can add &lt;code&gt;&amp;amp;remark=&lt;/code&gt; to Telegram-liked HTTP/Socks 5 links to set a remark for this node. For example:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;tg://http?server=1.2.3.4&amp;amp;port=233&amp;amp;user=user&amp;amp;pass=pass&amp;amp;remark=Example&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://t.me/http?server=1.2.3.4&amp;amp;port=233&amp;amp;user=user&amp;amp;pass=pass&amp;amp;remark=Example&#34;&gt;https://t.me/http?server=1.2.3.4&amp;amp;port=233&amp;amp;user=user&amp;amp;pass=pass&amp;amp;remark=Example&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Quick Usage&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Using default groups and rulesets configuration directly, without changing any settings&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Access Interface&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;http://127.0.0.1:25500/sub?target=%TARGET%&amp;amp;url=%URL%&amp;amp;config=%CONFIG%&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Description&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Argument&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Required&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;target&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;clash&lt;/td&gt; &#xA;   &lt;td&gt;Target subscription type. Acquire from Target Name in &lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#supported-types&#34;&gt;Supported Types&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;url&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;https%3A%2F%2Fwww.xxx.com&lt;/td&gt; &#xA;   &lt;td&gt;Subscription to convert. Supports URLs and file paths. Process with &lt;a href=&#34;https://www.urlencoder.org/&#34;&gt;URLEncode&lt;/a&gt; first.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;config&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;No&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;https%3A%2F%2Fwww.xxx.com&lt;/td&gt; &#xA;   &lt;td&gt;External configuration file path. Supports URLs and file paths. Process with &lt;a href=&#34;https://www.urlencoder.org/&#34;&gt;URLEncode&lt;/a&gt; first. More examples can be found in &lt;a href=&#34;https://github.com/lzdnico/subconverteriniexample&#34;&gt;this&lt;/a&gt; repository.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If you need to merge two or more subscription, you should join them with &#39;|&#39; before the URLEncode process.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;You have 2 subscriptions and you want to merge them and generate a Clash subscription:&#xA;1. https://dler.cloud/subscribe/ABCDE?clash=vmess&#xA;2. https://rich.cloud/subscribe/ABCDE?clash=vmess&#xA;&#xA;First use &#39;|&#39; to separate 2 subscriptions:&#xA;https://dler.cloud/subscribe/ABCDE?clash=vmess|https://rich.cloud/subscribe/ABCDE?clash=vmess&#xA;&#xA;Then process it with URLEncode to get %URL%:&#xA;https%3A%2F%2Fdler.cloud%2Fsubscribe%2FABCDE%3Fclash%3Dvmess%7Chttps%3A%2F%2Frich.cloud%2Fsubscribe%2FABCDE%3Fclash%3Dvmess&#xA;&#xA;Then fill %TARGET% and %URL% in Access Interface with actual values:&#xA;http://127.0.0.1:25500/sub?target=clash&amp;amp;url=https%3A%2F%2Fdler.cloud%2Fsubscribe%2FABCDE%3Fclash%3Dvmess%7Chttps%3A%2F%2Frich.cloud%2Fsubscribe%2FABCDE%3Fclash%3Dvmess&#xA;&#xA;Finally subscribe this link in Clash and you are done!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Advanced Usage&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://github.com/tindy2013/subconverter/raw/master/README-cn.md#%E8%BF%9B%E9%98%B6%E7%94%A8%E6%B3%95&#34;&gt;中文文档&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Auto Upload&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Upload Gist automatically&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Add a &lt;a href=&#34;https://github.com/settings/tokens/new&#34;&gt;Personal Access Token&lt;/a&gt; into &lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/gistconf.ini&#34;&gt;gistconf.ini&lt;/a&gt; in the root directory, then add &lt;code&gt;&amp;amp;upload=true&lt;/code&gt; to the local subscription link, then when you access this link, the program will automatically update the content to Gist repository.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[common]&#xA;;uncomment the following line and enter your token to enable upload function&#xA;token = xxxxxxxxxxxxxxxxxxxxxxxx(Your Personal Access Token)&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>deepseek-ai/3FS</title>
    <updated>2025-07-13T01:37:58Z</updated>
    <id>tag:github.com,2025-07-13:/deepseek-ai/3FS</id>
    <link href="https://github.com/deepseek-ai/3FS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A high-performance distributed file system designed to address the challenges of AI training and inference workloads.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fire-Flyer File System&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/deepseek-ai/3fs/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/deepseek-ai/3fs/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/deepseek-ai/3FS/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/LICENSE-MIT-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Fire-Flyer File System (3FS) is a high-performance distributed file system designed to address the challenges of AI training and inference workloads. It leverages modern SSDs and RDMA networks to provide a shared storage layer that simplifies development of distributed applications. Key features and benefits of 3FS include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Performance and Usability&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Disaggregated Architecture&lt;/strong&gt; Combines the throughput of thousands of SSDs and the network bandwidth of hundreds of storage nodes, enabling applications to access storage resource in a locality-oblivious manner.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Strong Consistency&lt;/strong&gt; Implements Chain Replication with Apportioned Queries (CRAQ) for strong consistency, making application code simple and easy to reason about.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;File Interfaces&lt;/strong&gt; Develops stateless metadata services backed by a transactional key-value store (e.g., FoundationDB). The file interface is well known and used everywhere. There is no need to learn a new storage API.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Diverse Workloads&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Data Preparation&lt;/strong&gt; Organizes outputs of data analytics pipelines into hierarchical directory structures and manages a large volume of intermediate outputs efficiently.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Dataloaders&lt;/strong&gt; Eliminates the need for prefetching or shuffling datasets by enabling random access to training samples across compute nodes.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Checkpointing&lt;/strong&gt; Supports high-throughput parallel checkpointing for large-scale training.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;KVCache for Inference&lt;/strong&gt; Provides a cost-effective alternative to DRAM-based caching, offering high throughput and significantly larger capacity.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/deepseek-ai/3FS/main/docs/design_notes.md&#34;&gt;Design Notes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/deepseek-ai/3FS/main/deploy/README.md&#34;&gt;Setup Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/deepseek-ai/3FS/main/src/lib/api/UsrbIo.md&#34;&gt;USRBIO API Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/deepseek-ai/3FS/main/specs/README.md&#34;&gt;P Specifications&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;h3&gt;1. Peak throughput&lt;/h3&gt; &#xA;&lt;p&gt;The following figure demonstrates the throughput of read stress test on a large 3FS cluster. This cluster consists of 180 storage nodes, each equipped with 2×200Gbps InfiniBand NICs and sixteen 14TiB NVMe SSDs. Approximately 500+ client nodes were used for the read stress test, with each client node configured with 1x200Gbps InfiniBand NIC. The final aggregate read throughput reached approximately 6.6 TiB/s with background traffic from training jobs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deepseek-ai/3FS/main/docs/images/peak_throughput.jpg&#34; alt=&#34;Large block read throughput under stress test on a 180-node cluster&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To benchmark 3FS, please use our &lt;a href=&#34;https://raw.githubusercontent.com/deepseek-ai/3FS/main/benchmarks/fio_usrbio/README.md&#34;&gt;fio engine for USRBIO&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;2. GraySort&lt;/h3&gt; &#xA;&lt;p&gt;We evaluated &lt;a href=&#34;https://github.com/deepseek-ai/smallpond&#34;&gt;smallpond&lt;/a&gt; using the GraySort benchmark, which measures sort performance on large-scale datasets. Our implementation adopts a two-phase approach: (1) partitioning data via shuffle using the prefix bits of keys, and (2) in-partition sorting. Both phases read/write data from/to 3FS.&lt;/p&gt; &#xA;&lt;p&gt;The test cluster comprised 25 storage nodes (2 NUMA domains/node, 1 storage service/NUMA, 2×400Gbps NICs/node) and 50 compute nodes (2 NUMA domains, 192 physical cores, 2.2 TiB RAM, and 1×200 Gbps NIC/node). Sorting 110.5 TiB of data across 8,192 partitions completed in 30 minutes and 14 seconds, achieving an average throughput of &lt;em&gt;3.66 TiB/min&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deepseek-ai/3FS/main/docs/images/gray_sort_server.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/deepseek-ai/3FS/main/docs/images/gray_sort_client.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3. KVCache&lt;/h3&gt; &#xA;&lt;p&gt;KVCache is a technique used to optimize the LLM inference process. It avoids redundant computations by caching the key and value vectors of previous tokens in the decoder layers. The top figure demonstrates the read throughput of all KVCache clients (1×400Gbps NIC/node), highlighting both peak and average values, with peak throughput reaching up to 40 GiB/s. The bottom figure presents the IOPS of removing ops from garbage collection (GC) during the same time period.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deepseek-ai/3FS/main/docs/images/kvcache_read_throughput.png&#34; alt=&#34;KVCache Read Throughput&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/deepseek-ai/3FS/main/docs/images/kvcache_gc_iops.png&#34; alt=&#34;KVCache GC IOPS&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Check out source code&lt;/h2&gt; &#xA;&lt;p&gt;Clone 3FS repository from GitHub:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/deepseek-ai/3fs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When &lt;code&gt;deepseek-ai/3fs&lt;/code&gt; has been cloned to a local file system, run the following commands to check out the submodules:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd 3fs&#xA;git submodule update --init --recursive&#xA;./patches/apply.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install dependencies&lt;/h2&gt; &#xA;&lt;p&gt;Install dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# for Ubuntu 20.04.&#xA;apt install cmake libuv1-dev liblz4-dev liblzma-dev libdouble-conversion-dev libdwarf-dev libunwind-dev \&#xA;  libaio-dev libgflags-dev libgoogle-glog-dev libgtest-dev libgmock-dev clang-format-14 clang-14 clang-tidy-14 lld-14 \&#xA;  libgoogle-perftools-dev google-perftools libssl-dev libclang-rt-14-dev gcc-10 g++-10 libboost1.71-all-dev build-essential&#xA;&#xA;# for Ubuntu 22.04.&#xA;apt install cmake libuv1-dev liblz4-dev liblzma-dev libdouble-conversion-dev libdwarf-dev libunwind-dev \&#xA;  libaio-dev libgflags-dev libgoogle-glog-dev libgtest-dev libgmock-dev clang-format-14 clang-14 clang-tidy-14 lld-14 \&#xA;  libgoogle-perftools-dev google-perftools libssl-dev gcc-12 g++-12 libboost-all-dev build-essential&#xA;&#xA;# for openEuler 2403sp1&#xA;yum install cmake libuv-devel lz4-devel xz-devel double-conversion-devel libdwarf-devel libunwind-devel \&#xA;    libaio-devel gflags-devel glog-devel gtest-devel gmock-devel clang-tools-extra clang lld \&#xA;    gperftools-devel gperftools openssl-devel gcc gcc-c++ boost-devel&#xA;&#xA;# for OpenCloudOS 9 and TencentOS 4&#xA;dnf install epol-release wget git meson cmake perl lld gcc gcc-c++ autoconf lz4 lz4-devel xz xz-devel \&#xA;    double-conversion-devel libdwarf-devel libunwind-devel libaio-devel gflags-devel glog-devel \&#xA;    libuv-devel gmock-devel gperftools gperftools-devel openssl-devel boost-static boost-devel mono-devel \&#xA;    libevent-devel libibverbs-devel numactl-devel python3-devel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install other build prerequisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/libfuse/libfuse/releases/tag/fuse-3.16.1&#34;&gt;&lt;code&gt;libfuse&lt;/code&gt;&lt;/a&gt; 3.16.1 or newer version&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apple.github.io/foundationdb/getting-started-linux.html&#34;&gt;FoundationDB&lt;/a&gt; 7.1 or newer version&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;Rust&lt;/a&gt; toolchain: minimal 1.75.0, recommended 1.85.0 or newer version (latest stable version)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build 3FS&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Build 3FS in &lt;code&gt;build&lt;/code&gt; folder:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cmake -S . -B build -DCMAKE_CXX_COMPILER=clang++-14 -DCMAKE_C_COMPILER=clang-14 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_EXPORT_COMPILE_COMMANDS=ON&#xA;cmake --build build -j 32&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build 3FS use Docker&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For TencentOS-4: &lt;code&gt;docker pull docker.io/tencentos/tencentos4-deepseek3fs-build:latest&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;For OpenCloudOS-9: &lt;code&gt;docker pull docker.io/opencloudos/opencloudos9-deepseek3fs-build:latest&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Run a test cluster&lt;/h2&gt; &#xA;&lt;p&gt;Follow instructions in &lt;a href=&#34;https://raw.githubusercontent.com/deepseek-ai/3FS/main/deploy/README.md&#34;&gt;setup guide&lt;/a&gt; to run a test cluster.&lt;/p&gt; &#xA;&lt;h2&gt;Report Issues&lt;/h2&gt; &#xA;&lt;p&gt;Please visit &lt;a href=&#34;https://github.com/deepseek-ai/3fs/issues&#34;&gt;https://github.com/deepseek-ai/3fs/issues&lt;/a&gt; to report issues.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Tencent/ncnn</title>
    <updated>2025-07-13T01:37:58Z</updated>
    <id>tag:github.com,2025-07-13:/Tencent/ncnn</id>
    <link href="https://github.com/Tencent/ncnn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ncnn is a high-performance neural network inference framework optimized for the mobile platform&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Tencent/ncnn/master/images/256-ncnn.png&#34; alt=&#34;ncnn&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ncnn&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/ncnn/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-BSD_3_Clause-blue.svg?style=for-the-badge&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/ncnn/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/Tencent/ncnn/total.svg?style=for-the-badge&#34; alt=&#34;Download Total Count&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/Tencent/ncnn&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/Tencent/ncnn/master?style=for-the-badge&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ncnn is a high-performance neural network inference computing framework optimized for mobile platforms. ncnn is deeply considerate about deployment and uses on mobile phones from the beginning of design. ncnn does not have third-party dependencies. It is cross-platform and runs faster than all known open-source frameworks on mobile phone cpu. Developers can easily deploy deep learning algorithm models to the mobile platform by using efficient ncnn implementation, creating intelligent APPs, and bringing artificial intelligence to your fingertips. ncnn is currently being used in many Tencent applications, such as QQ, Qzone, WeChat, Pitu, and so on.&lt;/p&gt; &#xA;&lt;p&gt;ncnn 是一个为手机端极致优化的高性能神经网络前向计算框架。 ncnn 从设计之初深刻考虑手机端的部署和使用。 无第三方依赖，跨平台，手机端 cpu 的速度快于目前所有已知的开源框架。 基于 ncnn，开发者能够将深度学习算法轻松移植到手机端高效执行， 开发出人工智能 APP，将 AI 带到你的指尖。 ncnn 目前已在腾讯多款应用中使用，如：QQ，Qzone，微信，天天 P 图等。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;b&gt;技术交流 QQ 群&lt;/b&gt;&lt;br&gt; 637093648 (超多大佬)&lt;br&gt; 答案：卷卷卷卷卷（已满） &lt;/td&gt; &#xA;   &lt;td rowspan=&#34;3&#34;&gt; &lt;b&gt;Telegram Group&lt;/b&gt; &lt;p&gt;&lt;a href=&#34;https://t.me/ncnnyes&#34;&gt;https://t.me/ncnnyes&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td rowspan=&#34;3&#34;&gt; &lt;b&gt;Discord Channel&lt;/b&gt; &lt;p&gt;&lt;a href=&#34;https://discord.gg/YRsxgmF&#34;&gt;https://discord.gg/YRsxgmF&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;b&gt;Pocky QQ 群（MLIR YES!）&lt;/b&gt;&lt;br&gt; 677104663 (超多大佬)&lt;br&gt; 答案：multi-level intermediate representation &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;b&gt;他们都不知道 pnnx 有多好用群&lt;/b&gt;&lt;br&gt; 818998520 (新群！) &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Download &amp;amp; Build status&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest&#34;&gt;https://github.com/Tencent/ncnn/releases/latest&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td rowspan=&#34;2&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/25181517/192108372-f71d70ac-7ae6-4c0d-8395-51d8870c2ef0.png&#34; width=&#34;120&#34; height=&#34;auto&#34;&gt; &lt;/td&gt; &#xA;   &lt;td colspan=&#34;3&#34;&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build&#34;&gt;how to build ncnn library&lt;/a&gt; on Linux / Windows / macOS / Raspberry Pi3, Pi4 / POWER / Android / NVIDIA Jetson / iOS / WebAssembly / AllWinner D1 / Loongson 2K1000&lt;/strong&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Source&lt;/td&gt; &#xA;   &lt;td colspan=&#34;2&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-full-source.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-blue?style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td rowspan=&#34;3&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/25181517/117269608-b7dcfb80-ae58-11eb-8e66-6cc8753553f0.png&#34; width=&#34;120&#34; height=&#34;auto&#34;&gt; &lt;/td&gt; &#xA;   &lt;td colspan=&#34;3&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-android&#34;&gt;Build for Android&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-termux-on-android&#34;&gt;Build for Termux on Android&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Android&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-android-vulkan.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-blue?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-android.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/+cpuonly-blue?style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td rowspan=&#34;2&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Aandroid&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/Tencent/ncnn/android.yml?branch=master&amp;amp;style=for-the-badge&amp;amp;label=build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Android shared&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-android-vulkan-shared.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-blue?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-android-shared.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/+cpuonly-blue?style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td rowspan=&#34;3&#34;&gt; &lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/3/37/HMOS_Logo_Icon.svg/240px-HMOS_Logo_Icon.svg.png&#34; width=&#34;120&#34; height=&#34;auto&#34;&gt; &lt;/td&gt; &#xA;   &lt;td colspan=&#34;3&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-harmonyos-with-cross-compiling&#34;&gt;Build for HarmonyOS with cross-compiling&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HarmonyOS&lt;/td&gt; &#xA;   &lt;td&gt; &lt;/td&gt; &#xA;   &lt;td rowspan=&#34;2&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Aharmonyos&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/Tencent/ncnn/harmonyos.yml?branch=master&amp;amp;style=for-the-badge&amp;amp;label=build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HarmonyOS shared&lt;/td&gt; &#xA;   &lt;td&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td rowspan=&#34;3&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/25181517/121406611-a8246b80-c95e-11eb-9b11-b771486377f6.png&#34; width=&#34;120&#34; height=&#34;auto&#34;&gt; &lt;/td&gt; &#xA;   &lt;td colspan=&#34;3&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-ios-on-macos-with-xcode&#34;&gt;Build for iOS on macOS with xcode&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;iOS&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-ios-vulkan.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-blue?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-ios.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/+cpuonly-blue?style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td rowspan=&#34;2&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Aios&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/Tencent/ncnn/ios.yml?branch=master&amp;amp;style=for-the-badge&amp;amp;label=build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;iOS-Simulator&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-ios-simulator-vulkan.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-blue?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-ios-simulator.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/+cpuonly-blue?style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td rowspan=&#34;10&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/25181517/186884152-ae609cca-8cf1-4175-8d60-1ce1fa078ca2.png&#34; width=&#34;120&#34; height=&#34;auto&#34;&gt; &lt;/td&gt; &#xA;   &lt;td colspan=&#34;3&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-macos&#34;&gt;Build for macOS&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-macos-vulkan.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-blue?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-macos.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/+cpuonly-blue?style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td rowspan=&#34;1&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Amacos&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/Tencent/ncnn/macos.yml?branch=master&amp;amp;style=for-the-badge&amp;amp;label=build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mac-Catalyst&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-mac-catalyst-vulkan.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-blue?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-mac-catalyst.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/+cpuonly-blue?style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td rowspan=&#34;1&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Amac-catalyst&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/Tencent/ncnn/mac-catalyst.yml?branch=master&amp;amp;style=for-the-badge&amp;amp;label=build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;watchOS&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-watchos.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-blue?style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td rowspan=&#34;2&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Awatchos&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/Tencent/ncnn/watchos.yml?branch=master&amp;amp;style=for-the-badge&amp;amp;label=build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;watchOS-Simulator&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-watchos-simulator.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-blue?style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tvOS&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-tvos-vulkan.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-blue?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-tvos.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/+cpuonly-blue?style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td rowspan=&#34;2&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Atvos&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/Tencent/ncnn/tvos.yml?branch=master&amp;amp;style=for-the-badge&amp;amp;label=build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tvOS-Simulator&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-tvos-simulator-vulkan.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-blue?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-tvos-simulator.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/+cpuonly-blue?style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;visionOS&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-visionos-vulkan.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-blue?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-visionos.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/+cpuonly-blue?style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td rowspan=&#34;2&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Avisionos&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/Tencent/ncnn/visionos.yml?branch=master&amp;amp;style=for-the-badge&amp;amp;label=build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;visionOS-Simulator&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-visionos-simulator-vulkan.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-blue?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-visionos-simulator.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/+cpuonly-blue?style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Apple xcframework&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-apple-vulkan.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-blue?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-apple.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/+cpuonly-blue?style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td rowspan=&#34;1&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td rowspan=&#34;3&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/25181517/186884153-99edc188-e4aa-4c84-91b0-e2df260ebc33.png&#34; width=&#34;120&#34; height=&#34;auto&#34;&gt; &lt;/td&gt; &#xA;   &lt;td colspan=&#34;3&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-linux&#34;&gt;Build for Linux / NVIDIA Jetson / Raspberry Pi3, Pi4 / POWER&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ubuntu 22.04&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-ubuntu-2204.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-blue?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-ubuntu-2204-shared.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/+shared-blue?style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td rowspan=&#34;2&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Alinux-x64-gpu-gcc&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/Tencent/ncnn/linux-x64-gpu-gcc.yml?branch=master&amp;amp;style=for-the-badge&amp;amp;label=build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ubuntu 24.04&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-ubuntu-2404.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-blue?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-ubuntu-2404-shared.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/+shared-blue?style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td rowspan=&#34;5&#34;&gt; &lt;img alt=&#34;windows&#34; src=&#34;https://user-images.githubusercontent.com/25181517/186884150-05e9ff6d-340e-4802-9533-2c3f02363ee3.png&#34; width=&#34;120&#34; height=&#34;auto&#34;&gt; &lt;/td&gt; &#xA;   &lt;td colspan=&#34;3&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-windows-x64-using-visual-studio-community-2017&#34;&gt;Build for Windows x64 using VS2017&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-windows-x64-using-mingw-w64&#34;&gt;Build for Windows x64 using MinGW-w64&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;VS2015&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-windows-vs2015.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-blue?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-windows-vs2015-shared.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/+shared-blue?style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td rowspan=&#34;4&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Awindows&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/Tencent/ncnn/windows.yml?branch=master&amp;amp;style=for-the-badge&amp;amp;label=build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;VS2017&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-windows-vs2017.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-blue?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-windows-vs2017-shared.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/+shared-blue?style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;VS2019&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-windows-vs2019.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-blue?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-windows-vs2019-shared.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/+shared-blue?style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;VS2022&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-windows-vs2022.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-blue?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-windows-vs2022-shared.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/+shared-blue?style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td rowspan=&#34;2&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/25181517/188324036-d704ac9a-6e61-4722-b978-254b25b61bed.png&#34; width=&#34;120&#34; height=&#34;auto&#34;&gt; &lt;/td&gt; &#xA;   &lt;td colspan=&#34;3&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-webassembly&#34;&gt;Build for WebAssembly&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WebAssembly&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases/latest/download/ncnn-20250503-webassembly.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-blue?style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Aweb-assembly&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/Tencent/ncnn/web-assembly.yml?branch=master&amp;amp;style=for-the-badge&amp;amp;label=build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td rowspan=&#34;8&#34;&gt; &lt;img src=&#34;https://github.com/marwin1991/profile-technology-icons/assets/76662862/2481dc48-be6b-4ebb-9e8c-3b957efe69fa&#34; width=&#34;120&#34; height=&#34;auto&#34;&gt; &lt;/td&gt; &#xA;   &lt;td colspan=&#34;3&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-arm-cortex-a-family-with-cross-compiling&#34;&gt;Build for ARM Cortex-A family with cross-compiling&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-hisilicon-platform-with-cross-compiling&#34;&gt;Build for Hisilicon platform with cross-compiling&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-allwinner-d1&#34;&gt;Build for AllWinner D1&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-loongson-2k1000&#34;&gt;Build for Loongson 2K1000&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-qnx&#34;&gt;Build for QNX&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux (arm)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Alinux-arm&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/Tencent/ncnn/linux-arm.yml?branch=master&amp;amp;style=for-the-badge&amp;amp;label=build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux (aarch64)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Alinux-aarch64&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/Tencent/ncnn/linux-aarch64.yml?branch=master&amp;amp;style=for-the-badge&amp;amp;label=build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux (mips)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Alinux-mips&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/Tencent/ncnn/linux-mips.yml?branch=master&amp;amp;style=for-the-badge&amp;amp;label=build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux (mips64)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Alinux-mips64&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/Tencent/ncnn/linux-mips64.yml?branch=master&amp;amp;style=for-the-badge&amp;amp;label=build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux (ppc64)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Alinux-ppc64&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/Tencent/ncnn/linux-ppc64.yml?branch=master&amp;amp;style=for-the-badge&amp;amp;label=build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux (riscv64)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Alinux-riscv64&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/Tencent/ncnn/linux-riscv64.yml?branch=master&amp;amp;style=for-the-badge&amp;amp;label=build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux (loongarch64)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Alinux-loongarch64&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/Tencent/ncnn/linux-loongarch64.yml?branch=master&amp;amp;style=for-the-badge&amp;amp;label=build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Support most commonly used CNN network&lt;/h2&gt; &#xA;&lt;h2&gt;支持大部分常用的 CNN 网络&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Classical CNN: &lt;a href=&#34;https://github.com/BVLC/caffe/wiki/Model-Zoo#models-used-by-the-vgg-team-in-ilsvrc-2014&#34;&gt;VGG&lt;/a&gt; &lt;a href=&#34;https://github.com/BVLC/caffe/tree/9b891540183ddc834a02b2bd81b31afae71b2153/models/bvlc_alexnet&#34;&gt;AlexNet&lt;/a&gt; &lt;a href=&#34;https://github.com/BVLC/caffe/tree/9b891540183ddc834a02b2bd81b31afae71b2153/models/bvlc_googlenet&#34;&gt;GoogleNet&lt;/a&gt; Inception ...&lt;/li&gt; &#xA; &lt;li&gt;Practical CNN: &lt;a href=&#34;https://github.com/tornadomeet/ResNet&#34;&gt;ResNet&lt;/a&gt; &lt;a href=&#34;https://github.com/liuzhuang13/DenseNet&#34;&gt;DenseNet&lt;/a&gt; &lt;a href=&#34;https://github.com/hujie-frank/SENet&#34;&gt;SENet&lt;/a&gt; &lt;a href=&#34;https://github.com/unsky/FPN&#34;&gt;FPN&lt;/a&gt; ...&lt;/li&gt; &#xA; &lt;li&gt;Light-weight CNN: &lt;a href=&#34;https://github.com/forresti/SqueezeNet&#34;&gt;SqueezeNet&lt;/a&gt; &lt;a href=&#34;https://github.com/tensorflow/models/raw/master/research/slim/nets/mobilenet_v1.md&#34;&gt;MobileNetV1&lt;/a&gt; &lt;a href=&#34;https://github.com/tensorflow/models/raw/master/research/slim/nets/mobilenet/README.md&#34;&gt;MobileNetV2/V3&lt;/a&gt; &lt;a href=&#34;https://github.com/farmingyard/ShuffleNet&#34;&gt;ShuffleNetV1&lt;/a&gt; &lt;a href=&#34;https://github.com/opconty/keras-shufflenetV2&#34;&gt;ShuffleNetV2&lt;/a&gt; &lt;a href=&#34;https://github.com/tensorflow/models/tree/master/research/slim/nets/nasnet&#34;&gt;MNasNet&lt;/a&gt; ...&lt;/li&gt; &#xA; &lt;li&gt;Face Detection: &lt;a href=&#34;https://github.com/ipazc/mtcnn&#34;&gt;MTCNN&lt;/a&gt; &lt;a href=&#34;https://github.com/biubug6/Pytorch_Retinaface&#34;&gt;RetinaFace&lt;/a&gt; &lt;a href=&#34;https://github.com/nihui/ncnn-android-scrfd&#34;&gt;scrfd&lt;/a&gt; ...&lt;/li&gt; &#xA; &lt;li&gt;Detection: &lt;a href=&#34;https://github.com/lzx1413/CAFFE_SSD&#34;&gt;VGG-SSD&lt;/a&gt; &lt;a href=&#34;https://github.com/chuanqi305/MobileNet-SSD&#34;&gt;MobileNet-SSD&lt;/a&gt; &lt;a href=&#34;https://github.com/chuanqi305/SqueezeNet-SSD&#34;&gt;SqueezeNet-SSD&lt;/a&gt; &lt;a href=&#34;https://github.com/chuanqi305/MobileNetv2-SSDLite&#34;&gt;MobileNetV2-SSDLite&lt;/a&gt; &lt;a href=&#34;https://github.com/XiaoyuHuang96/MobilenetV3SSDLite-tfkeras&#34;&gt;MobileNetV3-SSDLite&lt;/a&gt; ...&lt;/li&gt; &#xA; &lt;li&gt;Detection: &lt;a href=&#34;https://github.com/rbgirshick/py-faster-rcnn&#34;&gt;Faster-RCNN&lt;/a&gt; &lt;a href=&#34;https://github.com/daijifeng001/R-FCN&#34;&gt;R-FCN&lt;/a&gt; ...&lt;/li&gt; &#xA; &lt;li&gt;Detection: &lt;a href=&#34;https://github.com/longcw/yolo2-pytorch&#34;&gt;YOLOv2&lt;/a&gt; &lt;a href=&#34;https://github.com/ultralytics/yolov3&#34;&gt;YOLOv3&lt;/a&gt; &lt;a href=&#34;https://github.com/eric612/MobileNet-YOLO&#34;&gt;MobileNet-YOLOv3&lt;/a&gt; &lt;a href=&#34;https://github.com/Tianxiaomo/pytorch-YOLOv4&#34;&gt;YOLOv4&lt;/a&gt; &lt;a href=&#34;https://github.com/ultralytics/yolov5&#34;&gt;YOLOv5&lt;/a&gt; &lt;a href=&#34;https://github.com/WongKinYiu/yolov7&#34;&gt;YOLOv7&lt;/a&gt; &lt;a href=&#34;https://github.com/Megvii-BaseDetection/YOLOX&#34;&gt;YOLOX&lt;/a&gt; &lt;a href=&#34;https://github.com/nihui/ncnn-android-yolov8&#34;&gt;YOLOv8&lt;/a&gt; ...&lt;/li&gt; &#xA; &lt;li&gt;Detection: &lt;a href=&#34;https://github.com/RangiLyu/nanodet&#34;&gt;NanoDet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Segmentation: &lt;a href=&#34;https://github.com/unsky/FPN&#34;&gt;FCN&lt;/a&gt; &lt;a href=&#34;https://github.com/hszhao/PSPNet&#34;&gt;PSPNet&lt;/a&gt; &lt;a href=&#34;https://github.com/zhixuhao/unet&#34;&gt;UNet&lt;/a&gt; &lt;a href=&#34;https://github.com/dbolya/yolact&#34;&gt;YOLACT&lt;/a&gt; ...&lt;/li&gt; &#xA; &lt;li&gt;Pose Estimation: &lt;a href=&#34;https://github.com/dog-qiuqiu/Ultralight-SimplePose&#34;&gt;SimplePose&lt;/a&gt; ...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;HowTo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/use-ncnn-with-alexnet&#34;&gt;use ncnn with alexnet&lt;/a&gt; with detailed steps, recommended for beginners :)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/use-ncnn-with-alexnet.zh&#34;&gt;ncnn 组件使用指北 alexnet&lt;/a&gt; 附带详细步骤，新人强烈推荐 :)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://netron.app&#34;&gt;use netron for ncnn model visualization&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/use-ncnn-with-pytorch-or-onnx&#34;&gt;use ncnn with pytorch or onnx&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/low-level-operation-api&#34;&gt;ncnn low-level operation api&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/param-and-model-file-structure&#34;&gt;ncnn param and model file spec&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/operation-param-weight-table&#34;&gt;ncnn operation param weight table&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-implement-custom-layer-step-by-step&#34;&gt;how to implement custom layer step by step&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://deepwiki.com/Tencent/ncnn&#34;&gt;ncnn deepwiki&lt;/a&gt; LLM Answering Questions ;)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/FAQ-ncnn-throw-error&#34;&gt;ncnn throw error&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/FAQ-ncnn-produce-wrong-result&#34;&gt;ncnn produce wrong result&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/FAQ-ncnn-vulkan&#34;&gt;ncnn vulkan&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports convolutional neural networks, supports multiple input and multi-branch structure, can calculate part of the branch&lt;/li&gt; &#xA; &lt;li&gt;No third-party library dependencies, does not rely on BLAS / NNPACK or any other computing framework&lt;/li&gt; &#xA; &lt;li&gt;Pure C++ implementation, cross-platform, supports Android, iOS and so on&lt;/li&gt; &#xA; &lt;li&gt;ARM NEON assembly level of careful optimization, calculation speed is extremely high&lt;/li&gt; &#xA; &lt;li&gt;Sophisticated memory management and data structure design, very low memory footprint&lt;/li&gt; &#xA; &lt;li&gt;Supports multi-core parallel computing acceleration, ARM big.LITTLE CPU scheduling optimization&lt;/li&gt; &#xA; &lt;li&gt;Supports GPU acceleration via the next-generation low-overhead Vulkan API&lt;/li&gt; &#xA; &lt;li&gt;Extensible model design, supports 8bit quantization and half-precision floating point storage, can import caffe/pytorch/mxnet/onnx/darknet/keras/tensorflow(mlir) models&lt;/li&gt; &#xA; &lt;li&gt;Support direct memory zero copy reference load network model&lt;/li&gt; &#xA; &lt;li&gt;Can be registered with custom layer implementation and extended&lt;/li&gt; &#xA; &lt;li&gt;Well, it is strong, not afraid of being stuffed with 卷 QvQ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;功能概述&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持卷积神经网络，支持多输入和多分支结构，可计算部分分支&lt;/li&gt; &#xA; &lt;li&gt;无任何第三方库依赖，不依赖 BLAS/NNPACK 等计算框架&lt;/li&gt; &#xA; &lt;li&gt;纯 C++ 实现，跨平台，支持 Android / iOS 等&lt;/li&gt; &#xA; &lt;li&gt;ARM Neon 汇编级良心优化，计算速度极快&lt;/li&gt; &#xA; &lt;li&gt;精细的内存管理和数据结构设计，内存占用极低&lt;/li&gt; &#xA; &lt;li&gt;支持多核并行计算加速，ARM big.LITTLE CPU 调度优化&lt;/li&gt; &#xA; &lt;li&gt;支持基于全新低消耗的 Vulkan API GPU 加速&lt;/li&gt; &#xA; &lt;li&gt;可扩展的模型设计，支持 8bit &lt;a href=&#34;https://raw.githubusercontent.com/Tencent/ncnn/master/tools/quantize&#34;&gt;量化&lt;/a&gt; 和半精度浮点存储，可导入 caffe/pytorch/mxnet/onnx/darknet/keras/tensorflow(mlir) 模型&lt;/li&gt; &#xA; &lt;li&gt;支持直接内存零拷贝引用加载网络模型&lt;/li&gt; &#xA; &lt;li&gt;可注册自定义层实现并扩展&lt;/li&gt; &#xA; &lt;li&gt;恩，很强就是了，不怕被塞卷 QvQ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;supported platform matrix&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;✅ = known work and runs fast with good optimization&lt;/li&gt; &#xA; &lt;li&gt;✔️ = known work, but speed may not be fast enough&lt;/li&gt; &#xA; &lt;li&gt;❔ = shall work, not confirmed&lt;/li&gt; &#xA; &lt;li&gt;/ = not applied&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Windows&lt;/th&gt; &#xA;   &lt;th&gt;Linux&lt;/th&gt; &#xA;   &lt;th&gt;Android&lt;/th&gt; &#xA;   &lt;th&gt;macOS&lt;/th&gt; &#xA;   &lt;th&gt;iOS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;intel-cpu&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;intel-gpu&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;amd-cpu&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;amd-gpu&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nvidia-gpu&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;qcom-cpu&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;qcom-gpu&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;arm-cpu&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;arm-gpu&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;apple-cpu&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;apple-gpu&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ibm-cpu&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Project examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nihui/ncnn-android-squeezenet&#34;&gt;https://github.com/nihui/ncnn-android-squeezenet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nihui/ncnn-android-styletransfer&#34;&gt;https://github.com/nihui/ncnn-android-styletransfer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nihui/ncnn-android-mobilenetssd&#34;&gt;https://github.com/nihui/ncnn-android-mobilenetssd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/moli232777144/mtcnn_ncnn&#34;&gt;https://github.com/moli232777144/mtcnn_ncnn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nihui/ncnn-android-yolov5&#34;&gt;https://github.com/nihui/ncnn-android-yolov5&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xiang-wuu/ncnn-android-yolov7&#34;&gt;https://github.com/xiang-wuu/ncnn-android-yolov7&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nihui/ncnn-android-scrfd&#34;&gt;https://github.com/nihui/ncnn-android-scrfd&lt;/a&gt; 🤩&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shaoshengsong/qt_android_ncnn_lib_encrypt_example&#34;&gt;https://github.com/shaoshengsong/qt_android_ncnn_lib_encrypt_example&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/nihui/ncnn-assets/raw/master/20181217/ncnn-2.jpg&#34; height=&#34;230&#34;&gt;&lt;img src=&#34;https://github.com/nihui/ncnn-assets/raw/master/20181217/4.jpg&#34; height=&#34;230&#34;&gt;&lt;img src=&#34;https://github.com/nihui/ncnn-assets/raw/master/20181217/ncnn-33.jpg&#34; height=&#34;230&#34;&gt;&lt;img src=&#34;https://github.com/nihui/ncnn-assets/raw/master/20181217/ncnn-m.png&#34; height=&#34;230&#34;&gt;&lt;img src=&#34;https://github.com/nihui/ncnn-android-yolov5/raw/master/screenshot.jpg&#34; height=&#34;230&#34;&gt;&lt;img src=&#34;https://github.com/nihui/ncnn-android-scrfd/raw/master/screenshot.jpg&#34; height=&#34;230&#34;&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/magicse/ncnn-colorization-siggraph17&#34;&gt;https://github.com/magicse/ncnn-colorization-siggraph17&lt;/a&gt;&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/13585785/189326958-f5a8d6f8-caef-49bf-88da-ae494371195d.jpg&#34; width=&#34;700&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mizu-bai/ncnn-fortran&#34;&gt;https://github.com/mizu-bai/ncnn-fortran&lt;/a&gt; Call ncnn from Fortran&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/k2-fsa/sherpa&#34;&gt;https://github.com/k2-fsa/sherpa&lt;/a&gt; Use ncnn for real-time speech recognition (i.e., speech-to-text); also support embedded devices and provide mobile Apps (e.g., Android App)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/ncnn/master/LICENSE.txt&#34;&gt;BSD 3 Clause&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>