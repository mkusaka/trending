<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-01T01:38:17Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>facontidavide/PlotJuggler</title>
    <updated>2025-06-01T01:38:17Z</updated>
    <id>tag:github.com,2025-06-01:/facontidavide/PlotJuggler</id>
    <link href="https://github.com/facontidavide/PlotJuggler" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Time Series Visualization Tool that you deserve.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/facontidavide/PlotJuggler/main/docs/plotjuggler3_banner.svg?sanitize=true&#34; alt=&#34;PlotJuggler&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/facontidavide/PlotJuggler/actions/workflows/windows.yaml&#34;&gt;&lt;img src=&#34;https://github.com/facontidavide/PlotJuggler/actions/workflows/windows.yaml/badge.svg?sanitize=true&#34; alt=&#34;windows&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/facontidavide/PlotJuggler/actions/workflows/ubuntu.yaml&#34;&gt;&lt;img src=&#34;https://github.com/facontidavide/PlotJuggler/actions/workflows/ubuntu.yaml/badge.svg?sanitize=true&#34; alt=&#34;ubuntu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/facontidavide/PlotJuggler/actions/workflows/macos.yaml&#34;&gt;&lt;img src=&#34;https://github.com/facontidavide/PlotJuggler/actions/workflows/macos.yaml/badge.svg?sanitize=true&#34; alt=&#34;macos&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/facontidavide/PlotJuggler/actions?query=workflow%3Aros1&#34;&gt;&lt;img src=&#34;https://github.com/facontidavide/PlotJuggler/workflows/ros1/badge.svg?sanitize=true&#34; alt=&#34;ROS1&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/facontidavide/PlotJuggler/actions?query=workflow%3Aros2&#34;&gt;&lt;img src=&#34;https://github.com/facontidavide/PlotJuggler/workflows/ros2/badge.svg?sanitize=true&#34; alt=&#34;ROS2&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/tweet?text=I%20use%20PlotJuggler%20and%20it%20is%20amazing%0D%0A&amp;amp;url=https://github.com/facontidavide/PlotJuggler&amp;amp;via=facontidavide&amp;amp;hashtags=dataviz,plotjuggler,GoROS,PX4&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/http/shields.io.svg?style=social&#34; alt=&#34;Tweet&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Gold Sponsor&lt;/strong&gt;: &lt;a href=&#34;https://www.greenzie.com/&#34;&gt;Greenzie&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;PlotJuggler 3.10&lt;/h1&gt; &#xA;&lt;p&gt;PlotJuggler is a tool to visualize time series that is &lt;strong&gt;fast&lt;/strong&gt;, &lt;strong&gt;powerful&lt;/strong&gt; and &lt;strong&gt;intuitive&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Noteworthy features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simple Drag &amp;amp; Drop user interface.&lt;/li&gt; &#xA; &lt;li&gt;Load &lt;strong&gt;data from file&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Connect to live &lt;strong&gt;streaming&lt;/strong&gt; of data.&lt;/li&gt; &#xA; &lt;li&gt;Save the visualization layout and configurations to reuse them later.&lt;/li&gt; &#xA; &lt;li&gt;Fast &lt;strong&gt;OpenGL&lt;/strong&gt; visualization.&lt;/li&gt; &#xA; &lt;li&gt;Can handle &lt;strong&gt;thousands&lt;/strong&gt; of timeseries and &lt;strong&gt;millions&lt;/strong&gt; of data points.&lt;/li&gt; &#xA; &lt;li&gt;Transform your data using a simple editor: derivative, moving average, integral, etc…&lt;/li&gt; &#xA; &lt;li&gt;PlotJuggler can be easily extended using &lt;strong&gt;plugins&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/facontidavide/PlotJuggler/main/docs/plotjuggler3.gif&#34; alt=&#34;PlotJuggler&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Data sources (file and streaming)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Load CSV files.&lt;/li&gt; &#xA; &lt;li&gt;Load &lt;a href=&#34;https://dev.px4.io/v1.9.0/en/log/ulog_file_format.html&#34;&gt;ULog&lt;/a&gt; (PX4).&lt;/li&gt; &#xA; &lt;li&gt;Subscribe to many different streaming sources: MQTT, WebSockets, ZeroMQ, UDP, etc.&lt;/li&gt; &#xA; &lt;li&gt;Understand data formats such as JSON, CBOR, BSON, Message Pack, etc.&lt;/li&gt; &#xA; &lt;li&gt;Well integrated with &lt;a href=&#34;https://www.ros.org/&#34;&gt;ROS&lt;/a&gt;: open &lt;em&gt;rosbags&lt;/em&gt; and/or subscribe to ROS &lt;em&gt;topics&lt;/em&gt; (both ROS1 and ROS2).&lt;/li&gt; &#xA; &lt;li&gt;Supports the &lt;a href=&#34;https://labstreaminglayer.readthedocs.io/info/intro.html&#34;&gt;Lab Streaming Layer&lt;/a&gt;, that is used by &lt;a href=&#34;https://labstreaminglayer.readthedocs.io/info/supported_devices.html&#34;&gt;many devices&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Easily add your custom data source and/or formats...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/facontidavide/PlotJuggler/main/docs/data_sources.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Transform and analyze your data&lt;/h2&gt; &#xA;&lt;p&gt;PlotJuggler makes it easy to visualize data but also to analyze it. You can manipulate your time series using a simple and extendable Transform Editor.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/facontidavide/PlotJuggler/main/docs/function_editor.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you may use the Custom Function Editor, which allows you to create Multi-input / Single-output functions using a scripting language based on &lt;a href=&#34;https://www.tutorialspoint.com/lua/index.htm&#34;&gt;Lua&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are not familiar with Lua, don&#39;t be afraid, you won&#39;t need more than 5 minutes to learn it ;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/facontidavide/PlotJuggler/main/docs/custom_editor.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tutorials&lt;/h2&gt; &#xA;&lt;p&gt;To learn how to use PlotJuggler, check the tutorials here:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Tutorial 1&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Tutorial 2&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Tutorial 3&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://slides.com/davidefaconti/introduction-to-plotjuggler&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/facontidavide/PlotJuggler/main/docs/tutorial_1.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://slides.com/davidefaconti/plotjuggler-data&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/facontidavide/PlotJuggler/main/docs/tutorial_2.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://slides.com/davidefaconti/plotjuggler-transforms&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/facontidavide/PlotJuggler/main/docs/tutorial_3.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Supported plugins&lt;/h2&gt; &#xA;&lt;p&gt;Some plugins can be found in a different repository. The individual README files &lt;em&gt;should&lt;/em&gt; include all the information needed to compile and use the plugin.&lt;/p&gt; &#xA;&lt;p&gt;Please submit specific issues, Pull Requests and questions on the related Github repository:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PlotJuggler/plotjuggler-mqtt&#34;&gt;MQTT DataStreamer&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PlotJuggler/plotjuggler-lsl&#34;&gt;Lab Streaming Layer DataStreamer&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PlotJuggler/plotjuggler-ros-plugins&#34;&gt;ROS plugins&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PlotJuggler/plotjuggler-CAN-dbs&#34;&gt;CAN .dbg DataLoader&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want a simple example to learn how to write your own plugins, have a look at &lt;a href=&#34;https://github.com/PlotJuggler/plotjuggler-sample-plugins&#34;&gt;PlotJuggler/plotjuggler-sample-plugins&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h2&gt;Snap (recommended in Ubuntu, to ROS users too)&lt;/h2&gt; &#xA;&lt;p&gt;The snap contains a version of PlotJuggler that can work with either ROS1 or ROS2.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://snapcraft.io/static/images/badges/en/snap-store-black.svg?sanitize=true&#34; alt=&#34;Get it from the Snap Store&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To install it in Ubuntu 22.04, with ROS2 support, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo snap install plotjuggler&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are still using ROS1 (Ubuntu 20.04), install instead:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo snap install plotjuggler-ros&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows Binary installer&lt;/h3&gt; &#xA;&lt;p&gt;This installer does &lt;strong&gt;not&lt;/strong&gt; include ROS plugins.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows Installer&lt;/strong&gt;: &lt;a href=&#34;https://github.com/facontidavide/PlotJuggler/releases/download/3.9.3/PlotJuggler-Windows-3.9.3-installer.exe&#34;&gt;PlotJuggler-Windows-3.9.3-installer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Debian packages for ROS User&lt;/h3&gt; &#xA;&lt;p&gt;Install the ROS packages with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install ros-$ROS_DISTRO-plotjuggler-ros&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To launch PlotJuggler on ROS, use the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rosrun plotjuggler plotjuggler&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or, if are using ROS2:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ros2 run plotjuggler plotjuggler&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;ROS plugins are available in a separate repository: &lt;a href=&#34;https://github.com/PlotJuggler/plotjuggler-ros-plugins&#34;&gt;https://github.com/PlotJuggler/plotjuggler-ros-plugins&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please take a look at the instructions in that repository if you want to compile PJ and its ROS plugins from source.&lt;/p&gt; &#xA;&lt;h2&gt;Compile from source&lt;/h2&gt; &#xA;&lt;p&gt;You can find the detailed instructions here: &lt;a href=&#34;https://raw.githubusercontent.com/facontidavide/PlotJuggler/main/COMPILE.md&#34;&gt;COMPILE.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Sponsorship and commercial support&lt;/h1&gt; &#xA;&lt;p&gt;PlotJuggler required a lot of work to develop and maintain; my goal is to build the most intuitive and powerful tool to visualize data and timeseries.&lt;/p&gt; &#xA;&lt;p&gt;If you find PlotJuggler useful, consider donating &lt;a href=&#34;https://www.paypal.me/facontidavide&#34;&gt;PayPal&lt;/a&gt; or becoming a &lt;a href=&#34;https://github.com/sponsors/facontidavide&#34;&gt;Github Sponsor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you need to extend any of the functionalities of PlotJuggler to cover a specific need or to parse your custom data formats, you can receive commercial support from the main author, &lt;a href=&#34;mailto:davide.faconti@gmail.com&#34;&gt;Davide Faconti&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;PlotJuggler is released under the &lt;a href=&#34;https://raw.githubusercontent.com/facontidavide/PlotJuggler/main/LICENSE.md&#34;&gt;Mozilla Public License Version 2.0&lt;/a&gt;, which allows users to develop closed-source plugins.&lt;/p&gt; &#xA;&lt;p&gt;Please note that some third-party dependencies (including Qt) use the &lt;strong&gt;GNU Lesser General Public License&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Star History&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#facontidavide/PlotJuggler&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=facontidavide/PlotJuggler&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contributors&lt;/h1&gt; &#xA;&lt;a href=&#34;https://github.com/facontidavide/plotjuggler/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=facontidavide/plotjuggler&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>flameshot-org/flameshot</title>
    <updated>2025-06-01T01:38:17Z</updated>
    <id>tag:github.com,2025-06-01:/flameshot-org/flameshot</id>
    <link href="https://github.com/flameshot-org/flameshot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Powerful yet simple to use screenshot software 🖥️ 📸&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;h1&gt; &lt;a href=&#34;https://github.com/flameshot-org/flameshot&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/data/img/app/org.flameshot.Flameshot.svg?sanitize=true&#34; alt=&#34;Flameshot&#34;&gt; &lt;/a&gt; &lt;br&gt; Flameshot &lt;/h1&gt; &#xA; &lt;h4&gt;Powerful yet simple to use screenshot software.&lt;/h4&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://github.com/flameshot-org/flameshot/actions?query=workflow%3APackaging%28Linux%29&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/flameshot-org/flameshot/Linux-pack.yml?branch=master&amp;amp;label=gnu%2Flinux&#34; alt=&#34;GNU/Linux Build Status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/flameshot-org/flameshot/actions?query=workflow%3APackaging%28Windows%29&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/flameshot-org/flameshot/Windows-pack.yml?branch=master&amp;amp;label=windows&#34; alt=&#34;Windows Build Status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/flameshot-org/flameshot/actions?query=workflow%3APackaging%28MacOS%29&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/flameshot-org/flameshot/MacOS-pack.yml?branch=master&amp;amp;label=macos&#34; alt=&#34;MacOS Build Status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://flameshot.org/docs/installation/development-build/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/nightly%20builds-available-%23AA00FF&#34; alt=&#34;Nightly Build&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/flameshot-org/flameshot/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release/flameshot-org/flameshot.svg?sanitize=true&#34; alt=&#34;Latest Stable Release&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/flameshot-org/flameshot/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/flameshot-org/flameshot/total.svg?sanitize=true&#34; alt=&#34;Total Downloads&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/flameshot-org/flameshot/raw/master/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/flameshot-org/flameshot.svg?sanitize=true&#34; alt=&#34;License&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hosted.weblate.org/engage/flameshot/&#34;&gt; &lt;img src=&#34;https://hosted.weblate.org/widgets/flameshot/-/flameshot/svg-badge.svg?sanitize=true&#34; alt=&#34;Translation status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://flameshot.org&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release/flameshot-org/flameshot.svg?label=docs&#34; alt=&#34;Docs&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://snapcraft.io/flameshot&#34;&gt; &lt;img alt=&#34;Get it from the Snap Store&#34; src=&#34;https://snapcraft.io/static/images/badges/en/snap-store-black.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://flathub.org/apps/details/org.flameshot.Flameshot&#34;&gt; &lt;img height=&#34;60&#34; alt=&#34;Download on Flathub&#34; src=&#34;https://flathub.org/assets/badges/flathub-badge-en.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/data/img/preview/animatedUsage.gif&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Index&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#cli-configuration&#34;&gt;CLI configuration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#config-file&#34;&gt;Config file&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#keyboard-shortcuts&#34;&gt;Keyboard Shortcuts&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#local&#34;&gt;Local&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#global&#34;&gt;Global&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#on-kde-plasma-desktop&#34;&gt;On KDE Plasma desktop&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#on-ubuntu-tested-on-2204&#34;&gt;On Ubuntu&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#on-xfce-4&#34;&gt;On XFCE 4&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#on-fluxbox&#34;&gt;On Fluxbox&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#considerations&#34;&gt;Considerations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#prebuilt-packages&#34;&gt;Prebuilt Packages&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#packages-from-repository&#34;&gt;Packages from Repository&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#macos&#34;&gt;MacOS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#windows&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#compilation&#34;&gt;Compilation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#dependencies&#34;&gt;Dependencies&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#compile-time&#34;&gt;Compile-time&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#run-time&#34;&gt;Run-time&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#optional&#34;&gt;Optional&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#debian&#34;&gt;Debian&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#fedora&#34;&gt;Fedora&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#arch&#34;&gt;Arch&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#build&#34;&gt;Build&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#install&#34;&gt;Install&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#privacy-policy&#34;&gt;Privacy Policy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#code-signing-policy&#34;&gt;Code Signing Policy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#contribute&#34;&gt;Contribute&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#acknowledgment&#34;&gt;Acknowledgment&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Customizable appearance.&lt;/li&gt; &#xA; &lt;li&gt;Easy to use.&lt;/li&gt; &#xA; &lt;li&gt;In-app screenshot editing.&lt;/li&gt; &#xA; &lt;li&gt;DBus interface.&lt;/li&gt; &#xA; &lt;li&gt;Upload to Imgur.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Executing the command &lt;code&gt;flameshot&lt;/code&gt; without parameters will launch a running instance of the program in the background without taking actions. If your desktop environment provides tray area, a tray icon will also appear in the tray for users to perform configuration and management.&lt;/p&gt; &#xA;&lt;p&gt;Example commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Capture with GUI:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;flameshot gui&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Capture with GUI with custom save path:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;flameshot gui -p ~/myStuff/captures&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Capture with GUI after 2 seconds delay (can be useful to take screenshots of mouse hover tooltips, etc.):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;flameshot gui -d 2000&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fullscreen capture with custom save path (no GUI) and delayed:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;flameshot full -p ~/myStuff/captures -d 5000&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fullscreen capture with custom save path copying to clipboard:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;flameshot full -c -p ~/myStuff/captures&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Capture the screen containing the mouse and print the image (bytes) in PNG format:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;flameshot screen -r&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Capture the screen number 1 and copy it to the clipboard:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;flameshot screen -n 1 -c&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In case of doubt choose the first or the second command as shortcut in your favorite desktop environment.&lt;/p&gt; &#xA;&lt;p&gt;A systray icon will be in your system&#39;s panel while Flameshot is running. Do a right click on the tray icon and you&#39;ll see some menu items to open the configuration window and the information window. Check out the About window to see all available shortcuts in the graphical capture mode.&lt;/p&gt; &#xA;&lt;h3&gt;Usage on Windows&lt;/h3&gt; &#xA;&lt;p&gt;On Windows, &lt;code&gt;flameshot.exe&lt;/code&gt; will behave as expected for all supported command-line arguments, but it will not output any text to the console. This is problematic if, for example, you are running &lt;code&gt;flameshot.exe -h&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you require console output, run &lt;code&gt;flameshot-cli.exe&lt;/code&gt; instead. &lt;code&gt;flameshot-cli.exe&lt;/code&gt; is a minimal wrapper around &lt;code&gt;flameshot.exe&lt;/code&gt; that ensures all stdout is captured and output to the console.&lt;/p&gt; &#xA;&lt;h3&gt;CLI configuration&lt;/h3&gt; &#xA;&lt;p&gt;You can use the graphical menu to configure Flameshot, but alternatively you can use your terminal or scripts to do so.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Open the configuration menu:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;flameshot config&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Show the initial help message in the capture mode:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;flameshot config --showhelp true&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For more information about the available options use the help flag:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;flameshot config -h&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Config file&lt;/h3&gt; &#xA;&lt;p&gt;You can also edit some of the settings (like overriding the default colors) in the configuration file.&lt;br&gt; Linux path: &lt;code&gt;~/.config/flameshot/flameshot.ini&lt;/code&gt;.&lt;br&gt; Windows path: &lt;code&gt;C:\Users\{YOURNAME}\AppData\Roaming\flameshot\flameshot.ini&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When copying over the config file from Linux to Windows or vice versa, make sure to correct the &lt;code&gt;savePath&lt;/code&gt; variable,&lt;br&gt; so that the screenshots save in the right directory on your desired file system.&lt;/p&gt; &#xA;&lt;h2&gt;Keyboard shortcuts&lt;/h2&gt; &#xA;&lt;h3&gt;Local&lt;/h3&gt; &#xA;&lt;p&gt;These shortcuts are available in GUI mode:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Keys&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;P&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set the Pencil as paint tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;D&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set the Line as paint tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;A&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set the Arrow as paint tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;S&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set Selection as paint tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;R&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set the Rectangle as paint tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;C&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set the Circle as paint tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;M&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set the Marker as paint tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;T&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add text to your capture&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;B&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set Pixelate as the paint tool&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;←&lt;/kbd&gt;, &lt;kbd&gt;↓&lt;/kbd&gt;, &lt;kbd&gt;↑&lt;/kbd&gt;, &lt;kbd&gt;→&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move selection 1px&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;←&lt;/kbd&gt;, &lt;kbd&gt;↓&lt;/kbd&gt;, &lt;kbd&gt;↑&lt;/kbd&gt;, &lt;kbd&gt;→&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Resize selection 1px&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;←&lt;/kbd&gt;, &lt;kbd&gt;↓&lt;/kbd&gt;, &lt;kbd&gt;↑&lt;/kbd&gt;, &lt;kbd&gt;→&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Symmetrically resize selection 2px&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Esc&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Quit capture&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;M&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move the selection area&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;C&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Copy to clipboard&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;S&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Save selection as a file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Z&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Undo the last modification&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;Z&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Redo the next modification&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Q&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Leave the capture screen&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;O&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Choose an app to open the capture&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Return&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Commit text in text area&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Backspace&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Cancel current selection&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Return&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Upload the selection to Imgur&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Spacebar&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Toggle visibility of sidebar with options of the selected tool, color picker for the drawing color and history menu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Right Click&lt;/td&gt; &#xA;   &lt;td&gt;Show the color wheel&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mouse Wheel&lt;/td&gt; &#xA;   &lt;td&gt;Change the tool&#39;s thickness&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Print screen&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Capture Screen&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;Print&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Screenshot History&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + drawing &lt;em&gt;line&lt;/em&gt;, &lt;em&gt;arrow&lt;/em&gt; or &lt;em&gt;marker&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Drawing only horizontally, vertically or diagonally&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + drawing &lt;em&gt;rectangle&lt;/em&gt; or &lt;em&gt;circle&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Keeping aspect ratio&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;kbd&gt;Shift&lt;/kbd&gt; + drag a handler of the selection area: mirror redimension in the opposite handler.&lt;/p&gt; &#xA;&lt;h3&gt;Global&lt;/h3&gt; &#xA;&lt;p&gt;Flameshot uses &lt;kbd&gt;Print screen&lt;/kbd&gt; (Windows) and &lt;kbd&gt;cmd&lt;/kbd&gt;-&lt;kbd&gt;shift&lt;/kbd&gt;-&lt;kbd&gt;x&lt;/kbd&gt; (macOS) as default global hotkeys.&lt;/p&gt; &#xA;&lt;p&gt;On Linux, Flameshot doesn&#39;t yet support &lt;kbd&gt;Prt Sc&lt;/kbd&gt; out of the box, but with a bit of configuration you can set this up:&lt;/p&gt; &#xA;&lt;h4&gt;On KDE Plasma desktop&lt;/h4&gt; &#xA;&lt;p&gt;To make configuration easier, there&#39;s a &lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/docs/shortcuts-config/flameshot-shortcuts-kde.khotkeys&#34;&gt;file&lt;/a&gt; in the repository that more or less automates this process. This file will assign the following hotkeys by default:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Keys&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Prt Sc&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Start the Flameshot screenshot tool and take a screenshot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Prt Sc&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Wait for 3 seconds, then start the Flameshot screenshot tool and take a screenshot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;Prt Sc&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Take a full-screen (all monitors) screenshot and save it&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;Prt Sc&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Take a full-screen (all monitors) screenshot and copy it to the clipboard&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If you don&#39;t like the defaults, they can be changed later.&lt;/p&gt; &#xA;&lt;p&gt;Steps for using the configuration:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The configuration file makes Flameshot automatically save screenshots to &lt;code&gt;~/Pictures/Screenshots&lt;/code&gt; without opening the save dialog. Make sure that folder exists by running:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mkdir -p ~/Pictures/Screenshots&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(If you don&#39;t like the default location, you can skip this step and configure your preferred directory later.)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the configuration file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd ~/Desktop&#xA;wget https://raw.githubusercontent.com/flameshot-org/flameshot/master/docs/shortcuts-config/flameshot-shortcuts-kde.khotkeys&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure you have the &lt;code&gt;khotkeys&lt;/code&gt; installed using your package manager to enable custom shortcuts in KDE Plasma.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to &lt;em&gt;System Settings&lt;/em&gt; → &lt;em&gt;Shortcuts&lt;/em&gt; → &lt;em&gt;Custom Shortcuts&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If an entry exists for Spectacle (the default KDE screenshot utility), you&#39;ll need to disable it because its shortcuts might conflict with Flameshot&#39;s. Do this by unchecking the &lt;em&gt;Spectacle&lt;/em&gt; entry.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click &lt;em&gt;Edit&lt;/em&gt; → &lt;em&gt;Import...&lt;/em&gt;, navigate to the configuration file and open it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now the Flameshot entry should appear in the list. Click &lt;em&gt;Apply&lt;/em&gt; to apply the changes.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you want to change the default hotkeys, you can expand the entry, select the appropriate action and modify it as you wish; the process is pretty self-explanatory.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you installed Flameshot as a Flatpak, you will need to create a symlink to the command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;ln -s /var/lib/flatpak/exports/bin/org.flameshot.Flameshot ~/.local/bin/flameshot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;On Ubuntu (Tested 22.04)&lt;/h4&gt; &#xA;&lt;p&gt;To use Flameshot instead of the default screenshot application in Ubuntu we need to remove the binding on &lt;kbd&gt;Prt Sc&lt;/kbd&gt; key, and then create a new binding for &lt;code&gt;/usr/bin/flameshot gui&lt;/code&gt; (&lt;a href=&#34;https://askubuntu.com/posts/1039949/revisions&#34;&gt;adapted&lt;/a&gt; from &lt;a href=&#34;https://askubuntu.com/revisions/1036473/1&#34;&gt;Pavel&#39;s answer on AskUbuntu&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Remove the binding on &lt;kbd&gt;Prt Sc&lt;/kbd&gt;:&lt;/p&gt; &lt;p&gt;Ubuntu 22.04: Go to &lt;em&gt;Settings&lt;/em&gt; &amp;gt; &lt;em&gt;Keyboard&lt;/em&gt; &amp;gt; &lt;em&gt;View and Customise Shortcuts&lt;/em&gt; &amp;gt; &lt;em&gt;Screenshots&lt;/em&gt; &amp;gt; &lt;em&gt;Take a screenshot interactively&lt;/em&gt; and press &lt;code&gt;backspace&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add custom binding on &lt;kbd&gt;Prt Sc&lt;/kbd&gt;:&lt;/p&gt; &lt;p&gt;Ubuntu 22.04: Go to &lt;em&gt;Settings&lt;/em&gt; &amp;gt; &lt;em&gt;Keyboard&lt;/em&gt; &amp;gt; &lt;em&gt;View and Customise Shortcuts&lt;/em&gt; &amp;gt; &lt;em&gt;Custom shortcuts&lt;/em&gt; and press the &#39;+&#39; button at the bottom.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Name the command as you like it, e.g. &lt;code&gt;flameshot&lt;/code&gt;. And in the command insert &lt;code&gt;/usr/bin/flameshot gui&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Then click &#34;&lt;em&gt;Set Shortcut..&lt;/em&gt;&#34; and press &lt;kbd&gt;Prt Sc&lt;/kbd&gt;. This will show as &#34;&lt;em&gt;print&lt;/em&gt;&#34;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Now every time you press &lt;kbd&gt;Prt Sc&lt;/kbd&gt;, it will start the Flameshot GUI instead of the default application.&lt;/p&gt; &#xA;&lt;h4&gt;On XFCE 4&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to &lt;code&gt;Keyboard&lt;/code&gt; settings&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Switch to the tab &lt;code&gt;Application Shortcuts&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Find the entry&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Command                        Shortcut&#xA;xfce4-screenshooter -fd 1      Print&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Replace &lt;code&gt;xfce4-screenshooter -fd 1&lt;/code&gt; with &lt;code&gt;flameshot gui&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Now every time you press &lt;kbd&gt;Prt Sc&lt;/kbd&gt; it will start Flameshot GUI instead of the default application.&lt;/p&gt; &#xA;&lt;h4&gt;On Fluxbox&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Edit your &lt;code&gt;~/.fluxbox/keys&lt;/code&gt; file&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add a new entry. &lt;code&gt;Print&lt;/code&gt; is the key name, &lt;code&gt;flameshot gui&lt;/code&gt; is the shell command; for more options see &lt;a href=&#34;https://sillyslux.github.io/fluxbox-wiki/en/wiki/Keyboard-Shortcuts/&#34;&gt;the fluxbox wiki&lt;/a&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Print :Exec flameshot gui&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Refresh Fluxbox configuration with &lt;strong&gt;Reconfigure&lt;/strong&gt; option from the menu.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Considerations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Experimental Gnome Wayland and Plasma Wayland support.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you are using Gnome you need to install the &lt;a href=&#34;https://extensions.gnome.org/extension/615/appindicator-support/&#34;&gt;AppIndicator and KStatusNotifierItem Support&lt;/a&gt; extension in order to see the system tray icon.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Press &lt;kbd&gt;Enter&lt;/kbd&gt; or &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;C&lt;/kbd&gt; when you are in a capture mode and you don&#39;t have an active selection and the whole desktop will be copied to your clipboard. Pressing &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;S&lt;/kbd&gt; will save your capture to a file. Check the &lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#keyboard-shortcuts&#34;&gt;Shortcuts&lt;/a&gt; for more information.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Flameshot works best with a desktop environment that includes D-Bus. See this &lt;a href=&#34;https://wiki.archlinux.org/index.php/Flameshot#Troubleshooting&#34;&gt;article&lt;/a&gt; for tips on using Flameshot in a minimal window manager (dwm, i3, xmonad, etc).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In order to speed up the first launch of Flameshot (D-Bus init of the app can be slow), consider starting the application automatically on boot.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Quick tip: If you don&#39;t have Flameshot to autostart at boot and you want to set keyboard shortcut, use the following as the command for the keybinding:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;( flameshot &amp;amp;; ) &amp;amp;&amp;amp; ( sleep 0.5s &amp;amp;&amp;amp; flameshot gui )&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Flameshot can be installed on Linux, Microsoft Windows, and macOS.&lt;/p&gt; &#xA;&lt;h3&gt;Prebuilt packages&lt;/h3&gt; &#xA;&lt;p&gt;Some prebuilt packages are provided on &lt;a href=&#34;https://github.com/flameshot-org/flameshot/releases&#34;&gt;the release page of the GitHub project repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Packages from Repository&lt;/h3&gt; &#xA;&lt;p&gt;There are packages available in the repository of some Linux distributions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://archlinux.org/packages/extra/x86_64/flameshot/&#34;&gt;Arch&lt;/a&gt;: &lt;code&gt;pacman -S flameshot&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Snapshot also available via AUR: &lt;a href=&#34;https://aur.archlinux.org/packages/flameshot-git&#34;&gt;flameshot-git&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tracker.debian.org/pkg/flameshot&#34;&gt;Debian 10+&lt;/a&gt;: &lt;code&gt;apt install flameshot&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Package for Debian 9 (&#34;Stretch&#34;) also &lt;a href=&#34;https://backports.debian.org/&#34;&gt;available via stretch-backports&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://launchpad.net/ubuntu/+source/flameshot&#34;&gt;Ubuntu&lt;/a&gt;: &lt;code&gt;apt install flameshot&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://software.opensuse.org/package/flameshot&#34;&gt;openSUSE&lt;/a&gt;: &lt;code&gt;zypper install flameshot&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/void-linux/void-packages/tree/master/srcpkgs/flameshot&#34;&gt;Void Linux&lt;/a&gt;: &lt;code&gt;xbps-install flameshot&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.getsol.us/source/flameshot/&#34;&gt;Solus&lt;/a&gt;: &lt;code&gt;eopkg it flameshot&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://src.fedoraproject.org/rpms/flameshot&#34;&gt;Fedora&lt;/a&gt;: &lt;code&gt;dnf install flameshot&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://search.nixos.org/packages?query=flameshot&#34;&gt;NixOS&lt;/a&gt;: &lt;code&gt;nix-env -iA nixos.flameshot&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://packages.altlinux.org/en/sisyphus/srpms/flameshot/&#34;&gt;ALT&lt;/a&gt;: &lt;code&gt;su - -c &#34;apt-get install flameshot&#34;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flameshotapp/packages&#34;&gt;Snap/Flatpak/AppImage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ManuelLR/docker-flameshot&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/majkinetor/au-packages/tree/master/flameshot&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macports.org&#34;&gt;MacPorts&lt;/a&gt;: &lt;code&gt;sudo port selfupdate &amp;amp;&amp;amp; sudo port install flameshot&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;: &lt;code&gt;brew install --cask flameshot&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; that because of macOS security features, you may not be able to open flameshot when installed using brew. If you see the message &lt;code&gt;“flameshot” cannot be opened because the developer cannot be verified.&lt;/code&gt; you will need to follow the steps below:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to the Applications folder (Finder &amp;gt; Go &amp;gt; Applications, or &lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;Command&lt;/kbd&gt;+&lt;kbd&gt;A&lt;/kbd&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Right-Click on &#34;flameshot.app&#34; and choose &#34;Open&#34; from the context menu&lt;/li&gt; &#xA; &lt;li&gt;In the dialog click &#34;Open&#34;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;After following all those steps above, &lt;code&gt;flameshot&lt;/code&gt; will open without problems in your Mac.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chocolatey.org/packages/flameshot&#34;&gt;Chocolatey&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Expand this section to see what distros are using an up to date version of flameshot&lt;/summary&gt; &#xA; &lt;a href=&#34;https://repology.org/metapackage/flameshot/versions&#34;&gt; &lt;img src=&#34;https://repology.org/badge/vertical-allrepos/flameshot.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt; &lt;/a&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Tray icon&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; that for the Flameshot icon to appear in your tray area, you should have a systray software installed. This is especially true for users who use minimal &lt;a href=&#34;https://wiki.archlinux.org/index.php/window_manager&#34;&gt;window managers&lt;/a&gt; such as &lt;a href=&#34;https://dwm.suckless.org/&#34;&gt;dwm&lt;/a&gt;. In some &lt;a href=&#34;https://wiki.archlinux.org/index.php/Desktop_environment&#34;&gt;Desktop Environment&lt;/a&gt; installations (e.g Gnome), the systray might be missing and you can install an application or plugin (e.g &lt;a href=&#34;https://extensions.gnome.org/extension/1503/tray-icons/&#34;&gt;Gnome shell extension&lt;/a&gt;) to add the systray to your setup. It has been &lt;a href=&#34;https://github.com/flameshot-org/flameshot/issues/1009#issuecomment-700781081&#34;&gt;reported&lt;/a&gt;) that icon of some software, including Flameshot, does not show in &lt;a href=&#34;https://github.com/ubuntu/gnome-shell-extension-appindicator&#34;&gt;gnome-shell-extension-appindicator&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, in case you don&#39;t want to have a systray, you can always call Flameshot from the terminal. See &lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#usage&#34;&gt;Usage section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Compilation&lt;/h2&gt; &#xA;&lt;p&gt;To build the application in your system, you&#39;ll need to install the dependencies needed for it and package names might be different for each distribution, see &lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/#dependencies&#34;&gt;Dependencies&lt;/a&gt; below for more information. You can also install most of the Qt dependencies via &lt;a href=&#34;https://www.qt.io/download-qt-installer&#34;&gt;their installer&lt;/a&gt;. If you were developing Qt apps before, you probably already have them.&lt;/p&gt; &#xA;&lt;p&gt;This project uses &lt;a href=&#34;https://cmake.org/&#34;&gt;CMake&lt;/a&gt; build system, so you need to install it in order to build the project (on most Linux distributions it is available in the standard repositories as a package called &lt;code&gt;cmake&lt;/code&gt;). If your distribution provides too old version of CMake (e.g. Ubuntu or Debian) you can &lt;a href=&#34;https://cmake.org/download/&#34;&gt;download it on the official website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also you can open and build/debug the project in a C++ IDE. For example, in Qt Creator you should be able to simply open &lt;code&gt;CMakeLists.txt&lt;/code&gt; via &lt;code&gt;Open File or Project&lt;/code&gt; in the menu after installing CMake into your system. &lt;a href=&#34;https://doc.qt.io/qtcreator/creator-project-cmake.html&#34;&gt;More information about CMake projects in Qt Creator&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;h4&gt;Compile-time&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Qt &amp;gt;= 5.9 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Development tools&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;GCC &amp;gt;= 7.4&lt;/li&gt; &#xA; &lt;li&gt;CMake &amp;gt;= 3.29&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Run-time&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Qt &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;SVG&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Optional&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Git&lt;/li&gt; &#xA; &lt;li&gt;OpenSSL&lt;/li&gt; &#xA; &lt;li&gt;CA Certificates&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Debian&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Compile-time&#xA;apt install g++ cmake build-essential qtbase5-dev qttools5-dev-tools libqt5svg5-dev qttools5-dev&#xA;&#xA;# Run-time&#xA;apt install libqt5dbus5 libqt5network5 libqt5core5a libqt5widgets5 libqt5gui5 libqt5svg5&#xA;&#xA;# Optional&#xA;apt install git openssl ca-certificates&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Fedora&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Compile-time&#xA;dnf install gcc-c++ cmake qt5-qtbase-devel qt5-linguist&#xA;&#xA;# Run-time&#xA;dnf install qt5-qtbase qt5-qtsvg-devel&#xA;&#xA;# Optional&#xA;dnf install git openssl ca-certificates&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Arch&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Compile-time&#xA;pacman -S cmake base-devel git qt5-base qt5-tools&#xA;&#xA;# Run-time&#xA;pacman -S qt5-svg&#xA;&#xA;# Optional&#xA;pacman -S openssl ca-certificates&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;NixOS&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;nix-shell&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;macOS&lt;/h4&gt; &#xA;&lt;p&gt;First of all you need to install &lt;a href=&#34;https://brew.sh&#34;&gt;brew&lt;/a&gt; and then install the dependencies&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew install qt5&#xA;brew install cmake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build&lt;/h3&gt; &#xA;&lt;p&gt;After installing all the dependencies, Flameshot can be built.&lt;/p&gt; &#xA;&lt;h4&gt;Installation/build dir&lt;/h4&gt; &#xA;&lt;p&gt;For the translations to be loaded correctly, the build process needs to be aware of where you want to install Flameshot.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Directory where build files will be placed, may be relative&#xA;export BUILD_DIR=build&#xA;&#xA;# Directory prefix where Flameshot will be installed. If you are just building and don&#39;t want to&#xA;# install, comment this environment variable.&#xA;# This excludes the bin/flameshot part of the install,&#xA;# e.g. in /opt/flameshot/bin/flameshot, the CMAKE_INSTALL_PREFIX is /opt/flameshot&#xA;# This must be an absolute path. Requires CMAKE 3.29.&#xA;export CMAKE_INSTALL_PREFIX=/opt/flameshot&#xA;&#xA;# Linux&#xA;cmake -S . -B &#34;$BUILD_DIR&#34; \&#xA;    &amp;amp;&amp;amp; cmake --build &#34;$BUILD_DIR&#34;&#xA;&#xA;#MacOS&#xA;cmake -S . -B &#34;$BUILD_DIR&#34; \&#xA;    -DQt5_DIR=&#34;$(brew --prefix qt5)/lib/cmake/Qt5&#34; \&#xA;    &amp;amp;&amp;amp; cmake --build &#34;$BUILD_DIR&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When the &lt;code&gt;cmake --build&lt;/code&gt; command has completed you can launch Flameshot from the &lt;code&gt;project_folder/build/src&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;p&gt;Note that if you install from source, there &lt;em&gt;is no&lt;/em&gt; uninstaller, so consider installing to a custom directory.&lt;/p&gt; &#xA;&lt;h4&gt;To install into a custom directory&lt;/h4&gt; &#xA;&lt;p&gt;Make sure you are using cmake &lt;code&gt;&amp;gt;= 3.29&lt;/code&gt; and build Flameshot with &lt;code&gt;$CMAKE_INSTALL_PREFIX&lt;/code&gt; set to the installation directory. If this is not done, the translations won&#39;t be found when using a custom directory. Then, run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# !Build with CMAKE_INSTALL_PREFIX and use cmake &amp;gt;= 3.29! Using an older cmake will cause&#xA;# installation into the default /usr/local dir.&#xA;&#xA;# You may need to run this with privileges&#xA;cmake --install &#34;$BUILD_DIR&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;To install to the default install directory&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# You may need to run this with privileges&#xA;cmake --install &#34;$BUILD_DIR&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;FAQ&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://flameshot.org/docs/guide/faq/&#34;&gt;https://flameshot.org/docs/guide/faq/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The main code is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/LICENSE&#34;&gt;GPLv3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The logo of Flameshot is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/data/img/app/flameshotLogoLicense.txt&#34;&gt;Free Art License v1.3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The button icons are licensed under Apache License 2.0. See: &lt;a href=&#34;https://github.com/google/material-design-icons&#34;&gt;https://github.com/google/material-design-icons&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The code at capture/capturewidget.cpp is based on &lt;a href=&#34;https://github.com/ckaiser/Lightscreen/raw/master/dialogs/areadialog.cpp&#34;&gt;https://github.com/ckaiser/Lightscreen/blob/master/dialogs/areadialog.cpp&lt;/a&gt; (GPLv2)&lt;/li&gt; &#xA; &lt;li&gt;The code at capture/capturewidget.h is based on &lt;a href=&#34;https://github.com/ckaiser/Lightscreen/raw/master/dialogs/areadialog.h&#34;&gt;https://github.com/ckaiser/Lightscreen/blob/master/dialogs/areadialog.h&lt;/a&gt; (GPLv2)&lt;/li&gt; &#xA; &lt;li&gt;I copied a few lines of code from KSnapshot regiongrabber.cpp revision &lt;code&gt;796531&lt;/code&gt; (LGPL)&lt;/li&gt; &#xA; &lt;li&gt;Qt-Color-Widgets taken and modified from &lt;a href=&#34;https://github.com/mbasaglia/Qt-Color-Widgets&#34;&gt;https://github.com/mbasaglia/Qt-Color-Widgets&lt;/a&gt; (see their license and exceptions in the project) (LGPL/GPL)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Info: If I take code from your project and that implies a relicense to GPLv3, you can reuse my changes with the original previous license of your project applied.&lt;/p&gt; &#xA;&lt;h2&gt;Privacy Policy&lt;/h2&gt; &#xA;&lt;p&gt;This program will not transfer any information to other networked systems unless specifically requested by the user or the person installing or operating it.&lt;/p&gt; &#xA;&lt;h2&gt;Code Signing Policy&lt;/h2&gt; &#xA;&lt;p&gt;For Windows binaries, this program uses free code signing provided by &lt;a href=&#34;https://signpath.io?utm_source=foundation&amp;amp;utm_medium=github&amp;amp;utm_campaign=flameshot&#34;&gt;SignPath.io&lt;/a&gt;, and a certificate by the &lt;a href=&#34;https://signpath.org?utm_source=foundation&amp;amp;utm_medium=github&amp;amp;utm_campaign=flameshot&#34;&gt;SignPath Foundation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Code signing is currently a manual process so not every patch release will be signed.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;If you want to contribute check the &lt;a href=&#34;https://raw.githubusercontent.com/flameshot-org/flameshot/master/docs/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgment&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to those who have shown interest in the early development process:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lupoDharkael&#34;&gt;lupoDharkael&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/philpem&#34;&gt;Cosmo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/XerTheSquirrel&#34;&gt;XerTheSquirrel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SUGUS-GNULinux&#34;&gt;The members of Sugus GNU/Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ismatori&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thanks to sponsors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.namecheap.com/&#34;&gt;Namecheap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jetbrains.com/&#34;&gt;JetBrains&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://signpath.io/&#34;&gt;SignPath&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://addy.io/&#34;&gt;addy.io&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>project-chip/connectedhomeip</title>
    <updated>2025-06-01T01:38:17Z</updated>
    <id>tag:github.com,2025-06-01:/project-chip/connectedhomeip</id>
    <link href="https://github.com/project-chip/connectedhomeip" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Matter (formerly Project CHIP) creates more connections between more objects, simplifying development for manufacturers and increasing compatibility for consumers, guided by the Connectivity Standards Alliance.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Matter&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/build.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Builds/badge.svg?sanitize=true&#34; alt=&#34;Builds&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Builds&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/android.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Android/badge.svg?sanitize=true&#34; alt=&#34;Android&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-ameba.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20Ameba/badge.svg?sanitize=true&#34; alt=&#34;Ameba&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-asr.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20ASR/badge.svg?sanitize=true&#34; alt=&#34;ASR&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-bouffalolab.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20BouffaloLab/badge.svg?sanitize=true&#34; alt=&#34;BouffaloLab&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/raw/master/.github/workflows/darwin.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Darwin/badge.svg?sanitize=true&#34; alt=&#34;Darwin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-cc13xx_26xx.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20TI%20CC13XX_26XX/badge.svg?sanitize=true&#34; alt=&#34;TI CC26X2X7&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-cc32xx.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20TI%20CC32XX/badge.svg?sanitize=true&#34; alt=&#34;TI CC32XX&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-efr32.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20EFR32/badge.svg?sanitize=true&#34; alt=&#34;EFR32&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-esp32.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20ESP32/badge.svg?sanitize=true&#34; alt=&#34;ESP32&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-infineon.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-infineon.yaml/badge.svg?sanitize=true&#34; alt=&#34;Infineon&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-linux-imx.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20i.MX%20Linux/badge.svg?sanitize=true&#34; alt=&#34;i.MX Linux&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-k32w.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20K32W%20with%20SE051/badge.svg?sanitize=true&#34; alt=&#34;K32W with SE051&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-linux-arm.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20Linux%20ARM/badge.svg?sanitize=true&#34; alt=&#34;Linux ARM&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-linux-standalone.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20Linux%20Standalone/badge.svg?sanitize=true&#34; alt=&#34;Linux Standalone&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-linux-standalone.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20Linux%20Standalone/badge.svg?sanitize=true&#34; alt=&#34;Linux Standalone&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-mbed.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20Mbed%20OS/badge.svg?sanitize=true&#34; alt=&#34;Mbed OS&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-mw320.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20MW320/badge.svg?sanitize=true&#34; alt=&#34;MW320&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-nrfconnect.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20nRF%20Connect%20SDK/badge.svg?sanitize=true&#34; alt=&#34;nRF Connect SDK&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-openiotsdk.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20Open%20IoT%20SDK/badge.svg?sanitize=true&#34; alt=&#34;Open IoT SDK&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-qpg.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20QPG/badge.svg?sanitize=true&#34; alt=&#34;QPG&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-stm32.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20stm32/badge.svg?sanitize=true&#34; alt=&#34;STM32&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-telink.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20Telink/badge.svg?sanitize=true&#34; alt=&#34;Telink&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/examples-tizen.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Build%20example%20-%20Tizen/badge.svg?sanitize=true&#34; alt=&#34;Tizen&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tests&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/unit_integration_test.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Unit%20/%20Integration%20Tests/badge.svg?sanitize=true&#34; alt=&#34;Unit / Integration Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/cirque.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/Cirque/badge.svg?sanitize=true&#34; alt=&#34;Cirque&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/qemu.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/QEMU/badge.svg?sanitize=true&#34; alt=&#34;QEMU&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://matter-build-automation.ue.r.appspot.com/&#34;&gt;Matter SDK Coverage Report&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/zap_templates.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/workflows/ZAP/badge.svg?sanitize=true&#34; alt=&#34;ZAP Templates&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/docbuild.yaml&#34;&gt;&lt;img src=&#34;https://github.com/project-chip/connectedhomeip/actions/workflows/docbuild.yaml/badge.svg?sanitize=true&#34; alt=&#34;Documentation Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://deepwiki.com/project-chip/connectedhomeip&#34;&gt;&lt;img src=&#34;https://deepwiki.com/badge.svg?sanitize=true&#34; alt=&#34;Ask DeepWiki&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://project-chip.github.io/connectedhomeip-doc/index.html&#34;&gt;Matter SDK documentation page&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;About&lt;/h1&gt; &#xA;&lt;p&gt;Matter (formerly Project CHIP) creates more connections between more objects, simplifying development for manufacturers and increasing compatibility for consumers, guided by the Connectivity Standards Alliance.&lt;/p&gt; &#xA;&lt;h1&gt;What is Matter?&lt;/h1&gt; &#xA;&lt;p&gt;Matter is a unified, open-source application-layer connectivity standard built to enable developers and device manufacturers to connect and build reliable, and secure ecosystems and increase compatibility among connected home devices. It is built with market-proven technologies using Internet Protocol (IP) and is compatible with Thread and Wi-Fi network transports. Matter was developed by a Working Group within the Connectivity Standards Alliance (Alliance). This Working Group develops and promotes the adoption of the Matter standard, a royalty-free connectivity standard to increase compatibility among smart home products, with security as a fundamental design tenet. The vision that led major industry players to come together to build Matter is that smart connectivity should be simple, reliable, and interoperable.&lt;/p&gt; &#xA;&lt;p&gt;Matter simplifies development for manufacturers and increases compatibility for consumers.&lt;/p&gt; &#xA;&lt;p&gt;The standard was built around a shared belief that smart home devices should be secure, reliable, and seamless to use. By building upon Internet Protocol (IP), Matter enables communication across smart home devices, mobile apps, and cloud services and defines a specific set of IP-based networking technologies for device certification.&lt;/p&gt; &#xA;&lt;p&gt;The Matter specification details everything necessary to implement a Matter application and transport layer stack. It is intended to be used by implementers as a complete specification.&lt;/p&gt; &#xA;&lt;p&gt;The Alliance officially opened the Matter Working Group on January 17, 2020, and the specification is &lt;a href=&#34;https://csa-iot.org/developer-resource/specifications-download-request/&#34;&gt;available&lt;/a&gt; for adoption now.&lt;/p&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://buildwithmatter.com&#34;&gt;buildwithmatter.com&lt;/a&gt; to learn more and read the latest news and updates about the project.&lt;/p&gt; &#xA;&lt;h1&gt;Project Overview&lt;/h1&gt; &#xA;&lt;h2&gt;Development Goals&lt;/h2&gt; &#xA;&lt;p&gt;Matter is developed with the following goals and principles in mind:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Unifying:&lt;/strong&gt; Matter is built with and on top of market-tested, existing technologies.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Interoperable:&lt;/strong&gt; The specification permits communication between any Matter-certified device, subject to users’ permission.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Secure:&lt;/strong&gt; The specification leverages modern security practices and protocols.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;User Control:&lt;/strong&gt; The end user controls authorization for interaction with devices.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Federated:&lt;/strong&gt; No single entity serves as a throttle or a single point of failure for root of trust.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Robust:&lt;/strong&gt; The set of protocols specifies a complete lifecycle of a device — starting with the seamless out-of-box experience, through operational protocols, to device and system management specifications required for proper function in the presence of change.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Low Overhead:&lt;/strong&gt; The protocols are practically implementable on low compute-resource devices, such as MCUs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Pervasive:&lt;/strong&gt; The protocols are broadly deployable and accessible, by leveraging IP and being implementable on low-capability devices.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ecosystem-Flexible:&lt;/strong&gt; The protocol is flexible enough to accommodate deployment in ecosystems with differing policies.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Easy to Use:&lt;/strong&gt; The protocol provides smooth, cohesive, integrated provisioning and out-of-box experience.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Open:&lt;/strong&gt; The Project’s design and technical processes are open and transparent to the general public, including non-members wherever possible.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture Overview&lt;/h2&gt; &#xA;&lt;p&gt;Matter aims to build a universal IPv6-based communication protocol for smart home devices. The protocol defines the application layer that will be deployed on devices and the different link layers to help maintain interoperability. The following diagram illustrates the normal operational mode of the stack: &lt;img src=&#34;https://raw.githubusercontent.com/project-chip/connectedhomeip/master/docs/images/Matter_Arch_Overview.png&#34; alt=&#34;Matter Architecture Overview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The architecture is divided into layers to help separate the different responsibilities and introduce a good level of encapsulation among the various pieces of the protocol stack. The vast majority of interactions flow through the stack captured in the following Figure:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/project-chip/connectedhomeip/master/docs/images/Matter_Layered_Arch.png&#34; alt=&#34;Matter Stack Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Application:&lt;/strong&gt; High-order business logic of a device. For example, an application that is focused on lighting might contain logic to handle turning on/off the bulb as well as its color characteristics.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Data Model:&lt;/strong&gt; The data layer corresponds to the data and verb elements that help support the functionality of the application. The Application operates on these data structures when there is an intent to interact with the device.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Interaction Model:&lt;/strong&gt; The Interaction Model layer defines a set of interactions that can be performed between a client and server device. For example, reading or writing attributes on a server device would correspond to application behavior on the device. These interactions operate on the elements defined at the data model layer.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Action Framing:&lt;/strong&gt; Once an action is constructed using the Interaction Model, it is serialized into a prescribed packed binary format to encode for network transmission.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Security:&lt;/strong&gt; An encoded action frame is then sent down to the Security Layer to encrypt and sign the payload to ensure that data is secured and authenticated by both sender and receiver of a packet.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Message Framing &amp;amp; Routing:&lt;/strong&gt; With an interaction encrypted and signed, the Message Layer constructs the payload format with required and optional header fields; which specify the message&#39;s properties and some routing information.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;IP Framing &amp;amp; Transport Management:&lt;/strong&gt; After the final payload has been constructed, it is sent to the underlying transport protocol for IP management of the data.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Current Status of Matter&lt;/h1&gt; &#xA;&lt;p&gt;Matter’s design and technical processes are intended to be open and transparent to the general public, including to Working Group non-members wherever possible. The availability of this GitHub repository and its source code under an Apache v2 license is an important and demonstrable step to achieving this commitment. Matter endeavors to bring together the best aspects of market-tested technologies and redeploy them as a unified and cohesive whole-system solution. The overall goal of this approach is to bring the benefits of Matter to consumers and manufacturers as quickly as possible. As a result, what you observe in this repository is an implementation-first approach to the technical specification, vetting integrations in practice. The Matter repository is growing and evolving to implement the overall architecture. The repository currently contains the security foundations, message framing and dispatch, and an implementation of the interaction model and data model. The code examples show simple interactions, and are supported on multiple transports -- Wi-Fi and Thread -- starting with resource-constrained (i.e., memory, processing) silicon platforms to help ensure Matter’s scalability.&lt;/p&gt; &#xA;&lt;h1&gt;How to Contribute&lt;/h1&gt; &#xA;&lt;p&gt;We welcome your contributions to Matter. Read our contribution guidelines &lt;a href=&#34;https://raw.githubusercontent.com/project-chip/connectedhomeip/master/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Building and Developing in Matter&lt;/h1&gt; &#xA;&lt;p&gt;Instructions about how to build Matter can be found &lt;a href=&#34;https://raw.githubusercontent.com/project-chip/connectedhomeip/master/docs/README.md&#34;&gt;here&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;h1&gt;Directory Structure&lt;/h1&gt; &#xA;&lt;p&gt;The Matter repository is structured as follows:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;File/Folder&lt;/th&gt; &#xA;   &lt;th&gt;Content&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;build&lt;/td&gt; &#xA;   &lt;td&gt;Build system support content and built output directories&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;build_overrides&lt;/td&gt; &#xA;   &lt;td&gt;Build system parameter customization for different platforms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;config&lt;/td&gt; &#xA;   &lt;td&gt;Project configurations&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;credentials&lt;/td&gt; &#xA;   &lt;td&gt;Development and test credentials&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;docs&lt;/td&gt; &#xA;   &lt;td&gt;Documentation, including guides. Visit the &lt;a href=&#34;https://project-chip.github.io/connectedhomeip-doc/index.html&#34;&gt;Matter SDK documentation page&lt;/a&gt; to read it.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;examples&lt;/td&gt; &#xA;   &lt;td&gt;Example firmware applications that demonstrate use of Matter&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;integrations&lt;/td&gt; &#xA;   &lt;td&gt;3rd party integrations&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;scripts&lt;/td&gt; &#xA;   &lt;td&gt;Scripts needed to work with the Matter repository&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;src&lt;/td&gt; &#xA;   &lt;td&gt;Implementation of Matter&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;third_party&lt;/td&gt; &#xA;   &lt;td&gt;3rd party code used by Matter&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;zzz_generated&lt;/td&gt; &#xA;   &lt;td&gt;ZAP generated template code - Revolving around cluster information&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BUILD.gn&lt;/td&gt; &#xA;   &lt;td&gt;Build file for the GN build system&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CODE_OF_CONDUCT.md&lt;/td&gt; &#xA;   &lt;td&gt;Code of conduct for Matter and contribution to it&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CONTRIBUTING.md&lt;/td&gt; &#xA;   &lt;td&gt;Guidelines for contributing to Matter&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LICENSE&lt;/td&gt; &#xA;   &lt;td&gt;Matter license file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;REVIEWERS.md&lt;/td&gt; &#xA;   &lt;td&gt;PR reviewers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gn_build.sh&lt;/td&gt; &#xA;   &lt;td&gt;Build script for specific projects such as Android, EFR32, etc.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;README.md&lt;/td&gt; &#xA;   &lt;td&gt;This file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Matter is released under the &lt;a href=&#34;https://raw.githubusercontent.com/project-chip/connectedhomeip/master/LICENSE&#34;&gt;Apache 2.0 license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>