<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-20T01:44:09Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>THUDM/AgentBench</title>
    <updated>2023-08-20T01:44:09Z</updated>
    <id>tag:github.com,2023-08-20:/THUDM/AgentBench</id>
    <link href="https://github.com/THUDM/AgentBench" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Comprehensive Benchmark to Evaluate LLMs as Agents&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/assets/cover.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://llmbench.ai&#34; target=&#34;_blank&#34;&gt;üåê Website&lt;/a&gt; | &lt;a href=&#34;https://twitter.com/thukeg&#34; target=&#34;_blank&#34;&gt;üê¶ Twitter&lt;/a&gt; | &lt;a href=&#34;mailto:agentbench@googlegroups.com&#34;&gt;‚úâÔ∏è Google Group&lt;/a&gt; | &lt;a href=&#34;https://arxiv.org/abs/2308.03688&#34; target=&#34;_blank&#34;&gt;üìÉ Paper &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; üëã Join our &lt;a href=&#34;https://join.slack.com/t/agentbenchcol-huw1944/shared_invite/zt-20ixabcuv-31cFLBAkqGQxQkJqrWVEVg&#34; target=&#34;_blank&#34;&gt;Slack&lt;/a&gt; for &lt;i&gt;Q &amp;amp; A&lt;/i&gt; or &lt;i&gt;&lt;b&gt;collaboration&lt;/b&gt; on AgentBench v2.0&lt;/i&gt;! &lt;/p&gt; &#xA;&lt;h1&gt;AgentBench: Evaluating LLMs as Agents&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/THUDM/AgentBench/assets/129033897/656eed6e-d9d9-4d07-b568-f43f5a451f04&#34;&gt;https://github.com/THUDM/AgentBench/assets/129033897/656eed6e-d9d9-4d07-b568-f43f5a451f04&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;AgentBench&lt;/strong&gt; is the first benchmark designed to evaluate &lt;strong&gt;LLM-as-Agent&lt;/strong&gt; across a diverse spectrum of different environments. It encompasses 8 distinct environments to provide a more comprehensive evaluation of the LLMs&#39; ability to operate as autonomous agents in various scenarios. These environments include 5 freshly created domains, namely&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Operating System (OS)&lt;/li&gt; &#xA; &lt;li&gt;Database (DB)&lt;/li&gt; &#xA; &lt;li&gt;Knowledge Graph (KG)&lt;/li&gt; &#xA; &lt;li&gt;Digital Card Game (DCG)&lt;/li&gt; &#xA; &lt;li&gt;Lateral Thinking Puzzles (LTP)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;as well as 3 recompiled from published datasets:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;House-Holding (HH) (&lt;a href=&#34;https://github.com/alfworld/alfworld&#34;&gt;ALFWorld&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Web Shopping (WS) (&lt;a href=&#34;https://github.com/princeton-nlp/webshop&#34;&gt;WebShop&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Web Browsing (WB) (&lt;a href=&#34;https://github.com/OSU-NLP-Group/Mind2Web&#34;&gt;Mind2Web&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/assets/agentbench.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/#dataset-summary&#34;&gt;Dataset Summary&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/#leaderboard&#34;&gt;Leaderboard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/#quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/#tutorial&#34;&gt;Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/#citation&#34;&gt;Citation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Dataset Summary&lt;/h2&gt; &#xA;&lt;p&gt;We offer three splits for each dataset: Dev, Test, and Extend. Dev is fully public, while Test and Extend are private. In designing AgentBench, we balance evaluation thoroughness and efficiency. Though the number of problems in Dev and Test may seem small at 289 and 1,141, the multi-turn interaction requires an LLMs to generate around 4k and 13k times, making the testing time-consuming.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/assets/statistics.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Leaderboard&lt;/h2&gt; &#xA;&lt;p&gt;Here is the scores on test set (standard) results of AgentBench.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/assets/leaderboard.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;While LLMs begin to manifest their proficiency in LLM-as-Agent, gaps between models and the distance towards practical usability are significant.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/assets/intro.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Xlsx-format leaderboard data is available &lt;a href=&#34;https://github.com/THUDM/AgentBench/raw/main/assets/agentbench_leaderboard-230808.xlsx&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;To quickly understand how the framework works, you can follow the instructions below to run a simple evaluation.&lt;/p&gt; &#xA;&lt;h3&gt;Step 1. Clone this repo and run the following command to install the requirements:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install --upgrade pip&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 2. Verify that you have successfully installed the requirements by running the following command:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python eval.py \&#xA;    --task configs/tasks/example.yaml \&#xA;    --agent configs/agents/do_nothing.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 3. Run Example Assignment&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;HINT: Example Assigment is composed of &lt;code&gt;gpt-3.5-turbo&lt;/code&gt; and &lt;code&gt;ExampleTask&lt;/code&gt; defined in &lt;a href=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/src/tasks/example_task.py&#34;&gt;&lt;code&gt;src/tasks/example_task.py&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You need to fill your &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;OPENAI KEY&lt;/a&gt; in &lt;code&gt;configs/assignments/example.yaml&lt;/code&gt; first.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;Authorization: Bearer &amp;lt;%% PUT-YOUR-OPENAI-KEY-HERE %%&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python create_assignment.py \&#xA;    --assignment configs/assignments/example.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And you can see the target assignment bash script from the output like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;[System] Run the following command to start evaluation:&#xA;    bash .assignments/&amp;lt;TIMESTAMP&amp;gt;.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, run the assignment bash script that displayed in the output to start evaluation. After that, you can check your output in the &lt;code&gt;outputs&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h2&gt;Tutorial&lt;/h2&gt; &#xA;&lt;p&gt;For more detailed instructions and advanced usage, please refer to our &lt;a href=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/docs/tutorial.md&#34;&gt;tutorial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{liu2023agentbench,&#xA;  title   = {AgentBench: Evaluating LLMs as Agents},&#xA;  author  = {Xiao Liu and Hao Yu and Hanchen Zhang and Yifan Xu and Xuanyu Lei and Hanyu Lai and Yu Gu and Hangliang Ding and Kaiwen Men and Kejuan Yang and Shudan Zhang and Xiang Deng and Aohan Zeng and Zhengxiao Du and Chenhui Zhang and Sheng Shen and Tianjun Zhang and Yu Su and Huan Sun and Minlie Huang and Yuxiao Dong and Jie Tang},&#xA;  year    = {2023},&#xA;  journal = {arXiv preprint arXiv: 2308.03688}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>NixOS/nix</title>
    <updated>2023-08-20T01:44:09Z</updated>
    <id>tag:github.com,2023-08-20:/NixOS/nix</id>
    <link href="https://github.com/NixOS/nix" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Nix, the purely functional package manager&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nix&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/nixos&#34;&gt;&lt;img src=&#34;https://opencollective.com/nixos/tiers/supporter/badge.svg?label=Supporters&amp;amp;color=brightgreen&#34; alt=&#34;Open Collective supporters&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/NixOS/nix/actions&#34;&gt;&lt;img src=&#34;https://github.com/NixOS/nix/workflows/Test/badge.svg?sanitize=true&#34; alt=&#34;Test&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Nix is a powerful package manager for Linux and other Unix systems that makes package management reliable and reproducible. Please refer to the &lt;a href=&#34;https://nixos.org/nix/manual&#34;&gt;Nix manual&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;On Linux and macOS the easiest way to install Nix is to run the following shell command (as a user other than root):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ curl -L https://nixos.org/nix/install | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Information on additional installation methods is available on the &lt;a href=&#34;https://nixos.org/download.html&#34;&gt;Nix download page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building And Developing&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://nixos.org/manual/nix/unstable/contributing/hacking.html&#34;&gt;Hacking guide&lt;/a&gt; in our manual for instruction on how to to set up a development environment and build Nix from source.&lt;/p&gt; &#xA;&lt;h2&gt;Additional Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nixos.org/nix/manual&#34;&gt;Nix manual&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hydra.nixos.org/project/nix&#34;&gt;Nix jobsets on hydra.nixos.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discourse.nixos.org/&#34;&gt;NixOS Discourse&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://matrix.to/#/#nix:nixos.org&#34;&gt;Matrix - #nix:nixos.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;irc://irc.libera.chat/#nixos&#34;&gt;IRC - #nixos on libera.chat&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Nix is released under the &lt;a href=&#34;https://raw.githubusercontent.com/NixOS/nix/master/COPYING&#34;&gt;LGPL v2.1&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>abseil/abseil-cpp</title>
    <updated>2023-08-20T01:44:09Z</updated>
    <id>tag:github.com,2023-08-20:/abseil/abseil-cpp</id>
    <link href="https://github.com/abseil/abseil-cpp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Abseil Common Libraries (C++)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Abseil - C++ Common Libraries&lt;/h1&gt; &#xA;&lt;p&gt;The repository contains the Abseil C++ library code. Abseil is an open-source collection of C++ code (compliant to C++14) designed to augment the C++ standard library.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/#about&#34;&gt;About Abseil&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/#quickstart&#34;&gt;Quickstart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/#build&#34;&gt;Building Abseil&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/#support&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/#codemap&#34;&gt;Codemap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/#releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/#links&#34;&gt;Links&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;about&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About Abseil&lt;/h2&gt; &#xA;&lt;p&gt;Abseil is an open-source collection of C++ library code designed to augment the C++ standard library. The Abseil library code is collected from Google&#39;s own C++ code base, has been extensively tested and used in production, and is the same code we depend on in our daily coding lives.&lt;/p&gt; &#xA;&lt;p&gt;In some cases, Abseil provides pieces missing from the C++ standard; in others, Abseil provides alternatives to the standard for special needs we&#39;ve found through usage in the Google code base. We denote those cases clearly within the library code we provide you.&lt;/p&gt; &#xA;&lt;p&gt;Abseil is not meant to be a competitor to the standard library; we&#39;ve just found that many of these utilities serve a purpose within our code base, and we now want to provide those resources to the C++ community as a whole.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;quickstart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;If you want to just get started, make sure you at least run through the &lt;a href=&#34;https://abseil.io/docs/cpp/quickstart&#34;&gt;Abseil Quickstart&lt;/a&gt;. The Quickstart contains information about setting up your development environment, downloading the Abseil code, running tests, and getting a simple binary working.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building Abseil&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bazel.build&#34;&gt;Bazel&lt;/a&gt; and &lt;a href=&#34;https://cmake.org/&#34;&gt;CMake&lt;/a&gt; are the official build systems for Abseil. See the &lt;a href=&#34;https://abseil.io/docs/cpp/quickstart&#34;&gt;quickstart&lt;/a&gt; for more information on building Abseil using the Bazel build system. If you require CMake support, please check the &lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/CMake/README.md&#34;&gt;CMake build instructions&lt;/a&gt; and &lt;a href=&#34;https://abseil.io/docs/cpp/quickstart-cmake&#34;&gt;CMake Quickstart&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;support&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Abseil follows Google&#39;s &lt;a href=&#34;https://opensource.google/documentation/policies/cplusplus-support&#34;&gt;Foundational C++ Support Policy&lt;/a&gt;. See &lt;a href=&#34;https://github.com/google/oss-policies-info/raw/main/foundational-cxx-support-matrix.md&#34;&gt;this table&lt;/a&gt; for a list of currently supported versions compilers, platforms, and build tools.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;codemap&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Codemap&lt;/h2&gt; &#xA;&lt;p&gt;Abseil contains the following C++ library components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/base/&#34;&gt;&lt;code&gt;base&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;base&lt;/code&gt; library contains initialization code and other code which all other Abseil code depends on. Code within &lt;code&gt;base&lt;/code&gt; may not depend on any other code (other than the C++ standard library).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/algorithm/&#34;&gt;&lt;code&gt;algorithm&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;algorithm&lt;/code&gt; library contains additions to the C++ &lt;code&gt;&amp;lt;algorithm&amp;gt;&lt;/code&gt; library and container-based versions of such algorithms.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/cleanup/&#34;&gt;&lt;code&gt;cleanup&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;cleanup&lt;/code&gt; library contains the control-flow-construct-like type &lt;code&gt;absl::Cleanup&lt;/code&gt; which is used for executing a callback on scope exit.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/container/&#34;&gt;&lt;code&gt;container&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;container&lt;/code&gt; library contains additional STL-style containers, including Abseil&#39;s unordered &#34;Swiss table&#34; containers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/crc/&#34;&gt;&lt;code&gt;crc&lt;/code&gt;&lt;/a&gt; The &lt;code&gt;crc&lt;/code&gt; library contains code for computing error-detecting cyclic redundancy checks on data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/debugging/&#34;&gt;&lt;code&gt;debugging&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;debugging&lt;/code&gt; library contains code useful for enabling leak checks, and stacktrace and symbolization utilities.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/flags/&#34;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;flags&lt;/code&gt; library contains code for handling command line flags for libraries and binaries built with Abseil.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/hash/&#34;&gt;&lt;code&gt;hash&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;hash&lt;/code&gt; library contains the hashing framework and default hash functor implementations for hashable types in Abseil.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/log/&#34;&gt;&lt;code&gt;log&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;log&lt;/code&gt; library contains &lt;code&gt;LOG&lt;/code&gt; and &lt;code&gt;CHECK&lt;/code&gt; macros and facilities for writing logged messages out to disk, &lt;code&gt;stderr&lt;/code&gt;, or user-extensible destinations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/memory/&#34;&gt;&lt;code&gt;memory&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;memory&lt;/code&gt; library contains memory management facilities that augment C++&#39;s &lt;code&gt;&amp;lt;memory&amp;gt;&lt;/code&gt; library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/meta/&#34;&gt;&lt;code&gt;meta&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;meta&lt;/code&gt; library contains compatible versions of type checks available within C++14 and C++17 versions of the C++ &lt;code&gt;&amp;lt;type_traits&amp;gt;&lt;/code&gt; library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/numeric/&#34;&gt;&lt;code&gt;numeric&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;numeric&lt;/code&gt; library contains 128-bit integer types as well as implementations of C++20&#39;s bitwise math functions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/profiling/&#34;&gt;&lt;code&gt;profiling&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;profiling&lt;/code&gt; library contains utility code for profiling C++ entities. It is currently a private dependency of other Abseil libraries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/random/&#34;&gt;&lt;code&gt;random&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;random&lt;/code&gt; library contains functions for generating psuedorandom values.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/status/&#34;&gt;&lt;code&gt;status&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;status&lt;/code&gt; library contains abstractions for error handling, specifically &lt;code&gt;absl::Status&lt;/code&gt; and &lt;code&gt;absl::StatusOr&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/strings/&#34;&gt;&lt;code&gt;strings&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;strings&lt;/code&gt; library contains a variety of strings routines and utilities, including a C++14-compatible version of the C++17 &lt;code&gt;std::string_view&lt;/code&gt; type.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/synchronization/&#34;&gt;&lt;code&gt;synchronization&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;synchronization&lt;/code&gt; library contains concurrency primitives (Abseil&#39;s &lt;code&gt;absl::Mutex&lt;/code&gt; class, an alternative to &lt;code&gt;std::mutex&lt;/code&gt;) and a variety of synchronization abstractions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/time/&#34;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;time&lt;/code&gt; library contains abstractions for computing with absolute points in time, durations of time, and formatting and parsing time within time zones.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/types/&#34;&gt;&lt;code&gt;types&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;types&lt;/code&gt; library contains non-container utility types, like a C++14-compatible version of the C++17 &lt;code&gt;std::optional&lt;/code&gt; type.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/absl/utility/&#34;&gt;&lt;code&gt;utility&lt;/code&gt;&lt;/a&gt; &lt;br&gt; The &lt;code&gt;utility&lt;/code&gt; library contains utility and helper code.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;releases&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;Abseil recommends users &#34;live-at-head&#34; (update to the latest commit from the master branch as often as possible). However, we realize this philosophy doesn&#39;t work for every project, so we also provide &lt;a href=&#34;https://github.com/abseil/abseil-cpp/releases&#34;&gt;Long Term Support Releases&lt;/a&gt; to which we backport fixes for severe bugs. See our &lt;a href=&#34;https://abseil.io/about/releases&#34;&gt;release management&lt;/a&gt; document for more details.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The Abseil C++ library is licensed under the terms of the Apache license. See &lt;a href=&#34;https://raw.githubusercontent.com/abseil/abseil-cpp/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;links&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;p&gt;For more information about Abseil:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Consult our &lt;a href=&#34;https://abseil.io/about/intro&#34;&gt;Abseil Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Read &lt;a href=&#34;https://abseil.io/about/philosophy&#34;&gt;Why Adopt Abseil&lt;/a&gt; to understand our design philosophy.&lt;/li&gt; &#xA; &lt;li&gt;Peruse our &lt;a href=&#34;https://abseil.io/about/compatibility&#34;&gt;Abseil Compatibility Guarantees&lt;/a&gt; to understand both what we promise to you, and what we expect of you in return.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>