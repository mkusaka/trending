<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-08T01:47:46Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nomic-ai/gpt4all</title>
    <updated>2023-10-08T01:47:46Z</updated>
    <id>tag:github.com,2023-10-08:/nomic-ai/gpt4all</id>
    <link href="https://github.com/nomic-ai/gpt4all" rel="alternate"></link>
    <summary type="html">&lt;p&gt;gpt4all: open-source LLM chatbots that you can run anywhere&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;GPT4All&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Open-source assistant-style large language models that run locally on your CPU&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;strong&gt;New&lt;/strong&gt;: Now with Nomic Vulkan Universal GPU support. &lt;a href=&#34;https://blog.nomic.ai/posts/gpt4all-gpu-inference-with-vulkan&#34;&gt;Learn more&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://gpt4all.io&#34;&gt;GPT4All Website&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://docs.gpt4all.io&#34;&gt;GPT4All Documentation&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/mGZE39AS3e&#34;&gt;Discord&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://python.langchain.com/en/latest/modules/models/llms/integrations/gpt4all.html&#34;&gt;ü¶úÔ∏èüîó Official Langchain Backend&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; GPT4All is made possible by our compute partner &lt;a href=&#34;https://www.paperspace.com/&#34;&gt;Paperspace&lt;/a&gt;. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;600&#34; height=&#34;365&#34; src=&#34;https://user-images.githubusercontent.com/13879686/231876409-e3de1934-93bb-4b4b-9013-b491a969ebbc.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Run on an M1 macOS Device (not sped up!) &lt;/p&gt; &#xA;&lt;h2&gt;GPT4All: An ecosystem of open-source on-edge large language models.&lt;/h2&gt; &#xA;&lt;p&gt;GPT4All is an ecosystem to train and deploy &lt;strong&gt;powerful&lt;/strong&gt; and &lt;strong&gt;customized&lt;/strong&gt; large language models that run locally on consumer grade CPUs. Note that your CPU needs to support &lt;a href=&#34;https://en.wikipedia.org/wiki/Advanced_Vector_Extensions&#34;&gt;AVX or AVX2 instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Learn more in the &lt;a href=&#34;https://docs.gpt4all.io&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The goal is simple - be the best instruction tuned assistant-style language model that any person or enterprise can freely use, distribute and build on.&lt;/p&gt; &#xA;&lt;p&gt;A GPT4All model is a 3GB - 8GB file that you can download and plug into the GPT4All open-source ecosystem software. &lt;strong&gt;Nomic AI&lt;/strong&gt; supports and maintains this software ecosystem to enforce quality and security alongside spearheading the effort to allow any person or enterprise to easily train and deploy their own on-edge large language models.&lt;/p&gt; &#xA;&lt;h3&gt;Chat Client&lt;/h3&gt; &#xA;&lt;p&gt;Run any GPT4All model natively on your home desktop with the auto-updating desktop chat client. See &lt;a href=&#34;https://gpt4all.io&#34;&gt;GPT4All Website&lt;/a&gt; for a full list of open-source models you can run with this powerful desktop application.&lt;/p&gt; &#xA;&lt;p&gt;Direct Installer Links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://gpt4all.io/installers/gpt4all-installer-darwin.dmg&#34;&gt;macOS&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://gpt4all.io/installers/gpt4all-installer-win64.exe&#34;&gt;Windows&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://gpt4all.io/installers/gpt4all-installer-linux.run&#34;&gt;Ubuntu&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Find the most up-to-date information on the &lt;a href=&#34;https://gpt4all.io/&#34;&gt;GPT4All Website&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Chat Client building and running&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow the visual instructions on the chat client &lt;a href=&#34;https://raw.githubusercontent.com/nomic-ai/gpt4all/main/gpt4all-chat/build_and_run.md&#34;&gt;build_and_run&lt;/a&gt; page&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Bindings&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nomic-ai/gpt4all/tree/main/gpt4all-bindings/python/README.md&#34;&gt;&lt;span&gt;üêç&lt;/span&gt; Official Python Bindings&lt;/a&gt; &lt;a href=&#34;https://pepy.tech/project/gpt4all&#34;&gt;&lt;img src=&#34;https://static.pepy.tech/badge/gpt4all/week&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nomic-ai/gpt4all/tree/main/gpt4all-bindings/typescript&#34;&gt;&lt;span&gt;üíª&lt;/span&gt; Official Typescript Bindings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nomic-ai/gpt4all/tree/main/gpt4all-bindings/golang&#34;&gt;&lt;span&gt;üíª&lt;/span&gt; Official GoLang Bindings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nomic-ai/gpt4all/tree/main/gpt4all-bindings/csharp&#34;&gt;&lt;span&gt;üíª&lt;/span&gt; Official C# Bindings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nomic-ai/gpt4all/tree/main/gpt4all-bindings/java&#34;&gt;&lt;span&gt;üíª&lt;/span&gt; Official Java Bindings&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Integrations&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üóÉÔ∏è &lt;a href=&#34;https://github.com/weaviate/weaviate&#34;&gt;Weaviate Vector Database&lt;/a&gt; - &lt;a href=&#34;https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/text2vec-gpt4all&#34;&gt;module docs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;GPT4All welcomes contributions, involvement, and discussion from the open source community! Please see CONTRIBUTING.md and follow the issues, bug reports, and PR markdown templates.&lt;/p&gt; &#xA;&lt;p&gt;Check project discord, with project owners, or through existing issues/PRs to avoid duplicate work. Please make sure to tag all of the above with relevant project identifiers or your contribution could potentially get lost. Example tags: &lt;code&gt;backend&lt;/code&gt;, &lt;code&gt;bindings&lt;/code&gt;, &lt;code&gt;python-bindings&lt;/code&gt;, &lt;code&gt;documentation&lt;/code&gt;, etc.&lt;/p&gt; &#xA;&lt;h2&gt;Technical Reports&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://gpt4all.io/reports/GPT4All_Technical_Report_3.pdf&#34;&gt;&lt;span&gt;üìó&lt;/span&gt; Technical Report 3: GPT4All Snoozy and Groovy &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://static.nomic.ai/gpt4all/2023_GPT4All-J_Technical_Report_2.pdf&#34;&gt;&lt;span&gt;üìó&lt;/span&gt; Technical Report 2: GPT4All-J &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://s3.amazonaws.com/static.nomic.ai/gpt4all/2023_GPT4All_Technical_Report.pdf&#34;&gt;&lt;span&gt;üìó&lt;/span&gt; Technical Report 1: GPT4All&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you utilize this repository, models or data in a downstream project, please consider citing it with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{gpt4all,&#xA;  author = {Yuvanesh Anand and Zach Nussbaum and Brandon Duderstadt and Benjamin Schmidt and Andriy Mulyar},&#xA;  title = {GPT4All: Training an Assistant-style Chatbot with Large Scale Data Distillation from GPT-3.5-Turbo},&#xA;  year = {2023},&#xA;  publisher = {GitHub},&#xA;  journal = {GitHub repository},&#xA;  howpublished = {\url{https://github.com/nomic-ai/gpt4all}},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>x64dbg/x64dbg</title>
    <updated>2023-10-08T01:47:46Z</updated>
    <id>tag:github.com,2023-10-08:/x64dbg/x64dbg</id>
    <link href="https://github.com/x64dbg/x64dbg" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open-source user mode debugger for Windows. Optimized for reverse engineering and malware analysis.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;x64dbg&lt;/h1&gt; &#xA;&lt;img width=&#34;100&#34; src=&#34;https://github.com/x64dbg/x64dbg/raw/development/src/bug_black.png&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/mrexodia/x64dbg&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/h1j489qa1mx67e0h?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://translate.x64dbg.com&#34;&gt;&lt;img src=&#34;https://d322cqt584bo4o.cloudfront.net/x64dbg/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sourceforge.net/projects/x64dbg/files/latest/download&#34;&gt;&lt;img src=&#34;https://img.shields.io/sourceforge/dm/x64dbg.svg?sanitize=true&#34; alt=&#34;Download x64dbg&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://invite.gg/x64dbg&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20Discord-green.svg?sanitize=true&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://telegram.me/x64dbg&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-%20on%20Telegram-blue.svg?sanitize=true&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/x64dbg/x64dbg&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20Gitter-lightseagreen.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://riot.im/app/#/room/#x64dbg:matrix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20Matrix-yellowgreen.svg?sanitize=true&#34; alt=&#34;Matrix&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;An open-source binary debugger for Windows, aimed at malware analysis and reverse engineering of executables you do not have the source code for. There are many features available and a comprehensive &lt;a href=&#34;https://plugins.x64dbg.com&#34;&gt;plugin system&lt;/a&gt; to add your own. You can find more information on the &lt;a href=&#34;https://x64dbg.com/blog&#34;&gt;blog&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/x64dbg/x64dbg/development/.github/screenshots/cpu-light.png&#34; alt=&#34;main interface (light)&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/x64dbg/x64dbg/development/.github/screenshots/cpu-dark.png&#34; alt=&#34;main interface (dark)&#34;&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/x64dbg/x64dbg/development/.github/screenshots/graph-light.png&#34; alt=&#34;graph&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/x64dbg/x64dbg/development/.github/screenshots/memory-map-light.png&#34; alt=&#34;memory map&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation &amp;amp; Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download a snapshot from &lt;a href=&#34;https://github.com/x64dbg/x64dbg/releases&#34;&gt;GitHub&lt;/a&gt;, &lt;a href=&#34;https://sourceforge.net/projects/x64dbg/files/snapshots&#34;&gt;SourceForge&lt;/a&gt; or &lt;a href=&#34;https://osdn.net/projects/x64dbg&#34;&gt;OSDN&lt;/a&gt; and extract it in a location your user has write access to.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Optionally&lt;/em&gt; use &lt;code&gt;x96dbg.exe&lt;/code&gt; to register a shell extension and add shortcuts to your desktop.&lt;/li&gt; &#xA; &lt;li&gt;You can now run &lt;code&gt;x32\x32dbg.exe&lt;/code&gt; if you want to debug a 32-bit executable or &lt;code&gt;x64\x64dbg.exe&lt;/code&gt; to debug a 64-bit executable! If you are unsure you can always run &lt;code&gt;x96dbg.exe&lt;/code&gt; and choose your architecture there.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can also &lt;a href=&#34;https://github.com/x64dbg/x64dbg/wiki/Compiling-the-whole-project&#34;&gt;compile&lt;/a&gt; x64dbg yourself with a few easy steps!&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://sponsors.x64dbg.com/malcore&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/x64dbg/x64dbg/development/.github/sponsors/malcore.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://sponsors.x64dbg.com/telekom&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/x64dbg/x64dbg/development/.github/sponsors/telekom.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This is a community effort and we accept pull requests! See the &lt;a href=&#34;https://raw.githubusercontent.com/x64dbg/x64dbg/development/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; document for more information. If you have any questions you can always &lt;a href=&#34;https://x64dbg.com/#contact&#34;&gt;contact us&lt;/a&gt; or open an &lt;a href=&#34;https://github.com/x64dbg/x64dbg/issues&#34;&gt;issue&lt;/a&gt;. You can take a look at the &lt;a href=&#34;https://easy.x64dbg.com/&#34;&gt;good first issues&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Debugger core by &lt;a href=&#34;https://github.com/x64dbg/TitanEngine&#34;&gt;TitanEngine Community Edition&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Disassembly powered by &lt;a href=&#34;https://zydis.re&#34;&gt;Zydis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Assembly powered by &lt;a href=&#34;https://github.com/x64dbg/XEDParse&#34;&gt;XEDParse&lt;/a&gt; and &lt;a href=&#34;https://github.com/asmjit&#34;&gt;asmjit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Import reconstruction powered by &lt;a href=&#34;https://github.com/NtQuery/Scylla&#34;&gt;Scylla&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;JSON powered by &lt;a href=&#34;https://www.digip.org/jansson&#34;&gt;Jansson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Database compression powered by &lt;a href=&#34;https://bitbucket.org/mrexodia/lz4&#34;&gt;lz4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Bug icon by &lt;a href=&#34;https://www.visualpharm.com&#34;&gt;VisualPharm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interface icons by &lt;a href=&#34;https://p.yusukekamiyamane.com&#34;&gt;Fugue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Website by &lt;a href=&#34;https://tr4ceflow.com&#34;&gt;tr4ceflow&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mrexodia.github.io&#34;&gt;mrexodia&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Sigma&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.tr4ceflow.com&#34;&gt;tr4ceflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.fr33project.org&#34;&gt;Dreg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Nukem9&#34;&gt;Nukem&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Herz3h&#34;&gt;Herz3h&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/torusrxxx&#34;&gt;torusrxxx&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code contributions&lt;/h2&gt; &#xA;&lt;p&gt;You can find an exhaustive list of GitHub contributors &lt;a href=&#34;https://github.com/x64dbg/x64dbg/graphs/contributors&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Special Thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sigma for developing the initial GUI&lt;/li&gt; &#xA; &lt;li&gt;All the donators!&lt;/li&gt; &#xA; &lt;li&gt;Everybody adding issues!&lt;/li&gt; &#xA; &lt;li&gt;People I forgot to add to this list&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://x64dbg.com/blog/2016/07/09/Looking-for-writers.html&#34;&gt;Writers of the blog&lt;/a&gt;!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.exetools.com&#34;&gt;EXETools community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.tuts4you.com&#34;&gt;Tuts4You community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jetbrains.com/resharper&#34;&gt;ReSharper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.coverity.com&#34;&gt;Coverity&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;acidflash&lt;/li&gt; &#xA; &lt;li&gt;cyberbob&lt;/li&gt; &#xA; &lt;li&gt;cypher&lt;/li&gt; &#xA; &lt;li&gt;Teddy Rogers&lt;/li&gt; &#xA; &lt;li&gt;TEAM DVT&lt;/li&gt; &#xA; &lt;li&gt;DMichael&lt;/li&gt; &#xA; &lt;li&gt;Artic&lt;/li&gt; &#xA; &lt;li&gt;ahmadmansoor&lt;/li&gt; &#xA; &lt;li&gt;_pusher_&lt;/li&gt; &#xA; &lt;li&gt;firelegend&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lifeinhex.com&#34;&gt;kao&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;sstrato&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kobalicek&#34;&gt;kobalicek&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/athre0z&#34;&gt;athre0z&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ZehMatt&#34;&gt;ZehMatt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/fearless0&#34;&gt;mrfearless&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JustasMasiulis&#34;&gt;JustMagic&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Without the help of many people and other open-source projects, it would not have been possible to make x64dbg what it is today, thank you!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>IMXNOOBX/cs2-external-esp</title>
    <updated>2023-10-08T01:47:46Z</updated>
    <id>tag:github.com,2023-10-08:/IMXNOOBX/cs2-external-esp</id>
    <link href="https://github.com/IMXNOOBX/cs2-external-esp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple external esp using discord&#39;s/gdi overlay to render a box-esp on top of Counter-Strike 2, highlighting your enemies and teammates including their health.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üé° CS2 External ESP&lt;/h1&gt; &#xA;&lt;p&gt;Simple external esp using gdi overlay to render esp boxes on top of cs2 highlighting your enemies and teammates including their health, name and health number. If you want to check out discord overlay rendering check &lt;a href=&#34;https://github.com/IMXNOOBX/cs2-external-esp/tree/discord-overlay&#34;&gt;discord-overlay-esp&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Make sure you üåü the project if you like it ‚ù§&lt;/h3&gt; &#xA;&lt;h2&gt;Video Showcase&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/SV_lddIxQ5w&#34;&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/903283950267564094/1148569148318822461/image.png&#34; alt=&#34;Cs2ESP&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üå≥ Simple Use&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Releases have been removed in order to be allowed in unknowncheats so the binaries are published there&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to unknwoncheats post &lt;a href=&#34;https://www.unknowncheats.me/forum/counter-strike-2-a/600259-cs2-external-esp.html&#34;&gt;&lt;strong&gt;cs2-external-esp&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click on the binary file you want to download and download it.&lt;/li&gt; &#xA; &lt;li&gt;Open the binary file and cs2 (doesnt matter which one goes first) ‚ùó Make sure your game is in full screen windowed&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;üíß Repository Update&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you have updated the offsets, and want to share it with everyone follow this steps&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create a &lt;a href=&#34;https://github.com/IMXNOOBX/cs2-external-esp/pulls&#34;&gt;pull request&lt;/a&gt; and provided just the &lt;code&gt;offsets/offsets.json&lt;/code&gt; updated file in the pull request. if there are any other files modified it will be denied&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Provide a valid image that the esp is working on the latest version on the game&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The commit will be merged into the main branch once verified and all the users will be able to update it!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;‚úî Manually Update&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To manually update the esp offsets i have included an offsets.json file which will be created once opened.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to this &lt;a href=&#34;https://www.unknowncheats.me/forum/counter-strike-2-a/576077-counter-strike-2-reversal-structs-offsets.html&#34;&gt;unknowncheats thread&lt;/a&gt; and find the latest offsets posted by the community&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You will find somethig like this&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#define dwLocalPlayer 0x1715418 // This is hexadecimal&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;You will have to translate it to decimal and put it in the offsets file next to the esp executable like so, you can use &lt;a href=&#34;https://www.rapidtables.com/convert/number/hex-to-decimal.html&#34;&gt;&lt;strong&gt;this website&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;dwLocalPlayer&#34;: 24204312, // To decimal&#xA;    ...&#xA;}&#x9;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üìò Developer Instructions&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the program using Visual Studio 2022&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Build: &lt;strong&gt;&lt;code&gt;x64 - Release&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Locate your binary file in the folder &lt;code&gt;&amp;lt;arch&amp;gt;/&amp;lt;configuration&amp;gt;&lt;/code&gt;, e.g., &lt;code&gt;x64/Release&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚ùï In case the offsets get outdated (Every game update), you could check UnnamedZ03&#39;s repository for the updated ones &lt;a href=&#34;https://github.com/UnnamedZ03/CS2-external-base/raw/58466cd7feba2fbcf5ab49b0dbbdc7bcd6d7df58/source/CSSPlayer.hpp#L3-L15&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üí´ Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/UnnamedZ03&#34;&gt;UnnamedZ03&lt;/a&gt; for providing &lt;a href=&#34;https://www.unknowncheats.me/forum/3846642-post734.html&#34;&gt;offsets&lt;/a&gt; and guide with his &lt;a href=&#34;https://github.com/UnnamedZ03/CS2-external-base&#34;&gt;CS2-external-base&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Bekston&#34;&gt;Bekston&lt;/a&gt; for his &lt;a href=&#34;https://github.com/IMXNOOBX/cs2-external-esp/pull/20&#34;&gt;contributions&lt;/a&gt; to the project and ideas&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Apxaey&#34;&gt;Apxaey&lt;/a&gt; for releasing an easy way to implement &lt;a href=&#34;https://github.com/Apxaey/Handle-Hijacking-Anti-Cheat-Bypass&#34;&gt;handle hijacking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Unknowncheats comunity for their reseach!&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>