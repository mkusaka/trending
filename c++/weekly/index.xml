<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-21T01:39:25Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>PaddlePaddle/Paddle</title>
    <updated>2024-07-21T01:39:25Z</updated>
    <id>tag:github.com,2024-07-21:/PaddlePaddle/Paddle</id>
    <link href="https://github.com/PaddlePaddle/Paddle" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PArallel Distributed Deep LEarning: Machine Learning Framework from Industrial Practice （『飞桨』核心框架，深度学习&amp;机器学习高性能单机、分布式训练和跨平台部署）&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/doc/imgs/logo.png&#34; , width=&#34;1600&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;hr&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/README_cn.md&#34;&gt;简体中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/README_ja.md&#34;&gt;日本語&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://paddlepaddle.org.cn/documentation/docs/en/guides/index_en.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-latest-brightgreen.svg?style=flat&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://paddlepaddle.org.cn/documentation/docs/zh/guides/index_cn.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3-%E6%9C%80%E6%96%B0-brightgreen.svg?sanitize=true&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PaddlePaddle/Paddle/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/PaddlePaddle/Paddle.svg?sanitize=true&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/PaddlePaddle&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Twitter-1ca0f1.svg?logo=twitter&amp;amp;logoColor=white&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Welcome to the PaddlePaddle GitHub.&lt;/p&gt; &#xA;&lt;p&gt;PaddlePaddle, as the first independent R&amp;amp;D deep learning platform in China, has been officially open-sourced to professional communities since 2016. It is an industrial platform with advanced technologies and rich features that cover core deep learning frameworks, basic model libraries, end-to-end development kits, tools &amp;amp; components as well as service platforms. PaddlePaddle is originated from industrial practices with dedication and commitments to industrialization. It has been widely adopted by a wide range of sectors including manufacturing, agriculture, enterprise service, and so on while serving more than 10.7 million developers, 235,000 companies and generating 860,000 models. With such advantages, PaddlePaddle has helped an increasing number of partners commercialize AI.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Latest PaddlePaddle Release: &lt;a href=&#34;https://github.com/PaddlePaddle/Paddle/tree/release/2.6&#34;&gt;v2.6&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Our vision is to enable deep learning for everyone via PaddlePaddle. Please refer to our &lt;a href=&#34;https://github.com/PaddlePaddle/Paddle/releases&#34;&gt;release announcement&lt;/a&gt; to track the latest features of PaddlePaddle.&lt;/p&gt; &#xA;&lt;h3&gt;Install Latest Stable Release&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# CPU&#xA;pip install paddlepaddle&#xA;# GPU&#xA;pip install paddlepaddle-gpu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information about installation, please view &lt;a href=&#34;https://www.paddlepaddle.org.cn/install/quick&#34;&gt;Quick Install&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Now our developers can acquire Tesla V100 online computing resources for free. If you create a program by AI Studio, you will obtain 8 hours to train models online per day. &lt;a href=&#34;https://aistudio.baidu.com/aistudio/index&#34;&gt;Click here to start&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;FOUR LEADING TECHNOLOGIES&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Agile Framework for Industrial Development of Deep Neural Networks&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The PaddlePaddle deep learning framework facilitates the development while lowering the technical burden, through leveraging a programmable scheme to architect the neural networks. It supports both declarative programming and imperative programming with both development flexibility and high runtime performance preserved. The neural architectures could be automatically designed by algorithms with better performance than the ones designed by human experts.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Support Ultra-Large-Scale Training of Deep Neural Networks&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;PaddlePaddle has made breakthroughs in ultra-large-scale deep neural networks training. It launched the world&#39;s first large-scale open-source training platform that supports the training of deep networks with 100 billion features and trillions of parameters using data sources distributed over hundreds of nodes. PaddlePaddle overcomes the online deep learning challenges for ultra-large-scale deep learning models, and further achieved real-time model updating with more than 1 trillion parameters. &lt;a href=&#34;https://github.com/PaddlePaddle/Fleet&#34;&gt;Click here to learn more&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;High-Performance Inference Engines for Comprehensive Deployment Environments&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;PaddlePaddle is not only compatible with models trained in 3rd party open-source frameworks , but also offers complete inference products for various production scenarios. Our inference product line includes &lt;a href=&#34;https://www.paddlepaddle.org.cn/inference/master/guides/introduction/index_intro.html&#34;&gt;Paddle Inference&lt;/a&gt;: Native inference library for high-performance server and cloud inference; &lt;a href=&#34;https://github.com/PaddlePaddle/FastDeploy&#34;&gt;FastDeploy&lt;/a&gt;: Easy-to-use and High Performance AI model deployment toolkit for Cloud, Mobile and Edge without-of-the-box and unified experience; &lt;a href=&#34;https://github.com/PaddlePaddle/Paddle-Lite&#34;&gt;Paddle Lite&lt;/a&gt;: Ultra-Lightweight inference engine for mobile and IoT environments; &lt;a href=&#34;https://www.paddlepaddle.org.cn/paddle/paddlejs&#34;&gt;Paddle.js&lt;/a&gt;: A frontend inference engine for browser and mini-apps. Furthermore, by great amounts of optimization with leading hardware in each scenario, Paddle inference engines outperform most of the other mainstream frameworks.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Industry-Oriented Models and Libraries with Open Source Repositories&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;PaddlePaddle includes and maintains more than 100 mainstream models that have been practiced and polished for a long time in the industry. Some of these models have won major prizes from key international competitions. In the meanwhile, PaddlePaddle has further more than 200 pre-training models (some of them with source codes) to facilitate the rapid development of industrial applications. &lt;a href=&#34;https://github.com/PaddlePaddle/models&#34;&gt;Click here to learn more&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;We provide &lt;a href=&#34;https://www.paddlepaddle.org.cn/documentation/docs/en/guides/index_en.html&#34;&gt;English&lt;/a&gt; and &lt;a href=&#34;https://www.paddlepaddle.org.cn/documentation/docs/zh/guide/index_cn.html&#34;&gt;Chinese&lt;/a&gt; documentation.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.paddlepaddle.org.cn/documentation/docs/en/guides/index_en.html&#34;&gt;Guides&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You might want to start from how to implement deep learning basics with PaddlePaddle.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.paddlepaddle.org.cn/documentation/docs/zh/tutorial/index_cn.html&#34;&gt;Practice&lt;/a&gt;&lt;/p&gt; &lt;p&gt;So far you have already been familiar with Fluid. And the next step should be building a more efficient model or inventing your original Operator.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.paddlepaddle.org.cn/documentation/docs/en/api/index_en.html&#34;&gt;API Reference&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Our new API enables much shorter programs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.paddlepaddle.org.cn/documentation/docs/en/guides/08_contribution/index_en.html&#34;&gt;How to Contribute&lt;/a&gt;&lt;/p&gt; &lt;p&gt;We appreciate your contributions!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Open Source Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/Paddle/issues&#34;&gt;Github Issues&lt;/a&gt;: bug reports, feature requests, install issues, usage issues, etc.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open Source Contribution Activities:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Beginner: Happy Open Source Activity（&lt;a href=&#34;https://github.com/PaddlePaddle/Paddle/issues/56689&#34;&gt;Regular Season&lt;/a&gt;、&lt;a href=&#34;https://github.com/PaddlePaddle/Paddle/issues/58497&#34;&gt;Pre-Hackathon Camp&lt;/a&gt;）&lt;/li&gt; &#xA;   &lt;li&gt;Advanced: PaddlePaddle Hackathon（&lt;a href=&#34;https://github.com/PaddlePaddle/Paddle/issues/57262&#34;&gt;Personal Challenge Competition&lt;/a&gt;、&lt;a href=&#34;https://github.com/PaddlePaddle/Paddle/issues/57585&#34;&gt;LLM Application Competition&lt;/a&gt;、&lt;a href=&#34;https://github.com/PaddlePaddle/Paddle/issues/57264&#34;&gt;Hackathon Code Camp&lt;/a&gt;）&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Community Organizations:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Technical Organization: &lt;a href=&#34;https://github.com/PaddlePaddle/community/tree/master/pfcc&#34;&gt;Paddle Framework Contributor Club, PFCC&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Community Governance Organization: &lt;a href=&#34;https://github.com/PaddlePaddle/community/tree/master/pposdwg&#34;&gt;PaddlePaddle OpenSource Development Working Group, PPOSDWG&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Community Blog: &lt;a href=&#34;https://pfcc.blog/&#34;&gt;https://pfcc.blog/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Courses&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aistudio.baidu.com/aistudio/course/introduce/19084&#34;&gt;Server Deployments&lt;/a&gt;: Courses introducing high performance server deployments via local and remote services.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aistudio.baidu.com/aistudio/course/introduce/22690&#34;&gt;Edge Deployments&lt;/a&gt;: Courses introducing edge deployments from mobile, IoT to web and applets.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Copyright and License&lt;/h2&gt; &#xA;&lt;p&gt;PaddlePaddle is provided under the &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/LICENSE&#34;&gt;Apache-2.0 license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ROCm/HIP</title>
    <updated>2024-07-21T01:39:25Z</updated>
    <id>tag:github.com,2024-07-21:/ROCm/HIP</id>
    <link href="https://github.com/ROCm/HIP" rel="alternate"></link>
    <summary type="html">&lt;p&gt;HIP: C++ Heterogeneous-Compute Interface for Portability&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;What is this repository for?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;HIP is a C++ Runtime API and Kernel Language that allows developers to create portable applications for AMD and NVIDIA GPUs from single source code.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Key features include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;HIP is very thin and has little or no performance impact over coding directly in CUDA mode.&lt;/li&gt; &#xA; &lt;li&gt;HIP allows coding in a single-source C++ programming language including features such as templates, C++11 lambdas, classes, namespaces, and more.&lt;/li&gt; &#xA; &lt;li&gt;HIP allows developers to use the &#34;best&#34; development environment and tools on each target platform.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://github.com/ROCm/HIPIFY/raw/amd-staging/README.md&#34;&gt;HIPIFY&lt;/a&gt; tools automatically convert source from CUDA to HIP.&lt;/li&gt; &#xA; &lt;li&gt;Developers can specialize for the platform (CUDA or AMD) to tune for performance or handle tricky cases.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;New projects can be developed directly in the portable HIP C++ language and can run on either NVIDIA or AMD platforms. Additionally, HIP provides porting tools which make it easy to port existing CUDA codes to the HIP layer, with no loss of performance as compared to the original CUDA application. HIP is not intended to be a drop-in replacement for CUDA, and developers should expect to do some manual coding and performance tuning work to complete the port.&lt;/p&gt; &#xA;&lt;h2&gt;DISCLAIMER&lt;/h2&gt; &#xA;&lt;p&gt;The information presented in this document is for informational purposes only and may contain technical inaccuracies, omissions, and typographical errors. The information contained herein is subject to change and may be rendered inaccurate for many reasons, including but not limited to product and roadmap changes, component and motherboard versionchanges, new model and/or product releases, product differences between differing manufacturers, software changes, BIOS flashes, firmware upgrades, or the like. Any computer system has risks of security vulnerabilities that cannot be completely prevented or mitigated.AMD assumes no obligation to update or otherwise correct or revise this information. However, AMD reserves the right to revise this information and to make changes from time to time to the content hereof without obligation of AMD to notify any person of such revisions or changes.THIS INFORMATION IS PROVIDED ‘AS IS.” AMD MAKES NO REPRESENTATIONS OR WARRANTIES WITH RESPECT TO THE CONTENTS HEREOF AND ASSUMES NO RESPONSIBILITY FOR ANY INACCURACIES, ERRORS, OR OMISSIONS THAT MAY APPEAR IN THIS INFORMATION. AMD SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY, OR FITNESS FOR ANY PARTICULAR PURPOSE. IN NO EVENT WILL AMD BE LIABLE TO ANY PERSON FOR ANY RELIANCE, DIRECT, INDIRECT, SPECIAL, OR OTHER CONSEQUENTIAL DAMAGES ARISING FROM THE USE OF ANY INFORMATION CONTAINED HEREIN, EVEN IF AMD IS EXPRESSLY ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. AMD, the AMD Arrow logo, and combinations thereof are trademarks of Advanced Micro Devices, Inc. Other product names used in this publication are for identification purposes only and may be trademarks of their respective companies.&lt;/p&gt; &#xA;&lt;p&gt;© 2023 Advanced Micro Devices, Inc. All Rights Reserved.&lt;/p&gt; &#xA;&lt;h2&gt;Repository branches&lt;/h2&gt; &#xA;&lt;p&gt;The HIP repository maintains several branches. The branches that are of importance are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;develop branch: This is the default branch, on which the new features are still under development and visible. While this maybe of interest to many, it should be noted that this branch and the features under development might not be stable.&lt;/li&gt; &#xA; &lt;li&gt;Main branch: This is the stable branch. It is up to date with the latest release branch, for example, if the latest HIP release is rocm-4.3, main branch will be the repository based on this release.&lt;/li&gt; &#xA; &lt;li&gt;Release branches. These are branches corresponding to each ROCM release, listed with release tags, such as rocm-4.2, rocm-4.3, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Release tagging&lt;/h2&gt; &#xA;&lt;p&gt;HIP releases are typically naming convention for each ROCM release to help differentiate them.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;rocm x.yy: These are the stable releases based on the ROCM release. This type of release is typically made once a month.*&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;More Info&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ROCm/HIP/develop/docs/install/install.rst&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ROCm/HIP/develop/docs/how-to/faq.md&#34;&gt;HIP FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ROCm/HIP/develop/docs/reference/kernel_language.rst&#34;&gt;HIP Kernel Language&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ROCm/HIP/develop/docs/how-to/hip_porting_guide.md&#34;&gt;HIP Porting Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ROCm/HIP/develop/docs/how-to/hip_porting_driver_api.md&#34;&gt;HIP Porting Driver Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ROCm/HIP/develop/docs/how-to/programming_manual.md&#34;&gt;HIP Programming Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ROCm/HIP/develop/docs/how-to/logging.rst&#34;&gt;HIP Logging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ROCm/HIP/develop/docs/install/build.rst&#34;&gt;Building HIP From Source&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ROCm/HIP/develop/docs/how-to/debugging.rst&#34;&gt;HIP Debugging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ROCm/HIP/develop/docs/how-to/hip_rtc.md&#34;&gt;HIP RTC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ROCm/HIP/develop/docs/reference/terms.md&#34;&gt;HIP Terminology&lt;/a&gt; (including Rosetta Stone of GPU computing terms across CUDA/HIP/OpenCL)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ROCm/HIPIFY/raw/amd-staging/README.md&#34;&gt;HIPIFY&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Supported CUDA APIs: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ROCm/HIPIFY/raw/amd-staging/docs/tables/CUDA_Runtime_API_functions_supported_by_HIP.md&#34;&gt;Runtime API&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ROCm/HIPIFY/raw/amd-staging/docs/tables/CUDA_Driver_API_functions_supported_by_HIP.md&#34;&gt;Driver API&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ROCm/HIPIFY/raw/amd-staging/docs/tables/cuComplex_API_supported_by_HIP.md&#34;&gt;cuComplex API&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ROCm/HIPIFY/raw/amd-staging/docs/tables/CUDA_Device_API_supported_by_HIP.md&#34;&gt;Device API&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ROCm/HIPIFY/raw/amd-staging/docs/tables/CUBLAS_API_supported_by_ROC.md&#34;&gt;cuBLAS&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ROCm/HIPIFY/raw/amd-staging/docs/tables/CURAND_API_supported_by_HIP.md&#34;&gt;cuRAND&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ROCm/HIPIFY/raw/amd-staging/docs/tables/CUDNN_API_supported_by_HIP.md&#34;&gt;cuDNN&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ROCm/HIPIFY/raw/amd-staging/docs/tables/CUFFT_API_supported_by_HIP.md&#34;&gt;cuFFT&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ROCm/HIPIFY/raw/amd-staging/docs/tables/CUSPARSE_API_supported_by_HIP.md&#34;&gt;cuSPARSE&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ROCm/HIP/develop/CONTRIBUTING.md&#34;&gt;Developer/CONTRIBUTING Info&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ROCm/HIP/develop/RELEASE.md&#34;&gt;Release Notes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How do I get set up?&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/ROCm/HIP/develop/docs/install/install.rst&#34;&gt;Installation&lt;/a&gt; notes.&lt;/p&gt; &#xA;&lt;h2&gt;Simple Example&lt;/h2&gt; &#xA;&lt;p&gt;The HIP API includes functions such as hipMalloc, hipMemcpy, and hipFree. Programmers familiar with CUDA will also be able to quickly learn and start coding with the HIP API. Compute kernels are launched with the &#34;hipLaunchKernelGGL&#34; macro call. Here is simple example showing a snippet of HIP API code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;hipMalloc(&amp;amp;A_d, Nbytes);&#xA;hipMalloc(&amp;amp;C_d, Nbytes);&#xA;&#xA;hipMemcpy(A_d, A_h, Nbytes, hipMemcpyHostToDevice);&#xA;&#xA;const unsigned blocks = 512;&#xA;const unsigned threadsPerBlock = 256;&#xA;hipLaunchKernelGGL(vector_square,   /* compute kernel*/&#xA;                dim3(blocks), dim3(threadsPerBlock), 0/*dynamic shared*/, 0/*stream*/,     /* launch config*/&#xA;                C_d, A_d, N);  /* arguments to the compute kernel */&#xA;&#xA;hipMemcpy(C_h, C_d, Nbytes, hipMemcpyDeviceToHost);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The HIP kernel language defines builtins for determining grid and block coordinates, math functions, short vectors, atomics, and timer functions. It also specifies additional defines and keywords for function types, address spaces, and optimization controls (See the &lt;a href=&#34;https://raw.githubusercontent.com/ROCm/HIP/develop/docs/reference/kernel_language.rst&#34;&gt;HIP Kernel Language&lt;/a&gt; for a full description). Here&#39;s an example of defining a simple &#39;vector_square&#39; kernel.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;template &amp;lt;typename T&amp;gt;&#xA;__global__ void&#xA;vector_square(T *C_d, const T *A_d, size_t N)&#xA;{&#xA;    size_t offset = (blockIdx.x * blockDim.x + threadIdx.x);&#xA;    size_t stride = blockDim.x * gridDim.x;&#xA;&#xA;    for (size_t i=offset; i&amp;lt;N; i+=stride) {&#xA;        C_d[i] = A_d[i] * A_d[i];&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The HIP Runtime API code and compute kernel definition can exist in the same source file - HIP takes care of generating host and device code appropriately.&lt;/p&gt; &#xA;&lt;h2&gt;HIP Portability and Compiler Technology&lt;/h2&gt; &#xA;&lt;p&gt;HIP C++ code can be compiled with either,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On the NVIDIA CUDA platform, HIP provides header file in the repository &lt;a href=&#34;https://github.com/ROCm/hipother&#34;&gt;hipother&lt;/a&gt; which translate from the HIP runtime APIs to CUDA runtime APIs. The header file contains mostly inlined functions and thus has very low overhead - developers coding in HIP should expect the same performance as coding in native CUDA. The code is then compiled with nvcc, the standard C++ compiler provided with the CUDA SDK. Developers can use any tools supported by the CUDA SDK including the CUDA profiler and debugger.&lt;/li&gt; &#xA; &lt;li&gt;On the AMD ROCm platform, HIP provides a header and runtime library built on top of HIP-Clang compiler in the repository &lt;a href=&#34;https://github.com/ROCm/clr&#34;&gt;Common Language Runtime (CLR)&lt;/a&gt;. The HIP runtime implements HIP streams, events, and memory APIs, and is a object library that is linked with the application. The source code for all headers and the library implementation is available on GitHub. HIP developers on ROCm can use AMD&#39;s &lt;a href=&#34;https://github.com/ROCm/ROCgdb&#34;&gt;ROCgdb&lt;/a&gt; for debugging and profiling.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thus HIP source code can be compiled to run on either platform. Platform-specific features can be isolated to a specific platform using conditional compilation. Thus HIP provides source portability to either platform. HIP provides the &lt;em&gt;hipcc&lt;/em&gt; compiler driver which will call the appropriate toolchain depending on the desired platform.&lt;/p&gt; &#xA;&lt;h2&gt;Examples and Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;A sample and &lt;a href=&#34;https://github.com/ROCm/hip-tests/tree/develop/samples/0_Intro/square&#34;&gt;blog&lt;/a&gt; that uses any of &lt;a href=&#34;https://github.com/ROCm/HIPIFY/raw/amd-staging/README.md&#34;&gt;HIPIFY&lt;/a&gt; tools to convert a simple app from CUDA to HIP:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd samples/01_Intro/square&#xA;# follow README / blog steps to hipify the application.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Guide to &lt;a href=&#34;https://rocm.docs.amd.com/projects/HIP/en/latest/how-to/hip_porting_guide.html#porting-a-new-cuda-project&#34;&gt;Porting a New Cuda Project&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;More Examples&lt;/h2&gt; &#xA;&lt;p&gt;The GitHub repository &lt;a href=&#34;https://github.com/ROCm/HIP-Examples&#34;&gt;HIP-Examples&lt;/a&gt; contains a hipified version of benchmark suite. Besides, there are more samples in Github &lt;a href=&#34;https://github.com/ROCm/hip-tests/tree/develop/samples&#34;&gt;HIP samples&lt;/a&gt;, showing how to program with different features, build and run.&lt;/p&gt; &#xA;&lt;h2&gt;Tour of the HIP Directories&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;include&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;hip_runtime_api.h&lt;/strong&gt; : Defines HIP runtime APIs and can be compiled with many standard Linux compilers (GCC, ICC, CLANG, etc), in either C or C++ mode.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;hip_runtime.h&lt;/strong&gt; : Includes everything in hip_runtime_api.h PLUS hipLaunchKernelGGL and syntax for writing device kernels and device functions. hip_runtime.h can be compiled using a standard C++ compiler but will expose a subset of the available functions.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;amd_detail/&lt;/strong&gt;** , &lt;strong&gt;nvidia_detail/&lt;/strong&gt;** : Implementation details for specific platforms. HIP applications should not include these files directly.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;bin&lt;/strong&gt;: Tools and scripts to help with hip porting&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;hipcc&lt;/strong&gt; : Compiler driver that can be used to replace nvcc in existing CUDA code. hipcc will call nvcc or HIP-Clang depending on platform and include appropriate platform-specific headers and libraries.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;hipconfig&lt;/strong&gt; : Print HIP configuration (HIP_PATH, HIP_PLATFORM, HIP_COMPILER, HIP_RUNTIME, CXX config flags, etc.)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;docs&lt;/strong&gt;: Documentation - markdown and doxygen info.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reporting an issue&lt;/h2&gt; &#xA;&lt;p&gt;Use the &lt;a href=&#34;https://github.com/ROCm/HIP/issues&#34;&gt;GitHub issue tracker&lt;/a&gt;. If reporting a bug, include the output of &#34;hipconfig --full&#34; and samples/1_hipInfo/hipInfo (if possible).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kasmtech/KasmVNC</title>
    <updated>2024-07-21T01:39:25Z</updated>
    <id>tag:github.com,2024-07-21:/kasmtech/KasmVNC</id>
    <link href="https://github.com/kasmtech/KasmVNC" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Modern VNC Server and client, web based and secure&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;KasmVNC - Linux Web Remote Desktop&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kasmweb.com&#34;&gt;&lt;img src=&#34;https://kasm-static-content.s3.amazonaws.com/logo_kasm.png&#34; width=&#34;300&#34;&gt;&lt;/a&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;KasmVNC provides remote web-based access to a Desktop or application. While VNC is in the name, KasmVNC differs from other VNC variants such as TigerVNC, RealVNC, and TurboVNC. KasmVNC has broken from the RFB specification which defines VNC, in order to support modern technologies and increase security. KasmVNC is accessed by users from any modern browser and does not support legacy VNC viewer applications. KasmVNC uses a modern YAML based configuration at the server and user level, allowing for ease of management.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.kasmweb.com&#34;&gt;Kasm Technologies&lt;/a&gt; developed Kasm Workspaces, the Containerized Streaming Platform. Kasm has open-sourced the Workspace docker images, which include containerized &lt;a href=&#34;https://github.com/kasmtech/workspaces-images&#34;&gt;full desktops and apps&lt;/a&gt; and &lt;a href=&#34;https://github.com/kasmtech/workspaces-core-images&#34;&gt;base images&lt;/a&gt; intended for developers to create customized streaming containers. These containers can be used standalone or within the &lt;a href=&#34;https://www.kasmweb.com&#34;&gt;Kasm Workspaces Platform&lt;/a&gt; which provides a full Enterprise feature set.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Do not use the README from the master branch&lt;/strong&gt;, unless you are compiling KasmVNC yourself from the tip of master. Use the documentation for your specific release.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kasmweb.com/kasmvnc/docs/1.0.0/index.html&#34;&gt;KasmVNC 1.0.0 Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For beta releases prior to version 1.0.0, use the README in this github project on the tagged commit for that release.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;You must disconnect and reconnect to the server after installation, for the group membership to apply.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Debian/Ubuntu/Kali&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Please choose the package for your distro here (under Assets):&#xA;# https://github.com/kasmtech/KasmVNC/releases&#xA;wget &amp;lt;package_url&amp;gt;&#xA;&#xA;sudo apt-get install ./kasmvncserver_*.deb&#xA;&#xA;# Add your user to the ssl-cert group&#xA;sudo adduser $USER ssl-cert&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Oracle 8&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Please choose the package for your distro here (under Assets):&#xA;# https://github.com/kasmtech/KasmVNC/releases&#xA;wget &amp;lt;package_url&amp;gt;&#xA;&#xA;# Ensure KasmVNC dependencies are available&#xA;sudo dnf config-manager --set-enabled ol8_codeready_builder&#xA;sudo dnf install oracle-epel-release-el8&#xA;&#xA;sudo dnf localinstall ./kasmvncserver_*.rpm&#xA;&#xA;# Add your user to the kasmvnc-cert group&#xA;sudo usermod -a -G kasmvnc-cert $USER&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CentOS 7&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Please choose the package for your distro here (under Assets):&#xA;# https://github.com/kasmtech/KasmVNC/releases&#xA;wget &amp;lt;package_url&amp;gt;&#xA;&#xA;# Ensure KasmVNC dependencies are available&#xA;sudo yum install epel-release&#xA;&#xA;sudo yum install ./kasmvncserver_*.rpm&#xA;&#xA;# Add your user to the kasmvnc-cert group&#xA;sudo usermod -a -G kasmvnc-cert $USER&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;The following examples provide basic usage of KasmVNC with the tools provided. For full documentation on all the utilities and the runtime environment, see our &lt;a href=&#34;https://www.kasmweb.com/kasmvnc/docs/latest/index.html&#34;&gt;KasmVNC Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Start a session and be guided to setup a user and select a default desktop environment&#xA;vncserver&#xA;&#xA;# Start a session with the mate desktop environment&#xA;vncserver -select-de mate&#xA;&#xA;# Add a new user with read/write permissions&#xA;vncpasswd -u my_username -w -r&#xA;&#xA;# Tail the logs&#xA;tail -f ~/.vnc/*.log&#xA;&#xA;# Get a list of current sessions with display IDs&#xA;vncserver -list&#xA;&#xA;# Kill the VNC session with display ID :2&#xA;vncserver -kill :2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;KasmVNC is configured via YAML based configurations. The server level configuration is at &lt;code&gt;/etc/kasmvnc/kasmvnc.yaml&lt;/code&gt;. Edits to this file apply to all users. Individual users can override server global configurations by specifying them in their configuration file at &lt;code&gt;~/.vnc/kasmvnc.yaml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The following configuration shows all default settings. Many of the encoding settings can be overridden by the client, unless the &lt;code&gt;runtime_configuration.allow_client_to_override_kasm_server_settings&lt;/code&gt; setting is set tot false. By default the client is allowed to modify encoding settings.&lt;/p&gt; &#xA;&lt;p&gt;For a full description of each setting see the &lt;a href=&#34;https://www.kasmweb.com/kasmvnc/docs/latest/configuration.html&#34;&gt;configuration reference&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;desktop:&#xA;  resolution:&#xA;    width: 1024&#xA;    height: 768&#xA;  allow_resize: true&#xA;  pixel_depth: 24&#xA;  gpu:&#xA;    hw3d: false&#xA;    drinode: /dev/dri/renderD128&#xA;&#xA;network:&#xA;  protocol: http&#xA;  interface: 0.0.0.0&#xA;  websocket_port: auto&#xA;  use_ipv4: true&#xA;  use_ipv6: true&#xA;  udp:&#xA;    public_ip: auto&#xA;    port: auto&#xA;    stun_server: auto&#xA;  ssl:&#xA;    pem_certificate: /etc/ssl/certs/ssl-cert-snakeoil.pem&#xA;    pem_key: /etc/ssl/private/ssl-cert-snakeoil.key&#xA;    require_ssl: true&#xA;&#xA;user_session:&#xA;  new_session_disconnects_existing_exclusive_session: false&#xA;  concurrent_connections_prompt: false&#xA;  concurrent_connections_prompt_timeout: 10&#xA;  idle_timeout: never&#xA;&#xA;keyboard:&#xA;  remap_keys:&#xA;  ignore_numlock: false&#xA;  raw_keyboard: false&#xA;&#xA;pointer:&#xA;  enabled: true&#xA;&#xA;runtime_configuration:&#xA;  allow_client_to_override_kasm_server_settings: true&#xA;  allow_override_standard_vnc_server_settings: true&#xA;  allow_override_list:&#xA;    - pointer.enabled&#xA;    - data_loss_prevention.clipboard.server_to_client.enabled&#xA;    - data_loss_prevention.clipboard.client_to_server.enabled&#xA;    - data_loss_prevention.clipboard.server_to_client.primary_clipboard_enabled&#xA;&#xA;logging:&#xA;  log_writer_name: all&#xA;  log_dest: logfile&#xA;  level: 30&#xA;&#xA;security:&#xA;  brute_force_protection:&#xA;    blacklist_threshold: 5&#xA;    blacklist_timeout: 10&#xA;&#xA;data_loss_prevention:&#xA;  visible_region:&#xA;    # top: 10&#xA;    # left: 10&#xA;    # right: 40&#xA;    # bottom: 40&#xA;    concealed_region:&#xA;      allow_click_down: false&#xA;      allow_click_release: false&#xA;  clipboard:&#xA;    delay_between_operations: none&#xA;    allow_mimetypes:&#xA;      - chromium/x-web-custom-data&#xA;      - text/html&#xA;      - image/png&#xA;    server_to_client:&#xA;      enabled: true&#xA;      size: unlimited&#xA;      primary_clipboard_enabled: false&#xA;    client_to_server:&#xA;      enabled: true&#xA;      size: unlimited&#xA;  keyboard:&#xA;    enabled: true&#xA;    rate_limit: unlimited&#xA;  logging:&#xA;    level: off&#xA;&#xA;encoding:&#xA;  max_frame_rate: 60&#xA;  full_frame_updates: none&#xA;  rect_encoding_mode:&#xA;    min_quality: 7&#xA;    max_quality: 8&#xA;    consider_lossless_quality: 10&#xA;    rectangle_compress_threads: auto&#xA;&#xA;  video_encoding_mode:&#xA;    jpeg_quality: -1&#xA;    webp_quality: -1&#xA;    max_resolution:&#xA;      width: 1920&#xA;      height: 1080&#xA;    enter_video_encoding_mode:&#xA;      time_threshold: 5&#xA;      area_threshold: 45%&#xA;    exit_video_encoding_mode:&#xA;      time_threshold: 3&#xA;    logging:&#xA;      level: off&#xA;    scaling_algorithm: progressive_bilinear&#xA;&#xA;  compare_framebuffer: auto&#xA;  zrle_zlib_level: auto&#xA;  hextile_improved_compression: true&#xA;&#xA;server:&#xA;  http:&#xA;    headers:&#xA;      - Cross-Origin-Embedder-Policy=require-corp&#xA;      - Cross-Origin-Opener-Policy=same-origin&#xA;    httpd_directory: /usr/share/kasmvnc/www&#xA;  advanced:&#xA;    x_font_path: auto&#xA;    kasm_password_file: ${HOME}/.kasmpasswd&#xA;    x_authority_file: auto&#xA;  auto_shutdown:&#xA;    no_user_session_timeout: never&#xA;    active_user_session_timeout: never&#xA;    inactive_user_session_timeout: never&#xA;&#xA;command_line:&#xA;  prompt: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;New Features!&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Faster jpeg compression (via statically linked libjpeg-turbo)&lt;/li&gt; &#xA; &lt;li&gt;Webp image compression for better bandwidth usage&lt;/li&gt; &#xA; &lt;li&gt;Automatic mixing of webp and jpeg based on CPU availability on server&lt;/li&gt; &#xA; &lt;li&gt;Multi-threaded image encoding for smoother frame rate for servers with more cores&lt;/li&gt; &#xA; &lt;li&gt;WebRTC UDP Transit&lt;/li&gt; &#xA; &lt;li&gt;Lossless QOI Image format for Local LAN&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kasmtech/KasmVNC/wiki/Video-Rendering-Options#video-mode&#34;&gt;Full screen video detection&lt;/a&gt;, goes into configurable video mode for better full screen videoo playback performance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kasmtech/KasmVNC/wiki/Video-Rendering-Options#dynamic-image-quality&#34;&gt;Dynamic jpeg/webp image coompression&lt;/a&gt; quality settings based on screen change rates&lt;/li&gt; &#xA; &lt;li&gt;Seemless clipboard support (on Chromium based browsers)&lt;/li&gt; &#xA; &lt;li&gt;Binary clipboard support for text, images, and formatted text (on Chromium based browsers)&lt;/li&gt; &#xA; &lt;li&gt;Allow client to set/change most configuration settings&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kasmtech/KasmVNC/wiki/Data-Loss-Prevention&#34;&gt;Data Loss Prevention features&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Key stroke logging&lt;/li&gt; &#xA;   &lt;li&gt;Clipboard logging&lt;/li&gt; &#xA;   &lt;li&gt;Max clipboard transfer size up and down&lt;/li&gt; &#xA;   &lt;li&gt;Min time between clipboard operations required&lt;/li&gt; &#xA;   &lt;li&gt;Keyboard input rate limit&lt;/li&gt; &#xA;   &lt;li&gt;Screen region selection&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Deb packages for Debian, Ubuntu, and Kali Linux included in release.&lt;/li&gt; &#xA; &lt;li&gt;RPM packages for CentOS, Oracle, OpenSUSE, Fedora. RPM packages are currently not updatable and not released, though you can build and install them. See build documentation.&lt;/li&gt; &#xA; &lt;li&gt;Web &lt;a href=&#34;https://github.com/kasmtech/KasmVNC/wiki/API&#34;&gt;API&lt;/a&gt; added for remotely controlling and getting information from KasmVNC&lt;/li&gt; &#xA; &lt;li&gt;Multi-User support with permissions that can be changed via the API&lt;/li&gt; &#xA; &lt;li&gt;Web UI uses a webpack for faster load times.&lt;/li&gt; &#xA; &lt;li&gt;Network and CPU bottleneck statistics&lt;/li&gt; &#xA; &lt;li&gt;Relative cursor support (game pointer mode)&lt;/li&gt; &#xA; &lt;li&gt;Cursor lock&lt;/li&gt; &#xA; &lt;li&gt;IME support for languages with extended characters&lt;/li&gt; &#xA; &lt;li&gt;Better mobile support&lt;/li&gt; &#xA; &lt;li&gt;DRI3 GPU acceleration with open source drivers (AMDGPU,Intel,ATI,ARM)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Future Goals:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;H264 encoding&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Compiling From Source&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/kasmtech/KasmVNC/raw/master/builder/README.md&#34;&gt;builder/README.md&lt;/a&gt;. We containerize our build systems to ensure highly repeatable builds.&lt;/p&gt; &#xA;&lt;h3&gt;License and Acknowledgements&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/kasmtech/KasmVNC/raw/master/LICENSE.TXT&#34;&gt;LICENSE.TXT&lt;/a&gt; and &lt;a href=&#34;https://github.com/kasmtech/KasmVNC/raw/master/ACKNOWLEDGEMENTS.md&#34;&gt;ACKNOWLEDGEMENTS.md&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>