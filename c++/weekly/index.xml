<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-24T01:59:56Z</updated>
  <subtitle>Weekly Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>focus-creative-games/hybridclr</title>
    <updated>2022-07-24T01:59:56Z</updated>
    <id>tag:github.com,2022-07-24:/focus-creative-games/hybridclr</id>
    <link href="https://github.com/focus-creative-games/hybridclr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;HybridCLR是一个特性完整、零成本、高性能、低内存的近乎完美的Unity全平台原生c#热更方案。 HybridCLR is a fully featured, zero-cost, high-performance, low-memory solution for Unity&#39;s all-platform native c# hotfix&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;HybridCLR&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/focus-creative-games/hybridclr/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/focus-creative-games/hybridclr/main/docs/images/logo.jpg&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;HybridCLR(代号wolong)是一个&lt;strong&gt;特性完整、零成本、高性能、低内存&lt;/strong&gt;的&lt;strong&gt;近乎完美&lt;/strong&gt;的Unity全平台原生c#热更方案。&lt;/p&gt; &#xA;&lt;p&gt;HybridCLR扩充了il2cpp的代码，使它由纯&lt;a href=&#34;https://en.wikipedia.org/wiki/Ahead-of-time_compilation&#34;&gt;AOT&lt;/a&gt; runtime变成‘AOT+Interpreter’ 混合runtime，进而原生支持动态加载assembly，使得基于il2cpp backend打包的游戏不仅能在Android平台，也能在IOS、Consoles等限制了JIT的平台上高效地以&lt;strong&gt;AOT+interpreter&lt;/strong&gt;混合模式执行。从底层彻底支持了热更新。&lt;/p&gt; &#xA;&lt;p&gt;HybridCLR&lt;strong&gt;开创性地实现了 &lt;code&gt;differential hybrid dll&lt;/code&gt; 技术&lt;/strong&gt;====。即可以对AOT dll任意增删改，HybridCLR会智能地让变化或者新增的类和函数以interpreter模式运行，但未改动的类和函数以AOT方式运行，让热更新的游戏逻辑的运行性能基本达到原生AOT的水平。&lt;/p&gt; &#xA;&lt;h2&gt;特性&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;特性完整。 近乎完整实现了&lt;a href=&#34;https://www.ecma-international.org/publications-and-standards/standards/ecma-335/&#34;&gt;ECMA-335规范&lt;/a&gt;，除了 下文中&#34;限制和注意事项&#34; 之外的特性都支持。&lt;/li&gt; &#xA; &lt;li&gt;零学习和使用成本。 HybridCLR将纯AOT runtime增强为完整的runtime，使得热更新代码与AOT代码无缝工作。脚本类与AOT类在同一个运行时内，可以随意写继承、反射、多线程(volatile、ThreadStatic、Task、async)之类的代码。不需要额外写任何特殊代码、没有代码生成，也没有什么特殊限制。&lt;/li&gt; &#xA; &lt;li&gt;执行高效。实现了一个极其高效的寄存器解释器，所有指标都大幅优于其他热更新方案。&lt;a href=&#34;https://focus-creative-games.github.io/hybridclr/benchmark/#%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E6%8A%A5%E5%91%8A&#34;&gt;性能测试报告&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;内存高效。 热更新脚本中定义的类跟普通c#类占用一样的内存空间，远优于其他热更新方案。&lt;a href=&#34;https://focus-creative-games.github.io/hybridclr/benchmark/#%E5%86%85%E5%AD%98%E5%8D%A0%E7%94%A8%E6%8A%A5%E5%91%8A&#34;&gt;内存占用报告&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;原生支持hotfix修复AOT部分代码。几乎不增加任何开发和运行开销。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;开创性地实现了 &lt;code&gt;differential hybrid dll&lt;/code&gt; 技术&lt;/strong&gt;。即可以将某个热更新dll先AOT形式打包，后面可以对该dll任意增删改，HybridCLR会智能地让变化或者新增的类和函数以interpreter模式运行，但未改动的类和函数以AOT方式运行。这意味着热更新的游戏逻辑的运行性能将接近原生AOT的水平。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;兼容性&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持所有il2cpp支持的平台。目前测试支持 PC(Win32和Win64)、Android(armv7、armv8)、iOS(64bit)、NS（64bit)、WebGL平台，剩余平台有待测试。&lt;/li&gt; &#xA; &lt;li&gt;已经支持Unity 2020-2021全系列LTS版本，预计于2022.8月上旬支持 2019全系列LTS版本&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;工作原理&lt;/h2&gt; &#xA;&lt;p&gt;HybridCLR从mono的&lt;a href=&#34;https://developpaper.com/new-net-interpreter-mono-has-arrived/&#34;&gt;hybrid mode execution&lt;/a&gt;技术中得到启发，为unity的il2cpp之类的AOT runtime额外提供了interpreter模块，将它们由纯AOT运行时改造为&#34;AOT + Interpreter&#34;混合运行方式。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/focus-creative-games/hybridclr/main/docs/images/architecture.png&#34; alt=&#34;icon&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;更具体地说，HybridCLR做了以下几点工作：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;实现了一个高效的元数据(dll)解析库&lt;/li&gt; &#xA; &lt;li&gt;改造了元数据管理模块，实现了元数据的动态注册&lt;/li&gt; &#xA; &lt;li&gt;实现了一个IL指令集到自定义的寄存器指令集的compiler&lt;/li&gt; &#xA; &lt;li&gt;实现了一个高效的寄存器解释器&lt;/li&gt; &#xA; &lt;li&gt;额外提供大量的instinct函数，提升解释器性能&lt;/li&gt; &#xA; &lt;li&gt;提供hotfix AOT的支持&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;与其他流行的c#热更新方案的区别&lt;/h2&gt; &#xA;&lt;h3&gt;本质比较&lt;/h3&gt; &#xA;&lt;p&gt;HybridCLR是原生的c#热更新方案。通俗地说，il2cpp相当于mono的aot模块，HybridCLR相当于mono的interpreter模块，两者合一成为完整mono。HybridCLR使得il2cpp变成一个全功能的runtime，原生（即通过System.Reflection.Assembly.Load）支持动态加载dll，从而支持ios平台的热更新。&lt;/p&gt; &#xA;&lt;p&gt;正因为HybridCLR是原生runtime级别实现，热更新部分的类型与主工程AOT部分类型是完全等价并且无缝统一的。可以随意调用、继承、反射、多线程，不需要生成代码或者写适配器。&lt;/p&gt; &#xA;&lt;p&gt;其他热更新方案则是独立vm，与il2cpp的关系本质上相当于mono中嵌入lua的关系。因此类型系统不统一，为了让热更新类型能够继承AOT部分类型，需要写适配器，并且解释器中的类型不能为主工程的类型系统所识别。特性不完整、开发麻烦、运行效率低下。&lt;/p&gt; &#xA;&lt;h3&gt;实际使用体验或者特性比较&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;学习和使用成本几乎为零。HybridCLR让il2cpp变成全功能的runtime，学习和使用成本几乎为零，几乎零侵入性。而其他方案则有大量的坑和需要规避的规则，学习和使用成本，需要对原项目作大量改造。&lt;/li&gt; &#xA; &lt;li&gt;可以使用所有c#的特性。而其他方案往往有大量的限制。&lt;/li&gt; &#xA; &lt;li&gt;可以直接支持使用和继承主工程中的类型。其他方案要写适配器或者生成代码。&lt;/li&gt; &#xA; &lt;li&gt;热更新部分元数据与AOT元数据无缝统一。像反射代码能够正常工作的，AOT部分也可以通过标准Reflection接口创建出热更新对象。其他方案做不到。&lt;/li&gt; &#xA; &lt;li&gt;对多线程支持良好。像多线程、ThreadStatic、async等等特性都是HybridCLR直接支持，其他方案除了async特性外均难以支持。&lt;/li&gt; &#xA; &lt;li&gt;Unity工作流与原生几乎完全相同。HybridCLR中热更新MonoBehaviour可以直接挂载在热更新资源上，并且正确工作。其他方案不行。&lt;/li&gt; &#xA; &lt;li&gt;兼容性极高。各种第三方库只要在il2cpp下能工作，在HybridCLR下也能正常工作。其他方案往往要大量魔改源码。&lt;/li&gt; &#xA; &lt;li&gt;内存效率极高。HybridCLR中热更新类型与主工程的AOT类型完全等价，占用一样多的空间。其他方案的同等类型则是假类型，不仅不能被runtime识别，还多占了数倍空间。&lt;/li&gt; &#xA; &lt;li&gt;执行效率高。HybridCLR中热更新部分与主工程AOT部分交互属于il2cpp内部交互，效率极高。而其他方案则是独立虚拟机与il2cpp之间的效率，不仅交互麻烦还效率低下。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;文档&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://focus-creative-games.github.io/hybridclr/index/&#34;&gt;官方文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://focus-creative-games.github.io/hybridclr/start_up/&#34;&gt;快速上手&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/focus-creative-games/hybridclr_trial&#34;&gt;示例项目&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/column/c_1489549396035870720&#34;&gt;知乎专栏&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://edu.uwa4d.com/course-intro/0/432&#34;&gt;UWA学堂&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;稳定性状况&lt;/h2&gt; &#xA;&lt;p&gt;=== &lt;strong&gt;庆祝于 2022.6.7 第一款使用HybridCLR的android和iOS双端休闲游戏正式上线&lt;/strong&gt; ===，7月份还有几款中重游戏上线或者对外测试。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2020系列版本于2020.7月底发布正式版本，2022版本预计于2020.8发布正式版本，2019版本预计于2020.9发布正式版本。&lt;/li&gt; &#xA; &lt;li&gt;目前PC（x86及x64）、Android（arm v7及v8)、iOS 已跑通所有单元测试，可稳定体验使用。&lt;/li&gt; &#xA; &lt;li&gt;测试过大量游戏常见库，未发现跟il2cpp原生兼容但使用HybridCLR后不兼容性的库。只要能在il2cpp backend下工作的库都可以在HybridCLR下正常工作。甚至那些与il2cpp因为AOT问题不兼容的库，现在因为HybridCLR对il2cpp的能力扩充，反而可以正常运行了。&lt;/li&gt; &#xA; &lt;li&gt;已经有几十个大中型游戏项目较完整地接入，数百款中小款或独立游戏比较完整接入，并且其中一些在紧锣密鼓作上线前测试。具体参见收集的一些 &lt;a href=&#34;https://focus-creative-games.github.io/hybridclr/ref_project/&#34;&gt;完整接入的商业项目列表&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;支持与联系&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;QQ群：651188171 HybridCLR(wolong)技术交流群 &lt;strong&gt;(官方主群)&lt;/strong&gt;。可以反馈bug，但&lt;strong&gt;不要在群里咨询基础使用问题&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;QQ群：428404198 HybridCLR(wolong)新手群 &lt;strong&gt;(新手群)&lt;/strong&gt;。新手使用过程中遇到问题，都可以在群里咨询。&lt;/li&gt; &#xA; &lt;li&gt;邮箱：&lt;a href=&#34;mailto:walon@focus-creative-games.com&#34;&gt;walon@focus-creative-games.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;RoadMap&lt;/h2&gt; &#xA;&lt;p&gt;HybridCLR虽然与il2cpp相关，但绝大多数核心代码独立于il2cpp，很容易移植（预计一个月）到其他不支持AOT+Interpreter的CLR平台。无论unity如何版本变迁，哪怕废弃了il2cpp改用.net 6+，HybridCLR会持续跟进，稳定地提供跨平台的CLR热更新服务，直至某天.net官方直接支持AOT+Interpreter，则HybridCLR完成其历史使命。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;正式支持Unity 2019LTS全系列版本 (2022.7 - 2022.8)&lt;/li&gt; &#xA; &lt;li&gt;支持 &lt;code&gt;Hybrid Dll&lt;/code&gt; 技术 (2022.9)&lt;/li&gt; &#xA; &lt;li&gt;指令优化，编译后指令数减少到原来1/4-1/2，基础指令和大多数对象模型指令有100%-300%的性能提升。 (2022.10 -)&lt;/li&gt; &#xA; &lt;li&gt;支持增量式GC (2022.10 -)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;关于作者&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;walon&lt;/strong&gt; ：&lt;strong&gt;focus-creative-games&lt;/strong&gt; 创始人&lt;/p&gt; &#xA;&lt;p&gt;毕业于清华大学物理系，2006年CMO金牌，奥数国家集训队成员，保送清华基科班。专注于游戏技术，擅长开发架构和基础技术设施。&lt;/p&gt; &#xA;&lt;h2&gt;license&lt;/h2&gt; &#xA;&lt;p&gt;HybridCLR is licensed under the &lt;a href=&#34;https://github.com/focus-creative-games/hybridclr/raw/main/LICENSE&#34;&gt;MIT&lt;/a&gt; license&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>loveBabbar/CodeHelp-DSA-Busted-Series</title>
    <updated>2022-07-24T01:59:56Z</updated>
    <id>tag:github.com,2022-07-24:/loveBabbar/CodeHelp-DSA-Busted-Series</id>
    <link href="https://github.com/loveBabbar/CodeHelp-DSA-Busted-Series" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repo is creating providing students easy access to all the programs taught under Codehelp&#39;s DSA Busted Series.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CodeHelp-DSA-Busted-Series&lt;/h1&gt; &#xA;&lt;p&gt;Hello Jee,&lt;/p&gt; &#xA;&lt;p&gt;This repo is for the students for easy access to all the programs taught under Codehelp&#39;s DSA Busted Series.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=WQoB2z67hvY&amp;amp;list=PLDzeHZWIZsTryvtXdMr6rPh4IDexB5NIA&#34;&gt;DSA Busted Series&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Youtube Channel: CodeHelp - by Babbar&lt;/p&gt; &#xA;&lt;p&gt;Your Instructor: Love Babbar&lt;/p&gt; &#xA;&lt;p&gt;Learn a Lot, Enjoy a Lot.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>carla-simulator/carla</title>
    <updated>2022-07-24T01:59:56Z</updated>
    <id>tag:github.com,2022-07-24:/carla-simulator/carla</id>
    <link href="https://github.com/carla-simulator/carla" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open-source simulator for autonomous driving research.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CARLA Simulator&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/carla-simulator/carla&#34;&gt;&lt;img src=&#34;https://travis-ci.org/carla-simulator/carla.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://carla.readthedocs.io&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/carla/badge/?version=latest&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://carla.org&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/carla-simulator/carla/master/Docs/img/btn/web.png&#34; alt=&#34;carla.org&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/carla-simulator/carla/raw/master/Docs/download.md&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/carla-simulator/carla/master/Docs/img/btn/download.png&#34; alt=&#34;download&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://carla.readthedocs.io&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/carla-simulator/carla/master/Docs/img/btn/docs.png&#34; alt=&#34;documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/carla-simulator/carla/discussions&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/carla-simulator/carla/master/Docs/img/btn/forum.png&#34; alt=&#34;forum&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/8kqACuC&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/carla-simulator/carla/master/Docs/img/btn/chat.png&#34; alt=&#34;discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;CARLA is an open-source simulator for autonomous driving research. CARLA has been developed from the ground up to support development, training, and validation of autonomous driving systems. In addition to open-source code and protocols, CARLA provides open digital assets (urban layouts, buildings, vehicles) that were created for this purpose and can be used freely. The simulation platform supports flexible specification of sensor suites and environmental conditions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=7jej46ALVRE&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/carla-simulator/carla/master/Docs/img/video_thumbnail_0910.jpg&#34; alt=&#34;CARLA Video&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to benchmark your model in the same conditions as in our CoRL’17 paper, check out &lt;a href=&#34;https://github.com/carla-simulator/driving-benchmarks&#34;&gt;Benchmarking&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://carla-releases.s3.amazonaws.com/Linux/Dev/CARLA_Latest.tar.gz&#34;&gt;&lt;strong&gt;Get CARLA overnight build&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Recommended system&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Intel i7 gen 9th - 11th / Intel i9 gen 9th - 11th / AMD ryzen 7 / AMD ryzen 9&lt;/li&gt; &#xA; &lt;li&gt;+16 GB RAM memory&lt;/li&gt; &#xA; &lt;li&gt;NVIDIA RTX 2070 / NVIDIA RTX 2080 / NVIDIA RTX 3070, NVIDIA RTX 3080&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu 18.04&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;CARLA Ecosystem&lt;/h2&gt; &#xA;&lt;p&gt;Repositories associated to the CARLA simulation platform:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://leaderboard.carla.org/&#34;&gt;&lt;strong&gt;CARLA Autonomous Driving leaderboard&lt;/strong&gt;&lt;/a&gt;: Automatic platform to validate Autonomous Driving stacks&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/carla-simulator/scenario_runner&#34;&gt;&lt;strong&gt;Scenario_Runner&lt;/strong&gt;&lt;/a&gt;: Engine to execute traffic scenarios in CARLA 0.9.X&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/carla-simulator/ros-bridge&#34;&gt;&lt;strong&gt;ROS-bridge&lt;/strong&gt;&lt;/a&gt;: Interface to connect CARLA 0.9.X to ROS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/carla-simulator/driving-benchmarks&#34;&gt;&lt;strong&gt;Driving-benchmarks&lt;/strong&gt;&lt;/a&gt;: Benchmark tools for Autonomous Driving tasks&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/felipecode/coiltraine&#34;&gt;&lt;strong&gt;Conditional Imitation-Learning&lt;/strong&gt;&lt;/a&gt;: Training and testing Conditional Imitation Learning models in CARLA&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/carla-simulator/carla-autoware&#34;&gt;&lt;strong&gt;AutoWare AV stack&lt;/strong&gt;&lt;/a&gt;: Bridge to connect AutoWare AV stack to CARLA&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/carla-simulator/reinforcement-learning&#34;&gt;&lt;strong&gt;Reinforcement-Learning&lt;/strong&gt;&lt;/a&gt;: Code for running Conditional Reinforcement Learning models in CARLA&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/carla-simulator/carla-map-editor&#34;&gt;&lt;strong&gt;Map Editor&lt;/strong&gt;&lt;/a&gt;: Standalone GUI application to enhance RoadRunner maps with traffic lights and traffic signs information&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Like what you see? Star us on GitHub to support the project!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Paper&lt;/h2&gt; &#xA;&lt;p&gt;If you use CARLA, please cite our CoRL’17 paper.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;CARLA: An Open Urban Driving Simulator&lt;/em&gt;&lt;br&gt;Alexey Dosovitskiy, German Ros, Felipe Codevilla, Antonio Lopez, Vladlen Koltun; PMLR 78:1-16 [&lt;a href=&#34;http://proceedings.mlr.press/v78/dosovitskiy17a/dosovitskiy17a.pdf&#34;&gt;PDF&lt;/a&gt;] [&lt;a href=&#34;https://www.youtube.com/watch?v=xfyK03MEZ9Q&amp;amp;feature=youtu.be&amp;amp;t=2h44m30s&#34;&gt;talk&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@inproceedings{Dosovitskiy17,&#xA;  title = {{CARLA}: {An} Open Urban Driving Simulator},&#xA;  author = {Alexey Dosovitskiy and German Ros and Felipe Codevilla and Antonio Lopez and Vladlen Koltun},&#xA;  booktitle = {Proceedings of the 1st Annual Conference on Robot Learning},&#xA;  pages = {1--16},&#xA;  year = {2017}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building CARLA&lt;/h2&gt; &#xA;&lt;p&gt;Use &lt;code&gt;git clone&lt;/code&gt; or download the project from this page. Note that the master branch contains the most recent release of CARLA with the latest fixes and features.&lt;/p&gt; &#xA;&lt;p&gt;Then follow the instruction at &lt;a href=&#34;https://carla.readthedocs.io/en/latest/build_linux/&#34;&gt;How to build on Linux&lt;/a&gt; or &lt;a href=&#34;https://carla.readthedocs.io/en/latest/build_windows/&#34;&gt;How to build on Windows&lt;/a&gt;.&lt;br&gt; The Linux build needs for an UE patch to solve some visualization issues regarding Vulkan. Those already working with a Linux build should install the patch and make the UE build again using the following commands.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Download and install the UE patch  &#xA;cd ~/UnrealEngine_4.24&#xA;wget https://carla-releases.s3.eu-west-3.amazonaws.com/Linux/UE_Patch/430667-13636743-patch.txt ~/430667-13636743-patch.txt&#xA;patch --strip=4 &amp;lt; ~/430667-13636743-patch.txt&#xA;# Build UE&#xA;./Setup.sh &amp;amp;&amp;amp; ./GenerateProjectFiles.sh &amp;amp;&amp;amp; make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Unfortunately we don&#39;t have official instructions to build on Mac yet, please check the progress at &lt;a href=&#34;https://github.com/carla-simulator/carla/issues/150&#34;&gt;issue #150&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please take a look at our &lt;a href=&#34;https://carla.readthedocs.io/en/latest/cont_contribution_guidelines/&#34;&gt;Contribution guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;F.A.Q.&lt;/h2&gt; &#xA;&lt;p&gt;If you run into problems, check our &lt;a href=&#34;https://carla.readthedocs.io/en/latest/build_faq/&#34;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;CARLA Talks&lt;/h2&gt; &#xA;&lt;p&gt;The team creates some additional content for users, besides the docs. This is a great way to cover different subjects such as detailed explanations for a specific module, latest improvements in a feature, future work and much more.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;CARLA Talks 2020 (May):&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;General&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Art improvements: environment and rendering — &lt;a href=&#34;https://youtu.be/ZZaHevsz8W8&#34;&gt;video&lt;/a&gt; | &lt;a href=&#34;https://drive.google.com/file/d/1l9Ztaq0Q8fNN5YPU4-5vL13eZUwsQl5P/view?usp=sharing&#34;&gt;slides&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Core implementations: synchrony, snapshots and landmarks — &lt;a href=&#34;https://youtu.be/nyyTLmphqY4&#34;&gt;video&lt;/a&gt; | &lt;a href=&#34;https://drive.google.com/file/d/1yaOwf1419qWZqE1gTSrrknsWOhawEWh_/view?usp=sharing&#34;&gt;slides&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Data ingestion — &lt;a href=&#34;https://youtu.be/mHiUUZ4xC9o&#34;&gt;video&lt;/a&gt; | &lt;a href=&#34;https://drive.google.com/file/d/10uNBAMreKajYimIhwCqSYXjhfVs2bX31/view?usp=sharing&#34;&gt;slides&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Pedestrians and their implementation — &lt;a href=&#34;https://youtu.be/Uoz2ihDwaWA&#34;&gt;video&lt;/a&gt; | &lt;a href=&#34;https://drive.google.com/file/d/1Tsosin7BLP1k558shtbzUdo2ZXVKy5CB/view?usp=sharing&#34;&gt;slides&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Sensors in CARLA — &lt;a href=&#34;https://youtu.be/T8qCSet8WK0&#34;&gt;video&lt;/a&gt; | &lt;a href=&#34;https://drive.google.com/file/d/1UO8ZAIOp-1xaBzcFMfn_IoipycVkUo4q/view?usp=sharing&#34;&gt;slides&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Modules&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Improvements in the Traffic Manager — &lt;a href=&#34;https://youtu.be/n9cufaJ17eA&#34;&gt;video&lt;/a&gt; | &lt;a href=&#34;https://drive.google.com/file/d/1R9uNZ6pYHSZoEBxs2vYK7swiriKbbuxo/view?usp=sharing&#34;&gt;slides&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Integration of autoware and ROS — &lt;a href=&#34;https://youtu.be/ChIgcC2scwU&#34;&gt;video&lt;/a&gt; | &lt;a href=&#34;https://drive.google.com/file/d/1uO6nBaFirrllb08OeqGAMVLApQ6EbgAt/view?usp=sharing&#34;&gt;slides&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Introducing ScenarioRunner — &lt;a href=&#34;https://youtu.be/dcnnNJowqzM&#34;&gt;video&lt;/a&gt; | &lt;a href=&#34;https://drive.google.com/file/d/1zgoH_kLOfIw117FJGm2IVZZAIRw9U2Q0/view?usp=sharing&#34;&gt;slides&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;OpenSCENARIO support — &lt;a href=&#34;https://drive.google.com/file/d/1g6ATxZRTWEdstiZwfBN1_T_x_WwZs0zE/view?usp=sharing&#34;&gt;slides&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Features&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Co-Simulations with SUMO and PTV-Vissim — &lt;a href=&#34;https://youtu.be/PuFSbj1PU94&#34;&gt;video&lt;/a&gt; | &lt;a href=&#34;https://drive.google.com/file/d/10DgMNUBqKqWBrdiwBiAIT4DdR9ObCquI/view?usp=sharing&#34;&gt;slides&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Integration of RSS-lib — &lt;a href=&#34;https://drive.google.com/file/d/1whREmrCv67fOMipgCk6kkiW4VPODig0A/view?usp=sharing&#34;&gt;slides&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The External Sensor Interface (ESI) — &lt;a href=&#34;https://youtu.be/5hXHPV9FIeY&#34;&gt;video&lt;/a&gt; | &lt;a href=&#34;https://drive.google.com/file/d/1VWFaEoS12siW6NtQDUkm44BVO7tveRbJ/view?usp=sharing&#34;&gt;slides&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The OpenDRIVE Standalone Mode — &lt;a href=&#34;https://youtu.be/U25GhofVV1Q&#34;&gt;video&lt;/a&gt; | &lt;a href=&#34;https://drive.google.com/file/d/1D5VsgfX7dmgPWn7UtDDid3-OdS1HI4pY/view?usp=sharing&#34;&gt;slides&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Licenses&lt;/h2&gt; &#xA;&lt;h4&gt;CARLA licenses&lt;/h4&gt; &#xA;&lt;p&gt;CARLA specific code is distributed under MIT License.&lt;/p&gt; &#xA;&lt;p&gt;CARLA specific assets are distributed under CC-BY License.&lt;/p&gt; &#xA;&lt;h4&gt;CARLA Dependency and Integration licenses&lt;/h4&gt; &#xA;&lt;p&gt;The ad-rss-lib library compiled and linked by the &lt;a href=&#34;https://raw.githubusercontent.com/carla-simulator/carla/master/Docs/adv_rss.md&#34;&gt;RSS Integration build variant&lt;/a&gt; introduces &lt;a href=&#34;https://opensource.org/licenses/LGPL-2.1&#34;&gt;LGPL-2.1-only License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Unreal Engine 4 follows its &lt;a href=&#34;https://www.unrealengine.com/en-US/faq&#34;&gt;own license terms&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;CARLA uses three dependencies as part of the SUMO integration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://proj.org/&#34;&gt;PROJ&lt;/a&gt;, a generic coordinate transformation software which uses the &lt;a href=&#34;https://proj.org/about.html#license&#34;&gt;X/MIT open source license&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sqlite.org&#34;&gt;SQLite&lt;/a&gt;, part of the PROJ dependencies, which is &lt;a href=&#34;https://www.sqlite.org/purchase/license&#34;&gt;in the public domain&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://xerces.apache.org/xerces-c/&#34;&gt;Xerces-C&lt;/a&gt;, a validating XML parser, which is made available under the &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;Apache Software License, Version 2.0&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;CARLA uses one dependency as part of the Chrono integration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eigen.tuxfamily.org/index.php?title=Main_Page&#34;&gt;Eigen&lt;/a&gt;, a C++ template library for linear algebra which uses the &lt;a href=&#34;https://www.mozilla.org/en-US/MPL/2.0/&#34;&gt;MPL2 license&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;CARLA uses the Autodesk FBX SDK for converting FBX to OBJ in the import process of maps. This step is optional, and the SDK is located &lt;a href=&#34;https://www.autodesk.com/developer-network/platform-technologies/fbx-sdk-2020-0&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This software contains Autodesk® FBX® code developed by Autodesk, Inc. Copyright 2020 Autodesk, Inc. All rights, reserved. Such code is provided &#34;as is&#34; and Autodesk, Inc. disclaims any and all warranties, whether express or implied, including without limitation the implied warranties of merchantability, fitness for a particular purpose or non-infringement of third party rights. In no event shall Autodesk, Inc. be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of such code.&#34;&lt;/p&gt;</summary>
  </entry>
</feed>