<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-22T01:30:49Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>AutoHotkey/AutoHotkey</title>
    <updated>2022-12-22T01:30:49Z</updated>
    <id>tag:github.com,2022-12-22:/AutoHotkey/AutoHotkey</id>
    <link href="https://github.com/AutoHotkey/AutoHotkey" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AutoHotkey - macro-creation and automation-oriented scripting utility for Windows.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AutoHotkey&lt;/h1&gt; &#xA;&lt;p&gt;AutoHotkey is a free, open source macro-creation and automation software utility that allows users to automate repetitive tasks. It is driven by a custom scripting language that has special provision for defining keyboard shortcuts, otherwise known as hotkeys.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.autohotkey.com/&#34;&gt;https://www.autohotkey.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to Compile&lt;/h2&gt; &#xA;&lt;p&gt;AutoHotkey v2 is developed with &lt;a href=&#34;https://www.visualstudio.com/products/visual-studio-community-vs&#34;&gt;Microsoft Visual Studio Community 2022&lt;/a&gt;, which is a free download from Microsoft.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Get the source code.&lt;/li&gt; &#xA; &lt;li&gt;Open AutoHotkeyx.sln in Visual Studio.&lt;/li&gt; &#xA; &lt;li&gt;Select the appropriate Build and Platform.&lt;/li&gt; &#xA; &lt;li&gt;Build.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The project is configured in a way that allows building with Visual Studio 2012 or later, but only the 2022 toolset is regularly tested. Some newer C++ language features are used and therefore a later version of the compiler might be required.&lt;/p&gt; &#xA;&lt;h2&gt;Developing in VS Code&lt;/h2&gt; &#xA;&lt;p&gt;AutoHotkey v2 can also be built and debugged in VS Code.&lt;/p&gt; &#xA;&lt;p&gt;Requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools&#34;&gt;C/C++ for Visual Studio Code&lt;/a&gt;. VS Code might prompt you to install this if you open a .cpp file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/vs/17/release/vs_BuildTools.exe&#34;&gt;Build Tools for Visual Studio 2022&lt;/a&gt; with the &#34;Desktop development with C++&#34; workload, or similar (some older or newer versions and different products should work).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build Configurations&lt;/h2&gt; &#xA;&lt;p&gt;AutoHotkeyx.vcxproj contains several combinations of build configurations. The main configurations are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Debug&lt;/strong&gt;: AutoHotkey.exe in debug mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Release&lt;/strong&gt;: AutoHotkey.exe for general use.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Self-contained&lt;/strong&gt;: AutoHotkeySC.bin, used for compiled scripts.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Secondary configurations are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;(mbcs)&lt;/strong&gt;: ANSI (multi-byte character set). Configurations without this suffix are Unicode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;(minimal)&lt;/strong&gt;: Alternative project settings for producing a smaller binary, possibly with lower performance and added dependencies.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Platforms&lt;/h2&gt; &#xA;&lt;p&gt;AutoHotkeyx.vcxproj includes the following Platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Win32&lt;/strong&gt;: for Windows 32-bit.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;x64&lt;/strong&gt;: for Windows x64.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;AutoHotkey supports Windows XP with or without service packs and Windows 2000 via an asm patch (win2kcompat.asm). Support may be removed if maintaining it becomes non-trivial. Older versions are not supported.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>facebookexperimental/object-introspection</title>
    <updated>2022-12-22T01:30:49Z</updated>
    <id>tag:github.com,2022-12-22:/facebookexperimental/object-introspection</id>
    <link href="https://github.com/facebookexperimental/object-introspection" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Object Introspection (OI) enables on-demand, hierarchical profiling of objects in arbitrary C/C++ programs with no recompilation.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;object-introspection&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://matrix.to/#/#object-introspection:matrix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/matrix/object-introspection:matrix.org.svg?sanitize=true&#34; alt=&#34;Matrix Chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Object Introspection is a memory profiling technology for C++ objects. It provides the ability to dynamically instrument applications to capture the precise memory occupancy of entire object hierarchies including all containers and dynamic allocations. All this with no code modification or recompilation!&lt;/p&gt; &#xA;&lt;p&gt;For more information on the technology and how to get started applying it to your applications please check out the &lt;a href=&#34;https://facebookexperimental.github.io/object-introspection/&#34;&gt;Object Introspection&lt;/a&gt; website.&lt;/p&gt; &#xA;&lt;h2&gt;Join the Object Introspection community&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/facebookexperimental/object-introspection/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; file for how to help out.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Object Introspection is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/facebookexperimental/object-introspection/main/LICENSE&#34;&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>electronicarts/CnC_Remastered_Collection</title>
    <updated>2022-12-22T01:30:49Z</updated>
    <id>tag:github.com,2022-12-22:/electronicarts/CnC_Remastered_Collection</id>
    <link href="https://github.com/electronicarts/CnC_Remastered_Collection" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CnC_Remastered_Collection&lt;/h1&gt;</summary>
  </entry>
</feed>