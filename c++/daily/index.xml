<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-29T01:28:31Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>halpz/re3</title>
    <updated>2023-10-29T01:28:31Z</updated>
    <id>tag:github.com,2023-10-29:/halpz/re3</id>
    <link href="https://github.com/halpz/re3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://github.com/halpz/re3/raw/master/res/images/logo_1024.png?raw=true&#34; alt=&#34;re3 logo&#34; width=&#34;200&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://actions-badge.atrox.dev/GTAmodding/re3/goto?ref=master&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2FGTAmodding%2Fre3%2Fbadge%3Fref%3Dmaster&amp;amp;style=flat&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/RFNbjsUMGg&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/discord-join-7289DA.svg?logo=discord&amp;amp;longCache=true&amp;amp;style=flat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Intro&lt;/h2&gt; &#xA;&lt;p&gt;In this repository you&#39;ll find the fully reversed source code for GTA III (&lt;a href=&#34;https://github.com/halpz/re3/tree/master/&#34;&gt;master&lt;/a&gt; branch) and GTA VC (&lt;a href=&#34;https://github.com/halpz/re3/tree/miami/&#34;&gt;miami&lt;/a&gt; branch).&lt;/p&gt; &#xA;&lt;p&gt;It has been tested and works on Windows, Linux, MacOS and FreeBSD, on x86, amd64, arm and arm64.&lt;br&gt; Rendering is handled either by original RenderWare (D3D8) or the reimplementation &lt;a href=&#34;https://github.com/aap/librw&#34;&gt;librw&lt;/a&gt; (D3D9, OpenGL 2.1 or above, OpenGL ES 2.0 or above).&lt;br&gt; Audio is done with MSS (using dlls from original GTA) or OpenAL.&lt;/p&gt; &#xA;&lt;p&gt;The project has also been ported to the &lt;a href=&#34;https://github.com/AGraber/re3-nx/&#34;&gt;Nintendo Switch&lt;/a&gt;, &lt;a href=&#34;https://github.com/Rinnegatamante/re3&#34;&gt;Playstation Vita&lt;/a&gt; and &lt;a href=&#34;https://github.com/GaryOderNichts/re3-wiiu/&#34;&gt;Nintendo Wii U&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We cannot build for PS2 or Xbox yet. If you&#39;re interested in doing so, get in touch with us.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;re3 requires PC game assets to work, so you &lt;strong&gt;must&lt;/strong&gt; own &lt;a href=&#34;https://store.steampowered.com/app/12100/Grand_Theft_Auto_III/&#34;&gt;a copy of GTA III&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Build re3 or download the latest build: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nightly.link/GTAmodding/re3/workflows/re3_msvc_x86/master/re3_Release_win-x86-librw_d3d9-mss.zip&#34;&gt;Windows D3D9 MSS 32bit&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nightly.link/GTAmodding/re3/workflows/re3_msvc_amd64/master/re3_Release_win-amd64-librw_d3d9-oal.zip&#34;&gt;Windows D3D9 64bit&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nightly.link/GTAmodding/re3/workflows/re3_msvc_amd64/master/re3_Release_win-amd64-librw_gl3_glfw-oal.zip&#34;&gt;Windows OpenGL 64bit&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nightly.link/GTAmodding/re3/workflows/build-cmake-conan/master/ubuntu-18.04-gl3.zip&#34;&gt;Linux 64bit&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nightly.link/GTAmodding/re3/workflows/build-cmake-conan/master/macos-latest-gl3.zip&#34;&gt;MacOS 64bit x86-64&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Extract the downloaded zip over your GTA 3 directory and run re3. The zip includes the binary, updated and additional gamefiles and in case of OpenAL the required dlls.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1521437/107704085-fbdabd00-6cbc-11eb-8406-8951a80ccb16.png&#34; alt=&#34;re3 2021-02-11 22-57-03-23&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1521437/107703339-cbdeea00-6cbb-11eb-8f0b-07daa105d470.png&#34; alt=&#34;re3 2021-02-11 22-43-44-98&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1521437/107703343-cd101700-6cbb-11eb-9ccd-012cb90524b7.png&#34; alt=&#34;re3 2021-02-11 22-46-33-76&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1521437/107703348-d00b0780-6cbb-11eb-8afd-054249c2b95e.png&#34; alt=&#34;re3 2021-02-11 22-50-29-54&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Improvements&lt;/h2&gt; &#xA;&lt;p&gt;We have implemented a number of changes and improvements to the original game. They can be configured in &lt;code&gt;core/config.h&lt;/code&gt;. Some of them can be toggled at runtime, some cannot.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixed a lot of smaller and bigger bugs&lt;/li&gt; &#xA; &lt;li&gt;User files (saves and settings) stored in GTA root directory&lt;/li&gt; &#xA; &lt;li&gt;Settings stored in re3.ini file instead of gta3.set&lt;/li&gt; &#xA; &lt;li&gt;Debug menu to do and change various things (Ctrl-M to open)&lt;/li&gt; &#xA; &lt;li&gt;Debug camera (Ctrl-B to toggle)&lt;/li&gt; &#xA; &lt;li&gt;Rotatable camera&lt;/li&gt; &#xA; &lt;li&gt;XInput controller support (Windows)&lt;/li&gt; &#xA; &lt;li&gt;No loading screens between islands (&#34;map memory usage&#34; in menu)&lt;/li&gt; &#xA; &lt;li&gt;Skinned ped support (models from Xbox or Mobile)&lt;/li&gt; &#xA; &lt;li&gt;Rendering &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Widescreen support (properly scaled HUD, Menu and FOV)&lt;/li&gt; &#xA;   &lt;li&gt;PS2 MatFX (vehicle reflections)&lt;/li&gt; &#xA;   &lt;li&gt;PS2 alpha test (better rendering of transparency)&lt;/li&gt; &#xA;   &lt;li&gt;PS2 particles&lt;/li&gt; &#xA;   &lt;li&gt;Xbox vehicle rendering&lt;/li&gt; &#xA;   &lt;li&gt;Xbox world lightmap rendering (needs Xbox map)&lt;/li&gt; &#xA;   &lt;li&gt;Xbox ped rim light&lt;/li&gt; &#xA;   &lt;li&gt;Xbox screen rain droplets&lt;/li&gt; &#xA;   &lt;li&gt;More customizable colourfilter&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Menu &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Map&lt;/li&gt; &#xA;   &lt;li&gt;More options&lt;/li&gt; &#xA;   &lt;li&gt;Controller configuration menu&lt;/li&gt; &#xA;   &lt;li&gt;...&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Can load DFFs and TXDs from other platforms, possibly with a performance penalty&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;To-Do&lt;/h2&gt; &#xA;&lt;p&gt;The following things would be nice to have/do:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fix physics for high FPS&lt;/li&gt; &#xA; &lt;li&gt;Improve performance on lower end devices, especially the OpenGL layer on the Raspberry Pi (if you have experience with this, please get in touch)&lt;/li&gt; &#xA; &lt;li&gt;Compare code with PS2 code (tedious, no good decompiler)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20210217192931/https://github.com/GTAmodding/re3/wiki/PS2-port&#34;&gt;PS2 port&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Xbox port (not quite as important)&lt;/li&gt; &#xA; &lt;li&gt;reverse remaining unused/debug functions&lt;/li&gt; &#xA; &lt;li&gt;compare CodeWarrior build with original binary for more accurate code (very tedious)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Modding&lt;/h2&gt; &#xA;&lt;p&gt;Asset modifications (models, texture, handling, script, ...) should work the same way as with original GTA for the most part.&lt;/p&gt; &#xA;&lt;p&gt;CLEO scripts work with &lt;a href=&#34;https://github.com/cleolibrary/CLEO-Redux&#34;&gt;CLEO Redux&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Mods that make changes to the code (dll/asi, limit adjusters) will &lt;em&gt;not&lt;/em&gt; work. Some things these mods do are already implemented in re3 (much of SkyGFX, GInput, SilentPatch, Widescreen fix), others can easily be achieved (increasing limis, see &lt;code&gt;config.h&lt;/code&gt;), others will simply have to be rewritten and integrated into the code directly. Sorry for the inconvenience.&lt;/p&gt; &#xA;&lt;h2&gt;Building from Source&lt;/h2&gt; &#xA;&lt;p&gt;When using premake, you may want to point GTA_III_RE_DIR environment variable to GTA3 root folder if you want the executable to be moved there via post-build script.&lt;/p&gt; &#xA;&lt;p&gt;Clone the repository with &lt;code&gt;git clone --recursive https://github.com/halpz/re3.git&lt;/code&gt;. Then &lt;code&gt;cd re3&lt;/code&gt; into the cloned repository.&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Linux Premake&lt;/summary&gt; &#xA; &lt;p&gt;For Linux using premake, proceed: &lt;a href=&#34;https://web.archive.org/web/20210217192751/https://github.com/GTAmodding/re3/wiki/Building-on-Linux&#34;&gt;Building on Linux&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Linux Conan&lt;/summary&gt; &#xA; &lt;p&gt;Install python and conan, and then run build.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code&gt;conan export vendor/librw librw/master@&#xA;mkdir build&#xA;cd build&#xA;conan install .. re3/master@ -if build -o re3:audio=openal -o librw:platform=gl3 -o librw:gl3_gfxlib=glfw --build missing -s re3:build_type=RelWithDebInfo -s librw:build_type=RelWithDebInfo&#xA;conan build .. -if build -bf build -pf package&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;MacOS Premake&lt;/summary&gt; &#xA; &lt;p&gt;For MacOS using premake, proceed: &lt;a href=&#34;https://web.archive.org/web/20210717004757/https://github.com/GTAmodding/re3/wiki/Building-on-MacOS&#34;&gt;Building on MacOS&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;FreeBSD&lt;/summary&gt; &#xA; &lt;p&gt;For FreeBSD using premake, proceed: &lt;a href=&#34;https://web.archive.org/web/20210217192740/https://github.com/GTAmodding/re3/wiki/Building-on-FreeBSD&#34;&gt;Building on FreeBSD&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Windows&lt;/summary&gt; &#xA; &lt;p&gt;Assuming you have Visual Studio 2015/2017/2019:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Run one of the &lt;code&gt;premake-vsXXXX.cmd&lt;/code&gt; variants on root folder.&lt;/li&gt; &#xA;  &lt;li&gt;Open build/re3.sln with Visual Studio and compile the solution.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;Microsoft recently discontinued its downloads of the DX9 SDK. You can download an archived version here: &lt;a href=&#34;https://archive.org/details/dxsdk_jun10&#34;&gt;https://archive.org/details/dxsdk_jun10&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;If you choose OpenAL on Windows&lt;/strong&gt; You must read &lt;a href=&#34;https://web.archive.org/web/20210217192855/https://github.com/GTAmodding/re3/wiki/Running-OpenAL-build-on-Windows&#34;&gt;Running OpenAL build on Windows&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;ℹ&lt;/span&gt; premake has an &lt;code&gt;--with-lto&lt;/code&gt; option if you want the project to be compiled with Link Time Optimization.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;ℹ&lt;/span&gt; There are various settings in &lt;a href=&#34;https://github.com/halpz/re3/tree/master/src/core/config.h&#34;&gt;config.h&lt;/a&gt;, you may want to take a look there.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;ℹ&lt;/span&gt; re3 uses completely homebrew RenderWare-replacement rendering engine; &lt;a href=&#34;https://github.com/aap/librw/&#34;&gt;librw&lt;/a&gt;. librw comes as submodule of re3, but you also can use LIBRW enviorenment variable to specify path to your own librw.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you feel the need, you can also use CodeWarrior 7 to compile re3 using the supplied codewarrior/re3.mcp project - this requires the original RW33 libraries, and the DX8 SDK. The build is unstable compared to the MSVC builds though, and is mostly meant to serve as a reference.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;As long as it&#39;s not linux/cross-platform skeleton/compatibility layer, all of the code on the repo that&#39;s not behind a preprocessor condition(like FIX_BUGS) are &lt;strong&gt;completely&lt;/strong&gt; reversed code from original binaries.&lt;/p&gt; &#xA;&lt;p&gt;We &lt;strong&gt;don&#39;t&lt;/strong&gt; accept custom codes, as long as it&#39;s not wrapped via preprocessor conditions, or it&#39;s linux/cross-platform skeleton/compatibility layer.&lt;/p&gt; &#xA;&lt;p&gt;We accept only these kinds of PRs;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A new feature that exists in at least one of the GTAs (if it wasn&#39;t in III/VC then it doesn&#39;t have to be decompilation)&lt;/li&gt; &#xA; &lt;li&gt;Game, UI or UX bug fixes (if it&#39;s a fix to original code, it should be behind FIX_BUGS)&lt;/li&gt; &#xA; &lt;li&gt;Platform-specific and/or unused code that&#39;s not been reversed yet&lt;/li&gt; &#xA; &lt;li&gt;Makes reversed code more understandable/accurate, as in &#34;which code would produce this assembly&#34;.&lt;/li&gt; &#xA; &lt;li&gt;A new cross-platform skeleton/compatibility layer, or improvements to them&lt;/li&gt; &#xA; &lt;li&gt;Translation fixes, for languages original game supported&lt;/li&gt; &#xA; &lt;li&gt;Code that increase maintainability&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We have a &lt;a href=&#34;https://github.com/halpz/re3/raw/master/CODING_STYLE.md&#34;&gt;Coding Style&lt;/a&gt; document that isn&#39;t followed or enforced very well.&lt;/p&gt; &#xA;&lt;p&gt;Do not use features from C++11 or later.&lt;/p&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;p&gt;re3 was started sometime in the spring of 2018, initially as a way to test reversed collision and physics code inside the game. This was done by replacing single functions of the game with their reversed counterparts using a dll.&lt;/p&gt; &#xA;&lt;p&gt;After a bit of work the project lay dormant for about a year and was picked up again and pushed to github in May 2019. At the time I (aap) had reversed around 10k lines of code and estimated the final game to have around 200-250k. Others quickly joined the effort (Fire_Head, shfil, erorcun and Nick007J in time order, and Serge a bit later) and we made very quick progress throughout the summer of 2019 after which the pace slowed down a bit.&lt;/p&gt; &#xA;&lt;p&gt;Due to everyone staying home during the start of the Corona pandemic everybody had a lot of time to work on re3 again and we finally got a standalone exe in April 2020 (around 180k lines by then).&lt;/p&gt; &#xA;&lt;p&gt;After the initial excitement and fixing and polishing the code further, reVC was started in early May 2020 by starting from re3 code, not by starting from scratch replacing functions with a dll. After a few months of mostly steady progress we considered reVC finished in December.&lt;/p&gt; &#xA;&lt;p&gt;Since then we have started reLCS, which is currently work in progress.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;We don&#39;t feel like we&#39;re in a position to give this code a license.&lt;br&gt; The code should only be used for educational, documentation and modding purposes.&lt;br&gt; We do not encourage piracy or commercial use.&lt;br&gt; Please keep derivate work open source and give proper credit.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>GaijinEntertainment/DagorEngine</title>
    <updated>2023-10-29T01:28:31Z</updated>
    <id>tag:github.com,2023-10-29:/GaijinEntertainment/DagorEngine</id>
    <link href="https://github.com/GaijinEntertainment/DagorEngine" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dagor Engine and Tools source code from Gaijin Games KFT&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>PurpleI2P/i2pd</title>
    <updated>2023-10-29T01:28:31Z</updated>
    <id>tag:github.com,2023-10-29:/PurpleI2P/i2pd</id>
    <link href="https://github.com/PurpleI2P/i2pd" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🛡 I2P: End-to-End encrypted and anonymous Internet&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/PurpleI2P/i2pd/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/PurpleI2P/i2pd.svg?label=latest%20release&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://snapcraft.io/i2pd&#34;&gt;&lt;img src=&#34;https://snapcraft.io/i2pd/badge.svg?sanitize=true&#34; alt=&#34;Snapcraft release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PurpleI2P/i2pd/raw/openssl/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/PurpleI2P/i2pd.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://repology.org/project/i2pd/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/tiny-repos/i2pd.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/purplei2p/i2pd&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/purplei2p/i2pd&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crowdin.com/project/i2pd&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/i2pd/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;note: i2pd for Android can be found in &lt;a href=&#34;https://github.com/PurpleI2P/i2pd-android&#34;&gt;i2pd-android&lt;/a&gt; repository and with Qt GUI in &lt;a href=&#34;https://github.com/PurpleI2P/i2pd-qt&#34;&gt;i2pd-qt&lt;/a&gt; repository&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;i2pd&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/PurpleI2P/i2pd_docs_ru/raw/master/README.md&#34;&gt;Русская версия&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;i2pd (I2P Daemon) is a full-featured C++ implementation of I2P client.&lt;/p&gt; &#xA;&lt;p&gt;I2P (Invisible Internet Protocol) is a universal anonymous network layer.&lt;br&gt; All communications over I2P are anonymous and end-to-end encrypted, participants don&#39;t reveal their real IP addresses.&lt;/p&gt; &#xA;&lt;p&gt;I2P client is a software used for building and using anonymous I2P networks. Such networks are commonly used for anonymous peer-to-peer applications (filesharing, cryptocurrencies) and anonymous client-server applications (websites, instant messengers, chat-servers).&lt;/p&gt; &#xA;&lt;p&gt;I2P allows people from all around the world to communicate and share information without restrictions.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Distributed anonymous networking framework&lt;/li&gt; &#xA; &lt;li&gt;End-to-end encrypted communications&lt;/li&gt; &#xA; &lt;li&gt;Small footprint, simple dependencies, fast performance&lt;/li&gt; &#xA; &lt;li&gt;Rich set of APIs for developers of secure applications&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://i2pd.website&#34;&gt;Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://i2pd.readthedocs.io/en/latest/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PurpleI2P/i2pd/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PurpleI2P/i2pd/issues&#34;&gt;Tickets/Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://geti2p.net/spec&#34;&gt;Specifications&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/hashtag/i2pd&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to install i2pd is by using precompiled packages and binaries. You can fetch most of them on &lt;a href=&#34;https://github.com/PurpleI2P/i2pd/releases/latest&#34;&gt;release&lt;/a&gt; page.&lt;br&gt; Please see &lt;a href=&#34;https://i2pd.readthedocs.io/en/latest/user-guide/install/&#34;&gt;documentation&lt;/a&gt; for more info.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://i2pd.readthedocs.io/en/latest/&#34;&gt;documentation&lt;/a&gt; for how to build i2pd from source on your OS.&lt;/p&gt; &#xA;&lt;p&gt;note: i2pd with Qt GUI can be found in &lt;a href=&#34;https://github.com/PurpleI2P/i2pd-qt&#34;&gt;i2pd-qt&lt;/a&gt; repository and for android in &lt;a href=&#34;https://github.com/PurpleI2P/i2pd-android&#34;&gt;i2pd-android&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;p&gt;Build instructions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://i2pd.readthedocs.io/en/latest/devs/building/unix/&#34;&gt;unix&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://i2pd.readthedocs.io/en/latest/devs/building/windows/&#34;&gt;windows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://i2pd.readthedocs.io/en/latest/devs/building/ios/&#34;&gt;iOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://i2pd.readthedocs.io/en/latest/devs/building/android/&#34;&gt;android&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Supported systems:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GNU/Linux (Debian, Ubuntu, etc) - &lt;a href=&#34;https://github.com/PurpleI2P/i2pd/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/PurpleI2P/i2pd/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build on Ubuntu&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CentOS, Fedora, Mageia - &lt;a href=&#34;https://copr.fedorainfracloud.org/coprs/supervillain/i2pd/package/i2pd-git/&#34;&gt;&lt;img src=&#34;https://copr.fedorainfracloud.org/coprs/supervillain/i2pd/package/i2pd-git/status_image/last_build.png&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Alpine, ArchLinux, openSUSE, Gentoo, etc.&lt;/li&gt; &#xA; &lt;li&gt;Windows - &lt;a href=&#34;https://github.com/PurpleI2P/i2pd/actions/workflows/build-windows.yml&#34;&gt;&lt;img src=&#34;https://github.com/PurpleI2P/i2pd/actions/workflows/build-windows.yml/badge.svg?sanitize=true&#34; alt=&#34;Build on Windows&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mac OS - &lt;a href=&#34;https://github.com/PurpleI2P/i2pd/actions/workflows/build-osx.yml&#34;&gt;&lt;img src=&#34;https://github.com/PurpleI2P/i2pd/actions/workflows/build-osx.yml/badge.svg?sanitize=true&#34; alt=&#34;Build on OSX&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Docker image - &lt;a href=&#34;https://github.com/PurpleI2P/i2pd/actions/workflows/docker.yml&#34;&gt;&lt;img src=&#34;https://github.com/PurpleI2P/i2pd/actions/workflows/docker.yml/badge.svg?sanitize=true&#34; alt=&#34;Build containers&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Snap - &lt;a href=&#34;https://snapcraft.io/i2pd&#34;&gt;&lt;img src=&#34;https://snapcraft.io/i2pd/badge.svg?sanitize=true&#34; alt=&#34;i2pd&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://snapcraft.io/i2pd&#34;&gt;&lt;img src=&#34;https://snapcraft.io/i2pd/trending.svg?name=0&#34; alt=&#34;i2pd&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;FreeBSD - &lt;a href=&#34;https://github.com/PurpleI2P/i2pd/actions/workflows/build-freebsd.yml&#34;&gt;&lt;img src=&#34;https://github.com/PurpleI2P/i2pd/actions/workflows/build-freebsd.yml/badge.svg?sanitize=true&#34; alt=&#34;Build on FreeBSD&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Android - &lt;a href=&#34;https://github.com/PurpleI2P/i2pd-android/actions/workflows/android.yml&#34;&gt;&lt;img src=&#34;https://github.com/PurpleI2P/i2pd-android/actions/workflows/android.yml/badge.svg?sanitize=true&#34; alt=&#34;Android CI&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;iOS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Using i2pd&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://i2pd.readthedocs.io/en/latest/user-guide/run/&#34;&gt;documentation&lt;/a&gt; and &lt;a href=&#34;https://github.com/PurpleI2P/i2pd/raw/openssl/contrib/i2pd.conf&#34;&gt;example config file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Localization&lt;/h2&gt; &#xA;&lt;p&gt;You can help us with translation i2pd to your language using Crowdin platform! Translation project can be found &lt;a href=&#34;https://crowdin.com/project/i2pd&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;New languages can be requested on project&#39;s &lt;a href=&#34;https://crowdin.com/project/i2pd/discussions&#34;&gt;discussion page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Current status: &lt;a href=&#34;https://crowdin.com/project/i2pd&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/i2pd/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;E-Mail&lt;/strong&gt;: &lt;code&gt;i2porignal at yandex.com&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;BTC&lt;/strong&gt;: &lt;code&gt;3MDoGJW9TLMTCDGrR9bLgWXfm6sjmgy86f&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;LTC&lt;/strong&gt;: &lt;code&gt;LKQirrYrDeTuAPnpYq5y7LVKtywfkkHi59&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ETH&lt;/strong&gt;: &lt;code&gt;0x9e5bac70d20d1079ceaa111127f4fb3bccce379d&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;GST&lt;/strong&gt;: &lt;code&gt;GbD2JSQHBHCKLa9WTHmigJRpyFgmBj4woG&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;DASH&lt;/strong&gt;: &lt;code&gt;Xw8YUrQpYzP9tZBmbjqxS3M97Q7v3vJKUF&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ZEC&lt;/strong&gt;: &lt;code&gt;t1cTckLuXsr1dwVrK4NDzfhehss4NvMadAJ&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ANC&lt;/strong&gt;: &lt;code&gt;AQJYweYYUqM1nVfLqfoSMpUMfzxvS4Xd7z&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;XMR&lt;/strong&gt;: &lt;code&gt;497pJc7X4xqKvcLBLpSUtRgWqMMyo24u4btCos3cak6gbMkpobgSU6492ztUcUBghyeHpYeczB55s38NpuHoH5WGNSPDRMH&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the BSD 3-clause license, which can be found in the file LICENSE in the root of the project source code.&lt;/p&gt;</summary>
  </entry>
</feed>