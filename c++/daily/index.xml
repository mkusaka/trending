<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-05T01:31:45Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>godotengine/godot-cpp</title>
    <updated>2023-03-05T01:31:45Z</updated>
    <id>tag:github.com,2023-03-05:/godotengine/godot-cpp</id>
    <link href="https://github.com/godotengine/godot-cpp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;C++ bindings for the Godot script API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;godot-cpp&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;This repository&#39;s &lt;code&gt;master&lt;/code&gt; branch is only usable with Godot&#39;s (&lt;a href=&#34;https://godotengine.org/article/introducing-gd-extensions&#34;&gt;GDExtension&lt;/a&gt;) API (Godot 4.0 and later).&lt;/p&gt; &#xA; &lt;p&gt;For GDNative users (Godot 3.x), switch to the &lt;a href=&#34;https://github.com/godotengine/godot-cpp/tree/3.x&#34;&gt;&lt;code&gt;3.x&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&#34;https://github.com/godotengine/godot-cpp/tree/3.5&#34;&gt;&lt;code&gt;3.5&lt;/code&gt;&lt;/a&gt; branch.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This repository contains the &lt;em&gt;C++ bindings&lt;/em&gt; for the &lt;a href=&#34;https://github.com/godotengine/godot&#34;&gt;&lt;strong&gt;Godot Engine&lt;/strong&gt;&lt;/a&gt;&#39;s GDExtensions API.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/godotengine/godot-cpp/master/#versioning&#34;&gt;&lt;strong&gt;Versioning&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/godotengine/godot-cpp/master/#compatibility&#34;&gt;&lt;strong&gt;Compatibility&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/godotengine/godot-cpp/master/#contributing&#34;&gt;&lt;strong&gt;Contributing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/godotengine/godot-cpp/master/#getting-started&#34;&gt;&lt;strong&gt;Getting started&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/godotengine/godot-cpp/master/#included-example&#34;&gt;&lt;strong&gt;Included example&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;This repositories follows the same branch versioning as the main &lt;a href=&#34;https://github.com/godotengine/godot&#34;&gt;Godot Engine repository&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;master&lt;/code&gt; tracks the current GDExtension development branch for the next Godot 4.x minor release.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;3.x&lt;/code&gt; tracks the development of the GDNative plugin for the next 3.x minor release.&lt;/li&gt; &#xA; &lt;li&gt;Other versioned branches (e.g. &lt;code&gt;4.0&lt;/code&gt;, &lt;code&gt;3.5&lt;/code&gt;) track the latest stable release in the corresponding branch.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Stable releases are also tagged on this repository: &lt;a href=&#34;https://github.com/godotengine/godot-cpp/tags&#34;&gt;&lt;strong&gt;Tags&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;For any project built against a stable release of Godot, we recommend using this repository as a Git submodule, checking out the specific tag matching your Godot version.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;As the &lt;code&gt;master&lt;/code&gt; branch of Godot is constantly getting updated, if you are using &lt;code&gt;godot-cpp&lt;/code&gt; against a more current version of Godot, see the instructions in the &lt;code&gt;gdextension&lt;/code&gt; folder to update the relevant files.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; The GDExtension API is brand new in Godot 4.0, and is still considered in &lt;strong&gt;beta&lt;/strong&gt; stage, despite Godot 4.0 itself being released.&lt;/p&gt; &#xA;&lt;p&gt;This applies to both the GDExtension interface header, the API JSON, and this first-party &lt;code&gt;godot-cpp&lt;/code&gt; extension.&lt;/p&gt; &#xA;&lt;p&gt;Some compatibility breakage is to be expected as GDExtension and &lt;code&gt;godot-cpp&lt;/code&gt; get more used, documented, and critical issues get resolved. See the &lt;a href=&#34;https://github.com/godotengine/godot/issues&#34;&gt;issue tracker&lt;/a&gt; for a list of known issues, and be sure to provide feedback on issues and PRs which affect your use of this extension.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We greatly appreciate help in maintaining and extending this project. If you wish to help out, ensure you have an account on GitHub and create a &#34;fork&#34; of this repository. See &lt;a href=&#34;https://docs.godotengine.org/en/stable/community/contributing/pr_workflow.html&#34;&gt;Pull request workflow&lt;/a&gt; for instructions.&lt;/p&gt; &#xA;&lt;p&gt;Please install clang-format and copy the files in &lt;code&gt;misc/hooks&lt;/code&gt; into &lt;code&gt;.git/hooks&lt;/code&gt; so formatting is done before your changes are submitted.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s a bit similar to what it was for 3.x but also a bit different. This new approach is much more akin to how core Godot modules are structured.&lt;/p&gt; &#xA;&lt;p&gt;Compiling this repository generates a static library to be linked with your shared lib, just like before.&lt;/p&gt; &#xA;&lt;p&gt;To use the shared lib in your Godot project you&#39;ll need a &lt;code&gt;.gdextension&lt;/code&gt; file, which replaces what was the &lt;code&gt;.gdnlib&lt;/code&gt; before. Follow &lt;a href=&#34;https://raw.githubusercontent.com/godotengine/godot-cpp/master/test/demo/example.gdextension&#34;&gt;the example&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[configuration]&#xA;&#xA;entry_symbol = &#34;example_library_init&#34;&#xA;&#xA;[libraries]&#xA;&#xA;macos.debug = &#34;bin/libgdexample.macos.debug.framework&#34;&#xA;macos.release = &#34;bin/libgdexample.macos.release.framework&#34;&#xA;windows.debug.x86_64 = &#34;bin/libgdexample.windows.debug.x86_64.dll&#34;&#xA;windows.release.x86_64 = &#34;bin/libgdexample.windows.release.x86_64.dll&#34;&#xA;linux.debug.x86_64 = &#34;bin/libgdexample.linux.debug.x86_64.so&#34;&#xA;linux.release.x86_64 = &#34;bin/libgdexample.linux.release.x86_64.so&#34;&#xA;# Repeat for other architectures to support arm64, rv64, etc.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;entry_symbol&lt;/code&gt; is the name of the function that initializes your library. It should be similar to following layout:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;extern &#34;C&#34; {&#xA;&#xA;// Initialization.&#xA;&#xA;GDExtensionBool GDE_EXPORT example_library_init(const GDExtensionInterface *p_interface, GDExtensionClassLibraryPtr p_library, GDExtensionInitialization *r_initialization) {&#xA;&#x9;godot::GDExtensionBinding::InitObject init_obj(p_interface, p_library, r_initialization);&#xA;&#xA;&#x9;init_obj.register_initializer(initialize_example_module);&#xA;&#x9;init_obj.register_terminator(uninitialize_example_module);&#xA;&#x9;init_obj.set_minimum_library_initialization_level(MODULE_INITIALIZATION_LEVEL_SCENE);&#xA;&#xA;&#x9;return init_obj.init();&#xA;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;initialize_example_module()&lt;/code&gt; should register the classes in ClassDB, very like a Godot module would do.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;using namespace godot;&#xA;void initialize_example_module(ModuleInitializationLevel p_level) {&#xA;&#x9;if (p_level != MODULE_INITIALIZATION_LEVEL_SCENE) {&#xA;&#x9;&#x9;return;&#xA;&#x9;}&#xA;&#x9;ClassDB::register_class&amp;lt;Example&amp;gt;();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Any node and resource you register will be available in the corresponding &lt;code&gt;Create...&lt;/code&gt; dialog. Any class will be available to scripting as well.&lt;/p&gt; &#xA;&lt;h2&gt;Included example&lt;/h2&gt; &#xA;&lt;p&gt;Check the project in the &lt;code&gt;test&lt;/code&gt; folder for an example on how to use and register different things.&lt;/p&gt;</summary>
  </entry>
</feed>