<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-12T01:29:18Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dalathegreat/Battery-Emulator</title>
    <updated>2024-06-12T01:29:18Z</updated>
    <id>tag:github.com,2024-06-12:/dalathegreat/Battery-Emulator</id>
    <link href="https://github.com/dalathegreat/Battery-Emulator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This software enables EV battery packs to be used for stationary storage in combination with solar inverters.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Battery-Emulator ‚ö°üîã&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/dalathegreat/BYD-Battery-Emulator-For-Gen24?color=%23008000&#34; alt=&#34;GitHub release (with filter)&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/dalathegreat/Battery-Emulator?style=flat&amp;amp;color=%23128512&#34; alt=&#34;GitHub Repo stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/dalathegreat/Battery-Emulator?style=flat&amp;amp;color=%23128512&#34; alt=&#34;GitHub forks&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/dalathegreat/BYD-Battery-Emulator-For-Gen24/compile-all-batteries.yml?color=0E810E&#34; alt=&#34;GitHub actions&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/made-with_love-blue?color=%23008000&#34; alt=&#34;Static Badge&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This software enables EV battery packs to be used for stationary storage. It achieves this by converting the EV battery CAN data into a brand battery format that solar inverters can understand. This makes it extremely cheap and easy to use large EV batteries in a true plug&#39;n&#39;play fashion!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/dalathegreat/Battery-Emulator/assets/26695010/741c3237-8074-4891-9cd1-f47f0fe45cb5&#34; alt=&#34;Fronius&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Hardware requirements üìú&lt;/h2&gt; &#xA;&lt;p&gt;This code fits on the LilyGo ESP32 T-CAN485 devboard , see &lt;a href=&#34;https://github.com/Xinyuan-LilyGO/T-CAN485&#34;&gt;https://github.com/Xinyuan-LilyGO/T-CAN485&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You will also need a complete EV battery. &lt;a href=&#34;https://github.com/dalathegreat/BYD-Battery-Emulator-For-Gen24/wiki#supported-batteries-list&#34;&gt;See the battery compability list on which are supported.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Finally, you will need a &lt;a href=&#34;https://github.com/dalathegreat/BYD-Battery-Emulator-For-Gen24/wiki#supported-inverters-list&#34;&gt;compatible hybrid solar inverter&lt;/a&gt;, for example the &#34;Fronius Gen24&#34; or &#34;GoodWe ET&#34;&lt;/p&gt; &#xA;&lt;h2&gt;Installation basics ü™õ&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Connect one end of the LilyGo RS485 to the Gen24 Modbus&lt;/li&gt; &#xA; &lt;li&gt;Connect the other end of the LilyGo to the CAN side of the battery&lt;/li&gt; &#xA; &lt;li&gt;Wire up high voltage cable between the Gen24 and the battery&lt;/li&gt; &#xA; &lt;li&gt;Add a 5-12V power source to power the LilyGo and 12V to the battery (uninterruptible PSU or 12V lead acid recommended in parallel)&lt;/li&gt; &#xA; &lt;li&gt;Some batteries need manual pre-charge circuit and positive/negative contactor control. Others are automatic. See the wiki for more info.&lt;/li&gt; &#xA; &lt;li&gt;Enjoy a big cheap grid connected battery!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Wiring example, LEAF battery üí°&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s how to wire up the communication between the components. &lt;img src=&#34;https://github.com/dalathegreat/Battery-Emulator/assets/26695010/29edeeda-1002-4826-9183-39a027b3b9ed&#34; alt=&#34;Wiring&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s how to connect the high voltage lines &lt;img src=&#34;https://github.com/dalathegreat/Battery-Emulator/assets/26695010/f70e6262-d630-4148-9a39-dad32e79b3d6&#34; alt=&#34;HighVoltageWiring&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more examples showing wiring, see each battery types own Wiki page. For instance the &lt;a href=&#34;https://github.com/dalathegreat/BYD-Battery-Emulator-For-Gen24/wiki/Nissan-LEAF-battery#wiring-diagram&#34;&gt;Nissan LEAF page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to compile the software üíª&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the Arduino IDE: &lt;a href=&#34;https://www.arduino.cc/en/software&#34;&gt;https://www.arduino.cc/en/software&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;When the Arduino IDE has been started; Click &#34;File&#34; in the upper left corner -&amp;gt; Preferences -&amp;gt; Additional Development &amp;gt;Board Manager URL -&amp;gt; Enter the URL in the input box &lt;a href=&#34;https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json&#34;&gt;https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Go to &#34;Boards Manager&#34;, and install the ESP32 package by Espressif Systems. &lt;strong&gt;NOTE: The version depends on which release of Battery-Emulator you are running!&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚ö†Ô∏è Make sure to use a 2.x.x version if you are on a release &lt;strong&gt;older&lt;/strong&gt; than 6.0.0 (For instance ESP32 v2.0.11 when using Battery-Emulator v5.4.0)&lt;/li&gt; &#xA; &lt;li&gt;‚ö†Ô∏è Make sure to use a 3.x.x version if you are on a release &lt;strong&gt;newer&lt;/strong&gt; than 6.0.0 (For instance ESP32 v3.0.0 when using Battery-Emulator v6.0.0)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/dalathegreat/Battery-Emulator/assets/26695010/6a2414b1-f2ca-4746-8e8d-9afd78bd9252&#34; alt=&#34;bild&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;The arduino settings should be set to &#34;ESP32 Dev Module&#34; with the following settings; &lt;img src=&#34;https://github.com/Xinyuan-LilyGO/T-CAN485/raw/main/img/arduino_setting.png&#34; alt=&#34;alt text&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select which battery type you will use, along with other optional settings. This is done in the USER_SETTINGS.h file.&lt;/li&gt; &#xA; &lt;li&gt;Press Verify and Upload to send the sketch to the board. NOTE: In some cases, the LilyGo must be powered through the main power connector instead of USB-C when performing the initial firsmware upload. NOTE: On Mac, the following USB driver may need to be installed: &lt;a href=&#34;https://github.com/WCHSoftGroup/ch34xser_macos&#34;&gt;https://github.com/WCHSoftGroup/ch34xser_macos&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This video explains all the above mentioned steps: &lt;a href=&#34;https://youtu.be/_mH2AjnAjDk&#34;&gt;https://youtu.be/_mH2AjnAjDk&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies üìñ&lt;/h2&gt; &#xA;&lt;p&gt;This code uses the following excellent libraries:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/adafruit/Adafruit_NeoPixel&#34;&gt;adafruit/Adafruit_NeoPixel&lt;/a&gt; LGPL-3.0 license&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ayushsharma82/ElegantOTA&#34;&gt;ayushsharma82/ElegantOTA&lt;/a&gt; AGPL-3.0 license&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bblanchon/ArduinoJson&#34;&gt;bblanchon/ArduinoJson&lt;/a&gt; MIT-License&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eModbus/eModbus&#34;&gt;eModbus/eModbus&lt;/a&gt; MIT-License&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/knolleary/pubsubclient&#34;&gt;knolleary/pubsubclient&lt;/a&gt; MIT-License&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mackelec/SerialDataLink&#34;&gt;mackelec/SerialDataLink&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/me-no-dev/AsyncTCP&#34;&gt;me-no-dev/AsyncTCP&lt;/a&gt; LGPL-3.0 license&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/me-no-dev/ESPAsyncWebServer&#34;&gt;me-no-dev/ESPAsyncWebServer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/miwagner/ESP32-Arduino-CAN/&#34;&gt;miwagner/ESP32-Arduino-CAN&lt;/a&gt; MIT-License&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pierremolinaro/acan2515&#34;&gt;pierremolinaro/acan2515&lt;/a&gt; MIT-License&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pierremolinaro/acan2517FD&#34;&gt;pierremolinaro/acan2517FD&lt;/a&gt; MIT-License&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YiannisBourkelis/Uptime-Library&#34;&gt;YiannisBourkelis/Uptime-Library&lt;/a&gt; GPL-3.0 license&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It is also based on the information found in the following excellent repositories/websites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/pelle8/inverter_resources&#34;&gt;https://gitlab.com/pelle8/inverter_resources&lt;/a&gt; //new url&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/burra/byd_battery&#34;&gt;https://github.com/burra/byd_battery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flodorn/TeslaBMSV2&#34;&gt;https://github.com/flodorn/TeslaBMSV2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SunshadeCorp/can-service&#34;&gt;https://github.com/SunshadeCorp/can-service&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openvehicles/Open-Vehicle-Monitoring-System-3&#34;&gt;https://github.com/openvehicles/Open-Vehicle-Monitoring-System-3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dalathegreat/leaf_can_bus_messages&#34;&gt;https://github.com/dalathegreat/leaf_can_bus_messages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rand12345/solax_can_bus&#34;&gt;https://github.com/rand12345/solax_can_bus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tom-evnut/BMWI3BMS/&#34;&gt;https://github.com/Tom-evnut/BMWI3BMS/&lt;/a&gt; SMA-CAN&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/maciek16c/hyundai-santa-fe-phev-battery&#34;&gt;https://github.com/maciek16c/hyundai-santa-fe-phev-battery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Renault Zoe CAN Matrix &lt;a href=&#34;https://docs.google.com/spreadsheets/u/0/d/1Qnk-yzzcPiMArO-QDzO4a8ptAS2Sa4HhVu441zBzlpM/edit?pli=1#gid=0&#34;&gt;https://docs.google.com/spreadsheets/u/0/d/1Qnk-yzzcPiMArO-QDzO4a8ptAS2Sa4HhVu441zBzlpM/edit?pli=1#gid=0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pylon hacking &lt;a href=&#34;https://www.eevblog.com/forum/programming/pylontech-sc0500-protocol-hacking/&#34;&gt;https://www.eevblog.com/forum/programming/pylontech-sc0500-protocol-hacking/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Like this project? üíñ&lt;/h2&gt; &#xA;&lt;p&gt;Leave a ‚≠ê If you think this project is useful. Consider hopping onto my Patreon to encourage more open-source projects!&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.patreon.com/dala&#34;&gt; &lt;img src=&#34;https://c5.patreon.com/external/logo/become_a_patron_button@2x.png&#34; width=&#34;160&#34;&gt; &lt;/a&gt;</summary>
  </entry>
</feed>