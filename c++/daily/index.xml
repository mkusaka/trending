<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-01T01:36:02Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cocos2d/cocos2d-x</title>
    <updated>2022-10-01T01:36:02Z</updated>
    <id>tag:github.com,2022-10-01:/cocos2d/cocos2d-x</id>
    <link href="https://github.com/cocos2d/cocos2d-x" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cocos2d-x is a suite of open-source, cross-platform, game-development tools used by millions of developers all over the world.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;http://www.cocos2d-x.org/attachments/801/cocos2dx_portrait.png&#34; width=&#34;200&#34;&gt; &#xA;&lt;h1&gt;cocos2d-x&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Win32&lt;/th&gt; &#xA;   &lt;th&gt;Others&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ci.appveyor.com/project/minggo/cocos2d-x/branch/v4&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/nlgirox464j6ldg5/branch/v4?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://travis-ci.org/cocos2d/cocos2d-x&#34;&gt;&lt;img src=&#34;https://travis-ci.org/cocos2d/cocos2d-x.svg?branch=v4&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.cocos2d-x.org&#34; title=&#34;cocos2d-x&#34;&gt;cocos2d-x&lt;/a&gt; is a multi-platform framework for building 2d games, interactive books, demos and other graphical applications. It is based on &lt;strong&gt;cocos2d-iphone&lt;/strong&gt;, but instead of using Objective-C, it uses C++. It works on iOS, Android, macOS, Windows and Linux.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Cocos2d-x Framework Architecture&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cocos2d/cocos2d-x/v4/docs/framework_architecture_v4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;cocos2d-x is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fast&lt;/li&gt; &#xA; &lt;li&gt;Free&lt;/li&gt; &#xA; &lt;li&gt;Easy to use&lt;/li&gt; &#xA; &lt;li&gt;Community supported&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Git user attention&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repo from GitHub.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  $ git clone https://github.com/cocos2d/cocos2d-x.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;After cloning the repo, please execute &lt;code&gt;download-deps.py&lt;/code&gt; to download and install dependencies.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  $ cd cocos2d-x&#xA;  cocos2d-x $ python download-deps.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;After running &lt;code&gt;download-deps.py&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  cocos2d-x $ git submodule update --init&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Download stable versions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cocos2d-x.org/download&#34;&gt;Cocos2d-x stable versions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentations and samples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.cocos2d-x.org/&#34;&gt;All Docs in a single place!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.cocos2d-x.org/api-ref/index.html&#34;&gt;Online API Reference&lt;/a&gt; &lt;em&gt;Note that Cocos2d-x and Cocos Creator have different API set&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.cocos2d-x.org/cocos2d-x/v4/en/basic_concepts/&#34;&gt;Programmers Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cocos2d/cocos2d-x/raw/v4/docs/RELEASE_NOTES.md&#34;&gt;Latest Release Note&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cocos2d/cocos2d-x/raw/v4/CHANGELOG&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Main features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Scene management (workflow)&lt;/li&gt; &#xA; &lt;li&gt;Transitions between scenes&lt;/li&gt; &#xA; &lt;li&gt;Sprites and Sprite Sheets&lt;/li&gt; &#xA; &lt;li&gt;Effects: Lens, Ripple, Waves, Liquid, etc.&lt;/li&gt; &#xA; &lt;li&gt;Actions (behaviours): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Transformation Actions: Move, Rotate, Scale, Fade, Tint, etc.&lt;/li&gt; &#xA;   &lt;li&gt;Composable actions: Sequence, Spawn, Repeat, Reverse&lt;/li&gt; &#xA;   &lt;li&gt;Ease Actions: Exp, Sin, Cubic, Elastic, etc.&lt;/li&gt; &#xA;   &lt;li&gt;Misc actions: CallFunc, OrbitCamera, Follow, Tween&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Basic menus and buttons&lt;/li&gt; &#xA; &lt;li&gt;Integrated with physics engines: &lt;a href=&#34;http://www.box2d.org&#34; title=&#34;Box2D&#34;&gt;Box2d&lt;/a&gt; and &lt;a href=&#34;http://www.chipmunk-physics.net&#34; title=&#34;Chipmunk2D&#34;&gt;Chipmunk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Particle system&lt;/li&gt; &#xA; &lt;li&gt;Skeleton Animations: &lt;a href=&#34;http://esotericsoftware.com/&#34; title=&#34;http://esotericsoftware.com/&#34;&gt;Spine&lt;/a&gt; and Armature support&lt;/li&gt; &#xA; &lt;li&gt;Fonts: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Fast font rendering using Fixed and Variable width fonts&lt;/li&gt; &#xA;   &lt;li&gt;Support for .ttf fonts&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Tile Map support: Orthogonal, Isometric and Hexagonal&lt;/li&gt; &#xA; &lt;li&gt;Parallax scrolling&lt;/li&gt; &#xA; &lt;li&gt;Motion Streak&lt;/li&gt; &#xA; &lt;li&gt;Render To Texture&lt;/li&gt; &#xA; &lt;li&gt;Touch/Accelerometer on mobile devices&lt;/li&gt; &#xA; &lt;li&gt;Touch/Mouse/Keyboard on desktop&lt;/li&gt; &#xA; &lt;li&gt;Sound Engine support&lt;/li&gt; &#xA; &lt;li&gt;Integrated Slow motion/Fast forward&lt;/li&gt; &#xA; &lt;li&gt;Fast and compressed textures: PVR compressed and uncompressed textures, ETC1 compressed textures, and more&lt;/li&gt; &#xA; &lt;li&gt;Resolution Independent&lt;/li&gt; &#xA; &lt;li&gt;Language: C++, with Lua and JavaScript bindings&lt;/li&gt; &#xA; &lt;li&gt;Open Source Commercial Friendly(MIT): Compatible with open and closed source projects&lt;/li&gt; &#xA; &lt;li&gt;OpenGL ES 2.0 (mobile) / OpenGL 2.1 (desktop) / metal(macos and iOS) based&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mac OS X 10.7+, Xcode 8+&lt;/li&gt; &#xA; &lt;li&gt;or Ubuntu 14.04+, CMake 3.1+&lt;/li&gt; &#xA; &lt;li&gt;or Windows 7+, VS 2015&lt;/li&gt; &#xA; &lt;li&gt;Python 2.7.5+(NOT Python 3)&lt;/li&gt; &#xA; &lt;li&gt;NDK r16+ is required to build Android games&lt;/li&gt; &#xA; &lt;li&gt;Android Studio 3.0.0+ to build Android games(tested with 3.0.0)&lt;/li&gt; &#xA; &lt;li&gt;JRE or JDK 1.6+ is required for web publishing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Runtime Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iOS 8.0+ for iPhone / iPad games&lt;/li&gt; &#xA; &lt;li&gt;Android 3.0.0+ for Android&lt;/li&gt; &#xA; &lt;li&gt;OS X v10.9+ for Mac games&lt;/li&gt; &#xA; &lt;li&gt;Windows 7+ for Win games&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Environment Setup&lt;/h2&gt; &#xA;&lt;p&gt;Should set up environment before starting a new game or running tests&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd cocos2d-x&#xA;$ ./setup.py&#xA;$ source FILE_TO_SAVE_SYSTEM_VARIABLE&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Should invoke this script if using linux system&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd cocos2d-x&#xA;$ ./install-linux-deps.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running Tests&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd cocos2d-x&#xA;$ mkdir build&#xA;$ cd build&#xA;$ cocos run --proj-dir .. -p [mac|win32|android|linux|ios]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to start a new game&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd cocos2d-x&#xA;$ ./setup.py&#xA;$ source FILE_TO_SAVE_SYSTEM_VARIABLE&#xA;$ cocos new MyGame -p com.your_company.mygame -l cpp -d NEW_PROJECTS_DIR&#xA;$ cd NEW_PROJECTS_DIR/MyGame&#xA;$ mkdir build&#xA;$ cd build&#xA;$ cocos run --proj-dir .. -p [mac|win32|android|linux|ios]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also create a Lua project with &lt;code&gt;-l lua&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Using IDE&lt;/h2&gt; &#xA;&lt;p&gt;If need to debug program, then it is more convinent to use IDE to run and debug it. All platforms other than Android can use CMake to generate corresponding project file. Can refer to &lt;a href=&#34;https://raw.githubusercontent.com/cocos2d/cocos2d-x/v4/cmake/README.md&#34;&gt;Detail CMake Guide&lt;/a&gt; for detail information.&lt;/p&gt; &#xA;&lt;p&gt;For Android, the Android Studio project file lies in &lt;code&gt;PROJECT_DIR/proj.android&lt;/code&gt;. Can just use Android Studio to import the exsting project file.&lt;/p&gt; &#xA;&lt;h2&gt;Learning Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.cocos2d-x.org/cocos2d-x/v4/en/basic_concepts/&#34;&gt;Programmers Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/guide/components/fundamentals.html&#34;&gt;Android Fundamentals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.gamefromscratch.com/page/Cocos2d-x-CPP-Game-Programming-Tutorial-Series.aspx&#34;&gt;Games From Scratch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MakeSchool?utf8=%E2%9C%93&amp;amp;q=cocos2d&amp;amp;type=&amp;amp;language=&#34;&gt;Make School Tutorials&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Spreading the word!&lt;/h2&gt; &#xA;&lt;p&gt;You can help us spread the word about cocos2d-x! We would surely appreciate it!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Talk about us on Facebook! Our &lt;a href=&#34;https://www.facebook.com/cocos2dx/&#34;&gt;Facebook Page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tweet, Tweet! Our &lt;a href=&#34;https://twitter.com/cocos2dx&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Read our &lt;a href=&#34;http://blog.cocos2d-x.org/&#34;&gt;Blog&lt;/a&gt; and promote it on your social media.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Where to get help&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://discuss.cocos2d-x.org&#34;&gt;English Forums&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://forum.cocos.com/c/cocos2d-x&#34;&gt;中文社区&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cocos2d/cocos2d-x/issues&#34;&gt;Bug Tracker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.cocos2d-x.org/api-ref/index.html&#34;&gt;API Reference&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cocos2d/cocos2d-x/raw/v4/docs/RELEASE_NOTES.md&#34;&gt;Latest Release Note&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cocos2d/cocos2d-x/raw/v4/CHANGELOG&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/pVqab4K&#34;&gt;Discord Channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cpp-tests&lt;/code&gt; project. This project is our basis for testing. Use this project to learn how we implement the functionality of the engine. This project is located in &lt;strong&gt;cocos2d-x_root/build.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing to the Project&lt;/h2&gt; &#xA;&lt;p&gt;Cocos2d-x is licensed under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;. We welcome participation!&lt;/p&gt; &#xA;&lt;p&gt;Did you find a bug? Do you have feature request? Do you want to merge a feature?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cocos2d/cocos2d-x/raw/v3/CONTRIBUTING.md&#34;&gt;contributing to cocos2d-x&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact us&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Forum: &lt;a href=&#34;http://discuss.cocos2d-x.org&#34; title=&#34;http://discuss.cocos2d-x.org&#34;&gt;http://discuss.cocos2d-x.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter: &lt;a href=&#34;http://www.twitter.com/cocos2dx&#34; title=&#34;http://www.twitter.com/cocos2dx&#34;&gt;http://www.twitter.com/cocos2dx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Weibo: &lt;a href=&#34;http://t.sina.com.cn/cocos2dx&#34; title=&#34;http://t.sina.com.cn/cocos2dx&#34;&gt;http://t.sina.com.cn/cocos2dx&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Want an awesome editor?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.cocos.com/en/products#CocosCreator&#34;&gt;Cocos Creator&lt;/a&gt; is the new generation of Cocos game engine with a full featured editor and content creation friendly workflow. It supports all major platforms allowing games to be quickly released for the web, iOS, Android, Windows, Mac, and various mini-game platforms. A pure JavaScript-developed engine runtime is available on the web and mini-game platforms for better performance and smaller packages. On other native platforms, C++ is used to implement the underlying framework, providing greater operational efficiency. The engine is completely &lt;a href=&#34;https://github.com/cocos-creator/engine&#34;&gt;open source&lt;/a&gt;, and retains the advantages of Cocos2d-x which includes high performance, customizability, ease for debugging, easy to learn, and small package size.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>HKUST-Aerial-Robotics/VINS-Fusion</title>
    <updated>2022-10-01T01:36:02Z</updated>
    <id>tag:github.com,2022-10-01:/HKUST-Aerial-Robotics/VINS-Fusion</id>
    <link href="https://github.com/HKUST-Aerial-Robotics/VINS-Fusion" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An optimization-based multi-sensor state estimator&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VINS-Fusion&lt;/h1&gt; &#xA;&lt;h2&gt;An optimization-based multi-sensor state estimator&lt;/h2&gt; &#xA;&lt;img src=&#34;https://github.com/HKUST-Aerial-Robotics/VINS-Fusion/raw/master/support_files/image/vins_logo.png&#34; width=&#34;55%&#34; height=&#34;55%&#34; div align=&#34;left&#34;&gt; &#xA;&lt;img src=&#34;https://github.com/HKUST-Aerial-Robotics/VINS-Fusion/raw/master/support_files/image/kitti.png&#34; width=&#34;34%&#34; height=&#34;34%&#34; div align=&#34;center&#34;&gt; &#xA;&lt;p&gt;VINS-Fusion is an optimization-based multi-sensor state estimator, which achieves accurate self-localization for autonomous applications (drones, cars, and AR/VR). VINS-Fusion is an extension of &lt;a href=&#34;https://github.com/HKUST-Aerial-Robotics/VINS-Mono&#34;&gt;VINS-Mono&lt;/a&gt;, which supports multiple visual-inertial sensor types (mono camera + IMU, stereo cameras + IMU, even stereo cameras only). We also show a toy example of fusing VINS with GPS. &lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;multiple sensors support (stereo cameras / mono camera+IMU / stereo cameras+IMU)&lt;/li&gt; &#xA; &lt;li&gt;online spatial calibration (transformation between camera and IMU)&lt;/li&gt; &#xA; &lt;li&gt;online temporal calibration (time offset between camera and IMU)&lt;/li&gt; &#xA; &lt;li&gt;visual loop closure&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://github.com/HKUST-Aerial-Robotics/VINS-Fusion/raw/master/support_files/image/kitti_rank.png&#34; width=&#34;80%&#34; height=&#34;80%&#34;&gt; &#xA;&lt;p&gt;We are the &lt;strong&gt;top&lt;/strong&gt; open-sourced stereo algorithm on &lt;a href=&#34;http://www.cvlibs.net/datasets/kitti/eval_odometry.php&#34;&gt;KITTI Odometry Benchmark&lt;/a&gt; (12.Jan.2019).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Authors:&lt;/strong&gt; &lt;a href=&#34;http://www.qintonguav.com&#34;&gt;Tong Qin&lt;/a&gt;, Shaozu Cao, Jie Pan, &lt;a href=&#34;https://peiliangli.github.io/&#34;&gt;Peiliang Li&lt;/a&gt;, and &lt;a href=&#34;http://www.ece.ust.hk/ece.php/profile/facultydetail/eeshaojie&#34;&gt;Shaojie Shen&lt;/a&gt; from the &lt;a href=&#34;http://uav.ust.hk/&#34;&gt;Aerial Robotics Group&lt;/a&gt;, &lt;a href=&#34;https://www.ust.hk/&#34;&gt;HKUST&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Videos:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/embed/1qye82aW7nI&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://img.youtube.com/vi/1qye82aW7nI/0.jpg&#34; alt=&#34;VINS&#34; width=&#34;320&#34; height=&#34;240&#34; border=&#34;10&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Related Paper:&lt;/strong&gt; (paper is not exactly same with code)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Online Temporal Calibration for Monocular Visual-Inertial Systems&lt;/strong&gt;, Tong Qin, Shaojie Shen, IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS, 2018), &lt;strong&gt;best student paper award&lt;/strong&gt; &lt;a href=&#34;https://ieeexplore.ieee.org/abstract/document/8593603&#34;&gt;pdf&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;VINS-Mono: A Robust and Versatile Monocular Visual-Inertial State Estimator&lt;/strong&gt;, Tong Qin, Peiliang Li, Shaojie Shen, IEEE Transactions on Robotics &lt;a href=&#34;https://ieeexplore.ieee.org/document/8421746/?arnumber=8421746&amp;amp;source=authoralert&#34;&gt;pdf&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;If you use VINS-Fusion for your academic research, please cite our related papers. &lt;a href=&#34;https://github.com/HKUST-Aerial-Robotics/VINS-Fusion/raw/master/support_files/paper_bib.txt&#34;&gt;bib&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;1. Prerequisites&lt;/h2&gt; &#xA;&lt;h3&gt;1.1 &lt;strong&gt;Ubuntu&lt;/strong&gt; and &lt;strong&gt;ROS&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Ubuntu 64-bit 16.04 or 18.04. ROS Kinetic or Melodic. &lt;a href=&#34;http://wiki.ros.org/ROS/Installation&#34;&gt;ROS Installation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;1.2. &lt;strong&gt;Ceres Solver&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Follow &lt;a href=&#34;http://ceres-solver.org/installation.html&#34;&gt;Ceres Installation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;2. Build VINS-Fusion&lt;/h2&gt; &#xA;&lt;p&gt;Clone the repository and catkin_make:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    cd ~/catkin_ws/src&#xA;    git clone https://github.com/HKUST-Aerial-Robotics/VINS-Fusion.git&#xA;    cd ../&#xA;    catkin_make&#xA;    source ~/catkin_ws/devel/setup.bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(if you fail in this step, try to find another computer with clean system or reinstall Ubuntu and ROS)&lt;/p&gt; &#xA;&lt;h2&gt;3. EuRoC Example&lt;/h2&gt; &#xA;&lt;p&gt;Download &lt;a href=&#34;http://projects.asl.ethz.ch/datasets/doku.php?id=kmavvisualinertialdatasets&#34;&gt;EuRoC MAV Dataset&lt;/a&gt; to YOUR_DATASET_FOLDER. Take MH_01 for example, you can run VINS-Fusion with three sensor types (monocular camera + IMU, stereo cameras + IMU and stereo cameras). Open four terminals, run vins odometry, visual loop closure(optional), rviz and play the bag file respectively. Green path is VIO odometry; red path is odometry under visual loop closure.&lt;/p&gt; &#xA;&lt;h3&gt;3.1 Monocualr camera + IMU&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;    roslaunch vins vins_rviz.launch&#xA;    rosrun vins vins_node ~/catkin_ws/src/VINS-Fusion/config/euroc/euroc_mono_imu_config.yaml &#xA;    (optional) rosrun loop_fusion loop_fusion_node ~/catkin_ws/src/VINS-Fusion/config/euroc/euroc_mono_imu_config.yaml &#xA;    rosbag play YOUR_DATASET_FOLDER/MH_01_easy.bag&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3.2 Stereo cameras + IMU&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;    roslaunch vins vins_rviz.launch&#xA;    rosrun vins vins_node ~/catkin_ws/src/VINS-Fusion/config/euroc/euroc_stereo_imu_config.yaml &#xA;    (optional) rosrun loop_fusion loop_fusion_node ~/catkin_ws/src/VINS-Fusion/config/euroc/euroc_stereo_imu_config.yaml &#xA;    rosbag play YOUR_DATASET_FOLDER/MH_01_easy.bag&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3.3 Stereo cameras&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;    roslaunch vins vins_rviz.launch&#xA;    rosrun vins vins_node ~/catkin_ws/src/VINS-Fusion/config/euroc/euroc_stereo_config.yaml &#xA;    (optional) rosrun loop_fusion loop_fusion_node ~/catkin_ws/src/VINS-Fusion/config/euroc/euroc_stereo_config.yaml &#xA;    rosbag play YOUR_DATASET_FOLDER/MH_01_easy.bag&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://github.com/HKUST-Aerial-Robotics/VINS-Fusion/raw/master/support_files/image/euroc.gif&#34; width=&#34;430&#34; height=&#34;240&#34;&gt; &#xA;&lt;h2&gt;4. KITTI Example&lt;/h2&gt; &#xA;&lt;h3&gt;4.1 KITTI Odometry (Stereo)&lt;/h3&gt; &#xA;&lt;p&gt;Download &lt;a href=&#34;http://www.cvlibs.net/datasets/kitti/eval_odometry.php&#34;&gt;KITTI Odometry dataset&lt;/a&gt; to YOUR_DATASET_FOLDER. Take sequences 00 for example, Open two terminals, run vins and rviz respectively. (We evaluated odometry on KITTI benchmark without loop closure funtion)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    roslaunch vins vins_rviz.launch&#xA;    (optional) rosrun loop_fusion loop_fusion_node ~/catkin_ws/src/VINS-Fusion/config/kitti_odom/kitti_config00-02.yaml&#xA;    rosrun vins kitti_odom_test ~/catkin_ws/src/VINS-Fusion/config/kitti_odom/kitti_config00-02.yaml YOUR_DATASET_FOLDER/sequences/00/ &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4.2 KITTI GPS Fusion (Stereo + GPS)&lt;/h3&gt; &#xA;&lt;p&gt;Download &lt;a href=&#34;http://www.cvlibs.net/datasets/kitti/raw_data.php&#34;&gt;KITTI raw dataset&lt;/a&gt; to YOUR_DATASET_FOLDER. Take &lt;a href=&#34;https://s3.eu-central-1.amazonaws.com/avg-kitti/raw_data/2011_10_03_drive_0027/2011_10_03_drive_0027_sync.zip&#34;&gt;2011_10_03_drive_0027_synced&lt;/a&gt; for example. Open three terminals, run vins, global fusion and rviz respectively. Green path is VIO odometry; blue path is odometry under GPS global fusion.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    roslaunch vins vins_rviz.launch&#xA;    rosrun vins kitti_gps_test ~/catkin_ws/src/VINS-Fusion/config/kitti_raw/kitti_10_03_config.yaml YOUR_DATASET_FOLDER/2011_10_03_drive_0027_sync/ &#xA;    rosrun global_fusion global_fusion_node&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://github.com/HKUST-Aerial-Robotics/VINS-Fusion/raw/master/support_files/image/kitti.gif&#34; width=&#34;430&#34; height=&#34;240&#34;&gt; &#xA;&lt;h2&gt;5. VINS-Fusion on car demonstration&lt;/h2&gt; &#xA;&lt;p&gt;Download &lt;a href=&#34;https://drive.google.com/open?id=10t9H1u8pMGDOI6Q2w2uezEq5Ib-Z8tLz&#34;&gt;car bag&lt;/a&gt; to YOUR_DATASET_FOLDER. Open four terminals, run vins odometry, visual loop closure(optional), rviz and play the bag file respectively. Green path is VIO odometry; red path is odometry under visual loop closure.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    roslaunch vins vins_rviz.launch&#xA;    rosrun vins vins_node ~/catkin_ws/src/VINS-Fusion/config/vi_car/vi_car.yaml &#xA;    (optional) rosrun loop_fusion loop_fusion_node ~/catkin_ws/src/VINS-Fusion/config/vi_car/vi_car.yaml &#xA;    rosbag play YOUR_DATASET_FOLDER/car.bag&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://github.com/HKUST-Aerial-Robotics/VINS-Fusion/raw/master/support_files/image/car_gif.gif&#34; width=&#34;430&#34; height=&#34;240&#34;&gt; &#xA;&lt;h2&gt;6. Run with your devices&lt;/h2&gt; &#xA;&lt;p&gt;VIO is not only a software algorithm, it heavily relies on hardware quality. For beginners, we recommend you to run VIO with professional equipment, which contains global shutter cameras and hardware synchronization.&lt;/p&gt; &#xA;&lt;h3&gt;6.1 Configuration file&lt;/h3&gt; &#xA;&lt;p&gt;Write a config file for your device. You can take config files of EuRoC and KITTI as the example.&lt;/p&gt; &#xA;&lt;h3&gt;6.2 Camera calibration&lt;/h3&gt; &#xA;&lt;p&gt;VINS-Fusion support several camera models (pinhole, mei, equidistant). You can use &lt;a href=&#34;https://github.com/hengli/camodocal&#34;&gt;camera model&lt;/a&gt; to calibrate your cameras. We put some example data under /camera_models/calibrationdata to tell you how to calibrate.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd ~/catkin_ws/src/VINS-Fusion/camera_models/camera_calib_example/&#xA;rosrun camera_models Calibrations -w 12 -h 8 -s 80 -i calibrationdata --camera-model pinhole&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;7. Docker Support&lt;/h2&gt; &#xA;&lt;p&gt;To further facilitate the building process, we add docker in our code. Docker environment is like a sandbox, thus makes our code environment-independent. To run with docker, first make sure &lt;a href=&#34;http://wiki.ros.org/ROS/Installation&#34;&gt;ros&lt;/a&gt; and &lt;a href=&#34;https://docs.docker.com/install/linux/docker-ce/ubuntu/&#34;&gt;docker&lt;/a&gt; are installed on your machine. Then add your account to &lt;code&gt;docker&lt;/code&gt; group by &lt;code&gt;sudo usermod -aG docker $YOUR_USER_NAME&lt;/code&gt;. &lt;strong&gt;Relaunch the terminal or logout and re-login if you get &lt;code&gt;Permission denied&lt;/code&gt; error&lt;/strong&gt;, type:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd ~/catkin_ws/src/VINS-Fusion/docker&#xA;make build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the docker building process may take a while depends on your network and machine. After VINS-Fusion successfully built, you can run vins estimator with script &lt;code&gt;run.sh&lt;/code&gt;. Script &lt;code&gt;run.sh&lt;/code&gt; can take several flags and arguments. Flag &lt;code&gt;-k&lt;/code&gt; means KITTI, &lt;code&gt;-l&lt;/code&gt; represents loop fusion, and &lt;code&gt;-g&lt;/code&gt; stands for global fusion. You can get the usage details by &lt;code&gt;./run.sh -h&lt;/code&gt;. Here are some examples with this script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Euroc Monocualr camera + IMU&#xA;./run.sh ~/catkin_ws/src/VINS-Fusion/config/euroc/euroc_mono_imu_config.yaml&#xA;&#xA;# Euroc Stereo cameras + IMU with loop fusion&#xA;./run.sh -l ~/catkin_ws/src/VINS-Fusion/config/euroc/euroc_mono_imu_config.yaml&#xA;&#xA;# KITTI Odometry (Stereo)&#xA;./run.sh -k ~/catkin_ws/src/VINS-Fusion/config/kitti_odom/kitti_config00-02.yaml YOUR_DATASET_FOLDER/sequences/00/&#xA;&#xA;# KITTI Odometry (Stereo) with loop fusion&#xA;./run.sh -kl ~/catkin_ws/src/VINS-Fusion/config/kitti_odom/kitti_config00-02.yaml YOUR_DATASET_FOLDER/sequences/00/&#xA;&#xA;#  KITTI GPS Fusion (Stereo + GPS)&#xA;./run.sh -kg ~/catkin_ws/src/VINS-Fusion/config/kitti_raw/kitti_10_03_config.yaml YOUR_DATASET_FOLDER/2011_10_03_drive_0027_sync/&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In Euroc cases, you need open another terminal and play your bag file. If you need modify the code, simply re-run &lt;code&gt;./run.sh&lt;/code&gt; with proper auguments after your changes.&lt;/p&gt; &#xA;&lt;h2&gt;8. Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;http://ceres-solver.org/&#34;&gt;ceres solver&lt;/a&gt; for non-linear optimization and &lt;a href=&#34;https://github.com/dorian3d/DBoW2&#34;&gt;DBoW2&lt;/a&gt; for loop detection, a generic &lt;a href=&#34;https://github.com/hengli/camodocal&#34;&gt;camera model&lt;/a&gt; and &lt;a href=&#34;https://geographiclib.sourceforge.io/&#34;&gt;GeographicLib&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;9. License&lt;/h2&gt; &#xA;&lt;p&gt;The source code is released under &lt;a href=&#34;http://www.gnu.org/licenses/&#34;&gt;GPLv3&lt;/a&gt; license.&lt;/p&gt; &#xA;&lt;p&gt;We are still working on improving the code reliability. For any technical issues, please contact Tong Qin &amp;lt;qintonguavATgmail.com&amp;gt;.&lt;/p&gt; &#xA;&lt;p&gt;For commercial inquiries, please contact Shaojie Shen &amp;lt;eeshaojieATust.hk&amp;gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>D1rkMtr/VirusTotalC2</title>
    <updated>2022-10-01T01:36:02Z</updated>
    <id>tag:github.com,2022-10-01:/D1rkMtr/VirusTotalC2</id>
    <link href="https://github.com/D1rkMtr/VirusTotalC2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Abusing VirusTotal API to host our C2 traffic, usefull for bypassing blocking firewall rules if VirusTotal is in the target white list , and in case you don&#39;t have C2 infrastructure , now you have a free one&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VirusTotalC2&lt;/h1&gt; &#xA;&lt;p&gt;Abusing VirusTotal API to host our C2 traffic, usefull for bypassing blocking firewall rules if VirusTotal is in the target white list , and in case you don&#39;t have C2 infrastructure , now you have a free one&lt;/p&gt; &#xA;&lt;h1&gt;usage&lt;/h1&gt; &#xA;&lt;h2&gt;Upload a file in VirusTotal UI, get the file Hash , u need also the API key after creating an account&lt;/h2&gt; &#xA;&lt;h2&gt;Implant/TeamServer.exe {file Hash}&lt;/h2&gt; &#xA;&lt;h2&gt;be aware of the day&#39;s comments quota for the free API.&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/110354855/192811979-f9beb0b8-c0cd-42d0-bd48-29b86a6775a4.mp4&#34;&gt;https://user-images.githubusercontent.com/110354855/192811979-f9beb0b8-c0cd-42d0-bd48-29b86a6775a4.mp4&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>