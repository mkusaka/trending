<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-24T01:32:27Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mavlink/qgroundcontrol</title>
    <updated>2022-10-24T01:32:27Z</updated>
    <id>tag:github.com,2022-10-24:/mavlink/qgroundcontrol</id>
    <link href="https://github.com/mavlink/qgroundcontrol" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cross-platform ground control station for drones (Android, iOS, Mac OS, Linux, Windows)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;QGroundControl Ground Control Station&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mavlink/QGroundControl/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/mavlink/QGroundControl.svg?sanitize=true&#34; alt=&#34;Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/mavlink/qgroundcontrol&#34;&gt;&lt;img src=&#34;https://travis-ci.org/mavlink/qgroundcontrol.svg?branch=master&#34; alt=&#34;Travis Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/mavlink/qgroundcontrol&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/crxcm4qayejuvh6c/branch/master?svg=true&#34; alt=&#34;Appveyor Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/mavlink/qgroundcontrol?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;QGroundControl&lt;/em&gt; (QGC) is an intuitive and powerful ground control station (GCS) for UAVs.&lt;/p&gt; &#xA;&lt;p&gt;The primary goal of QGC is ease of use for both first time and professional users. It provides full flight control and mission planning for any MAVLink enabled drone, and vehicle setup for both PX4 and ArduPilot powered UAVs. Instructions for &lt;em&gt;using QGroundControl&lt;/em&gt; are provided in the &lt;a href=&#34;https://docs.qgroundcontrol.com/en/&#34;&gt;User Manual&lt;/a&gt; (you may not need them because the UI is very intuitive!)&lt;/p&gt; &#xA;&lt;p&gt;All the code is open-source, so you can contribute and evolve it as you want. The &lt;a href=&#34;https://dev.qgroundcontrol.com/en/&#34;&gt;Developer Guide&lt;/a&gt; explains how to &lt;a href=&#34;https://dev.qgroundcontrol.com/en/getting_started/&#34;&gt;build&lt;/a&gt; and extend QGC.&lt;/p&gt; &#xA;&lt;p&gt;Key Links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://qgroundcontrol.com&#34;&gt;Website&lt;/a&gt; (qgroundcontrol.com)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.qgroundcontrol.com/en/&#34;&gt;User Manual&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.qgroundcontrol.com/en/&#34;&gt;Developer Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.qgroundcontrol.com/en/Support/Support.html&#34;&gt;Discussion/Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dev.qgroundcontrol.com/en/contribute/&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mavlink/qgroundcontrol/raw/master/COPYING.md&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>baldurk/renderdoc</title>
    <updated>2022-10-24T01:32:27Z</updated>
    <id>tag:github.com,2022-10-24:/baldurk/renderdoc</id>
    <link href="https://github.com/baldurk/renderdoc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;RenderDoc is a stand-alone graphics debugging tool.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/661798/36482670-f81601c0-170b-11e8-8adb-2365b346ac27.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/baldurk/renderdoc/v1.x/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;MIT licensed&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/baldurk/renderdoc/actions&#34;&gt;&lt;img src=&#34;https://github.com/baldurk/renderdoc/workflows/CI/badge.svg?branch=actions-test&amp;amp;event=push&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/baldurk/renderdoc/v1.x/docs/CODE_OF_CONDUCT.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg?sanitize=true&#34; alt=&#34;Contributor Covenant&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;RenderDoc is a frame-capture based graphics debugger, currently available for Vulkan, D3D11, D3D12, OpenGL, and OpenGL ES development on Windows 7 - 10, Linux, Android, Stadia, and Nintendo Switch™. It is completely open-source under the MIT license.&lt;/p&gt; &#xA;&lt;p&gt;If you have any questions, suggestions or problems or you can &lt;a href=&#34;https://github.com/baldurk/renderdoc/issues/new/choose&#34;&gt;create an issue&lt;/a&gt; here on github, &lt;a href=&#34;mailto:baldurk@baldurk.org&#34;&gt;email me directly&lt;/a&gt; or come into &lt;a href=&#34;https://webchat.oftc.net/?channels=renderdoc&#34;&gt;IRC&lt;/a&gt; or &lt;a href=&#34;https://discord.gg/ahq6yRB&#34;&gt;Discord&lt;/a&gt; to discuss it.&lt;/p&gt; &#xA;&lt;p&gt;To install on windows run the appropriate installer for your OS (&lt;a href=&#34;https://renderdoc.org/stable/latest/RenderDoc_latest_64.msi&#34;&gt;64-bit&lt;/a&gt; | &lt;a href=&#34;https://renderdoc.org/stable/latest/RenderDoc_latest_32.msi&#34;&gt;32-bit&lt;/a&gt;) or download the portable zip from the &lt;a href=&#34;https://renderdoc.org/builds&#34;&gt;builds page&lt;/a&gt;. The 64-bit windows build fully supports capturing from 32-bit programs. On linux only 64-bit x86 is supported - there is a precompiled &lt;a href=&#34;https://renderdoc.org/stable/latest/renderdoc_latest.tar.gz&#34;&gt;binary tarball&lt;/a&gt; available, or your distribution may package it. If not you can &lt;a href=&#34;https://raw.githubusercontent.com/baldurk/renderdoc/v1.x/docs/CONTRIBUTING/Compiling.md&#34;&gt;build from source&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Downloads&lt;/strong&gt;: Stable and nightly builds: &lt;a href=&#34;https://renderdoc.org/builds&#34;&gt;https://renderdoc.org/builds&lt;/a&gt; ( &lt;a href=&#34;https://renderdoc.org/symbols&#34;&gt;Symbol server&lt;/a&gt; )&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: &lt;a href=&#34;https://renderdoc.org/docs&#34;&gt;HTML online&lt;/a&gt;, &lt;a href=&#34;https://renderdoc.org/docs/renderdoc.chm&#34;&gt;CHM in builds&lt;/a&gt;, &lt;a href=&#34;https://www.youtube.com/user/baldurkarlsson&#34;&gt;Videos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Contact&lt;/strong&gt;: &lt;a href=&#34;mailto:baldurk@baldurk.org&#34;&gt;baldurk@baldurk.org&lt;/a&gt;, &lt;a href=&#34;https://webchat.oftc.net/?channels=renderdoc&#34;&gt;#renderdoc on OFTC IRC&lt;/a&gt;, &lt;a href=&#34;https://discord.gg/ahq6yRB&#34;&gt;Discord server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Code of Conduct&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/baldurk/renderdoc/v1.x/docs/CODE_OF_CONDUCT.md&#34;&gt;Contributor Covenant&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Information for contributors&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/baldurk/renderdoc/v1.x/docs/CONTRIBUTING.md&#34;&gt;All contribution information&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/baldurk/renderdoc/v1.x/docs/CONTRIBUTING/Compiling.md&#34;&gt;Compilation instructions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Community extensions&lt;/strong&gt;: &lt;a href=&#34;https://github.com/baldurk/renderdoc-contrib&#34;&gt;Extensions repository&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://renderdoc.org/fp/screen1.jpg&#34;&gt; &lt;img src=&#34;https://renderdoc.org/fp/ts_screen1.jpg?2&#34; alt=&#34;Texture view&#34;&gt; &lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://renderdoc.org/fp/screen2.png&#34;&gt; &lt;img src=&#34;https://renderdoc.org/fp/ts_screen2.jpg?2&#34; alt=&#34;Pixel history &amp;amp; shader debug&#34;&gt; &lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://renderdoc.org/fp/screen3.png&#34;&gt; &lt;img src=&#34;https://renderdoc.org/fp/ts_screen3.jpg?2&#34; alt=&#34;Mesh viewer&#34;&gt; &lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://renderdoc.org/fp/screen4.png&#34;&gt; &lt;img src=&#34;https://renderdoc.org/fp/ts_screen4.jpg?2&#34; alt=&#34;Pipeline viewer &amp;amp; constants&#34;&gt; &lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;API Support&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Windows&lt;/th&gt; &#xA;   &lt;th&gt;Linux&lt;/th&gt; &#xA;   &lt;th&gt;Android&lt;/th&gt; &#xA;   &lt;th&gt;Stadia&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Vulkan&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OpenGL ES 2.0 - 3.2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OpenGL 3.2 - 4.6 Core&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;D3D11 &amp;amp; D3D12&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OpenGL 1.0 - 2.0 Compat&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✖&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✖&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;D3D9 &amp;amp; 10&lt;/td&gt; &#xA;   &lt;td&gt;&lt;span&gt;✖&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Metal&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Nintendo Switch™ support is distributed separately for authorized developers as part of the NintendoSDK. For more information, consult the Nintendo Developer Portal.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;p&gt;There are &lt;a href=&#34;https://renderdoc.org/builds&#34;&gt;binary releases&lt;/a&gt; available, built from the release targets. If you just want to use the program and you ended up here, this is what you want :).&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s recommended that if you&#39;re new you start with the stable builds. Nightly builds are available every day from the &lt;a href=&#34;https://renderdoc.org/builds#nightly&#34;&gt;v1.x branch here&lt;/a&gt; if you need it, but correspondingly may be less stable.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The text documentation is available &lt;a href=&#34;https://renderdoc.org/docs/&#34;&gt;online for the latest stable version&lt;/a&gt;, as well as in &lt;a href=&#34;https://renderdoc.org/docs/renderdoc.chm&#34;&gt;renderdoc.chm&lt;/a&gt; in any build. It&#39;s built from &lt;a href=&#34;https://raw.githubusercontent.com/baldurk/renderdoc/v1.x/docs&#34;&gt;restructured text with sphinx&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;As mentioned above there are some &lt;a href=&#34;https://www.youtube.com/user/baldurkarlsson&#34;&gt;youtube videos&lt;/a&gt; showing the use of some basic features and an introduction/overview.&lt;/p&gt; &#xA;&lt;p&gt;There is also a great presentation by &lt;a href=&#34;https://twitter.com/Icetigris&#34;&gt;@Icetigris&lt;/a&gt; which goes into some details of how RenderDoc can be used in real world situations: &lt;a href=&#34;https://docs.google.com/presentation/d/1LQUMIld4SGoQVthnhT1scoA3k4Sg0as14G4NeSiSgFU/edit#slide=id.p&#34;&gt;slides are up here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;RenderDoc is released under the MIT license, see &lt;a href=&#34;https://raw.githubusercontent.com/baldurk/renderdoc/v1.x/LICENSE.md&#34;&gt;LICENSE.md&lt;/a&gt; for full text as well as 3rd party library acknowledgements.&lt;/p&gt; &#xA;&lt;h2&gt;Compiling&lt;/h2&gt; &#xA;&lt;p&gt;Building RenderDoc is fairly straight forward on most platforms. See &lt;a href=&#34;https://raw.githubusercontent.com/baldurk/renderdoc/v1.x/docs/CONTRIBUTING/Compiling.md&#34;&gt;Compiling.md&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing &amp;amp; Development&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;ve added some notes on how to contribute, as well as where to get started looking through the code in &lt;a href=&#34;https://raw.githubusercontent.com/baldurk/renderdoc/v1.x/docs/CONTRIBUTING/Developing-Change.md&#34;&gt;Developing-Change.md&lt;/a&gt;. All contribution information is available under &lt;a href=&#34;https://raw.githubusercontent.com/baldurk/renderdoc/v1.x/docs/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>opentrack/opentrack</title>
    <updated>2022-10-24T01:32:27Z</updated>
    <id>tag:github.com,2022-10-24:/opentrack/opentrack</id>
    <link href="https://github.com/opentrack/opentrack" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Head tracking software for MS Windows, Linux, and Apple OSX&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Intro&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/sthalik/opentrack/branch/unstable&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/n0j9h38jnif5qbe9/branch/unstable?svg=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;opentrack project home is located at &amp;lt;&lt;a href=&#34;http://github.com/opentrack/opentrack&#34;&gt;http://github.com/opentrack/opentrack&lt;/a&gt;&amp;gt;.&lt;/p&gt; &#xA;&lt;p&gt;For the latest &lt;strong&gt;downloads&lt;/strong&gt; visit &amp;lt;&lt;a href=&#34;https://github.com/opentrack/opentrack/releases&#34;&gt;https://github.com/opentrack/opentrack/releases&lt;/a&gt;&amp;gt; Download an &lt;code&gt;.exe&lt;/code&gt; installer or a &lt;code&gt;.7z&lt;/code&gt; archive. Currently installers and portable versions for Windows are available for each release. It supports &lt;a href=&#34;https://github.com/opentrack/opentrack/wiki/portable-mode-for-USB-sticks&#34;&gt;USB stick truly &#34;portable&#34; installations&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please first refer to &amp;lt;&lt;a href=&#34;https://github.com/opentrack/opentrack/wiki&#34;&gt;https://github.com/opentrack/opentrack/wiki&lt;/a&gt;&amp;gt; for &lt;a href=&#34;https://github.com/opentrack/opentrack/wiki/Quick-Start-Guide-(WIP)&#34;&gt;new user guide&lt;/a&gt;, &lt;a href=&#34;https://github.com/opentrack/opentrack/wiki/common-issues&#34;&gt;frequent answers&lt;/a&gt;, specific tracker/filter documentation. See also the &lt;a href=&#34;https://www.youtube.com/watch?v=XI73ul_FnBI&#34;&gt;gameplay video&lt;/a&gt; with opentrack set up.&lt;/p&gt; &#xA;&lt;h2&gt;Looking for railway planning software?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Railway planning software&lt;/strong&gt; &amp;lt;&lt;a href=&#34;http://opentrack.ch&#34;&gt;http://opentrack.ch&lt;/a&gt;&amp;gt; had the name &lt;code&gt;opentrack&lt;/code&gt; first. Apologies for the long-standing naming conflict.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;opentrack&lt;/code&gt; is an application dedicated to tracking user&#39;s head movements and relaying the information to games and flight simulation software.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;opentrack&lt;/code&gt; allows for output shaping, filtering, and operating with many input and output devices and protocols; the codebase runs Microsoft Windows, Apple OSX (currently unmaintained), and GNU/Linux.&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t be afraid to submit an &lt;strong&gt;issue/feature request&lt;/strong&gt; if you have any problems! We&#39;re a friendly bunch.&lt;/p&gt; &#xA;&lt;h2&gt;Tracking input&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PointTracker by Patrick Ruoff, freetrack-like light sources&lt;/li&gt; &#xA; &lt;li&gt;Oculus Rift DK1, DK2, CV, and legacy/knockoff versions (Windows only)&lt;/li&gt; &#xA; &lt;li&gt;Paper &lt;a href=&#34;https://github.com/opentrack/opentrack/wiki/Aruco-tracker&#34;&gt;marker support&lt;/a&gt; via the ArUco library &amp;lt;&lt;a href=&#34;https://github.com/opentrack/aruco&#34;&gt;https://github.com/opentrack/aruco&lt;/a&gt;&amp;gt;&lt;/li&gt; &#xA; &lt;li&gt;Razer Hydra&lt;/li&gt; &#xA; &lt;li&gt;Relaying via UDP from a different computer&lt;/li&gt; &#xA; &lt;li&gt;Relaying UDP via FreePIE-specific Android app&lt;/li&gt; &#xA; &lt;li&gt;Joystick analog axes (Windows)&lt;/li&gt; &#xA; &lt;li&gt;Windows Phone &lt;a href=&#34;https://github.com/ZanderAdam/OpenTrack.WindowsPhone/wiki&#34;&gt;tracker&lt;/a&gt; over opentrack UDP protocol&lt;/li&gt; &#xA; &lt;li&gt;Arduino with custom firmware&lt;/li&gt; &#xA; &lt;li&gt;Intel RealSense 3D cameras (Windows)&lt;/li&gt; &#xA; &lt;li&gt;BBC micro:bit, LEGO, sensortag support via Smalltalk&lt;sup&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Smalltalk&#34;&gt;(1)&lt;/a&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Alan_Kay&#34;&gt;(2)&lt;/a&gt;&lt;/sup&gt; &lt;a href=&#34;http://www.picaxe.com/Teaching/Other-Software/Scratch-Helper-Apps/&#34;&gt;S2Bot&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wiimote (Windows)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Output protocols&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SimConnect for newer Microsoft Flight Simulator (Windows)&lt;/li&gt; &#xA; &lt;li&gt;freetrack implementation (Windows)&lt;/li&gt; &#xA; &lt;li&gt;Relaying UDP to another computer&lt;/li&gt; &#xA; &lt;li&gt;Virtual joystick output (Windows, Linux, OSX)&lt;/li&gt; &#xA; &lt;li&gt;Wine freetrack glue protocol (Linux, OSX)&lt;/li&gt; &#xA; &lt;li&gt;X-Plane plugin (Linux; uses the Wine output option)&lt;/li&gt; &#xA; &lt;li&gt;Tablet-like mouse output (Windows)&lt;/li&gt; &#xA; &lt;li&gt;FlightGear&lt;/li&gt; &#xA; &lt;li&gt;FSUIPC for Microsoft Flight Simulator 2002/2004 (Windows)&lt;/li&gt; &#xA; &lt;li&gt;SteamVR through a bridge (Windows; see &amp;lt;&lt;a href=&#34;https://github.com/r57zone/OpenVR-OpenTrack&#34;&gt;https://github.com/r57zone/OpenVR-OpenTrack&lt;/a&gt;&amp;gt; by @r57zone)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits, in chronological order&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Stanisław Halik (maintainer)&lt;/li&gt; &#xA; &lt;li&gt;Wim Vriend -- author of &lt;a href=&#34;http://facetracknoir.sourceforge.net/&#34;&gt;FaceTrackNoIR&lt;/a&gt; that served as the initial codebase for &lt;code&gt;opentrack&lt;/code&gt;. While the code was almost entirely rewritten, we still hold on to many of &lt;code&gt;FaceTrackNoIR&lt;/code&gt;&#39;s ideas.&lt;/li&gt; &#xA; &lt;li&gt;Chris Thompson (aka mm0zct, Rift and Razer Hydra author and maintainer)&lt;/li&gt; &#xA; &lt;li&gt;Patrick Ruoff (PT tracker author)&lt;/li&gt; &#xA; &lt;li&gt;Xavier Hallade (Intel RealSense tracker author and maintainer)&lt;/li&gt; &#xA; &lt;li&gt;furax49 (hatire tracker author)&lt;/li&gt; &#xA; &lt;li&gt;Michael Welter (contributor)&lt;/li&gt; &#xA; &lt;li&gt;Alexander Orokhovatskiy (Russian translation; profile repository maintenance; providing hardware; translating reports from the Russian community)&lt;/li&gt; &#xA; &lt;li&gt;Attila Csipa (Micro:Bit author)&lt;/li&gt; &#xA; &lt;li&gt;Eike &#34;e4z9&#34; (OSX joystick output driver)&lt;/li&gt; &#xA; &lt;li&gt;Wei Shuai (Wiimote tracker)&lt;/li&gt; &#xA; &lt;li&gt;Stéphane Lenclud (Kinect Face Tracker, Easy Tracker)&lt;/li&gt; &#xA; &lt;li&gt;GO63-samara (Hamilton Filter, Pose-widget improvement)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;uglyDwarf (high CON)&lt;/li&gt; &#xA; &lt;li&gt;Andrzej Czarnowski (FreePIE tracker and &lt;a href=&#34;https://github.com/opentrack/opentrack/wiki/VR-HMD-goggles-setup-----google-cardboard,-colorcross,-opendive&#34;&gt;Google Cardboard&lt;/a&gt; assistance, testing)&lt;/li&gt; &#xA; &lt;li&gt;Wim Vriend (original codebase author and maintainer)&lt;/li&gt; &#xA; &lt;li&gt;Ryan Spicer (OSX tester, contributor)&lt;/li&gt; &#xA; &lt;li&gt;Ries van Twisk (OSX tester, OSX Build Fixes, contributor)&lt;/li&gt; &#xA; &lt;li&gt;Donovan Baarda (filtering/control theory expert)&lt;/li&gt; &#xA; &lt;li&gt;Mathijs Groothuis (@MathijsG, dozens of bugs and other issues reported; NL translation)&lt;/li&gt; &#xA; &lt;li&gt;The Russian community from the &lt;a href=&#34;https://forum.il2sturmovik.ru/&#34;&gt;IL-2 Sturmovik forums&lt;/a&gt; (reporting bugs, requesting important features)&lt;/li&gt; &#xA; &lt;li&gt;OpenCV authors and maintainers &amp;lt;&lt;a href=&#34;https://github.com/opencv/opencv/&#34;&gt;https://github.com/opencv/opencv/&lt;/a&gt;&amp;gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See guides for writing new modules[&lt;a href=&#34;https://github.com/opentrack/opentrack/raw/master/api/plugin-api.hpp&#34;&gt;1&lt;/a&gt;][&lt;a href=&#34;https://github.com/opentrack/opentrack/raw/master/tracker-test/test.h&#34;&gt;2&lt;/a&gt;], and for &lt;a href=&#34;https://github.com/opentrack/opentrack/wiki/Hacking-opentrack&#34;&gt;working with core code&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License and warranty&lt;/h2&gt; &#xA;&lt;p&gt;Almost all code is licensed under the &lt;a href=&#34;https://en.wikipedia.org/wiki/ISC_license&#34;&gt;ISC license&lt;/a&gt;. There are very few proprietary dependencies. There is no copyleft code. See individual files for licensing and authorship information.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/opentrack/opentrack/master/WARRANTY.txt&#34;&gt;WARRANTY.txt&lt;/a&gt; for applying warranty terms (that is, disclaiming possible pre-existing warranty) that are in force unless the software author specifies their own warranty terms. In short, we disclaim all possible warranty and aren&#39;t responsible for any possible damage or losses.&lt;/p&gt; &#xA;&lt;p&gt;The code is held to a high-quality standard and written with utmost care; consider this a promise without legal value. Despite doing the best we can not to injure users&#39; equipment, software developers don&#39;t want to be dragged to courts for imagined or real issues. Disclaiming warranty is a standard practice in the field, even for expensive software like operating systems.&lt;/p&gt; &#xA;&lt;h2&gt;Building opentrack from source&lt;/h2&gt; &#xA;&lt;p&gt;On Windows, use either mingw-w64 or MS Visual Studio 2015 Update 3/newer. On other platforms use GNU or LLVM. Refer to &lt;a href=&#34;https://github.com/opentrack/opentrack/wiki/Building-under-MS-Visual-C---2017-and-later&#34;&gt;Visual C++ 2015 build instructions&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>