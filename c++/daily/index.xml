<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-23T01:32:48Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tindy2013/subconverter</title>
    <updated>2022-08-23T01:32:48Z</updated>
    <id>tag:github.com,2022-08-23:/tindy2013/subconverter</id>
    <link href="https://github.com/tindy2013/subconverter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Utility to convert between various subscription format&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;subconverter&lt;/h1&gt; &#xA;&lt;p&gt;Utility to convert between various proxy subscription formats.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tindy2013/subconverter/actions&#34;&gt;&lt;img src=&#34;https://github.com/tindy2013/subconverter/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tindy2013/subconverter/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/tindy2013/subconverter.svg?sanitize=true&#34; alt=&#34;GitHub tag (latest SemVer)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tindy2013/subconverter/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/tindy2013/subconverter.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tindy2013/subconverter/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/tindy2013/subconverter.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tindy2013/subconverter/raw/master/README-docker.md&#34;&gt;Docker README&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tindy2013/subconverter/raw/master/README-cn.md&#34;&gt;中文文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#subconverter&#34;&gt;subconverter&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#supported-types&#34;&gt;Supported Types&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#quick-usage&#34;&gt;Quick Usage&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#access-interface&#34;&gt;Access Interface&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#advanced-usage&#34;&gt;Advanced Usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#auto-upload&#34;&gt;Auto Upload&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Types&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;As Source&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;As Target&lt;/th&gt; &#xA;   &lt;th&gt;Target Name&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clash&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;clash&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ClashR&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;clashr&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Quantumult&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;quan&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Quantumult X&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;quanx&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Loon&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;loon&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SS (SIP002)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;ss&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SS Android&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;sssub&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SSD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;ssd&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SSR&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;ssr&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Surfboard&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;surfboard&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Surge 2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;surge&amp;amp;ver=2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Surge 3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;surge&amp;amp;ver=3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Surge 4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;surge&amp;amp;ver=4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;V2Ray&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;v2ray&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Telegram-liked HTTP/Socks 5 links&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;Only as source&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Notice:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Shadowrocket users should use &lt;code&gt;ss&lt;/code&gt;, &lt;code&gt;ssr&lt;/code&gt; or &lt;code&gt;v2ray&lt;/code&gt; as target.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can add &lt;code&gt;&amp;amp;remark=&lt;/code&gt; to Telegram-liked HTTP/Socks 5 links to set a remark for this node. For example:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;tg://http?server=1.2.3.4&amp;amp;port=233&amp;amp;user=user&amp;amp;pass=pass&amp;amp;remark=Example&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://t.me/http?server=1.2.3.4&amp;amp;port=233&amp;amp;user=user&amp;amp;pass=pass&amp;amp;remark=Example&#34;&gt;https://t.me/http?server=1.2.3.4&amp;amp;port=233&amp;amp;user=user&amp;amp;pass=pass&amp;amp;remark=Example&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Quick Usage&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Using default groups and rulesets configuration directly, without changing any settings&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Access Interface&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;http://127.0.0.1:25500/sub?target=%TARGET%&amp;amp;url=%URL%&amp;amp;config=%CONFIG%&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Description&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Argument&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Required&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;target&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;clash&lt;/td&gt; &#xA;   &lt;td&gt;Target subscription type. Acquire from Target Name in &lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#supported-types&#34;&gt;Supported Types&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;url&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;https%3A%2F%2Fwww.xxx.com&lt;/td&gt; &#xA;   &lt;td&gt;Subscription to convert. Supports URLs and file paths. Process with &lt;a href=&#34;https://www.urlencoder.org/&#34;&gt;URLEncode&lt;/a&gt; first.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;config&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;No&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;https%3A%2F%2Fwww.xxx.com&lt;/td&gt; &#xA;   &lt;td&gt;External configuration file path. Supports URLs and file paths. Process with &lt;a href=&#34;https://www.urlencoder.org/&#34;&gt;URLEncode&lt;/a&gt; first. More examples can be found in &lt;a href=&#34;https://github.com/lzdnico/subconverteriniexample&#34;&gt;this&lt;/a&gt; repository.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If you need to merge two or more subscription, you should join them with &#39;|&#39; before the URLEncode process.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;You have 2 subscriptions and you want to merge them and generate a Clash subscription:&#xA;1. https://dler.cloud/subscribe/ABCDE?clash=vmess&#xA;2. https://rich.cloud/subscribe/ABCDE?clash=vmess&#xA;&#xA;First use &#39;|&#39; to separate 2 subscriptions:&#xA;https://dler.cloud/subscribe/ABCDE?clash=vmess|https://rich.cloud/subscribe/ABCDE?clash=vmess&#xA;&#xA;Then process it with URLEncode to get %URL%:&#xA;https%3A%2F%2Fdler.cloud%2Fsubscribe%2FABCDE%3Fclash%3Dvmess%7Chttps%3A%2F%2Frich.cloud%2Fsubscribe%2FABCDE%3Fclash%3Dvmess&#xA;&#xA;Then fill %TARGET% and %URL% in Access Interface with actual values:&#xA;http://127.0.0.1:25500/sub?target=clash&amp;amp;url=https%3A%2F%2Fdler.cloud%2Fsubscribe%2FABCDE%3Fclash%3Dvmess%7Chttps%3A%2F%2Frich.cloud%2Fsubscribe%2FABCDE%3Fclash%3Dvmess&#xA;&#xA;Finally subscribe this link in Clash and you are done!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Advanced Usage&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://github.com/tindy2013/subconverter/raw/master/README-cn.md#%E8%BF%9B%E9%98%B6%E7%94%A8%E6%B3%95&#34;&gt;中文文档&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Auto Upload&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Upload Gist automatically&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Add a &lt;a href=&#34;https://github.com/settings/tokens/new&#34;&gt;Personal Access Token&lt;/a&gt; into &lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/gistconf.ini&#34;&gt;gistconf.ini&lt;/a&gt; in the root directory, then add &lt;code&gt;&amp;amp;upload=true&lt;/code&gt; to the local subscription link, then when you access this link, the program will automatically update the content to Gist repository.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[common]&#xA;;uncomment the following line and enter your token to enable upload function&#xA;token = xxxxxxxxxxxxxxxxxxxxxxxx(Your Personal Access Token)&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>snesrev/zelda3</title>
    <updated>2022-08-23T01:32:48Z</updated>
    <id>tag:github.com,2022-08-23:/snesrev/zelda3</id>
    <link href="https://github.com/snesrev/zelda3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Zelda3&lt;/h1&gt; &#xA;&lt;p&gt;A reimplementation of Zelda 3.&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;This is a reverse engineered clone of Zelda 3 - A Link to the Past.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s around 70-80kLOC of C/C++ code, and reimplements all parts of the original game. The game is playable from start to end.&lt;/p&gt; &#xA;&lt;p&gt;You need a copy of the ROM to extract game resources (levels, images). Then once that&#39;s done, the ROM is no longer needed.&lt;/p&gt; &#xA;&lt;p&gt;It uses the PPU and DSP implementation from LakeSnes. Additionally, it can be configured to also run the original machine code side by side. Then the RAM state is compared after each frame, to verify that the C++ implementation is correct.&lt;/p&gt; &#xA;&lt;p&gt;I got much assistance from spannierism&#39;s Zelda 3 JP disassembly and the other ones that documented loads of function names and variables.&lt;/p&gt; &#xA;&lt;h2&gt;Compiling&lt;/h2&gt; &#xA;&lt;p&gt;Put the ROM in tables/zelda3.sfc&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cd tables&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Install python dependencies: &lt;code&gt;pip install pillow&lt;/code&gt; and &lt;code&gt;pip install pyyaml&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run &lt;code&gt;python extract_resources.py&lt;/code&gt; to extract resources from the ROM into a more human readable format.&lt;/p&gt; &#xA;&lt;p&gt;Run &lt;code&gt;python compile_resources.py&lt;/code&gt; to produce .h files that gets included by the C++ code.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;Build the .sln file with Visual Studio&lt;/p&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;apt install libsdl2-dev&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Make sure you are in the root directory.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;clang++ -I/usr/include/SDL2 -lSDL2 -O2 -ozelda3 *.cpp snes/*.cpp&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage and controls&lt;/h2&gt; &#xA;&lt;p&gt;The game supports snapshots. The joypad input history is also saved in the snapshot. It&#39;s thus possible to replay a playthrough in turbo mode to verify that the game behaves correctly.&lt;/p&gt; &#xA;&lt;p&gt;The game is run with &lt;code&gt;./zelda3&lt;/code&gt; and takes an optional path to the ROM-file, which will verify for each frame that the C++ code matches the original behavior.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Button&lt;/th&gt; &#xA;   &lt;th&gt;Key&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Up&lt;/td&gt; &#xA;   &lt;td&gt;Up arrow&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Down&lt;/td&gt; &#xA;   &lt;td&gt;Down arrow&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Left&lt;/td&gt; &#xA;   &lt;td&gt;Left arrow&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Right&lt;/td&gt; &#xA;   &lt;td&gt;Right arrow&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Start&lt;/td&gt; &#xA;   &lt;td&gt;Enter&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Select&lt;/td&gt; &#xA;   &lt;td&gt;Right shift&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;A&lt;/td&gt; &#xA;   &lt;td&gt;X&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;B&lt;/td&gt; &#xA;   &lt;td&gt;Z&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;X&lt;/td&gt; &#xA;   &lt;td&gt;S&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Y&lt;/td&gt; &#xA;   &lt;td&gt;A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;L&lt;/td&gt; &#xA;   &lt;td&gt;D&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;R&lt;/td&gt; &#xA;   &lt;td&gt;C&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Additionally, the following commands are available:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Key&lt;/th&gt; &#xA;   &lt;th&gt;Action&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;W&lt;/td&gt; &#xA;   &lt;td&gt;Fill health/magic&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;E&lt;/td&gt; &#xA;   &lt;td&gt;Hard reset&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;P&lt;/td&gt; &#xA;   &lt;td&gt;Pause&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;T&lt;/td&gt; &#xA;   &lt;td&gt;Toggle replay turbo&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;K&lt;/td&gt; &#xA;   &lt;td&gt;Clear all input history from current snapshot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F1-F10&lt;/td&gt; &#xA;   &lt;td&gt;Load snapshot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shift+F1-F10&lt;/td&gt; &#xA;   &lt;td&gt;Save snapshot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ctrl+F1-F10&lt;/td&gt; &#xA;   &lt;td&gt;Replay the snapshot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Additionally, there are a bunch of included playthrough snapshots that play all dungeons of the game. You access them with the digit keys. If you want to replay the stage in turbo mode, press Ctrl+Digit (eg Ctrl-5).&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT license. See &#39;LICENSE.txt&#39; for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mumble-voip/mumble</title>
    <updated>2022-08-23T01:32:48Z</updated>
    <id>tag:github.com,2022-08-23:/mumble-voip/mumble</id>
    <link href="https://github.com/mumble-voip/mumble" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mumble is an open-source, low-latency, high quality voice chat software.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mumble-voip/mumble/master/screenshots/Mumble.png&#34; alt=&#34;Mumble screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Mumble - Open Source voice-chat software&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.mumble.info&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Website-https%3A%2F%2Fwww.mumble.info-blue?style=for-the-badge&#34; alt=&#34;https://www.mumble.info&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://matrix.to/#/#mumble:matrix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/matrix/mumble:matrix.org?label=%23mumble:matrix.org&amp;amp;style=for-the-badge&#34; alt=&#34;#mumble:matrix.org&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.codacy.com/manual/mumble-voip/mumble&#34;&gt;&lt;img src=&#34;https://img.shields.io/codacy/grade/262a5e20c83a40599050e22e700d8a3e?label=Codacy&amp;amp;style=for-the-badge&#34; alt=&#34;Codacy&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/Mumble-VoIP/Mumble&#34;&gt;&lt;img src=&#34;https://img.shields.io/azure-devops/build/Mumble-VoIP/c819eb06-7b22-4ef3-bbcd-860094454eb3/1?label=Azure&amp;amp;style=for-the-badge&#34; alt=&#34;Azure&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cirrus-ci.com/github/mumble-voip/mumble&#34;&gt;&lt;img src=&#34;https://img.shields.io/cirrus/github/mumble-voip/mumble?label=Cirrus%20CI&amp;amp;style=for-the-badge&#34; alt=&#34;Cirrus CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.com/mumble-voip/mumble&#34;&gt;&lt;img src=&#34;https://img.shields.io/travis/com/mumble-voip/mumble?label=Travis%20CI&amp;amp;style=for-the-badge&#34; alt=&#34;Travis CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Mumble is an Open Source, low-latency and high-quality voice-chat program written on top of Qt and Opus.&lt;/p&gt; &#xA;&lt;p&gt;There are two modules in Mumble; the client (mumble) and the server (murmur). The client works on Windows, Linux, FreeBSD, OpenBSD and macOS, while the server should work on anything Qt can be installed on.&lt;/p&gt; &#xA;&lt;p&gt;Please note that with &#34;Windows&#34; we mean 7 and newer. Vista may be supported, but we can&#39;t guarantee it. If you don&#39;t want to encounter potential issues, you may download Mumble 1.3.x, the last version to provide support for XP.&lt;/p&gt; &#xA;&lt;p&gt;The documentation of the project can be found on the &lt;a href=&#34;https://wiki.mumble.info/wiki/Main_Page&#34;&gt;wiki&lt;/a&gt;. The &lt;a href=&#34;https://wiki.mumble.info/wiki/FAQ/English&#34;&gt;FAQ&lt;/a&gt; can also be found there.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We always welcome contributions to the project. If you have code that you would like to contribute, please go ahead and create a PR. While doing so, please try to make sure that you follow our &lt;a href=&#34;https://raw.githubusercontent.com/mumble-voip/mumble/master/COMMIT_GUIDELINES.md&#34;&gt;commit guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are new to the Mumble project, you may want to check out the general &lt;a href=&#34;https://raw.githubusercontent.com/mumble-voip/mumble/master/docs/dev/TheMumbleSourceCode.md&#34;&gt;introduction to the Mumble source code&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Translating&lt;/h3&gt; &#xA;&lt;p&gt;Mumble supports various languages. We are always looking for qualified people to contribute translations.&lt;/p&gt; &#xA;&lt;p&gt;We are using Weblate as a translation platform. &lt;a href=&#34;https://hosted.weblate.org/accounts/register/&#34;&gt;Register on Weblate&lt;/a&gt;, and join &lt;a href=&#34;https://hosted.weblate.org/projects/mumble/&#34;&gt;our translation project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Writing plugins&lt;/h3&gt; &#xA;&lt;p&gt;Mumble supports general-purpose plugins that can provide functionality that is not implemented in the main Mumble application. You can find more information on how this works and on how these have to be created in the &lt;a href=&#34;https://raw.githubusercontent.com/mumble-voip/mumble/master/docs/dev/plugins/README.md&#34;&gt;plugin documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;For information on how to build Mumble, checkout &lt;a href=&#34;https://raw.githubusercontent.com/mumble-voip/mumble/master/docs/dev/build-instructions/README.md&#34;&gt;the dedicated documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting issues&lt;/h2&gt; &#xA;&lt;p&gt;If you want to report a bug or create a feature-request, you can open a new issue (after you have checked that there is none already) on &lt;a href=&#34;https://github.com/mumble-voip/mumble/issues/new/choose&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Windows&lt;/h2&gt; &#xA;&lt;h3&gt;Running Mumble&lt;/h3&gt; &#xA;&lt;p&gt;After installation, you should have a new Mumble folder in your Start Menu, from which you can start Mumble.&lt;/p&gt; &#xA;&lt;h3&gt;Running Murmur&lt;/h3&gt; &#xA;&lt;p&gt;Doubleclick the Murmur icon to start murmur. There will be a small icon on your taskbar from which you can view the log.&lt;/p&gt; &#xA;&lt;p&gt;To set the superuser password, run murmur with the parameters &lt;code&gt;-supw &amp;lt;password&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;MacOS&lt;/h2&gt; &#xA;&lt;h3&gt;Running Mumble&lt;/h3&gt; &#xA;&lt;p&gt;To install Mumble, drag the application from the downloaded disk image into your &lt;code&gt;/Applications&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h3&gt;Running Murmur&lt;/h3&gt; &#xA;&lt;p&gt;Murmur is distributed separately from the Mumble client on MacOS. It is called Static OS X Server and can be downloaded from the main webpage.&lt;/p&gt; &#xA;&lt;p&gt;Once downloaded it can be run in the same way as on any other Unix-like system. For more information please see the &#34;Running Murmur&#34; in the Linux/Unix section below.&lt;/p&gt; &#xA;&lt;h2&gt;Linux/Unix&lt;/h2&gt; &#xA;&lt;h3&gt;Running Mumble&lt;/h3&gt; &#xA;&lt;p&gt;If you have installed Mumble through your distributon&#39;s package repository, you should be able to find Mumble in your start menu. No additional steps necessary.&lt;/p&gt; &#xA;&lt;h3&gt;Running Murmur&lt;/h3&gt; &#xA;&lt;p&gt;Murmur should be run from the command line, so start a shell (command prompt) and go to wherever you installed Mumble. Run murmur as&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;murmurd [-supw &amp;lt;password&amp;gt;] [-ini &amp;lt;inifile&amp;gt;] [-fg] [v]&#xA;&#xA;-supw   Set a new password for the user SuperUser, which is hardcoded to&#xA;        bypass ACLs. Keep this password safe. Until you set a password,&#xA;        the SuperUser is disabled. If you use this option, murmur will&#xA;        set the password in the database and then exit.&#xA;&#xA;-ini    Use an inifile other than murmur.ini, use this to run several instances&#xA;        of murmur from the same directory. Make sure each instance is using&#xA;        a separate database.&#xA;&#xA;-fg     Run in the foreground, logging to standard output.&#xA;&#xA;-v      More verbose logging.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Build and run from Docker&lt;/h4&gt; &#xA;&lt;p&gt;On recent Docker versions you can build images directly from sources on GitHub:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build --pull -t mumble-server github.com/mumble-voip/mumble#master&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example &lt;code&gt;--pull&lt;/code&gt;s each time to check for updated base image, then downloads and builds &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt; &#xA;&lt;p&gt;You can also specify user id (UID) and group id (GID) for the &lt;em&gt;murmur&lt;/em&gt; user in the image. This allows users who use bind mount volumes to use the same UID/GID in the container as in the host:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker build --pull -t mumble-server --build-arg UID=1234 --build-arg GID=1234 github.com/mumble-voip/mumble#master&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;OpenGL Overlay&lt;/h3&gt; &#xA;&lt;p&gt;The OpenGL overlay works by intercepting the call to switch buffers, and just before the buffer switch, we draw our nice GUI.&lt;/p&gt; &#xA;&lt;p&gt;To load a game with the overlay enabled, start the game like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;LD_PRELOAD=/path/to/libmumble.so.1.1 gamename&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have Mumble installed through the binary packages, this can be done by simply typing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mumble-overlay gamename&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>