<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-26T01:27:03Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pierotofy/OpenSplat</title>
    <updated>2024-02-26T01:27:03Z</updated>
    <id>tag:github.com,2024-02-26:/pierotofy/OpenSplat</id>
    <link href="https://github.com/pierotofy/OpenSplat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Free and open source 3D gaussian splatting in C++ ðŸ’¦&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ðŸ’¦ OpenSplat&lt;/h1&gt; &#xA;&lt;p&gt;A free and open source implementation of 3D gaussian splatting written in C++, focused on being portable, lean and fast.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/pierotofy/OpenSplat/assets/1951843/3461e0e4-e134-4d6a-8a56-d89d00258e41&#34; alt=&#34;OpenSplat&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;OpenSplat takes camera poses + sparse points and computes a &lt;a href=&#34;https://drive.google.com/file/d/1w-CBxyWNXF3omA8B_IeOsRmSJel3iwyr/view?usp=sharing&#34;&gt;scene file&lt;/a&gt; (.ply) that can be later imported for viewing, editing and rendering in other &lt;a href=&#34;https://github.com/MrNeRF/awesome-3D-gaussian-splatting?tab=readme-ov-file#open-source-implementations&#34;&gt;software&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Commercial use allowed and encouraged under the terms of the &lt;a href=&#34;https://www.tldrlegal.com/license/gnu-affero-general-public-license-v3-agpl-3-0&#34;&gt;AGPLv3&lt;/a&gt;. âœ…&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;p&gt;Requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;CUDA&lt;/strong&gt;: Make sure you have the CUDA compiler (&lt;code&gt;nvcc&lt;/code&gt;) in your PATH and that &lt;code&gt;nvidia-smi&lt;/code&gt; is working. &lt;a href=&#34;https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html&#34;&gt;https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;libtorch&lt;/strong&gt;: Visit &lt;a href=&#34;https://pytorch.org/get-started/locally/&#34;&gt;https://pytorch.org/get-started/locally/&lt;/a&gt; and select your OS, for package select &#34;LibTorch&#34;. Make sure to match your version of CUDA if you want to leverage GPU support in libtorch.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OpenCV&lt;/strong&gt;: &lt;code&gt;sudo apt install libopencv-dev&lt;/code&gt; should do it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/pierotofy/OpenSplat OpenSplat&#xA;cd OpenSplat&#xA;mkdir build &amp;amp;&amp;amp; cd build&#xA;cmake -DCMAKE_PREFIX_PATH=/path/to/libtorch/ .. &amp;amp;&amp;amp; make -j$(nproc)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The software has been tested on Ubuntu 20.04 and Windows. With some changes it could run on macOS (help us by opening a PR?).&lt;/p&gt; &#xA;&lt;h2&gt;Run&lt;/h2&gt; &#xA;&lt;p&gt;To get started, download a dataset and extract it to a folder: [ &lt;a href=&#34;https://drive.google.com/file/d/1mUUZFDo2swd6CE5vwPPkjN63Hyf4XyEv/view?usp=sharing&#34;&gt;banana&lt;/a&gt; ] [ &lt;a href=&#34;https://drive.google.com/file/d/1-X741ecDczTRoMc3YenJLSFC9ulWXeNc/view?usp=sharing&#34;&gt;train&lt;/a&gt; ] [ &lt;a href=&#34;https://drive.google.com/file/d/1WWXo-GKo6d-yf-K1T1CswIdkdZrBNZ_e/view?usp=sharing&#34;&gt;truck&lt;/a&gt; ]&lt;/p&gt; &#xA;&lt;p&gt;Then run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./opensplat /path/to/banana -n 2000&#xA;[...]&#xA;Wrote splat.ply&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The output &lt;code&gt;splat.ply&lt;/code&gt; can then be dragged and dropped in one of the many &lt;a href=&#34;https://github.com/MrNeRF/awesome-3D-gaussian-splatting?tab=readme-ov-file#viewers&#34;&gt;viewers&lt;/a&gt; such as &lt;a href=&#34;https://playcanvas.com/viewer&#34;&gt;https://playcanvas.com/viewer&lt;/a&gt;. You can also edit/cleanup the scene using &lt;a href=&#34;https://playcanvas.com/supersplat/editor&#34;&gt;https://playcanvas.com/supersplat/editor&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To run on your own data, choose the path to an existing &lt;a href=&#34;https://docs.nerf.studio/&#34;&gt;nerfstudio&lt;/a&gt; project. The project must have sparse points included (random initialization is not supported, see &lt;a href=&#34;https://github.com/pierotofy/OpenSplat/issues/7&#34;&gt;https://github.com/pierotofy/OpenSplat/issues/7&lt;/a&gt;). You can generate nerfstudio projects from &lt;a href=&#34;https://github.com/colmap/colmap/&#34;&gt;COLMAP&lt;/a&gt; by using nerfstudio&#39;s &lt;code&gt;ns-process-data&lt;/code&gt; command: &lt;a href=&#34;https://docs.nerf.studio/quickstart/custom_dataset.html&#34;&gt;https://docs.nerf.studio/quickstart/custom_dataset.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We have plans to add support for reading COLMAP projects directly in the near future. See &lt;a href=&#34;https://github.com/pierotofy/OpenSplat/issues/1&#34;&gt;https://github.com/pierotofy/OpenSplat/issues/1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;There&#39;s several parameters you can tune. To view the full list:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./opensplat --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Project Goals&lt;/h2&gt; &#xA;&lt;p&gt;We recently released OpenSplat, so there&#39;s lots of work to do.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support for running on AMD cards&lt;/li&gt; &#xA; &lt;li&gt;Support for running on CPU-only&lt;/li&gt; &#xA; &lt;li&gt;Improve speed / reduce memory usage&lt;/li&gt; &#xA; &lt;li&gt;Distributed computation using multiple machines&lt;/li&gt; &#xA; &lt;li&gt;Real-time training viewer output&lt;/li&gt; &#xA; &lt;li&gt;Compressed scene outputs&lt;/li&gt; &#xA; &lt;li&gt;Your ideas?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pierotofy/OpenSplat/issues?q=is%3Aopen+is%3Aissue+label%3Aenhancement&#34;&gt;https://github.com/pierotofy/OpenSplat/issues?q=is%3Aopen+is%3Aissue+label%3Aenhancement&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions! Pull requests are welcome.&lt;/p&gt; &#xA;&lt;h2&gt;GPU Memory Notes&lt;/h2&gt; &#xA;&lt;p&gt;A single gaussian takes ~2000 bytes of memory, so currenly you need ~2GB of GPU memory for each million gaussians.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;The methods used in OpenSplat are originally based on &lt;a href=&#34;https://docs.nerf.studio/nerfology/methods/splat.html&#34;&gt;splatfacto&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The code in this repository, unless otherwise noted, is licensed under the AGPLv3.&lt;/p&gt; &#xA;&lt;p&gt;The code from &lt;a href=&#34;https://docs.nerf.studio/nerfology/methods/splat.html&#34;&gt;splatfacto&lt;/a&gt; is originally licensed under the Apache 2.0 license and is Â© 2023 The Nerfstudio Team.&lt;/p&gt;</summary>
  </entry>
</feed>