<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-18T01:26:18Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zeux/pugixml</title>
    <updated>2023-10-18T01:26:18Z</updated>
    <id>tag:github.com,2023-10-18:/zeux/pugixml</id>
    <link href="https://github.com/zeux/pugixml" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Light-weight, simple and fast XML parser for C++ with XPath support&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;pugixml &lt;a href=&#34;https://github.com/zeux/pugixml/actions&#34;&gt;&lt;img src=&#34;https://github.com/zeux/pugixml/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;Actions Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/zeux/pugixml&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/9hdks1doqvq8pwe7/branch/master?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/zeux/pugixml?branch=master&#34;&gt;&lt;img src=&#34;https://codecov.io/github/zeux/pugixml/coverage.svg?branch=master&#34; alt=&#34;codecov.io&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;MIT&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;pugixml is a C++ XML processing library, which consists of a DOM-like interface with rich traversal/modification capabilities, an extremely fast XML parser which constructs the DOM tree from an XML file/buffer, and an XPath 1.0 implementation for complex data-driven tree queries. Full Unicode support is also available, with Unicode interface variants and conversions between different Unicode encodings (which happen automatically during parsing/saving).&lt;/p&gt; &#xA;&lt;p&gt;pugixml is used by a lot of projects, both open-source and proprietary, for performance and easy-to-use interface.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation for the current release of pugixml is available on-line as two separate documents:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pugixml.org/docs/quickstart.html&#34;&gt;Quick-start guide&lt;/a&gt;, that aims to provide enough information to start using the library;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pugixml.org/docs/manual.html&#34;&gt;Complete reference manual&lt;/a&gt;, that describes all features of the library in detail.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Youâ€™re advised to start with the quick-start guide; however, many important library features are either not described in it at all or only mentioned briefly; if you require more information you should read the complete manual.&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s an example of how code using pugixml looks; it opens an XML file, goes over all Tool nodes and prints tools that have a Timeout attribute greater than 0:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#include &#34;pugixml.hpp&#34;&#xA;#include &amp;lt;iostream&amp;gt;&#xA;&#xA;int main()&#xA;{&#xA;    pugi::xml_document doc;&#xA;    pugi::xml_parse_result result = doc.load_file(&#34;xgconsole.xml&#34;);&#xA;    if (!result)&#xA;        return -1;&#xA;        &#xA;    for (pugi::xml_node tool: doc.child(&#34;Profile&#34;).child(&#34;Tools&#34;).children(&#34;Tool&#34;))&#xA;    {&#xA;        int timeout = tool.attribute(&#34;Timeout&#34;).as_int();&#xA;        &#xA;        if (timeout &amp;gt; 0)&#xA;            std::cout &amp;lt;&amp;lt; &#34;Tool &#34; &amp;lt;&amp;lt; tool.attribute(&#34;Filename&#34;).value() &amp;lt;&amp;lt; &#34; has timeout &#34; &amp;lt;&amp;lt; timeout &amp;lt;&amp;lt; &#34;\n&#34;;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And the same example using XPath:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#include &#34;pugixml.hpp&#34;&#xA;#include &amp;lt;iostream&amp;gt;&#xA;&#xA;int main()&#xA;{&#xA;    pugi::xml_document doc;&#xA;    pugi::xml_parse_result result = doc.load_file(&#34;xgconsole.xml&#34;);&#xA;    if (!result)&#xA;        return -1;&#xA;        &#xA;    pugi::xpath_node_set tools_with_timeout = doc.select_nodes(&#34;/Profile/Tools/Tool[@Timeout &amp;gt; 0]&#34;);&#xA;    &#xA;    for (pugi::xpath_node node: tools_with_timeout)&#xA;    {&#xA;        pugi::xml_node tool = node.node();&#xA;        std::cout &amp;lt;&amp;lt; &#34;Tool &#34; &amp;lt;&amp;lt; tool.attribute(&#34;Filename&#34;).value() &amp;lt;&amp;lt;&#xA;            &#34; has timeout &#34; &amp;lt;&amp;lt; tool.attribute(&#34;Timeout&#34;).as_int() &amp;lt;&amp;lt; &#34;\n&#34;;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This library is available to anybody free of charge, under the terms of MIT License (see LICENSE.md).&lt;/p&gt;</summary>
  </entry>
</feed>