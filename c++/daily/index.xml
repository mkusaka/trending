<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-22T01:29:28Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>borglab/gtsam</title>
    <updated>2025-01-22T01:29:28Z</updated>
    <id>tag:github.com,2025-01-22:/borglab/gtsam</id>
    <link href="https://github.com/borglab/gtsam" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GTSAM is a library of C++ classes that implement smoothing and mapping (SAM) in robotics and vision, using factor graphs and Bayes networks as the underlying computing paradigm rather than sparse matrices.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;README - Georgia Tech Smoothing and Mapping Library&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important Note&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;As of January 2023, the &lt;code&gt;develop&lt;/code&gt; branch is officially in &#34;Pre 4.3&#34; mode. We envision several API-breaking changes as we switch to C++17 and away from boost.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;In addition, features deprecated in 4.2 will be removed. Please use the stable &lt;a href=&#34;https://github.com/borglab/gtsam/releases/tag/4.2&#34;&gt;4.2 release&lt;/a&gt; if you need those features. However, most are easily converted and can be tracked down (in 4.2) by disabling the cmake flag &lt;code&gt;GTSAM_ALLOW_DEPRECATED_SINCE_V42&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What is GTSAM?&lt;/h2&gt; &#xA;&lt;p&gt;GTSAM is a C++ library that implements smoothing and mapping (SAM) in robotics and vision, using Factor Graphs and Bayes Networks as the underlying computing paradigm rather than sparse matrices.&lt;/p&gt; &#xA;&lt;p&gt;The current support matrix is:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Platform&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Compiler&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Build Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Ubuntu 20.04/22.04&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;gcc/clang&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/borglab/gtsam/workflows/Linux%20CI/badge.svg?sanitize=true&#34; alt=&#34;Linux CI&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;macOS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;clang&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/borglab/gtsam/workflows/macOS%20CI/badge.svg?sanitize=true&#34; alt=&#34;macOS CI&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Windows&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;MSVC&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/borglab/gtsam/workflows/Windows%20CI/badge.svg?sanitize=true&#34; alt=&#34;Windows CI&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;On top of the C++ library, GTSAM includes &lt;a href=&#34;https://raw.githubusercontent.com/borglab/gtsam/develop/#wrappers&#34;&gt;wrappers for MATLAB &amp;amp; Python&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;In the root library folder execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#!bash&#xA;mkdir build&#xA;cd build&#xA;cmake ..&#xA;make check (optional, runs unit tests)&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Prerequisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.boost.org/users/download/&#34;&gt;Boost&lt;/a&gt; &amp;gt;= 1.65 (Ubuntu: &lt;code&gt;sudo apt-get install libboost-all-dev&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cmake.org/cmake/resources/software.html&#34;&gt;CMake&lt;/a&gt; &amp;gt;= 3.0 (Ubuntu: &lt;code&gt;sudo apt-get install cmake&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;A modern compiler, i.e., at least gcc 4.7.3 on Linux.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Optional prerequisites - used automatically if findable by CMake:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.threadingbuildingblocks.org/&#34;&gt;Intel Threaded Building Blocks (TBB)&lt;/a&gt; (Ubuntu: &lt;code&gt;sudo apt-get install libtbb-dev&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://software.intel.com/en-us/intel-mkl&#34;&gt;Intel Math Kernel Library (MKL)&lt;/a&gt; (Ubuntu: &lt;a href=&#34;https://software.intel.com/en-us/articles/installing-intel-free-libs-and-python-apt-repo&#34;&gt;installing using APT&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/borglab/gtsam/develop/INSTALL.md&#34;&gt;INSTALL.md&lt;/a&gt; for more installation information&lt;/li&gt; &#xA;   &lt;li&gt;Note that MKL may not provide a speedup in all cases. Make sure to benchmark your problem with and without MKL.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;GTSAM 4 Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;GTSAM 4 introduces several new features, most notably Expressions and a Python toolbox. It also introduces traits, a C++ technique that allows optimizing with non-GTSAM types. That opens the door to retiring geometric types such as Point2 and Point3 to pure Eigen types, which we also do. A significant change which will not trigger a compile error is that zero-initializing of Point2 and Point3 is deprecated, so please be aware that this might render functions using their default constructor incorrect.&lt;/p&gt; &#xA;&lt;h2&gt;Wrappers&lt;/h2&gt; &#xA;&lt;p&gt;We provide support for &lt;a href=&#34;https://raw.githubusercontent.com/borglab/gtsam/develop/matlab/README.md&#34;&gt;MATLAB&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/borglab/gtsam/develop/python/README.md&#34;&gt;Python&lt;/a&gt; wrappers for GTSAM. Please refer to the linked documents for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you are using GTSAM for academic work, please use the following citation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@software{gtsam,&#xA;  author       = {Frank Dellaert and GTSAM Contributors},&#xA;  title        = {borglab/gtsam},&#xA;  month        = May,&#xA;  year         = 2022,&#xA;  publisher    = {Georgia Tech Borg Lab},&#xA;  version      = {4.2a8},&#xA;  doi          = {10.5281/zenodo.5794541},&#xA;  url          = {https://github.com/borglab/gtsam)}}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To cite the &lt;code&gt;Factor Graphs for Robot Perception&lt;/code&gt; book, please use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@book{factor_graphs_for_robot_perception,&#xA;    author={Frank Dellaert and Michael Kaess},&#xA;    year={2017},&#xA;    title={Factor Graphs for Robot Perception},&#xA;    publisher={Foundations and Trends in Robotics, Vol. 6},&#xA;    url={http://www.cs.cmu.edu/~kaess/pub/Dellaert17fnt.pdf}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using the IMU preintegration scheme, please cite:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@book{imu_preintegration,&#xA;    author={Christian Forster and Luca Carlone and Frank Dellaert and Davide Scaramuzza},&#xA;    title={IMU preintegration on Manifold for Efficient Visual-Inertial Maximum-a-Posteriori Estimation},&#xA;    year={2015}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;The Preintegrated IMU Factor&lt;/h2&gt; &#xA;&lt;p&gt;GTSAM includes a state of the art IMU handling scheme based on&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Todd Lupton and Salah Sukkarieh, &lt;em&gt;&#34;Visual-Inertial-Aided Navigation for High-Dynamic Motion in Built Environments Without Initial Conditions&#34;&lt;/em&gt;, TRO, 28(1):61-76, 2012. &lt;a href=&#34;https://ieeexplore.ieee.org/document/6092505&#34;&gt;[link]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Our implementation improves on this using integration on the manifold, as detailed in&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Luca Carlone, Zsolt Kira, Chris Beall, Vadim Indelman, and Frank Dellaert, &lt;em&gt;&#34;Eliminating conditionally independent sets in factor graphs: a unifying perspective based on smart factors&#34;&lt;/em&gt;, Int. Conf. on Robotics and Automation (ICRA), 2014. &lt;a href=&#34;https://ieeexplore.ieee.org/abstract/document/6907483&#34;&gt;[link]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Christian Forster, Luca Carlone, Frank Dellaert, and Davide Scaramuzza, &lt;em&gt;&#34;IMU Preintegration on Manifold for Efficient Visual-Inertial Maximum-a-Posteriori Estimation&#34;&lt;/em&gt;, Robotics: Science and Systems (RSS), 2015. &lt;a href=&#34;http://www.roboticsproceedings.org/rss11/p06.pdf&#34;&gt;[link]&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you are using the factor in academic work, please cite the publications above.&lt;/p&gt; &#xA;&lt;p&gt;In GTSAM 4 a new and more efficient implementation, based on integrating on the NavState tangent space and detailed in &lt;a href=&#34;https://raw.githubusercontent.com/borglab/gtsam/develop/doc/ImuFactor.pdf&#34;&gt;this document&lt;/a&gt;, is enabled by default. To switch to the RSS 2015 version, set the flag &lt;code&gt;GTSAM_TANGENT_PREINTEGRATION&lt;/code&gt; to OFF.&lt;/p&gt; &#xA;&lt;h2&gt;Additional Information&lt;/h2&gt; &#xA;&lt;p&gt;There is a &lt;a href=&#34;https://groups.google.com/forum/#!forum/gtsam-users&#34;&gt;&lt;code&gt;GTSAM users Google group&lt;/code&gt;&lt;/a&gt; for general discussion.&lt;/p&gt; &#xA;&lt;p&gt;Read about important &lt;a href=&#34;https://raw.githubusercontent.com/borglab/gtsam/develop/GTSAM-Concepts.md&#34;&gt;&lt;code&gt;GTSAM-Concepts&lt;/code&gt;&lt;/a&gt; here. A primer on GTSAM Expressions, which support (superfast) automatic differentiation, can be found on the &lt;a href=&#34;https://bitbucket.org/gtborg/gtsam/wiki/Home&#34;&gt;GTSAM wiki on BitBucket&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/borglab/gtsam/develop/INSTALL.md&#34;&gt;&lt;code&gt;INSTALL&lt;/code&gt;&lt;/a&gt; file for more detailed installation instructions.&lt;/p&gt; &#xA;&lt;p&gt;GTSAM is open source under the BSD license, see the &lt;a href=&#34;https://raw.githubusercontent.com/borglab/gtsam/develop/LICENSE&#34;&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/borglab/gtsam/develop/LICENSE.BSD&#34;&gt;&lt;code&gt;LICENSE.BSD&lt;/code&gt;&lt;/a&gt; files.&lt;/p&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://raw.githubusercontent.com/borglab/gtsam/develop/examples&#34;&gt;&lt;code&gt;examples/&lt;/code&gt;&lt;/a&gt; directory and the &lt;a href=&#34;https://raw.githubusercontent.com/borglab/gtsam/develop/USAGE.md&#34;&gt;&lt;code&gt;USAGE&lt;/code&gt;&lt;/a&gt; file for examples on how to use GTSAM.&lt;/p&gt; &#xA;&lt;p&gt;GTSAM was developed in the lab of &lt;a href=&#34;http://www.cc.gatech.edu/~dellaert&#34;&gt;Frank Dellaert&lt;/a&gt; at the &lt;a href=&#34;http://www.gatech.edu&#34;&gt;Georgia Institute of Technology&lt;/a&gt;, with the help of many contributors over the years, see &lt;a href=&#34;https://raw.githubusercontent.com/borglab/gtsam/develop/THANKS.md&#34;&gt;THANKS&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>