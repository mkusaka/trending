<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-30T01:33:05Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>alibaba/yalantinglibs</title>
    <updated>2022-10-30T01:33:05Z</updated>
    <id>tag:github.com,2022-10-30:/alibaba/yalantinglibs</id>
    <link href="https://github.com/alibaba/yalantinglibs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of C++20 libraries, include async_simple, coro_rpc and struct_pack&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;yaLanTingLibs&lt;/h1&gt; &#xA;&lt;h6 align=&#34;center&#34;&gt;A Collection of C++20 libraries, include async_simple, coro_rpc and struct_pack &lt;/h6&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;license&#34; src=&#34;https://img.shields.io/github/license/alibaba/async_simple?style=flat-square&#34;&gt; &lt;img alt=&#34;language&#34; src=&#34;https://img.shields.io/github/languages/top/alibaba/yalantinglibs?style=flat-square&#34;&gt; &lt;img alt=&#34;last commit&#34; src=&#34;https://img.shields.io/github/last-commit/alibaba/async_simple?style=flat-square&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;yaLanTingLibs is a collection of C++20 libraries, now it contains &lt;a href=&#34;https://github.com/alibaba/async_simple&#34;&gt;async_simple&lt;/a&gt;, struct_pack and coro_rpc.&lt;/p&gt; &#xA;&lt;p&gt;The target of yaLanTingLibs: provide very easy and high performance C++20 libraries for C++ developers, it can help to quickly build high performance applications.&lt;/p&gt; &#xA;&lt;h2&gt;async_simple&lt;/h2&gt; &#xA;&lt;p&gt;A library offering simple, light-weight and easy-to-use components to write asynchronous codes. See &lt;a href=&#34;https://github.com/alibaba/async_simple&#34;&gt;async_simple&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;coro_rpc&lt;/h2&gt; &#xA;&lt;p&gt;Very easy-to-use, coroutine-based, high performance rpc framework with C++20. coro_rpc is a header only library.&lt;/p&gt; &#xA;&lt;p&gt;English Introduction(TODO) | &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/yalantinglibs/main/src/coro_rpc/doc/coro_rpc_introduction_cn.md&#34;&gt;中文简介&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;English API(TODO) | &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/yalantinglibs/main/src/coro_rpc/doc/coro_rpc_doc.hpp&#34;&gt;中文API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/yalantinglibs/main/src/coro_rpc/doc/coro_rpc_introduction_purecpp_talk.pdf&#34;&gt;Talk&lt;/a&gt; about coro_rpc&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://t.csdn.cn/uBRwn&#34;&gt;Vedio&lt;/a&gt; start from 04:55:08 of the vedio record.&lt;/p&gt; &#xA;&lt;h2&gt;struct_pack&lt;/h2&gt; &#xA;&lt;p&gt;Based on compile-time reflection, very easy to use, high performance serialization library, struct_pack is a header only library, it is used by coro_rpc now.&lt;/p&gt; &#xA;&lt;p&gt;English Introduction(TODO) | &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/yalantinglibs/main/src/struct_pack/doc/Introduction_CN.md&#34;&gt;中文简介&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;English API(TODO) | &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/yalantinglibs/main/src/struct_pack/doc/struct_pack_doc.hpp&#34;&gt;中文API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/yalantinglibs/main/src/struct_pack/doc/struct_pack_introduce_CN.pdf&#34;&gt;Talk&lt;/a&gt; about struct_pack&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://t.csdn.cn/uBRwn&#34;&gt;Vedio&lt;/a&gt; start from 01:32:20 of the vedio record.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start of coro_rpc&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;clone repo&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/alibaba/yalantinglibs.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;build with cmake&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mkdir build &amp;amp;&amp;amp; cd build&#xA;cmake ..&#xA;make -j&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;run tests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd tests&#xA;ctest .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Benchmark&lt;/h2&gt; &#xA;&lt;p&gt;options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./benchmark_client [threads] [client_pre_thread] [pipeline_size] [host] [port] [test_data_path] [test_time] [warm_up_time]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Build Options&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;option&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;   &lt;th&gt;default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CMAKE_BUILD_TYPE&lt;/td&gt; &#xA;   &lt;td&gt;build type&lt;/td&gt; &#xA;   &lt;td&gt;Release&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BUILD_WITH_LIBCXX&lt;/td&gt; &#xA;   &lt;td&gt;Build with libc++&lt;/td&gt; &#xA;   &lt;td&gt;OFF&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;USE_CONAN&lt;/td&gt; &#xA;   &lt;td&gt;Use conan package manager to handle dependencies&lt;/td&gt; &#xA;   &lt;td&gt;OFF&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_SSL&lt;/td&gt; &#xA;   &lt;td&gt;Enable ssl support&lt;/td&gt; &#xA;   &lt;td&gt;OFF&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/doctest/doctest&#34;&gt;doctest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gabime/spdlog&#34;&gt;spdlog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chriskohlhoff/asio&#34;&gt;asio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;openssl (optional)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/async_simple&#34;&gt;async_simple&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Currently, asio and spdlog are put in thirdparty folder. doctest is put in tests folder.&lt;/p&gt; &#xA;&lt;h1&gt;How to Contribute&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create an issue in the issue template.&lt;/li&gt; &#xA; &lt;li&gt;Run tests and &lt;code&gt;git-clang-format HEAD^&lt;/code&gt; locally for the change.&lt;/li&gt; &#xA; &lt;li&gt;Create a PR, fill in the PR template.&lt;/li&gt; &#xA; &lt;li&gt;Choose one or more reviewers from contributors: (e.g., qicosmos, poor-circle, PikachuHyA).&lt;/li&gt; &#xA; &lt;li&gt;Get approved and merged.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Discussion group&lt;/h1&gt; &#xA;&lt;p&gt;DingTalk group&lt;/p&gt; &#xA;&lt;center&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/alibaba/yalantinglibs/main/src/coro_rpc/doc/images/yalantinglibs_ding_talk_group.png&#34; alt=&#34;dingtalk&#34; width=&#34;200&#34; height=&#34;200&#34; align=&#34;bottom&#34;&gt; &#xA;&lt;/center&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;yaLanTingLibs is distributed under the Apache License (Version 2.0) This product contains various third-party components under other open source licenses. See the NOTICE file for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mobile-shell/mosh</title>
    <updated>2022-10-30T01:33:05Z</updated>
    <id>tag:github.com,2022-10-30:/mobile-shell/mosh</id>
    <link href="https://github.com/mobile-shell/mosh" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mobile Shell&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/mobile-shell/mosh/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/mobile-shell/mosh/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;ci&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Mosh: the mobile shell&lt;/h1&gt; &#xA;&lt;p&gt;Mosh is a remote terminal application that supports intermittent connectivity, allows roaming, and provides speculative local echo and line editing of user keystrokes.&lt;/p&gt; &#xA;&lt;p&gt;It aims to support the typical interactive uses of SSH, plus:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Mosh keeps the session alive if the client goes to sleep and wakes up later, or temporarily loses its Internet connection.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mosh allows the client and server to &#34;roam&#34; and change IP addresses, while keeping the connection alive. Unlike SSH, Mosh can be used while switching between Wi-Fi networks or from Wi-Fi to cellular data to wired Ethernet.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The Mosh client runs a predictive model of the server&#39;s behavior in the background and tries to guess intelligently how each keystroke will affect the screen state. When it is confident in its predictions, it will show them to the user while waiting for confirmation from the server. Most typing and uses of the left- and right-arrow keys can be echoed immediately.&lt;/p&gt; &lt;p&gt;As a result, Mosh is usable on high-latency links, e.g. on a cellular data connection or spotty Wi-Fi. In distinction from previous attempts at local echo modes in other protocols, Mosh works properly with full-screen applications such as emacs, vi, alpine, and irssi, and automatically recovers from occasional prediction errors within an RTT. On high-latency links, Mosh underlines its predictions while they are outstanding and removes the underline when they are confirmed by the server.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Mosh does not support X forwarding or the non-interactive uses of SSH, including port forwarding.&lt;/p&gt; &#xA;&lt;h2&gt;Other features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Mosh adjusts its frame rate so as not to fill up network queues on slow links, so &#34;Control-C&#34; always works within an RTT to halt a runaway process.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mosh warns the user when it has not heard from the server in a while.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mosh supports lossy links that lose a significant fraction of their packets.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mosh handles some Unicode edge cases better than SSH and existing terminal emulators by themselves, but requires a UTF-8 environment to run.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mosh leverages SSH to set up the connection and authenticate users. Mosh does not contain any privileged (root) code.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Mosh&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mosh.org/#getting&#34;&gt;The Mosh web site&lt;/a&gt; has information about packages for many operating systems, as well as instructions for building from source.&lt;/p&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;mosh-client&lt;/code&gt; receives an AES session key as an environment variable. If you are porting Mosh to a new operating system, please make sure that a running process&#39;s environment variables are not readable by other users. We have confirmed that this is the case on GNU/Linux, OS X, and FreeBSD.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;mosh-client&lt;/code&gt; binary must exist on the user&#39;s machine, and the &lt;code&gt;mosh-server&lt;/code&gt; binary on the remote host.&lt;/p&gt; &#xA;&lt;p&gt;The user runs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mosh [user@]host&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the &lt;code&gt;mosh-client&lt;/code&gt; or &lt;code&gt;mosh-server&lt;/code&gt; binaries live outside the user&#39;s &lt;code&gt;$PATH&lt;/code&gt;, &lt;code&gt;mosh&lt;/code&gt; accepts the arguments &lt;code&gt;--client=PATH&lt;/code&gt; and &lt;code&gt;--server=PATH&lt;/code&gt; to select alternate locations. More options are documented in the mosh(1) manual page.&lt;/p&gt; &#xA;&lt;p&gt;There are &lt;a href=&#34;https://mosh.org/#usage&#34;&gt;more examples&lt;/a&gt; and a &lt;a href=&#34;https://mosh.org/#faq&#34;&gt;FAQ&lt;/a&gt; on the Mosh web site.&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;mosh&lt;/code&gt; program will SSH to &lt;code&gt;user@host&lt;/code&gt; to establish the connection. SSH may prompt the user for a password or use public-key authentication to log in.&lt;/p&gt; &#xA;&lt;p&gt;From this point, &lt;code&gt;mosh&lt;/code&gt; runs the &lt;code&gt;mosh-server&lt;/code&gt; process (as the user) on the server machine. The server process listens on a high UDP port and sends its port number and an AES-128 secret key back to the client over SSH. The SSH connection is then shut down and the terminal session begins over UDP.&lt;/p&gt; &#xA;&lt;p&gt;If the client changes IP addresses, the server will begin sending to the client on the new IP address within a few seconds.&lt;/p&gt; &#xA;&lt;p&gt;To function, Mosh requires UDP datagrams to be passed between client and server. By default, &lt;code&gt;mosh&lt;/code&gt; uses a port number between 60000 and 61000, but the user can select a particular port with the -p option. Please note that the -p option has no effect on the port used by SSH.&lt;/p&gt; &#xA;&lt;h2&gt;Advice to distributors&lt;/h2&gt; &#xA;&lt;p&gt;A note on compiler flags: Mosh is security-sensitive code. When making automated builds for a binary package, we recommend passing the option &lt;code&gt;--enable-compile-warnings=error&lt;/code&gt; to &lt;code&gt;./configure&lt;/code&gt;. On GNU/Linux with &lt;code&gt;g++&lt;/code&gt; or &lt;code&gt;clang++&lt;/code&gt;, the package should compile cleanly with &lt;code&gt;-Werror&lt;/code&gt;. Please report a bug if it doesn&#39;t.&lt;/p&gt; &#xA;&lt;p&gt;Where available, Mosh builds with a variety of binary hardening flags such as &lt;code&gt;-fstack-protector-all&lt;/code&gt;, &lt;code&gt;-D_FORTIFY_SOURCE=2&lt;/code&gt;, etc. These provide proactive security against the possibility of a memory corruption bug in Mosh or one of the libraries it uses. For a full list of flags, search for &lt;code&gt;HARDEN&lt;/code&gt; in &lt;code&gt;configure.ac&lt;/code&gt;. The &lt;code&gt;configure&lt;/code&gt; script detects which flags are supported by your compiler, and enables them automatically. To disable this detection, pass &lt;code&gt;--disable-hardening&lt;/code&gt; to &lt;code&gt;./configure&lt;/code&gt;. Please report a bug if you have trouble with the default settings; we would like as many users as possible to be running a configuration as secure as possible.&lt;/p&gt; &#xA;&lt;p&gt;Mosh ships with a default optimization setting of &lt;code&gt;-O2&lt;/code&gt;. Some distributors have asked about changing this to &lt;code&gt;-Os&lt;/code&gt; (which causes a compiler to prefer space optimizations to time optimizations). We have benchmarked with the included &lt;code&gt;src/examples/benchmark&lt;/code&gt; program to test this. The results are that &lt;code&gt;-O2&lt;/code&gt; is 40% faster than &lt;code&gt;-Os&lt;/code&gt; with g++ 4.6 on GNU/Linux, and 16% faster than &lt;code&gt;-Os&lt;/code&gt; with clang++ 3.1 on Mac OS X. In both cases, &lt;code&gt;-Os&lt;/code&gt; did produce a smaller binary (by up to 40%, saving almost 200 kilobytes on disk). While Mosh is not especially CPU intensive and mostly sits idle when the user is not typing, we think the results suggest that &lt;code&gt;-O2&lt;/code&gt; (the default) is preferable.&lt;/p&gt; &#xA;&lt;p&gt;Our Debian and Fedora packaging presents Mosh as a single package. Mosh has a Perl dependency that is only required for client use. For some platforms, it may make sense to have separate mosh-server and mosh-client packages to allow mosh-server usage without Perl.&lt;/p&gt; &#xA;&lt;h2&gt;Notes for developers&lt;/h2&gt; &#xA;&lt;p&gt;Mosh supports producing code coverage reports by tests, but this feature is disabled by default. To enable it, make sure &lt;code&gt;lcov&lt;/code&gt; is installed on your system. Then, configure and run tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./configure --enable-code-coverage&#xA;$ make check-code-coverage&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will run all tests and produce a coverage report in HTML form that can be opened with your favorite browser. Ideally, newly added code should strive for 90% (or better) incremental test coverage.&lt;/p&gt; &#xA;&lt;h2&gt;More info&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Mosh Web site:&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://mosh.org&#34;&gt;https://mosh.org&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;mosh-devel@mit.edu&lt;/code&gt; mailing list:&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://mailman.mit.edu/mailman/listinfo/mosh-devel&#34;&gt;https://mailman.mit.edu/mailman/listinfo/mosh-devel&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;mosh-users@mit.edu&lt;/code&gt; mailing list:&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://mailman.mit.edu/mailman/listinfo/mosh-users&#34;&gt;https://mailman.mit.edu/mailman/listinfo/mosh-users&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;#mosh&lt;/code&gt; channel on &lt;a href=&#34;https://libera.chat/&#34;&gt;Libera Chat&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://web.libera.chat/#mosh&#34;&gt;https://web.libera.chat/#mosh&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>nextcloud/desktop</title>
    <updated>2022-10-30T01:33:05Z</updated>
    <id>tag:github.com,2022-10-30:/nextcloud/desktop</id>
    <link href="https://github.com/nextcloud/desktop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;💻 Desktop sync client for Nextcloud&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nextcloud Desktop Client&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;span&gt;💻&lt;/span&gt; Nextcloud Desktop Client is a tool to synchronize files from Nextcloud Server with your computer.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/nextcloud/desktop/master/doc/images/main_dialog_christine.png&#34; alt=&#34;Desktop Client on Windows&#34; width=&#34;450&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;💙&lt;/span&gt; &lt;span&gt;🎉&lt;/span&gt; Contributing&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;span&gt;🛠&lt;/span&gt; How to compile the desktop client&lt;/h3&gt; &#xA;&lt;p&gt;&lt;span&gt;🏗&lt;/span&gt; &lt;a href=&#34;https://github.com/nextcloud/desktop/wiki/System-requirements-for-compiling-the-desktop-client&#34;&gt;System requirements&lt;/a&gt; includes OpenSSL 1.1.x, QtKeychain, Qt 5.x.x and zlib.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;span&gt;📝&lt;/span&gt; Step by step instructions&lt;/h4&gt; &#xA;&lt;h5&gt;Clone the repo&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/nextcloud/desktop.git&#xA;$ cd desktop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Compile and install&lt;/h5&gt; &#xA;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; For development reasons it is better to &lt;strong&gt;install the client on user space&lt;/strong&gt; instead on the global system. Mixing up libs/dll&#39;s of different version can lead to undefined behavior and crashes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;You could use the &lt;strong&gt;cmake flag&lt;/strong&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; as &lt;code&gt;~/.local/&lt;/code&gt; in a &lt;strong&gt;Linux&lt;/strong&gt; system. If you want to install system wide you could use &lt;code&gt;/usr/local&lt;/code&gt; or &lt;code&gt;/opt/nextcloud/&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;On &lt;strong&gt;Windows 10&lt;/strong&gt; &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/deployment/usmt/usmt-recognized-environment-variables#a-href-idbkmk-2avariables-that-are-recognized-only-in-the-user-context&#34;&gt;&lt;code&gt;$USERPROFILE&lt;/code&gt;&lt;/a&gt; refers to &lt;code&gt;C:\Users\&amp;lt;USERNAME&amp;gt;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Linux &amp;amp; Mac OS&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cmake -S . -B build -DCMAKE_INSTALL_PREFIX=~/nextcloud-desktop-client -DCMAKE_BUILD_TYPE=Debug&#xA;$ cmake --build build --target install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Windows&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cmake -S . -B build -G &#34;Visual Studio 15 2017 Win64&#34; -DCMAKE_INSTALL_PREFIX=$USERPROFILE\nextcloud-desktop-client -DCMAKE_BUILD_TYPE=Debug&#xA;$ cmake --build . --config Debug --target install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;span&gt;ℹ&lt;/span&gt; More detailed instructions can be found at the &lt;a href=&#34;https://github.com/nextcloud/desktop/wiki&#34;&gt;Desktop Client Wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;📥&lt;/span&gt; Where to find binaries to download&lt;/h3&gt; &#xA;&lt;h4&gt;&lt;span&gt;🔆&lt;/span&gt; Daily builds&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Daily builds based on the latest master are available for Linux &lt;span&gt;🐧&lt;/span&gt;, Mac, and Windows &lt;a href=&#34;https://download.nextcloud.com/desktop/daily&#34;&gt;in the desktop/daily folder of our download server&lt;/a&gt;. For more info: &lt;a href=&#34;https://github.com/nextcloud/desktop/wiki/Daily-Builds&#34;&gt;Wiki/Daily Builds&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;span&gt;🚀&lt;/span&gt; Releases&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Refer to the &lt;a href=&#34;https://nextcloud.com/install/#install-clients&#34;&gt;download page https://nextcloud.com/install/#install-clients&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;💣&lt;/span&gt; Reporting issues&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you find any bugs or have any suggestion for improvement, please file an issue at &lt;a href=&#34;https://github.com/nextcloud/desktop/issues&#34;&gt;https://github.com/nextcloud/desktop/issues&lt;/a&gt;. Do not contact the authors directly by mail, as this increases the chance of your report being lost. &lt;span&gt;💥&lt;/span&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;span&gt;😃&lt;/span&gt; &lt;span&gt;🏆&lt;/span&gt; Pull requests&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you created a patch &lt;span&gt;😍&lt;/span&gt;, please submit a &lt;a href=&#34;https://github.com/nextcloud/desktop/pulls&#34;&gt;Pull Request&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;How to create a pull request? This guide will help you get started: &lt;a href=&#34;https://opensource.guide/how-to-contribute/#opening-a-pull-request&#34;&gt;Opening a pull request&lt;/a&gt; &lt;span&gt;❤️&lt;/span&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;📡&lt;/span&gt; Contact us&lt;/h2&gt; &#xA;&lt;p&gt;If you want to contact us, e.g. before starting a more complex feature, for questions &lt;span&gt;❓&lt;/span&gt; you can join us at &lt;a href=&#34;https://webchat.freenode.net/?channels=nextcloud-client&#34;&gt;#nextcloud-client&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;✌&lt;/span&gt; Code of conduct&lt;/h2&gt; &#xA;&lt;p&gt;The Nextcloud community has core values that are shared between all members during conferences, hackweeks and on all interactions in online platforms including &lt;a href=&#34;https://github.com/nextcloud&#34;&gt;Github&lt;/a&gt; and &lt;a href=&#34;https://help.nextcloud.com&#34;&gt;Forums&lt;/a&gt;. If you contribute, participate or interact with this community, please respect &lt;a href=&#34;https://nextcloud.com/code-of-conduct/&#34;&gt;our shared values&lt;/a&gt;. &lt;span&gt;😌&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;📝&lt;/span&gt; Source code&lt;/h2&gt; &#xA;&lt;p&gt;The Nextcloud Desktop Client is developed in Git. Since Git makes it easy to fork and improve the source code and to adapt it to your need, many copies can be found on the Internet, in particular on GitHub. However, the authoritative repository maintained by the developers is located at &lt;a href=&#34;https://github.com/nextcloud/desktop&#34;&gt;https://github.com/nextcloud/desktop&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;📜&lt;/span&gt; License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;This program is free software; you can redistribute it and/or modify&#xA;it under the terms of the GNU General Public License as published by&#xA;the Free Software Foundation; either version 2 of the License, or&#xA;(at your option) any later version.&#xA;&#xA;This program is distributed in the hope that it will be useful, but&#xA;WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY&#xA;or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License&#xA;for more details.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>