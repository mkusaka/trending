<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-20T01:24:10Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>a-ngo/route-planning</title>
    <updated>2024-03-20T01:24:10Z</updated>
    <id>tag:github.com,2024-03-20:/a-ngo/route-planning</id>
    <link href="https://github.com/a-ngo/route-planning" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Route Planning Project&lt;/h1&gt; &#xA;&lt;p&gt;This repo contains the starter code for the Route Planning project.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/a-ngo/route-planning/main/map.png&#34; width=&#34;600&#34; height=&#34;450&#34;&gt; &#xA;&lt;h2&gt;Cloning&lt;/h2&gt; &#xA;&lt;p&gt;When cloning this project, be sure to use the &lt;code&gt;--recurse-submodules&lt;/code&gt; flag. Using HTTPS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/udacity/CppND-Route-Planning-Project.git --recurse-submodules&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or with SSH:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:udacity/CppND-Route-Planning-Project.git --recurse-submodules&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Dependencies for Running Locally&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;cmake &amp;gt;= 3.11.3 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;All OSes: &lt;a href=&#34;https://cmake.org/install/&#34;&gt;click here for installation instructions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;make &amp;gt;= 4.1 (Linux, Mac), 3.81 (Windows) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Linux: make is installed by default on most Linux distros&lt;/li&gt; &#xA;   &lt;li&gt;Mac: &lt;a href=&#34;https://developer.apple.com/xcode/features/&#34;&gt;install Xcode command line tools to get make&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Windows: &lt;a href=&#34;http://gnuwin32.sourceforge.net/packages/make.htm&#34;&gt;Click here for installation instructions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;gcc/g++ &amp;gt;= 7.4.0 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Linux: gcc / g++ is installed by default on most Linux distros&lt;/li&gt; &#xA;   &lt;li&gt;Mac: same instructions as make - &lt;a href=&#34;https://developer.apple.com/xcode/features/&#34;&gt;install Xcode command line tools&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Windows: recommend using &lt;a href=&#34;http://www.mingw.org/&#34;&gt;MinGW&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;IO2D &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Installation instructions for all operating systems can be found &lt;a href=&#34;https://github.com/cpp-io2d/P0267_RefImpl/raw/master/BUILDING.md&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;This library must be built in a place where CMake &lt;code&gt;find_package&lt;/code&gt; will be able to find it&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compiling and Running&lt;/h2&gt; &#xA;&lt;h3&gt;Compiling&lt;/h3&gt; &#xA;&lt;p&gt;To compile the project, first, create a &lt;code&gt;build&lt;/code&gt; directory and change to that directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir build &amp;amp;&amp;amp; cd build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From within the &lt;code&gt;build&lt;/code&gt; directory, then run &lt;code&gt;cmake&lt;/code&gt; and &lt;code&gt;make&lt;/code&gt; as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cmake ..&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running&lt;/h3&gt; &#xA;&lt;p&gt;The executable will be placed in the &lt;code&gt;build&lt;/code&gt; directory. From within &lt;code&gt;build&lt;/code&gt;, you can run the project as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./OSM_A_star_search&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or to specify a map file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./OSM_A_star_search -f ../&amp;lt;your_osm_file.osm&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;The testing executable is also placed in the &lt;code&gt;build&lt;/code&gt; directory. From within &lt;code&gt;build&lt;/code&gt;, you can run the unit tests as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Some students have reported issues in cmake to find io2d packages, make sure you have downloaded &lt;a href=&#34;https://github.com/cpp-io2d/P0267_RefImpl/raw/master/BUILDING.md#xcode-and-libc&#34;&gt;this&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For MAC Users cmake issues: Comment these lines from CMakeLists.txt under P0267_RefImpl&lt;/p&gt; &lt;pre&gt;&lt;code&gt;if( NOT DEFINED IO2D_WITHOUT_SAMPLES )&#xA;     add_subdirectory(P0267_RefImpl/Samples)&#xA;endif()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And then run &#34;ALL_Build&#34; and &#34;install&#34; in XCode.&lt;/p&gt; &lt;p&gt;If any packages are missing try to install packages using&lt;/p&gt; &lt;pre&gt;&lt;code&gt;brew install pkg-config&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For Ubuntu Linux IO2D installation errors, follow the given steps:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; sudo apt update&#xA; sudo apt install build-essential&#xA; sudo apt install cmake&#xA; sudo apt install libcairo2-dev&#xA; sudo apt install libgraphicsmagick1-dev&#xA; sudo apt install libpng-dev&#xA;&#xA; git clone --recurse-submodules https://github.com/cpp-io2d/P0267_RefImpl&#xA; cd P0267_RefImpl&#xA; mkdir Debug&#xA; cd Debug&#xA; cmake --config Debug &#34;-DCMAKE_BUILD_TYPE=Debug&#34; ..&#xA; cmake --build .&#xA; sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you are working on windows and unable to install IO2D:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Enable WSL (Windows Subsystem for Linux) and use a distribution like &lt;a href=&#34;https://ubuntu.com/wsl&#34;&gt;Ubuntu&lt;/a&gt;.(available from the windows store):&lt;/li&gt; &#xA;   &lt;li&gt;Install the required dependencies (compiler, cmake etc.) in the WSL(as mentioned above for ubuntu)&lt;/li&gt; &#xA;   &lt;li&gt;Configure CLion to use the WSL &lt;a href=&#34;https://www.jetbrains.com/help/clion/how-to-use-wsl-development-environment-in-product.html#wsl-tooclhain&#34;&gt;toolchain&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Use the WSL toolchain to build the project&lt;/li&gt; &#xA;   &lt;li&gt;If you are still facing errors, visit this &lt;a href=&#34;https://github.com/udacity/CppND-Route-Planning-Project/issues/9&#34;&gt;link&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you are facing errors with --config try to remove -- from the command.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>