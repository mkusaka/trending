<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-22T01:31:15Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>xiaoyifang/goldendict-ng</title>
    <updated>2023-05-22T01:31:15Z</updated>
    <id>tag:github.com,2023-05-22:/xiaoyifang/goldendict-ng</id>
    <link href="https://github.com/xiaoyifang/goldendict-ng" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Next Generation GoldenDict&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GoldenDict-ng&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://crowdin.com/project/goldendict-ng&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/goldendict-ng/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/summary/new_code?id=xiaoyifang_goldendict&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=xiaoyifang_goldendict&amp;amp;metric=sqale_rating&#34; alt=&#34;Maintainability Rating&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xiaoyifang/goldendict/actions/workflows/windows.yml&#34;&gt;&lt;img src=&#34;https://github.com/xiaoyifang/goldendict/actions/workflows/windows.yml/badge.svg?sanitize=true&#34; alt=&#34;Windows&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xiaoyifang/goldendict/actions/workflows/ubuntu.yml&#34;&gt;&lt;img src=&#34;https://github.com/xiaoyifang/goldendict/actions/workflows/ubuntu.yml/badge.svg?sanitize=true&#34; alt=&#34;Ubuntu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xiaoyifang/goldendict/actions/workflows/macos.yml&#34;&gt;&lt;img src=&#34;https://github.com/xiaoyifang/goldendict/actions/workflows/macos.yml/badge.svg?sanitize=true&#34; alt=&#34;macos&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Next Generation GoldenDict. A feature-rich open-source dictionary lookup program, supporting &lt;a href=&#34;https://xiaoyifang.github.io/goldendict-ng/dictformats/&#34;&gt;multiple dictionary formats&lt;/a&gt; and online dictionaries.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Linux&lt;/th&gt; &#xA;   &lt;th&gt;Windows&lt;/th&gt; &#xA;   &lt;th&gt;macOS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://xiaoyifang.github.io/goldendict-ng/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xiaoyifang/goldendict-ng/staged/website/docs/img/linux_genshin.webp&#34; width=&#34;500&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://xiaoyifang.github.io/goldendict-ng/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xiaoyifang/goldendict-ng/staged/website/docs/img/windows_white.webp&#34; width=&#34;500&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://xiaoyifang.github.io/goldendict-ng/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xiaoyifang/goldendict-ng/staged/website/docs/img/mac_black.webp&#34; width=&#34;500&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Some significant features of this fork&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;webengine with latest html/css feature support&lt;/li&gt; &#xA; &lt;li&gt;support &amp;gt;4GB dictionary&lt;/li&gt; &#xA; &lt;li&gt;support highdpi screen resolution&lt;/li&gt; &#xA; &lt;li&gt;built with xapian as fulltext engine&lt;/li&gt; &#xA; &lt;li&gt;support Qt5.15.2 and higher ,include latest Qt6&lt;/li&gt; &#xA; &lt;li&gt;performance optimization(eg. &amp;gt;10000000 headwords support)&lt;/li&gt; &#xA; &lt;li&gt;anki integration&lt;/li&gt; &#xA; &lt;li&gt;dark theme&lt;/li&gt; &#xA; &lt;li&gt;daily auto release support&lt;/li&gt; &#xA; &lt;li&gt;lots of bug fixes and improvements&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Downloads&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xiaoyifang/goldendict/releases/latest&#34;&gt;Latest stable version&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xiaoyifang/goldendict/releases&#34;&gt;Daily pre-release builds&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Both Qt5 and Qt6 builds are provided.&lt;/p&gt; &#xA;&lt;h2&gt;Windows&lt;/h2&gt; &#xA;&lt;p&gt;Choose either&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;****-installer.exe &lt;/code&gt; for traditional installer experience&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;****.zip&lt;/code&gt; for simply unzip and run experience&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If Qt&#39;s version is not changed, you can also download a single &lt;code&gt;goldendict.exe&lt;/code&gt; and drop it into previous installation&#39;s folder.&lt;/p&gt; &#xA;&lt;h2&gt;Linux&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;.Appimage&lt;/code&gt; can be used in any recent linux distros.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tracker.debian.org/pkg/goldendict-webengine&#34;&gt;Debian packages&lt;/a&gt; are available in Debian 12 or later.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://launchpad.net/ubuntu/+source/goldendict-webengine&#34;&gt;Ubuntu packages&lt;/a&gt; are available in Ubuntu 23.04 or later.&lt;/li&gt; &#xA; &lt;li&gt;Archlinux can use &lt;a href=&#34;https://aur.archlinux.org/packages/goldendict-ng-git&#34;&gt;goldendict-ng-git&lt;/a&gt;. Built binary is also availiable from &lt;a href=&#34;https://github.com/archlinuxcn/repo/tree/master/archlinuxcn/goldendict-ng-git&#34;&gt;archlinuxcn&#39;s repo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/Perfect_Gentleman/PG_Overlay/-/blob/master/app-text/goldendict/goldendict-9999-r6.ebuild&#34;&gt;Gentoo package from PG_Overlay&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;openSUSE ships an old version of this fork.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Help wanted to package this GoldenDict for linux distros.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;macOS&lt;/h2&gt; &#xA;&lt;p&gt;One of the &lt;code&gt;.dmg&lt;/code&gt; installers.&lt;/p&gt; &#xA;&lt;h2&gt;Help GoldenDict&#39;s Development&lt;/h2&gt; &#xA;&lt;p&gt;GoldenDict is developed by volunteers.&lt;/p&gt; &#xA;&lt;p&gt;All kinds of help like answering questions, bug reporting, testing, translation and coding are welcomed.&lt;/p&gt; &#xA;&lt;p&gt;To translate the interface, you can use the Crowdin &lt;a href=&#34;https://crowdin.com/project/goldendict-ng&#34;&gt;https://crowdin.com/project/goldendict-ng&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To start development, check out &lt;a href=&#34;https://xiaoyifang.github.io/goldendict-ng/developer/&#34;&gt;developer guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build from source&lt;/h2&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;C++17 compiler&lt;/li&gt; &#xA; &lt;li&gt;Qt 5.15 or latest QT version 6.X&lt;/li&gt; &#xA; &lt;li&gt;Various libraries on Linux, see below&lt;/li&gt; &#xA; &lt;li&gt;On Mac and Windows all the libraries are included in the repository&lt;/li&gt; &#xA; &lt;li&gt;Qt Creator is recommended for development&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Steps below are using qt5, and you may use qt6 by replacing &lt;code&gt;5&lt;/code&gt; with &lt;code&gt;6&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Ubuntu&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install git pkg-config build-essential qt5-qmake \&#xA;        libvorbis-dev zlib1g-dev libhunspell-dev x11proto-record-dev \&#xA;        libxtst-dev liblzo2-dev libbz2-dev \&#xA;        libavutil-dev libavformat-dev libeb16-dev \&#xA;        libqt5svg5-dev libqt5x11extras5-dev qttools5-dev \&#xA;        qttools5-dev-tools qtmultimedia5-dev libqt5multimedia5-plugins libqt5webchannel5-dev qtwebengine5-dev \&#xA;        libqt5texttospeech5-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Fedora 35&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo dnf install git pkg-config libzstd-devel opencc-devel xz-devel xz-lzma-compat\&#xA;     libvorbis-devel zlib-devel hunspell-devel lzo-devel bzip2-devel \&#xA;     ffmpeg-devel eb-devel qt5-qtx11extras-devel libXtst-devel \&#xA;     libxkbcommon-devel qt5-qtbase qt5-qttools qt5-qtsvg-devl qt5-qtwebengine-devel qt5-qtmultimedia-devel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build steps&lt;/h3&gt; &#xA;&lt;p&gt;Clone this repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/xiaoyifang/goldendict-ng.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Linux build&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd goldendict-ng &amp;amp;&amp;amp; qmake-qt5 &amp;amp;&amp;amp; make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;macOS build&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install qt # or use official offline installer&#xA;qmake CONFIG+=release CONFIG+=zim_support CONFIG+=chinese_conversion_support QMAKE_APPLE_DEVICE_ARCHS=&#34;x86_64 arm64&#34;&#xA;make &#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows build&lt;/h4&gt; &#xA;&lt;p&gt;the source code has offered precompile x64 windows libs on winlibs/lib/msvc. you can build your own version either.&lt;/p&gt; &#xA;&lt;p&gt;To build with Visual Studio. check this &lt;a href=&#34;https://raw.githubusercontent.com/xiaoyifang/goldendict-ng/staged/howto/how%20to%20build%20and%20debug%20with%20VS2019.md&#34;&gt;how to build with visual studio&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you might want to load &lt;code&gt;goldendict.pro&lt;/code&gt; file from within Qt Creator.&lt;/p&gt; &#xA;&lt;h3&gt;Build Configurations&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notice&lt;/strong&gt;: All additional configs for &lt;code&gt;qmake&lt;/code&gt; that must be combined in one of pass config options to &lt;code&gt;qmake&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;qmake-qt5 &#34;CONFIG+=release&#34; &#34;CONFIG+=zim_support&#34; &#34;CONFIG+=chinese_conversion_support&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To ensure the changes applied, you may want to use &lt;code&gt;make clean&lt;/code&gt; before &lt;code&gt;make&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Building with Chinese conversion support&lt;/h4&gt; &#xA;&lt;p&gt;To add Chinese conversion support you need at first install libopencc-dev package, then pass &lt;code&gt;&#34;CONFIG+=chinese_conversion_support&#34;&lt;/code&gt; to &lt;code&gt;qmake&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install libopencc-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Building with Zim dictionaries support&lt;/h4&gt; &#xA;&lt;p&gt;To add Zim and Slob formats support you need at first install lzma-dev and zstd-dev packages, then pass &lt;code&gt;&#34;CONFIG+=zim_support&#34;&lt;/code&gt; to &lt;code&gt;qmake&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install liblzma-dev libzstd-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Building without Epwing format support&lt;/h4&gt; &#xA;&lt;p&gt;If you have problem building with libeb-dev package, you can pass &lt;code&gt;&#34;CONFIG+=no_epwing_support&#34;&lt;/code&gt; to &lt;code&gt;qmake&lt;/code&gt; in order to disable Epwing format support&lt;/p&gt; &#xA;&lt;h4&gt;Building without internal audio players&lt;/h4&gt; &#xA;&lt;p&gt;If you have problem building with FFmpeg (for example, very old linux distro), you can pass &lt;code&gt;&#34;CONFIG+=no_ffmpeg_player&#34;&lt;/code&gt; to &lt;code&gt;qmake&lt;/code&gt; in order to disable FFmpeg internal audio player back end.&lt;/p&gt; &#xA;&lt;p&gt;If you have problem building with Qt5 Multimedia or experience GStreamer run-time errors (for example, Ubuntu 14.04), you can pass &lt;code&gt;&#34;CONFIG+=no_qtmultimedia_player&#34;&lt;/code&gt; to &lt;code&gt;qmake&lt;/code&gt; in order to disable Qt Multimedia internal audio player back end.&lt;/p&gt; &#xA;&lt;h4&gt;Building with xapian&lt;/h4&gt; &#xA;&lt;p&gt;build xapian from source, download and extract the xapian-core source code.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./configure&#xA;make &#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Windows,follow the instructions in the xapian-core/INSTALL Visual Studio parts.（&lt;strong&gt;xapian does not support to use the Debug lib in Windows. have to debug in release version mode using xapian&#39;s release lib&lt;/strong&gt;）. A precompiled version of xapian lib has provided in winlibs On Linux, install libxapian-dev package using package manager. On Mac, use homebrew to install xapian &lt;code&gt;brew install xapian&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Goldendict-ng has used xapian as the default and the only one fulltext engine.&lt;/p&gt; &#xA;&lt;p&gt;use &lt;code&gt;CONFIG+=use_iconv&lt;/code&gt; to enable this feature. when enabled ,iconv will be used to convert encoding other than the QTextCodec(which will be deprecated in future Qt version)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;qmake &#34;CONFIG+=use_iconv&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;when enabled ,iconv should be installed on the platform at the same time.&lt;/p&gt; &#xA;&lt;p&gt;use &lt;code&gt;CONFIG+=use_breakpad&lt;/code&gt; to enable this crash dump. when enabled &lt;a href=&#34;https://chromium.googlesource.com/breakpad/breakpad/+/master/docs&#34;&gt;breakpad&lt;/a&gt;, goldendict will generate a crash dump alongside with Goldendict in the &lt;code&gt;crash&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;on Windows: &lt;code&gt;vcpkg install breakpad:x64-windows-release&lt;/code&gt; and copy the installed packages into &lt;code&gt;thirdparty/breakpad&lt;/code&gt; directory. with a structure like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;├─breakpad&#xA;│  ├─include&#xA;│  │  ├─client&#xA;│  │  │  └─windows&#xA;│  │  │      ├─common&#xA;│  │  │      ├─crash_generation&#xA;│  │  │      ├─handler&#xA;│  │  │      └─sender&#xA;│  │  ├─common&#xA;│  │  │  └─windows&#xA;│  │  └─google_breakpad&#xA;│  │      ├─common&#xA;│  │      └─processor&#xA;│  └─lib&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;on Mac/Linux: &lt;a href=&#34;https://techviewleo.com/install-vcpkg-c-library-manager-on-linux-macos-windows/&#34;&gt;vcpkg&lt;/a&gt; can also be used or you can just install breakpad from source or use precompiled packages.&lt;/p&gt; &#xA;&lt;p&gt;Then enable google breakpad like this with qmake:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;qmake &#34;CONFIG+=use_breakpad&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Bug reporting: &lt;a href=&#34;https://github.com/xiaoyifang/goldendict-ng/issues&#34;&gt;GoldenDict issue tracker&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;General discussions: &lt;a href=&#34;https://github.com/xiaoyifang/goldendict-ng/discussions&#34;&gt;discussions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;b&gt;GNU GPLv3+&lt;/b&gt; license, a copy of which can be found in the &lt;code&gt;LICENSE.txt&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;p&gt;The original project was developed at &lt;a href=&#34;http://goldendict.org/&#34;&gt;http://goldendict.org/&lt;/a&gt; and &lt;a href=&#34;https://github.com/goldendict/goldendict&#34;&gt;https://github.com/goldendict/goldendict&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flybywiresim/a32nx</title>
    <updated>2023-05-22T01:31:15Z</updated>
    <id>tag:github.com,2023-05-22:/flybywiresim/a32nx</id>
    <link href="https://github.com/flybywiresim/a32nx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The A32NX Project is a community driven open source project to create a free Airbus A320neo in Microsoft Flight Simulator that is as close to reality as possible.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/flybywiresim/branding/1391fc003d8b5d439d01ad86e2778ae0bfc8b682/tails-with-text/FBW-Color-Light.svg#gh-dark-mode-only&#34; alt=&#34;FlyByWire Simulations&#34;&gt; &lt;img src=&#34;https://github.com/flybywiresim/branding/raw/master/tails-with-text/FBW-Color-Dark.svg#gh-light-mode-only&#34; alt=&#34;FlyByWire Simulations&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;FlyByWire Simulations A32NX&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/flybywiresim/a32nx/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/flybywiresim/a32nx.svg?style=flat&#34; alt=&#34;GitHub latest release version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/flybywiresim/a32nx/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/flybywiresim/a32nx/total.svg?style=flat&#34; alt=&#34;Github All Releases download count&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/flybywiresim/a32nx/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/flybywiresim/a32nx.svg?style=flat&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/UjzuHMU&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/738864299392630914.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/FlybywireSim&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-@FlyByWireSim-e84393?label=&amp;amp;logo=twitter&amp;amp;logoColor=ffffff&amp;amp;color=6399AE&amp;amp;labelColor=00C2CB&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/c/FlyByWire-Simulations&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-FlyByWireSimulations-e84393?label=&amp;amp;logo=youtube&amp;amp;logoColor=ffffff&amp;amp;color=6399AE&amp;amp;labelColor=00C2CB&#34; alt=&#34;YouTube&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.facebook.com/FlyByWireSimulations/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-FlyByWireSimulations-e84393?label=&amp;amp;logo=facebook&amp;amp;logoColor=ffffff&amp;amp;color=6399AE&amp;amp;labelColor=00C2CB&#34; alt=&#34;Facebook&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://instagram.com/flybywiresim&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-@FlyByWireSim-e84393?label=&amp;amp;logo=instagram&amp;amp;logoColor=ffffff&amp;amp;color=6399AE&amp;amp;labelColor=00C2CB&#34; alt=&#34;Instagram&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The A32NX Project is a community-driven open source project to create a free Airbus A320neo in Microsoft Flight Simulator that is as close to reality as possible.&lt;/p&gt; &#xA;&lt;p&gt;The following aircraft configuration is currently simulated or targeted:&lt;/p&gt; &#xA;&lt;h3&gt;A320neo&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Model       A320-251N&#xA;Engine      CFM LEAP 1A-26&#xA;APU         APS3200&#xA;FMS         Honeywell Release H3&#xA;FWC Std.    H2F13&#xA;RA          Honeywell ALA-52B&#xA;TAWS        Honeywell EGPWS&#xA;ACAS        Honeywell TPA-100B&#xA;ATC         Honeywell TRA-100B&#xA;MMR         Honeywell iMMR&#xA;WXR         Honeywell RDR-4000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note that this configuration may change in the future as the A32NX project evolves and changes.&lt;/p&gt; &#xA;&lt;h2&gt;How to download and use the aircraft&lt;/h2&gt; &#xA;&lt;p&gt;To download the aircraft please go to the &lt;a href=&#34;https://flybywiresim.com&#34;&gt;FlyByWire Simulations website&lt;/a&gt;. Please be sure to thoroughly read the &lt;a href=&#34;https://docs.flybywiresim.com&#34;&gt;documentation&lt;/a&gt; on how to install and use the aircraft.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re still running into problems after reading through the documentation, feel free to jump into our Discord &lt;a href=&#34;https://discord.gg/snueqJjDUN&#34;&gt;#support channel&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to contribute to the project, see &lt;a href=&#34;https://raw.githubusercontent.com/flybywiresim/a32nx/master/.github/Contributing.md&#34;&gt;Contributing.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Known issues and bug reporting&lt;/h3&gt; &#xA;&lt;p&gt;Our &lt;a href=&#34;https://docs.flybywiresim.com/start/reported-issues&#34;&gt;known issues&lt;/a&gt; list contains the most commonly reported issues. Should you have an issue not found on this list, then please take a look at the reported issues within the &lt;a href=&#34;https://github.com/flybywiresim/a32nx/issues&#34;&gt;issue tracker&lt;/a&gt; and report a new issue if your issue isn&#39;t found there. You can also use the issue tracker to request a new feature.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;What liveries are available?&lt;/h3&gt; &#xA;&lt;p&gt;Liveries for the A32NX can be found on &lt;a href=&#34;https://flightsim.to/c/liveries/flybywire-a32nx/&#34;&gt;Flightsim.to&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;When is the next update?&lt;/h3&gt; &#xA;&lt;p&gt;We don&#39;t know, since it depends on many factors. We will announce each new stable version via &lt;a href=&#34;https://discord.gg/flybywire&#34;&gt;Discord&lt;/a&gt; and our social media channels listed above.&lt;/p&gt; &#xA;&lt;h3&gt;How do I join the team?&lt;/h3&gt; &#xA;&lt;p&gt;Read &lt;a href=&#34;https://raw.githubusercontent.com/flybywiresim/a32nx/master/.github/Contributing.md&#34;&gt;Contributing.md&lt;/a&gt; and join our Discord to get started.&lt;/p&gt; &#xA;&lt;h3&gt;Is the A32NX payware?&lt;/h3&gt; &#xA;&lt;p&gt;No, it is a completely free aircraft, open-source.&lt;/p&gt; &#xA;&lt;h3&gt;How do we report bugs?&lt;/h3&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://raw.githubusercontent.com/flybywiresim/a32nx/master/#known-issues-and-bug-reporting&#34;&gt;known Issues and bug reporting&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;h3&gt;Is this going to be &#34;study-level&#34;?&lt;/h3&gt; &#xA;&lt;p&gt;While many in the team dislike the term &#34;study-level&#34; as its use is mostly applicable to certified training devices, we are in fact very dedicated on bringing a high fidelity A320neo to the Microsoft Flight Simulator platform.&lt;/p&gt; &#xA;&lt;h3&gt;Is feature X from the A320neo going to be implemented?&lt;/h3&gt; &#xA;&lt;p&gt;Chances are, yes! While we do not guarantee every single detail of the aircraft will eventually be represented, our goal is to produce an extremely accurate simulation based on technical data and real-world testing. This means you can be almost certain every feature of the aircraft will eventually be simulated to the best of the simulator&#39;s ability as long as the technical data backs it up.&lt;/p&gt; &#xA;&lt;h3&gt;Why has feature X not been implemented yet?&lt;/h3&gt; &#xA;&lt;p&gt;It&#39;s very likely that the feature you are awaiting is already under development! However, we strive for the greatest accuracy possible when producing aircraft, and it is therefore likely that a great deal of time will be spent on developing a proper software design and gathering sufficient references before we are able to offer the feature.&lt;/p&gt; &#xA;&lt;h3&gt;Why is my version not the same as what I see others using?&lt;/h3&gt; &#xA;&lt;p&gt;We have two mainline versions: stable and development. The stable version is a &#39;snapshot&#39; of the development which we regard as stable with the current version of the simulator. The developer build is updated daily and is a constant work in progress and although we test thoroughly each update, minor issues may occur from time to time.&lt;/p&gt; &#xA;&lt;p&gt;You can read more about the differences between the versions we offer &lt;a href=&#34;https://docs.flybywiresim.com/fbw-a32nx/fbw-versions/&#34;&gt;on our documentation portal&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Is there a list of features or a changelog available?&lt;/h3&gt; &#xA;&lt;p&gt;We do not keep a list of features implemented, but a lengthy &lt;a href=&#34;https://github.com/flybywiresim/a32nx/raw/master/.github/CHANGELOG.md&#34;&gt;changelog&lt;/a&gt; of what has been implemented, and their associated &lt;a href=&#34;https://github.com/flybywiresim/a32nx/pulls&#34;&gt;pull requests&lt;/a&gt; can be &lt;a href=&#34;https://github.com/flybywiresim/a32nx/raw/master/.github/CHANGELOG.md&#34;&gt;found here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Original source code assets present in this repository are licensed under the GNU GPLv3. Original 3D assets are licensed under CC BY-NC 4.0.&lt;/p&gt; &#xA;&lt;p&gt;Microsoft Flight Simulator © Microsoft Corporation. The FlyByWire Simulations A32NX was created under Microsoft&#39;s &#34;Game Content Usage Rules&#34; using assets from Microsoft Flight Simulator, and it is not endorsed by or affiliated with Microsoft.&lt;/p&gt; &#xA;&lt;p&gt;The contents of distribution packages built from the sources in this repository are therefore licensed as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;in the case of original source code from FBW or compiled artifacts generated from it, under GPLv3.&lt;/li&gt; &#xA; &lt;li&gt;in the case of original 3D assets from FBW, under CC BY-NC 4.0.&lt;/li&gt; &#xA; &lt;li&gt;in the case of assets covered by the &#34;Game Content Usage Rules&#34;, under the license granted by those rules.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>ZDoom/gzdoom</title>
    <updated>2023-05-22T01:31:15Z</updated>
    <id>tag:github.com,2023-05-22:/ZDoom/gzdoom</id>
    <link href="https://github.com/ZDoom/gzdoom" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GZDoom is a feature centric port for all Doom engine games, based on ZDoom, adding an OpenGL renderer and powerful scripting capabilities&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to GZDoom!&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ZDoom/gzdoom/actions/workflows/continuous_integration.yml&#34;&gt;&lt;img src=&#34;https://github.com/ZDoom/gzdoom/actions/workflows/continuous_integration.yml/badge.svg?sanitize=true&#34; alt=&#34;Continuous Integration&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;GZDoom is a modder-friendly OpenGL and Vulkan source port based on the DOOM engine&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 1998-2023 ZDoom + GZDoom teams, and contributors&lt;/p&gt; &#xA;&lt;p&gt;Doom Source (c) 1997 id Software, Raven Software, and contributors&lt;/p&gt; &#xA;&lt;p&gt;Please see license files for individual contributor licenses&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to Coraline of the EDGE team for allowing us to use her &lt;a href=&#34;https://github.com/3dfxdev/EDGE/raw/master/README.md&#34;&gt;README.md&lt;/a&gt; as a template for this one.&lt;/p&gt; &#xA;&lt;h3&gt;Licensed under the GPL v3&lt;/h3&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://www.gnu.org/licenses/quick-guide-gplv3.en.html&#34;&gt;https://www.gnu.org/licenses/quick-guide-gplv3.en.html&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;How to build GZDoom&lt;/h2&gt; &#xA;&lt;p&gt;To build GZDoom, please see the &lt;a href=&#34;https://zdoom.org/wiki/&#34;&gt;wiki&lt;/a&gt; and see the &#34;Programmer&#39;s Corner&#34; on the bottom-right corner of the page to build for your platform.&lt;/p&gt; &#xA;&lt;h1&gt;Resources&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zdoom.org/&#34;&gt;https://zdoom.org/&lt;/a&gt; - Home Page&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.zdoom.org/&#34;&gt;https://forum.zdoom.org/&lt;/a&gt; - Forum&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zdoom.org/wiki/&#34;&gt;https://zdoom.org/wiki/&lt;/a&gt; - Wiki&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/zdoom&#34;&gt;https://discord.gg/zdoom&lt;/a&gt; - Discord Server&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1pvwXEgytkor9SClCiDn4j5AH7FedyXS-ocCbsuQIXDU/edit?usp=sharing&#34;&gt;https://docs.google.com/spreadsheets/d/1pvwXEgytkor9SClCiDn4j5AH7FedyXS-ocCbsuQIXDU/edit?usp=sharing&lt;/a&gt; - Translation sheet (Google Docs)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>