<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-29T01:31:25Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>eclipse-iceoryx/iceoryx</title>
    <updated>2022-07-29T01:31:25Z</updated>
    <id>tag:github.com,2022-07-29:/eclipse-iceoryx/iceoryx</id>
    <link href="https://github.com/eclipse-iceoryx/iceoryx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Eclipse iceoryx‚Ñ¢ - true zero-copy inter-process-communication&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;iceoryx - true zero-copy inter-process-communication&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/8661268/114321508-64a6b000-9b1b-11eb-95ef-b84c91387cff.png&#34; width=&#34;50%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/eclipse-iceoryx/iceoryx/actions&#34;&gt;&lt;img src=&#34;https://github.com/eclipse-iceoryx/iceoryx/workflows/Build%20&amp;amp;%20Test/badge.svg?branch=master&#34; alt=&#34;Build &amp;amp; Test&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/eclipse-iceoryx/iceoryx/actions&#34;&gt;&lt;img src=&#34;https://github.com/eclipse-iceoryx/iceoryx/workflows/Iceoryx%20Integrationtests/badge.svg?branch=master&#34; alt=&#34;Integrationtests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/eclipse/iceoryx&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/eclipse-iceoryx/iceoryx.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/eclipse-iceoryx/iceoryx?branch=master&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/eclipse-iceoryx/iceoryx/branch/master/graph/badge.svg?branch=master&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/eclipse/iceoryx/actions?query=workflow%3ASanitize&#34;&gt;&lt;img src=&#34;https://github.com/eclipse/iceoryx/workflows/Sanitize/badge.svg?branch=master&#34; alt=&#34;Sanitize&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Great that you&#39;ve made it to this neat Eclipse project! Let&#39;s get you started by providing a quick background tour, introducing the project scope and all you need for installation and a first running example.&lt;/p&gt; &#xA;&lt;p&gt;So first off: What is iceoryx?&lt;/p&gt; &#xA;&lt;p&gt;iceoryx is an inter-process-communication (IPC) middleware for various operating systems (currently we support Linux, macOS, QNX, FreeBSD and Windows 10). It has its origins in the automotive industry, where large amounts of data have to be transferred between different processes when it comes to driver assistance or automated driving systems. However, the efficient communication mechanisms can also be applied to a wider range of use cases, e.g. in the field of robotics or game development.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/8661268/74612998-b962bc80-510a-11ea-97f0-62f41c5d287b.gif&#34; width=&#34;100%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;iceoryx uses a true zero-copy, shared memory approach that allows to transfer data from publishers to subscribers without a single copy. This ensures data transmissions with constant latency, regardless of the size of the payload. For more information have a look at the &lt;a href=&#34;https://www.eclipse.org/community/eclipse_newsletter/2019/december/4.php&#34;&gt;1000 words iceoryx introduction&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/56729607/157733625-e3e61617-2f72-46ba-b4f2-5a3973f9ad6f.png&#34; width=&#34;80%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;You&#39;re right, middleware is a cluttered term and can somehow be all or nothing. To get a better impression what this means for iceoryx, please have a look at our &lt;a href=&#34;https://raw.githubusercontent.com/eclipse-iceoryx/iceoryx/master/doc/goals-non-goals.md&#34;&gt;goals and non-goals&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t get too frightened of the API when strolling through the examples. Think of the untyped C++ and the C API as a &#34;plumbing&#34; one (&#34;plumbing&#34; as defined in Git, which means low-level). We&#39;re not using the &#34;plumbing&#34; APIs ourselves, but instead the typed C++ API. The normal use case is that iceoryx is integrated as high-performance IPC transport layer in a bigger framework with additional API layers. An example for such a &#34;porcelain&#34; API would be &lt;a href=&#34;https://www.ros.org/&#34;&gt;ROS 2&lt;/a&gt;. Others are listed in the next section.&lt;/p&gt; &#xA;&lt;p&gt;You can find the full API documentation on üåê &lt;a href=&#34;https://iceoryx.io&#34;&gt;https://iceoryx.io&lt;/a&gt;. &#xA; &lt;!--NOLINT explicit link to website--&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Supported Platforms&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Operating System&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;supports access rights for shared memory&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;command line parsing&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;yes&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;QNX&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;yes&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MacOS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;no, not planned for implementation&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows 10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;no, not planned for implementation&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;will be implemented&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FreeBSD (Unix)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;no, not planned for implementation&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;In general unix platforms should work with iceoryx but we only test FreeBSD on our CI.&lt;/p&gt; &#xA;&lt;h3&gt;Where is Eclipse iceoryx used?&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Framework&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ros2/rmw_iceoryx&#34;&gt;ROS 2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Eclipse iceoryx can be used inside the &lt;a href=&#34;https://www.ros.org/&#34;&gt;Robot Operating System&lt;/a&gt; with &lt;a href=&#34;https://github.com/ros2/rmw_iceoryx.git&#34;&gt;rmw_iceoryx&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/continental/ecal&#34;&gt;eCAL&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open-source framework from &lt;a href=&#34;https://www.continental.com/&#34;&gt;Continental AG&lt;/a&gt; supporting pub/sub and various message protocols&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.etas.com/en/products/rta-vrte.php&#34;&gt;RTA-VRTE&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.autosar.org/standards/adaptive-platform/&#34;&gt;AUTOSAR Adaptive Platform&lt;/a&gt; software framework for vehicle computer from &lt;a href=&#34;https://www.etas.com&#34;&gt;ETAS GmbH&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/eclipse-cyclonedds/cyclonedds&#34;&gt;Cyclone DDS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Performant and robust open-source DDS implementation maintained by &lt;a href=&#34;https://zettascale.tech/&#34;&gt;ZettaScale Technology&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.apex.ai/apex-middleware&#34;&gt;Apex.Middleware&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Safe and certified middleware for autonomous mobility systems from &lt;a href=&#34;https://www.apex.ai/&#34;&gt;Apex.AI&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.avinsystems.com/products/autosar_ap/&#34;&gt;AVIN AUTOSAR Adaptive Platform&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;AUTOSAR Adaptive Platform Product from AVIN Systems&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Build and install&lt;/h2&gt; &#xA;&lt;p&gt;You can find the build and installation guidelines &lt;a href=&#34;https://raw.githubusercontent.com/eclipse-iceoryx/iceoryx/master/doc/website/getting-started/installation.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;After you&#39;ve built all the necessary things, you can continue playing around with the &lt;a href=&#34;https://raw.githubusercontent.com/eclipse-iceoryx/iceoryx/master/iceoryx_examples/README.md&#34;&gt;examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build and run in a Docker environment&lt;/h2&gt; &#xA;&lt;p&gt;If you want to avoid installing anything on your host machine but you have Docker installed, it is possible to use it to build and run iceoryx applications.&lt;/p&gt; &#xA;&lt;p&gt;Please see the dedicated &lt;a href=&#34;https://raw.githubusercontent.com/eclipse-iceoryx/iceoryx/master/tools/docker/README.md&#34;&gt;README.md&lt;/a&gt; for information on how to do this.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eclipse-iceoryx/iceoryx/master/doc/website/getting-started/overview.md&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eclipse-iceoryx/iceoryx/master/doc/website/getting-started/installation.md&#34;&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eclipse-iceoryx/iceoryx/master/iceoryx_hoofs/README.md&#34;&gt;iceoryx Hoofs Hacker Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Quality levels &amp;amp; platforms&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eclipse-iceoryx/iceoryx/master/CONTRIBUTING.md#quality-levels&#34;&gt;Quality level&lt;/a&gt; are 5 to 1+, where 1+ is the highest level.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://raw.githubusercontent.com/eclipse-iceoryx/iceoryx/master/QUALITY_DECLARATION.md&#34;&gt;Quality Declaration&lt;/a&gt; for details of the quality measures according to ROS 2 guidelines.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;CMake project/target&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Current Level&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Target Level QNX&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Target Level &lt;br&gt; Linux, Windows, macOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Comment&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;iceoryx_hoofs&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1+&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Except code in the namespace &lt;code&gt;aux&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;iceoryx_posh&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1+, 2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Except code in the namespace &lt;code&gt;aux&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;iceoryx_binding_c&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1+&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;iceoryx_examples&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;All example code in this folder&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;iceoryx_dds&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;iceoryx_introspection&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;iceoryx_meta&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;5&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Is something missing or you&#39;ve got ideas for other nifty examples? Jump right away to the next section!&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/eclipse-iceoryx/iceoryx/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for a quick read-up about what to consider if you want to contribute.&lt;/p&gt; &#xA;&lt;h2&gt;Planned features&lt;/h2&gt; &#xA;&lt;p&gt;Get to know the upcoming features and the project scope in &lt;a href=&#34;https://raw.githubusercontent.com/eclipse-iceoryx/iceoryx/master/PLANNED_FEATURES.md&#34;&gt;PLANNED_FEATURES.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Innovations enabled by iceoryx&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Technologies&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gitlab.com/larry.robotics&#34;&gt;Larry.Robotics&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;An iceoryx demonstrator for tinker, thinker and toddler&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrator&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/eclipse-iceoryx/iceoryx-rs&#34;&gt;iceoryx-rs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Experimental Rust wrapper for iceoryx&lt;/td&gt; &#xA;   &lt;td&gt;Rust&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/elBoberido/iceray&#34;&gt;IceRay&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;An iceoryx introspection client written in Rust&lt;/td&gt; &#xA;   &lt;td&gt;Rust&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Frequently Asked Questions (FAQ)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eclipse-iceoryx/iceoryx/master/doc/website/FAQ.md&#34;&gt;FAQ.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Governance &amp;amp; maintainers&lt;/h2&gt; &#xA;&lt;p&gt;Please have a look at the &lt;a href=&#34;https://raw.githubusercontent.com/eclipse-iceoryx/iceoryx/master/GOVERNANCE.md&#34;&gt;GOVERNANCE.md&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tensorflow/tflite-micro</title>
    <updated>2022-07-29T01:31:25Z</updated>
    <id>tag:github.com,2022-07-29:/tensorflow/tflite-micro</id>
    <link href="https://github.com/tensorflow/tflite-micro" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TensorFlow Lite for Microcontrollers&lt;/p&gt;&lt;hr&gt;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/#tensorflow-lite-for-microcontrollers&#34;&gt;TensorFlow Lite for Microcontrollers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/#build-status&#34;&gt;Build Status&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/#official-builds&#34;&gt;Official Builds&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/#community-supported-tflm-examples&#34;&gt;Community Supported TFLM Examples&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/#community-supported-kernels-and-unit-tests&#34;&gt;Community Supported Kernels and Unit Tests&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/#getting-help&#34;&gt;Getting Help&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/#additional-documentation&#34;&gt;Additional Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/#rfcs&#34;&gt;RFCs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- Added by: advaitjain, at: Mon 04 Oct 2021 11:23:57 AM PDT --&gt; &#xA;&lt;!--te--&gt; &#xA;&lt;h1&gt;TensorFlow Lite for Microcontrollers&lt;/h1&gt; &#xA;&lt;p&gt;TensorFlow Lite for Microcontrollers is a port of TensorFlow Lite designed to run machine learning models on DSPs, microcontrollers and other devices with limited memory.&lt;/p&gt; &#xA;&lt;p&gt;Additional Links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tensorflow/tensorflow/&#34;&gt;Tensorflow github repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.tensorflow.org/lite/microcontrollers&#34;&gt;TFLM at tensorflow.org&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Build Status&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.githubstatus.com/&#34;&gt;GitHub Status&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Official Builds&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Build Type&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CI (Linux)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/tensorflow/tflite-micro/actions/workflows/ci.yml?query=event%3Aschedule&#34;&gt;&lt;img src=&#34;https://github.com/tensorflow/tflite-micro/actions/workflows/ci.yml/badge.svg?event=schedule&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Code Sync&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/tensorflow/tflite-micro/actions/workflows/sync.yml&#34;&gt;&lt;img src=&#34;https://github.com/tensorflow/tflite-micro/actions/workflows/sync.yml/badge.svg?sanitize=true&#34; alt=&#34;Sync from Upstream TF&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Community Supported TFLM Examples&lt;/h2&gt; &#xA;&lt;p&gt;This table captures platforms that TFLM has been ported to. Please see &lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/tensorflow/lite/micro/docs/new_platform_support.md&#34;&gt;New Platform Support&lt;/a&gt; for additional documentation.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Arduino&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/tensorflow/tflite-micro-arduino-examples/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/tensorflow/tflite-micro-arduino-examples/actions/workflows/ci.yml/badge.svg?event=schedule&#34; alt=&#34;Arduino&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/antmicro/tensorflow-arduino-examples/actions/workflows/test_examples.yml&#34;&gt;&lt;img src=&#34;https://github.com/antmicro/tensorflow-arduino-examples/actions/workflows/test_examples.yml/badge.svg?sanitize=true&#34; alt=&#34;Antmicro&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ESP32&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/espressif/tflite-micro-esp-examples/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/espressif/tflite-micro-esp-examples/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;ESP32&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Renesas Boards&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/renesas/tflite-micro-renesas&#34;&gt;TFLM Examples for Renesas Boards&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Silicon Labs Dev Kits&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/SiliconLabs/tflite-micro-efr32-examples&#34;&gt;TFLM Examples for Silicon Labs Dev Kits&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sparkfun Edge&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/advaitjain/tflite-micro-sparkfun-edge-examples/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/advaitjain/tflite-micro-sparkfun-edge-examples/actions/workflows/ci.yml/badge.svg?event=schedule&#34; alt=&#34;Sparkfun Edge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Texas Instruments Dev Boards&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/TexasInstruments/tensorflow-lite-micro-examples/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/TexasInstruments/tensorflow-lite-micro-examples/actions/workflows/ci.yml/badge.svg?event=status&#34; alt=&#34;Texas Instruments Dev Boards&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Community Supported Kernels and Unit Tests&lt;/h2&gt; &#xA;&lt;p&gt;This is a list of targets that have optimized kernel implementations and/or run the TFLM unit tests using software emulation or instruction set simulators.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Build Type&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cortex-M&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/tensorflow/tflite-micro/actions/workflows/cortex_m.yml&#34;&gt;&lt;img src=&#34;https://github.com/tensorflow/tflite-micro/actions/workflows/cortex_m.yml/badge.svg?sanitize=true&#34; alt=&#34;Cortex-M&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Hexagon&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/tensorflow/tflite-micro/actions/workflows/hexagon.yml&#34;&gt;&lt;img src=&#34;https://github.com/tensorflow/tflite-micro/actions/workflows/hexagon.yml/badge.svg?event=schedule&#34; alt=&#34;Hexagon&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RISC-V&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/tensorflow/tflite-micro/actions/workflows/riscv.yml&#34;&gt;&lt;img src=&#34;https://github.com/tensorflow/tflite-micro/actions/workflows/riscv.yml/badge.svg?sanitize=true&#34; alt=&#34;RISC-V&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Xtensa&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/tensorflow/tflite-micro/actions/workflows/xtensa.yml?query=event%3Aschedule&#34;&gt;&lt;img src=&#34;https://github.com/tensorflow/tflite-micro/actions/workflows/xtensa.yml/badge.svg?event=schedule&#34; alt=&#34;Xtensa&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/advaitjain/tflite-micro/tree/local-continuous-builds/tensorflow/lite/micro/docs/local_continuous_builds/xtensa.md#summary&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/advaitjain/tflite-micro/local-continuous-builds/tensorflow/lite/micro/docs/local_continuous_builds/xtensa-build-status.svg?sanitize=true&#34; alt=&#34;Xtensa&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/CONTRIBUTING.md&#34;&gt;contribution documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Getting Help&lt;/h1&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://github.com/tensorflow/tflite-micro/issues/new/choose&#34;&gt;Github issue&lt;/a&gt; should be the primary method of getting in touch with the TensorFlow Lite Micro (TFLM) team.&lt;/p&gt; &#xA;&lt;p&gt;The following resources may also be useful:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;SIG Micro &lt;a href=&#34;https://groups.google.com/a/tensorflow.org/g/micro&#34;&gt;email group&lt;/a&gt; and &lt;a href=&#34;http://doc/1YHq9rmhrOUdcZnrEnVCWvd87s2wQbq4z17HbeRl-DBc&#34;&gt;monthly meetings&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;SIG Micro &lt;a href=&#34;https://gitter.im/tensorflow/sig-micro&#34;&gt;gitter chat room&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For questions that are not specific to inference with TFLM (for example model conversion and quantization) please use the following resources:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Send an email to the &lt;a href=&#34;https://groups.google.com/a/tensorflow.org/g/tflite&#34;&gt;TfLite Mailing List&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Create a &lt;a href=&#34;https://github.com/tensorflow/tensorflow/issues/new?assignees=&amp;amp;labels=TFLiteConverter&amp;amp;template=60-tflite-converter-issue.md&#34;&gt;TensorFlow Lite Converter Issue&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Create an issue in the &lt;a href=&#34;https://github.com/tensorflow/model-optimization&#34;&gt;model optimization toolkit&lt;/a&gt; GitHub repository&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Additional Documentation&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/docs/continuous_integration.md&#34;&gt;Continuous Integration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/tensorflow/lite/micro/benchmarks/README.md&#34;&gt;Benchmarks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/tensorflow/lite/micro/docs/profiling.md&#34;&gt;Profiling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/tensorflow/lite/micro/docs/memory_management.md&#34;&gt;Memory Management&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/tensorflow/lite/micro/docs/porting_reference_ops.md&#34;&gt;Porting Reference Kernels from TfLite to TFLM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/tensorflow/lite/micro/docs/optimized_kernel_implementations.md&#34;&gt;Optimized Kernel Implementations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/tensorflow/lite/micro/docs/new_platform_support.md&#34;&gt;New Platform Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Platform/IP support &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/tensorflow/lite/micro/docs/arm.md&#34;&gt;Arm IP support&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/tensorflow/lite/micro/docs/renode.md&#34;&gt;Software Emulation with Renode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/docs/python.md&#34;&gt;Python Dev Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/docs/automatically_generated_files.md&#34;&gt;Automatically Generated Files&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;RFCs&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/tensorflow/lite/micro/docs/rfc/001_preallocated_tensors.md&#34;&gt;Pre-allocated tensors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tensorflow/tflite-micro/main/tensorflow/lite/micro/docs/rfc/002_16x8_quantization_port.md&#34;&gt;TensorFlow Lite for Microcontrollers Port of 16x8 Quantized Operators&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>osquery/osquery</title>
    <updated>2022-07-29T01:31:25Z</updated>
    <id>tag:github.com,2022-07-29:/osquery/osquery</id>
    <link href="https://github.com/osquery/osquery" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SQL powered operating system instrumentation, monitoring, and analytics.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;osquery&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;osquery logo&#34; width=&#34;200&#34; src=&#34;https://github.com/osquery/osquery/raw/master/docs/img/logo-2x-dark.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; osquery is a SQL powered operating system instrumentation, monitoring, and analytics framework. &lt;br&gt; Available for Linux, macOS, and Windows. &lt;/p&gt; &#xA;&lt;h2&gt;Information and resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Homepage: &lt;a href=&#34;https://osquery.io&#34;&gt;osquery.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Downloads: &lt;a href=&#34;https://osquery.io/downloads&#34;&gt;osquery.io/downloads&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Documentation: &lt;a href=&#34;https://osquery.readthedocs.org&#34;&gt;ReadTheDocs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stack Overflow: &lt;a href=&#34;https://stackoverflow.com/questions/tagged/osquery&#34;&gt;Stack Overflow questions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Table Schema: &lt;a href=&#34;https://osquery.io/schema&#34;&gt;osquery.io/schema&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Query Packs: &lt;a href=&#34;https://github.com/osquery/osquery/tree/master/packs&#34;&gt;osquery.io/packs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Slack: &lt;a href=&#34;https://join.slack.com/t/osquery/shared_invite/zt-h29zm0gk-s2DBtGUTW4CFel0f0IjTEw&#34;&gt;Request an auto-invite!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build Status: &lt;a href=&#34;https://github.com/osquery/osquery/actions?query=workflow%3Abuild+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/osquery/osquery/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;GitHub Actions Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://scan.coverity.com/projects/osquery&#34;&gt;&lt;img src=&#34;https://scan.coverity.com/projects/13317/badge.svg?sanitize=true&#34; alt=&#34;Coverity Scan Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://osquery.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/osquery/badge/?version=latest&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CII Best Practices: &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/3125&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/3125/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is osquery?&lt;/h2&gt; &#xA;&lt;p&gt;osquery exposes an operating system as a high-performance relational database. This allows you to write SQL-based queries to explore operating system data. With osquery, SQL tables represent abstract concepts such as running processes, loaded kernel modules, open network connections, browser plugins, hardware events or file hashes.&lt;/p&gt; &#xA;&lt;p&gt;SQL tables are implemented via a simple plugin and extensions API. A variety of tables already exist and more are being written: &lt;a href=&#34;https://osquery.io/schema/&#34;&gt;https://osquery.io/schema&lt;/a&gt;. To best understand the expressiveness that is afforded to you by osquery, consider the following SQL queries:&lt;/p&gt; &#xA;&lt;p&gt;List the &lt;a href=&#34;https://osquery.io/schema/current#users&#34;&gt;&lt;code&gt;users&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT * FROM users;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://osquery.io/schema/current#processes&#34;&gt;&lt;code&gt;processes&lt;/code&gt;&lt;/a&gt; that have a deleted executable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT * FROM processes WHERE on_disk = 0;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get the process name, port, and PID, for processes listening on all interfaces:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT DISTINCT processes.name, listening_ports.port, processes.pid&#xA;  FROM listening_ports JOIN processes USING (pid)&#xA;  WHERE listening_ports.address = &#39;0.0.0.0&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Find every macOS LaunchDaemon that launches an executable and keeps it running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT name, program || program_arguments AS executable&#xA;  FROM launchd&#xA;  WHERE (run_at_load = 1 AND keep_alive = 1)&#xA;  AND (program != &#39;&#39; OR program_arguments != &#39;&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check for ARP anomalies from the host&#39;s perspective:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT address, mac, COUNT(mac) AS mac_count&#xA;  FROM arp_cache GROUP BY mac&#xA;  HAVING count(mac) &amp;gt; 1;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you could also use a SQL sub-query to accomplish the same result:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT address, mac, mac_count&#xA;  FROM&#xA;    (SELECT address, mac, COUNT(mac) AS mac_count FROM arp_cache GROUP BY mac)&#xA;  WHERE mac_count &amp;gt; 1;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These queries can be:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;performed on an ad-hoc basis to explore operating system state using the &lt;a href=&#34;https://osquery.readthedocs.org/en/latest/introduction/using-osqueryi/&#34;&gt;osqueryi&lt;/a&gt; shell&lt;/li&gt; &#xA; &lt;li&gt;executed via a &lt;a href=&#34;https://osquery.readthedocs.org/en/latest/introduction/using-osqueryd/&#34;&gt;scheduler&lt;/a&gt; to monitor operating system state across a set of hosts&lt;/li&gt; &#xA; &lt;li&gt;launched from custom applications using osquery Thrift APIs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download &amp;amp; Install&lt;/h2&gt; &#xA;&lt;p&gt;To download the latest stable builds and for repository information and installation instructions visit &lt;a href=&#34;https://osquery.io/downloads/&#34;&gt;https://osquery.io/downloads&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We use a simple numbered versioning scheme &lt;code&gt;X.Y.Z&lt;/code&gt;, where X is a major version, Y is a minor, and Z is a patch. We plan minor releases roughly every two months. These releases are tracked on our &lt;a href=&#34;https://github.com/osquery/osquery/milestones&#34;&gt;Milestones&lt;/a&gt; page. A patch release is used when there are unforeseen bugs with our minor release and we need to quickly patch. A rare &#39;revision&#39; release might be used if we need to change build configurations.&lt;/p&gt; &#xA;&lt;p&gt;Major, minor, and patch releases are tagged on GitHub and can be viewed on the &lt;a href=&#34;https://github.com/osquery/osquery/releases&#34;&gt;Releases&lt;/a&gt; page. We open a new &lt;a href=&#34;https://github.com/osquery/osquery/raw/master/.github/ISSUE_TEMPLATE/New_Release.md&#34;&gt;Release Checklist&lt;/a&gt; issue when we prepare a minor release. If you are interested in the status of a release, please find the corresponding checklist issue, and note that the issue will be marked closed when we are finished the checklist. We consider a release &#39;in testing&#39; during the period of hosting new downloads on our website and adding them to our hosted repositories. We will mark the release as &#39;stable&#39; on GitHub when enough testing has occurred, this usually takes two weeks.&lt;/p&gt; &#xA;&lt;h2&gt;Build from source&lt;/h2&gt; &#xA;&lt;p&gt;Building osquery from source is encouraged! Check out our &lt;a href=&#34;https://osquery.readthedocs.io/en/latest/development/building/&#34;&gt;build guide&lt;/a&gt;. Also check out our &lt;a href=&#34;https://raw.githubusercontent.com/osquery/osquery/master/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; and join the community on &lt;a href=&#34;https://join.slack.com/t/osquery/shared_invite/zt-h29zm0gk-s2DBtGUTW4CFel0f0IjTEw&#34;&gt;Slack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;By contributing to osquery you agree that your contributions will be licensed as defined on the LICENSE file.&lt;/p&gt; &#xA;&lt;h2&gt;Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;We keep track of security announcements in our tagged version release notes on GitHub. We aggregate these into &lt;a href=&#34;https://raw.githubusercontent.com/osquery/osquery/master/SECURITY.md&#34;&gt;SECURITY.md&lt;/a&gt; too.&lt;/p&gt; &#xA;&lt;h2&gt;Learn more&lt;/h2&gt; &#xA;&lt;p&gt;The osquery documentation is available &lt;a href=&#34;https://osquery.readthedocs.org&#34;&gt;online&lt;/a&gt;. Documentation for older releases can be found by version number, &lt;a href=&#34;https://readthedocs.org/projects/osquery/&#34;&gt;as well&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re interested in learning more about osquery read the &lt;a href=&#34;https://code.facebook.com/posts/844436395567983/introducing-osquery/&#34;&gt;launch blog post&lt;/a&gt; for background on the project, visit the &lt;a href=&#34;https://osquery.readthedocs.org/&#34;&gt;users guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Development and usage discussion is happening in the osquery Slack, grab an invite &lt;a href=&#34;https://join.slack.com/t/osquery/shared_invite/zt-h29zm0gk-s2DBtGUTW4CFel0f0IjTEw&#34;&gt;here&lt;/a&gt;!&lt;/p&gt;</summary>
  </entry>
</feed>