<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-16T01:26:50Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>j-hc/zygisk-detach</title>
    <updated>2023-12-16T01:26:50Z</updated>
    <id>tag:github.com,2023-12-16:/j-hc/zygisk-detach</id>
    <link href="https://github.com/j-hc/zygisk-detach" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Zygisk module to detach installed apps from Play Store&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;zygisk-detach&lt;/h1&gt; &#xA;&lt;p&gt;Detaches installed apps from Play Store against its aggressive updating policy which ignores the auto-update option user sets.&lt;/p&gt; &#xA;&lt;h3&gt;How&lt;/h3&gt; &#xA;&lt;p&gt;Hooks libbinder with zygisk instead of applying SQL queries to database files&lt;/p&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enable zygisk in magisk or ZygiskOnKernelSU module if you are using KernelSU&lt;/li&gt; &#xA; &lt;li&gt;Flash zygisk-detach module&lt;/li&gt; &#xA; &lt;li&gt;Reboot&lt;/li&gt; &#xA; &lt;li&gt;Run helper cli in termux:&lt;br&gt; &lt;code&gt;$ detach&lt;/code&gt; or &lt;code&gt;$ su -c detach&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select apps you wish to detach. Changes are applied immediately, no need to reboot.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Notes&lt;/h3&gt; &#xA;&lt;p&gt;To make the usage portable, zygisk-detach reads &lt;code&gt;detach.bin&lt;/code&gt; in the magisk module folder (&lt;code&gt;/data/adb/modules/zygisk-detach/detach.bin&lt;/code&gt;) which means by putting your cli generated &lt;code&gt;detach.bin&lt;/code&gt; inside the module zip, you can flash and detach apps without needing to run the cli again. You can copy your generated &lt;code&gt;detach.bin&lt;/code&gt; using the cli or from magisk module folder.&lt;br&gt; Or the same way you can put a &lt;code&gt;detach.txt&lt;/code&gt; with the package names inside the module and it will be serialized into a &lt;code&gt;detach.bin&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>