<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-09T01:30:06Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wjakob/instant-meshes</title>
    <updated>2025-06-09T01:30:06Z</updated>
    <id>tag:github.com,2025-06-09:/wjakob/instant-meshes</id>
    <link href="https://github.com/wjakob/instant-meshes" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Interactive field-aligned mesh generator&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Instant Meshes&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/wjakob/instant-meshes&#34;&gt;&lt;img src=&#34;https://travis-ci.org/wjakob/instant-meshes.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/wjakob/instant-meshes/branch/master&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/dm4kqxhin5uxiey0/branch/master?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img width=&#34;170&#34; height=&#34;166&#34; src=&#34;https://github.com/wjakob/instant-meshes/raw/master/resources/icon.png&#34;&gt; &#xA;&lt;p&gt;This repository contains the interactive meshing software developed as part of the publication&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Instant Field-Aligned Meshes&lt;/strong&gt;&lt;br&gt; Wenzel Jakob, Marco Tarini, Daniele Panozzo, Olga Sorkine-Hornung&lt;br&gt; In &lt;em&gt;ACM Transactions on Graphics (Proceedings of SIGGRAPH Asia 2015)&lt;/em&gt;&lt;br&gt; &lt;a href=&#34;http://igl.ethz.ch/projects/instant-meshes/instant-meshes-SA-2015-jakob-et-al.pdf&#34;&gt;PDF&lt;/a&gt;, &lt;a href=&#34;https://www.youtube.com/watch?v=U6wtw6W4x3I&#34;&gt;Video&lt;/a&gt;, &lt;a href=&#34;http://igl.ethz.ch/projects/instant-meshes/&#34;&gt;Project page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h5&gt;In commercial software&lt;/h5&gt; &#xA;&lt;p&gt;Since version 10.2, Modo uses the Instant Meshes algorithm to implement its automatic retopology feature. An interview discussing this technique and more recent projects is available &lt;a href=&#34;https://www.foundry.com/trends/design-visualisation/mitsuba-renderer-instant-meshes&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshot&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/wjakob/instant-meshes/raw/master/resources/screenshot.jpg&#34; alt=&#34;Instant Meshes logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Pre-compiled binaries&lt;/h2&gt; &#xA;&lt;p&gt;The following binaries (Intel, 64 bit) are automatically generated from the latest GitHub revision.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://instant-meshes.s3.eu-central-1.amazonaws.com/Release/instant-meshes-windows.zip&#34;&gt;Microsoft Windows&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://instant-meshes.s3.eu-central-1.amazonaws.com/instant-meshes-macos.zip&#34;&gt;Mac OS X&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://instant-meshes.s3.eu-central-1.amazonaws.com/instant-meshes-linux.zip&#34;&gt;Linux&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Please also fetch the following dataset ZIP file and extract it so that the &lt;code&gt;datasets&lt;/code&gt; folder is in the same directory as &lt;code&gt;Instant Meshes&lt;/code&gt;, &lt;code&gt;Instant Meshes.app&lt;/code&gt;, or &lt;code&gt;Instant Meshes.exe&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://instant-meshes.s3.eu-central-1.amazonaws.com/instant-meshes-datasets.zip&#34;&gt;Datasets&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Note: On Linux, Instant Meshes relies on the program &lt;code&gt;zenity&lt;/code&gt;, which must be installed.&lt;/p&gt; &#xA;&lt;h2&gt;Compiling&lt;/h2&gt; &#xA;&lt;p&gt;Compiling from scratch requires CMake and a recent version of XCode on Mac, Visual Studio 2015 on Windows, and GCC on Linux.&lt;/p&gt; &#xA;&lt;p&gt;On MacOS, compiling should be as simple as&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recursive https://github.com/wjakob/instant-meshes&#xA;cd instant-meshes&#xA;cmake .&#xA;make -j 4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build on Linux, please install the prerequisites &lt;code&gt;libxrandr-dev&lt;/code&gt;, &lt;code&gt;libxinerama-dev&lt;/code&gt;, &lt;code&gt;libxcursor-dev&lt;/code&gt;, and &lt;code&gt;libxi-dev&lt;/code&gt; and then use the same sequence of commands shown above for MacOS.&lt;/p&gt; &#xA;&lt;p&gt;On Windows, open the generated file &lt;code&gt;InstantMeshes.sln&lt;/code&gt; after step 3 and proceed building as usual from within Visual Studio.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To get started, launch the binary and select a dataset using the &#34;Open mesh&#34; button on the top left (the application must be located in the same directory as the &#39;datasets&#39; folder, otherwise the panel will be empty).&lt;/p&gt; &#xA;&lt;p&gt;The standard workflow is to solve for an orientation field (first blue button) and a position field (second blue button) in sequence, after which the &#39;Export mesh&#39; button becomes active. Many user interface elements display a descriptive message when hovering the mouse cursor above for a second.&lt;/p&gt; &#xA;&lt;p&gt;A range of additional information about the input mesh, the computed fields, and the output mesh can be visualized using the check boxes accessible via the &#39;Advanced&#39; panel.&lt;/p&gt; &#xA;&lt;p&gt;Clicking the left mouse button and dragging rotates the object; right-dragging (or shift+left-dragging) translates, and the mouse wheel zooms. The fields can also be manipulated using brush tools that are accessible by clicking the first icon in each &#39;Tool&#39; row.&lt;/p&gt;</summary>
  </entry>
</feed>