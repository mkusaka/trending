<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-27T01:36:27Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>alvr-org/ALVR</title>
    <updated>2022-09-27T01:36:27Z</updated>
    <id>tag:github.com,2022-09-27:/alvr-org/ALVR</id>
    <link href="https://github.com/alvr-org/ALVR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Stream VR games from your PC to your headset via Wi-Fi&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;500&#34; src=&#34;https://raw.githubusercontent.com/alvr-org/ALVR/master/resources/alvr_combined_logo_hq.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;ALVR - Air Light VR&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/ALVR&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/720612397580025886?style=for-the-badge&amp;amp;logo=discord&amp;amp;color=5865F2&#34; alt=&#34;badge-discord&#34; title=&#34;Join us on Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#alvr:ckie.dev?via=ckie.dev&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=chat&amp;amp;message=%23alvr&amp;amp;style=for-the-badge&amp;amp;logo=matrix&amp;amp;color=blueviolet&#34; alt=&#34;badge-matrix&#34; title=&#34;Join us on Matrix&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/alvr&#34;&gt;&lt;img src=&#34;https://img.shields.io/opencollective/all/alvr?style=for-the-badge&amp;amp;logo=opencollective&amp;amp;color=79a3e6&#34; alt=&#34;badge-opencollective&#34; title=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Stream VR games from your PC to your headset via Wi-Fi.&lt;br&gt; ALVR uses technologies like &lt;a href=&#34;https://developer.oculus.com/documentation/native/android/mobile-timewarp-overview&#34;&gt;Asynchronous Timewarp&lt;/a&gt; and &lt;a href=&#34;https://developer.oculus.com/documentation/native/android/mobile-ffr&#34;&gt;Fixed Foveated Rendering&lt;/a&gt; for a smoother experience.&lt;br&gt; All games that work with an Oculus Rift (s) should work with ALVR.&lt;br&gt; This is a fork of &lt;a href=&#34;https://github.com/polygraphene/ALVR&#34;&gt;ALVR&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Headset&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Support&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Oculus Quest&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Oculus Quest 2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Oculus Go&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;GearVR&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;❌&lt;/span&gt; (use &lt;a href=&#34;https://github.com/polygraphene/ALVR&#34;&gt;this&lt;/a&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Oculus Quest, Oculus Quest 2 or Oculus Go on the latest firmware&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;SteamVR&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;High-end gaming PC&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Windows 10 May 2020 update is recommended. If you are on an older version, you need to install Chrome or another Chromium based browser.&lt;/li&gt; &#xA;   &lt;li&gt;Minimum supported OS version is Windows 8.&lt;/li&gt; &#xA;   &lt;li&gt;NVIDIA GPU that supports NVENC (&lt;a href=&#34;https://github.com/polygraphene/ALVR/wiki/Supported-GPU&#34;&gt;Supported GPUs&lt;/a&gt;) (or with an AMD GPU that supports AMF VCE) with the latest driver.&lt;/li&gt; &#xA;   &lt;li&gt;Laptops with an onboard (Intel HD, AMD iGPU) and an additional dedicated GPU (NVidia GTX/RTX, AMD HD/R5/R7): you should assign the dedicated GPU or &#34;high performance graphics adapter&#34; to the applications ALVR, SteamVR for best performance and compatibility. (NVidia: Nvidia control panel-&amp;gt;3d settings-&amp;gt;application settings; AMD: similiar way)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;802.11ac 5Ghz wireless or ethernet wired connection&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;It is recommended to use 802.11ac 5Ghz for the headset and ethernet for PC&lt;/li&gt; &#xA;   &lt;li&gt;You need to connect both the PC and the headset to same router (or use a routed connection as described &lt;a href=&#34;https://github.com/alvr-org/ALVR/wiki/ALVR-client-and-server-on-separate-networks&#34;&gt;here&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Follow the installation guide &lt;a href=&#34;https://github.com/alvr-org/ALVR/wiki/Installation&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please check the &lt;a href=&#34;https://github.com/alvr-org/ALVR/wiki/Troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt; page. The original repository &lt;a href=&#34;https://github.com/polygraphene/ALVR/wiki/Troubleshooting&#34;&gt;wiki&lt;/a&gt; can also help.&lt;/li&gt; &#xA; &lt;li&gt;Configuration recommendations and information may be found &lt;a href=&#34;https://github.com/alvr-org/ALVR/wiki/Configuration-Information-and-Recommendations&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Uninstall&lt;/h2&gt; &#xA;&lt;p&gt;Open &lt;code&gt;ALVR Launcher.exe&lt;/code&gt;, go to &lt;code&gt;Installation&lt;/code&gt; tab then press &lt;code&gt;Remove firewall rules&lt;/code&gt;. Close ALVR window and delete the ALVR folder.&lt;/p&gt; &#xA;&lt;p&gt;If you have a version prior to v12.0 you need to launch &lt;code&gt;remove_firewall_rules.bat&lt;/code&gt; and &lt;code&gt;driver_uninstall.bat&lt;/code&gt; in the installation folder.&lt;/p&gt; &#xA;&lt;h2&gt;Build from source&lt;/h2&gt; &#xA;&lt;p&gt;You can follow the guide &lt;a href=&#34;https://github.com/alvr-org/ALVR/wiki/Building-From-Source&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;ALVR is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/alvr-org/ALVR/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Privacy policy&lt;/h2&gt; &#xA;&lt;p&gt;ALVR apps do not directly collect any kind of data.&lt;/p&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;If you want to support this project you can make a donation to our &lt;a href=&#34;https://opencollective.com/alvr&#34;&gt;Open Source Collective account&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also donate to the original author of ALVR using Paypal (&lt;a href=&#34;mailto:polygraphene@gmail.com&#34;&gt;polygraphene@gmail.com&lt;/a&gt;) or with bitcoin (1FCbmFVSjsmpnAj6oLx2EhnzQzzhyxTLEv).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jomjol/AI-on-the-edge-device</title>
    <updated>2022-09-27T01:36:27Z</updated>
    <id>tag:github.com,2022-09-27:/jomjol/AI-on-the-edge-device</id>
    <link href="https://github.com/jomjol/AI-on-the-edge-device" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AI-on-the-edge-device&lt;/h1&gt; &#xA;&lt;p&gt;This is an example of Artificial Intelligence (AI) calculations on a very cheap hardware.&lt;/p&gt; &#xA;&lt;h3&gt;Details on &lt;strong&gt;function&lt;/strong&gt;, &lt;strong&gt;installation&lt;/strong&gt; and &lt;strong&gt;configuration&lt;/strong&gt; can be found on the &lt;strong&gt;&lt;a href=&#34;https://github.com/jomjol/AI-on-the-edge-device/wiki&#34;&gt;Wiki Page&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;A 3d-printable housing can be found here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.thingiverse.com/thing:4573481&#34;&gt;https://www.thingiverse.com/thing:4573481&lt;/a&gt; (Water Meter)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.thingiverse.com/thing:5028229&#34;&gt;https://www.thingiverse.com/thing:5028229&lt;/a&gt; (Power Meter)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.thingiverse.com/thing:4571627&#34;&gt;https://www.thingiverse.com/thing:4571627&lt;/a&gt; (ESP32-Cam housing only)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jomjol/AI-on-the-edge-device/master/images/watermeter_all.jpg&#34; width=&#34;200&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jomjol/AI-on-the-edge-device/master/images/main.jpg&#34; width=&#34;200&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jomjol/AI-on-the-edge-device/master/images/size.png&#34; width=&#34;200&#34;&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/jomjol/AI-on-the-edge-device/master/images/watermeter.jpg&#34; width=&#34;600&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/jomjol/AI-on-the-edge-device/master/images/powermeter.jpg&#34; width=&#34;600&#34;&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;If you would like to support the developer with a cup of coffee you can do that via &lt;a href=&#34;https://www.paypal.com/donate?hosted_button_id=8TRSVYNYKDSWL&#34;&gt;Paypal&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;form action=&#34;https://www.paypal.com/donate&#34; method=&#34;post&#34; target=&#34;_top&#34;&gt; &#xA; &lt;input type=&#34;hidden&#34; name=&#34;hosted_button_id&#34; value=&#34;8TRSVYNYKDSWL&#34;&gt; &#xA; &lt;input type=&#34;image&#34; src=&#34;https://www.paypalobjects.com/en_US/DK/i/btn/btn_donateCC_LG.gif&#34; border=&#34;0&#34; name=&#34;submit&#34; title=&#34;PayPal - The safer, easier way to pay online!&#34; alt=&#34;Donate with PayPal button&#34;&gt; &#xA; &lt;img alt=&#34;&#34; border=&#34;0&#34; src=&#34;https://www.paypal.com/en_DE/i/scr/pixel.gif&#34; width=&#34;1&#34; height=&#34;1&#34;&gt; &#xA;&lt;/form&gt; If you have any technical topics, you can file a issue in this repository. &#xA;&lt;p&gt;In other cases you can contact the developer via email: &lt;img src=&#34;https://raw.githubusercontent.com/jomjol/AI-on-the-edge-device/master/images/mail.jpg&#34; height=&#34;25&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Change log&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;General remark:&lt;/strong&gt; Besides the file &lt;code&gt;firmware.bin&lt;/code&gt;, typically the content of &lt;code&gt;/html&lt;/code&gt; will need to be updated!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h5&gt;11.3.1 - Intermediate Digits (2022-09-17)&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ATTENTION&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;first update the &#39;firmware.bin&#39; and ensure that the new version is running&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Only afterwards update the &#39;html.zip&#39;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Otherwise the downwards compatibility of the new counter clockwise feature is not given and you end in a reboot loop, that needs manual flashing!&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;NEW v11.3.1&lt;/strong&gt;: corrected corrupted asset &lt;code&gt;firmware.bin&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Increased precision (more than 6-7 digits)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Implements Counter Clockwise Analog Pointers&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Improved post processing algorithm&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Debugging: intensive use of testcases&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;MQTT: improved handling, extended logging, automated reconnect&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;HTML: Backup Option for Configuration&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;HTML: Improved Reboot&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;HTML: Update WebUI (Reboot, Infos, CPU Temp, RSSI)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;This version is largely also based on the work of &lt;strong&gt;&lt;a href=&#34;https://github.com/caco3&#34;&gt;caco3&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href=&#34;https://github.com/adellafave&#34;&gt;adellafave&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href=&#34;https://github.com/haverland&#34;&gt;haverland&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href=&#34;https://github.com/stefanbode&#34;&gt;stefanbode&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href=&#34;https://github.com/PLCHome&#34;&gt;PLCHome&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;11.2.0 - Intermediate Digits (2022-08-28)&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Updated Tensorflow / TFlite to newest tflite (version as of 2022-07-27)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Updated analog neural network file (&lt;code&gt;ana-cont_11.3.0_s2.tflite&lt;/code&gt; - default, &lt;code&gt;ana-class100_0120_s1_q.tflite&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Updated digital neural network file (&lt;code&gt;dig-cont_0570_s3.tflite&lt;/code&gt; - default, &lt;code&gt;dig-class100_0120_s2_q.tflite&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Added automated filtering of tflite-file in the graphical configuration (thanks to @&lt;strong&gt;&lt;a href=&#34;https://github.com/caco3&#34;&gt;caco3&lt;/a&gt;&lt;/strong&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Updated consistency algorithm &amp;amp; test cases&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;HTML: added favicon and system name, Improved reboot dialog (thanks to @&lt;strong&gt;&lt;a href=&#34;https://github.com/caco3&#34;&gt;caco3&lt;/a&gt;&lt;/strong&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;11.1.1 - Intermediate Digits (2022-08-22)&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;New and improved consistency check (especially with analog and digital counters mixed)&lt;/li&gt; &#xA; &lt;li&gt;Bug Fix: digital counter algorithm&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;11.0.1 - Intermediate Digits (2022-08-18)&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;NEW v11.0.1&lt;/strong&gt;: Bug Fix InfluxDB configuration (only update of html.zip necessary)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Implementation of new CNN types to detect intermediate values of digits with rolling numbers&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;By default the old algo (0, 1, ..., 9, &#34;N&#34;) is active (due to the limited types of digits trained so far)&lt;/li&gt; &#xA;   &lt;li&gt;Activation can be done by selection a tflite file with the new trained model in the &#39;config.ini&#39;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Details can be found in the &lt;a href=&#34;https://github.com/jomjol/AI-on-the-edge-device/wiki/Neural-Network-Types&#34;&gt;wiki&lt;/a&gt;&lt;/strong&gt; (different types, trained image types, naming convention)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Updated neural network files (and adaption to new naming convention)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Published a tool to download and combine log files - **Thanks to **&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Files see &lt;a href=&#34;https://raw.githubusercontent.com/jomjol/AI-on-the-edge-device/master/tbd&#34;&gt;&#39;/tools/logfile-tool&#39;&lt;/a&gt;, How-to see &lt;a href=&#34;https://github.com/jomjol/AI-on-the-edge-device/wiki/Gasmeter-Log-Downloader&#34;&gt;wiki&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Bug Fix: InfluxDB enabling in grahic configuration&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tools&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Logfile downloader and combiner (Thx to &lt;a href=&#34;https://github.com/reserve85&#34;&gt;reserve85&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Files see &lt;a href=&#34;https://raw.githubusercontent.com/jomjol/AI-on-the-edge-device/master/tbd&#34;&gt;&#39;/tools/logfile-tool&#39;&lt;/a&gt;, How-to see &lt;a href=&#34;https://github.com/jomjol/AI-on-the-edge-device/wiki/Gasmeter-Log-Downloader&#34;&gt;wiki&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Additional Ideas&lt;/h2&gt; &#xA;&lt;p&gt;There are some ideas and feature requests which are not followed currently - mainly due to capacity reasons on side of the developer. They are collected here: &lt;a href=&#34;https://raw.githubusercontent.com/jomjol/AI-on-the-edge-device/master/FeatureRequest.md&#34;&gt;FeatureRequest.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;h5&gt;10.6.2 - Stability Increase (2022-07-24)&lt;/h5&gt; &#xA;&lt;h5&gt;9.2.0 - External Illumination (2021-12-02)&lt;/h5&gt; &#xA;&lt;h5&gt;8.5.0 Multi Meter Support (2021-10-07)&lt;/h5&gt; &#xA;&lt;h5&gt;7.1.2 MQTT-Update - (2021-06-17)&lt;/h5&gt; &#xA;&lt;h5&gt;6.7.2 Image Processing in Memory - (2021-05-01)&lt;/h5&gt; &#xA;&lt;h5&gt;5.0.0 Setup Modus - (2020-12-06)&lt;/h5&gt; &#xA;&lt;h5&gt;4.1.1 Configuration editor - (2020-12-02)&lt;/h5&gt; &#xA;&lt;h5&gt;4.0.0 Tflite Core - (2020-11-15)&lt;/h5&gt; &#xA;&lt;h5&gt;3.1.0 MQTT-Client - (2020-10-26)&lt;/h5&gt; &#xA;&lt;h5&gt;2.2.1 Version Control - (2020-09-27)&lt;/h5&gt; &#xA;&lt;h5&gt;2.1.0 Decimal Shift, Chrome &amp;amp; Edge - (2020-09-25)&lt;/h5&gt; &#xA;&lt;h5&gt;2.0.0 Layout update - (2020-09-12)&lt;/h5&gt; &#xA;&lt;h5&gt;1.1.3 Initial Version - (2020-09-09)&lt;/h5&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jomjol/AI-on-the-edge-device/master/Changelog.md&#34;&gt;Full Changelog&lt;/a&gt;&lt;/h4&gt;</summary>
  </entry>
  <entry>
    <title>libjxl/libjxl</title>
    <updated>2022-09-27T01:36:27Z</updated>
    <id>tag:github.com,2022-09-27:/libjxl/libjxl</id>
    <link href="https://github.com/libjxl/libjxl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;JPEG XL image format reference implementation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JPEG XL reference implementation&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/libjxl/libjxl/actions/workflows/build_test.yml&#34;&gt;&lt;img src=&#34;https://github.com/libjxl/libjxl/actions/workflows/build_test.yml/badge.svg?sanitize=true&#34; alt=&#34;Build/Test&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/libjxl/libjxl/actions/workflows/build_test_cross.yml&#34;&gt;&lt;img src=&#34;https://github.com/libjxl/libjxl/actions/workflows/build_test_cross.yml/badge.svg?sanitize=true&#34; alt=&#34;Build/Test Cross&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/libjxl/libjxl/actions/workflows/conformance.yml&#34;&gt;&lt;img src=&#34;https://github.com/libjxl/libjxl/actions/workflows/conformance.yml/badge.svg?sanitize=true&#34; alt=&#34;Conformance&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/libjxl/libjxl/actions/workflows/fuzz.yml&#34;&gt;&lt;img src=&#34;https://github.com/libjxl/libjxl/actions/workflows/fuzz.yml/badge.svg?sanitize=true&#34; alt=&#34;CIFuzz&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/libjxl/libjxl/actions/workflows/release.yaml&#34;&gt;&lt;img src=&#34;https://github.com/libjxl/libjxl/actions/workflows/release.yaml/badge.svg?sanitize=true&#34; alt=&#34;Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://libjxl.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/libjxl/badge/?version=latest&#34; alt=&#34;Doc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/libjxl/libjxl&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/libjxl/libjxl/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/libjxl/libjxl/main/doc/jxl.svg?sanitize=true&#34; width=&#34;100&#34; align=&#34;right&#34; alt=&#34;JXL logo&#34;&gt; &#xA;&lt;p&gt;This repository contains a reference implementation of JPEG XL (encoder and decoder), called &lt;code&gt;libjxl&lt;/code&gt;. This software library is &lt;a href=&#34;https://raw.githubusercontent.com/libjxl/libjxl/main/doc/software_support.md&#34;&gt;used by many applications that support JPEG XL&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;JPEG XL is in the final stages of standardization and its codestream and file format are frozen.&lt;/p&gt; &#xA;&lt;p&gt;The library API, command line options, and tools in this repository are subject to change, however files encoded with &lt;code&gt;cjxl&lt;/code&gt; conform to the JPEG XL format specification and can be decoded with current and future &lt;code&gt;djxl&lt;/code&gt; decoders or &lt;code&gt;libjxl&lt;/code&gt; decoding library.&lt;/p&gt; &#xA;&lt;h2&gt;Quick start guide&lt;/h2&gt; &#xA;&lt;p&gt;For more details and other workflows see the &#34;Advanced guide&#34; below.&lt;/p&gt; &#xA;&lt;h3&gt;Checking out the code&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/libjxl/libjxl.git --recursive --shallow-submodules&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This repository uses git submodules to handle some third party dependencies under &lt;code&gt;third_party&lt;/code&gt;, that&#39;s why is important to pass &lt;code&gt;--recursive&lt;/code&gt;. If you didn&#39;t check out with &lt;code&gt;--recursive&lt;/code&gt;, or any submodule has changed, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule update --init --recursive --depth 1 --recommend-shallow&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;--shallow-submodules&lt;/code&gt; and &lt;code&gt;--depth 1 --recommend-shallow&lt;/code&gt; options create shallow clones which only downloads the commits requested, and is all that is needed to build &lt;code&gt;libjxl&lt;/code&gt;. Should full clones be necessary, you could always run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule foreach git fetch --unshallow&#xA;git submodule update --init --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which pulls the rest of the commits in the submodules.&lt;/p&gt; &#xA;&lt;p&gt;Important: If you downloaded a zip file or tarball from the web interface you won&#39;t get the needed submodules and the code will not compile. You can download these external dependencies from source running &lt;code&gt;./deps.sh&lt;/code&gt;. The git workflow described above is recommended instead.&lt;/p&gt; &#xA;&lt;h3&gt;Installing dependencies&lt;/h3&gt; &#xA;&lt;p&gt;Required dependencies for compiling the code, in a Debian/Ubuntu based distribution run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install cmake pkg-config libbrotli-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optional dependencies for supporting other formats in the &lt;code&gt;cjxl&lt;/code&gt;/&lt;code&gt;djxl&lt;/code&gt; tools, in a Debian/Ubuntu based distribution run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install libgif-dev libjpeg-dev libopenexr-dev libpng-dev libwebp-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We recommend using a recent Clang compiler (version 7 or newer), for that install clang and set &lt;code&gt;CC&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt; variables.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install clang&#xA;export CC=clang CXX=clang++&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd libjxl&#xA;mkdir build&#xA;cd build&#xA;cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF ..&#xA;cmake --build . -- -j$(nproc)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The encoder/decoder tools will be available in the &lt;code&gt;build/tools&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a name=&#34;installing&#34;&gt;&lt;/a&gt; Installing&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo cmake --install .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Basic encoder/decoder&lt;/h3&gt; &#xA;&lt;p&gt;To encode a source image to JPEG XL with default settings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;build/tools/cjxl input.png output.jxl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more settings run &lt;code&gt;build/tools/cjxl --help&lt;/code&gt; or for a full list of options run &lt;code&gt;build/tools/cjxl -v -v --help&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To decode a JPEG XL file run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;build/tools/djxl input.jxl output.png&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When possible &lt;code&gt;cjxl&lt;/code&gt;/&lt;code&gt;djxl&lt;/code&gt; are able to read/write the following image formats: .exr, .gif, .jpeg/.jpg, .pfm, .pgm/.ppm, .pgx, .png.&lt;/p&gt; &#xA;&lt;h3&gt;Benchmarking&lt;/h3&gt; &#xA;&lt;p&gt;For speed benchmarks on single images in single or multi-threaded decoding &lt;code&gt;djxl&lt;/code&gt; can print decoding speed information. See &lt;code&gt;djxl --help&lt;/code&gt; for details on the decoding options and note that the output image is optional for benchmarking purposes.&lt;/p&gt; &#xA;&lt;p&gt;For more comprehensive benchmarking options, see the &lt;a href=&#34;https://raw.githubusercontent.com/libjxl/libjxl/main/doc/benchmarking.md&#34;&gt;benchmarking guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Advanced guide&lt;/h2&gt; &#xA;&lt;h3&gt;Building with Docker&lt;/h3&gt; &#xA;&lt;p&gt;We build a common environment based on Debian/Ubuntu using Docker. Other systems may have different combinations of versions and dependencies that have not been tested and may not work. For those cases we recommend using the Docker container as explained in the &lt;a href=&#34;https://raw.githubusercontent.com/libjxl/libjxl/main/doc/developing_in_docker.md&#34;&gt;step by step guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Building JPEG XL for developers&lt;/h3&gt; &#xA;&lt;p&gt;For experienced developers, we provide build instructions for several other environments:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/libjxl/libjxl/main/doc/developing_in_debian.md&#34;&gt;Building on Debian&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Building on Windows with &lt;a href=&#34;https://raw.githubusercontent.com/libjxl/libjxl/main/doc/developing_in_windows_vcpkg.md&#34;&gt;vcpkg&lt;/a&gt; (Visual Studio 2019)&lt;/li&gt; &#xA; &lt;li&gt;Building on Windows with &lt;a href=&#34;https://raw.githubusercontent.com/libjxl/libjxl/main/doc/developing_in_windows_msys.md&#34;&gt;MSYS2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/libjxl/libjxl/main/doc/developing_with_crossroad.md&#34;&gt;Cross Compiling for Windows with Crossroad&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you encounter any difficulties, please use Docker instead.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This software is available under a 3-clause BSD license which can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/libjxl/libjxl/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file, with an &#34;Additional IP Rights Grant&#34; as outlined in the &lt;a href=&#34;https://raw.githubusercontent.com/libjxl/libjxl/main/PATENTS&#34;&gt;PATENTS&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;Please note that the PATENTS file only mentions Google since Google is the legal entity receiving the Contributor License Agreements (CLA) from all contributors to the JPEG XL Project, including the initial main contributors to the JPEG XL format: Cloudinary and Google.&lt;/p&gt; &#xA;&lt;h2&gt;Additional documentation&lt;/h2&gt; &#xA;&lt;h3&gt;Codec description&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/libjxl/libjxl/main/doc/format_overview.md&#34;&gt;JPEG XL Format Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.spiedigitallibrary.org/proceedings/Download?fullDOI=10.1117%2F12.2529237&#34;&gt;Introductory paper&lt;/a&gt; (open-access)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/libjxl/libjxl/main/doc/xl_overview.md&#34;&gt;XL Overview&lt;/a&gt; - a brief introduction to the source code modules&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ds.jpeg.org/whitepapers/jpeg-xl-whitepaper.pdf&#34;&gt;JPEG XL white paper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jpeg.org/jpegxl&#34;&gt;JPEG XL official website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jpegxl.info&#34;&gt;JPEG XL community website&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Development process&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/libjxl/libjxl/main/doc/building_and_testing.md&#34;&gt;More information on testing/build options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/libjxl/libjxl/main/doc/developing_in_github.md&#34;&gt;Git guide for JPEG XL&lt;/a&gt; - for developers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/libjxl/libjxl/main/doc/fuzzing.md&#34;&gt;Fuzzing&lt;/a&gt; - for developers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/libjxl/libjxl/main/doc/building_wasm.md&#34;&gt;Building Web Assembly artifacts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://app.codecov.io/gh/libjxl/libjxl&#34;&gt;Test coverage on Codecov.io&lt;/a&gt; - for developers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://libjxl.readthedocs.io/&#34;&gt;libjxl documentation on readthedocs.io&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contact&lt;/h3&gt; &#xA;&lt;p&gt;If you encounter a bug or other issue with the software, please open an Issue here.&lt;/p&gt; &#xA;&lt;p&gt;There is a &lt;a href=&#34;https://www.reddit.com/r/jpegxl/&#34;&gt;subreddit about JPEG XL&lt;/a&gt;, and informal chatting with developers and early adopters of &lt;code&gt;libjxl&lt;/code&gt; can be done on the &lt;a href=&#34;https://discord.gg/DqkQgDRTFu&#34;&gt;JPEG XL Discord server&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>