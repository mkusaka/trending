<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-05T01:32:22Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>RPCSX/rpcsx</title>
    <updated>2023-07-05T01:32:22Z</updated>
    <id>tag:github.com,2023-07-05:/RPCSX/rpcsx</id>
    <link href="https://github.com/RPCSX/rpcsx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RPCSX&lt;/h1&gt; &#xA;&lt;p&gt;This is an experimental emulator for PS4 (Play Station 4) written in C++ for Linux. It&#39;s NOT possible to run any games yet. It&#39;s also unknown when it will become possible.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you want to contribute as a developer, please contact us in the Discord. &lt;a href=&#34;https://discord.gg/PYUcckGr&#34;&gt;https://discord.gg/PYUcckGr&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Under construction.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;RPCSX is licensed under GPLv2 license except directories containing their own LICENSE file, or files containing their own license. Thus, orbis-kernel is licensed under the MIT license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>li-plus/chatglm.cpp</title>
    <updated>2023-07-05T01:32:22Z</updated>
    <id>tag:github.com,2023-07-05:/li-plus/chatglm.cpp</id>
    <link href="https://github.com/li-plus/chatglm.cpp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;C++ implementation of ChatGLM-6B &amp; ChatGLM2-6B&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatGLM.cpp&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/li-plus/chatglm.cpp/actions/workflows/cmake.yml&#34;&gt;&lt;img src=&#34;https://github.com/li-plus/chatglm.cpp/actions/workflows/cmake.yml/badge.svg?sanitize=true&#34; alt=&#34;CMake&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/li-plus/chatglm.cpp/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;C++ implementation of &lt;a href=&#34;https://github.com/THUDM/ChatGLM-6B&#34;&gt;ChatGLM-6B&lt;/a&gt; and &lt;a href=&#34;https://github.com/THUDM/ChatGLM2-6B&#34;&gt;ChatGLM2-6B&lt;/a&gt; for real-time chatting on your MacBook.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/li-plus/chatglm.cpp/main/docs/demo.gif&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Pure C++ implementation based on &lt;a href=&#34;https://github.com/ggerganov/ggml&#34;&gt;ggml&lt;/a&gt;, working in the same way as &lt;a href=&#34;https://github.com/ggerganov/llama.cpp&#34;&gt;llama.cpp&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Accelerated memory-efficient CPU inference with int4/int8 quantization, optimized KV cache and parallel computing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Streaming generation with typewriter effect.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Python binding, web demo, and more possibilities.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Preparation&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Clone the ChatGLM.cpp repository into your local machine:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone --recursive https://github.com/li-plus/chatglm.cpp.git &amp;amp;&amp;amp; cd chatglm.cpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you forgot the &lt;code&gt;--recursive&lt;/code&gt; flag when cloning the repository, run the following command in the &lt;code&gt;chatglm.cpp&lt;/code&gt; folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git submodule update --init --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Quantize Model&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;convert.py&lt;/code&gt; to transform ChatGLM-6B or ChatGLM2-6B into quantized GGML format. For example, to convert the fp16 base model to q4_0 (quantized int4) GGML model, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# For ChatGLM-6B&#xA;python3 convert.py -i THUDM/chatglm-6b -t q4_0 -o chatglm-ggml.bin&#xA;# For ChatGLM2-6B&#xA;python3 convert.py -i THUDM/chatglm2-6b -t q4_0 -o chatglm2-ggml.bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You are free to try any of the below quantization types by specifying &lt;code&gt;-t &amp;lt;type&amp;gt;&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;q4_0&lt;/code&gt;: 4-bit integer quantization with fp16 scales.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;q4_1&lt;/code&gt;: 4-bit integer quantization with fp16 scales and minimum values.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;q5_0&lt;/code&gt;: 5-bit integer quantization with fp16 scales.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;q5_1&lt;/code&gt;: 5-bit integer quantization with fp16 scales and minimum values.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;q8_0&lt;/code&gt;: 8-bit integer quantization with fp16 scales.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;f16&lt;/code&gt;: half precision floating point weights without quantization.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;f32&lt;/code&gt;: single precision floating point weights without quantization.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For LoRA model, add &lt;code&gt;-l &amp;lt;lora_model_name_or_path&amp;gt;&lt;/code&gt; flag to merge your LoRA weights into the base model.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Build &amp;amp; Run&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Compile the project using CMake:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cmake -B build&#xA;cmake --build build -j&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now you may chat with the quantized ChatGLM-6B model by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./build/bin/main -m chatglm-ggml.bin -p ‰Ω†Â•Ω                            # ChatGLM-6B&#xA;# ‰Ω†Â•ΩüëãÔºÅÊàëÊòØ‰∫∫Â∑•Êô∫ËÉΩÂä©Êâã ChatGLM-6BÔºåÂæàÈ´òÂÖ¥ËßÅÂà∞‰Ω†ÔºåÊ¨¢ËøéÈóÆÊàë‰ªª‰ΩïÈóÆÈ¢ò„ÄÇ&#xA;./build/bin/main -m chatglm2-ggml.bin -p ‰Ω†Â•Ω --top_p 0.8 --temp 0.8    # ChatGLM2-6B&#xA;# ‰Ω†Â•ΩüëãÔºÅÊàëÊòØ‰∫∫Â∑•Êô∫ËÉΩÂä©Êâã ChatGLM2-6BÔºåÂæàÈ´òÂÖ¥ËßÅÂà∞‰Ω†ÔºåÊ¨¢ËøéÈóÆÊàë‰ªª‰ΩïÈóÆÈ¢ò„ÄÇ&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the model in interactive mode, add the &lt;code&gt;-i&lt;/code&gt; flag. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./build/bin/main -m chatglm-ggml.bin -i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In interactive mode, your chat history will serve as the context for the next-round conversation.&lt;/p&gt; &#xA;&lt;p&gt;Run &lt;code&gt;./build/bin/main -h&lt;/code&gt; to explore more options!&lt;/p&gt; &#xA;&lt;h2&gt;Using BLAS&lt;/h2&gt; &#xA;&lt;p&gt;BLAS library can be integrated to further accelerate matrix multiplication. However, in some cases, using BLAS may cause performance degradation. Whether to turn on BLAS should depend on the benchmarking result.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Accelerate Framework&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Accelerate Framework is automatically enabled on macOS. To disable it, add the CMake flag &lt;code&gt;-DGGML_NO_ACCELERATE=ON&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;OpenBLAS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;OpenBLAS provides acceleration on CPU. Add the CMake flag &lt;code&gt;-DGGML_OPENBLAS=ON&lt;/code&gt; to enable it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cmake -B build -DGGML_OPENBLAS=ON&#xA;cmake --build build -j&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;cuBLAS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;cuBLAS uses NVIDIA GPU to accelerate BLAS. Add the CMake flag &lt;code&gt;-DGGML_CUBLAS=ON&lt;/code&gt; to enable it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cmake -B build -DGGML_CUBLAS=ON&#xA;cmake --build build -j&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the current GGML CUDA implementation is really slow. The community is making efforts to optimize it.&lt;/p&gt; &#xA;&lt;h2&gt;Python Binding&lt;/h2&gt; &#xA;&lt;p&gt;To install the Python binding from source, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# install from the latest source hosted on GitHub&#xA;pip install git+https://github.com/li-plus/chatglm.cpp.git@main&#xA;# or install from your local source&#xA;pip install .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the Python example to chat with the quantized model:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd examples &amp;amp;&amp;amp; python3 cli_chat.py -m ../chatglm-ggml.bin -i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may also launch a web demo to chat in your browser:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd examples &amp;amp;&amp;amp; python3 web_demo.py -m ../chatglm-ggml.bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For ChatGLM2, change the model path to &lt;code&gt;../chatglm2-ggml.bin&lt;/code&gt; and everything works fine.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/li-plus/chatglm.cpp/main/docs/web_demo.jpg&#34; alt=&#34;web_demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;Measured on a Linux server with Intel(R) Xeon(R) Platinum 8260 CPU @ 2.40GHz using 16 threads.&lt;/p&gt; &#xA;&lt;p&gt;ChatGLM-6B:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Q4_0&lt;/th&gt; &#xA;   &lt;th&gt;Q4_1&lt;/th&gt; &#xA;   &lt;th&gt;Q5_0&lt;/th&gt; &#xA;   &lt;th&gt;Q5_1&lt;/th&gt; &#xA;   &lt;th&gt;Q8_0&lt;/th&gt; &#xA;   &lt;th&gt;F16&lt;/th&gt; &#xA;   &lt;th&gt;F32&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ms/token&lt;/td&gt; &#xA;   &lt;td&gt;74&lt;/td&gt; &#xA;   &lt;td&gt;77&lt;/td&gt; &#xA;   &lt;td&gt;86&lt;/td&gt; &#xA;   &lt;td&gt;89&lt;/td&gt; &#xA;   &lt;td&gt;114&lt;/td&gt; &#xA;   &lt;td&gt;189&lt;/td&gt; &#xA;   &lt;td&gt;357&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;file size&lt;/td&gt; &#xA;   &lt;td&gt;3.3GB&lt;/td&gt; &#xA;   &lt;td&gt;3.7GB&lt;/td&gt; &#xA;   &lt;td&gt;4.0GB&lt;/td&gt; &#xA;   &lt;td&gt;4.4GB&lt;/td&gt; &#xA;   &lt;td&gt;6.2GB&lt;/td&gt; &#xA;   &lt;td&gt;12GB&lt;/td&gt; &#xA;   &lt;td&gt;23GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mem usage&lt;/td&gt; &#xA;   &lt;td&gt;4.0GB&lt;/td&gt; &#xA;   &lt;td&gt;4.4GB&lt;/td&gt; &#xA;   &lt;td&gt;4.7GB&lt;/td&gt; &#xA;   &lt;td&gt;5.1GB&lt;/td&gt; &#xA;   &lt;td&gt;6.9GB&lt;/td&gt; &#xA;   &lt;td&gt;13GB&lt;/td&gt; &#xA;   &lt;td&gt;24GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;ChatGLM2-6B:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Q4_0&lt;/th&gt; &#xA;   &lt;th&gt;Q4_1&lt;/th&gt; &#xA;   &lt;th&gt;Q5_0&lt;/th&gt; &#xA;   &lt;th&gt;Q5_1&lt;/th&gt; &#xA;   &lt;th&gt;Q8_0&lt;/th&gt; &#xA;   &lt;th&gt;F16&lt;/th&gt; &#xA;   &lt;th&gt;F32&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ms/token&lt;/td&gt; &#xA;   &lt;td&gt;64&lt;/td&gt; &#xA;   &lt;td&gt;71&lt;/td&gt; &#xA;   &lt;td&gt;79&lt;/td&gt; &#xA;   &lt;td&gt;83&lt;/td&gt; &#xA;   &lt;td&gt;106&lt;/td&gt; &#xA;   &lt;td&gt;189&lt;/td&gt; &#xA;   &lt;td&gt;372&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;file size&lt;/td&gt; &#xA;   &lt;td&gt;3.3GB&lt;/td&gt; &#xA;   &lt;td&gt;3.7GB&lt;/td&gt; &#xA;   &lt;td&gt;4.0GB&lt;/td&gt; &#xA;   &lt;td&gt;4.4GB&lt;/td&gt; &#xA;   &lt;td&gt;6.2GB&lt;/td&gt; &#xA;   &lt;td&gt;12GB&lt;/td&gt; &#xA;   &lt;td&gt;24GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mem usage&lt;/td&gt; &#xA;   &lt;td&gt;3.4GB&lt;/td&gt; &#xA;   &lt;td&gt;3.8GB&lt;/td&gt; &#xA;   &lt;td&gt;4.1GB&lt;/td&gt; &#xA;   &lt;td&gt;4.5GB&lt;/td&gt; &#xA;   &lt;td&gt;6.2GB&lt;/td&gt; &#xA;   &lt;td&gt;12GB&lt;/td&gt; &#xA;   &lt;td&gt;23GB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To perform unit tests, add the CMake flag &lt;code&gt;-DCHATGLM_ENABLE_TESTING=ON&lt;/code&gt;, recompile, and run &lt;code&gt;./build/bin/chatglm_test&lt;/code&gt;. For benchmark only, run &lt;code&gt;./build/bin/chatglm_test --gtest_filter=ChatGLM.benchmark&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To format the code, run &lt;code&gt;cmake --build build --target lint&lt;/code&gt;. You should have &lt;code&gt;clang-format&lt;/code&gt;, &lt;code&gt;black&lt;/code&gt; and &lt;code&gt;isort&lt;/code&gt; pre-installed.&lt;/li&gt; &#xA; &lt;li&gt;To check performance issue, add the CMake flag &lt;code&gt;-DGGML_PERF=ON&lt;/code&gt;. It will show timing for each graph operation when running the model.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This project is greatly inspired by &lt;a href=&#34;https://github.com/ggerganov&#34;&gt;@ggerganov&lt;/a&gt;&#39;s &lt;a href=&#34;https://github.com/ggerganov/llama.cpp&#34;&gt;llama.cpp&lt;/a&gt; and is based on his NN library &lt;a href=&#34;https://github.com/ggerganov/ggml&#34;&gt;ggml&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Thank &lt;a href=&#34;https://github.com/THUDM&#34;&gt;@THUDM&lt;/a&gt; for the amazing &lt;a href=&#34;https://github.com/THUDM/ChatGLM-6B&#34;&gt;ChatGLM-6B&lt;/a&gt; and &lt;a href=&#34;https://github.com/THUDM/ChatGLM2-6B&#34;&gt;ChatGLM2-6B&lt;/a&gt; and for releasing the model sources and checkpoints.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>primihub/primihub</title>
    <updated>2023-07-05T01:32:22Z</updated>
    <id>tag:github.com,2023-07-05:/primihub/primihub</id>
    <link href="https://github.com/primihub/primihub" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Privacy-Preserving Computing Platform Áî±ÂØÜÁ†ÅÂ≠¶‰∏ìÂÆ∂Âõ¢ÈòüÊâìÈÄ†ÁöÑÂºÄÊ∫êÈöêÁßÅËÆ°ÁÆóÂπ≥Âè∞ÔºåÊîØÊåÅÂÆâÂÖ®Â§öÊñπËÆ°ÁÆó„ÄÅËÅîÈÇ¶Â≠¶‰π†„ÄÅÈöêÁßÅÊ±Ç‰∫§„ÄÅÈöêÁßÅÊü•ËØ¢Á≠â„ÄÇ&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/primihub/primihub/develop/doc/header.jpeg&#34; alt=&#34;Header&#34;&gt; &lt;br&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt;&lt;strong&gt;Áî±ÂØÜÁ†ÅÂ≠¶‰∏ìÂÆ∂Âõ¢ÈòüÊâìÈÄ†ÁöÑÂºÄÊ∫êÈöêÁßÅËÆ°ÁÆóÂπ≥Âè∞&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/primihub/primihub/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/primihub/primihub?style=flat-square&#34; alt=&#34;GitHub Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/primihub/primihub/actions/workflows/main.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/primihub/primihub/main.yml?logo=github&amp;amp;style=flat-square&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/primihub/primihub-node&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/primihub/primihub-node?style=flat-square&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; ‰∏≠Êñá | &lt;a href=&#34;https://raw.githubusercontent.com/primihub/primihub/develop/README_EN.md&#34;&gt;English&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ÈöêÁßÅËÆ°ÁÆó&lt;/h2&gt; &#xA;&lt;p&gt;Êï∞ÊçÆÊµÅÂä®Ëµ∑Êù•ÊâçÂèØ‰ª•ÂàõÈÄ†Êõ¥Â§ßÁöÑ‰ª∑ÂÄºÔºåÈöèÁùÄÊï∞Â≠óÁªèÊµéÊåÅÁª≠È´òÈÄüÂ¢ûÈïøÔºå&lt;strong&gt;Êï∞ÊçÆÁöÑ‰∫íËÅî‰∫íÈÄöÈúÄÊ±ÇË∂äÊù•Ë∂äÊó∫Áõõ&lt;/strong&gt;ÔºåÂ§ßÂà∞ÊîøÂ∫úÊú∫ÂÖ≥ÁöÑÊú∫ÂØÜÊï∞ÊçÆ„ÄÅÂÖ¨Âè∏Ê†∏ÂøÉÂïÜ‰∏öÊï∞ÊçÆ„ÄÅÂ∞èÂà∞‰∏™‰∫∫‰ø°ÊÅØ„ÄÇËøë‰∏§Âπ¥ÔºåÊàëÂõΩ‰πüÁõ∏ÁªßÂá∫Âè∞‰∫Ü &lt;strong&gt;„ÄäÊï∞ÊçÆÂÆâÂÖ®Ê≥ï„Äã&lt;/strong&gt; Âíå &lt;strong&gt;„Ää‰∏™‰∫∫‰ø°ÊÅØ‰øùÊä§Ê≥ï„Äã&lt;/strong&gt;„ÄÇÂõ†Ê≠§Ôºå&lt;strong&gt;Â¶Ç‰ΩïËÆ©Êï∞ÊçÆÂÆâÂÖ®Âú∞ÊµÅÈÄöËµ∑Êù•ÔºåÊòØ‰∏Ä‰∏™ÂøÖÈ°ªË¶ÅËß£ÂÜ≥ÁöÑÈóÆÈ¢ò&lt;/strong&gt;„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;ÈöêÁßÅËÆ°ÁÆóÊäÄÊúØ‰Ωú‰∏∫&lt;strong&gt;ËøûÊé•Êï∞ÊçÆÊµÅÈÄöÂíåÈöêÁßÅ‰øùÊä§Ê≥ïËßÑÁöÑÁ∫ΩÂ∏¶&lt;/strong&gt;ÔºåÂÆûÁé∞‰∫Ü &lt;strong&gt;‚ÄúÊï∞ÊçÆÂèØÁî®‰∏çÂèØËßÅ‚Äù&lt;/strong&gt;„ÄÇÂç≥&lt;strong&gt;Âú®‰øùÊä§Êï∞ÊçÆÊú¨Ë∫´‰∏çÂØπÂ§ñÊ≥ÑÈú≤ÁöÑÂâçÊèê‰∏ãÂÆûÁé∞Êï∞ÊçÆÂàÜÊûêËÆ°ÁÆóÁöÑÊäÄÊúØÈõÜÂêà&lt;/strong&gt;„ÄÇÈöêÁßÅËÆ°ÁÆó‰Ωú‰∏∫Êï∞ÊçÆÊµÅÈÄöÁöÑ&lt;strong&gt;ÈáçË¶ÅÂàõÊñ∞ÂâçÊ≤øÊäÄÊúØ&lt;/strong&gt;ÔºåÂ∑≤ÁªèÂπøÊ≥õÂ∫îÁî®‰∫éÈáëËûç„ÄÅÂåªÁñó„ÄÅÈÄö‰ø°„ÄÅÊîøÂä°Á≠âÂ§ö‰∏™Ë°å‰∏ö„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;PrimiHub&lt;/h2&gt; &#xA;&lt;p&gt;Â¶ÇÊûú‰Ω†ÂØπÈöêÁßÅËÆ°ÁÆóÊÑüÂÖ¥Ë∂£ÔºåÊÉ≥ËøëË∑ùÁ¶ª‰ΩìÈ™å‰∏ãÈöêÁßÅËÆ°ÁÆóÁöÑÈ≠ÖÂäõÔºå‰∏çÂ¶®ËØïËØï PrimiHubÔºÅ‰∏ÄÊ¨æ&lt;strong&gt;Áî±ÂØÜÁ†ÅÂ≠¶‰∏ìÂÆ∂Âõ¢ÈòüÊâìÈÄ†ÁöÑÂºÄÊ∫êÈöêÁßÅËÆ°ÁÆóÂπ≥Âè∞&lt;/strong&gt;ÔºåÂÆÉÂÆâÂÖ®ÂèØÈù†„ÄÅÂºÄÁÆ±Âç≥Áî®„ÄÅËá™‰∏ªÁ†îÂèë„ÄÅÂäüËÉΩ‰∏∞ÂØå„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;ÁâπÊÄß&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;ÂºÄÊ∫ê&lt;/strong&gt;ÔºöÂÆåÂÖ®ÂºÄÊ∫ê„ÄÅÂÖçË¥π&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ÂÆâË£ÖÁÆÄÂçï&lt;/strong&gt;ÔºöÊîØÊåÅ Docker ‰∏ÄÈîÆÈÉ®ÁΩ≤&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ÂºÄÁÆ±Âç≥Áî®&lt;/strong&gt;ÔºöÊã•Êúâ &lt;a href=&#34;https://github.com/primihub/primihub-platform&#34;&gt;WebÁïåÈù¢&lt;/a&gt;„ÄÅ&lt;a href=&#34;https://docs.primihub.com/docs/category/%E5%88%9B%E5%BB%BA%E4%BB%BB%E5%8A%A1&#34;&gt;ÂëΩ‰ª§Ë°å&lt;/a&gt; Âíå &lt;a href=&#34;https://docs.primihub.com/docs/category/python-sdk-client&#34;&gt;Python SDK&lt;/a&gt; Â§öÁßç‰ΩøÁî®ÊñπÂºè&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ÂäüËÉΩ‰∏∞ÂØå&lt;/strong&gt;ÔºöÊîØÊåÅÈöêÂåøÊü•ËØ¢„ÄÅÈöêÁßÅÊ±Ç‰∫§„ÄÅËÅîÂêàÁªüËÆ°„ÄÅÊï∞ÊçÆËµÑÊ∫êÁÆ°ÁêÜÁ≠âÂäüËÉΩ&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ÁÅµÊ¥ªÈÖçÁΩÆ&lt;/strong&gt;ÔºöÊîØÊåÅËá™ÂÆö‰πâÊâ©Â±ïËØ≠Ê≥ï„ÄÅËØ≠‰πâ„ÄÅÂÆâÂÖ®ÂçèËÆÆÁ≠â&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ëá™‰∏ªÁ†îÂèë&lt;/strong&gt;ÔºöÂü∫‰∫éÂÆâÂÖ®Â§öÊñπËÆ°ÁÆó„ÄÅËÅîÈÇ¶Â≠¶‰π†„ÄÅÂêåÊÄÅÂä†ÂØÜ„ÄÅÂèØ‰ø°ËÆ°ÁÆóÁ≠âÈöêÁßÅËÆ°ÁÆóÊäÄÊúØ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Âø´ÈÄüÂºÄÂßã&lt;/h2&gt; &#xA;&lt;p&gt;Êé®Ëçê‰ΩøÁî® Docker ÈÉ®ÁΩ≤ PrimiHubÔºåÂºÄÂêØ‰Ω†ÁöÑÈöêÁßÅËÆ°ÁÆó‰πãÊóÖ„ÄÇ&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Á¨¨‰∏ÄÊ≠•Ôºö‰∏ãËΩΩ&#xA;git clone https://github.com/primihub/primihub.git&#xA;# Á¨¨‰∫åÊ≠•ÔºöÂêØÂä®ÂÆπÂô®&#xA;cd primihub &amp;amp;&amp;amp; docker-compose up -d&#xA;# Á¨¨‰∏âÊ≠•ÔºöËøõÂÖ•ÂÆπÂô®&#xA;docker exec -it primihub-node0 bash&#xA;# Á¨¨ÂõõÊ≠•ÔºöÊâßË°åÈöêÁßÅÊ±Ç‰∫§ËÆ°ÁÆó&#xA;./primihub-cli --task_config_file=&#34;example/psi_ecdh_task_conf.json&#34;&#xA;I20230616 13:40:10.683375    28 cli.cc:524] all node has finished&#xA;I20230616 13:40:10.683745    28 cli.cc:598] SubmitTask time cost(ms): 1419&#xA;# Êü•ÁúãÁªìÊûú&#xA;cat data/result/psi_result.csv&#xA;&#34;intersection_row&#34;&#xA;X3&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/primihub/primihub/develop/doc/kt.gif&#34; width=&#34;700&#34; alt=&#34;PSI&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;em&gt;ÈöêÁßÅÊ±Ç‰∫§‰æãÂ≠ê &lt;a href=&#34;https://docs.primihub.com/docs/quick-start-platform/&#34;&gt;Âú®Á∫øÂ∞ùËØï&lt;/a&gt;„Éª&lt;a href=&#34;https://docs.primihub.com/docs/advance-usage/create-tasks/psi-task/&#34;&gt;ÂëΩ‰ª§Ë°å&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Èô§Ê≠§‰πãÂ§ñÔºåPrimiHub ËøòÊèê‰æõ‰∫ÜÂ§öÁßçÈÄÇÂêà&lt;strong&gt;‰∏çÂêå‰∫∫Áæ§&lt;/strong&gt;ÁöÑ‰ΩøÁî®ÊñπÂºèÔºö&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.primihub.com/docs/quick-start-platform/&#34;&gt;Âú®Á∫ø‰ΩìÈ™å&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.primihub.com/docs/advance-usage/start/quick-start&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.primihub.com/docs/advance-usage/start/start-nodes&#34;&gt;ÂèØÊâßË°åÊñá‰ª∂&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.primihub.com/docs/advance-usage/start/build&#34;&gt;Ëá™Ë°åÁºñËØë&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ÈóÆÈ¢ò / Â∏ÆÂä© / Bug&lt;/h2&gt; &#xA;&lt;p&gt;Â¶ÇÊûúÊÇ®Âú®‰ΩøÁî®ËøáÁ®ã‰∏≠ÈÅáÂà∞‰ªª‰ΩïÈóÆÈ¢òÔºåÈúÄË¶ÅÊàë‰ª¨ÁöÑÂ∏ÆÂä©ÂèØ‰ª• &lt;a href=&#34;https://github.com/primihub/primihub/issues/new/choose&#34;&gt;ÁÇπÂáª&lt;/a&gt; ÂèçÈ¶àÈóÆÈ¢ò„ÄÇ&lt;/p&gt; &#xA;&lt;p&gt;Ê¨¢ËøéÊ∑ªÂä†Êàë‰ª¨ÁöÑÂæÆ‰ø°Âä©ÊâãÔºåÂä†ÂÖ•„ÄåPrimiHub ÂºÄÊ∫êÁ§æÂå∫„ÄçÂæÆ‰ø°Áæ§„ÄÇ‚ÄúÈõ∂Ë∑ùÁ¶ª‚ÄùÊé•Ëß¶&lt;strong&gt;È°πÁõÆÊ†∏ÂøÉÂºÄÂèë„ÄÅÂØÜÁ†ÅÂ≠¶‰∏ìÂÆ∂„ÄÅÈöêÁßÅËÆ°ÁÆóË°å‰∏öÂ§ßÂíñ&lt;/strong&gt;ÔºåËé∑ÂæóÊõ¥ÂèäÊó∂ÁöÑÂõûÂ§çÂíåÈöêÁßÅËÆ°ÁÆóÁöÑÁ¨¨‰∏ÄÊâãËµÑËÆØ„ÄÇ&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/primihub/primihub/develop/doc/wechat.jpeg&#34; alt=&#34;Header&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;ËÆ∏ÂèØËØÅ&lt;/h2&gt; &#xA;&lt;p&gt;Ê≠§‰ª£Á†ÅÂú® Apache 2.0 ‰∏ãÂèëÂ∏ÉÔºåÂèÇËßÅ &lt;a href=&#34;https://github.com/primihub/primihub/raw/develop/LICENSE&#34;&gt;LICENSE&lt;/a&gt; Êñá‰ª∂„ÄÇ&lt;/p&gt;</summary>
  </entry>
</feed>