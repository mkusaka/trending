<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-01T01:29:03Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>myscale/myscaledb</title>
    <updated>2024-04-01T01:29:03Z</updated>
    <id>tag:github.com,2024-04-01:/myscale/myscaledb</id>
    <link href="https://github.com/myscale/myscaledb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open-source, high-performance SQL vector database built on ClickHouse.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MyScaleDB&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://myscale.com/?utm_source=github&amp;amp;utm_medium=myscaledb&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/myscale/myscaledb/main/docs/myscaledb-logo-with-text.png&#34; alt=&#34;MyScale, the SQL Vector Database for Scalable AI&#34; height=&#34;100&#34;&gt; &lt;/a&gt; &#xA; &lt;br&gt;&#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/myscale/myscaledb/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-yellow.svg?sanitize=true&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://isocpp.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-C++20-blue.svg?sanitize=true&#34; alt=&#34;Language&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/D2qpkqc4Jq&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1098133460310294528?logo=Discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/MyScaleDB&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/http/shields.io.svg?style=social&amp;amp;label=Twitter&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://myscale.com/?utm_source=github&amp;amp;utm_medium=myscaledb_readme&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Visit%20the%20Official%20Website%20%E2%86%92-rgb(21,204,116)?style=for-the-badge&#34; alt=&#34;Official Website&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://console.myscale.com/playground/?utm_source=github&amp;amp;utm_medium=myscaledb_readme&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Try%20It%20Online%20%E2%86%92-rgb(84,56,255)?style=for-the-badge&#34; alt=&#34;Playground&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.linkedin.com/company/myscale&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/LinkedIn-0077B5?style=for-the-badge&amp;amp;logo=linkedin&amp;amp;logoColor=white&#34; alt=&#34;LinkedIn&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;em&gt;Enable every developer to build production-grade GenAI applications with powerful and familiar SQL.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;What is MyScaleDB?&lt;/h2&gt; &#xA;&lt;p&gt;MyScaleDB is the SQL vector database that enables developers to build production-ready and scalable AI applications using familiar SQL. It is built on top of &lt;strong&gt;ClickHouse&lt;/strong&gt; and optimized for AI applications and solutions, allowing developers to effectively manage and process massive volumes of data.&lt;/p&gt; &#xA;&lt;p&gt;Key benefits of using MyScaleDB include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fully SQL-Compatible&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Fast, powerful, and efficient vector search, filtered search, and SQL-vector join queries.&lt;/li&gt; &#xA;   &lt;li&gt;Use SQL with vector-related functions to interact with MyScaleDB. No need to learn complex new tools or frameworks – stick with what you know and love.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Production-Ready for AI applications&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A unified and time-tested platform to manage and process structured data, text, vector, JSON, geospatial, time-series data, and more. See &lt;a href=&#34;https://myscale.com/docs/en/functions/&#34;&gt;supported data types and functions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Improved RAG accuracy by combining vectors with rich metadata and performing high-precision, high-efficiency filtered search at any ratio[^1].&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unmatched performance and scalability&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;MyScaleDB leverages cutting-edge OLAP database architecture and advanced vector algorithms for lightning-fast vector operations.&lt;/li&gt; &#xA;   &lt;li&gt;Scale your applications effortlessly and cost-effectively as your data grows.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;[^1]: See why metadata filtering is crucial for imporoving RAG accuracy &lt;a href=&#34;https://myscale.com/blog/filtered-vector-search-in-myscale/#filtered-vector-search-is-essential-for-improving-the-accuracy-of-rag-systems&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://myscale.com/product/&#34;&gt;MyScale Cloud&lt;/a&gt; provides fully-managed MyScaleDB with premium features on billion-scale data[^2]. Compared with specialized vector databases that use custom APIs, MyScale is &lt;a href=&#34;https://myscale.com/blog/myscale-outperform-specialized-vectordb&#34;&gt;more powerful, performant, and cost-effective&lt;/a&gt; while remaining simpler to use. This makes it suitable for a large community of programmers. Additionally, when compared to integrated vector databases like PostgreSQL with pgvector or ElasticSearch with vector extensions, MyScale consumes fewer resources and &lt;a href=&#34;https://myscale.com/blog/myscale-vs-postgres-opensearch&#34;&gt;achieves better accuracy and speed for structured and vector joint queries&lt;/a&gt;, such as filtered searches.&lt;/p&gt; &#xA;&lt;p&gt;[^2]: The MSTG (Multi-scale Tree Graph) algorithm is provided through &lt;a href=&#34;https://myscale.com&#34;&gt;MyScale Cloud&lt;/a&gt;, achieving high data density with disk-based storage and better indexing &amp;amp; search performance on billion-scale vector data.&lt;/p&gt; &#xA;&lt;h2&gt;Why MyScaleDB&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fully SQL compatible&lt;/li&gt; &#xA; &lt;li&gt;Unified structured and vectorized data management&lt;/li&gt; &#xA; &lt;li&gt;Millisecond search on billion-scale vectors&lt;/li&gt; &#xA; &lt;li&gt;Highly reliable &amp;amp; linearly scalable&lt;/li&gt; &#xA; &lt;li&gt;Hybrid search &amp;amp; complex SQL vector queries&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://myscale.com/docs/en/&#34;&gt;documentation&lt;/a&gt; and &lt;a href=&#34;https://myscale.com/blog/&#34;&gt;blogs&lt;/a&gt; for more about MyScale’s unique features and advantages. Our &lt;a href=&#34;https://myscale.github.io/benchmark/&#34;&gt;open-source benchmark&lt;/a&gt; provides detailed comparison with other vector database products.&lt;/p&gt; &#xA;&lt;h2&gt;Why build MyScaleDB on top of ClickHouse?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ClickHouse/ClickHouse&#34;&gt;ClickHouse&lt;/a&gt; is a popular open-source analytical database that excels at big data processing and analytics due to its columnar storage with advanced compression, skip indexing, and SIMD processing. Unlike transactional databases like PostgreSQL and MySQL, which use row storage and main optimzies for transactional processing, ClickHouse has significantly faster analytical and data scanning speeds.&lt;/p&gt; &#xA;&lt;p&gt;One of the key operations in combining structured and vector search is filtered search, which involves filtering by other attributes first and then performing vector search on the remaining data. &lt;a href=&#34;https://myscale.com/blog/filtered-vector-search-in-myscale/#behind-the-scene&#34;&gt;Columnar storage and pre-filtering are crucial&lt;/a&gt; for ensuring high accuracy and high performance in filtered search, which is why we chose to build MyScaleDB on top of ClickHouse.&lt;/p&gt; &#xA;&lt;p&gt;While we have modified ClickHouse&#39;s execution and storage engine in many ways to ensure fast and cost-effective SQL vector queries, many of the features (&lt;a href=&#34;https://github.com/ClickHouse/ClickHouse/issues/37893&#34;&gt;#37893&lt;/a&gt;, &lt;a href=&#34;https://github.com/ClickHouse/ClickHouse/pull/38048&#34;&gt;#38048&lt;/a&gt;, &lt;a href=&#34;https://github.com/ClickHouse/ClickHouse/issues/37859&#34;&gt;#37859&lt;/a&gt;, &lt;a href=&#34;https://github.com/ClickHouse/ClickHouse/issues/56728&#34;&gt;#56728&lt;/a&gt;, &lt;a href=&#34;https://github.com/ClickHouse/ClickHouse/pull/58223&#34;&gt;#58223&lt;/a&gt;) related to general SQL processing have been contributed back to the ClickHouse open source community.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;MyScale Cloud&lt;/h3&gt; &#xA;&lt;p&gt;The simplest way to use MyScaleDB is to create an instance on MyScale Cloud service. You can start from a free pod supporting 5M 768D vectors. Sign up &lt;a href=&#34;https://myscale.com/&#34;&gt;here&lt;/a&gt; and checkout &lt;a href=&#34;https://myscale.com/docs/en/quickstart/&#34;&gt;MyScaleDB QuickStart&lt;/a&gt; for more instructions.&lt;/p&gt; &#xA;&lt;h3&gt;Self-Hosted&lt;/h3&gt; &#xA;&lt;h4&gt;Using MyScaleDB Docker Image&lt;/h4&gt; &#xA;&lt;p&gt;To quickly get a MyScaleDB instance up and running, simply pull and run the latest Docker image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --name myscaledb myscale/myscaledb:1.4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will start a MyScaleDB instance with default user &lt;code&gt;default&lt;/code&gt; and no password. You can then connect to the database using &lt;code&gt;clickhouse-client&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker exec -it myscaledb clickhouse-client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using Docker Compose&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use the following recommended directory structure and the location of the &lt;code&gt;docker-compose.yaml&lt;/code&gt; file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;❯ tree myscaledb&#xA;&#xA;myscaledb&#xA;├── docker-compose.yaml&#xA;└── volumes&#xA;    1 directory, 1 file&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Define the configuration for your deployment. We recommend starting with the following configuration in your &lt;code&gt;docker-compose.yaml&lt;/code&gt; file, which you can adjust based on your specific requirements:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;version: &#39;3.7&#39;&#xA;&#xA;services:&#xA;  myscaledb:&#xA;    image: myscale/myscaledb:1.4&#xA;    tty: true&#xA;    ports:&#xA;      - &#39;8123:8123&#39;&#xA;      - &#39;9000:9000&#39;&#xA;      - &#39;8998:8998&#39;&#xA;      - &#39;9363:9363&#39;&#xA;      - &#39;9116:9116&#39;&#xA;    volumes:&#xA;      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/data:/var/lib/clickhouse&#xA;      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/log:/var/log/clickhouse-server&#xA;    deploy:&#xA;      resources:&#xA;        limits:&#xA;          cpus: &#34;16.00&#34;&#xA;          memory: 32Gb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: You can also customize the configuration file of MyScaleDB. Copy the &lt;code&gt;/etc/clickhouse-server&lt;/code&gt; directory from your &lt;code&gt;myscaledb&lt;/code&gt; container to your local drive, modify the configuration, and add a directory mapping to the &lt;code&gt;docker-compose.yaml&lt;/code&gt; file to make the configuration take effect:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/config:/etc/clickhouse-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Use the following command to get it running:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd myscaledb&#xA;docker compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Access the MyScaleDB command line interface using the following command.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker exec -it myscaledb-myscaledb-1 clickhouse-client&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;You can now run SQL statements. See &lt;a href=&#34;https://myscale.com/docs/en/quickstart/#executing-sql-queries&#34;&gt;Executing SQL Queries&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Tutorial&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://myscale.com/docs/en/vector-search/&#34;&gt;Vector Search Documentation&lt;/a&gt; for how to create a SQL table with vector index and perform vector search. It&#39;s recommended to specify &lt;code&gt;TYPE SCANN&lt;/code&gt; when creating a vector index in open source MyScaleDB.&lt;/p&gt; &#xA;&lt;h3&gt;Create a Table with Vector Column&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;-- Create a table with body_vector of length 384&#xA;CREATE TABLE default.wiki_abstract&#xA;(&#xA;    `id` UInt64,&#xA;    `body` String,&#xA;    `title` String,&#xA;    `url` String,&#xA;    `body_vector` Array(Float32),&#xA;    CONSTRAINT check_length CHECK length(body_vector) = 384&#xA;)&#xA;ENGINE = MergeTree&#xA;ORDER BY id;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Insert Data to Your Table&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;-- Insert data from parquet files on S3&#xA;INSERT INTO default.wiki_abstract SELECT * FROM s3(&#39;https://myscale-datasets.s3.ap-southeast-1.amazonaws.com/wiki_abstract_with_vector.parquet&#39;,&#39;Parquet&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create the Vector Index&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;-- Build a SCANN vector index with Cosine metric on the body_vector&#xA;ALTER TABLE default.wiki_abstract ADD VECTOR INDEX vec_idx body_vector TYPE SCANN(&#39;metric_type=Cosine&#39;);&#xA;&#xA;-- Query the index build progress from the `vector_indices` table&#xA;-- Wait until the index progress becomes `Built`&#xA;SELECT * FROM system.vector_indices;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Execute Vector Search&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;-- Perform vector search return the top-5 results&#xA;SELECT&#xA;  id,&#xA;  title,&#xA;  distance(body_vector, [-0.052, -0.0146, -0.0677, -0.0256, -0.0395, -0.0381, -0.025, 0.0911, -0.0429, -0.0592, 0.0017, -0.0358, -0.0464, -0.0189, -0.0192, 0.0544, -0.0022, -0.0292, -0.0474, -0.0286, 0.0746, -0.013, -0.0217, -0.0246, -0.0169, 0.0495, -0.0947, 0.0139, 0.0445, -0.0262, -0.0049, 0.0506, 0.004, 0.0276, 0.0063, -0.0643, 0.0059, -0.0229, -0.0315, 0.0549, 0.1427, 0.0079, 0.011, -0.0036, -0.0617, 0.0155, -0.0607, 0.0258, -0.0205, 0.0008, -0.0547, 0.0329, -0.0522, -0.0347, 0.0921, 0.0139, -0.013, 0.0716, -0.0165, 0.0257, -0.0071, 0.0084, -0.0653, 0.0091, 0.0544, -0.0192, -0.0169, -0.0017, -0.0304, 0.0427, -0.0389, 0.0921, -0.0622, -0.0196, 0.0025, 0.0214, 0.0259, -0.0493, -0.0211, -0.119, -0.0736, -0.1545, -0.0578, -0.0145, 0.0138, 0.0478, -0.0451, -0.0332, 0.0799, 0.0001, -0.0737, 0.0427, 0.0517, 0.0102, 0.0386, 0.0233, 0.0425, -0.0279, -0.0529, 0.0744, -0.0305, -0.026, 0.1229, -0.002, 0.0038, -0.0491, 0.0352, 0.0027, -0.056, -0.1044, 0.123, -0.0184, 0.1148, -0.0189, 0.0412, -0.0347, -0.0569, -0.0119, 0.0098, -0.0016, 0.0451, 0.0273, 0.0436, 0.0082, 0.0166, -0.0989, 0.0747, -0.0, 0.0306, -0.0717, -0.007, 0.0665, 0.0452, 0.0123, -0.0238, 0.0512, -0.0116, 0.0517, 0.0288, -0.0013, 0.0176, 0.0762, 0.1284, -0.031, 0.0891, -0.0286, 0.0132, 0.003, 0.0433, 0.0102, -0.0209, -0.0459, -0.0312, -0.0387, 0.0201, -0.027, 0.0243, 0.0713, 0.0359, -0.0674, -0.0747, -0.0147, 0.0489, -0.0092, -0.018, 0.0236, 0.0372, -0.0071, -0.0513, -0.0396, -0.0316, -0.0297, -0.0385, -0.062, 0.0465, 0.0539, -0.033, 0.0643, 0.061, 0.0062, 0.0245, 0.0868, 0.0523, -0.0253, 0.0157, 0.0266, 0.0124, 0.1382, -0.0107, 0.0835, -0.1057, -0.0188, -0.0786, 0.057, 0.0707, -0.0185, 0.0708, 0.0189, -0.0374, -0.0484, 0.0089, 0.0247, 0.0255, -0.0118, 0.0739, 0.0114, -0.0448, -0.016, -0.0836, 0.0107, 0.0067, -0.0535, -0.0186, -0.0042, 0.0582, -0.0731, -0.0593, 0.0299, 0.0004, -0.0299, 0.0128, -0.0549, 0.0493, 0.0, -0.0419, 0.0549, -0.0315, 0.1012, 0.0459, -0.0628, 0.0417, -0.0153, 0.0471, -0.0301, -0.0615, 0.0137, -0.0219, 0.0735, 0.083, 0.0114, -0.0326, -0.0272, 0.0642, -0.0203, 0.0557, -0.0579, 0.0883, 0.0719, 0.0007, 0.0598, -0.0431, -0.0189, -0.0593, -0.0334, 0.02, -0.0371, -0.0441, 0.0407, -0.0805, 0.0058, 0.1039, 0.0534, 0.0495, -0.0325, 0.0782, -0.0403, 0.0108, -0.0068, -0.0525, 0.0801, 0.0256, -0.0183, -0.0619, -0.0063, -0.0605, 0.0377, -0.0281, -0.0097, -0.0029, -0.106, 0.0465, -0.0033, -0.0308, 0.0357, 0.0156, -0.0406, -0.0308, 0.0013, 0.0458, 0.0231, 0.0207, -0.0828, -0.0573, 0.0298, -0.0381, 0.0935, -0.0498, -0.0979, -0.1452, 0.0835, -0.0973, -0.0172, 0.0003, 0.09, -0.0931, -0.0252, 0.008, -0.0441, -0.0938, -0.0021, 0.0885, 0.0088, 0.0034, -0.0049, 0.0217, 0.0584, -0.012, 0.059, 0.0146, -0.0, -0.0045, 0.0663, 0.0017, 0.0015, 0.0569, -0.0089, -0.0232, 0.0065, 0.0204, -0.0253, 0.1119, -0.036, 0.0125, 0.0531, 0.0584, -0.0101, -0.0593, -0.0577, -0.0656, -0.0396, 0.0525, -0.006, -0.0149, 0.003, -0.1009, -0.0281, 0.0311, -0.0088, 0.0441, -0.0056, 0.0715, 0.051, 0.0219, -0.0028, 0.0294, -0.0969, -0.0852, 0.0304, 0.0374, 0.1078, -0.0559, 0.0805, -0.0464, 0.0369, 0.0874, -0.0251, 0.0075, -0.0502, -0.0181, -0.1059, 0.0111, 0.0894, 0.0021, 0.0838, 0.0497, -0.0183, 0.0246, -0.004, -0.0828, 0.06, -0.1161, -0.0367, 0.0475, 0.0317]) AS distance&#xA;FROM default.wiki_abstract&#xA;ORDER BY distance ASC&#xA;LIMIT 5;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re committed to continuously improving and evolving MyScaleDB to meet the ever-changing needs of the AI industry. Join us on this exciting journey and be part of the revolution in AI data management!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://discord.gg/D2qpkqc4Jq&#34;&gt;Discord&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://myscale.com/contact/&#34;&gt;Support&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Get the latest MyScaleDB news or updates&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Follow &lt;a href=&#34;https://twitter.com/MyScaleDB&#34;&gt;@MyScaleDB&lt;/a&gt; on Twitter&lt;/li&gt; &#xA;   &lt;li&gt;Follow &lt;a href=&#34;https://www.linkedin.com/company/myscale/&#34;&gt;@MyScale&lt;/a&gt; on LinkedIn&lt;/li&gt; &#xA;   &lt;li&gt;Read &lt;a href=&#34;https://myscale.com/blog/&#34;&gt;MyScale Blog&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Inverted index &amp;amp; performant keyword/vector hybrid search&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Support more storage engines, e.g. &lt;code&gt;ReplacingMergeTree&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; LLM observability with MyScaleDB&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Data-centric LLM&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MyScaleDB is licensed under the Apache License, Version 2.0. View a copy of the &lt;a href=&#34;https://github.com/myscale/myscaledb?tab=License-1-ov-file&#34;&gt;License file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;We give special thanks for these open-source projects, upon which we have developed MyScaleDB:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ClickHouse/ClickHouse&#34;&gt;ClickHouse&lt;/a&gt; - A free analytics DBMS for big data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/facebookresearch/faiss&#34;&gt;Faiss&lt;/a&gt; - A library for efficient similarity search and clustering of dense vectors, by Meta&#39;s Fundamental AI Research.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nmslib/hnswlib&#34;&gt;hnswlib&lt;/a&gt; - Header-only C++/python library for fast approximate nearest neighbors.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google-research/google-research/tree/master/scann&#34;&gt;ScaNN&lt;/a&gt; - Scalable Nearest Neighbors library by Google Research.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>kasmtech/KasmVNC</title>
    <updated>2024-04-01T01:29:03Z</updated>
    <id>tag:github.com,2024-04-01:/kasmtech/KasmVNC</id>
    <link href="https://github.com/kasmtech/KasmVNC" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Modern VNC Server and client, web based and secure&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;KasmVNC - Linux Web Remote Desktop&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kasmweb.com&#34;&gt;&lt;img src=&#34;https://kasm-static-content.s3.amazonaws.com/logo_kasm.png&#34; width=&#34;300&#34;&gt;&lt;/a&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;KasmVNC provides remote web-based access to a Desktop or application. While VNC is in the name, KasmVNC differs from other VNC variants such as TigerVNC, RealVNC, and TurboVNC. KasmVNC has broken from the RFB specification which defines VNC, in order to support modern technologies and increase security. KasmVNC is accessed by users from any modern browser and does not support legacy VNC viewer applications. KasmVNC uses a modern YAML based configuration at the server and user level, allowing for ease of management.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.kasmweb.com&#34;&gt;Kasm Technologies&lt;/a&gt; developed Kasm Workspaces, the Containerized Streaming Platform. Kasm has open-sourced the Workspace docker images, which include containerized &lt;a href=&#34;https://github.com/kasmtech/workspaces-images&#34;&gt;full desktops and apps&lt;/a&gt; and &lt;a href=&#34;https://github.com/kasmtech/workspaces-core-images&#34;&gt;base images&lt;/a&gt; intended for developers to create customized streaming containers. These containers can be used standalone or within the &lt;a href=&#34;https://www.kasmweb.com&#34;&gt;Kasm Workspaces Platform&lt;/a&gt; which provides a full Enterprise feature set.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Do not use the README from the master branch&lt;/strong&gt;, unless you are compiling KasmVNC yourself from the tip of master. Use the documentation for your specific release.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kasmweb.com/kasmvnc/docs/1.0.0/index.html&#34;&gt;KasmVNC 1.0.0 Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For beta releases prior to version 1.0.0, use the README in this github project on the tagged commit for that release.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;You must disconnect and reconnect to the server after installation, for the group membership to apply.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Debian/Ubuntu/Kali&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Please choose the package for your distro here (under Assets):&#xA;# https://github.com/kasmtech/KasmVNC/releases&#xA;wget &amp;lt;package_url&amp;gt;&#xA;&#xA;sudo apt-get install ./kasmvncserver_*.deb&#xA;&#xA;# Add your user to the ssl-cert group&#xA;sudo addgroup $USER ssl-cert&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Oracle 8&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Please choose the package for your distro here (under Assets):&#xA;# https://github.com/kasmtech/KasmVNC/releases&#xA;wget &amp;lt;package_url&amp;gt;&#xA;&#xA;# Ensure KasmVNC dependencies are available&#xA;sudo dnf config-manager --set-enabled ol8_codeready_builder&#xA;sudo dnf install oracle-epel-release-el8&#xA;&#xA;sudo dnf localinstall ./kasmvncserver_*.rpm&#xA;&#xA;# Add your user to the kasmvnc-cert group&#xA;sudo usermod -a -G kasmvnc-cert $USER&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CentOS 7&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Please choose the package for your distro here (under Assets):&#xA;# https://github.com/kasmtech/KasmVNC/releases&#xA;wget &amp;lt;package_url&amp;gt;&#xA;&#xA;# Ensure KasmVNC dependencies are available&#xA;sudo yum install epel-release&#xA;&#xA;sudo yum install ./kasmvncserver_*.rpm&#xA;&#xA;# Add your user to the kasmvnc-cert group&#xA;sudo usermod -a -G kasmvnc-cert $USER&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;The following examples provide basic usage of KasmVNC with the tools provided. For full documentation on all the utilities and the runtime environment, see our &lt;a href=&#34;https://www.kasmweb.com/kasmvnc/docs/latest/index.html&#34;&gt;KasmVNC Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Start a session and be guided to setup a user and select a default desktop environment&#xA;vncserver&#xA;&#xA;# Start a session with the mate desktop environment&#xA;vncserver -select-de mate&#xA;&#xA;# Add a new user with read/write permissions&#xA;vncpasswd -u my_username -w -r&#xA;&#xA;# Tail the logs&#xA;tail -f ~/.vnc/*.log&#xA;&#xA;# Get a list of current sessions with display IDs&#xA;vncserver -list&#xA;&#xA;# Kill the VNC session with display ID :2&#xA;vncserver -kill :2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;KasmVNC is configured via YAML based configurations. The server level configuration is at &lt;code&gt;/etc/kasmvnc/kasmvnc.yaml&lt;/code&gt;. Edits to this file apply to all users. Individual users can override server global configurations by specifying them in their configuration file at &lt;code&gt;~/.vnc/kasmvnc.yaml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The following configuration shows all default settings. Many of the encoding settings can be overridden by the client, unless the &lt;code&gt;runtime_configuration.allow_client_to_override_kasm_server_settings&lt;/code&gt; setting is set tot false. By default the client is allowed to modify encoding settings.&lt;/p&gt; &#xA;&lt;p&gt;For a full description of each setting see the &lt;a href=&#34;https://www.kasmweb.com/kasmvnc/docs/latest/configuration.html&#34;&gt;configuration reference&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;desktop:&#xA;  resolution:&#xA;    width: 1024&#xA;    height: 768&#xA;  allow_resize: true&#xA;  pixel_depth: 24&#xA;  gpu:&#xA;    hw3d: false&#xA;    drinode: /dev/dri/renderD128&#xA;&#xA;network:&#xA;  protocol: http&#xA;  interface: 0.0.0.0&#xA;  websocket_port: auto&#xA;  use_ipv4: true&#xA;  use_ipv6: true&#xA;  udp:&#xA;    public_ip: auto&#xA;    port: auto&#xA;    stun_server: auto&#xA;  ssl:&#xA;    pem_certificate: /etc/ssl/certs/ssl-cert-snakeoil.pem&#xA;    pem_key: /etc/ssl/private/ssl-cert-snakeoil.key&#xA;    require_ssl: true&#xA;&#xA;user_session:&#xA;  new_session_disconnects_existing_exclusive_session: false&#xA;  concurrent_connections_prompt: false&#xA;  concurrent_connections_prompt_timeout: 10&#xA;  idle_timeout: never&#xA;&#xA;keyboard:&#xA;  remap_keys:&#xA;  ignore_numlock: false&#xA;  raw_keyboard: false&#xA;&#xA;pointer:&#xA;  enabled: true&#xA;&#xA;runtime_configuration:&#xA;  allow_client_to_override_kasm_server_settings: true&#xA;  allow_override_standard_vnc_server_settings: true&#xA;  allow_override_list:&#xA;    - pointer.enabled&#xA;    - data_loss_prevention.clipboard.server_to_client.enabled&#xA;    - data_loss_prevention.clipboard.client_to_server.enabled&#xA;    - data_loss_prevention.clipboard.server_to_client.primary_clipboard_enabled&#xA;&#xA;logging:&#xA;  log_writer_name: all&#xA;  log_dest: logfile&#xA;  level: 30&#xA;&#xA;security:&#xA;  brute_force_protection:&#xA;    blacklist_threshold: 5&#xA;    blacklist_timeout: 10&#xA;&#xA;data_loss_prevention:&#xA;  visible_region:&#xA;    # top: 10&#xA;    # left: 10&#xA;    # right: 40&#xA;    # bottom: 40&#xA;    concealed_region:&#xA;      allow_click_down: false&#xA;      allow_click_release: false&#xA;  clipboard:&#xA;    delay_between_operations: none&#xA;    allow_mimetypes:&#xA;      - chromium/x-web-custom-data&#xA;      - text/html&#xA;      - image/png&#xA;    server_to_client:&#xA;      enabled: true&#xA;      size: unlimited&#xA;      primary_clipboard_enabled: false&#xA;    client_to_server:&#xA;      enabled: true&#xA;      size: unlimited&#xA;  keyboard:&#xA;    enabled: true&#xA;    rate_limit: unlimited&#xA;  logging:&#xA;    level: off&#xA;&#xA;encoding:&#xA;  max_frame_rate: 60&#xA;  full_frame_updates: none&#xA;  rect_encoding_mode:&#xA;    min_quality: 7&#xA;    max_quality: 8&#xA;    consider_lossless_quality: 10&#xA;    rectangle_compress_threads: auto&#xA;&#xA;  video_encoding_mode:&#xA;    jpeg_quality: -1&#xA;    webp_quality: -1&#xA;    max_resolution:&#xA;      width: 1920&#xA;      height: 1080&#xA;    enter_video_encoding_mode:&#xA;      time_threshold: 5&#xA;      area_threshold: 45%&#xA;    exit_video_encoding_mode:&#xA;      time_threshold: 3&#xA;    logging:&#xA;      level: off&#xA;    scaling_algorithm: progressive_bilinear&#xA;&#xA;  compare_framebuffer: auto&#xA;  zrle_zlib_level: auto&#xA;  hextile_improved_compression: true&#xA;&#xA;server:&#xA;  http:&#xA;    headers:&#xA;      - Cross-Origin-Embedder-Policy=require-corp&#xA;      - Cross-Origin-Opener-Policy=same-origin&#xA;    httpd_directory: /usr/share/kasmvnc/www&#xA;  advanced:&#xA;    x_font_path: auto&#xA;    kasm_password_file: ${HOME}/.kasmpasswd&#xA;    x_authority_file: auto&#xA;  auto_shutdown:&#xA;    no_user_session_timeout: never&#xA;    active_user_session_timeout: never&#xA;    inactive_user_session_timeout: never&#xA;&#xA;command_line:&#xA;  prompt: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;New Features!&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Faster jpeg compression (via statically linked libjpeg-turbo)&lt;/li&gt; &#xA; &lt;li&gt;Webp image compression for better bandwidth usage&lt;/li&gt; &#xA; &lt;li&gt;Automatic mixing of webp and jpeg based on CPU availability on server&lt;/li&gt; &#xA; &lt;li&gt;Multi-threaded image encoding for smoother frame rate for servers with more cores&lt;/li&gt; &#xA; &lt;li&gt;WebRTC UDP Transit&lt;/li&gt; &#xA; &lt;li&gt;Lossless QOI Image format for Local LAN&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kasmtech/KasmVNC/wiki/Video-Rendering-Options#video-mode&#34;&gt;Full screen video detection&lt;/a&gt;, goes into configurable video mode for better full screen video playback performance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kasmtech/KasmVNC/wiki/Video-Rendering-Options#dynamic-image-quality&#34;&gt;Dynamic jpeg/webp image compression&lt;/a&gt; quality settings based on screen change rates&lt;/li&gt; &#xA; &lt;li&gt;Seemless clipboard support (on Chromium based browsers)&lt;/li&gt; &#xA; &lt;li&gt;Binary clipboard support for text, images, and formatted text (on Chromium based browsers)&lt;/li&gt; &#xA; &lt;li&gt;Allow client to set/change most configuration settings&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kasmtech/KasmVNC/wiki/Data-Loss-Prevention&#34;&gt;Data Loss Prevention features&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Key stroke logging&lt;/li&gt; &#xA;   &lt;li&gt;Clipboard logging&lt;/li&gt; &#xA;   &lt;li&gt;Max clipboard transfer size up and down&lt;/li&gt; &#xA;   &lt;li&gt;Min time between clipboard operations required&lt;/li&gt; &#xA;   &lt;li&gt;Keyboard input rate limit&lt;/li&gt; &#xA;   &lt;li&gt;Screen region selection&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Deb packages for Debian, Ubuntu, and Kali Linux included in release.&lt;/li&gt; &#xA; &lt;li&gt;RPM packages for CentOS, Oracle, OpenSUSE, Fedora. RPM packages are currently not updatable and not released, though you can build and install them. See build documentation.&lt;/li&gt; &#xA; &lt;li&gt;Web &lt;a href=&#34;https://github.com/kasmtech/KasmVNC/wiki/API&#34;&gt;API&lt;/a&gt; added for remotely controlling and getting information from KasmVNC&lt;/li&gt; &#xA; &lt;li&gt;Multi-User support with permissions that can be changed via the API&lt;/li&gt; &#xA; &lt;li&gt;Web UI uses a webpack for faster load times.&lt;/li&gt; &#xA; &lt;li&gt;Network and CPU bottleneck statistics&lt;/li&gt; &#xA; &lt;li&gt;Relative cursor support (game pointer mode)&lt;/li&gt; &#xA; &lt;li&gt;Cursor lock&lt;/li&gt; &#xA; &lt;li&gt;IME support for languages with extended characters&lt;/li&gt; &#xA; &lt;li&gt;Better mobile support&lt;/li&gt; &#xA; &lt;li&gt;DRI3 GPU acceleration with open source drivers (AMDGPU,Intel,ATI,ARM)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Future Goals:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;H264 encoding&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Compiling From Source&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/kasmtech/KasmVNC/raw/master/builder/README.md&#34;&gt;builder/README.md&lt;/a&gt;. We containerize our build systems to ensure highly repeatable builds.&lt;/p&gt; &#xA;&lt;h3&gt;License and Acknowledgements&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/kasmtech/KasmVNC/raw/master/LICENSE.TXT&#34;&gt;LICENSE.TXT&lt;/a&gt; and &lt;a href=&#34;https://github.com/kasmtech/KasmVNC/raw/master/LICENSE.TXT&#34;&gt;ACKNOWLEDGEMENTS.MD&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Taiga74164/SLA-Cheeto</title>
    <updated>2024-04-01T01:29:03Z</updated>
    <id>tag:github.com,2024-04-01:/Taiga74164/SLA-Cheeto</id>
    <link href="https://github.com/Taiga74164/SLA-Cheeto" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Solo Leveling:ARISE cheat using DLL Proxying&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;SLA-Cheeto&lt;/h2&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This project is created and shared for educational purposes only. I do not condone or endorse the use of this project for any illegal activities or unethical behavior. The use of this project is solely at the user&#39;s discretion. I am not held responsible for any misuse of the information or code provided in this repository.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h4&gt;DLL Proxy&lt;/h4&gt; &#xA;&lt;p&gt;The DLL will automatically be loaded by the game itself if the dll is in the game directory. You may only rename the dll to &lt;code&gt;version.dll&lt;/code&gt;, &lt;code&gt;winhttp.dll&lt;/code&gt; or &lt;code&gt;winmm.dll&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;How to Run&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you&#39;re &lt;a href=&#34;https://raw.githubusercontent.com/Taiga74164/SLA-Cheeto/main/#building&#34;&gt;building&lt;/a&gt;, skip to #2&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Move &lt;code&gt;winhttp.dll&lt;/code&gt; into the game directory in &lt;code&gt;/sololv&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Start the game&lt;/li&gt; &#xA; &lt;li&gt;Press insert to show the menu&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No Cooldown&lt;/li&gt; &#xA; &lt;li&gt;God Mode&lt;/li&gt; &#xA; &lt;li&gt;Damage Hack (Works for certain weapons only)&lt;/li&gt; &#xA; &lt;li&gt;Dumb Enemies (They don&#39;t attack you)&lt;/li&gt; &#xA; &lt;li&gt;Mission Time&lt;/li&gt; &#xA; &lt;li&gt;Time Scale&lt;/li&gt; &#xA; &lt;li&gt;FPS Unlocker&lt;/li&gt; &#xA; &lt;li&gt;Skip Intro Movie&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshot&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Taiga74164/SLA-Cheeto/main/src/res/Solo_Leveling_ARISE_4BRSUmbeJd.png&#34; alt=&#34;menu&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone the repository: &lt;code&gt;git clone --recurse-submodules https://github.com/Taiga74164/SLA-Cheeto&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you encounter the error depicted in the &lt;a href=&#34;https://raw.githubusercontent.com/Taiga74164/SLA-Cheeto/main/src/res/error.png&#34;&gt;screenshot&lt;/a&gt;, replace &lt;strong&gt;{PATH_TO_GAME}&lt;/strong&gt; with the actual path to your game in &lt;code&gt;PostBuildEvent.cmd&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;em&gt;OR&lt;/em&gt;&lt;/strong&gt; before building, you can initially create a &lt;code&gt;PostBuildEvent.cmd&lt;/code&gt; with: &lt;code&gt;xcopy /f /y &#34;{PROJECT_PATH}\x64\Release\winhttp.dll&#34; &#34;{PATH_TO_GAME}\winhttp.dll*&#34;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Remember to replace the placeholders with your own paths.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the repo (&lt;a href=&#34;https://github.com/Taiga74164/SLA-Cheeto/fork&#34;&gt;https://github.com/Taiga74164/SLA-Cheeto/fork&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Create your feature branch.&lt;/li&gt; &#xA; &lt;li&gt;Commit your changes.&lt;/li&gt; &#xA; &lt;li&gt;Push your changes to the branch.&lt;/li&gt; &#xA; &lt;li&gt;Create a new pull request.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>