<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-14T01:24:35Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hamed-deriv/flutter_tearable_cloth</title>
    <updated>2023-10-14T01:24:35Z</updated>
    <id>tag:github.com,2023-10-14:/hamed-deriv/flutter_tearable_cloth</id>
    <link href="https://github.com/hamed-deriv/flutter_tearable_cloth" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Implementation of tearable cloth in Flutter.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flutter Cloth Simulation&lt;/h1&gt; &#xA;&lt;p&gt;This documentation provides an overview of the classes and their roles, each class plays a crucial role in achieving the interactive and dynamic cloth behavior. Use this documentation as a reference to understand the structure and purpose of each component in the project.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hamed-deriv/flutter_tearable_cloth/master/flutter_tearable_cloth.gif&#34; alt=&#34;Cloth Simulation&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hamed-deriv/flutter_tearable_cloth/master/#clothpainter-class&#34;&gt;ClothPainter Class&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hamed-deriv/flutter_tearable_cloth/master/#cloth-class&#34;&gt;Cloth Class&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hamed-deriv/flutter_tearable_cloth/master/#point-class&#34;&gt;Point Class&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hamed-deriv/flutter_tearable_cloth/master/#constraint-class&#34;&gt;Constraint Class&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hamed-deriv/flutter_tearable_cloth/master/#pointer-class&#34;&gt;Pointer Class&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hamed-deriv/flutter_tearable_cloth/master/#settings&#34;&gt;Settings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hamed-deriv/flutter_tearable_cloth/master/#inspiration&#34;&gt;Inspiration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hamed-deriv/flutter_tearable_cloth/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;ClothPainter Class&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;ClothPainter&lt;/code&gt; class is responsible for painting the cloth on the canvas.&lt;/p&gt; &#xA;&lt;h3&gt;Attributes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;cloth&lt;/code&gt;: An instance of the &lt;code&gt;Cloth&lt;/code&gt; class representing the cloth.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;showHeatmap&lt;/code&gt;: A boolean value indicating whether to display a heatmap effect.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pointMode&lt;/code&gt;: A &lt;code&gt;PointMode&lt;/code&gt; enum value representing the point drawing mode.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Methods&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;paint(Canvas canvas, Size size)&lt;/code&gt;: Paints the cloth on the canvas.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;shouldRepaint(CustomPainter oldDelegate)&lt;/code&gt;: Determines if a repaint is required.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Cloth Class&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;Cloth&lt;/code&gt; class represents the cloth and is responsible for its creation and simulation.&lt;/p&gt; &#xA;&lt;h3&gt;Attributes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;_points&lt;/code&gt;: A list of &lt;code&gt;Point&lt;/code&gt; objects representing the cloth&#39;s points.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Methods&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;update()&lt;/code&gt;: Updates the cloth&#39;s simulation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;draw(Canvas canvas, Paint paint, bool showHeatmap, PointMode pointMode)&lt;/code&gt;: Draws the cloth on the canvas.&lt;/li&gt; &#xA; &lt;li&gt;Other helper methods to handle cloth simulation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Point Class&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;Point&lt;/code&gt; class represents a point in the cloth and handles its behavior.&lt;/p&gt; &#xA;&lt;h3&gt;Attributes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;position&lt;/code&gt;: The position of the point.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pointer&lt;/code&gt;: An instance of the &lt;code&gt;Pointer&lt;/code&gt; class representing user interaction.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;velocity&lt;/code&gt;: The velocity of the point.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pinPosition&lt;/code&gt;: The position at which the point is pinned.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Methods&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;update(double delta)&lt;/code&gt;: Updates the point&#39;s position.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;draw(Canvas canvas, Paint paint, PointMode pointMode)&lt;/code&gt;: Draws the point on the canvas.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;resolveConstraints()&lt;/code&gt;: Resolves constraints related to the point.&lt;/li&gt; &#xA; &lt;li&gt;Other methods for point behavior.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Constraint Class&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;Constraint&lt;/code&gt; class defines a constraint between two points in the cloth.&lt;/p&gt; &#xA;&lt;h3&gt;Attributes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;p1&lt;/code&gt;: The first &lt;code&gt;Point&lt;/code&gt; involved in the constraint.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;p2&lt;/code&gt;: The second &lt;code&gt;Point&lt;/code&gt; involved in the constraint.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;length&lt;/code&gt;: The desired length of the constraint.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Methods&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;resolve()&lt;/code&gt;: Resolves the constraint to maintain the desired length.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;draw(Canvas canvas, Paint paint, PointMode pointMode)&lt;/code&gt;: Draws the constraint on the canvas.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Pointer Class&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;Pointer&lt;/code&gt; class represents user interaction with the cloth.&lt;/p&gt; &#xA;&lt;h3&gt;Attributes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;pressed&lt;/code&gt;: A boolean indicating if the pointer is pressed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;isActionPressed&lt;/code&gt;: A boolean indicating if the pointer is in an action (e.g., tearing the cloth).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;position&lt;/code&gt;: The current position of the pointer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;previousPosition&lt;/code&gt;: The previous position of the pointer.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Settings&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;Settings&lt;/code&gt; class defines constants and settings for the cloth simulation.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-dart&#34;&gt;const double canvasWidth = 800;&#xA;const double canvasHeight = 600;&#xA;const double clothWidth = 80;&#xA;const double clothHeight = 60;&#xA;&#xA;const double gravity = 1200;&#xA;const int physicsAccuracy = 3;&#xA;const double friction = 0.98;&#xA;&#xA;const double spacing = 5;&#xA;const double tearDistance = 50;&#xA;const Offset start = Offset(canvasWidth * 0.5 - (clothWidth * spacing) * 0.5, 20);&#xA;&#xA;const double pointerInfluence = 40;&#xA;const double pointerCut = 7;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Inspiration&lt;/h2&gt; &#xA;&lt;p&gt;This project is inspired by &lt;a href=&#34;https://codepen.io/dissimulate/pen/eZxEBO&#34;&gt;Tearable Cloth&lt;/a&gt; by &lt;a href=&#34;https://codepen.io/dissimulate&#34;&gt;Dissimulate&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href=&#34;https://raw.githubusercontent.com/hamed-deriv/flutter_tearable_cloth/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>AcademySoftwareFoundation/OpenImageIO</title>
    <updated>2023-10-14T01:24:35Z</updated>
    <id>tag:github.com,2023-10-14:/AcademySoftwareFoundation/OpenImageIO</id>
    <link href="https://github.com/AcademySoftwareFoundation/OpenImageIO" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Reading, writing, and processing images in a wide variety of file formats, using a format-agnostic API, aimed at VFX applications.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/AcademySoftwareFoundation/OpenImageIO/master/ASWF/logos/openimageio-horizontal-gradient.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/AcademySoftwareFoundation/OpenImageIO/raw/master/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache2.0-blue.svg?style=flat-square&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/AcademySoftwareFoundation/OpenImageIO/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/AcademySoftwareFoundation/OpenImageIO/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/2694&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/2694/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://repology.org/project/openimageio/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/latest-versions/openimageio.svg?sanitize=true&#34; alt=&#34;latest packaged version(s)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Mission statement&lt;/strong&gt;: OpenImageIO is a toolset for reading, writing, and manipulating image files of any image file format relevant to VFX / animation via a format-agnostic API with a feature set, scalability, and robustness needed for feature film production.&lt;/p&gt; &#xA;&lt;p&gt;The primary target audience for OIIO is VFX studios and developers of tools such as renderers, compositors, viewers, and other image-related software you&#39;d find in a production pipeline.&lt;/p&gt; &#xA;&lt;p&gt;OpenImageIO consists of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Simple but powerful ImageInput and ImageOutput APIs that provide an abstraction for reading and writing image files of nearly any format, without the calling application needing to know any of the details of these file formats, and indeed without the calling application needing to be aware of which formats are available.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A library that manages subclasses of ImageInput and ImageOutput that implement I/O from specific file formats, with each file format&#39;s implementation stored as a plug-in. Therefore, an application using OpenImageIO&#39;s APIs can read and write any image file for which a plugin can be found at runtime.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Plugins implementing I/O for several popular image file formats, including TIFF, JPEG/JFIF, OpenEXR, PNG, HDR/RGBE, ICO, BMP, Targa, JPEG-2000, RMan Zfile, FITS, DDS, Softimage PIC, PNM, DPX, Cineon, IFF, OpenVDB, Ptex, Photoshop PSD, Wavefront RLA, SGI, WebP, GIF, DICOM, HEIF/HEIC/AVIF, many &#34;RAW&#34; digital camera formats, and a variety of movie formats (readable as individual frames). More are being developed all the time.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Several command line image tools based on these classes, including oiiotool (command-line format conversion and image processing), iinfo (print detailed info about images), iconvert (convert among formats, data types, or modify metadata), idiff (compare images), igrep (search images for matching metadata), and iv (an image viewer). Because these tools are based on ImageInput/ImageOutput, they work with any image formats for which ImageIO plugins are available.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;An ImageCache class that transparently manages a cache so that it can access truly vast amounts of image data (tens of thousands of image files totaling multiple TB) very efficiently using only a tiny amount (tens of megabytes at most) of runtime memory.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A TextureSystem class that provides filtered MIP-map texture lookups, atop the nice caching behavior of ImageCache. This is used in commercial renderers and has been used on many large VFX and animated films.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ImageBuf and ImageBufAlgo functions -- a simple class for storing and manipulating whole images in memory, and a collection of the most useful computations you might want to do involving those images, including many image processing operations.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Python bindings for all of the major APIs.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🏢 Project administration and Licensing&lt;/h2&gt; &#xA;&lt;p&gt;OpenImageIO is (c) Copyright Contributors to the OpenImageIO project.&lt;/p&gt; &#xA;&lt;p&gt;For original code, we use the &lt;a href=&#34;https://raw.githubusercontent.com/AcademySoftwareFoundation/OpenImageIO/master/LICENSE.md&#34;&gt;Apache-2.0 license&lt;/a&gt;, and for documentation, the &lt;a href=&#34;http://creativecommons.org/licenses/by/4.0/&#34;&gt;Creative Commons Attribution 4.0 Unported License&lt;/a&gt;. In 2023 we asked historical users to &lt;a href=&#34;https://raw.githubusercontent.com/AcademySoftwareFoundation/OpenImageIO/master/RELICENSING.md&#34;&gt;relicense&lt;/a&gt; from the original BSD-3-clause license to Apache-2.0, and over 99.75% of lines of code have been relicensed to Apache-2.0. A small amount of code incorporated into this repository from other projects are covered by compatible &lt;a href=&#34;https://raw.githubusercontent.com/AcademySoftwareFoundation/OpenImageIO/master/THIRD-PARTY.md&#34;&gt;third-party open source licenses&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The OpenImageIO project is part of the &lt;a href=&#34;https://www.aswf.io/&#34;&gt;Academy Software Foundation&lt;/a&gt;, a part of the Linux Foundation formed in collaboration with the Academy of Motion Picture Arts and Sciences. The &lt;a href=&#34;https://raw.githubusercontent.com/AcademySoftwareFoundation/OpenImageIO/master/aswf/Technical-Charter.md&#34;&gt;Technical Charter&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/AcademySoftwareFoundation/OpenImageIO/master/GOVERNANCE.md&#34;&gt;Project Governance&lt;/a&gt; explain how the project is run, who makes decisions, etc. Please be aware of our &lt;a href=&#34;https://raw.githubusercontent.com/AcademySoftwareFoundation/OpenImageIO/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;💁 User Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://openimageio.readthedocs.io/&#34;&gt;OpenImageIO Documentation on ReadTheDocs&lt;/a&gt; is the best place to start if you are interested in how to use OpenImageIO, its APIs, its component programs (once they are built). There is also a &lt;a href=&#34;https://readthedocs.org/projects/openimageio/downloads/pdf/latest/&#34;&gt;PDF version&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;👷 Building and installing OpenImageIO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AcademySoftwareFoundation/OpenImageIO/master/INSTALL.md&#34;&gt;Build and installation instructions&lt;/a&gt; for OpenImageIO. Such as it is. This could use some work, particularly for Windows.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚑 Contact &amp;amp; reporting problems&lt;/h2&gt; &#xA;&lt;p&gt;Simple &#34;how do I...&#34;, &#34;I&#39;m having trouble&#34;, or &#34;is this a bug&#34; questions are best asked on the &lt;a href=&#34;https://lists.aswf.io/g/oiio-dev&#34;&gt;oiio-dev developer mail list&lt;/a&gt;. That&#39;s where the most people will see it and potentially be able to answer your question quickly (more so than a GH &#34;issue&#34;). For quick questions, you could also try the &lt;a href=&#34;https://slack.aswf.io&#34;&gt;ASWF Slack&lt;/a&gt; &lt;code&gt;#openimageio&lt;/code&gt; channel.&lt;/p&gt; &#xA;&lt;p&gt;Bugs, build problems, and discovered vulnerabilities that you are relatively certain is a legit problem in the code, and &lt;strong&gt;for which you can give clear instructions for how to reproduce&lt;/strong&gt;, should be &lt;a href=&#34;https://github.com/AcademySoftwareFoundation/OpenImageIO/issues&#34;&gt;reported as issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If confidentiality precludes a public question or issue, you may contact us privately at &lt;a href=&#34;https://raw.githubusercontent.com/AcademySoftwareFoundation/OpenImageIO/master/info@openimageio.org&#34;&gt;info@openimageio.org&lt;/a&gt;, or for security-related issues &lt;a href=&#34;https://raw.githubusercontent.com/AcademySoftwareFoundation/OpenImageIO/master/security@openimageio.org&#34;&gt;security@openimageio.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🔧 Contributing and developer documentation&lt;/h2&gt; &#xA;&lt;p&gt;OpenImageIO welcomes code contributions, and &lt;a href=&#34;https://raw.githubusercontent.com/AcademySoftwareFoundation/OpenImageIO/master/CREDITS.md&#34;&gt;nearly 200 people&lt;/a&gt; have done so over the years. We take code contributions via the usual GitHub pull request (PR) mechanism.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AcademySoftwareFoundation/OpenImageIO/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; has detailed instructions about the development process.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AcademySoftwareFoundation/OpenImageIO/master/RELEASING.md&#34;&gt;RELEASING&lt;/a&gt; explains our policies and procedures for making releases. We have a major, possibly-compatibility-breaking, release annually in September/October, and minor bug fix and safe feature addition release at the beginning of every month.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AcademySoftwareFoundation/OpenImageIO/master/src/doc/Building_the_docs.md&#34;&gt;Building the docs&lt;/a&gt; has instructions for building the documentation locally, which may be helpful if you are editing the documentation in nontrivial ways and want to preview the appearance.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;☎️ Communications channels and additional resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.openimageio.org&#34;&gt;Main web page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/AcademySoftwareFoundation/OpenImageIO&#34;&gt;GitHub project page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lists.aswf.io/g/oiio-dev&#34;&gt;Developer mail list&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://slack.aswf.io&#34;&gt;ASWF Slack&lt;/a&gt; (look for the &lt;code&gt;#openimageio&lt;/code&gt; channel)&lt;/li&gt; &#xA; &lt;li&gt;Biweekly Technical Steering Committee (TSC) Zoom meetings are on the &lt;a href=&#34;https://www.aswf.io/meeting-calendar/&#34;&gt;ASWF Calendar&lt;/a&gt; (click on the OpenImageIO meeting entries, every second Monday, to get the Zoom link, anyone may join)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>