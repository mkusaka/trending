<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-19T01:31:48Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ByteWelder/Decktility</title>
    <updated>2023-05-19T01:31:48Z</updated>
    <id>tag:github.com,2023-05-19:/ByteWelder/Decktility</id>
    <link href="https://github.com/ByteWelder/Decktility" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A handheld PC&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Decktility&lt;/h1&gt; &#xA;&lt;p&gt;Decktility is a handheld PC, inspired by &lt;a href=&#34;https://yarh.io/&#34;&gt;Yarh.io Micro 2&lt;/a&gt; and &lt;a href=&#34;https://www.clockworkpi.com/uconsole&#34;&gt;uConsole&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is built with a Raspbery Pi CM4 and BigTreeTech Pad 5, and has about 6 hours of battery life.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ByteWelder/Decktility/main/docs/pics/decktility.jpg&#34; alt=&#34;Decktility device mockup&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ByteWelder/Decktility/main/docs/pics/decktility-internals.png&#34; alt=&#34;Decktility device mockup&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Project status&lt;/h1&gt; &#xA;&lt;p&gt;This project is in &lt;strong&gt;beta&lt;/strong&gt;. Upcoming changes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;M2 heat insert nuts are being replaced (&lt;code&gt;3.5 x 3 mm&lt;/code&gt; to &lt;code&gt;3.2 x 2 mm&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Electronics plateau lowered from &lt;code&gt;3 mm&lt;/code&gt; to &lt;code&gt;2 mm&lt;/code&gt; to create more space for wiring.&lt;/li&gt; &#xA; &lt;li&gt;Electronics plateau improvements for new FET setup&lt;/li&gt; &#xA; &lt;li&gt;Battery status kernel driver support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compact design: &lt;code&gt;124.4 x 144.0 x 16.3 mm&lt;/code&gt; (w x h x d). The battery lid portrudes by &lt;code&gt;10.2 mm&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Weighs approximately &lt;code&gt;375 g&lt;/code&gt;. (depends on filament weight)&lt;/li&gt; &#xA; &lt;li&gt;Powered by a Raspberry Pi CM4 and a BTT Pad 5 (&lt;code&gt;800x480&lt;/code&gt; resolution with capacitive touch)&lt;/li&gt; &#xA; &lt;li&gt;Replaceable batteries, for when &lt;code&gt;6 h&lt;/code&gt; of battery life isn&#39;t enough. (*)&lt;/li&gt; &#xA; &lt;li&gt;USB-C charging&lt;/li&gt; &#xA; &lt;li&gt;Power management (reports to the Pi and refuses to turn on when battery is critically low)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;(*) Using US18650VTC6 cells. Power draw was tested with an idle Discord tab in Chrome.&lt;/p&gt; &#xA;&lt;h1&gt;Software&lt;/h1&gt; &#xA;&lt;h2&gt;Raspberry Pi&lt;/h2&gt; &#xA;&lt;p&gt;The Pi can be given the OS of your chosing. Consider &lt;a href=&#34;https://www.raspberrypi.com/software/&#34;&gt;Raspberry Pi OS&lt;/a&gt; or &lt;a href=&#34;https://www.kali.org/docs/arm/raspberry-pi-4/&#34;&gt;Kali&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Check the to the &lt;a href=&#34;https://github.com/bigtreetech/Raspberry-Pad/tree/master/Pad5&#34;&gt;Pad 5 Manual&lt;/a&gt; for installing the OS and setting up some of the hardware.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/ByteWelder/Decktility/main/powermanager-client&#34;&gt;Power Manager Client&lt;/a&gt; is used to communicate charging status and battery status to the Arduino Nano. This info can be used to show warnings or even auto-shutdown the Pi.&lt;/p&gt; &#xA;&lt;h2&gt;Arduino Nano / Power Manager&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/ByteWelder/Decktility/main/powermanager&#34;&gt;Power Manager&lt;/a&gt; controls the power connection to the Pi and the keyboard. Power is enabled/disabled depending on the battery voltage.&lt;/p&gt; &#xA;&lt;p&gt;The power manager measures battery and charging status, and can send it over I2C to the Pi. (note: there is an issue with the latest power fet changes, so I2C support is WIP)&lt;/p&gt; &#xA;&lt;p&gt;The project can be opened and built with Arduino IDE v2 from &lt;a href=&#34;https://www.arduino.cc/&#34;&gt;Arduino.cc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Case&lt;/h1&gt; &#xA;&lt;p&gt;The case is available as open hardware via [OnShape]&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cad.onshape.com/documents/bcf3b5212bb2ba6496cfe6cf/v/9458e81329733e3846e63f3d/e/4a5e1b73d1adb9b17f2035b1&#34;&gt;Beta v0.6&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cad.onshape.com/documents/bcf3b5212bb2ba6496cfe6cf/w/d70be68a60b4c80f684ba746/e/f2fb47dfa2dbdc91d7666ed1&#34;&gt;Main/WIP&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: Don&#39;t print from the Main branch, because it will possibly have unfinished and/or untested changes.&lt;/p&gt; &#xA;&lt;p&gt;STL and STEP files will be posted on GitHub when I&#39;ve worked out the last few issues. Meanwhile, you can export them directly from OnShape by right-clicking on the parts and chosing &#34;Export&#34;.&lt;/p&gt; &#xA;&lt;h1&gt;Building&lt;/h1&gt; &#xA;&lt;p&gt;Considering the project is in beta status, I advise you to wait a bit until it is in a more stable state. Some components and designs are expected to change. I store the major changes of the project in OnShape as different versions, so you should have a reference when major changes occur.&lt;/p&gt; &#xA;&lt;p&gt;This project comes with no warranty. I take no responsibility whatsoever. Build this project at your own risk.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ByteWelder/Decktility/main/docs/bom.md&#34;&gt;Bill of materials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ByteWelder/Decktility/main/docs/printing.md&#34;&gt;Printing guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ByteWelder/Decktility/main/docs/assembling.md&#34;&gt;Assembling&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;All hardware, software and other content in this project are licensed under &lt;code&gt;Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/ByteWelder/Decktility/main/LICENSE.md&#34;&gt;LICENSE.md&lt;/a&gt; for details. For a short overview and translations go to the &lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/legalcode&#34;&gt;Creative Commons website&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>UniversalToolCompiler/UTC_LiquidShader</title>
    <updated>2023-05-19T01:31:48Z</updated>
    <id>tag:github.com,2023-05-19:/UniversalToolCompiler/UTC_LiquidShader</id>
    <link href="https://github.com/UniversalToolCompiler/UTC_LiquidShader" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dynamic liquid shader for UE5.2 using Substrate material.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;UTC Liquid Shader&lt;/h1&gt; &#xA;&lt;p&gt;Liquid Shader Plugin for UE5.2 using the new Substrate material.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Download it&lt;/strong&gt; &lt;a href=&#34;https://github.com/UniversalToolCompiler/UTC_LiquidShader/releases&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;How to use it&lt;/strong&gt; &lt;a href=&#34;https://github.com/UniversalToolCompiler/UTC_LiquidShader/wiki/UE5-Dynamic-Liquid-Shader:-Tutorial&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;How does it work&lt;/strong&gt; &lt;a href=&#34;https://github.com/UniversalToolCompiler/UTC_LiquidShader/wiki/UE5-Dynamic-Liquid-Shader:-Technical-Breakdown&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/UniversalToolCompiler/UTC_LiquidShader/raw/b30f104de9c1c71991c728b72e40451d9a6531c0/OutContent/Gifs/LiquidShaderBottle.gif&#34;&gt; &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Blueforcer/awtrix-light</title>
    <updated>2023-05-19T01:31:48Z</updated>
    <id>tag:github.com,2023-05-19:/Blueforcer/awtrix-light</id>
    <link href="https://github.com/Blueforcer/awtrix-light" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Custom firmware for the Ulanzi Smart Pixel clock or self made awtrix. Getting started is easy as 1-2-3&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;AWTRIX LIGHT&lt;/h1&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/blueforcer/awtrix-light/total?style=flat-square&#34; alt=&#34;GitHub all releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/sponsors/blueforcer?style=flat-square&#34; alt=&#34;GitHub Sponsors&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/546407049148366859?label=Discord&amp;amp;style=flat-square&#34; alt=&#34;Discord&#34;&gt;&lt;/p&gt; &#xA; &lt;a href=&#34;http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=N0NKPJzGHuA&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;http://img.youtube.com/vi/N0NKPJzGHuA/mqdefault.jpg&#34; alt=&#34;Watch the video&#34; height=&#34;280&#34; border=&#34;10&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;AWTRIX Light is an openâ€‘source custom firmware for the &lt;a href=&#34;https://www.ulanzi.com/products/ulanzi-pixel-smart-clock-2882&#34;&gt;Ulanzi Smart Pixel clock TC001&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;AWL meant to be a companion for your smarthome like HomeAssistant, IOBroker, FHEM, NodeRed and so on.&lt;br&gt; Even if you don&#39;t have a Smarthome system, but would like to experiment with NodeRed or N8N, you are still welcome to join us.&lt;br&gt; Our discord community with over 1800 people, are willing to help you!&lt;/p&gt; &#xA;&lt;p&gt;It is ready to use straight out of the box, with time, date, temperature, and humidity pages pre-installed. You don&#39;t need to do anything other than turning it on to start using these features.&lt;/p&gt; &#xA;&lt;p&gt;However, for those with more advanced skills, the customization options available with customapps and mqtt commands allows you to take Awtrix Light to its full potential. Just send all your customapps from your smarthome via MQTT and update it in realtime. The powerful icon system bring your ideas to life and enjoy a hassle-free experience&lt;/p&gt; &#xA;&lt;p&gt;Join the thousands of satisfied awtrix users who have already chosen Awtrix 2 and Awtrix Light and experience the difference today!&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Easy to setup&lt;/li&gt; &#xA; &lt;li&gt;Online flasher&lt;/li&gt; &#xA; &lt;li&gt;Homeassistant discovery&lt;/li&gt; &#xA; &lt;li&gt;Onscreen menu where you can change your settings directly on the device&lt;/li&gt; &#xA; &lt;li&gt;Pre-installed Apps like time, date, temperature, humidity and battery&lt;/li&gt; &#xA; &lt;li&gt;Add customapps without recompiling straight from your Smarthome.&lt;/li&gt; &#xA; &lt;li&gt;Notification support&lt;/li&gt; &#xA; &lt;li&gt;Animated icons&lt;/li&gt; &#xA; &lt;li&gt;Custom icons without recompiling&lt;/li&gt; &#xA; &lt;li&gt;Easy to use icon system&lt;/li&gt; &#xA; &lt;li&gt;Powerful MQTT commands&lt;/li&gt; &#xA; &lt;li&gt;HTTP API&lt;/li&gt; &#xA; &lt;li&gt;RTTTL melody player&lt;/li&gt; &#xA; &lt;li&gt;Integrated filebrowser&lt;/li&gt; &#xA; &lt;li&gt;No cloud&lt;/li&gt; &#xA; &lt;li&gt;No telemetry&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;Starting is easy as 1-2-3 &lt;a href=&#34;https://blueforcer.github.io/awtrix-light/&#34;&gt;with the documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Support&lt;/h1&gt; &#xA;&lt;p&gt;If you like my work, please consider supporting the project.&lt;br&gt; &lt;a href=&#34;https://github.com/sponsors/Blueforcer&#34;&gt;https://github.com/sponsors/Blueforcer&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.buymeacoffee.com/blueforcer&#34;&gt;https://www.buymeacoffee.com/blueforcer&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.paypal.me/blueforcer&#34;&gt;https://www.paypal.me/blueforcer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contributors&lt;/h1&gt; &#xA;&lt;a href=&#34;https://github.com/Blueforcer/awtrix-light/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=Blueforcer/awtrix-light&#34;&gt; &lt;/a&gt; &#xA;&lt;h1&gt;Community&lt;/h1&gt; &#xA;&lt;p&gt;Join the discord channel with over 1800 Users&lt;br&gt; &lt;a href=&#34;https://discord.gg/cyBCpdx&#34;&gt;https://discord.gg/cyBCpdx&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Disclaimer&lt;/h1&gt; &#xA;&lt;p&gt;This open-source software is not affiliated with or endorsed by the company Ulanzi in any way. Use of the software is at your own risk and discretion, and i assume no liability for any potential damages or issues that may arise from using the software. It is important to be aware that using this open-source software comes without direct support or guarantees from the company Ulanzi.&lt;/p&gt;</summary>
  </entry>
</feed>