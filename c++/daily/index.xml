<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-24T01:33:02Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>openscad/openscad</title>
    <updated>2023-01-24T01:33:02Z</updated>
    <id>tag:github.com,2023-01-24:/openscad/openscad</id>
    <link href="https://github.com/openscad/openscad" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenSCAD - The Programmers Solid 3D CAD Modeller&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/openscad/openscad/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/checks-status/openscad/openscad/master.svg?logo=github&amp;amp;label=build&amp;amp;logoColor=black&amp;amp;colorA=f9d72c&amp;amp;style=plastic&#34; alt=&#34;GitHub (master)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/openscad/openscad/tree/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/circleci/project/github/openscad/openscad/master.svg?logo=circleci&amp;amp;logoColor=black&amp;amp;colorA=f9d72c&amp;amp;style=plastic&#34; alt=&#34;CircleCI (master)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://scan.coverity.com/projects/2510&#34;&gt;&lt;img src=&#34;https://img.shields.io/coverity/scan/2510.svg?colorA=f9d72c&amp;amp;logoColor=black&amp;amp;style=plastic&#34; alt=&#34;Coverity Scan&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kiwiirc.com/client/irc.libera.chat/#openscad&#34;&gt;&lt;img src=&#34;https://kiwiirc.com/buttons/irc.libera.chat/openscad.png&#34; alt=&#34;Visit our IRC channel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;What is OpenSCAD?&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/openscad/donate&#34;&gt;&lt;img align=&#34;right&#34; src=&#34;https://opencollective.com/openscad/donate/button@2x.png?color=white&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt;OpenSCAD is a software for creating solid 3D CAD objects. It is free software and available for Linux/UNIX, MS Windows and macOS.&lt;/p&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unlike most free software for creating 3D models (such as the famous application Blender), OpenSCAD focuses on the CAD aspects rather than the artistic aspects of 3D modeling. Thus this might be the application you are looking for when you are planning to create 3D models of machine parts but probably not the tool for creating computer-animated movies.&lt;/p&gt; &#xA;&lt;p&gt;OpenSCAD is not an interactive modeler. Instead it is more like a 3D-compiler that reads a script file that describes the object and renders the 3D model from this script file (see examples below). This gives you, the designer, complete control over the modeling process and enables you to easily change any step in the modeling process or make designs that are defined by configurable parameters.&lt;/p&gt; &#xA;&lt;p&gt;OpenSCAD provides two main modeling techniques: First there is constructive solid geometry (aka CSG) and second there is extrusion of 2D outlines. As the data exchange format for these 2D outlines Autocad DXF files are used. In addition to 2D paths for extrusion it is also possible to read design parameters from DXF files. Besides DXF files OpenSCAD can read and create 3D models in the STL and OFF file formats.&lt;/p&gt; &#xA;&lt;h1&gt;Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openscad/openscad/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openscad/openscad/master/#documentation&#34;&gt;Documentation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openscad/openscad/master/#building-openscad&#34;&gt;Building OpenSCAD&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openscad/openscad/master/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openscad/openscad/master/#getting-the-source-code&#34;&gt;Getting the source code&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openscad/openscad/master/#building-for-macos&#34;&gt;Building for macOS&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openscad/openscad/master/#building-for-linuxbsd&#34;&gt;Building for Linux/BSD&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openscad/openscad/master/#building-for-linuxbsd-on-systems-with-older-or-missing-dependencies&#34;&gt;Building for Linux/BSD on systems with older or missing dependencies&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openscad/openscad/master/#building-for-windows&#34;&gt;Building for Windows&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openscad/openscad/master/#compilation&#34;&gt;Compilation&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Getting started&lt;/h1&gt; &#xA;&lt;p&gt;You can download the latest binaries of OpenSCAD at &lt;a href=&#34;https://www.openscad.org/downloads.html&#34;&gt;https://www.openscad.org/downloads.html&lt;/a&gt;. Install binaries as you would any other software.&lt;/p&gt; &#xA;&lt;p&gt;When you open OpenSCAD, you&#39;ll see three frames within the window. The left frame is where you&#39;ll write code to model 3D objects. The right frame is where you&#39;ll see the 3D rendering of your model.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s make a tree! Type the following code into the left frame:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cylinder(h = 30, r = 8);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then render the 3D model by hitting F5. Now you can see a cylinder for the trunk in our tree. Now let&#39;s add the bushy/leafy part of the tree represented by a sphere. To do so, we will union a cylinder and a sphere.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;union() {&#xA;  cylinder(h = 30, r = 8);&#xA;  sphere(20);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;But, it&#39;s not quite right! The bushy/leafy are around the base of the tree. We need to move the sphere up the z-axis.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;union() {&#xA;  cylinder(h = 30, r = 8);&#xA;  translate([0, 0, 40]) sphere(20);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And that&#39;s it! You made your first 3D model! There are other primitive shapes that you can combine with other set operations (union, intersection, difference) and transformations (rotate, scale, translate) to make complex models! Check out all the other language features in the &lt;a href=&#34;https://en.wikibooks.org/wiki/OpenSCAD_User_Manual&#34;&gt;OpenSCAD Manual&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;Have a look at the OpenSCAD Homepage (&lt;a href=&#34;https://www.openscad.org/documentation.html&#34;&gt;https://www.openscad.org/documentation.html&lt;/a&gt;) for documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Building OpenSCAD&lt;/h2&gt; &#xA;&lt;p&gt;To build OpenSCAD from source, follow the instructions for the platform applicable to you below.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;To build OpenSCAD, you need some libraries and tools. The version numbers in brackets specify the versions which have been used for development. Other versions may or may not work as well.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re using a newer version of Ubuntu, you can install these libraries from aptitude. If you&#39;re using Mac, or an older Linux/BSD, there are build scripts that download and compile the libraries from source. Follow the instructions for the platform you&#39;re compiling on below.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A C++ compiler supporting C++17&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cmake.org/&#34;&gt;cmake (3.5 -&amp;gt;)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://qt.io/&#34;&gt;Qt (5.4 -&amp;gt;)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://riverbankcomputing.com/software/qscintilla/&#34;&gt;QScintilla2 (2.9 -&amp;gt;)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cgal.org/&#34;&gt;CGAL (5.4 -&amp;gt;)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gmplib.org/&#34;&gt;GMP (5.x)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mpfr.org/&#34;&gt;MPFR (3.x)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.boost.org/&#34;&gt;boost (1.56 -&amp;gt;)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.opencsg.org/&#34;&gt;OpenCSG (1.4.2 -&amp;gt;)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://glew.sourceforge.net/&#34;&gt;GLEW (1.5.4 -&amp;gt;)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eigen.tuxfamily.org/&#34;&gt;Eigen (3.x)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.gnome.org/glib/&#34;&gt;glib2 (2.x)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fontconfig.org/&#34;&gt;fontconfig (2.10 -&amp;gt; )&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://freetype.org/&#34;&gt;freetype2 (2.4 -&amp;gt; )&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.freedesktop.org/wiki/Software/HarfBuzz/&#34;&gt;harfbuzz (0.9.19 -&amp;gt; )&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://libzip.org/&#34;&gt;libzip (0.10.1 -&amp;gt; )&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/bison/&#34;&gt;Bison (2.4 -&amp;gt; )&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://flex.sourceforge.net/&#34;&gt;Flex (2.5.35 -&amp;gt; )&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.freedesktop.org/wiki/Software/pkg-config/&#34;&gt;pkg-config (0.26 -&amp;gt; )&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/double-conversion/&#34;&gt;double-conversion (2.0.1 -&amp;gt; )&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Getting the source code&lt;/h3&gt; &#xA;&lt;p&gt;Install git (&lt;a href=&#34;https://git-scm.com/&#34;&gt;https://git-scm.com/&lt;/a&gt;) onto your system. Then run a clone:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/openscad/openscad.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will download the latest sources into a directory named &lt;code&gt;openscad&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To pull the MCAD library (&lt;a href=&#34;https://github.com/openscad/MCAD&#34;&gt;https://github.com/openscad/MCAD&lt;/a&gt;), do the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd openscad&#xA;git submodule update --init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building for macOS&lt;/h3&gt; &#xA;&lt;p&gt;Prerequisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Xcode&lt;/li&gt; &#xA; &lt;li&gt;automake, libtool, cmake, pkg-config, wget (we recommend installing these using Homebrew)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Install Dependencies:&lt;/p&gt; &#xA;&lt;p&gt;After building dependencies using one of the following options, follow the instructions in the &lt;em&gt;Compilation&lt;/em&gt; section.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;From source&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Run the script that sets up the environment variables:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; source scripts/setenv-macos.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then run the script to compile all the dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; ./scripts/macosx-build-dependencies.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Homebrew&lt;/strong&gt; (assumes &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; is already installed)&lt;/p&gt; &lt;pre&gt;&lt;code&gt; ./scripts/macosx-build-homebrew.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Building for Linux/BSD&lt;/h3&gt; &#xA;&lt;p&gt;First, make sure that you have git installed (often packaged as &#39;git-core&#39; or &#39;scmgit&#39;). Once you&#39;ve cloned this git repository, download and install the dependency packages listed above using your system&#39;s package manager. A convenience script is provided that can help with this process on some systems:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo ./scripts/uni-get-dependencies.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After installing dependencies, check their versions. You can run this script to help you:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./scripts/check-dependencies.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Take care that you don&#39;t have old local copies anywhere (&lt;code&gt;/usr/local/&lt;/code&gt;). If all dependencies are present and of a high enough version, skip ahead to the Compilation instructions.&lt;/p&gt; &#xA;&lt;h3&gt;Building for Linux/BSD on systems with older or missing dependencies&lt;/h3&gt; &#xA;&lt;p&gt;If some of your system dependency libraries are missing or old, then you can download and build newer versions into &lt;code&gt;$HOME/openscad_deps&lt;/code&gt; by following this process. First, run the script that sets up the environment variables.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;source ./scripts/setenv-unibuild.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run the script to compile all the prerequisite libraries above:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./scripts/uni-build-dependencies.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that huge dependencies like gcc, qt, or glib2 are not included here, only the smaller ones (boost, CGAL, opencsg, etc). After the build, again check dependencies.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./scripts/check-dependencies.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After that, follow the Compilation instructions below.&lt;/p&gt; &#xA;&lt;h3&gt;Building for Windows&lt;/h3&gt; &#xA;&lt;p&gt;OpenSCAD for Windows is usually cross-compiled from Linux. If you wish to attempt an MSVC build on Windows, please see this site: &lt;a href=&#34;https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Building_on_Windows&#34;&gt;https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Building_on_Windows&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To cross-build, first make sure that you have all necessary dependencies of the MXE project ( listed at &lt;a href=&#34;https://mxe.cc/#requirements&#34;&gt;https://mxe.cc/#requirements&lt;/a&gt; ). Don&#39;t install MXE itself, the scripts below will do that for you under &lt;code&gt;$HOME/openscad_deps/mxe&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then get your development tools installed to get GCC. Then after you&#39;ve cloned this git repository, start a new clean bash shell and run the script that sets up the environment variables.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;source ./scripts/setenv-mingw-xbuild.sh 64&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run the script to download &amp;amp; compile all the prerequisite libraries above:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./scripts/mingw-x-build-dependencies.sh 64&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that this process can take several hours, and tens of gigabytes of disk space, as it uses the &lt;a href=&#34;https://mxe.cc&#34;&gt;https://mxe.cc&lt;/a&gt; system to cross-build many libraries. After it is complete, build OpenSCAD and package it to an installer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./scripts/release-common.sh mingw64&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a 32-bit Windows cross-build, replace 64 with 32 in the above instructions.&lt;/p&gt; &#xA;&lt;h3&gt;Compilation&lt;/h3&gt; &#xA;&lt;p&gt;First, run &lt;code&gt;mkdir build &amp;amp;&amp;amp; cd build &amp;amp;&amp;amp; cmake .. -DEXPERIMENTAL=1&lt;/code&gt; to generate a Makefile.&lt;/p&gt; &#xA;&lt;p&gt;Then run &lt;code&gt;make -j&lt;/code&gt;. Finally, on Linux you might run &lt;code&gt;make install&lt;/code&gt; as root.&lt;/p&gt; &#xA;&lt;p&gt;If you had problems compiling from source, raise a new issue in the &lt;a href=&#34;https://github.com/openscad/openscad/issues&#34;&gt;issue tracker on the github page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This site and it&#39;s subpages can also be helpful: &lt;a href=&#34;https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Building_OpenSCAD_from_Sources&#34;&gt;https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Building_OpenSCAD_from_Sources&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Once built, you can run tests with &lt;code&gt;cd build/tests &amp;amp;&amp;amp; ctest -j&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Running CI workflows locally&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;a href=&#34;https://circleci.com/docs/2.0/local-cli/&#34;&gt;circleci-cli&lt;/a&gt; (you&#39;ll need an API key)&lt;/p&gt; &lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: we also use GitHub Workflows, but only to run tests on Windows (which we cross-build for in the Linux-based CircleCI workflows below). Also, &lt;a href=&#34;https://github.com/nektos/act&#34;&gt;act&lt;/a&gt; doesn&#39;t like our submodule setup anyway.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the CI jobs&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# When &#34;successful&#34;, these will fail to upload at the very end of the workflow.&#xA;circleci local execute --job  openscad-mxe-64bit&#xA;circleci local execute --job  openscad-mxe-32bit&#xA;circleci local execute --job  openscad-appimage-64bit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: openscad-macos can&#39;t be built locally.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If/when GCC gets randomly killed, give docker more RAM (e.g. 4GB per concurrent image you plan to run)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To debug the jobs more interactively, you can go the manual route (inspect .circleci/config.yml to get the actual docker image you need)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --entrypoint=/bin/bash -it openscad/mxe-x86_64-gui:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then once you get the console:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/%your username%/openscad.git workspace&#xA;cd workspace&#xA;git checkout %your branch%&#xA;git submodule init&#xA;git submodule update&#xA;&#xA;# Then execute the commands from .circleci/config.yml:&#xA;#    export NUMCPU=2&#xA;#    ...&#xA;#    ./scripts/release-common.sh -snapshot -mingw64 -v &#34;$OPENSCAD_VERSION&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>ValveSoftware/source-sdk-2013</title>
    <updated>2023-01-24T01:33:02Z</updated>
    <id>tag:github.com,2023-01-24:/ValveSoftware/source-sdk-2013</id>
    <link href="https://github.com/ValveSoftware/source-sdk-2013" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The 2013 edition of the Source SDK&lt;/p&gt;&lt;hr&gt;&lt;pre&gt;&lt;code&gt;           SOURCE 1 SDK LICENSE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Source SDK Copyright(c) Valve Corp.&lt;/p&gt; &#xA;&lt;p&gt;THIS DOCUMENT DESCRIBES A CONTRACT BETWEEN YOU AND VALVE CORPORATION (&#34;Valve&#34;). PLEASE READ IT BEFORE DOWNLOADING OR USING THE SOURCE ENGINE SDK (&#34;SDK&#34;). BY DOWNLOADING AND/OR USING THE SOURCE ENGINE SDK YOU ACCEPT THIS LICENSE. IF YOU DO NOT AGREE TO THE TERMS OF THIS LICENSE PLEASE DON’T DOWNLOAD OR USE THE SDK.&lt;/p&gt; &#xA;&lt;p&gt;You may, free of charge, download and use the SDK to develop a modified Valve game running on the Source engine. You may distribute your modified Valve game in source and object code form, but only for free. Terms of use for Valve games are found in the Steam Subscriber Agreement located here: &lt;a href=&#34;http://store.steampowered.com/subscriber_agreement/&#34;&gt;http://store.steampowered.com/subscriber_agreement/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You may copy, modify, and distribute the SDK and any modifications you make to the SDK in source and object code form, but only for free. Any distribution of this SDK must include this LICENSE file and thirdpartylegalnotices.txt.&lt;/p&gt; &#xA;&lt;p&gt;Any distribution of the SDK or a substantial portion of the SDK must include the above copyright notice and the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;DISCLAIMER OF WARRANTIES.  THE SOURCE SDK AND ANY &#xA;OTHER MATERIAL DOWNLOADED BY LICENSEE IS PROVIDED &#xA;&#34;AS IS&#34;.  VALVE AND ITS SUPPLIERS DISCLAIM ALL &#xA;WARRANTIES WITH RESPECT TO THE SDK, EITHER EXPRESS &#xA;OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, IMPLIED &#xA;WARRANTIES OF MERCHANTABILITY, NON-INFRINGEMENT, &#xA;TITLE AND FITNESS FOR A PARTICULAR PURPOSE.  &#xA;&#xA;LIMITATION OF LIABILITY.  IN NO EVENT SHALL VALVE OR &#xA;ITS SUPPLIERS BE LIABLE FOR ANY SPECIAL, INCIDENTAL, &#xA;INDIRECT, OR CONSEQUENTIAL DAMAGES WHATSOEVER &#xA;(INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF &#xA;BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF &#xA;BUSINESS INFORMATION, OR ANY OTHER PECUNIARY LOSS) &#xA;ARISING OUT OF THE USE OF OR INABILITY TO USE THE &#xA;ENGINE AND/OR THE SDK, EVEN IF VALVE HAS BEEN &#xA;ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.  &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you would like to use the SDK for a commercial purpose, please contact Valve at &lt;a href=&#34;mailto:sourceengine@valvesoftware.com&#34;&gt;sourceengine@valvesoftware.com&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>