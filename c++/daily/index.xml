<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-10T01:35:02Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mongodb/mongo</title>
    <updated>2022-09-10T01:35:02Z</updated>
    <id>tag:github.com,2022-09-10:/mongodb/mongo</id>
    <link href="https://github.com/mongodb/mongo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The MongoDB Database&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mongodb/mongo/master/docs/leaf.svg?sanitize=true&#34; alt=&#34;Logo&#34;&gt; MongoDB README&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to MongoDB!&lt;/p&gt; &#xA;&lt;h2&gt;Components&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;mongod&lt;/code&gt; - The database server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mongos&lt;/code&gt; - Sharding router.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mongo&lt;/code&gt; - The database shell (uses interactive javascript).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Utilities&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;install_compass&lt;/code&gt; - Installs MongoDB Compass for your platform.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/mongodb/mongo/master/docs/building.md&#34;&gt;Building MongoDB&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;For command line options invoke:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./mongod --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run a single server database:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ sudo mkdir -p /data/db&#xA;  $ ./mongod&#xA;  $&#xA;  $ # The mongo javascript shell connects to localhost and test database by default:&#xA;  $ ./mongo&#xA;  &amp;gt; help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installing Compass&lt;/h2&gt; &#xA;&lt;p&gt;You can install compass using the &lt;code&gt;install_compass&lt;/code&gt; script packaged with MongoDB:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ ./install_compass&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will download the appropriate MongoDB Compass package for your platform and install it.&lt;/p&gt; &#xA;&lt;h2&gt;Drivers&lt;/h2&gt; &#xA;&lt;p&gt;Client drivers for most programming languages are available at &lt;a href=&#34;https://docs.mongodb.com/manual/applications/drivers/&#34;&gt;https://docs.mongodb.com/manual/applications/drivers/&lt;/a&gt;. Use the shell (&lt;code&gt;mongo&lt;/code&gt;) for administrative tasks.&lt;/p&gt; &#xA;&lt;h2&gt;Bug Reports&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/mongodb/mongo/wiki/Submit-Bug-Reports&#34;&gt;https://github.com/mongodb/mongo/wiki/Submit-Bug-Reports&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Packaging&lt;/h2&gt; &#xA;&lt;p&gt;Packages are created dynamically by the &lt;a href=&#34;https://raw.githubusercontent.com/mongodb/mongo/master/buildscripts/packager.py&#34;&gt;buildscripts/packager.py&lt;/a&gt; script. This will generate RPM and Debian packages.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/&#34;&gt;https://docs.mongodb.com/manual/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Cloud Hosted MongoDB&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.mongodb.com/cloud/atlas&#34;&gt;https://www.mongodb.com/cloud/atlas&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Forums&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://community.mongodb.com&#34;&gt;https://community.mongodb.com&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Technical questions about using MongoDB.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://community.mongodb.com/c/server-dev&#34;&gt;https://community.mongodb.com/c/server-dev&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Technical questions about building and developing MongoDB.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Learn MongoDB&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://university.mongodb.com/&#34;&gt;https://university.mongodb.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;MongoDB is free and the source is available. Versions released prior to October 16, 2018 are published under the AGPL. All versions released after October 16, 2018, including patch fixes for prior versions, are published under the &lt;a href=&#34;https://raw.githubusercontent.com/mongodb/mongo/master/LICENSE-Community.txt&#34;&gt;Server Side Public License (SSPL) v1&lt;/a&gt;. See individual files for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Mauler125/r5sdk</title>
    <updated>2022-09-10T01:35:02Z</updated>
    <id>tag:github.com,2022-09-10:/Mauler125/r5sdk</id>
    <link href="https://github.com/Mauler125/r5sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Description&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fully documented SDK to be used for the &#39;Apex Legends&#39; Source Engine.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Instructions&lt;/h2&gt; &#xA;&lt;p&gt;To compile and use the SDK:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download or clone the solution to &lt;code&gt;&amp;lt;gamedir&amp;gt;\platform\&lt;/code&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The results should be &lt;code&gt;r5apex.exe\platform\r5apexsdk\detours.sln&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;detours.sln&lt;/code&gt; in Visual Studio and compile the project. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The launcher executable and worker dll will be copied over automatically to the root directory of the game.&lt;/li&gt; &#xA;   &lt;li&gt;If this does not happen, copy &lt;code&gt;r5apexsdk64.dll&lt;/code&gt; and &lt;code&gt;r5reloaded.exe&lt;/code&gt; to the game folder (where &lt;code&gt;r5apex.exe&lt;/code&gt; resides).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;r5reloaded.exe&lt;/code&gt; and follow instructions in the console to launch in desired mode.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Launch options&lt;/h2&gt; &#xA;&lt;p&gt;There are 4 launch options, all of them use separate &lt;code&gt;startup_*.cfg&lt;/code&gt; files to pass command line arguments to the game. All preconfigured launch parameters are available from the release page of this repository.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Launch option 1 [DEBUG GAME] is for research and development purposes on the game.&lt;/li&gt; &#xA; &lt;li&gt;Launch option 2 [RELEASE GAME] is for playing the game and creating servers.&lt;/li&gt; &#xA; &lt;li&gt;Launch option 3 [DEBUG DEDICATED] is for research and development purposes on the dedicated server.&lt;/li&gt; &#xA; &lt;li&gt;Launch option 4 [RELEASE DEDICATED] is for running and hosting dedicated servers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;code&gt;startup_*.cfg&lt;/code&gt; files are loaded from &lt;code&gt;&amp;lt;gamedir&amp;gt;\platform\cfg\startup_*.cfg&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Launch option 1 [DEBUG GAME] loads &lt;code&gt;startup_debug.cfg&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Launch option 2 [RELEASE GAME] loads &lt;code&gt;startup_retail.cfg&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Launch option 3 [DEBUG DEDICATED] loads &lt;code&gt;startup_dedi_debug.cfg&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Launch option 4 [RELEASE DEDICATED] loads &lt;code&gt;startup_dedi_retail.cfg&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can add or remove launch parameters from these files. Be carefull, as some are necessary to run the SDK with the game.&lt;/p&gt; &#xA;&lt;h2&gt;Launch parameters&lt;/h2&gt; &#xA;&lt;p&gt;When the &lt;code&gt;-wconsole&lt;/code&gt; parameter is passed to the game, a external debug terminal will pop up in which everything of the game gets logged to (this is passed by default on debug launch options). This does not count for the dedicated server, the debug terminal is always present as this is a console application.&lt;/p&gt; &#xA;&lt;p&gt;When the &lt;code&gt;-ansiclr&lt;/code&gt; parameter is passed to the game or dedicated server, color logging will be enabled to enhance output readability. It is recommended to use this unless your system does not support &lt;code&gt;VirtualTerminalLevel 1&lt;/code&gt;. This is passed by default.&lt;/p&gt; &#xA;&lt;h2&gt;Note [Important]&lt;/h2&gt; &#xA;&lt;p&gt;This is not a cheat or hack. Do not attempt to use this on the latest version of the game! The only versions currently supported are &lt;code&gt;R5pc_r5launch_N1094_CL456479_2019_10_30_05_20_PM&lt;/code&gt; and anything below.&lt;/p&gt; &#xA;&lt;p&gt;The following builds are tested and guaranteed to work:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;S0 &lt;code&gt;R5pc_r5launch_J1557_CL387233_2019_01_28_07_43_PM&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;S0 &lt;code&gt;R5pc_r5launch_J1595_CL392411_2019_02_15_11_25_AM&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;S0 &lt;code&gt;R5pc_r5launch_J1624A_CL394493_2019_02_24_09_29_PM&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;S1 &lt;code&gt;R5pc_r5launch_N52A_CL399039_2019_03_12_03_21_PM&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;S1 &lt;code&gt;R5pc_r5launch_N29_CL406647_2019_04_09_06_28_PM&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;S1 &lt;code&gt;R5pc_r5live_N10_CL423814_2019_06_18_07_11_PM&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;S2 &lt;code&gt;R5pc_r5launch_N191_CL429743_2019_07_11_01_04_PM&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;S2 &lt;code&gt;R5pc_r5launch_N428_CL436418_2019_08_07_09_35_PM&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;S2 &lt;code&gt;R5pc_r5launch_N676_CL443034_2019_09_06_02_23_PM&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;S3 &lt;code&gt;R5pc_r5launch_N1094_CL456479_2019_10_30_05_20_PM&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;R5Net DISCLAIMER&lt;/h2&gt; &#xA;&lt;p&gt;When hosting to the Server Browser (R5Net) you will stream your IP address to the database which will be stored there until you stop hosting the server. This is needed so you can connect to other player&#39;s servers.&lt;/p&gt; &#xA;&lt;p&gt;There is a Checkbox in the server browser called &lt;code&gt;Server Visibility&lt;/code&gt; that is by default set to &lt;code&gt;Offline&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Offline&lt;/code&gt; allows you to play the game offline without any data being broadcasted to the R5Net master server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Hidden&lt;/code&gt; allows you to play the game online, but your server will not be listed in the server borwser list people with a token can connect to your server, similar to the real private matches of Apex Legends.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Public&lt;/code&gt; allows you to play online, your server will be listed in the server browser list and everyone except for banned people can youn your server.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Alternative way is just to host the server without ticking the server browser checkbox and just give the people you want to connect the IP including the port.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>typesense/typesense</title>
    <updated>2022-09-10T01:35:02Z</updated>
    <id>tag:github.com,2022-09-10:/typesense/typesense</id>
    <link href="https://github.com/typesense/typesense" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open Source alternative to Algolia and an Easier-to-Use alternative to ElasticSearch ⚡ 🔍 ✨ Fast, typo tolerant, in-memory fuzzy Search Engine for building delightful search experiences&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://typesense.org&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/typesense/typesense/main/assets/typesense_logo.svg?sanitize=true&#34; alt=&#34;Typesense&#34; width=&#34;298&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Typesense is a fast, typo-tolerant search engine for building delightful search experiences. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; An Open Source Algolia Alternative &amp;amp; &lt;br&gt; An Easier-to-Use ElasticSearch Alternative &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://circleci.com/gh/typesense/typesense&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/typesense/typesense.svg?style=shield&amp;amp;circle-token=1addd775339738a3d90869ddd8201110d561feaa&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/typesense/typesense/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/typesense/typesense&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/typesense&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/typesense/typesense?label=github%20stars&#34;&gt;&lt;/a&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://typesense.org&#34;&gt;Website&lt;/a&gt; | &lt;a href=&#34;https://typesense.org/docs/&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://github.com/typesense/typesense/projects/2&#34;&gt;Roadmap&lt;/a&gt; | &lt;a href=&#34;https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg&#34;&gt;Slack Community&lt;/a&gt; | &lt;a href=&#34;https://twitter.com/typesense&#34;&gt;Twitter&lt;/a&gt; | &lt;a href=&#34;https://calendly.com/jason-typesense/typesense-office-hours&#34;&gt;Office Hours&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/typesense/typesense/main/assets/typesense_books_demo.gif?raw=true&#34; alt=&#34;Typesense Demo&#34; width=&#34;459&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;✨ Here are a couple of &lt;strong&gt;live demos&lt;/strong&gt; that show Typesense in action on large datasets:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Search a 32M songs dataset from MusicBrainz: &lt;a href=&#34;https://songs-search.typesense.org/&#34;&gt;songs-search.typesense.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Search a 28M books dataset from OpenLibrary: &lt;a href=&#34;https://books-search.typesense.org/&#34;&gt;books-search.typesense.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Search a 2M recipe dataset from RecipeNLG: &lt;a href=&#34;https://recipe-search.typesense.org/&#34;&gt;recipe-search.typesense.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Search 1M Git commit messages from the Linux Kernel: &lt;a href=&#34;https://linux-commits-search.typesense.org/&#34;&gt;linux-commits-search.typesense.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Spellchecker with type-ahead, with 333K English words: &lt;a href=&#34;https://spellcheck.typesense.org/&#34;&gt;spellcheck.typesense.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;An E-Commerce Store Browsing experience: &lt;a href=&#34;https://ecommerce-store.typesense.org/&#34;&gt;ecommerce-store.typesense.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GeoSearch / Browsing experience: &lt;a href=&#34;https://airbnb-geosearch.typesense.org/&#34;&gt;airbnb-geosearch.typesense.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Search / Browse xkcd comics by topic: &lt;a href=&#34;https://xkcd-search.typesense.org/&#34;&gt;xkcd-search.typesense.org&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;🗣️ 🎥 If you prefer watching videos:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Here&#39;s one where we introduce Typesense and show a walk-through: &lt;a href=&#34;https://youtu.be/F4mB0x_B1AE?t=144&#34;&gt;https://youtu.be/F4mB0x_B1AE?t=144&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Here&#39;s our &lt;a href=&#34;https://github.com/typesense/typesense/projects/2&#34;&gt;roadmap&lt;/a&gt; call from Q1 2022: &lt;a href=&#34;https://aviyel.com/events/297/typesense-community-call-q1-2022-roadmap-and-contributor-spotlight&#34;&gt;https://aviyel.com/events/297/typesense-community-call-q1-2022-roadmap-and-contributor-spotlight&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check out Typesense&#39;s recent mention during Google I/O Developer Keynote: &lt;a href=&#34;https://youtu.be/qBkyU1TJKDg?t=2399&#34;&gt;https://youtu.be/qBkyU1TJKDg?t=2399&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typesense/typesense/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typesense/typesense/main/#benchmarks&#34;&gt;Benchmarks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typesense/typesense/main/#roadmap&#34;&gt;Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typesense/typesense/main/#whos-using-this&#34;&gt;Who&#39;s using this&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typesense/typesense/main/#install&#34;&gt;Install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typesense/typesense/main/#quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typesense/typesense/main/#step-by-step-walk-through&#34;&gt;Step-by-step Walk-through&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typesense/typesense/main/#api-documentation&#34;&gt;API Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typesense/typesense/main/#api-clients&#34;&gt;API Clients&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typesense/typesense/main/#search-ui-components&#34;&gt;Search UI Components&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typesense/typesense/main/#faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typesense/typesense/main/#support&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typesense/typesense/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typesense/typesense/main/#getting-latest-updates&#34;&gt;Getting Latest Updates&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/typesense/typesense/main/#build-from-source&#34;&gt;Build from Source&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Typo Tolerance:&lt;/strong&gt; Handles typographical errors elegantly, out-of-the-box.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Simple and Delightful:&lt;/strong&gt; Simple to set-up, integrate with, operate and scale.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;⚡ Blazing Fast:&lt;/strong&gt; Built in C++. Meticulously architected from the ground-up for low-latency (&amp;lt;50ms) instant searches.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tunable Ranking:&lt;/strong&gt; Easy to tailor your search results to perfection.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sorting:&lt;/strong&gt; Sort results based on a particular field at query time (helpful for features like &#34;Sort by Price (asc)&#34;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Faceting &amp;amp; Filtering:&lt;/strong&gt; Drill down and refine results.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Grouping &amp;amp; Distinct:&lt;/strong&gt; Group similar results together to show more variety.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Federated Search:&lt;/strong&gt; Search across multiple collections (indices) in a single HTTP request.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Geo Search:&lt;/strong&gt; Search and sort by results around a geographic location.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Scoped API Keys:&lt;/strong&gt; Generate API keys that only allow access to certain records, for multi-tenant applications.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Synonyms:&lt;/strong&gt; Define words as equivalents of each other, so searching for a word will also return results for the synonyms defined.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Curation &amp;amp; Merchandizing:&lt;/strong&gt; Boost particular records to a fixed position in the search results, to feature them.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Raft-based Clustering:&lt;/strong&gt; Setup a distributed cluster that is highly available.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Seamless Version Upgrades:&lt;/strong&gt; As new versions of Typesense come out, upgrading is as simple as swapping out the binary and restarting Typesense.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;No Runtime Dependencies:&lt;/strong&gt; Typesense is a single binary that you can run locally or in production with a single command.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Don&#39;t see a feature on this list?&lt;/strong&gt; Search our issue tracker if someone has already requested it and add a comment to it explaining your use-case, or open a new issue if not. We prioritize our roadmap based on user feedback, so we&#39;d love to hear from you.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s Typesense&#39;s public roadmap: &lt;a href=&#34;https://github.com/typesense/typesense/projects/2&#34;&gt;https://github.com/typesense/typesense/projects/2&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The first column also explains how we prioritize features, how you can influence prioritization and our release cadence.&lt;/p&gt; &#xA;&lt;h2&gt;Benchmarks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A dataset containing &lt;strong&gt;2.2 Million recipes&lt;/strong&gt; (recipe names and ingredients): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Took up about 900MB of RAM when indexed in Typesense&lt;/li&gt; &#xA;   &lt;li&gt;Took 3.6mins to index all 2.2M records&lt;/li&gt; &#xA;   &lt;li&gt;On a server with 4vCPUs, Typesense was able to handle a concurrency of &lt;strong&gt;104 concurrent search queries per second&lt;/strong&gt;, with an average search processing time of &lt;strong&gt;11ms&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;A dataset containing &lt;strong&gt;28 Million books&lt;/strong&gt; (book titles, authors and categories): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Took up about 14GB of RAM when indexed in Typesense&lt;/li&gt; &#xA;   &lt;li&gt;Took 78mins to index all 28M records&lt;/li&gt; &#xA;   &lt;li&gt;On a server with 4vCPUs, Typesense was able to handle a concurrency of &lt;strong&gt;46 concurrent search queries per second&lt;/strong&gt;, with an average search processing time of &lt;strong&gt;28ms&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;With a dataset containing &lt;strong&gt;3 Million products&lt;/strong&gt; (Amazon product data), Typesense was able to handle a throughput of &lt;strong&gt;250 concurrent search queries per second&lt;/strong&gt; on an 8-vCPU 3-node Highly Available Typesense cluster.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We&#39;d love to benchmark with larger datasets, if we can find large ones in the public domain. If you have any suggestions for structured datasets that are open, please let us know by opening an issue. We&#39;d also be delighted if you&#39;re able to share benchmarks from your own large datasets. Please send us a PR!&lt;/p&gt; &#xA;&lt;h2&gt;Who&#39;s using this?&lt;/h2&gt; &#xA;&lt;p&gt;Typesense is used by a range of users across different industries. We&#39;ve only recently started documenting who&#39;s using it in our &lt;a href=&#34;https://raw.githubusercontent.com/typesense/typesense/main/SHOWCASE.md&#34;&gt;Showcase&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to be included in the list, please feel free to edit &lt;a href=&#34;https://raw.githubusercontent.com/typesense/typesense/main/SHOWCASE.md&#34;&gt;SHOWCASE.md&lt;/a&gt; and send us a PR.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll also see a list of user logos on the &lt;a href=&#34;https://cloud.typesense.org&#34;&gt;Typesense Cloud&lt;/a&gt; home page.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Option 1:&lt;/strong&gt; You can download the &lt;a href=&#34;https://typesense.org/downloads&#34;&gt;binary packages&lt;/a&gt; that we publish for Linux (x86-64) and Mac.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Option 2:&lt;/strong&gt; You can also run Typesense from our &lt;a href=&#34;https://hub.docker.com/r/typesense/typesense&#34;&gt;official Docker image&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Option 3:&lt;/strong&gt; Spin up a managed cluster with &lt;a href=&#34;https://cloud.typesense.org&#34;&gt;Typesense Cloud&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cloud.typesense.org&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/typesense/typesense/main/assets/deploy_with_typesense_cloud.svg?raw=true&#34; alt=&#34;Deploy with Typesense Cloud&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s a quick example showcasing how you can create a collection, index a document and search it on Typesense.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s begin by starting the Typesense server via Docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -p 8108:8108 -v/tmp/data:/data typesense/typesense:0.23.1 --data-dir /data --api-key=Hu52dwsas2AdxdE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We have &lt;a href=&#34;https://raw.githubusercontent.com/typesense/typesense/main/#api-clients&#34;&gt;API Clients&lt;/a&gt; in a couple of languages, but let&#39;s use the Python client for this example.&lt;/p&gt; &#xA;&lt;p&gt;Install the Python client for Typesense:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install typesense&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can now initialize the client and create a &lt;code&gt;companies&lt;/code&gt; collection:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import typesense&#xA;&#xA;client = typesense.Client({&#xA;  &#39;api_key&#39;: &#39;Hu52dwsas2AdxdE&#39;,&#xA;  &#39;nodes&#39;: [{&#xA;    &#39;host&#39;: &#39;localhost&#39;,&#xA;    &#39;port&#39;: &#39;8108&#39;,&#xA;    &#39;protocol&#39;: &#39;http&#39;&#xA;  }],&#xA;  &#39;connection_timeout_seconds&#39;: 2&#xA;})&#xA;&#xA;create_response = client.collections.create({&#xA;  &#34;name&#34;: &#34;companies&#34;,&#xA;  &#34;fields&#34;: [&#xA;    {&#34;name&#34;: &#34;company_name&#34;, &#34;type&#34;: &#34;string&#34; },&#xA;    {&#34;name&#34;: &#34;num_employees&#34;, &#34;type&#34;: &#34;int32&#34; },&#xA;    {&#34;name&#34;: &#34;country&#34;, &#34;type&#34;: &#34;string&#34;, &#34;facet&#34;: True }&#xA;  ],&#xA;  &#34;default_sorting_field&#34;: &#34;num_employees&#34;&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, let&#39;s add a document to the collection we just created:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;document = {&#xA; &#34;id&#34;: &#34;124&#34;,&#xA; &#34;company_name&#34;: &#34;Stark Industries&#34;,&#xA; &#34;num_employees&#34;: 5215,&#xA; &#34;country&#34;: &#34;USA&#34;&#xA;}&#xA;&#xA;client.collections[&#39;companies&#39;].documents.create(document)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, let&#39;s search for the document we just indexed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;search_parameters = {&#xA;  &#39;q&#39;         : &#39;stork&#39;,&#xA;  &#39;query_by&#39;  : &#39;company_name&#39;,&#xA;  &#39;filter_by&#39; : &#39;num_employees:&amp;gt;100&#39;,&#xA;  &#39;sort_by&#39;   : &#39;num_employees:desc&#39;&#xA;}&#xA;&#xA;client.collections[&#39;companies&#39;].documents.search(search_parameters)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Did you notice the typo in the query text?&lt;/strong&gt; No big deal. Typesense handles typographic errors out-of-the-box!&lt;/p&gt; &#xA;&lt;h2&gt;Step-by-step Walk-through&lt;/h2&gt; &#xA;&lt;p&gt;A step-by-step walk-through is available on our website &lt;a href=&#34;https://typesense.org/guide&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This will guide you through the process of starting up a Typesense server, indexing data in it and querying the data set.&lt;/p&gt; &#xA;&lt;h2&gt;API Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s our official API documentation, available on our website: &lt;a href=&#34;https://typesense.org/api&#34;&gt;https://typesense.org/api&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you notice any issues with the documentation or walk-through, please let us know or send us a PR here: &lt;a href=&#34;https://github.com/typesense/typesense-website&#34;&gt;https://github.com/typesense/typesense-website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;API Clients&lt;/h2&gt; &#xA;&lt;p&gt;While you can definitely use CURL to interact with Typesense Server directly, we offer official API clients to simplify using Typesense from your language of choice. The API Clients come built-in with a smart retry strategy to ensure that API calls made via them are resilient, especially in an HA setup.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typesense/typesense-js&#34;&gt;typesense-js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typesense/typesense-php&#34;&gt;typesense-php&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typesense/typesense-python&#34;&gt;typesense-python&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typesense/typesense-ruby&#34;&gt;typesense-ruby&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If we don&#39;t offer an API client in your language, you can still use any popular HTTP client library to access Typesense&#39;s APIs directly.&lt;/p&gt; &#xA;&lt;p&gt;Here are some community-contributed clients and integrations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typesense/typesense-go&#34;&gt;API client for Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/typesense/typesense-dart&#34;&gt;API client for Dart&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/DAXGRID/typesense-dotnet&#34;&gt;API client for C#&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devloopsnet/laravel-scout-typesense-engine&#34;&gt;Laravel Scout driver&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acseo/TypesenseBundle&#34;&gt;Symfony integration&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We welcome community contributions to add more official client libraries and integrations. Please reach out to us at &lt;a href=&#34;mailto:contact@typsense.org&#34;&gt;contact@typsense.org&lt;/a&gt; or open an issue on Github to collaborate with us on the architecture. 🙏&lt;/p&gt; &#xA;&lt;h2&gt;Search UI Components&lt;/h2&gt; &#xA;&lt;p&gt;You can use our &lt;a href=&#34;https://github.com/typesense/typesense-instantsearch-adapter&#34;&gt;InstantSearch.js adapter&lt;/a&gt; to quickly build powerful search experiences, complete with filtering, sorting, pagination and more.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s how: &lt;a href=&#34;https://typesense.org/docs/0.23.1/guide/#search-ui&#34;&gt;https://typesense.org/docs/0.23.1/guide/#search-ui&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;How does this differ from Elasticsearch?&lt;/h3&gt; &#xA;&lt;p&gt;Elasticsearch is a large piece of software, that takes non-trivial amount of effort to setup, administer, scale and fine-tune. It offers you a few thousand configuration parameters to get to your ideal configuration. So it&#39;s better suited for large teams who have the bandwidth to get it production-ready, regularly monitor it and scale it, especially when they have a need to store billions of documents and petabytes of data (eg: logs).&lt;/p&gt; &#xA;&lt;p&gt;Typesense is built specifically for decreasing the &#34;time to market&#34; for a delightful search experience. It&#39;s a light-weight yet powerful &amp;amp; scaleable alternative that focuses on Developer Happiness and Experience with a clean well-documented API, clear semantics and smart defaults so it just works well out-of-the-box, without you having to turn many knobs.&lt;/p&gt; &#xA;&lt;p&gt;Elasticsearch also runs on the JVM, which by itself can be quite an effort to tune to run optimally. Typesense, on the other hand, is a single light-weight self-contained native binary, so it&#39;s simple to setup and operate.&lt;/p&gt; &#xA;&lt;p&gt;See a side-by-side feature comparison &lt;a href=&#34;https://typesense.org/typesense-vs-algolia-vs-elasticsearch-vs-meilisearch/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;How does this differ from Algolia?&lt;/h3&gt; &#xA;&lt;p&gt;Algolia is a proprietary, hosted, search-as-a-service product that works well, when cost is not an issue. From our experience, fast growing sites and apps quickly run into search &amp;amp; indexing limits, accompanied by expensive plan upgrades as they scale.&lt;/p&gt; &#xA;&lt;p&gt;Typesense on the other hand is an open-source product that you can run on your own infrastructure or use our managed SaaS offering - &lt;a href=&#34;https://cloud.typesense.org&#34;&gt;Typesense Cloud&lt;/a&gt;. The open source version is free to use (besides of course your own infra costs). With Typesense Cloud we don&#39;t charge by records or search operations. Instead, you get a dedicated cluster and you can throw as much data and traffic at it as it can handle. You only pay a fixed hourly cost &amp;amp; bandwidth charges for it, depending on the configuration your choose, similar to most modern cloud platforms.&lt;/p&gt; &#xA;&lt;p&gt;From a product perspective, Typesense is closer in spirit to Algolia than Elasticsearch. However, we&#39;ve addressed some important limitations with Algolia:&lt;/p&gt; &#xA;&lt;p&gt;Algolia requires separate indices for each sort order, which counts towards your plan limits. Most of the index settings like fields to search, fields to facet, fields to group by, ranking settings, etc are defined upfront when the index is created vs being able to set them on the fly at query time.&lt;/p&gt; &#xA;&lt;p&gt;With Typesense, these settings can be configured at search time via query parameters which makes it very flexible and unlocks new use cases. Typesense is also able to give you sorted results with a single index, vs having to create multiple. This helps reduce memory consumption.&lt;/p&gt; &#xA;&lt;p&gt;Algolia offers the following features that Typesense does not have currently: personalization &amp;amp; server-based search analytics. For analytics, you can still instrument your search on the client-side and send search metrics to your web analytics tool of choice.&lt;/p&gt; &#xA;&lt;p&gt;We intend to bridge this gap in Typesense, but in the meantime, please let us know if any of these are a show stopper for your use case by creating a feature request in our issue tracker.&lt;/p&gt; &#xA;&lt;p&gt;See a side-by-side feature comparison &lt;a href=&#34;https://typesense.org/typesense-vs-algolia-vs-elasticsearch-vs-meilisearch/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Speed is great, but what about the memory footprint?&lt;/h3&gt; &#xA;&lt;p&gt;A fresh Typesense server will consume about 30 MB of memory. As you start indexing documents, the memory use will increase correspondingly. How much it increases depends on the number and type of fields you index.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;ve strived to keep the in-memory data structures lean. To give you a rough idea: when 1 million Hacker News titles are indexed along with their points, Typesense consumes 165 MB of memory. The same size of that data on disk in JSON format is 88 MB. If you have any numbers from your own datasets that we can add to this section, please send us a PR!&lt;/p&gt; &#xA;&lt;h3&gt;Why the GPL license?&lt;/h3&gt; &#xA;&lt;p&gt;From our experience companies are generally concerned when &lt;strong&gt;libraries&lt;/strong&gt; they use are GPL licensed, since library code is directly integrated into their code and will lead to derivative work and trigger GPL compliance. However, Typesense Server is &lt;strong&gt;server software&lt;/strong&gt; and we expect users to typically run it as a separate daemon, and not integrate it with their own code. GPL covers and allows for this use case generously &lt;strong&gt;(eg: Linux is GPL licensed)&lt;/strong&gt;. Now, AGPL is what makes server software accessed over a network result in derivative work and not GPL. And for that reason we’ve opted to not use AGPL for Typesense.&lt;/p&gt; &#xA;&lt;p&gt;Now, if someone makes modifications to Typesense server, GPL actually allows you to still keep the modifications to yourself as long as you don&#39;t distribute the modified code. So a company can for example modify Typesense server and run the modified code internally and still not have to open source their modifications, as long as they make the modified code available to everyone who has access to the modified software.&lt;/p&gt; &#xA;&lt;p&gt;Now, if someone makes modifications to Typesense server and distributes the modifications, that&#39;s where GPL kicks in. Given that we’ve published our work to the community, we&#39;d like for others&#39; modifications to also be made open to the community in the spirit of open source. &lt;strong&gt;We use GPL for this purpose.&lt;/strong&gt; Other licenses would allow our open source work to be modified, made closed source and distributed, which we want to avoid with Typesense for the project’s long term sustainability.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s more background on why GPL, as described by Discourse: &lt;a href=&#34;https://meta.discourse.org/t/why-gnu-license/2531&#34;&gt;https://meta.discourse.org/t/why-gnu-license/2531&lt;/a&gt;. Many of the points mentioned there resonate with us.&lt;/p&gt; &#xA;&lt;p&gt;Now, all of the above only apply to Typesense Server. Our client libraries are indeed meant to be integrated into our users’ code and so they use Apache license.&lt;/p&gt; &#xA;&lt;p&gt;So in summary, AGPL is what is usually problematic for server software and we’ve opted not to use it. We believe GPL for Typesense Server captures the essence of what we want for this open source project. GPL has a long history of successfully being used by popular open source projects. Our libraries are still Apache licensed.&lt;/p&gt; &#xA;&lt;p&gt;If you have specifics that prevent you from using Typesense due to a licensing issue, we&#39;re happy to explore this topic further with you. Please reach out to us.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;👋 🌐 New: If you have general questions about Typesense, want to say hello or just follow along, we&#39;d like to invite you to join our &lt;a href=&#34;https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg&#34;&gt;Slack Community&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We also do virtual office hours every Friday. Reserve a time slot &lt;a href=&#34;https://calendly.com/jason-typesense/typesense-office-hours&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you run into any problems or issues, please create a Github issue and we&#39;ll try our best to help.&lt;/p&gt; &#xA;&lt;p&gt;We strive to provide good support through our issue trackers on Github. However, if you&#39;d like to receive private &amp;amp; prioritized support with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Guaranteed SLAs&lt;/li&gt; &#xA; &lt;li&gt;Phone / video calls to discuss your specific use case and get recommendations on best practices&lt;/li&gt; &#xA; &lt;li&gt;Private discussions over Slack&lt;/li&gt; &#xA; &lt;li&gt;Guidance around deployment, ops and scaling best practices&lt;/li&gt; &#xA; &lt;li&gt;Prioritized feature requests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We do offer Paid Support options. Please reach out to us at &lt;a href=&#34;mailto:contact@typesense.org&#34;&gt;contact@typesense.org&lt;/a&gt; to sign up.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We are a lean team on a mission to democratize search and we&#39;ll take all the help we can get! If you&#39;d like to get involved, here&#39;s information on where we could use your help: &lt;a href=&#34;https://github.com/typesense/typesense/raw/master/CONTRIBUTING.md&#34;&gt;Contributing.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Latest Updates&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to get updates when we release new versions, click on the &#34;Watch&#34; button on the top and select &#34;Releases only&#34;. Github will then send you notifications along with a changelog with each new release.&lt;/p&gt; &#xA;&lt;p&gt;We also post updates to our Twitter account about releases and additional topics related to Typesense. Follow us here: &lt;a href=&#34;https://twitter.com/typesense&#34;&gt;@typesense&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;👋 🌐 New: We&#39;ll also post updates on our &lt;a href=&#34;https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg&#34;&gt;Slack Community&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build from source&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Building with Docker&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The docker build script takes care of all required dependencies, so it&#39;s the easiest way to build Typesense:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TYPESENSE_VERSION=nightly ./docker-build.sh --build-deploy-image --create-binary [--clean] [--depclean]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Building on your machine&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Typesense requires the following dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;C++11 compatible compiler (GCC &amp;gt;= 4.9.0, Apple Clang &amp;gt;= 8.0, Clang &amp;gt;= 3.9.0)&lt;/li&gt; &#xA; &lt;li&gt;Snappy&lt;/li&gt; &#xA; &lt;li&gt;zlib&lt;/li&gt; &#xA; &lt;li&gt;OpenSSL (&amp;gt;=1.0.2)&lt;/li&gt; &#xA; &lt;li&gt;curl&lt;/li&gt; &#xA; &lt;li&gt;ICU&lt;/li&gt; &#xA; &lt;li&gt;brpc&lt;/li&gt; &#xA; &lt;li&gt;braft&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;./build.sh --create-binary [--clean] [--depclean]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The first build will take some time since other third-party libraries are pulled and built as part of the build process.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;© 2016-present Typesense Inc.&lt;/p&gt;</summary>
  </entry>
</feed>