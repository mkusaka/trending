<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-31T01:29:46Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>melonDS-emu/melonDS</title>
    <updated>2024-12-31T01:29:46Z</updated>
    <id>tag:github.com,2024-12-31:/melonDS-emu/melonDS</id>
    <link href="https://github.com/melonDS-emu/melonDS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DS emulator, sorta&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/melonDS-emu/melonDS/master/res/icon/melon_128x128.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2 align=&#34;center&#34;&gt;&lt;b&gt;melonDS&lt;/b&gt;&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;http://melonds.kuribo64.net/&#34; alt=&#34;melonDS website&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/website-melonds.kuribo64.net-%2331352e.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://melonds.kuribo64.net/downloads.php&#34; alt=&#34;Release: 0.9.5&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/release-0.9.5-%235c913b.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0&#34; alt=&#34;License: GPLv3&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPL%20v3-%23ff554d.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://kiwiirc.com/client/irc.badnik.net/?nick=IRC-Source_?#melonds&#34; alt=&#34;IRC channel: #melonds&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/IRC%20chat-%23melonds-%23dd2e44.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/melonDS-emu/melonDS/actions?query=workflow%3A%22CMake+Build+%28Windows+x86-64%29%22+event%3Apush&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/melonDS-emu/melonDS/build-windows.yml?label=Windows%20x86-64&amp;amp;logo=GitHub&amp;amp;branch=master&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/melonDS-emu/melonDS/actions?query=workflow%3A%22CMake+Build+%28Ubuntu+x86-64%29%22+event%3Apush&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/melonDS-emu/melonDS/build-ubuntu.yml?label=Linux%20x86-64&amp;amp;logo=GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/melonDS-emu/melonDS/actions?query=workflow%3A%22CMake+Build+%28Ubuntu+aarch64%29%22+event%3Apush&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/melonDS-emu/melonDS/build-ubuntu-aarch64.yml?label=Linux%20ARM64&amp;amp;logo=GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/melonDS-emu/melonDS/actions/workflows/build-macos-universal.yml?query=event%3Apush&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/melonDS-emu/melonDS/build-macos-universal.yml?label=macOS%20Universal&amp;amp;logo=GitHub&#34;&gt;&lt;/a&gt; &lt;/p&gt; DS emulator, sorta &#xA;&lt;p&gt;The goal is to do things right and fast, akin to blargSNES (but hopefully better). But also to, you know, have a fun challenge :)&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;p&gt;Firmware boot (not direct boot) requires a BIOS/firmware dump from an original DS or DS Lite. DS firmwares dumped from a DSi or 3DS aren&#39;t bootable and only contain configuration data, thus they are only suitable when booting games directly.&lt;/p&gt; &#xA;&lt;h3&gt;Possible firmware sizes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;128KB: DSi/3DS DS-mode firmware (reduced size due to lacking bootcode)&lt;/li&gt; &#xA; &lt;li&gt;256KB: regular DS firmware&lt;/li&gt; &#xA; &lt;li&gt;512KB: iQue DS firmware&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;DS BIOS dumps from a DSi or 3DS can be used with no compatibility issues. DSi BIOS dumps (in DSi mode) are not compatible. Or maybe they are. I don&#39;t know.&lt;/p&gt; &#xA;&lt;p&gt;As for the rest, the interface should be pretty straightforward. If you have a question, don&#39;t hesitate to ask, though!&lt;/p&gt; &#xA;&lt;h2&gt;How to build&lt;/h2&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install dependencies:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ubuntu 22.04: &lt;code&gt;sudo apt install cmake extra-cmake-modules libcurl4-gnutls-dev libpcap0.8-dev libsdl2-dev qtbase5-dev qtbase5-private-dev qtmultimedia5-dev libslirp-dev libarchive-dev libzstd-dev&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Older Ubuntu: &lt;code&gt;sudo apt install cmake extra-cmake-modules libcurl4-gnutls-dev libpcap0.8-dev libsdl2-dev qt5-default qtbase5-private-dev qtmultimedia5-dev libslirp-dev libarchive-dev libzstd-dev&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Arch Linux: &lt;code&gt;sudo pacman -S base-devel cmake extra-cmake-modules git libpcap sdl2 qt5-base qt5-multimedia libslirp libarchive zstd&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the melonDS repository and prepare:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/melonDS-emu/melonDS&#xA;cd melonDS&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Compile:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cmake -B build&#xA;cmake --build build -j$(nproc --all)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://www.msys2.org/&#34;&gt;MSYS2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open the &lt;strong&gt;MSYS2 MinGW 64-bit&lt;/strong&gt; terminal&lt;/li&gt; &#xA; &lt;li&gt;Update the packages using &lt;code&gt;pacman -Syu&lt;/code&gt; and reopen the terminal if it asks you to&lt;/li&gt; &#xA; &lt;li&gt;Install git to clone the repository &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman -S git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Download the melonDS repository and prepare: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/melonDS-emu/melonDS&#xA;cd melonDS&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Dynamic builds (with DLLs)&lt;/h4&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Install dependencies: &lt;code&gt;pacman -S mingw-w64-x86_64-{cmake,SDL2,toolchain,qt5-base,qt5-svg,qt5-multimedia,qt5-tools,libslirp,libarchive,zstd}&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Compile: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cmake -B build&#xA;cmake --build build&#xA;cd build&#xA;../tools/msys-dist.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If everything went well, melonDS and the libraries it needs should now be in the &lt;code&gt;dist&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h4&gt;Static builds (without DLLs, standalone executable)&lt;/h4&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Install dependencies: &lt;code&gt;pacman -S mingw-w64-x86_64-{cmake,SDL2,toolchain,qt5-static,libslirp,libarchive,zstd}&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Compile: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cmake -B build -DBUILD_STATIC=ON -DCMAKE_PREFIX_PATH=/mingw64/qt5-static&#xA;cmake --build build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If everything went well, melonDS should now be in the &lt;code&gt;build&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew Package Manager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install dependencies: &lt;code&gt;brew install git pkg-config cmake sdl2 qt@6 libslirp libarchive zstd&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Download the melonDS repository and prepare: &lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;git clone https://github.com/melonDS-emu/melonDS&#xA;cd melonDS&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Compile: &lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;cmake -B build -DCMAKE_PREFIX_PATH=&#34;$(brew --prefix qt@6);$(brew --prefix libarchive)&#34; -DUSE_QT6=ON&#xA;cmake --build build -j$(sysctl -n hw.logicalcpu)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If everything went well, melonDS.app should now be in the &lt;code&gt;build&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h4&gt;Self-contained app bundle&lt;/h4&gt; &#xA;&lt;p&gt;If you want an app bundle that can be distributed to other computers without needing to install dependencies through Homebrew, you can additionally run &lt;code&gt; ../tools/mac-bundle.rb melonDS.app&lt;/code&gt; after the build is completed, or add &lt;code&gt;-DMACOS_BUNDLE_LIBS=ON&lt;/code&gt; to the first CMake command.&lt;/p&gt; &#xA;&lt;h2&gt;TODO LIST&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;better DSi emulation&lt;/li&gt; &#xA; &lt;li&gt;better OpenGL rendering&lt;/li&gt; &#xA; &lt;li&gt;netplay&lt;/li&gt; &#xA; &lt;li&gt;the impossible quest of pixel-perfect 3D graphics&lt;/li&gt; &#xA; &lt;li&gt;support for rendering screens to separate windows&lt;/li&gt; &#xA; &lt;li&gt;emulating some fancy addons&lt;/li&gt; &#xA; &lt;li&gt;other non-core shit (debugger, graphics viewers, etc)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;TODO LIST FOR LATER (low priority)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;big-endian compatibility (Wii, etc)&lt;/li&gt; &#xA; &lt;li&gt;LCD refresh time (used by some games for blending effects)&lt;/li&gt; &#xA; &lt;li&gt;any feature you can eventually ask for that isn&#39;t outright stupid&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Martin for GBAtek, a good piece of documentation&lt;/li&gt; &#xA; &lt;li&gt;Cydrak for the extra 3D GPU research&lt;/li&gt; &#xA; &lt;li&gt;limittox for the icon&lt;/li&gt; &#xA; &lt;li&gt;All of you comrades who have been testing melonDS, reporting issues, suggesting shit, etc&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Licenses&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.gnu.org/licenses/gpl-3.0.en.html&#34;&gt;&lt;img src=&#34;https://www.gnu.org/graphics/gplv3-127x51.png&#34; alt=&#34;GNU GPLv3 Image&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;melonDS is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt; &#xA;&lt;h3&gt;External&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Images used in the Input Config Dialog - see &lt;code&gt;src/frontend/qt_sdl/InputConfig/resources/LICENSE.md&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>