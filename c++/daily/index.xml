<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-27T01:30:30Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>34736384/genshin-fps-unlock</title>
    <updated>2023-05-27T01:30:30Z</updated>
    <id>tag:github.com,2023-05-27:/34736384/genshin-fps-unlock</id>
    <link href="https://github.com/34736384/genshin-fps-unlock" rel="alternate"></link>
    <summary type="html">&lt;p&gt;unlocks the 60 fps cap&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Genshin Impact FPS Unlocker&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This tool helps you to unlock the 60 fps limit in the game&lt;/li&gt; &#xA; &lt;li&gt;This is an external program which uses &lt;strong&gt;WriteProcessMemory&lt;/strong&gt; to write the desired fps to the game&lt;/li&gt; &#xA; &lt;li&gt;Handle protection bypass is already included&lt;/li&gt; &#xA; &lt;li&gt;Does not require a driver for R/W access&lt;/li&gt; &#xA; &lt;li&gt;Supports OS and CN version&lt;/li&gt; &#xA; &lt;li&gt;Should work for future updates&lt;/li&gt; &#xA; &lt;li&gt;If the source needs to be updated, I&#39;ll try to do it as soon as possible&lt;/li&gt; &#xA; &lt;li&gt;You can download the compiled binary over at &#39;&lt;a href=&#34;https://github.com/34736384/genshin-fps-unlock/releases&#34;&gt;Release&lt;/a&gt;&#39; if you don&#39;t want to compile it yourself&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compiling&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use Visual Studio 2019 Community Edition to compile&lt;/li&gt; &#xA; &lt;li&gt;Not required but I know it works on this version&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure you have the &lt;a href=&#34;https://aka.ms/vs/16/release/vc_redist.x64.exe&#34;&gt;Visual C++ 2019 Redistributable (x64)&lt;/a&gt; and &lt;a href=&#34;https://dotnet.microsoft.com/en-us/download/dotnet-framework/net48&#34;&gt;.NET Framework 4.8&lt;/a&gt; installed&lt;/li&gt; &#xA; &lt;li&gt;If it is your first time running, unlocker will attempt to find your game through the registry. If it fails, then it will ask you to either browse or run the game.&lt;/li&gt; &#xA; &lt;li&gt;Place the compiled exe anywhere you want&lt;/li&gt; &#xA; &lt;li&gt;Make sure your game is closed—the unlocker will automatically start the game for you&lt;/li&gt; &#xA; &lt;li&gt;Run the exe as administrator, and leave the exe running&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;It requires adminstrator because the game needs to be started by the unlocker and the game requires such permission&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To inject other third-party plugins (e.g. reshade), go to &lt;code&gt;Options-&amp;gt;Settings-&amp;gt;DLLs&lt;/code&gt; and click add&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Version 2.0.0 Changes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Removed key binds&lt;/li&gt; &#xA; &lt;li&gt;Added a GUI (should remove the need for keybinds)&lt;/li&gt; &#xA; &lt;li&gt;Added interactable lauch option configurations (Located under &lt;code&gt;Options-&amp;gt;Settings-&amp;gt;Lauch Options&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Added some QoL features, such as start minimized, minimize to tray, game process priority, and power saving&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Minimize to tray&lt;/strong&gt;: Whenever you click minimize or have the &lt;code&gt;Start Minimized&lt;/code&gt; option checked, the unlocker will automatically minimize to tray&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Game Process Priority&lt;/strong&gt;: Changes the process priority on start, and it will be saved in config too!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Power Saving&lt;/strong&gt;: Automatically sets the fps limit to 10 and low process priority upon losing focus to the game (e.g. tabbing out of game)&lt;/li&gt; &#xA; &lt;li&gt;Added a slider and an input box for changing fps cap&lt;/li&gt; &#xA; &lt;li&gt;Added an icon&lt;/li&gt; &#xA; &lt;li&gt;Added game path detection through registry, will fallback to old method if it fails with registry&lt;/li&gt; &#xA; &lt;li&gt;You can choose different installation of the game in &lt;code&gt;Options-&amp;gt;Setup&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;My test account is currently AR55, can&#39;t guarantee it will be safe forever. But, honestly though, I doubt they would ban you for this.&lt;/li&gt; &#xA; &lt;li&gt;Modifying game memory with an unauthorized third-party application is a violation of the ToS, so use it at your own risk (same thing applies for injecting reshade)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Todo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;IDK, maybe add localization or game predownload&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;原神解锁FPS限制&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;工作原理类似于外部辅助，通过&lt;strong&gt;WriteProcessMemory&lt;/strong&gt;把FPS数值写进游戏&lt;/li&gt; &#xA; &lt;li&gt;不需要通过驱动进行读写操作&lt;/li&gt; &#xA; &lt;li&gt;支持国服和外服&lt;/li&gt; &#xA; &lt;li&gt;理论上支持后续版本，不需要更新源码&lt;/li&gt; &#xA; &lt;li&gt;如果需要更新我会尽快更新&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;编译&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;用VS2019编译，其他版本的也应该可以，没测试过&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;食用指南&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;运行前确保系统已安装&lt;a href=&#34;https://aka.ms/vs/16/release/vc_redist.x64.exe&#34;&gt;Visual C++ 2019 Redistributable (x64)&lt;/a&gt;和&lt;a href=&#34;https://dotnet.microsoft.com/en-us/download/dotnet-framework/net48&#34;&gt;.NET Framework 4.8&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第一次运行的话先以管理员运行，解锁器会尝试通过注册表寻找游戏路经，如果找不到的话会提示你浏览游戏位置或者开启游戏&lt;/li&gt; &#xA; &lt;li&gt;解锁器放哪都行&lt;/li&gt; &#xA; &lt;li&gt;运行之前确保游戏是关闭的&lt;/li&gt; &#xA; &lt;li&gt;用管理员运行解锁器&lt;/li&gt; &#xA; &lt;li&gt;解锁器不能关掉&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;使用管理员运行是因为游戏必须由解锁器启动，游戏本身就需要管理员权限了，所以负责启动的也是需要的&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;2.0.0 版本更新&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;看上面的英文版吧，我懒了&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;注意&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;目前我小号冒险等级55了&lt;/li&gt; &#xA; &lt;li&gt;使用未认证的第三方软件修改游戏数据是违反了协议条款的，后果自负&lt;/li&gt; &#xA; &lt;li&gt;要转载的话随便，毕竟开源，可以的话就注明下出处&lt;/li&gt; &#xA; &lt;li&gt;这么个破工具请不要拿去倒卖&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Todo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本地化或者游戏预下载&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>apache/incubator-kvrocks</title>
    <updated>2023-05-27T01:30:30Z</updated>
    <id>tag:github.com,2023-05-27:/apache/incubator-kvrocks</id>
    <link href="https://github.com/apache/incubator-kvrocks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kvrocks is a distributed key value NoSQL database that uses RocksDB as storage engine and is compatible with Redis protocol.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://kvrocks.apache.org/img/kvrocks-featured.png&#34; alt=&#34;kvrocks_logo&#34; width=&#34;350&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/apache/incubator-kvrocks/actions/workflows/kvrocks.yaml&#34;&gt;&lt;img src=&#34;https://github.com/apache/incubator-kvrocks/actions/workflows/kvrocks.yaml/badge.svg?sanitize=true&#34; alt=&#34;kvrocks ci actions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/incubator-kvrocks/raw/unstable/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/apache/incubator-kvrocks&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/incubator-kvrocks/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/apache/incubator-kvrocks&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/kvrockscommunity/shared_invite/zt-p5928e3r-OUAK8SUgC8GOceGM6dAz6w&#34;&gt;Slack Channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lists.apache.org/list.html?dev@kvrocks.apache.org&#34;&gt;Mailing List&lt;/a&gt; (&lt;a href=&#34;https://www.apache.org/foundation/mailinglists.html#subscribing&#34;&gt;how to subscribe&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Apache Kvrocks(Incubating)&lt;/strong&gt; is a distributed key value NoSQL database that uses RocksDB as storage engine and is compatible with Redis protocol. Kvrocks intends to decrease the cost of memory and increase the capacity while compared to Redis. The design of replication and storage was inspired by &lt;a href=&#34;https://github.com/pinterest/rocksplicator&#34;&gt;rocksplicator&lt;/a&gt; and &lt;a href=&#34;https://github.com/Qihoo360/blackwidow&#34;&gt;blackwidow&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Kvrocks has the following key features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Redis Compatible: Users can access Apache Kvrocks via any Redis client.&lt;/li&gt; &#xA; &lt;li&gt;Namespace: Similar to Redis SELECT but equipped with token per namespace.&lt;/li&gt; &#xA; &lt;li&gt;Replication: Async replication using binlog like MySQL.&lt;/li&gt; &#xA; &lt;li&gt;High Available: Support Redis sentinel to failover when master or slave was failed.&lt;/li&gt; &#xA; &lt;li&gt;Cluster: Centralized management but accessible via any Redis cluster client.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thanks to designers &lt;a href=&#34;https://github.com/tianlingyu1997&#34;&gt;Lingyu Tian&lt;/a&gt; and Shili Fan for contributing the logo of Kvrocks.&lt;/p&gt; &#xA;&lt;h2&gt;Who uses Kvrocks&lt;/h2&gt; &#xA;&lt;p&gt;You can find Kvrocks users at &lt;a href=&#34;https://kvrocks.apache.org/users/&#34;&gt;the Users page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Users are encouraged to add themselves to the Users page. Either leave a comment on the &lt;a href=&#34;https://github.com/apache/incubator-kvrocks/issues/414&#34;&gt;&#34;Who is using Kvrocks&#34;&lt;/a&gt; issue, or directly send a pull request to add company or organization &lt;a href=&#34;https://github.com/apache/incubator-kvrocks-website/raw/main/src/components/UserLogos/index.tsx&#34;&gt;information&lt;/a&gt; and &lt;a href=&#34;https://github.com/apache/incubator-kvrocks-website/tree/main/static/media/users&#34;&gt;logo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build and run Kvrocks&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisite&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# CentOS / RedHat&#xA;sudo yum install -y epel-release&#xA;sudo yum install -y git gcc gcc-c++ make cmake autoconf automake libtool libstdc++-static python3 which openssl-devel&#xA;&#xA;# Ubuntu / Debian&#xA;sudo apt update&#xA;sudo apt install -y git gcc g++ make cmake autoconf automake libtool python3 libssl-dev&#xA;&#xA;# macOS&#xA;brew install autoconf automake libtool cmake openssl&#xA;&#xA;# Please force linking the openssl if still can&#39;t find after installing openssl&#xA;brew link --force openssl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build&lt;/h3&gt; &#xA;&lt;p&gt;It is as simple as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ git clone https://github.com/apache/incubator-kvrocks.git&#xA;$ cd incubator-kvrocks&#xA;$ ./x.py build # `./x.py build -h` to check more options;&#xA;               # especially, `./x.py build --ghproxy` will fetch dependencies via ghproxy.com.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build with TLS support, you&#39;ll need OpenSSL development libraries (e.g. libssl-dev on Debian/Ubuntu) and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ./x.py build -DENABLE_OPENSSL=ON&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build with lua instead of luaJIT, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ./x.py build -DUSE_LUAJIT=OFF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running Kvrocks&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ./build/kvrocks -c kvrocks.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running Kvrocks using Docker&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ docker run -it -p 6666:6666 apache/kvrocks&#xA;# or get the nightly image:&#xA;$ docker run -it -p 6666:6666 apache/kvrocks:nightly&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Connect Kvrocks service&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ redis-cli -p 6666&#xA;&#xA;127.0.0.1:6666&amp;gt; get a&#xA;(nil)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running test cases&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ./x.py build --unittest&#xA;$ ./x.py test cpp # run C++ unit tests&#xA;$ ./x.py test go # run Golang (unit and integration) test cases&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Supported platforms&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux&lt;/li&gt; &#xA; &lt;li&gt;macOS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Namespace&lt;/h2&gt; &#xA;&lt;p&gt;Namespace is used to isolate data between users. Unlike all the Redis databases can be visited by &lt;code&gt;requirepass&lt;/code&gt;, we use one token per namespace. &lt;code&gt;requirepass&lt;/code&gt; is regraded as admin token, and only admin token allows to access the namespace command, as well as some commands like &lt;code&gt;config&lt;/code&gt;, &lt;code&gt;slaveof&lt;/code&gt;, &lt;code&gt;bgsave&lt;/code&gt;, etc. See the &lt;a href=&#34;https://kvrocks.apache.org/docs/namespace&#34;&gt;Namespace&lt;/a&gt; page for more details.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# add token&#xA;127.0.0.1:6666&amp;gt; namespace add ns1 my_token&#xA;OK&#xA;&#xA;# update token&#xA;127.0.0.1:6666&amp;gt; namespace set ns1 new_token&#xA;OK&#xA;&#xA;# list namespace&#xA;127.0.0.1:6666&amp;gt; namespace get *&#xA;1) &#34;ns1&#34;&#xA;2) &#34;new_token&#34;&#xA;3) &#34;__namespace&#34;&#xA;4) &#34;foobared&#34;&#xA;&#xA;# delete namespace&#xA;127.0.0.1:6666&amp;gt; namespace del ns1&#xA;OK&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Cluster&lt;/h2&gt; &#xA;&lt;p&gt;Kvrocks implements a proxyless centralized cluster solution but its accessing method is completely compatible with the Redis cluster client. You can use Redis cluster SDKs to access the kvrocks cluster. More details, please see: &lt;a href=&#34;https://kvrocks.apache.org/docs/cluster/&#34;&gt;Kvrocks Cluster Introduction&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documents&lt;/h2&gt; &#xA;&lt;p&gt;Documents are hosted at the &lt;a href=&#34;https://kvrocks.apache.org/docs/getting-started/&#34;&gt;official website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kvrocks.apache.org/docs/supported-commands/&#34;&gt;Supported Commands&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kvrocks.apache.org/community/data-structure-on-rocksdb/&#34;&gt;Design Complex Structure on RocksDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kvrocks.apache.org/docs/replication&#34;&gt;Replication Design&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tools&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Export the Kvrocks monitor metrics, please use &lt;a href=&#34;https://github.com/KvrocksLabs/kvrocks_exporter&#34;&gt;kvrocks_exporter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Migrate from redis to kvrocks, use &lt;a href=&#34;https://github.com/vipshop/redis-migrate-tool&#34;&gt;redis-migrate-tool&lt;/a&gt; which was developed by &lt;a href=&#34;https://github.com/vipshop&#34;&gt;vipshop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Migrate from kvrocks to redis, use &lt;code&gt;kvrocks2redis&lt;/code&gt; in the build directory&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Kvrocks community welcomes all forms of contribution and you can find out how to get involved on the &lt;a href=&#34;https://kvrocks.apache.org/community/&#34;&gt;Community&lt;/a&gt; and &lt;a href=&#34;https://kvrocks.apache.org/community/contributing&#34;&gt;How to Contribute&lt;/a&gt; pages.&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;h3&gt;Hardware&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CPU: 48 cores Intel(R) Xeon(R) CPU E5-2650 v4 @ 2.20GHz&lt;/li&gt; &#xA; &lt;li&gt;Memory: 32 GiB&lt;/li&gt; &#xA; &lt;li&gt;NET: Intel Corporation I350 Gigabit Network Connection&lt;/li&gt; &#xA; &lt;li&gt;DISK: 2TB NVMe Intel SSD DC P4600&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Benchmark Client: multi-thread redis-benchmark(unstable branch)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;1. Commands QPS&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;kvrocks: workers = 16, benchmark: 8 threads/ 512 conns / 128 payload&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;latency: 99.9% &amp;lt; 10ms&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/incubator-kvrocks/unstable/assets/chart-commands.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2. QPS on different payloads&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;kvrocks: workers = 16, benchmark: 8 threads/ 512 conns&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;latency: 99.9% &amp;lt; 10ms&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/incubator-kvrocks/unstable/assets/chart-values.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3. QPS on different workers&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;kvrocks: workers = 16, benchmark: 8 threads/ 512 conns / 128 payload&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;latency: 99.9% &amp;lt; 10ms&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/incubator-kvrocks/unstable/assets/chart-threads.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Kvrocks is under the Apache License Version 2.0. See the &lt;a href=&#34;https://raw.githubusercontent.com/apache/incubator-kvrocks/unstable/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; &#xA;&lt;h2&gt;Social Media&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kvrocks.medium.com/&#34;&gt;Medium&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/people/kvrocks&#34;&gt;Zhihu&lt;/a&gt; (in Chinese)&lt;/li&gt; &#xA; &lt;li&gt;WeChat Official Account (in Chinese, scan the QR code to follow)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/incubator-kvrocks/unstable/assets/wechat_account.jpg&#34; alt=&#34;WeChat official account&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>