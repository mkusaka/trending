<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-28T01:31:47Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>HuskyDG/magic_overlayfs</title>
    <updated>2024-10-28T01:31:47Z</updated>
    <id>tag:github.com,2024-10-28:/HuskyDG/magic_overlayfs</id>
    <link href="https://github.com/HuskyDG/magic_overlayfs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Make system partition become read-write (it is also possible without Magisk)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Magisk Overlayfs&lt;/h1&gt; &#xA;&lt;p&gt;On Android 10+, system partitions might no longer be able to remount as read-write. For devices use dynamic partition, it is nearly impossible to modify system partiton as there is no space left. This module solves these problem by using OverlayFS. So what is OverlayFS? On &lt;a href=&#34;https://en.m.wikipedia.org/wiki/OverlayFS&#34;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;OverlayFS is a union mount filesystem implementation for Linux. It combines multiple different underlying mount points into one, resulting in single directory structure that contains underlying files and sub-directories from all sources. Common applications overlay a read/write partition over a read-only partition, such as with LiveCDs and IoT devices with limited flash memory write cycles.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Benefits of using overlayfs for system partitions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make most parts of system partition (&lt;code&gt;/system&lt;/code&gt;, &lt;code&gt;/vendor&lt;/code&gt;, &lt;code&gt;/product&lt;/code&gt;, &lt;code&gt;/system_ext&lt;/code&gt;, &lt;code&gt;/odm&lt;/code&gt;, &lt;code&gt;/odm_dlkm&lt;/code&gt;, &lt;code&gt;/vendor_dlkm&lt;/code&gt;, ...) become read-write.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/data&lt;/code&gt; storage is used for &lt;code&gt;upperdir&lt;/code&gt; of OverlayFS mount. However, on some kernel, f2fs is not supported by OverlayFS and cannot be used directly. The workaround is to create an ext4 loop image then mount it.&lt;/li&gt; &#xA; &lt;li&gt;All modifications to overlayfs partition will not be made directly, but will be stored in upperdir, so it is easy to revert. Just need to remove/disable module so your system will return to untouched stage.&lt;/li&gt; &#xA; &lt;li&gt;Support Magisk version 23.0+ and latest version of KernelSU&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you are interested in OverlayFS, you can read documentation at &lt;a href=&#34;https://docs.kernel.org/filesystems/overlayfs.html&#34;&gt;https://docs.kernel.org/filesystems/overlayfs.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;p&gt;There is two way:&lt;/p&gt; &#xA;&lt;h3&gt;GitHub Actions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fork this repo and run github actions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Linux/WSL&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone this repo to your device&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone http://github.com/HuskyDG/Magisk_OverlayFS &amp;amp;&amp;amp; cd Magisk_OverlayFS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Setup Android NDK in repository directory&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget https://dl.google.com/android/repository/android-ndk-r23b-linux.zip&#xA;unzip android-ndk-r23b-linux.zip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Run &lt;code&gt;bash build.sh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;KernelSU problem&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The KernelSU module is similar to Magisk in that it allows users to modify the system partition while maintaining system integrity. It does this through the implementation of overlayfs. However, it&#39;s important to note that KernelSU makes changes to the system partition by using read-only overlayfs, which also mounts on top of magic_overlayfs and prevent system from being remounted as read-write. If you want to remount your system partitions as read-write, you simply need to first unmount the KernelSU overlayfs using this command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nsenter -t 1 -m sh&#xA;overlayfs_system --unmount-ksu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or set &lt;code&gt;DO_UNMOUNT_KSU=true&lt;/code&gt; in &lt;code&gt;/data/adb/modules(_update)/magisk_overlayfs/mode.sh&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;After that you will be able to remount system as read-write&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Change OverlayFS mode&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;OverlayFS is mounted as read-only by default&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure overlayfs mode in &lt;code&gt;/data/adb/modules(_update)/magisk_overlayfs/mode.sh&lt;/code&gt; to change mode of OverlayFS&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Read-write mode of overlayfs will cause baseband on some devices stop working&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;# 0 - read-only but can still remount as read-write&#xA;# 1 - read-write default&#xA;# 2 - read-only locked (cannot remount as read-write)&#xA;&#xA;export OVERLAY_MODE=2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OverlayFS upper loop device will be setup at &lt;code&gt;/dev/block/overlayfs_loop&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;On Magisk, OverlayFS upper loop are mounted at &lt;code&gt;$(magisk --path)/overlayfs_mnt&lt;/code&gt;. You can make modifications through this path to make changes to overlayfs mounted in system.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Modify system files with OverlayFS&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If you are lazy to remount, please modify &lt;code&gt;mode.sh&lt;/code&gt; and set it to &lt;code&gt;OVERLAY_MODE=1&lt;/code&gt; so overlayfs will be always read-write every boot.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can quickly remount all overlayfs to read-write by this command in terminal:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;su -mm -c magic_remount_rw&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;After that you can restore all system partitons back to read-only mode by this commamd in terminal:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;su -mm -c magic_remount_ro&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Overlayfs-based Magisk module&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you want to use overlayfs mount for your module, add these line to the end of &lt;code&gt;customize.sh&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;OVERLAY_IMAGE_EXTRA=0     # number of kb need to be added to overlay.img&#xA;OVERLAY_IMAGE_SHRINK=true # shrink overlay.img or not?&#xA;&#xA;# Only use OverlayFS if Magisk_OverlayFS is installed&#xA;if [ -f &#34;/data/adb/modules/magisk_overlayfs/util_functions.sh&#34; ] &amp;amp;&amp;amp; \&#xA;    /data/adb/modules/magisk_overlayfs/overlayfs_system --test; then&#xA;  ui_print &#34;- Add support for overlayfs&#34;&#xA;  . /data/adb/modules/magisk_overlayfs/util_functions.sh&#xA;  support_overlayfs &amp;amp;&amp;amp; rm -rf &#34;$MODPATH&#34;/system&#xA;fi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Bugreport&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Magisk/KernelSU version&lt;/li&gt; &#xA; &lt;li&gt;Magisk/KernelSU logs&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/cache/overlayfs.log&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;logcat, dmesg, ...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reset overlayfs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Remove &lt;code&gt;/data/adb/overlay&lt;/code&gt; and reinstall module&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Without Magisk&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simple configuration to test:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# - Create a writeable directory in ext4 (f2fs) /data&#xA;# which will be used for upperdir&#xA;# - On some Kernel, f2fs is not supported by OverlayFS&#xA;# and cannot be used directly&#xA;WRITEABLE=/data/overlayfs&#xA;&#xA;mkdir -p &#34;$WRITEABLE&#34;&#xA;&#xA;# - Export list of modules if you want to load mounts by overlayfs&#xA;# - If you have /vendor /product /system_ext as seperate partitons&#xA;# - Please move it out of &#34;system&#34; folder, overwise **BOOM**&#xA;export OVERLAYLIST=/data/adb/modules/module_a:/data/adb/modules/module_b&#xA;&#xA;# - If there is Magisk, export this in post-fs-data.sh (before magic mount):&#xA;export MAGISKTMP=&#34;$(magisk --path)&#34;&#xA;&#xA;# - Load overlayfs&#xA;./overlayfs_system &#34;$WRITEABLE&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you like my work, you can donate at &lt;a href=&#34;http://paypal.me/huskydg&#34;&gt;http://paypal.me/huskydg&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Source code&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/HuskyDG/Magisk_OverlayFS&#34;&gt;http://github.com/HuskyDG/Magisk_OverlayFS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>CookiePLMonster/SilentPatch</title>
    <updated>2024-10-28T01:31:47Z</updated>
    <id>tag:github.com,2024-10-28:/CookiePLMonster/SilentPatch</id>
    <link href="https://github.com/CookiePLMonster/SilentPatch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SilentPatch for GTA III, Vice City, and San Andreas&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SilentPatch&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img height=&#34;350&#34; src=&#34;https://i.imgur.com/sCDzq12.png&#34; alt=&#34;Logo&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;SilentPatch for the 3D-era Grand Theft Auto games is the first and flagship release of the &#34;SilentPatch family&#34;, providing numerous fixes for this beloved franchise. SilentPatch addresses a wide range of issues, from critical fixes for crashes and other blockers to various major and minor improvements identified by the passionate community in these games over decades. SilentPatch does not alter the core gameplay experience, making it an optimal choice for both first-time players and the old guard returning for yet another playthrough.&lt;/p&gt; &#xA;&lt;h2&gt;Featured fixes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CookiePLMonster/SilentPatch/dev/CHANGELOG-III.md&#34;&gt;Fixes in GTA III&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CookiePLMonster/SilentPatch/dev/CHANGELOG-VC.md&#34;&gt;Fixes in GTA Vice City&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CookiePLMonster/SilentPatch/dev/CHANGELOG-SA.md&#34;&gt;Fixes in GTA San Andreas&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compilation requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visual Studio 2017 or newer with &lt;code&gt;C++ Windows XP Support for VS 2017 (v141) tools&lt;/code&gt; installed. Newer toolsets will work too, but the projects will require retargeting.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vcpkg.io/&#34;&gt;vcpkg&lt;/a&gt; installed separately or as a Visual Studio component. Necessary for SP for San Andreas to include &lt;code&gt;libflac&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;RenderWare Graphics SDK. Each game requires their corresponding RenderWare version and an environment variable pointing at the &lt;code&gt;RW3.x\Graphics\rwsdk&lt;/code&gt; directory: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;GTA III: RW 3.3, D3D8, &lt;code&gt;RWG33SDK&lt;/code&gt; variable.&lt;/li&gt; &#xA;   &lt;li&gt;GTA Vice City: RW 3.4, D3D8, &lt;code&gt;RWG34SDK&lt;/code&gt; variable.&lt;/li&gt; &#xA;   &lt;li&gt;GTA San Andreas: RW 3.6, D3D9, &lt;code&gt;RWG36SDK&lt;/code&gt; variable.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution guidelines&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Contributions with bug fixes are welcome, but you must be able to explain why you believe they fix a bug, rather than alter a design decision that doesn&#39;t suit you. I reserve the right to reject submissions that cannot be unambiguously classified as fixes.&lt;/li&gt; &#xA; &lt;li&gt;Contributions for GTA III and Vice City must use patterns and support all game versions. For GTA San Andreas, contributions must support version 1.0, but preferably also the new binaries (newsteam/RGL).&lt;/li&gt; &#xA; &lt;li&gt;This repository is not intended for game support. Issues such as &#34;I installed mods and the game now crashes&#34; will be closed.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;SilentPatch includes code contributions from:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;aap&lt;/li&gt; &#xA; &lt;li&gt;DK22Pac&lt;/li&gt; &#xA; &lt;li&gt;Fire_Head&lt;/li&gt; &#xA; &lt;li&gt;Nick007J&lt;/li&gt; &#xA; &lt;li&gt;NTAuthority&lt;/li&gt; &#xA; &lt;li&gt;Sergeanur&lt;/li&gt; &#xA; &lt;li&gt;spaceeinstein&lt;/li&gt; &#xA; &lt;li&gt;Wesser&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>