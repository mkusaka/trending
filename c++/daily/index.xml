<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-24T02:12:58Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Bill-Haku/kawaii-gcc</title>
    <updated>2023-11-24T02:12:58Z</updated>
    <id>tag:github.com,2023-11-24:/Bill-Haku/kawaii-gcc</id>
    <link href="https://github.com/Bill-Haku/kawaii-gcc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GCCコンパイラーを可愛くしましょう！Make your GCC compiler kawaii.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kawaii-gcc かわいいGCC&lt;/h1&gt; &#xA;&lt;p&gt;Make your GCC compiler kawaii~!&lt;/p&gt; &#xA;&lt;p&gt;This project makes the output messages from GCC compiler looks kawaii by editing the localization file of GCC.&lt;/p&gt; &#xA;&lt;p&gt;Everyone is welcomed to contribute and add more kawaii messages!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Bill-Haku/kawaii-gcc/main/README-zh.md&#34;&gt;中文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to use it?&lt;/h2&gt; &#xA;&lt;h3&gt;Linux (in an Ubuntu example)&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://youtu.be/ASWBU8HhvY0&#34;&gt;Demo Video on YouTube(Japanese)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Japanese for your terminal (if not installed)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install language-pack-ja language-pack-gnome-ja language-pack-ja-base language-pack-gnome-ja-base&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;code&gt;gcc&lt;/code&gt; , &lt;code&gt;gettext&lt;/code&gt; and &lt;code&gt;g++&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install gcc gettext g++&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install &lt;code&gt;gcc locales&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Check your gcc main version number by:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gcc -v&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It is 12.3.0 on my end. So the main version number is 12.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install gcc-12-locales&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Find your gcc language file. Defaultly, it should be found in &lt;code&gt;/usr/share/locale/ja/LC_MESSAGES/gcc.mo&lt;/code&gt;. However, it is also possible that you cannot find the file or the file is named as &lt;code&gt;gcc-12.mo&lt;/code&gt;. If there&#39;s a related file, back up it. (eg. &lt;code&gt;sudo mv gcc-12.mo gcc-12.mo.bak&lt;/code&gt;) Don&#39;t worry if there&#39;s no such file, you need to do nothing.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the following command to clone the project from GitHub and compile the &lt;code&gt;po&lt;/code&gt; file in the project and copy it to the path.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Bill-Haku/kawaii-gcc&#xA;cd kawaii-gcc&#xA;msgfmt gcc.po -o gcc.mo &amp;amp;&amp;amp; sudo cp gcc.mo /usr/share/locale/ja/LC_MESSAGES/gcc-12.mo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;The &lt;code&gt;gcc.po&lt;/code&gt; is the localization file for ja_JP, and the &lt;code&gt;gcc-zh.po&lt;/code&gt; is the localization file for zh_CN. See the &lt;a href=&#34;https://raw.githubusercontent.com/Bill-Haku/kawaii-gcc/main/README-zh.md&#34;&gt;Chinese version README&lt;/a&gt; document for more details.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;Regarding to the file name:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you found an existed file in the last step, use the existed file name.&lt;/li&gt; &#xA;   &lt;li&gt;if not, try &lt;code&gt;gcc-&amp;lt;MAIN VERSION NUMBER&amp;gt;.mo&lt;/code&gt; first, and if it doesn&#39;t work, rename it to &lt;code&gt;gcc.mo&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Change terminal environmental variables into Japanese:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vim ~/.bashrc&#xA;&#xA;# Add the following lines&#xA;export LANG=&#34;ja_JP.UTF-8&#34;&#xA;export LANGUAGE=&#34;ja_JP.UTF-8&#34;&#xA;# Save it in Vim&#xA;&#xA;source ~/.bashrc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now your GCC has become kawaii~!&lt;/p&gt; &lt;p&gt;You can have a try with the &lt;code&gt;test.cc&lt;/code&gt; provided in the project.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gcc test.cc -Wall&#xA;# -Wall makes GCC output all the warning messages.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;macOS &amp;amp; Windows&lt;/h3&gt; &#xA;&lt;p&gt;Not implemented yet. Contribution welcomed!&lt;/p&gt; &#xA;&lt;h2&gt;Special Thanks&lt;/h2&gt; &#xA;&lt;p&gt;This project is inspired by &lt;a href=&#34;https://github.com/Mosklia/gcc-hentai&#34;&gt;&lt;code&gt;gcc-hentai&lt;/code&gt;&lt;/a&gt;. It was a Chinese project, and I created this repo to make a Japanese version and share it to Japanese users. I added the new text, edited and completed some details in the use instructions, and made a video in Japanese to share it. The video got unexpected attention in Chinese users on Bilibili, so I added contents of Chinese in it. Thanks for the sharing and the open-source spirit of the original authors.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Green-bms/SmartBMS</title>
    <updated>2023-11-24T02:12:58Z</updated>
    <id>tag:github.com,2023-11-24:/Green-bms/SmartBMS</id>
    <link href="https://github.com/Green-bms/SmartBMS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open source Smart Battery Management System&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SmartBMS&lt;/h1&gt; &#xA;&lt;p&gt;Open source Smart Battery Management System&lt;/p&gt; &#xA;&lt;p&gt;Youtube presentation: &lt;a href=&#34;https://youtu.be/0XNe25lMs6U?si=eK-90N3kao_sy4zy&#34;&gt;https://youtu.be/0XNe25lMs6U?si=eK-90N3kao_sy4zy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Official page: &lt;a href=&#34;https://hackaday.io/project/181453-green-bms&#34;&gt;https://hackaday.io/project/181453-green-bms&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;Smart BMS is an Open Source Battery Management System for Lithium Cells (Lifepo4, Li-ion, NCM, etc.) Battery Pack.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.hackaday.io/images/3693341633270233795.png&#34; alt=&#34;alt-text&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The main functions of BMS are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To protect cells against overvoltage&lt;/li&gt; &#xA; &lt;li&gt;To protect cells against undervoltage&lt;/li&gt; &#xA; &lt;li&gt;To balance the cells&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Smart BMS consists of four main components:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Cell Module (&lt;a href=&#34;https://hackaday.io/project/181453-green-bms/log/198376-green-bms-cell-module&#34;&gt;https://hackaday.io/project/181453-green-bms/log/198376-green-bms-cell-module&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Control Unit (&lt;a href=&#34;https://hackaday.io/project/181453-green-bms/log/198414-green-bms-control-unit&#34;&gt;https://hackaday.io/project/181453-green-bms/log/198414-green-bms-control-unit&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Limiter (&lt;a href=&#34;https://hackaday.io/project/181453-green-bms/log/198378-green-bms-limiter&#34;&gt;https://hackaday.io/project/181453-green-bms/log/198378-green-bms-limiter&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Android App (&lt;a href=&#34;https://hackaday.io/project/181453-green-bms/log/198377-green-bms-android-app&#34;&gt;https://hackaday.io/project/181453-green-bms/log/198377-green-bms-android-app&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The voltage and the temperature values of each cell are acquired by the relevant Cell Module (based on Attiny microcontroller) and sent to Control Unit (based on Arduino Mega microcontroller) through a serial I2C line.&lt;/p&gt; &#xA;&lt;p&gt;Control Unit starts or stop charging (by output relay) through Limiter, that includes a power relay for opening or closing the charging circuit.&lt;/p&gt; &#xA;&lt;p&gt;Control Unit can also start or stop discharging by output relay.&lt;/p&gt; &#xA;&lt;p&gt;When during charging a cell reaches the “Balance voltage value parameter”, the Cell Module connects the balance resistors in order to perform the cell bleeding.&lt;/p&gt; &#xA;&lt;p&gt;When just one cell of the pack is balancing, Control Unit activates the current limit function inside the Limiter (the charging current is limited to 1A).&lt;/p&gt; &#xA;&lt;p&gt;Control Unit can be connected with a Smartphone (or a Tablet) by Bluetooth.&lt;/p&gt; &#xA;&lt;p&gt;By “Green BMS” Android app (available on Play Store) it is possible to check the Battery Pack status (total voltage, current load, state of charge…) , to check the actual voltage and temperature values of each cell and to perform several settings.&lt;/p&gt; &#xA;&lt;h2&gt;Android App free download&lt;/h2&gt; &#xA;&lt;p&gt;The Green BMS Android app is available here: &lt;a href=&#34;https://play.google.com/store/apps/details?id=appinventor.ai_sergio_ghirardelli75.Green_bms_0_0&amp;amp;pcampaignid=pcampaignidMKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1&#34;&gt;Green-BMS App&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tutorials&lt;/h2&gt; &#xA;&lt;p&gt;Step by step instructions for make Green BMS are available here: &lt;a href=&#34;https://hackaday.io/project/181453/instructions&#34;&gt;https://hackaday.io/project/181453/instructions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Youtube channel&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCdJnQnmzJSQNOAGbZR5iExA&#34;&gt;https://www.youtube.com/channel/UCdJnQnmzJSQNOAGbZR5iExA&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Subscribe please... &lt;span&gt;😄&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Open source Development applications&lt;/h2&gt; &#xA;&lt;p&gt;The project was created using the following Open source applications:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;KiCad&lt;/strong&gt; : to design cell module and Interface board&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;QElectroTech&lt;/strong&gt; : to design Limiter&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;LibreCad 2D&lt;/strong&gt; : to desingn Control Unit Box&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Arduino IDE&lt;/strong&gt; : to design the code of Cell Module(Attiny) and Control Unit(Arduino Mega)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mit App Inventor&lt;/strong&gt; : to design the Android Application&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Warning&lt;/h2&gt; &#xA;&lt;p&gt;Lithium and other batteries are dangerous and must be treated with care.&lt;/p&gt; &#xA;&lt;p&gt;Lithium and other batteries are potentially hazardous and can present a serious fire hazard if damaged, defective or improperly used.&lt;/p&gt; &#xA;&lt;p&gt;Green BMS is a &#34;do it yourself&#34; project, with no warranties whatsoever.&lt;/p&gt; &#xA;&lt;p&gt;Green BMS assumes no responsibility for any errors or inaccuracies that may appear in any documentation or file or any software that may be provided.&lt;/p&gt; &#xA;&lt;p&gt;The use of this project is done entirely at your own risk and responsibility.&lt;/p&gt; &#xA;&lt;p&gt;The use of this project may not be compliant with local laws or regulations.&lt;/p&gt; &#xA;&lt;h2&gt;Open Source Hardware Certification&lt;/h2&gt; &#xA;&lt;p&gt;Green BMS has been certified as open source hardware by the Open Source Hardware Association, with the UID: IT000007.&lt;/p&gt; &#xA;&lt;p&gt;Certificate link: (&lt;a href=&#34;https://certification.oshwa.org/it000007.html&#34;&gt;https://certification.oshwa.org/it000007.html&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This work is licensed under a &lt;strong&gt;Creative Commons Attribution-ShareAlike 4.0 International License&lt;/strong&gt;. &lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;https://creativecommons.org/licenses/by-sa/4.0/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;You are free to:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Share&lt;/strong&gt; — copy and redistribute the material in any medium or format&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Adapt&lt;/strong&gt; — remix, transform, and build upon the material for any purpose, even commercially. This license is acceptable for Free Cultural Works. The licensor cannot revoke these freedoms as long as you follow the license terms.&lt;/p&gt; &#xA;&lt;h3&gt;Under the following terms:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Attribution&lt;/strong&gt; — You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ShareAlike&lt;/strong&gt; — If you remix, transform, or build upon the material, you must distribute your contributions under the same license as the original.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;No additional restrictions&lt;/strong&gt; — You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.&lt;/p&gt; &#xA;&lt;h3&gt;Notices:&lt;/h3&gt; &#xA;&lt;p&gt;You do not have to comply with the license for elements of the material in the public domain or where your use is permitted by an applicable exception or limitation. No warranties are given. The license may not give you all of the permissions necessary for your intended use. For example, other rights such as publicity, privacy, or moral rights may limit how you use the material.&lt;/p&gt;</summary>
  </entry>
</feed>