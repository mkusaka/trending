<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-10T01:30:45Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pafuhana1213/KawaiiPhysics</title>
    <updated>2022-07-10T01:30:45Z</updated>
    <id>tag:github.com,2022-07-10:/pafuhana1213/KawaiiPhysics</id>
    <link href="https://github.com/pafuhana1213/KawaiiPhysics" rel="alternate"></link>
    <summary type="html">&lt;p&gt;KawaiiPhysics : Simple fake Physics for UnrealEngine4 &amp; 5&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kawaii Physics&lt;/h1&gt; &#xA;&lt;p&gt;English doc :&lt;br&gt; &lt;a href=&#34;https://github.com/pafuhana1213/KawaiiPhysics/raw/master/README_en.md&#34;&gt;https://github.com/pafuhana1213/KawaiiPhysics/blob/master/README_en.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Forum :&lt;br&gt; 日本語 &lt;a href=&#34;https://forums.unrealengine.com/international/japan/1679269&#34;&gt;https://forums.unrealengine.com/international/japan/1679269&lt;/a&gt;&lt;br&gt; 英語 &lt;a href=&#34;https://forums.unrealengine.com/community/released-projects/1638095&#34;&gt;https://forums.unrealengine.com/community/released-projects/1638095&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;はじめに&lt;/h2&gt; &#xA;&lt;p&gt;Kawaii Physicsは UnrealEngine4用に作成した疑似物理プラグインです。&lt;br&gt; 髪、スカート、胸などの揺れものを「かんたんに」「かわいく」揺らすことができます。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/pafuhana1213/Screenshot/raw/master/KawaiiPhysics1.gif&#34; alt=&#34;&#34;&gt;&lt;br&gt; お借りしたキャラクタ：Gray ちゃん &lt;a href=&#34;http://rarihoma.xvs.jp/products/graychan&#34;&gt;http://rarihoma.xvs.jp/products/graychan&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/pafuhana1213/Screenshot/raw/master/KawaiiPhysics0.gif&#34; alt=&#34;&#34;&gt;&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=UvpEIBGegvs&#34;&gt;https://www.youtube.com/watch?v=UvpEIBGegvs&lt;/a&gt;&lt;br&gt; お借りしたキャラクタ：ミライ小町 &lt;a href=&#34;https://www.bandainamcostudios.com/works/miraikomachi/&#34;&gt;https://www.bandainamcostudios.com/works/miraikomachi/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;特徴&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/pafuhana1213/Screenshot/raw/master/KawaiiPhysics2.jpg&#34; alt=&#34;&#34;&gt;&lt;br&gt; &lt;img src=&#34;https://github.com/pafuhana1213/Screenshot/raw/master/KawaiiPhysics4.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;元の形状を尊重しつつ、アニメーションやSkeletalMeshComponentの移動・回転を元に物理制御を行います。&lt;/li&gt; &#xA; &lt;li&gt;プラグインに含まれる「KawaiiPhysicsノード」をAnimationBPのAnimGraphで使う形です。&lt;/li&gt; &#xA; &lt;li&gt;指定したボーンとそれ以下のボーンをキャラクタの動きに合わせて揺らせます。&lt;/li&gt; &#xA; &lt;li&gt;物理制御用のパラメータは2種類だけなので、エンジン標準の&lt;a href=&#34;https://docs.unrealengine.com/ja/Engine/Animation/NodeReference/SkeletalControls/AnimDynamics/index.html&#34;&gt;AnimDynamics&lt;/a&gt;に比べて簡単にセットアップできます。&lt;/li&gt; &#xA; &lt;li&gt;球・カプセル・平面コリジョンを追加することができます&lt;/li&gt; &#xA; &lt;li&gt;アニメーションエディタのビューポート上で各コリジョンの位置・向き・大きさを調整できます&lt;/li&gt; &#xA; &lt;li&gt;骨の長さを維持するため、仮に計算が破綻しても骨が伸び縮みすることがありません。&lt;/li&gt; &#xA; &lt;li&gt;PhysXは使わずにシンプルなアルゴリズムを使用しているため、エンジン標準の物理システムに比べて負荷が低い（はず）です。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;物理挙動を実装するにあたって参考にした資料&lt;br&gt; &lt;a href=&#34;https://cedil.cesa.or.jp/cedil_sessions/view/416&#34;&gt;次期アイドルマスター グラフィクス＆アニメーション プログラミング プレビュー&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;動作環境&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;UE4.27.2, UE5.0&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;UE4.27, UE5.0以降（Pluginのみ）&lt;br&gt; &lt;a href=&#34;https://github.com/pafuhana1213/KawaiiPhysics/releases/&#34;&gt;https://github.com/pafuhana1213/KawaiiPhysics/releases/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;UE4.26以前（Pluginのみ）&lt;br&gt; &lt;a href=&#34;https://github.com/pafuhana1213/KawaiiPhysics/releases/tag/20201202-v1.7.0&#34;&gt;https://github.com/pafuhana1213/KawaiiPhysics/releases/tag/20201202-v1.7.0&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;UE4.26以前でビルドする際は、GetSkeleton()をSkeletonに修正する必要があります。&lt;/p&gt; &#xA;&lt;p&gt;UE4.21以前でビルドする場合は、KawaiiPhysicsEditMode.cpp における&lt;br&gt; GEngine-&amp;gt;ConstraintLimitMaterialPrismatic-&amp;gt;GetRenderProxy () を&lt;br&gt; GEngine-&amp;gt;ConstraintLimitMaterialPrismatic-&amp;gt;GetRenderProxy (false)　に修正する必要があります。&lt;/p&gt; &#xA;&lt;p&gt;UE4.23以前でビルドする場合は、awaiiPhysics.uplugin における&lt;br&gt; &#34;Type&#34;: &#34;UncookedOnly&#34;,　を &#34;Type&#34;: &#34;DeveloperTool&#34;, に修正する必要があります（たぶん）。&lt;/p&gt; &#xA;&lt;h2&gt;使い方&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;プロジェクト&lt;/strong&gt;のPluginsフォルダにKawaiiPhysicsフォルダを入れてください&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;各パラメータについて：&lt;a href=&#34;https://github.com/pafuhana1213/KawaiiPhysics/wiki/%E5%90%84%E3%83%91%E3%83%A9%E3%83%A1%E3%83%BC%E3%82%BF%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6&#34;&gt;https://github.com/pafuhana1213/KawaiiPhysics/wiki/%E5%90%84%E3%83%91%E3%83%A9%E3%83%A1%E3%83%BC%E3%82%BF%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;BPプロジェクトの場合、パッケージ時にエラーが発生します。お手数ですがC++プロジェクトに変換してみてください&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;サンプル&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/pafuhana1213/Screenshot/raw/master/KawaiiPhysics3.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Content/KawaiiPhysicsSample/KawaiiPhysicsSample&lt;/li&gt; &#xA; &lt;li&gt;お借りしたキャラクタ：Gray ちゃん &lt;a href=&#34;http://rarihoma.xvs.jp/products/graychan&#34;&gt;http://rarihoma.xvs.jp/products/graychan&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;内部実装について&lt;/h2&gt; &#xA;&lt;p&gt;その1 &lt;a href=&#34;http://pafuhana1213.hatenablog.com/entry/2019/07/26/171046&#34;&gt;http://pafuhana1213.hatenablog.com/entry/2019/07/26/171046&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ライセンス&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt; &#xA;&lt;h2&gt;採用実績&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pafuhana1213/KawaiiPhysics/wiki/%E6%8E%A1%E7%94%A8%E5%AE%9F%E7%B8%BE-Adoption&#34;&gt;https://github.com/pafuhana1213/KawaiiPhysics/wiki/%E6%8E%A1%E7%94%A8%E5%AE%9F%E7%B8%BE-Adoption&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;作者&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/pafuhana1213&#34;&gt;おかず@pafuhana1213&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ハッシュタグ&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/search?q=%23kawaiiphysics&amp;amp;src=typed_query&amp;amp;f=live&#34;&gt;#KawaiiPhysics&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;履歴&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2022/4/11 v1.9.0 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;カーブアセットを作らなくても、カーブでのパラメーター編集ができるようになりました　&lt;a href=&#34;https://github.com/pafuhana1213/KawaiiPhysics/pull/32&#34;&gt;https://github.com/pafuhana1213/KawaiiPhysics/pull/32&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;ワールドコリジョン機能が入りました。サンプルにも追加してます　&lt;a href=&#34;https://github.com/pafuhana1213/KawaiiPhysics/pull/26&#34;&gt;https://github.com/pafuhana1213/KawaiiPhysics/pull/26&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;LOD設定などにより末端のボーンが機能しない場合、DummyBoneが生成されない不具合を修正しました　&lt;a href=&#34;https://github.com/pafuhana1213/KawaiiPhysics/pull/26&#34;&gt;https://github.com/pafuhana1213/KawaiiPhysics/pull/26&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;ResetPhysics時に物理設定がリセットされる不具合を修正しました　&lt;a href=&#34;https://github.com/pafuhana1213/KawaiiPhysics/issues/38&#34;&gt;https://github.com/pafuhana1213/KawaiiPhysics/issues/38&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;LOD切り替え時のあらぶりを抑える（かもしれない）処理を追加しました。ResetBoneTransformWhenBoneNotFoundを有効にしたら以前の処理に戻ります　&lt;a href=&#34;https://github.com/pafuhana1213/KawaiiPhysics/issues/44&#34;&gt;https://github.com/pafuhana1213/KawaiiPhysics/issues/44&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2022/4/11 v1.8.0 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;UE5正式版に対応&lt;/li&gt; &#xA;   &lt;li&gt;UE4.26以下のサポートを一旦切りました。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2020/12/2 v1.7.0 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;UAnimInstance::ResetDynamics(ETeleportType::ResetPhysics)呼び出しでのリセットに対応 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;説明：&lt;a href=&#34;https://twitter.com/pafuhana1213/status/1334141624666910722&#34;&gt;https://twitter.com/pafuhana1213/status/1334141624666910722&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/pafuhana1213/KawaiiPhysics/pull/30&#34;&gt;https://github.com/pafuhana1213/KawaiiPhysics/pull/30&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;KazumasaOhashi様、ありがとうございました！&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;サンプルレベルの2キーでテストできるようにしました&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2020/11/17 v.1.6.2 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;FKawaiiPhysicsEditMode::DrawHUDが正常に動作していない不具合を修正&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2020/9/4 v1.6.1 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;プロパティのカテゴリ指定忘れによるパッケージ作成エラーの修正&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2020/8/29 v1.6.0 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;専用のDataAsset(KawaiiPhysicsLimitsDataAsset)でコリジョン設定を管理・流用できるようになりました &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;使い方：&lt;a href=&#34;https://youtu.be/jnJqRu7zn3c&#34;&gt;https://youtu.be/jnJqRu7zn3c&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;動作実績があまりないのでExperimentalということでお願いします&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;UE4.25.3をデフォルトにしました&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2020/7/28 v1.5.3 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;MeshとSkeletonのBoneIndexが違う場合に、正しい長さが取得できなくて、カーブでのパラメータが正常に動作しなくなる不具合修正 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/pafuhana1213/KawaiiPhysics/pull/21&#34;&gt;https://github.com/pafuhana1213/KawaiiPhysics/pull/21&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;nkinta 様ありがとうございました！&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2020/5/29 v1.5.2 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;v1.5.1 における対応がDummyBoneを考慮してなかった不具合の修正&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2020/5/29 v1.5.1 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;bEnableDebugBoneLengthRate によるデバッグ表示の表示位置がズレていた不具合の修正&lt;/li&gt; &#xA;   &lt;li&gt;↑のデバッグ表示のテキスト形式をエンジン標準のボーン名表示と同じに &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://twitter.com/pafuhana1213/status/1266264162788765696&#34;&gt;https://twitter.com/pafuhana1213/status/1266264162788765696&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2020/5/29 v1.5.0 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ボーンの向きを設定するBoneForwardAxisプロパティを追加。これはDummyBoneの挙動にのみ影響します&lt;br&gt; (SAM-tak 様、ありがとうございました！) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://twitter.com/pafuhana1213/status/1266224108657762307&#34;&gt;https://twitter.com/pafuhana1213/status/1266224108657762307&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2020/5/15 v1.4.6 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Rootと同じボーンをExcludeBoneに指定するとクラッシュする不具合を修正&lt;/li&gt; &#xA;   &lt;li&gt;不正な設定の場合はノードをWarning または Error表示にする処理を追加 &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;技術解説：&lt;a href=&#34;http://pafuhana1213.hatenablog.com/entry/2020/05/16/173837&#34;&gt;http://pafuhana1213.hatenablog.com/entry/2020/05/16/173837&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2020/5/15 v1.4.5 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;GravityをComponentSpaceで動作するように変更&lt;br&gt; (dxd39 様、ありがとうございました！)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2020/3/13 v1.4.4 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;MacOSでビルドに失敗する不具合の修正&lt;br&gt; (melMass 様、ありがとうございました！)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2020/3/13 v1.4.3 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Package作成に失敗する不具合を修正&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2020/2/16 v1.4.2 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Standalone実行時に正常に動作しない不具合を修正&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2020/1/31 v1.4.1 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;SphereLimitのLimitTypeがInnerの場合、Outer設定時に異なりBoneのRadius設定を考慮してなかった不具合の修正&lt;br&gt; 1.3.1以前の挙動に戻したい方は CVarEnableOldPhysicsMethodSphereLimit を 1 に設定してください&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2020/1/31 v1.4.0 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;重力変数の位置更新の計算がgt^2でなくgtになっていたので修正&lt;br&gt; 1.3.1以前の重力計算を使用したい場合は　p.KawaiiPhysics.EnableOldPhysicsMethodGravity を 1 に設定してください&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2020/1/31 v1.3.1 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;TeleportRotationThresholdの計算にてラジアンと度が混在していたことでWorldRotationのテレポート対応がほぼ機能してなかった不具合を修正&lt;br&gt; (monguri 様、ありがとうございました！)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2020/1/31 v1.3.0 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;UE4.24.2 に対応&lt;br&gt; (TheHoodieGuy02 様、ありがとうございました！)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2019/10/29 v1.2.1 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;World Damping系を従来処理に差し戻し。30fps時の挙動が更に安定しました&lt;br&gt; (@seiko_dev 様、ありがとうございました！)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2019/10/26 v1.2.0 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;簡易可変フレームレート対応。フレームレート低下時の挙動が少し安定するようになったはず&lt;br&gt; (@seiko_dev 様、ありがとうございました！)&lt;/li&gt; &#xA;   &lt;li&gt;基準フレームレートを設定できるようにしました(デフォルト：60)（正直テスト不足です。何かあったらissueへ&lt;/li&gt; &#xA;   &lt;li&gt;カーブの調整用に各ボーンの始点からの長さの割合をデバッグ表示するようにしました&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2019/10/19 v1.1.2 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;BoneのScaleが(1,1,1)以外の環境に対応できてなかったので修正&lt;br&gt; (shop-0761様、ありがとうございました！)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2019/9/11 v1.1.1 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Bone.LengthFromRoot の計算が間違っていたのを修正&lt;br&gt; (KazumasaOhashi様、ありがとうございました！)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2019/8/26 v1.1 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;WindDirectionalSourceに対応しました(注意：従来のWind設定に対して破壊的変更が入ります)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2019/7/20 v1.0.1 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;CollisionのOffsetLocationがボーンのRotationを考慮していない不具合の修正&lt;br&gt; (v1.0 におけるOffsetLocationの挙動が大きく変化します)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2019/7/2 v1.0 公開 v1.0&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>google/flatbuffers</title>
    <updated>2022-07-10T01:30:45Z</updated>
    <id>tag:github.com,2022-07-10:/google/flatbuffers</id>
    <link href="https://github.com/google/flatbuffers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FlatBuffers: Memory Efficient Serialization Library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;http://google.github.io/flatbuffers/fpl_logo_small.png&#34; alt=&#34;logo&#34;&gt; FlatBuffers&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/google/flatbuffers/actions/workflows/build.yml/badge.svg?branch=master&#34; alt=&#34;Build status&#34;&gt; &lt;a href=&#34;https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:flatbuffers&#34;&gt;&lt;img src=&#34;https://oss-fuzz-build-logs.storage.googleapis.com/badges/flatbuffers.svg?sanitize=true&#34; alt=&#34;Fuzzing Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/google/flatbuffers?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/google/flatbuffers.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/google/flatbuffers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https:///discord.gg/6qgKs3R&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/656202785926152206.svg?sanitize=true&#34; alt=&#34;Discord Chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/wvo&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/wvo.svg?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/dbaileychess&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/dbaileychess.svg?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;FlatBuffers&lt;/strong&gt; is a cross platform serialization library architected for maximum memory efficiency. It allows you to directly access serialized data without parsing/unpacking it first, while still having great forwards/backwards compatibility.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Go to our &lt;a href=&#34;https://google.github.io/flatbuffers&#34;&gt;landing page&lt;/a&gt; to browse our documentation.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported operating systems&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows&lt;/li&gt; &#xA; &lt;li&gt;MacOS X&lt;/li&gt; &#xA; &lt;li&gt;Linux&lt;/li&gt; &#xA; &lt;li&gt;Android&lt;/li&gt; &#xA; &lt;li&gt;And any others with a recent C++ compiler.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported programming languages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;C++&lt;/li&gt; &#xA; &lt;li&gt;C#&lt;/li&gt; &#xA; &lt;li&gt;C&lt;/li&gt; &#xA; &lt;li&gt;Dart&lt;/li&gt; &#xA; &lt;li&gt;Go&lt;/li&gt; &#xA; &lt;li&gt;Java&lt;/li&gt; &#xA; &lt;li&gt;JavaScript&lt;/li&gt; &#xA; &lt;li&gt;Lobster&lt;/li&gt; &#xA; &lt;li&gt;Lua&lt;/li&gt; &#xA; &lt;li&gt;PHP&lt;/li&gt; &#xA; &lt;li&gt;Python&lt;/li&gt; &#xA; &lt;li&gt;Rust&lt;/li&gt; &#xA; &lt;li&gt;Swift&lt;/li&gt; &#xA; &lt;li&gt;TypeScript&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;and more in progress...&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/flatbuffers&#34;&gt;FlatBuffers Google Group&lt;/a&gt; to discuss FlatBuffers with other developers and users.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/google/flatbuffers/issues&#34;&gt;FlatBuffers Issues Tracker&lt;/a&gt; to submit an issue.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/search?q=flatbuffers&#34;&gt;stackoverflow.com&lt;/a&gt; with &lt;a href=&#34;https://stackoverflow.com/questions/tagged/flatbuffers&#34;&gt;&lt;code&gt;flatbuffers&lt;/code&gt; tag&lt;/a&gt; for any questions regarding FlatBuffers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;To contribute to this project,&lt;/em&gt; see &lt;a href=&#34;http://github.com/google/flatbuffers/blob/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;Please see our &lt;a href=&#34;https://raw.githubusercontent.com/google/flatbuffers/master/SECURITY.md&#34;&gt;Security Policy&lt;/a&gt; for reporting vulnerabilities.&lt;/p&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Flatbuffers&lt;/em&gt; is licensed under the Apache License, Version 2.0. See &lt;a href=&#34;https://github.com/google/flatbuffers/raw/master/LICENSE.txt&#34;&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt; &#xA;&lt;br&gt;</summary>
  </entry>
  <entry>
    <title>pixie-io/pixie</title>
    <updated>2022-07-10T01:30:45Z</updated>
    <id>tag:github.com,2022-07-10:/pixie-io/pixie</id>
    <link href="https://github.com/pixie-io/pixie" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Instant Kubernetes-Native Application Observability&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://px.dev&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pixie-io/pixie/main/.readme_assets/pixie-horizontal-color.png&#34; alt=&#34;Pixie!&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.px.dev&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-latest-blue&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://slackin.px.dev&#34;&gt;&lt;img src=&#34;https://slackin.px.dev/badge.svg?sanitize=true&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/pixie_run&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/https/twitter.com/pixie_run.svg?style=social&amp;amp;label=Follow%20%40pixie_run&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ramitsurana/awesome-kubernetes&#34;&gt;&lt;img src=&#34;https://awesome.re/mentioned-badge.svg?sanitize=true&#34; alt=&#34;Mentioned in Awesome Kubernetes&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/avelino/awesome-go&#34;&gt;&lt;img src=&#34;https://awesome.re/mentioned-badge.svg?sanitize=true&#34; alt=&#34;Mentioned in Awesome Go&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jenkins.corp.pixielabs.ai/job/pixie-oss/job/build-and-test-all/&#34;&gt;&lt;img src=&#34;https://jenkins.corp.pixielabs.ai/buildStatus/icon?job=pixie-oss%2Fbuild-and-test-all&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/pixie-io/pixie&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/pixie-io/pixie/branch/main/graph/badge.svg?token=UG7P3QE5PQ&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.com/projects/custom%2B26327%2Fgithub.com%2Fpixie-io%2Fpixie?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/custom%2B26327%2Fgithub.com%2Fpixie-io%2Fpixie.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://artifacthub.io/packages/olm/community-operators/pixie-operator&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/pixie-operator&#34; alt=&#34;Artifact HUB&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/5027&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/5027/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://clomonitor.io/projects/cncf/pixie/pixie&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://clomonitor.io/api/projects/cncf/pixie/pixie/badge&#34; alt=&#34;CLOMonitor&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Pixie is an open-source observability tool for Kubernetes applications. Use Pixie to view the high-level state of your cluster (service maps, cluster resources, application traffic) and also drill down into more detailed views (pod state, flame graphs, individual full-body application requests).&lt;/p&gt; &#xA;&lt;h2&gt;Why Pixie?&lt;/h2&gt; &#xA;&lt;p&gt;Three features enable Pixie&#39;s magical developer experience:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Auto-telemetry:&lt;/strong&gt; Pixie uses eBPF to automatically collect telemetry data such as full-body requests, resource and network metrics, application profiles, and more. See the full list of data sources &lt;a href=&#34;https://docs.px.dev/about-pixie/data-sources/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;In-Cluster Edge Compute:&lt;/strong&gt; Pixie collects, stores and queries all telemetry data locally in the cluster. Pixie uses less than 5% of cluster CPU and in most cases less than 2%.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Scriptability:&lt;/strong&gt; &lt;a href=&#34;https://docs.px.dev/reference/pxl/&#34;&gt;PxL&lt;/a&gt;, Pixie’s flexible Pythonic query language, can be used across Pixie’s UI, CLI, and client APIs.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Use Cases&lt;/h2&gt; &#xA;&lt;h3&gt;Network Monitoring&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/pixie-io/pixie/main/.readme_assets/net_flow_graph.png&#34; alt=&#34;Network Flow Graph&#34; width=&#34;525&#34; align=&#34;right&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Use Pixie to monitor your network, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The flow of network traffic within your cluster.&lt;/li&gt; &#xA; &lt;li&gt;The flow of DNS requests within your cluster.&lt;/li&gt; &#xA; &lt;li&gt;Individual full-body DNS requests and responses.&lt;/li&gt; &#xA; &lt;li&gt;A Map of TCP drops and TCP retransmits across your cluster.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;For more details, check out the &lt;a href=&#34;https://docs.px.dev/tutorials/pixie-101/network-monitoring/&#34;&gt;tutorial&lt;/a&gt; or &lt;a href=&#34;https://youtu.be/qIxzIPBhAUI&#34;&gt;watch&lt;/a&gt; an overview.&lt;/p&gt; &#xA;&lt;br clear=&#34;all&#34;&gt; &#xA;&lt;h3&gt;Infrastructure Health&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/pixie-io/pixie/main/.readme_assets/nodes.png&#34; alt=&#34;Infrastructure Monitoring&#34; width=&#34;525&#34; align=&#34;right&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Monitor your infrastructure alongside your network and application layer, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Resource usage by Pod, Node, Namespace.&lt;/li&gt; &#xA; &lt;li&gt;CPU flame graphs per Pod, Node.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;For more details, check out the &lt;a href=&#34;https://docs.px.dev/tutorials/pixie-101/infra-health/&#34;&gt;tutorial&lt;/a&gt; or &lt;a href=&#34;https://youtu.be/2dFIpiBryu8&#34;&gt;watch&lt;/a&gt; an overview.&lt;/p&gt; &#xA;&lt;br clear=&#34;all&#34;&gt; &#xA;&lt;h3&gt;Service Performance&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/pixie-io/pixie/main/.readme_assets/service.png&#34; alt=&#34;Service Performance&#34; width=&#34;525&#34; align=&#34;right&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Pixie automatically traces a &lt;a href=&#34;https://docs.px.dev/about-pixie/data-sources/&#34;&gt;variety of protocols&lt;/a&gt;. Get immediate visibility into the health of your services, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The flow of traffic between your services.&lt;/li&gt; &#xA; &lt;li&gt;Latency per service and endpoint.&lt;/li&gt; &#xA; &lt;li&gt;Sample of the slowest requests for an individual service.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;For more details, check out the &lt;a href=&#34;https://docs.px.dev/tutorials/pixie-101/service-performance/&#34;&gt;tutorial&lt;/a&gt; or &lt;a href=&#34;https://youtu.be/Rex0yz_5vwc&#34;&gt;watch&lt;/a&gt; an overview.&lt;/p&gt; &#xA;&lt;br clear=&#34;all&#34;&gt; &#xA;&lt;h3&gt;Database Query Profiling&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/pixie-io/pixie/main/.readme_assets/sql_query.png&#34; alt=&#34;Database Query Profilling&#34; width=&#34;525&#34; align=&#34;right&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Pixie automatically traces several different &lt;a href=&#34;https://docs.px.dev/about-pixie/data-sources/#supported-protocols&#34;&gt;database protocols&lt;/a&gt;. Use Pixie to monitor the performance of your database requests:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Latency, error, and throughput (LET) rate for all pods.&lt;/li&gt; &#xA; &lt;li&gt;LET rate per normalized query.&lt;/li&gt; &#xA; &lt;li&gt;Latency per individual full-body query.&lt;/li&gt; &#xA; &lt;li&gt;Individual full-body requests and responses.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;For more details, check out the &lt;a href=&#34;https://docs.px.dev/tutorials/pixie-101/database-query-profiling/&#34;&gt;tutorial&lt;/a&gt; or &lt;a href=&#34;https://youtu.be/5NkU--hDXRQ&#34;&gt;watch&lt;/a&gt; an overview.&lt;/p&gt; &#xA;&lt;br clear=&#34;all&#34;&gt; &#xA;&lt;h3&gt;Request Tracing&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/pixie-io/pixie/main/.readme_assets/http_data_filtered.png&#34; alt=&#34;Request Tracing&#34; width=&#34;525&#34; align=&#34;right&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Pixie makes debugging this communication between microservices easy by providing immediate and deep (full-body) visibility into requests flowing through your cluster. See:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full-body requests and responses for &lt;a href=&#34;https://docs.px.dev/about-pixie/data-sources/#supported-protocols&#34;&gt;supported protocols&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Error rate per Service, Pod.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;For more details, check out the &lt;a href=&#34;https://docs.px.dev/tutorials/pixie-101/request-tracing/&#34;&gt;tutorial&lt;/a&gt; or &lt;a href=&#34;https://youtu.be/Gl0so4rbwno&#34;&gt;watch&lt;/a&gt; an overview.&lt;/p&gt; &#xA;&lt;br clear=&#34;all&#34;&gt; &#xA;&lt;h3&gt;Continuous Application Profiling&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/pixie-io/pixie/main/.readme_assets/pod_flamegraph.png&#34; alt=&#34;Continuous Application Profiling&#34; width=&#34;525&#34; align=&#34;right&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Use Pixie&#39;s continuous profiling feature to identify performance issues within application code.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;For more details, check out the &lt;a href=&#34;https://docs.px.dev/tutorials/pixie-101/profiler/&#34;&gt;tutorial&lt;/a&gt; or &lt;a href=&#34;https://youtu.be/Zr-s3EvAey8&#34;&gt;watch&lt;/a&gt; an overview.&lt;/p&gt; &#xA;&lt;br clear=&#34;all&#34;&gt; &#xA;&lt;h3&gt;Distributed bpftrace Deployment&lt;/h3&gt; &#xA;&lt;p&gt;Use Pixie to deploy a &lt;a href=&#34;https://github.com/iovisor/bpftrace&#34;&gt;bpftrace&lt;/a&gt; program to all of the nodes in your cluster. After deploying the program, Pixie captures the output into a table and makes the data available to be queried and visualized in the Pixie UI. TCP Drops are pictured. For more details, check out the &lt;a href=&#34;https://docs.px.dev/tutorials/custom-data/distributed-bpftrace-deployment/&#34;&gt;tutorial&lt;/a&gt; or &lt;a href=&#34;https://youtu.be/xT7OYAgIV28&#34;&gt;watch&lt;/a&gt; an overview.&lt;/p&gt; &#xA;&lt;h3&gt;Dynamic Go Logging&lt;/h3&gt; &#xA;&lt;p&gt;Debug Go binaries deployed in production environments without needing to recompile and redeploy. For more details, check out the &lt;a href=&#34;https://docs.px.dev/tutorials/custom-data/dynamic-go-logging/&#34;&gt;tutorial&lt;/a&gt; or &lt;a href=&#34;https://youtu.be/aH7PHSsiIPM&#34;&gt;watch&lt;/a&gt; an overview.&lt;/p&gt; &#xA;&lt;br clear=&#34;all&#34;&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/pixie-io/pixie/main/.readme_assets/http_data.svg?sanitize=true&#34; alt=&#34;Request Tracing&#34; width=&#34;525&#34; align=&#34;right&#34;&gt; &#xA;&lt;p&gt;It takes just a few minutes to install Pixie. To get started, check out the &lt;a href=&#34;https://docs.px.dev/installing-pixie/install-guides/&#34;&gt;Install Guides&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Once installed, you can interact with Pixie using the:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.px.dev/using-pixie/using-live-ui/&#34;&gt;Web-based Live UI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.px.dev/using-pixie/using-cli/&#34;&gt;CLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.px.dev/using-pixie/api-quick-start/&#34;&gt;API&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br clear=&#34;all&#34;&gt; &#xA;&lt;h2&gt;Get Involved&lt;/h2&gt; &#xA;&lt;p&gt;Pixie is a community-driven project; we welcome your contribution! For code contributions, please read our &lt;a href=&#34;https://raw.githubusercontent.com/pixie-io/pixie/main/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;File a &lt;a href=&#34;https://github.com/pixie-io/pixie/issues&#34;&gt;GitHub issue&lt;/a&gt; to report a bug or request a feature.&lt;/li&gt; &#xA; &lt;li&gt;Join our &lt;a href=&#34;https://slackin.px.dev&#34;&gt;Slack&lt;/a&gt; for live conversations and quick questions. We are also available on the &lt;a href=&#34;https://slack.cncf.io/app_redirect?channel=pixie%22&#34;&gt;CNCF slack&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Follow us on &lt;a href=&#34;https://twitter.com/pixie_run&#34;&gt;Twitter&lt;/a&gt; and &lt;a href=&#34;https://www.youtube.com/channel/UCOMCDRvBVNIS0lCyOmst7eg&#34;&gt;YouTube&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Join our monthly &lt;a href=&#34;https://px.dev/community/#events&#34;&gt;community meetings&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Provide feedback on our &lt;a href=&#34;https://docs.px.dev/about-pixie/roadmap/&#34;&gt;roadmap&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br clear=&#34;all&#34;&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;The changelog is stored in annotated git tags.&lt;/p&gt; &#xA;&lt;p&gt;For vizier:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git for-each-ref refs/tags/release/vizier/$tagname --format=&#39;%(tag) %(contents)&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For the CLI:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git for-each-ref refs/tags/release/cli/$tagname --format=&#39;%(tag) %(contents)&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These are also published on the &lt;a href=&#34;https://github.com/pixie-io/pixie/releases&#34;&gt;releases&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h2&gt;Adopters&lt;/h2&gt; &#xA;&lt;p&gt;The known adopters and users of Pixie are listed &lt;a href=&#34;https://raw.githubusercontent.com/pixie-io/pixie/main/ADOPTERS.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Software Bill of Materials&lt;/h2&gt; &#xA;&lt;p&gt;We publish a list of all the components Pixie depends on and the corresponding versions and licenses &lt;a href=&#34;https://storage.googleapis.com/pixie-dev-public/oss-licenses/latest.json&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;About Pixie&lt;/h2&gt; &#xA;&lt;p&gt;Pixie was contributed by &lt;a href=&#34;https://newrelic.com/&#34;&gt;New Relic, Inc.&lt;/a&gt; to the &lt;a href=&#34;https://www.cncf.io/&#34;&gt;Cloud Native Computing Foundation&lt;/a&gt; as a Sandbox project in June 2021.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Pixie is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/pixie-io/pixie/main/LICENSE&#34;&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>