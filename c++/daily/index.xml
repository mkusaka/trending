<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-18T01:26:41Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dosbox-staging/dosbox-staging</title>
    <updated>2024-02-18T01:26:41Z</updated>
    <id>tag:github.com,2024-02-18:/dosbox-staging/dosbox-staging</id>
    <link href="https://github.com/dosbox-staging/dosbox-staging" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DOSBox Staging is a modern continuation of DOSBox with advanced features and current development practices.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DOSBox Staging&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPL--2.0--or--later-blue&#34; alt=&#34;GPL-2.0-or-later&#34;&gt; &lt;a href=&#34;https://discord.gg/WwAg3Xf&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/514567252864008206?color=%237289da&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;label=discord&#34; alt=&#34;Chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository attempts to modernize the DOSBox codebase by using current development practices and tools, fixing issues, and adding features that better support today&#39;s systems.&lt;/p&gt; &#xA;&lt;h2&gt;Build status&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dosbox-staging/dosbox-staging/actions/workflows/linux.yml?query=branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/dosbox-staging/dosbox-staging/linux.yml?label=Linux%20%28x86_64%29&#34; alt=&#34;Linux x86_64 build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dosbox-staging/dosbox-staging/actions/workflows/platforms.yml?query=branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/dosbox-staging/dosbox-staging/platforms.yml?label=Linux%20%28other%29&#34; alt=&#34;Linux other build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dosbox-staging/dosbox-staging/actions/workflows/windows-msvc.yml?query=branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/dosbox-staging/dosbox-staging/windows-msvc.yml?label=Windows%20%28Visual%20Studio%29&#34; alt=&#34;Windows (VisualStudio) build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dosbox-staging/dosbox-staging/actions/workflows/windows-msys2.yml?query=branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/dosbox-staging/dosbox-staging/windows-msys2.yml?label=Windows%20%28MSYS2%29&#34; alt=&#34;Windows (MSYS2) build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dosbox-staging/dosbox-staging/actions/workflows/macos.yml?query=branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/dosbox-staging/dosbox-staging/macos.yml?label=macOS%20%28x86_64%2C%20arm64%29&#34; alt=&#34;macOS build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Code quality status&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scan.coverity.com/projects/dosbox-staging&#34;&gt;&lt;img src=&#34;https://img.shields.io/coverity/scan/dosbox-staging&#34; alt=&#34;Coverity status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Key features for developers&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Feature&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Status&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Version control&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Git&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Language&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;C++17&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SDL&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= 2.0.5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Logging&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Loguru for C++&lt;sup&gt;&lt;a href=&#34;https://github.com/emilk/loguru&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Buildsystem&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Meson or Visual Studio 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;CI&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Static analysis&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;sup&gt;&lt;a href=&#34;https://github.com/dosbox-staging/dosbox-staging/actions?query=workflow%3A%22Code+analysis%22&#34;&gt;1&lt;/a&gt;,&lt;a href=&#34;https://scan.coverity.com/projects/dosbox-staging&#34;&gt;3&lt;/a&gt;,&lt;a href=&#34;https://github.com/dosbox-staging/dosbox-staging/actions?query=workflow%3A%22PVS-Studio+analysis%22&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Dynamic analysis&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;clang-format&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://dosbox-staging.github.io/releases/development-builds/&#34;&gt;Development builds&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Unit tests&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;sup&gt;&lt;a href=&#34;https://github.com/dosbox-staging/dosbox-staging/tree/main/tests&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Automated regression tests&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;WIP&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Stable release builds&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dosbox-staging.github.io/releases/linux/&#34;&gt;Linux&lt;/a&gt;, &lt;a href=&#34;https://dosbox-staging.github.io/releases/windows/&#34;&gt;Windows&lt;/a&gt;, &lt;a href=&#34;https://dosbox-staging.github.io/releases/macos/&#34;&gt;macOS&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Test builds &amp;amp; development snapshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dosbox-staging.github.io/releases/development-builds/&#34;&gt;Development builds&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;DOSBox Staging has the following library dependencies:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Package&lt;/th&gt; &#xA;   &lt;th&gt;Lib name&lt;/th&gt; &#xA;   &lt;th&gt;Provides feature&lt;/th&gt; &#xA;   &lt;th&gt;Presence&lt;/th&gt; &#xA;   &lt;th&gt;Meson wrap&lt;/th&gt; &#xA;   &lt;th&gt;VCPKG&lt;/th&gt; &#xA;   &lt;th&gt;Repo availability&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.fluidsynth.org/&#34;&gt;FluidSynth&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;fluidsynth&lt;/td&gt; &#xA;   &lt;td&gt;General MIDI playback&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;common&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/google/googletest&#34;&gt;Google Test+Mock&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;gmock&lt;/td&gt; &#xA;   &lt;td&gt;Framework for unit testing (development)&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;common&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/berndporr/iir1&#34;&gt;IIR&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;iir1&lt;/td&gt; &#xA;   &lt;td&gt;Audio filtering&lt;/td&gt; &#xA;   &lt;td&gt;Mandatory&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;rare&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.libpng.org/pub/png/libpng.html&#34;&gt;libpng&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;libpng&lt;/td&gt; &#xA;   &lt;td&gt;PNG-encoding of screen captures&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;very common&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/munt/munt&#34;&gt;Munt&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;libmt32emu&lt;/td&gt; &#xA;   &lt;td&gt;Roland MT-32 and CM-32L playback&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;rare&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://opus-codec.org/&#34;&gt;Opus File&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;opusfile&lt;/td&gt; &#xA;   &lt;td&gt;CDDA playback for Opus-encoded track files&lt;/td&gt; &#xA;   &lt;td&gt;Mandatory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;no&lt;/strong&gt; ðŸ”´&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;common&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/libsdl-org/SDL&#34;&gt;SDL 2.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;sdl2&lt;/td&gt; &#xA;   &lt;td&gt;OS-agnostic API for video, audio, and eventing&lt;/td&gt; &#xA;   &lt;td&gt;Mandatory&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;no&lt;/strong&gt; ðŸ”´&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;common&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/libsdl-org/SDL_net&#34;&gt;SDL_net 2.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;sdl2-net&lt;/td&gt; &#xA;   &lt;td&gt;Network API for emulated serial and IPX&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;no&lt;/strong&gt; ðŸ”´&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;common&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gitlab.freedesktop.org/slirp&#34;&gt;slirp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;libslirp&lt;/td&gt; &#xA;   &lt;td&gt;Unprivileged virtual TCP/IP stack for Ethernet&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;less common&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/xiph/speexdsp&#34;&gt;SpeexDSP&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;speexdsp&lt;/td&gt; &#xA;   &lt;td&gt;Audio resampling&lt;/td&gt; &#xA;   &lt;td&gt;Mandatory&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;common&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/wolfpld/tracy&#34;&gt;Tracy Profiler&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;tracy&lt;/td&gt; &#xA;   &lt;td&gt;Event profile (development)&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;rare&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.zlib.net/&#34;&gt;zlib&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;zlib&lt;/td&gt; &#xA;   &lt;td&gt;ZMBV video capture&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;no&lt;/strong&gt; ðŸ”´&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;very common&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zlib-ng/zlib-ng&#34;&gt;zlib-ng&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;zlib-ng&lt;/td&gt; &#xA;   &lt;td&gt;ZMBV video capture (more performant zlib replacement)&lt;/td&gt; &#xA;   &lt;td&gt;Optional&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;common&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;See the Meson wrap files in &lt;a href=&#34;https://raw.githubusercontent.com/dosbox-staging/dosbox-staging/main/subprojects&#34;&gt;subprojects&lt;/a&gt; the current library versions we use.&lt;/p&gt; &#xA;&lt;h2&gt;Get the sources&lt;/h2&gt; &#xA;&lt;p&gt;Clone the repository (one-time step):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/dosbox-staging/dosbox-staging.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Build instructions&lt;/h2&gt; &#xA;&lt;p&gt;Read &lt;a href=&#34;https://raw.githubusercontent.com/dosbox-staging/dosbox-staging/main/BUILD.md&#34;&gt;BUILD.md&lt;/a&gt; for the comprehensive compilation guide.&lt;/p&gt; &#xA;&lt;h3&gt;Linux, macOS&lt;/h3&gt; &#xA;&lt;p&gt;Install build dependencies appropriate for your OS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Fedora&#xA;sudo dnf install ccache gcc-c++ meson alsa-lib-devel libatomic libpng-devel \&#xA;                 SDL2-devel SDL2_net-devel opusfile-devel \&#xA;                 fluidsynth-devel iir1-devel mt32emu-devel libslirp-devel \&#xA;                 speexdsp-devel libXi-devel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Debian, Ubuntu&#xA;sudo apt install ccache build-essential libasound2-dev libatomic1 libpng-dev \&#xA;                 libsdl2-dev libsdl2-net-dev libopusfile-dev \&#xA;                 libfluidsynth-dev libslirp-dev libspeexdsp-dev libxi-dev&#xA;&#xA;# Install Meson on Debian-10 &#34;Buster&#34; or Ubuntu-20.04 and older&#xA;sudo apt install python3-setuptools python3-pip&#xA;sudo pip3 install --upgrade meson ninja&#xA;&#xA;# Install Meson on Debian-11 &#34;Bullseye&#34; or Ubuntu-21.04 and newer&#xA;sudo apt install meson&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Arch, Manjaro&#xA;sudo pacman -S ccache gcc meson alsa-lib libpng sdl2 sdl2_net \&#xA;               opusfile fluidsynth libslirp speexdsp libxi pkgconf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# openSUSE&#xA;sudo zypper install ccache gcc gcc-c++ meson alsa-devel libatomic1 libpng-devel \&#xA;                    libSDL2-devel libSDL2_net-devel \&#xA;                    opusfile-devel fluidsynth-devel libmt32emu-devel libslirp-devel \&#xA;                    speexdsp libXi-devel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Void Linux&#xA;sudo xbps-install -S SDL2-devel SDL2_net-devel alsa-lib-devel \&#xA;                     fluidsynth-devel libiir1-devel libmt32emu-devel \&#xA;                     libpng-devel libslirp-devel opusfile-devel \&#xA;                     speexdsp-devel libatomic-devel libXi-devel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# NixOS&#xA;# With Home Manager on home.nix (Recommended Permanent Installation)&#xA;home.packages = [ pkg-config gcc_multi cmake ccache SDL2 SDL2_net \&#xA;                  fluidsynth glib gtest libGL libGLU libjack2 libmt32emu libogg \&#xA;                  libpng libpulseaudio libslirp libsndfile meson ninja opusfile \&#xA;                  libselinux speexdsp stdenv alsa-lib xorg.libXi irr1 ]&#xA;&#xA;# Note: the same package list will work with environment.systemPackages&#xA;# on configuration.nix&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# macOS&#xA;xcode-select --install&#xA;brew install cmake ccache meson libpng sdl2 sdl2_net opusfile \&#xA;     fluid-synth libslirp pkg-config python3 speexdsp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build and stay up-to-date with the latest sources&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Check out the main branch:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# commit or stash any personal code changes&#xA;git checkout main -f&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pull the latest updates. This is necessary every time you want a new build:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git pull&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set up the build. This is a one-time step either after cloning the repo or cleaning your working directories:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;meson setup build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above enables all of DOSBox Staging&#39;s functional features. If you&#39;re interested in seeing all of Meson&#39;s setup options, run &lt;code&gt;meson configure&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Compile the sources. This is necessary every time you want a new build:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;meson compile -C build&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Your binary is: &lt;code&gt;build/dosbox&lt;/code&gt;&lt;/p&gt; &lt;p&gt;The binary depends on local resources relative to it, so we suggest symlinking to the binary from your &lt;code&gt;PATH&lt;/code&gt;, such as into &lt;code&gt;~/.local/bin/&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Have fun!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Windows â€“ Visual Studio (2022 or newer)&lt;/h3&gt; &#xA;&lt;p&gt;First, you need to setup &lt;a href=&#34;https://github.com/microsoft/vcpkg&#34;&gt;vcpkg&lt;/a&gt; to install build dependencies. Once vcpkg is bootstrapped, open PowerShell and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;PS:\&amp;gt; .\vcpkg integrate install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This step will ensure that MSVC can use vcpkg to build, find and links all dependencies.&lt;/p&gt; &#xA;&lt;p&gt;Start Visual Studio and open the file &lt;code&gt;vs\dosbox.sln&lt;/code&gt;. Make sure you have &lt;code&gt;x64&lt;/code&gt; selected as the solution platform. Use &lt;strong&gt;Ctrl+Shift+B&lt;/strong&gt; to build all projects.&lt;/p&gt; &#xA;&lt;p&gt;Note, the first time you build a configuration, dependencies will be built automatically and stored in the &lt;code&gt;vcpkg_installed&lt;/code&gt; directory. This can take a significant length of time.&lt;/p&gt; &#xA;&lt;h3&gt;Windows (MSYS2), macOS (MacPorts), Haiku, Nix0S, others&lt;/h3&gt; &#xA;&lt;p&gt;Instructions for other build systems and operating systems are documented in &lt;a href=&#34;https://raw.githubusercontent.com/dosbox-staging/dosbox-staging/main/BUILD.md&#34;&gt;BUILD.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Links to OS-specific instructions: &lt;a href=&#34;https://raw.githubusercontent.com/dosbox-staging/dosbox-staging/main/docs/build-windows.md&#34;&gt;MSYS2&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/dosbox-staging/dosbox-staging/main/docs/build-macos.md&#34;&gt;MacPorts&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/dosbox-staging/dosbox-staging/main/docs/build-haiku.md&#34;&gt;Haiku&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/dosbox-staging/dosbox-staging/main/docs/build-nix.md&#34;&gt;NixOS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Imported branches, community patches, old forks&lt;/h2&gt; &#xA;&lt;p&gt;Upstream commits are imported to this repo in a timely manner, see branch &lt;a href=&#34;https://github.com/dosbox-staging/dosbox-staging/tree/svn/trunk&#34;&gt;&lt;code&gt;svn/trunk&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dosbox-staging/dosbox-staging/branches/all?utf8=%E2%9C%93&amp;amp;query=svn%2F&#34;&gt;&lt;code&gt;svn/*&lt;/code&gt;&lt;/a&gt; - branches from SVN&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dosbox-staging/dosbox-staging/branches/all?utf8=%E2%9C%93&amp;amp;query=forks%2F&#34;&gt;&lt;code&gt;forks/*&lt;/code&gt;&lt;/a&gt; - code for various abandoned DOSBox forks&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dosbox-staging/dosbox-staging/branches/all?utf8=%E2%9C%93&amp;amp;query=vogons%2F&#34;&gt;&lt;code&gt;vogons/*&lt;/code&gt;&lt;/a&gt; - community patches posted on the Vogons forum&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Git tags matching pattern &lt;code&gt;svn/*&lt;/code&gt; are pointing to the commits referenced by SVN &#34;tag&#34; paths at the time of creation.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, we attach some optional metadata to the commits in the form of &lt;a href=&#34;https://git-scm.com/docs/git-notes&#34;&gt;Git notes&lt;/a&gt;. To fetch them, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git fetch origin &#34;refs/notes/*:refs/notes/*&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Website &amp;amp; documentation&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/dosbox-staging/dosbox-staging/main/DOCUMENTATION.md&#34;&gt;documentation guide&lt;/a&gt; before making changes to the website or the documentation.&lt;/p&gt;</summary>
  </entry>
</feed>