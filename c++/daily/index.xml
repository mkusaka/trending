<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-18T01:30:14Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>OccamsXor/Dragnmove</title>
    <updated>2022-12-18T01:30:14Z</updated>
    <id>tag:github.com,2022-12-18:/OccamsXor/Dragnmove</id>
    <link href="https://github.com/OccamsXor/Dragnmove" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Infect Shared Files In Memory for Lateral Movement&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dragnmove&lt;/h1&gt; &#xA;&lt;p&gt;Dragnmove is a post-exploitaition tool that infects files shared between users in order to move from one system to another. Dragnmove can detect actions like dropping a file into the browser window or attaching a file to an email client. After Dragnmove detects the action, it hooks CreateFile API calls to modify handles.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OccamsXor/Dragnmove/master/images/flow.png&#34; alt=&#34;flow&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WORK IN PROGRESS!!!&lt;/li&gt; &#xA; &lt;li&gt;Change TARGETWINDOW and PAYLOADFILE according to your environment&lt;/li&gt; &#xA; &lt;li&gt;Compile Dragnmove with VS2019-VS2022.&lt;/li&gt; &#xA; &lt;li&gt;Inject Dragnmove DLL into target process.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Stabilize tool for different applications&lt;/li&gt; &#xA; &lt;li&gt;Create BOF version&lt;/li&gt; &#xA; &lt;li&gt;Implement auto infection mechanism&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>binderlabs/DirCreate2System</title>
    <updated>2022-12-18T01:30:14Z</updated>
    <id>tag:github.com,2022-12-18:/binderlabs/DirCreate2System</id>
    <link href="https://github.com/binderlabs/DirCreate2System" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Weaponizing to get NT SYSTEM for Privileged Directory Creation Bugs with Windows Error Reporting&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DirCreate2System&lt;/h1&gt; &#xA;&lt;p&gt;Weaponizing to get NT AUTHORITY\SYSTEM for Privileged Directory Creation Bugs with Windows Error Reporting&lt;/p&gt; &#xA;&lt;h3&gt;Short Description:&lt;/h3&gt; &#xA;&lt;p&gt;I&#39;ve discovered &lt;strong&gt;comctl32.dll&lt;/strong&gt; (which is missing in system dir which doesn&#39;t really exist) has been loaded by wermgr.exe via windows error reporting by running schtasks. It means if we can create a folder name as &lt;strong&gt;C:\windows\system32\wermgr.exe.local&lt;/strong&gt; with Full permission ACL, we can hijack the &lt;strong&gt;comctl32.dll&lt;/strong&gt; in that folders. Then, I created this poc as a Directory creation to NT AUTHORITY\SYSTEM shell method.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;POC video&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/binderlabs/DirCreate2System/raw/main/poc.wmv&#34;&gt;POC.wmv&lt;/a&gt; (with backblaze&#39;s directory creation bug)&lt;/p&gt; &#xA;&lt;h4&gt;Remark: I&#39;ve already reported to backblaze and they replied me that it&#39;s know issues. So, I made a video poc for educational purpose of this dircreate2system poc.&lt;/h4&gt; &#xA;&lt;h3&gt;For testing purposes:&lt;/h3&gt; &#xA;&lt;p&gt;(if you have a directory creation bug via service vulnerabilities, you don&#39;t need administrator access)&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;As an administrator&lt;/strong&gt;, create directory &lt;code&gt;wermgr.exe.local&lt;/code&gt; in &lt;code&gt;C:\Windows\System32\&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;And then, give it access control &lt;code&gt;cacls C:\Windows\System32\wermgr.exe.local /e /g everyone:f&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Place &lt;code&gt;spawn.dll&lt;/code&gt; file and &lt;code&gt;dircreate2system.exe&lt;/code&gt; in a same directory.&lt;/li&gt; &#xA; &lt;li&gt;Then, run &lt;code&gt;dircreate2system.exe&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Enjoy a shell as NT AUTHORITY\SYSTEM.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/binderlabs/DirCreate2System/raw/main/POC1.jpg&#34; alt=&#34;test1&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;em&gt;Note:&lt;/em&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;You can also use another methods by viewing this&lt;/em&gt; &lt;a href=&#34;https://github.com/sailay1996/awesome_windows_logical_bugs/raw/master/dir_create2system.txt&#34;&gt;dir_create2system.txt&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>