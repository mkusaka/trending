<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-30T01:30:20Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>anthwlock/untrunc</title>
    <updated>2025-06-30T01:30:20Z</updated>
    <id>tag:github.com,2025-06-30:/anthwlock/untrunc</id>
    <link href="https://github.com/anthwlock/untrunc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Restore a truncated mp4/mov. Improved version of ponchio/untrunc&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Untrunc&lt;/h1&gt; &#xA;&lt;p&gt;Restore a damaged (truncated) mp4, m4v, mov, 3gp video. Provided you have a similar not broken video. And some luck.&lt;/p&gt; &#xA;&lt;p&gt;You need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Another video file which isn&#39;t broken&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;Basic ability to use a command line&lt;/del&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/anthwlock/untrunc/master/#GUI&#34;&gt;GUI&lt;/a&gt; exists)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;About this fork&lt;/h2&gt; &#xA;&lt;p&gt;This fork improves the &lt;a href=&#34;https://github.com/ponchio/untrunc&#34;&gt;original&lt;/a&gt; in the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;more than 10 times faster!&lt;/li&gt; &#xA; &lt;li&gt;low memory usage, fixes &lt;a href=&#34;https://github.com/ponchio/untrunc/issues/30#issuecomment-143744821&#34;&gt;#30&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;easier to build + automated &lt;a href=&#34;https://github.com/anthwlock/untrunc/releases/latest&#34;&gt;windows builds&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&amp;gt;2GB file support&lt;/li&gt; &#xA; &lt;li&gt;ability to skip over unknown bytes&lt;/li&gt; &#xA; &lt;li&gt;generic support for all tracks with fixed-width chunks (e.g. twos/sowt)&lt;/li&gt; &#xA; &lt;li&gt;advanced logging system&lt;/li&gt; &#xA; &lt;li&gt;can stretch/shrink video to match audio duration&lt;/li&gt; &#xA; &lt;li&gt;compatible with new versions of ffmpeg&lt;/li&gt; &#xA; &lt;li&gt;handles invalid atom lengths&lt;/li&gt; &#xA; &lt;li&gt;supports GoPro and Sony XAVC videos&lt;/li&gt; &#xA; &lt;li&gt;many bugs got fixed, actively maintained&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Windows users can download the latest version &lt;a href=&#34;https://github.com/anthwlock/untrunc/releases/latest&#34;&gt;here&lt;/a&gt;.&lt;br&gt; In certain cases a specific version of ffmpeg is needed. Untrunc works great with ffmpeg 3.3.9.&lt;/p&gt; &#xA;&lt;h4&gt;With system libraries&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt-get install libavformat-dev libavcodec-dev libavutil-dev&#xA;# get the source code&#xA;make&#xA;sudo cp untrunc /usr/local/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;With local libraries&lt;/h4&gt; &#xA;&lt;p&gt;Just use following commands, make will do the rest for you.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt-get install yasm wget&#xA;make FF_VER=3.3.9&#xA;sudo cp untrunc /usr/local/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;GUI&lt;/h4&gt; &#xA;&lt;p&gt;The GUI is optional. It is included in the automated &lt;a href=&#34;https://github.com/anthwlock/untrunc/releases/latest&#34;&gt;windows builds&lt;/a&gt;.&lt;br&gt; You will need &lt;a href=&#34;https://github.com/andlabs/libui&#34;&gt;libui&lt;/a&gt;. After that, just do&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;make untrunc-gui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;CentOS 7&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo yum -y install epel-release &amp;amp;&amp;amp; sudo yum -y install git gcc-c++ yasm&#xA;git clone --depth 5 https://github.com/anthwlock/untrunc &amp;amp;&amp;amp; cd untrunc&#xA;make FF_VER=3.3.9&#xA;sudo cp untrunc /usr/local/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker container&lt;/h2&gt; &#xA;&lt;p&gt;You can use the included Dockerfile to build and execute the package as a container.&lt;br&gt; The optional argument &#39;FF_VER&#39; will be passed to &lt;code&gt;make&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# docker build --build-arg FF_VER=3.3.9 -t untrunc .&#xA;docker build -t untrunc .&#xA;docker image prune --filter label=stage=intermediate -f&#xA;&#xA;docker run -v ~/Videos/:/mnt untrunc /mnt/ok.mp4 /mnt/broken.mp4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Snapcraft&lt;/h2&gt; &#xA;&lt;p&gt;If you have &lt;code&gt;snap&lt;/code&gt;, you can use &lt;code&gt;sudo snap install --edge untrunc-anthwlock&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://snapcraft.io/untrunc-anthwlock&#34;&gt;&lt;img src=&#34;https://snapcraft.io//untrunc-anthwlock/badge.svg?sanitize=true&#34; alt=&#34;untrunc-anthwlock&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Using&lt;/h2&gt; &#xA;&lt;p&gt;You need both the broken video and an example working video (ideally from the same camera, if not the chances to fix it are slim).&lt;/p&gt; &#xA;&lt;p&gt;Run this command in the folder where you have unzipped and compiled Untrunc but replace the &lt;code&gt;/path/to/...&lt;/code&gt; bits with your 2 video files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./untrunc /path/to/working-video.m4v /path/to/broken-video.m4v&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then it should churn away and hopefully produce a playable file called &lt;code&gt;broken-video_fixed.m4v&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;That&#39;s it you&#39;re done!&lt;/p&gt; &#xA;&lt;p&gt;(Thanks to Tom Sparrow for providing the guide)&lt;/p&gt; &#xA;&lt;h3&gt;Help/Support&lt;/h3&gt; &#xA;&lt;h4&gt;Reporting issues&lt;/h4&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;-v&lt;/code&gt; parameter for a more detailed output. Both the healthy and corrupt file might be needed to help you.&lt;/p&gt; &#xA;&lt;h4&gt;Donation&lt;/h4&gt; &#xA;&lt;p&gt;If this software helped you please consider donating &lt;a href=&#34;https://www.paypal.me/anthwlock&#34;&gt;here&lt;/a&gt;!&lt;br&gt; Donations will encourage me to keep working on this software, leading to more media being supported and better recovered files.&lt;/p&gt; &#xA;&lt;p&gt;You might also want to consider donating to &lt;strong&gt;ponchio&lt;/strong&gt;, see his instructions &lt;a href=&#34;https://github.com/ponchio/untrunc#helpsupport&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Thank you.&lt;/p&gt;</summary>
  </entry>
</feed>