<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-01T01:30:38Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>robsoncouto/arduino-songs</title>
    <updated>2023-04-01T01:30:38Z</updated>
    <id>tag:github.com,2023-04-01:/robsoncouto/arduino-songs</id>
    <link href="https://github.com/robsoncouto/arduino-songs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Songs for playing on Arduino boards.&lt;/h1&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Every code here should run on every arduino board without problems. The sketches rely solely on the tone() function from Arduino, so the sounds are all monophonic. On the bright side, &lt;strong&gt;libraries are not required&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to compare the code with the original score, I try to group the notes in a measure as one line of ccode and the staves as groups of lines. However, in some cases notes will be tied together among measures or be dotted and this rule is broken.&lt;/p&gt; &#xA;&lt;h2&gt;Hardware&lt;/h2&gt; &#xA;&lt;p&gt;Just connect an piezo to the board and you are good to go. Pin 11 is used in every sketch because some piezo speakers can be connected between it and the close GND pin without any wiring. You can use basically any pin, as long as they can be used as digital pins (pins A6 and A7 of the Arduino Nano and mini are analog only). Just remember to assign the pin number to the &lt;code&gt;buzzer&lt;/code&gt; variable.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/robsoncouto/arduino-songs/master/hardware.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;There are two kinds of piezo buzzers: active and passive. The active one that plays a specific pitch when powevered and is not good for this purpose. The passive kind functions like a speaker, reproducing the pitch you apply to it. You can test the piezo speaker with the &#34;blink&#34; example, the good piezo speaker will just click, while the other kind will play a pitch every other second.&lt;/p&gt; &#xA;&lt;h2&gt;List of tunes&lt;/h2&gt; &#xA;&lt;h3&gt;Movies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/cantinaband/cantinaband.ino&#34;&gt;Cantina Band from Star Wars&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/imperialmarch/imperialmarch.ino&#34;&gt;Imperial March from Star Wars&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/harrypotter/harrypotter.ino&#34;&gt;Hedwig&#39;s theme from Harry Potter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/starwars/starwars.ino&#34;&gt;Star Wars theme&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/pulodagaita/pulodagaita.ino&#34;&gt;Pulo da gaita from the Brazilian Movie &lt;em&gt;O Auto da Compadecida&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Games&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/bloodytears/bloodytears.ino&#34;&gt;Bloody Tears from Castlevania II&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/greenhill/greenhill.ino&#34;&gt;Green Hill Zone from &lt;em&gt;Sonic the Hedgehog&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/miichannel/miichannel.ino&#34;&gt;Mii channel theme&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs&#34;&gt;Professor Layton&#39;s theme from &lt;em&gt;Professor Layton and the Curious Village&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/songofstorms/songofstorms.ino&#34;&gt;Song of stomrs from &lt;em&gt;The Legend of Zelda Ocarina of time&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/supermariobros/supermariobros.ino&#34;&gt;Super Mario Bros&#39; overworld theme&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/tetris/tetris.ino&#34;&gt;Tetris theme (Korobeiniki)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/zeldaslullaby/zeldaslullaby.ino&#34;&gt;Zelda&#39;s Lullaby from &lt;em&gt;The Legend of Zelda Ocarina of time&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/zeldatheme/zeldatheme.ino&#34;&gt;The Legend of Zelda for the NES&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/pacman/pacman.ino&#34;&gt;Pacman&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Classic&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/cannonind/cannonind.ino&#34;&gt;Cannon in D - Pachelbel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/greensleeves/greensleeves.ino&#34;&gt;Greensleeves&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/odetojoy/odetojoy.ino&#34;&gt;Ode to Joy - Beethoven&#39;s Symphony No. 9&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/princeigor/princeigor.ino&#34;&gt;Prince Igor - Borodin&#39;s Polovtsian Dances&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/minuetg/minuetg.ino&#34;&gt;Minuet in G - Christian Petzold&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Others&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/asabranca/asabranca.ino&#34;&gt;Asa Branca - Luiz Gonzaga&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/pinkpanther/pinkpanther.ino&#34;&gt;Pink Panther Theme&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/takeonme/takeonme.ino&#34;&gt;Take on me A-ha&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/thelick/thelick.ino&#34;&gt;The lick&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/thelionsleepstonight/thelionsleepstonight.ino&#34;&gt;The Lion sleeps tonight (&lt;em&gt;A-weema-weh&lt;/em&gt;)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/takeonme/takeonme.ino&#34;&gt;Take on me&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/keyboardcat/keyboardcat.ino&#34;&gt;Keyboard cat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robsoncouto/arduino-songs/raw/master/nokia/nokia.ino&#34;&gt;Nokia Ringtone&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;Every sketch here has been written by myself, although based on scores I found online or books I own. These scores are linked in each file when possible. You can use the sketches for anything, I only kindly ask that you give credit if you use these codes on a tutorial, video, example, etc.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wjakob/nanobind</title>
    <updated>2023-04-01T01:30:38Z</updated>
    <id>tag:github.com,2023-04-01:/wjakob/nanobind</id>
    <link href="https://github.com/wjakob/nanobind" rel="alternate"></link>
    <summary type="html">&lt;p&gt;nanobind: tiny and efficient C++/Python bindings&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;nanobind: tiny and efficient C++/Python bindings&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nanobind.readthedocs.io/en/latest/&#34;&gt;&lt;img src=&#34;https://img.shields.io/readthedocs/nanobind/latest&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wjakob/nanobind/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/wjakob/nanobind/ci.yml?label=tests&#34; alt=&#34;Continuous Integration&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/pypi/nanobind/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/nanobind.svg?color=brightgreen&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/pypi/l/nanobind.svg?color=brightgreen&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://github.com/wjakob/nanobind_example&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Example-Link-brightgreen&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://nanobind.readthedocs.io/en/latest/changelog.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Changelog-Link-brightgreen&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; width=&#34;800&#34; srcset=&#34;https://rgl.s3.eu-central-1.amazonaws.com/media/uploads/wjakob/2023/03/28/nanobind_logo_dark.png&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; width=&#34;800&#34; srcset=&#34;https://github.com/wjakob/nanobind/raw/master/docs/images/logo.jpg&#34;&gt; &#xA;  &lt;img alt=&#34;nanobind logo&#34; width=&#34;800&#34; src=&#34;https://github.com/wjakob/nanobind/raw/master/docs/images/logo.jpg&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;nanobind&lt;/em&gt; is a small binding library that exposes C++ types in Python and vice versa. It is reminiscent of &lt;a href=&#34;https://www.boost.org/doc/libs/1_64_0/libs/python/doc/html&#34;&gt;Boost.Python&lt;/a&gt; and &lt;a href=&#34;https://github.com/pybind/pybind11&#34;&gt;pybind11&lt;/a&gt; and uses near-identical syntax. In contrast to these existing tools, nanobind is &lt;em&gt;more efficient&lt;/em&gt;: bindings compile in a shorter amount of time, produce smaller binaries, and have better runtime performance.&lt;/p&gt; &#xA;&lt;p&gt;More concretely, &lt;a href=&#34;https://nanobind.readthedocs.io/en/latest/benchmark.html&#34;&gt;benchmarks&lt;/a&gt; show &lt;strong&gt;~2-3× faster&lt;/strong&gt; compile time, &lt;strong&gt;~3× smaller&lt;/strong&gt; binaries, and up to &lt;strong&gt;~8× lower&lt;/strong&gt; runtime overheads compared to pybind11.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Please see the following links for tutorial and reference documentation in &lt;a href=&#34;https://nanobind.readthedocs.io/en/latest/&#34;&gt;HTML&lt;/a&gt; and &lt;a href=&#34;https://nanobind.readthedocs.io/_/downloads/en/latest/pdf/&#34;&gt;PDF&lt;/a&gt; formats.&lt;/p&gt; &#xA;&lt;h2&gt;License and attribution&lt;/h2&gt; &#xA;&lt;p&gt;All material in this repository is licensed under a three-clause &lt;a href=&#34;https://raw.githubusercontent.com/wjakob/nanobind/master/LICENSE&#34;&gt;BSD license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please use the following BibTeX template to cite nanobind in scientific discourse:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@misc{nanobind,&#xA;   author = {Wenzel Jakob},&#xA;   year = {2022},&#xA;   note = {https://github.com/wjakob/nanobind},&#xA;   title = {nanobind: tiny and efficient C++/Python bindings}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The nanobind logo was designed by &lt;a href=&#34;https://andotwinstudio.com&#34;&gt;AndoTwin Studio&lt;/a&gt; (high-resolution download: &lt;a href=&#34;https://rgl.s3.eu-central-1.amazonaws.com/media/uploads/wjakob/2023/03/27/nanobind_logo.jpg&#34;&gt;light&lt;/a&gt;, &lt;a href=&#34;https://rgl.s3.eu-central-1.amazonaws.com/media/uploads/wjakob/2023/03/28/nanobind_logo_dark_1.png&#34;&gt;dark&lt;/a&gt;).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>CoatiSoftware/Sourcetrail</title>
    <updated>2023-04-01T01:30:38Z</updated>
    <id>tag:github.com,2023-04-01:/CoatiSoftware/Sourcetrail</id>
    <link href="https://github.com/CoatiSoftware/Sourcetrail" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sourcetrail - free and open-source interactive source explorer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sourcetrail&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Important Note:&lt;/strong&gt; This project was archived by the original autors and maintainers of Sourcetrail by the end of 2021. If you want to know more about this decision, read more on our &lt;a href=&#34;https://web.archive.org/web/20211119200517/https://www.sourcetrail.com/blog/&#34;&gt;blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Sourcetrail is a free and open-source cross-platform source explorer that helps you get productive on unfamiliar source code.&lt;/p&gt; &#xA;&lt;p&gt;Windows: &lt;a href=&#34;https://ci.appveyor.com/project/mlangkabel/sourcetrail/branch/master&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/0c258a2opn3loyc2/branch/master?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Linux: &lt;a href=&#34;https://travis-ci.org/CoatiSoftware/Sourcetrail&#34;&gt;&lt;img src=&#34;https://travis-ci.org/CoatiSoftware/Sourcetrail.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Links&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CoatiSoftware/Sourcetrail/releases&#34;&gt;Download&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CoatiSoftware/Sourcetrail/master/DOCUMENTATION.md#getting-started&#34;&gt;Quick Start Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CoatiSoftware/Sourcetrail/master/DOCUMENTATION.md&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CoatiSoftware/Sourcetrail/master/CHANGELOG.md&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CoatiSoftware/Sourcetrail/master/docs/readme/user_interface.png&#34; alt=&#34;&amp;quot;Sourcetrail User Interface&amp;quot;&#34; title=&#34;Sourcetrail User Interface&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Sourcetrail is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;free&lt;/li&gt; &#xA; &lt;li&gt;working offline&lt;/li&gt; &#xA; &lt;li&gt;operating on Windows, macOS and Linux&lt;/li&gt; &#xA; &lt;li&gt;supporting C, C++, Java and Python&lt;/li&gt; &#xA; &lt;li&gt;offering an SDK (&lt;a href=&#34;https://github.com/CoatiSoftware/SourcetrailDB&#34;&gt;SourcetrailDB&lt;/a&gt;) to write custom language extensions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sourcetrail on Patreon&lt;/h2&gt; &#xA;&lt;p&gt;The open-source development and regular software releases are made possible entirely by the support of &lt;a href=&#34;https://raw.githubusercontent.com/CoatiSoftware/Sourcetrail/master/SPONSORS.md&#34;&gt;these awesome patrons&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Using Sourcetrail&lt;/h2&gt; &#xA;&lt;p&gt;To setup Sourcetrail on your machine, you can either download the respective build for your operating system from our list of &lt;a href=&#34;https://github.com/CoatiSoftware/Sourcetrail/releases&#34;&gt;Releases&lt;/a&gt; and install it on your machine, or use one of the following package managers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use the &lt;a href=&#34;https://chocolatey.org/packages/sourcetrail&#34;&gt;Chocolatey package&lt;/a&gt; with &lt;code&gt;choco install sourcetrail&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;After your installation is complete, follow our &lt;a href=&#34;https://raw.githubusercontent.com/CoatiSoftware/Sourcetrail/master/DOCUMENTATION.md#getting-started&#34;&gt;Quick Start Guide&lt;/a&gt; to get to know Sourcetrail.&lt;/p&gt; &#xA;&lt;h2&gt;How to Report Issues&lt;/h2&gt; &#xA;&lt;p&gt;You can post all your feature requests and bug reports on our &lt;a href=&#34;https://github.com/CoatiSoftware/Sourcetrail/issues&#34;&gt;issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Reporting&lt;/h3&gt; &#xA;&lt;p&gt;Use the following template:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;platform version:&lt;/li&gt; &#xA; &lt;li&gt;Sourcetrail version:&lt;/li&gt; &#xA; &lt;li&gt;description of the problem:&lt;/li&gt; &#xA; &lt;li&gt;steps to reproduce the problem:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Supporting&lt;/h3&gt; &#xA;&lt;p&gt;If you want to support a certain feature request or you have the same bug that another user already reported, please let us know:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;post a comment with &#34;+1&#34; to the issue&lt;/li&gt; &#xA; &lt;li&gt;or send an email to &lt;a href=&#34;mailto:support@sourcetrail.com&#34;&gt;support@sourcetrail.com&lt;/a&gt; with the issue ID&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to Contribute&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please read and follow the steps in &lt;a href=&#34;https://raw.githubusercontent.com/CoatiSoftware/Sourcetrail/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;You may want to look out for issues labeled &lt;a href=&#34;https://github.com/CoatiSoftware/Sourcetrail/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22&#34;&gt;good first issue&lt;/a&gt; to find some initial tasks to tackle.&lt;/li&gt; &#xA; &lt;li&gt;If you are looking for more information about Sourcetrail software development, please refer to our &lt;a href=&#34;https://github.com/CoatiSoftware/Sourcetrail/wiki&#34;&gt;wiki&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;How to Build&lt;/h1&gt; &#xA;&lt;p&gt;Building Sourcetrail requires several dependencies to be in place on your machine. However, our CMake based setup allows to disable indexing support for specific languages which reduces the number of dependencies to a minimum.&lt;/p&gt; &#xA;&lt;h2&gt;Building the Base Application&lt;/h2&gt; &#xA;&lt;h3&gt;Required Tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;CMake v3.12 (required for Windows, Linux and MacOS)&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Reason&lt;/strong&gt;: Used to generate a build configuration for your build system&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Download&lt;/strong&gt;: &lt;a href=&#34;https://cmake.org/download&#34;&gt;https://cmake.org/download&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Git (required for Windows, Linux and MacOS)&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Reason&lt;/strong&gt;: Used for version control and to automatically generate the Sourcetrail version number from commits and tags&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Download&lt;/strong&gt;: &lt;a href=&#34;https://git-scm.com/download&#34;&gt;https://git-scm.com/download&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Remarks&lt;/strong&gt;: Make sure &lt;code&gt;git&lt;/code&gt; is added to your &lt;code&gt;PATH&lt;/code&gt; environment variable before running CMake&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Visual Studio (required for Windows)&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Reason&lt;/strong&gt;: Used for building Sourcetrail&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Download&lt;/strong&gt;: &lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt;https://visualstudio.microsoft.com/downloads/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;ccache (optional for Linux and MacOS)&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Reason&lt;/strong&gt;: Used to speed up rebuilds if found in &lt;code&gt;PATH&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Download&lt;/strong&gt;: &lt;a href=&#34;https://ccache.dev/download.html&#34;&gt;https://ccache.dev/download.html&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Required dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Boost 1.67&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Reason&lt;/strong&gt;: Used for file system access and interprocess communication&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Prebuilt Download for Windows&lt;/strong&gt;: &lt;a href=&#34;https://sourceforge.net/projects/boost/files/boost-binaries/&#34;&gt;https://sourceforge.net/projects/boost/files/boost-binaries/&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Building for Unix&lt;/strong&gt;: &lt;pre&gt;&lt;code&gt;$ ./bootstrap.sh --with-libraries=filesystem,program_options,system,date_time&#xA;$ ./b2 --link=static --variant=release --threading=multi --runtime-link=static --cxxflags=-fPIC&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Qt 5.12.3&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Reason&lt;/strong&gt;: Used for rendering the GUI and for starting additional (indexer) processes.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Prebuilt Download&lt;/strong&gt;: &lt;a href=&#34;http://download.qt.io/official_releases/qt/&#34;&gt;http://download.qt.io/official_releases/qt/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;h4&gt;On Windows&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;To set up your build environment run:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ git clone https://github.com/CoatiSoftware/Sourcetrail.git&#xA;$ cd Sourcetrail&#xA;$ mkdir -p build/win64&#xA;$ cd build/win64&#xA;$ cmake -G &#34;Visual Studio 15 2017 Win64&#34; -DBOOST_ROOT=&amp;lt;path/to/boost_1_67_0&amp;gt; -DQt5_DIR=&amp;lt;path/to/Qt/version/platform/compiler/lib/cmake/Qt5&amp;gt; ../..&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Hint: If you are using the CMake GUI, we recommend that you activate advanced mode. Also you may be required to add some of the defines via the &#34;Add Entry&#34; button.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;After generating the build configuration, just open the Sourcetrail.sln file that was generated by CMake and build the Sourcetrail project.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;On Unix&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To set up your build environment run: &lt;pre&gt;&lt;code&gt;$ cd Sourcetrail&#xA;$ mkdir -p build/Release&#xA;$ cd build/Release&#xA;$ cmake -DCMAKE_BUILD_TYPE=&#34;Release&#34; -DBOOST_ROOT=&amp;lt;path/to/boost_1_67_0&amp;gt; -DQt5_DIR=&amp;lt;path/to/Qt/version/platform/compiler/lib/cmake/Qt5&amp;gt; ../..&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Now start the build with: &lt;pre&gt;&lt;code&gt;$ make Sourcetrail&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run Sourcetrail from within the build directory. During execution Sourcetrail needs resources from &lt;code&gt;bin/app/data&lt;/code&gt; and &lt;code&gt;bin/app/user&lt;/code&gt;. CMake creates symlinks within the build directory that make these directories accessible.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Enable C/C++ Language Support&lt;/h2&gt; &#xA;&lt;h3&gt;Required dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;LLVM/Clang 11.0.0&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Reason&lt;/strong&gt;: Used for running the preprocessor on the indexed source code, building and traversing an Abstract Syntax Tree and generating error messages.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Building&lt;/strong&gt;: Make sure to check out the correct tag: &lt;code&gt;git checkout llvmorg-11.0.0&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Building for Windows&lt;/strong&gt;: Follow &lt;a href=&#34;https://clang.llvm.org/get_started.html&#34;&gt;these steps&lt;/a&gt; to build the project. Run the cmake command exactly as described.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Building for Unix&lt;/strong&gt;: Follow this &lt;a href=&#34;http://clang.llvm.org/docs/LibASTMatchersTutorial.html&#34;&gt;installation guide&lt;/a&gt; to build the project. Make sure to build with &lt;code&gt;-DLLVM_ENABLE_RTTI=ON&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run CMake with these additional options: &lt;pre&gt;&lt;code&gt;-DClang_DIR=&amp;lt;path/to/llvm_build&amp;gt;/lib/cmake/clang&#xA;-DBUILD_CXX_LANGUAGE_PACKAGE=ON&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Build Sourcetrail as described &lt;a href=&#34;https://raw.githubusercontent.com/CoatiSoftware/Sourcetrail/master/#building&#34;&gt;above&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Enable Java Language Support&lt;/h2&gt; &#xA;&lt;h3&gt;Required dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;JDK 1.8&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Reason&lt;/strong&gt;: Used to build the Java indexer and make it callable from the C++ code via JNI.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Remarks&lt;/strong&gt;: Make sure that &lt;code&gt;&amp;lt;jdk_root&amp;gt;/bin&lt;/code&gt; is available in your &lt;code&gt;PATH&lt;/code&gt; environment variable and that the &lt;code&gt;JAVA_HOME&lt;/code&gt; environment variable is set: &lt;pre&gt;&lt;code&gt;JAVA_HOME=&amp;lt;path/to/Java&amp;gt;/jdk1.x.x_xxx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Maven&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;REASON&lt;/strong&gt;: Used within Sourcetrail&#39;s automated tests.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Remarks&lt;/strong&gt;: Make sure &lt;code&gt;.../apache-maven-x.x.x/bin&lt;/code&gt; is available in your &lt;code&gt;PATH&lt;/code&gt; environment variable and that both &lt;code&gt;M2_HOME&lt;/code&gt; and &lt;code&gt;MAVEN_HOME&lt;/code&gt; environment variables are set: &lt;pre&gt;&lt;code&gt;M2_HOME=.../apache-maven-x.x.x&#xA;MAVEN_HOME=.../apache-maven-x.x.x&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run CMake with these additional options: &lt;pre&gt;&lt;code&gt;-DBUILD_JAVA_LANGUAGE_PACKAGE=ON&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Build Sourcetrail as described &lt;a href=&#34;https://raw.githubusercontent.com/CoatiSoftware/Sourcetrail/master/#building&#34;&gt;above&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Enable Python Language Support&lt;/h2&gt; &#xA;&lt;h3&gt;Required Tools&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;7z (required for Windows)&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;REASON&lt;/strong&gt;: Used to extract the prebuilt SourcetrailPythonIndexer which is downloaded automatically during build execution.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run CMake with these additional options: &lt;pre&gt;&lt;code&gt;-DBUILD_PYTHON_LANGUAGE_PACKAGE=ON&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Build Sourcetrail as described &lt;a href=&#34;https://raw.githubusercontent.com/CoatiSoftware/Sourcetrail/master/#building&#34;&gt;above&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Creating the deployment Package&lt;/h2&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;h4&gt;Required Tools&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Visual Studio (required for Windows)&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Reason&lt;/strong&gt;: Used for building the Sourcetrail Windows installer.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Remarks&lt;/strong&gt;: Make sure to install the &lt;code&gt;.Net desktop development&lt;/code&gt; workload.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Download&lt;/strong&gt;: &lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt;https://visualstudio.microsoft.com/downloads/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Wix 3.11&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Reason&lt;/strong&gt;: Used to build the &lt;code&gt;sourcetrail.msi&lt;/code&gt; Windows installer.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Remarks&lt;/strong&gt;: Make sure to add &lt;code&gt;&amp;lt;path/to&amp;gt;/WiX Toolset v3.11/bin&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt; environment variable.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Download&lt;/strong&gt;: &lt;a href=&#34;https://wixtoolset.org/releases/&#34;&gt;https://wixtoolset.org/releases/&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Wix extension for Visual Studio&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Reason&lt;/strong&gt;: Used to run Wix from the Visual Studio build environment.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Download&lt;/strong&gt;: &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=WixToolset.WixToolsetVisualStudio2017Extension&#34;&gt;https://marketplace.visualstudio.com/items?itemName=WixToolset.WixToolsetVisualStudio2017Extension&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;JRE&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Reason&lt;/strong&gt;: Used for indexing the java sample project that ships with the package.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;WinRAR&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Reason&lt;/strong&gt;: Used for creating the final zip files for the installer and the portable package.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Remarks&lt;/strong&gt;: Make sure to add &lt;code&gt;&amp;lt;path/to&amp;gt;/WinRAR&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt; environment variable.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Building&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./script/deploy_windows.sh&lt;/code&gt; from your Developer Command Prompt for Visual Studio. The script which will generate a 64bit build and packages it into a portable &lt;code&gt;.zip&lt;/code&gt; file and a Wix-based Windows installer, each.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;p&gt;After building, run the &lt;code&gt;bundle_install.sh&lt;/code&gt; script within the build directory which will create a &lt;code&gt;Sourcetrail.app&lt;/code&gt; bundle and generate a &lt;code&gt;Sourcetrail_&amp;lt;version&amp;gt;.dmg&lt;/code&gt; container.&lt;/p&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;p&gt;Run &lt;code&gt;./setup/Linux/createPackages.sh&lt;/code&gt; from the main directory, which creates both a &lt;code&gt;.tar.gz&lt;/code&gt; and a &lt;code&gt;.AppImage&lt;/code&gt; package in the main directory. Packaging depends on &lt;a href=&#34;https://github.com/probonopd/linuxdeployqt&#34;&gt;linuxdeployqt&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;How to Run the Tests&lt;/h1&gt; &#xA;&lt;p&gt;The automated test suite of Sourcetrail is powered by &lt;a href=&#34;https://github.com/catchorg/Catch2&#34;&gt;Catch2&lt;/a&gt;. To run the tests, simply execute the &lt;code&gt;Sourcetrail_test&lt;/code&gt; binary. Before executing, please make sure to set the working directory to &lt;code&gt;./bin/test&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Sourcetrail is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/CoatiSoftware/Sourcetrail/master/LICENSE.txt&#34;&gt;GNU General Public License Version 3&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Trademark&lt;/h1&gt; &#xA;&lt;p&gt;The &#34;Sourcetrail&#34; name is a trademark owned by Coati Software and is not included within the assets licensed under the GNU GPLv3.&lt;/p&gt;</summary>
  </entry>
</feed>