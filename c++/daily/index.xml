<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-09T01:24:34Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>stacksmashing/LPCClocklessAnalyzer</title>
    <updated>2024-02-09T01:24:34Z</updated>
    <id>tag:github.com,2024-02-09:/stacksmashing/LPCClocklessAnalyzer</id>
    <link href="https://github.com/stacksmashing/LPCClocklessAnalyzer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Saleae Analyzer for TPM traffic that only requires the LADD &amp; LFRAME signals, no clock.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LPCClocklessAnalyzer&lt;/h1&gt; &#xA;&lt;p&gt;This is an analyzer for LPC TPM traffic that does not require the clock signal.&lt;/p&gt; &#xA;&lt;h2&gt;Building this Analyzer&lt;/h2&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bat&#34;&gt;mkdir build&#xA;cd build&#xA;cmake .. -A x64&#xA;cmake --build .&#xA;:: built analyzer will be located at SampleAnalyzer\build\Analyzers\Debug\SimpleSerialAnalyzer.dll&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;MacOS&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir build&#xA;cd build&#xA;cmake ..&#xA;cmake --build .&#xA;# built analyzer will be located at SampleAnalyzer/build/Analyzers/libSimpleSerialAnalyzer.so&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir build&#xA;cd build&#xA;cmake ..&#xA;cmake --build .&#xA;# built analyzer will be located at SampleAnalyzer/build/Analyzers/libSimpleSerialAnalyzer.so&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>Lyall/GBFRelinkFix</title>
    <updated>2024-02-09T01:24:34Z</updated>
    <id>tag:github.com,2024-02-09:/Lyall/GBFRelinkFix</id>
    <link href="https://github.com/Lyall/GBFRelinkFix" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fix for Granblue Fantasy: Relink that adds support for custom resolutions, ultrawide and more.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Granblue Fantasy: Relink Fix&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ko-fi.com/W7W01UAI9&#34;&gt;&lt;img src=&#34;https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true&#34; alt=&#34;ko-fi&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/Lyall/GBFRelinkFix/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/Lyall/GBFRelinkFix/total.svg?sanitize=true&#34; alt=&#34;Github All Releases&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a fix that adds custom resolutions, ultrawide support and more to Granblue Fantasy: Relink.&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Custom resolution/ultrawide support.&lt;/li&gt; &#xA; &lt;li&gt;Correct FOV and aspect ratio at any resolution.&lt;/li&gt; &#xA; &lt;li&gt;Gameplay FOV modification.&lt;/li&gt; &#xA; &lt;li&gt;Scales HUD to 16:9.&lt;/li&gt; &#xA; &lt;li&gt;Spanned HUD backgrounds to fill screen (loading fades etc).&lt;/li&gt; &#xA; &lt;li&gt;Option to span gameplay HUD. (Check ini to enable)&lt;/li&gt; &#xA; &lt;li&gt;Experiental option to raise FPS cap to 240. (Check ini to enable)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Grab the latest release of GBFRelinkFix from &lt;a href=&#34;https://github.com/Lyall/GBFRelinkFix/releases&#34;&gt;here.&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Extract the contents of the release zip in to the the game folder.&lt;br&gt;(e.g. &#34;&lt;strong&gt;steamapps\common\Granblue Fantasy Relink&lt;/strong&gt;&#34; for Steam).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Steam Deck/Linux Additional Instructions&lt;/h3&gt; &#xA;&lt;p&gt;🚩&lt;strong&gt;You do not need to do this if you are using Windows!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open up the game properties in Steam and add &lt;code&gt;WINEDLLOVERRIDES=&#34;dinput8=n,b&#34; %command%&lt;/code&gt; to the launch options.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See &lt;strong&gt;GBFRelinkFix.ini&lt;/strong&gt; to adjust settings for the fix.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;p&gt;Please report any issues you see. This list will contain bugs which may or may not be fixed.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Raising FPS cap can cause issues with physics. &lt;a href=&#34;https://github.com/Lyall/GBFRelinkFix/issues/2&#34;&gt;#2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/Lyall/GBFRelinkFix/assets/695941/43e186f0-0e4d-4ace-a0c9-300f3171e414&#34; alt=&#34;ezgif-1-94aa803391&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Gameplay with the fix.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Many thanks to VagrantZero on the WSGF Discord for providing a copy of the game! &lt;br&gt; Also thanks to KingKrouch and nikos on the WSGF Discord for doing valuable testing.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ThirteenAG/Ultimate-ASI-Loader&#34;&gt;Ultimate ASI Loader&lt;/a&gt; for ASI loading. &lt;br&gt; &lt;a href=&#34;https://github.com/mcmtroffaes/inipp&#34;&gt;inipp&lt;/a&gt; for ini reading. &lt;br&gt; &lt;a href=&#34;https://github.com/gabime/spdlog&#34;&gt;spdlog&lt;/a&gt; for logging. &lt;br&gt; &lt;a href=&#34;https://github.com/cursey/safetyhook&#34;&gt;safetyhook&lt;/a&gt; for hooking.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>CN-annotation-team/leveldb-chinese-annotated</title>
    <updated>2024-02-09T01:24:34Z</updated>
    <id>tag:github.com,2024-02-09:/CN-annotation-team/leveldb-chinese-annotated</id>
    <link href="https://github.com/CN-annotation-team/leveldb-chinese-annotated" rel="alternate"></link>
    <summary type="html">&lt;p&gt;leveldb chinese annotation&lt;/p&gt;&lt;hr&gt;&lt;p&gt;LevelDB 是 Google 开发的一款经典的 Key-Value 数据库。它的代码简洁优雅，非常适合作为学习数据库的阅读材料。&lt;/p&gt; &#xA;&lt;p&gt;LevelDB 使用 LSM-Tree 结构，利用硬盘顺序写远远快于随机写的特点，来实现极高的写入性能。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/overview.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;由于许多机制需要分散在各处的代码互相配合才能实现，为了便于理解我们编写了一系列文章(并画了一大堆图)进行归纳梳理，以期为读者提供一个宏观的视角：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/01-introduction.md&#34;&gt;01-概论&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/02-utils.md&#34;&gt;02-工具类&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/03-MemTable.md&#34;&gt;03-MemoryTable&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/04-Log.md&#34;&gt;04-预写日志格式及读写流程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/05-SSTable.md&#34;&gt;05-SSTable格式&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/06-SSTableBuilder.md&#34;&gt;06-SSTable构造流程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/07-WriteProcess.md&#34;&gt;07-写入流程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/08-MinorCompaction.md&#34;&gt;08-MinorCompaction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/09-Manifest.md&#34;&gt;09-元数据管理Manifest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/10-MajorCompaction.md&#34;&gt;10-MajorCompaction&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;已经注释或介绍过的的源文件:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;源文件&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;功能介绍&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;相关文章&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/include/leveldb/db.h&#34;&gt;include/leveldb/db.h&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;leveldb 对外暴露的接口&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/db/db_impl.cc&#34;&gt;db/db_impl.cc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;leveldb 的核心逻辑&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;从 &lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/07-WriteProcess.md&#34;&gt;07-写入流程&lt;/a&gt; 开始， 后面的文章都与它相关&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/include/leveldb/slice.h&#34;&gt;slice.h&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;字符串类&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/02-utils.md&#34;&gt;02-工具类&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/util/coding.h&#34;&gt;util/coding.h&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;varint 和 fixedint 等编码&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/02-utils.md&#34;&gt;02-工具类&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/util/arena.h&#34;&gt;arena.h&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/util/arena.cc&#34;&gt;arena.cc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;一种简单高效的内存管理方式&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/02-utils.md&#34;&gt;02-工具类&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/db/memtable.h&#34;&gt;memtable.h&lt;/a&gt;/&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/db/memtable.cc&#34;&gt;memtable.cc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;内存中的有序表&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/03-MemTable.md&#34;&gt;03-MemoryTable&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/db/skiplist.h&#34;&gt;skiplist.h&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;MemTable 底层的跳表实现&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/03-MemTable.md&#34;&gt;03-MemoryTable&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/db/log_writer.cc&#34;&gt;log_writter.cc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;预写日志的写入&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/04-Log.md&#34;&gt;04-预写日志格式及读写流程&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/db/log_reader.cc&#34;&gt;log_reader.cc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;预写日志的读取&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/04-Log.md&#34;&gt;04-预写日志格式及读写流程&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/table/table_builder.h&#34;&gt;table_builder.h&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/table/table_builder.cc&#34;&gt;table_builder.cc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;sstable 构造器&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/06-SSTableBuilder.md&#34;&gt;06-SSTable构造流程&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/table/block_builder.h&#34;&gt;block_builder.h&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/table/block_builder.cc&#34;&gt;block_builder.cc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;sstable 中块（block）的构造流程&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/06-SSTableBuilder.md&#34;&gt;06-SSTable构造流程&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/table/filter_block.cc&#34;&gt;filter_block.cc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;filterBlock 用于快速判断sstable中是否包含某个 key&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/06-SSTableBuilder.md&#34;&gt;06-SSTable构造流程&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/include/write_batch.h&#34;&gt;WriteBatch.h&lt;/a&gt;/&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/db/write_batch.cc&#34;&gt;WriteBatch.cc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;写事务数据结构&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/07-WriteProcess.md&#34;&gt;07-写入流程&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/db/version_set.h&#34;&gt;version_set.h&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/db/version_set.cc&#34;&gt;version_set.cc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;维护各层 sstable 的元数据&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/09-Manifest.md&#34;&gt;09-元数据管理Manifest&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/db/version_edit.h&#34;&gt;version_edit.h&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/db/version_edit.cc&#34;&gt;version_edit.cc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;version_edit 是一次元数据变更&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CN-annotation-team/leveldb-chinese-annotated/annotated/articles/09-Manifest.md&#34;&gt;09-元数据管理Manifest&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;关于提交 PR 的方法：&lt;/h2&gt; &#xA;&lt;h3&gt;Step1:&lt;/h3&gt; &#xA;&lt;p&gt;首先你需要 fork 本仓库到你自己的 github 仓库，点击右上角的 fork 按钮🎉🎉&lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Step2:&lt;/h3&gt; &#xA;&lt;p&gt;使用 git clone 命令将本仓库拷贝到你的本地文件，git clone 地址请点开项目上方的绿色 &#34;code&#34; 按钮查看😀😀&lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Step3:&lt;/h3&gt; &#xA;&lt;p&gt;在你的本地对代码进行一番精心修改吧！🍉🍉&lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Step4:&lt;/h3&gt; &#xA;&lt;p&gt;修改完后，是时候该上传你的改动到你 fork 来的远程仓库上了。你可以用 git bash，也可以使用 IDE 里的 git 来操作。对于 git 不熟的用户建议使用 IDE，IDE 也更方便写 commit 信息，别忘了写 commit 信息哦！当然我们只是增删改中文注释，如果要直接在 github 上编辑也可以，你可以使用最简单的在线编辑功能（预览文件的时候点击右上角的笔🖊），或者你也可以在你的仓库首页按一下句号键使用 github 提供的在线 vscode 。🤔🤔&lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Step5:&lt;/h3&gt; &#xA;&lt;p&gt;上传之后，点进你的仓库主页，会出现一个 &#34;Contribute&#34;，点击它，选择 &#34;Open pull request&#34;，选择好你仓库的分支和你想要在这里合并的分支后，点击 &#34;Create pull request&#34;，之后填写你的 PR 标题和正文内容，就成功提交一个 PR 啦！🍭🍭&lt;/p&gt; &#xA;&lt;h3&gt;Step6 (optional):&lt;/h3&gt; &#xA;&lt;p&gt;记得检查修改自己的 GitHub Public profile 里的 Name 和 Public email，位置在右上角头像的 Settings 里，因为大多数情况下我们会使用 squash merge 来合并 PRs，此时 squash merge 后产生的新提交作者信息会使用这个 GH 信息（如果你的信息想公开的话）。&lt;/p&gt; &#xA;&lt;h2&gt;关于提交 PR 的内容：&lt;/h2&gt; &#xA;&lt;h3&gt;修改内容：&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;给未有中文注释的函数添加中文注释。&lt;/li&gt; &#xA; &lt;li&gt;修改本仓库中的文章或者添加新的文章&lt;/li&gt; &#xA; &lt;li&gt;修改或删除意思不明确的，意思有误的，有错别字的中文注释。&lt;/li&gt; &#xA; &lt;li&gt;修改不标准的注释格式，修改比较严重的标点错误(中文字用英文逗号、句号、括号、引号实际上不需要修改）。&lt;/li&gt; &#xA; &lt;li&gt;给中文注释不足的函数添加注释。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;注释格式：&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;请使用 UTF-8 编码进行注释。&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;英文和中文之间要有一个空格。&lt;/li&gt; &#xA; &lt;li&gt;注释里的文字内容与注释符号之间有一个空格&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>