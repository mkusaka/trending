<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-01T01:31:47Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>skyline-emu/skyline</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/skyline-emu/skyline</id>
    <link href="https://github.com/skyline-emu/skyline" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Run Nintendo Switch homebrew &amp; games on your Android device!&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/skyline-emu/skyline&#34; target=&#34;_blank&#34;&gt; &lt;img height=&#34;60%&#34; width=&#34;60%&#34; src=&#34;https://raw.github.com/skyline-emu/branding/master/banner/skyline-banner-rounded.png&#34;&gt;&lt;br&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/XnbXNQM&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/545842171459272705.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=5865F2&amp;amp;labelColor=404EED&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/skyline-emu/skyline/actions/workflows/ci.yml&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/skyline-emu/skyline/actions/workflows/ci.yml/badge.svg?sanitize=true&#34;&gt;&lt;br&gt; &lt;/a&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;&lt;a href=&#34;https://raw.githubusercontent.com/skyline-emu/skyline/master/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/skyline-emu/skyline/master/BUILDING.md&#34;&gt;Building Guide&lt;/a&gt;&lt;/b&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Skyline&lt;/b&gt; is an experimental emulator that runs on &lt;b&gt;ARMv8 Android™&lt;/b&gt; devices and emulates the functionality of a &lt;b&gt;Nintendo Switch™&lt;/b&gt; system, licensed under &lt;a href=&#34;https://github.com/skyline-emu/skyline/raw/master/LICENSE.md&#34;&gt;&lt;b&gt;Mozilla Public License 2.0&lt;/b&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Contact&lt;/h3&gt; &#xA;&lt;p&gt;You can contact the core developers of Skyline at our &lt;strong&gt;&lt;a href=&#34;https://discord.gg/XnbXNQM&#34;&gt;Discord&lt;/a&gt;&lt;/strong&gt;. If you have any questions, feel free to ask. It&#39;s also a good place to just keep up with the emulator, as most talk regarding development goes on over there.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Special Thanks&lt;/h3&gt; &#xA;&lt;p&gt;A few noteworthy teams/projects who&#39;ve helped us along the way are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://ryujinx.org/&#34;&gt;Ryujinx&lt;/a&gt;:&lt;/strong&gt; We&#39;ve used Ryujinx for reference throughout the project, the accuracy of their HLE implementations of Switch subsystems make it an amazing reference. The team behind the project has been extremely helpful with any queries we&#39;ve had and have constantly helped us with any issues we&#39;ve come across. &lt;strong&gt;It should be noted that Skyline is not based on Ryujinx&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://yuzu-emu.org/&#34;&gt;yuzu&lt;/a&gt;:&lt;/strong&gt; Skyline&#39;s shader compiler is a &lt;strong&gt;fork&lt;/strong&gt; of &lt;em&gt;yuzu&lt;/em&gt;&#39;s shader compiler with Skyline-specific changes, using it allowed us to focus on the parts of GPU emulation that we could specifically optimize for mobile while having a high-quality shader compiler implementation as a base. The team behind &lt;em&gt;yuzu&lt;/em&gt; has also often helped us and have graciously provided us with a license exemption.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/switchbrew/&#34;&gt;Switchbrew&lt;/a&gt;:&lt;/strong&gt; We&#39;ve extensively used Switchbrew whether that be their &lt;strong&gt;&lt;a href=&#34;https://switchbrew.org/&#34;&gt;wiki&lt;/a&gt;&lt;/strong&gt; with its colossal amount of information on the Switch that has saved us countless hours of time or &lt;strong&gt;&lt;a href=&#34;https://github.com/switchbrew/libnx&#34;&gt;libnx&lt;/a&gt;&lt;/strong&gt; which was crucial to initial development of the emulator to ensure that our HLE kernel and sysmodule implementations were accurate.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Disclaimer&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Nintendo Switch&lt;/strong&gt; is a trademark of &lt;strong&gt;Nintendo Co., Ltd&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Android&lt;/strong&gt; is a trademark of &lt;strong&gt;Google LLC&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>BoomingTech/Pilot</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/BoomingTech/Pilot</id>
    <link href="https://github.com/BoomingTech/Pilot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pilot – mini game engine for games104&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pilot Engine&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://games104.boomingtech.com&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/BoomingTech/Pilot/main/engine/source/editor/resource/PilotEngine.png&#34; width=&#34;400&#34; alt=&#34;Pilot Engine logo&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Pilot Engine&lt;/strong&gt; is a tiny game engine used for the &lt;a href=&#34;https://games104.boomingtech.com&#34;&gt;GAMES104&lt;/a&gt; course.&lt;/p&gt; &#xA;&lt;h2&gt;Continuous build status&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Build Type&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Build Windows&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/BoomingTech/Pilot/actions/workflows/build_windows.yml&#34;&gt;&lt;img src=&#34;https://github.com/BoomingTech/Pilot/actions/workflows/build_windows.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Windows&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Build Linux&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/BoomingTech/Pilot/actions/workflows/build_linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/BoomingTech/Pilot/actions/workflows/build_linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Linux&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Build macOS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/BoomingTech/Pilot/actions/workflows/build_macos.yml&#34;&gt;&lt;img src=&#34;https://github.com/BoomingTech/Pilot/actions/workflows/build_macos.yml/badge.svg?sanitize=true&#34; alt=&#34;Build macOS&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;To build Pilot, you must first install the following tools.&lt;/p&gt; &#xA;&lt;h3&gt;Windows 10/11&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visual Studio 2019 (or more recent)&lt;/li&gt; &#xA; &lt;li&gt;CMake 3.19 (or more recent)&lt;/li&gt; &#xA; &lt;li&gt;Git 2.1 (or more recent)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;macOS &amp;gt;= 10.15 (x86_64)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Xcode 12.3 (or more recent)&lt;/li&gt; &#xA; &lt;li&gt;CMake 3.19 (or more recent)&lt;/li&gt; &#xA; &lt;li&gt;Git 2.1 (or more recent)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Ubuntu 20.04&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;apt install the following packages&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install libxrandr-dev&#xA;sudo apt install libxrender-dev&#xA;sudo apt install libxinerama-dev&#xA;sudo apt install libxcursor-dev&#xA;sudo apt install libxi-dev&#xA;sudo apt install libglvnd-dev&#xA;sudo apt install libvulkan-dev&#xA;sudo apt install cmake&#xA;sudo apt install clang&#xA;sudo apt install libc++-dev&#xA;sudo apt install libglew-dev&#xA;sudo apt install libglfw3-dev&#xA;sudo apt install vulkan-validationlayers&#xA;sudo apt install mesa-vulkan-drivers&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#runfile&#34;&gt;NVIDIA driver&lt;/a&gt; (The AMD and Intel driver is open-source, and thus is installed automatically by mesa-vulkan-drivers)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build Pilot&lt;/h2&gt; &#xA;&lt;h3&gt;Build on Windows&lt;/h3&gt; &#xA;&lt;p&gt;You may execute the &lt;strong&gt;build_windows.bat&lt;/strong&gt;. This batch file will generate the projects, and build the &lt;strong&gt;Release&lt;/strong&gt; config of &lt;strong&gt;Pilot Engine&lt;/strong&gt; automatically. After successful build, you can find the PilotEditor.exe at the &lt;strong&gt;bin&lt;/strong&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;Or you can use the following command to generate the &lt;strong&gt;Visual Studio&lt;/strong&gt; project firstly, then open the solution in the build directory and build it manually.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cmake -S . -B build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build on macOS&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The following build instructions only tested on specific hardware of x86_64, and do not support M1 chips. For M1 compatible, we will release later.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To compile Pilot, you must have the most recent version of Xcode installed. Then run &#39;cmake&#39; from the project&#39;s root directory, to generate a project of Xcode.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cmake -S . -B build -G &#34;Xcode&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and you can build the project with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cmake --build build --config Release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can execute the &lt;strong&gt;build_macos.sh&lt;/strong&gt; to build the binaries.&lt;/p&gt; &#xA;&lt;h3&gt;Build on Ubuntu 20.04&lt;/h3&gt; &#xA;&lt;p&gt;You can execute the &lt;strong&gt;build_linux.sh&lt;/strong&gt; to build the binaries.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For documentation, please refer to the Wiki section.&lt;/p&gt; &#xA;&lt;h2&gt;Extra&lt;/h2&gt; &#xA;&lt;h3&gt;Generate Compilation Database&lt;/h3&gt; &#xA;&lt;p&gt;You can build &lt;code&gt;compile_commands.json&lt;/code&gt; with the following commands when &lt;code&gt;Unix Makefiles&lt;/code&gt; generaters are avaliable. &lt;code&gt;compile_commands.json&lt;/code&gt; is the file required by &lt;code&gt;clangd&lt;/code&gt; language server, which is a backend for cpp lsp-mode in Emacs.&lt;/p&gt; &#xA;&lt;p&gt;For Windows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;cmake -DCMAKE_TRY_COMPILE_TARGET_TYPE=&#34;STATIC_LIBRARY&#34; -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -S . -B compile_db_temp -G &#34;Unix Makefiles&#34;&#xA;copy compile_db_temp\compile_commands.json .&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>loveBabbar/CodeHelp-DSA-Busted-Series</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/loveBabbar/CodeHelp-DSA-Busted-Series</id>
    <link href="https://github.com/loveBabbar/CodeHelp-DSA-Busted-Series" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repo is creating providing students easy access to all the programs taught under Codehelp&#39;s DSA Busted Series.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CodeHelp-DSA-Busted-Series&lt;/h1&gt; &#xA;&lt;p&gt;Hello Jee,&lt;/p&gt; &#xA;&lt;p&gt;This repo is for the students for easy access to all the programs taught under Codehelp&#39;s DSA Busted Series.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=WQoB2z67hvY&amp;amp;list=PLDzeHZWIZsTryvtXdMr6rPh4IDexB5NIA&#34;&gt;DSA Busted Series&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Youtube Channel: CodeHelp - by Babbar&lt;/p&gt; &#xA;&lt;p&gt;Your Instructor: Love Babbar&lt;/p&gt; &#xA;&lt;p&gt;Learn a Lot, Enjoy a Lot.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>InoriRus/Kyty</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/InoriRus/Kyty</id>
    <link href="https://github.com/InoriRus/Kyty" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PS4 &amp; PS5 emulator&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/InoriRus/kyty&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/0du32fg9flol63to?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Kyty&lt;/h1&gt; &#xA;&lt;h2&gt;PS4 &amp;amp; PS5 emulator&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;The project is in its early stage.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;mailto:inorirus@gmail.com&#34;&gt;Vladimir M&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the MIT license.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Graphics for PS5 is not yet implemented&lt;/p&gt; &#xA;&lt;p&gt;It is possible to run some simple games for PS4&lt;/p&gt; &#xA;&lt;p&gt;There maybe graphics glitches, crashes, freezes and low FPS. It&#39;s OK for now.&lt;/p&gt; &#xA;&lt;p&gt;Features that are not implemented:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Audio input/output&lt;/li&gt; &#xA; &lt;li&gt;MP4 video&lt;/li&gt; &#xA; &lt;li&gt;Network&lt;/li&gt; &#xA; &lt;li&gt;Multi-user&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Path to Savedata folder is hardcoded and can&#39;t be configured. System parameters (language, date format, etc.) are also hardcoded.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Screenshots&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7149418/169674296-4185e2da-99f9-4073-8ca9-19dc124c7459.png&#34; width=&#34;400&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/7149418/169674298-df817d95-7288-46fe-a040-3c0a40c29a6b.png&#34; width=&#34;400&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/7149418/169674301-37a3f947-76cd-4a9b-8c81-adec3d5d9c59.png&#34; width=&#34;400&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/7149418/169674303-13edae7d-24d3-4ec6-ba94-586e13c69df5.png&#34; width=&#34;400&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;p&gt;Supported platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows 10 x64&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Toolchains:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visual Studio + clang-cl + ninja&lt;/li&gt; &#xA; &lt;li&gt;Eclipse CDT + mingw-w64 + gcc/clang + ninja/mingw32-make&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Supported versions:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Tool&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;cmake&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;3.12&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Visual Studio 2019&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;16.10.3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;clang&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;12.0.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;clang-cl&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;11.0.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;gcc (MinGW-W64 x86_64-posix-seh)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;10.2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ninja&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1.10.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MinGW-w64&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;8.0.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Eclipse CDT&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;10.3.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Qt&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;5.15.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Define environment variable named Qt5_DIR pointing to the proper version of Qt&lt;/p&gt; &#xA;&lt;p&gt;MSVC compiler (cl.exe) is not supported!&lt;/p&gt; &#xA;&lt;p&gt;External dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vulkan SDK 1.2.198.1&lt;/li&gt; &#xA; &lt;li&gt;Qt 5.15.0&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>yhirose/cpp-httplib</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/yhirose/cpp-httplib</id>
    <link href="https://github.com/yhirose/cpp-httplib" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A C++ header-only HTTP/HTTPS server and client library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;cpp-httplib&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yhirose/cpp-httplib/actions&#34;&gt;&lt;img src=&#34;https://github.com/yhirose/cpp-httplib/workflows/test/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A C++11 single-file header-only cross platform HTTP/HTTPS library.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s extremely easy to setup. Just include the &lt;strong&gt;httplib.h&lt;/strong&gt; file in your code!&lt;/p&gt; &#xA;&lt;p&gt;NOTE: This is a multi-threaded &#39;blocking&#39; HTTP library. If you are looking for a &#39;non-blocking&#39; library, this is not the one that you want.&lt;/p&gt; &#xA;&lt;h2&gt;Simple examples&lt;/h2&gt; &#xA;&lt;h4&gt;Server&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#define CPPHTTPLIB_OPENSSL_SUPPORT&#xA;#include &#34;path/to/httplib.h&#34;&#xA;&#xA;// HTTP&#xA;httplib::Server svr;&#xA;&#xA;// HTTPS&#xA;httplib::SSLServer svr;&#xA;&#xA;svr.Get(&#34;/hi&#34;, [](const httplib::Request &amp;amp;, httplib::Response &amp;amp;res) {&#xA;  res.set_content(&#34;Hello World!&#34;, &#34;text/plain&#34;);&#xA;});&#xA;&#xA;svr.listen(&#34;0.0.0.0&#34;, 8080);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Client&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#define CPPHTTPLIB_OPENSSL_SUPPORT&#xA;#include &#34;path/to/httplib.h&#34;&#xA;&#xA;// HTTP&#xA;httplib::Client cli(&#34;http://cpp-httplib-server.yhirose.repl.co&#34;);&#xA;&#xA;// HTTPS&#xA;httplib::Client cli(&#34;https://cpp-httplib-server.yhirose.repl.co&#34;);&#xA;&#xA;auto res = cli.Get(&#34;/hi&#34;);&#xA;res-&amp;gt;status;&#xA;res-&amp;gt;body;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;SSL Support&lt;/h2&gt; &#xA;&lt;p&gt;SSL support is available with &lt;code&gt;CPPHTTPLIB_OPENSSL_SUPPORT&lt;/code&gt;. &lt;code&gt;libssl&lt;/code&gt; and &lt;code&gt;libcrypto&lt;/code&gt; should be linked.&lt;/p&gt; &#xA;&lt;p&gt;NOTE: cpp-httplib currently supports only version 1.1.1 and 3.0.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#define CPPHTTPLIB_OPENSSL_SUPPORT&#xA;#include &#34;path/to/httplib.h&#34;&#xA;&#xA;// Server&#xA;httplib::SSLServer svr(&#34;./cert.pem&#34;, &#34;./key.pem&#34;);&#xA;&#xA;// Client&#xA;httplib::Client cli(&#34;https://localhost:1234&#34;); // scheme + host&#xA;httplib::SSLClient cli(&#34;localhost:1234&#34;); // host&#xA;&#xA;// Use your CA bundle&#xA;cli.set_ca_cert_path(&#34;./ca-bundle.crt&#34;);&#xA;&#xA;// Disable cert verification&#xA;cli.enable_server_certificate_verification(false);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: When using SSL, it seems impossible to avoid SIGPIPE in all cases, since on some operating systems, SIGPIPE can only be suppressed on a per-message basis, but there is no way to make the OpenSSL library do so for its internal communications. If your program needs to avoid being terminated on SIGPIPE, the only fully general way might be to set up a signal handler for SIGPIPE to handle or ignore it yourself.&lt;/p&gt; &#xA;&lt;h2&gt;Server&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#include &amp;lt;httplib.h&amp;gt;&#xA;&#xA;int main(void)&#xA;{&#xA;  using namespace httplib;&#xA;&#xA;  Server svr;&#xA;&#xA;  svr.Get(&#34;/hi&#34;, [](const Request&amp;amp; req, Response&amp;amp; res) {&#xA;    res.set_content(&#34;Hello World!&#34;, &#34;text/plain&#34;);&#xA;  });&#xA;&#xA;  svr.Get(R&#34;(/numbers/(\d+))&#34;, [&amp;amp;](const Request&amp;amp; req, Response&amp;amp; res) {&#xA;    auto numbers = req.matches[1];&#xA;    res.set_content(numbers, &#34;text/plain&#34;);&#xA;  });&#xA;&#xA;  svr.Get(&#34;/body-header-param&#34;, [](const Request&amp;amp; req, Response&amp;amp; res) {&#xA;    if (req.has_header(&#34;Content-Length&#34;)) {&#xA;      auto val = req.get_header_value(&#34;Content-Length&#34;);&#xA;    }&#xA;    if (req.has_param(&#34;key&#34;)) {&#xA;      auto val = req.get_param_value(&#34;key&#34;);&#xA;    }&#xA;    res.set_content(req.body, &#34;text/plain&#34;);&#xA;  });&#xA;&#xA;  svr.Get(&#34;/stop&#34;, [&amp;amp;](const Request&amp;amp; req, Response&amp;amp; res) {&#xA;    svr.stop();&#xA;  });&#xA;&#xA;  svr.listen(&#34;localhost&#34;, 1234);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;Post&lt;/code&gt;, &lt;code&gt;Put&lt;/code&gt;, &lt;code&gt;Delete&lt;/code&gt; and &lt;code&gt;Options&lt;/code&gt; methods are also supported.&lt;/p&gt; &#xA;&lt;h3&gt;Bind a socket to multiple interfaces and any available port&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;int port = svr.bind_to_any_port(&#34;0.0.0.0&#34;);&#xA;svr.listen_after_bind();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Static File Server&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// Mount / to ./www directory&#xA;auto ret = svr.set_mount_point(&#34;/&#34;, &#34;./www&#34;);&#xA;if (!ret) {&#xA;  // The specified base directory doesn&#39;t exist...&#xA;}&#xA;&#xA;// Mount /public to ./www directory&#xA;ret = svr.set_mount_point(&#34;/public&#34;, &#34;./www&#34;);&#xA;&#xA;// Mount /public to ./www1 and ./www2 directories&#xA;ret = svr.set_mount_point(&#34;/public&#34;, &#34;./www1&#34;); // 1st order to search&#xA;ret = svr.set_mount_point(&#34;/public&#34;, &#34;./www2&#34;); // 2nd order to search&#xA;&#xA;// Remove mount /&#xA;ret = svr.remove_mount_point(&#34;/&#34;);&#xA;&#xA;// Remove mount /public&#xA;ret = svr.remove_mount_point(&#34;/public&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// User defined file extension and MIME type mappings&#xA;svr.set_file_extension_and_mimetype_mapping(&#34;cc&#34;, &#34;text/x-c&#34;);&#xA;svr.set_file_extension_and_mimetype_mapping(&#34;cpp&#34;, &#34;text/x-c&#34;);&#xA;svr.set_file_extension_and_mimetype_mapping(&#34;hh&#34;, &#34;text/x-h&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The followings are built-in mappings:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Extension&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;MIME Type&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Extension&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;MIME Type&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;css&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;text/css&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;mpga&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;audio/mpeg&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;csv&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;text/csv&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;weba&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;audio/webm&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;txt&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;text/plain&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;wav&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;audio/wave&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;vtt&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;text/vtt&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;otf&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;font/otf&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;html, htm&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;text/html&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ttf&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;font/ttf&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;apng&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;image/apng&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;woff&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;font/woff&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;avif&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;image/avif&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;woff2&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;font/woff2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;bmp&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;image/bmp&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;7z&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;application/x-7z-compressed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;gif&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;image/gif&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;atom&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;application/atom+xml&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;png&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;image/png&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;pdf&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;application/pdf&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;svg&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;image/svg+xml&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;mjs, js&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;application/javascript&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;webp&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;image/webp&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;json&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;application/json&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ico&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;image/x-icon&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rss&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;application/rss+xml&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;tif&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;image/tiff&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;tar&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;application/x-tar&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;tiff&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;image/tiff&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;xhtml, xht&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;application/xhtml+xml&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;jpeg, jpg&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;image/jpeg&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;xslt&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;application/xslt+xml&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;mp4&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;video/mp4&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;xml&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;application/xml&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;mpeg&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;video/mpeg&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;gz&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;application/gzip&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;webm&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;video/webm&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;zip&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;application/zip&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;mp3&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;audio/mp3&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;wasm&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;application/wasm&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;File request handler&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// The handler is called right before the response is sent to a client&#xA;svr.set_file_request_handler([](const Request &amp;amp;req, Response &amp;amp;res) {&#xA;  ...&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: These static file server methods are not thread-safe.&lt;/p&gt; &#xA;&lt;h3&gt;Logging&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;svr.set_logger([](const auto&amp;amp; req, const auto&amp;amp; res) {&#xA;  your_logger(req, res);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Error handler&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;svr.set_error_handler([](const auto&amp;amp; req, auto&amp;amp; res) {&#xA;  auto fmt = &#34;&amp;lt;p&amp;gt;Error Status: &amp;lt;span style=&#39;color:red;&#39;&amp;gt;%d&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&#34;;&#xA;  char buf[BUFSIZ];&#xA;  snprintf(buf, sizeof(buf), fmt, res.status);&#xA;  res.set_content(buf, &#34;text/html&#34;);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Exception handler&lt;/h3&gt; &#xA;&lt;p&gt;The exception handler gets called if a user routing handler throws an error.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;svr.set_exception_handler([](const auto&amp;amp; req, auto&amp;amp; res, std::exception &amp;amp;e) {&#xA;  res.status = 500;&#xA;  auto fmt = &#34;&amp;lt;h1&amp;gt;Error 500&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;%s&amp;lt;/p&amp;gt;&#34;;&#xA;  char buf[BUFSIZ];&#xA;  snprintf(buf, sizeof(buf), fmt, e.what());&#xA;  res.set_content(buf, &#34;text/html&#34;);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pre routing handler&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;svr.set_pre_routing_handler([](const auto&amp;amp; req, auto&amp;amp; res) {&#xA;  if (req.path == &#34;/hello&#34;) {&#xA;    res.set_content(&#34;world&#34;, &#34;text/html&#34;);&#xA;    return Server::HandlerResponse::Handled;&#xA;  }&#xA;  return Server::HandlerResponse::Unhandled;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Post routing handler&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;svr.set_post_routing_handler([](const auto&amp;amp; req, auto&amp;amp; res) {&#xA;  res.set_header(&#34;ADDITIONAL_HEADER&#34;, &#34;value&#34;);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&#39;multipart/form-data&#39; POST data&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;svr.Post(&#34;/multipart&#34;, [&amp;amp;](const auto&amp;amp; req, auto&amp;amp; res) {&#xA;  auto size = req.files.size();&#xA;  auto ret = req.has_file(&#34;name1&#34;);&#xA;  const auto&amp;amp; file = req.get_file_value(&#34;name1&#34;);&#xA;  // file.filename;&#xA;  // file.content_type;&#xA;  // file.content;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Receive content with a content receiver&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;svr.Post(&#34;/content_receiver&#34;,&#xA;  [&amp;amp;](const Request &amp;amp;req, Response &amp;amp;res, const ContentReader &amp;amp;content_reader) {&#xA;    if (req.is_multipart_form_data()) {&#xA;      // NOTE: `content_reader` is blocking until every form data field is read&#xA;      MultipartFormDataItems files;&#xA;      content_reader(&#xA;        [&amp;amp;](const MultipartFormData &amp;amp;file) {&#xA;          files.push_back(file);&#xA;          return true;&#xA;        },&#xA;        [&amp;amp;](const char *data, size_t data_length) {&#xA;          files.back().content.append(data, data_length);&#xA;          return true;&#xA;        });&#xA;    } else {&#xA;      std::string body;&#xA;      content_reader([&amp;amp;](const char *data, size_t data_length) {&#xA;        body.append(data, data_length);&#xA;        return true;&#xA;      });&#xA;    }&#xA;  });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Send content with the content provider&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;const size_t DATA_CHUNK_SIZE = 4;&#xA;&#xA;svr.Get(&#34;/stream&#34;, [&amp;amp;](const Request &amp;amp;req, Response &amp;amp;res) {&#xA;  auto data = new std::string(&#34;abcdefg&#34;);&#xA;&#xA;  res.set_content_provider(&#xA;    data-&amp;gt;size(), // Content length&#xA;    &#34;text/plain&#34;, // Content type&#xA;    [data](size_t offset, size_t length, DataSink &amp;amp;sink) {&#xA;      const auto &amp;amp;d = *data;&#xA;      sink.write(&amp;amp;d[offset], std::min(length, DATA_CHUNK_SIZE));&#xA;      return true; // return &#39;false&#39; if you want to cancel the process.&#xA;    },&#xA;    [data](bool success) { delete data; });&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Without content length:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;svr.Get(&#34;/stream&#34;, [&amp;amp;](const Request &amp;amp;req, Response &amp;amp;res) {&#xA;  res.set_content_provider(&#xA;    &#34;text/plain&#34;, // Content type&#xA;    [&amp;amp;](size_t offset, DataSink &amp;amp;sink) {&#xA;      if (/* there is still data */) {&#xA;        std::vector&amp;lt;char&amp;gt; data;&#xA;        // prepare data...&#xA;        sink.write(data.data(), data.size());&#xA;      } else {&#xA;        sink.done(); // No more data&#xA;      }&#xA;      return true; // return &#39;false&#39; if you want to cancel the process.&#xA;    });&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Chunked transfer encoding&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;svr.Get(&#34;/chunked&#34;, [&amp;amp;](const Request&amp;amp; req, Response&amp;amp; res) {&#xA;  res.set_chunked_content_provider(&#xA;    &#34;text/plain&#34;,&#xA;    [](size_t offset, DataSink &amp;amp;sink) {&#xA;      sink.write(&#34;123&#34;, 3);&#xA;      sink.write(&#34;345&#34;, 3);&#xA;      sink.write(&#34;789&#34;, 3);&#xA;      sink.done(); // No more data&#xA;      return true; // return &#39;false&#39; if you want to cancel the process.&#xA;    }&#xA;  );&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&#39;Expect: 100-continue&#39; handler&lt;/h3&gt; &#xA;&lt;p&gt;By default, the server sends a &lt;code&gt;100 Continue&lt;/code&gt; response for an &lt;code&gt;Expect: 100-continue&lt;/code&gt; header.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// Send a &#39;417 Expectation Failed&#39; response.&#xA;svr.set_expect_100_continue_handler([](const Request &amp;amp;req, Response &amp;amp;res) {&#xA;  return 417;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// Send a final status without reading the message body.&#xA;svr.set_expect_100_continue_handler([](const Request &amp;amp;req, Response &amp;amp;res) {&#xA;  return res.status = 401;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Keep-Alive connection&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;svr.set_keep_alive_max_count(2); // Default is 5&#xA;svr.set_keep_alive_timeout(10);  // Default is 5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Timeout&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;svr.set_read_timeout(5, 0); // 5 seconds&#xA;svr.set_write_timeout(5, 0); // 5 seconds&#xA;svr.set_idle_interval(0, 100000); // 100 milliseconds&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Set maximum payload length for reading a request body&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;svr.set_payload_max_length(1024 * 1024 * 512); // 512MB&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Server-Sent Events&lt;/h3&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/yhirose/cpp-httplib/raw/master/example/ssesvr.cc&#34;&gt;Server example&lt;/a&gt; and &lt;a href=&#34;https://github.com/yhirose/cpp-httplib/raw/master/example/ssecli.cc&#34;&gt;Client example&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Default thread pool support&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;ThreadPool&lt;/code&gt; is used as a &lt;strong&gt;default&lt;/strong&gt; task queue, and the default thread count is 8, or &lt;code&gt;std:&lt;span&gt;🧵&lt;/span&gt;:hardware_concurrency()&lt;/code&gt;. You can change it with &lt;code&gt;CPPHTTPLIB_THREAD_POOL_COUNT&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to set the thread count at runtime, there is no convenient way... But here is how.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;svr.new_task_queue = [] { return new ThreadPool(12); };&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Override the default thread pool with yours&lt;/h3&gt; &#xA;&lt;p&gt;You can supply your own thread pool implementation according to your need.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;class YourThreadPoolTaskQueue : public TaskQueue {&#xA;public:&#xA;  YourThreadPoolTaskQueue(size_t n) {&#xA;    pool_.start_with_thread_count(n);&#xA;  }&#xA;&#xA;  virtual void enqueue(std::function&amp;lt;void()&amp;gt; fn) override {&#xA;    pool_.enqueue(fn);&#xA;  }&#xA;&#xA;  virtual void shutdown() override {&#xA;    pool_.shutdown_gracefully();&#xA;  }&#xA;&#xA;private:&#xA;  YourThreadPool pool_;&#xA;};&#xA;&#xA;svr.new_task_queue = [] {&#xA;  return new YourThreadPoolTaskQueue(12);&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Client&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#include &amp;lt;httplib.h&amp;gt;&#xA;#include &amp;lt;iostream&amp;gt;&#xA;&#xA;int main(void)&#xA;{&#xA;  httplib::Client cli(&#34;localhost&#34;, 1234);&#xA;&#xA;  if (auto res = cli.Get(&#34;/hi&#34;)) {&#xA;    if (res-&amp;gt;status == 200) {&#xA;      std::cout &amp;lt;&amp;lt; res-&amp;gt;body &amp;lt;&amp;lt; std::endl;&#xA;    }&#xA;  } else {&#xA;    auto err = res.error();&#xA;    ...&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: Constructor with scheme-host-port string is now supported!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;httplib::Client cli(&#34;localhost&#34;);&#xA;httplib::Client cli(&#34;localhost:8080&#34;);&#xA;httplib::Client cli(&#34;http://localhost&#34;);&#xA;httplib::Client cli(&#34;http://localhost:8080&#34;);&#xA;httplib::Client cli(&#34;https://localhost&#34;);&#xA;httplib::SSLClient cli(&#34;localhost&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Error code&lt;/h3&gt; &#xA;&lt;p&gt;Here is the list of errors from &lt;code&gt;Result::error()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;enum Error {&#xA;  Success = 0,&#xA;  Unknown,&#xA;  Connection,&#xA;  BindIPAddress,&#xA;  Read,&#xA;  Write,&#xA;  ExceedRedirectCount,&#xA;  Canceled,&#xA;  SSLConnection,&#xA;  SSLLoadingCerts,&#xA;  SSLServerVerification,&#xA;  UnsupportedMultipartBoundaryChars&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;GET with HTTP headers&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;httplib::Headers headers = {&#xA;  { &#34;Accept-Encoding&#34;, &#34;gzip, deflate&#34; }&#xA;};&#xA;auto res = cli.Get(&#34;/hi&#34;, headers);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;cli.set_default_headers({&#xA;  { &#34;Accept-Encoding&#34;, &#34;gzip, deflate&#34; }&#xA;});&#xA;auto res = cli.Get(&#34;/hi&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;POST&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;res = cli.Post(&#34;/post&#34;, &#34;text&#34;, &#34;text/plain&#34;);&#xA;res = cli.Post(&#34;/person&#34;, &#34;name=john1&amp;amp;note=coder&#34;, &#34;application/x-www-form-urlencoded&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;POST with parameters&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;httplib::Params params;&#xA;params.emplace(&#34;name&#34;, &#34;john&#34;);&#xA;params.emplace(&#34;note&#34;, &#34;coder&#34;);&#xA;&#xA;auto res = cli.Post(&#34;/post&#34;, params);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;httplib::Params params{&#xA;  { &#34;name&#34;, &#34;john&#34; },&#xA;  { &#34;note&#34;, &#34;coder&#34; }&#xA;};&#xA;&#xA;auto res = cli.Post(&#34;/post&#34;, params);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;POST with Multipart Form Data&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;httplib::MultipartFormDataItems items = {&#xA;  { &#34;text1&#34;, &#34;text default&#34;, &#34;&#34;, &#34;&#34; },&#xA;  { &#34;text2&#34;, &#34;aωb&#34;, &#34;&#34;, &#34;&#34; },&#xA;  { &#34;file1&#34;, &#34;h\ne\n\nl\nl\no\n&#34;, &#34;hello.txt&#34;, &#34;text/plain&#34; },&#xA;  { &#34;file2&#34;, &#34;{\n  \&#34;world\&#34;, true\n}\n&#34;, &#34;world.json&#34;, &#34;application/json&#34; },&#xA;  { &#34;file3&#34;, &#34;&#34;, &#34;&#34;, &#34;application/octet-stream&#34; },&#xA;};&#xA;&#xA;auto res = cli.Post(&#34;/multipart&#34;, items);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;PUT&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;res = cli.Put(&#34;/resource/foo&#34;, &#34;text&#34;, &#34;text/plain&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;DELETE&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;res = cli.Delete(&#34;/resource/foo&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;OPTIONS&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;res = cli.Options(&#34;*&#34;);&#xA;res = cli.Options(&#34;/resource/foo&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Timeout&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;cli.set_connection_timeout(0, 300000); // 300 milliseconds&#xA;cli.set_read_timeout(5, 0); // 5 seconds&#xA;cli.set_write_timeout(5, 0); // 5 seconds&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Receive content with a content receiver&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;std::string body;&#xA;&#xA;auto res = cli.Get(&#34;/large-data&#34;,&#xA;  [&amp;amp;](const char *data, size_t data_length) {&#xA;    body.append(data, data_length);&#xA;    return true;&#xA;  });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;std::string body;&#xA;&#xA;auto res = cli.Get(&#xA;  &#34;/stream&#34;, Headers(),&#xA;  [&amp;amp;](const Response &amp;amp;response) {&#xA;    EXPECT_EQ(200, response.status);&#xA;    return true; // return &#39;false&#39; if you want to cancel the request.&#xA;  },&#xA;  [&amp;amp;](const char *data, size_t data_length) {&#xA;    body.append(data, data_length);&#xA;    return true; // return &#39;false&#39; if you want to cancel the request.&#xA;  });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Send content with a content provider&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;std::string body = ...;&#xA;&#xA;auto res = cli.Post(&#xA;  &#34;/stream&#34;, body.size(),&#xA;  [](size_t offset, size_t length, DataSink &amp;amp;sink) {&#xA;    sink.write(body.data() + offset, length);&#xA;    return true; // return &#39;false&#39; if you want to cancel the request.&#xA;  },&#xA;  &#34;text/plain&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Chunked transfer encoding&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;auto res = cli.Post(&#xA;  &#34;/stream&#34;,&#xA;  [](size_t offset, DataSink &amp;amp;sink) {&#xA;    sink.os &amp;lt;&amp;lt; &#34;chunked data 1&#34;;&#xA;    sink.os &amp;lt;&amp;lt; &#34;chunked data 2&#34;;&#xA;    sink.os &amp;lt;&amp;lt; &#34;chunked data 3&#34;;&#xA;    sink.done();&#xA;    return true; // return &#39;false&#39; if you want to cancel the request.&#xA;  },&#xA;  &#34;text/plain&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;With Progress Callback&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;httplib::Client client(url, port);&#xA;&#xA;// prints: 0 / 000 bytes =&amp;gt; 50% complete&#xA;auto res = cli.Get(&#34;/&#34;, [](uint64_t len, uint64_t total) {&#xA;  printf(&#34;%lld / %lld bytes =&amp;gt; %d%% complete\n&#34;,&#xA;    len, total,&#xA;    (int)(len*100/total));&#xA;  return true; // return &#39;false&#39; if you want to cancel the request.&#xA;}&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/236374/33138910-495c4ecc-cf86-11e7-8693-2fc6d09615c4.gif&#34; alt=&#34;progress&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Authentication&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// Basic Authentication&#xA;cli.set_basic_auth(&#34;user&#34;, &#34;pass&#34;);&#xA;&#xA;// Digest Authentication&#xA;cli.set_digest_auth(&#34;user&#34;, &#34;pass&#34;);&#xA;&#xA;// Bearer Token Authentication&#xA;cli.set_bearer_token_auth(&#34;token&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: OpenSSL is required for Digest Authentication.&lt;/p&gt; &#xA;&lt;h3&gt;Proxy server support&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;cli.set_proxy(&#34;host&#34;, port);&#xA;&#xA;// Basic Authentication&#xA;cli.set_proxy_basic_auth(&#34;user&#34;, &#34;pass&#34;);&#xA;&#xA;// Digest Authentication&#xA;cli.set_proxy_digest_auth(&#34;user&#34;, &#34;pass&#34;);&#xA;&#xA;// Bearer Token Authentication&#xA;cli.set_proxy_bearer_token_auth(&#34;pass&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: OpenSSL is required for Digest Authentication.&lt;/p&gt; &#xA;&lt;h3&gt;Range&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;httplib::Client cli(&#34;httpbin.org&#34;);&#xA;&#xA;auto res = cli.Get(&#34;/range/32&#34;, {&#xA;  httplib::make_range_header({{1, 10}}) // &#39;Range: bytes=1-10&#39;&#xA;});&#xA;// res-&amp;gt;status should be 206.&#xA;// res-&amp;gt;body should be &#34;bcdefghijk&#34;.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;httplib::make_range_header({{1, 10}, {20, -1}})      // &#39;Range: bytes=1-10, 20-&#39;&#xA;httplib::make_range_header({{100, 199}, {500, 599}}) // &#39;Range: bytes=100-199, 500-599&#39;&#xA;httplib::make_range_header({{0, 0}, {-1, 1}})        // &#39;Range: bytes=0-0, -1&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Keep-Alive connection&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;httplib::Client cli(&#34;localhost&#34;, 1234);&#xA;&#xA;cli.Get(&#34;/hello&#34;);         // with &#34;Connection: close&#34;&#xA;&#xA;cli.set_keep_alive(true);&#xA;cli.Get(&#34;/world&#34;);&#xA;&#xA;cli.set_keep_alive(false);&#xA;cli.Get(&#34;/last-request&#34;);  // with &#34;Connection: close&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Redirect&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;httplib::Client cli(&#34;yahoo.com&#34;);&#xA;&#xA;auto res = cli.Get(&#34;/&#34;);&#xA;res-&amp;gt;status; // 301&#xA;&#xA;cli.set_follow_location(true);&#xA;res = cli.Get(&#34;/&#34;);&#xA;res-&amp;gt;status; // 200&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Use a specific network interface&lt;/h3&gt; &#xA;&lt;p&gt;NOTE: This feature is not available on Windows, yet.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;cli.set_interface(&#34;eth0&#34;); // Interface name, IP address or host name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Compression&lt;/h2&gt; &#xA;&lt;p&gt;The server can apply compression to the following MIME type contents:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;all text types except text/event-stream&lt;/li&gt; &#xA; &lt;li&gt;image/svg+xml&lt;/li&gt; &#xA; &lt;li&gt;application/javascript&lt;/li&gt; &#xA; &lt;li&gt;application/json&lt;/li&gt; &#xA; &lt;li&gt;application/xml&lt;/li&gt; &#xA; &lt;li&gt;application/xhtml+xml&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Zlib Support&lt;/h3&gt; &#xA;&lt;p&gt;&#39;gzip&#39; compression is available with &lt;code&gt;CPPHTTPLIB_ZLIB_SUPPORT&lt;/code&gt;. &lt;code&gt;libz&lt;/code&gt; should be linked.&lt;/p&gt; &#xA;&lt;h3&gt;Brotli Support&lt;/h3&gt; &#xA;&lt;p&gt;Brotli compression is available with &lt;code&gt;CPPHTTPLIB_BROTLI_SUPPORT&lt;/code&gt;. Necessary libraries should be linked. Please see &lt;a href=&#34;https://github.com/google/brotli&#34;&gt;https://github.com/google/brotli&lt;/a&gt; for more detail.&lt;/p&gt; &#xA;&lt;h3&gt;Compress request body on client&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;cli.set_compress(true);&#xA;res = cli.Post(&#34;/resource/foo&#34;, &#34;...&#34;, &#34;text/plain&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Compress response body on client&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;cli.set_decompress(false);&#xA;res = cli.Get(&#34;/resource/foo&#34;, {{&#34;Accept-Encoding&#34;, &#34;gzip, deflate, br&#34;}});&#xA;res-&amp;gt;body; // Compressed data&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Use &lt;code&gt;poll&lt;/code&gt; instead of &lt;code&gt;select&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;select&lt;/code&gt; system call is used as default since it&#39;s more widely supported. If you want to let cpp-httplib use &lt;code&gt;poll&lt;/code&gt; instead, you can do so with &lt;code&gt;CPPHTTPLIB_USE_POLL&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Split httplib.h into .h and .cc&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ ./split.py -h&#xA;usage: split.py [-h] [-e EXTENSION] [-o OUT]&#xA;&#xA;This script splits httplib.h into .h and .cc parts.&#xA;&#xA;optional arguments:&#xA;  -h, --help            show this help message and exit&#xA;  -e EXTENSION, --extension EXTENSION&#xA;                        extension of the implementation file (default: cc)&#xA;  -o OUT, --out OUT     where to write the files (default: out)&#xA;&#xA;$ ./split.py&#xA;Wrote out/httplib.h and out/httplib.cc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;NOTE&lt;/h2&gt; &#xA;&lt;h3&gt;g++&lt;/h3&gt; &#xA;&lt;p&gt;g++ 4.8 and below cannot build this library since &lt;code&gt;&amp;lt;regex&amp;gt;&lt;/code&gt; in the versions are &lt;a href=&#34;https://stackoverflow.com/questions/12530406/is-gcc-4-8-or-earlier-buggy-about-regular-expressions&#34;&gt;broken&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;Include &lt;code&gt;httplib.h&lt;/code&gt; before &lt;code&gt;Windows.h&lt;/code&gt; or include &lt;code&gt;Windows.h&lt;/code&gt; by defining &lt;code&gt;WIN32_LEAN_AND_MEAN&lt;/code&gt; beforehand.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;httplib.h&amp;gt;&#xA;#include &amp;lt;Windows.h&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#define WIN32_LEAN_AND_MEAN&#xA;#include &amp;lt;Windows.h&amp;gt;&#xA;#include &amp;lt;httplib.h&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: cpp-httplib officially supports only the latest Visual Studio. It might work with former versions of Visual Studio, but I can no longer verify it. Pull requests are always welcome for the older versions of Visual Studio unless they break the C++11 conformance.&lt;/p&gt; &#xA;&lt;p&gt;Note: Windows 8 or lower and Cygwin on Windows are not supported.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT license (© 2021 Yuji Hirose)&lt;/p&gt; &#xA;&lt;h2&gt;Special Thanks To&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yhirose/cpp-httplib/graphs/contributors&#34;&gt;These folks&lt;/a&gt; made great contributions to polish this library to totally another level from a simple toy!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>protocolbuffers/protobuf</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/protocolbuffers/protobuf</id>
    <link href="https://github.com/protocolbuffers/protobuf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Protocol Buffers - Google&#39;s data interchange format&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Protocol Buffers - Google&#39;s data interchange format&lt;/h1&gt; &#xA;&lt;p&gt;Copyright 2008 Google Inc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developers.google.com/protocol-buffers/&#34;&gt;https://developers.google.com/protocol-buffers/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Protocol Buffers (a.k.a., protobuf) are Google&#39;s language-neutral, platform-neutral, extensible mechanism for serializing structured data. You can find &lt;a href=&#34;https://developers.google.com/protocol-buffers/&#34;&gt;protobuf&#39;s documentation on the Google Developers site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This README file contains protobuf installation instructions. To install protobuf, you need to install the protocol compiler (used to compile .proto files) and the protobuf runtime for your chosen programming language.&lt;/p&gt; &#xA;&lt;h2&gt;Protocol Compiler Installation&lt;/h2&gt; &#xA;&lt;p&gt;The protocol compiler is written in C++. If you are using C++, please follow the &lt;a href=&#34;https://raw.githubusercontent.com/protocolbuffers/protobuf/main/src/README.md&#34;&gt;C++ Installation Instructions&lt;/a&gt; to install protoc along with the C++ runtime.&lt;/p&gt; &#xA;&lt;p&gt;For non-C++ users, the simplest way to install the protocol compiler is to download a pre-built binary from our release page:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/protocolbuffers/protobuf/releases&#34;&gt;https://github.com/protocolbuffers/protobuf/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In the downloads section of each release, you can find pre-built binaries in zip packages: protoc-$VERSION-$PLATFORM.zip. It contains the protoc binary as well as a set of standard .proto files distributed along with protobuf.&lt;/p&gt; &#xA;&lt;p&gt;If you are looking for an old version that is not available in the release page, check out the maven repo here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repo1.maven.org/maven2/com/google/protobuf/protoc/&#34;&gt;https://repo1.maven.org/maven2/com/google/protobuf/protoc/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;These pre-built binaries are only provided for released versions. If you want to use the github main version at HEAD, or you need to modify protobuf code, or you are using C++, it&#39;s recommended to build your own protoc binary from source.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to build protoc binary from source, see the &lt;a href=&#34;https://raw.githubusercontent.com/protocolbuffers/protobuf/main/src/README.md&#34;&gt;C++ Installation Instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Protobuf Runtime Installation&lt;/h2&gt; &#xA;&lt;p&gt;Protobuf supports several different programming languages. For each programming language, you can find instructions in the corresponding source directory about how to install protobuf runtime for that specific language:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;   &lt;th&gt;Source&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C++ (include C++ runtime and protoc)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/protocolbuffers/protobuf/main/src&#34;&gt;src&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Java&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/protocolbuffers/protobuf/main/java&#34;&gt;java&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/protocolbuffers/protobuf/main/python&#34;&gt;python&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Objective-C&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/protocolbuffers/protobuf/main/objectivec&#34;&gt;objectivec&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C#&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/protocolbuffers/protobuf/main/csharp&#34;&gt;csharp&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ruby&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/protocolbuffers/protobuf/main/ruby&#34;&gt;ruby&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Go&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/protocolbuffers/protobuf-go&#34;&gt;protocolbuffers/protobuf-go&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PHP&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/protocolbuffers/protobuf/main/php&#34;&gt;php&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dart&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dart-lang/protobuf&#34;&gt;dart-lang/protobuf&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;The best way to learn how to use protobuf is to follow the tutorials in our developer guide:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developers.google.com/protocol-buffers/docs/tutorials&#34;&gt;https://developers.google.com/protocol-buffers/docs/tutorials&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to learn from code examples, take a look at the examples in the &lt;a href=&#34;https://raw.githubusercontent.com/protocolbuffers/protobuf/main/examples&#34;&gt;examples&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The complete documentation for Protocol Buffers is available via the web at:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developers.google.com/protocol-buffers/&#34;&gt;https://developers.google.com/protocol-buffers/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zaphoyd/websocketpp</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/zaphoyd/websocketpp</id>
    <link href="https://github.com/zaphoyd/websocketpp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;C++ websocket client/server library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WebSocket++ (0.8.2)&lt;/h1&gt; &#xA;&lt;p&gt;WebSocket++ is a header only C++ library that implements RFC6455 The WebSocket Protocol. It allows integrating WebSocket client and server functionality into C++ programs. It uses interchangeable network transport modules including one based on raw char buffers, one based on C++ iostreams, and one based on Asio (either via Boost or standalone). End users can write additional transport policies to support other networking or event libraries as needed.&lt;/p&gt; &#xA;&lt;h1&gt;Major Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full support for RFC6455&lt;/li&gt; &#xA; &lt;li&gt;Partial support for Hixie 76 / Hybi 00, 07-17 draft specs (server only)&lt;/li&gt; &#xA; &lt;li&gt;Message/event based interface&lt;/li&gt; &#xA; &lt;li&gt;Supports secure WebSockets (TLS), IPv6, and explicit proxies.&lt;/li&gt; &#xA; &lt;li&gt;Flexible dependency management (C++11 Standard Library or Boost)&lt;/li&gt; &#xA; &lt;li&gt;Interchangeable network transport modules (raw, iostream, Asio, or custom)&lt;/li&gt; &#xA; &lt;li&gt;Portable/cross platform (Posix/Windows, 32/64bit, Intel/ARM/PPC)&lt;/li&gt; &#xA; &lt;li&gt;Thread-safe&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Get Involved&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/zaphoyd/websocketpp&#34;&gt;&lt;img src=&#34;https://travis-ci.org/zaphoyd/websocketpp.png&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Project Website&lt;/strong&gt; &lt;a href=&#34;http://www.zaphoyd.com/websocketpp/&#34;&gt;http://www.zaphoyd.com/websocketpp/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;User Manual&lt;/strong&gt; &lt;a href=&#34;http://docs.websocketpp.org/&#34;&gt;http://docs.websocketpp.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;GitHub Repository&lt;/strong&gt; &lt;a href=&#34;https://github.com/zaphoyd/websocketpp/&#34;&gt;https://github.com/zaphoyd/websocketpp/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;GitHub pull requests should be submitted to the &lt;code&gt;develop&lt;/code&gt; branch.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Announcements Mailing List&lt;/strong&gt; &lt;a href=&#34;http://groups.google.com/group/websocketpp-announcements/&#34;&gt;http://groups.google.com/group/websocketpp-announcements/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;IRC Channel&lt;/strong&gt; #websocketpp (freenode)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Discussion / Development / Support Mailing List / Forum&lt;/strong&gt; &lt;a href=&#34;http://groups.google.com/group/websocketpp/&#34;&gt;http://groups.google.com/group/websocketpp/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Author&lt;/h1&gt; &#xA;&lt;p&gt;Peter Thorson - &lt;a href=&#34;mailto:websocketpp@zaphoyd.com&#34;&gt;websocketpp@zaphoyd.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>qinguoyi/TinyWebServer</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/qinguoyi/TinyWebServer</id>
    <link href="https://github.com/qinguoyi/TinyWebServer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔥 Linux下C++轻量级Web服务器&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TinyWebServer&lt;/h1&gt; &#xA;&lt;p&gt;Linux下C++轻量级Web服务器，助力初学者快速实践网络编程，搭建属于自己的服务器.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用 &lt;strong&gt;线程池 + 非阻塞socket + epoll(ET和LT均实现) + 事件处理(Reactor和模拟Proactor均实现)&lt;/strong&gt; 的并发模型&lt;/li&gt; &#xA; &lt;li&gt;使用&lt;strong&gt;状态机&lt;/strong&gt;解析HTTP请求报文，支持解析&lt;strong&gt;GET和POST&lt;/strong&gt;请求&lt;/li&gt; &#xA; &lt;li&gt;访问服务器数据库实现web端用户&lt;strong&gt;注册、登录&lt;/strong&gt;功能，可以请求服务器&lt;strong&gt;图片和视频文件&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;实现&lt;strong&gt;同步/异步日志系统&lt;/strong&gt;，记录服务器运行状态&lt;/li&gt; &#xA; &lt;li&gt;经Webbench压力测试可以实现&lt;strong&gt;上万的并发连接&lt;/strong&gt;数据交换&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;写在前面&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本项目开发维护过程中，很多童鞋曾发红包支持，我都一一谢绝。我现在不会，将来也不会将本项目包装成任何课程售卖，更不会开通任何支持通道。&lt;/li&gt; &#xA; &lt;li&gt;目前网络上有人或对本项目，或对游双大佬的项目包装成课程售卖。请各位童鞋擦亮眼，辨识各大学习/求职网站的C++服务器项目，不要盲目付费。&lt;/li&gt; &#xA; &lt;li&gt;有面试官大佬通过项目信息在公司内找到我，发现很多童鞋简历上都用了这个项目。但，在面试过程中发现&lt;code&gt;很多童鞋通过本项目入门了，但是对于一些东西还是属于知其然不知其所以然的状态，需要加强下基础知识的学习&lt;/code&gt;，推荐认真阅读下 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;《unix环境高级编程》&lt;/li&gt; &#xA;   &lt;li&gt;《unix网络编程》&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;感谢各位大佬，各位朋友，各位童鞋的认可和支持。如果本项目能带你入门，将是我莫大的荣幸。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;目录&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinguoyi/TinyWebServer/master/#%E6%A6%82%E8%BF%B0&#34;&gt;概述&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinguoyi/TinyWebServer/master/#%E6%A1%86%E6%9E%B6&#34;&gt;框架&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinguoyi/TinyWebServer/master/#Demo%E6%BC%94%E7%A4%BA&#34;&gt;Demo演示&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinguoyi/TinyWebServer/master/#%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95&#34;&gt;压力测试&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinguoyi/TinyWebServer/master/#%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97&#34;&gt;更新日志&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinguoyi/TinyWebServer/master/#%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD&#34;&gt;源码下载&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinguoyi/TinyWebServer/master/#%E5%BF%AB%E9%80%9F%E8%BF%90%E8%A1%8C&#34;&gt;快速运行&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinguoyi/TinyWebServer/master/#%E4%B8%AA%E6%80%A7%E5%8C%96%E8%BF%90%E8%A1%8C&#34;&gt;个性化运行&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinguoyi/TinyWebServer/master/#%E5%BA%96%E4%B8%81%E8%A7%A3%E7%89%9B&#34;&gt;庖丁解牛&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinguoyi/TinyWebServer/master/#CPP11%E5%AE%9E%E7%8E%B0&#34;&gt;CPP11实现&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/qinguoyi/TinyWebServer/master/#%E8%87%B4%E8%B0%A2&#34;&gt;致谢&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;概述&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;C/C++&lt;/li&gt; &#xA;  &lt;li&gt;B/S模型&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/qinguoyi/TinyWebServer/tree/master/lock&#34;&gt;线程同步机制包装类&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/qinguoyi/TinyWebServer/tree/master/http&#34;&gt;http连接请求处理类&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/qinguoyi/TinyWebServer/tree/master/threadpool&#34;&gt;半同步/半反应堆线程池&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/qinguoyi/TinyWebServer/tree/master/timer&#34;&gt;定时器处理非活动连接&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/qinguoyi/TinyWebServer/tree/master/log&#34;&gt;同步/异步日志系统 &lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/qinguoyi/TinyWebServer/tree/master/CGImysql&#34;&gt;数据库连接池&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/qinguoyi/TinyWebServer/tree/master/CGImysql&#34;&gt;同步线程注册和登录校验&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/qinguoyi/TinyWebServer/tree/master/test_presure&#34;&gt;简易服务器压力测试&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;框架&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;http://ww1.sinaimg.cn/large/005TJ2c7ly1ge0j1atq5hj30g60lm0w4.jpg&#34; height=&#34;765&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Demo演示&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;注册演示&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;http://ww1.sinaimg.cn/large/005TJ2c7ly1ge0iz0dkleg30m80bxjyj.gif&#34; height=&#34;429&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;登录演示&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;http://ww1.sinaimg.cn/large/005TJ2c7ly1ge0izcc0r1g30m80bxn6a.gif&#34; height=&#34;429&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;请求图片文件演示(6M)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;http://ww1.sinaimg.cn/large/005TJ2c7ly1ge0juxrnlfg30go07x4qr.gif&#34; height=&#34;429&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;请求视频文件演示(39M)&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;http://ww1.sinaimg.cn/large/005TJ2c7ly1ge0jtxie8ng30go07xb2b.gif&#34; height=&#34;429&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;压力测试&lt;/h2&gt; &#xA;&lt;p&gt;在关闭日志后，使用Webbench对服务器进行压力测试，对listenfd和connfd分别采用ET和LT模式，均可实现上万的并发连接，下面列出的是两者组合后的测试结果.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Proactor，LT + LT，93251 QPS&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;http://ww1.sinaimg.cn/large/005TJ2c7ly1gfjqu2hptkj30gz07474n.jpg&#34; height=&#34;201&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Proactor，LT + ET，97459 QPS&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;http://ww1.sinaimg.cn/large/005TJ2c7ly1gfjr1xppdgj30h206zdg6.jpg&#34; height=&#34;201&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Proactor，ET + LT，80498 QPS&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;http://ww1.sinaimg.cn/large/005TJ2c7ly1gfjr24vmjtj30gz0720t3.jpg&#34; height=&#34;201&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Proactor，ET + ET，92167 QPS&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;http://ww1.sinaimg.cn/large/005TJ2c7ly1gfjrflrebdj30gz06z0t3.jpg&#34; height=&#34;201&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Reactor，LT + ET，69175 QPS&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;http://ww1.sinaimg.cn/large/005TJ2c7ly1gfjr1humcbj30h207474n.jpg&#34; height=&#34;201&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;并发连接总数：10500&lt;/li&gt; &#xA;  &lt;li&gt;访问服务器时间：5s&lt;/li&gt; &#xA;  &lt;li&gt;所有访问均成功&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; 使用本项目的webbench进行压测时，若报错显示webbench命令找不到，将可执行文件webbench删除后，重新编译即可。&lt;/p&gt; &#xA;&lt;h2&gt;更新日志&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 解决请求服务器上大文件的Bug&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 增加请求视频文件的页面&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 解决数据库同步校验内存泄漏&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 实现非阻塞模式下的ET和LT触发，并完成压力测试&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 完善&lt;code&gt;lock.h&lt;/code&gt;中的封装类，统一使用该同步机制&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 改进代码结构，更新局部变量懒汉单例模式&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 优化数据库连接池信号量与代码结构&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 使用RAII机制优化数据库连接的获取与释放&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 优化代码结构，封装工具类以减少全局变量&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 编译一次即可，命令行进行个性化测试更加友好&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; main函数封装重构&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 新增命令行日志开关，关闭日志后更新压力测试结果&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 改进编译方式，只配置一次SQL信息即可&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 新增Reactor模式，并完成压力测试&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;源码下载&lt;/h2&gt; &#xA;&lt;p&gt;目前有两个版本，版本间的代码结构有较大改动，文档和代码运行方法也不一致。重构版本更简洁，原始版本(raw_version)更大保留游双代码的原汁原味，从原始版本更容易入手.&lt;/p&gt; &#xA;&lt;p&gt;如果遇到github代码下载失败，或访问太慢，可以从以下链接下载，与Github最新提交同步.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;重构版本下载地址 : &lt;a href=&#34;https://pan.baidu.com/s/1PozKji8Oop-1BYcfixZR0g&#34;&gt;BaiduYun&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;提取码 : vsqq&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;原始版本(raw_version)下载地址 : &lt;a href=&#34;https://pan.baidu.com/s/1asMNDW-zog92DZY1Oa4kaQ&#34;&gt;BaiduYun&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;提取码 : 9wye&lt;/li&gt; &#xA;   &lt;li&gt;原始版本运行请参考&lt;a href=&#34;https://github.com/qinguoyi/TinyWebServer/tree/raw_version&#34;&gt;原始文档&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;快速运行&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;服务器测试环境&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ubuntu版本16.04&lt;/li&gt; &#xA;   &lt;li&gt;MySQL版本5.7.29&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;浏览器测试环境&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Windows、Linux均可&lt;/li&gt; &#xA;   &lt;li&gt;Chrome&lt;/li&gt; &#xA;   &lt;li&gt;FireFox&lt;/li&gt; &#xA;   &lt;li&gt;其他浏览器暂无测试&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;测试前确认已安装MySQL数据库&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;// 建立yourdb库&#xA;create database yourdb;&#xA;&#xA;// 创建user表&#xA;USE yourdb;&#xA;CREATE TABLE user(&#xA;    username char(50) NULL,&#xA;    passwd char(50) NULL&#xA;)ENGINE=InnoDB;&#xA;&#xA;// 添加数据&#xA;INSERT INTO user(username, passwd) VALUES(&#39;name&#39;, &#39;passwd&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;修改main.cpp中的数据库初始化信息&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;//数据库登录名,密码,库名&#xA;string user = &#34;root&#34;;&#xA;string passwd = &#34;root&#34;;&#xA;string databasename = &#34;yourdb&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;build&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;sh ./build.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;启动server&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;./server&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;浏览器端&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;ip:9006&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;个性化运行&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;./server [-p port] [-l LOGWrite] [-m TRIGMode] [-o OPT_LINGER] [-s sql_num] [-t thread_num] [-c close_log] [-a actor_model]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;温馨提示:以上参数不是非必须，不用全部使用，根据个人情况搭配选用即可.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;-p，自定义端口号 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;默认9006&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;-l，选择日志写入方式，默认同步写入 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0，同步写入&lt;/li&gt; &#xA;   &lt;li&gt;1，异步写入&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;-m，listenfd和connfd的模式组合，默认使用LT + LT &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0，表示使用LT + LT&lt;/li&gt; &#xA;   &lt;li&gt;1，表示使用LT + ET&lt;/li&gt; &#xA;   &lt;li&gt;2，表示使用ET + LT&lt;/li&gt; &#xA;   &lt;li&gt;3，表示使用ET + ET&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;-o，优雅关闭连接，默认不使用 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0，不使用&lt;/li&gt; &#xA;   &lt;li&gt;1，使用&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;-s，数据库连接数量 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;默认为8&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;-t，线程数量 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;默认为8&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;-c，关闭日志，默认打开 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0，打开日志&lt;/li&gt; &#xA;   &lt;li&gt;1，关闭日志&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;-a，选择反应堆模型，默认Proactor &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;0，Proactor模型&lt;/li&gt; &#xA;   &lt;li&gt;1，Reactor模型&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;测试示例命令与含义&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;./server -p 9007 -l 1 -m 0 -o 1 -s 10 -t 10 -c 1 -a 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 端口9007&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 异步写入日志&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 使用LT + LT组合&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 使用优雅关闭连接&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 数据库连接池内有10条连接&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 线程池内有10条线程&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 关闭日志&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Reactor反应堆模型&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;庖丁解牛&lt;/h2&gt; &#xA;&lt;p&gt;近期版本迭代较快，以下内容多以旧版本(raw_version)代码为蓝本进行详解.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://huixxi.github.io/2020/06/02/%E5%B0%8F%E7%99%BD%E8%A7%86%E8%A7%92%EF%BC%9A%E4%B8%80%E6%96%87%E8%AF%BB%E6%87%82%E7%A4%BE%E9%95%BF%E7%9A%84TinyWebServer/#more&#34;&gt;小白视角：一文读懂社长的TinyWebServer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzAxNzU2MzcwMw==&amp;amp;mid=2649274278&amp;amp;idx=3&amp;amp;sn=5840ff698e3f963c7855d702e842ec47&amp;amp;chksm=83ffbefeb48837e86fed9754986bca6db364a6fe2e2923549a378e8e5dec6e3cf732cdb198e2&amp;amp;scene=0&amp;amp;xtrack=1#rd&#34;&gt;最新版Web服务器项目详解 - 01 线程同步机制封装类&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzAxNzU2MzcwMw==&amp;amp;mid=2649274278&amp;amp;idx=4&amp;amp;sn=caa323faf0c51d882453c0e0c6a62282&amp;amp;chksm=83ffbefeb48837e841a6dbff292217475d9075e91cbe14042ad6e55b87437dcd01e6d9219e7d&amp;amp;scene=0&amp;amp;xtrack=1#rd&#34;&gt;最新版Web服务器项目详解 - 02 半同步半反应堆线程池（上）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/PB8vMwi8sB4Jw3WzAKpWOQ&#34;&gt;最新版Web服务器项目详解 - 03 半同步半反应堆线程池（下）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/BfnNl-3jc_x5WPrWEJGdzQ&#34;&gt;最新版Web服务器项目详解 - 04 http连接处理（上）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/wAQHU-QZiRt1VACMZZjNlw&#34;&gt;最新版Web服务器项目详解 - 05 http连接处理（中）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/451xNaSFHxcxfKlPBV3OCg&#34;&gt;最新版Web服务器项目详解 - 06 http连接处理（下）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/mmXLqh_NywhBXJvI45hchA&#34;&gt;最新版Web服务器项目详解 - 07 定时器处理非活动连接（上）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/fb_OUnlV1SGuOUdrGrzVgg&#34;&gt;最新版Web服务器项目详解 - 08 定时器处理非活动连接（下）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/IWAlPzVDkR2ZRI5iirEfCg&#34;&gt;最新版Web服务器项目详解 - 09 日志系统（上）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/f-ujwFyCe1LZa3EB561ehA&#34;&gt;最新版Web服务器项目详解 - 10 日志系统（下）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzAxNzU2MzcwMw==&amp;amp;mid=2649274326&amp;amp;idx=1&amp;amp;sn=5af78e2bf6552c46ae9ab2aa22faf839&amp;amp;chksm=83ffbe8eb4883798c3abb82ddd124c8100a39ef41ab8d04abe42d344067d5e1ac1b0cac9d9a3&amp;amp;token=1450918099&amp;amp;lang=zh_CN#rd&#34;&gt;最新版Web服务器项目详解 - 11 数据库连接池&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzAxNzU2MzcwMw==&amp;amp;mid=2649274431&amp;amp;idx=4&amp;amp;sn=7595a70f06a79cb7abaebcd939e0cbee&amp;amp;chksm=83ffb167b4883871ce110aeb23e04acf835ef41016517247263a2c3ab6f8e615607858127ea6&amp;amp;token=1686112912&amp;amp;lang=zh_CN#rd&#34;&gt;最新版Web服务器项目详解 - 12 注册登录&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzAxNzU2MzcwMw==&amp;amp;mid=2649274431&amp;amp;idx=1&amp;amp;sn=2dd28c92f5d9704a57c001a3d2630b69&amp;amp;chksm=83ffb167b48838715810b27b8f8b9a576023ee5c08a8e5d91df5baf396732de51268d1bf2a4e&amp;amp;token=1686112912&amp;amp;lang=zh_CN#rd&#34;&gt;最新版Web服务器项目详解 - 13 踩坑与面试题&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;已更新完毕&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;CPP11实现&lt;/h2&gt; &#xA;&lt;p&gt;更简洁，更优雅的CPP11实现：&lt;a href=&#34;https://github.com/markparticle/WebServer&#34;&gt;Webserver&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;致谢&lt;/h2&gt; &#xA;&lt;p&gt;Linux高性能服务器编程，游双著.&lt;/p&gt; &#xA;&lt;p&gt;感谢以下朋友的PR和帮助: &lt;a href=&#34;https://github.com/RownH&#34;&gt;@RownH&lt;/a&gt;，&lt;a href=&#34;https://github.com/mapleFU&#34;&gt;@mapleFU&lt;/a&gt;，&lt;a href=&#34;https://github.com/ZWiley&#34;&gt;@ZWiley&lt;/a&gt;，&lt;a href=&#34;https://github.com/zjuHong&#34;&gt;@zjuHong&lt;/a&gt;，&lt;a href=&#34;https://github.com/mamil&#34;&gt;@mamil&lt;/a&gt;，&lt;a href=&#34;https://github.com/byfate&#34;&gt;@byfate&lt;/a&gt;，&lt;a href=&#34;https://github.com/MaJun827&#34;&gt;@MaJun827&lt;/a&gt;，&lt;a href=&#34;https://github.com/BBLiu-coder&#34;&gt;@BBLiu-coder&lt;/a&gt;，&lt;a href=&#34;https://github.com/smoky96&#34;&gt;@smoky96&lt;/a&gt;，&lt;a href=&#34;https://github.com/yfBong&#34;&gt;@yfBong&lt;/a&gt;，&lt;a href=&#34;https://github.com/liuwuyao&#34;&gt;@liuwuyao&lt;/a&gt;，&lt;a href=&#34;https://github.com/Huixxi&#34;&gt;@Huixxi&lt;/a&gt;，&lt;a href=&#34;https://github.com/markparticle&#34;&gt;@markparticle&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>grpc/grpc</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/grpc/grpc</id>
    <link href="https://github.com/grpc/grpc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The C based gRPC (C++, Python, Ruby, Objective-C, PHP, C#)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gRPC – An RPC library and framework&lt;/h1&gt; &#xA;&lt;p&gt;gRPC is a modern, open source, high-performance remote procedure call (RPC) framework that can run anywhere. gRPC enables client and server applications to communicate transparently, and simplifies the building of connected systems.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;Homepage:&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://grpc.io/&#34;&gt;grpc.io&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;Mailing List:&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/grpc-io&#34;&gt;grpc-io@googlegroups.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/grpc/grpc?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/grpc/grpc.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/grpc/grpc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;To start using gRPC&lt;/h2&gt; &#xA;&lt;p&gt;To maximize usability, gRPC supports the standard method for adding dependencies to a user&#39;s chosen language (if there is one). In most languages, the gRPC runtime comes as a package available in a user&#39;s language package manager.&lt;/p&gt; &#xA;&lt;p&gt;For instructions on how to use the language-specific gRPC runtime for a project, please refer to these documents&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc/grpc/master/src/cpp&#34;&gt;C++&lt;/a&gt;: follow the instructions under the &lt;code&gt;src/cpp&lt;/code&gt; directory&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc/grpc/master/src/csharp&#34;&gt;C#&lt;/a&gt;: NuGet package &lt;code&gt;Grpc&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/grpc/grpc-dart&#34;&gt;Dart&lt;/a&gt;: pub package &lt;code&gt;grpc&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/grpc/grpc-go&#34;&gt;Go&lt;/a&gt;: &lt;code&gt;go get google.golang.org/grpc&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/grpc/grpc-java&#34;&gt;Java&lt;/a&gt;: Use JARs from Maven Central Repository&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/grpc/grpc-kotlin&#34;&gt;Kotlin&lt;/a&gt;: Use JARs from Maven Central Repository&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/grpc/grpc-node&#34;&gt;Node&lt;/a&gt;: &lt;code&gt;npm install grpc&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc/grpc/master/src/objective-c&#34;&gt;Objective-C&lt;/a&gt;: Add &lt;code&gt;gRPC-ProtoRPC&lt;/code&gt; dependency to podspec&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc/grpc/master/src/php&#34;&gt;PHP&lt;/a&gt;: &lt;code&gt;pecl install grpc&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc/grpc/master/src/python/grpcio&#34;&gt;Python&lt;/a&gt;: &lt;code&gt;pip install grpcio&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc/grpc/master/src/ruby&#34;&gt;Ruby&lt;/a&gt;: &lt;code&gt;gem install grpc&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/grpc/grpc-web&#34;&gt;WebJS&lt;/a&gt;: follow the grpc-web instructions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Per-language quickstart guides and tutorials can be found in the &lt;a href=&#34;https://grpc.io/docs/&#34;&gt;documentation section on the grpc.io website&lt;/a&gt;. Code examples are available in the &lt;a href=&#34;https://raw.githubusercontent.com/grpc/grpc/master/examples&#34;&gt;examples&lt;/a&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;Precompiled bleeding-edge package builds of gRPC &lt;code&gt;master&lt;/code&gt; branch&#39;s &lt;code&gt;HEAD&lt;/code&gt; are uploaded daily to &lt;a href=&#34;https://packages.grpc.io&#34;&gt;packages.grpc.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;To start developing gRPC&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome!&lt;/p&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/grpc/grpc/master/CONTRIBUTING.md&#34;&gt;How to contribute&lt;/a&gt; which will guide you through the entire workflow of how to build the source code, how to run the tests, and how to contribute changes to the gRPC codebase. The &#34;How to contribute&#34; document also contains info on how the contribution process works and contains best practices for creating contributions.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;Sometimes things go wrong. Please check out the &lt;a href=&#34;https://raw.githubusercontent.com/grpc/grpc/master/TROUBLESHOOTING.md&#34;&gt;Troubleshooting guide&lt;/a&gt; if you are experiencing issues with gRPC.&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://grafana-dot-grpc-testing.appspot.com/&#34;&gt;Performance dashboard&lt;/a&gt; for performance numbers of master branch daily builds.&lt;/p&gt; &#xA;&lt;h2&gt;Concepts&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/grpc/grpc/master/CONCEPTS.md&#34;&gt;gRPC Concepts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About This Repository&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains source code for gRPC libraries implemented in multiple languages written on top of a shared C core library &lt;a href=&#34;https://raw.githubusercontent.com/grpc/grpc/master/src/core&#34;&gt;src/core&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Libraries in different languages may be in various states of development. We are seeking contributions for all of these libraries:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;   &lt;th&gt;Source&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shared C [core library]&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc/grpc/master/src/core&#34;&gt;src/core&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C++&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc/grpc/master/src/cpp&#34;&gt;src/cpp&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ruby&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc/grpc/master/src/ruby&#34;&gt;src/ruby&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc/grpc/master/src/python&#34;&gt;src/python&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PHP&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc/grpc/master/src/php&#34;&gt;src/php&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C# (core library based)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc/grpc/master/src/csharp&#34;&gt;src/csharp&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Objective-C&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/grpc/grpc/master/src/objective-c&#34;&gt;src/objective-c&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;   &lt;th&gt;Source repo&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Java&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/grpc/grpc-java&#34;&gt;grpc-java&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Kotlin&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/grpc/grpc-kotlin&#34;&gt;grpc-kotlin&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Go&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/grpc/grpc-go&#34;&gt;grpc-go&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NodeJS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/grpc/grpc-node&#34;&gt;grpc-node&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WebJS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/grpc/grpc-web&#34;&gt;grpc-web&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dart&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/grpc/grpc-dart&#34;&gt;grpc-dart&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.NET (pure C# impl.)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/grpc/grpc-dotnet&#34;&gt;grpc-dotnet&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Swift&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/grpc/grpc-swift&#34;&gt;grpc-swift&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>nlohmann/json</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/nlohmann/json</id>
    <link href="https://github.com/nlohmann/json" rel="alternate"></link>
    <summary type="html">&lt;p&gt;JSON for Modern C++&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/nlohmann/json/releases&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/docs/json.gif&#34; alt=&#34;JSON for Modern C++&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/nlohmann/json&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/1acb366xfyg3qybk/branch/develop?svg=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nlohmann/json/actions?query=workflow%3AUbuntu&#34;&gt;&lt;img src=&#34;https://github.com/nlohmann/json/workflows/Ubuntu/badge.svg?sanitize=true&#34; alt=&#34;Ubuntu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nlohmann/json/actions?query=workflow%3AmacOS&#34;&gt;&lt;img src=&#34;https://github.com/nlohmann/json/workflows/macOS/badge.svg?sanitize=true&#34; alt=&#34;macOS&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nlohmann/json/actions?query=workflow%3AWindows&#34;&gt;&lt;img src=&#34;https://github.com/nlohmann/json/workflows/Windows/badge.svg?sanitize=true&#34; alt=&#34;Windows&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/nlohmann/json?branch=develop&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/nlohmann/json/badge.svg?branch=develop&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://scan.coverity.com/projects/nlohmann-json&#34;&gt;&lt;img src=&#34;https://scan.coverity.com/projects/5550/badge.svg?sanitize=true&#34; alt=&#34;Coverity Scan Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codacy.com/gh/nlohmann/json/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=nlohmann/json&amp;amp;utm_campaign=Badge_Grade&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Grade/e0d1a9d5d6fd46fcb655c4cb930bb3e8&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/nlohmann/json/context:cpp&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/grade/cpp/g/nlohmann/json.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Language grade: C/C++&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:json&#34;&gt;&lt;img src=&#34;https://oss-fuzz-build-logs.storage.googleapis.com/badges/json.svg?sanitize=true&#34; alt=&#34;Fuzzing Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://wandbox.org/permlink/1mp10JbaANo6FUc7&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/try-online-blue.svg?sanitize=true&#34; alt=&#34;Try online&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://json.nlohmann.me&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-mkdocs-blue.svg?sanitize=true&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/master/LICENSE.MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nlohmann/json/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/nlohmann/json.svg?sanitize=true&#34; alt=&#34;GitHub Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nlohmann/json/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/nlohmann/json/total&#34; alt=&#34;GitHub Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/nlohmann/json/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/nlohmann/json.svg?sanitize=true&#34; alt=&#34;GitHub Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://isitmaintained.com/project/nlohmann/json&#34; title=&#34;Average time to resolve an issue&#34;&gt;&lt;img src=&#34;https://isitmaintained.com/badge/resolution/nlohmann/json.svg?sanitize=true&#34; alt=&#34;Average time to resolve an issue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/289&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/289/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/nlohmann&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/GitHub-Sponsors-ff69b4&#34; alt=&#34;GitHub Sponsors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#design-goals&#34;&gt;Design goals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#sponsors&#34;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#support&#34;&gt;Support&lt;/a&gt; (&lt;a href=&#34;https://json.nlohmann.me&#34;&gt;documentation&lt;/a&gt;, &lt;a href=&#34;https://json.nlohmann.me/home/faq/&#34;&gt;FAQ&lt;/a&gt;, &lt;a href=&#34;https://github.com/nlohmann/json/discussions&#34;&gt;discussions&lt;/a&gt;, &lt;a href=&#34;https://json.nlohmann.me/api/basic_json/&#34;&gt;API&lt;/a&gt;, &lt;a href=&#34;https://github.com/nlohmann/json/issues&#34;&gt;bug issues&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#examples&#34;&gt;Examples&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#json-as-first-class-data-type&#34;&gt;JSON as first-class data type&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#serialization--deserialization&#34;&gt;Serialization / Deserialization&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#stl-like-access&#34;&gt;STL-like access&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#conversion-from-stl-containers&#34;&gt;Conversion from STL containers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#json-pointer-and-json-patch&#34;&gt;JSON Pointer and JSON Patch&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#json-merge-patch&#34;&gt;JSON Merge Patch&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#implicit-conversions&#34;&gt;Implicit conversions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#arbitrary-types-conversions&#34;&gt;Conversions to/from arbitrary types&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#specializing-enum-conversion&#34;&gt;Specializing enum conversion&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#binary-formats-bson-cbor-messagepack-ubjson-and-bjdata&#34;&gt;Binary formats (BSON, CBOR, MessagePack, UBJSON, and BJData)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#supported-compilers&#34;&gt;Supported compilers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#integration&#34;&gt;Integration&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#cmake&#34;&gt;CMake&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#package-managers&#34;&gt;Package Managers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#pkg-config&#34;&gt;Pkg-config&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#contact&#34;&gt;Contact&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#thanks&#34;&gt;Thanks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#used-third-party-tools&#34;&gt;Used third-party tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#projects-using-json-for-modern-c&#34;&gt;Projects using JSON for Modern C++&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#notes&#34;&gt;Notes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#execute-unit-tests&#34;&gt;Execute unit tests&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Design goals&lt;/h2&gt; &#xA;&lt;p&gt;There are myriads of &lt;a href=&#34;https://json.org&#34;&gt;JSON&lt;/a&gt; libraries out there, and each may even have its reason to exist. Our class had these design goals:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Intuitive syntax&lt;/strong&gt;. In languages such as Python, JSON feels like a first class data type. We used all the operator magic of modern C++ to achieve the same feeling in your code. Check out the &lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#examples&#34;&gt;examples below&lt;/a&gt; and you&#39;ll know what I mean.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Trivial integration&lt;/strong&gt;. Our whole code consists of a single header file &lt;a href=&#34;https://github.com/nlohmann/json/raw/develop/single_include/nlohmann/json.hpp&#34;&gt;&lt;code&gt;json.hpp&lt;/code&gt;&lt;/a&gt;. That&#39;s it. No library, no subproject, no dependencies, no complex build system. The class is written in vanilla C++11. All in all, everything should require no adjustment of your compiler flags or project settings.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Serious testing&lt;/strong&gt;. Our code is heavily &lt;a href=&#34;https://github.com/nlohmann/json/tree/develop/tests/src&#34;&gt;unit-tested&lt;/a&gt; and covers &lt;a href=&#34;https://coveralls.io/r/nlohmann/json&#34;&gt;100%&lt;/a&gt; of the code, including all exceptional behavior. Furthermore, we checked with &lt;a href=&#34;https://valgrind.org&#34;&gt;Valgrind&lt;/a&gt; and the &lt;a href=&#34;https://clang.llvm.org/docs/index.html&#34;&gt;Clang Sanitizers&lt;/a&gt; that there are no memory leaks. &lt;a href=&#34;https://github.com/google/oss-fuzz/tree/master/projects/json&#34;&gt;Google OSS-Fuzz&lt;/a&gt; additionally runs fuzz tests against all parsers 24/7, effectively executing billions of tests so far. To maintain high quality, the project is following the &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/289&#34;&gt;Core Infrastructure Initiative (CII) best practices&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Other aspects were not so important to us:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Memory efficiency&lt;/strong&gt;. Each JSON object has an overhead of one pointer (the maximal size of a union) and one enumeration element (1 byte). The default generalization uses the following C++ data types: &lt;code&gt;std::string&lt;/code&gt; for strings, &lt;code&gt;int64_t&lt;/code&gt;, &lt;code&gt;uint64_t&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt; for numbers, &lt;code&gt;std::map&lt;/code&gt; for objects, &lt;code&gt;std::vector&lt;/code&gt; for arrays, and &lt;code&gt;bool&lt;/code&gt; for Booleans. However, you can template the generalized class &lt;code&gt;basic_json&lt;/code&gt; to your needs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Speed&lt;/strong&gt;. There are certainly &lt;a href=&#34;https://github.com/miloyip/nativejson-benchmark#parsing-time&#34;&gt;faster JSON libraries&lt;/a&gt; out there. However, if your goal is to speed up your development by adding JSON support with a single header, then this library is the way to go. If you know how to use a &lt;code&gt;std::vector&lt;/code&gt; or &lt;code&gt;std::map&lt;/code&gt;, you are already set.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/nlohmann/json/raw/master/.github/CONTRIBUTING.md#please-dont&#34;&gt;contribution guidelines&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;You can sponsor this library at &lt;a href=&#34;https://github.com/sponsors/nlohmann&#34;&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;🏢&lt;/span&gt; Corporate Sponsor&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/codacy&#34;&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Codacy-logo-black.svg/320px-Codacy-logo-black.svg.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;span&gt;🏷&lt;/span&gt; Named Sponsors&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reFX-Mike&#34;&gt;Michael Hartmann&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sthagen&#34;&gt;Stefan Hagen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/homer6&#34;&gt;Steve Sperandeo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eljefedelrodeodeljefe&#34;&gt;Robert Jefe Lindstädt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ciroque&#34;&gt;Steve Wagner&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thanks everyone!&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;&lt;span&gt;❓&lt;/span&gt; If you have a &lt;strong&gt;question&lt;/strong&gt;, please check if it is already answered in the &lt;a href=&#34;https://json.nlohmann.me/home/faq/&#34;&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/a&gt; or the &lt;a href=&#34;https://github.com/nlohmann/json/discussions/categories/q-a&#34;&gt;&lt;strong&gt;Q&amp;amp;A&lt;/strong&gt;&lt;/a&gt; section. If not, please &lt;a href=&#34;https://github.com/nlohmann/json/discussions/new&#34;&gt;&lt;strong&gt;ask a new question&lt;/strong&gt;&lt;/a&gt; there.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;📚&lt;/span&gt; If you want to &lt;strong&gt;learn more&lt;/strong&gt; about how to use the library, check out the rest of the &lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#examples&#34;&gt;&lt;strong&gt;README&lt;/strong&gt;&lt;/a&gt;, have a look at &lt;a href=&#34;https://github.com/nlohmann/json/tree/develop/docs/examples&#34;&gt;&lt;strong&gt;code examples&lt;/strong&gt;&lt;/a&gt;, or browse through the &lt;a href=&#34;https://json.nlohmann.me&#34;&gt;&lt;strong&gt;help pages&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;🚧&lt;/span&gt; If you want to understand the &lt;strong&gt;API&lt;/strong&gt; better, check out the &lt;a href=&#34;https://json.nlohmann.me/api/basic_json/&#34;&gt;&lt;strong&gt;API Reference&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;🐛&lt;/span&gt; If you found a &lt;strong&gt;bug&lt;/strong&gt;, please check the &lt;a href=&#34;https://json.nlohmann.me/home/faq/&#34;&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/a&gt; if it is a known issue or the result of a design decision. Please also have a look at the &lt;a href=&#34;https://github.com/nlohmann/json/issues&#34;&gt;&lt;strong&gt;issue list&lt;/strong&gt;&lt;/a&gt; before you &lt;a href=&#34;https://github.com/nlohmann/json/issues/new/choose&#34;&gt;&lt;strong&gt;create a new issue&lt;/strong&gt;&lt;/a&gt;. Please provide as much information as possible to help us understand and reproduce your issue.&lt;/p&gt; &#xA;&lt;p&gt;There is also a &lt;a href=&#34;https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/JSON_for_Modern_C%2B%2B&#34;&gt;&lt;strong&gt;docset&lt;/strong&gt;&lt;/a&gt; for the documentation browsers &lt;a href=&#34;https://kapeli.com/dash&#34;&gt;Dash&lt;/a&gt;, &lt;a href=&#34;https://velocity.silverlakesoftware.com&#34;&gt;Velocity&lt;/a&gt;, and &lt;a href=&#34;https://zealdocs.org&#34;&gt;Zeal&lt;/a&gt; that contains the full &lt;a href=&#34;https://json.nlohmann.me&#34;&gt;documentation&lt;/a&gt; as offline resource.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Beside the examples below, you may want to check the &lt;a href=&#34;https://json.nlohmann.me/&#34;&gt;documentation&lt;/a&gt; where each function contains a separate code example (e.g., check out &lt;a href=&#34;https://json.nlohmann.me/api/basic_json/emplace/&#34;&gt;&lt;code&gt;emplace()&lt;/code&gt;&lt;/a&gt;). All &lt;a href=&#34;https://github.com/nlohmann/json/tree/develop/docs/examples&#34;&gt;example files&lt;/a&gt; can be compiled and executed on their own (e.g., file &lt;a href=&#34;https://github.com/nlohmann/json/raw/develop/docs/examples/emplace.cpp&#34;&gt;emplace.cpp&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;JSON as first-class data type&lt;/h3&gt; &#xA;&lt;p&gt;Here are some examples to give you an idea how to use the class.&lt;/p&gt; &#xA;&lt;p&gt;Assume you want to create the JSON object&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;pi&#34;: 3.141,&#xA;  &#34;happy&#34;: true,&#xA;  &#34;name&#34;: &#34;Niels&#34;,&#xA;  &#34;nothing&#34;: null,&#xA;  &#34;answer&#34;: {&#xA;    &#34;everything&#34;: 42&#xA;  },&#xA;  &#34;list&#34;: [1, 0, 2],&#xA;  &#34;object&#34;: {&#xA;    &#34;currency&#34;: &#34;USD&#34;,&#xA;    &#34;value&#34;: 42.99&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With this library, you could write:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// create an empty structure (null)&#xA;json j;&#xA;&#xA;// add a number that is stored as double (note the implicit conversion of j to an object)&#xA;j[&#34;pi&#34;] = 3.141;&#xA;&#xA;// add a Boolean that is stored as bool&#xA;j[&#34;happy&#34;] = true;&#xA;&#xA;// add a string that is stored as std::string&#xA;j[&#34;name&#34;] = &#34;Niels&#34;;&#xA;&#xA;// add another null object by passing nullptr&#xA;j[&#34;nothing&#34;] = nullptr;&#xA;&#xA;// add an object inside the object&#xA;j[&#34;answer&#34;][&#34;everything&#34;] = 42;&#xA;&#xA;// add an array that is stored as std::vector (using an initializer list)&#xA;j[&#34;list&#34;] = { 1, 0, 2 };&#xA;&#xA;// add another object (using an initializer list of pairs)&#xA;j[&#34;object&#34;] = { {&#34;currency&#34;, &#34;USD&#34;}, {&#34;value&#34;, 42.99} };&#xA;&#xA;// instead, you could also write (which looks very similar to the JSON above)&#xA;json j2 = {&#xA;  {&#34;pi&#34;, 3.141},&#xA;  {&#34;happy&#34;, true},&#xA;  {&#34;name&#34;, &#34;Niels&#34;},&#xA;  {&#34;nothing&#34;, nullptr},&#xA;  {&#34;answer&#34;, {&#xA;    {&#34;everything&#34;, 42}&#xA;  }},&#xA;  {&#34;list&#34;, {1, 0, 2}},&#xA;  {&#34;object&#34;, {&#xA;    {&#34;currency&#34;, &#34;USD&#34;},&#xA;    {&#34;value&#34;, 42.99}&#xA;  }}&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that in all these cases, you never need to &#34;tell&#34; the compiler which JSON value type you want to use. If you want to be explicit or express some edge cases, the functions &lt;a href=&#34;https://json.nlohmann.me/api/basic_json/array/&#34;&gt;&lt;code&gt;json::array()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://json.nlohmann.me/api/basic_json/object/&#34;&gt;&lt;code&gt;json::object()&lt;/code&gt;&lt;/a&gt; will help:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// a way to express the empty array []&#xA;json empty_array_explicit = json::array();&#xA;&#xA;// ways to express the empty object {}&#xA;json empty_object_implicit = json({});&#xA;json empty_object_explicit = json::object();&#xA;&#xA;// a way to express an _array_ of key/value pairs [[&#34;currency&#34;, &#34;USD&#34;], [&#34;value&#34;, 42.99]]&#xA;json array_not_object = json::array({ {&#34;currency&#34;, &#34;USD&#34;}, {&#34;value&#34;, 42.99} });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Serialization / Deserialization&lt;/h3&gt; &#xA;&lt;h4&gt;To/from strings&lt;/h4&gt; &#xA;&lt;p&gt;You can create a JSON value (deserialization) by appending &lt;code&gt;_json&lt;/code&gt; to a string literal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// create object from string literal&#xA;json j = &#34;{ \&#34;happy\&#34;: true, \&#34;pi\&#34;: 3.141 }&#34;_json;&#xA;&#xA;// or even nicer with a raw string literal&#xA;auto j2 = R&#34;(&#xA;  {&#xA;    &#34;happy&#34;: true,&#xA;    &#34;pi&#34;: 3.141&#xA;  }&#xA;)&#34;_json;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that without appending the &lt;code&gt;_json&lt;/code&gt; suffix, the passed string literal is not parsed, but just used as JSON string value. That is, &lt;code&gt;json j = &#34;{ \&#34;happy\&#34;: true, \&#34;pi\&#34;: 3.141 }&#34;&lt;/code&gt; would just store the string &lt;code&gt;&#34;{ &#34;happy&#34;: true, &#34;pi&#34;: 3.141 }&#34;&lt;/code&gt; rather than parsing the actual object.&lt;/p&gt; &#xA;&lt;p&gt;The above example can also be expressed explicitly using &lt;a href=&#34;https://json.nlohmann.me/api/basic_json/parse/&#34;&gt;&lt;code&gt;json::parse()&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// parse explicitly&#xA;auto j3 = json::parse(R&#34;({&#34;happy&#34;: true, &#34;pi&#34;: 3.141})&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also get a string representation of a JSON value (serialize):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// explicit conversion to string&#xA;std::string s = j.dump();    // {&#34;happy&#34;:true,&#34;pi&#34;:3.141}&#xA;&#xA;// serialization with pretty printing&#xA;// pass in the amount of spaces to indent&#xA;std::cout &amp;lt;&amp;lt; j.dump(4) &amp;lt;&amp;lt; std::endl;&#xA;// {&#xA;//     &#34;happy&#34;: true,&#xA;//     &#34;pi&#34;: 3.141&#xA;// }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note the difference between serialization and assignment:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// store a string in a JSON value&#xA;json j_string = &#34;this is a string&#34;;&#xA;&#xA;// retrieve the string value&#xA;auto cpp_string = j_string.get&amp;lt;std::string&amp;gt;();&#xA;// retrieve the string value (alternative when a variable already exists)&#xA;std::string cpp_string2;&#xA;j_string.get_to(cpp_string2);&#xA;&#xA;// retrieve the serialized value (explicit JSON serialization)&#xA;std::string serialized_string = j_string.dump();&#xA;&#xA;// output of original string&#xA;std::cout &amp;lt;&amp;lt; cpp_string &amp;lt;&amp;lt; &#34; == &#34; &amp;lt;&amp;lt; cpp_string2 &amp;lt;&amp;lt; &#34; == &#34; &amp;lt;&amp;lt; j_string.get&amp;lt;std::string&amp;gt;() &amp;lt;&amp;lt; &#39;\n&#39;;&#xA;// output of serialized value&#xA;std::cout &amp;lt;&amp;lt; j_string &amp;lt;&amp;lt; &#34; == &#34; &amp;lt;&amp;lt; serialized_string &amp;lt;&amp;lt; std::endl;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://json.nlohmann.me/api/basic_json/dump/&#34;&gt;&lt;code&gt;.dump()&lt;/code&gt;&lt;/a&gt; returns the originally stored string value.&lt;/p&gt; &#xA;&lt;p&gt;Note the library only supports UTF-8. When you store strings with different encodings in the library, calling &lt;a href=&#34;https://json.nlohmann.me/api/basic_json/dump/&#34;&gt;&lt;code&gt;dump()&lt;/code&gt;&lt;/a&gt; may throw an exception unless &lt;code&gt;json::error_handler_t::replace&lt;/code&gt; or &lt;code&gt;json::error_handler_t::ignore&lt;/code&gt; are used as error handlers.&lt;/p&gt; &#xA;&lt;h4&gt;To/from streams (e.g. files, string streams)&lt;/h4&gt; &#xA;&lt;p&gt;You can also use streams to serialize and deserialize:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// deserialize from standard input&#xA;json j;&#xA;std::cin &amp;gt;&amp;gt; j;&#xA;&#xA;// serialize to standard output&#xA;std::cout &amp;lt;&amp;lt; j;&#xA;&#xA;// the setw manipulator was overloaded to set the indentation for pretty printing&#xA;std::cout &amp;lt;&amp;lt; std::setw(4) &amp;lt;&amp;lt; j &amp;lt;&amp;lt; std::endl;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These operators work for any subclasses of &lt;code&gt;std::istream&lt;/code&gt; or &lt;code&gt;std::ostream&lt;/code&gt;. Here is the same example with files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// read a JSON file&#xA;std::ifstream i(&#34;file.json&#34;);&#xA;json j;&#xA;i &amp;gt;&amp;gt; j;&#xA;&#xA;// write prettified JSON to another file&#xA;std::ofstream o(&#34;pretty.json&#34;);&#xA;o &amp;lt;&amp;lt; std::setw(4) &amp;lt;&amp;lt; j &amp;lt;&amp;lt; std::endl;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note that setting the exception bit for &lt;code&gt;failbit&lt;/code&gt; is inappropriate for this use case. It will result in program termination due to the &lt;code&gt;noexcept&lt;/code&gt; specifier in use.&lt;/p&gt; &#xA;&lt;h4&gt;Read from iterator range&lt;/h4&gt; &#xA;&lt;p&gt;You can also parse JSON from an iterator range; that is, from any container accessible by iterators whose &lt;code&gt;value_type&lt;/code&gt; is an integral type of 1, 2 or 4 bytes, which will be interpreted as UTF-8, UTF-16 and UTF-32 respectively. For instance, a &lt;code&gt;std::vector&amp;lt;std::uint8_t&amp;gt;&lt;/code&gt;, or a &lt;code&gt;std::list&amp;lt;std::uint16_t&amp;gt;&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;std::vector&amp;lt;std::uint8_t&amp;gt; v = {&#39;t&#39;, &#39;r&#39;, &#39;u&#39;, &#39;e&#39;};&#xA;json j = json::parse(v.begin(), v.end());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may leave the iterators for the range [begin, end):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;std::vector&amp;lt;std::uint8_t&amp;gt; v = {&#39;t&#39;, &#39;r&#39;, &#39;u&#39;, &#39;e&#39;};&#xA;json j = json::parse(v);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Custom data source&lt;/h4&gt; &#xA;&lt;p&gt;Since the parse function accepts arbitrary iterator ranges, you can provide your own data sources by implementing the &lt;code&gt;LegacyInputIterator&lt;/code&gt; concept.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;struct MyContainer {&#xA;  void advance();&#xA;  const char&amp;amp; get_current();&#xA;};&#xA;&#xA;struct MyIterator {&#xA;    using difference_type = std::ptrdiff_t;&#xA;    using value_type = char;&#xA;    using pointer = const char*;&#xA;    using reference = const char&amp;amp;;&#xA;    using iterator_category = std::input_iterator_tag;&#xA;&#xA;    MyIterator&amp;amp; operator++() {&#xA;        MyContainer.advance();&#xA;        return *this;&#xA;    }&#xA;&#xA;    bool operator!=(const MyIterator&amp;amp; rhs) const {&#xA;        return rhs.target != target;&#xA;    }&#xA;&#xA;    reference operator*() const {&#xA;        return target.get_current();&#xA;    }&#xA;&#xA;    MyContainer* target = nullptr;&#xA;};&#xA;&#xA;MyIterator begin(MyContainer&amp;amp; tgt) {&#xA;    return MyIterator{&amp;amp;tgt};&#xA;}&#xA;&#xA;MyIterator end(const MyContainer&amp;amp;) {&#xA;    return {};&#xA;}&#xA;&#xA;void foo() {&#xA;    MyContainer c;&#xA;    json j = json::parse(c);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;SAX interface&lt;/h4&gt; &#xA;&lt;p&gt;The library uses a SAX-like interface with the following functions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// called when null is parsed&#xA;bool null();&#xA;&#xA;// called when a boolean is parsed; value is passed&#xA;bool boolean(bool val);&#xA;&#xA;// called when a signed or unsigned integer number is parsed; value is passed&#xA;bool number_integer(number_integer_t val);&#xA;bool number_unsigned(number_unsigned_t val);&#xA;&#xA;// called when a floating-point number is parsed; value and original string is passed&#xA;bool number_float(number_float_t val, const string_t&amp;amp; s);&#xA;&#xA;// called when a string is parsed; value is passed and can be safely moved away&#xA;bool string(string_t&amp;amp; val);&#xA;// called when a binary value is parsed; value is passed and can be safely moved away&#xA;bool binary(binary_t&amp;amp; val);&#xA;&#xA;// called when an object or array begins or ends, resp. The number of elements is passed (or -1 if not known)&#xA;bool start_object(std::size_t elements);&#xA;bool end_object();&#xA;bool start_array(std::size_t elements);&#xA;bool end_array();&#xA;// called when an object key is parsed; value is passed and can be safely moved away&#xA;bool key(string_t&amp;amp; val);&#xA;&#xA;// called when a parse error occurs; byte position, the last token, and an exception is passed&#xA;bool parse_error(std::size_t position, const std::string&amp;amp; last_token, const detail::exception&amp;amp; ex);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The return value of each function determines whether parsing should proceed.&lt;/p&gt; &#xA;&lt;p&gt;To implement your own SAX handler, proceed as follows:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Implement the SAX interface in a class. You can use class &lt;code&gt;nlohmann::json_sax&amp;lt;json&amp;gt;&lt;/code&gt; as base class, but you can also use any class where the functions described above are implemented and public.&lt;/li&gt; &#xA; &lt;li&gt;Create an object of your SAX interface class, e.g. &lt;code&gt;my_sax&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Call &lt;code&gt;bool json::sax_parse(input, &amp;amp;my_sax)&lt;/code&gt;; where the first parameter can be any input like a string or an input stream and the second parameter is a pointer to your SAX interface.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Note the &lt;code&gt;sax_parse&lt;/code&gt; function only returns a &lt;code&gt;bool&lt;/code&gt; indicating the result of the last executed SAX event. It does not return a &lt;code&gt;json&lt;/code&gt; value - it is up to you to decide what to do with the SAX events. Furthermore, no exceptions are thrown in case of a parse error - it is up to you what to do with the exception object passed to your &lt;code&gt;parse_error&lt;/code&gt; implementation. Internally, the SAX interface is used for the DOM parser (class &lt;code&gt;json_sax_dom_parser&lt;/code&gt;) as well as the acceptor (&lt;code&gt;json_sax_acceptor&lt;/code&gt;), see file &lt;a href=&#34;https://github.com/nlohmann/json/raw/develop/include/nlohmann/detail/input/json_sax.hpp&#34;&gt;&lt;code&gt;json_sax.hpp&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;STL-like access&lt;/h3&gt; &#xA;&lt;p&gt;We designed the JSON class to behave just like an STL container. In fact, it satisfies the &lt;a href=&#34;https://en.cppreference.com/w/cpp/named_req/ReversibleContainer&#34;&gt;&lt;strong&gt;ReversibleContainer&lt;/strong&gt;&lt;/a&gt; requirement.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// create an array using push_back&#xA;json j;&#xA;j.push_back(&#34;foo&#34;);&#xA;j.push_back(1);&#xA;j.push_back(true);&#xA;&#xA;// also use emplace_back&#xA;j.emplace_back(1.78);&#xA;&#xA;// iterate the array&#xA;for (json::iterator it = j.begin(); it != j.end(); ++it) {&#xA;  std::cout &amp;lt;&amp;lt; *it &amp;lt;&amp;lt; &#39;\n&#39;;&#xA;}&#xA;&#xA;// range-based for&#xA;for (auto&amp;amp; element : j) {&#xA;  std::cout &amp;lt;&amp;lt; element &amp;lt;&amp;lt; &#39;\n&#39;;&#xA;}&#xA;&#xA;// getter/setter&#xA;const auto tmp = j[0].get&amp;lt;std::string&amp;gt;();&#xA;j[1] = 42;&#xA;bool foo = j.at(2);&#xA;&#xA;// comparison&#xA;j == R&#34;([&#34;foo&#34;, 1, true, 1.78])&#34;_json;  // true&#xA;&#xA;// other stuff&#xA;j.size();     // 4 entries&#xA;j.empty();    // false&#xA;j.type();     // json::value_t::array&#xA;j.clear();    // the array is empty again&#xA;&#xA;// convenience type checkers&#xA;j.is_null();&#xA;j.is_boolean();&#xA;j.is_number();&#xA;j.is_object();&#xA;j.is_array();&#xA;j.is_string();&#xA;&#xA;// create an object&#xA;json o;&#xA;o[&#34;foo&#34;] = 23;&#xA;o[&#34;bar&#34;] = false;&#xA;o[&#34;baz&#34;] = 3.141;&#xA;&#xA;// also use emplace&#xA;o.emplace(&#34;weather&#34;, &#34;sunny&#34;);&#xA;&#xA;// special iterator member functions for objects&#xA;for (json::iterator it = o.begin(); it != o.end(); ++it) {&#xA;  std::cout &amp;lt;&amp;lt; it.key() &amp;lt;&amp;lt; &#34; : &#34; &amp;lt;&amp;lt; it.value() &amp;lt;&amp;lt; &#34;\n&#34;;&#xA;}&#xA;&#xA;// the same code as range for&#xA;for (auto&amp;amp; el : o.items()) {&#xA;  std::cout &amp;lt;&amp;lt; el.key() &amp;lt;&amp;lt; &#34; : &#34; &amp;lt;&amp;lt; el.value() &amp;lt;&amp;lt; &#34;\n&#34;;&#xA;}&#xA;&#xA;// even easier with structured bindings (C++17)&#xA;for (auto&amp;amp; [key, value] : o.items()) {&#xA;  std::cout &amp;lt;&amp;lt; key &amp;lt;&amp;lt; &#34; : &#34; &amp;lt;&amp;lt; value &amp;lt;&amp;lt; &#34;\n&#34;;&#xA;}&#xA;&#xA;// find an entry&#xA;if (o.contains(&#34;foo&#34;)) {&#xA;  // there is an entry with key &#34;foo&#34;&#xA;}&#xA;&#xA;// or via find and an iterator&#xA;if (o.find(&#34;foo&#34;) != o.end()) {&#xA;  // there is an entry with key &#34;foo&#34;&#xA;}&#xA;&#xA;// or simpler using count()&#xA;int foo_present = o.count(&#34;foo&#34;); // 1&#xA;int fob_present = o.count(&#34;fob&#34;); // 0&#xA;&#xA;// delete an entry&#xA;o.erase(&#34;foo&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Conversion from STL containers&lt;/h3&gt; &#xA;&lt;p&gt;Any sequence container (&lt;code&gt;std::array&lt;/code&gt;, &lt;code&gt;std::vector&lt;/code&gt;, &lt;code&gt;std::deque&lt;/code&gt;, &lt;code&gt;std::forward_list&lt;/code&gt;, &lt;code&gt;std::list&lt;/code&gt;) whose values can be used to construct JSON values (e.g., integers, floating point numbers, Booleans, string types, or again STL containers described in this section) can be used to create a JSON array. The same holds for similar associative containers (&lt;code&gt;std::set&lt;/code&gt;, &lt;code&gt;std::multiset&lt;/code&gt;, &lt;code&gt;std::unordered_set&lt;/code&gt;, &lt;code&gt;std::unordered_multiset&lt;/code&gt;), but in these cases the order of the elements of the array depends on how the elements are ordered in the respective STL container.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;std::vector&amp;lt;int&amp;gt; c_vector {1, 2, 3, 4};&#xA;json j_vec(c_vector);&#xA;// [1, 2, 3, 4]&#xA;&#xA;std::deque&amp;lt;double&amp;gt; c_deque {1.2, 2.3, 3.4, 5.6};&#xA;json j_deque(c_deque);&#xA;// [1.2, 2.3, 3.4, 5.6]&#xA;&#xA;std::list&amp;lt;bool&amp;gt; c_list {true, true, false, true};&#xA;json j_list(c_list);&#xA;// [true, true, false, true]&#xA;&#xA;std::forward_list&amp;lt;int64_t&amp;gt; c_flist {12345678909876, 23456789098765, 34567890987654, 45678909876543};&#xA;json j_flist(c_flist);&#xA;// [12345678909876, 23456789098765, 34567890987654, 45678909876543]&#xA;&#xA;std::array&amp;lt;unsigned long, 4&amp;gt; c_array {{1, 2, 3, 4}};&#xA;json j_array(c_array);&#xA;// [1, 2, 3, 4]&#xA;&#xA;std::set&amp;lt;std::string&amp;gt; c_set {&#34;one&#34;, &#34;two&#34;, &#34;three&#34;, &#34;four&#34;, &#34;one&#34;};&#xA;json j_set(c_set); // only one entry for &#34;one&#34; is used&#xA;// [&#34;four&#34;, &#34;one&#34;, &#34;three&#34;, &#34;two&#34;]&#xA;&#xA;std::unordered_set&amp;lt;std::string&amp;gt; c_uset {&#34;one&#34;, &#34;two&#34;, &#34;three&#34;, &#34;four&#34;, &#34;one&#34;};&#xA;json j_uset(c_uset); // only one entry for &#34;one&#34; is used&#xA;// maybe [&#34;two&#34;, &#34;three&#34;, &#34;four&#34;, &#34;one&#34;]&#xA;&#xA;std::multiset&amp;lt;std::string&amp;gt; c_mset {&#34;one&#34;, &#34;two&#34;, &#34;one&#34;, &#34;four&#34;};&#xA;json j_mset(c_mset); // both entries for &#34;one&#34; are used&#xA;// maybe [&#34;one&#34;, &#34;two&#34;, &#34;one&#34;, &#34;four&#34;]&#xA;&#xA;std::unordered_multiset&amp;lt;std::string&amp;gt; c_umset {&#34;one&#34;, &#34;two&#34;, &#34;one&#34;, &#34;four&#34;};&#xA;json j_umset(c_umset); // both entries for &#34;one&#34; are used&#xA;// maybe [&#34;one&#34;, &#34;two&#34;, &#34;one&#34;, &#34;four&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Likewise, any associative key-value containers (&lt;code&gt;std::map&lt;/code&gt;, &lt;code&gt;std::multimap&lt;/code&gt;, &lt;code&gt;std::unordered_map&lt;/code&gt;, &lt;code&gt;std::unordered_multimap&lt;/code&gt;) whose keys can construct an &lt;code&gt;std::string&lt;/code&gt; and whose values can be used to construct JSON values (see examples above) can be used to create a JSON object. Note that in case of multimaps only one key is used in the JSON object and the value depends on the internal order of the STL container.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;std::map&amp;lt;std::string, int&amp;gt; c_map { {&#34;one&#34;, 1}, {&#34;two&#34;, 2}, {&#34;three&#34;, 3} };&#xA;json j_map(c_map);&#xA;// {&#34;one&#34;: 1, &#34;three&#34;: 3, &#34;two&#34;: 2 }&#xA;&#xA;std::unordered_map&amp;lt;const char*, double&amp;gt; c_umap { {&#34;one&#34;, 1.2}, {&#34;two&#34;, 2.3}, {&#34;three&#34;, 3.4} };&#xA;json j_umap(c_umap);&#xA;// {&#34;one&#34;: 1.2, &#34;two&#34;: 2.3, &#34;three&#34;: 3.4}&#xA;&#xA;std::multimap&amp;lt;std::string, bool&amp;gt; c_mmap { {&#34;one&#34;, true}, {&#34;two&#34;, true}, {&#34;three&#34;, false}, {&#34;three&#34;, true} };&#xA;json j_mmap(c_mmap); // only one entry for key &#34;three&#34; is used&#xA;// maybe {&#34;one&#34;: true, &#34;two&#34;: true, &#34;three&#34;: true}&#xA;&#xA;std::unordered_multimap&amp;lt;std::string, bool&amp;gt; c_ummap { {&#34;one&#34;, true}, {&#34;two&#34;, true}, {&#34;three&#34;, false}, {&#34;three&#34;, true} };&#xA;json j_ummap(c_ummap); // only one entry for key &#34;three&#34; is used&#xA;// maybe {&#34;one&#34;: true, &#34;two&#34;: true, &#34;three&#34;: true}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;JSON Pointer and JSON Patch&lt;/h3&gt; &#xA;&lt;p&gt;The library supports &lt;strong&gt;JSON Pointer&lt;/strong&gt; (&lt;a href=&#34;https://tools.ietf.org/html/rfc6901&#34;&gt;RFC 6901&lt;/a&gt;) as alternative means to address structured values. On top of this, &lt;strong&gt;JSON Patch&lt;/strong&gt; (&lt;a href=&#34;https://tools.ietf.org/html/rfc6902&#34;&gt;RFC 6902&lt;/a&gt;) allows describing differences between two JSON values - effectively allowing patch and diff operations known from Unix.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// a JSON value&#xA;json j_original = R&#34;({&#xA;  &#34;baz&#34;: [&#34;one&#34;, &#34;two&#34;, &#34;three&#34;],&#xA;  &#34;foo&#34;: &#34;bar&#34;&#xA;})&#34;_json;&#xA;&#xA;// access members with a JSON pointer (RFC 6901)&#xA;j_original[&#34;/baz/1&#34;_json_pointer];&#xA;// &#34;two&#34;&#xA;&#xA;// a JSON patch (RFC 6902)&#xA;json j_patch = R&#34;([&#xA;  { &#34;op&#34;: &#34;replace&#34;, &#34;path&#34;: &#34;/baz&#34;, &#34;value&#34;: &#34;boo&#34; },&#xA;  { &#34;op&#34;: &#34;add&#34;, &#34;path&#34;: &#34;/hello&#34;, &#34;value&#34;: [&#34;world&#34;] },&#xA;  { &#34;op&#34;: &#34;remove&#34;, &#34;path&#34;: &#34;/foo&#34;}&#xA;])&#34;_json;&#xA;&#xA;// apply the patch&#xA;json j_result = j_original.patch(j_patch);&#xA;// {&#xA;//    &#34;baz&#34;: &#34;boo&#34;,&#xA;//    &#34;hello&#34;: [&#34;world&#34;]&#xA;// }&#xA;&#xA;// calculate a JSON patch from two JSON values&#xA;json::diff(j_result, j_original);&#xA;// [&#xA;//   { &#34;op&#34;:&#34; replace&#34;, &#34;path&#34;: &#34;/baz&#34;, &#34;value&#34;: [&#34;one&#34;, &#34;two&#34;, &#34;three&#34;] },&#xA;//   { &#34;op&#34;: &#34;remove&#34;,&#34;path&#34;: &#34;/hello&#34; },&#xA;//   { &#34;op&#34;: &#34;add&#34;, &#34;path&#34;: &#34;/foo&#34;, &#34;value&#34;: &#34;bar&#34; }&#xA;// ]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;JSON Merge Patch&lt;/h3&gt; &#xA;&lt;p&gt;The library supports &lt;strong&gt;JSON Merge Patch&lt;/strong&gt; (&lt;a href=&#34;https://tools.ietf.org/html/rfc7386&#34;&gt;RFC 7386&lt;/a&gt;) as a patch format. Instead of using JSON Pointer (see above) to specify values to be manipulated, it describes the changes using a syntax that closely mimics the document being modified.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// a JSON value&#xA;json j_document = R&#34;({&#xA;  &#34;a&#34;: &#34;b&#34;,&#xA;  &#34;c&#34;: {&#xA;    &#34;d&#34;: &#34;e&#34;,&#xA;    &#34;f&#34;: &#34;g&#34;&#xA;  }&#xA;})&#34;_json;&#xA;&#xA;// a patch&#xA;json j_patch = R&#34;({&#xA;  &#34;a&#34;:&#34;z&#34;,&#xA;  &#34;c&#34;: {&#xA;    &#34;f&#34;: null&#xA;  }&#xA;})&#34;_json;&#xA;&#xA;// apply the patch&#xA;j_document.merge_patch(j_patch);&#xA;// {&#xA;//  &#34;a&#34;: &#34;z&#34;,&#xA;//  &#34;c&#34;: {&#xA;//    &#34;d&#34;: &#34;e&#34;&#xA;//  }&#xA;// }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Implicit conversions&lt;/h3&gt; &#xA;&lt;p&gt;Supported types can be implicitly converted to JSON values.&lt;/p&gt; &#xA;&lt;p&gt;It is recommended to &lt;strong&gt;NOT USE&lt;/strong&gt; implicit conversions &lt;strong&gt;FROM&lt;/strong&gt; a JSON value. You can find more details about this recommendation &lt;a href=&#34;https://www.github.com/nlohmann/json/issues/958&#34;&gt;here&lt;/a&gt;. You can switch off implicit conversions by defining &lt;code&gt;JSON_USE_IMPLICIT_CONVERSIONS&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt; before including the &lt;code&gt;json.hpp&lt;/code&gt; header. When using CMake, you can also achieve this by setting the option &lt;code&gt;JSON_ImplicitConversions&lt;/code&gt; to &lt;code&gt;OFF&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// strings&#xA;std::string s1 = &#34;Hello, world!&#34;;&#xA;json js = s1;&#xA;auto s2 = js.get&amp;lt;std::string&amp;gt;();&#xA;// NOT RECOMMENDED&#xA;std::string s3 = js;&#xA;std::string s4;&#xA;s4 = js;&#xA;&#xA;// Booleans&#xA;bool b1 = true;&#xA;json jb = b1;&#xA;auto b2 = jb.get&amp;lt;bool&amp;gt;();&#xA;// NOT RECOMMENDED&#xA;bool b3 = jb;&#xA;bool b4;&#xA;b4 = jb;&#xA;&#xA;// numbers&#xA;int i = 42;&#xA;json jn = i;&#xA;auto f = jn.get&amp;lt;double&amp;gt;();&#xA;// NOT RECOMMENDED&#xA;double f2 = jb;&#xA;double f3;&#xA;f3 = jb;&#xA;&#xA;// etc.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;char&lt;/code&gt; types are not automatically converted to JSON strings, but to integer numbers. A conversion to a string must be specified explicitly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;char ch = &#39;A&#39;;                       // ASCII value 65&#xA;json j_default = ch;                 // stores integer number 65&#xA;json j_string = std::string(1, ch);  // stores string &#34;A&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Arbitrary types conversions&lt;/h3&gt; &#xA;&lt;p&gt;Every type can be serialized in JSON, not just STL containers and scalar types. Usually, you would do something along those lines:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;namespace ns {&#xA;    // a simple struct to model a person&#xA;    struct person {&#xA;        std::string name;&#xA;        std::string address;&#xA;        int age;&#xA;    };&#xA;}&#xA;&#xA;ns::person p = {&#34;Ned Flanders&#34;, &#34;744 Evergreen Terrace&#34;, 60};&#xA;&#xA;// convert to JSON: copy each value into the JSON object&#xA;json j;&#xA;j[&#34;name&#34;] = p.name;&#xA;j[&#34;address&#34;] = p.address;&#xA;j[&#34;age&#34;] = p.age;&#xA;&#xA;// ...&#xA;&#xA;// convert from JSON: copy each value from the JSON object&#xA;ns::person p {&#xA;    j[&#34;name&#34;].get&amp;lt;std::string&amp;gt;(),&#xA;    j[&#34;address&#34;].get&amp;lt;std::string&amp;gt;(),&#xA;    j[&#34;age&#34;].get&amp;lt;int&amp;gt;()&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It works, but that&#39;s quite a lot of boilerplate... Fortunately, there&#39;s a better way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// create a person&#xA;ns::person p {&#34;Ned Flanders&#34;, &#34;744 Evergreen Terrace&#34;, 60};&#xA;&#xA;// conversion: person -&amp;gt; json&#xA;json j = p;&#xA;&#xA;std::cout &amp;lt;&amp;lt; j &amp;lt;&amp;lt; std::endl;&#xA;// {&#34;address&#34;:&#34;744 Evergreen Terrace&#34;,&#34;age&#34;:60,&#34;name&#34;:&#34;Ned Flanders&#34;}&#xA;&#xA;// conversion: json -&amp;gt; person&#xA;auto p2 = j.get&amp;lt;ns::person&amp;gt;();&#xA;&#xA;// that&#39;s it&#xA;assert(p == p2);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Basic usage&lt;/h4&gt; &#xA;&lt;p&gt;To make this work with one of your types, you only need to provide two functions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;using json = nlohmann::json;&#xA;&#xA;namespace ns {&#xA;    void to_json(json&amp;amp; j, const person&amp;amp; p) {&#xA;        j = json{{&#34;name&#34;, p.name}, {&#34;address&#34;, p.address}, {&#34;age&#34;, p.age}};&#xA;    }&#xA;&#xA;    void from_json(const json&amp;amp; j, person&amp;amp; p) {&#xA;        j.at(&#34;name&#34;).get_to(p.name);&#xA;        j.at(&#34;address&#34;).get_to(p.address);&#xA;        j.at(&#34;age&#34;).get_to(p.age);&#xA;    }&#xA;} // namespace ns&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s all! When calling the &lt;code&gt;json&lt;/code&gt; constructor with your type, your custom &lt;code&gt;to_json&lt;/code&gt; method will be automatically called. Likewise, when calling &lt;code&gt;get&amp;lt;your_type&amp;gt;()&lt;/code&gt; or &lt;code&gt;get_to(your_type&amp;amp;)&lt;/code&gt;, the &lt;code&gt;from_json&lt;/code&gt; method will be called.&lt;/p&gt; &#xA;&lt;p&gt;Some important things:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Those methods &lt;strong&gt;MUST&lt;/strong&gt; be in your type&#39;s namespace (which can be the global namespace), or the library will not be able to locate them (in this example, they are in namespace &lt;code&gt;ns&lt;/code&gt;, where &lt;code&gt;person&lt;/code&gt; is defined).&lt;/li&gt; &#xA; &lt;li&gt;Those methods &lt;strong&gt;MUST&lt;/strong&gt; be available (e.g., proper headers must be included) everywhere you use these conversions. Look at &lt;a href=&#34;https://github.com/nlohmann/json/issues/1108&#34;&gt;issue 1108&lt;/a&gt; for errors that may occur otherwise.&lt;/li&gt; &#xA; &lt;li&gt;When using &lt;code&gt;get&amp;lt;your_type&amp;gt;()&lt;/code&gt;, &lt;code&gt;your_type&lt;/code&gt; &lt;strong&gt;MUST&lt;/strong&gt; be &lt;a href=&#34;https://en.cppreference.com/w/cpp/named_req/DefaultConstructible&#34;&gt;DefaultConstructible&lt;/a&gt;. (There is a way to bypass this requirement described later.)&lt;/li&gt; &#xA; &lt;li&gt;In function &lt;code&gt;from_json&lt;/code&gt;, use function &lt;a href=&#34;https://json.nlohmann.me/api/basic_json/at/&#34;&gt;&lt;code&gt;at()&lt;/code&gt;&lt;/a&gt; to access the object values rather than &lt;code&gt;operator[]&lt;/code&gt;. In case a key does not exist, &lt;code&gt;at&lt;/code&gt; throws an exception that you can handle, whereas &lt;code&gt;operator[]&lt;/code&gt; exhibits undefined behavior.&lt;/li&gt; &#xA; &lt;li&gt;You do not need to add serializers or deserializers for STL types like &lt;code&gt;std::vector&lt;/code&gt;: the library already implements these.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Simplify your life with macros&lt;/h4&gt; &#xA;&lt;p&gt;If you just want to serialize/deserialize some structs, the &lt;code&gt;to_json&lt;/code&gt;/&lt;code&gt;from_json&lt;/code&gt; functions can be a lot of boilerplate.&lt;/p&gt; &#xA;&lt;p&gt;There are two macros to make your life easier as long as you (1) want to use a JSON object as serialization and (2) want to use the member variable names as object keys in that object:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE(name, member1, member2, ...)&lt;/code&gt; is to be defined inside the namespace of the class/struct to create code for.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NLOHMANN_DEFINE_TYPE_INTRUSIVE(name, member1, member2, ...)&lt;/code&gt; is to be defined inside the class/struct to create code for. This macro can also access private members.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In both macros, the first parameter is the name of the class/struct, and all remaining parameters name the members.&lt;/p&gt; &#xA;&lt;h5&gt;Examples&lt;/h5&gt; &#xA;&lt;p&gt;The &lt;code&gt;to_json&lt;/code&gt;/&lt;code&gt;from_json&lt;/code&gt; functions for the &lt;code&gt;person&lt;/code&gt; struct above can be created with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;namespace ns {&#xA;    NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE(person, name, address, age)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here is an example with private members, where &lt;code&gt;NLOHMANN_DEFINE_TYPE_INTRUSIVE&lt;/code&gt; is needed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;namespace ns {&#xA;    class address {&#xA;      private:&#xA;        std::string street;&#xA;        int housenumber;&#xA;        int postcode;&#xA;&#xA;      public:&#xA;        NLOHMANN_DEFINE_TYPE_INTRUSIVE(address, street, housenumber, postcode)&#xA;    };&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;How do I convert third-party types?&lt;/h4&gt; &#xA;&lt;p&gt;This requires a bit more advanced technique. But first, let&#39;s see how this conversion mechanism works:&lt;/p&gt; &#xA;&lt;p&gt;The library uses &lt;strong&gt;JSON Serializers&lt;/strong&gt; to convert types to json. The default serializer for &lt;code&gt;nlohmann::json&lt;/code&gt; is &lt;code&gt;nlohmann::adl_serializer&lt;/code&gt; (ADL means &lt;a href=&#34;https://en.cppreference.com/w/cpp/language/adl&#34;&gt;Argument-Dependent Lookup&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;It is implemented like this (simplified):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;template &amp;lt;typename T&amp;gt;&#xA;struct adl_serializer {&#xA;    static void to_json(json&amp;amp; j, const T&amp;amp; value) {&#xA;        // calls the &#34;to_json&#34; method in T&#39;s namespace&#xA;    }&#xA;&#xA;    static void from_json(const json&amp;amp; j, T&amp;amp; value) {&#xA;        // same thing, but with the &#34;from_json&#34; method&#xA;    }&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This serializer works fine when you have control over the type&#39;s namespace. However, what about &lt;code&gt;boost::optional&lt;/code&gt; or &lt;code&gt;std::filesystem::path&lt;/code&gt; (C++17)? Hijacking the &lt;code&gt;boost&lt;/code&gt; namespace is pretty bad, and it&#39;s illegal to add something other than template specializations to &lt;code&gt;std&lt;/code&gt;...&lt;/p&gt; &#xA;&lt;p&gt;To solve this, you need to add a specialization of &lt;code&gt;adl_serializer&lt;/code&gt; to the &lt;code&gt;nlohmann&lt;/code&gt; namespace, here&#39;s an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// partial specialization (full specialization works too)&#xA;namespace nlohmann {&#xA;    template &amp;lt;typename T&amp;gt;&#xA;    struct adl_serializer&amp;lt;boost::optional&amp;lt;T&amp;gt;&amp;gt; {&#xA;        static void to_json(json&amp;amp; j, const boost::optional&amp;lt;T&amp;gt;&amp;amp; opt) {&#xA;            if (opt == boost::none) {&#xA;                j = nullptr;&#xA;            } else {&#xA;              j = *opt; // this will call adl_serializer&amp;lt;T&amp;gt;::to_json which will&#xA;                        // find the free function to_json in T&#39;s namespace!&#xA;            }&#xA;        }&#xA;&#xA;        static void from_json(const json&amp;amp; j, boost::optional&amp;lt;T&amp;gt;&amp;amp; opt) {&#xA;            if (j.is_null()) {&#xA;                opt = boost::none;&#xA;            } else {&#xA;                opt = j.get&amp;lt;T&amp;gt;(); // same as above, but with&#xA;                                  // adl_serializer&amp;lt;T&amp;gt;::from_json&#xA;            }&#xA;        }&#xA;    };&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;How can I use &lt;code&gt;get()&lt;/code&gt; for non-default constructible/non-copyable types?&lt;/h4&gt; &#xA;&lt;p&gt;There is a way, if your type is &lt;a href=&#34;https://en.cppreference.com/w/cpp/named_req/MoveConstructible&#34;&gt;MoveConstructible&lt;/a&gt;. You will need to specialize the &lt;code&gt;adl_serializer&lt;/code&gt; as well, but with a special &lt;code&gt;from_json&lt;/code&gt; overload:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;struct move_only_type {&#xA;    move_only_type() = delete;&#xA;    move_only_type(int ii): i(ii) {}&#xA;    move_only_type(const move_only_type&amp;amp;) = delete;&#xA;    move_only_type(move_only_type&amp;amp;&amp;amp;) = default;&#xA;&#xA;    int i;&#xA;};&#xA;&#xA;namespace nlohmann {&#xA;    template &amp;lt;&amp;gt;&#xA;    struct adl_serializer&amp;lt;move_only_type&amp;gt; {&#xA;        // note: the return type is no longer &#39;void&#39;, and the method only takes&#xA;        // one argument&#xA;        static move_only_type from_json(const json&amp;amp; j) {&#xA;            return {j.get&amp;lt;int&amp;gt;()};&#xA;        }&#xA;&#xA;        // Here&#39;s the catch! You must provide a to_json method! Otherwise, you&#xA;        // will not be able to convert move_only_type to json, since you fully&#xA;        // specialized adl_serializer on that type&#xA;        static void to_json(json&amp;amp; j, move_only_type t) {&#xA;            j = t.i;&#xA;        }&#xA;    };&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Can I write my own serializer? (Advanced use)&lt;/h4&gt; &#xA;&lt;p&gt;Yes. You might want to take a look at &lt;a href=&#34;https://github.com/nlohmann/json/raw/develop/tests/src/unit-udt.cpp&#34;&gt;&lt;code&gt;unit-udt.cpp&lt;/code&gt;&lt;/a&gt; in the test suite, to see a few examples.&lt;/p&gt; &#xA;&lt;p&gt;If you write your own serializer, you&#39;ll need to do a few things:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;use a different &lt;code&gt;basic_json&lt;/code&gt; alias than &lt;code&gt;nlohmann::json&lt;/code&gt; (the last template parameter of &lt;code&gt;basic_json&lt;/code&gt; is the &lt;code&gt;JSONSerializer&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;use your &lt;code&gt;basic_json&lt;/code&gt; alias (or a template parameter) in all your &lt;code&gt;to_json&lt;/code&gt;/&lt;code&gt;from_json&lt;/code&gt; methods&lt;/li&gt; &#xA; &lt;li&gt;use &lt;code&gt;nlohmann::to_json&lt;/code&gt; and &lt;code&gt;nlohmann::from_json&lt;/code&gt; when you need ADL&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here is an example, without simplifications, that only accepts types with a size &amp;lt;= 32, and uses ADL.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// You should use void as a second template argument&#xA;// if you don&#39;t need compile-time checks on T&#xA;template&amp;lt;typename T, typename SFINAE = typename std::enable_if&amp;lt;sizeof(T) &amp;lt;= 32&amp;gt;::type&amp;gt;&#xA;struct less_than_32_serializer {&#xA;    template &amp;lt;typename BasicJsonType&amp;gt;&#xA;    static void to_json(BasicJsonType&amp;amp; j, T value) {&#xA;        // we want to use ADL, and call the correct to_json overload&#xA;        using nlohmann::to_json; // this method is called by adl_serializer,&#xA;                                 // this is where the magic happens&#xA;        to_json(j, value);&#xA;    }&#xA;&#xA;    template &amp;lt;typename BasicJsonType&amp;gt;&#xA;    static void from_json(const BasicJsonType&amp;amp; j, T&amp;amp; value) {&#xA;        // same thing here&#xA;        using nlohmann::from_json;&#xA;        from_json(j, value);&#xA;    }&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Be &lt;strong&gt;very&lt;/strong&gt; careful when reimplementing your serializer, you can stack overflow if you don&#39;t pay attention:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;template &amp;lt;typename T, void&amp;gt;&#xA;struct bad_serializer&#xA;{&#xA;    template &amp;lt;typename BasicJsonType&amp;gt;&#xA;    static void to_json(BasicJsonType&amp;amp; j, const T&amp;amp; value) {&#xA;      // this calls BasicJsonType::json_serializer&amp;lt;T&amp;gt;::to_json(j, value);&#xA;      // if BasicJsonType::json_serializer == bad_serializer ... oops!&#xA;      j = value;&#xA;    }&#xA;&#xA;    template &amp;lt;typename BasicJsonType&amp;gt;&#xA;    static void to_json(const BasicJsonType&amp;amp; j, T&amp;amp; value) {&#xA;      // this calls BasicJsonType::json_serializer&amp;lt;T&amp;gt;::from_json(j, value);&#xA;      // if BasicJsonType::json_serializer == bad_serializer ... oops!&#xA;      value = j.template get&amp;lt;T&amp;gt;(); // oops!&#xA;    }&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Specializing enum conversion&lt;/h3&gt; &#xA;&lt;p&gt;By default, enum values are serialized to JSON as integers. In some cases this could result in undesired behavior. If an enum is modified or re-ordered after data has been serialized to JSON, the later de-serialized JSON data may be undefined or a different enum value than was originally intended.&lt;/p&gt; &#xA;&lt;p&gt;It is possible to more precisely specify how a given enum is mapped to and from JSON as shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// example enum type declaration&#xA;enum TaskState {&#xA;    TS_STOPPED,&#xA;    TS_RUNNING,&#xA;    TS_COMPLETED,&#xA;    TS_INVALID=-1,&#xA;};&#xA;&#xA;// map TaskState values to JSON as strings&#xA;NLOHMANN_JSON_SERIALIZE_ENUM( TaskState, {&#xA;    {TS_INVALID, nullptr},&#xA;    {TS_STOPPED, &#34;stopped&#34;},&#xA;    {TS_RUNNING, &#34;running&#34;},&#xA;    {TS_COMPLETED, &#34;completed&#34;},&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;NLOHMANN_JSON_SERIALIZE_ENUM()&lt;/code&gt; macro declares a set of &lt;code&gt;to_json()&lt;/code&gt; / &lt;code&gt;from_json()&lt;/code&gt; functions for type &lt;code&gt;TaskState&lt;/code&gt; while avoiding repetition and boilerplate serialization code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// enum to JSON as string&#xA;json j = TS_STOPPED;&#xA;assert(j == &#34;stopped&#34;);&#xA;&#xA;// json string to enum&#xA;json j3 = &#34;running&#34;;&#xA;assert(j3.get&amp;lt;TaskState&amp;gt;() == TS_RUNNING);&#xA;&#xA;// undefined json value to enum (where the first map entry above is the default)&#xA;json jPi = 3.14;&#xA;assert(jPi.get&amp;lt;TaskState&amp;gt;() == TS_INVALID );&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Just as in &lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/#arbitrary-types-conversions&#34;&gt;Arbitrary Type Conversions&lt;/a&gt; above,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;NLOHMANN_JSON_SERIALIZE_ENUM()&lt;/code&gt; MUST be declared in your enum type&#39;s namespace (which can be the global namespace), or the library will not be able to locate it, and it will default to integer serialization.&lt;/li&gt; &#xA; &lt;li&gt;It MUST be available (e.g., proper headers must be included) everywhere you use the conversions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Other Important points:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When using &lt;code&gt;get&amp;lt;ENUM_TYPE&amp;gt;()&lt;/code&gt;, undefined JSON values will default to the first pair specified in your map. Select this default pair carefully.&lt;/li&gt; &#xA; &lt;li&gt;If an enum or JSON value is specified more than once in your map, the first matching occurrence from the top of the map will be returned when converting to or from JSON.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Binary formats (BSON, CBOR, MessagePack, UBJSON, and BJData)&lt;/h3&gt; &#xA;&lt;p&gt;Though JSON is a ubiquitous data format, it is not a very compact format suitable for data exchange, for instance over a network. Hence, the library supports &lt;a href=&#34;https://bsonspec.org&#34;&gt;BSON&lt;/a&gt; (Binary JSON), &lt;a href=&#34;https://cbor.io&#34;&gt;CBOR&lt;/a&gt; (Concise Binary Object Representation), &lt;a href=&#34;https://msgpack.org&#34;&gt;MessagePack&lt;/a&gt;, &lt;a href=&#34;https://ubjson.org&#34;&gt;UBJSON&lt;/a&gt; (Universal Binary JSON Specification) and &lt;a href=&#34;https://neurojson.org/bjdata&#34;&gt;BJData&lt;/a&gt; (Binary JData) to efficiently encode JSON values to byte vectors and to decode such vectors.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// create a JSON value&#xA;json j = R&#34;({&#34;compact&#34;: true, &#34;schema&#34;: 0})&#34;_json;&#xA;&#xA;// serialize to BSON&#xA;std::vector&amp;lt;std::uint8_t&amp;gt; v_bson = json::to_bson(j);&#xA;&#xA;// 0x1B, 0x00, 0x00, 0x00, 0x08, 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x63, 0x74, 0x00, 0x01, 0x10, 0x73, 0x63, 0x68, 0x65, 0x6D, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00&#xA;&#xA;// roundtrip&#xA;json j_from_bson = json::from_bson(v_bson);&#xA;&#xA;// serialize to CBOR&#xA;std::vector&amp;lt;std::uint8_t&amp;gt; v_cbor = json::to_cbor(j);&#xA;&#xA;// 0xA2, 0x67, 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x63, 0x74, 0xF5, 0x66, 0x73, 0x63, 0x68, 0x65, 0x6D, 0x61, 0x00&#xA;&#xA;// roundtrip&#xA;json j_from_cbor = json::from_cbor(v_cbor);&#xA;&#xA;// serialize to MessagePack&#xA;std::vector&amp;lt;std::uint8_t&amp;gt; v_msgpack = json::to_msgpack(j);&#xA;&#xA;// 0x82, 0xA7, 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x63, 0x74, 0xC3, 0xA6, 0x73, 0x63, 0x68, 0x65, 0x6D, 0x61, 0x00&#xA;&#xA;// roundtrip&#xA;json j_from_msgpack = json::from_msgpack(v_msgpack);&#xA;&#xA;// serialize to UBJSON&#xA;std::vector&amp;lt;std::uint8_t&amp;gt; v_ubjson = json::to_ubjson(j);&#xA;&#xA;// 0x7B, 0x69, 0x07, 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x63, 0x74, 0x54, 0x69, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6D, 0x61, 0x69, 0x00, 0x7D&#xA;&#xA;// roundtrip&#xA;json j_from_ubjson = json::from_ubjson(v_ubjson);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The library also supports binary types from BSON, CBOR (byte strings), and MessagePack (bin, ext, fixext). They are stored by default as &lt;code&gt;std::vector&amp;lt;std::uint8_t&amp;gt;&lt;/code&gt; to be processed outside the library.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// CBOR byte string with payload 0xCAFE&#xA;std::vector&amp;lt;std::uint8_t&amp;gt; v = {0x42, 0xCA, 0xFE};&#xA;&#xA;// read value&#xA;json j = json::from_cbor(v);&#xA;&#xA;// the JSON value has type binary&#xA;j.is_binary(); // true&#xA;&#xA;// get reference to stored binary value&#xA;auto&amp;amp; binary = j.get_binary();&#xA;&#xA;// the binary value has no subtype (CBOR has no binary subtypes)&#xA;binary.has_subtype(); // false&#xA;&#xA;// access std::vector&amp;lt;std::uint8_t&amp;gt; member functions&#xA;binary.size(); // 2&#xA;binary[0]; // 0xCA&#xA;binary[1]; // 0xFE&#xA;&#xA;// set subtype to 0x10&#xA;binary.set_subtype(0x10);&#xA;&#xA;// serialize to MessagePack&#xA;auto cbor = json::to_msgpack(j); // 0xD5 (fixext2), 0x10, 0xCA, 0xFE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Supported compilers&lt;/h2&gt; &#xA;&lt;p&gt;Though it&#39;s 2022 already, the support for C++11 is still a bit sparse. Currently, the following compilers are known to work:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GCC 4.8 - 12.0 (and possibly later)&lt;/li&gt; &#xA; &lt;li&gt;Clang 3.4 - 15.0 (and possibly later)&lt;/li&gt; &#xA; &lt;li&gt;Apple Clang 9.1 - 13.1 (and possibly later)&lt;/li&gt; &#xA; &lt;li&gt;Intel C++ Compiler 17.0.2 (and possibly later)&lt;/li&gt; &#xA; &lt;li&gt;Nvidia CUDA Compiler 11.0.221 (and possibly later)&lt;/li&gt; &#xA; &lt;li&gt;Microsoft Visual C++ 2015 / Build Tools 14.0.25123.0 (and possibly later)&lt;/li&gt; &#xA; &lt;li&gt;Microsoft Visual C++ 2017 / Build Tools 15.5.180.51428 (and possibly later)&lt;/li&gt; &#xA; &lt;li&gt;Microsoft Visual C++ 2019 / Build Tools 16.3.1+1def00d3d (and possibly later)&lt;/li&gt; &#xA; &lt;li&gt;Microsoft Visual C++ 2022 / Build Tools 19.30.30709.0 (and possibly later)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;I would be happy to learn about other compilers/versions.&lt;/p&gt; &#xA;&lt;p&gt;Please note:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;GCC 4.8 has a bug &lt;a href=&#34;https://gcc.gnu.org/bugzilla/show_bug.cgi?id=57824&#34;&gt;57824&lt;/a&gt;): multiline raw strings cannot be the arguments to macros. Don&#39;t use multiline raw strings directly in macros with this compiler.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Android defaults to using very old compilers and C++ libraries. To fix this, add the following to your &lt;code&gt;Application.mk&lt;/code&gt;. This will switch to the LLVM C++ library, the Clang compiler, and enable C++11 and other features disabled by default.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;APP_STL := c++_shared&#xA;NDK_TOOLCHAIN_VERSION := clang3.6&#xA;APP_CPPFLAGS += -frtti -fexceptions&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The code compiles successfully with &lt;a href=&#34;https://developer.android.com/ndk/index.html?hl=ml&#34;&gt;Android NDK&lt;/a&gt;, Revision 9 - 11 (and possibly later) and &lt;a href=&#34;https://www.crystax.net/en/android/ndk&#34;&gt;CrystaX&#39;s Android NDK&lt;/a&gt; version 10.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For GCC running on MinGW or Android SDK, the error &lt;code&gt;&#39;to_string&#39; is not a member of &#39;std&#39;&lt;/code&gt; (or similarly, for &lt;code&gt;strtod&lt;/code&gt; or &lt;code&gt;strtof&lt;/code&gt;) may occur. Note this is not an issue with the code, but rather with the compiler itself. On Android, see above to build with a newer environment. For MinGW, please refer to &lt;a href=&#34;https://tehsausage.com/mingw-to-string&#34;&gt;this site&lt;/a&gt; and &lt;a href=&#34;https://github.com/nlohmann/json/issues/136&#34;&gt;this discussion&lt;/a&gt; for information on how to fix this bug. For Android NDK using &lt;code&gt;APP_STL := gnustl_static&lt;/code&gt;, please refer to &lt;a href=&#34;https://github.com/nlohmann/json/issues/219&#34;&gt;this discussion&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Unsupported versions of GCC and Clang are rejected by &lt;code&gt;#error&lt;/code&gt; directives. This can be switched off by defining &lt;code&gt;JSON_SKIP_UNSUPPORTED_COMPILER_CHECK&lt;/code&gt;. Note that you can expect no support in this case.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following compilers are currently used in continuous integration at &lt;a href=&#34;https://ci.appveyor.com/project/nlohmann/json&#34;&gt;AppVeyor&lt;/a&gt;, &lt;a href=&#34;https://cloud.drone.io/nlohmann/json&#34;&gt;Drone CI&lt;/a&gt;, and &lt;a href=&#34;https://github.com/nlohmann/json/actions&#34;&gt;GitHub Actions&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Compiler&lt;/th&gt; &#xA;   &lt;th&gt;Operating System&lt;/th&gt; &#xA;   &lt;th&gt;CI Provider&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Apple Clang 10.0.1 (clang-1001.0.46.4); Xcode 10.3&lt;/td&gt; &#xA;   &lt;td&gt;macOS 10.15.7&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Apple Clang 11.0.0 (clang-1100.0.33.12); Xcode 11.2.1&lt;/td&gt; &#xA;   &lt;td&gt;macOS 10.15.7&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Apple Clang 11.0.0 (clang-1100.0.33.17); Xcode 11.3.1&lt;/td&gt; &#xA;   &lt;td&gt;macOS 10.15.7&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Apple Clang 11.0.3 (clang-1103.0.32.59); Xcode 11.4.1&lt;/td&gt; &#xA;   &lt;td&gt;macOS 10.15.7&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Apple Clang 11.0.3 (clang-1103.0.32.62); Xcode 11.5&lt;/td&gt; &#xA;   &lt;td&gt;macOS 10.15.7&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Apple Clang 11.0.3 (clang-1103.0.32.62); Xcode 11.6&lt;/td&gt; &#xA;   &lt;td&gt;macOS 10.15.7&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Apple Clang 11.0.3 (clang-1103.0.32.62); Xcode 11.7&lt;/td&gt; &#xA;   &lt;td&gt;macOS 10.15.7&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Apple Clang 12.0.0 (clang-1200.0.32.2); Xcode 12&lt;/td&gt; &#xA;   &lt;td&gt;macOS 10.15.7&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Apple Clang 12.0.0 (clang-1200.0.32.21); Xcode 12.1&lt;/td&gt; &#xA;   &lt;td&gt;macOS 10.15.7&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Apple Clang 12.0.0 (clang-1200.0.32.21); Xcode 12.1.1&lt;/td&gt; &#xA;   &lt;td&gt;macOS 10.15.7&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Apple Clang 12.0.0 (clang-1200.0.32.27); Xcode 12.2&lt;/td&gt; &#xA;   &lt;td&gt;macOS 10.15.7&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Apple Clang 12.0.0 (clang-1200.0.32.28); Xcode 12.3&lt;/td&gt; &#xA;   &lt;td&gt;macOS 10.15.7&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Apple Clang 12.0.0 (clang-1200.0.32.29); Xcode 12.4&lt;/td&gt; &#xA;   &lt;td&gt;macOS 10.15.7&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clang 3.5.2 (3.5.2-3ubuntu1)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clang 3.6.2 (3.6.2-3ubuntu2)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clang 3.7.1 (3.7.1-2ubuntu2)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clang 3.8.0 (3.8.0-2ubuntu4)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clang 3.9.1 (3.9.1-4ubuntu3~16.04.2)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clang 4.0.0 (4.0.0-1ubuntu1~16.04.2)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clang 5.0.0 (5.0.0-3~16.04.1)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clang 6.0.1 (6.0.1-14)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clang 7.0.1 (7.0.1-12)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clang 8.0.1 (8.0.1-9)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clang 9.0.1 (9.0.1-12)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clang 10.0.0 (10.0.0-4ubuntu1)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clang 10.0.0 with GNU-like command-line&lt;/td&gt; &#xA;   &lt;td&gt;Windows-10.0.17763&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clang 11.0.0 with GNU-like command-line&lt;/td&gt; &#xA;   &lt;td&gt;Windows-10.0.17763&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clang 11.0.0 with MSVC-like command-line&lt;/td&gt; &#xA;   &lt;td&gt;Windows-10.0.17763&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clang 11.0.0 (11.0.0-2~ubuntu20.04.1)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clang 12.0.0 (12.0.0-3ubuntu1~20.04.3)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clang 13.0.1 (13.0.1-++20211015123032+cf15ccdeb6d5-1exp120211015003613.5)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clang 14.0.0 (14.0.0-++20211221052852+55c71c9eac9b-1exp120211221172954.95)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clang 15.0.0 (15.0.0-++20220403052648+896770c9a92e-1&lt;del&gt;exp1&lt;/del&gt;20220403172744.209)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GCC 4.8.5 (Ubuntu 4.8.5-4ubuntu2)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GCC 4.9.3 (Ubuntu 4.9.3-13ubuntu2)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GCC 5.4.0 (Ubuntu 5.4.0-6ubuntu1~16.04.12)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GCC 6.4.0 (Ubuntu 6.4.0-17ubuntu1)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GCC 7.5.0 (Ubuntu 7.5.0-6ubuntu2)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GCC 8.1.0 (i686-posix-dwarf-rev0, Built by MinGW-W64 project)&lt;/td&gt; &#xA;   &lt;td&gt;Windows-10.0.17763&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GCC 8.1.0 (x86_64-posix-seh-rev0, Built by MinGW-W64 project)&lt;/td&gt; &#xA;   &lt;td&gt;Windows-10.0.17763&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GCC 8.4.0 (Ubuntu 8.4.0-3ubuntu2)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GCC 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GCC 10.2.0 (Ubuntu 10.2.0-5ubuntu1~20.04)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GCC 11.1.0&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu (aarch64)&lt;/td&gt; &#xA;   &lt;td&gt;Drone CI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GCC 12.0.0 20211219 (experimental)&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Intel C++ Compiler 2021.5.0.20211109&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NVCC 11.0.221&lt;/td&gt; &#xA;   &lt;td&gt;Ubuntu 20.04.3 LTS&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Visual Studio 14 2015 MSVC 19.0.24241.7 (Build Engine version 14.0.25420.1)&lt;/td&gt; &#xA;   &lt;td&gt;Windows-6.3.9600&lt;/td&gt; &#xA;   &lt;td&gt;AppVeyor&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Visual Studio 15 2017 MSVC 19.16.27035.0 (Build Engine version 15.9.21+g9802d43bc3 for .NET Framework)&lt;/td&gt; &#xA;   &lt;td&gt;Windows-10.0.14393&lt;/td&gt; &#xA;   &lt;td&gt;AppVeyor&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Visual Studio 16 2019 MSVC 19.28.29912.0 (Build Engine version 16.9.0+57a23d249 for .NET Framework)&lt;/td&gt; &#xA;   &lt;td&gt;Windows-10.0.17763&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Visual Studio 16 2019 MSVC 19.28.29912.0 (Build Engine version 16.9.0+57a23d249 for .NET Framework)&lt;/td&gt; &#xA;   &lt;td&gt;Windows-10.0.17763&lt;/td&gt; &#xA;   &lt;td&gt;AppVeyor&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Visual Studio 17 2022 MSVC 19.30.30709.0 (Build Engine version 17.0.31804.368 for .NET Framework)&lt;/td&gt; &#xA;   &lt;td&gt;Windows-10.0.20348&lt;/td&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Integration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nlohmann/json/raw/develop/single_include/nlohmann/json.hpp&#34;&gt;&lt;code&gt;json.hpp&lt;/code&gt;&lt;/a&gt; is the single required file in &lt;code&gt;single_include/nlohmann&lt;/code&gt; or &lt;a href=&#34;https://github.com/nlohmann/json/releases&#34;&gt;released here&lt;/a&gt;. You need to add&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;nlohmann/json.hpp&amp;gt;&#xA;&#xA;// for convenience&#xA;using json = nlohmann::json;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to the files you want to process JSON and set the necessary switches to enable C++11 (e.g., &lt;code&gt;-std=c++11&lt;/code&gt; for GCC and Clang).&lt;/p&gt; &#xA;&lt;p&gt;You can further use file &lt;a href=&#34;https://github.com/nlohmann/json/raw/develop/include/nlohmann/json_fwd.hpp&#34;&gt;&lt;code&gt;include/nlohmann/json_fwd.hpp&lt;/code&gt;&lt;/a&gt; for forward-declarations. The installation of json_fwd.hpp (as part of cmake&#39;s install step), can be achieved by setting &lt;code&gt;-DJSON_MultipleHeaders=ON&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;CMake&lt;/h3&gt; &#xA;&lt;p&gt;You can also use the &lt;code&gt;nlohmann_json::nlohmann_json&lt;/code&gt; interface target in CMake. This target populates the appropriate usage requirements for &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; to point to the appropriate include directories and &lt;code&gt;INTERFACE_COMPILE_FEATURES&lt;/code&gt; for the necessary C++11 flags.&lt;/p&gt; &#xA;&lt;h4&gt;External&lt;/h4&gt; &#xA;&lt;p&gt;To use this library from a CMake project, you can locate it directly with &lt;code&gt;find_package()&lt;/code&gt; and use the namespaced imported target from the generated package configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;# CMakeLists.txt&#xA;find_package(nlohmann_json 3.2.0 REQUIRED)&#xA;...&#xA;add_library(foo ...)&#xA;...&#xA;target_link_libraries(foo PRIVATE nlohmann_json::nlohmann_json)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The package configuration file, &lt;code&gt;nlohmann_jsonConfig.cmake&lt;/code&gt;, can be used either from an install tree or directly out of the build tree.&lt;/p&gt; &#xA;&lt;h4&gt;Embedded&lt;/h4&gt; &#xA;&lt;p&gt;To embed the library directly into an existing CMake project, place the entire source tree in a subdirectory and call &lt;code&gt;add_subdirectory()&lt;/code&gt; in your &lt;code&gt;CMakeLists.txt&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;# Typically you don&#39;t care so much for a third party library&#39;s tests to be&#xA;# run from your own project&#39;s code.&#xA;set(JSON_BuildTests OFF CACHE INTERNAL &#34;&#34;)&#xA;&#xA;# If you only include this third party in PRIVATE source files, you do not&#xA;# need to install it when your main project gets installed.&#xA;# set(JSON_Install OFF CACHE INTERNAL &#34;&#34;)&#xA;&#xA;# Don&#39;t use include(nlohmann_json/CMakeLists.txt) since that carries with it&#xA;# unintended consequences that will break the build.  It&#39;s generally&#xA;# discouraged (although not necessarily well documented as such) to use&#xA;# include(...) for pulling in other CMake projects anyways.&#xA;add_subdirectory(nlohmann_json)&#xA;...&#xA;add_library(foo ...)&#xA;...&#xA;target_link_libraries(foo PRIVATE nlohmann_json::nlohmann_json)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Embedded (FetchContent)&lt;/h5&gt; &#xA;&lt;p&gt;Since CMake v3.11, &lt;a href=&#34;https://cmake.org/cmake/help/v3.11/module/FetchContent.html&#34;&gt;FetchContent&lt;/a&gt; can be used to automatically download a release as a dependency at configure time.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;include(FetchContent)&#xA;&#xA;FetchContent_Declare(json URL https://github.com/nlohmann/json/releases/download/v3.10.5/json.tar.xz)&#xA;FetchContent_MakeAvailable(json)&#xA;&#xA;target_link_libraries(foo PRIVATE nlohmann_json::nlohmann_json)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: It is recommended to use the URL approach described above which is supported as of version 3.10.0. See &lt;a href=&#34;https://json.nlohmann.me/integration/cmake/#fetchcontent&#34;&gt;https://json.nlohmann.me/integration/cmake/#fetchcontent&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h4&gt;Supporting Both&lt;/h4&gt; &#xA;&lt;p&gt;To allow your project to support either an externally supplied or an embedded JSON library, you can use a pattern akin to the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;# Top level CMakeLists.txt&#xA;project(FOO)&#xA;...&#xA;option(FOO_USE_EXTERNAL_JSON &#34;Use an external JSON library&#34; OFF)&#xA;...&#xA;add_subdirectory(thirdparty)&#xA;...&#xA;add_library(foo ...)&#xA;...&#xA;# Note that the namespaced target will always be available regardless of the&#xA;# import method&#xA;target_link_libraries(foo PRIVATE nlohmann_json::nlohmann_json)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;# thirdparty/CMakeLists.txt&#xA;...&#xA;if(FOO_USE_EXTERNAL_JSON)&#xA;  find_package(nlohmann_json 3.2.0 REQUIRED)&#xA;else()&#xA;  set(JSON_BuildTests OFF CACHE INTERNAL &#34;&#34;)&#xA;  add_subdirectory(nlohmann_json)&#xA;endif()&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;thirdparty/nlohmann_json&lt;/code&gt; is then a complete copy of this source tree.&lt;/p&gt; &#xA;&lt;h3&gt;Package Managers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;span&gt;🍺&lt;/span&gt; If you are using OS X and &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;, just type &lt;code&gt;brew install nlohmann-json&lt;/code&gt; and you&#39;re set. If you want the bleeding edge rather than the latest release, use &lt;code&gt;brew install nlohmann-json --HEAD&lt;/code&gt;. See &lt;a href=&#34;https://formulae.brew.sh/formula/nlohmann-json&#34;&gt;nlohmann-json&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;If you are using the &lt;a href=&#34;https://mesonbuild.com&#34;&gt;Meson Build System&lt;/a&gt;, add this source tree as a &lt;a href=&#34;https://mesonbuild.com/Subprojects.html#using-a-subproject&#34;&gt;meson subproject&lt;/a&gt;. You may also use the &lt;code&gt;include.zip&lt;/code&gt; published in this project&#39;s &lt;a href=&#34;https://github.com/nlohmann/json/releases&#34;&gt;Releases&lt;/a&gt; to reduce the size of the vendored source tree. Alternatively, you can get a wrap file by downloading it from &lt;a href=&#34;https://wrapdb.mesonbuild.com/nlohmann_json&#34;&gt;Meson WrapDB&lt;/a&gt;, or simply use &lt;code&gt;meson wrap install nlohmann_json&lt;/code&gt;. Please see the meson project for any issues regarding the packaging.&lt;/p&gt; &#xA;&lt;p&gt;The provided &lt;code&gt;meson.build&lt;/code&gt; can also be used as an alternative to cmake for installing &lt;code&gt;nlohmann_json&lt;/code&gt; system-wide in which case a pkg-config file is installed. To use it, simply have your build system require the &lt;code&gt;nlohmann_json&lt;/code&gt; pkg-config dependency. In Meson, it is preferred to use the &lt;a href=&#34;https://mesonbuild.com/Reference-manual.html#dependency&#34;&gt;&lt;code&gt;dependency()&lt;/code&gt;&lt;/a&gt; object with a subproject fallback, rather than using the subproject directly.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;a href=&#34;https://www.conan.io/&#34;&gt;Conan&lt;/a&gt; to manage your dependencies, merely add &lt;a href=&#34;https://conan.io/center/nlohmann_json&#34;&gt;&lt;code&gt;nlohmann_json/x.y.z&lt;/code&gt;&lt;/a&gt; to your &lt;code&gt;conanfile&lt;/code&gt;&#39;s requires, where &lt;code&gt;x.y.z&lt;/code&gt; is the release version you want to use. Please file issues &lt;a href=&#34;https://github.com/conan-io/conan-center-index/issues&#34;&gt;here&lt;/a&gt; if you experience problems with the packages.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;a href=&#34;https://www.spack.io/&#34;&gt;Spack&lt;/a&gt; to manage your dependencies, you can use the &lt;a href=&#34;https://spack.readthedocs.io/en/latest/package_list.html#nlohmann-json&#34;&gt;&lt;code&gt;nlohmann-json&lt;/code&gt; package&lt;/a&gt;. Please see the &lt;a href=&#34;https://github.com/spack/spack&#34;&gt;spack project&lt;/a&gt; for any issues regarding the packaging.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;a href=&#34;https://github.com/cpp-pm/hunter&#34;&gt;hunter&lt;/a&gt; on your project for external dependencies, then you can use the &lt;a href=&#34;https://hunter.readthedocs.io/en/latest/packages/pkg/nlohmann_json.html&#34;&gt;nlohmann_json package&lt;/a&gt;. Please see the hunter project for any issues regarding the packaging.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;a href=&#34;https://buckaroo.pm&#34;&gt;Buckaroo&lt;/a&gt;, you can install this library&#39;s module with &lt;code&gt;buckaroo add github.com/buckaroo-pm/nlohmann-json&lt;/code&gt;. Please file issues &lt;a href=&#34;https://github.com/buckaroo-pm/nlohmann-json&#34;&gt;here&lt;/a&gt;. There is a demo repo &lt;a href=&#34;https://github.com/njlr/buckaroo-nholmann-json-example&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;a href=&#34;https://github.com/Microsoft/vcpkg/&#34;&gt;vcpkg&lt;/a&gt; on your project for external dependencies, then you can install the &lt;a href=&#34;https://github.com/Microsoft/vcpkg/tree/master/ports/nlohmann-json&#34;&gt;nlohmann-json package&lt;/a&gt; with &lt;code&gt;vcpkg install nlohmann-json&lt;/code&gt; and follow the then displayed descriptions. Please see the vcpkg project for any issues regarding the packaging.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;a href=&#34;https://cget.readthedocs.io/en/latest/&#34;&gt;cget&lt;/a&gt;, you can install the latest development version with &lt;code&gt;cget install nlohmann/json&lt;/code&gt;. A specific version can be installed with &lt;code&gt;cget install nlohmann/json@v3.1.0&lt;/code&gt;. Also, the multiple header version can be installed by adding the &lt;code&gt;-DJSON_MultipleHeaders=ON&lt;/code&gt; flag (i.e., &lt;code&gt;cget install nlohmann/json -DJSON_MultipleHeaders=ON&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;a href=&#34;https://cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt;, you can use the library by adding pod &lt;code&gt;&#34;nlohmann_json&#34;, &#39;~&amp;gt;3.1.2&#39;&lt;/code&gt; to your podfile (see &lt;a href=&#34;https://bitbucket.org/benman/nlohmann_json-cocoapod/src/master/&#34;&gt;an example&lt;/a&gt;). Please file issues &lt;a href=&#34;https://bitbucket.org/benman/nlohmann_json-cocoapod/issues?status=new&amp;amp;status=open&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;a href=&#34;https://www.nuget.org&#34;&gt;NuGet&lt;/a&gt;, you can use the package &lt;a href=&#34;https://www.nuget.org/packages/nlohmann.json/&#34;&gt;nlohmann.json&lt;/a&gt;. Please check &lt;a href=&#34;https://github.com/nlohmann/json/issues/1132#issuecomment-452250255&#34;&gt;this extensive description&lt;/a&gt; on how to use the package. Please file issues &lt;a href=&#34;https://github.com/hnkb/nlohmann-json-nuget/issues&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;a href=&#34;https://conda.io/&#34;&gt;conda&lt;/a&gt;, you can use the package &lt;a href=&#34;https://github.com/conda-forge/nlohmann_json-feedstock&#34;&gt;nlohmann_json&lt;/a&gt; from &lt;a href=&#34;https://conda-forge.org&#34;&gt;conda-forge&lt;/a&gt; executing &lt;code&gt;conda install -c conda-forge nlohmann_json&lt;/code&gt;. Please file issues &lt;a href=&#34;https://github.com/conda-forge/nlohmann_json-feedstock/issues&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;a href=&#34;https://www.msys2.org/&#34;&gt;MSYS2&lt;/a&gt;, you can use the &lt;a href=&#34;https://packages.msys2.org/base/mingw-w64-nlohmann-json&#34;&gt;mingw-w64-nlohmann-json&lt;/a&gt; package, just type &lt;code&gt;pacman -S mingw-w64-i686-nlohmann-json&lt;/code&gt; or &lt;code&gt;pacman -S mingw-w64-x86_64-nlohmann-json&lt;/code&gt; for installation. Please file issues &lt;a href=&#34;https://github.com/msys2/MINGW-packages/issues/new?title=%5Bnlohmann-json%5D&#34;&gt;here&lt;/a&gt; if you experience problems with the packages.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;a href=&#34;https://ports.macports.org&#34;&gt;MacPorts&lt;/a&gt;, execute &lt;code&gt;sudo port install nlohmann-json&lt;/code&gt; to install the &lt;a href=&#34;https://ports.macports.org/port/nlohmann-json/&#34;&gt;nlohmann-json&lt;/a&gt; package.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;a href=&#34;https://build2.org&#34;&gt;&lt;code&gt;build2&lt;/code&gt;&lt;/a&gt;, you can use the &lt;a href=&#34;https://cppget.org/nlohmann-json&#34;&gt;&lt;code&gt;nlohmann-json&lt;/code&gt;&lt;/a&gt; package from the public repository &lt;a href=&#34;https://cppget.org&#34;&gt;https://cppget.org&lt;/a&gt; or directly from the &lt;a href=&#34;https://github.com/build2-packaging/nlohmann-json&#34;&gt;package&#39;s sources repository&lt;/a&gt;. In your project&#39;s &lt;code&gt;manifest&lt;/code&gt; file, just add &lt;code&gt;depends: nlohmann-json&lt;/code&gt; (probably with some &lt;a href=&#34;https://build2.org/build2-toolchain/doc/build2-toolchain-intro.xhtml#guide-add-remove-deps&#34;&gt;version constraints&lt;/a&gt;). If you are not familiar with using dependencies in &lt;code&gt;build2&lt;/code&gt;, &lt;a href=&#34;https://build2.org/build2-toolchain/doc/build2-toolchain-intro.xhtml&#34;&gt;please read this introduction&lt;/a&gt;. Please file issues &lt;a href=&#34;https://github.com/build2-packaging/nlohmann-json&#34;&gt;here&lt;/a&gt; if you experience problems with the packages.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;a href=&#34;https://wsjcpp.org&#34;&gt;&lt;code&gt;wsjcpp&lt;/code&gt;&lt;/a&gt;, you can use the command &lt;code&gt;wsjcpp install &#34;https://github.com/nlohmann/json:develop&#34;&lt;/code&gt; to get the latest version. Note you can change the branch &#34;:develop&#34; to an existing tag or another branch.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;a href=&#34;https://github.com/TheLartians/CPM.cmake&#34;&gt;&lt;code&gt;CPM.cmake&lt;/code&gt;&lt;/a&gt;, you can check this &lt;a href=&#34;https://github.com/TheLartians/CPM.cmake/tree/master/examples/json&#34;&gt;&lt;code&gt;example&lt;/code&gt;&lt;/a&gt;. After &lt;a href=&#34;https://github.com/TheLartians/CPM.cmake#adding-cpm&#34;&gt;adding CPM script&lt;/a&gt; to your project, implement the following snippet to your CMake:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;CPMAddPackage(&#xA;    NAME nlohmann_json&#xA;    GITHUB_REPOSITORY nlohmann/json&#xA;    VERSION 3.9.1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Pkg-config&lt;/h3&gt; &#xA;&lt;p&gt;If you are using bare Makefiles, you can use &lt;code&gt;pkg-config&lt;/code&gt; to generate the include flags that point to where the library is installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pkg-config nlohmann_json --cflags&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Users of the Meson build system will also be able to use a system-wide library, which will be found by &lt;code&gt;pkg-config&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-meson&#34;&gt;json = dependency(&#39;nlohmann_json&#39;, required: true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;img align=&#34;right&#34; src=&#34;https://opensource.org/trademarks/opensource/OSI-Approved-License-100x137.png&#34;&gt; &#xA;&lt;p&gt;The class is licensed under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;Copyright © 2013-2022 &lt;a href=&#34;https://nlohmann.me&#34;&gt;Niels Lohmann&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;The class contains the UTF-8 Decoder from Bjoern Hoehrmann which is licensed under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt; (see above). Copyright © 2008-2009 &lt;a href=&#34;https://bjoern.hoehrmann.de/&#34;&gt;Björn Hoehrmann&lt;/a&gt; &lt;a href=&#34;mailto:bjoern@hoehrmann.de&#34;&gt;bjoern@hoehrmann.de&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The class contains a slightly modified version of the Grisu2 algorithm from Florian Loitsch which is licensed under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt; (see above). Copyright © 2009 &lt;a href=&#34;https://florian.loitsch.com/&#34;&gt;Florian Loitsch&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The class contains a copy of &lt;a href=&#34;https://nemequ.github.io/hedley/&#34;&gt;Hedley&lt;/a&gt; from Evan Nemerson which is licensed as &lt;a href=&#34;https://creativecommons.org/publicdomain/zero/1.0/&#34;&gt;CC0-1.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The class contains parts of &lt;a href=&#34;https://github.com/abseil/abseil-cpp&#34;&gt;Google Abseil&lt;/a&gt; which is licensed under the &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;If you have questions regarding the library, I would like to invite you to &lt;a href=&#34;https://github.com/nlohmann/json/issues/new/choose&#34;&gt;open an issue at GitHub&lt;/a&gt;. Please describe your request, problem, or question as detailed as possible, and also mention the version of the library you are using as well as the version of your compiler and operating system. Opening an issue at GitHub allows other users and contributors to this library to collaborate. For instance, I have little experience with MSVC, and most issues in this regard have been solved by a growing community. If you have a look at the &lt;a href=&#34;https://github.com/nlohmann/json/issues?q=is%3Aissue+is%3Aclosed&#34;&gt;closed issues&lt;/a&gt;, you will see that we react quite timely in most cases.&lt;/p&gt; &#xA;&lt;p&gt;Only if your request would contain confidential information, please &lt;a href=&#34;mailto:mail@nlohmann.me&#34;&gt;send me an email&lt;/a&gt;. For encrypted messages, please use &lt;a href=&#34;https://keybase.io/nlohmann/pgp_keys.asc&#34;&gt;this key&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nlohmann/json/commits&#34;&gt;Commits by Niels Lohmann&lt;/a&gt; and &lt;a href=&#34;https://github.com/nlohmann/json/releases&#34;&gt;releases&lt;/a&gt; are signed with this &lt;a href=&#34;https://keybase.io/nlohmann/pgp_keys.asc?fingerprint=797167ae41c0a6d9232e48457f3cea63ae251b69&#34;&gt;PGP Key&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;I deeply appreciate the help of the following people.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/docs/avatars.png&#34; align=&#34;right&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Teemperor&#34;&gt;Teemperor&lt;/a&gt; implemented CMake support and lcov integration, realized escape and Unicode handling in the string parser, and fixed the JSON serialization.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/elliotgoodrich&#34;&gt;elliotgoodrich&lt;/a&gt; fixed an issue with double deletion in the iterator classes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kirkshoop&#34;&gt;kirkshoop&lt;/a&gt; made the iterators of the class composable to other libraries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wanwc&#34;&gt;wancw&lt;/a&gt; fixed a bug that hindered the class to compile with Clang.&lt;/li&gt; &#xA; &lt;li&gt;Tomas Åblad found a bug in the iterator implementation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jrandall&#34;&gt;Joshua C. Randall&lt;/a&gt; fixed a bug in the floating-point serialization.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aburgh&#34;&gt;Aaron Burghardt&lt;/a&gt; implemented code to parse streams incrementally. Furthermore, he greatly improved the parser class by allowing the definition of a filter function to discard undesired elements while parsing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dkopecek&#34;&gt;Daniel Kopeček&lt;/a&gt; fixed a bug in the compilation with GCC 5.0.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Florianjw&#34;&gt;Florian Weber&lt;/a&gt; fixed a bug in and improved the performance of the comparison operators.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/EricMCornelius&#34;&gt;Eric Cornelius&lt;/a&gt; pointed out a bug in the handling with NaN and infinity values. He also improved the performance of the string escaping.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/likebeta&#34;&gt;易思龙&lt;/a&gt; implemented a conversion from anonymous enums.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kepkin&#34;&gt;kepkin&lt;/a&gt; patiently pushed forward the support for Microsoft Visual studio.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gregmarr&#34;&gt;gregmarr&lt;/a&gt; simplified the implementation of reverse iterators and helped with numerous hints and improvements. In particular, he pushed forward the implementation of user-defined types.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/caiovlp&#34;&gt;Caio Luppi&lt;/a&gt; fixed a bug in the Unicode handling.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dariomt&#34;&gt;dariomt&lt;/a&gt; fixed some typos in the examples.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/d-frey&#34;&gt;Daniel Frey&lt;/a&gt; cleaned up some pointers and implemented exception-safe memory allocation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ColinH&#34;&gt;Colin Hirsch&lt;/a&gt; took care of a small namespace issue.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/whoshuu&#34;&gt;Huu Nguyen&lt;/a&gt; correct a variable name in the documentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/silverweed&#34;&gt;Silverweed&lt;/a&gt; overloaded &lt;code&gt;parse()&lt;/code&gt; to accept an rvalue reference.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dariomt&#34;&gt;dariomt&lt;/a&gt; fixed a subtlety in MSVC type support and implemented the &lt;code&gt;get_ref()&lt;/code&gt; function to get a reference to stored values.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ZahlGraf&#34;&gt;ZahlGraf&lt;/a&gt; added a workaround that allows compilation using Android NDK.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/whackashoe&#34;&gt;whackashoe&lt;/a&gt; replaced a function that was marked as unsafe by Visual Studio.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/406345&#34;&gt;406345&lt;/a&gt; fixed two small warnings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glenfe&#34;&gt;Glen Fernandes&lt;/a&gt; noted a potential portability problem in the &lt;code&gt;has_mapped_type&lt;/code&gt; function.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nibroc&#34;&gt;Corbin Hughes&lt;/a&gt; fixed some typos in the contribution guidelines.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twelsby&#34;&gt;twelsby&lt;/a&gt; fixed the array subscript operator, an issue that failed the MSVC build, and floating-point parsing/dumping. He further added support for unsigned integer numbers and implemented better roundtrip support for parsed numbers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vog&#34;&gt;Volker Diels-Grabsch&lt;/a&gt; fixed a link in the README file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/msm-&#34;&gt;msm-&lt;/a&gt; added support for American Fuzzy Lop.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Annihil&#34;&gt;Annihil&lt;/a&gt; fixed an example in the README file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Themercee&#34;&gt;Themercee&lt;/a&gt; noted a wrong URL in the README file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lv-zheng&#34;&gt;Lv Zheng&lt;/a&gt; fixed a namespace issue with &lt;code&gt;int64_t&lt;/code&gt; and &lt;code&gt;uint64_t&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/abc100m&#34;&gt;abc100m&lt;/a&gt; analyzed the issues with GCC 4.8 and proposed a &lt;a href=&#34;https://github.com/nlohmann/json/pull/212&#34;&gt;partial solution&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zewt&#34;&gt;zewt&lt;/a&gt; added useful notes to the README file about Android.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/robertmrk&#34;&gt;Róbert Márki&lt;/a&gt; added a fix to use move iterators and improved the integration via CMake.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ChrisKitching&#34;&gt;Chris Kitching&lt;/a&gt; cleaned up the CMake files.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/06needhamt&#34;&gt;Tom Needham&lt;/a&gt; fixed a subtle bug with MSVC 2015 which was also proposed by &lt;a href=&#34;https://github.com/Epidal&#34;&gt;Michael K.&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/thelostt&#34;&gt;Mário Feroldi&lt;/a&gt; fixed a small typo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/duncanwerner&#34;&gt;duncanwerner&lt;/a&gt; found a really embarrassing performance regression in the 2.0.0 release.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dtoma&#34;&gt;Damien&lt;/a&gt; fixed one of the last conversion warnings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/t-b&#34;&gt;Thomas Braun&lt;/a&gt; fixed a warning in a test case and adjusted MSVC calls in the CI.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/theodelrieu&#34;&gt;Théo DELRIEU&lt;/a&gt; patiently and constructively oversaw the long way toward &lt;a href=&#34;https://github.com/nlohmann/json/issues/290&#34;&gt;iterator-range parsing&lt;/a&gt;. He also implemented the magic behind the serialization/deserialization of user-defined types and split the single header file into smaller chunks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/5tefan&#34;&gt;Stefan&lt;/a&gt; fixed a minor issue in the documentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vasild&#34;&gt;Vasil Dimov&lt;/a&gt; fixed the documentation regarding conversions from &lt;code&gt;std::multiset&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ChristophJud&#34;&gt;ChristophJud&lt;/a&gt; overworked the CMake files to ease project inclusion.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vpetrigo&#34;&gt;Vladimir Petrigo&lt;/a&gt; made a SFINAE hack more readable and added Visual Studio 17 to the build matrix.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/seeekr&#34;&gt;Denis Andrejew&lt;/a&gt; fixed a grammar issue in the README file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/palacaze&#34;&gt;Pierre-Antoine Lacaze&lt;/a&gt; found a subtle bug in the &lt;code&gt;dump()&lt;/code&gt; function.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TurpentineDistillery&#34;&gt;TurpentineDistillery&lt;/a&gt; pointed to &lt;a href=&#34;https://en.cppreference.com/w/cpp/locale/locale/classic&#34;&gt;&lt;code&gt;std::locale::classic()&lt;/code&gt;&lt;/a&gt; to avoid too much locale joggling, found some nice performance improvements in the parser, improved the benchmarking code, and realized locale-independent number parsing and printing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cgzones&#34;&gt;cgzones&lt;/a&gt; had an idea how to fix the Coverity scan.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jaredgrubb&#34;&gt;Jared Grubb&lt;/a&gt; silenced a nasty documentation warning.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qwename&#34;&gt;Yixin Zhang&lt;/a&gt; fixed an integer overflow check.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Bosswestfalen&#34;&gt;Bosswestfalen&lt;/a&gt; merged two iterator classes into a smaller one.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Daniel599&#34;&gt;Daniel599&lt;/a&gt; helped to get Travis execute the tests with Clang&#39;s sanitizers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vjon&#34;&gt;Jonathan Lee&lt;/a&gt; fixed an example in the README file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gnzlbg&#34;&gt;gnzlbg&lt;/a&gt; supported the implementation of user-defined types.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qis&#34;&gt;Alexej Harm&lt;/a&gt; helped to get the user-defined types working with Visual Studio.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jaredgrubb&#34;&gt;Jared Grubb&lt;/a&gt; supported the implementation of user-defined types.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/EnricoBilla&#34;&gt;EnricoBilla&lt;/a&gt; noted a typo in an example.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/horenmar&#34;&gt;Martin Hořeňovský&lt;/a&gt; found a way for a 2x speedup for the compilation time of the test suite.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ukhegg&#34;&gt;ukhegg&lt;/a&gt; found proposed an improvement for the examples section.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rswanson-ihi&#34;&gt;rswanson-ihi&lt;/a&gt; noted a typo in the README.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stanmihai4&#34;&gt;Mihai Stan&lt;/a&gt; fixed a bug in the comparison with &lt;code&gt;nullptr&lt;/code&gt;s.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tusharpm&#34;&gt;Tushar Maheshwari&lt;/a&gt; added &lt;a href=&#34;https://github.com/sakra/cotire&#34;&gt;cotire&lt;/a&gt; support to speed up the compilation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TedLyngmo&#34;&gt;TedLyngmo&lt;/a&gt; noted a typo in the README, removed unnecessary bit arithmetic, and fixed some &lt;code&gt;-Weffc++&lt;/code&gt; warnings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/krzysztofwos&#34;&gt;Krzysztof Woś&lt;/a&gt; made exceptions more visible.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ftillier&#34;&gt;ftillier&lt;/a&gt; fixed a compiler warning.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tinloaf&#34;&gt;tinloaf&lt;/a&gt; made sure all pushed warnings are properly popped.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Fytch&#34;&gt;Fytch&lt;/a&gt; found a bug in the documentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Type1J&#34;&gt;Jay Sistar&lt;/a&gt; implemented a Meson build description.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/HenryRLee&#34;&gt;Henry Lee&lt;/a&gt; fixed a warning in ICC and improved the iterator implementation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vthiery&#34;&gt;Vincent Thiery&lt;/a&gt; maintains a package for the Conan package manager.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/koemeet&#34;&gt;Steffen&lt;/a&gt; fixed a potential issue with MSVC and &lt;code&gt;std::min&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Chocobo1&#34;&gt;Mike Tzou&lt;/a&gt; fixed some typos.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/amrcode&#34;&gt;amrcode&lt;/a&gt; noted a misleading documentation about comparison of floats.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/olegendo&#34;&gt;Oleg Endo&lt;/a&gt; reduced the memory consumption by replacing &lt;code&gt;&amp;lt;iostream&amp;gt;&lt;/code&gt; with &lt;code&gt;&amp;lt;iosfwd&amp;gt;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dan-42&#34;&gt;dan-42&lt;/a&gt; cleaned up the CMake files to simplify including/reusing of the library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/himikof&#34;&gt;Nikita Ofitserov&lt;/a&gt; allowed for moving values from initializer lists.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wincent&#34;&gt;Greg Hurrell&lt;/a&gt; fixed a typo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/DmitryKuk&#34;&gt;Dmitry Kukovinets&lt;/a&gt; fixed a typo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kbthomp1&#34;&gt;kbthomp1&lt;/a&gt; fixed an issue related to the Intel OSX compiler.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/daixtrose&#34;&gt;Markus Werle&lt;/a&gt; fixed a typo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/WebProdPP&#34;&gt;WebProdPP&lt;/a&gt; fixed a subtle error in a precondition check.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leha-bot&#34;&gt;Alex&lt;/a&gt; noted an error in a code sample.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tdegeus&#34;&gt;Tom de Geus&lt;/a&gt; reported some warnings with ICC and helped to fix them.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pjkundert&#34;&gt;Perry Kundert&lt;/a&gt; simplified reading from input streams.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sonulohani&#34;&gt;Sonu Lohani&lt;/a&gt; fixed a small compilation error.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jseward&#34;&gt;Jamie Seward&lt;/a&gt; fixed all MSVC warnings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/eld00d&#34;&gt;Nate Vargas&lt;/a&gt; added a Doxygen tag file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pvleuven&#34;&gt;pvleuven&lt;/a&gt; helped to fix a warning in ICC.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crea7or&#34;&gt;Pavel&lt;/a&gt; helped to fix some warnings in MSVC.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jseward&#34;&gt;Jamie Seward&lt;/a&gt; avoided unnecessary string copies in &lt;code&gt;find()&lt;/code&gt; and &lt;code&gt;count()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Itja&#34;&gt;Mitja&lt;/a&gt; fixed some typos.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jowr&#34;&gt;Jorrit Wronski&lt;/a&gt; updated the Hunter package links.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TinyTinni&#34;&gt;Matthias Möller&lt;/a&gt; added a &lt;code&gt;.natvis&lt;/code&gt; for the MSVC debug view.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bogemic&#34;&gt;bogemic&lt;/a&gt; fixed some C++17 deprecation warnings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/erengy&#34;&gt;Eren Okka&lt;/a&gt; fixed some MSVC warnings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/abolz&#34;&gt;abolz&lt;/a&gt; integrated the Grisu2 algorithm for proper floating-point formatting, allowing more roundtrip checks to succeed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Pipeliner&#34;&gt;Vadim Evard&lt;/a&gt; fixed a Markdown issue in the README.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zerodefect&#34;&gt;zerodefect&lt;/a&gt; fixed a compiler warning.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kaidokert&#34;&gt;Kert&lt;/a&gt; allowed to template the string type in the serialization and added the possibility to override the exceptional behavior.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mark-99&#34;&gt;mark-99&lt;/a&gt; helped fixing an ICC error.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/patrikhuber&#34;&gt;Patrik Huber&lt;/a&gt; fixed links in the README file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/johnfb&#34;&gt;johnfb&lt;/a&gt; found a bug in the implementation of CBOR&#39;s indefinite length strings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pfultz2&#34;&gt;Paul Fultz II&lt;/a&gt; added a note on the cget package manager.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wla80&#34;&gt;Wilson Lin&lt;/a&gt; made the integration section of the README more concise.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ralfbielig&#34;&gt;RalfBielig&lt;/a&gt; detected and fixed a memory leak in the parser callback.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/agrianius&#34;&gt;agrianius&lt;/a&gt; allowed to dump JSON to an alternative string type.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ktonon&#34;&gt;Kevin Tonon&lt;/a&gt; overworked the C++11 compiler checks in CMake.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ax3l&#34;&gt;Axel Huebl&lt;/a&gt; simplified a CMake check and added support for the &lt;a href=&#34;https://spack.io&#34;&gt;Spack package manager&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coryan&#34;&gt;Carlos O&#39;Ryan&lt;/a&gt; fixed a typo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jammehcow&#34;&gt;James Upjohn&lt;/a&gt; fixed a version number in the compilers section.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chuckatkins&#34;&gt;Chuck Atkins&lt;/a&gt; adjusted the CMake files to the CMake packaging guidelines and provided documentation for the CMake integration.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dns13&#34;&gt;Jan Schöppach&lt;/a&gt; fixed a typo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/martin-mfg&#34;&gt;martin-mfg&lt;/a&gt; fixed a typo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TinyTinni&#34;&gt;Matthias Möller&lt;/a&gt; removed the dependency from &lt;code&gt;std::stringstream&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/agrianius&#34;&gt;agrianius&lt;/a&gt; added code to use alternative string implementations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Daniel599&#34;&gt;Daniel599&lt;/a&gt; allowed to use more algorithms with the &lt;code&gt;items()&lt;/code&gt; function.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jrakow&#34;&gt;Julius Rakow&lt;/a&gt; fixed the Meson include directory and fixed the links to &lt;a href=&#34;https://raw.githubusercontent.com/nlohmann/json/develop/cppreference.com&#34;&gt;cppreference.com&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sonulohani&#34;&gt;Sonu Lohani&lt;/a&gt; fixed the compilation with MSVC 2015 in debug mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/grembo&#34;&gt;grembo&lt;/a&gt; fixed the test suite and re-enabled several test cases.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/simnalamburt&#34;&gt;Hyeon Kim&lt;/a&gt; introduced the macro &lt;code&gt;JSON_INTERNAL_CATCH&lt;/code&gt; to control the exception handling inside the library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/thyu&#34;&gt;thyu&lt;/a&gt; fixed a compiler warning.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LEgregius&#34;&gt;David Guthrie&lt;/a&gt; fixed a subtle compilation error with Clang 3.4.2.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dennisfischer&#34;&gt;Dennis Fischer&lt;/a&gt; allowed to call &lt;code&gt;find_package&lt;/code&gt; without installing the library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/simnalamburt&#34;&gt;Hyeon Kim&lt;/a&gt; fixed an issue with a double macro definition.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rivertam&#34;&gt;Ben Berman&lt;/a&gt; made some error messages more understandable.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zakalibit&#34;&gt;zakalibit&lt;/a&gt; fixed a compilation problem with the Intel C++ compiler.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mandreyel&#34;&gt;mandreyel&lt;/a&gt; fixed a compilation problem.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/koponomarenko&#34;&gt;Kostiantyn Ponomarenko&lt;/a&gt; added version and license information to the Meson build file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/henryiii&#34;&gt;Henry Schreiner&lt;/a&gt; added support for GCC 4.8.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/knilch0r&#34;&gt;knilch&lt;/a&gt; made sure the test suite does not stall when run in the wrong directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/antonioborondo&#34;&gt;Antonio Borondo&lt;/a&gt; fixed an MSVC 2017 warning.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dgendreau&#34;&gt;Dan Gendreau&lt;/a&gt; implemented the &lt;code&gt;NLOHMANN_JSON_SERIALIZE_ENUM&lt;/code&gt; macro to quickly define an enum/JSON mapping.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/efp&#34;&gt;efp&lt;/a&gt; added line and column information to parse errors.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/julian-becker&#34;&gt;julian-becker&lt;/a&gt; added BSON support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pratikpc&#34;&gt;Pratik Chowdhury&lt;/a&gt; added support for structured bindings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/davedissian&#34;&gt;David Avedissian&lt;/a&gt; added support for Clang 5.0.1 (PS4 version).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dumarjo&#34;&gt;Jonathan Dumaresq&lt;/a&gt; implemented an input adapter to read from &lt;code&gt;FILE*&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kjpus&#34;&gt;kjpus&lt;/a&gt; fixed a link in the documentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/manu-chroma&#34;&gt;Manvendra Singh&lt;/a&gt; fixed a typo in the documentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ziggurat29&#34;&gt;ziggurat29&lt;/a&gt; fixed an MSVC warning.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SylvainCorlay&#34;&gt;Sylvain Corlay&lt;/a&gt; added code to avoid an issue with MSVC.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mefyl&#34;&gt;mefyl&lt;/a&gt; fixed a bug when JSON was parsed from an input stream.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mpoquet&#34;&gt;Millian Poquet&lt;/a&gt; allowed to install the library via Meson.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/moodboom&#34;&gt;Michael Behrns-Miller&lt;/a&gt; found an issue with a missing namespace.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/naszta&#34;&gt;Nasztanovics Ferenc&lt;/a&gt; fixed a compilation issue with libc 2.12.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/andreas-schwab&#34;&gt;Andreas Schwab&lt;/a&gt; fixed the endian conversion.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Mark-Dunning&#34;&gt;Mark-Dunning&lt;/a&gt; fixed a warning in MSVC.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/garethsb-sony&#34;&gt;Gareth Sylvester-Bradley&lt;/a&gt; added &lt;code&gt;operator/&lt;/code&gt; for JSON Pointers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/johnmarkwayve&#34;&gt;John-Mark&lt;/a&gt; noted a missing header.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xvitaly&#34;&gt;Vitaly Zaitsev&lt;/a&gt; fixed compilation with GCC 9.0.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stac47&#34;&gt;Laurent Stacul&lt;/a&gt; fixed compilation with GCC 9.0.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/iwanders&#34;&gt;Ivor Wanders&lt;/a&gt; helped to reduce the CMake requirement to version 3.1.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/njlr&#34;&gt;njlr&lt;/a&gt; updated the Buckaroo instructions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lieff&#34;&gt;Lion&lt;/a&gt; fixed a compilation issue with GCC 7 on CentOS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nickaein&#34;&gt;Isaac Nickaein&lt;/a&gt; improved the integer serialization performance and implemented the &lt;code&gt;contains()&lt;/code&gt; function.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/past-due&#34;&gt;past-due&lt;/a&gt; suppressed an unfixable warning.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/elvisoric&#34;&gt;Elvis Oric&lt;/a&gt; improved Meson support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Afforix&#34;&gt;Matěj Plch&lt;/a&gt; fixed an example in the README.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wythe&#34;&gt;Mark Beckwith&lt;/a&gt; fixed a typo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/scinart&#34;&gt;scinart&lt;/a&gt; fixed bug in the serializer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pboettch&#34;&gt;Patrick Boettcher&lt;/a&gt; implemented &lt;code&gt;push_back()&lt;/code&gt; and &lt;code&gt;pop_back()&lt;/code&gt; for JSON Pointers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nicoddemus&#34;&gt;Bruno Oliveira&lt;/a&gt; added support for Conda.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/skypjack&#34;&gt;Michele Caini&lt;/a&gt; fixed links in the README.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hnkb&#34;&gt;Hani&lt;/a&gt; documented how to install the library with NuGet.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wythe&#34;&gt;Mark Beckwith&lt;/a&gt; fixed a typo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yann-morin-1998&#34;&gt;yann-morin-1998&lt;/a&gt; helped to reduce the CMake requirement to version 3.1.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/podsvirov&#34;&gt;Konstantin Podsvirov&lt;/a&gt; maintains a package for the MSYS2 software distro.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/remyabel&#34;&gt;remyabel&lt;/a&gt; added GNUInstallDirs to the CMake files.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/taylorhoward92&#34;&gt;Taylor Howard&lt;/a&gt; fixed a unit test.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Macr0Nerd&#34;&gt;Gabe Ron&lt;/a&gt; implemented the &lt;code&gt;to_string&lt;/code&gt; method.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/heavywatal&#34;&gt;Watal M. Iwasaki&lt;/a&gt; fixed a Clang warning.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/onqtam&#34;&gt;Viktor Kirilov&lt;/a&gt; switched the unit tests from &lt;a href=&#34;https://github.com/philsquared/Catch&#34;&gt;Catch&lt;/a&gt; to &lt;a href=&#34;https://github.com/onqtam/doctest&#34;&gt;doctest&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ejcjason&#34;&gt;Juncheng E&lt;/a&gt; fixed a typo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tete17&#34;&gt;tete17&lt;/a&gt; fixed a bug in the &lt;code&gt;contains&lt;/code&gt; function.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Xav83&#34;&gt;Xav83&lt;/a&gt; fixed some cppcheck warnings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/0xflotus&#34;&gt;0xflotus&lt;/a&gt; fixed some typos.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chris0x44&#34;&gt;Christian Deneke&lt;/a&gt; added a const version of &lt;code&gt;json_pointer::back&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crazyjul&#34;&gt;Julien Hamaide&lt;/a&gt; made the &lt;code&gt;items()&lt;/code&gt; function work with custom string types.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nemequ&#34;&gt;Evan Nemerson&lt;/a&gt; updated fixed a bug in Hedley and updated this library accordingly.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flopp&#34;&gt;Florian Pigorsch&lt;/a&gt; fixed a lot of typos.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cbegue&#34;&gt;Camille Bégué&lt;/a&gt; fixed an issue in the conversion from &lt;code&gt;std::pair&lt;/code&gt; and &lt;code&gt;std::tuple&lt;/code&gt; to &lt;code&gt;json&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AnthonyVH&#34;&gt;Anthony VH&lt;/a&gt; fixed a compile error in an enum deserialization.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ua-code-dragon&#34;&gt;Yuriy Vountesmery&lt;/a&gt; noted a subtle bug in a preprocessor check.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dota17&#34;&gt;Chen&lt;/a&gt; fixed numerous issues in the library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aokellermann&#34;&gt;Antony Kellermann&lt;/a&gt; added a CI step for GCC 10.1.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gistrec&#34;&gt;Alex&lt;/a&gt; fixed an MSVC warning.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rvjr&#34;&gt;Rainer&lt;/a&gt; proposed an improvement in the floating-point serialization in CBOR.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FrancoisChabot&#34;&gt;Francois Chabot&lt;/a&gt; made performance improvements in the input adapters.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArthurSonzogni&#34;&gt;Arthur Sonzogni&lt;/a&gt; documented how the library can be included via &lt;code&gt;FetchContent&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rmisev&#34;&gt;Rimas Misevičius&lt;/a&gt; fixed an error message.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alexandermyasnikov&#34;&gt;Alexander Myasnikov&lt;/a&gt; fixed some examples and a link in the README.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uhoreg&#34;&gt;Hubert Chathi&lt;/a&gt; made CMake&#39;s version config file architecture-independent.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OmnipotentEntity&#34;&gt;OmnipotentEntity&lt;/a&gt; implemented the binary values for CBOR, MessagePack, BSON, and UBJSON.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArtemSarmini&#34;&gt;ArtemSarmini&lt;/a&gt; fixed a compilation issue with GCC 10 and fixed a leak.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sea-kg&#34;&gt;Evgenii Sopov&lt;/a&gt; integrated the library to the wsjcpp package manager.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/linev&#34;&gt;Sergey Linev&lt;/a&gt; fixed a compiler warning.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/magamig&#34;&gt;Miguel Magalhães&lt;/a&gt; fixed the year in the copyright.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/garethsb-sony&#34;&gt;Gareth Sylvester-Bradley&lt;/a&gt; fixed a compilation issue with MSVC.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alex-weej&#34;&gt;Alexander “weej” Jones&lt;/a&gt; fixed an example in the README.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Coeur&#34;&gt;Antoine Cœur&lt;/a&gt; fixed some typos in the documentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jothepro&#34;&gt;jothepro&lt;/a&gt; updated links to the Hunter package.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kastiglione&#34;&gt;Dave Lee&lt;/a&gt; fixed link in the README.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Klaim&#34;&gt;Joël Lamotte&lt;/a&gt; added instruction for using Build2&#39;s package manager.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pauljurczak&#34;&gt;Paul Jurczak&lt;/a&gt; fixed an example in the README.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sonulohani&#34;&gt;Sonu Lohani&lt;/a&gt; fixed a warning.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gocarlos&#34;&gt;Carlos Gomes Martinho&lt;/a&gt; updated the Conan package source.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/podsvirov&#34;&gt;Konstantin Podsvirov&lt;/a&gt; fixed the MSYS2 package documentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tridacnid&#34;&gt;Tridacnid&lt;/a&gt; improved the CMake tests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MBalszun&#34;&gt;Michael&lt;/a&gt; fixed MSVC warnings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/quentin-dev&#34;&gt;Quentin Barbarat&lt;/a&gt; fixed an example in the documentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/XyFreak&#34;&gt;XyFreak&lt;/a&gt; fixed a compiler warning.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TotalCaesar659&#34;&gt;TotalCaesar659&lt;/a&gt; fixed links in the README.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tanuj208&#34;&gt;Tanuj Garg&lt;/a&gt; improved the fuzzer coverage for UBSAN input.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AODQ&#34;&gt;AODQ&lt;/a&gt; fixed a compiler warning.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jwittbrodt&#34;&gt;jwittbrodt&lt;/a&gt; made &lt;code&gt;NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE&lt;/code&gt; inline.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pfeatherstone&#34;&gt;pfeatherstone&lt;/a&gt; improved the upper bound of arguments of the &lt;code&gt;NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE&lt;/code&gt;/&lt;code&gt;NLOHMANN_DEFINE_TYPE_INTRUSIVE&lt;/code&gt; macros.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jprochazk&#34;&gt;Jan Procházka&lt;/a&gt; fixed a bug in the CBOR parser for binary and string values.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/T0b1-iOS&#34;&gt;T0b1-iOS&lt;/a&gt; fixed a bug in the new hash implementation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/matthewbauer&#34;&gt;Matthew Bauer&lt;/a&gt; adjusted the CBOR writer to create tags for binary subtypes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gatopeich&#34;&gt;gatopeich&lt;/a&gt; implemented an ordered map container for &lt;code&gt;nlohmann::ordered_json&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ericonr&#34;&gt;Érico Nogueira Rolim&lt;/a&gt; added support for pkg-config.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KonanM&#34;&gt;KonanM&lt;/a&gt; proposed an implementation for the &lt;code&gt;NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE&lt;/code&gt;/&lt;code&gt;NLOHMANN_DEFINE_TYPE_INTRUSIVE&lt;/code&gt; macros.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gracicot&#34;&gt;Guillaume Racicot&lt;/a&gt; implemented &lt;code&gt;string_view&lt;/code&gt; support and allowed C++20 support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alexreinking&#34;&gt;Alex Reinking&lt;/a&gt; improved CMake support for &lt;code&gt;FetchContent&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ssbssa&#34;&gt;Hannes Domani&lt;/a&gt; provided a GDB pretty printer.&lt;/li&gt; &#xA; &lt;li&gt;Lars Wirzenius reviewed the README file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ongjunjie&#34;&gt;Jun Jie&lt;/a&gt; fixed a compiler path in the CMake scripts.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rbuch&#34;&gt;Ronak Buch&lt;/a&gt; fixed typos in the documentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/karzhenkov&#34;&gt;Alexander Karzhenkov&lt;/a&gt; fixed a move constructor and the Travis builds.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leozz37&#34;&gt;Leonardo Lima&lt;/a&gt; added CPM.Cmake support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jbzdarkid&#34;&gt;Joseph Blackman&lt;/a&gt; fixed a warning.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/YarikTH&#34;&gt;Yaroslav&lt;/a&gt; updated doctest and implemented unit tests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/globberwops&#34;&gt;Martin Stump&lt;/a&gt; fixed a bug in the CMake files.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jasujm&#34;&gt;Jaakko Moisio&lt;/a&gt; fixed a bug in the input adapters.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bl-ue&#34;&gt;bl-ue&lt;/a&gt; fixed some Markdown issues in the README file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wawiesel&#34;&gt;William A. Wieselquist&lt;/a&gt; fixed an example from the README.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/abbaswasim&#34;&gt;abbaswasim&lt;/a&gt; fixed an example from the README.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/remyjette&#34;&gt;Remy Jette&lt;/a&gt; fixed a warning.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/frasermarlow&#34;&gt;Fraser&lt;/a&gt; fixed the documentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/musicinmybrain&#34;&gt;Ben Beasley&lt;/a&gt; updated doctest.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/doronbehar&#34;&gt;Doron Behar&lt;/a&gt; fixed pkg-config.pc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/raduteo&#34;&gt;raduteo&lt;/a&gt; fixed a warning.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/theShmoo&#34;&gt;David Pfahler&lt;/a&gt; added the possibility to compile the library without I/O support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mortenfyhn&#34;&gt;Morten Fyhn Amundsen&lt;/a&gt; fixed a typo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jpl-mac&#34;&gt;jpl-mac&lt;/a&gt; allowed to treat the library as a system header in CMake.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jasmcaus&#34;&gt;Jason Dsouza&lt;/a&gt; fixed the indentation of the CMake file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/offa&#34;&gt;offa&lt;/a&gt; added a link to Conan Center to the documentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TotalCaesar659&#34;&gt;TotalCaesar659&lt;/a&gt; updated the links in the documentation to use HTTPS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/grafail&#34;&gt;Rafail Giavrimis&lt;/a&gt; fixed the Google Benchmark default branch.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ldionne&#34;&gt;Louis Dionne&lt;/a&gt; fixed a conversion operator.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/justanotheranonymoususer&#34;&gt;justanotheranonymoususer&lt;/a&gt; made the examples in the README more consistent.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Finkman&#34;&gt;Finkman&lt;/a&gt; suppressed some &lt;code&gt;-Wfloat-equal&lt;/code&gt; warnings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fhuberts&#34;&gt;Ferry Huberts&lt;/a&gt; fixed &lt;code&gt;-Wswitch-enum&lt;/code&gt; warnings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/senyai&#34;&gt;Arseniy Terekhin&lt;/a&gt; made the GDB pretty-printer robust against unset variable names.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/amirmasoudabdol&#34;&gt;Amir Masoud Abdol&lt;/a&gt; updated the Homebrew command as nlohmann/json is now in homebrew-core.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Hallot&#34;&gt;Hallot&lt;/a&gt; fixed some &lt;code&gt;-Wextra-semi-stmt warnings&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gcerretani&#34;&gt;Giovanni Cerretani&lt;/a&gt; fixed &lt;code&gt;-Wunused&lt;/code&gt; warnings on &lt;code&gt;JSON_DIAGNOSTICS&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Kapeli&#34;&gt;Bogdan Popescu&lt;/a&gt; hosts the &lt;a href=&#34;https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/JSON_for_Modern_C%2B%2B&#34;&gt;docset&lt;/a&gt; for offline documentation viewers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/carlsmedstad&#34;&gt;Carl Smedstad&lt;/a&gt; fixed an assertion error when using &lt;code&gt;JSON_DIAGNOSTICS&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/miikka75&#34;&gt;miikka75&lt;/a&gt; provided an important fix to compile C++17 code with Clang 9.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kernie&#34;&gt;Maarten Becker&lt;/a&gt; fixed a warning for shadowed variables.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/axnsan12&#34;&gt;Cristi Vîjdea&lt;/a&gt; fixed typos in the &lt;code&gt;operator[]&lt;/code&gt; documentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/axic&#34;&gt;Alex Beregszaszi&lt;/a&gt; fixed spelling mistakes in comments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/striezel&#34;&gt;Dirk Stolle&lt;/a&gt; fixed typos in documentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/daniel-kun&#34;&gt;Daniel Albuschat&lt;/a&gt; corrected the parameter name in the &lt;code&gt;parse&lt;/code&gt; documentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Prince-Mendiratta&#34;&gt;Prince Mendiratta&lt;/a&gt; fixed a link to the FAQ.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/falbrechtskirchinger&#34;&gt;Florian Albrechtskirchinger&lt;/a&gt; implemented &lt;code&gt;std::string_view&lt;/code&gt; support for object keys and made dozens of other improvements.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fangq&#34;&gt;Qianqian Fang&lt;/a&gt; implemented the Binary JData (BJData) format.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pketelsen&#34;&gt;pketelsen&lt;/a&gt; added macros &lt;code&gt;NLOHMANN_DEFINE_TYPE_INTRUSIVE_WITH_DEFAULT&lt;/code&gt; and &lt;code&gt;NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_WITH_DEFAULT&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/DarkZeros&#34;&gt;DarkZeros&lt;/a&gt; adjusted to code to not clash with Arduino defines.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flagarde&#34;&gt;flagarde&lt;/a&gt; fixed the output of &lt;code&gt;meta()&lt;/code&gt; for MSVC.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gcerretani&#34;&gt;Giovanni Cerretani&lt;/a&gt; fixed a check for &lt;code&gt;std::filesystem&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rex4539&#34;&gt;Dimitris Apostolou&lt;/a&gt; fixed a typo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fhuberts&#34;&gt;Ferry Huberts&lt;/a&gt; fixed a typo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/heinemml&#34;&gt;Michael Nosthoff&lt;/a&gt; fixed a typo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jhnlee&#34;&gt;JungHoon Lee&lt;/a&gt; fixed a typo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fdiblen&#34;&gt;Faruk D.&lt;/a&gt; fixed the CITATION.CFF file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/puffetto&#34;&gt;Andrea Cocito&lt;/a&gt; added a clarification on macro usage to the documentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kkarbowiak&#34;&gt;Krzysiek Karbowiak&lt;/a&gt; refactored the tests to use &lt;code&gt;CHECK_THROWS_WITH_AS&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/prncoprs&#34;&gt;Chaoqi Zhang&lt;/a&gt; fixed a typo.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thanks a lot for helping out! Please &lt;a href=&#34;mailto:mail@nlohmann.me&#34;&gt;let me know&lt;/a&gt; if I forgot someone.&lt;/p&gt; &#xA;&lt;h2&gt;Used third-party tools&lt;/h2&gt; &#xA;&lt;p&gt;The library itself consists of a single header file licensed under the MIT license. However, it is built, tested, documented, and whatnot using a lot of third-party tools and services. Thanks a lot!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/edlund/amalgamate&#34;&gt;&lt;strong&gt;amalgamate.py - Amalgamate C source and header files&lt;/strong&gt;&lt;/a&gt; to create a single header file&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lcamtuf.coredump.cx/afl/&#34;&gt;&lt;strong&gt;American fuzzy lop&lt;/strong&gt;&lt;/a&gt; for fuzz testing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.appveyor.com&#34;&gt;&lt;strong&gt;AppVeyor&lt;/strong&gt;&lt;/a&gt; for &lt;a href=&#34;https://ci.appveyor.com/project/nlohmann/json&#34;&gt;continuous integration&lt;/a&gt; on Windows&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://astyle.sourceforge.net&#34;&gt;&lt;strong&gt;Artistic Style&lt;/strong&gt;&lt;/a&gt; for automatic source code indentation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://clang.llvm.org&#34;&gt;&lt;strong&gt;Clang&lt;/strong&gt;&lt;/a&gt; for compilation with code sanitizers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cmake.org&#34;&gt;&lt;strong&gt;CMake&lt;/strong&gt;&lt;/a&gt; for build automation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.codacy.com&#34;&gt;&lt;strong&gt;Codacy&lt;/strong&gt;&lt;/a&gt; for further &lt;a href=&#34;https://www.codacy.com/app/nlohmann/json&#34;&gt;code analysis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://coveralls.io&#34;&gt;&lt;strong&gt;Coveralls&lt;/strong&gt;&lt;/a&gt; to measure &lt;a href=&#34;https://coveralls.io/github/nlohmann/json&#34;&gt;code coverage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://scan.coverity.com&#34;&gt;&lt;strong&gt;Coverity Scan&lt;/strong&gt;&lt;/a&gt; for &lt;a href=&#34;https://scan.coverity.com/projects/nlohmann-json&#34;&gt;static analysis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cppcheck.sourceforge.net&#34;&gt;&lt;strong&gt;cppcheck&lt;/strong&gt;&lt;/a&gt; for static analysis&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/onqtam/doctest&#34;&gt;&lt;strong&gt;doctest&lt;/strong&gt;&lt;/a&gt; for the unit tests&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rstacruz/git-update-ghpages&#34;&gt;&lt;strong&gt;git-update-ghpages&lt;/strong&gt;&lt;/a&gt; to upload the documentation to gh-pages&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/skywinder/github-changelog-generator&#34;&gt;&lt;strong&gt;GitHub Changelog Generator&lt;/strong&gt;&lt;/a&gt; to generate the &lt;a href=&#34;https://github.com/nlohmann/json/raw/develop/ChangeLog.md&#34;&gt;ChangeLog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/benchmark&#34;&gt;&lt;strong&gt;Google Benchmark&lt;/strong&gt;&lt;/a&gt; to implement the benchmarks&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nemequ.github.io/hedley/&#34;&gt;&lt;strong&gt;Hedley&lt;/strong&gt;&lt;/a&gt; to avoid re-inventing several compiler-agnostic feature macros&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://ltp.sourceforge.net/coverage/lcov.php&#34;&gt;&lt;strong&gt;lcov&lt;/strong&gt;&lt;/a&gt; to process coverage information and create an HTML view&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://llvm.org/docs/LibFuzzer.html&#34;&gt;&lt;strong&gt;libFuzzer&lt;/strong&gt;&lt;/a&gt; to implement fuzz testing for OSS-Fuzz&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://squidfunk.github.io/mkdocs-material/&#34;&gt;&lt;strong&gt;Material for MkDocs&lt;/strong&gt;&lt;/a&gt; for the style of the documentation site&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mkdocs.org&#34;&gt;&lt;strong&gt;MkDocs&lt;/strong&gt;&lt;/a&gt; for the documentation site&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/oss-fuzz&#34;&gt;&lt;strong&gt;OSS-Fuzz&lt;/strong&gt;&lt;/a&gt; for continuous fuzz testing of the library (&lt;a href=&#34;https://github.com/google/oss-fuzz/tree/master/projects/json&#34;&gt;project repository&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://probot.github.io&#34;&gt;&lt;strong&gt;Probot&lt;/strong&gt;&lt;/a&gt; for automating maintainer tasks such as closing stale issues, requesting missing information, or detecting toxic comments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://valgrind.org&#34;&gt;&lt;strong&gt;Valgrind&lt;/strong&gt;&lt;/a&gt; to check for correct memory management&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Projects using JSON for Modern C++&lt;/h2&gt; &#xA;&lt;p&gt;The library is currently used in Apple macOS Sierra and iOS 10. I am not sure what they are using the library for, but I am happy that it runs on so many devices.&lt;/p&gt; &#xA;&lt;h2&gt;Notes&lt;/h2&gt; &#xA;&lt;h3&gt;Character encoding&lt;/h3&gt; &#xA;&lt;p&gt;The library supports &lt;strong&gt;Unicode input&lt;/strong&gt; as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Only &lt;strong&gt;UTF-8&lt;/strong&gt; encoded input is supported which is the default encoding for JSON according to &lt;a href=&#34;https://tools.ietf.org/html/rfc8259.html#section-8.1&#34;&gt;RFC 8259&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;std::u16string&lt;/code&gt; and &lt;code&gt;std::u32string&lt;/code&gt; can be parsed, assuming UTF-16 and UTF-32 encoding, respectively. These encodings are not supported when reading from files or other input containers.&lt;/li&gt; &#xA; &lt;li&gt;Other encodings such as Latin-1 or ISO 8859-1 are &lt;strong&gt;not&lt;/strong&gt; supported and will yield parse or serialization errors.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.unicode.org/faq/private_use.html#nonchar1&#34;&gt;Unicode noncharacters&lt;/a&gt; will not be replaced by the library.&lt;/li&gt; &#xA; &lt;li&gt;Invalid surrogates (e.g., incomplete pairs such as &lt;code&gt;\uDEAD&lt;/code&gt;) will yield parse errors.&lt;/li&gt; &#xA; &lt;li&gt;The strings stored in the library are UTF-8 encoded. When using the default string type (&lt;code&gt;std::string&lt;/code&gt;), note that its length/size functions return the number of stored bytes rather than the number of characters or glyphs.&lt;/li&gt; &#xA; &lt;li&gt;When you store strings with different encodings in the library, calling &lt;a href=&#34;https://json.nlohmann.me/api/basic_json/dump/&#34;&gt;&lt;code&gt;dump()&lt;/code&gt;&lt;/a&gt; may throw an exception unless &lt;code&gt;json::error_handler_t::replace&lt;/code&gt; or &lt;code&gt;json::error_handler_t::ignore&lt;/code&gt; are used as error handlers.&lt;/li&gt; &#xA; &lt;li&gt;To store wide strings (e.g., &lt;code&gt;std::wstring&lt;/code&gt;), you need to convert them to a UTF-8 encoded &lt;code&gt;std::string&lt;/code&gt; before, see &lt;a href=&#34;https://json.nlohmann.me/home/faq/#wide-string-handling&#34;&gt;an example&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Comments in JSON&lt;/h3&gt; &#xA;&lt;p&gt;This library does not support comments by default. It does so for three reasons:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Comments are not part of the &lt;a href=&#34;https://tools.ietf.org/html/rfc8259&#34;&gt;JSON specification&lt;/a&gt;. You may argue that &lt;code&gt;//&lt;/code&gt; or &lt;code&gt;/* */&lt;/code&gt; are allowed in JavaScript, but JSON is not JavaScript.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;This was not an oversight: Douglas Crockford &lt;a href=&#34;https://plus.google.com/118095276221607585885/posts/RK8qyGVaGSr&#34;&gt;wrote on this&lt;/a&gt; in May 2012:&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;I removed comments from JSON because I saw people were using them to hold parsing directives, a practice which would have destroyed interoperability. I know that the lack of comments makes some people sad, but it shouldn&#39;t.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Suppose you are using JSON to keep configuration files, which you would like to annotate. Go ahead and insert all the comments you like. Then pipe it through JSMin before handing it to your JSON parser.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It is dangerous for interoperability if some libraries would add comment support while others don&#39;t. Please check &lt;a href=&#34;https://tools.ietf.org/html/draft-iab-protocol-maintenance-01&#34;&gt;The Harmful Consequences of the Robustness Principle&lt;/a&gt; on this.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;However, you can pass set parameter &lt;code&gt;ignore_comments&lt;/code&gt; to true in the &lt;code&gt;parse&lt;/code&gt; function to ignore &lt;code&gt;//&lt;/code&gt; or &lt;code&gt;/* */&lt;/code&gt; comments. Comments will then be treated as whitespace.&lt;/p&gt; &#xA;&lt;h3&gt;Order of object keys&lt;/h3&gt; &#xA;&lt;p&gt;By default, the library does not preserve the &lt;strong&gt;insertion order of object elements&lt;/strong&gt;. This is standards-compliant, as the &lt;a href=&#34;https://tools.ietf.org/html/rfc8259.html&#34;&gt;JSON standard&lt;/a&gt; defines objects as &#34;an unordered collection of zero or more name/value pairs&#34;.&lt;/p&gt; &#xA;&lt;p&gt;If you do want to preserve the insertion order, you can try the type &lt;a href=&#34;https://github.com/nlohmann/json/issues/2179&#34;&gt;&lt;code&gt;nlohmann::ordered_json&lt;/code&gt;&lt;/a&gt;. Alternatively, you can use a more sophisticated ordered map like &lt;a href=&#34;https://github.com/Tessil/ordered-map&#34;&gt;&lt;code&gt;tsl::ordered_map&lt;/code&gt;&lt;/a&gt; (&lt;a href=&#34;https://github.com/nlohmann/json/issues/546#issuecomment-304447518&#34;&gt;integration&lt;/a&gt;) or &lt;a href=&#34;https://github.com/nlohmann/fifo_map&#34;&gt;&lt;code&gt;nlohmann::fifo_map&lt;/code&gt;&lt;/a&gt; (&lt;a href=&#34;https://github.com/nlohmann/json/issues/485#issuecomment-333652309&#34;&gt;integration&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Memory Release&lt;/h3&gt; &#xA;&lt;p&gt;We checked with Valgrind and the Address Sanitizer (ASAN) that there are no memory leaks.&lt;/p&gt; &#xA;&lt;p&gt;If you find that a parsing program with this library does not release memory, please consider the following case, and it may be unrelated to this library.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Your program is compiled with glibc.&lt;/strong&gt; There is a tunable threshold that glibc uses to decide whether to actually return memory to the system or whether to cache it for later reuse. If in your program you make lots of small allocations and those small allocations are not a contiguous block and are presumably below the threshold, then they will not get returned to the OS. Here is a related issue &lt;a href=&#34;https://github.com/nlohmann/json/issues/1924&#34;&gt;#1924&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Further notes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The code contains numerous debug &lt;strong&gt;assertions&lt;/strong&gt; which can be switched off by defining the preprocessor macro &lt;code&gt;NDEBUG&lt;/code&gt;, see the &lt;a href=&#34;https://en.cppreference.com/w/cpp/error/assert&#34;&gt;documentation of &lt;code&gt;assert&lt;/code&gt;&lt;/a&gt;. In particular, note &lt;a href=&#34;https://json.nlohmann.me/api/basic_json/operator%5B%5D/&#34;&gt;&lt;code&gt;operator[]&lt;/code&gt;&lt;/a&gt; implements &lt;strong&gt;unchecked access&lt;/strong&gt; for const objects: If the given key is not present, the behavior is undefined (think of a dereferenced null pointer) and yields an &lt;a href=&#34;https://github.com/nlohmann/json/issues/289&#34;&gt;assertion failure&lt;/a&gt; if assertions are switched on. If you are not sure whether an element in an object exists, use checked access with the &lt;a href=&#34;https://json.nlohmann.me/api/basic_json/at/&#34;&gt;&lt;code&gt;at()&lt;/code&gt; function&lt;/a&gt;. Furthermore, you can define &lt;code&gt;JSON_ASSERT(x)&lt;/code&gt; to replace calls to &lt;code&gt;assert(x)&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;As the exact number type is not defined in the &lt;a href=&#34;https://tools.ietf.org/html/rfc8259.html&#34;&gt;JSON specification&lt;/a&gt;, this library tries to choose the best fitting C++ number type automatically. As a result, the type &lt;code&gt;double&lt;/code&gt; may be used to store numbers which may yield &lt;a href=&#34;https://github.com/nlohmann/json/issues/181&#34;&gt;&lt;strong&gt;floating-point exceptions&lt;/strong&gt;&lt;/a&gt; in certain rare situations if floating-point exceptions have been unmasked in the calling code. These exceptions are not caused by the library and need to be fixed in the calling code, such as by re-masking the exceptions prior to calling library functions.&lt;/li&gt; &#xA; &lt;li&gt;The code can be compiled without C++ &lt;strong&gt;runtime type identification&lt;/strong&gt; features; that is, you can use the &lt;code&gt;-fno-rtti&lt;/code&gt; compiler flag.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Exceptions&lt;/strong&gt; are used widely within the library. They can, however, be switched off with either using the compiler flag &lt;code&gt;-fno-exceptions&lt;/code&gt; or by defining the symbol &lt;code&gt;JSON_NOEXCEPTION&lt;/code&gt;. In this case, exceptions are replaced by &lt;code&gt;abort()&lt;/code&gt; calls. You can further control this behavior by defining &lt;code&gt;JSON_THROW_USER&lt;/code&gt; (overriding &lt;code&gt;throw&lt;/code&gt;), &lt;code&gt;JSON_TRY_USER&lt;/code&gt; (overriding &lt;code&gt;try&lt;/code&gt;), and &lt;code&gt;JSON_CATCH_USER&lt;/code&gt; (overriding &lt;code&gt;catch&lt;/code&gt;). Note that &lt;code&gt;JSON_THROW_USER&lt;/code&gt; should leave the current scope (e.g., by throwing or aborting), as continuing after it may yield undefined behavior. Note the explanatory &lt;a href=&#34;https://en.cppreference.com/w/cpp/error/exception/what&#34;&gt;&lt;code&gt;what()&lt;/code&gt;&lt;/a&gt; string of exceptions is not available for MSVC if exceptions are disabled, see &lt;a href=&#34;https://github.com/nlohmann/json/discussions/2824&#34;&gt;#2824&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Execute unit tests&lt;/h2&gt; &#xA;&lt;p&gt;To compile and run the tests, you need to execute&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ mkdir build&#xA;$ cd build&#xA;$ cmake .. -DJSON_BuildTests=On&#xA;$ cmake --build .&#xA;$ ctest --output-on-failure&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that during the &lt;code&gt;ctest&lt;/code&gt; stage, several JSON test files are downloaded from an &lt;a href=&#34;https://github.com/nlohmann/json_test_data&#34;&gt;external repository&lt;/a&gt;. If policies forbid downloading artifacts during testing, you can download the files yourself and pass the directory with the test files via &lt;code&gt;-DJSON_TestDataDirectory=path&lt;/code&gt; to CMake. Then, no Internet connectivity is required. See &lt;a href=&#34;https://github.com/nlohmann/json/issues/2189&#34;&gt;issue #2189&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;In case you have downloaded the library rather than checked out the code via Git, test &lt;code&gt;cmake_fetch_content_configure&lt;/code&gt; will fail. Please execute &lt;code&gt;ctest -LE git_required&lt;/code&gt; to skip these tests. See &lt;a href=&#34;https://github.com/nlohmann/json/issues/2189&#34;&gt;issue #2189&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;Some tests change the installed files and hence make the whole process not reproducible. Please execute &lt;code&gt;ctest -LE not_reproducible&lt;/code&gt; to skip these tests. See &lt;a href=&#34;https://github.com/nlohmann/json/issues/2324&#34;&gt;issue #2324&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;Note you need to call &lt;code&gt;cmake -LE &#34;not_reproducible|git_required&#34;&lt;/code&gt; to exclude both labels. See &lt;a href=&#34;https://github.com/nlohmann/json/issues/2596&#34;&gt;issue #2596&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;As Intel compilers use unsafe floating point optimization by default, the unit tests may fail. Use flag &lt;a href=&#34;https://software.intel.com/content/www/us/en/develop/documentation/cpp-compiler-developer-guide-and-reference/top/compiler-reference/compiler-options/compiler-option-details/floating-point-options/fp-model-fp.html&#34;&gt;&lt;code&gt;/fp:precise&lt;/code&gt;&lt;/a&gt; then.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>soulsmods/ModEngine2</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/soulsmods/ModEngine2</id>
    <link href="https://github.com/soulsmods/ModEngine2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Runtime injection library for modding Souls games. WIP&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mod Engine 2&lt;/h1&gt; &#xA;&lt;p&gt;Mod Engine 2 is a ground up rewrite of Mod Engine, a runtime code patching and injection library used for adding modding functionality to the Souls games by FROM Software.&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;🚧&lt;/span&gt; &lt;strong&gt;UNDER CONSTRUCTION&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Supported games&lt;/h2&gt; &#xA;&lt;p&gt;See the list below for information on games that currently have support in Mod Engine 2.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Dark Souls 3&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Dark Souls 2: SOTF&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Dark Souls Remastered&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Sekiro: Shadows Die Twice&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Bloodborne&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What are the differences?&lt;/h2&gt; &#xA;&lt;p&gt;There are some big architecture differences between legacy Mod Engine and the new version, the bulk of which is in 1) the configuration format and 2) how we get ModEngine loaded into the game. More details about these differences are listed below.&lt;/p&gt; &#xA;&lt;h3&gt;New configuration format&lt;/h3&gt; &#xA;&lt;p&gt;The old &lt;code&gt;.ini&lt;/code&gt; format is gone, replaced by a new structured configuration file based on &lt;a href=&#34;https://toml.io/en/&#34;&gt;TOML&lt;/a&gt;. This change is to suit the new extension model of Mod Engine by allowing plugins to specify their own configuration requirements.&lt;/p&gt; &#xA;&lt;p&gt;This is used by the mod loader plugin to specify lists of mods that should be loaded and whether they should be enabled or not. It may be extended in future to support a &#34;Mod Manifest&#34;, which would contain additional information like website, version, authors, etc.&lt;/p&gt; &#xA;&lt;h3&gt;Sideloading as &lt;code&gt;dinput8.dll&lt;/code&gt; is optional&lt;/h3&gt; &#xA;&lt;p&gt;With the introduction of a launcher we no longer need to rely on games loading via &lt;code&gt;dinput8.dll&lt;/code&gt; and we can instead launch the game pre-configured. This frees up this module for anything else that relies on being sideloaded.&lt;/p&gt; &#xA;&lt;h3&gt;Support for loading multiple mods&lt;/h3&gt; &#xA;&lt;p&gt;Multiple game roots can be specified in configuration, allowing users to run multiple mods concurrently without replacing files in their mod folder manually. Note, however, that this is still restricted to mods that don&#39;t replace conflicting files.&lt;/p&gt; &#xA;&lt;h3&gt;Focus on tooling for mod creators&lt;/h3&gt; &#xA;&lt;p&gt;The primary driver behind development of Mod Engine 2 is creating a tool that can be used to rapidly reverse the games that we are interested in. To this end, we offer functionality to make the reversing process easier:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integration with Optick Profiler&lt;/li&gt; &#xA; &lt;li&gt;Runtime scripting and live code patching&lt;/li&gt; &#xA; &lt;li&gt;Crash dumps for all users&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Mod Engine 2 covers all existing functionality from the original Mod Engine for Dark Souls but introduces some important new features that mod authors should be aware of.&lt;/p&gt; &#xA;&lt;h3&gt;Mod Launcher&lt;/h3&gt; &#xA;&lt;p&gt;We have created a launcher application that is designed to boot games with your mods pre-installed without the user having to do any manual file copying on their side. Historically, mods would live in the same location as the game folder and Mod Engine would attempt to redirect requests for game files to mod file paths within subdirectories of this game folder. This deployment model was inflexible and required a lot of manual tweaking if a user wanted to have multiple mods installed, switching between them as the choose.&lt;/p&gt; &#xA;&lt;p&gt;To solve this problem &lt;code&gt;modengine2_launcher&lt;/code&gt; was created. This simple command-line application has 3 main objectives.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Find where a user has installed the game&lt;/li&gt; &#xA; &lt;li&gt;Start the game with modengine2.dll already loaded&lt;/li&gt; &#xA; &lt;li&gt;Pass information to modengine2.dll about the configuration the user launched the game with&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This allows us to keep mods, modengine, and the game itself completely detached. As a result, running the game directly from Steam will always result in a vanilla instance being launched.&lt;/p&gt; &#xA;&lt;h3&gt;Extension/plugin support&lt;/h3&gt; &#xA;&lt;p&gt;Mod Engine 2 introduces support for extensions and plugins which are designed to replace the old chainloading mechanism from legacy Mod Engine. Extensions are able to use core functionality to register patches, code hooks, and interact with other extensions. This will eventually be extended to support runtime Lua scripting in the future.&lt;/p&gt; &#xA;&lt;h3&gt;Debugger support&lt;/h3&gt; &#xA;&lt;p&gt;ScyllaHide is included with Mod Engine 2 distributions and allows debugging games via native debuggers without worrying about evading anti-debug techniques using programs like Cheat Engine. Instead, you can use your favourite debugger (WinDbg, x64dbg, or even Cheat Engine without relying on VEH support).&lt;/p&gt; &#xA;&lt;h3&gt;Lua scripting&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;WIP&lt;/strong&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MaaAssistantArknights/MaaAssistantArknights</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/MaaAssistantArknights/MaaAssistantArknights</id>
    <link href="https://github.com/MaaAssistantArknights/MaaAssistantArknights" rel="alternate"></link>
    <summary type="html">&lt;p&gt;《明日方舟》小助手，自动刷图、智能基建换班，全日常一键长草！&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img alt=&#34;LOGO&#34; src=&#34;https://user-images.githubusercontent.com/18511905/148931479-23aef436-2fc1-4c1e-84c9-bae17be710a5.png&#34; width=&#34;360&#34; height=&#34;270/&#34;&gt; &#xA; &lt;h1&gt;MaaAssistantArknights&lt;/h1&gt; &#xA; &lt;br&gt; &#xA; &lt;div&gt; &#xA;  &lt;img alt=&#34;C++&#34; src=&#34;https://img.shields.io/badge/c++-17-%2300599C?logo=cplusplus&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;div&gt; &#xA;  &lt;img alt=&#34;platform&#34; src=&#34;https://img.shields.io/badge/platform-Windows%20%7C%20Linux%20%7C%20macOS-blueviolet&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;div&gt; &#xA;  &lt;img alt=&#34;license&#34; src=&#34;https://img.shields.io/github/license/MaaAssistantArknights/MaaAssistantArknights&#34;&gt; &#xA;  &lt;img alt=&#34;commit&#34; src=&#34;https://img.shields.io/github/commit-activity/m/MaaAssistantArknights/MaaAssistantArknights?color=%23ff69b4&#34;&gt; &#xA;  &lt;img alt=&#34;stars&#34; src=&#34;https://img.shields.io/github/stars/MaaAssistantArknights/MaaAssistantArknights?style=social&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;MAA 的意思是 MAA Assistant Arknights&lt;/p&gt; &#xA; &lt;p&gt;一款明日方舟游戏小助手&lt;/p&gt; &#xA; &lt;p&gt;基于图像识别技术，一键完成全部日常任务！&lt;/p&gt; &#xA; &lt;p&gt;绝赞更新中 ✿✿ヽ(°▽°)ノ✿&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;亮点功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;刷理智，掉落识别及上传 &lt;a href=&#34;https://penguin-stats.cn/&#34;&gt;企鹅物流&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;智能基建换班，自动计算干员效率，单设施内最优解&lt;/li&gt; &#xA; &lt;li&gt;自动公招，可选使用加急许可，一次全部刷完&lt;/li&gt; &#xA; &lt;li&gt;访问好友、收取信用及购物、领取日常奖励等。一键全日常自动长草！&lt;/li&gt; &#xA; &lt;li&gt;肉鸽全自动刷源石锭和蜡烛，自动识别干员及练度&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;新功能！导入作业 JSON 文件，自动抄作业！&lt;/strong&gt; &lt;a href=&#34;https://www.bilibili.com/video/BV14u411673q/&#34;&gt;视频演示&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;话不多说，看图！&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/18511905/148376809-a80537b7-5e97-4978-959e-afada28c03c3.png&#34; alt=&#34;image&#34;&gt;&lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/18511905/152695664-382dc0cd-de6c-4012-890f-456f697e8724.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;下载地址&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaAssistantArknights/releases/latest&#34;&gt;稳定版&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaAssistantArknights/releases&#34;&gt;测试版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;使用说明&lt;/h2&gt; &#xA;&lt;h3&gt;基本说明&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;请根据 &lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E6%A8%A1%E6%8B%9F%E5%99%A8%E6%94%AF%E6%8C%81.md&#34;&gt;模拟器支持情况&lt;/a&gt;，进行对应的操作。&lt;/li&gt; &#xA; &lt;li&gt;解压压缩包，到 &lt;strong&gt;没有中文或特殊符号&lt;/strong&gt; 的文件夹路径。&lt;/li&gt; &#xA; &lt;li&gt;开始运行后，除 &lt;code&gt;自动关机&lt;/code&gt; 外，所有设置均不可再修改。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;目前仅对 &lt;code&gt;16:9&lt;/code&gt; 分辨率支持较好，最低支持 &lt;code&gt;1280 * 720&lt;/code&gt;，更高不限。非 &lt;code&gt;16:9&lt;/code&gt; 分辨率可能会有奇奇怪怪的问题，正在进一步适配中_(:з」∠)_&lt;/p&gt; &#xA;&lt;p&gt;更多使用说明请参考 &lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D.md&#34;&gt;详细介绍&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;常见问题&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;软件一打开就闪退&lt;/li&gt; &#xA; &lt;li&gt;连接错误、不知道 adb 路径怎么填写&lt;/li&gt; &#xA; &lt;li&gt;识别错误/任务开始后一直不动、没有反应&lt;/li&gt; &#xA; &lt;li&gt;如何连接自定义端口&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;请参考 &lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.md&#34;&gt;常见问题&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;主要关联项目&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;全新 GUI: &lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaAsstElectronUI&#34;&gt;MaaAsstElectronUI&lt;/a&gt; （正在开发中，欢迎加入！）&lt;/li&gt; &#xA; &lt;li&gt;更新服务器: &lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaDownloadServer&#34;&gt;MaaDownloadServer&lt;/a&gt; （正在开发中，欢迎加入！）&lt;/li&gt; &#xA; &lt;li&gt;自动战斗作业服务器: &lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaCopilotServer&#34;&gt;MaaCopilotServer&lt;/a&gt; （正在开发中，欢迎加入！）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;致谢&lt;/h2&gt; &#xA;&lt;h3&gt;开源库&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;图像识别库：&lt;a href=&#34;https://github.com/opencv/opencv.git&#34;&gt;opencv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;文字识别库：&lt;a href=&#34;https://github.com/DayBreak-u/chineseocr_lite.git&#34;&gt;chineseocr_lite&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;文字识别库：&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR&#34;&gt;PaddleOCR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;关卡掉落识别：&lt;a href=&#34;https://github.com/penguin-statistics/recognizer&#34;&gt;企鹅物流识别&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;地图格子识别：&lt;a href=&#34;https://github.com/yuanyan3060/Arknights-Tile-Pos&#34;&gt;Arknights-Tile-Pos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C++ JSON库：&lt;a href=&#34;https://github.com/MistEO/meojson.git&#34;&gt;meojson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C++ 运算符解析器：&lt;a href=&#34;https://github.com/kimwalisch/calculator&#34;&gt;calculator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C++ base64编解码：&lt;a href=&#34;https://github.com/ReneNyffenegger/cpp-base64&#34;&gt;cpp-base64&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C++ 解压压缩库：&lt;a href=&#34;https://github.com/madler/zlib&#34;&gt;zlib&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C++ Gzip封装：&lt;a href=&#34;https://github.com/mapbox/gzip-hpp&#34;&gt;gzip-hpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WPF MVVW框架：&lt;a href=&#34;https://github.com/canton7/Stylet&#34;&gt;Stylet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WPF控件库：&lt;a href=&#34;https://github.com/HandyOrg/HandyControl&#34;&gt;HandyControl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C# JSON库: &lt;a href=&#34;https://github.com/JamesNK/Newtonsoft.Json&#34;&gt;Newtonsoft.Json&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;下载器：&lt;a href=&#34;https://github.com/aria2/aria2&#34;&gt;aria2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;数据源&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;公开招募数据：&lt;a href=&#34;https://www.bigfun.cn/tools/aktools/hr&#34;&gt;明日方舟工具箱&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;干员及基建数据：&lt;a href=&#34;http://prts.wiki/&#34;&gt;PRTS明日方舟中文WIKI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;关卡数据：&lt;a href=&#34;https://penguin-stats.cn/&#34;&gt;企鹅物流数据统计&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;材料数据：&lt;a href=&#34;https://github.com/yuanyan3060/Arknights-Bot-Resource&#34;&gt;明日方舟bot常用素材&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;贡献/参与者&lt;/h3&gt; &#xA;&lt;p&gt;感谢所有参与到开发/测试中的朋友们，是大家的帮助让 MAA 越来越好！ (*´▽｀)ノノ&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaAssistantArknights/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contributors-img.web.app/image?repo=MaaAssistantArknights/MaaAssistantArknights&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;开发相关&lt;/h2&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;直接使用 Visual Studio 2019 &lt;del&gt;或更高版本&lt;/del&gt; 打开 &lt;code&gt;MeoAssistantArknights.sln&lt;/code&gt; 即可，所有环境都是配置好的&lt;/p&gt; &#xA;&lt;h3&gt;Linux | macOS&lt;/h3&gt; &#xA;&lt;p&gt;请参考 &lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/Linux%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B.md&#34;&gt;Linux 编译教程&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;API&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/include/AsstCaller.h&#34;&gt;C 接口&lt;/a&gt;：&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/tools/TestCaller/main.cpp&#34;&gt;集成示例&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/src/Python/asst.py&#34;&gt;Python 接口&lt;/a&gt;：&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/src/Python/sample.py&#34;&gt;集成示例&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/src/Golang/maa/&#34;&gt;Golang 接口&lt;/a&gt;：&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/src/Golang/cli.go&#34;&gt;集成示例&lt;/a&gt;（已停止维护 orz）&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/src/dart/&#34;&gt;Dart 接口&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/src/Java/Maaj&#34;&gt;Java 接口&lt;/a&gt;：&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/src/Java/Maaj/src/main/java/com/iguigui/maaj/MaaJavaSample.java&#34;&gt;集成示例&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E9%9B%86%E6%88%90%E6%96%87%E6%A1%A3.md&#34;&gt;集成文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E5%9B%9E%E8%B0%83%E6%B6%88%E6%81%AF%E5%8D%8F%E8%AE%AE.md&#34;&gt;回调消息协议&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E4%BB%BB%E5%8A%A1%E6%B5%81%E7%A8%8B%E5%8D%8F%E8%AE%AE.md&#34;&gt;任务流程协议&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E6%88%98%E6%96%97%E6%B5%81%E7%A8%8B%E5%8D%8F%E8%AE%AE.md&#34;&gt;自动抄作业协议&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;对连 Git 都不熟悉的超级萌新，请看&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E5%86%99%E7%BB%99%E8%90%8C%E6%96%B0%E7%9A%84%E5%8F%91%E7%94%B5%E5%85%A8%E6%B5%81%E7%A8%8B.md&#34;&gt;写给萌新的发电全流程&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;声明&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本软件 logo 并非使用 AGPL 3.0 协议开源，画师 &lt;a href=&#34;https://weibo.com/u/3251357314&#34;&gt;耗毛&lt;/a&gt; 及软件全体开发者保留所有权利。不得以 AGPL 3.0 协议已授权为由在未经授权的情况下使用本软件 logo, 不得在未经授权的情况下将本软件 logo 用于任何商业用途。&lt;/li&gt; &#xA; &lt;li&gt;本软件开源、免费，仅供学习交流使用。若您遇到商家使用本软件进行代练并收费，可能是设备与时间等费用，产生的问题及后果与本软件无关。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;广告&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://live.bilibili.com/2808861&#34;&gt;B 站直播间&lt;/a&gt;：每晚直播敲代码，近期很长一段时间应该都是在写本软件~&lt;br&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=ypbzXcA2&#34;&gt;技术交流 &amp;amp; 吹水群&lt;/a&gt;：内卷地狱！（明日方舟弱相关）&lt;br&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=1giyMpPb&#34;&gt;自动战斗 JSON 作业分享群&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=JM9oCk3C&#34;&gt;开发者群&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;如果觉得软件对你有帮助，帮忙点个 Star 吧！~（网页最上方右上角的小星星），这就是对我们最大的支持了！&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>scylladb/seastar</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/scylladb/seastar</id>
    <link href="https://github.com/scylladb/seastar" rel="alternate"></link>
    <summary type="html">&lt;p&gt;High performance server-side application framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Seastar&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/scylladb/seastar&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/scylladb/seastar.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/scylladb/seastar/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/scylladb/seastar.svg?label=version&amp;amp;colorB=green&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/scylladb/seastar/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/scylladb/seastar.svg?sanitize=true&#34; alt=&#34;License: Apache2&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/scylladb/seastar/labels/n00b&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/scylladb/seastar/n00b.svg?colorB=green&#34; alt=&#34;n00b issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;SeaStar is an event-driven framework allowing you to write non-blocking, asynchronous code in a relatively straightforward manner (once understood). It is based on &lt;a href=&#34;http://en.wikipedia.org/wiki/Futures_and_promises&#34;&gt;futures&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building Seastar&lt;/h2&gt; &#xA;&lt;p&gt;For more details and alternative work-flows, read &lt;a href=&#34;https://raw.githubusercontent.com/scylladb/seastar/master/HACKING.md&#34;&gt;HACKING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Assuming that you would like to use system packages (RPMs or DEBs) for Seastar&#39;s dependencies, first install them:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo ./install-dependencies.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;then configure (in &#34;release&#34; mode):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./configure.py --mode=release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;then compile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ninja -C build/release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re missing a dependency of Seastar, then it is possible to have the configuration process fetch a version of the dependency locally for development.&lt;/p&gt; &#xA;&lt;p&gt;For example, to fetch &lt;code&gt;fmt&lt;/code&gt; locally, configure Seastar like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./configure.py --mode=dev --cook fmt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;--cook&lt;/code&gt; can be repeated many times for selecting multiple dependencies.&lt;/p&gt; &#xA;&lt;h2&gt;Build modes&lt;/h2&gt; &#xA;&lt;p&gt;The configure.py script is a wrapper around cmake. The --mode argument maps to CMAKE_BUILD_TYPE, and supports the following modes&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;CMake mode&lt;/th&gt; &#xA;   &lt;th&gt;Debug info&lt;/th&gt; &#xA;   &lt;th&gt;Optimi­zations&lt;/th&gt; &#xA;   &lt;th&gt;Sanitizers&lt;/th&gt; &#xA;   &lt;th&gt;Allocator&lt;/th&gt; &#xA;   &lt;th&gt;Checks&lt;/th&gt; &#xA;   &lt;th&gt;Use for&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;debug&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-O0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ASAN, UBSAN&lt;/td&gt; &#xA;   &lt;td&gt;System&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;gdb&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;release&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RelWithDebInfo&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-O3&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;Seastar&lt;/td&gt; &#xA;   &lt;td&gt;Asserts&lt;/td&gt; &#xA;   &lt;td&gt;production&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dev&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Dev&lt;/code&gt; (Custom)&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-O1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;None&lt;/td&gt; &#xA;   &lt;td&gt;Seastar&lt;/td&gt; &#xA;   &lt;td&gt;Asserts&lt;/td&gt; &#xA;   &lt;td&gt;build and test cycle&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sanitize&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Sanitize&lt;/code&gt; (Custom)&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-Os&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ASAN, UBSAN&lt;/td&gt; &#xA;   &lt;td&gt;System&lt;/td&gt; &#xA;   &lt;td&gt;All&lt;/td&gt; &#xA;   &lt;td&gt;second level of tests, track down bugs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note that seastar is more sensitive to allocators and optimizations than usual. A quick rule of the thumb of the relative performances is that release is 2 times faster than dev, 150 times faster than sanitize and 300 times faster than debug.&lt;/p&gt; &#xA;&lt;h2&gt;Using Seastar from its build directory (without installation)&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s possible to consume Seastar directly from its build directory with CMake or &lt;code&gt;pkg-config&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;ll assume that the Seastar repository is located in a directory at &lt;code&gt;$seastar_dir&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Via &lt;code&gt;pkg-config&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ g++ my_app.cc $(pkg-config --libs --cflags --static $seastar_dir/build/release/seastar.pc) -o my_app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and with CMake using the &lt;code&gt;Seastar&lt;/code&gt; package:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;CMakeLists.txt&lt;/code&gt; for &lt;code&gt;my_app&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;find_package (Seastar REQUIRED)&#xA;&#xA;add_executable (my_app&#xA;  my_app.cc)&#xA;  &#xA;target_link_libraries (my_app&#xA;  Seastar::seastar)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mkdir $my_app_dir/build&#xA;$ cd $my_app_dir/build&#xA;$ cmake -DCMAKE_PREFIX_PATH=&#34;$seastar_dir/build/release;$seastar_dir/build/release/_cooking/installed&#34; -DCMAKE_MODULE_PATH=$seastar_dir/cmake $my_app_dir&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; values ensure that CMake can locate Seastar and its compiled submodules. The &lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt; value ensures that CMake can uses Seastar&#39;s CMake scripts for locating its dependencies.&lt;/p&gt; &#xA;&lt;h2&gt;Using an installed Seastar&lt;/h2&gt; &#xA;&lt;p&gt;You can also consume Seastar after it has been installed to the file-system.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Seastar works with a customized version of DPDK, so by default builds and installs the DPDK submodule to &lt;code&gt;$build_dir/_cooking/installed&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;First, configure the installation path:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./configure.py --mode=release --prefix=/usr/local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;then run the &lt;code&gt;install&lt;/code&gt; target:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ninja -C build/release install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;then consume it from &lt;code&gt;pkg-config&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ g++ my_app.cc $(pkg-config --libs --cflags --static seastar) -o my_app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or consume it with the same &lt;code&gt;CMakeLists.txt&lt;/code&gt; as before but with a simpler CMake invocation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cmake ..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(If Seastar has not been installed to a &#34;standard&#34; location like &lt;code&gt;/usr&lt;/code&gt; or &lt;code&gt;/usr/local&lt;/code&gt;, then you can invoke CMake with &lt;code&gt;-DCMAKE_PREFIX_PATH=$my_install_root&lt;/code&gt;.)&lt;/p&gt; &#xA;&lt;p&gt;There are also instructions for building on any host that supports &lt;a href=&#34;https://raw.githubusercontent.com/scylladb/seastar/master/doc/building-docker.md&#34;&gt;Docker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Use of the &lt;a href=&#34;http://dpdk.org&#34;&gt;DPDK&lt;/a&gt; is &lt;a href=&#34;https://raw.githubusercontent.com/scylladb/seastar/master/doc/building-dpdk.md&#34;&gt;optional&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Seastar&#39;s C++ dialect: C++17 or C++20&lt;/h4&gt; &#xA;&lt;p&gt;Seastar supports both C++17, and C++20. The build defaults to the latest dialect supported by your compiler, but can be explicitly selected with the &lt;code&gt;--c++-dialect&lt;/code&gt; configure option, e.g., &lt;code&gt;--c++-dialect=gnu++17&lt;/code&gt;, or if using CMake directly, by setting on the &lt;code&gt;Seastar_CXX_DIALECT&lt;/code&gt; CMake variable.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/scylladb/seastar/master/doc/compatibility.md&#34;&gt;compatibity statement&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;There is a &lt;a href=&#34;https://raw.githubusercontent.com/scylladb/seastar/master/doc/mini-tutorial.md&#34;&gt;mini tutorial&lt;/a&gt; and a &lt;a href=&#34;https://raw.githubusercontent.com/scylladb/seastar/master/doc/tutorial.md&#34;&gt;more comprehensive one&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The documentation is available on the &lt;a href=&#34;http://docs.seastar.io/master/index.html&#34;&gt;web&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;p&gt;Ask questions and post patches on the development mailing list. Subscription information and archives are available &lt;a href=&#34;https://groups.google.com/forum/#!forum/seastar-dev&#34;&gt;here&lt;/a&gt;, or just send an email to &lt;a href=&#34;mailto:seastar-dev@googlegroups.com&#34;&gt;seastar-dev@googlegroups.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Information can be found on the main &lt;a href=&#34;http://seastar.io&#34;&gt;project website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;File bug reports on the project &lt;a href=&#34;https://github.com/scylladb/seastar/issues&#34;&gt;issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;The Native TCP/IP Stack&lt;/h2&gt; &#xA;&lt;p&gt;Seastar comes with its own &lt;a href=&#34;https://raw.githubusercontent.com/scylladb/seastar/master/doc/native-stack.md&#34;&gt;userspace TCP/IP stack&lt;/a&gt; for better performance.&lt;/p&gt; &#xA;&lt;h2&gt;Recommended hardware configuration for SeaStar&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CPUs - As much as you need. SeaStar is highly friendly for multi-core and NUMA&lt;/li&gt; &#xA; &lt;li&gt;NICs - As fast as possible, we recommend 10G or 40G cards. It&#39;s possible to use 1G too but you may be limited by their capacity. In addition, the more hardware queue per cpu the better for SeaStar. Otherwise we have to emulate that in software.&lt;/li&gt; &#xA; &lt;li&gt;Disks - Fast SSDs with high number of IOPS.&lt;/li&gt; &#xA; &lt;li&gt;Client machines - Usually a single client machine can&#39;t load our servers. Both memaslap (memcached) and WRK (httpd) cannot over load their matching server counter parts. We recommend running the client on different machine than the servers and use several of them.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Projects using Seastar&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cpv-project/cpv-cql-driver&#34;&gt;cpv-cql-driver&lt;/a&gt;: C++ driver for Cassandra/Scylla based on seastar framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cpv-project/cpv-framework&#34;&gt;cpv-framework&lt;/a&gt;: A web framework written in c++ based on seastar framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vectorized.io/&#34;&gt;redpanda&lt;/a&gt;: A Kafka replacement for mission critical systems&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/scylladb/scylla&#34;&gt;Scylla&lt;/a&gt;: A fast and reliable NoSQL data store compatible with Cassandra and DynamoDB&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/smfrpc/smf&#34;&gt;smf&lt;/a&gt;: The fastest RPC in the West&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>godotengine/godot</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/godotengine/godot</id>
    <link href="https://github.com/godotengine/godot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Godot Engine – Multi-platform 2D and 3D game engine&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Godot Engine&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://godotengine.org&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/godotengine/godot/master/logo_outlined.svg?sanitize=true&#34; width=&#34;400&#34; alt=&#34;Godot Engine logo&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;2D and 3D cross-platform game engine&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://godotengine.org&#34;&gt;Godot Engine&lt;/a&gt; is a feature-packed, cross-platform game engine to create 2D and 3D games from a unified interface.&lt;/strong&gt; It provides a comprehensive set of &lt;a href=&#34;https://godotengine.org/features&#34;&gt;common tools&lt;/a&gt;, so that users can focus on making games without having to reinvent the wheel. Games can be exported with one click to a number of platforms, including the major desktop platforms (Linux, macOS, Windows), mobile platforms (Android, iOS), as well as Web-based platforms (HTML5) and &lt;a href=&#34;https://docs.godotengine.org/en/latest/tutorials/platform/consoles.html&#34;&gt;consoles&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Free, open source and community-driven&lt;/h2&gt; &#xA;&lt;p&gt;Godot is completely free and open source under the very permissive &lt;a href=&#34;https://godotengine.org/license&#34;&gt;MIT license&lt;/a&gt;. No strings attached, no royalties, nothing. The users&#39; games are theirs, down to the last line of engine code. Godot&#39;s development is fully independent and community-driven, empowering users to help shape their engine to match their expectations. It is supported by the &lt;a href=&#34;https://sfconservancy.org/&#34;&gt;Software Freedom Conservancy&lt;/a&gt; not-for-profit.&lt;/p&gt; &#xA;&lt;p&gt;Before being open sourced in &lt;a href=&#34;https://github.com/godotengine/godot/commit/0b806ee0fc9097fa7bda7ac0109191c9c5e0a1ac&#34;&gt;February 2014&lt;/a&gt;, Godot had been developed by &lt;a href=&#34;https://github.com/reduz&#34;&gt;Juan Linietsky&lt;/a&gt; and &lt;a href=&#34;https://github.com/punto-&#34;&gt;Ariel Manzur&lt;/a&gt; (both still maintaining the project) for several years as an in-house engine, used to publish several work-for-hire titles.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/godotengine/godot-design/master/screenshots/editor_tps_demo_1920x1080.jpg&#34; alt=&#34;Screenshot of a 3D scene in the Godot Engine editor&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting the engine&lt;/h2&gt; &#xA;&lt;h3&gt;Binary downloads&lt;/h3&gt; &#xA;&lt;p&gt;Official binaries for the Godot editor and the export templates can be found &lt;a href=&#34;https://godotengine.org/download&#34;&gt;on the homepage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Compiling from source&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.godotengine.org/en/latest/development/compiling/&#34;&gt;See the official docs&lt;/a&gt; for compilation instructions for every supported platform.&lt;/p&gt; &#xA;&lt;h2&gt;Community and contributing&lt;/h2&gt; &#xA;&lt;p&gt;Godot is not only an engine but an ever-growing community of users and engine developers. The main community channels are listed &lt;a href=&#34;https://godotengine.org/community&#34;&gt;on the homepage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The best way to get in touch with the core engine developers is to join the &lt;a href=&#34;https://chat.godotengine.org&#34;&gt;Godot Contributors Chat&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To get started contributing to the project, see the &lt;a href=&#34;https://raw.githubusercontent.com/godotengine/godot/master/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation and demos&lt;/h2&gt; &#xA;&lt;p&gt;The official documentation is hosted on &lt;a href=&#34;https://docs.godotengine.org&#34;&gt;ReadTheDocs&lt;/a&gt;. It is maintained by the Godot community in its own &lt;a href=&#34;https://github.com/godotengine/godot-docs&#34;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://docs.godotengine.org/en/latest/classes/&#34;&gt;class reference&lt;/a&gt; is also accessible from the Godot editor.&lt;/p&gt; &#xA;&lt;p&gt;We also maintain official demos in their own &lt;a href=&#34;https://github.com/godotengine/godot-demo-projects&#34;&gt;GitHub repository&lt;/a&gt; as well as a list of &lt;a href=&#34;https://github.com/godotengine/awesome-godot&#34;&gt;awesome Godot community resources&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There are also a number of other &lt;a href=&#34;https://docs.godotengine.org/en/latest/community/tutorials.html&#34;&gt;learning resources&lt;/a&gt; provided by the community, such as text and video tutorials, demos, etc. Consult the &lt;a href=&#34;https://godotengine.org/community&#34;&gt;community channels&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.codetriage.com/godotengine/godot&#34;&gt;&lt;img src=&#34;https://www.codetriage.com/godotengine/godot/badges/users.svg?sanitize=true&#34; alt=&#34;Code Triagers Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hosted.weblate.org/engage/godot-engine/?utm_source=widget&#34;&gt;&lt;img src=&#34;https://hosted.weblate.org/widgets/godot-engine/-/godot/svg-badge.svg?sanitize=true&#34; alt=&#34;Translate on Weblate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/godotengine/godot/alerts&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/alerts/g/godotengine/godot.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Total alerts on LGTM&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.tickgit.com/browse?repo=github.com/godotengine/godot&#34;&gt;&lt;img src=&#34;https://badgen.net/https/api.tickgit.com/badgen/github.com/godotengine/godot&#34; alt=&#34;TODOs&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ValveSoftware/openvr</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/ValveSoftware/openvr</id>
    <link href="https://github.com/ValveSoftware/openvr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenVR SDK&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;OpenVR SDK&lt;/h2&gt; &#xA;&lt;p&gt;OpenVR is an API and runtime that allows access to VR hardware from multiple vendors without requiring that applications have specific knowledge of the hardware they are targeting. This repository is an SDK that contains the API and samples. The runtime is under SteamVR in Tools on Steam.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;Documentation for the API is available on the &lt;a href=&#34;https://github.com/ValveSoftware/openvr/wiki/API-Documentation&#34;&gt;GitHub Wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;More information on OpenVR and SteamVR can be found on &lt;a href=&#34;http://steamvr.com&#34;&gt;http://steamvr.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>android/ndk-samples</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/android/ndk-samples</id>
    <link href="https://github.com/android/ndk-samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Android NDK samples with Android Studio&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NDK Samples &lt;a href=&#34;https://github.com/android/ndk-samples/actions&#34;&gt;&lt;img src=&#34;https://github.com/android/ndk-samples/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains &lt;a href=&#34;https://developer.android.com/ndk&#34;&gt;Android NDK&lt;/a&gt; samples with Android Studio &lt;a href=&#34;https://www.youtube.com/watch?v=f7ihSQ44WO0&amp;amp;feature=youtu.be&#34;&gt;C++ integration&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;These samples use the new &lt;a href=&#34;https://developer.android.com/studio/projects/add-native-code.html&#34;&gt;CMake Android plugin&lt;/a&gt; with C++ support.&lt;/p&gt; &#xA;&lt;p&gt;Samples could also be built with other build systems:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;for ndk-build with Android Studio, refer to directory &lt;a href=&#34;https://github.com/googlesamples/android-ndk/tree/master/other-builds/ndkbuild&#34;&gt;other-builds/ndkbuild&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;for gradle-experimental plugin, refer to directory other-builds/experimental. Note that gradle-experimental does not work with unified headers yet: use NDK version up to r15 and Android Studio up to version 2.3. When starting new project, please use CMake or ndk-build plugin.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additional Android Studio samples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/playgameservices/cpp-android-basic-samples&#34;&gt;Google Play Game Samples with Android Studio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/googlesamples/android-vulkan-tutorials&#34;&gt;Google Android Vulkan Tutorials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/googlesamples/vulkan-basic-samples&#34;&gt;Android Vulkan API Basic Samples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/googlesamples/android-audio-high-performance&#34;&gt;Android High Performance Audio&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Documentation&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/studio/projects/add-native-code.html&#34;&gt;Add Native Code to Your Project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/android/ndk-samples/wiki/Configure-NDK-Path&#34;&gt;Configure NDK for Android Studio/Gradle Plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/ndk/guides/cmake.html&#34;&gt;CMake for NDK&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Known Issues&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For Studio related issues, refer to &lt;a href=&#34;http://tools.android.com/knownissues&#34;&gt;Android Studio known issues&lt;/a&gt; page&lt;/li&gt; &#xA; &lt;li&gt;For NDK issues, refer to &lt;a href=&#34;https://github.com/android/ndk/issues&#34;&gt;ndk issues&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For samples using &lt;code&gt;Android.mk&lt;/code&gt; build system with &lt;code&gt;ndk-build&lt;/code&gt; see the &lt;a href=&#34;https://github.com/googlesamples/android-ndk/tree/android-mk&#34;&gt;android-mk&lt;/a&gt; branch.&lt;/p&gt; &#xA;&lt;h2&gt;Build Steps&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;With Android Studio: &#34;Open An Existing Android Studio Project&#34; or &#34;File&#34; &amp;gt; &#34;Open&#34;, then navigate to &amp;amp; select project&#39;s build.gradle file.&lt;/li&gt; &#xA; &lt;li&gt;On Command Line: set up ANDROID_HOME and ANDROID_NDK_HOME to your SDK and NDK path, cd to individual sample dir, and do &#34;gradlew assembleDebug&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;For any issues you found in these samples, please&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;submit patches with pull requests, see &lt;a href=&#34;https://raw.githubusercontent.com/android/ndk-samples/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more details, or&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/googlesamples/android-ndk/issues/new&#34;&gt;create bugs&lt;/a&gt; here.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For Android NDK generic questions, please ask on &lt;a href=&#34;https://stackoverflow.com/questions/tagged/android&#34;&gt;Stack Overflow&lt;/a&gt;, Android teams are periodically monitoring questions there.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2018 The Android Open Source Project, Inc.&lt;/p&gt; &#xA;&lt;p&gt;Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/ndk-samples/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rethinkdb/rethinkdb</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/rethinkdb/rethinkdb</id>
    <link href="https://github.com/rethinkdb/rethinkdb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The open-source database for the realtime web.&lt;/p&gt;&lt;hr&gt;&lt;img style=&#34;width:100%;&#34; src=&#34;https://raw.githubusercontent.com/rethinkdb/rethinkdb/v2.4.x/github-banner.png&#34;&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://www.rethinkdb.com&#34;&gt;RethinkDB&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/3038&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/3038/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codacy.com/app/RethinkDB/rethinkdb?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=rethinkdb/rethinkdb&amp;amp;utm_campaign=Badge_Grade&#34;&gt;&lt;img src=&#34;https://api.codacy.com/project/badge/Grade/6e0fed97691941b1aa3fc5098bfc9385&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is RethinkDB?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Open-source&lt;/strong&gt; database for building realtime web applications&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;NoSQL&lt;/strong&gt; database that stores schemaless JSON documents&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Distributed&lt;/strong&gt; database that is easy to scale&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;High availability&lt;/strong&gt; database with automatic failover and robust fault tolerance&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;RethinkDB is the first open-source scalable database built for realtime applications. It exposes a new database access model, in which the developer can tell the database to continuously push updated query results to applications without polling for changes. RethinkDB allows developers to build scalable realtime apps in a fraction of the time with less effort.&lt;/p&gt; &#xA;&lt;p&gt;To learn more, check out &lt;a href=&#34;https://rethinkdb.com&#34;&gt;rethinkdb.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Not sure what types of projects RethinkDB can help you build? Here are a few examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build a &lt;a href=&#34;https://rethinkdb.com/blog/rethinkdb-pubnub/&#34;&gt;realtime liveblog&lt;/a&gt; with RethinkDB and PubNub&lt;/li&gt; &#xA; &lt;li&gt;Create a &lt;a href=&#34;https://www.youtube.com/watch?v=pdPRp3UxL_s&#34;&gt;collaborative photo sharing whiteboard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build an &lt;a href=&#34;https://rethinkdb.com/blog/go-irc-bot/&#34;&gt;IRC bot in Go&lt;/a&gt; with RethinkDB changefeeds&lt;/li&gt; &#xA; &lt;li&gt;Look at &lt;a href=&#34;https://rethinkdb.com/blog/cats-of-instagram/&#34;&gt;cats on Instagram in realtime&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Watch &lt;a href=&#34;https://www.youtube.com/watch?v=Nb_UzRYDB40&#34;&gt;how Platzi uses RethinkDB&lt;/a&gt; to educate&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;For a thirty-second RethinkDB quickstart, check out &lt;a href=&#34;https://www.rethinkdb.com/docs/quickstart&#34;&gt;rethinkdb.com/docs/quickstart&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Or, get started right away with our ten-minute guide in these languages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rethinkdb.com/docs/guide/javascript/&#34;&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rethinkdb.com/docs/guide/python/&#34;&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rethinkdb.com/docs/guide/ruby/&#34;&gt;&lt;strong&gt;Ruby&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rethinkdb.com/docs/guide/java/&#34;&gt;&lt;strong&gt;Java&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Besides our four official drivers, we also have many &lt;a href=&#34;https://rethinkdb.com/docs/install-drivers/&#34;&gt;third-party drivers&lt;/a&gt; supported by the RethinkDB community. Here are a few of them:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;C#/.NET:&lt;/strong&gt; &lt;a href=&#34;https://github.com/bchavez/RethinkDb.Driver&#34;&gt;RethinkDb.Driver&lt;/a&gt;, &lt;a href=&#34;https://github.com/mfenniak/rethinkdb-net&#34;&gt;rethinkdb-net&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;C++:&lt;/strong&gt; &lt;a href=&#34;https://github.com/AtnNn/librethinkdbxx&#34;&gt;librethinkdbxx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Clojure:&lt;/strong&gt; &lt;a href=&#34;https://github.com/apa512/clj-rethinkdb&#34;&gt;clj-rethinkdb&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Elixir:&lt;/strong&gt; &lt;a href=&#34;https://github.com/rethinkdb/rethinkdb-elixir&#34;&gt;rethinkdb-elixir&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Go:&lt;/strong&gt; &lt;a href=&#34;https://github.com/dancannon/gorethink&#34;&gt;GoRethink&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Haskell:&lt;/strong&gt; &lt;a href=&#34;https://github.com/atnnn/haskell-rethinkdb&#34;&gt;haskell-rethinkdb&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;PHP:&lt;/strong&gt; &lt;a href=&#34;https://github.com/tbolier/php-rethink-ql&#34;&gt;php-rethink-ql&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Rust:&lt;/strong&gt; &lt;a href=&#34;https://github.com/rust-rethinkdb/reql&#34;&gt;reql&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Scala:&lt;/strong&gt; &lt;a href=&#34;https://github.com/kclay/rethink-scala&#34;&gt;rethink-scala&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Looking to explore what else RethinkDB offers or the specifics of ReQL? Check out &lt;a href=&#34;https://rethinkdb.com/docs/&#34;&gt;our RethinkDB docs&lt;/a&gt; and &lt;a href=&#34;https://rethinkdb.com/api/&#34;&gt;ReQL API&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;First install some dependencies. For example, on Ubuntu or Debian:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install build-essential protobuf-compiler \&#xA;    # python \  # for older distros&#xA;    python3 python-is-python3 \&#xA;    libprotobuf-dev libcurl4-openssl-dev \&#xA;    libncurses5-dev libjemalloc-dev wget m4 g++ libssl-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generally, you will need&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GCC or Clang&lt;/li&gt; &#xA; &lt;li&gt;Protocol Buffers&lt;/li&gt; &#xA; &lt;li&gt;jemalloc&lt;/li&gt; &#xA; &lt;li&gt;Ncurses&lt;/li&gt; &#xA; &lt;li&gt;Python 2 or Python 3&lt;/li&gt; &#xA; &lt;li&gt;libcurl&lt;/li&gt; &#xA; &lt;li&gt;libcrypto (OpenSSL)&lt;/li&gt; &#xA; &lt;li&gt;libssl-dev&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then, to build:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./configure --allow-fetch&#xA;# or run ./configure --allow-fetch CXX=clang++&#xA;&#xA;make -j4&#xA;# or run make -j4 DEBUG=1&#xA;&#xA;sudo make install&#xA;# or run ./build/debug_clang/rethinkdb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Need help?&lt;/h2&gt; &#xA;&lt;p&gt;A great place to start is &lt;a href=&#34;https://rethinkdb.com/community&#34;&gt;rethinkdb.com/community&lt;/a&gt;. Here you can find out how to ask us questions, reach out to us, or &lt;a href=&#34;https://github.com/rethinkdb/rethinkdb/issues&#34;&gt;report an issue&lt;/a&gt;. You&#39;ll be able to find all the places we frequent online and at which conference or meetups you might be able to meet us next.&lt;/p&gt; &#xA;&lt;p&gt;If you need help right now, you can also find us &lt;a href=&#34;https://join.slack.com/t/rethinkdb/shared_invite/enQtNzAxOTUzNTk1NzMzLWY5ZTA0OTNmMWJiOWFmOGVhNTUxZjQzODQyZjIzNjgzZjdjZDFjNDg1NDY3MjFhYmNhOTY1MDVkNDgzMWZiZWM&#34;&gt;on Slack&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/rethinkdb&#34;&gt;Twitter&lt;/a&gt;, or IRC at &lt;a href=&#34;irc://chat.freenode.net/#rethinkdb&#34;&gt;#rethinkdb&lt;/a&gt; on Freenode.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;RethinkDB was built by a dedicated team, but it wouldn&#39;t have been possible without the support and contributions of hundreds of people from all over the world. We could use your help too! Check out our &lt;a href=&#34;https://raw.githubusercontent.com/rethinkdb/rethinkdb/v2.4.x/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; to get started.&lt;/p&gt; &#xA;&lt;h2&gt;Donors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cncf.io/&#34;&gt;CNCF&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.digitalocean.com/&#34;&gt;Digital Ocean&lt;/a&gt; provides infrastructure and servers needed for serving mission-critical sites like download.rethinkdb.com or update.rethinkdb.com&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.atlassian.com/&#34;&gt;Atlassian&lt;/a&gt; provides OSS license to be able to handle internal tickets like vulnerability issues&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.netlify.com/&#34;&gt;Netlify&lt;/a&gt; OSS license to be able to migrate rethinkdb.com&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dnsimple.com&#34;&gt;DNSimple&lt;/a&gt; provides DNS services for the RethinkDB project&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zerotier.com&#34;&gt;ZeroTier&lt;/a&gt; sponsored the development of per-table configurable write aggregation including the ability to set write delay to infinite to create a memory-only table (&lt;a href=&#34;https://github.com/rethinkdb/rethinkdb/pull/6392&#34;&gt;PR #6392&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;RethinkDB is licensed by the Linux Foundation under the open-source Apache 2.0 license. Portions of the software are licensed by Google and others and used with permission or subject to their respective license agreements.&lt;/p&gt; &#xA;&lt;h2&gt;Where&#39;s the changelog?&lt;/h2&gt; &#xA;&lt;p&gt;We keep &lt;a href=&#34;https://raw.githubusercontent.com/rethinkdb/rethinkdb/v2.4.x/NOTES.md&#34;&gt;a list of changes and feature explanations here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Tencent/ncnn</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/Tencent/ncnn</id>
    <link href="https://github.com/Tencent/ncnn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ncnn is a high-performance neural network inference framework optimized for the mobile platform&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Tencent/ncnn/master/images/256-ncnn.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ncnn&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/ncnn/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-BSD--3--Clause-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/ncnn/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/Tencent/ncnn/total.svg?sanitize=true&#34; alt=&#34;download&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/Tencent/ncnn&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/Tencent/ncnn/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/Tencent/ncnn/context:cpp&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/grade/cpp/g/Tencent/ncnn.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Language grade: C/C++&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ncnn is a high-performance neural network inference computing framework optimized for mobile platforms. ncnn is deeply considerate about deployment and uses on mobile phones from the beginning of design. ncnn does not have third party dependencies. It is cross-platform, and runs faster than all known open source frameworks on mobile phone cpu. Developers can easily deploy deep learning algorithm models to the mobile platform by using efficient ncnn implementation, create intelligent APPs, and bring the artificial intelligence to your fingertips. ncnn is currently being used in many Tencent applications, such as QQ, Qzone, WeChat, Pitu and so on.&lt;/p&gt; &#xA;&lt;p&gt;ncnn 是一个为手机端极致优化的高性能神经网络前向计算框架。ncnn 从设计之初深刻考虑手机端的部署和使用。无第三方依赖，跨平台，手机端 cpu 的速度快于目前所有已知的开源框架。基于 ncnn，开发者能够将深度学习算法轻松移植到手机端高效执行，开发出人工智能 APP，将 AI 带到你的指尖。ncnn 目前已在腾讯多款应用中使用，如 QQ，Qzone，微信，天天P图等。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;技术交流QQ群：637093648(超多大佬) 答案：卷卷卷卷卷 （已满）&lt;/h3&gt; &#xA;&lt;h3&gt;Pocky QQ群（MLIR YES!）: 677104663(超多大佬) 答案：multi-level intermediate representation&lt;/h3&gt; &#xA;&lt;h3&gt;Telegram Group &lt;a href=&#34;https://t.me/ncnnyes&#34;&gt;https://t.me/ncnnyes&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;Discord Channel &lt;a href=&#34;https://discord.gg/YRsxgmF&#34;&gt;https://discord.gg/YRsxgmF&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Current building status matrix&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;System&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;CPU (32bit)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;CPU (64bit)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;GPU (32bit)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;GPU (64bit)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Linux (GCC)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Alinux-x86-cpu-gcc&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/linux-x86-cpu-gcc&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Alinux-x64-cpu-gcc&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/linux-x64-cpu-gcc&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Alinux-x64-gpu-gcc&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/linux-x64-gpu-gcc&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Linux (Clang)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Alinux-x86-cpu-clang&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/linux-x86-cpu-clang&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Alinux-x64-cpu-clang&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/linux-x64-cpu-clang&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Alinux-x64-gpu-clang&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/linux-x64-gpu-clang&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Linux (ARM)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Alinux-arm-cpu-gcc&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/linux-arm-cpu-gcc&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Alinux-aarch64-cpu-gcc&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/linux-aarch64-cpu-gcc&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Linux (MIPS)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Alinux-mips-cpu-gcc&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/linux-mips-cpu-gcc&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Alinux-mips64-cpu-gcc&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/linux-mips64-cpu-gcc&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Linux (RISC-V)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Alinux-riscv64-cpu-gcc&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/linux-riscv64-cpu-gcc&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Linux (LoongArch)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Alinux-loongarch64-cpu-gcc&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/linux-loongarch64-cpu-gcc&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Windows&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Awindows-x86-cpu&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/windows-x86-cpu&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Awindows-x64-cpu&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/windows-x64-cpu&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Awindows-x64-gpu&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/windows-x64-gpu&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Windows (ARM)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Awindows-arm-cpu&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/windows-arm-cpu&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Awindows-arm64-cpu&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/windows-arm64-cpu&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;macOS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Amacos-x64-cpu&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/macos-x64-cpu&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Amacos-x64-gpu&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/macos-x64-gpu&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;macOS (ARM)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Amacos-arm64-cpu&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/macos-arm64-cpu&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Amacos-arm64-gpu&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/macos-arm64-gpu&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Android&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Aandroid-armv7-cpu&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/android-armv7-cpu&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Aandroid-armv8-cpu&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/android-armv8-cpu&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Aandroid-armv7-gpu&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/android-armv7-gpu&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Aandroid-armv8-gpu&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/android-armv8-gpu&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Android-x86&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Aandroid-x86-cpu&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/android-x86-cpu&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Aandroid-x64-cpu&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/android-x64-cpu&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Aandroid-x86-gpu&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/android-x86-gpu&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Aandroid-x64-gpu&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/android-x64-gpu&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;iOS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Aios-cpu&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/ios-cpu&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Aios-cpu&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/ios-cpu&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Aios-arm64-gpu&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/ios-arm64-gpu&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;iOS Simulator&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Aios-simulator&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/ios-simulator&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Aios-simulator&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/ios-simulator&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;WebAssembly&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Aweb-assembly&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/web-assembly&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;RISC-V GCC/Newlib&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Aelf-riscv32-cpu-gcc&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/elf-riscv32-cpu-gcc&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/actions?query=workflow%3Aelf-riscv64-cpu-gcc&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/Tencent/ncnn/elf-riscv64-cpu-gcc&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;—&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Support most commonly used CNN network&lt;/h3&gt; &#xA;&lt;h3&gt;支持大部分常用的 CNN 网络&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Classical CNN: &lt;a href=&#34;https://github.com/BVLC/caffe/wiki/Model-Zoo#models-used-by-the-vgg-team-in-ilsvrc-2014&#34;&gt;VGG&lt;/a&gt; &lt;a href=&#34;https://github.com/BVLC/caffe/tree/9b891540183ddc834a02b2bd81b31afae71b2153/models/bvlc_alexnet&#34;&gt;AlexNet&lt;/a&gt; &lt;a href=&#34;https://github.com/BVLC/caffe/tree/9b891540183ddc834a02b2bd81b31afae71b2153/models/bvlc_googlenet&#34;&gt;GoogleNet&lt;/a&gt; Inception ...&lt;/li&gt; &#xA; &lt;li&gt;Practical CNN: &lt;a href=&#34;https://github.com/tornadomeet/ResNet&#34;&gt;ResNet&lt;/a&gt; &lt;a href=&#34;https://github.com/liuzhuang13/DenseNet&#34;&gt;DenseNet&lt;/a&gt; &lt;a href=&#34;https://github.com/hujie-frank/SENet&#34;&gt;SENet&lt;/a&gt; &lt;a href=&#34;https://github.com/unsky/FPN&#34;&gt;FPN&lt;/a&gt; ...&lt;/li&gt; &#xA; &lt;li&gt;Light-weight CNN: &lt;a href=&#34;https://github.com/forresti/SqueezeNet&#34;&gt;SqueezeNet&lt;/a&gt; &lt;a href=&#34;https://github.com/tensorflow/models/raw/master/research/slim/nets/mobilenet_v1.md&#34;&gt;MobileNetV1&lt;/a&gt;/&lt;a href=&#34;https://github.com/tensorflow/models/raw/master/research/slim/nets/mobilenet/README.md&#34;&gt;V2/V3&lt;/a&gt; &lt;a href=&#34;https://github.com/farmingyard/ShuffleNet&#34;&gt;ShuffleNetV1&lt;/a&gt;/&lt;a href=&#34;https://github.com/opconty/keras-shufflenetV2&#34;&gt;V2&lt;/a&gt; &lt;a href=&#34;https://github.com/tensorflow/models/tree/master/research/slim/nets/nasnet&#34;&gt;MNasNet&lt;/a&gt; ...&lt;/li&gt; &#xA; &lt;li&gt;Face Detection: &lt;a href=&#34;https://github.com/ipazc/mtcnn&#34;&gt;MTCNN&lt;/a&gt; &lt;a href=&#34;https://github.com/biubug6/Pytorch_Retinaface&#34;&gt;RetinaFace&lt;/a&gt; &lt;a href=&#34;https://github.com/nihui/ncnn-android-scrfd&#34;&gt;scrfd&lt;/a&gt; ...&lt;/li&gt; &#xA; &lt;li&gt;Detection: &lt;a href=&#34;https://github.com/lzx1413/CAFFE_SSD&#34;&gt;VGG-SSD&lt;/a&gt; &lt;a href=&#34;https://github.com/chuanqi305/MobileNet-SSD&#34;&gt;MobileNet-SSD&lt;/a&gt; &lt;a href=&#34;https://github.com/chuanqi305/SqueezeNet-SSD&#34;&gt;SqueezeNet-SSD&lt;/a&gt; &lt;a href=&#34;https://github.com/chuanqi305/MobileNetv2-SSDLite&#34;&gt;MobileNetV2-SSDLite&lt;/a&gt; &lt;a href=&#34;https://github.com/XiaoyuHuang96/MobilenetV3SSDLite-tfkeras&#34;&gt;MobileNetV3-SSDLite&lt;/a&gt; ...&lt;/li&gt; &#xA; &lt;li&gt;Detection: &lt;a href=&#34;https://github.com/rbgirshick/py-faster-rcnn&#34;&gt;Faster-RCNN&lt;/a&gt; &lt;a href=&#34;https://github.com/daijifeng001/R-FCN&#34;&gt;R-FCN&lt;/a&gt; ...&lt;/li&gt; &#xA; &lt;li&gt;Detection: &lt;a href=&#34;https://github.com/longcw/yolo2-pytorch&#34;&gt;YOLOv2&lt;/a&gt; &lt;a href=&#34;https://github.com/ultralytics/yolov3&#34;&gt;YOLOv3&lt;/a&gt; &lt;a href=&#34;https://github.com/eric612/MobileNet-YOLO&#34;&gt;MobileNet-YOLOv3&lt;/a&gt; &lt;a href=&#34;https://github.com/Tianxiaomo/pytorch-YOLOv4&#34;&gt;YOLOv4&lt;/a&gt; &lt;a href=&#34;https://github.com/ultralytics/yolov5&#34;&gt;YOLOv5&lt;/a&gt; &lt;a href=&#34;https://github.com/Megvii-BaseDetection/YOLOX&#34;&gt;YOLOX&lt;/a&gt; ...&lt;/li&gt; &#xA; &lt;li&gt;Detection: &lt;a href=&#34;https://github.com/RangiLyu/nanodet&#34;&gt;NanoDet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Segmentation: &lt;a href=&#34;https://github.com/unsky/FPN&#34;&gt;FCN&lt;/a&gt; &lt;a href=&#34;https://github.com/hszhao/PSPNet&#34;&gt;PSPNet&lt;/a&gt; &lt;a href=&#34;https://github.com/zhixuhao/unet&#34;&gt;UNet&lt;/a&gt; &lt;a href=&#34;https://github.com/dbolya/yolact&#34;&gt;YOLACT&lt;/a&gt; ...&lt;/li&gt; &#xA; &lt;li&gt;Pose Estimation: &lt;a href=&#34;https://github.com/dog-qiuqiu/Ultralight-SimplePose&#34;&gt;SimplePose&lt;/a&gt; ...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;HowTo&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build&#34;&gt;how to build ncnn library&lt;/a&gt; on Linux / Windows / macOS / Raspberry Pi3 / Android / NVIDIA Jetson / iOS / WebAssembly / AllWinner D1 / Loongson 2K1000&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-linux&#34;&gt;Build for Linux / NVIDIA Jetson / Raspberry Pi3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-windows-x64-using-visual-studio-community-2017&#34;&gt;Build for Windows x64 using VS2017&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-macos&#34;&gt;Build for macOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-arm-cortex-a-family-with-cross-compiling&#34;&gt;Build for ARM Cortex-A family with cross-compiling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-hisilicon-platform-with-cross-compiling&#34;&gt;Build for Hisilicon platform with cross-compiling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-android&#34;&gt;Build for Android&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-ios-on-macos-with-xcode&#34;&gt;Build for iOS on macOS with xcode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-webassembly&#34;&gt;Build for WebAssembly&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-allwinner-d1&#34;&gt;Build for AllWinner D1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-loongson-2k1000&#34;&gt;Build for Loongson 2K1000&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-termux-on-android&#34;&gt;Build for termux on android&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/releases&#34;&gt;download prebuild binary package for android and ios&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/use-ncnn-with-alexnet&#34;&gt;use ncnn with alexnet&lt;/a&gt; with detailed steps, recommended for beginners :)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/use-ncnn-with-alexnet.zh&#34;&gt;ncnn 组件使用指北 alexnet&lt;/a&gt; 附带详细步骤，新人强烈推荐 :)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://netron.app&#34;&gt;use netron for ncnn model visualization&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://convertmodel.com/#outputFormat=ncnn&#34;&gt;out-of-the-box web model conversion&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/low-level-operation-api&#34;&gt;ncnn low-level operation api&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/param-and-model-file-structure&#34;&gt;ncnn param and model file spec&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/operation-param-weight-table&#34;&gt;ncnn operation param weight table&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/how-to-implement-custom-layer-step-by-step&#34;&gt;how to implement custom layer step by step&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;FAQ&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/FAQ-ncnn-throw-error&#34;&gt;ncnn throw error&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/FAQ-ncnn-produce-wrong-result&#34;&gt;ncnn produce wrong result&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Tencent/ncnn/wiki/FAQ-ncnn-vulkan&#34;&gt;ncnn vulkan&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports convolutional neural networks, supports multiple input and multi-branch structure, can calculate part of the branch&lt;/li&gt; &#xA; &lt;li&gt;No third-party library dependencies, does not rely on BLAS / NNPACK or any other computing framework&lt;/li&gt; &#xA; &lt;li&gt;Pure C++ implementation, cross-platform, supports android, ios and so on&lt;/li&gt; &#xA; &lt;li&gt;ARM NEON assembly level of careful optimization, calculation speed is extremely high&lt;/li&gt; &#xA; &lt;li&gt;Sophisticated memory management and data structure design, very low memory footprint&lt;/li&gt; &#xA; &lt;li&gt;Supports multi-core parallel computing acceleration, ARM big.LITTLE cpu scheduling optimization&lt;/li&gt; &#xA; &lt;li&gt;Supports GPU acceleration via the next-generation low-overhead vulkan api&lt;/li&gt; &#xA; &lt;li&gt;Extensible model design, supports 8bit quantization and half-precision floating point storage, can import caffe/pytorch/mxnet/onnx/darknet/keras/tensorflow(mlir) models&lt;/li&gt; &#xA; &lt;li&gt;Support direct memory zero copy reference load network model&lt;/li&gt; &#xA; &lt;li&gt;Can be registered with custom layer implementation and extended&lt;/li&gt; &#xA; &lt;li&gt;Well, it is strong, not afraid of being stuffed with 卷 QvQ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;功能概述&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持卷积神经网络，支持多输入和多分支结构，可计算部分分支&lt;/li&gt; &#xA; &lt;li&gt;无任何第三方库依赖，不依赖 BLAS/NNPACK 等计算框架&lt;/li&gt; &#xA; &lt;li&gt;纯 C++ 实现，跨平台，支持 android ios 等&lt;/li&gt; &#xA; &lt;li&gt;ARM NEON 汇编级良心优化，计算速度极快&lt;/li&gt; &#xA; &lt;li&gt;精细的内存管理和数据结构设计，内存占用极低&lt;/li&gt; &#xA; &lt;li&gt;支持多核并行计算加速，ARM big.LITTLE cpu 调度优化&lt;/li&gt; &#xA; &lt;li&gt;支持基于全新低消耗的 vulkan api GPU 加速&lt;/li&gt; &#xA; &lt;li&gt;可扩展的模型设计，支持 8bit &lt;a href=&#34;https://raw.githubusercontent.com/Tencent/ncnn/master/tools/quantize&#34;&gt;量化&lt;/a&gt; 和半精度浮点存储，可导入 caffe/pytorch/mxnet/onnx/darknet/keras/tensorflow(mlir) 模型&lt;/li&gt; &#xA; &lt;li&gt;支持直接内存零拷贝引用加载网络模型&lt;/li&gt; &#xA; &lt;li&gt;可注册自定义层实现并扩展&lt;/li&gt; &#xA; &lt;li&gt;恩，很强就是了，不怕被塞卷 QvQ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;supported platform matrix&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;✅ = known work and runs fast with good optimization&lt;/li&gt; &#xA; &lt;li&gt;✔️ = known work, but speed may not be fast enough&lt;/li&gt; &#xA; &lt;li&gt;❔ = shall work, not confirmed&lt;/li&gt; &#xA; &lt;li&gt;/ = not applied&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Windows&lt;/th&gt; &#xA;   &lt;th&gt;Linux&lt;/th&gt; &#xA;   &lt;th&gt;Android&lt;/th&gt; &#xA;   &lt;th&gt;macOS&lt;/th&gt; &#xA;   &lt;th&gt;iOS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;intel-cpu&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;intel-gpu&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;amd-cpu&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;amd-gpu&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nvidia-gpu&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;qcom-cpu&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;qcom-gpu&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;arm-cpu&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;arm-gpu&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;❔&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;apple-cpu&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;apple-gpu&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;   &lt;td&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Example project&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nihui/ncnn-android-squeezenet&#34;&gt;https://github.com/nihui/ncnn-android-squeezenet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nihui/ncnn-android-styletransfer&#34;&gt;https://github.com/nihui/ncnn-android-styletransfer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nihui/ncnn-android-mobilenetssd&#34;&gt;https://github.com/nihui/ncnn-android-mobilenetssd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/moli232777144/mtcnn_ncnn&#34;&gt;https://github.com/moli232777144/mtcnn_ncnn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nihui/ncnn-android-yolov5&#34;&gt;https://github.com/nihui/ncnn-android-yolov5&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nihui/ncnn-android-scrfd&#34;&gt;https://github.com/nihui/ncnn-android-scrfd&lt;/a&gt; 🤩&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/nihui/ncnn-assets/raw/master/20181217/ncnn-2.jpg&#34; width=&#34;360&#34; height=&#34;640&#34;&gt; &lt;img src=&#34;https://github.com/nihui/ncnn-assets/raw/master/20181217/4.jpg&#34; width=&#34;360&#34; height=&#34;640&#34;&gt; &lt;img src=&#34;https://github.com/nihui/ncnn-assets/raw/master/20181217/ncnn-33.jpg&#34; width=&#34;360&#34; height=&#34;640&#34;&gt; &lt;img src=&#34;https://github.com/nihui/ncnn-assets/raw/master/20181217/ncnn-m.png&#34; width=&#34;360&#34; height=&#34;640&#34;&gt; &lt;img src=&#34;https://github.com/nihui/ncnn-android-yolov5/raw/master/screenshot.jpg&#34; width=&#34;360&#34; height=&#34;800&#34;&gt; &lt;img src=&#34;https://github.com/nihui/ncnn-android-scrfd/raw/master/screenshot.jpg&#34; width=&#34;360&#34; height=&#34;800&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/ncnn/master/LICENSE.txt&#34;&gt;BSD 3 Clause&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Akebi-Group/Akebi-GC</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/Akebi-Group/Akebi-GC</id>
    <link href="https://github.com/Akebi-Group/Akebi-GC" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The great software for some game that exploiting anime girls (and boys).&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Akebi GC&lt;/h1&gt; The great software for some game that exploiting anime girls (and boys). &#xA;&lt;p&gt;In first week after 2.7 update cheat can be unstable. Please create issue, if you catch a crash after updating to 2.7.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Getting Started&lt;/h1&gt; &#xA;&lt;h3&gt;Building from source&lt;/h3&gt; &#xA;&lt;p&gt;It is reccomended to use &lt;a href=&#34;https://visualstudio.microsoft.com/&#34;&gt;Visual Studio 2022.&lt;/a&gt; As well as setting up &lt;strong&gt;&lt;code&gt;cheat-library&lt;/code&gt;&lt;/strong&gt; as startup project. &lt;strong&gt;The following is a recommended procedure, but others may be used.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone repository with &lt;code&gt;git clone --recurse-submodules https://github.com/Akebi-Group/Akebi-GC.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;Akebi-GC/akebi-gc.sln&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build solution &lt;code&gt;akebi-gc.sln&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Release&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Head over to the releases page&lt;/li&gt; &#xA; &lt;li&gt;Download the latest binaries&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;(1-2 are optional if you didn&#39;t build from source)&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;code&gt;/bin&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open Compiled version (debug, release)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Insure that &lt;code&gt;CLibrary.dll&lt;/code&gt; is in the same folder that &lt;code&gt;injector.exe&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;injector.exe&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Features&lt;/h1&gt; &#xA;&lt;h4&gt;General&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Protection Bypass&lt;/li&gt; &#xA; &lt;li&gt;In-Game GUI&lt;/li&gt; &#xA; &lt;li&gt;Hotkeys&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Player&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;God Mode&lt;/li&gt; &#xA; &lt;li&gt;Unlimited Stamina&lt;/li&gt; &#xA; &lt;li&gt;Dumb Enemies (Enemies don&#39;t attack)&lt;/li&gt; &#xA; &lt;li&gt;Player&lt;/li&gt; &#xA; &lt;li&gt;Multiply Attacks&lt;/li&gt; &#xA; &lt;li&gt;No Cooldown Skill/Ultimate&lt;/li&gt; &#xA; &lt;li&gt;No Cooldown Sprint&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;World&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Auto Loot&lt;/li&gt; &#xA; &lt;li&gt;Auto Talk&lt;/li&gt; &#xA; &lt;li&gt;Killaura&lt;/li&gt; &#xA; &lt;li&gt;Auto Tree Farm&lt;/li&gt; &#xA; &lt;li&gt;Mob Vacuum&lt;/li&gt; &#xA; &lt;li&gt;Auto Fish&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Teleport&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chest/Oculi Teleport (Teleports to nearest)&lt;/li&gt; &#xA; &lt;li&gt;Map Teleport (Teleport to mark on map)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Visuals&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ESP&lt;/li&gt; &#xA; &lt;li&gt;Interactive Map&lt;/li&gt; &#xA; &lt;li&gt;Elemental Sight&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Debugging&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Entity List&lt;/li&gt; &#xA; &lt;li&gt;Position Info&lt;/li&gt; &#xA; &lt;li&gt;FPS Graph&lt;/li&gt; &#xA; &lt;li&gt;Packet Sniffer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Demo&lt;/h1&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Map Teleportation&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/CallowBlack/gif-demos/raw/main/genshin-cheat/map-teleport-demo.gif&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Noclip&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/CallowBlack/gif-demos/raw/main/genshin-cheat/noclip-demo.gif&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;TP to Oculi&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/CallowBlack/gif-demos/raw/main/genshin-cheat/oculi-teleport-demo.gif&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;TP to Chests&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/CallowBlack/gif-demos/raw/main/genshin-cheat/chest-teleport-demo.gif&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Rapid Fire&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/CallowBlack/gif-demos/raw/main/genshin-cheat/rapid-fire-demo.gif&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Auto Talk&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/CallowBlack/gif-demos/raw/main/genshin-cheat/auto-talk-demo.gif&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Roadmap&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Cutscene Skipping&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Create database for chests, oculi, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Contributing&lt;/h1&gt; &#xA;&lt;h2&gt;Adding a feature&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the Project&lt;/li&gt; &#xA; &lt;li&gt;Create your Feature Branch (&lt;code&gt;git checkout -b feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit your Changes (&lt;code&gt;git commit -m &#39;Add some AmazingFeature&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the Branch (&lt;code&gt;git push origin feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Open a Pull Request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Suggestions&lt;/h2&gt; &#xA;&lt;p&gt;Open an issue with the title of the suggesstion you want to make. In the description, make sure it is descriptive enough so our devs can understand what you want and how you want it.&lt;/p&gt; &#xA;&lt;h2&gt;Bugs&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to the short explanation for bug reporting, as well as the bug report template.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Find a bug and write down what happened, as well as your first thoughts on what you think caused it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Try to reproduce the bug. For this you need to understand what actually happened, leading up to the bug and when the actual bug happened. To make sure you get all this information correctly taking various forms of documentations, such as video, screenshots etc is essential. These steps makes it a lot easier to try and figure out what actually happened. Try to replicate the scenario where the bug appeared, as close to the original as possible. What we would recommend for this step is using the bug reporting template which can be found on page 2 and simply adding the information you have / find in there.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;can it be reproduced? Yes or no. If yes: Explain in as much detail as possible what happens when the bug occurs and why it occurs. Try and explain it as cleanly and as concise as possible to make sure that the coders don’t have to read an essay to understand what could be a simple bug with a simple fix. For this, remember that information is very subjective so it is much better to over communicate than to risk confusion. If no: Try to provide as much information about the bug as possible, so that the testers will be able to replicate the scenario in which the bug occurred more easily so we can try to reproduce the bug.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Tell us which version you are using. Otherwise we would be getting bug reports on the same issue, that has been infact fixed in the latest commits. copy the SHA / Version Number of the latest commit when you built the mod. For example: &lt;code&gt;bd17a00ec388f3b93624280cde9e1c66e740edf9&lt;/code&gt; / Release 0.7&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Notes: Please remember to always record your testing sessions on your local hard drive and then upload them unlisted to youtube to conserve memory space on your computer and to give us easy access to your replays. This is to ensure that the optimal amount of documentation is available for the bug testers and coders to use as a guideline for either replicating scenarios, reproducing bugs or fixing them.&lt;/p&gt; &#xA;&lt;p&gt;TL:DR Record all your stuff while playing the mod and report any bugs to the issues section of this repository.&lt;/p&gt; &#xA;&lt;h3&gt;Bug reporting template&lt;/h3&gt; &#xA;&lt;p&gt;Title: e.g. “Instantly kill enemy with Shackles“ Description: “Game crashed if x, y, z“&lt;/p&gt; &#xA;&lt;p&gt;-- Footer -- Date Occured: 5 / 3 / 2022 Is it reproducible: Yes / Occasionally / No Latest Commit used: &lt;code&gt;bd17a00ec388f3b93624280cde9e1c66e740edf9&lt;/code&gt; Release Version: 0.7&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>WHULuoJiaTeam/luojianet</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/WHULuoJiaTeam/luojianet</id>
    <link href="https://github.com/WHULuoJiaTeam/luojianet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;LuoJiaNet介绍&lt;/h2&gt; &#xA;&lt;p&gt;遥感专用机器学习框架LuoJiaNET,由武汉大学LuoJiaNET框架团队与华为MindSpore框架研究小组联合打造而成， 是遥感领域首个国产化自主可控的遥感专用机器学习框架，针对遥感数据像幅尺寸大、数据通道多、尺度变化大等特性， 具备内存可扩展、尺度通道灵活创建、数据通道自主优选、框架与数据协同处理的特点。可兼容已有深度学习框架， 并提供用户友好的、可拖拽的交互式网络结构搭建界面的方法。能屏蔽不同硬件设备间差异，同时管理多样化的遥感影像样本库LuoJiaSET， 实现遥多源感影像样本的高效存储管理。&lt;/p&gt; &#xA;&lt;p&gt;LuoJiaNET同时与国产人工智能硬件NPU深度融合，可同时支持CPU、GPU、NPU等硬件资源，使智能计算软硬件充分协同，形成融合探测机理与地学知识的统一计算图表达、编译优化、图算融合、 自动混合并行的新一代遥感智能解译框架，可进行遥感样本自动提纯与增广，充分融合探测机理与地学知识。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/WHULuoJiaTeam/luojianet/master/images/architecture.png&#34; alt=&#34;昇腾全栈&#34;&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;请参照&lt;a href=&#34;https://whu.obs.cn-central-221.ovaijisuan.com/instruction/index.html&#34;&gt;LuoJiaNet安装手册&lt;/a&gt; 安装&lt;a href=&#34;https://github.com/WHULuoJiaTeam/luojianet/tree/master/whl_files&#34;&gt;whl包&lt;/a&gt;或源码编译安装&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;执行以下命令，验证安装结果。&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import numpy as np&#xA;import luojianet_ms.context as context&#xA;import luojianet_ms.nn as nn&#xA;from luojianet_ms import Tensor&#xA;from luojianet_ms.ops import operations as P&#xA;&#xA;context.set_context(mode=context.GRAPH_MODE, device_target=&#34;CPU&#34;)&#xA;&#xA;class Mul(nn.Module):&#xA;    def __init__(self):&#xA;        super(Mul, self).__init__()&#xA;        self.mul = P.Mul()&#xA;&#xA;    def call(self, x, y):&#xA;        return self.mul(x, y)&#xA;&#xA;x = Tensor(np.array([1.0, 2.0, 3.0]).astype(np.float32))&#xA;y = Tensor(np.array([4.0, 5.0, 6.0]).astype(np.float32))&#xA;&#xA;mul = Mul()&#xA;print(mul(x, y))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;[ 4. 10. 18.]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;LuoJiaNET安装手册中，相应的源码见&lt;a href=&#34;https://github.com/WHULuoJiaTeam/luojianet/tree/master/examples/tutorial&#34;&gt;tutorial&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;版本说明&lt;/h2&gt; &#xA;&lt;p&gt;版本说明请参阅&lt;a href=&#34;https://github.com/WHULuoJiaTeam/luojianet/raw/master/RELEASE.md&#34;&gt;RELEASE&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;许可证&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/WHULuoJiaTeam/luojianet/raw/master/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>scylladb/scylla</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/scylladb/scylla</id>
    <link href="https://github.com/scylladb/scylla" rel="alternate"></link>
    <summary type="html">&lt;p&gt;NoSQL data store using the seastar framework, compatible with Apache Cassandra&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Scylla&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://slack.scylladb.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-scylla-brightgreen.svg?logo=slack&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=ScyllaDB&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/ScyllaDB.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is Scylla?&lt;/h2&gt; &#xA;&lt;p&gt;Scylla is the real-time big data database that is API-compatible with Apache Cassandra and Amazon DynamoDB. Scylla embraces a shared-nothing approach that increases throughput and storage capacity to realize order-of-magnitude performance improvements and reduce hardware costs.&lt;/p&gt; &#xA;&lt;p&gt;For more information, please see the &lt;a href=&#34;https://www.scylladb.com&#34;&gt;ScyllaDB web site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;Scylla is fairly fussy about its build environment, requiring very recent versions of the C++20 compiler and of many libraries to build. The document &lt;a href=&#34;https://raw.githubusercontent.com/scylladb/scylla/master/HACKING.md&#34;&gt;HACKING.md&lt;/a&gt; includes detailed information on building and developing Scylla, but to get Scylla building quickly on (almost) any build machine, Scylla offers a &lt;a href=&#34;https://raw.githubusercontent.com/scylladb/scylla/master/tools/toolchain/README.md&#34;&gt;frozen toolchain&lt;/a&gt;, This is a pre-configured Docker image which includes recent versions of all the required compilers, libraries and build tools. Using the frozen toolchain allows you to avoid changing anything in your build machine to meet Scylla&#39;s requirements - you just need to meet the frozen toolchain&#39;s prerequisites (mostly, Docker or Podman being available).&lt;/p&gt; &#xA;&lt;h2&gt;Building Scylla&lt;/h2&gt; &#xA;&lt;p&gt;Building Scylla with the frozen toolchain &lt;code&gt;dbuild&lt;/code&gt; is as easy as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$&amp;nbsp;git submodule update --init --force --recursive&#xA;$&amp;nbsp;./tools/toolchain/dbuild ./configure.py&#xA;$&amp;nbsp;./tools/toolchain/dbuild ninja build/release/scylla&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For further information, please see:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/scylladb/scylla/master/HACKING.md&#34;&gt;Developer documentation&lt;/a&gt; for more information on building Scylla.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/scylladb/scylla/master/docs/guides/building.md&#34;&gt;Build documentation&lt;/a&gt; on how to build Scylla binaries, tests, and packages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/scylladb/scylla/master/dist/docker/debian/README.md&#34;&gt;Docker image build documentation&lt;/a&gt; for information on how to build Docker images.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running Scylla&lt;/h2&gt; &#xA;&lt;p&gt;To start Scylla server, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./tools/toolchain/dbuild ./build/release/scylla --workdir tmp --smp 1 --developer-mode 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will start a Scylla node with one CPU core allocated to it and data files stored in the &lt;code&gt;tmp&lt;/code&gt; directory. The &lt;code&gt;--developer-mode&lt;/code&gt; is needed to disable the various checks Scylla performs at startup to ensure the machine is configured for maximum performance (not relevant on development workstations). Please note that you need to run Scylla with &lt;code&gt;dbuild&lt;/code&gt; if you built it with the frozen toolchain.&lt;/p&gt; &#xA;&lt;p&gt;For more run options, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./tools/toolchain/dbuild&amp;nbsp;./build/release/scylla --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/scylladb/scylla/master/docs/guides/testing.md&#34;&gt;test.py manual&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Scylla APIs and compatibility&lt;/h2&gt; &#xA;&lt;p&gt;By default, Scylla is compatible with Apache Cassandra and its APIs - CQL and Thrift. There is also support for the API of Amazon DynamoDB™, which needs to be enabled and configured in order to be used. For more information on how to enable the DynamoDB™ API in Scylla, and the current compatibility of this feature as well as Scylla-specific extensions, see &lt;a href=&#34;https://raw.githubusercontent.com/scylladb/scylla/master/docs/alternator/alternator.md&#34;&gt;Alternator&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/scylladb/scylla/master/docs/alternator/getting-started.md&#34;&gt;Getting started with Alternator&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation can be found &lt;a href=&#34;https://scylla.docs.scylladb.com&#34;&gt;here&lt;/a&gt;. Seastar documentation can be found &lt;a href=&#34;http://docs.seastar.io/master/index.html&#34;&gt;here&lt;/a&gt;. User documentation can be found &lt;a href=&#34;https://docs.scylladb.com/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Training&lt;/h2&gt; &#xA;&lt;p&gt;Training material and online courses can be found at &lt;a href=&#34;https://university.scylladb.com/&#34;&gt;Scylla University&lt;/a&gt;. The courses are free, self-paced and include hands-on examples. They cover a variety of topics including Scylla data modeling, administration, architecture, basic NoSQL concepts, using drivers for application development, Scylla setup, failover, compactions, multi-datacenters and how Scylla integrates with third-party applications.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to Scylla&lt;/h2&gt; &#xA;&lt;p&gt;If you want to report a bug or submit a pull request or a patch, please read the &lt;a href=&#34;https://raw.githubusercontent.com/scylladb/scylla/master/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are a developer working on Scylla, please read the &lt;a href=&#34;https://raw.githubusercontent.com/scylladb/scylla/master/HACKING.md&#34;&gt;developer guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://groups.google.com/forum/#!forum/scylladb-users&#34;&gt;users mailing list&lt;/a&gt; and &lt;a href=&#34;http://slack.scylladb.com/&#34;&gt;Slack channel&lt;/a&gt; are for users to discuss configuration, management, and operations of the ScyllaDB open source.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://groups.google.com/forum/#!forum/scylladb-dev&#34;&gt;developers mailing list&lt;/a&gt; is for developers and people interested in following the development of ScyllaDB to discuss technical topics.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>xournalpp/xournalpp</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/xournalpp/xournalpp</id>
    <link href="https://github.com/xournalpp/xournalpp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Xournal++ is a handwriting notetaking software with PDF annotation support. Written in C++ with GTK3, supporting Linux (e.g. Ubuntu, Debian, Arch, SUSE), macOS and Windows 10. Supports pen input from devices such as Wacom Tablets.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Xournal++&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/xournalpp/xournalpp/_build/latest?definitionId=1&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/xournalpp/xournalpp/_apis/build/status/CI?branchName=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/xournalpp/xournalpp?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/xournalpp/xournalpp&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table border=&#34;0px&#34;&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td width=&#34;600px&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/main.png&#34; width=&#34;550px%&#34; title=&#34;Xournal++ Screenshot on Linux&#34;&gt; &lt;/td&gt;&#xA;   &lt;td&gt; &lt;h2&gt;Shout out - Translators Needed!&lt;/h2&gt; &lt;p&gt;Recently we revisited the settings dialog to improve the feeling and usability. While doing that we also added better descriptions, for which we require new translations.&lt;/p&gt; &lt;p&gt;Partial translations, which need to be updated:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Czech&lt;/li&gt; &#xA;     &lt;li&gt;Polish&lt;/li&gt; &#xA;     &lt;li&gt;Chinese&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;p&gt;Full translations for all languages not mentioned previously &lt;strong&gt;except&lt;/strong&gt;:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;English&lt;/li&gt; &#xA;     &lt;li&gt;German&lt;/li&gt; &#xA;     &lt;li&gt;Italian&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;p&gt;If you would like to help us improve the localization of Xournal++, take a look at &lt;a href=&#34;https://crowdin.com/project/xournalpp&#34;&gt;our Crowdin project&lt;/a&gt;. If you are interested in translating a new language, contact us on &lt;a href=&#34;https://gitter.im/xournalpp/xournalpp&#34;&gt;Gitter&lt;/a&gt; or create a new issue and we will unlock the language on Crowdin.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Thanks in advance!&lt;/strong&gt;&lt;/p&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Xournal++ (/ˌzɚnl̟ˌplʌsˈplʌs/) is a hand note-taking software written in C++ with the target of flexibility, functionality and speed. Stroke recognizer and other parts are based on Xournal Code, which you can find at &lt;a href=&#34;http://sourceforge.net/projects/xournal/&#34;&gt;sourceforge&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Xournal++ features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports pressure-sensitive styluses and digital pen tables (e.g. Wacom, Huion, XP Pen, etc. tablets)&lt;/li&gt; &#xA; &lt;li&gt;Paper backgrounds for note-taking, scratch paper, or whiteboarding&lt;/li&gt; &#xA; &lt;li&gt;Annotate on top of PDFs&lt;/li&gt; &#xA; &lt;li&gt;Export to a variety of formats including SVG, PNG and PDF, both from the GUI and command line&lt;/li&gt; &#xA; &lt;li&gt;Different drawing tools (e.g. pen, highlighter) and stroke styles (e.g. solid, dotted)&lt;/li&gt; &#xA; &lt;li&gt;Shape drawing (line, arrow, circle, rectangle, spline)&lt;/li&gt; &#xA; &lt;li&gt;Fill shape functionality&lt;/li&gt; &#xA; &lt;li&gt;Shape resizing and rotation&lt;/li&gt; &#xA; &lt;li&gt;Rotation and grid snapping for precise alignment of objects&lt;/li&gt; &#xA; &lt;li&gt;Input stabilization for smoother writing/drawing&lt;/li&gt; &#xA; &lt;li&gt;Text tool for adding text in different fonts, colors, and sizes&lt;/li&gt; &#xA; &lt;li&gt;Enhanced support for image insertion&lt;/li&gt; &#xA; &lt;li&gt;Eraser with multiple configurations&lt;/li&gt; &#xA; &lt;li&gt;LaTeX support (requires a working LaTeX installation) with customizable template&lt;/li&gt; &#xA; &lt;li&gt;Sidebar containing page previews with advanced page sorting, PDF bookmarks and layers (can be individually hidden/edited)&lt;/li&gt; &#xA; &lt;li&gt;Allows mapping different tools/colors etc. to stylus/mouse buttons&lt;/li&gt; &#xA; &lt;li&gt;Customizable toolbar with multiple configurations, e.g. to optimize toolbar for portrait/landscape&lt;/li&gt; &#xA; &lt;li&gt;Page template definitions&lt;/li&gt; &#xA; &lt;li&gt;Bug reporting, auto-save, and auto backup tools&lt;/li&gt; &#xA; &lt;li&gt;Audio recording and playback alongside with handwritten notes&lt;/li&gt; &#xA; &lt;li&gt;Multi language support (over 20 languages supported)&lt;/li&gt; &#xA; &lt;li&gt;Plugins using Lua scripting&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mobile &amp;amp; web app&lt;/h2&gt; &#xA;&lt;p&gt;Since mid 2020, there is a Flutter-written mobile app for &lt;strong&gt;Android&lt;/strong&gt;, &lt;strong&gt;Chrome OS&lt;/strong&gt; and &lt;strong&gt;iOS&lt;/strong&gt; (coming soon) as well as a &lt;strong&gt;web app&lt;/strong&gt; available. Even though it is not perfectly stable nor are all of Xournal++&#39;s features fully supported yet, you may check it out and open your Xournal++ notebooks on your mobile devices. You can get in touch in its &lt;a href=&#34;https://gitlab.com/TheOneWithTheBraid/xournalpp_mobile&#34;&gt;separate repository on GitLab&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=online.xournal.mobile&#34;&gt;Get it on Google Play&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The web app is available at &lt;a href=&#34;https://xournal.online&#34;&gt;xournal.online&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Why is the iOS app not published yet?&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;According to the Apple App Store guidelines, it is prohibited to publish unstable or beta apps. Hence we wait until Xournal++ Mobile works more stable and offers more complete feature compatibility to Xournal++.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;h2&gt;Linux&lt;/h2&gt; &lt;img src=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/main.png&#34; width=&#34;100%&#34; title=&#34;Xournal++ Screenshot on Linux&#34;&gt; &lt;/td&gt;&#xA;   &lt;td&gt; &lt;h2&gt;Windows 10&lt;/h2&gt; &lt;img src=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/main-win.png&#34; width=&#34;100%&#34; title=&#34;Xournal++ Screenshot on Win10&#34;&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; &lt;h2&gt;macOS Catalina&lt;/h2&gt; &lt;img src=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/main-mac.png&#34; width=&#34;100%&#34; title=&#34;Xournal++ Screenshot on macOS&#34;&gt; &lt;/td&gt;&#xA;   &lt;td&gt; &lt;h2&gt;Xournal++ Mobile&lt;/h2&gt; &lt;img src=&#34;https://gitlab.com/TheOneWithTheBraid/xournalpp_mobile/-/raw/master/fastlane/metadata/android/en_US/images/tenInchScreenshots/03.png&#34; width=&#34;100%&#34; title=&#34;Xournal++ Mobile Screenshot on Chromium OS&#34;&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; &lt;h2&gt;Toolbar / Page Background / Layer&lt;/h2&gt; &lt;p&gt;Multiple page background, easy selectable on the toolbar &lt;img src=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/background.png&#34; width=&#34;100%&#34; title=&#34;Xournal++ Screenshot&#34;&gt;&lt;/p&gt; &lt;/td&gt;&#xA;   &lt;td&gt; &lt;h2&gt;Layer sidebar and advanced layer selection&lt;/h2&gt; &lt;img src=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/layer.png&#34; width=&#34;100%&#34; title=&#34;Xournal++ Screenshot&#34;&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; &lt;h2&gt;Multiple predefined and fully customizable toolbars&lt;/h2&gt; &lt;img src=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/toolbar.png&#34; width=&#34;100%&#34; title=&#34;Xournal++ Screenshot&#34;&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;User Manual and FAQ&lt;/h2&gt; &#xA;&lt;p&gt;For general usage, consult the &lt;a href=&#34;https://github.com/xournalpp/xournalpp/wiki/User-Manual&#34;&gt;User Manual&lt;/a&gt;. Answers to some common questions can be found in the &lt;a href=&#34;https://github.com/xournalpp/xournalpp/wiki/Frequently-Asked-Questions-&amp;amp;-Problem-Solving&#34;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Experimental Features&lt;/h2&gt; &#xA;&lt;p&gt;Sometimes a feature is added that might not be rock solid, or the developers aren&#39;t sure if it is useful. Try these out and give us some feedback.&lt;/p&gt; &#xA;&lt;p&gt;Here are a few under development that you can play with now:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/floatingtoolboxmbmenu.png&#34; title=&#34;Xournal++ Screenshot&#34;&gt; Assign a mouse button or stylus button to bring up a toolbox of toolbars right under the cursor. You can also modify what is in the toolbox through the usual View → Toolbars → Customize although &lt;strong&gt;it won&#39;t appear unless you&#39;ve assigned a button in preferences: mouse or stylus&lt;/strong&gt; (or selected a toolbar configuration that uses it).&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;This is an experimental feature because not everything you can put in the toolbox behaves. So be aware.&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/floatingtoolbox.png&#34; width=&#34;25%&#34;&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Keep your eyes out for other experimental features in preferences as seen here:&lt;/p&gt; &lt;p&gt;DrawingTools: When drawing a box, circle etc, simulate ctrl or shift modifiers by the initial direction you move the mouse.&lt;/p&gt; &lt;p&gt;Action on Tool Tap: Allow a brief tap on the screen to bring up the floating toolbox and/or select an object. May work with pen and highlighter only.&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/moreexperimentals.png&#34; width=&#34;50%&#34;&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;The official releases of Xournal++ can be found on the &lt;a href=&#34;https://github.com/xournalpp/xournalpp/releases&#34;&gt;Releases&lt;/a&gt; page. We provide binaries for Debian (Buster), Ubuntu (16.04), MacOS (10.15 and newer), and Windows. For other Linux distributions (or older/newer ones), we also provide an AppImage that is binary compatible with any distribution released around or after Ubuntu 16.04. For installing Xournal++ Mobile on handheld devices, please check out &lt;a href=&#34;https://gitlab.com/TheOneWithTheBraid/xournalpp_mobile#try-it-out&#34;&gt;Xournal++ Mobile&#39;s instructions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;A note for Ubuntu/Debian users&lt;/strong&gt;: The official binaries that we provide are only compatible with the &lt;em&gt;specific version of Debian or Ubuntu&lt;/em&gt; indicated by the file name. For example, if you are on Ubuntu 20.04, the binary whose name contains &lt;code&gt;Ubuntu-bionic&lt;/code&gt; is &lt;em&gt;only&lt;/em&gt; compatible with Ubuntu 18.04. If your system is not one of the specific Debian or Ubuntu versions that are supported by the official binaries, we recommend you use either the PPA (Ubuntu only), the Flatpak, or the AppImage.&lt;/p&gt; &#xA;&lt;p&gt;There is also an &lt;em&gt;unstable&lt;/em&gt;, &lt;a href=&#34;https://github.com/xournalpp/xournalpp/releases/tag/nightly&#34;&gt;automated nightly release&lt;/a&gt; that includes the very latest features and bug fixes.&lt;/p&gt; &#xA;&lt;p&gt;With the help of the community, Xournal++ is also available on official repositories of some popular Linux distros and platforms.&lt;/p&gt; &#xA;&lt;h3&gt;Debian&lt;/h3&gt; &#xA;&lt;p&gt;On Debian bookworm and Debian sid the &lt;code&gt;xournalpp&lt;/code&gt; package (stable version) is contained in the official repositories. Simply install via&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install xournalpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are also the official &lt;a href=&#34;https://github.com/xournalpp/xournalpp/releases&#34;&gt;Stable releases&lt;/a&gt; and &lt;em&gt;unstable&lt;/em&gt; &lt;a href=&#34;https://github.com/xournalpp/xournalpp/releases/tag/nightly&#34;&gt;automated nightly releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Ubuntu and derivatives&lt;/h3&gt; &#xA;&lt;p&gt;On distros based on Ubuntu 22.04 Jammy Jellyfish (and later) the &lt;code&gt;xournalpp&lt;/code&gt; package (stable version) is contained in the official repositories. Simply install via&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install xournalpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Stable PPA&lt;/h4&gt; &#xA;&lt;p&gt;The latest stable version is available via the following &lt;a href=&#34;https://github.com/xournalpp/xournalpp/issues/1013#issuecomment-692656810&#34;&gt;&lt;em&gt;unofficial&lt;/em&gt; PPA&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo add-apt-repository ppa:apandada1/xournalpp-stable&#xA;sudo apt update&#xA;sudo apt install xournalpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Unstable PPA&lt;/h4&gt; &#xA;&lt;p&gt;An &lt;em&gt;unstable&lt;/em&gt;, nightly release is available for Ubuntu-based distributions via the following PPA:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo add-apt-repository ppa:andreasbutti/xournalpp-master&#xA;sudo apt update&#xA;sudo apt install xournalpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This PPA is provided by the Xournal++ team. While it has the latest features and bug fixes, it has also not been tested thoroughly and may break periodically (we try our best not to break things, though).&lt;/p&gt; &#xA;&lt;h3&gt;Fedora&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://src.fedoraproject.org/rpms/xournalpp&#34;&gt;released version of xournalpp&lt;/a&gt; is available in the &lt;a href=&#34;https://bodhi.fedoraproject.org/updates/?packages=xournalpp&#34;&gt;main repository&lt;/a&gt; via &lt;em&gt;Software&lt;/em&gt; application or the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo dnf install xournalpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pkcon install xournalpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The bleeding edge packages synced to xournalpp git master on a daily basis are available from &lt;a href=&#34;https://copr.fedorainfracloud.org/coprs/luya/xournalpp/&#34;&gt;COPR luya/xournalpp&lt;/a&gt;. &lt;a href=&#34;https://copr.fedorainfracloud.org/coprs/luya/xournalpp/package/xournalpp/&#34;&gt;&lt;img src=&#34;https://copr.fedorainfracloud.org/coprs/luya/xournalpp/package/xournalpp/status_image/last_build.png&#34; alt=&#34;Copr build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;openSUSE&lt;/h3&gt; &#xA;&lt;p&gt;On openSUSE Tumbleweed, the released version of Xournal++ is available from the main repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo zypper in xournalpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For openSUSE Leap 15.0 and earlier, use the install link from &lt;a href=&#34;https://software.opensuse.org//download.html?project=X11%3AUtilities&amp;amp;package=xournalpp&#34;&gt;X11:Utilities&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For all versions of openSUSE, bleeding edge packages synced to xournalpp git master on a weekly basis are available from &lt;a href=&#34;https://software.opensuse.org//download.html?project=home%3Abadshah400%3AStaging&amp;amp;package=xournalpp&#34;&gt;home:badshah400:Staging&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Arch Linux&lt;/h3&gt; &#xA;&lt;p&gt;The latest stable release is available &lt;a href=&#34;https://www.archlinux.org/packages/community/x86_64/xournalpp/&#34;&gt;in the [community] repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To build the latest state of the master branch yourself, use &lt;a href=&#34;https://aur.archlinux.org/packages/xournalpp-git/&#34;&gt;this AUR package&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Solus&lt;/h3&gt; &#xA;&lt;p&gt;The latest stable release is available in the main repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo eopkg it xournalpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Flatpak&lt;/h3&gt; &#xA;&lt;p&gt;The Xournal++ team officially supports a &lt;a href=&#34;https://flathub.org/apps/details/com.github.xournalpp.xournalpp&#34;&gt;FlatHub release&lt;/a&gt;, which can be installed with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;flatpak install flathub com.github.xournalpp.xournalpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that for Xournal++ to work properly, you must have at least one GTK theme and one icon theme installed on Flatpak. To enable LaTeX support, you will also need to install the TeX Live extension:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;flatpak install flathub org.freedesktop.Sdk.Extension.texlive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Flatpak manifest can be found at the &lt;a href=&#34;https://github.com/flathub/com.github.xournalpp.xournalpp&#34;&gt;Xournal++ Flatpak packaging repository&lt;/a&gt;, and all Flatpak-related packaging issues should be reported there.&lt;/p&gt; &#xA;&lt;h3&gt;Android and Chrome OS&lt;/h3&gt; &#xA;&lt;p&gt;Android is supported by Xournal++ Mobile. It can be downloaded either on the &lt;a href=&#34;https://gitlab.com/TheOneWithTheBraid/xournalpp_mobile/-/tags&#34;&gt;Tags page&lt;/a&gt; or &lt;a href=&#34;https://play.google.com/store/apps/details?id=online.xournal.mobile&#34;&gt;from Google Play&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;p&gt;Unfortunately, the iOS app is not published yet in the Apple App Store. See &lt;a href=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/#mobile--web-app&#34;&gt;here&lt;/a&gt; to learn, why. Anyway, in the &lt;a href=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/#building&#34;&gt;Building section&lt;/a&gt; you can learn how to build an early preview.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;Official Windows releases are provided on the &lt;a href=&#34;https://github.com/xournalpp/xournalpp/releases&#34;&gt;Releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Mac OS X&lt;/h3&gt; &#xA;&lt;p&gt;Mac OS X releases are provided on the &lt;a href=&#34;https://github.com/xournalpp/xournalpp/releases&#34;&gt;Releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There have been compatibility problems with Mac OS X Catalina regarding both file permissions and stylus support (&lt;a href=&#34;https://github.com/xournalpp/xournalpp/issues/1772&#34;&gt;#1772&lt;/a&gt; and &lt;a href=&#34;https://github.com/xournalpp/xournalpp/issues/1757&#34;&gt;#1757&lt;/a&gt;). Unfortunately, we don&#39;t have the resources to adequately support Catalina at this time. Help would be appreciated!&lt;/li&gt; &#xA; &lt;li&gt;Xournal++ will be delivered with a patched GTK. Else, pressure sensitivity will not work on Mac &lt;a href=&#34;https://github.com/xournalpp/xournalpp/issues/569&#34;&gt;#569&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/LinuxBuild.md&#34;&gt;Linux Build&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/MacBuild.md&#34;&gt;Mac Build&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xournalpp/xournalpp/master/readme/WindowsBuild.md&#34;&gt;Windows Build&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitlab.com/TheOneWithTheBraid/xournalpp_mobile#getting-started&#34;&gt;Android Build&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitlab.com/TheOneWithTheBraid/xournalpp_mobile#getting-started&#34;&gt;iOS Build&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;File format&lt;/h2&gt; &#xA;&lt;p&gt;The file format _.xopp is an XML which is .gz compressed. PDFs are not embedded into the file, so if the PDF is deleted, the background is lost. _.xopp is basically the same file format as _.xoj, which is used by Xournal. Therefore Xournal++ is able to read _.xoj files, and can also export to _.xoj. As soon as notes are exported to a _.xoj-file, all Xournal++ specific extensions, like additional background types, are lost.&lt;/p&gt; &#xA;&lt;p&gt;*.xopp can theoretically be read by Xournal, as long as you do not use any new feature. Xournal does not open files that contain new attributes or unknown values, so Xournal++ will add the extension .xopp to all saved files to indicate the potential presence of Xournal++-only features.&lt;/p&gt; &#xA;&lt;p&gt;All new files will be saved as _.xopp. If an _.xoj file that was created by Xournal is opened, the Save-As dialog will be displayed on save. If the *.xoj file was created by Xournal++, the file will be overwritten on save and the file extension will not change.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;We are currently introducing a new file format that can efficiently store attached PDF files and other attachments internally. We will still allow for attachments that are linked to external files. Please refer to &lt;a href=&#34;https://github.com/xournalpp/xournalpp/issues/937&#34;&gt;#937&lt;/a&gt; for further details.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;For developing new features, create an issue or comment on an existing issue to let others know what you are doing. For development, create a fork and use the master as base. Create a pull request for each fix. Do not create big pull requests, as long as you don&#39;t break anything features also can be merged, even if they are not 100% finished.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;http://github.com/xournalpp/xournalpp&#34;&gt;GitHub:xournalpp&lt;/a&gt; for current development. You can also join our Gitter channel via the badge on top.&lt;/p&gt; &#xA;&lt;p&gt;Also take a look at our &lt;a href=&#34;https://github.com/xournalpp/xournalpp/wiki/Coding-conventions&#34;&gt;coding conventions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Code documentation&lt;/h2&gt; &#xA;&lt;p&gt;The code documentation is generated using Doxygen.&lt;/p&gt; &#xA;&lt;p&gt;In order to generate the documentation yourself, first install Doxygen and graphviz, i.e.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install doxygen&#xA;sudo apt install graphviz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;on Debian or Ubuntu. Finally, execute &lt;code&gt;doxygen&lt;/code&gt; in the root directory of the repository. The documentation can be found in &lt;code&gt;doc/html&lt;/code&gt; and &lt;code&gt;doc/latex&lt;/code&gt;. Conveniently display the documentation with &lt;code&gt;python3 -m http.server 8000&lt;/code&gt; and visit the shown URL to view the documentation.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>OpenTTD/OpenTTD</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/OpenTTD/OpenTTD</id>
    <link href="https://github.com/OpenTTD/OpenTTD" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenTTD is an open source simulation game based upon Transport Tycoon Deluxe&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenTTD&lt;/h1&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;1.0) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#10-about&#34;&gt;About&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;1.1) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#11-downloading-openttd&#34;&gt;Downloading OpenTTD&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;1.2) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#12-openttd-gameplay-manual&#34;&gt;OpenTTD gameplay manual&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;1.3) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#13-supported-platforms&#34;&gt;Supported platforms&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;1.4) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#14-installing-and-running-openttd&#34;&gt;Installing and running OpenTTD&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;1.5) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#15-add-on-content--mods&#34;&gt;Add-on content / mods&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;1.6) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#16-openttd-directories&#34;&gt;OpenTTD directories&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;1.7) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#17-compiling-openttd&#34;&gt;Compiling OpenTTD&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;2.0) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#20-contact-and-community&#34;&gt;Contact and community&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;2.1) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#21-contributing-to-openttd&#34;&gt;Contributing to OpenTTD&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;2.2) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#22-reporting-bugs&#34;&gt;Reporting bugs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;2.3) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#23-translating&#34;&gt;Translating&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;3.0) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#30-licensing&#34;&gt;Licensing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;4.0) &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#40-credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;1.0) About&lt;/h2&gt; &#xA;&lt;p&gt;OpenTTD is a transport simulation game based upon the popular game Transport Tycoon Deluxe, written by Chris Sawyer. It attempts to mimic the original game as closely as possible while extending it with new features.&lt;/p&gt; &#xA;&lt;p&gt;OpenTTD is licensed under the GNU General Public License version 2.0, but includes some 3rd party software under different licenses. See the section &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/#30-licensing&#34;&gt;&#34;Licensing&#34;&lt;/a&gt; below for details.&lt;/p&gt; &#xA;&lt;h2&gt;1.1) Downloading OpenTTD&lt;/h2&gt; &#xA;&lt;p&gt;OpenTTD can be downloaded from the &lt;a href=&#34;https://www.openttd.org/&#34;&gt;official OpenTTD website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Both &#39;stable&#39; and &#39;nightly&#39; versions are available for download:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;most people should choose the &#39;stable&#39; version, as this has been more extensively tested&lt;/li&gt; &#xA; &lt;li&gt;the &#39;nightly&#39; version includes the latest changes and features, but may sometimes be less reliable&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;OpenTTD is also available for free on &lt;a href=&#34;https://store.steampowered.com/app/1536610/OpenTTD/&#34;&gt;Steam&lt;/a&gt;, &lt;a href=&#34;https://www.gog.com/game/openttd&#34;&gt;GOG.com&lt;/a&gt;, and the &lt;a href=&#34;https://www.microsoft.com/p/openttd-official/9ncjg5rvrr1c&#34;&gt;Microsoft Store&lt;/a&gt;. On some platforms OpenTTD will be available via your OS package manager or a similar service.&lt;/p&gt; &#xA;&lt;h2&gt;1.2) OpenTTD gameplay manual&lt;/h2&gt; &#xA;&lt;p&gt;OpenTTD has a &lt;a href=&#34;https://wiki.openttd.org/&#34;&gt;community-maintained wiki&lt;/a&gt;, including a gameplay manual and tips.&lt;/p&gt; &#xA;&lt;h2&gt;1.3) Supported platforms&lt;/h2&gt; &#xA;&lt;p&gt;OpenTTD has been ported to several platforms and operating systems.&lt;/p&gt; &#xA;&lt;p&gt;The currently supported platforms are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux (SDL (OpenGL and non-OpenGL))&lt;/li&gt; &#xA; &lt;li&gt;macOS (universal) (Cocoa)&lt;/li&gt; &#xA; &lt;li&gt;Windows (Win32 GDI / OpenGL)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Other platforms may also work (in particular various BSD systems), but we don&#39;t actively test or maintain these.&lt;/p&gt; &#xA;&lt;h3&gt;1.3.1) Legacy support&lt;/h3&gt; &#xA;&lt;p&gt;Platforms, languages and compilers change. We&#39;ll keep support going on old platforms as long as someone is interested in supporting them, except where it means the project can&#39;t move forward to keep up with language and compiler features.&lt;/p&gt; &#xA;&lt;p&gt;We guarantee that every revision of OpenTTD will be able to load savegames from every older revision (excepting where the savegame is corrupt). Please report a bug if you find a save that doesn&#39;t load.&lt;/p&gt; &#xA;&lt;h2&gt;1.4) Installing and running OpenTTD&lt;/h2&gt; &#xA;&lt;p&gt;OpenTTD is usually straightforward to install, but for more help the wiki &lt;a href=&#34;https://wiki.openttd.org/en/Manual/Installation&#34;&gt;includes an installation guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;OpenTTD needs some additional graphics and sound files to run.&lt;/p&gt; &#xA;&lt;p&gt;For some platforms these will be downloaded during the installation process if required.&lt;/p&gt; &#xA;&lt;p&gt;For some platforms, you will need to refer to &lt;a href=&#34;https://wiki.openttd.org/en/Manual/Installation&#34;&gt;the installation guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;1.4.1) Free graphics and sound files&lt;/h3&gt; &#xA;&lt;p&gt;The free data files, split into OpenGFX for graphics, OpenSFX for sounds and OpenMSX for music can be found at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.openttd.org/downloads/opengfx-releases/latest&#34;&gt;https://www.openttd.org/downloads/opengfx-releases/latest&lt;/a&gt; for OpenGFX&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.openttd.org/downloads/opensfx-releases/latest&#34;&gt;https://www.openttd.org/downloads/opensfx-releases/latest&lt;/a&gt; for OpenSFX&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.openttd.org/downloads/openmsx-releases/latest&#34;&gt;https://www.openttd.org/downloads/openmsx-releases/latest&lt;/a&gt; for OpenMSX&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please follow the readme of these packages about the installation procedure. The Windows installer can optionally download and install these packages.&lt;/p&gt; &#xA;&lt;h3&gt;1.4.2) Original Transport Tycoon Deluxe graphics and sound files&lt;/h3&gt; &#xA;&lt;p&gt;If you want to play with the original Transport Tycoon Deluxe data files you have to copy the data files from the CD-ROM into the baseset/ directory. It does not matter whether you copy them from the DOS or Windows version of Transport Tycoon Deluxe. The Windows install can optionally copy these files.&lt;/p&gt; &#xA;&lt;p&gt;You need to copy the following files:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;sample.cat&lt;/li&gt; &#xA; &lt;li&gt;trg1r.grf or TRG1.GRF&lt;/li&gt; &#xA; &lt;li&gt;trgcr.grf or TRGC.GRF&lt;/li&gt; &#xA; &lt;li&gt;trghr.grf or TRGH.GRF&lt;/li&gt; &#xA; &lt;li&gt;trgir.grf or TRGI.GRF&lt;/li&gt; &#xA; &lt;li&gt;trgtr.grf or TRGT.GRF&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.4.3) Original Transport Tycoon Deluxe music&lt;/h3&gt; &#xA;&lt;p&gt;If you want the Transport Tycoon Deluxe music, copy the appropriate files from the original game into the baseset folder.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TTD for Windows: All files in the gm/ folder (gm_tt00.gm up to gm_tt21.gm)&lt;/li&gt; &#xA; &lt;li&gt;TTD for DOS: The GM.CAT file&lt;/li&gt; &#xA; &lt;li&gt;Transport Tycoon Original: The GM.CAT file, but rename it to GM-TTO.CAT&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;1.5) Add-on content / mods&lt;/h2&gt; &#xA;&lt;p&gt;OpenTTD features multiple types of add-on content, which modify gameplay in different ways.&lt;/p&gt; &#xA;&lt;p&gt;Most types of add-on content can be downloaded within OpenTTD via the &#39;Check Online Content&#39; button in the main menu.&lt;/p&gt; &#xA;&lt;p&gt;Add-on content can also be installed manually, but that&#39;s more complicated; the &lt;a href=&#34;https://wiki.openttd.org/&#34;&gt;OpenTTD wiki&lt;/a&gt; may offer help with that, or the &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/docs/directory_structure.md&#34;&gt;OpenTTD directory structure guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;1.5.1) AI opponents&lt;/h3&gt; &#xA;&lt;p&gt;OpenTTD comes without AI opponents, so if you want to play with AIs you have to download them.&lt;/p&gt; &#xA;&lt;p&gt;The easiest way is via the &#39;Check Online Content&#39; button in the main menu.&lt;/p&gt; &#xA;&lt;p&gt;You can select some AIs that you think are compatible with your playing style.&lt;/p&gt; &#xA;&lt;p&gt;AI help and discussions may also be found in the &lt;a href=&#34;https://www.tt-forums.net/viewforum.php?f=65&#34;&gt;AI section of the forum&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;1.5.2) Scenarios and height maps&lt;/h3&gt; &#xA;&lt;p&gt;Scenarios and heightmaps can be added via the &#39;Check Online Content&#39; button in the main menu.&lt;/p&gt; &#xA;&lt;h3&gt;1.5.3) NewGRFs&lt;/h3&gt; &#xA;&lt;p&gt;A wide range of add-content is available as NewGRFs, including vehicles, industries, stations, landscape objects, town names and more.&lt;/p&gt; &#xA;&lt;p&gt;NewGRFs can be added via the &#39;Check Online Content&#39; button in the main menu.&lt;/p&gt; &#xA;&lt;p&gt;See also the wiki &lt;a href=&#34;https://wiki.openttd.org/en/Manual/NewGRF&#34;&gt;guide to NewGRFs&lt;/a&gt; and &lt;a href=&#34;https://www.tt-forums.net/viewforum.php?f=66&#34;&gt;the forum graphics development section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;1.5.4) Game scripts&lt;/h3&gt; &#xA;&lt;p&gt;Game scripts can provide additional challenges or changes to the standard OpenTTD gameplay, for example setting transport goals, or changing town growth behaviour.&lt;/p&gt; &#xA;&lt;p&gt;Game scripts can be added via the &#39;Check Online Content&#39; button in the main menu.&lt;/p&gt; &#xA;&lt;p&gt;See also the wiki &lt;a href=&#34;https://wiki.openttd.org/en/Manual/Game%20script&#34;&gt;guide to game scripts&lt;/a&gt; and &lt;a href=&#34;https://www.tt-forums.net/viewforum.php?f=65&#34;&gt;the forum graphics game script section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;1.6) OpenTTD directories&lt;/h3&gt; &#xA;&lt;p&gt;OpenTTD uses its own directory structure to store game data, add-on content etc.&lt;/p&gt; &#xA;&lt;p&gt;For more information, see the &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/docs/directory_structure.md&#34;&gt;directory structure guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;1.7) Compiling OpenTTD&lt;/h3&gt; &#xA;&lt;p&gt;If you want to compile OpenTTD from source, instructions can be found in &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/COMPILING.md&#34;&gt;COMPILING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;2.0) Contact and Community&lt;/h2&gt; &#xA;&lt;p&gt;&#39;Official&#39; channels&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.openttd.org&#34;&gt;OpenTTD website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;IRC chat using #openttd on irc.oftc.net &lt;a href=&#34;https://wiki.openttd.org/en/Development/IRC%20channel&#34;&gt;more info about our irc channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OpenTTD/&#34;&gt;OpenTTD on Github&lt;/a&gt; for code repositories and for reporting issues&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.openttd.org/&#34;&gt;forum.openttd.org&lt;/a&gt; - the primary community forum site for discussing OpenTTD and related games&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.openttd.org/&#34;&gt;OpenTTD wiki&lt;/a&gt; community-maintained wiki, including topics like gameplay guide, detailed explanation of some game mechanics, how to use add-on content (mods) and much more&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&#39;Unofficial&#39; channels&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;the OpenTTD wiki has a &lt;a href=&#34;https://wiki.openttd.org/en/Community/Community&#34;&gt;page listing OpenTTD communities&lt;/a&gt; including some in languages other than English&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2.1) Contributing to OpenTTD&lt;/h3&gt; &#xA;&lt;p&gt;We welcome contributors to OpenTTD. More information for contributors can be found in &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2.2) Reporting bugs&lt;/h3&gt; &#xA;&lt;p&gt;Good bug reports are very helpful. We have a &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/CONTRIBUTING.md#bug-reports&#34;&gt;guide to reporting bugs&lt;/a&gt; to help with this.&lt;/p&gt; &#xA;&lt;p&gt;Desyncs in multiplayer are complex to debug and report (some software development skils are required). Instructions can be found in &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/docs/debugging_desyncs.md&#34;&gt;debugging and reporting desyncs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;2.3) Translating&lt;/h3&gt; &#xA;&lt;p&gt;OpenTTD is translated into many languages. Translations are added and updated via the &lt;a href=&#34;https://translator.openttd.org&#34;&gt;online translation tool&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;3.0) Licensing&lt;/h2&gt; &#xA;&lt;p&gt;OpenTTD is licensed under the GNU General Public License version 2.0. For the complete license text, see the file &#39;&lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/COPYING.md&#34;&gt;COPYING.md&lt;/a&gt;&#39;. This license applies to all files in this distribution, except as noted below.&lt;/p&gt; &#xA;&lt;p&gt;The squirrel implementation in &lt;code&gt;src/3rdparty/squirrel&lt;/code&gt; is licensed under the Zlib license. See &lt;code&gt;src/3rdparty/squirrel/COPYRIGHT&lt;/code&gt; for the complete license text.&lt;/p&gt; &#xA;&lt;p&gt;The md5 implementation in &lt;code&gt;src/3rdparty/md5&lt;/code&gt; is licensed under the Zlib license. See the comments in the source files in &lt;code&gt;src/3rdparty/md5&lt;/code&gt; for the complete license text.&lt;/p&gt; &#xA;&lt;p&gt;The implementations of Posix &lt;code&gt;getaddrinfo&lt;/code&gt; and &lt;code&gt;getnameinfo&lt;/code&gt; for OS/2 in &lt;code&gt;src/3rdparty/os2&lt;/code&gt; are distributed partly under the GNU Lesser General Public License 2.1, and partly under the (3-clause) BSD license. The exact licensing terms can be found in &lt;code&gt;src/3rdparty/os2/getaddrinfo.c&lt;/code&gt; resp. &lt;code&gt;src/3rdparty/os2/getnameinfo.c&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The fmt implementation in &lt;code&gt;src/3rdparty/fmt&lt;/code&gt; is licensed under the MIT license. See &lt;code&gt;src/3rdparty/fmt/LICENSE.rst&lt;/code&gt; for the complete license text.&lt;/p&gt; &#xA;&lt;h2&gt;4.0 Credits&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/OpenTTD/OpenTTD/master/CREDITS.md&#34;&gt;CREDITS.md&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>open-source-parsers/jsoncpp</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/open-source-parsers/jsoncpp</id>
    <link href="https://github.com/open-source-parsers/jsoncpp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A C++ library for interacting with JSON.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JsonCpp&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bintray.com/theirix/conan-repo/jsoncpp%3Atheirix&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/conan.io-jsoncpp%2F1.8.0-green.svg?logo=data:image/png;base64%2CiVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAMAAAAolt3jAAAA1VBMVEUAAABhlctjlstkl8tlmMtlmMxlmcxmmcxnmsxpnMxpnM1qnc1sn85voM91oM11oc1xotB2oc56pNF6pNJ2ptJ8ptJ8ptN9ptN8p9N5qNJ9p9N9p9R8qtOBqdSAqtOAqtR%2BrNSCrNJ/rdWDrNWCsNWCsNaJs9eLs9iRvNuVvdyVv9yXwd2Zwt6axN6dxt%2Bfx%2BChyeGiyuGjyuCjyuGly%2BGlzOKmzOGozuKoz%2BKqz%2BOq0OOv1OWw1OWw1eWx1eWy1uay1%2Baz1%2Baz1%2Bez2Oe02Oe12ee22ujUGwH3AAAAAXRSTlMAQObYZgAAAAFiS0dEAIgFHUgAAAAJcEhZcwAACxMAAAsTAQCanBgAAAAHdElNRQfgBQkREyOxFIh/AAAAiklEQVQI12NgAAMbOwY4sLZ2NtQ1coVKWNvoc/Eq8XDr2wB5Ig62ekza9vaOqpK2TpoMzOxaFtwqZua2Bm4makIM7OzMAjoaCqYuxooSUqJALjs7o4yVpbowvzSUy87KqSwmxQfnsrPISyFzWeWAXCkpMaBVIC4bmCsOdgiUKwh3JojLgAQ4ZCE0AMm2D29tZwe6AAAAAElFTkSuQmCC&#34; alt=&#34;badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/open-source-parsers/jsoncpp/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue&#34; alt=&#34;badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://open-source-parsers.github.io/jsoncpp-docs/doxygen/index.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/document-doxygen-brightgreen&#34; alt=&#34;badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/open-source-parsers/jsoncpp?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/open-source-parsers/jsoncpp/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://json.org/&#34;&gt;JSON&lt;/a&gt; is a lightweight data-interchange format. It can represent numbers, strings, ordered sequences of values, and collections of name/value pairs.&lt;/p&gt; &#xA;&lt;p&gt;JsonCpp is a C++ library that allows manipulating JSON values, including serialization and deserialization to and from strings. It can also preserve existing comment in unserialization/serialization steps, making it a convenient format to store user input files.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://open-source-parsers.github.io/jsoncpp-docs/doxygen/index.html&#34;&gt;JsonCpp documentation&lt;/a&gt; is generated using &lt;a href=&#34;http://www.doxygen.org&#34;&gt;Doxygen&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;A note on backward-compatibility&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;1.y.z&lt;/code&gt; is built with C++11.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;0.y.z&lt;/code&gt; can be used with older compilers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;00.11.z&lt;/code&gt; can be used both in old and new compilers.&lt;/li&gt; &#xA; &lt;li&gt;Major versions maintain binary-compatibility.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Special note&lt;/h3&gt; &#xA;&lt;p&gt;The branch &lt;code&gt;00.11.z&lt;/code&gt;is a new branch, its major version number &lt;code&gt;00&lt;/code&gt; is to show that it is different from &lt;code&gt;0.y.z&lt;/code&gt; and &lt;code&gt;1.y.z&lt;/code&gt;, the main purpose of this branch is to make a balance between the other two branches. Thus, users can use some new features in this new branch that introduced in 1.y.z, but can hardly applied into 0.y.z.&lt;/p&gt; &#xA;&lt;h2&gt;Using JsonCpp in your project&lt;/h2&gt; &#xA;&lt;h3&gt;The vcpkg dependency manager&lt;/h3&gt; &#xA;&lt;p&gt;You can download and install JsonCpp using the &lt;a href=&#34;https://github.com/Microsoft/vcpkg/&#34;&gt;vcpkg&lt;/a&gt; dependency manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/Microsoft/vcpkg.git&#xA;cd vcpkg&#xA;./bootstrap-vcpkg.sh&#xA;./vcpkg integrate install&#xA;./vcpkg install jsoncpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The JsonCpp port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please &lt;a href=&#34;https://github.com/Microsoft/vcpkg&#34;&gt;create an issue or pull request&lt;/a&gt; on the vcpkg repository.&lt;/p&gt; &#xA;&lt;h3&gt;Amalgamated source&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/open-source-parsers/jsoncpp/wiki/Amalgamated-(Possibly-outdated)&#34;&gt;https://github.com/open-source-parsers/jsoncpp/wiki/Amalgamated-(Possibly-outdated)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;The Meson Build System&lt;/h3&gt; &#xA;&lt;p&gt;If you are using the &lt;a href=&#34;http://mesonbuild.com&#34;&gt;Meson Build System&lt;/a&gt;, then you can get a wrap file by downloading it from &lt;a href=&#34;https://wrapdb.mesonbuild.com/jsoncpp&#34;&gt;Meson WrapDB&lt;/a&gt;, or simply use &lt;code&gt;meson wrap install jsoncpp&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Other ways&lt;/h3&gt; &#xA;&lt;p&gt;If you have trouble, see the &lt;a href=&#34;https://github.com/open-source-parsers/jsoncpp/wiki&#34;&gt;Wiki&lt;/a&gt;, or post a question as an Issue.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;code&gt;LICENSE&lt;/code&gt; file for details. In summary, JsonCpp is licensed under the MIT license, or public domain if desired and recognized in your jurisdiction.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PaddlePaddle/Paddle</title>
    <updated>2022-06-01T01:31:47Z</updated>
    <id>tag:github.com,2022-06-01:/PaddlePaddle/Paddle</id>
    <link href="https://github.com/PaddlePaddle/Paddle" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PArallel Distributed Deep LEarning: Machine Learning Framework from Industrial Practice （『飞桨』核心框架，深度学习&amp;机器学习高性能单机、分布式训练和跨平台部署）&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/doc/imgs/logo.png&#34; , width=&#34;1600&#34;&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;hr&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/README_cn.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/PaddlePaddle/Paddle&#34;&gt;&lt;img src=&#34;https://travis-ci.org/PaddlePaddle/Paddle.svg?branch=develop&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://paddlepaddle.org.cn/documentation/docs/en/guides/index_en.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-latest-brightgreen.svg?style=flat&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://paddlepaddle.org.cn/documentation/docs/zh/guides/index_cn.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3-%E6%9C%80%E6%96%B0-brightgreen.svg?sanitize=true&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PaddlePaddle/Paddle/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/PaddlePaddle/Paddle.svg?sanitize=true&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Welcome to the PaddlePaddle GitHub.&lt;/p&gt; &#xA;&lt;p&gt;PaddlePaddle, as the first independent R&amp;amp;D deep learning platform in China, has been officially open-sourced to professional communities since 2016. It is an industrial platform with advanced technologies and rich features that cover core deep learning frameworks, basic model libraries, end-to-end development kits, tools &amp;amp; components as well as service platforms. PaddlePaddle is originated from industrial practices with dedication and commitments to industrialization. It has been widely adopted by a wide range of sectors including manufacturing, agriculture, enterprise service, and so on while serving more than 4 million developers, 157,000 companies and generating 476,000 models. With such advantages, PaddlePaddle has helped an increasing number of partners commercialize AI.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Latest PaddlePaddle Release: &lt;a href=&#34;https://github.com/PaddlePaddle/Paddle/tree/release/2.3&#34;&gt;v2.3&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Our vision is to enable deep learning for everyone via PaddlePaddle. Please refer to our &lt;a href=&#34;https://github.com/PaddlePaddle/Paddle/releases&#34;&gt;release announcement&lt;/a&gt; to track the latest features of PaddlePaddle.&lt;/p&gt; &#xA;&lt;h3&gt;Install Latest Stable Release:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;# CPU&#xA;pip install paddlepaddle&#xA;# GPU&#xA;pip install paddlepaddle-gpu&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information about installation, please view &lt;a href=&#34;https://www.paddlepaddle.org.cn/install/quick&#34;&gt;Quick Install&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Now our developers can acquire Tesla V100 online computing resources for free. If you create a program by AI Studio, you will obtain 8 hours to train models online per day. &lt;a href=&#34;https://aistudio.baidu.com/aistudio/index&#34;&gt;Click here to start&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;FOUR LEADING TECHNOLOGIES&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Agile Framework for Industrial Development of Deep Neural Networks&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The PaddlePaddle deep learning framework facilitates the development while lowering the technical burden, through leveraging a programmable scheme to architect the neural networks. It supports both declarative programming and imperative programming with both development flexibility and high runtime performance preserved. The neural architectures could be automatically designed by algorithms with better performance than the ones designed by human experts.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Support Ultra-Large-Scale Training of Deep Neural Networks&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;PaddlePaddle has made breakthroughs in ultra-large-scale deep neural networks training. It launched the world&#39;s first large-scale open-source training platform that supports the training of deep networks with 100 billion features and trillions of parameters using data sources distributed over hundreds of nodes. PaddlePaddle overcomes the online deep learning challenges for ultra-large-scale deep learning models, and further achieved real-time model updating with more than 1 trillion parameters. &lt;a href=&#34;https://github.com/PaddlePaddle/Fleet&#34;&gt;Click here to learn more&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;High-Performance Inference Engines for Comprehensive Deployment Environments&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;PaddlePaddle is not only compatible with models trained in 3rd party open-source frameworks , but also offers complete inference products for various production scenarios. Our inference product line includes &lt;a href=&#34;https://paddle-inference.readthedocs.io/en/latest/product_introduction/summary.html&#34;&gt;Paddle Inference&lt;/a&gt;: Native inference library for high-performance server and cloud inference; &lt;a href=&#34;https://github.com/PaddlePaddle/Serving&#34;&gt;Paddle Serving&lt;/a&gt;: A service-oriented framework suitable for distributed and pipeline productions; &lt;a href=&#34;https://github.com/PaddlePaddle/Paddle-Lite&#34;&gt;Paddle Lite&lt;/a&gt;: Ultra-Lightweight inference engine for mobile and IoT environments; &lt;a href=&#34;https://www.paddlepaddle.org.cn/paddle/paddlejs&#34;&gt;Paddle.js&lt;/a&gt;: A frontend inference engine for browser and mini-apps. Furthermore, by great amounts of optimization with leading hardware in each scenario, Paddle inference engines outperform most of the other mainstream frameworks.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Industry-Oriented Models and Libraries with Open Source Repositories&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;PaddlePaddle includes and maintains more than 100 mainstream models that have been practiced and polished for a long time in the industry. Some of these models have won major prizes from key international competitions. In the meanwhile, PaddlePaddle has further more than 200 pre-training models (some of them with source codes) to facilitate the rapid development of industrial applications. &lt;a href=&#34;https://github.com/PaddlePaddle/models&#34;&gt;Click here to learn more&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;We provide &lt;a href=&#34;https://www.paddlepaddle.org.cn/documentation/docs/en/guides/index_en.html&#34;&gt;English&lt;/a&gt; and &lt;a href=&#34;https://www.paddlepaddle.org.cn/documentation/docs/zh/guide/index_cn.html&#34;&gt;Chinese&lt;/a&gt; documentation.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.paddlepaddle.org.cn/documentation/docs/en/guides/index_en.html&#34;&gt;Guides&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You might want to start from how to implement deep learning basics with PaddlePaddle.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.paddlepaddle.org.cn/documentation/docs/zh/tutorial/index_cn.html&#34;&gt;Practice&lt;/a&gt;&lt;/p&gt; &lt;p&gt;So far you have already been familiar with Fluid. And the next step should be building a more efficient model or inventing your original Operator.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.paddlepaddle.org.cn/documentation/docs/en/api/index_en.html&#34;&gt;API Reference&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Our new API enables much shorter programs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.paddlepaddle.org.cn/documentation/docs/en/guides/08_contribution/index_en.html&#34;&gt;How to Contribute&lt;/a&gt;&lt;/p&gt; &lt;p&gt;We appreciate your contributions!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Communication&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/Paddle/issues&#34;&gt;Github Issues&lt;/a&gt;: bug reports, feature requests, install issues, usage issues, etc.&lt;/li&gt; &#xA; &lt;li&gt;QQ discussion group: 441226485 (PaddlePaddle).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ai.baidu.com/forum/topic/list/168?pageNo=1&#34;&gt;Forums&lt;/a&gt;: discuss implementations, research, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Courses&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aistudio.baidu.com/aistudio/course/introduce/19084&#34;&gt;Server Deployments&lt;/a&gt;: Courses intorducing high performance server deployments via local and remote services.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aistudio.baidu.com/aistudio/course/introduce/22690&#34;&gt;Edge Deployments&lt;/a&gt;: Courses intorducing edge deployments from mobile, IoT to web and applets.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Copyright and License&lt;/h2&gt; &#xA;&lt;p&gt;PaddlePaddle is provided under the &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/LICENSE&#34;&gt;Apache-2.0 license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>