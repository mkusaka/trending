<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-05T01:31:02Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bdring/FluidNC</title>
    <updated>2022-08-05T01:31:02Z</updated>
    <id>tag:github.com,2022-08-05:/bdring/FluidNC</id>
    <link href="https://github.com/bdring/FluidNC" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The next generation of motion control firmware&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://github.com/bdring/FluidNC/wiki/images/logos/FluidNC.svg?sanitize=true&#34; width=&#34;600&#34;&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;FluidNC&lt;/strong&gt; is a CNC firmware optimized for the ESP32 controller. It is the next generation of firmware from the creators of Grbl_ESP32. It includes a web based UI and the flexibility to operate a wide variety of machine types. This includes the ability to control machines with multiple tool types such as laser plus spindle or a tool changer.&lt;/p&gt; &#xA;&lt;h2&gt;Firmware Architecture&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Object-Oriented hierarchical design&lt;/li&gt; &#xA; &lt;li&gt;Hardware abstraction for machine features like spindles, motors, and stepper drivers&lt;/li&gt; &#xA; &lt;li&gt;Extensible - Adding new features is much easier for the firmware as well as gcode senders.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Machine Definition Method&lt;/h2&gt; &#xA;&lt;p&gt;There is no need to compile the firmware. You use an installation script to upload the latest release of the firmware and then create &lt;a href=&#34;http://wiki.fluidnc.com/en/config/overview&#34;&gt;config file&lt;/a&gt; text file that describes your machine. That file is uploaded to the FLASH on the ESP32 using the USB/Serial port or WIFI.&lt;/p&gt; &#xA;&lt;p&gt;You can have multiple config files stored on the ESP32. The default is config.yaml, but you can change that with &lt;a href=&#34;http://wiki.fluidnc.com/en/features/commands_and_settings#config_filename&#34;&gt;&lt;strong&gt;$Config/Filename=&amp;lt;myOtherConfig.yaml&amp;gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Basic Grbl Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;The intent is to maintain as much Grbl compatibility as possible. It is 100% compatible with the day to day operations of running gcode with a sender, so there is no change to the Grbl gcode send/response protocol, and all Grbl gcode are supported. Most of the $ settings have been replaced with easily readable items in the config file.&lt;/p&gt; &#xA;&lt;h2&gt;WebUI&lt;/h2&gt; &#xA;&lt;p&gt;FluidNC includes a built-in browser-based Web UI (Esp32_WebUI) so you control the machine from a PC, phone, or tablet on the same Wifi network.&lt;/p&gt; &#xA;&lt;h2&gt;Wiki&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://wiki.fluidnc.com&#34;&gt;Check out the wiki&lt;/a&gt; if you want the learn more about the feature or how to use it.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;The original &lt;a href=&#34;https://github.com/gnea/grbl&#34;&gt;Grbl&lt;/a&gt; is an awesome project by Sungeon (Sonny) Jeon. I have known him for many years and he is always very helpful. I have used Grbl on many projects.&lt;/p&gt; &#xA;&lt;p&gt;The Wifi and WebUI is based on &lt;a href=&#34;https://github.com/luc-github/ESP3D-WEBUI&#34;&gt;this project.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Discussion&lt;/h2&gt; &#xA;&lt;img src=&#34;http://wiki.fluidnc.com/discord-logo_trans.png&#34; width=&#34;180&#34;&gt; &#xA;&lt;p&gt;We have a Discord server for the development this project. Ask for an invite&lt;/p&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;p&gt;This project requires a lot of work and often expensive items for testing. Please consider a safe, secure and highly appreciated donation via the PayPal link below or via the GitHub sponsor link at the top of the page.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.com/donate/?hosted_button_id=8DYLB6ZYYDG7Y&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zeek/zeek</title>
    <updated>2022-08-05T01:31:02Z</updated>
    <id>tag:github.com,2022-08-05:/zeek/zeek</id>
    <link href="https://github.com/zeek/zeek" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Zeek is a powerful network analysis framework that is much different from the typical IDS you may know.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://www.zeek.org&#34;&gt;&lt;img src=&#34;https://zeek.org/wp-content/uploads/2020/04/zeek-logo-without-text.png&#34; alt=&#34;Zeek Logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The Zeek Network Security Monitor&lt;/p&gt; &lt;/h1&gt;&#xA;&lt;h4 align=&#34;center&#34;&gt; &lt;p&gt;A &lt;a href=&#34;https://old.zeek.org/why_choose_zeek.pdf&#34;&gt;powerful&lt;/a&gt; framework for network traffic analysis and security monitoring.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zeek/zeek/master/#key-features&#34;&gt;&lt;em&gt;Key Features&lt;/em&gt;&lt;/a&gt; — &lt;a href=&#34;https://docs.zeek.org/en/stable/index.html&#34;&gt;&lt;em&gt;Documentation&lt;/em&gt;&lt;/a&gt; — &lt;a href=&#34;https://raw.githubusercontent.com/zeek/zeek/master/#getting-started&#34;&gt;&lt;em&gt;Getting Started&lt;/em&gt;&lt;/a&gt; — &lt;a href=&#34;https://raw.githubusercontent.com/zeek/zeek/master/#development&#34;&gt;&lt;em&gt;Development&lt;/em&gt;&lt;/a&gt; — &lt;a href=&#34;https://raw.githubusercontent.com/zeek/zeek/master/#license&#34;&gt;&lt;em&gt;License&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Follow us on Twitter at &lt;a href=&#34;https://twitter.com/zeekurity&#34;&gt;@zeekurity&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://coveralls.io/github/zeek/zeek?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/zeek/zeek/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/h4&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;In-depth Analysis&lt;/strong&gt; Zeek ships with analyzers for many protocols, enabling high-level semantic analysis at the application layer.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Adaptable and Flexible&lt;/strong&gt; Zeek&#39;s domain-specific scripting language enables site-specific monitoring policies and means that it is not restricted to any particular detection approach.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Efficient&lt;/strong&gt; Zeek targets high-performance networks and is used operationally at a variety of large sites.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Highly Stateful&lt;/strong&gt; Zeek keeps extensive application-layer state about the network it monitors and provides a high-level archive of a network&#39;s activity.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;The best place to find information about getting started with Zeek is our web site &lt;a href=&#34;https://www.zeek.org&#34;&gt;www.zeek.org&lt;/a&gt;, specifically the &lt;a href=&#34;https://www.zeek.org/documentation/index.html&#34;&gt;documentation&lt;/a&gt; section there. On the web site you can also find downloads for stable releases, tutorials on getting Zeek set up, and many other useful resources.&lt;/p&gt; &#xA;&lt;p&gt;You can find release notes in &lt;a href=&#34;https://github.com/zeek/zeek/raw/master/NEWS&#34;&gt;NEWS&lt;/a&gt;, and a complete record of all changes in &lt;a href=&#34;https://github.com/zeek/zeek/raw/master/CHANGES&#34;&gt;CHANGES&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To work with the most recent code from the development branch of Zeek, clone the master git repository:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;git clone --recursive https://github.com/zeek/zeek&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;With all &lt;a href=&#34;https://docs.zeek.org/en/stable/install/install.html#prerequisites&#34;&gt;dependencies&lt;/a&gt; in place, build and install:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo make install&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Write your first Zeek script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-zeek&#34;&gt;# File &#34;hello.zeek&#34;&#xA;&#xA;event zeek_init()&#xA;    {&#xA;    print &#34;Hello World!&#34;;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And run it:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;zeek hello.zeek&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For learning more about the Zeek scripting language, &lt;a href=&#34;http://try.zeek.org&#34;&gt;try.zeek.org&lt;/a&gt; is a great resource.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Zeek is developed on GitHub by its community. We welcome contributions. Working on an open source project like Zeek can be an incredibly rewarding experience and, packet by packet, makes the Internet a little safer. Today, as a result of countless contributions, Zeek is used operationally around the world by major companies and educational and scientific institutions alike for securing their cyber infrastructure.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re interested in getting involved, we collect feature requests and issues on GitHub &lt;a href=&#34;https://github.com/zeek/zeek/issues&#34;&gt;here&lt;/a&gt; and you might find &lt;a href=&#34;https://github.com/zeek/zeek/labels/good%20first%20issue&#34;&gt;these&lt;/a&gt; to be a good place to get started. More information on Zeek&#39;s development can be found &lt;a href=&#34;https://www.zeek.org/development/index.html&#34;&gt;here&lt;/a&gt;, and information about its community and mailing lists (which are fairly active) can be found &lt;a href=&#34;https://www.zeek.org/community/index.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Zeek comes with a BSD license, allowing for free use with virtually no restrictions. You can find it &lt;a href=&#34;https://github.com/zeek/zeek/raw/master/COPYING&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Project-OSRM/osrm-backend</title>
    <updated>2022-08-05T01:31:02Z</updated>
    <id>tag:github.com,2022-08-05:/Project-OSRM/osrm-backend</id>
    <link href="https://github.com/Project-OSRM/osrm-backend" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open Source Routing Machine - C++ backend&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Open Source Routing Machine&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Linux / macOS&lt;/th&gt; &#xA;   &lt;th&gt;Windows&lt;/th&gt; &#xA;   &lt;th&gt;Code Coverage&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Project-OSRM/osrm-backend/actions/workflows/osrm-backend.yml&#34;&gt;&lt;img src=&#34;https://github.com/Project-OSRM/osrm-backend/actions/workflows/osrm-backend.yml/badge.svg?sanitize=true&#34; alt=&#34;osrm-backend CI&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ci.appveyor.com/project/DennisOSRM/osrm-backend&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/4iuo3s9gxprmcjjh&#34; alt=&#34;AppVeyor&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://codecov.io/gh/Project-OSRM/osrm-backend&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/Project-OSRM/osrm-backend/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;High performance routing engine written in C++14 designed to run on OpenStreetMap data.&lt;/p&gt; &#xA;&lt;p&gt;The following services are available via HTTP API, C++ library interface and NodeJs wrapper:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Nearest - Snaps coordinates to the street network and returns the nearest matches&lt;/li&gt; &#xA; &lt;li&gt;Route - Finds the fastest route between coordinates&lt;/li&gt; &#xA; &lt;li&gt;Table - Computes the duration or distances of the fastest route between all pairs of supplied coordinates&lt;/li&gt; &#xA; &lt;li&gt;Match - Snaps noisy GPS traces to the road network in the most plausible way&lt;/li&gt; &#xA; &lt;li&gt;Trip - Solves the Traveling Salesman Problem using a greedy heuristic&lt;/li&gt; &#xA; &lt;li&gt;Tile - Generates Mapbox Vector Tiles with internal routing metadata&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To quickly try OSRM use our &lt;a href=&#34;http://map.project-osrm.org&#34;&gt;demo server&lt;/a&gt; which comes with both the backend and a frontend on top.&lt;/p&gt; &#xA;&lt;p&gt;For a quick introduction about how the road network is represented in OpenStreetMap and how to map specific road network features have a look at &lt;a href=&#34;https://www.mapbox.com/mapping/mapping-for-navigation/&#34;&gt;this guide about mapping for navigation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Related &lt;a href=&#34;https://github.com/Project-OSRM&#34;&gt;Project-OSRM&lt;/a&gt; repositories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Project-OSRM/osrm-frontend&#34;&gt;osrm-frontend&lt;/a&gt; - User-facing frontend with map. The demo server runs this on top of the backend&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Project-OSRM/osrm-text-instructions&#34;&gt;osrm-text-instructions&lt;/a&gt; - Text instructions from OSRM route response&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/osrm/osrm-backend/&#34;&gt;osrm-backend-docker&lt;/a&gt; - Ready to use Docker images&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;h3&gt;Full documentation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://project-osrm.org&#34;&gt;Hosted documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Project-OSRM/osrm-backend/master/docs/http.md&#34;&gt;osrm-routed HTTP API documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Project-OSRM/osrm-backend/master/docs/libosrm.md&#34;&gt;libosrm API documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;IRC: &lt;code&gt;irc.oftc.net&lt;/code&gt;, channel: &lt;code&gt;#osrm&lt;/code&gt; (&lt;a href=&#34;https://webchat.oftc.net&#34;&gt;Webchat&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Mailinglist: &lt;code&gt;https://lists.openstreetmap.org/listinfo/osrm-talk&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;The easiest and quickest way to setup your own routing engine is to use Docker images we provide.&lt;/p&gt; &#xA;&lt;p&gt;There are two pre-processing pipelines available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Contraction Hierarchies (CH)&lt;/li&gt; &#xA; &lt;li&gt;Multi-Level Dijkstra (MLD)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;we recommend using MLD by default except for special use-cases such as very large distance matrices where CH is still a better fit for the time being. In the following we explain the MLD pipeline. If you want to use the CH pipeline instead replace &lt;code&gt;osrm-partition&lt;/code&gt; and &lt;code&gt;osrm-customize&lt;/code&gt; with a single &lt;code&gt;osrm-contract&lt;/code&gt; and change the algorithm option for &lt;code&gt;osrm-routed&lt;/code&gt; to &lt;code&gt;--algorithm ch&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Using Docker&lt;/h3&gt; &#xA;&lt;p&gt;We base our Docker images (&lt;a href=&#34;https://hub.docker.com/r/osrm/osrm-backend/&#34;&gt;backend&lt;/a&gt;, &lt;a href=&#34;https://hub.docker.com/r/osrm/osrm-frontend/&#34;&gt;frontend&lt;/a&gt;) on Debian and make sure they are as lightweight as possible.&lt;/p&gt; &#xA;&lt;p&gt;Download OpenStreetMap extracts for example from &lt;a href=&#34;http://download.geofabrik.de/&#34;&gt;Geofabrik&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget http://download.geofabrik.de/europe/germany/berlin-latest.osm.pbf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pre-process the extract with the car profile and start a routing engine HTTP server on port 5000&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -t -v &#34;${PWD}:/data&#34; osrm/osrm-backend osrm-extract -p /opt/car.lua /data/berlin-latest.osm.pbf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The flag &lt;code&gt;-v &#34;${PWD}:/data&#34;&lt;/code&gt; creates the directory &lt;code&gt;/data&lt;/code&gt; inside the docker container and makes the current working directory &lt;code&gt;&#34;${PWD}&#34;&lt;/code&gt; available there. The file &lt;code&gt;/data/berlin-latest.osm.pbf&lt;/code&gt; inside the container is referring to &lt;code&gt;&#34;${PWD}/berlin-latest.osm.pbf&#34;&lt;/code&gt; on the host.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -t -v &#34;${PWD}:/data&#34; osrm/osrm-backend osrm-partition /data/berlin-latest.osrm&#xA;docker run -t -v &#34;${PWD}:/data&#34; osrm/osrm-backend osrm-customize /data/berlin-latest.osrm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;berlin-latest.osrm&lt;/code&gt; has a different file extension.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -t -i -p 5000:5000 -v &#34;${PWD}:/data&#34; osrm/osrm-backend osrm-routed --algorithm mld /data/berlin-latest.osrm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make requests against the HTTP server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl &#34;http://127.0.0.1:5000/route/v1/driving/13.388860,52.517037;13.385983,52.496891?steps=true&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optionally start a user-friendly frontend on port 9966, and open it up in your browser&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -p 9966:9966 osrm/osrm-frontend&#xA;xdg-open &#39;http://127.0.0.1:9966&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In case Docker complains about not being able to connect to the Docker daemon make sure you are in the &lt;code&gt;docker&lt;/code&gt; group.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo usermod -aG docker $USER&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After adding yourself to the &lt;code&gt;docker&lt;/code&gt; group make sure to log out and back in again with your terminal.&lt;/p&gt; &#xA;&lt;p&gt;We support the following images on Docker Cloud:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;latest&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;master&lt;/code&gt; compiled with release flag&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;latest-assertions&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;master&lt;/code&gt; compiled with with release flag, assertions enabled and debug symbols&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;latest-debug&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;master&lt;/code&gt; compiled with debug flag&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;tag&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;specific tag compiled with release flag&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;tag&amp;gt;-debug&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;specific tag compiled with debug flag&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Building from Source&lt;/h3&gt; &#xA;&lt;p&gt;The following targets Ubuntu 16.04. For instructions how to build on different distributions, macOS or Windows see our &lt;a href=&#34;https://github.com/Project-OSRM/osrm-backend/wiki&#34;&gt;Wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Install dependencies&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install build-essential git cmake pkg-config \&#xA;libbz2-dev libxml2-dev libzip-dev libboost-all-dev \&#xA;lua5.2 liblua5.2-dev libtbb-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Compile and install OSRM binaries&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p build&#xA;cd build&#xA;cmake ..&#xA;cmake --build .&#xA;sudo cmake --build . --target install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Request Against the Demo Server&lt;/h3&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://github.com/Project-OSRM/osrm-backend/wiki/Demo-server&#34;&gt;API usage policy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Simple query with instructions and alternatives on Berlin:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl &#34;https://router.project-osrm.org/route/v1/driving/13.388860,52.517037;13.385983,52.496891?steps=true&amp;amp;alternatives=true&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using the Node.js Bindings&lt;/h3&gt; &#xA;&lt;p&gt;The Node.js bindings provide read-only access to the routing engine. We provide API documentation and examples &lt;a href=&#34;https://raw.githubusercontent.com/Project-OSRM/osrm-backend/master/docs/nodejs/api.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You will need a modern &lt;code&gt;libstdc++&lt;/code&gt; toolchain (&lt;code&gt;&amp;gt;= GLIBCXX_3.4.20&lt;/code&gt;) for binary compatibility if you want to use the pre-built binaries. For older Ubuntu systems you can upgrade your standard library for example with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:ubuntu-toolchain-r/test&#xA;sudo apt-get update -y&#xA;sudo apt-get install -y libstdc++-5-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can install the Node.js bindings via &lt;code&gt;npm install osrm&lt;/code&gt; or from this repository either via&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which will check and use pre-built binaries if they&#39;re available for this release and your Node version, or via&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install --build-from-source&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to always force building the Node.js bindings from source.&lt;/p&gt; &#xA;&lt;p&gt;For usage details have a look &lt;a href=&#34;https://raw.githubusercontent.com/Project-OSRM/osrm-backend/master/docs/nodejs/api.md&#34;&gt;these API docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;An exemplary implementation by a 3rd party with Docker and Node.js can be found &lt;a href=&#34;https://github.com/door2door-io/osrm-express-server-demo&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;References in publications&lt;/h2&gt; &#xA;&lt;p&gt;When using the code in a (scientific) publication, please cite&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@inproceedings{luxen-vetter-2011,&#xA; author = {Luxen, Dennis and Vetter, Christian},&#xA; title = {Real-time routing with OpenStreetMap data},&#xA; booktitle = {Proceedings of the 19th ACM SIGSPATIAL International Conference on Advances in Geographic Information Systems},&#xA; series = {GIS &#39;11},&#xA; year = {2011},&#xA; isbn = {978-1-4503-1031-4},&#xA; location = {Chicago, Illinois},&#xA; pages = {513--516},&#xA; numpages = {4},&#xA; url = {http://doi.acm.org/10.1145/2093973.2094062},&#xA; doi = {10.1145/2093973.2094062},&#xA; acmid = {2094062},&#xA; publisher = {ACM},&#xA; address = {New York, NY, USA},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>