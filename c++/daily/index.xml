<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-11T01:30:34Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>chenjunnn/rm_auto_aim</title>
    <updated>2023-04-11T01:30:34Z</updated>
    <id>tag:github.com,2023-04-11:/chenjunnn/rm_auto_aim</id>
    <link href="https://github.com/chenjunnn/rm_auto_aim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;RoboMaster 装甲板自动瞄准算法模块&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;rm_auto_aim&lt;/h1&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;RoboMaster 装甲板自瞄算法模块&lt;/p&gt; &#xA;&lt;p&gt;若有帮助请Star这个项目，感谢~&lt;/p&gt; &#xA;&lt;!-- ![](armor_detector/docs/result.png) --&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;The source code is released under a &lt;a href=&#34;https://raw.githubusercontent.com/chenjunnn/rm_auto_aim/main/rm_auto_aim/LICENSE&#34;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-blue.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Author: Chen Jun&lt;/p&gt; &#xA;&lt;p&gt;运行环境：Ubuntu 22.04 / ROS2 Humble (未在其他环境下测试)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/chenjunnn/rm_auto_aim/actions/workflows/ros_ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building from Source&lt;/h2&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;p&gt;在 Ubuntu 22.04 环境下安装 &lt;a href=&#34;https://docs.ros.org/en/humble/Installation/Ubuntu-Install-Debians.html&#34;&gt;ROS2 Humble&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;创建 ROS 工作空间后 clone 项目，使用 rosdep 安装依赖后编译代码&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd ros_ws/src&#xA;git clone https://github.com/chenjunnn/rm_auto_aim.git&#xA;cd ..&#xA;rosdep install --from-paths src --ignore-src -r -y&#xA;colcon build --symlink-install --packages-up-to auto_aim_bringup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Testing&lt;/h3&gt; &#xA;&lt;p&gt;Run the tests with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;colcon test --packages-up-to auto_aim_bringup&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chenjunnn/rm_auto_aim/main/armor_detector&#34;&gt;armor_detector&lt;/a&gt;&lt;/p&gt; &lt;p&gt;订阅相机参数及图像流进行装甲板的识别并解算三维位置，输出识别到的装甲板在输入frame下的三维位置 (一般是以相机光心为原点的相机坐标系)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chenjunnn/rm_auto_aim/main/armor_processor&#34;&gt;armor_processor&lt;/a&gt;&lt;/p&gt; &lt;p&gt;订阅识别节点发布的装甲板三维位置及机器人的坐标转换信息，将装甲板三维位置变换到指定惯性系下，然后将目标送入跟踪器中得到跟踪目标在指定惯性系下（一般是以云台中心为原点，IMU 上电时的 Yaw 朝向为 X 轴的惯性系）的位置及速度，再经过小陀螺状态检测器的处理后，发布最终的目标位置和速度&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;auto_aim_interfaces&lt;/p&gt; &lt;p&gt;定义了识别节点和处理节点的接口以及定义了用于 Debug 的信息&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;auto_aim_bringup&lt;/p&gt; &lt;p&gt;包含启动识别节点和处理节点的默认参数文件及 launch 文件&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>amnezia-vpn/amnezia-client</title>
    <updated>2023-04-11T01:30:34Z</updated>
    <id>tag:github.com,2023-04-11:/amnezia-vpn/amnezia-client</id>
    <link href="https://github.com/amnezia-vpn/amnezia-client" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Amnezia VPN Client (Desktop+Mobile)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Amnezia VPN&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;em&gt;The best client for self-hosted VPN&lt;/em&gt;&lt;/h2&gt; &#xA;&lt;p&gt;[&lt;img src=&#34;https://github.com/amnezia-vpn/desktop-client/actions/workflows/deploy.yml/badge.svg?branch=dev&#34; alt=&#34;Build Status&#34;&gt;]&lt;/p&gt; &#xA;&lt;p&gt;Amnezia is a VPN client with the key feature of deploying your own VPN server on you virtual server.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Very easy to use - enter your ip address, ssh login and password, and Amnezia client will automatically install VPN docker containers to your server and connect to VPN.&lt;/li&gt; &#xA; &lt;li&gt;OpenVPN and OpenVPN over ShadowSocks protocols support.&lt;/li&gt; &#xA; &lt;li&gt;Custom VPN routing mode support - add any sites to client to enable VPN only for them.&lt;/li&gt; &#xA; &lt;li&gt;Windows and MacOS support.&lt;/li&gt; &#xA; &lt;li&gt;Unsecure sharing connection profile for family use.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tech&lt;/h2&gt; &#xA;&lt;p&gt;AmneziaVPN uses a number of open source projects to work:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.openssl.org/&#34;&gt;OpenSSL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openvpn.net/&#34;&gt;OpenVPN&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://shadowsocks.org/&#34;&gt;ShadowSocks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.qt.io/&#34;&gt;Qt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jaredtao/QtSsh&#34;&gt;QtSsh&lt;/a&gt; - forked form Qt Creator&lt;/li&gt; &#xA; &lt;li&gt;and more...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Checking out the source code&lt;/h2&gt; &#xA;&lt;p&gt;Make sure to pull all submodules after checking out the repo.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule update --init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Want to contribute? Welcome!&lt;/p&gt; &#xA;&lt;h3&gt;Building sources and deployment&lt;/h3&gt; &#xA;&lt;p&gt;Easiest way to build your own executables - is to fork project and configure &lt;a href=&#34;https://travis-ci.com/&#34;&gt;Travis CI&lt;/a&gt;&lt;br&gt; Or you can build sources manually using Qt Creator. Qt &amp;gt;= 14.2 supported.&lt;br&gt; Look to the &lt;code&gt;build_macos.sh&lt;/code&gt; and &lt;code&gt;build_windows.bat&lt;/code&gt; scripts in &lt;code&gt;deploy&lt;/code&gt; folder for details.&lt;/p&gt; &#xA;&lt;h3&gt;How to build iOS app from source code on MacOS&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;First, make sure you have &lt;a href=&#34;https://developer.apple.com/xcode/&#34;&gt;XCode&lt;/a&gt; installed, at least version 12 or higher.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;We use &lt;code&gt;qmake&lt;/code&gt; to generate the XCode project and then we &#34;patch&#34; it to add extra components such as the wireguard, the browser bridge and so on. We patch the XCode project using &lt;a href=&#34;https://github.com/CocoaPods/Xcodeproj&#34;&gt;xcodeproj&lt;/a&gt;. To install it:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gem install xcodeproj # probably you want to run this command with `sudo`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;You also need to install go &amp;gt;= v1.16. If you don&#39;t have it done already, download go from the &lt;a href=&#34;https://golang.org/dl/&#34;&gt;official website&lt;/a&gt; or use Homebrew. Latest version is recommended.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Navigate inside client folder and generate the XCode project using our script:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd client&#xA;./scripts/apple_compile.sh ios&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have more than one version of Qt installed, you&#39;ll most likely get a &#34;&lt;code&gt;qmake&lt;/code&gt; cannot be found in your &lt;code&gt;$PATH&lt;/code&gt;&#34; error. In this case run this script using QT\IOS_BIN env to set the path for the Qt5 macos build bin folder. For example, the path could look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;QT_IOS_BIN=&#34;/Users/username/Qt/6.4.1/ios/bin&#34; ./scripts/apple_compile.sh ios&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you get &lt;code&gt;gomobile: command not found&lt;/code&gt; make sure to set PATH to the location of the bin folder where gomobile was installed. Usually, it&#39;s in &lt;code&gt;GOPATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export PATH=$(PATH):/path/to/GOPATH/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Xcode should automatically open. You can then run/test/archive/ship the app.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If build fails with the following error&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make: *** &#xA;[$(PROJECTDIR)/client/build/AmneziaVPN.build/Debug-iphoneos/wireguard-go-bridge/goroot/.prepared] &#xA;Error 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add a user defined variable to both AmneziaVPN and WireGuardNetworkExtension targets&#39; build settings with key &lt;code&gt;PATH&lt;/code&gt; and value &lt;code&gt;${PATH}/path/to/bin/folder/with/go/executable&lt;/code&gt;, e.g. &lt;code&gt;${PATH}:/usr/local/go/bin&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;if above error still persists on you M1 Mac, then most proably you need to install arch based cmake&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;arch -arm64 brew install cmake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build might fail with &#34;source files not found&#34; error the first time you try it, because modern XCode build system compiles dependencies in parallel, and some dependencies end up being built after the ones that require them. In this case simply restart the build.&lt;/p&gt; &#xA;&lt;h2&gt;How to build the Android app&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;tested on Mac OS&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Android app has the following requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;JDK 11&lt;/li&gt; &#xA; &lt;li&gt;Android platform SDK 33&lt;/li&gt; &#xA; &lt;li&gt;cmake 3.25.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;After you have installed QT, QT Creator and Android Studio installed, you need to configure QT Creator correctly. Click in the top menu bar on &lt;code&gt;QT Creator&lt;/code&gt; -&amp;gt; &lt;code&gt;Preferences&lt;/code&gt; -&amp;gt; &lt;code&gt;Devices&lt;/code&gt; and select the tab &lt;code&gt;Android&lt;/code&gt;. * set path to jdk 11 * set path to Android SDK ($ANDROID_HOME)&lt;/p&gt; &#xA;&lt;p&gt;In case you get errors regarding missing SDK or &#39;sdkmanager not running&#39;, you cannot fix them by correcting the paths and you have some spare GBs on your disk, you can let QT Creator install all requirements by choosing an empty folder for &lt;code&gt;Android SDK location&lt;/code&gt; and click on &lt;code&gt;Set Up SDK&lt;/code&gt;. Be aware: This will install a second Android SDK and NDK on your machine!&lt;/p&gt; &#xA;&lt;p&gt;Double check that the right cmake version is configured: Click on &lt;code&gt;QT Creator&lt;/code&gt; -&amp;gt; &lt;code&gt;Preferences&lt;/code&gt; and click on the side menu on &lt;code&gt;Kits&lt;/code&gt;. Under the center content view&#39;s &lt;code&gt;Kits&lt;/code&gt; tab you&#39;ll find an entry &lt;code&gt;CMake Tool&lt;/code&gt;. If the default selected CMake version is lower than 3.25.0, install on your system CMake &amp;gt;= 3.25.0 and choose &lt;code&gt;System CMake at &amp;lt;path&amp;gt;&lt;/code&gt; from the drop down list. If this entry is missing, you either have not installed CMake yet or QT Creator hasn&#39;t found the path to it. In that case click in the preferences window on the side menu item &lt;code&gt;CMake&lt;/code&gt;, then on the tab &lt;code&gt;Tools&lt;/code&gt;in the center content view and finally on the Button &lt;code&gt;Add&lt;/code&gt; to set the path to your installed CMake.&lt;/p&gt; &#xA;&lt;p&gt;Please make sure that you have selected Android Platform SDK 33 for your project: click in the main view&#39;s side menu on on &lt;code&gt;Projects&lt;/code&gt;, on the left you&#39;ll see a section &lt;code&gt;Build &amp;amp; Run&lt;/code&gt; showing different Android build targets. You can select any of them, Amnezia VPN&#39;s project setup is designed in a way that always all Android targets will be build. Click on the targets submenu item &lt;code&gt;Build&lt;/code&gt; and scroll in the center content view to &lt;code&gt;Build Steps&lt;/code&gt;. Click on &lt;code&gt;Details&lt;/code&gt; at the end of the headline &lt;code&gt;Build Android APK&lt;/code&gt; (The &lt;code&gt;Details&lt;/code&gt; button might be hidden in case QT Creator Window is not running in full screen!). Here we are: choose &lt;code&gt;android-33&lt;/code&gt; as &lt;code&gt;Android Build platfrom SDK&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;That&#39;s it you should be ready to compile the project from QT Creator!&lt;/p&gt; &#xA;&lt;h3&gt;Development flow&lt;/h3&gt; &#xA;&lt;p&gt;After you&#39;ve hit the build button, QT-Creator copies the whole project to a folder in the repositories parent directory. The folder should look something like &lt;code&gt;build-amnezia-client-Android_Qt_&amp;lt;version&amp;gt;_Clang_&amp;lt;architecture&amp;gt;-&amp;lt;BuildType&amp;gt;&lt;/code&gt;. If you want to develop Amnezia VPNs Android components written in Kotlin, such as components using system APIs, you need to import the generated project in Android Studio with &lt;code&gt;build-amnezia-client-Android_Qt_&amp;lt;version&amp;gt;_Clang_&amp;lt;architecture&amp;gt;-&amp;lt;BuildType&amp;gt;/client/android-build&lt;/code&gt; as the projects root directory. While you should be able to compile the generated project from Android Studio, you cannot work directly in the repository&#39;s Android project. So whenever you are confident with your work in the generated proejct, you&#39;ll need to copy and paste the affected files to the corresponding path in the repositories Android project so that you can add and commit your changes!&lt;/p&gt; &#xA;&lt;p&gt;You may face compiling issues in QT Creator after you&#39;ve worked in Android Studio on the generated project. Just do a &lt;code&gt;./gradlew clean&lt;/code&gt; in the geneated project&#39;s root directory (&lt;code&gt;&amp;lt;path&amp;gt;/client/android-build/.&lt;/code&gt;) and you should be good to continue.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;GPL v.3&lt;/p&gt; &#xA;&lt;h2&gt;Contacts&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/amnezia_vpn_en&#34;&gt;https://t.me/amnezia_vpn_en&lt;/a&gt; - Telegram support channel (English)&lt;br&gt; &lt;a href=&#34;https://t.me/amnezia_vpn&#34;&gt;https://t.me/amnezia_vpn&lt;/a&gt; - Telegram support channel (Russian)&lt;br&gt; &lt;a href=&#34;https://signal.group/#CjQKIB2gUf8QH_IXnOJMGQWMDjYz9cNfmRQipGWLFiIgc4MwEhAKBONrSiWHvoUFbbD0xwdh&#34;&gt;https://signal.group/...&lt;/a&gt; - Signal channel&lt;br&gt; &lt;a href=&#34;https://amnezia.org&#34;&gt;https://amnezia.org&lt;/a&gt; - project website&lt;/p&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;Bitcoin: bc1qn9rhsffuxwnhcuuu4qzrwp4upkrq94xnh8r26u&lt;br&gt; XMR: 48spms39jt1L2L5vyw2RQW6CXD6odUd4jFu19GZcDyKKQV9U88wsJVjSbL4CfRys37jVMdoaWVPSvezCQPhHXUW5UKLqUp3&lt;br&gt; payeer.com: P2561305&lt;br&gt; ko-fi.com: &lt;a href=&#34;https://ko-fi.com/amnezia_vpn&#34;&gt;https://ko-fi.com/amnezia_vpn&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fholger/crysis_vrmod</title>
    <updated>2023-04-11T01:30:34Z</updated>
    <id>tag:github.com,2023-04-11:/fholger/crysis_vrmod</id>
    <link href="https://github.com/fholger/crysis_vrmod" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Crysis. In VR.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Crysis VR Mod&lt;/h1&gt; &#xA;&lt;p&gt;This is a mod for the 2007 Crytek game &lt;em&gt;Crysis&lt;/em&gt; which makes it possible to experience it in Virtual Reality. You need to own and have installed the original Crysis (&lt;em&gt;not&lt;/em&gt; the Remastered version). It is available at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gog.com/en/game/crysis&#34;&gt;gog.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://store.steampowered.com/sub/987/&#34;&gt;Steam&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This mod is still very early in its development. It has working stereoscopic rendering with 6DOF headset tracking. There is currently no motion controller or roomscale support, so you&#39;ll have to play seated with a keyboard+mouse or gamepad. The mod currently requires SteamVR to run.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Download and install Crysis. Then head over to the mod&#39;s &lt;a href=&#34;https://github.com/fholger/crysis_vrmod/releases&#34;&gt;Releases&lt;/a&gt; and find the latest release at the top of the page. Under the &#34;Assets&#34; section find and download the &lt;code&gt;crysis-vrmod-x.y.exe&lt;/code&gt; installer. Run it and point it to where you have installed Crysis. If you are not sure and own it on Steam, right-click on Crysis in your Steam library, then select &#34;Manage&#34; -&amp;gt; &#34;Browse local files&#34;, and it will show you the game&#39;s install location.&lt;/p&gt; &#xA;&lt;p&gt;The installer will install the VR mod and all required dependencies. Once it&#39;s done, head over to your Crysis folder and double-click the &lt;code&gt;LaunchVRMod.bat&lt;/code&gt; file to start playing Crysis in VR.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: the installer is not digitally signed, so Windows will warn you and stop you from executing it. You&#39;ll have to tell it to run the installer, anyway.&lt;/p&gt; &#xA;&lt;h3&gt;Development snapshots&lt;/h3&gt; &#xA;&lt;p&gt;If you are the brave sort, you can also opt to download the &lt;a href=&#34;https://github.com/fholger/crysis_vrmod/releases/tag/latest&#34;&gt;latest development build&lt;/a&gt;. Be warned that it may be unstable and contain more bugs than the stable releases, so use at your own risk.&lt;/p&gt; &#xA;&lt;h2&gt;Playing&lt;/h2&gt; &#xA;&lt;p&gt;The mod is currently a seated experience and requires that you calibrate your seated position in SteamVR. Once in position, bring up the SteamVR menu and click on the little position icon in the lower right of the menu to calibrate your seated position.&lt;/p&gt; &#xA;&lt;p&gt;As there is currently no support for motion controllers, you have to play with a gamepad or keyboard and mouse. You will see a small white dot in front of you that functions as a crosshair replacement in VR. You can freely move the crosshair around in a small region in front of you. If you move the crosshair beyond the edges of this region, your view will rotate.&lt;/p&gt; &#xA;&lt;p&gt;In-game cutscenes display in VR by default, but since they take over the camera, you might prefer to have them display in 2D, instead. To achieve this, bring down the console (&lt;code&gt;~&lt;/code&gt; key by default) and type in &lt;code&gt;vr_cutscenes_2d 1&lt;/code&gt; to switch cutscenes into 2D mode.&lt;/p&gt; &#xA;&lt;h2&gt;Notes on performance&lt;/h2&gt; &#xA;&lt;p&gt;Be advised that Crysis in VR needs fairly potent hardware. This is in part due to it being Crysis, and in part due to the method I&#39;m using to implement stereoscopic rendering not being the most efficient one. Unfortunately, due to the limited engine and renderer access being available to me, that&#39;s about as good as I can make it.&lt;/p&gt; &#xA;&lt;p&gt;On the CPU side, expect even the most powerful CPUs to struggle in some scenes, although you should mostly be fine playing on a Ryzen 7000 or 5800X3D or an Intel 12th gen or up. Expect more issues as you go down. A Ryzen 3000 is not going to provide a very good experience.&lt;/p&gt; &#xA;&lt;p&gt;On the GPU side, it is less clear, and you do have some options to trade visual quality vs performance via the SteamVR rendering resolution and the ingame quality settings. Still, in my testing an RTX 2080 Ti was struggling (although that may have been in part due to its pairing with a weaker CPU). A 4090 does perfectly fine (duh), as does an RX 7900 XT. There are also a few tricks I can hopefully implement at some point that would improve the GPU performance a bit.&lt;/p&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The desktop mirror does not display anything beyond the menu or HUD. If you wish to record gameplay, use the SteamVR mirror view, instead.&lt;/li&gt; &#xA; &lt;li&gt;Some of the later weapons may not work properly.&lt;/li&gt; &#xA; &lt;li&gt;Anti-aliasing is known to cause issues and crashes. If you are having trouble, try lowering or disabling the anti-aliasing and restart the game.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sort out bugs and issues in the current release&lt;/li&gt; &#xA; &lt;li&gt;Improve playability of the current keyboard+mouse seated experience&lt;/li&gt; &#xA; &lt;li&gt;Consider port to OpenXR&lt;/li&gt; &#xA; &lt;li&gt;Consider simple motion controller and roomscale support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Legal notices&lt;/h2&gt; &#xA;&lt;p&gt;This mod depends on and includes the alternative Crysis launcher by &lt;a href=&#34;https://github.com/ccomrade/c1-launcher&#34;&gt;ccomrade&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This mod is developed and its source code is covered under the CryENGINE 2 Mod SDK license which you can review in the &lt;code&gt;LICENSE.txt&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;This mod is not endorsed by or affiliated with Crytek or Electronic Arts. Trademarks are the property of their respective owners. Game content copyright Crytek.&lt;/p&gt;</summary>
  </entry>
</feed>