<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-01T01:32:10Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dogecoin/dogecoin</title>
    <updated>2022-11-01T01:32:10Z</updated>
    <id>tag:github.com,2022-11-01:/dogecoin/dogecoin</id>
    <link href="https://github.com/dogecoin/dogecoin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;very currency&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://static.tumblr.com/ppdj5y9/Ae9mxmxtp/300coin.png&#34; alt=&#34;Dogecoin&#34; width=&#34;300&#34;&gt; &lt;br&gt;&lt;br&gt; Dogecoin Core [DOGE, √ê] &lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://dogecoin.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Doge-Coin-yellow.svg?sanitize=true&#34; alt=&#34;DogecoinBadge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dogecoin.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Much-Wow-yellow.svg?sanitize=true&#34; alt=&#34;MuchWow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Select language: EN | &lt;a href=&#34;https://raw.githubusercontent.com/dogecoin/dogecoin/master/README_zh_CN.md&#34;&gt;CN&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/dogecoin/dogecoin/master/README_pt_BR.md&#34;&gt;PT&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/dogecoin/dogecoin/master/README_fa_IR.md&#34;&gt;FA&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Dogecoin is a community-driven cryptocurrency that was inspired by a Shiba Inu meme. The Dogecoin Core software allows anyone to operate a node in the Dogecoin blockchain networks and uses the Scrypt hashing method for Proof of Work. It is adapted from Bitcoin Core and other cryptocurrencies.&lt;/p&gt; &#xA;&lt;p&gt;For information about the default fees used on the Dogecoin network, please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/dogecoin/dogecoin/master/doc/fee-recommendation.md&#34;&gt;fee recommendation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Website:&lt;/strong&gt; &lt;a href=&#34;https://dogecoin.com&#34;&gt;dogecoin.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage üíª&lt;/h2&gt; &#xA;&lt;p&gt;To start your journey with Dogecoin Core, see the &lt;a href=&#34;https://raw.githubusercontent.com/dogecoin/dogecoin/master/INSTALL.md&#34;&gt;installation guide&lt;/a&gt; and the &lt;a href=&#34;https://raw.githubusercontent.com/dogecoin/dogecoin/master/doc/getting-started.md&#34;&gt;getting started&lt;/a&gt; tutorial.&lt;/p&gt; &#xA;&lt;p&gt;The JSON-RPC API provided by Dogecoin Core is self-documenting and can be browsed with &lt;code&gt;dogecoin-cli help&lt;/code&gt;, while detailed information for each command can be viewed with &lt;code&gt;dogecoin-cli help &amp;lt;command&amp;gt;&lt;/code&gt;. Alternatively, see the &lt;a href=&#34;https://developer.bitcoin.org/reference/rpc/&#34;&gt;Bitcoin Core documentation&lt;/a&gt; - which implement a similar protocol - to get a browsable version.&lt;/p&gt; &#xA;&lt;h3&gt;Such ports&lt;/h3&gt; &#xA;&lt;p&gt;Dogecoin Core by default uses port &lt;code&gt;22556&lt;/code&gt; for peer-to-peer communication that is needed to synchronize the &#34;mainnet&#34; blockchain and stay informed of new transactions and blocks. Additionally, a JSONRPC port can be opened, which defaults to port &lt;code&gt;22555&lt;/code&gt; for mainnet nodes. It is strongly recommended to not expose RPC ports to the public internet.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Function&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;mainnet&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;testnet&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;regtest&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;P2P&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;22556&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;44556&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;18444&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;RPC&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;22555&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;44555&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;18332&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Ongoing development - Moon plan üåí&lt;/h2&gt; &#xA;&lt;p&gt;Dogecoin Core is an open source and community driven software. The development process is open and publicly visible; anyone can see, discuss and work on the software.&lt;/p&gt; &#xA;&lt;p&gt;Main development resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dogecoin/dogecoin/projects&#34;&gt;GitHub Projects&lt;/a&gt; is used to follow planned and in-progress work for upcoming releases.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dogecoin/dogecoin/discussions&#34;&gt;GitHub Discussion&lt;/a&gt; is used to discuss features, planned and unplanned, related to both the development of the Dogecoin Core software, the underlying protocols and the DOGE asset.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/dogecoindev/&#34;&gt;Dogecoindev subreddit&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version strategy&lt;/h3&gt; &#xA;&lt;p&gt;Version numbers are following &lt;code&gt;major.minor.patch&lt;/code&gt; semantics.&lt;/p&gt; &#xA;&lt;h3&gt;Branches&lt;/h3&gt; &#xA;&lt;p&gt;There are 3 types of branches in this repository:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;master:&lt;/strong&gt; Stable, contains the latest version of the latest &lt;em&gt;major.minor&lt;/em&gt; release.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;maintenance:&lt;/strong&gt; Stable, contains the latest version of previous releases, which are still under active maintenance. Format: &lt;code&gt;&amp;lt;version&amp;gt;-maint&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;development:&lt;/strong&gt; Unstable, contains new code for planned releases. Format: &lt;code&gt;&amp;lt;version&amp;gt;-dev&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Master and maintenance branches are exclusively mutable by release. Planned&lt;/em&gt; &lt;em&gt;releases will always have a development branch and pull requests should be&lt;/em&gt; &lt;em&gt;submitted against those. Maintenance branches are there for &lt;strong&gt;bug fixes only,&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;please submit new features against the development branch with the highest version.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing ü§ù&lt;/h2&gt; &#xA;&lt;p&gt;If you find a bug or experience issues with this software, please report it using the &lt;a href=&#34;https://github.com/dogecoin/dogecoin/issues/new?assignees=&amp;amp;labels=bug&amp;amp;template=bug_report.md&amp;amp;title=%5Bbug%5D+&#34;&gt;issue system&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/dogecoin/dogecoin/master/CONTRIBUTING.md&#34;&gt;the contribution guide&lt;/a&gt; to see how you can participate in the development of Dogecoin Core. There are often &lt;a href=&#34;https://github.com/dogecoin/dogecoin/labels/help%20wanted&#34;&gt;topics seeking help&lt;/a&gt; where your contributions will have high impact and get very appreciation. wow.&lt;/p&gt; &#xA;&lt;h2&gt;Communities üöÄüçæ&lt;/h2&gt; &#xA;&lt;p&gt;You can join the communities on different social media. To see what&#39;s going on, meet people &amp;amp; discuss, find the latest meme, learn about Dogecoin, give or ask for help, to share your project.&lt;/p&gt; &#xA;&lt;p&gt;Here are some places to visit:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/dogecoin/&#34;&gt;Dogecoin subreddit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/dogeducation/&#34;&gt;Dogeducation subreddit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/dogecoin&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/dogecoin&#34;&gt;Dogecoin Twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Very Much Frequently Asked Questions ‚ùì&lt;/h2&gt; &#xA;&lt;p&gt;Do you have a question regarding Dogecoin? An answer is perhaps already in the &lt;a href=&#34;https://raw.githubusercontent.com/dogecoin/dogecoin/master/doc/FAQ.md&#34;&gt;FAQ&lt;/a&gt; or the &lt;a href=&#34;https://github.com/dogecoin/dogecoin/discussions/categories/q-a&#34;&gt;Q&amp;amp;A section&lt;/a&gt; of the discussion board!&lt;/p&gt; &#xA;&lt;h2&gt;License - Much license ‚öñÔ∏è&lt;/h2&gt; &#xA;&lt;p&gt;Dogecoin Core is released under the terms of the MIT license. See &lt;a href=&#34;https://raw.githubusercontent.com/dogecoin/dogecoin/master/COPYING&#34;&gt;COPYING&lt;/a&gt; for more information or see &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;opensource.org&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vxunderground/VX-API</title>
    <updated>2022-11-01T01:32:10Z</updated>
    <id>tag:github.com,2022-11-01:/vxunderground/VX-API</id>
    <link href="https://github.com/vxunderground/VX-API" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Collection of various malicious functionality to aid in malware development&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vxunderground/VX-API/main/logo.png&#34; alt=&#34;VXUG logo&#34;&gt; managed by &lt;a href=&#34;https://vx-underground.org&#34;&gt;vx-underground&lt;/a&gt; | follow us on &lt;a href=&#34;https://twitter.com/vxunderground&#34;&gt;Twitter&lt;/a&gt; | download malware samples at the &lt;a href=&#34;https://samples.vx-underground.org/&#34;&gt;VXUG/samples&lt;/a&gt; page&lt;/p&gt; &#xA;&lt;h1&gt;VX-API&lt;/h1&gt; &#xA;&lt;p&gt;Version: 2.0.321&lt;/p&gt; &#xA;&lt;p&gt;Developer: smelly__vx&lt;/p&gt; &#xA;&lt;p&gt;The VX-API is a collection of malicious functionality to aid in malware development. It is recommended you clone and/or download this entire repo then open the Visual Studio solution file to easily explore functionality and concepts.&lt;/p&gt; &#xA;&lt;p&gt;Some functions may be dependent on other functions present within the solution file. Using the solution file provided here will make it easier to identify which other functionality and/or header data is required.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;re free to use this in any manner you please. You do not need to use this entire solution for your malware proof-of-concepts or Red Team engagements. Strip, copy, paste, delete, or edit this projects contents as much as you&#39;d like.&lt;/p&gt;  &#xA;&lt;h1&gt;List of features&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Function Name&lt;/th&gt; &#xA;   &lt;th&gt;Original Author&lt;/th&gt; &#xA;   &lt;th&gt;Section&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ByteArrayToCharArray&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;String Conversion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CharArrayToByteArray&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;String Conversion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ShlwapiCharStringToWCharString&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;String Conversion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ShlwapiWCharStringToCharString&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;String Conversion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CharStringToWCharString&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;String Conversion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WCharStringToCharString&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;String Conversion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RtlInitEmptyUnicodeString&lt;/td&gt; &#xA;   &lt;td&gt;ReactOS&lt;/td&gt; &#xA;   &lt;td&gt;Windows Unicode Structure&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RtlInitUnicodeString&lt;/td&gt; &#xA;   &lt;td&gt;ReactOS&lt;/td&gt; &#xA;   &lt;td&gt;Windows Unicode Structure&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CaplockString&lt;/td&gt; &#xA;   &lt;td&gt;simonc&lt;/td&gt; &#xA;   &lt;td&gt;String Manipulation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CopyMemoryEx&lt;/td&gt; &#xA;   &lt;td&gt;ReactOS&lt;/td&gt; &#xA;   &lt;td&gt;String Manipulation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SecureStringCopy&lt;/td&gt; &#xA;   &lt;td&gt;Apple (c) 1999&lt;/td&gt; &#xA;   &lt;td&gt;String Manipulation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StringCompare&lt;/td&gt; &#xA;   &lt;td&gt;Apple (c) 1999&lt;/td&gt; &#xA;   &lt;td&gt;String Manipulation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StringConcat&lt;/td&gt; &#xA;   &lt;td&gt;Apple (c) 1999&lt;/td&gt; &#xA;   &lt;td&gt;String Manipulation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StringCopy&lt;/td&gt; &#xA;   &lt;td&gt;Apple (c) 1999&lt;/td&gt; &#xA;   &lt;td&gt;String Manipulation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StringFindSubstring&lt;/td&gt; &#xA;   &lt;td&gt;Apple (c) 1999&lt;/td&gt; &#xA;   &lt;td&gt;String Manipulation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StringLength&lt;/td&gt; &#xA;   &lt;td&gt;Apple (c) 1999&lt;/td&gt; &#xA;   &lt;td&gt;String Manipulation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StringLocateChar&lt;/td&gt; &#xA;   &lt;td&gt;Apple (c) 1999&lt;/td&gt; &#xA;   &lt;td&gt;String Manipulation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StringRemoveSubstring&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;String Manipulation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StringTerminateStringAtChar&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;String Manipulation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StringToken&lt;/td&gt; &#xA;   &lt;td&gt;Apple (c) 1999&lt;/td&gt; &#xA;   &lt;td&gt;String Manipulation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ZeroMemoryEx&lt;/td&gt; &#xA;   &lt;td&gt;ReactOS&lt;/td&gt; &#xA;   &lt;td&gt;String Manipulation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AdfCloseHandleOnInvalidAddress&lt;/td&gt; &#xA;   &lt;td&gt;Checkpoint Research&lt;/td&gt; &#xA;   &lt;td&gt;Anti-debug&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AdfIsCreateProcessDebugEventCodeSet&lt;/td&gt; &#xA;   &lt;td&gt;Checkpoint Research&lt;/td&gt; &#xA;   &lt;td&gt;Anti-debug&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AdfOpenProcessOnCsrss&lt;/td&gt; &#xA;   &lt;td&gt;Checkpoint Research&lt;/td&gt; &#xA;   &lt;td&gt;Anti-debug&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CheckRemoteDebuggerPresent2&lt;/td&gt; &#xA;   &lt;td&gt;ReactOS&lt;/td&gt; &#xA;   &lt;td&gt;Anti-debug&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IsDebuggerPresentEx&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Anti-debug&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IsIntelHardwareBreakpointPresent&lt;/td&gt; &#xA;   &lt;td&gt;Checkpoint Research&lt;/td&gt; &#xA;   &lt;td&gt;Anti-debug&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HashStringDjb2&lt;/td&gt; &#xA;   &lt;td&gt;Dan Bernstein&lt;/td&gt; &#xA;   &lt;td&gt;String Hashing&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HashStringFowlerNollVoVariant1a&lt;/td&gt; &#xA;   &lt;td&gt;Glenn Fowler, Landon Curt Noll, and Kiem-Phong Vo&lt;/td&gt; &#xA;   &lt;td&gt;String Hashing&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HashStringJenkinsOneAtATime32Bit&lt;/td&gt; &#xA;   &lt;td&gt;Bob Jenkins&lt;/td&gt; &#xA;   &lt;td&gt;String Hashing&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HashStringLoseLose&lt;/td&gt; &#xA;   &lt;td&gt;Brian Kernighan and Dennis Ritchie&lt;/td&gt; &#xA;   &lt;td&gt;String Hashing&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HashStringRotr32&lt;/td&gt; &#xA;   &lt;td&gt;T. Oshiba (1972)&lt;/td&gt; &#xA;   &lt;td&gt;String Hashing&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HashStringSdbm&lt;/td&gt; &#xA;   &lt;td&gt;Ozan Yigit&lt;/td&gt; &#xA;   &lt;td&gt;String Hashing&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HashStringSuperFastHash&lt;/td&gt; &#xA;   &lt;td&gt;Paul Hsieh&lt;/td&gt; &#xA;   &lt;td&gt;String Hashing&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HashStringUnknownGenericHash1A&lt;/td&gt; &#xA;   &lt;td&gt;Unknown&lt;/td&gt; &#xA;   &lt;td&gt;String Hashing&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CreateMd5HashFromFilePath&lt;/td&gt; &#xA;   &lt;td&gt;Microsoft&lt;/td&gt; &#xA;   &lt;td&gt;Cryptography Related&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CreatePseudoRandomInteger&lt;/td&gt; &#xA;   &lt;td&gt;Apple (c) 1999&lt;/td&gt; &#xA;   &lt;td&gt;Cryptography Related&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CreatePseudoRandomString&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Cryptography Related&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HashFileByMsiFileHashTable&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Cryptography Related&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetLastErrorFromTeb&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Error Handling&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetLastNtStatusFromTeb&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Error Handling&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RtlNtStatusToDosErrorViaImport&lt;/td&gt; &#xA;   &lt;td&gt;ReactOS&lt;/td&gt; &#xA;   &lt;td&gt;Error Handling&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetLastErrorFromTeb&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Error Handling&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SetLastErrorInTeb&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Error Handling&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SetLastNtStatusInTeb&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Error Handling&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Win32FromHResult&lt;/td&gt; &#xA;   &lt;td&gt;Raymond Chen&lt;/td&gt; &#xA;   &lt;td&gt;Error Handling&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CreateFileFromDsCopyFromSharedFile&lt;/td&gt; &#xA;   &lt;td&gt;Jonas Lyk&lt;/td&gt; &#xA;   &lt;td&gt;Evasion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CreateProcessFromIHxHelpPaneServer&lt;/td&gt; &#xA;   &lt;td&gt;James Forshaw&lt;/td&gt; &#xA;   &lt;td&gt;Evasion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CreateProcessFromIHxInteractiveUser&lt;/td&gt; &#xA;   &lt;td&gt;James Forshaw&lt;/td&gt; &#xA;   &lt;td&gt;Evasion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CreateProcessFromIShellDispatchInvoke&lt;/td&gt; &#xA;   &lt;td&gt;Mohamed Fakroud&lt;/td&gt; &#xA;   &lt;td&gt;Evasion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CreateProcessFromShellExecuteInExplorerProcess&lt;/td&gt; &#xA;   &lt;td&gt;Microsoft&lt;/td&gt; &#xA;   &lt;td&gt;Evasion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CreateProcessViaNtCreateUserProcess&lt;/td&gt; &#xA;   &lt;td&gt;CaptMeelo&lt;/td&gt; &#xA;   &lt;td&gt;Evasion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CreateProcessWithCfGuard&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx and Adam Chester&lt;/td&gt; &#xA;   &lt;td&gt;Evasion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DelayedExecutionExecuteOnDisplayOff&lt;/td&gt; &#xA;   &lt;td&gt;am0nsec and smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Evasion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MasqueradePebAsExplorer&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Evasion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RemoveDllFromPeb&lt;/td&gt; &#xA;   &lt;td&gt;rad9800&lt;/td&gt; &#xA;   &lt;td&gt;Evasion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetCurrentLocaleFromTeb&lt;/td&gt; &#xA;   &lt;td&gt;3xp0rt&lt;/td&gt; &#xA;   &lt;td&gt;Fingerprinting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetNumberOfLinkedDlls&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Fingerprinting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetOsBuildNumberFromPeb&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Fingerprinting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetOsMajorVersionFromPeb&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Fingerprinting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetOsMinorVersionFromPeb&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Fingerprinting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetOsPlatformIdFromPeb&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Fingerprinting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IsNvidiaGraphicsCardPresent&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Fingerprinting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IsProcessRunning&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Fingerprinting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IsProcessRunningAsAdmin&lt;/td&gt; &#xA;   &lt;td&gt;Vimal Shekar&lt;/td&gt; &#xA;   &lt;td&gt;Fingerprinting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetPidFromNtQuerySystemInformation&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Fingerprinting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetPidFromWindowsTerminalService&lt;/td&gt; &#xA;   &lt;td&gt;modexp&lt;/td&gt; &#xA;   &lt;td&gt;Fingerprinting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetPidFromWmiComInterface&lt;/td&gt; &#xA;   &lt;td&gt;aalimian and modexp&lt;/td&gt; &#xA;   &lt;td&gt;Fingerprinting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetPidFromEnumProcesses&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Fingerprinting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetPidFromPidBruteForcing&lt;/td&gt; &#xA;   &lt;td&gt;modexp&lt;/td&gt; &#xA;   &lt;td&gt;Fingerprinting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetPidFromNtQueryFileInformation&lt;/td&gt; &#xA;   &lt;td&gt;modexp, Lloyd Davies, Jonas Lyk&lt;/td&gt; &#xA;   &lt;td&gt;Fingerprinting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetPidFromPidBruteForcingExW&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx, LLoyd Davies, Jonas Lyk, modexp&lt;/td&gt; &#xA;   &lt;td&gt;Fingerprinting&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CreateLocalAppDataObjectPath&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Helper Functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CreateWindowsObjectPath&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Helper Functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DeleteFileWithCreateFileFlag&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Helper Functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetCurrentDirectoryFromUserProcessParameters&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Helper Functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetCurrentProcessIdFromTeb&lt;/td&gt; &#xA;   &lt;td&gt;ReactOS&lt;/td&gt; &#xA;   &lt;td&gt;Helper Functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetCurrentUserSid&lt;/td&gt; &#xA;   &lt;td&gt;Giovanni Dicanio&lt;/td&gt; &#xA;   &lt;td&gt;Helper Functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetCurrentWindowTextFromUserProcessParameter&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Helper Functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetFileSizeFromPath&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Helper Functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetProcessHeapFromTeb&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Helper Functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetProcessPathFromLoaderLoadModule&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Helper Functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetProcessPathFromUserProcessParameters&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Helper Functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetSystemWindowsDirectory&lt;/td&gt; &#xA;   &lt;td&gt;Geoff Chappell&lt;/td&gt; &#xA;   &lt;td&gt;Helper Functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IsPathValid&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Helper Functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RecursiveFindFile&lt;/td&gt; &#xA;   &lt;td&gt;Luke&lt;/td&gt; &#xA;   &lt;td&gt;Helper Functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SetProcessPrivilegeToken&lt;/td&gt; &#xA;   &lt;td&gt;Microsoft&lt;/td&gt; &#xA;   &lt;td&gt;Helper Functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UrlDownloadToFileSynchronous&lt;/td&gt; &#xA;   &lt;td&gt;Hans Passant&lt;/td&gt; &#xA;   &lt;td&gt;Helper Functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IsDllLoaded&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Helper Functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TryLoadDllMultiMethod&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Helper Functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CreateThreadAndWaitForCompletion&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Helper Functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetProcessBinaryNameFromHwndW&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Helper Functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetKUserSharedData&lt;/td&gt; &#xA;   &lt;td&gt;Geoff Chappell&lt;/td&gt; &#xA;   &lt;td&gt;Library Loading&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetModuleHandleEx2&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Library Loading&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetPeb&lt;/td&gt; &#xA;   &lt;td&gt;29a&lt;/td&gt; &#xA;   &lt;td&gt;Library Loading&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetPebFromTeb&lt;/td&gt; &#xA;   &lt;td&gt;ReactOS&lt;/td&gt; &#xA;   &lt;td&gt;Library Loading&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetProcAddress&lt;/td&gt; &#xA;   &lt;td&gt;29a Volume 2&lt;/td&gt; &#xA;   &lt;td&gt;Library Loading&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetProcAddressDjb2&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Library Loading&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetProcAddressFowlerNollVoVariant1a&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Library Loading&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetProcAddressJenkinsOneAtATime32Bit&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Library Loading&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetProcAddressLoseLose&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Library Loading&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetProcAddressRotr32&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Library Loading&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetProcAddressSdbm&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Library Loading&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetProcAddressSuperFastHash&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Library Loading&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetProcAddressUnknownGenericHash1&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Library Loading&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetRtlUserProcessParameters&lt;/td&gt; &#xA;   &lt;td&gt;ReactOS&lt;/td&gt; &#xA;   &lt;td&gt;Library Loading&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GetTeb&lt;/td&gt; &#xA;   &lt;td&gt;ReactOS&lt;/td&gt; &#xA;   &lt;td&gt;Library Loading&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RtlLoadPeHeaders&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Library Loading&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MpfComModifyShortcutTarget&lt;/td&gt; &#xA;   &lt;td&gt;Unknown&lt;/td&gt; &#xA;   &lt;td&gt;Malicious Capability&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MpfComVssDeleteShadowVolumeBackups&lt;/td&gt; &#xA;   &lt;td&gt;am0nsec&lt;/td&gt; &#xA;   &lt;td&gt;Malicious Capability&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OleGetClipboardData&lt;/td&gt; &#xA;   &lt;td&gt;Microsoft&lt;/td&gt; &#xA;   &lt;td&gt;Malicious Capability&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UacBypassFodHelperMethod&lt;/td&gt; &#xA;   &lt;td&gt;winscripting.blog&lt;/td&gt; &#xA;   &lt;td&gt;Malicious Capability&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MpfGetLsaPidFromServiceManager&lt;/td&gt; &#xA;   &lt;td&gt;modexp&lt;/td&gt; &#xA;   &lt;td&gt;Malicious Capability&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MpfGetLsaPidFromRegistry&lt;/td&gt; &#xA;   &lt;td&gt;modexp&lt;/td&gt; &#xA;   &lt;td&gt;Malicious Capability&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MpfGetLsaPidFromNamedPipe&lt;/td&gt; &#xA;   &lt;td&gt;modexp&lt;/td&gt; &#xA;   &lt;td&gt;Malicious Capability&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ShellcodeExecutionViaFunctionCallbackMain&lt;/td&gt; &#xA;   &lt;td&gt;alfarom256, aahmad097&lt;/td&gt; &#xA;   &lt;td&gt;Malicious Capability&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MpfComMonitorChromeSessionOnce&lt;/td&gt; &#xA;   &lt;td&gt;smelly__vx&lt;/td&gt; &#xA;   &lt;td&gt;Malicious Capability&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Todo list&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Functionality&lt;/th&gt; &#xA;   &lt;th&gt;Author&lt;/th&gt; &#xA;   &lt;th&gt;Note&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NtMapViewOfSection lsass&lt;/td&gt; &#xA;   &lt;td&gt;modexp&lt;/td&gt; &#xA;   &lt;td&gt;NtMapViewOfSection&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IcmpSendEcho&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;Sync PING&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IcmpSendEcho2Ex&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;Async PING w/ APC&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WMI PING&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;Sync/Async PING with COM&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Run PE in memory&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Process Injection&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;More string manipulation from MSDN&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;More hashing algorithms&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Notes&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Function Name&lt;/th&gt; &#xA;   &lt;th&gt;Note&lt;/th&gt; &#xA;   &lt;th&gt;Fixed&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;StringToken&lt;/td&gt; &#xA;   &lt;td&gt;Needs revision, buggy&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NtQueryOpenSubKeysEx&lt;/td&gt; &#xA;   &lt;td&gt;admin required&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MpfComMonitorChromeSessionOnce&lt;/td&gt; &#xA;   &lt;td&gt;Usability improvements needed&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;del&gt;DelayedExecutionExecuteOnDisplayOff&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;del&gt;TryDllMultiMethod&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;October 30th, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;del&gt;GetPidFromWindowsTerminalService&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;del&gt;TryDllMultiMethod&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;October 30th, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;del&gt;UnusedSubroutineGetShellViewForDesktop&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;del&gt;TryDllMultiMethod&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;October 30th, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;del&gt;GetCurrentUserSid&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;del&gt;TryDllMultiMethod&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;October 29th, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;del&gt;GetProcessBinaryNameFromHwndW&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;del&gt;make A variant&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;October 29th, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;del&gt;CreateProcessFromIShellDispatchInvoke&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;del&gt;TryDllMultiMethod&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;October 29th, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;del&gt;ShellcodeExecViaCertFindChainInStore&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;del&gt;Buggy, unstable&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;October 23rd, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;del&gt;RecursiveFindFile&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;del&gt;TryDllMultiMethod&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;October 21th, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;del&gt;UrlDownloadToFileSynchronous&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;del&gt;TryDllMultiMethod&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;October 21th, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;del&gt;CreateFileFromDsCopyFromSharedFileW&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;del&gt;Never unloads dll&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;October 21th, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;del&gt;HashFileByMsiFileHashTable&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;del&gt;TryDllMultiMethod&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;October 21th, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;del&gt;RtlInitEmptyUnicodeString&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;del&gt;Needs revision&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;October 21th, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;del&gt;CreateProcessByNotepadProxy&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;del&gt;Removed, unstable&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;October 16th, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;del&gt;SystemFunction036&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;del&gt;Removed, unstable&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td&gt;October 16th, 2022&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>tdlib/td</title>
    <updated>2022-11-01T01:32:10Z</updated>
    <id>tag:github.com,2022-11-01:/tdlib/td</id>
    <link href="https://github.com/tdlib/td" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cross-platform library for building Telegram clients&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TDLib&lt;/h1&gt; &#xA;&lt;p&gt;TDLib (Telegram Database library) is a cross-platform library for building &lt;a href=&#34;https://telegram.org&#34;&gt;Telegram&lt;/a&gt; clients. It can be easily used from almost any programming language.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#usage&#34;&gt;Examples and documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#dependencies&#34;&gt;Dependencies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#building&#34;&gt;Building&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#using-cxx&#34;&gt;Using in CMake C++ projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#using-java&#34;&gt;Using in Java projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#using-dotnet&#34;&gt;Using in .NET projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#using-json&#34;&gt;Using with other programming languages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;features&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;TDLib&lt;/code&gt; has many advantages. Notably &lt;code&gt;TDLib&lt;/code&gt; is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cross-platform&lt;/strong&gt;: &lt;code&gt;TDLib&lt;/code&gt; can be used on Android, iOS, Windows, macOS, Linux, FreeBSD, OpenBSD, NetBSD, illumos, Windows Phone, WebAssembly, watchOS, tvOS, Tizen, Cygwin. It should also work on other *nix systems with or without minimal effort.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multilanguage&lt;/strong&gt;: &lt;code&gt;TDLib&lt;/code&gt; can be easily used with any programming language that is able to execute C functions. Additionally it already has native Java (using &lt;code&gt;JNI&lt;/code&gt;) bindings and .NET (using &lt;code&gt;C++/CLI&lt;/code&gt; and &lt;code&gt;C++/CX&lt;/code&gt;) bindings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easy to use&lt;/strong&gt;: &lt;code&gt;TDLib&lt;/code&gt; takes care of all network implementation details, encryption and local data storage.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;High-performance&lt;/strong&gt;: in the &lt;a href=&#34;https://core.telegram.org/bots/api&#34;&gt;Telegram Bot API&lt;/a&gt;, each &lt;code&gt;TDLib&lt;/code&gt; instance handles more than 24000 active bots simultaneously.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Well-documented&lt;/strong&gt;: all &lt;code&gt;TDLib&lt;/code&gt; API methods and public interfaces are fully documented.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Consistent&lt;/strong&gt;: &lt;code&gt;TDLib&lt;/code&gt; guarantees that all updates are delivered in the right order.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reliable&lt;/strong&gt;: &lt;code&gt;TDLib&lt;/code&gt; remains stable on slow and unreliable Internet connections.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Secure&lt;/strong&gt;: all local data is encrypted using a user-provided encryption key.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fully-asynchronous&lt;/strong&gt;: requests to &lt;code&gt;TDLib&lt;/code&gt; don&#39;t block each other or anything else, responses are sent when they are available.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;usage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Examples and documentation&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://core.telegram.org/tdlib/getting-started&#34;&gt;Getting Started&lt;/a&gt; tutorial for a description of basic TDLib concepts.&lt;/p&gt; &#xA;&lt;p&gt;Take a look at our &lt;a href=&#34;https://github.com/tdlib/td/raw/master/example/README.md#tdlib-usage-and-build-examples&#34;&gt;examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See a &lt;a href=&#34;https://tdlib.github.io/td/build.html&#34;&gt;TDLib build instructions generator&lt;/a&gt; for detailed instructions on how to build TDLib.&lt;/p&gt; &#xA;&lt;p&gt;See description of our &lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#using-json&#34;&gt;JSON&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#using-cxx&#34;&gt;C++&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#using-java&#34;&gt;Java&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#using-dotnet&#34;&gt;.NET&lt;/a&gt; interfaces.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/tdlib/td/raw/master/td/generate/scheme/td_api.tl&#34;&gt;td_api.tl&lt;/a&gt; scheme or the automatically generated &lt;a href=&#34;https://core.telegram.org/tdlib/docs/td__api_8h.html&#34;&gt;HTML documentation&lt;/a&gt; for a list of all available &lt;code&gt;TDLib&lt;/code&gt; &lt;a href=&#34;https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1_function.html&#34;&gt;methods&lt;/a&gt; and &lt;a href=&#34;https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1_object.html&#34;&gt;classes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;dependencies&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;TDLib&lt;/code&gt; depends on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;C++14 compatible compiler (Clang 3.4+, GCC 4.9+, MSVC 19.0+ (Visual Studio 2015+), Intel C++ Compiler 17+)&lt;/li&gt; &#xA; &lt;li&gt;OpenSSL&lt;/li&gt; &#xA; &lt;li&gt;zlib&lt;/li&gt; &#xA; &lt;li&gt;gperf (build only)&lt;/li&gt; &#xA; &lt;li&gt;CMake (3.0.2+, build only)&lt;/li&gt; &#xA; &lt;li&gt;PHP (optional, for documentation generation)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a name=&#34;building&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;The simplest way to build &lt;code&gt;TDLib&lt;/code&gt; is to use our &lt;a href=&#34;https://tdlib.github.io/td/build.html&#34;&gt;TDLib build instructions generator&lt;/a&gt;. You need only to choose your programming language and target operating system to receive complete build instructions.&lt;/p&gt; &#xA;&lt;p&gt;In general, you need to install all &lt;code&gt;TDLib&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/tdlib/td/master/#dependencies&#34;&gt;dependencies&lt;/a&gt;, enter directory containing &lt;code&gt;TDLib&lt;/code&gt; sources and compile them using CMake:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir build&#xA;cd build&#xA;cmake -DCMAKE_BUILD_TYPE=Release ..&#xA;cmake --build .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build &lt;code&gt;TDLib&lt;/code&gt; on low memory devices you can run &lt;a href=&#34;https://github.com/tdlib/td/raw/master/SplitSource.php&#34;&gt;SplitSource.php&lt;/a&gt; script before compiling main &lt;code&gt;TDLib&lt;/code&gt; source code and compile only needed targets:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir build&#xA;cd build&#xA;cmake -DCMAKE_BUILD_TYPE=Release ..&#xA;cmake --build . --target prepare_cross_compiling&#xA;cd ..&#xA;php SplitSource.php&#xA;cd build&#xA;cmake --build . --target tdjson&#xA;cmake --build . --target tdjson_static&#xA;cd ..&#xA;php SplitSource.php --undo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In our tests clang 6.0 with libc++ required less than 500 MB of RAM per file and GCC 4.9/6.3 used less than 1 GB of RAM per file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;using-cxx&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Using in CMake C++ projects&lt;/h2&gt; &#xA;&lt;p&gt;For C++ projects that use CMake, the best approach is to build &lt;code&gt;TDLib&lt;/code&gt; as part of your project or to install it system-wide.&lt;/p&gt; &#xA;&lt;p&gt;There are several libraries that you could use in your CMake project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Td::TdJson, Td::TdJsonStatic&amp;nbsp;‚Äî dynamic and static version of a JSON interface. This has a simple C interface, so it can be easily used with any programming language that is able to execute C functions. See &lt;a href=&#34;https://core.telegram.org/tdlib/docs/td__json__client_8h.html&#34;&gt;td_json_client&lt;/a&gt; documentation for more information.&lt;/li&gt; &#xA; &lt;li&gt;Td::TdStatic ‚Äî static library with C++ interface for general usage. See &lt;a href=&#34;https://core.telegram.org/tdlib/docs/classtd_1_1_client_manager.html&#34;&gt;ClientManager&lt;/a&gt; and &lt;a href=&#34;https://core.telegram.org/tdlib/docs/classtd_1_1_client.html&#34;&gt;Client&lt;/a&gt; documentation for more information.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, part of your CMakeLists.txt may look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;add_subdirectory(td)&#xA;target_link_libraries(YourTarget PRIVATE Td::TdStatic)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you could install &lt;code&gt;TDLib&lt;/code&gt; and then reference it in your CMakeLists.txt like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;find_package(Td 1.8.7 REQUIRED)&#xA;target_link_libraries(YourTarget PRIVATE Td::TdStatic)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/tdlib/td/raw/master/example/cpp/CMakeLists.txt&#34;&gt;example/cpp/CMakeLists.txt&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;using-java&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Using in Java projects&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;TDLib&lt;/code&gt; provides native Java interface through JNI. To enable it, specify option &lt;code&gt;-DTD_ENABLE_JNI=ON&lt;/code&gt; to CMake.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/tdlib/td/tree/master/example/java&#34;&gt;example/java&lt;/a&gt; for example of using &lt;code&gt;TDLib&lt;/code&gt; from Java and detailed build and usage instructions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;using-dotnet&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Using in .NET projects&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;TDLib&lt;/code&gt; provides native .NET interface through &lt;code&gt;C++/CLI&lt;/code&gt; and &lt;code&gt;C++/CX&lt;/code&gt;. To enable it, specify option &lt;code&gt;-DTD_ENABLE_DOTNET=ON&lt;/code&gt; to CMake. .NET Core supports &lt;code&gt;C++/CLI&lt;/code&gt; only since version 3.1 and only on Windows, so if older .NET Core is used or portability is needed, then &lt;code&gt;TDLib&lt;/code&gt; JSON interface should be used through P/Invoke instead.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/tdlib/td/tree/master/example/csharp&#34;&gt;example/csharp&lt;/a&gt; for example of using &lt;code&gt;TDLib&lt;/code&gt; from C# and detailed build and usage instructions. See &lt;a href=&#34;https://github.com/tdlib/td/tree/master/example/uwp&#34;&gt;example/uwp&lt;/a&gt; for example of using &lt;code&gt;TDLib&lt;/code&gt; from C# UWP application and detailed build and usage instructions for Visual Studio Extension &#34;TDLib for Universal Windows Platform&#34;.&lt;/p&gt; &#xA;&lt;p&gt;When &lt;code&gt;TDLib&lt;/code&gt; is built with &lt;code&gt;TD_ENABLE_DOTNET&lt;/code&gt; option enabled, &lt;code&gt;C++&lt;/code&gt; documentation is removed from some files. You need to checkout these files to return &lt;code&gt;C++&lt;/code&gt; documentation back:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git checkout td/telegram/Client.h td/telegram/Log.h td/tl/TlObject.h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a name=&#34;using-json&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Using from other programming languages&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;TDLib&lt;/code&gt; provides efficient native C++, Java, and .NET interfaces. But for most use cases we suggest to use the JSON interface, which can be easily used with any programming language that is able to execute C functions. See &lt;a href=&#34;https://core.telegram.org/tdlib/docs/td__json__client_8h.html&#34;&gt;td_json_client&lt;/a&gt; documentation for detailed JSON interface description, the &lt;a href=&#34;https://github.com/tdlib/td/raw/master/td/generate/scheme/td_api.tl&#34;&gt;td_api.tl&lt;/a&gt; scheme or the automatically generated &lt;a href=&#34;https://core.telegram.org/tdlib/docs/td__api_8h.html&#34;&gt;HTML documentation&lt;/a&gt; for a list of all available &lt;code&gt;TDLib&lt;/code&gt; &lt;a href=&#34;https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1_function.html&#34;&gt;methods&lt;/a&gt; and &lt;a href=&#34;https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1_object.html&#34;&gt;classes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;TDLib&lt;/code&gt; JSON interface adheres to semantic versioning and versions with the same major version number are binary and backward compatible, but the underlying &lt;code&gt;TDLib&lt;/code&gt; API can be different for different minor and even patch versions. If you need to support different &lt;code&gt;TDLib&lt;/code&gt; versions, then you can use a value of the &lt;code&gt;version&lt;/code&gt; option to find exact &lt;code&gt;TDLib&lt;/code&gt; version to use appropriate API methods.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/tdlib/td/raw/master/example/python/tdjson_example.py&#34;&gt;example/python/tdjson_example.py&lt;/a&gt; for an example of such usage.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;TDLib&lt;/code&gt; is licensed under the terms of the Boost Software License. See &lt;a href=&#34;http://www.boost.org/LICENSE_1_0.txt&#34;&gt;LICENSE_1_0.txt&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>