<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-07T01:31:15Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>awesomekling/ladybird</title>
    <updated>2022-07-07T01:31:15Z</updated>
    <id>tag:github.com,2022-07-07:/awesomekling/ladybird</id>
    <link href="https://github.com/awesomekling/ladybird" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ladybird web browser&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ladybird Web Browser&lt;/h1&gt; &#xA;&lt;p&gt;The Ladybird Web Browser is a browser using the SerenityOS LibWeb engine with a Qt GUI.&lt;/p&gt; &#xA;&lt;h2&gt;Build Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;Qt6 development packages and a c++20-enabled compiler are required. On Debian/Ubuntu required packages include, but are not limited to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install build-essential cmake libgl1-mesa-dev ninja-build qt6-base-dev qt6-tools-dev-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Arch Linux/Manjaro:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo pacman -S base-devel cmake libgl ninja qt6-base qt6-tools qt6-wayland&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For the c++ compiler, gcc-11 or clang-13 are required at a minimum for c++20 support.&lt;/p&gt; &#xA;&lt;p&gt;For Ubuntu 20.04 and above, ensure that the Qt6 Wayland packages are available:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install qt6-wayland&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Build steps&lt;/h2&gt; &#xA;&lt;p&gt;Basic workflow, using serenity source dir cloned from github:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cmake -GNinja -B Build&#xA;cmake --build Build&#xA;ninja -C Build run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Advanced workflow, using pre-existing serenity checkout.&lt;/p&gt; &#xA;&lt;p&gt;If you previously didn&#39;t set SERENITY_SOURCE_DIR, probably want to blast the Build directory before doing this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cmake -GNinja -B Build -DSERENITY_SOURCE_DIR=/path/to/serenity&#xA;ninja -C Build run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To automatically run in gdb:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ninja -C Build debug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run without ninja rule:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# or your existing serenity checkout /path/to/serenity&#xA;export SERENITY_SOURCE_DIR=${PWD}/Build/serenity&#xA;./Build/ladybird&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>cubefs/cubefs</title>
    <updated>2022-07-07T01:31:15Z</updated>
    <id>tag:github.com,2022-07-07:/cubefs/cubefs</id>
    <link href="https://github.com/cubefs/cubefs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CubeFS is a cloud native distributed storage platform.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CubeFS&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.cncf.io/projects&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/cncf%20status-incubating-blue.svg?sanitize=true&#34; alt=&#34;CNCF Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cubefs/cubefs/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/cubefs/cubefs/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cubefs/cubefs/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/cubefs/cubefs.svg?sanitize=true&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://golang.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Language-Go-blue.svg?sanitize=true&#34; alt=&#34;Language&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://goreportcard.com/report/github.com/cubefs/cubefs&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/cubefs/cubefs&#34; alt=&#34;Go Report Card&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cubefs.readthedocs.io/en/latest/?badge=latest&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/cubefs/badge/?version=latest&#34; alt=&#34;Docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/2761&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/2761/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/5708406/91202310-31eaab80-e734-11ea-84fc-c1b1882ae71c.png&#34; height=&#34;24&#34;&gt;&amp;nbsp;Community Meeting&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;The CubeFS Project holds bi-weekly community online meeting. To join or watch previous meeting notes and recordings, please see &lt;a href=&#34;https://github.com/cubefs/community/wiki/Meeting-Schedule&#34;&gt;meeting schedule&lt;/a&gt; and &lt;a href=&#34;https://github.com/cubefs/community/wiki/Meeting-Agenda-and-Notes&#34;&gt;meeting minutes&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;master&lt;/code&gt; branch may be in an &lt;em&gt;unstable or even broken state&lt;/em&gt; during development. Please use &lt;a href=&#34;https://github.com/cubefs/cubefs/releases&#34;&gt;releases&lt;/a&gt; instead of the &lt;code&gt;master&lt;/code&gt; branch in order to get a stable set of binaries.&lt;/p&gt; &#xA;&lt;div width=&#34;100%&#34; style=&#34;text-align:center;&#34;&gt;&#xA; &lt;img alt=&#34;CubeFS&#34; src=&#34;https://user-images.githubusercontent.com/12113219/150923746-d09409fc-78ca-42cb-a467-b356c3ef9f61.png&#34; height=&#34;200&#34;&gt;&#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cubefs/cubefs/master/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cubefs/cubefs/master/#documents&#34;&gt;Documents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cubefs/cubefs/master/#benchmark&#34;&gt;Benchmark&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cubefs/cubefs/master/#build-cubefs&#34;&gt;Build CubeFS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cubefs/cubefs/master/#yum-tools-to-run-a-cubefs-cluster-for-centos-7&#34;&gt;Yum Tools to Run a CubeFS Cluster for CentOS 7+&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cubefs/cubefs/master/#run-a-cubefs-cluster-within-docker&#34;&gt;Run a CubeFS Cluster within Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cubefs/cubefs/master/#helm-chart-to-run-a-cubefs-cluster-in-kubernetes&#34;&gt;Helm chart to Run a CubeFS Cluster in Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cubefs/cubefs/master/#reference&#34;&gt;Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cubefs/cubefs/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cubefs/cubefs/master/#reporting-a-security-vulnerability&#34;&gt;Reporting a security vulnerability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cubefs/cubefs/master/#community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cubefs/cubefs/master/#partners-and-users&#34;&gt;Partners and Users&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cubefs/cubefs/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;CubeFS (储宝文件系统 in Chinese) is a cloud-native storage platform that provides both POSIX-compliant and S3-compatible interfaces. It is hosted by the &lt;a href=&#34;https://cncf.io&#34;&gt;Cloud Native Computing Foundation&lt;/a&gt; (CNCF) as a &lt;a href=&#34;https://www.cncf.io/projects/&#34;&gt;incubating&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;p&gt;CubeFS has been commonly used as the underlying storage infrastructure for online applications, database or data processing services and machine learning jobs orchestrated by Kubernetes. An advantage of doing so is to separate storage from compute - one can scale up or down based on the workload and independent of the other, providing total flexibility in matching resources to the actual storage and compute capacity required at any given time.&lt;/p&gt; &#xA;&lt;p&gt;Some key features of CubeFS include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Multiple Access Protocol Support&lt;br&gt; Converge posix filesystem interfaces、S3-compatible interfaces and hdfs interfaces&lt;/li&gt; &#xA; &lt;li&gt;Metadata Highly Scalable&lt;br&gt; Elasticity, scalability and strong consistency of metadata&lt;/li&gt; &#xA; &lt;li&gt;High Performance&lt;br&gt; Specific performance optimizations for large/small files and sequential/random writes&lt;/li&gt; &#xA; &lt;li&gt;Multi-tenancy&lt;br&gt; Share the whole storage and resource utilization ratio&lt;/li&gt; &#xA; &lt;li&gt;Hybrid Cloud Acceleration&lt;br&gt; Accelerate Hybrid Cloud IO performance through multi-level caching&lt;/li&gt; &#xA; &lt;li&gt;Online Erasure Coding Subsystem&lt;br&gt; Provide high durability, high availability, low cost erasure coding storage system&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We are committed to making CubeFS better and more mature. Please stay tuned.&lt;/p&gt; &#xA;&lt;h2&gt;Documents&lt;/h2&gt; &#xA;&lt;p&gt;English version: &lt;a href=&#34;https://cubefs.readthedocs.io/en/latest/&#34;&gt;https://cubefs.readthedocs.io/en/latest/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Chinese version: &lt;a href=&#34;https://cubefs.readthedocs.io/zh_CN/latest/&#34;&gt;https://cubefs.readthedocs.io/zh_CN/latest/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Benchmark&lt;/h2&gt; &#xA;&lt;p&gt;Small file operation performance and scalability benchmark test by &lt;a href=&#34;https://github.com/LLNL/mdtest&#34;&gt;mdtest&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/cubefs/cubefs/master/docs/source/pic/cfs-small-file-benchmark.png&#34; width=&#34;600&#34; align=&#34;center/&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;File Size (KB)&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;1&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;2&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;4&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;8&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;16&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;32&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;64&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;128&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Creation (TPS)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;70383&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;70383&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;73738&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;74617&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;69479&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;67435&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;47540&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;27147&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Read (TPS)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;108600&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;118193&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;118346&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;122975&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;116374&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;110795&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;90462&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;62082&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Removal (TPS)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;87648&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;84651&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;83532&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;79279&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;85498&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;86523&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;80946&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;84441&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Stat (TPS)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;231961&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;263270&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;264207&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;252309&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;240244&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;244906&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;273576&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;242930&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Refer to &lt;a href=&#34;https://cubefs.readthedocs.io/en/latest/evaluation.html&#34;&gt;cubefs.readthedocs.io&lt;/a&gt; for performance and scalability of &lt;code&gt;IO&lt;/code&gt; and &lt;code&gt;Metadata&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build CubeFS&lt;/h2&gt; &#xA;&lt;p&gt;Prerequisite:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go version &lt;code&gt;&amp;gt;=1.16&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;export GO111MODULE=off&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Build for x86&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone http://github.com/cubefs/cubefs.git&#xA;$ cd cubefs&#xA;$ make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build for arm64&lt;/h3&gt; &#xA;&lt;p&gt;For example,the current cubefs directory is /root/arm64/cubefs,build.sh will auto download follow source codes to vendor/dep directory : bzip2-1.0.6 lz4-1.9.2 zlib-1.2.11 zstd-1.4.5 gcc version as v4 or v5: &lt;code&gt;cd /root/arm64/cubefs export CPUTYPE=arm64_gcc4 &amp;amp;&amp;amp; bash ./build.sh&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;gcc version as v9 : &lt;code&gt;export CPUTYPE=arm64_gcc9 &amp;amp;&amp;amp; bash ./build.sh&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Also support cross compiler with docker:&lt;/h4&gt; &#xA;&lt;p&gt;gcc version as v4, support Ububtu 14.04 and up version,CentOS7.6 and up version. Check libstdc++.so.6 version must more than `GLIBCXX_3.4.19&#39;,if fail please update libstdc++.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd /root/arm64/cubefs&#xA;docker build --rm --tag arm64_gcc4_golang1_13_ubuntu_14_04_cubefs ./build/compile/arm64/gcc4&#xA;&#xA;make dist-clean&#xA;docker run  -v /root/arm64/cubefs:/root/cubefs arm64_gcc4_golang1_13_ubuntu_14_04_cubefs /root/buildcfs.sh&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Remove image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker image remove -f  arm64_gcc4_golang1_13_ubuntu_14_04_cubefs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Yum Tools to Run a CubeFS Cluster for CentOS 7+&lt;/h2&gt; &#xA;&lt;p&gt;The list of RPM packages dependencies can be installed with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ yum install https://ocs-cn-north1.heytapcs.com/cubefs/cfs-install-latest-el7.x86_64.rpm&#xA;$ cd /cfs/install&#xA;$ tree -L 2&#xA;.&#xA;├── install_cfs.yml&#xA;├── install.sh&#xA;├── iplist&#xA;├── src&#xA;└── template&#xA;    ├── client.json.j2&#xA;    ├── create_vol.sh.j2&#xA;    ├── datanode.json.j2&#xA;    ├── grafana&#xA;    ├── master.json.j2&#xA;    └── metanode.json.j2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set parameters of the CubeFS cluster in &lt;code&gt;iplist&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;[master]&lt;/code&gt;, &lt;code&gt;[datanode]&lt;/code&gt;, &lt;code&gt;[metanode]&lt;/code&gt;, &lt;code&gt;[monitor]&lt;/code&gt;, &lt;code&gt;[client]&lt;/code&gt; modules define IP addresses of each role.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;#datanode config&lt;/code&gt; module defines parameters of DataNodes. &lt;code&gt;datanode_disks&lt;/code&gt; defines &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;reserved space&lt;/code&gt; separated by &#34;:&#34;. The &lt;code&gt;path&lt;/code&gt; is where the data store in, so make sure it exists and has at least 30GB of space; &lt;code&gt;reserved space&lt;/code&gt; is the minimum free space(Bytes) reserved for the path.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;[cfs:vars]&lt;/code&gt; module defines parameters for SSH connection. So make sure the port, username and password for SSH connection is unified before start.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;#metanode config&lt;/code&gt; module defines parameters of MetaNodes. &lt;code&gt;metanode_totalMem&lt;/code&gt; defines the maximum memory(Bytes) can be use by MetaNode process.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;[master]&#xA;10.196.0.1&#xA;10.196.0.2&#xA;10.196.0.3&#xA;[datanode]&#xA;...&#xA;[cfs:vars]&#xA;ansible_ssh_port=22&#xA;ansible_ssh_user=root&#xA;ansible_ssh_pass=&#34;password&#34;&#xA;...&#xA;#datanode config&#xA;...&#xA;datanode_disks =  &#39;&#34;/data0:10737418240&#34;,&#34;/data1:10737418240&#34;&#39;&#xA;...&#xA;#metanode config&#xA;...&#xA;metanode_totalMem = &#34;28589934592&#34;&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more configurations please refer to &lt;a href=&#34;https://cubefs.readthedocs.io/en/latest/user-guide/master.html&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Start the resources of CubeFS cluster with script &lt;code&gt;install.sh&lt;/code&gt;. (make sure the Master is started first)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ bash install.sh -h&#xA;Usage: install.sh -r | --role [datanode | metanode | master | objectnode | console | monitor | client | all | createvol ] [2.1.0 or latest]&#xA;$ bash install.sh -r master&#xA;$ bash install.sh -r metanode&#xA;$ bash install.sh -r datanode&#xA;$ bash install.sh -r monitor&#xA;$ bash install.sh -r client&#xA;$ bash install.sh -r console&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check mount point at &lt;code&gt;/cfs/mountpoint&lt;/code&gt; on &lt;code&gt;client&lt;/code&gt; node defined in &lt;code&gt;iplist&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Open &lt;a href=&#34;https:/github.com/cubefs/cubefs&#34;&gt;http://[the IP of console system]&lt;/a&gt; through a browser for web console system(the IP of console system is defined in &lt;code&gt;iplist&lt;/code&gt;). In console default user is &lt;code&gt;root&lt;/code&gt;, password is &lt;code&gt;CubeFSRoot&lt;/code&gt;. In monitor default user is &lt;code&gt;admin&lt;/code&gt;,password is &lt;code&gt;123456&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Run a CubeFS Cluster within Docker&lt;/h2&gt; &#xA;&lt;p&gt;A helper tool called &lt;code&gt;run_docker.sh&lt;/code&gt; (under the &lt;code&gt;docker&lt;/code&gt; directory) has been provided to run CubeFS with &lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;docker-compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker/run_docker.sh -r -d /data/disk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that &lt;strong&gt;/data/disk&lt;/strong&gt; can be any directory but please make sure it has at least 10G available space.&lt;/p&gt; &#xA;&lt;p&gt;To check the mount status, use the &lt;code&gt;mount&lt;/code&gt; command in the client docker shell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mount | grep cubefs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To view grafana monitor metrics, open &lt;a href=&#34;http://127.0.0.1:3000&#34;&gt;http://127.0.0.1:3000&lt;/a&gt; in browser and login with &lt;code&gt;admin/123456&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To run server and client separately, use the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker/run_docker.sh -b&#xA;$ docker/run_docker.sh -s -d /data/disk&#xA;$ docker/run_docker.sh -c&#xA;$ docker/run_docker.sh -m&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker/run_docker.sh -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Helm chart to Run a CubeFS Cluster in Kubernetes&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/cubefs/cubefs-helm&#34;&gt;cubefs-helm&lt;/a&gt; repository can help you deploy CubeFS cluster quickly in containers orchestrated by kubernetes. Kubernetes 1.12+ and Helm 3 are required. cubefs-helm has already integrated CubeFS CSI plugin&lt;/p&gt; &#xA;&lt;h3&gt;Download cubefs-helm&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/cubefs/cubefs-helm&#xA;$ cd cubefs-helm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Copy kubeconfig file&lt;/h3&gt; &#xA;&lt;p&gt;CubeFS CSI driver will use client-go to connect the Kubernetes API Server. First you need to copy the kubeconfig file to &lt;code&gt;cubefs-helm/cubefs/config/&lt;/code&gt; directory, and rename to kubeconfig&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cp ~/.kube/config cubefs/config/kubeconfig&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create configuration yaml file&lt;/h3&gt; &#xA;&lt;p&gt;Create a &lt;code&gt;cubefs.yaml&lt;/code&gt; file, and put it in a user-defined path. Suppose this is where we put it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cat ~/cubefs.yaml &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;path:&#xA;  data: /cubefs/data&#xA;  log: /cubefs/log&#xA;&#xA;datanode:&#xA;  disks:&#xA;    - /data0:21474836480&#xA;    - /data1:21474836480 &#xA;&#xA;metanode:&#xA;  total_mem: &#34;26843545600&#34;&#xA;&#xA;provisioner:&#xA;  kubelet_path: /var/lib/kubelet&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note that &lt;code&gt;cubefs-helm/cubefs/values.yaml&lt;/code&gt; shows all the config parameters of CubeFS. The parameters &lt;code&gt;path.data&lt;/code&gt; and &lt;code&gt;path.log&lt;/code&gt; are used to store server data and logs, respectively.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Add labels to Kubernetes node&lt;/h3&gt; &#xA;&lt;p&gt;You should tag each Kubernetes node with the appropriate labels accorindly for server node and CSI node of CubeFS.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubectl label node &amp;lt;nodename&amp;gt; cubefs-master=enabled&#xA;kubectl label node &amp;lt;nodename&amp;gt; cubefs-metanode=enabled&#xA;kubectl label node &amp;lt;nodename&amp;gt; cubefs-datanode=enabled&#xA;kubectl label node &amp;lt;nodename&amp;gt; cubefs-csi-node=enabled&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Deploy CubeFS cluster&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ helm install cubefs ./cubefs -f ~/cubefs.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Reference&lt;/h2&gt; &#xA;&lt;p&gt;Haifeng Liu, et al., CFS: A Distributed File System for Large Scale Container Platforms. SIGMOD‘19, June 30-July 5, 2019, Amsterdam, Netherlands.&lt;/p&gt; &#xA;&lt;p&gt;For more information, please refer to &lt;a href=&#34;https://dl.acm.org/citation.cfm?doid=3299869.3314046&#34;&gt;https://dl.acm.org/citation.cfm?doid=3299869.3314046&lt;/a&gt; and &lt;a href=&#34;https://arxiv.org/abs/1911.03001&#34;&gt;https://arxiv.org/abs/1911.03001&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Recommend the standard GitHub flow based on forking and pull requests.&lt;br&gt; See &lt;a href=&#34;https://raw.githubusercontent.com/cubefs/cubefs/master/CONTRIBUTING.md#workflow&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for detail.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting a security vulnerability&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/cubefs/cubefs/master/security/README.md&#34;&gt;security disclosure process&lt;/a&gt; for detail.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mailing list: &lt;a href=&#34;mailto:cubefs-users@groups.io&#34;&gt;cubefs-users@groups.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Slack: &lt;a href=&#34;https://cubefs.slack.com/&#34;&gt;cubefs.slack.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WeChat: detail see &lt;a href=&#34;https://github.com/cubefs/cubefs/issues/604&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Partners and Users&lt;/h2&gt; &#xA;&lt;p&gt;For a list of users and success stories see &lt;a href=&#34;https://raw.githubusercontent.com/cubefs/cubefs/master/ADOPTERS.md&#34;&gt;ADOPTERS.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;CubeFS is licensed under the &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License, Version 2.0&lt;/a&gt;. For detail see &lt;a href=&#34;https://raw.githubusercontent.com/cubefs/cubefs/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/cubefs/cubefs/master/NOTICE&#34;&gt;NOTICE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.io/projects/git%2Bgithub.com%2Fcubefs%2Fcfs?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fcubefs%2Fcfs.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>CMU-Perceptual-Computing-Lab/openpose</title>
    <updated>2022-07-07T01:31:15Z</updated>
    <id>tag:github.com,2022-07-07:/CMU-Perceptual-Computing-Lab/openpose</id>
    <link href="https://github.com/CMU-Perceptual-Computing-Lab/openpose" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenPose: Real-time multi-person keypoint detection library for body, face, hands, and foot estimation&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/.github/Logo_main_black.png&#34; width=&#34;300&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Build Type&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;Linux&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;MacOS&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;Windows&lt;/code&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Build Status&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/CMU-Perceptual-Computing-Lab/openpose/actions&#34;&gt;&lt;img src=&#34;https://github.com/CMU-Perceptual-Computing-Lab/openpose/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/CMU-Perceptual-Computing-Lab/openpose/actions&#34;&gt;&lt;img src=&#34;https://github.com/CMU-Perceptual-Computing-Lab/openpose/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://ci.appveyor.com/project/gineshidalgo99/openpose/branch/master&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/5leescxxdwen77kg/branch/master?svg=true&#34; alt=&#34;Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/CMU-Perceptual-Computing-Lab/openpose&#34;&gt;&lt;strong&gt;OpenPose&lt;/strong&gt;&lt;/a&gt; has represented the &lt;strong&gt;first real-time multi-person system to jointly detect human body, hand, facial, and foot keypoints (in total 135 keypoints) on single images&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is &lt;strong&gt;authored by&lt;/strong&gt; &lt;a href=&#34;https://www.gineshidalgo.com&#34;&gt;&lt;strong&gt;Ginés Hidalgo&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://people.eecs.berkeley.edu/~zhecao&#34;&gt;&lt;strong&gt;Zhe Cao&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;http://www.cs.cmu.edu/~tsimon&#34;&gt;&lt;strong&gt;Tomas Simon&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://scholar.google.com/citations?user=sFQD3k4AAAAJ&amp;amp;hl=en&#34;&gt;&lt;strong&gt;Shih-En Wei&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://www.raaj.tech&#34;&gt;&lt;strong&gt;Yaadhav Raaj&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://jhugestar.github.io&#34;&gt;&lt;strong&gt;Hanbyul Joo&lt;/strong&gt;&lt;/a&gt;, &lt;strong&gt;and&lt;/strong&gt; &lt;a href=&#34;http://www.cs.cmu.edu/~yaser&#34;&gt;&lt;strong&gt;Yaser Sheikh&lt;/strong&gt;&lt;/a&gt;. It is &lt;strong&gt;maintained by&lt;/strong&gt; &lt;a href=&#34;https://www.gineshidalgo.com&#34;&gt;&lt;strong&gt;Ginés Hidalgo&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;and&lt;/strong&gt; &lt;a href=&#34;https://www.raaj.tech&#34;&gt;&lt;strong&gt;Yaadhav Raaj&lt;/strong&gt;&lt;/a&gt;. OpenPose would not be possible without the &lt;a href=&#34;http://domedb.perception.cs.cmu.edu&#34;&gt;&lt;strong&gt;CMU Panoptic Studio dataset&lt;/strong&gt;&lt;/a&gt;. We would also like to thank all the people who &lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/doc/09_authors_and_contributors.md&#34;&gt;has helped OpenPose in any way&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/.github/media/pose_face_hands.gif&#34; width=&#34;480&#34;&gt; &lt;br&gt; &lt;sup&gt;Authors &lt;a href=&#34;https://www.gineshidalgo.com&#34; target=&#34;_blank&#34;&gt;Ginés Hidalgo&lt;/a&gt; (left) and &lt;a href=&#34;https://jhugestar.github.io&#34; target=&#34;_blank&#34;&gt;Hanbyul Joo&lt;/a&gt; (right) in front of the &lt;a href=&#34;http://domedb.perception.cs.cmu.edu&#34; target=&#34;_blank&#34;&gt;CMU Panoptic Studio&lt;/a&gt;&lt;/sup&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/#results&#34;&gt;Results&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/#related-work&#34;&gt;Related Work&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/#quick-start-overview&#34;&gt;Quick Start Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/#send-us-feedback&#34;&gt;Send Us Feedback!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/#citation&#34;&gt;Citation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Results&lt;/h2&gt; &#xA;&lt;h3&gt;Whole-body (Body, Foot, Face, and Hands) 2D Pose Estimation&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/.github/media/dance_foot.gif&#34; width=&#34;300&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/.github/media/pose_face.gif&#34; width=&#34;300&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/.github/media/pose_hands.gif&#34; width=&#34;300&#34;&gt; &lt;br&gt; &lt;sup&gt;Testing OpenPose: (Left) &lt;a href=&#34;https://www.youtube.com/watch?v=2DiQUX11YaY&#34; target=&#34;_blank&#34;&gt;&lt;i&gt;Crazy Uptown Funk flashmob in Sydney&lt;/i&gt;&lt;/a&gt; video sequence. (Center and right) Authors &lt;a href=&#34;https://www.gineshidalgo.com&#34; target=&#34;_blank&#34;&gt;Ginés Hidalgo&lt;/a&gt; and &lt;a href=&#34;http://www.cs.cmu.edu/~tsimon&#34; target=&#34;_blank&#34;&gt;Tomas Simon&lt;/a&gt; testing face and hands&lt;/sup&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Whole-body 3D Pose Reconstruction and Estimation&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/.github/media/openpose3d.gif&#34; width=&#34;360&#34;&gt; &lt;br&gt; &lt;sup&gt;&lt;a href=&#34;https://ziutinyat.github.io/&#34; target=&#34;_blank&#34;&gt;Tianyi Zhao&lt;/a&gt; testing the OpenPose 3D Module&lt;/sup&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Unity Plugin&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/.github/media/unity_main.png&#34; width=&#34;300&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/.github/media/unity_body_foot.png&#34; width=&#34;300&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/.github/media/unity_hand_face.png&#34; width=&#34;300&#34;&gt; &lt;br&gt; &lt;sup&gt;&lt;a href=&#34;https://ziutinyat.github.io/&#34; target=&#34;_blank&#34;&gt;Tianyi Zhao&lt;/a&gt; and &lt;a href=&#34;https://www.gineshidalgo.com&#34; target=&#34;_blank&#34;&gt;Ginés Hidalgo&lt;/a&gt; testing the &lt;a href=&#34;https://github.com/CMU-Perceptual-Computing-Lab/openpose_unity_plugin&#34; target=&#34;_blank&#34;&gt;OpenPose Unity Plugin&lt;/a&gt;&lt;/sup&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Runtime Analysis&lt;/h3&gt; &#xA;&lt;p&gt;We show an inference time comparison between the 3 available pose estimation libraries (same hardware and conditions): OpenPose, Alpha-Pose (fast Pytorch version), and Mask R-CNN. The OpenPose runtime is constant, while the runtime of Alpha-Pose and Mask R-CNN grow linearly with the number of people. More details &lt;a href=&#34;https://arxiv.org/abs/1812.08008&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/.github/media/openpose_vs_competition.png&#34; width=&#34;360&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Main Functionality&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;2D real-time multi-person keypoint detection&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;15, 18 or &lt;strong&gt;25-keypoint body/foot keypoint estimation&lt;/strong&gt;, including &lt;strong&gt;6 foot keypoints&lt;/strong&gt;. &lt;strong&gt;Runtime invariant to number of detected people&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;2x21-keypoint hand keypoint estimation&lt;/strong&gt;. &lt;strong&gt;Runtime depends on number of detected people&lt;/strong&gt;. See &lt;a href=&#34;https://github.com/CMU-Perceptual-Computing-Lab/openpose_train&#34;&gt;&lt;strong&gt;OpenPose Training&lt;/strong&gt;&lt;/a&gt; for a runtime invariant alternative.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;70-keypoint face keypoint estimation&lt;/strong&gt;. &lt;strong&gt;Runtime depends on number of detected people&lt;/strong&gt;. See &lt;a href=&#34;https://github.com/CMU-Perceptual-Computing-Lab/openpose_train&#34;&gt;&lt;strong&gt;OpenPose Training&lt;/strong&gt;&lt;/a&gt; for a runtime invariant alternative.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/doc/advanced/3d_reconstruction_module.md&#34;&gt;&lt;strong&gt;3D real-time single-person keypoint detection&lt;/strong&gt;&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;3D triangulation from multiple single views.&lt;/li&gt; &#xA;   &lt;li&gt;Synchronization of Flir cameras handled.&lt;/li&gt; &#xA;   &lt;li&gt;Compatible with Flir/Point Grey cameras.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/doc/advanced/calibration_module.md&#34;&gt;&lt;strong&gt;Calibration toolbox&lt;/strong&gt;&lt;/a&gt;: Estimation of distortion, intrinsic, and extrinsic camera parameters.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Single-person tracking&lt;/strong&gt; for further speedup or visual smoothing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Input&lt;/strong&gt;: Image, video, webcam, Flir/Point Grey, IP camera, and support to add your own custom input source (e.g., depth camera).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;: Basic image + keypoint display/saving (PNG, JPG, AVI, ...), keypoint saving (JSON, XML, YML, ...), keypoints as array class, and support to add your own custom output code (e.g., some fancy UI).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;OS&lt;/strong&gt;: Ubuntu (20, 18, 16, 14), Windows (10, 8), Mac OSX, Nvidia TX2.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Hardware compatibility&lt;/strong&gt;: CUDA (Nvidia GPU), OpenCL (AMD GPU), and non-GPU (CPU-only) versions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Usage Alternatives&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/doc/01_demo.md&#34;&gt;&lt;strong&gt;Command-line demo&lt;/strong&gt;&lt;/a&gt; for built-in functionality.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/doc/04_cpp_api.md/&#34;&gt;&lt;strong&gt;C++ API&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/doc/03_python_api.md&#34;&gt;&lt;strong&gt;Python API&lt;/strong&gt;&lt;/a&gt; for custom functionality. E.g., adding your custom inputs, pre-processing, post-posprocessing, and output steps.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For further details, check the &lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/doc/07_major_released_features.md&#34;&gt;major released features&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/doc/08_release_notes.md&#34;&gt;release notes&lt;/a&gt; docs.&lt;/p&gt; &#xA;&lt;h2&gt;Related Work&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CMU-Perceptual-Computing-Lab/openpose_train&#34;&gt;&lt;strong&gt;OpenPose training code&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cmu-perceptual-computing-lab.github.io/foot_keypoint_dataset/&#34;&gt;&lt;strong&gt;OpenPose foot dataset&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CMU-Perceptual-Computing-Lab/openpose_unity_plugin&#34;&gt;&lt;strong&gt;OpenPose Unity Plugin&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;OpenPose papers published in &lt;strong&gt;IEEE TPAMI and CVPR&lt;/strong&gt;. Cite them in your publications if OpenPose helps your research! (Links and more details in the &lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/#citation&#34;&gt;Citation&lt;/a&gt; section below).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;If you want to use OpenPose without installing or writing any code, simply &lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/doc/installation/0_index.md#windows-portable-demo&#34;&gt;download and use the latest Windows portable version of OpenPose&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;Otherwise, you could &lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/doc/installation/0_index.md#compiling-and-running-openpose-from-source&#34;&gt;build OpenPose from source&lt;/a&gt;. See the &lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/doc/installation/0_index.md&#34;&gt;installation doc&lt;/a&gt; for all the alternatives.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start Overview&lt;/h2&gt; &#xA;&lt;p&gt;Simply use the OpenPose Demo from your favorite command-line tool (e.g., Windows PowerShell or Ubuntu Terminal). E.g., this example runs OpenPose on your webcam and displays the body keypoints:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Ubuntu&#xA;./build/examples/openpose/openpose.bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;:: Windows - Portable Demo&#xA;bin\OpenPoseDemo.exe --video examples\media\video.avi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also add any of the available flags in any order. E.g., the following example runs on a video (&lt;code&gt;--video {PATH}&lt;/code&gt;), enables face (&lt;code&gt;--face&lt;/code&gt;) and hands (&lt;code&gt;--hand&lt;/code&gt;), and saves the output keypoints on JSON files on disk (&lt;code&gt;--write_json {PATH}&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Ubuntu&#xA;./build/examples/openpose/openpose.bin --video examples/media/video.avi --face --hand --write_json output_json_folder/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;:: Windows - Portable Demo&#xA;bin\OpenPoseDemo.exe --video examples\media\video.avi --face --hand --write_json output_json_folder/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optionally, you can also extend OpenPose&#39;s functionality from its Python and C++ APIs. After &lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/doc/installation/0_index.md&#34;&gt;installing&lt;/a&gt; OpenPose, check its &lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/doc/00_index.md&#34;&gt;official doc&lt;/a&gt; for a quick overview of all the alternatives and tutorials.&lt;/p&gt; &#xA;&lt;h2&gt;Send Us Feedback!&lt;/h2&gt; &#xA;&lt;p&gt;Our library is open source for research purposes, and we want to improve it! So let us know (create a new GitHub issue or pull request, email us, etc.) if you...&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Find/fix any bug (in functionality or speed) or know how to speed up or improve any part of OpenPose.&lt;/li&gt; &#xA; &lt;li&gt;Want to add/show some cool functionality/demo/project made on top of OpenPose. We can add your project link to our &lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/doc/10_community_projects.md&#34;&gt;Community-based Projects&lt;/a&gt; section or even integrate it with OpenPose!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;Please cite these papers in your publications if OpenPose helps your research. All of OpenPose is based on &lt;a href=&#34;https://arxiv.org/abs/1812.08008&#34;&gt;OpenPose: Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields&lt;/a&gt;, while the hand and face detectors also use &lt;a href=&#34;https://arxiv.org/abs/1704.07809&#34;&gt;Hand Keypoint Detection in Single Images using Multiview Bootstrapping&lt;/a&gt; (the face detector was trained using the same procedure than the hand detector).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{8765346,&#xA;  author = {Z. {Cao} and G. {Hidalgo Martinez} and T. {Simon} and S. {Wei} and Y. A. {Sheikh}},&#xA;  journal = {IEEE Transactions on Pattern Analysis and Machine Intelligence},&#xA;  title = {OpenPose: Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields},&#xA;  year = {2019}&#xA;}&#xA;&#xA;@inproceedings{simon2017hand,&#xA;  author = {Tomas Simon and Hanbyul Joo and Iain Matthews and Yaser Sheikh},&#xA;  booktitle = {CVPR},&#xA;  title = {Hand Keypoint Detection in Single Images using Multiview Bootstrapping},&#xA;  year = {2017}&#xA;}&#xA;&#xA;@inproceedings{cao2017realtime,&#xA;  author = {Zhe Cao and Tomas Simon and Shih-En Wei and Yaser Sheikh},&#xA;  booktitle = {CVPR},&#xA;  title = {Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields},&#xA;  year = {2017}&#xA;}&#xA;&#xA;@inproceedings{wei2016cpm,&#xA;  author = {Shih-En Wei and Varun Ramakrishna and Takeo Kanade and Yaser Sheikh},&#xA;  booktitle = {CVPR},&#xA;  title = {Convolutional pose machines},&#xA;  year = {2016}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Paper links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OpenPose: Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://ieeexplore.ieee.org/document/8765346&#34;&gt;IEEE TPAMI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1812.08008&#34;&gt;ArXiv&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1704.07809&#34;&gt;Hand Keypoint Detection in Single Images using Multiview Bootstrapping&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1611.08050&#34;&gt;Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1602.00134&#34;&gt;Convolutional Pose Machines&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;OpenPose is freely available for free non-commercial use, and may be redistributed under these conditions. Please, see the &lt;a href=&#34;https://raw.githubusercontent.com/CMU-Perceptual-Computing-Lab/openpose/master/LICENSE&#34;&gt;license&lt;/a&gt; for further details. Interested in a commercial license? Check this &lt;a href=&#34;https://cmu.flintbox.com/#technologies/b820c21d-8443-4aa2-a49f-8919d93a8740&#34;&gt;FlintBox link&lt;/a&gt;. For commercial queries, use the &lt;code&gt;Contact&lt;/code&gt; section from the &lt;a href=&#34;https://cmu.flintbox.com/#technologies/b820c21d-8443-4aa2-a49f-8919d93a8740&#34;&gt;FlintBox link&lt;/a&gt; and also send a copy of that message to &lt;a href=&#34;mailto:yaser@cs.cmu.edu&#34;&gt;Yaser Sheikh&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>