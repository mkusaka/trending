<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-15T01:31:49Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>randombit/botan</title>
    <updated>2023-07-15T01:31:49Z</updated>
    <id>tag:github.com,2023-07-15:/randombit/botan</id>
    <link href="https://github.com/randombit/botan" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cryptography Toolkit&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Botan: Crypto and TLS for Modern C++&lt;/h1&gt; &#xA;&lt;p&gt;Botan (Japanese for peony flower) is a C++ cryptography library released under the permissive &lt;code&gt;Simplified BSD &amp;lt;https://botan.randombit.net/license.txt&amp;gt;&lt;/code&gt;_ license.&lt;/p&gt; &#xA;&lt;p&gt;Botan&#39;s goal is to be the best option for cryptography in C++ by offering the tools necessary to implement a range of practical systems, such as TLS protocol, X.509 certificates, modern AEAD ciphers, PKCS#11 and TPM hardware support, password hashing, and post quantum crypto schemes. A Python binding is included, and several other &lt;code&gt;language bindings &amp;lt;https://github.com/randombit/botan/wiki/Language-Bindings&amp;gt;&lt;/code&gt;_ are available. The library is accompanied by a featureful &lt;code&gt;command line interface &amp;lt;https://botan.randombit.net/handbook/cli.html&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;code&gt;documentation &amp;lt;https://botan.randombit.net/handbook&amp;gt;&lt;/code&gt;_ for more information about included features.&lt;/p&gt; &#xA;&lt;p&gt;Development is coordinated on &lt;code&gt;GitHub &amp;lt;https://github.com/randombit/botan&amp;gt;&lt;/code&gt;_ and contributions are welcome. If you need help, please open an issue on &lt;code&gt;GitHub &amp;lt;https://github.com/randombit/botan/issues&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;If you think you have found a security issue, see the &lt;code&gt;security page &amp;lt;https://botan.randombit.net/security.html&amp;gt;&lt;/code&gt;_ for contact information.&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://github.com/randombit/botan/actions/workflows/ci.yml/badge.svg?branch=master&#34;&gt;https://github.com/randombit/botan/actions/workflows/ci.yml/badge.svg?branch=master&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/randombit/botan/actions/workflows/ci.yml&#34;&gt;https://github.com/randombit/botan/actions/workflows/ci.yml&lt;/a&gt; :alt: CI status&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://github.com/randombit/botan/actions/workflows/nightly.yml/badge.svg?branch=master&#34;&gt;https://github.com/randombit/botan/actions/workflows/nightly.yml/badge.svg?branch=master&lt;/a&gt; :target: &lt;a href=&#34;https://github.com/randombit/botan/actions/workflows/nightly.yml&#34;&gt;https://github.com/randombit/botan/actions/workflows/nightly.yml&lt;/a&gt; :alt: nightly CI status&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://img.shields.io/coverallsCoverage/github/randombit/botan?branch=master&#34;&gt;https://img.shields.io/coverallsCoverage/github/randombit/botan?branch=master&lt;/a&gt; :target: &lt;a href=&#34;https://coveralls.io/github/randombit/botan&#34;&gt;https://coveralls.io/github/randombit/botan&lt;/a&gt; :alt: Coverage report&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://oss-fuzz-build-logs.storage.googleapis.com/badges/botan.svg&#34;&gt;https://oss-fuzz-build-logs.storage.googleapis.com/badges/botan.svg&lt;/a&gt; :target: &lt;a href=&#34;https://oss-fuzz.com/coverage-report/job/libfuzzer_asan_botan/latest&#34;&gt;https://oss-fuzz.com/coverage-report/job/libfuzzer_asan_botan/latest&lt;/a&gt; :alt: OSS-Fuzz status&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://repology.org/badge/tiny-repos/botan.svg&#34;&gt;https://repology.org/badge/tiny-repos/botan.svg&lt;/a&gt; :target: &lt;a href=&#34;https://repology.org/project/botan/versions&#34;&gt;https://repology.org/project/botan/versions&lt;/a&gt; :alt: Packaging status&lt;/p&gt; &#xA;&lt;p&gt;.. image:: &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/531/badge&#34;&gt;https://bestpractices.coreinfrastructure.org/projects/531/badge&lt;/a&gt; :target: &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/531&#34;&gt;https://bestpractices.coreinfrastructure.org/projects/531&lt;/a&gt; :alt: CII Best Practices statement&lt;/p&gt; &#xA;&lt;p&gt;Releases ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&lt;/p&gt; &#xA;&lt;p&gt;The latest release from the Botan2 release series is &lt;code&gt;2.19.3 &amp;lt;https://botan.randombit.net/releases/Botan-2.19.3.tar.xz&amp;gt;&lt;/code&gt;_ &lt;code&gt;(sig) &amp;lt;https://botan.randombit.net/releases/Botan-2.19.3.tar.xz.asc&amp;gt;&lt;/code&gt;_, released on 2022-11-16.&lt;/p&gt; &#xA;&lt;p&gt;The latest release from the Botan3 release series is &lt;code&gt;3.1.1 &amp;lt;https://botan.randombit.net/releases/Botan-3.1.1.tar.xz&amp;gt;&lt;/code&gt;_ &lt;code&gt;(sig) &amp;lt;https://botan.randombit.net/releases/Botan-3.1.1.tar.xz.asc&amp;gt;&lt;/code&gt;_, released on 2023-07-13.&lt;/p&gt; &#xA;&lt;p&gt;All releases are signed with a &lt;code&gt;PGP key &amp;lt;https://botan.randombit.net/pgpkey.txt&amp;gt;&lt;/code&gt;&lt;em&gt;. See the &lt;code&gt;release notes &amp;lt;https://botan.randombit.net/news.html&amp;gt;&lt;/code&gt;&lt;/em&gt; for what is new. Botan is also available through most &lt;code&gt;distributions &amp;lt;https://github.com/randombit/botan/wiki/Distros&amp;gt;&lt;/code&gt;_ such as Fedora, Debian, Arch and Homebrew.&lt;/p&gt; &#xA;&lt;p&gt;Find Enclosed ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&lt;/p&gt; &#xA;&lt;h2&gt;Transport Layer Security (TLS) Protocol&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TLS v1.2/v1.3, and DTLS v1.2&lt;/li&gt; &#xA; &lt;li&gt;Supported extensions include session tickets, SNI, ALPN, OCSP stapling, encrypt-then-mac CBC, and extended master secret.&lt;/li&gt; &#xA; &lt;li&gt;Supports authentication using certificates or preshared keys (PSK)&lt;/li&gt; &#xA; &lt;li&gt;Supports record encryption with ChaCha20Poly1305, AES/OCB, AES/GCM, AES/CCM, Camellia/GCM as well as legacy CBC ciphersuites.&lt;/li&gt; &#xA; &lt;li&gt;Key exchange using ECDH, FFDHE, or RSA&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Public Key Infrastructure&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;X.509v3 certificates and CRL creation and handling&lt;/li&gt; &#xA; &lt;li&gt;PKIX certificate path validation, including name constraints.&lt;/li&gt; &#xA; &lt;li&gt;OCSP request creation and response handling&lt;/li&gt; &#xA; &lt;li&gt;PKCS #10 certificate request generation and processing&lt;/li&gt; &#xA; &lt;li&gt;Access to Windows, macOS and Unix system certificate stores&lt;/li&gt; &#xA; &lt;li&gt;SQL database backed certificate store&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Public Key Cryptography&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RSA signatures and encryption&lt;/li&gt; &#xA; &lt;li&gt;DH and ECDH key agreement&lt;/li&gt; &#xA; &lt;li&gt;Signature schemes ECDSA, DSA, Ed25519, ECGDSA, ECKCDSA, SM2, GOST 34.10&lt;/li&gt; &#xA; &lt;li&gt;Post-quantum signature schemes Dilithium, SPHINCS+, and XMSS&lt;/li&gt; &#xA; &lt;li&gt;Post-quantum key agreement schemes McEliece and Kyber&lt;/li&gt; &#xA; &lt;li&gt;ElGamal encryption&lt;/li&gt; &#xA; &lt;li&gt;Padding schemes OAEP, PSS, PKCS #1 v1.5, X9.31&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Ciphers, hashes, MACs, and checksums&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Authenticated cipher modes EAX, OCB, GCM, SIV, CCM, (X)ChaCha20Poly1305&lt;/li&gt; &#xA; &lt;li&gt;Cipher modes CTR, CBC, XTS, CFB, OFB&lt;/li&gt; &#xA; &lt;li&gt;Block ciphers AES, ARIA, Blowfish, Camellia, CAST-128, DES/3DES, IDEA, Lion, SEED, Serpent, SHACAL2, SM4, Threefish-512, Twofish&lt;/li&gt; &#xA; &lt;li&gt;Stream ciphers (X)ChaCha20, (X)Salsa20, SHAKE-128, RC4&lt;/li&gt; &#xA; &lt;li&gt;Hash functions SHA-1, SHA-2, SHA-3, MD5, RIPEMD-160, BLAKE2b, Skein-512, SM3, Streebog, Whirlpool&lt;/li&gt; &#xA; &lt;li&gt;Password hashing schemes PBKDF2, Argon2, Scrypt, bcrypt&lt;/li&gt; &#xA; &lt;li&gt;Authentication codes HMAC, CMAC, Poly1305, SipHash, GMAC, X9.19 DES-MAC&lt;/li&gt; &#xA; &lt;li&gt;Non-cryptographic checksums Adler32, CRC24, CRC32&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other Useful Things&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full C++ PKCS #11 API wrapper&lt;/li&gt; &#xA; &lt;li&gt;Interfaces for TPM v1.2 device access&lt;/li&gt; &#xA; &lt;li&gt;Simple compression API wrapping zlib, bzip2, and lzma libraries&lt;/li&gt; &#xA; &lt;li&gt;RNG wrappers for system RNG and hardware RNGs&lt;/li&gt; &#xA; &lt;li&gt;HMAC_DRBG and entropy collection system for userspace RNGs&lt;/li&gt; &#xA; &lt;li&gt;SRP-6a password authenticated key exchange&lt;/li&gt; &#xA; &lt;li&gt;Key derivation functions including HKDF, KDF2, SP 800-108, SP 800-56A, SP 800-56C&lt;/li&gt; &#xA; &lt;li&gt;HOTP and TOTP algorithms&lt;/li&gt; &#xA; &lt;li&gt;Format preserving encryption scheme FE1&lt;/li&gt; &#xA; &lt;li&gt;Threshold secret sharing&lt;/li&gt; &#xA; &lt;li&gt;NIST key wrapping&lt;/li&gt; &#xA; &lt;li&gt;Boost.Asio compatible TLS client stream&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>