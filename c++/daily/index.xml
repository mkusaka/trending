<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-11T01:32:13Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>BlackINT3/OpenArk</title>
    <updated>2022-10-11T01:32:13Z</updated>
    <id>tag:github.com,2022-10-11:/BlackINT3/OpenArk</id>
    <link href="https://github.com/BlackINT3/OpenArk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenArk is an open source anti-rookit(ARK) tool for Windows.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenArk &lt;img src=&#34;https://raw.githubusercontent.com/BlackINT3/OpenArk/master/doc/resources/logo.png&#34; alt=&#34;image&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/License-LGPL-green.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Introduction&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlackINT3/OpenArk/master/doc/README-zh.md&#34;&gt;中文说明&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;OpenArk is an open source anti-rookit(ARK) tool for Windows. Ark is Anti-Rootkit abbreviated, it aimmed at reversing/programming helper and also users can find out hidden malwares in the OS. More and more powerful features will be supported in future.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/BlackINT3/OpenArk/master/doc/resources/snapshot-en-v122.png&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/BlackINT3/OpenArk/master/doc/resources/snapshot-en-v122-01.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Process - Process/Thread/Module/Handles/Memory/Window... information view, Dll Injector x86/x64.&lt;/li&gt; &#xA; &lt;li&gt;Kernel - OS Kernel internal toolkit, eg: Memory, Drivers, Hotkey, Callback, Filters, IDT/SDT/NDIS/WFP etc.&lt;/li&gt; &#xA; &lt;li&gt;CoderKit - Helper for coders.&lt;/li&gt; &#xA; &lt;li&gt;Scanner - PE/ELF file parsers, evolved to virus analyzer in future.&lt;/li&gt; &#xA; &lt;li&gt;Bundler - Directory and files could be bundled to one executable file, it also support scripts.&lt;/li&gt; &#xA; &lt;li&gt;Utilities - Cleaner/System tools etc.&lt;/li&gt; &#xA; &lt;li&gt;Reverse - Collect many useful tools that functional complementation each others, for efficient, always thinking.&lt;/li&gt; &#xA; &lt;li&gt;Console - Many useful coammands in here.&lt;/li&gt; &#xA; &lt;li&gt;Language - Support English and Chinese now, more in future.&lt;/li&gt; &#xA; &lt;li&gt;More powerful features in developing...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Distributions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Program: one exe binary, no dependence, support 32/64 bit.&lt;/li&gt; &#xA; &lt;li&gt;Supported OS: Windows XP ... Win7 ... Win10 ... Win11 ...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Compile&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlackINT3/OpenArk/master/doc/build-openark.md&#34;&gt;How To Build OpenArk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BlackINT3/none&#34;&gt;UNONE &amp;amp; KNONE&lt;/a&gt; - User &amp;amp; Kernel mode BaseLibrary&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contributing/Donate&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Issues and Push Request is welcome.&lt;/li&gt; &#xA; &lt;li&gt;If you like that you can donate to our develop.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/BlackINT3/OpenArk/master/doc/code-style-guide.md&#34;&gt;OpenArk Code Style Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Official Links&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Website: &lt;a href=&#34;https://openark.blackint3.com/&#34;&gt;https://openark.blackint3.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Source: &lt;a href=&#34;https://github.com/BlackINT3/OpenArk/&#34;&gt;https://github.com/BlackINT3/OpenArk/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Manuals: &lt;a href=&#34;https://openark.blackint3.com/manuals/&#34;&gt;https://openark.blackint3.com/manuals/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;QQ Group: 836208099&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Alinshans/MyTinySTL</title>
    <updated>2022-10-11T01:32:13Z</updated>
    <id>tag:github.com,2022-10-11:/Alinshans/MyTinySTL</id>
    <link href="https://github.com/Alinshans/MyTinySTL" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Achieve a tiny STL in C++11&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MyTinySTL&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/Alinshans/MyTinySTL&#34;&gt;&lt;img src=&#34;https://travis-ci.org/Alinshans/MyTinySTL.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/Alinshans/mytinystl&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/Alinshans/MyTinySTL?branch=master&amp;amp;svg=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/Alinshans/MyTinySTL.svg?sanitize=true&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT%20License-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/alinshans/MyTinySTL&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20gitter-FF6EB4.svg?sanitize=true&#34; alt=&#34;Chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;简介&lt;/h2&gt; &#xA;&lt;p&gt;基于 &lt;code&gt;C++11&lt;/code&gt; 的 &lt;code&gt;tinySTL&lt;/code&gt;，这是我的第一个项目，使用了中文文档与中文注释，有不规范或不当的地方还请海涵。刚开始是作为新手练习用途，直到现在已经发布了 &lt;code&gt;2.x.x&lt;/code&gt; 版本。实现了大部分 STL 中的容器与函数，但仍存在许多不足与 bug 。从 &lt;code&gt;2.x.x&lt;/code&gt; 版本开始，本项目会进入长期维护的阶段，即基本不会增加新的内容，只修复发现的 bug。如发现错误，还请在 &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/issues&#34;&gt;&lt;code&gt;Issues&lt;/code&gt;&lt;/a&gt; 中指出，欢迎 &lt;code&gt;Fork&lt;/code&gt; 和 &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/pulls&#34;&gt;&lt;code&gt;Pull requests&lt;/code&gt;&lt;/a&gt; 改善代码，谢谢！&lt;/p&gt; &#xA;&lt;h2&gt;支持&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;操作系统 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;linux&lt;/li&gt; &#xA;   &lt;li&gt;windows&lt;/li&gt; &#xA;   &lt;li&gt;osx&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;编译器 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;g++ 5.4 或以上&lt;/li&gt; &#xA;   &lt;li&gt;clang++ 3.5 或以上&lt;/li&gt; &#xA;   &lt;li&gt;msvc 14.0 或以上&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;需要&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用 cmake 2.8 来构建项目（&lt;strong&gt;可选&lt;/strong&gt;）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;运行&lt;/h2&gt; &#xA;&lt;p&gt;如果你想要运行测试，请先阅读 &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/raw/master/Test/README.md&#34;&gt;这个&lt;/a&gt; 。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;gcc/clang on linux/osx&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;克隆仓库&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone git@github.com:Alinshans/MyTinySTL.git&#xA;$ cd MyTinySTL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;构建并运行&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ mkdir build &amp;amp;&amp;amp; cd build&#xA;$ cmake ..&#xA;$ make&#xA;$ cd ../bin &amp;amp;&amp;amp; ./stltest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;msvc on windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;克隆仓库或 &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/archive/master.zip&#34;&gt;Download ZIP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;使用 &lt;code&gt;vs2015&lt;/code&gt;（或 &lt;code&gt;vs2017&lt;/code&gt;）打开 &lt;code&gt;MSVC/MyTinySTL_VS2015.sln&lt;/code&gt;，配置成 &lt;code&gt;Release&lt;/code&gt; 模式，（Ctrl + F5）开始执行。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;文档&lt;/h2&gt; &#xA;&lt;p&gt;见 &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/wiki&#34;&gt;Wiki&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;测试&lt;/h2&gt; &#xA;&lt;p&gt;见 &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/tree/master/Test&#34;&gt;Test&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;This is a &lt;code&gt;tinySTL&lt;/code&gt; based on &lt;code&gt;C++11&lt;/code&gt;, which is my first project for practice. I use the Chinese documents and annotations for convenience, maybe there will be an English version later, but now I have no time to do that yet. Now I have released version &lt;code&gt;2.0.0&lt;/code&gt;. I have achieved the vast majority of the containers and functions of &lt;code&gt;STL&lt;/code&gt;, and there may be some deficiencies and bugs. From the version &lt;code&gt;2.x.x&lt;/code&gt;, the project will enter the stage of long-term maintenance, i.e., I probably will not add new content but only fix bugs found. If you find any bugs, please point out that in &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/issues&#34;&gt;&lt;code&gt;Issues&lt;/code&gt;&lt;/a&gt;, or make a &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/pulls&#34;&gt;&lt;code&gt;Pull requests&lt;/code&gt;&lt;/a&gt; to improve it, thanks!&lt;/p&gt; &#xA;&lt;h2&gt;Supported&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;os &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;linux&lt;/li&gt; &#xA;   &lt;li&gt;windows&lt;/li&gt; &#xA;   &lt;li&gt;osx&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;complier &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;g++ 5.4 or later&lt;/li&gt; &#xA;   &lt;li&gt;clang++ 3.5 or later&lt;/li&gt; &#xA;   &lt;li&gt;msvc 14.0 or later&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Required&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use cmake 2.8 to build this project (&lt;strong&gt;Optional&lt;/strong&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Run test&lt;/h2&gt; &#xA;&lt;p&gt;If you want to run the test, please read &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/raw/master/Test/README.md&#34;&gt;this&lt;/a&gt; first.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;gcc/clang on linux/osx&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;git clone&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone git@github.com:Alinshans/MyTinySTL.git&#xA;$ cd MyTinySTL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;build and run&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ mkdir build &amp;amp;&amp;amp; cd build&#xA;$ cmake ..&#xA;$ make&#xA;$ cd ../bin &amp;amp;&amp;amp; ./stltest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;msvc on windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;git clone or &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/archive/master.zip&#34;&gt;Download ZIP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;use &lt;code&gt;vs2015&lt;/code&gt;(or &lt;code&gt;vs2017&lt;/code&gt;) open the file &lt;code&gt;MSVC/MyTinySTL_VS2015.sln&lt;/code&gt;, configured in &lt;code&gt;Release&lt;/code&gt;, run this project(Ctrl + F5).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Documents&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/wiki&#34;&gt;Wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Test&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/tree/master/Test&#34;&gt;Test&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Avinash987/Coding</title>
    <updated>2022-10-11T01:32:13Z</updated>
    <id>tag:github.com,2022-10-11:/Avinash987/Coding</id>
    <link href="https://github.com/Avinash987/Coding" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Data Structures and Algorithms (DSA) Preparation sheet&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Must do Data Structrues and Algorithms - Interview Coding Problems from GeekforGeeks&lt;/h1&gt; &#xA;&lt;p&gt;This repository is a collection of my solutions to the must do probelms in &lt;a href=&#34;https://www.geeksforgeeks.org/must-do-coding-questions-for-companies-like-amazon-microsoft-adobe/&#34;&gt;geeksforgeeks&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;0. To get started follow the Books or Coding Interview University&lt;/h2&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jwasham/coding-interview-university&#34;&gt;Coding Interview University&lt;/a&gt; is the perfect place to get started with your preperation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/CodingBook.pdf&#34;&gt;The Coding Book&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Cracking-the-Coding-Interview-6th-Edition-189-Programming-Questions-and-Solutions.pdf&#34;&gt;Cracking-the-Coding-Interview-6th-Edition-189-Programming-Questions-and-Solutions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Guide%20to%20Competitive%20Programming_%20Learning%20and%20Improving%20Algorithms%20Through%20Contests%20(%20PDFDrive.com%20).pdf&#34;&gt;Guide to Competitive Programming_ Learning and Improving Algorithms Through Contests&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;1. Divide and Conquer&lt;/h2&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Divide%20and%20Conquer/0_Find_Elements.cpp&#34;&gt;Find the element that appears once in sorted array&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Divide%20and%20Conquer/1_Search.cpp&#34;&gt;Search in a Rotated Array&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Divide%20and%20Conquer/2_Binary_Search.cpp&#34;&gt;Binaray Search&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Divide%20and%20Conquer/3_Merge.cpp&#34;&gt;Sum of Middle Elements of two sorted arrays&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Divide%20and%20Conquer/4_Quick_Sort.cpp&#34;&gt;Quick Sort&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Divide%20and%20Conquer/5_Merge_Sort.cpp&#34;&gt;Merge Sort&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Divide%20and%20Conquer/6_K-th_Element.cpp&#34;&gt;K-th element of two sorted Arrays&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;2. Recursion&lt;/h2&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Recursion/0_Flood_Fill.cpp&#34;&gt;Flood fill Algorithm&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Recursion/1_Num_of_Paths.cpp&#34;&gt;Number of paths&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Recursion/2_CombnSum.cpp&#34;&gt;Combination Sum – Part 2&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Recursion/3_Special_keyboard.cpp&#34;&gt;Special Keyboard&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Recursion/4_Josephus_Problem.cpp&#34;&gt;Josephus problem&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;3. Arrays&lt;/h2&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Arrays/0_Rotate_Array.cpp&#34;&gt;Subarray with given sum&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Arrays/1_Subarray_Sum.cpp&#34;&gt;Count the triplets&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Arrays/2_Counting_Triplets.cpp&#34;&gt;Kadane’s Algorithm&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Arrays/3_Kadane_Algorithm.cpp&#34;&gt;Missing number in array&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Arrays/4_Merge_Spaceless.cpp&#34;&gt;Merge two sorted arrays&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Arrays/5_Rearrange_Array_Alt.cpp&#34;&gt;Rearrange array alternatively&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Arrays/6_Num_Pairs.cpp&#34;&gt;Number of pairs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Arrays/7_Inversion.cpp&#34;&gt;Inversion of Array&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Arrays/8_Sort_0s_1s_2s.cpp&#34;&gt;Sort an array of 0s, 1s and 2s&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Arrays/9_Equillibrium_Point.cpp&#34;&gt;Equilibrium point&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Arrays/10_Leaders.cpp&#34;&gt;Leaders in an array&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/dab51bc33a6837db0a7052d5560b547d90cc6134/Arrays/11_Min_Platforms.cpp&#34;&gt;Minimum Platforms&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Arrays/12_Rev_Ar_Grps.py&#34;&gt;Reverse array in groups&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Arrays/13_kth_smallest_element.cpp&#34;&gt;K’th smallest element&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Arrays/14_Trapping_Rain.py&#34;&gt;Trapping Rain Water&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Arrays/15_Pythogorean_Triplet.py&#34;&gt;Pythagorean Triplet&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Arrays/16_Choclate_dist.py&#34;&gt;Chocolate Distribution Problem&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Arrays/17_Stock_Buy_Sell.py&#34;&gt;Stock buy and sell&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Arrays/18_Middle.py&#34;&gt;Element with left side smaller and right side greater&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Arrays/19_ZigZag.py&#34;&gt;Convert array into Zig-Zag fashion&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Arrays/20_Last_index_1.py&#34;&gt;Last Index of 1&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Arrays/21_Spiral_Traversal.cpp&#34;&gt;Spirally traversing a matrix&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Arrays/22_Largest_Num.cpp&#34;&gt;Largest Number formed from an Array&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;4. Strings&lt;/h2&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Strings/0_Reverse_Words.py&#34;&gt;Reverse words in a given string&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Strings/1_Permutations.py&#34;&gt;Permutations of a given string&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Strings/2_Longest_Palindrome.py&#34;&gt;Longest Palindrome in a String&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Strings/3_Remove_Adj_dups.py&#34;&gt;Recursively remove all adjacent duplicates&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Strings/4_Check_String_Rot.py&#34;&gt;Check if string is rotated by two places&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Strings/5_Roman_to_Int.py&#34;&gt;Roman Number to Integer&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Strings/6_Anagram.py&#34;&gt;Anagram&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Strings/7_Rm_Dups.py&#34;&gt;Remove Duplicates&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Strings/8_Form_Palindrome.py&#34;&gt;Form a Palindrome&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Strings/9_Distinct_Chars.py&#34;&gt;Longest Distinct Characters in the string&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Strings/10_AtoI.py&#34;&gt;Implement Atoi&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Strings/11_StrStr.py&#34;&gt;Implement strstr&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Strings/12_LongCommPrefix.py&#34;&gt;Longest Common Prefix&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;5. Linked List&lt;/h2&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Linked%20Lists/0_Find_the_Middle.cpp&#34;&gt;Finding middle element in a linked list&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Linked%20Lists/1_Reverse.cpp&#34;&gt;Reverse a linked list&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Linked%20Lists/2_Rotate.cpp&#34;&gt;Rotate a Linked List&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Linked%20Lists/3_Reverse_with_k.cpp&#34;&gt;Reverse a Linked List in groups of given size&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Linked%20Lists/4_Find_The_Y_intersection.cpp&#34;&gt;Intersection point in Y shaped linked lists&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Linked%20Lists/5_Detect_Loop.cpp&#34;&gt;Detect Loop in linked list&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Linked%20Lists/6_Remove_Loop.cpp&#34;&gt;Remove loop in Linked List&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Linked%20Lists/7_Nth_Node_from_End.cpp&#34;&gt;N’th node from end of linked list&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Linked%20Lists/8_Flattening_List.cpp&#34;&gt;Flattening a Linked List&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Linked%20Lists/9_Merge.cpp&#34;&gt;Merge two sorted linked lists&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Linked%20Lists/10_Pairwise_Swap.cpp&#34;&gt;Intersection point of two Linked Lists&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Linked%20Lists/11_Add_two_ll_num.cpp&#34;&gt;Pairwise swap of a linked list&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Linked%20Lists/12_Check_Palindrome.cpp&#34;&gt;Add two numbers represented by linked lists CPP&lt;/a&gt; , &lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Linked%20Lists/18_Add_two_num.java&#34;&gt;Add two numbers represented by linked lists Java&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Linked%20Lists/13_Queue.cpp&#34;&gt;Check if Linked List is Palindrome&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Linked%20Lists/14_Stack.cpp&#34;&gt;Implement Queue using Linked List&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Linked%20Lists/15_Sort_0s1s2s.cpp&#34;&gt;Implement Stack using Linked List&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Linked%20Lists/16_Delete_without_head.cpp&#34;&gt;Given a linked list of 0s, 1s and 2s, sort it&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Avinash987/Coding/raw/master/Linked%20Lists/17_Delete_headless.cpp&#34;&gt;Delete without head pointer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;6. Stack and Queue&lt;/h2&gt; &#xA;&lt;h2&gt;7. Tree and BST&lt;/h2&gt;</summary>
  </entry>
</feed>