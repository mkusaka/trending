<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-06T01:28:56Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>odygrd/quill</title>
    <updated>2024-09-06T01:28:56Z</updated>
    <id>tag:github.com,2024-09-06:/odygrd/quill</id>
    <link href="https://github.com/odygrd/quill" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Asynchronous Low Latency C++ Logging Library&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/odygrd/quill/master/docs/logo.png&#34; alt=&#34;logo&#34; width=&#34;200&#34; height=&#34;auto&#34;&gt; &#xA; &lt;h1&gt;Quill&lt;/h1&gt; &#xA; &lt;p&gt;&lt;b&gt;Asynchronous Low Latency C++ Logging Library&lt;/b&gt;&lt;/p&gt; &#xA; &lt;div&gt; &#xA;  &lt;a href=&#34;https://github.com/odygrd/quill/actions?query=workflow%3Alinux&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/odygrd/quill/linux.yml?branch=master&amp;amp;label=linux&amp;amp;logo=linux&amp;amp;style=flat-square&#34; alt=&#34;linux-ci&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://github.com/odygrd/quill/actions?query=workflow%3Amacos&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/odygrd/quill/macos.yml?branch=master&amp;amp;label=macos&amp;amp;logo=apple&amp;amp;logoColor=white&amp;amp;style=flat-square&#34; alt=&#34;macos-ci&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://github.com/odygrd/quill/actions?query=workflow%3Awindows&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/odygrd/quill/windows.yml?branch=master&amp;amp;label=windows&amp;amp;logo=windows&amp;amp;logoColor=blue&amp;amp;style=flat-square&#34; alt=&#34;windows-ci&#34;&gt; &lt;/a&gt; &#xA; &lt;/div&gt; &#xA; &lt;div&gt; &#xA;  &lt;a href=&#34;https://codecov.io/gh/odygrd/quill&#34;&gt; &lt;img src=&#34;https://img.shields.io/codecov/c/gh/odygrd/quill/master.svg?logo=codecov&amp;amp;style=flat-square&#34; alt=&#34;Codecov&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://app.codacy.com/gh/odygrd/quill/dashboard?utm_source=gh&amp;amp;utm_medium=referral&amp;amp;utm_content=&amp;amp;utm_campaign=Badge_grade&#34;&gt; &lt;img src=&#34;https://img.shields.io/codacy/grade/cd387bc34658475d98bff84db3ad5287?logo=codacy&amp;amp;style=flat-square&#34; alt=&#34;Codacy&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://www.codefactor.io/repository/github/odygrd/quill&#34;&gt; &lt;img src=&#34;https://img.shields.io/codefactor/grade/github/odygrd/quill?logo=codefactor&amp;amp;style=flat-square&#34; alt=&#34;CodeFactor&#34;&gt; &lt;/a&gt; &#xA; &lt;/div&gt; &#xA; &lt;div&gt; &#xA;  &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square&#34; alt=&#34;license&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://en.wikipedia.org/wiki/C%2B%2B17&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/language-C%2B%2B17-red.svg?style=flat-square&#34; alt=&#34;language&#34;&gt; &lt;/a&gt; &#xA; &lt;/div&gt; &#xA; &lt;h4&gt; &lt;a href=&#34;https://quillcpp.readthedocs.io&#34; title=&#34;Explore the full documentation&#34;&gt;üìö Documentation&lt;/a&gt; &lt;span&gt; ¬∑ &lt;/span&gt; &lt;a href=&#34;https://quillcpp.readthedocs.io/en/latest/cheat_sheet.html&#34; title=&#34;Quick reference for common tasks&#34;&gt;‚ö° Cheat Sheet&lt;/a&gt; &lt;span&gt; ¬∑ &lt;/span&gt; &lt;a href=&#34;https://github.com/odygrd/quill/issues/new?assignees=&amp;amp;labels=&amp;amp;projects=&amp;amp;template=bug-report.md&amp;amp;title=&#34; title=&#34;Report a bug or issue&#34;&gt;üêõ Report Bug&lt;/a&gt; &lt;span&gt; ¬∑ &lt;/span&gt; &lt;a href=&#34;https://github.com/odygrd/quill/issues/new?assignees=&amp;amp;labels=&amp;amp;projects=&amp;amp;template=feature_request.md&amp;amp;title=&#34;&gt;üí° Request Feature&lt;/a&gt; &lt;/h4&gt; &#xA; &lt;div align=&#34;center&#34;&gt;&#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/odygrd/quill/master/docs/quill_demo.gif&#34; width=&#34;75%&#34;&gt;&#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;üß≠ Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/odygrd/quill/master/#-introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/odygrd/quill/master/#-quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/odygrd/quill/master/#-features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/odygrd/quill/master/#-performance&#34;&gt;Performance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/odygrd/quill/master/#-usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/odygrd/quill/master/#-design&#34;&gt;Design&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/odygrd/quill/master/#-caveats&#34;&gt;Caveats&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/odygrd/quill/master/#-license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚ú® Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Quill is a high-performance asynchronous logging library. It is particularly suited for performance-critical applications where every microsecond counts.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Performance-Focused&lt;/strong&gt;: Quill consistently outperforms many popular logging libraries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Feature-Rich&lt;/strong&gt;: Packed with advanced features to meet diverse logging needs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Battle-Tested&lt;/strong&gt;: Proven in demanding production environments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Extensive Documentation&lt;/strong&gt;: Comprehensive guides and examples available.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Community-Driven&lt;/strong&gt;: Open to contributions, feedback, and feature requests.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Try it on &lt;a href=&#34;https://godbolt.org/z/v1oa7Y3dY&#34;&gt;Compiler Explorer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚è© Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Getting started is easy and straightforward. Follow these steps to integrate the library into your project:&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;You can install Quill using the package manager of your choice:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Package Manager&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Installation Command&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;vcpkg&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;vcpkg install quill&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Conan&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;conan install quill&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Homebrew&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;brew install quill&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Meson WrapDB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;meson wrap install quill&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Conda&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;conda install -c conda-forge quill&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Bzlmod&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;bazel_dep(name = &#34;quill&#34;, version = &#34;x.y.z&#34;)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;xmake&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;xrepo install quill&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;nix&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;nix-shell -p quill-log&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Setup&lt;/h3&gt; &#xA;&lt;p&gt;Once installed, you can start using Quill with the following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#include &#34;quill/Backend.h&#34;&#xA;#include &#34;quill/Frontend.h&#34;&#xA;#include &#34;quill/LogMacros.h&#34;&#xA;#include &#34;quill/Logger.h&#34;&#xA;#include &#34;quill/sinks/ConsoleSink.h&#34;&#xA;#include &amp;lt;string_view&amp;gt;&#xA;&#xA;int main()&#xA;{&#xA;  quill::Backend::start();&#xA;&#xA;  quill::Logger* logger = quill::Frontend::create_or_get_logger(&#xA;    &#34;root&#34;, quill::Frontend::create_or_get_sink&amp;lt;quill::ConsoleSink&amp;gt;(&#34;sink_id_1&#34;));&#xA;&#xA;  LOG_INFO(logger, &#34;Hello from {}!&#34;, std::string_view{&#34;Quill&#34;});&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üéØ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;High-Performance&lt;/strong&gt;: Ultra-low latency performance. View &lt;a href=&#34;http://github.com/odygrd/quill#performance&#34;&gt;Benchmarks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Asynchronous Processing&lt;/strong&gt;: Background thread handles formatting and I/O, keeping your main thread responsive.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Minimal Header Includes&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Frontend&lt;/strong&gt;: Only &lt;code&gt;Logger.h&lt;/code&gt; and &lt;code&gt;LogMacros.h&lt;/code&gt; needed for logging. Lightweight with minimal dependencies.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Backend&lt;/strong&gt;: Single &lt;code&gt;.cpp&lt;/code&gt; file inclusion. No backend code injection into other translation units.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Compile-Time Optimization&lt;/strong&gt;: Eliminate specific log levels at compile time.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Custom Formatters&lt;/strong&gt;: Define your own log output patterns. See &lt;a href=&#34;https://quillcpp.readthedocs.io/en/latest/formatters.html&#34;&gt;Formatters&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Timestamp-Ordered Logs&lt;/strong&gt;: Simplify debugging of multithreaded applications with chronologically ordered logs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Flexible Timestamps&lt;/strong&gt;: Support for &lt;code&gt;rdtsc&lt;/code&gt;, &lt;code&gt;chrono&lt;/code&gt;, or &lt;code&gt;custom clocks&lt;/code&gt; - ideal for simulations and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Backtrace Logging&lt;/strong&gt;: Store messages in a ring buffer for on-demand display. See &lt;a href=&#34;https://quillcpp.readthedocs.io/en/latest/backtrace_logging.html&#34;&gt;Backtrace Logging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multiple Output Sinks&lt;/strong&gt;: Console (with color), files (with rotation), JSON, ability to create custom sinks and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Log Filtering&lt;/strong&gt;: Process only relevant messages. See &lt;a href=&#34;https://quillcpp.readthedocs.io/en/latest/filters.html&#34;&gt;Filters&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;JSON Logging&lt;/strong&gt;: Structured log output. See &lt;a href=&#34;https://quillcpp.readthedocs.io/en/latest/json_logging.html&#34;&gt;JSON Logging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Configurable Queue Modes&lt;/strong&gt;: &lt;code&gt;bounded/unbounded&lt;/code&gt; and &lt;code&gt;blocking/dropping&lt;/code&gt; options with monitoring on dropped messages, queue reallocations, and blocked hot threads.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Crash Handling&lt;/strong&gt;: Built-in signal handler for log preservation during crashes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Huge Pages Support (Linux)&lt;/strong&gt;: Leverage huge pages on the hot path for optimized performance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Wide Character Support (Windows)&lt;/strong&gt;: Compatible with ASCII-encoded wide strings and STL containers consisting of wide strings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Exception-Free Option&lt;/strong&gt;: Configurable builds with or without exception handling.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Clean Codebase&lt;/strong&gt;: Maintained to high standards, warning-free even at strict levels.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Type-Safe API&lt;/strong&gt;: Built on &lt;a href=&#34;http://github.com/fmtlib/fmt&#34;&gt;{fmt}&lt;/a&gt; library.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üöÄ Performance&lt;/h2&gt; &#xA;&lt;h3&gt;System Configuration&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;OS:&lt;/strong&gt; Linux RHEL 9.4&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;CPU:&lt;/strong&gt; Intel Core i5-12600 (12th Gen) @ 4.8 GHz&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Compiler:&lt;/strong&gt; GCC 13.1&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Benchmark-Tuned System:&lt;/strong&gt; The system is specifically tuned for benchmarking.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Command Line Parameters:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ cat /proc/cmdline&#xA;BOOT_IMAGE=(hd0,gpt2)/vmlinuz-5.14.0-427.13.1.el9_4.x86_64 root=/dev/mapper/rhel-root ro crashkernel=1G-4G:192M,4G-64G:256M,64G-:512M resume=/dev/mapper/rhel-swap rd.lvm.lv=rhel/root rd.lvm.lv=rhel/swap rhgb quiet nohz=on nohz_full=1-5 rcu_nocbs=1-5 isolcpus=1-5 mitigations=off transparent_hugepage=never intel_pstate=disable nosoftlockup irqaffinity=0 processor.max_cstate=1 nosoftirqd sched_tick_offload=0 spec_store_bypass_disable=off spectre_v2=off iommu=pt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Latency&lt;/h3&gt; &#xA;&lt;p&gt;The results presented in the tables below are measured in &lt;code&gt;nanoseconds (ns)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The tables are sorted by the 95th percentile&lt;/p&gt; &#xA;&lt;h4&gt;Logging Numbers&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;LOG_INFO(logger, &#34;Logging int: {}, int: {}, double: {}&#34;, i, j, d)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;1 Thread Logging&lt;/h5&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Library&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;50th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;75th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;90th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;95th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;99th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;99.9th&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/odygrd/quill&#34;&gt;Quill Bounded Dropping Queue&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/MengRao/fmtlog&#34;&gt;fmtlog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;12&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;13&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/odygrd/quill&#34;&gt;Quill Unbounded Queue&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;12&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;14&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/PlatformLab/NanoLog&#34;&gt;PlatformLab NanoLog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;13&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;14&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;16&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;17&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;19&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;25&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/Morgan-Stanley/binlog&#34;&gt;MS BinLog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;21&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;21&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;22&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;22&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;56&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;93&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/choll/xtr&#34;&gt;XTR&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;29&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;30&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;33&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;53&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/mattiasflodin/reckless&#34;&gt;Reckless&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;26&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;28&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;31&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;32&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;35&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;49&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/Iyengar111/NanoLog&#34;&gt;Iyengar NanoLog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;83&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;96&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;117&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;125&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;152&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;197&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/gabime/spdlog&#34;&gt;spdlog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;143&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;147&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;152&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;158&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;165&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;177&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/KjellKod/g3log&#34;&gt;g3log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1161&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1259&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1329&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1419&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1602&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1827&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/odygrd/quill/master/docs%2Fcharts%2Fnumbers_1_thread_logging.webp&#34; alt=&#34;numbers_1_thread_logging.webp&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;4 Threads Logging Simultaneously&lt;/h5&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Library&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;50th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;75th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;90th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;95th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;99th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;99.9th&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/MengRao/fmtlog&#34;&gt;fmtlog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;13&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/odygrd/quill&#34;&gt;Quill Bounded Dropping Queue&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;12&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;14&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/choll/xtr&#34;&gt;XTR&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;31&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;38&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/odygrd/quill&#34;&gt;Quill Unbounded Queue&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;10&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;12&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;13&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;15&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/PlatformLab/NanoLog&#34;&gt;PlatformLab NanoLog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;17&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;20&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;23&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;27&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;32&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/mattiasflodin/reckless&#34;&gt;Reckless&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;19&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;23&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;26&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;28&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;34&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;55&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/Morgan-Stanley/binlog&#34;&gt;MS BinLog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;21&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;22&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;22&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;23&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;62&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;100&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/Iyengar111/NanoLog&#34;&gt;Iyengar NanoLog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;58&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;90&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;123&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;131&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;168&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;242&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/gabime/spdlog&#34;&gt;spdlog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;210&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;243&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;288&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;313&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;382&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;694&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/KjellKod/g3log&#34;&gt;g3log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1271&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1337&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1396&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1437&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1614&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1899&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/odygrd/quill/master/docs%2Fcharts%2Fnumbers_4_thread_logging.webp&#34; alt=&#34;numbers_4_thread_logging.webp&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Logging Large Strings&lt;/h4&gt; &#xA;&lt;p&gt;Logging &lt;code&gt;std::string&lt;/code&gt; over 35 characters to prevent the short string optimization.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;LOG_INFO(logger, &#34;Logging int: {}, int: {}, string: {}&#34;, i, j, large_string)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;1 Thread Logging&lt;/h5&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Library&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;50th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;75th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;90th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;95th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;99th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;99.9th&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/odygrd/quill&#34;&gt;Quill Bounded Dropping Queue&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;13&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;13&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;14&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;16&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/MengRao/fmtlog&#34;&gt;fmtlog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;12&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;13&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;14&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;17&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/odygrd/quill&#34;&gt;Quill Unbounded Queue&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;14&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;16&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;17&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;18&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;19&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/Morgan-Stanley/binlog&#34;&gt;MS BinLog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;22&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;23&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;24&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;25&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;61&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;100&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/PlatformLab/NanoLog&#34;&gt;PlatformLab NanoLog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;17&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;21&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;27&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;33&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;39&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/choll/xtr&#34;&gt;XTR&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;29&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;31&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;35&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;54&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/mattiasflodin/reckless&#34;&gt;Reckless&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;91&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;107&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;115&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;118&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;124&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;135&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/Iyengar111/NanoLog&#34;&gt;Iyengar NanoLog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;86&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;97&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;119&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;128&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;159&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;268&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/gabime/spdlog&#34;&gt;spdlog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;120&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;124&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;128&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;132&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;141&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;151&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/KjellKod/g3log&#34;&gt;g3log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;881&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;956&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1018&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1089&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1264&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1494&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/odygrd/quill/master/docs%2Fcharts%2Flarge_strings_1_thread_logging.webp&#34; alt=&#34;large_strings_1_thread_logging.webp&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;4 Threads Logging Simultaneously&lt;/h5&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Library&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;50th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;75th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;90th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;95th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;99th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;99.9th&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/choll/xtr&#34;&gt;XTR&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;13&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;14&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;32&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;40&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/MengRao/fmtlog&#34;&gt;fmtlog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;11&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;12&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;13&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;14&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;16&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;19&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/odygrd/quill&#34;&gt;Quill Bounded Dropping Queue&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;13&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;14&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;16&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;17&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;19&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/odygrd/quill&#34;&gt;Quill Unbounded Queue&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;15&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;16&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;17&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;18&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;19&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;21&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/Morgan-Stanley/binlog&#34;&gt;MS BinLog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;23&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;25&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;27&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;28&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;65&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;105&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/PlatformLab/NanoLog&#34;&gt;PlatformLab NanoLog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;16&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;20&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;32&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;38&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;44&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;51&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/mattiasflodin/reckless&#34;&gt;Reckless&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;79&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;94&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;104&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;107&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;114&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;132&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/Iyengar111/NanoLog&#34;&gt;Iyengar NanoLog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;85&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;93&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;125&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;133&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;168&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;237&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/gabime/spdlog&#34;&gt;spdlog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;178&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;218&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;261&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;281&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;381&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;651&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/KjellKod/g3log&#34;&gt;g3log&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;992&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1055&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1121&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1178&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1360&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1600&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/odygrd/quill/master/docs%2Fcharts%2Flarge_strings_4_thread_logging.webp&#34; alt=&#34;large_strings_4_thread_logging.webp&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Logging Complex Types&lt;/h4&gt; &#xA;&lt;p&gt;Logging &lt;code&gt;std::vector&amp;lt;std::string&amp;gt;&lt;/code&gt; containing 16 large strings, each ranging from 50 to 60 characters.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;LOG_INFO(logger, &#34;Logging int: {}, int: {}, vector: {}&#34;, i, j, v)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;1 Thread Logging&lt;/h5&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Library&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;50th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;75th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;90th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;95th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;99th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;99.9th&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/odygrd/quill&#34;&gt;Quill Bounded Dropping Queue&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;48&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;50&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;53&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;55&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;58&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;62&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/odygrd/quill&#34;&gt;Quill Unbounded Queue&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;54&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;56&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;57&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;58&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;61&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;66&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/Morgan-Stanley/binlog&#34;&gt;MS BinLog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;68&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;69&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;72&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;74&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;79&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;281&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/choll/xtr&#34;&gt;XTR&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;284&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;294&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;340&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;346&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;356&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;575&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/MengRao/fmtlog&#34;&gt;fmtlog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;711&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;730&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;754&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;770&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;804&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;834&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/gabime/spdlog&#34;&gt;spdlog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6191&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6261&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6330&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6386&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6633&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7320&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/odygrd/quill/master/docs%2Fcharts%2Fvector_1_thread_logging.webp&#34; alt=&#34;vector_1_thread_logging.webp&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;4 Threads Logging Simultaneously&lt;/h5&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Library&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;50th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;75th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;90th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;95th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;99th&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;99.9th&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/odygrd/quill&#34;&gt;Quill Bounded Dropping Queue&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;50&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;52&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;54&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;56&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;60&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;82&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/Morgan-Stanley/binlog&#34;&gt;MS BinLog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;70&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;72&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;75&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;79&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;88&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;286&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/odygrd/quill&#34;&gt;Quill Unbounded Queue&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;97&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;107&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;116&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;122&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;135&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;148&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/choll/xtr&#34;&gt;XTR&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;512&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;711&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;761&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;791&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;865&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;945&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/MengRao/fmtlog&#34;&gt;fmtlog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;780&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;804&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;823&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;835&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;860&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;896&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://github.com/gabime/spdlog&#34;&gt;spdlog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6469&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6549&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6641&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;6735&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;7631&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9430&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/odygrd/quill/master/docs%2Fcharts%2Fvector_4_thread_logging.webp&#34; alt=&#34;vector_4_thread_logging.webp&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The benchmark methodology involves logging 20 messages in a loop, calculating and storing the average latency for those 20 messages, then waiting around ~2 milliseconds, and repeating this process for a specified number of iterations.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;In the &lt;code&gt;Quill Bounded Dropping&lt;/code&gt; benchmarks, the dropping queue size is set to &lt;code&gt;262,144&lt;/code&gt; bytes, which is double the default size of &lt;code&gt;131,072&lt;/code&gt; bytes.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can find the benchmark code on the &lt;a href=&#34;http://github.com/odygrd/logger_benchmarks&#34;&gt;logger_benchmarks&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;h3&gt;Throughput&lt;/h3&gt; &#xA;&lt;p&gt;The maximum throughput is measured by determining the maximum number of log messages the backend logging thread can write to the log file per second.&lt;/p&gt; &#xA;&lt;p&gt;When measured on the same system as the latency benchmarks mentioned above the average throughput of the backend logging thread when formatting a log message consisting of an int and a double is ~&lt;code&gt;4.50 million msgs/sec&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;While the primary focus of the library is not on throughput, it does provide efficient handling of log messages across multiple threads. The backend logging thread, responsible for formatting and ordering log messages from the frontend threads, ensures that all queues are emptied on a high priority basis. The backend thread internally buffers the log messages and then writes them later when the caller thread queues are empty or when a predefined limit, &lt;code&gt;BackendOptions::transit_events_soft_limit&lt;/code&gt;, is reached. This approach prevents the need for allocating new queues or dropping messages on the hot path.&lt;/p&gt; &#xA;&lt;p&gt;Comparing throughput with other logging libraries in an asynchronous logging scenario has proven challenging. Some libraries may drop log messages, resulting in smaller log files than expected, while others only offer asynchronous flush, making it difficult to determine when the logging thread has finished processing all messages. In contrast, Quill provides a blocking flush log guarantee, ensuring that every log message from the frontend threads up to that point is flushed to the file.&lt;/p&gt; &#xA;&lt;p&gt;For benchmarking purposes, you can find the code &lt;a href=&#34;https://github.com/odygrd/quill/raw/master/benchmarks/backend_throughput/quill_backend_throughput.cpp&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Compilation Time&lt;/h3&gt; &#xA;&lt;p&gt;Compile times are measured using &lt;code&gt;clang 15&lt;/code&gt; and for &lt;code&gt;Release&lt;/code&gt; build.&lt;/p&gt; &#xA;&lt;p&gt;Below, you can find the additional headers that the library will include when you need to log, following the &lt;a href=&#34;https://github.com/odygrd/quill/raw/master/examples/recommended_usage/recommended_usage.cpp&#34;&gt;recommended_usage&lt;/a&gt; example&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/odygrd/quill/master/docs%2Fquill_v5_1_compiler_profile.speedscope.png&#34; alt=&#34;quill_v5_1_compiler_profile.speedscope.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;There is also a compile-time benchmark measuring the compilation time of 2000 auto-generated log statements with various arguments. You can find it &lt;a href=&#34;https://github.com/odygrd/quill/raw/master/benchmarks/compile_time/compile_time_bench.cpp&#34;&gt;here&lt;/a&gt;. It takes approximately 30 seconds to compile.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/odygrd/quill/master/docs%2Fquill_v5_1_compiler_bench.speedscope.png&#34; alt=&#34;quill_v5_1_compiler_bench.speedscope.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üß© Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#include &#34;quill/Backend.h&#34;&#xA;#include &#34;quill/Frontend.h&#34;&#xA;#include &#34;quill/LogMacros.h&#34;&#xA;#include &#34;quill/Logger.h&#34;&#xA;#include &#34;quill/sinks/ConsoleSink.h&#34;&#xA;#include &#34;quill/std/Array.h&#34;&#xA;&#xA;#include &amp;lt;string&amp;gt;&#xA;#include &amp;lt;utility&amp;gt;&#xA;&#xA;int main()&#xA;{&#xA;  // Backend  &#xA;  quill::BackendOptions backend_options;&#xA;  quill::Backend::start(backend_options);&#xA;&#xA;  // Frontend&#xA;  auto console_sink = quill::Frontend::create_or_get_sink&amp;lt;quill::ConsoleSink&amp;gt;(&#34;sink_id_1&#34;);&#xA;  quill::Logger* logger = quill::Frontend::create_or_get_logger(&#34;root&#34;, std::move(console_sink));&#xA;&#xA;  // Change the LogLevel to print everything&#xA;  logger-&amp;gt;set_log_level(quill::LogLevel::TraceL3);&#xA;&#xA;  // A log message with number 123&#xA;  int a = 123;&#xA;  std::string l = &#34;log&#34;;&#xA;  LOG_INFO(logger, &#34;A {} message with number {}&#34;, l, a);&#xA;&#xA;  // libfmt formatting language is supported 3.14e+00&#xA;  double pi = 3.141592653589793;&#xA;  LOG_INFO(logger, &#34;libfmt formatting language is supported {:.2e}&#34;, pi);&#xA;&#xA;  // Logging STD types is supported [1, 2, 3]&#xA;  std::array&amp;lt;int, 3&amp;gt; arr = {1, 2, 3};&#xA;  LOG_INFO(logger, &#34;Logging STD types is supported {}&#34;, arr);&#xA;&#xA;  // Logging STD types is supported [arr: [1, 2, 3]]&#xA;  LOGV_INFO(logger, &#34;Logging STD types is supported&#34;, arr);&#xA;&#xA;  // A message with two variables [a: 123, b: 3.17]&#xA;  double b = 3.17;&#xA;  LOGV_INFO(logger, &#34;A message with two variables&#34;, a, b);&#xA;&#xA;  for (uint32_t i = 0; i &amp;lt; 10; ++i)&#xA;  {&#xA;    // Will only log the message once per second&#xA;    LOG_INFO_LIMIT(std::chrono::seconds{1}, logger, &#34;A {} message with number {}&#34;, l, a);&#xA;    LOGV_INFO_LIMIT(std::chrono::seconds{1}, logger, &#34;A message with two variables&#34;, a, b);&#xA;  }&#xA;&#xA;  LOG_TRACE_L3(logger, &#34;Support for floats {:03.2f}&#34;, 1.23456);&#xA;  LOG_TRACE_L2(logger, &#34;Positional arguments are {1} {0} &#34;, &#34;too&#34;, &#34;supported&#34;);&#xA;  LOG_TRACE_L1(logger, &#34;{:&amp;gt;30}&#34;, std::string_view {&#34;right aligned&#34;});&#xA;  LOG_DEBUG(logger, &#34;Debugging foo {}&#34;, 1234);&#xA;  LOG_INFO(logger, &#34;Welcome to Quill!&#34;);&#xA;  LOG_WARNING(logger, &#34;A warning message.&#34;);&#xA;  LOG_ERROR(logger, &#34;An error message. error code {}&#34;, 123);&#xA;  LOG_CRITICAL(logger, &#34;A critical error.&#34;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Output&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/odygrd/quill/master/docs%2Fexample_output.png&#34; alt=&#34;example_output.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;External CMake&lt;/h3&gt; &#xA;&lt;h4&gt;Building and Installing Quill&lt;/h4&gt; &#xA;&lt;p&gt;To get started with Quill, clone the repository and install it using CMake:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone http://github.com/odygrd/quill.git&#xA;mkdir cmake_build&#xA;cd cmake_build&#xA;cmake ..&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Custom Installation&lt;/strong&gt;: Specify a custom directory with &lt;code&gt;-DCMAKE_INSTALL_PREFIX=/path/to/install/dir&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Build Examples&lt;/strong&gt;: Include examples with &lt;code&gt;-DQUILL_BUILD_EXAMPLES=ON&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Next, add Quill to your project using &lt;code&gt;find_package()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;find_package(quill REQUIRED)&#xA;target_link_libraries(your_target PUBLIC quill::quill)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Sample Directory Structure&lt;/h4&gt; &#xA;&lt;p&gt;Organize your project directory like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;my_project/&#xA;‚îú‚îÄ‚îÄ CMakeLists.txt&#xA;‚îú‚îÄ‚îÄ main.cpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Sample CMakeLists.txt&lt;/h4&gt; &#xA;&lt;p&gt;Here‚Äôs a sample &lt;code&gt;CMakeLists.txt&lt;/code&gt; to get you started:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;# If Quill is in a non-standard directory, specify its path.&#xA;set(CMAKE_PREFIX_PATH /path/to/quill)&#xA;&#xA;# Find and link the Quill library.&#xA;find_package(quill REQUIRED)&#xA;add_executable(example main.cpp)&#xA;target_link_libraries(example PUBLIC quill::quill)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Embedded CMake&lt;/h3&gt; &#xA;&lt;p&gt;For a more integrated approach, embed Quill directly into your project:&lt;/p&gt; &#xA;&lt;h4&gt;Sample Directory Structure&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;my_project/&#xA;‚îú‚îÄ‚îÄ quill/            # Quill repo folder&#xA;‚îú‚îÄ‚îÄ CMakeLists.txt&#xA;‚îú‚îÄ‚îÄ main.cpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Sample CMakeLists.txt&lt;/h4&gt; &#xA;&lt;p&gt;Use this &lt;code&gt;CMakeLists.txt&lt;/code&gt; to include Quill directly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;cmake_minimum_required(VERSION 3.1.0)&#xA;project(my_project)&#xA;&#xA;set(CMAKE_CXX_STANDARD 17)&#xA;set(CMAKE_CXX_STANDARD_REQUIRED ON)&#xA;&#xA;add_subdirectory(quill)&#xA;add_executable(my_project main.cpp)&#xA;target_link_libraries(my_project PUBLIC quill::quill)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Android NDK&lt;/h3&gt; &#xA;&lt;p&gt;Building Quill for Android? Add this flag during configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;-DQUILL_NO_THREAD_NAME_SUPPORT:BOOL=ON&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Meson&lt;/h3&gt; &#xA;&lt;h4&gt;Using WrapDB&lt;/h4&gt; &#xA;&lt;p&gt;Easily integrate Quill with Meson‚Äôs &lt;code&gt;wrapdb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;meson wrap install quill&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Manual Integration&lt;/h4&gt; &#xA;&lt;p&gt;Copy the repository contents to your &lt;code&gt;subprojects&lt;/code&gt; directory and add the following to your &lt;code&gt;meson.build&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-meson&#34;&gt;quill = subproject(&#39;quill&#39;)&#xA;quill_dep = quill.get_variable(&#39;quill_dep&#39;)&#xA;my_build_target = executable(&#39;name&#39;, &#39;main.cpp&#39;, dependencies : [quill_dep], install : true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Bazel&lt;/h3&gt; &#xA;&lt;h4&gt;Using Blzmod&lt;/h4&gt; &#xA;&lt;p&gt;Quill is available on &lt;code&gt;BLZMOD&lt;/code&gt; for easy integration.&lt;/p&gt; &#xA;&lt;h4&gt;Manual Integration&lt;/h4&gt; &#xA;&lt;p&gt;For manual setup, add Quill to your &lt;code&gt;BUILD.bazel&lt;/code&gt; file like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bazel&#34;&gt;cc_binary(name = &#34;app&#34;, srcs = [&#34;main.cpp&#34;], deps = [&#34;//quill_path:quill&#34;])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üìê Design&lt;/h2&gt; &#xA;&lt;h3&gt;Frontend (caller-thread)&lt;/h3&gt; &#xA;&lt;p&gt;When invoking a &lt;code&gt;LOG_&lt;/code&gt; macro:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Creates a static constexpr metadata object to store &lt;code&gt;Metadata&lt;/code&gt; such as the format string and source location.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pushes the data SPSC lock-free queue. For each log message, the following variables are pushed&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Variable&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;timestamp&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Current timestamp&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Metadata*&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Pointer to metadata information&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Logger*&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Pointer to the logger instance&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DecodeFunc&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;A pointer to a templated function containing all the log message argument types, used for decoding the message&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Args...&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;A serialized binary copy of each log message argument that was passed to the &lt;code&gt;LOG_&lt;/code&gt; macro&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Backend&lt;/h3&gt; &#xA;&lt;p&gt;Consumes each message from the SPSC queue, retrieves all the necessary information and then formats the message. Subsequently, forwards the log message to all Sinks associated with the Logger.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/odygrd/quill/master/docs%2Fdesign.jpg&#34; alt=&#34;design.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üö® Caveats&lt;/h2&gt; &#xA;&lt;p&gt;Quill may not work well with &lt;code&gt;fork()&lt;/code&gt; since it spawns a background thread and &lt;code&gt;fork()&lt;/code&gt; doesn&#39;t work well with multithreading.&lt;/p&gt; &#xA;&lt;p&gt;If your application uses &lt;code&gt;fork()&lt;/code&gt; and you want to log in the child processes as well, you should call &lt;code&gt;quill::start()&lt;/code&gt; after the &lt;code&gt;fork()&lt;/code&gt; call. Additionally, you should ensure that you write to different files in the parent and child processes to avoid conflicts.&lt;/p&gt; &#xA;&lt;p&gt;For example :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#include &#34;quill/Backend.h&#34;&#xA;#include &#34;quill/Frontend.h&#34;&#xA;#include &#34;quill/LogMacros.h&#34;&#xA;#include &#34;quill/Logger.h&#34;&#xA;#include &#34;quill/sinks/FileSink.h&#34;&#xA;&#xA;int main()&#xA;{&#xA;  // DO NOT CALL THIS BEFORE FORK&#xA;  // quill::Backend::start();&#xA;&#xA;  if (fork() == 0)&#xA;  {&#xA;    quill::Backend::start();&#xA;        &#xA;    // Get or create a handler to the file - Write to a different file&#xA;    auto file_sink = quill::Frontend::create_or_get_sink&amp;lt;quill::FileSink&amp;gt;(&#xA;      &#34;child.log&#34;);&#xA;    &#xA;    quill::Logger* logger = quill::Frontend::create_or_get_logger(&#34;root&#34;, std::move(file_sink));&#xA;&#xA;    QUILL_LOG_INFO(logger, &#34;Hello from Child {}&#34;, 123);&#xA;  }&#xA;  else&#xA;  {&#xA;    quill::Backend::start();&#xA;          &#xA;    // Get or create a handler to the file - Write to a different file&#xA;    auto file_sink = quill::Frontend::create_or_get_sink&amp;lt;quill::FileSink&amp;gt;(&#xA;      &#34;parent.log&#34;);&#xA;    &#xA;    quill::Logger* logger = quill::Frontend::create_or_get_logger(&#34;root&#34;, std::move(file_sink));&#xA;    &#xA;    QUILL_LOG_INFO(logger, &#34;Hello from Parent {}&#34;, 123);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üìù License&lt;/h2&gt; &#xA;&lt;p&gt;Quill is licensed under the &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Quill depends on third party libraries with separate copyright notices and license terms. Your use of the source code for these subcomponents is subject to the terms and conditions of the following licenses.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;(&lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;) &lt;a href=&#34;http://github.com/fmtlib/fmt/blob/master/LICENSE.rst&#34;&gt;{fmt}&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;(&lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT License&lt;/a&gt;) &lt;a href=&#34;http://github.com/onqtam/doctest/blob/master/LICENSE.txt&#34;&gt;doctest&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>