<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-15T02:42:04Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ghostpepper108/Evasion</title>
    <updated>2023-04-15T02:42:04Z</updated>
    <id>tag:github.com,2023-04-15:/ghostpepper108/Evasion</id>
    <link href="https://github.com/ghostpepper108/Evasion" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;EDR/AV evasion using direct syscalls and assembly&lt;/h1&gt; &#xA;&lt;h3&gt;Features:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No encryption&lt;/li&gt; &#xA; &lt;li&gt;No VirtualAlloc&lt;/li&gt; &#xA; &lt;li&gt;No CreateThread&lt;/li&gt; &#xA; &lt;li&gt;Direct execution of payload on heap using assembly and returning back&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;NOTE: This is a PoC. There are hard-coded values like syscall number. This can be extended futher by using hellsgate or other similar variations like Syswhispers.&lt;/p&gt; &#xA;&lt;h3&gt;Credits&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Steve - For his quality research posted on &lt;a href=&#34;https://steve-s.gitbook.io/0xtriboulet/&#34;&gt;https://steve-s.gitbook.io/0xtriboulet/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;chatGPT, Google and other innumerable resources&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://defuse.ca/online-x86-assembler.htm&#34;&gt;https://defuse.ca/online-x86-assembler.htm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>NVIDIAGameWorks/dxvk-remix</title>
    <updated>2023-04-15T02:42:04Z</updated>
    <id>tag:github.com,2023-04-15:/NVIDIAGameWorks/dxvk-remix</id>
    <link href="https://github.com/NVIDIAGameWorks/dxvk-remix" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dxvk-remix&lt;/h1&gt; &#xA;&lt;p&gt;dxvk-remix is a fork of the &lt;a href=&#34;https://github.com/doitsujin/dxvk&#34;&gt;DXVK&lt;/a&gt; project, which overhauls the fixed-function graphics pipeline implementation in order to remaster games with path tracing.&lt;/p&gt; &#xA;&lt;p&gt;Thanks to all the contributors to DXVK for creating this foundational piece of software, on top of which we were able to build the RTX Remix Runtime.&lt;/p&gt; &#xA;&lt;p&gt;While dxvk-remix is a fork of DXVK, please report bugs encountered with dxvk-remix to this repo rather than to the DXVK project.&lt;/p&gt; &#xA;&lt;h2&gt;Build instructions&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements:&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Windows 10 or 11&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://visualstudio.microsoft.com/vs/older-downloads/&#34;&gt;Visual Studio &lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;VS 2019 is tested&lt;/li&gt; &#xA;   &lt;li&gt;VS 2022 may also work, but it is not actively tested&lt;/li&gt; &#xA;   &lt;li&gt;Note that our build system will always use the most recent version available on the system&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.microsoft.com/en-us/windows/downloads/sdk-archive/&#34;&gt;Windows SDK&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;10.0.19041.0 is tested&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mesonbuild.com/&#34;&gt;Meson&lt;/a&gt; - v0.61.4 has been tested, latest version should work &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Follow &lt;a href=&#34;https://mesonbuild.com/SimpleStart.html#installing-meson&#34;&gt;instructions&lt;/a&gt; on how to install and reboot the PC before moving on (Meson will indicate as much)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://vulkan.lunarg.com/sdk/home#windows&#34;&gt;Vulkan SDK&lt;/a&gt; - 1.3.211.0 or newer &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You may need to uninstall previous SDK if you have an old version&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Python&lt;/a&gt; - version 3.9 or newer&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Additional notes:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If any dependency paths change (i.e. new Vulkan library), run &lt;code&gt;meson --reconfigure&lt;/code&gt; in _Compiler64 directory via a command prompt. This may revert some custom VS project settings&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Generate and build dxvk-remix Visual Studio project&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repository with all submodules:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;git clone --recursive https://github.com/NVIDIAGameWorks/dxvk-remix.git&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;If the clone was made non-recursively and the submodules are missing, clone them separately:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;git submodule update --init --recursive&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install all the &lt;a href=&#34;https://raw.githubusercontent.com/NVIDIAGameWorks/dxvk-remix/main/#requirements&#34;&gt;requirements&lt;/a&gt; before proceeding further&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure PowerShell scripts are enabled&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;One-time system setup: run &lt;code&gt;Set-ExecutionPolicy -ExecutionPolicy RemoteSigned&lt;/code&gt; in an elevated PowerShell prompt, then close and reopen any existing PowerShell prompts&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To generate and build dxvk-remix project, open a command prompt and run&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;powershell -command &#34;&amp;amp; .\build_dxvk_all_ninja.ps1&#34;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;This will build all 3 configurations of dxvk-remix project inside subdirectories of the build tree: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;strong&gt;_Comp64Debug&lt;/strong&gt; - full debug instrumentation, runtime speed may be slow&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;_Comp64DebugOptimized&lt;/strong&gt; - partial debug instrumentation (i.e. asserts), runtime speed is generally comparable to that of release configuration&lt;/li&gt; &#xA;     &lt;li&gt;&lt;strong&gt;_Comp64Release&lt;/strong&gt; - fastest runtime&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;This will generate a project in the &lt;strong&gt;_vs&lt;/strong&gt; subdirectory&lt;/li&gt; &#xA;   &lt;li&gt;Only x64 build targets are supported&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;strong&gt;_vs/dxvk-remix.sln&lt;/strong&gt; in Visual Studio (2019+).&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Do not convert the solution on load if prompted when using a newer version of Visual Studio&lt;/li&gt; &#xA;   &lt;li&gt;Once generated, the project can be built via Visual Studio or via powershell scripts&lt;/li&gt; &#xA;   &lt;li&gt;A build will copy generated DXVK DLLs to any target project as specified in &lt;strong&gt;gametargets.conf&lt;/strong&gt; (see its &lt;a href=&#34;https://raw.githubusercontent.com/NVIDIAGameWorks/dxvk-remix/main/#deploy-built-binaries-to-a-game&#34;&gt;setup section&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Deploy built binaries to a game&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;First time only: copy &lt;strong&gt;gametargets.example.conf&lt;/strong&gt; to &lt;strong&gt;gametargets.conf&lt;/strong&gt; in the project root&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Update paths in the &lt;strong&gt;gametargets.conf&lt;/strong&gt; for your game. Follow example in the &lt;strong&gt;gametargets.example.conf&lt;/strong&gt;. Make sure to remove &#34;#&#34; from the start of all three lines&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open and, simply, re-save top-level &lt;strong&gt;meson.build&lt;/strong&gt; file (i.e. via notepad) to update its time stamp, and rerun the build. This will trigger a full meson script run which will generate a project within the Visual Studio solution file and deploy built binaries into games&#39; directories specified in &lt;strong&gt;gametargets.conf&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Project Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/NVIDIAGameWorks/dxvk-remix/main/RtxOptions.md&#34;&gt;Rtx Options&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>unicode-org/icu</title>
    <updated>2023-04-15T02:42:04Z</updated>
    <id>tag:github.com,2023-04-15:/unicode-org/icu</id>
    <link href="https://github.com/unicode-org/icu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The home of the ICU project source code.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;International Components for Unicode&lt;/h1&gt; &#xA;&lt;p&gt;This is the repository for the &lt;a href=&#34;https://icu.unicode.org/&#34;&gt;International Components for Unicode&lt;/a&gt;. The ICU project is under the stewardship of &lt;a href=&#34;https://www.unicode.org&#34;&gt;The Unicode Consortium&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Source: &lt;a href=&#34;https://github.com/unicode-org/icu&#34;&gt;https://github.com/unicode-org/icu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Bugs: &lt;a href=&#34;https://unicode-org.atlassian.net/projects/ICU&#34;&gt;https://unicode-org.atlassian.net/projects/ICU&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;API Docs: &lt;a href=&#34;https://unicode-org.github.io/icu-docs/&#34;&gt;https://unicode-org.github.io/icu-docs/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;User Guide: &lt;a href=&#34;https://unicode-org.github.io/icu/&#34;&gt;https://unicode-org.github.io/icu/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/unicode-org/icu/main/tools/images/iculogo_64.png&#34; alt=&#34;ICU Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;🔴🔴🔴 Special Notice About Branch Renaming 🔴🔴🔴&lt;/h3&gt; &#xA;&lt;p&gt;Around March 24-25, 2021 we renamed the &lt;code&gt;master&lt;/code&gt; branch to &lt;code&gt;main&lt;/code&gt;. You may need to rename your branch in your local git repo and change your normal git command to reflect this change. See also &lt;a href=&#34;https://github.com/github/renaming&#34;&gt;https://github.com/github/renaming&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Build Status (&lt;code&gt;main&lt;/code&gt; branch)&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Build&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GitHub Actions&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/unicode-org/icu/actions?query=workflow%3A%22GHA+CI%22&#34;&gt;&lt;img src=&#34;https://github.com/unicode-org/icu/workflows/GHA%20CI/badge.svg?sanitize=true&#34; alt=&#34;GHA CI&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Azure Pipelines&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dev.azure.com/ms/icu/_build/latest?definitionId=360&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/ms/icu/_apis/build/status/unicode-org/CI?branchName=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Azure Pipelines (Exhaustive Tests)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dev.azure.com/ms/icu/_build/latest?definitionId=361&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/ms/icu/_apis/build/status/unicode-org/CI-Exhaustive-Main?branchName=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Azure Pipelines (Valgrind ICU4C)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dev.azure.com/ms/icu/_build/latest?definitionId=364&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/ms/icu/_apis/build/status/unicode-org/CI-Valgrind?branchName=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fuzzing&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:icu&#34;&gt;&lt;img src=&#34;https://oss-fuzz-build-logs.storage.googleapis.com/badges/icu.svg?sanitize=true&#34; alt=&#34;Fuzzing Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Subdirectories and Information&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/unicode-org/icu/main/icu4c/&#34;&gt;&lt;code&gt;icu4c/&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/unicode-org/icu/main/icu4c/readme.html&#34;&gt;ICU for C/C++&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/unicode-org/icu/main/icu4j/&#34;&gt;&lt;code&gt;icu4j/&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/unicode-org/icu/main/icu4j/readme.html&#34;&gt;ICU for Java&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/unicode-org/icu/main/tools/&#34;&gt;&lt;code&gt;tools/&lt;/code&gt;&lt;/a&gt; Tools&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/unicode-org/icu/main/vendor/&#34;&gt;&lt;code&gt;vendor/&lt;/code&gt;&lt;/a&gt; Vendor dependencies&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/unicode-org/icu/main/LICENSE&#34;&gt;./LICENSE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Copyright © 2016 and later Unicode, Inc. and others. All Rights Reserved. Unicode and the Unicode Logo are registered trademarks of Unicode, Inc. in the U.S. and other countries. &lt;a href=&#34;http://www.unicode.org/copyright.html&#34;&gt;Terms of Use and License&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
</feed>