<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-30T01:30:04Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>skyline-emu/skyline</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/skyline-emu/skyline</id>
    <link href="https://github.com/skyline-emu/skyline" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Run Nintendo Switch homebrew &amp; games on your Android device!&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/skyline-emu/skyline&#34; target=&#34;_blank&#34;&gt; &lt;img height=&#34;60%&#34; width=&#34;60%&#34; src=&#34;https://raw.github.com/skyline-emu/branding/master/banner/skyline-banner-rounded.png&#34;&gt;&lt;br&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/XnbXNQM&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/545842171459272705.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=5865F2&amp;amp;labelColor=404EED&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/skyline-emu/skyline/actions/workflows/ci.yml&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://github.com/skyline-emu/skyline/actions/workflows/ci.yml/badge.svg?sanitize=true&#34;&gt;&lt;br&gt; &lt;/a&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;&lt;a href=&#34;https://raw.githubusercontent.com/skyline-emu/skyline/master/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/skyline-emu/skyline/master/BUILDING.md&#34;&gt;Building Guide&lt;/a&gt;&lt;/b&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;b&gt;Skyline&lt;/b&gt; is an experimental emulator that runs on &lt;b&gt;ARMv8 Android™&lt;/b&gt; devices and emulates the functionality of a &lt;b&gt;Nintendo Switch™&lt;/b&gt; system, licensed under &lt;a href=&#34;https://github.com/skyline-emu/skyline/raw/master/LICENSE.md&#34;&gt;&lt;b&gt;Mozilla Public License 2.0&lt;/b&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Contact&lt;/h3&gt; &#xA;&lt;p&gt;You can contact the core developers of Skyline at our &lt;strong&gt;&lt;a href=&#34;https://discord.gg/XnbXNQM&#34;&gt;Discord&lt;/a&gt;&lt;/strong&gt;. If you have any questions, feel free to ask. It&#39;s also a good place to just keep up with the emulator, as most talk regarding development goes on over there.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Special Thanks&lt;/h3&gt; &#xA;&lt;p&gt;A few noteworthy teams/projects who&#39;ve helped us along the way are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://ryujinx.org/&#34;&gt;Ryujinx&lt;/a&gt;:&lt;/strong&gt; We&#39;ve used Ryujinx for reference throughout the project, the accuracy of their HLE implementations of Switch subsystems make it an amazing reference. The team behind the project has been extremely helpful with any queries we&#39;ve had and have constantly helped us with any issues we&#39;ve come across. &lt;strong&gt;It should be noted that Skyline is not based on Ryujinx&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://yuzu-emu.org/&#34;&gt;yuzu&lt;/a&gt;:&lt;/strong&gt; Skyline&#39;s shader compiler is a &lt;strong&gt;fork&lt;/strong&gt; of &lt;em&gt;yuzu&lt;/em&gt;&#39;s shader compiler with Skyline-specific changes, using it allowed us to focus on the parts of GPU emulation that we could specifically optimize for mobile while having a high-quality shader compiler implementation as a base. The team behind &lt;em&gt;yuzu&lt;/em&gt; has also often helped us and have graciously provided us with a license exemption.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/switchbrew/&#34;&gt;Switchbrew&lt;/a&gt;:&lt;/strong&gt; We&#39;ve extensively used Switchbrew whether that be their &lt;strong&gt;&lt;a href=&#34;https://switchbrew.org/&#34;&gt;wiki&lt;/a&gt;&lt;/strong&gt; with its colossal amount of information on the Switch that has saved us countless hours of time or &lt;strong&gt;&lt;a href=&#34;https://github.com/switchbrew/libnx&#34;&gt;libnx&lt;/a&gt;&lt;/strong&gt; which was crucial to initial development of the emulator to ensure that our HLE kernel and sysmodule implementations were accurate.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Disclaimer&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Nintendo Switch&lt;/strong&gt; is a trademark of &lt;strong&gt;Nintendo Co., Ltd&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Android&lt;/strong&gt; is a trademark of &lt;strong&gt;Google LLC&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>bitcoin/bitcoin</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/bitcoin/bitcoin</id>
    <link href="https://github.com/bitcoin/bitcoin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bitcoin Core integration/staging tree&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bitcoin Core integration/staging tree&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bitcoincore.org&#34;&gt;https://bitcoincore.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For an immediately usable, binary version of the Bitcoin Core software, see &lt;a href=&#34;https://bitcoincore.org/en/download/&#34;&gt;https://bitcoincore.org/en/download/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What is Bitcoin Core?&lt;/h2&gt; &#xA;&lt;p&gt;Bitcoin Core connects to the Bitcoin peer-to-peer network to download and fully validate blocks and transactions. It also includes a wallet and graphical user interface, which can be optionally built.&lt;/p&gt; &#xA;&lt;p&gt;Further information about Bitcoin Core is available in the &lt;a href=&#34;https://raw.githubusercontent.com/bitcoin/bitcoin/master/doc&#34;&gt;doc folder&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Bitcoin Core is released under the terms of the MIT license. See &lt;a href=&#34;https://raw.githubusercontent.com/bitcoin/bitcoin/master/COPYING&#34;&gt;COPYING&lt;/a&gt; for more information or see &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;https://opensource.org/licenses/MIT&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development Process&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;master&lt;/code&gt; branch is regularly built (see &lt;code&gt;doc/build-*.md&lt;/code&gt; for instructions) and tested, but it is not guaranteed to be completely stable. &lt;a href=&#34;https://github.com/bitcoin/bitcoin/tags&#34;&gt;Tags&lt;/a&gt; are created regularly from release branches to indicate new official, stable release versions of Bitcoin Core.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/bitcoin-core/gui&#34;&gt;https://github.com/bitcoin-core/gui&lt;/a&gt; repository is used exclusively for the development of the GUI. Its master branch is identical in all monotree repositories. Release branches and tags do not exist, so please do not fork that repository unless it is for development reasons.&lt;/p&gt; &#xA;&lt;p&gt;The contribution workflow is described in &lt;a href=&#34;https://raw.githubusercontent.com/bitcoin/bitcoin/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; and useful hints for developers can be found in &lt;a href=&#34;https://raw.githubusercontent.com/bitcoin/bitcoin/master/doc/developer-notes.md&#34;&gt;doc/developer-notes.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;Testing and code review is the bottleneck for development; we get more pull requests than we can review and test on short notice. Please be patient and help out by testing other people&#39;s pull requests, and remember this is a security-critical project where any mistake might cost people lots of money.&lt;/p&gt; &#xA;&lt;h3&gt;Automated Testing&lt;/h3&gt; &#xA;&lt;p&gt;Developers are strongly encouraged to write &lt;a href=&#34;https://raw.githubusercontent.com/bitcoin/bitcoin/master/src/test/README.md&#34;&gt;unit tests&lt;/a&gt; for new code, and to submit new unit tests for old code. Unit tests can be compiled and run (assuming they weren&#39;t disabled in configure) with: &lt;code&gt;make check&lt;/code&gt;. Further details on running and extending unit tests can be found in &lt;a href=&#34;https://raw.githubusercontent.com/bitcoin/bitcoin/master/src/test/README.md&#34;&gt;/src/test/README.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There are also &lt;a href=&#34;https://raw.githubusercontent.com/bitcoin/bitcoin/master/test&#34;&gt;regression and integration tests&lt;/a&gt;, written in Python. These tests can be run (if the &lt;a href=&#34;https://raw.githubusercontent.com/bitcoin/bitcoin/master/test&#34;&gt;test dependencies&lt;/a&gt; are installed) with: &lt;code&gt;test/functional/test_runner.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The CI (Continuous Integration) systems make sure that every pull request is built for Windows, Linux, and macOS, and that unit/sanity tests are run automatically.&lt;/p&gt; &#xA;&lt;h3&gt;Manual Quality Assurance (QA) Testing&lt;/h3&gt; &#xA;&lt;p&gt;Changes should be tested by somebody other than the developer who wrote the code. This is especially important for large or high-risk changes. It is useful to add a test plan to the pull request description if testing the changes is not straightforward.&lt;/p&gt; &#xA;&lt;h2&gt;Translations&lt;/h2&gt; &#xA;&lt;p&gt;Changes to translations as well as new translations can be submitted to &lt;a href=&#34;https://www.transifex.com/bitcoin/bitcoin/&#34;&gt;Bitcoin Core&#39;s Transifex page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Translations are periodically pulled from Transifex and merged into the git repository. See the &lt;a href=&#34;https://raw.githubusercontent.com/bitcoin/bitcoin/master/doc/translation_process.md&#34;&gt;translation process&lt;/a&gt; for details on how this works.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: We do not accept translation changes as GitHub pull requests because the next pull from Transifex would automatically overwrite them again.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ethereum/solidity</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/ethereum/solidity</id>
    <link href="https://github.com/ethereum/solidity" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Solidity, the Smart Contract Programming Language&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Solidity Contract-Oriented Programming Language&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://matrix.to/#/#ethereum_solidity:gitter.im&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Matrix%20-chat-brightgreen?style=plastic&amp;amp;logo=matrix&#34; alt=&#34;Matrix Chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/ethereum/solidity&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitter%20-chat-brightgreen?style=plastic&amp;amp;logo=gitter&#34; alt=&#34;Gitter Chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://forum.soliditylang.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Solidity_Forum%20-discuss-brightgreen?style=plastic&amp;amp;logo=discourse&#34; alt=&#34;Solidity&amp;nbsp;Forum&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/solidity_lang&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/solidity_lang?style=plastic&amp;amp;logo=twitter&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fosstodon.org/@solidity&#34;&gt;&lt;img src=&#34;https://img.shields.io/mastodon/follow/000335908?domain=https%3A%2F%2Ffosstodon.org%2F&amp;amp;logo=mastodon&amp;amp;style=plastic&#34; alt=&#34;Mastodon Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can talk to us on Gitter and Matrix, tweet at us on Twitter or create a new topic in the Solidity forum. Questions, feedback, and suggestions are welcome!&lt;/p&gt; &#xA;&lt;p&gt;Solidity is a statically typed, contract-oriented, high-level language for implementing smart contracts on the Ethereum platform.&lt;/p&gt; &#xA;&lt;p&gt;For a good overview and starting point, please check out the official &lt;a href=&#34;https://soliditylang.org&#34;&gt;Solidity Language Portal&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/solidity/develop/#background&#34;&gt;Background&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/solidity/develop/#build-and-install&#34;&gt;Build and Install&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/solidity/develop/#example&#34;&gt;Example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/solidity/develop/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/solidity/develop/#development&#34;&gt;Development&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/solidity/develop/#maintainers&#34;&gt;Maintainers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/solidity/develop/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ethereum/solidity/develop/#security&#34;&gt;Security&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Background&lt;/h2&gt; &#xA;&lt;p&gt;Solidity is a statically-typed curly-braces programming language designed for developing smart contracts that run on the Ethereum Virtual Machine. Smart contracts are programs that are executed inside a peer-to-peer network where nobody has special authority over the execution, and thus they allow to implement tokens of value, ownership, voting, and other kinds of logic.&lt;/p&gt; &#xA;&lt;p&gt;When deploying contracts, you should use the latest released version of Solidity. This is because breaking changes, as well as new features and bug fixes are introduced regularly. We currently use a 0.x version number &lt;a href=&#34;https://semver.org/#spec-item-4&#34;&gt;to indicate this fast pace of change&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build and Install&lt;/h2&gt; &#xA;&lt;p&gt;Instructions about how to build and install the Solidity compiler can be found in the &lt;a href=&#34;https://docs.soliditylang.org/en/latest/installing-solidity.html#building-from-source&#34;&gt;Solidity documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;A &#34;Hello World&#34; program in Solidity is of even less use than in other languages, but still:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-solidity&#34;&gt;// SPDX-License-Identifier: MIT&#xA;pragma solidity &amp;gt;=0.6.0 &amp;lt;0.9.0;&#xA;&#xA;contract HelloWorld {&#xA;    function helloWorld() external pure returns (string memory) {&#xA;        return &#34;Hello, World!&#34;;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To get started with Solidity, you can use &lt;a href=&#34;https://remix.ethereum.org/&#34;&gt;Remix&lt;/a&gt;, which is a browser-based IDE. Here are some example contracts:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/latest/solidity-by-example.html#voting&#34;&gt;Voting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/latest/solidity-by-example.html#blind-auction&#34;&gt;Blind Auction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/latest/solidity-by-example.html#safe-remote-purchase&#34;&gt;Safe remote purchase&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.soliditylang.org/en/latest/solidity-by-example.html#micropayment-channel&#34;&gt;Micropayment Channel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The Solidity documentation is hosted at &lt;a href=&#34;https://docs.soliditylang.org&#34;&gt;Read the docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Solidity is still under development. Contributions are always welcome! Please follow the &lt;a href=&#34;https://docs.soliditylang.org/en/latest/contributing.html&#34;&gt;Developers Guide&lt;/a&gt; if you want to help.&lt;/p&gt; &#xA;&lt;p&gt;You can find our current feature and bug priorities for forthcoming releases in the &lt;a href=&#34;https://github.com/ethereum/solidity/projects&#34;&gt;projects section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/axic&#34;&gt;@axic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chriseth&#34;&gt;@chriseth&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Solidity is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/ethereum/solidity/develop/LICENSE.txt&#34;&gt;GNU General Public License v3.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Some third-party code has its &lt;a href=&#34;https://raw.githubusercontent.com/ethereum/solidity/develop/cmake/templates/license.h.in&#34;&gt;own licensing terms&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;The security policy may be &lt;a href=&#34;https://raw.githubusercontent.com/ethereum/solidity/develop/SECURITY.md&#34;&gt;found here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>godotengine/godot</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/godotengine/godot</id>
    <link href="https://github.com/godotengine/godot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Godot Engine – Multi-platform 2D and 3D game engine&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Godot Engine&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://godotengine.org&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/godotengine/godot/master/logo_outlined.svg?sanitize=true&#34; width=&#34;400&#34; alt=&#34;Godot Engine logo&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;2D and 3D cross-platform game engine&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://godotengine.org&#34;&gt;Godot Engine&lt;/a&gt; is a feature-packed, cross-platform game engine to create 2D and 3D games from a unified interface.&lt;/strong&gt; It provides a comprehensive set of &lt;a href=&#34;https://godotengine.org/features&#34;&gt;common tools&lt;/a&gt;, so that users can focus on making games without having to reinvent the wheel. Games can be exported with one click to a number of platforms, including the major desktop platforms (Linux, macOS, Windows), mobile platforms (Android, iOS), as well as Web-based platforms (HTML5) and &lt;a href=&#34;https://docs.godotengine.org/en/latest/tutorials/platform/consoles.html&#34;&gt;consoles&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Free, open source and community-driven&lt;/h2&gt; &#xA;&lt;p&gt;Godot is completely free and open source under the very permissive &lt;a href=&#34;https://godotengine.org/license&#34;&gt;MIT license&lt;/a&gt;. No strings attached, no royalties, nothing. The users&#39; games are theirs, down to the last line of engine code. Godot&#39;s development is fully independent and community-driven, empowering users to help shape their engine to match their expectations. It is supported by the &lt;a href=&#34;https://sfconservancy.org/&#34;&gt;Software Freedom Conservancy&lt;/a&gt; not-for-profit.&lt;/p&gt; &#xA;&lt;p&gt;Before being open sourced in &lt;a href=&#34;https://github.com/godotengine/godot/commit/0b806ee0fc9097fa7bda7ac0109191c9c5e0a1ac&#34;&gt;February 2014&lt;/a&gt;, Godot had been developed by &lt;a href=&#34;https://github.com/reduz&#34;&gt;Juan Linietsky&lt;/a&gt; and &lt;a href=&#34;https://github.com/punto-&#34;&gt;Ariel Manzur&lt;/a&gt; (both still maintaining the project) for several years as an in-house engine, used to publish several work-for-hire titles.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/godotengine/godot-design/master/screenshots/editor_tps_demo_1920x1080.jpg&#34; alt=&#34;Screenshot of a 3D scene in the Godot Engine editor&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting the engine&lt;/h2&gt; &#xA;&lt;h3&gt;Binary downloads&lt;/h3&gt; &#xA;&lt;p&gt;Official binaries for the Godot editor and the export templates can be found &lt;a href=&#34;https://godotengine.org/download&#34;&gt;on the homepage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Compiling from source&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.godotengine.org/en/latest/development/compiling/&#34;&gt;See the official docs&lt;/a&gt; for compilation instructions for every supported platform.&lt;/p&gt; &#xA;&lt;h2&gt;Community and contributing&lt;/h2&gt; &#xA;&lt;p&gt;Godot is not only an engine but an ever-growing community of users and engine developers. The main community channels are listed &lt;a href=&#34;https://godotengine.org/community&#34;&gt;on the homepage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The best way to get in touch with the core engine developers is to join the &lt;a href=&#34;https://chat.godotengine.org&#34;&gt;Godot Contributors Chat&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To get started contributing to the project, see the &lt;a href=&#34;https://raw.githubusercontent.com/godotengine/godot/master/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation and demos&lt;/h2&gt; &#xA;&lt;p&gt;The official documentation is hosted on &lt;a href=&#34;https://docs.godotengine.org&#34;&gt;ReadTheDocs&lt;/a&gt;. It is maintained by the Godot community in its own &lt;a href=&#34;https://github.com/godotengine/godot-docs&#34;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://docs.godotengine.org/en/latest/classes/&#34;&gt;class reference&lt;/a&gt; is also accessible from the Godot editor.&lt;/p&gt; &#xA;&lt;p&gt;We also maintain official demos in their own &lt;a href=&#34;https://github.com/godotengine/godot-demo-projects&#34;&gt;GitHub repository&lt;/a&gt; as well as a list of &lt;a href=&#34;https://github.com/godotengine/awesome-godot&#34;&gt;awesome Godot community resources&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There are also a number of other &lt;a href=&#34;https://docs.godotengine.org/en/latest/community/tutorials.html&#34;&gt;learning resources&lt;/a&gt; provided by the community, such as text and video tutorials, demos, etc. Consult the &lt;a href=&#34;https://godotengine.org/community&#34;&gt;community channels&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.codetriage.com/godotengine/godot&#34;&gt;&lt;img src=&#34;https://www.codetriage.com/godotengine/godot/badges/users.svg?sanitize=true&#34; alt=&#34;Code Triagers Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hosted.weblate.org/engage/godot-engine/?utm_source=widget&#34;&gt;&lt;img src=&#34;https://hosted.weblate.org/widgets/godot-engine/-/godot/svg-badge.svg?sanitize=true&#34; alt=&#34;Translate on Weblate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/godotengine/godot/alerts&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/alerts/g/godotengine/godot.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Total alerts on LGTM&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.tickgit.com/browse?repo=github.com/godotengine/godot&#34;&gt;&lt;img src=&#34;https://badgen.net/https/api.tickgit.com/badgen/github.com/godotengine/godot&#34; alt=&#34;TODOs&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>duckdb/duckdb</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/duckdb/duckdb</id>
    <link href="https://github.com/duckdb/duckdb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DuckDB is an in-process SQL OLAP Database Management System&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://duckdb.org/images/DuckDB_Logo_dl.png&#34; height=&#34;50&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/duckdb/duckdb/actions&#34;&gt; &lt;img src=&#34;https://github.com/duckdb/duckdb/actions/workflows/Main.yml/badge.svg?branch=master&#34; alt=&#34;Github Actions Badge&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.codefactor.io/repository/github/cwida/duckdb&#34;&gt; &lt;img src=&#34;https://www.codefactor.io/repository/github/cwida/duckdb/badge&#34; alt=&#34;CodeFactor&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/duckdb/duckdb&#34;&gt; &lt;img src=&#34;https://codecov.io/gh/duckdb/duckdb/branch/master/graph/badge.svg?token=FaxjcfFghN&#34; alt=&#34;codecov&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/tcvwpjfnZx&#34;&gt; &lt;img src=&#34;https://shields.io/discord/909674491309850675&#34; alt=&#34;discord&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;DuckDB&lt;/h2&gt; &#xA;&lt;p&gt;DuckDB is a high-performance analytical database system. It is designed to be fast, reliable and easy to use. DuckDB provides a rich SQL dialect, with support far beyond basic SQL. DuckDB supports arbitrary and nested correlated subqueries, window functions, collations, complex types (arrays, structs), and more. For more information on the goals of DuckDB, please refer to &lt;a href=&#34;https://duckdb.org/why_duckdb&#34;&gt;the Why DuckDB page on our website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;If you want to install and use DuckDB, please see &lt;a href=&#34;https://www.duckdb.org&#34;&gt;our website&lt;/a&gt; for installation and usage instructions.&lt;/p&gt; &#xA;&lt;h2&gt;Data Import&lt;/h2&gt; &#xA;&lt;p&gt;For CSV files and Parquet files, data import is as simple as referencing the file in the FROM clause:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT * FROM &#39;myfile.csv&#39;;&#xA;SELECT * FROM &#39;myfile.parquet&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Refer to our &lt;a href=&#34;https://duckdb.org/docs/data/overview&#34;&gt;Data Import&lt;/a&gt; section for more information.&lt;/p&gt; &#xA;&lt;h2&gt;SQL Reference&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://duckdb.org/docs/sql/introduction&#34;&gt;website&lt;/a&gt; contains a reference of functions and SQL constructs available in DuckDB.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;For development, DuckDB requires &lt;a href=&#34;https://cmake.org&#34;&gt;CMake&lt;/a&gt;, Python3 and a &lt;code&gt;C++11&lt;/code&gt; compliant compiler. Run &lt;code&gt;make&lt;/code&gt; in the root directory to compile the sources. For development, use &lt;code&gt;make debug&lt;/code&gt; to build a non-optimized debug version. You should run &lt;code&gt;make unit&lt;/code&gt; and &lt;code&gt;make allunit&lt;/code&gt; to verify that your version works properly after making changes. To test performance, you can run &lt;code&gt;BUILD_BENCHMARK=1 BUILD_TPCH=1 make&lt;/code&gt; and then perform several standard benchmarks from the root directory by executing &lt;code&gt;./build/release/benchmark/benchmark_runner&lt;/code&gt;. The detail of benchmarks is in our &lt;a href=&#34;https://raw.githubusercontent.com/duckdb/duckdb/master/benchmark/README.md&#34;&gt;Benchmark Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please also refer to our &lt;a href=&#34;https://raw.githubusercontent.com/duckdb/duckdb/master/CONTRIBUTING.md&#34;&gt;Contribution Guide&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/calculator</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/microsoft/calculator</id>
    <link href="https://github.com/microsoft/calculator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Windows Calculator: A simple yet powerful calculator that ships with Windows&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Calculator&lt;/h1&gt; &#xA;&lt;p&gt;The Windows Calculator app is a modern Windows app written in C++ and C# that ships pre-installed with Windows. The app provides standard, scientific, and programmer calculator functionality, as well as a set of converters between various units of measurement and currencies.&lt;/p&gt; &#xA;&lt;p&gt;Calculator ships regularly with new features and bug fixes. You can get the latest version of Calculator in the &lt;a href=&#34;https://www.microsoft.com/store/apps/9WZDNCRFHVN5&#34;&gt;Microsoft Store&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/ms/calculator/_build/latest?definitionId=57&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/ms/calculator/_apis/build/status/Calculator-CI?branchName=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/calculator/master/docs/Images/CalculatorScreenshot.png&#34; alt=&#34;Calculator Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Standard Calculator functionality which offers basic operations and evaluates commands immediately as they are entered.&lt;/li&gt; &#xA; &lt;li&gt;Scientific Calculator functionality which offers expanded operations and evaluates commands using order of operations.&lt;/li&gt; &#xA; &lt;li&gt;Programmer Calculator functionality which offers common mathematical operations for developers including conversion between common bases.&lt;/li&gt; &#xA; &lt;li&gt;Date Calculation functionality which offers the difference between two dates, as well as the ability to add/subtract years, months and/or days to/from a given input date.&lt;/li&gt; &#xA; &lt;li&gt;Calculation history and memory capabilities.&lt;/li&gt; &#xA; &lt;li&gt;Conversion between many units of measurement.&lt;/li&gt; &#xA; &lt;li&gt;Currency conversion based on data retrieved from &lt;a href=&#34;https://www.bing.com&#34;&gt;Bing&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Arbitrary-precision_arithmetic&#34;&gt;Infinite precision&lt;/a&gt; for basic arithmetic operations (addition, subtraction, multiplication, division) so that calculations never lose precision.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Prerequisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Your computer must be running Windows 10, version 1809 or newer. Windows 11 is recommended.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the latest version of &lt;a href=&#34;https://developer.microsoft.com/en-us/windows/downloads&#34;&gt;Visual Studio&lt;/a&gt; (the free community edition is sufficient).&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Install the &#34;Universal Windows Platform Development&#34; workload.&lt;/li&gt; &#xA;   &lt;li&gt;Install the optional &#34;C++ Universal Windows Platform tools&#34; component.&lt;/li&gt; &#xA;   &lt;li&gt;Install the latest Windows 11 SDK.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/calculator/master/docs/Images/VSInstallationScreenshot.png&#34; alt=&#34;Visual Studio Installation Screenshot&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=TeamXavalon.XAMLStyler&#34;&gt;XAML Styler&lt;/a&gt; Visual Studio extension.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Get the code:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git clone https://github.com/Microsoft/calculator.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/calculator/master/src/Calculator.sln&#34;&gt;src\Calculator.sln&lt;/a&gt; in Visual Studio to build and run the Calculator app.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For a general description of the Calculator project architecture see &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/calculator/master/docs/ApplicationArchitecture.md&#34;&gt;ApplicationArchitecture.md&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To run the UI Tests, you need to make sure that &lt;a href=&#34;https://github.com/microsoft/WinAppDriver/releases/latest&#34;&gt;Windows Application Driver (WinAppDriver)&lt;/a&gt; is installed.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Want to contribute? The team encourages community feedback and contributions. Please follow our &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/calculator/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If Calculator is not working properly, please file a report in the &lt;a href=&#34;https://insider.windows.com/en-us/fb/?contextid=130&#34;&gt;Feedback Hub&lt;/a&gt;. We also welcome &lt;a href=&#34;https://github.com/Microsoft/calculator/issues&#34;&gt;issues submitted on GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;For information regarding Windows Calculator plans and release schedule, please see the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/calculator/master/docs/Roadmap.md&#34;&gt;Windows Calculator Roadmap&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Graphing Mode&lt;/h3&gt; &#xA;&lt;p&gt;Adding graphing calculator functionality &lt;a href=&#34;https://github.com/Microsoft/calculator/issues/338&#34;&gt;is on the project roadmap&lt;/a&gt; and we hope that this project can create a great end-user experience around graphing. To that end, the UI from the official in-box Windows Calculator is currently part of this repository, although the proprietary Microsoft-built graphing engine, which also drives graphing in Microsoft Mathematics and OneNote, is not. Community members can still be involved in the creation of the UI, however developer builds will not have graphing functionality due to the use of a &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/calculator/master/src/GraphingImpl/Mocks&#34;&gt;mock implementation of the engine&lt;/a&gt; built on top of a &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/calculator/master/src/GraphingInterfaces&#34;&gt;common graphing API&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Diagnostic Data&lt;/h2&gt; &#xA;&lt;p&gt;This project collects usage data and sends it to Microsoft to help improve our products and services. Read our &lt;a href=&#34;https://go.microsoft.com/fwlink/?LinkId=521839&#34;&gt;privacy statement&lt;/a&gt; to learn more. Diagnostic data is disabled in development builds by default, and can be enabled with the &lt;code&gt;SEND_DIAGNOSTICS&lt;/code&gt; build flag.&lt;/p&gt; &#xA;&lt;h2&gt;Currency Converter&lt;/h2&gt; &#xA;&lt;p&gt;Windows Calculator includes a currency converter feature that uses mock data in developer builds. The data that Microsoft uses for the currency converter feature (e.g., in the retail version of the application) is not licensed for your use. The mock data will be clearly identifiable as it references planets instead of countries, and remains static regardless of selected inputs.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting Security Issues&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/calculator/master/SECURITY.md&#34;&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/calculator/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Alinshans/MyTinySTL</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/Alinshans/MyTinySTL</id>
    <link href="https://github.com/Alinshans/MyTinySTL" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Achieve a tiny STL in C++11&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MyTinySTL&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/Alinshans/MyTinySTL&#34;&gt;&lt;img src=&#34;https://travis-ci.org/Alinshans/MyTinySTL.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/Alinshans/mytinystl&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/Alinshans/MyTinySTL?branch=master&amp;amp;svg=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/Alinshans/MyTinySTL.svg?sanitize=true&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT%20License-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/alinshans/MyTinySTL&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20gitter-FF6EB4.svg?sanitize=true&#34; alt=&#34;Chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;简介&lt;/h2&gt; &#xA;&lt;p&gt;基于 &lt;code&gt;C++11&lt;/code&gt; 的 &lt;code&gt;tinySTL&lt;/code&gt;，这是我的第一个项目，使用了中文文档与中文注释，有不规范或不当的地方还请海涵。刚开始是作为新手练习用途，直到现在已经发布了 &lt;code&gt;2.x.x&lt;/code&gt; 版本。实现了大部分 STL 中的容器与函数，但仍存在许多不足与 bug 。从 &lt;code&gt;2.x.x&lt;/code&gt; 版本开始，本项目会进入长期维护的阶段，即基本不会增加新的内容，只修复发现的 bug。如发现错误，还请在 &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/issues&#34;&gt;&lt;code&gt;Issues&lt;/code&gt;&lt;/a&gt; 中指出，欢迎 &lt;code&gt;Fork&lt;/code&gt; 和 &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/pulls&#34;&gt;&lt;code&gt;Pull requests&lt;/code&gt;&lt;/a&gt; 改善代码，谢谢！&lt;/p&gt; &#xA;&lt;h2&gt;支持&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;操作系统 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;linux&lt;/li&gt; &#xA;   &lt;li&gt;windows&lt;/li&gt; &#xA;   &lt;li&gt;osx&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;编译器 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;g++ 5.4 或以上&lt;/li&gt; &#xA;   &lt;li&gt;clang++ 3.5 或以上&lt;/li&gt; &#xA;   &lt;li&gt;msvc 14.0 或以上&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;需要&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用 cmake 2.8 来构建项目（&lt;strong&gt;可选&lt;/strong&gt;）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;运行&lt;/h2&gt; &#xA;&lt;p&gt;如果你想要运行测试，请先阅读 &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/raw/master/Test/README.md&#34;&gt;这个&lt;/a&gt; 。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;gcc/clang on linux/osx&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;克隆仓库&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone git@github.com:Alinshans/MyTinySTL.git&#xA;$ cd MyTinySTL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;构建并运行&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ mkdir build &amp;amp;&amp;amp; cd build&#xA;$ cmake ..&#xA;$ make&#xA;$ cd ../bin &amp;amp;&amp;amp; ./stltest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;msvc on windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;克隆仓库或 &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/archive/master.zip&#34;&gt;Download ZIP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;使用 &lt;code&gt;vs2015&lt;/code&gt;（或 &lt;code&gt;vs2017&lt;/code&gt;）打开 &lt;code&gt;MSVC/MyTinySTL_VS2015.sln&lt;/code&gt;，配置成 &lt;code&gt;Release&lt;/code&gt; 模式，（Ctrl + F5）开始执行。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;文档&lt;/h2&gt; &#xA;&lt;p&gt;见 &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/wiki&#34;&gt;Wiki&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;测试&lt;/h2&gt; &#xA;&lt;p&gt;见 &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/tree/master/Test&#34;&gt;Test&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;This is a &lt;code&gt;tinySTL&lt;/code&gt; based on &lt;code&gt;C++11&lt;/code&gt;, which is my first project for practice. I use the Chinese documents and annotations for convenience, maybe there will be an English version later, but now I have no time to do that yet. Now I have released version &lt;code&gt;2.0.0&lt;/code&gt;. I have achieved the vast majority of the containers and functions of &lt;code&gt;STL&lt;/code&gt;, and there may be some deficiencies and bugs. From the version &lt;code&gt;2.x.x&lt;/code&gt;, the project will enter the stage of long-term maintenance, i.e., I probably will not add new content but only fix bugs found. If you find any bugs, please point out that in &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/issues&#34;&gt;&lt;code&gt;Issues&lt;/code&gt;&lt;/a&gt;, or make a &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/pulls&#34;&gt;&lt;code&gt;Pull requests&lt;/code&gt;&lt;/a&gt; to improve it, thanks!&lt;/p&gt; &#xA;&lt;h2&gt;Supported&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;os &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;linux&lt;/li&gt; &#xA;   &lt;li&gt;windows&lt;/li&gt; &#xA;   &lt;li&gt;osx&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;complier &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;g++ 5.4 or later&lt;/li&gt; &#xA;   &lt;li&gt;clang++ 3.5 or later&lt;/li&gt; &#xA;   &lt;li&gt;msvc 14.0 or later&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Required&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use cmake 2.8 to build this project (&lt;strong&gt;Optional&lt;/strong&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Run test&lt;/h2&gt; &#xA;&lt;p&gt;If you want to run the test, please read &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/raw/master/Test/README.md&#34;&gt;this&lt;/a&gt; first.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;gcc/clang on linux/osx&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;git clone&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone git@github.com:Alinshans/MyTinySTL.git&#xA;$ cd MyTinySTL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;build and run&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ mkdir build &amp;amp;&amp;amp; cd build&#xA;$ cmake ..&#xA;$ make&#xA;$ cd ../bin &amp;amp;&amp;amp; ./stltest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;msvc on windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;git clone or &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/archive/master.zip&#34;&gt;Download ZIP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;use &lt;code&gt;vs2015&lt;/code&gt;(or &lt;code&gt;vs2017&lt;/code&gt;) open the file &lt;code&gt;MSVC/MyTinySTL_VS2015.sln&lt;/code&gt;, configured in &lt;code&gt;Release&lt;/code&gt;, run this project(Ctrl + F5).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Documents&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/wiki&#34;&gt;Wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Test&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/Alinshans/MyTinySTL/tree/master/Test&#34;&gt;Test&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>esp8266/Arduino</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/esp8266/Arduino</id>
    <link href="https://github.com/esp8266/Arduino" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ESP8266 core for Arduino&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Arduino core for ESP8266 WiFi chip&lt;/h1&gt; &#xA;&lt;h1&gt;Quick links&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arduino-esp8266.readthedocs.io/en/3.0.2/&#34;&gt;Latest release documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arduino-esp8266.readthedocs.io/en/latest/&#34;&gt;Current &#34;git version&#34; documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arduino-esp8266.readthedocs.io/en/latest/installing.html#using-git-version&#34;&gt;Install git version&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/esp8266/Arduino/master/doc/installing.rst#using-git-version&#34;&gt;sources&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Arduino on ESP8266&lt;/h1&gt; &#xA;&lt;p&gt;This project brings support for the ESP8266 chip to the Arduino environment. It lets you write sketches, using familiar Arduino functions and libraries, and run them directly on ESP8266, with no external microcontroller required.&lt;/p&gt; &#xA;&lt;p&gt;ESP8266 Arduino core comes with libraries to communicate over WiFi using TCP and UDP, set up HTTP, mDNS, SSDP, and DNS servers, do OTA updates, use a file system in flash memory, and work with SD cards, servos, SPI and I2C peripherals.&lt;/p&gt; &#xA;&lt;h1&gt;Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installing options: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/esp8266/Arduino/master/#installing-with-boards-manager&#34;&gt;Using Boards Manager&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/esp8266/Arduino/master/#using-git-version&#34;&gt;Using git version&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/esp8266/Arduino/master/#using-platformio&#34;&gt;Using PlatformIO&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/esp8266/Arduino/master/#building-with-make&#34;&gt;Building with make&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/esp8266/Arduino/master/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/esp8266/Arduino/master/#issues-and-support&#34;&gt;Issues and support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/esp8266/Arduino/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/esp8266/Arduino/master/#license-and-credits&#34;&gt;License and credits&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installing with Boards Manager&lt;/h3&gt; &#xA;&lt;p&gt;Starting with 1.6.4, Arduino allows installation of third-party platform packages using Boards Manager. We have packages available for Windows, Mac OS, and Linux (32 and 64 bit).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install the current upstream Arduino IDE at the 1.8.9 level or later. The current version is on the &lt;a href=&#34;https://www.arduino.cc/en/main/software&#34;&gt;Arduino website&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Start Arduino and open the Preferences window.&lt;/li&gt; &#xA; &lt;li&gt;Enter &lt;code&gt;https://arduino.esp8266.com/stable/package_esp8266com_index.json&lt;/code&gt; into the &lt;em&gt;File&amp;gt;Preferences&amp;gt;Additional Boards Manager URLs&lt;/em&gt; field of the Arduino IDE. You can add multiple URLs, separating them with commas.&lt;/li&gt; &#xA; &lt;li&gt;Open Boards Manager from Tools &amp;gt; Board menu and install &lt;em&gt;esp8266&lt;/em&gt; platform (and don&#39;t forget to select your ESP8266 board from Tools &amp;gt; Board menu after installation).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Latest release &lt;a href=&#34;https://github.com/esp8266/Arduino/releases/latest/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/esp8266/Arduino.svg?sanitize=true&#34; alt=&#34;Latest release&#34;&gt;&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Boards manager link: &lt;code&gt;https://arduino.esp8266.com/stable/package_esp8266com_index.json&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Documentation: &lt;a href=&#34;https://arduino-esp8266.readthedocs.io/en/3.0.2/&#34;&gt;https://arduino-esp8266.readthedocs.io/en/3.0.2/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Using git version&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/esp8266/Arduino&#34;&gt;&lt;img src=&#34;https://travis-ci.org/esp8266/Arduino.svg?sanitize=true&#34; alt=&#34;Linux build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Also known as latest git or master branch.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install the current upstream Arduino IDE at the 1.8 level or later. The current version is on the &lt;a href=&#34;https://www.arduino.cc/en/main/software&#34;&gt;Arduino website&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Follow the &lt;a href=&#34;https://arduino-esp8266.readthedocs.io/en/latest/installing.html#using-git-version&#34;&gt;instructions in the documentation&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Using PlatformIO&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://platformio.org?utm_source=arduino-esp8266&#34;&gt;PlatformIO&lt;/a&gt; is an open source ecosystem for IoT development with a cross-platform build system, a library manager, and full support for Espressif (ESP8266) development. It works on the following popular host operating systems: macOS, Windows, Linux 32/64, and Linux ARM (like Raspberry Pi, BeagleBone, CubieBoard).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.platformio.org/en/latest/what-is-platformio.html?utm_source=arduino-esp8266&#34;&gt;What is PlatformIO?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://platformio.org/platformio-ide?utm_source=arduino-esp8266&#34;&gt;PlatformIO IDE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.platformio.org/en/latest/core.html?utm_source=arduino-esp8266&#34;&gt;PlatformIO Core&lt;/a&gt; (command line tool)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.platformio.org/en/latest/platforms/espressif8266.html?utm_source=arduino-esp8266&#34;&gt;Advanced usage&lt;/a&gt; - custom settings, uploading to SPIFFS, Over-the-Air (OTA), staging version&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.platformio.org/en/latest/ide.html?utm_source=arduino-esp8266&#34;&gt;Integration with Cloud and Standalone IDEs&lt;/a&gt; - Cloud9, Codeanywhere, Eclipse Che (Codenvy), Atom, CLion, Eclipse, Emacs, NetBeans, Qt Creator, Sublime Text, VIM, Visual Studio, and VSCode&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.platformio.org/en/latest/platforms/espressif8266.html?utm_source=arduino-esp8266#examples&#34;&gt;Project Examples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building with make&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/plerup/makeEspArduino&#34;&gt;makeEspArduino&lt;/a&gt; is a generic makefile for any ESP8266 Arduino project. Using make instead of the Arduino IDE makes it easier to do automated and production builds.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;Documentation for latest development version: &lt;a href=&#34;https://arduino-esp8266.readthedocs.io/en/latest/&#34;&gt;https://arduino-esp8266.readthedocs.io/en/latest/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Issues and support&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.esp8266.com/u/arduinoanswers&#34;&gt;ESP8266 Community Forum&lt;/a&gt; is a well-established community for questions and answers about Arduino for ESP8266. Stackoverflow is also an alternative. If you need help, have a &#34;How do I...&#34; type question, have a problem with a 3rd party library not hosted in this repo, or just want to discuss how to approach a problem, please ask there.&lt;/p&gt; &#xA;&lt;p&gt;If you find the forum useful, please consider supporting it with a donation. &lt;br&gt; &lt;a href=&#34;https://www.paypal.com/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=4M56YCWV6PX66&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/paypal-donate-yellow.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you encounter an issue which you think is a bug in the ESP8266 Arduino Core or the associated libraries, or if you want to propose an enhancement, you are welcome to submit it here on Github: &lt;a href=&#34;https://github.com/esp8266/Arduino/issues&#34;&gt;https://github.com/esp8266/Arduino/issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please provide as much context as possible, as well as the information requested in the issue template:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ESP8266 Arduino core version which you are using (you can check it in Boards Manager)&lt;/li&gt; &#xA; &lt;li&gt;your sketch code; please wrap it into a code block, see &lt;a href=&#34;https://help.github.com/articles/basic-writing-and-formatting-syntax/#quoting-code&#34;&gt;Github markdown manual&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;when encountering an issue that happens at run time, attach the serial output. Wrap it into a code block, just like the code.&lt;/li&gt; &#xA; &lt;li&gt;for issues that happen at compile time, enable verbose compiler output in the IDE preferences, and attach that output (also inside a code block)&lt;/li&gt; &#xA; &lt;li&gt;ESP8266 development board model&lt;/li&gt; &#xA; &lt;li&gt;IDE settings (board choice, flash size)&lt;/li&gt; &#xA; &lt;li&gt;etc&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;For minor fixes of code and documentation, please go ahead and submit a pull request. A gentle introduction to the process can be found &lt;a href=&#34;https://www.freecodecamp.org/news/a-simple-git-guide-and-cheat-sheet-for-open-source-contributors/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Check out the list of issues that are easy to fix — &lt;a href=&#34;https://github.com/esp8266/Arduino/issues?q=is%3Aopen+is%3Aissue+label%3A%22level%3A+easy%22&#34;&gt;easy issues pending&lt;/a&gt;. Working on them is a great way to move the project forward.&lt;/p&gt; &#xA;&lt;p&gt;Larger changes (rewriting parts of existing code from scratch, adding new functions to the core, adding new libraries) should generally be discussed by opening an issue first. PRs with such changes require testing and approval.&lt;/p&gt; &#xA;&lt;p&gt;Feature branches with lots of small commits (especially titled &#34;oops&#34;, &#34;fix typo&#34;, &#34;forgot to add file&#34;, etc.) should be squashed before opening a pull request. At the same time, please refrain from putting multiple unrelated changes into a single pull request.&lt;/p&gt; &#xA;&lt;h3&gt;License and credits&lt;/h3&gt; &#xA;&lt;p&gt;Arduino IDE is developed and maintained by the Arduino team. The IDE is licensed under GPL.&lt;/p&gt; &#xA;&lt;p&gt;ESP8266 core includes an xtensa gcc toolchain, which is also under GPL.&lt;/p&gt; &#xA;&lt;p&gt;Esptool.py was initially created by Fredrik Ahlberg (@themadinventor, @kongo), and is currently maintained by Angus Gratton (@projectgus) under GPL 2.0 license.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/espressif/ESP8266_NONOS_SDK&#34;&gt;Espressif&#39;s NONOS SDK&lt;/a&gt; included in this build is under Espressif MIT License.&lt;/p&gt; &#xA;&lt;p&gt;ESP8266 core files are licensed under LGPL.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pellepl/spiffs&#34;&gt;SPI Flash File System (SPIFFS)&lt;/a&gt; written by Peter Andersson is used in this project. It is distributed under the MIT license.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rhempel/umm_malloc&#34;&gt;umm_malloc&lt;/a&gt; memory management library written by Ralph Hempel is used in this project. It is distributed under the MIT license.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/plerup/espsoftwareserial&#34;&gt;SoftwareSerial&lt;/a&gt; library and examples written by Peter Lerup. Distributed under LGPL 2.1.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bearssl.org&#34;&gt;BearSSL&lt;/a&gt; library written by Thomas Pornin, built from &lt;a href=&#34;https://github.com/earlephilhower/bearssl-esp8266&#34;&gt;https://github.com/earlephilhower/bearssl-esp8266&lt;/a&gt;, is used in this project. It is distributed under the &lt;a href=&#34;https://bearssl.org/#legal-details&#34;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ARMmbed/littlefs&#34;&gt;LittleFS&lt;/a&gt; library written by ARM Limited and released under the &lt;a href=&#34;https://github.com/ARMmbed/littlefs/raw/master/LICENSE.md&#34;&gt;BSD 3-clause license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pfalcon/uzlib&#34;&gt;uzlib&lt;/a&gt; library written and (c) 2014-2018 Paul Sokolovsky, licensed under the ZLib license (&lt;a href=&#34;https://www.zlib.net/zlib_license.html&#34;&gt;https://www.zlib.net/zlib_license.html&lt;/a&gt;). uzlib is based on: tinf library by Joergen Ibsen (Deflate decompression); Deflate Static Huffman tree routines by Simon Tatham; LZ77 compressor by Paul Sokolovsky; with library integrated and maintained by Paul Sokolovsky.&lt;/p&gt; &#xA;&lt;h3&gt;Other useful links&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/earlephilhower/esp-quick-toolchain&#34;&gt;Toolchain repo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/d-a-v/esp82xx-nonos-linklayer&#34;&gt;Lwip link layer repo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/plerup/espsoftwareserial&#34;&gt;SoftwareSerial repo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mytrain/arduino-esp8266-serial-plugin&#34;&gt;Serial Monitor Arduino IDE plugin&lt;/a&gt; Original discussion &lt;a href=&#34;https://github.com/esp8266/Arduino/issues/1360&#34;&gt;here&lt;/a&gt;, quick download &lt;a href=&#34;http://mytrain.fr/cms//images/mytrain/private/ESP8266SM.v3.zip&#34;&gt;there&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dplasa/FTPClientServer&#34;&gt;FTP Client/Server Library&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>minetest/minetest</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/minetest/minetest</id>
    <link href="https://github.com/minetest/minetest" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Minetest is an open source voxel game engine with easy modding and game creation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Minetest&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/minetest/minetest/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt; &lt;a href=&#34;https://hosted.weblate.org/engage/minetest/?utm_source=widget&#34;&gt;&lt;img src=&#34;https://hosted.weblate.org/widgets/minetest/-/svg-badge.svg?sanitize=true&#34; alt=&#34;Translation status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-LGPLv2.1%2B-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Minetest is a free open-source voxel game engine with easy modding and game creation.&lt;/p&gt; &#xA;&lt;p&gt;Copyright (C) 2010-2022 Perttu Ahola &lt;a href=&#34;mailto:celeron55@gmail.com&#34;&gt;celeron55@gmail.com&lt;/a&gt; and contributors (see source file comments and the version control log)&lt;/p&gt; &#xA;&lt;h2&gt;In case you downloaded the source code&lt;/h2&gt; &#xA;&lt;p&gt;If you downloaded the Minetest Engine source code in which this file is contained, you probably want to download the &lt;a href=&#34;https://github.com/minetest/minetest_game/&#34;&gt;Minetest Game&lt;/a&gt; project too. See its README.txt for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/minetest/minetest/master/#further-documentation&#34;&gt;Further Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/minetest/minetest/master/#default-controls&#34;&gt;Default Controls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/minetest/minetest/master/#paths&#34;&gt;Paths&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/minetest/minetest/master/#configuration-file&#34;&gt;Configuration File&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/minetest/minetest/master/#command-line-options&#34;&gt;Command-line Options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/minetest/minetest/master/#compiling&#34;&gt;Compiling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/minetest/minetest/master/#docker&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/minetest/minetest/master/#version-scheme&#34;&gt;Version Scheme&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Further documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Website: &lt;a href=&#34;https://minetest.net/&#34;&gt;https://minetest.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wiki: &lt;a href=&#34;https://wiki.minetest.net/&#34;&gt;https://wiki.minetest.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Developer wiki: &lt;a href=&#34;https://dev.minetest.net/&#34;&gt;https://dev.minetest.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Forum: &lt;a href=&#34;https://forum.minetest.net/&#34;&gt;https://forum.minetest.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GitHub: &lt;a href=&#34;https://github.com/minetest/minetest/&#34;&gt;https://github.com/minetest/minetest/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/minetest/minetest/master/doc/&#34;&gt;doc/&lt;/a&gt; directory of source distribution&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Default controls&lt;/h2&gt; &#xA;&lt;p&gt;All controls are re-bindable using settings. Some can be changed in the key config dialog in the settings tab.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Button&lt;/th&gt; &#xA;   &lt;th&gt;Action&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Move mouse&lt;/td&gt; &#xA;   &lt;td&gt;Look around&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;W, A, S, D&lt;/td&gt; &#xA;   &lt;td&gt;Move&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Space&lt;/td&gt; &#xA;   &lt;td&gt;Jump/move up&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shift&lt;/td&gt; &#xA;   &lt;td&gt;Sneak/move down&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Q&lt;/td&gt; &#xA;   &lt;td&gt;Drop itemstack&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shift + Q&lt;/td&gt; &#xA;   &lt;td&gt;Drop single item&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Left mouse button&lt;/td&gt; &#xA;   &lt;td&gt;Dig/punch/take item&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Right mouse button&lt;/td&gt; &#xA;   &lt;td&gt;Place/use&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shift + right mouse button&lt;/td&gt; &#xA;   &lt;td&gt;Build (without using)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;I&lt;/td&gt; &#xA;   &lt;td&gt;Inventory menu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mouse wheel&lt;/td&gt; &#xA;   &lt;td&gt;Select item&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0-9&lt;/td&gt; &#xA;   &lt;td&gt;Select item&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Z&lt;/td&gt; &#xA;   &lt;td&gt;Zoom (needs zoom privilege)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;T&lt;/td&gt; &#xA;   &lt;td&gt;Chat&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;/&lt;/td&gt; &#xA;   &lt;td&gt;Command&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Esc&lt;/td&gt; &#xA;   &lt;td&gt;Pause menu/abort/exit (pauses only singleplayer game)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;R&lt;/td&gt; &#xA;   &lt;td&gt;Enable/disable full range view&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;+&lt;/td&gt; &#xA;   &lt;td&gt;Increase view range&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Decrease view range&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;K&lt;/td&gt; &#xA;   &lt;td&gt;Enable/disable fly mode (needs fly privilege)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;P&lt;/td&gt; &#xA;   &lt;td&gt;Enable/disable pitch move mode&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;J&lt;/td&gt; &#xA;   &lt;td&gt;Enable/disable fast mode (needs fast privilege)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;H&lt;/td&gt; &#xA;   &lt;td&gt;Enable/disable noclip mode (needs noclip privilege)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;E&lt;/td&gt; &#xA;   &lt;td&gt;Aux1 (Move fast in fast mode. Games may add special features)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C&lt;/td&gt; &#xA;   &lt;td&gt;Cycle through camera modes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;V&lt;/td&gt; &#xA;   &lt;td&gt;Cycle through minimap modes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shift + V&lt;/td&gt; &#xA;   &lt;td&gt;Change minimap orientation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F1&lt;/td&gt; &#xA;   &lt;td&gt;Hide/show HUD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F2&lt;/td&gt; &#xA;   &lt;td&gt;Hide/show chat&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F3&lt;/td&gt; &#xA;   &lt;td&gt;Disable/enable fog&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F4&lt;/td&gt; &#xA;   &lt;td&gt;Disable/enable camera update (Mapblocks are not updated anymore when disabled, disabled in release builds)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F5&lt;/td&gt; &#xA;   &lt;td&gt;Cycle through debug information screens&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F6&lt;/td&gt; &#xA;   &lt;td&gt;Cycle through profiler info screens&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F10&lt;/td&gt; &#xA;   &lt;td&gt;Show/hide console&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F12&lt;/td&gt; &#xA;   &lt;td&gt;Take screenshot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Paths&lt;/h2&gt; &#xA;&lt;p&gt;Locations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;bin&lt;/code&gt; - Compiled binaries&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;share&lt;/code&gt; - Distributed read-only data&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;user&lt;/code&gt; - User-created modifiable data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Where each location is on each platform:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows .zip / RUN_IN_PLACE source: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;bin&lt;/code&gt; = &lt;code&gt;bin&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;share&lt;/code&gt; = &lt;code&gt;.&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;user&lt;/code&gt; = &lt;code&gt;.&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Windows installed: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;bin&lt;/code&gt; = &lt;code&gt;C:\Program Files\Minetest\bin (Depends on the install location)&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;share&lt;/code&gt; = &lt;code&gt;C:\Program Files\Minetest (Depends on the install location)&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;user&lt;/code&gt; = &lt;code&gt;%APPDATA%\Minetest&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Linux installed: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;bin&lt;/code&gt; = &lt;code&gt;/usr/bin&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;share&lt;/code&gt; = &lt;code&gt;/usr/share/minetest&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;user&lt;/code&gt; = &lt;code&gt;~/.minetest&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;macOS: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;bin&lt;/code&gt; = &lt;code&gt;Contents/MacOS&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;share&lt;/code&gt; = &lt;code&gt;Contents/Resources&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;user&lt;/code&gt; = &lt;code&gt;Contents/User OR ~/Library/Application Support/minetest&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Worlds can be found as separate folders in: &lt;code&gt;user/worlds/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Configuration file&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Default location: &lt;code&gt;user/minetest.conf&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;This file is created by closing Minetest for the first time.&lt;/li&gt; &#xA; &lt;li&gt;A specific file can be specified on the command line: &lt;code&gt;--config &amp;lt;path-to-file&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;A run-in-place build will look for the configuration file in &lt;code&gt;location_of_exe/../minetest.conf&lt;/code&gt; and also &lt;code&gt;location_of_exe/../../minetest.conf&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Command-line options&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use &lt;code&gt;--help&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compiling&lt;/h2&gt; &#xA;&lt;h3&gt;Compiling on GNU/Linux&lt;/h3&gt; &#xA;&lt;h4&gt;Dependencies&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Dependency&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Commentary&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GCC&lt;/td&gt; &#xA;   &lt;td&gt;5.1+&lt;/td&gt; &#xA;   &lt;td&gt;or Clang 3.5+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CMake&lt;/td&gt; &#xA;   &lt;td&gt;3.5+&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IrrlichtMt&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Custom version of Irrlicht, see &lt;a href=&#34;https://github.com/minetest/irrlicht&#34;&gt;https://github.com/minetest/irrlicht&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Freetype&lt;/td&gt; &#xA;   &lt;td&gt;2.0+&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SQLite3&lt;/td&gt; &#xA;   &lt;td&gt;3+&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Zstd&lt;/td&gt; &#xA;   &lt;td&gt;1.0+&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LuaJIT&lt;/td&gt; &#xA;   &lt;td&gt;2.0+&lt;/td&gt; &#xA;   &lt;td&gt;Bundled Lua 5.1 is used if not present&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GMP&lt;/td&gt; &#xA;   &lt;td&gt;5.0.0+&lt;/td&gt; &#xA;   &lt;td&gt;Bundled mini-GMP is used if not present&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JsonCPP&lt;/td&gt; &#xA;   &lt;td&gt;1.0.0+&lt;/td&gt; &#xA;   &lt;td&gt;Bundled JsonCPP is used if not present&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For Debian/Ubuntu users:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install g++ make libc6-dev cmake libpng-dev libjpeg-dev libxxf86vm-dev libgl1-mesa-dev libsqlite3-dev libogg-dev libvorbis-dev libopenal-dev libcurl4-gnutls-dev libfreetype6-dev zlib1g-dev libgmp-dev libjsoncpp-dev libzstd-dev libluajit-5.1-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Fedora users:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo dnf install make automake gcc gcc-c++ kernel-devel cmake libcurl-devel openal-soft-devel libvorbis-devel libXxf86vm-devel libogg-devel freetype-devel mesa-libGL-devel zlib-devel jsoncpp-devel gmp-devel sqlite-devel luajit-devel leveldb-devel ncurses-devel spatialindex-devel libzstd-devel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Arch users:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo pacman -S base-devel libcurl-gnutls cmake libxxf86vm libpng sqlite libogg libvorbis openal freetype2 jsoncpp gmp luajit leveldb ncurses zstd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Alpine users:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apk add build-base cmake libpng-dev jpeg-dev libxxf86vm-dev mesa-dev sqlite-dev libogg-dev libvorbis-dev openal-soft-dev curl-dev freetype-dev zlib-dev gmp-dev jsoncpp-dev luajit-dev zstd-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Download&lt;/h4&gt; &#xA;&lt;p&gt;You can install Git for easily keeping your copy up to date. If you don’t want Git, read below on how to get the source without Git. This is an example for installing Git on Debian/Ubuntu:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Fedora users:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo dnf install git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Download source (this is the URL to the latest of source repository, which might not work at all times) using Git:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --depth 1 https://github.com/minetest/minetest.git&#xA;cd minetest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Download minetest_game (otherwise only the &#34;Development Test&#34; game is available) using Git:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --depth 1 https://github.com/minetest/minetest_game.git games/minetest_game&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Download IrrlichtMt to &lt;code&gt;lib/irrlichtmt&lt;/code&gt;, it will be used to satisfy the IrrlichtMt dependency that way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --depth 1 https://github.com/minetest/irrlicht.git lib/irrlichtmt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Download source, without using Git:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget https://github.com/minetest/minetest/archive/master.tar.gz&#xA;tar xf master.tar.gz&#xA;cd minetest-master&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Download minetest_game, without using Git:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd games/&#xA;wget https://github.com/minetest/minetest_game/archive/master.tar.gz&#xA;tar xf master.tar.gz&#xA;mv minetest_game-master minetest_game&#xA;cd ..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Download IrrlichtMt, without using Git:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd lib/&#xA;wget https://github.com/minetest/irrlicht/archive/master.tar.gz&#xA;tar xf master.tar.gz&#xA;mv irrlicht-master irrlichtmt&#xA;cd ..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Build&lt;/h4&gt; &#xA;&lt;p&gt;Build a version that runs directly from the source directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cmake . -DRUN_IN_PLACE=TRUE&#xA;make -j$(nproc)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./bin/minetest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Use &lt;code&gt;cmake . -LH&lt;/code&gt; to see all CMake options and their current state.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you want to install it system-wide (or are making a distribution package), you will want to use &lt;code&gt;-DRUN_IN_PLACE=FALSE&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can build a bare server by specifying &lt;code&gt;-DBUILD_SERVER=TRUE&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can disable the client build by specifying &lt;code&gt;-DBUILD_CLIENT=FALSE&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can select between Release and Debug build by &lt;code&gt;-DCMAKE_BUILD_TYPE=&amp;lt;Debug or Release&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Debug build is slower, but gives much more useful output in a debugger.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you build a bare server you don&#39;t need to compile IrrlichtMt, just the headers suffice.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In that case use &lt;code&gt;-DIRRLICHT_INCLUDE_DIR=/some/where/irrlichtmt/include&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Minetest will use the IrrlichtMt package that is found first, given by the following order:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Specified &lt;code&gt;IRRLICHTMT_BUILD_DIR&lt;/code&gt; CMake variable&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;${PROJECT_SOURCE_DIR}/lib/irrlichtmt&lt;/code&gt; (if existent)&lt;/li&gt; &#xA;   &lt;li&gt;Installation of IrrlichtMt in the system-specific library paths&lt;/li&gt; &#xA;   &lt;li&gt;For server builds with disabled &lt;code&gt;BUILD_CLIENT&lt;/code&gt; variable, the headers from &lt;code&gt;IRRLICHT_INCLUDE_DIR&lt;/code&gt; will be used.&lt;/li&gt; &#xA;  &lt;/ol&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;NOTE: Changing the IrrlichtMt build directory (includes system installs) requires regenerating the CMake cache (&lt;code&gt;rm CMakeCache.txt&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;CMake options&lt;/h3&gt; &#xA;&lt;p&gt;General options and their default values:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;BUILD_CLIENT=TRUE          - Build Minetest client&#xA;BUILD_SERVER=FALSE         - Build Minetest server&#xA;BUILD_UNITTESTS=TRUE       - Build unittest sources&#xA;BUILD_BENCHMARKS=FALSE     - Build benchmark sources&#xA;CMAKE_BUILD_TYPE=Release   - Type of build (Release vs. Debug)&#xA;    Release                - Release build&#xA;    Debug                  - Debug build&#xA;    SemiDebug              - Partially optimized debug build&#xA;    RelWithDebInfo         - Release build with debug information&#xA;    MinSizeRel             - Release build with -Os passed to compiler to make executable as small as possible&#xA;ENABLE_CURL=ON             - Build with cURL; Enables use of online mod repo, public serverlist and remote media fetching via http&#xA;ENABLE_CURSES=ON           - Build with (n)curses; Enables a server side terminal (command line option: --terminal)&#xA;ENABLE_GETTEXT=ON          - Build with Gettext; Allows using translations&#xA;ENABLE_GLES=OFF            - Enable extra support code for OpenGL ES (requires support by IrrlichtMt)&#xA;ENABLE_LEVELDB=ON          - Build with LevelDB; Enables use of LevelDB map backend&#xA;ENABLE_POSTGRESQL=ON       - Build with libpq; Enables use of PostgreSQL map backend (PostgreSQL 9.5 or greater recommended)&#xA;ENABLE_REDIS=ON            - Build with libhiredis; Enables use of Redis map backend&#xA;ENABLE_SPATIAL=ON          - Build with LibSpatial; Speeds up AreaStores&#xA;ENABLE_SOUND=ON            - Build with OpenAL, libogg &amp;amp; libvorbis; in-game sounds&#xA;ENABLE_LUAJIT=ON           - Build with LuaJIT (much faster than non-JIT Lua)&#xA;ENABLE_PROMETHEUS=OFF      - Build with Prometheus metrics exporter (listens on tcp/30000 by default)&#xA;ENABLE_SYSTEM_GMP=ON       - Use GMP from system (much faster than bundled mini-gmp)&#xA;ENABLE_SYSTEM_JSONCPP=ON   - Use JsonCPP from system&#xA;RUN_IN_PLACE=FALSE         - Create a portable install (worlds, settings etc. in current directory)&#xA;USE_GPROF=FALSE            - Enable profiling using GProf&#xA;VERSION_EXTRA=             - Text to append to version (e.g. VERSION_EXTRA=foobar -&amp;gt; Minetest 0.4.9-foobar)&#xA;ENABLE_TOUCH=FALSE         - Enable Touchscreen support (requires support by IrrlichtMt)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Library specific options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;CURL_DLL                        - Only if building with cURL on Windows; path to libcurl.dll&#xA;CURL_INCLUDE_DIR                - Only if building with cURL; directory where curl.h is located&#xA;CURL_LIBRARY                    - Only if building with cURL; path to libcurl.a/libcurl.so/libcurl.lib&#xA;EGL_INCLUDE_DIR                 - Only if building with GLES; directory that contains egl.h&#xA;EGL_LIBRARY                     - Only if building with GLES; path to libEGL.a/libEGL.so&#xA;EXTRA_DLL                       - Only on Windows; optional paths to additional DLLs that should be packaged&#xA;FREETYPE_INCLUDE_DIR_freetype2  - Directory that contains files such as ftimage.h&#xA;FREETYPE_INCLUDE_DIR_ft2build   - Directory that contains ft2build.h&#xA;FREETYPE_LIBRARY                - Path to libfreetype.a/libfreetype.so/freetype.lib&#xA;FREETYPE_DLL                    - Only on Windows; path to libfreetype-6.dll&#xA;GETTEXT_DLL                     - Only when building with gettext on Windows; paths to libintl + libiconv DLLs&#xA;GETTEXT_INCLUDE_DIR             - Only when building with gettext; directory that contains iconv.h&#xA;GETTEXT_LIBRARY                 - Only when building with gettext on Windows; path to libintl.dll.a&#xA;GETTEXT_MSGFMT                  - Only when building with gettext; path to msgfmt/msgfmt.exe&#xA;IRRLICHT_DLL                    - Only on Windows; path to IrrlichtMt.dll&#xA;IRRLICHT_INCLUDE_DIR            - Directory that contains IrrCompileConfig.h (usable for server build only)&#xA;LEVELDB_INCLUDE_DIR             - Only when building with LevelDB; directory that contains db.h&#xA;LEVELDB_LIBRARY                 - Only when building with LevelDB; path to libleveldb.a/libleveldb.so/libleveldb.dll.a&#xA;LEVELDB_DLL                     - Only when building with LevelDB on Windows; path to libleveldb.dll&#xA;PostgreSQL_INCLUDE_DIR          - Only when building with PostgreSQL; directory that contains libpq-fe.h&#xA;PostgreSQL_LIBRARY              - Only when building with PostgreSQL; path to libpq.a/libpq.so/libpq.lib&#xA;REDIS_INCLUDE_DIR               - Only when building with Redis; directory that contains hiredis.h&#xA;REDIS_LIBRARY                   - Only when building with Redis; path to libhiredis.a/libhiredis.so&#xA;SPATIAL_INCLUDE_DIR             - Only when building with LibSpatial; directory that contains spatialindex/SpatialIndex.h&#xA;SPATIAL_LIBRARY                 - Only when building with LibSpatial; path to libspatialindex_c.so/spatialindex-32.lib&#xA;LUA_INCLUDE_DIR                 - Only if you want to use LuaJIT; directory where luajit.h is located&#xA;LUA_LIBRARY                     - Only if you want to use LuaJIT; path to libluajit.a/libluajit.so&#xA;OGG_DLL                         - Only if building with sound on Windows; path to libogg.dll&#xA;OGG_INCLUDE_DIR                 - Only if building with sound; directory that contains an ogg directory which contains ogg.h&#xA;OGG_LIBRARY                     - Only if building with sound; path to libogg.a/libogg.so/libogg.dll.a&#xA;OPENAL_DLL                      - Only if building with sound on Windows; path to OpenAL32.dll&#xA;OPENAL_INCLUDE_DIR              - Only if building with sound; directory where al.h is located&#xA;OPENAL_LIBRARY                  - Only if building with sound; path to libopenal.a/libopenal.so/OpenAL32.lib&#xA;SQLITE3_INCLUDE_DIR             - Directory that contains sqlite3.h&#xA;SQLITE3_LIBRARY                 - Path to libsqlite3.a/libsqlite3.so/sqlite3.lib&#xA;VORBISFILE_LIBRARY              - Only if building with sound; path to libvorbisfile.a/libvorbisfile.so/libvorbisfile.dll.a&#xA;VORBIS_DLL                      - Only if building with sound on Windows; paths to vorbis DLLs&#xA;VORBIS_INCLUDE_DIR              - Only if building with sound; directory that contains a directory vorbis with vorbisenc.h inside&#xA;VORBIS_LIBRARY                  - Only if building with sound; path to libvorbis.a/libvorbis.so/libvorbis.dll.a&#xA;ZLIB_DLL                        - Only on Windows; path to zlib1.dll&#xA;ZLIB_INCLUDE_DIR                - Directory that contains zlib.h&#xA;ZLIB_LIBRARY                    - Path to libz.a/libz.so/zlib.lib&#xA;ZSTD_DLL                        - Only on Windows; path to libzstd.dll&#xA;ZSTD_INCLUDE_DIR                - Directory that contains zstd.h&#xA;ZSTD_LIBRARY                    - Path to libzstd.a/libzstd.so/ztd.lib&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Compiling on Windows using MSVC&lt;/h3&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://visualstudio.microsoft.com&#34;&gt;Visual Studio 2015 or newer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cmake.org/download/&#34;&gt;CMake&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/vcpkg&#34;&gt;vcpkg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Compiling and installing the dependencies&lt;/h3&gt; &#xA;&lt;p&gt;It is highly recommended to use vcpkg as package manager.&lt;/p&gt; &#xA;&lt;p&gt;After you successfully built vcpkg you can easily install the required libraries:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;vcpkg install zlib zstd curl[winssl] openal-soft libvorbis libogg libjpeg-turbo sqlite3 freetype luajit gmp jsoncpp opengl-registry --triplet x64-windows&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Don&#39;t forget about IrrlichtMt.&lt;/strong&gt; The easiest way is to clone it to &lt;code&gt;lib/irrlichtmt&lt;/code&gt; as described in the Linux section.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;curl&lt;/code&gt; is optional, but required to read the serverlist, &lt;code&gt;curl[winssl]&lt;/code&gt; is required to use the content store.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;openal-soft&lt;/code&gt;, &lt;code&gt;libvorbis&lt;/code&gt; and &lt;code&gt;libogg&lt;/code&gt; are optional, but required to use sound.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;luajit&lt;/code&gt; is optional, it replaces the integrated Lua interpreter with a faster just-in-time interpreter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gmp&lt;/code&gt; and &lt;code&gt;jsoncpp&lt;/code&gt; are optional, otherwise the bundled versions will be compiled&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are other optional libraries, but they are not tested if they can build and link correctly.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;--triplet&lt;/code&gt; to specify the target triplet, e.g. &lt;code&gt;x64-windows&lt;/code&gt; or &lt;code&gt;x86-windows&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Compile Minetest&lt;/h3&gt; &#xA;&lt;h4&gt;a) Using the vcpkg toolchain and CMake GUI&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Start up the CMake GUI&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;strong&gt;Browse Source...&lt;/strong&gt; and select DIR/minetest&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;strong&gt;Browse Build...&lt;/strong&gt; and select DIR/minetest-build&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;strong&gt;Configure&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Choose the right visual Studio version and target platform. It has to match the version of the installed dependencies&lt;/li&gt; &#xA; &lt;li&gt;Choose &lt;strong&gt;Specify toolchain file for cross-compiling&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Next&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Select the vcpkg toolchain file e.g. &lt;code&gt;D:/vcpkg/scripts/buildsystems/vcpkg.cmake&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click Finish&lt;/li&gt; &#xA; &lt;li&gt;Wait until cmake have generated the cash file&lt;/li&gt; &#xA; &lt;li&gt;If there are any errors, solve them and hit &lt;strong&gt;Configure&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Generate&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;strong&gt;Open Project&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Compile Minetest inside Visual studio.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;b) Using the vcpkg toolchain and the commandline&lt;/h4&gt; &#xA;&lt;p&gt;Run the following script in PowerShell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;cmake . -G&#34;Visual Studio 15 2017 Win64&#34; -DCMAKE_TOOLCHAIN_FILE=D:/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_GETTEXT=OFF -DENABLE_CURSES=OFF&#xA;cmake --build . --config Release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure that the right compiler is selected and the path to the vcpkg toolchain is correct.&lt;/p&gt; &#xA;&lt;h3&gt;Windows Installer using WiX Toolset&lt;/h3&gt; &#xA;&lt;p&gt;Requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://visualstudio.microsoft.com/&#34;&gt;Visual Studio 2017&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wixtoolset.org/&#34;&gt;WiX Toolset&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In the Visual Studio 2017 Installer select &lt;strong&gt;Optional Features -&amp;gt; WiX Toolset&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Build the binaries as described above, but make sure you unselect &lt;code&gt;RUN_IN_PLACE&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Open the generated project file with Visual Studio. Right-click &lt;strong&gt;Package&lt;/strong&gt; and choose &lt;strong&gt;Generate&lt;/strong&gt;. It may take some minutes to generate the installer.&lt;/p&gt; &#xA;&lt;h3&gt;Compiling on MacOS&lt;/h3&gt; &#xA;&lt;h4&gt;Requirements&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Install dependencies with homebrew:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install cmake freetype gettext gmp hiredis jpeg jsoncpp leveldb libogg libpng libvorbis luajit zstd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Download&lt;/h4&gt; &#xA;&lt;p&gt;Download source (this is the URL to the latest of source repository, which might not work at all times) using Git:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --depth 1 https://github.com/minetest/minetest.git&#xA;cd minetest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Download minetest_game (otherwise only the &#34;Development Test&#34; game is available) using Git:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --depth 1 https://github.com/minetest/minetest_game.git games/minetest_game&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Download Minetest&#39;s fork of Irrlicht:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --depth 1 https://github.com/minetest/irrlicht.git lib/irrlichtmt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Build&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir build&#xA;cd build&#xA;&#xA;cmake .. \&#xA;    -DCMAKE_OSX_DEPLOYMENT_TARGET=10.14 \&#xA;    -DCMAKE_FIND_FRAMEWORK=LAST \&#xA;    -DCMAKE_INSTALL_PREFIX=../build/macos/ \&#xA;    -DRUN_IN_PLACE=FALSE -DENABLE_GETTEXT=TRUE&#xA;&#xA;make -j$(sysctl -n hw.logicalcpu)&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Run&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;open ./build/macos/minetest.app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;p&gt;We provide Minetest server Docker images using the GitLab mirror registry.&lt;/p&gt; &#xA;&lt;p&gt;Images are built on each commit and available using the following tag scheme:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;registry.gitlab.com/minetest/minetest/server:latest&lt;/code&gt; (latest build)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;registry.gitlab.com/minetest/minetest/server:&amp;lt;branch/tag&amp;gt;&lt;/code&gt; (current branch or current tag)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;registry.gitlab.com/minetest/minetest/server:&amp;lt;commit-id&amp;gt;&lt;/code&gt; (current commit id)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want to test it on a Docker server you can easily run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo docker run registry.gitlab.com/minetest/minetest/server:&amp;lt;docker tag&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use it in a production environment you should use volumes bound to the Docker host to persist data and modify the configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo docker create -v /home/minetest/data/:/var/lib/minetest/ -v /home/minetest/conf/:/etc/minetest/ registry.gitlab.com/minetest/minetest/server:master&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Data will be written to &lt;code&gt;/home/minetest/data&lt;/code&gt; on the host, and configuration will be read from &lt;code&gt;/home/minetest/conf/minetest.conf&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you don&#39;t understand the previous commands please read the official Docker documentation before use.&lt;/p&gt; &#xA;&lt;p&gt;You can also host your Minetest server inside a Kubernetes cluster. See our example implementation in &lt;a href=&#34;https://raw.githubusercontent.com/minetest/minetest/master/misc/kubernetes.yml&#34;&gt;&lt;code&gt;misc/kubernetes.yml&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Version scheme&lt;/h2&gt; &#xA;&lt;p&gt;We use &lt;code&gt;major.minor.patch&lt;/code&gt; since 5.0.0-dev. Prior to that we used &lt;code&gt;0.major.minor&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Major is incremented when the release contains breaking changes, all other numbers are set to 0.&lt;/li&gt; &#xA; &lt;li&gt;Minor is incremented when the release contains new non-breaking features, patch is set to 0.&lt;/li&gt; &#xA; &lt;li&gt;Patch is incremented when the release only contains bugfixes and very minor/trivial features considered necessary.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Since 5.0.0-dev and 0.4.17-dev, the dev notation refers to the next release, i.e.: 5.0.0-dev is the development version leading to 5.0.0. Prior to that we used &lt;code&gt;previous_version-dev&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>BYVoid/OpenCC</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/BYVoid/OpenCC</id>
    <link href="https://github.com/BYVoid/OpenCC" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Conversion between Traditional and Simplified Chinese&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Open Chinese Convert 開放中文轉換&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/BYVoid/OpenCC&#34;&gt;&lt;img src=&#34;https://img.shields.io/travis/BYVoid/OpenCC.svg?sanitize=true&#34; alt=&#34;Travis&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/Carbo/OpenCC&#34;&gt;&lt;img src=&#34;https://img.shields.io/appveyor/ci/Carbo/OpenCC.svg?sanitize=true&#34; alt=&#34;AppVeyor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/BYVoid/OpenCC/actions/workflows/cmake.yml&#34;&gt;&lt;img src=&#34;https://github.com/BYVoid/OpenCC/actions/workflows/cmake.yml/badge.svg?sanitize=true&#34; alt=&#34;C/C++ CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/BYVoid/OpenCC/actions/workflows/nodejs.yml&#34;&gt;&lt;img src=&#34;https://github.com/BYVoid/OpenCC/actions/workflows/nodejs.yml/badge.svg?sanitize=true&#34; alt=&#34;Node.js CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/BYVoid/OpenCC/actions/workflows/python.yml&#34;&gt;&lt;img src=&#34;https://github.com/BYVoid/OpenCC/actions/workflows/python.yml/badge.svg?sanitize=true&#34; alt=&#34;Python CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction 介紹&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://opencc.byvoid.com/img/opencc.png&#34; alt=&#34;OpenCC&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Open Chinese Convert (OpenCC, 開放中文轉換) is an opensource project for conversions between Traditional Chinese, Simplified Chinese and Japanese Kanji (Shinjitai). It supports character-level and phrase-level conversion, character variant conversion and regional idioms among Mainland China, Taiwan and Hong Kong. This is not translation tool between Mandarin and Cantonese, etc.&lt;/p&gt; &#xA;&lt;p&gt;中文簡繁轉換開源項目，支持詞彙級別的轉換、異體字轉換和地區習慣用詞轉換（中國大陸、臺灣、香港、日本新字體）。不提供普通話與粵語的轉換。&lt;/p&gt; &#xA;&lt;p&gt;Discussion (Telegram): &lt;a href=&#34;https://t.me/open_chinese_convert&#34;&gt;https://t.me/open_chinese_convert&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Features 特點&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;嚴格區分「一簡對多繁」和「一簡對多異」。&lt;/li&gt; &#xA; &lt;li&gt;完全兼容異體字，可以實現動態替換。&lt;/li&gt; &#xA; &lt;li&gt;嚴格審校一簡對多繁詞條，原則爲「能分則不合」。&lt;/li&gt; &#xA; &lt;li&gt;支持中國大陸、臺灣、香港異體字和地區習慣用詞轉換，如「裏」「裡」、「鼠標」「滑鼠」。&lt;/li&gt; &#xA; &lt;li&gt;詞庫和函數庫完全分離，可以自由修改、導入、擴展。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation 安裝&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/BYVoid/OpenCC/wiki/Download&#34;&gt;Download&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage 使用&lt;/h2&gt; &#xA;&lt;h3&gt;Online demo 線上轉換展示&lt;/h3&gt; &#xA;&lt;p&gt;Warning: &lt;strong&gt;This is NOT an API.&lt;/strong&gt; You will be banned if you make calls programmatically.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencc.byvoid.com/&#34;&gt;https://opencc.byvoid.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Node.js&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/opencc&#34;&gt;npm&lt;/a&gt; &lt;code&gt;npm install opencc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;JavaScript&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;const OpenCC = require(&#39;opencc&#39;);&#xA;const converter = new OpenCC(&#39;s2t.json&#39;);&#xA;converter.convertPromise(&#34;汉字&#34;).then(converted =&amp;gt; {&#xA;  console.log(converted);  // 漢字&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;TypeScript&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;import { OpenCC } from &#39;opencc&#39;;&#xA;async function main() {&#xA;  const converter: OpenCC = new OpenCC(&#39;s2t.json&#39;);&#xA;  const result: string = await converter.convertPromise(&#39;汉字&#39;);&#xA;  console.log(result);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/BYVoid/OpenCC/raw/master/node/demo.js&#34;&gt;demo.js&lt;/a&gt; and &lt;a href=&#34;https://github.com/BYVoid/OpenCC/raw/master/node/ts-demo.ts&#34;&gt;ts-demo.ts&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Python&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.org/project/OpenCC/&#34;&gt;PyPI&lt;/a&gt; &lt;code&gt;pip install opencc&lt;/code&gt; (Windows, Linux, Mac)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import opencc&#xA;converter = opencc.OpenCC(&#39;s2t.json&#39;)&#xA;converter.convert(&#39;汉字&#39;)  # 漢字&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;C++&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#include &#34;opencc.h&#34;&#xA;&#xA;int main() {&#xA;  const SimpleConverter converter(&#34;s2t.json&#34;);&#xA;  converter.Convert(&#34;汉字&#34;);  // 漢字&#xA;  return 0;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;C&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;#include &#34;opencc.h&#34;&#xA;&#xA;int main() {&#xA;  opencc_t opencc = opencc_open(&#34;s2t.json&#34;);&#xA;  const char* input = &#34;汉字&#34;;&#xA;  char* converted = opencc_convert_utf8(opencc, input, strlen(input));  // 漢字&#xA;  opencc_convert_utf8_free(converted);&#xA;  opencc_close(opencc);&#xA;  return 0;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Document 文檔: &lt;a href=&#34;https://byvoid.github.io/OpenCC/&#34;&gt;https://byvoid.github.io/OpenCC/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Command Line&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;opencc --help&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;opencc_dict --help&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;opencc_phrase_extract --help&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Others (Unofficial)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Swift (iOS): &lt;a href=&#34;https://github.com/XQS6LB3A/SwiftyOpenCC&#34;&gt;SwiftyOpenCC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;iOSOpenCC (pod): &lt;a href=&#34;https://github.com/swiftdo/OpenCC&#34;&gt;iOSOpenCC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Java: &lt;a href=&#34;https://github.com/houbb/opencc4j&#34;&gt;opencc4j&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Android: &lt;a href=&#34;https://github.com/qichuan/android-opencc&#34;&gt;android-opencc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;PHP: &lt;a href=&#34;https://github.com/nauxliu/opencc4php&#34;&gt;opencc4php&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pure JavaScript: &lt;a href=&#34;https://github.com/nk2028/opencc-js&#34;&gt;opencc-js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WebAssembly: &lt;a href=&#34;https://github.com/oyyd/wasm-opencc&#34;&gt;wasm-opencc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Browser Extension: &lt;a href=&#34;https://github.com/tnychn/opencc-extension&#34;&gt;opencc-extension&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Go (Pure): &lt;a href=&#34;https://github.com/longbridgeapp/opencc&#34;&gt;OpenCC for Go&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Configurations 配置文件&lt;/h3&gt; &#xA;&lt;h4&gt;預設配置文件&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;s2t.json&lt;/code&gt; Simplified Chinese to Traditional Chinese 簡體到繁體&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;t2s.json&lt;/code&gt; Traditional Chinese to Simplified Chinese 繁體到簡體&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;s2tw.json&lt;/code&gt; Simplified Chinese to Traditional Chinese (Taiwan Standard) 簡體到臺灣正體&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tw2s.json&lt;/code&gt; Traditional Chinese (Taiwan Standard) to Simplified Chinese 臺灣正體到簡體&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;s2hk.json&lt;/code&gt; Simplified Chinese to Traditional Chinese (Hong Kong variant) 簡體到香港繁體&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hk2s.json&lt;/code&gt; Traditional Chinese (Hong Kong variant) to Simplified Chinese 香港繁體到簡體&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;s2twp.json&lt;/code&gt; Simplified Chinese to Traditional Chinese (Taiwan Standard) with Taiwanese idiom 簡體到繁體（臺灣正體標準）並轉換爲臺灣常用詞彙&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tw2sp.json&lt;/code&gt; Traditional Chinese (Taiwan Standard) to Simplified Chinese with Mainland Chinese idiom 繁體（臺灣正體標準）到簡體並轉換爲中國大陸常用詞彙&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;t2tw.json&lt;/code&gt; Traditional Chinese (OpenCC Standard) to Taiwan Standard 繁體（OpenCC 標準）到臺灣正體&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hk2t.json&lt;/code&gt; Traditional Chinese (Hong Kong variant) to Traditional Chinese 香港繁體到繁體（OpenCC 標準）&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;t2hk.json&lt;/code&gt; Traditional Chinese (OpenCC Standard) to Hong Kong variant 繁體（OpenCC 標準）到香港繁體&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;t2jp.json&lt;/code&gt; Traditional Chinese Characters (Kyūjitai) to New Japanese Kanji (Shinjitai) 繁體（OpenCC 標準，舊字體）到日文新字體&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;jp2t.json&lt;/code&gt; New Japanese Kanji (Shinjitai) to Traditional Chinese Characters (Kyūjitai) 日文新字體到繁體（OpenCC 標準，舊字體）&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tw2t.json&lt;/code&gt; Traditional Chinese (Taiwan standard) to Traditional Chinese 臺灣正體到繁體（OpenCC 標準）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build 編譯&lt;/h2&gt; &#xA;&lt;h3&gt;Build with CMake&lt;/h3&gt; &#xA;&lt;h4&gt;Linux &amp;amp; Mac OS X&lt;/h4&gt; &#xA;&lt;p&gt;g++ 4.6+ or clang 3.2+ is required.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows Visual Studio:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;build.cmd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Test 測試&lt;/h3&gt; &#xA;&lt;h4&gt;Linux &amp;amp; Mac OS X&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;make test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows Visual Studio:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;test.cmd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Benchmark 基準測試&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;make benchmark&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example results (from Github CI):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1: ------------------------------------------------------------------&#xA;1: Benchmark                        Time             CPU   Iterations&#xA;1: ------------------------------------------------------------------&#xA;1: BM_Initialization/hk2s        1.56 ms         1.56 ms          442&#xA;1: BM_Initialization/hk2t       0.144 ms        0.144 ms         4878&#xA;1: BM_Initialization/jp2t       0.260 ms        0.260 ms         2604&#xA;1: BM_Initialization/s2hk        23.8 ms         23.8 ms           29&#xA;1: BM_Initialization/s2t         25.6 ms         25.6 ms           28&#xA;1: BM_Initialization/s2tw        24.0 ms         23.9 ms           30&#xA;1: BM_Initialization/s2twp       24.6 ms         24.6 ms           28&#xA;1: BM_Initialization/t2hk       0.052 ms        0.052 ms        12897&#xA;1: BM_Initialization/t2jp       0.141 ms        0.141 ms         5012&#xA;1: BM_Initialization/t2s         1.30 ms         1.30 ms          540&#xA;1: BM_Initialization/tw2s        1.39 ms         1.39 ms          529&#xA;1: BM_Initialization/tw2sp       1.69 ms         1.69 ms          426&#xA;1: BM_Initialization/tw2t       0.089 ms        0.089 ms         7707&#xA;1: BM_Convert2M                   582 ms          582 ms            1&#xA;1: BM_Convert/100                1.07 ms         1.07 ms          636&#xA;1: BM_Convert/1000               11.0 ms         11.0 ms           67&#xA;1: BM_Convert/10000               113 ms          113 ms            6&#xA;1: BM_Convert/100000             1176 ms         1176 ms            1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Projects using OpenCC 使用 OpenCC 的項目&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ibus/ibus-pinyin&#34;&gt;ibus-pinyin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fcitx/fcitx&#34;&gt;fcitx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rime.im/&#34;&gt;rimeime&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://code.google.com/p/libgooglepinyin/&#34;&gt;libgooglepinyin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/libpinyin/ibus-libpinyin&#34;&gt;ibus-libpinyin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/amowu/alfred-chinese-converter&#34;&gt;alfred-chinese-converter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/goldendict/goldendict&#34;&gt;GoldenDict&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License 許可協議&lt;/h2&gt; &#xA;&lt;p&gt;Apache License 2.0&lt;/p&gt; &#xA;&lt;h2&gt;Third Party Library 第三方庫&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/s-yata/darts-clone&#34;&gt;darts-clone&lt;/a&gt; BSD License&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/s-yata/marisa-trie&#34;&gt;marisa-trie&lt;/a&gt; BSD License&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://tclap.sourceforge.net/&#34;&gt;tclap&lt;/a&gt; MIT License&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/rapidjson&#34;&gt;rapidjson&lt;/a&gt; MIT License&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/googletest&#34;&gt;Google Test&lt;/a&gt; BSD License&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All these libraries are statically linked by default.&lt;/p&gt; &#xA;&lt;h2&gt;Change History 版本歷史&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BYVoid/OpenCC/raw/master/NEWS.md&#34;&gt;NEWS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Links 相關鏈接&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Introduction 詳細介紹 &lt;a href=&#34;https://github.com/BYVoid/OpenCC/wiki/%E7%B7%A3%E7%94%B1&#34;&gt;https://github.com/BYVoid/OpenCC/wiki/%E7%B7%A3%E7%94%B1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;現代漢語常用簡繁一對多字義辨析表 &lt;a href=&#34;http://ytenx.org/byohlyuk/KienxPyan&#34;&gt;http://ytenx.org/byohlyuk/KienxPyan&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors 貢獻者&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.byvoid.com/&#34;&gt;BYVoid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lotem&#34;&gt;佛振&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/phuang&#34;&gt;Peng Huang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lidaobing&#34;&gt;LI Daobing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tchaikov&#34;&gt;Kefu Chai&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://kanru.info/&#34;&gt;Kan-Ru Chen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/damage3025&#34;&gt;Ma Xiaojun&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://jjgod.org/&#34;&gt;Jiang Jiang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rueycheng&#34;&gt;Ruey-Cheng Chen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://home.mno2.org/&#34;&gt;Paul Meng&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ktslwy&#34;&gt;Lawrence Lau&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kunki&#34;&gt;瑾昀&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SyaoranHinata&#34;&gt;內木一郎&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.marguerite.su/&#34;&gt;Marguerite Su&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mscdex.net&#34;&gt;Brian White&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fqj.me/&#34;&gt;Qijiang Fan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LEOYoon-Tsaw&#34;&gt;LEOYoon-Tsaw&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stevenyao&#34;&gt;Steven Yao&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pellaeon&#34;&gt;Pellaeon Lin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stony-shixz&#34;&gt;stony&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/steelywing&#34;&gt;steelywing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lvxudong&#34;&gt;吕旭东&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wengxt&#34;&gt;Weng Xuetian&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/iwater&#34;&gt;Ma Tao&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pprkut&#34;&gt;Heinz Wiesinger&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jakwings&#34;&gt;J.W&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/amowu&#34;&gt;Amo Wu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mxgit1090&#34;&gt;Mark Tsai&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/0x1997&#34;&gt;Zhe Wang&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sgqy&#34;&gt;sgqy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qichuan&#34;&gt;Qichuan (Sean) ZHANG&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/XadillaX&#34;&gt;Flandre Scarlet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/songchenwen&#34;&gt;宋辰文&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/iwater&#34;&gt;iwater&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xpol&#34;&gt;Xpol Wan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/weihanglo&#34;&gt;Weihang Lo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pi314&#34;&gt;Cychih&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kyleskimo&#34;&gt;kyleskimo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bunhere&#34;&gt;Ryuan Choi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Prcuvu&#34;&gt;Prcuvu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TonyAble&#34;&gt;Tony Able&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yxliang01&#34;&gt;Xiao Liang&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please feel free to update this list if you have contributed OpenCC.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>WerWolv/ImHex</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/WerWolv/ImHex</id>
    <link href="https://github.com/WerWolv/ImHex" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔍 A Hex Editor for Reverse Engineers, Programmers and people who value their retinas when working at 3 AM.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://imhex.werwolv.net&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;&lt;a href=&#34;https://imhex.werwolv.net&#34;&gt;&lt;span&gt;🔍&lt;/span&gt; ImHex&lt;/a&gt;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;A Hex Editor for Reverse Engineers, Programmers and people who value their retinas when working at 3 AM.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a title=&#34;&#39;Build&#39; workflow Status&#34; href=&#34;https://github.com/WerWolv/ImHex/actions?query=workflow%3ABuild&#34;&gt;&lt;img alt=&#34;&#39;Build&#39; workflow Status&#34; src=&#34;https://img.shields.io/github/workflow/status/WerWolv/ImHex/Build?longCache=true&amp;amp;style=for-the-badge&amp;amp;label=Build&amp;amp;logoColor=fff&amp;amp;logo=GitHub%20Actions&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Discord Server&#34; href=&#34;https://discord.gg/X63jZ36xBY&#34;&gt;&lt;img alt=&#34;Discord Server&#34; src=&#34;https://img.shields.io/discord/789833418631675954?label=Discord&amp;amp;logo=Discord&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a title=&#34;Total Downloads&#34; href=&#34;https://github.com/WerWolv/ImHex/releases/latest&#34;&gt;&lt;img alt=&#34;Total Downloads&#34; src=&#34;https://img.shields.io/github/downloads/WerWolv/ImHex/total?longCache=true&amp;amp;style=for-the-badge&amp;amp;label=Downloads&amp;amp;logoColor=fff&amp;amp;logo=GitHub&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Supporting&lt;/h2&gt; &#xA;&lt;p&gt;If you like my work, please consider supporting me on GitHub Sponsors, Patreon or PayPal. Thanks a lot!&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/sponsors/WerWolv&#34;&gt;&lt;img src=&#34;https://werwolv.net/assets/github_banner.png&#34; alt=&#34;GitHub donate button&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.patreon.com/werwolv&#34;&gt;&lt;img src=&#34;https://c5.patreon.com/external/logo/become_a_patron_button.png&#34; alt=&#34;Patreon donate button&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://werwolv.net/donate&#34;&gt;&lt;img src=&#34;https://werwolv.net/assets/paypal_banner.png&#34; alt=&#34;PayPal donate button&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/10835354/139717326-8044769d-527b-4d88-8adf-2d4ecafdca1f.png&#34; alt=&#34;Hex editor, patterns and data information&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/10835354/139717323-1f8c9d52-f7eb-4f43-9f11-097ac728ed6c.png&#34; alt=&#34;Bookmarks, disassembler and data processor&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Featureful hex view &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Byte patching&lt;/li&gt; &#xA;   &lt;li&gt;Patch management&lt;/li&gt; &#xA;   &lt;li&gt;Copy bytes as feature &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Bytes&lt;/li&gt; &#xA;     &lt;li&gt;Hex string&lt;/li&gt; &#xA;     &lt;li&gt;C, C++, C#, Rust, Python, Java &amp;amp; JavaScript array&lt;/li&gt; &#xA;     &lt;li&gt;ASCII-Art hex view&lt;/li&gt; &#xA;     &lt;li&gt;HTML self-contained div&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;String and hex search&lt;/li&gt; &#xA;   &lt;li&gt;Colorful highlighting&lt;/li&gt; &#xA;   &lt;li&gt;Goto from start, end and current cursor position&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Custom C++-like pattern language for parsing highlighting a file&#39;s content &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Automatic loading based on MIME type&lt;/li&gt; &#xA;   &lt;li&gt;arrays, pointers, structs, unions, enums, bitfields, namespaces, little and big endian support, conditionals and much more!&lt;/li&gt; &#xA;   &lt;li&gt;Useful error messages, syntax highlighting and error marking&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Data importing &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Base64 files&lt;/li&gt; &#xA;   &lt;li&gt;IPS and IPS32 patches&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Data exporting &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;IPS and IPS32 patches&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Data inspector allowing interpretation of data as many different types (little and big endian)&lt;/li&gt; &#xA; &lt;li&gt;Huge file support with fast and efficient loading&lt;/li&gt; &#xA; &lt;li&gt;String search &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Copying of strings&lt;/li&gt; &#xA;   &lt;li&gt;Copying of demangled strings&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;File hashing support &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;CRC16 and CRC32 with custom initial values and polynomials&lt;/li&gt; &#xA;   &lt;li&gt;MD4, MD5&lt;/li&gt; &#xA;   &lt;li&gt;SHA-1, SHA-224, SHA-256, SHA-384, SHA-512&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Disassembler supporting many architectures (frontend for Capstone) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ARM32 (ARM, Thumb, Cortex-M, AArch32)&lt;/li&gt; &#xA;   &lt;li&gt;ARM64&lt;/li&gt; &#xA;   &lt;li&gt;MIPS (MIPS32, MIPS64, MIPS32R6, Micro)&lt;/li&gt; &#xA;   &lt;li&gt;x86 (16-bit, 32-bit, 64-bit)&lt;/li&gt; &#xA;   &lt;li&gt;PowerPC (32-bit, 64-bit)&lt;/li&gt; &#xA;   &lt;li&gt;SPARC&lt;/li&gt; &#xA;   &lt;li&gt;IBM SystemZ&lt;/li&gt; &#xA;   &lt;li&gt;xCORE&lt;/li&gt; &#xA;   &lt;li&gt;M68K&lt;/li&gt; &#xA;   &lt;li&gt;TMS320C64X&lt;/li&gt; &#xA;   &lt;li&gt;M680X&lt;/li&gt; &#xA;   &lt;li&gt;Ethereum&lt;/li&gt; &#xA;   &lt;li&gt;RISC-V&lt;/li&gt; &#xA;   &lt;li&gt;WebAssembly&lt;/li&gt; &#xA;   &lt;li&gt;MOS565XX&lt;/li&gt; &#xA;   &lt;li&gt;Berkeley Packet Filter&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Bookmarks &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Region highlighting&lt;/li&gt; &#xA;   &lt;li&gt;Comments&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Data Analyzer &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;File magic-based file parser and MIME type database&lt;/li&gt; &#xA;   &lt;li&gt;Byte distribution graph&lt;/li&gt; &#xA;   &lt;li&gt;Entropy graph&lt;/li&gt; &#xA;   &lt;li&gt;Highest and average entropy&lt;/li&gt; &#xA;   &lt;li&gt;Encrypted / Compressed file detection&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Built-in Content Store &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Download all files found in the database directly from within ImHex&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Yara Rules support &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Quickly scan a file for vulnerabilities with official yara rules&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Helpful tools &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Itanium and MSVC demangler&lt;/li&gt; &#xA;   &lt;li&gt;ASCII table&lt;/li&gt; &#xA;   &lt;li&gt;Regex replacer&lt;/li&gt; &#xA;   &lt;li&gt;Mathematical expression evaluator (Calculator)&lt;/li&gt; &#xA;   &lt;li&gt;Hexadecimal Color picker&lt;/li&gt; &#xA;   &lt;li&gt;Base converter&lt;/li&gt; &#xA;   &lt;li&gt;UNIX Permissions calculator&lt;/li&gt; &#xA;   &lt;li&gt;Anonfiles File upload tool&lt;/li&gt; &#xA;   &lt;li&gt;Wikipedia term definition finder&lt;/li&gt; &#xA;   &lt;li&gt;File utilities &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;File splitter&lt;/li&gt; &#xA;     &lt;li&gt;File combiner&lt;/li&gt; &#xA;     &lt;li&gt;File shredder&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Built-in cheat sheet for pattern language and Math evaluator&lt;/li&gt; &#xA; &lt;li&gt;Doesn&#39;t burn out your retinas when used in late-night sessions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Pattern Language&lt;/h2&gt; &#xA;&lt;p&gt;The custom C-like Pattern Language developed and used by ImHex is easy to read, understand and learn. A guide with all features of the language can be found &lt;a href=&#34;http://imhex.werwolv.net/docs&#34;&gt;on the docs page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Database&lt;/h2&gt; &#xA;&lt;p&gt;For format patterns, includable libraries magic and constant files, check out the &lt;a href=&#34;https://github.com/WerWolv/ImHex-Patterns&#34;&gt;ImHex-Patterns&lt;/a&gt; repository. Feel free to PR your own files there as well!&lt;/p&gt; &#xA;&lt;h2&gt;Plugin development&lt;/h2&gt; &#xA;&lt;p&gt;To develop plugins for ImHex, use one of the following two templates projects to get started. You then have access to the entirety of libimhex as well as the ImHex API and the Content Registry to interact with ImHex or to add new content.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/WerWolv/ImHex-Cpp-Plugin-Template&#34;&gt;C++ Plugin Template&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/WerWolv/ImHex-Rust-Plugin-Template&#34;&gt;Rust Plugin Template&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Nightly builds&lt;/h2&gt; &#xA;&lt;p&gt;Nightlies are available via GitHub Actions &lt;a href=&#34;https://github.com/WerWolv/ImHex/actions?query=workflow%3ABuild&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows • &lt;strong&gt;x86_64&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nightly.link/WerWolv/ImHex/workflows/build/master/Windows%20Installer.zip&#34;&gt;MSI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nightly.link/WerWolv/ImHex/workflows/build/master/Windows%20Portable%20ZIP.zip&#34;&gt;EXE&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;MacOS • &lt;strong&gt;x86_64&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nightly.link/WerWolv/ImHex/workflows/build/master/macOS%20DMG.zip&#34;&gt;DMG&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Linux • &lt;strong&gt;x86_64&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nightly.link/WerWolv/ImHex/workflows/build/master/Linux%20ELF.zip&#34;&gt;ELF&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nightly.link/WerWolv/ImHex/workflows/build/master/Linux%20DEB.zip&#34;&gt;DEB&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nightly.link/WerWolv/ImHex/workflows/build/master/Linux%20Flatpak.zip&#34;&gt;Flatpak&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nightly.link/WerWolv/ImHex/workflows/build/master/Linux%20AppImage.zip&#34;&gt;AppImage&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compiling&lt;/h2&gt; &#xA;&lt;p&gt;You need a C++20 compatible compiler such as GCC 10.2.0 to compile ImHex.&lt;/p&gt; &#xA;&lt;p&gt;Many dependencies are bundled into the repository using submodules so make sure to clone it using the &lt;code&gt;--recurse-submodules&lt;/code&gt; option. All dependencies that aren&#39;t bundled, can be installed using the dependency installer scripts found in the &lt;code&gt;/dist&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;For working examples&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;On Windows, ImHex is built through msys2 / mingw. To install all dependencies, open a mys2 window and run the PKGCONFIG script in the &lt;a href=&#34;https://raw.githubusercontent.com/WerWolv/ImHex/master/dist/msys2&#34;&gt;dist/msys2&lt;/a&gt; folder. After all the dependencies are installed, run the following commands to build ImHex:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mkdir build&#xA;cd build&#xA;cmake -DCMAKE_BUILD_TYPE=Release ..&#xA;make -j&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;To create a standalone zipfile on Windows, get the Python standard library (e.g. from &lt;a href=&#34;https://github.com/python/cpython/tree/master/Lib&#34;&gt;https://github.com/python/cpython/tree/master/Lib&lt;/a&gt;) and place the files and folders in &lt;code&gt;lib/python3.8&lt;/code&gt; next to your built executable. Don&#39;t forget to also copy the &lt;code&gt;libpython3.8.dll&lt;/code&gt; and &lt;code&gt;libwinpthread-1.dll&lt;/code&gt; from your mingw setup next to the executable.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Copy the files inside the &lt;code&gt;/resources/lib/python&lt;/code&gt; folder into the &lt;code&gt;lib&lt;/code&gt; folder next to your built executable.&lt;/li&gt; &#xA; &lt;li&gt;Place your magic databases in the &lt;code&gt;magic&lt;/code&gt; folder next to your built executable&lt;/li&gt; &#xA; &lt;li&gt;Place your patterns in the &lt;code&gt;pattern&lt;/code&gt; folder next to your built executable&lt;/li&gt; &#xA; &lt;li&gt;Place your include pattern files in the &lt;code&gt;include&lt;/code&gt; folder next to your built executable&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;p&gt;To build ImHex on macOS, run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew bundle --no-lock --file dist/Brewfile&#xA;mkdir build&#xA;cd build&#xA;CC=$(brew --prefix llvm)/bin/clang CXX=$(brew --prefix llvm)/bin/clang++ PKG_CONFIG_PATH=&#34;$(brew --prefix openssl)/lib/pkgconfig&#34;:&#34;$(brew --prefix)/lib/pkgconfig&#34; cmake -DCMAKE_BUILD_TYPE=Release ..&#xA;make -j&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install the ImHex executable as well as libimhex.dylib to wherever ImHex should be installed.&lt;/p&gt; &#xA;&lt;p&gt;All other files belong in &lt;code&gt;~/Library/Application Support/imhex&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Patterns: ~/Library/Application Support/imhex/patterns&#xA;Pattern Includes: ~/Library/Application Support/imhex/includes&#xA;Magic files: ~/Library/Application Support/imhex/magic&#xA;Python: ~/Library/Application Support/imhex/lib/pythonX.X&#xA;Plugins: ~/Library/Application Support/imhex/plugins&#xA;Configuration: ~/Library/Application Support/imhex/config&#xA;Resources: ~/Library/Application Support/imhex/resources&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the build fails while trying to find the macOS libraries, make sure you have XCode installed with &lt;code&gt;xcode-select --install&lt;/code&gt;. Homebrew will also help get the most recent SDK installed and configured with &lt;code&gt;brew doctor&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;p&gt;Dependency installation scripts are available for many common Linux distributions in the &lt;a href=&#34;https://raw.githubusercontent.com/WerWolv/ImHex/master/dist&#34;&gt;/dist&lt;/a&gt; folder. After all the dependencies are installed, run the following commands to build ImHex:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mkdir build&#xA;cd build&#xA;cmake -DCMAKE_BUILD_TYPE=Release ..&#xA;make -j&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Put the ImHex executable into the &lt;code&gt;/usr/bin&lt;/code&gt; folder. Put libimhex.so into the &lt;code&gt;/usr/lib&lt;/code&gt; folder. Configuration files go to &lt;code&gt;/etc/xdg/imhex&lt;/code&gt; or &lt;code&gt;~/.config/imhex&lt;/code&gt;. All other files belong in &lt;code&gt;/usr/share/imhex&lt;/code&gt; or &lt;code&gt;~/.local/share/imhex&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Patterns: /usr/share/imhex/patterns&#xA;Pattern Includes: /usr/share/imhex/includes&#xA;Magic files: /usr/share/imhex/magic&#xA;Python: /usr/share/imhex/lib/pythonX.X&#xA;Plugins: /usr/share/imhex/plugins&#xA;Configuration: /etc/xdg/imhex/config&#xA;Resources: /usr/share/imhex/resources&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All paths follow the XDG Base Directories standard, and can thus be modified with the environment variables &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt;, &lt;code&gt;XDG_CONFIG_DIRS&lt;/code&gt;, &lt;code&gt;XDG_DATA_HOME&lt;/code&gt; and &lt;code&gt;XDG_DATA_DIRS&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;h3&gt;Contributors&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Thog&#34;&gt;Mary&lt;/a&gt; for her immense help porting ImHex to MacOS and help during development&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Roblabla&#34;&gt;Roblabla&lt;/a&gt; for adding MSI Installer support to ImHex&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jam1garner&#34;&gt;jam1garner&lt;/a&gt; and &lt;a href=&#34;https://github.com/raytwo&#34;&gt;raytwo&lt;/a&gt; for their help with adding Rust support to plugins&lt;/li&gt; &#xA; &lt;li&gt;Everybody else who has reported issues on Discord or GitHub that I had great conversations with :)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Libraries&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Thanks a lot to ocornut for their amazing &lt;a href=&#34;https://github.com/ocornut/imgui&#34;&gt;Dear ImGui&lt;/a&gt; which is used for building the entire interface &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Thanks to ocornut as well for their hex editor view used as base for this project.&lt;/li&gt; &#xA;   &lt;li&gt;Thanks to BalazsJako for their incredible &lt;a href=&#34;https://github.com/BalazsJako/ImGuiColorTextEdit&#34;&gt;ImGuiColorTextEdit&lt;/a&gt; used for the pattern language syntax highlighting&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Thanks to nlohmann for their &lt;a href=&#34;https://github.com/nlohmann/json&#34;&gt;json&lt;/a&gt; library used for project files&lt;/li&gt; &#xA; &lt;li&gt;Thanks to aquynh for &lt;a href=&#34;https://github.com/aquynh/capstone&#34;&gt;capstone&lt;/a&gt; which is the base of the disassembly window&lt;/li&gt; &#xA; &lt;li&gt;Thanks to vitaut for their &lt;a href=&#34;https://github.com/fmtlib/fmt&#34;&gt;libfmt&lt;/a&gt; library which makes formatting and logging so much better&lt;/li&gt; &#xA; &lt;li&gt;Thanks to rxi for &lt;a href=&#34;https://github.com/rxi/microtar&#34;&gt;microtar&lt;/a&gt; used for extracting downloaded store assets&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>dolphin-emu/dolphin</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/dolphin-emu/dolphin</id>
    <link href="https://github.com/dolphin-emu/dolphin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dolphin is a GameCube / Wii emulator, allowing you to play games for these two platforms on PC with improvements.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dolphin - A GameCube and Wii Emulator&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dolphin-emu.org/&#34;&gt;Homepage&lt;/a&gt; | &lt;a href=&#34;https://github.com/dolphin-emu/dolphin&#34;&gt;Project Site&lt;/a&gt; | &lt;a href=&#34;https://dolphin.ci&#34;&gt;Buildbot&lt;/a&gt; | &lt;a href=&#34;https://forums.dolphin-emu.org/&#34;&gt;Forums&lt;/a&gt; | &lt;a href=&#34;https://wiki.dolphin-emu.org/&#34;&gt;Wiki&lt;/a&gt; | &lt;a href=&#34;https://bugs.dolphin-emu.org/projects/emulator/issues&#34;&gt;Issue Tracker&lt;/a&gt; | &lt;a href=&#34;https://github.com/dolphin-emu/dolphin/raw/master/Contributing.md&#34;&gt;Coding Style&lt;/a&gt; | &lt;a href=&#34;https://www.transifex.com/projects/p/dolphin-emu/&#34;&gt;Transifex Page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Dolphin is an emulator for running GameCube and Wii games on Windows, Linux, macOS, and recent Android devices. It&#39;s licensed under the terms of the GNU General Public License, version 2 or later (GPLv2+).&lt;/p&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://dolphin-emu.org/docs/faq/&#34;&gt;FAQ&lt;/a&gt; before using Dolphin.&lt;/p&gt; &#xA;&lt;h2&gt;System Requirements&lt;/h2&gt; &#xA;&lt;h3&gt;Desktop&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OS &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Windows (10 or higher).&lt;/li&gt; &#xA;   &lt;li&gt;Linux.&lt;/li&gt; &#xA;   &lt;li&gt;macOS (10.13 High Sierra or higher).&lt;/li&gt; &#xA;   &lt;li&gt;Unix-like systems other than Linux are not officially supported but might work.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Processor &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A CPU with SSE2 support.&lt;/li&gt; &#xA;   &lt;li&gt;A modern CPU (3 GHz and Dual Core, not older than 2008) is highly recommended.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Graphics &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A reasonably modern graphics card (Direct3D 11.1 / OpenGL 3.3).&lt;/li&gt; &#xA;   &lt;li&gt;A graphics card that supports Direct3D 11.1 / OpenGL 4.4 is recommended.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OS &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Android (5.0 Lollipop or higher).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Processor &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A processor with support for 64-bit applications (either ARMv8 or x86-64).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Graphics &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A graphics processor that supports OpenGL ES 3.0 or higher. Performance varies heavily with &lt;a href=&#34;https://dolphin-emu.org/blog/2013/09/26/dolphin-emulator-and-opengl-drivers-hall-fameshame/&#34;&gt;driver quality&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;A graphics processor that supports standard desktop OpenGL features is recommended for best performance.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Dolphin can only be installed on devices that satisfy the above requirements. Attempting to install on an unsupported device will fail and display an error message.&lt;/p&gt; &#xA;&lt;h2&gt;Building for Windows&lt;/h2&gt; &#xA;&lt;p&gt;Use the solution file &lt;code&gt;Source/dolphin-emu.sln&lt;/code&gt; to build Dolphin on Windows. Visual Studio 2022 17.2 or later is a hard requirement. Other compilers might be able to build Dolphin on Windows but have not been tested and are not recommended to be used. Git and Windows 11 SDK must be installed when building.&lt;/p&gt; &#xA;&lt;p&gt;Make sure to pull submodules before building:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git submodule update --init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &#34;Release&#34; solution configuration includes performance optimizations for the best user experience but complicates debugging Dolphin. The &#34;Debug&#34; solution configuration is significantly slower, more verbose and less permissive but makes debugging Dolphin easier.&lt;/p&gt; &#xA;&lt;p&gt;An installer can be created by using the &lt;code&gt;Installer.nsi&lt;/code&gt; script in the Installer directory. This will require the Nullsoft Scriptable Install System (NSIS) to be installed. Creating an installer is not necessary to run Dolphin since the Binary directory contains a working Dolphin distribution.&lt;/p&gt; &#xA;&lt;h2&gt;Building for Linux and macOS&lt;/h2&gt; &#xA;&lt;p&gt;Dolphin requires &lt;a href=&#34;https://cmake.org/&#34;&gt;CMake&lt;/a&gt; for systems other than Windows. Many libraries are bundled with Dolphin and used if they&#39;re not installed on your system. CMake will inform you if a bundled library is used or if you need to install any missing packages yourself.&lt;/p&gt; &#xA;&lt;p&gt;Make sure to pull submodules before building:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git submodule update --init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;macOS Build Steps:&lt;/h3&gt; &#xA;&lt;p&gt;A binary supporting a single architecture can be built using the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;mkdir build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cmake ..&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;An application bundle will be created in &lt;code&gt;./Binaries&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A script is also provided to build universal binaries supporting both x64 and ARM in the same application bundle using the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;mkdir build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;python ../BuildMacOSUniversalBinary.py&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Universal binaries will be available in the &lt;code&gt;universal&lt;/code&gt; folder&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Doing this is more complex as it requires installation of library dependencies for both x64 and ARM (or universal library equivalents) and may require specifying additional arguments to point to relevant library locations. Execute BuildMacOSUniversalBinary.py --help for more details.&lt;/p&gt; &#xA;&lt;h3&gt;Linux Global Build Steps:&lt;/h3&gt; &#xA;&lt;p&gt;To install to your system.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;mkdir build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cmake ..&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo make install&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Linux Local Build Steps:&lt;/h3&gt; &#xA;&lt;p&gt;Useful for development as root access is not required.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;mkdir Build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd Build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cmake .. -DLINUX_LOCAL_DEV=true&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ln -s ../../Data/Sys Binaries/&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Linux Portable Build Steps:&lt;/h3&gt; &#xA;&lt;p&gt;Can be stored on external storage and used on different Linux systems. Or useful for having multiple distinct Dolphin setups for testing/development/TAS.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;mkdir Build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd Build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cmake .. -DLINUX_LOCAL_DEV=true&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cp -r ../Data/Sys/ Binaries/&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;touch Binaries/portable.txt&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Building for Android&lt;/h2&gt; &#xA;&lt;p&gt;These instructions assume familiarity with Android development. If you do not have an Android dev environment set up, see &lt;a href=&#34;https://raw.githubusercontent.com/dolphin-emu/dolphin/master/AndroidSetup.md&#34;&gt;AndroidSetup.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Make sure to pull submodules before building:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git submodule update --init&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If using Android Studio, import the Gradle project located in &lt;code&gt;./Source/Android&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Android apps are compiled using a build system called Gradle. Dolphin&#39;s native component, however, is compiled using CMake. The Gradle script will attempt to run a CMake build automatically while building the Java code.&lt;/p&gt; &#xA;&lt;h2&gt;Uninstalling&lt;/h2&gt; &#xA;&lt;p&gt;When Dolphin has been installed with the NSIS installer, you can uninstall Dolphin like any other Windows application.&lt;/p&gt; &#xA;&lt;p&gt;Linux users can run &lt;code&gt;cat install_manifest.txt | xargs -d &#39;\n&#39; rm&lt;/code&gt; as root from the build directory to uninstall Dolphin from their system.&lt;/p&gt; &#xA;&lt;p&gt;macOS users can simply delete Dolphin.app to uninstall it.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, you&#39;ll want to remove the global user directory (see below to see where it&#39;s stored) if you don&#39;t plan to reinstall Dolphin.&lt;/p&gt; &#xA;&lt;h2&gt;Command Line Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Usage: Dolphin [-h] [-d] [-l] [-e &amp;lt;str&amp;gt;] [-b] [-v &amp;lt;str&amp;gt;] [-a &amp;lt;str&amp;gt;]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;-h, --help Show this help message&lt;/li&gt; &#xA; &lt;li&gt;-d, --debugger Show the debugger pane and additional View menu options&lt;/li&gt; &#xA; &lt;li&gt;-l, --logger Open the logger&lt;/li&gt; &#xA; &lt;li&gt;-e, --exec=&#xA;  &lt;str&gt;&#xA;    Load the specified file (DOL,ELF,WAD,GCM,ISO)&#xA;  &lt;/str&gt;&lt;/li&gt; &#xA; &lt;li&gt;-b, --batch Exit Dolphin with emulator&lt;/li&gt; &#xA; &lt;li&gt;-v, --video_backend=&#xA;  &lt;str&gt;&#xA;    Specify a video backend&#xA;  &lt;/str&gt;&lt;/li&gt; &#xA; &lt;li&gt;-a, --audio_emulation=&#xA;  &lt;str&gt;&#xA;    Low level (LLE) or high level (HLE) audio&#xA;  &lt;/str&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Available DSP emulation engines are HLE (High Level Emulation) and LLE (Low Level Emulation). HLE is faster but less accurate whereas LLE is slower but close to perfect. Note that LLE has two submodes (Interpreter and Recompiler) but they cannot be selected from the command line.&lt;/p&gt; &#xA;&lt;p&gt;Available video backends are &#34;D3D&#34; and &#34;D3D12&#34; (they are only available on Windows), &#34;OGL&#34;, and &#34;Vulkan&#34;. There&#39;s also &#34;Null&#34;, which will not render anything, and &#34;Software Renderer&#34;, which uses the CPU for rendering and is intended for debugging purposes only.&lt;/p&gt; &#xA;&lt;h2&gt;Sys Files&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;wiitdb.txt&lt;/code&gt;: Wii title database from &lt;a href=&#34;https://www.gametdb.com/&#34;&gt;GameTDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;totaldb.dsy&lt;/code&gt;: Database of symbols (for devs only)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GC/font_western.bin&lt;/code&gt;: font dumps&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GC/font_japanese.bin&lt;/code&gt;: font dumps&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GC/dsp_coef.bin&lt;/code&gt;: DSP dumps&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GC/dsp_rom.bin&lt;/code&gt;: DSP dumps&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Wii/clientca.pem&lt;/code&gt;: Wii network certificate&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Wii/clientcakey.pem&lt;/code&gt;: Wii network certificate key&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Wii/rootca.pem&lt;/code&gt;: Wii network certificate issuer / CA&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The DSP dumps included with Dolphin have been written from scratch and do not contain any copyrighted material. They should work for most purposes, however some games implement copy protection by checksumming the dumps. You will need to dump the DSP files from a console and replace the default dumps if you want to fix those issues.&lt;/p&gt; &#xA;&lt;p&gt;Wii network certificates must be extracted from a Wii IOS. A guide for that can be found &lt;a href=&#34;https://wiki.dolphin-emu.org/index.php?title=Wii_Network_Guide&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Folder Structure&lt;/h2&gt; &#xA;&lt;p&gt;These folders are installed read-only and should not be changed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;GameSettings&lt;/code&gt;: per-game default settings database&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GC&lt;/code&gt;: DSP and font dumps&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Shaders&lt;/code&gt;: post-processing shaders&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Themes&lt;/code&gt;: icon themes for GUI&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Resources&lt;/code&gt;: icons that are theme-agnostic&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Wii&lt;/code&gt;: default Wii NAND contents&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Packaging and udev&lt;/h2&gt; &#xA;&lt;p&gt;The Data folder contains a udev rule file for the official GameCube controller adapter and the Mayflash DolphinBar. Package maintainers can use that file in their packages for Dolphin. Users compiling Dolphin on Linux can also just copy the file to their udev rules folder.&lt;/p&gt; &#xA;&lt;h2&gt;User Folder Structure&lt;/h2&gt; &#xA;&lt;p&gt;A number of user writeable directories are created for caching purposes or for allowing the user to edit their contents. On macOS and Linux these folders are stored in &lt;code&gt;~/Library/Application Support/Dolphin/&lt;/code&gt; and &lt;code&gt;~/.dolphin-emu&lt;/code&gt; respectively, but can be overwritten by setting the environment variable &lt;code&gt;DOLPHIN_EMU_USERPATH&lt;/code&gt;. On Windows the user directory is stored in the &lt;code&gt;My Documents&lt;/code&gt; folder by default, but there are various way to override this behavior:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Creating a file called &lt;code&gt;portable.txt&lt;/code&gt; next to the Dolphin executable will store the user directory in a local directory called &#34;User&#34; next to the Dolphin executable.&lt;/li&gt; &#xA; &lt;li&gt;If the registry string value &lt;code&gt;LocalUserConfig&lt;/code&gt; exists in &lt;code&gt;HKEY_CURRENT_USER/Software/Dolphin Emulator&lt;/code&gt; and has the value &lt;strong&gt;1&lt;/strong&gt;, Dolphin will always start in portable mode.&lt;/li&gt; &#xA; &lt;li&gt;If the registry string value &lt;code&gt;UserConfigPath&lt;/code&gt; exists in &lt;code&gt;HKEY_CURRENT_USER/Software/Dolphin Emulator&lt;/code&gt;, the user folders will be stored in the directory given by that string. The other two methods will be prioritized over this setting.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;List of user folders:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Cache&lt;/code&gt;: used to cache the ISO list&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Config&lt;/code&gt;: configuration files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Dump&lt;/code&gt;: anything dumped from Dolphin&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GameConfig&lt;/code&gt;: additional settings to be applied per-game&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GC&lt;/code&gt;: memory cards and system BIOS&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Load&lt;/code&gt;: custom textures&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Logs&lt;/code&gt;: logs, if enabled&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ScreenShots&lt;/code&gt;: screenshots taken via Dolphin&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;StateSaves&lt;/code&gt;: save states&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Wii&lt;/code&gt;: Wii NAND contents&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Custom Textures&lt;/h2&gt; &#xA;&lt;p&gt;Custom textures have to be placed in the user directory under &lt;code&gt;Load/Textures/[GameID]/&lt;/code&gt;. You can find the Game ID by right-clicking a game in the ISO list and selecting &#34;ISO Properties&#34;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>facebook/rocksdb</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/facebook/rocksdb</id>
    <link href="https://github.com/facebook/rocksdb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A library that provides an embeddable, persistent key-value store for fast storage.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;RocksDB: A Persistent Key-Value Store for Flash and RAM Storage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/facebook/rocksdb&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/facebook/rocksdb.svg?style=svg&#34; alt=&#34;CircleCI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.com/github/facebook/rocksdb&#34;&gt;&lt;img src=&#34;https://api.travis-ci.com/facebook/rocksdb.svg?branch=main&#34; alt=&#34;TravisCI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/Facebook/rocksdb/branch/main&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/fbgfu0so3afcno78/branch/main?svg=true&#34; alt=&#34;Appveyor Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://140-211-168-68-openstack.osuosl.org:8080/job/rocksdb&#34;&gt;&lt;img src=&#34;http://140-211-168-68-openstack.osuosl.org:8080/buildStatus/icon?job=rocksdb&amp;amp;style=plastic&#34; alt=&#34;PPC64le Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;RocksDB is developed and maintained by Facebook Database Engineering Team. It is built on earlier work on &lt;a href=&#34;https://github.com/google/leveldb&#34;&gt;LevelDB&lt;/a&gt; by Sanjay Ghemawat (&lt;a href=&#34;mailto:sanjay@google.com&#34;&gt;sanjay@google.com&lt;/a&gt;) and Jeff Dean (&lt;a href=&#34;mailto:jeff@google.com&#34;&gt;jeff@google.com&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;This code is a library that forms the core building block for a fast key-value server, especially suited for storing data on flash drives. It has a Log-Structured-Merge-Database (LSM) design with flexible tradeoffs between Write-Amplification-Factor (WAF), Read-Amplification-Factor (RAF) and Space-Amplification-Factor (SAF). It has multi-threaded compactions, making it especially suitable for storing multiple terabytes of data in a single database.&lt;/p&gt; &#xA;&lt;p&gt;Start with example usage here: &lt;a href=&#34;https://github.com/facebook/rocksdb/tree/main/examples&#34;&gt;https://github.com/facebook/rocksdb/tree/main/examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/facebook/rocksdb/wiki&#34;&gt;github wiki&lt;/a&gt; for more explanation.&lt;/p&gt; &#xA;&lt;p&gt;The public interface is in &lt;code&gt;include/&lt;/code&gt;. Callers should not include or rely on the details of any other header files in this package. Those internal APIs may be changed without warning.&lt;/p&gt; &#xA;&lt;p&gt;Questions and discussions are welcome on the &lt;a href=&#34;https://www.facebook.com/groups/rocksdb.dev/&#34;&gt;RocksDB Developers Public&lt;/a&gt; Facebook group and &lt;a href=&#34;https://groups.google.com/g/rocksdb&#34;&gt;email list&lt;/a&gt; on Google Groups.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;RocksDB is dual-licensed under both the GPLv2 (found in the COPYING file in the root directory) and Apache 2.0 License (found in the LICENSE.Apache file in the root directory). You may select, at your option, one of the above-listed licenses.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>vaxerski/Hyprland</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/vaxerski/Hyprland</id>
    <link href="https://github.com/vaxerski/Hyprland" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hyprland is a dynamic tiling Wayland compositor that doesn&#39;t sacrifice on its looks.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vaxerski/Hyprland/main/assets/hyprland.png&#34; alt=&#34;Banner&#34;&gt;&lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/vaxerski/Hyprland/actions/workflows/ci.yaml/badge.svg?sanitize=true&#34; alt=&#34;Badge Workflow&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/vaxerski/Hyprland/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/vaxerski/Hyprland&#34; alt=&#34;Badge License&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/tokei/lines/github/vaxerski/Hyprland&#34; alt=&#34;Badge Lines&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/languages/top/vaxerski/Hyprland&#34; alt=&#34;Badge Language&#34;&gt; &lt;a href=&#34;https://github.com/vaxerski/Hyprland/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/vaxerski/Hyprland&#34; alt=&#34;Badge Pull Requests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/vaxerski/Hyprland/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/vaxerski/Hyprland&#34; alt=&#34;Badge Issues&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/Hi-mom!-ff69b4&#34; alt=&#34;Badge Hi Mom&#34;&gt;&lt;br&gt; &lt;a href=&#34;https://discord.gg/hQ9XvMUjjr&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Join%20the-Discord%20server-6666ff&#34; alt=&#34;Badge Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;Hyprland is a dynamic tiling Wayland compositor based on wlroots that doesn&#39;t sacrifice on its looks.&lt;/p&gt; &#xA; &lt;p&gt;For Hyprland without the &lt;code&gt;land&lt;/code&gt; part, see &lt;a href=&#34;https://github.com/vaxerski/Hypr&#34;&gt;Hypr&lt;/a&gt;, the Xorg window manager.&lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;hr&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/vaxerski/Hyprland/wiki/Installation&#34;&gt;&lt;kbd&gt; &lt;br&gt; Install &lt;br&gt; &lt;/kbd&gt;&lt;/a&gt;&lt;/strong&gt;  &lt;strong&gt;&lt;a href=&#34;https://github.com/vaxerski/Hyprland/wiki/Quick-start&#34;&gt;&lt;kbd&gt; &lt;br&gt; Quick Start &lt;br&gt; &lt;/kbd&gt;&lt;/a&gt;&lt;/strong&gt;  &lt;strong&gt;&lt;a href=&#34;https://github.com/vaxerski/Hyprland/wiki/Configuring-Hyprland&#34;&gt;&lt;kbd&gt; &lt;br&gt; Configure &lt;br&gt; &lt;/kbd&gt;&lt;/a&gt;&lt;/strong&gt;  &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/vaxerski/Hyprland/main/docs/Contribute.md&#34;&gt;&lt;kbd&gt; &lt;br&gt; Contribute &lt;br&gt; &lt;/kbd&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;hr&gt; &#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;Notice&lt;/h1&gt; &#xA;&lt;p&gt;This project is still in its early development, expect bugs.&lt;/p&gt; &#xA;&lt;p&gt;Once you get it working though, it&#39;s pretty stable.&lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Help Wanted&lt;/h3&gt; &#xA;&lt;p&gt;Hyprland needs testers! &lt;br&gt; Try it out and report bugs / suggestions!&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Easily expandable and readable codebase&lt;/li&gt; &#xA; &lt;li&gt;Config reloaded instantly upon saving&lt;/li&gt; &#xA; &lt;li&gt;Bezier-curve window animations&lt;/li&gt; &#xA; &lt;li&gt;Custom bezier curve based animations&lt;/li&gt; &#xA; &lt;li&gt;Workspaces protocol support&lt;/li&gt; &#xA; &lt;li&gt;Dual Kawase blur&lt;/li&gt; &#xA; &lt;li&gt;Window fade in / out&lt;/li&gt; &#xA; &lt;li&gt;Tiling / floating / fullscreen windows&lt;/li&gt; &#xA; &lt;li&gt;Window / monitor rules&lt;/li&gt; &#xA; &lt;li&gt;Socket-based IPC&lt;/li&gt; &#xA; &lt;li&gt;Rounded corners&lt;/li&gt; &#xA; &lt;li&gt;Damage tracking ( &lt;em&gt;Experimental&lt;/em&gt; )&lt;/li&gt; &#xA; &lt;li&gt;Moving / resizing&lt;/li&gt; &#xA; &lt;li&gt;Docks support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Gallery&lt;/h1&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://i.imgur.com/NbrTnZH.png&#34; alt=&#34;Preview A&#34;&gt;&lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://i.imgur.com/ZA4Fa8R.png&#34; alt=&#34;Preview B&#34;&gt;&lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://i.imgur.com/BpXxM8H.png&#34; alt=&#34;Preview C&#34;&gt;&lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;h1&gt;Stars Over Time&lt;/h1&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://starchart.cc/vaxerski/Hyprland&#34;&gt;&lt;img src=&#34;https://starchart.cc/vaxerski/Hyprland.svg?sanitize=true&#34; alt=&#34;Stars Preview&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;Special Thanks&lt;/h1&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://gitlab.freedesktop.org/wlroots/wlroots&#34;&gt;wlroots&lt;/a&gt;&lt;/strong&gt; - &lt;em&gt;For their amazing library&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://gitlab.freedesktop.org/wlroots/wlroots/-/blob/master/tinywl/tinywl.c&#34;&gt;tinywl&lt;/a&gt;&lt;/strong&gt; - &lt;em&gt;For showing how 2 do stuff&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/swaywm/sway&#34;&gt;Sway&lt;/a&gt;&lt;/strong&gt; - &lt;em&gt;For showing how 2 do stuff the overkill way&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/inclement/vivarium&#34;&gt;Vivarium&lt;/a&gt;&lt;/strong&gt; - &lt;em&gt;For showing how 2 do stuff the simple way&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/djpohly/dwl&#34;&gt;dwl&lt;/a&gt;&lt;/strong&gt; - &lt;em&gt;For showing how 2 do stuff the hacky way&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/WayfireWM/wayfire&#34;&gt;Wayfire&lt;/a&gt;&lt;/strong&gt; - &lt;em&gt;For showing how 2 do some graphics stuff&lt;/em&gt;&lt;/p&gt; &#xA;&lt;!----&gt; &#xA;&lt;!--{ Thanks }---------------------------------&gt; &#xA;&lt;!--{ Images }---------------------------------&gt; &#xA;&lt;!--{ Badges }---------------------------------&gt;</summary>
  </entry>
  <entry>
    <title>yuzu-emu/yuzu</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/yuzu-emu/yuzu</id>
    <link href="https://github.com/yuzu-emu/yuzu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Nintendo Switch Emulator&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;br&gt; &lt;a href=&#34;https://yuzu-emu.org/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yuzu-emu/yuzu-assets/master/icons/icon.png&#34; alt=&#34;yuzu&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;b&gt;yuzu&lt;/b&gt; &lt;br&gt; &lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;&lt;b&gt;yuzu&lt;/b&gt; is the world&#39;s most popular, open-source, Nintendo Switch emulator — started by the creators of &lt;a href=&#34;https://citra-emu.org&#34; target=&#34;_blank&#34;&gt;Citra&lt;/a&gt;. &lt;br&gt; It is written in C++ with portability in mind, and we actively maintain builds for Windows and Linux. &lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://dev.azure.com/yuzu-emu/yuzu/&#34;&gt; &lt;img src=&#34;https://dev.azure.com/yuzu-emu/yuzu/_apis/build/status/yuzu%20mainline?branchName=master&#34; alt=&#34;Azure Mainline CI Build Status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.com/invite/u77vRWY&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/398318088170242053?color=5865F2&amp;amp;label=yuzu&amp;amp;logo=discord&amp;amp;logoColor=white&#34; alt=&#34;Discord&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/yuzu-emu/yuzu/master/#compatibility&#34;&gt;Compatibility&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/yuzu-emu/yuzu/master/#development&#34;&gt;Development&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/yuzu-emu/yuzu/master/#building&#34;&gt;Building&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/yuzu-emu/yuzu/master/#download&#34;&gt;Download&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/yuzu-emu/yuzu/master/#support&#34;&gt;Support&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/yuzu-emu/yuzu/master/#license&#34;&gt;License&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;The emulator is capable of running most commercial games at full speed, provided you meet the &lt;a href=&#34;https://yuzu-emu.org/help/quickstart/#hardware-requirements&#34;&gt;necessary hardware requirements&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For a full list of games yuzu support, please visit our &lt;a href=&#34;https://yuzu-emu.org/game/&#34;&gt;Compatibility page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://yuzu-emu.org/&#34;&gt;website&lt;/a&gt; for the latest news on exciting features, monthly progress reports, and more!&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;Most of the development happens on GitHub. It&#39;s also where &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;our central repository&lt;/a&gt; is hosted. For development discussion, please join us on &lt;a href=&#34;https://discord.com/invite/u77vRWY&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to contribute, please take a look at the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/wiki/Contributing&#34;&gt;Contributor&#39;s Guide&lt;/a&gt; and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/wiki/Developer-Information&#34;&gt;Developer Information&lt;/a&gt;. You can also contact any of the developers on Discord in order to know about the current state of the emulator.&lt;/p&gt; &#xA;&lt;p&gt;If you want to contribute to the user interface translation project, please check out the &lt;a href=&#34;https://www.transifex.com/yuzu-emulator/yuzu&#34;&gt;yuzu project on transifex&lt;/a&gt;. We centralize translation work there, and periodically upstream translations.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/wiki/Building-For-Windows&#34;&gt;Windows Build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/wiki/Building-For-Linux&#34;&gt;Linux Build&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;You can download the latest releases automatically via the installer on our &lt;a href=&#34;https://yuzu-emu.org/downloads/&#34;&gt;downloads&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you enjoy the project and want to support us financially, check out our Patreon!&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt; &lt;img src=&#34;https://c5.patreon.com/external/logo/become_a_patron_button@2x.png&#34; width=&#34;160&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Any donations received will go towards things like:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Switch consoles to explore and reverse-engineer the hardware&lt;/li&gt; &#xA; &lt;li&gt;Switch games for testing, reverse-engineering, and implementing new features&lt;/li&gt; &#xA; &lt;li&gt;Web hosting and infrastructure setup&lt;/li&gt; &#xA; &lt;li&gt;Software licenses (e.g. Visual Studio, IDA Pro, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Additional hardware (e.g. GPUs as-needed to improve rendering support, other peripherals to add support for, etc.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you wish to support us a different way, please join our &lt;a href=&#34;https://discord.gg/u77vRWY&#34;&gt;Discord&lt;/a&gt; and talk to bunnei. You may also contact: &lt;a href=&#34;mailto:donations@yuzu-emu.org&#34;&gt;donations@yuzu-emu.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;yuzu is licensed under the GPLv3 (or any later version). Refer to the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/raw/master/license.txt&#34;&gt;license.txt&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/skyline-emu/skyline&#34;&gt;Skyline-Emulator Team&lt;/a&gt; may choose to use the code from these contributors under the GPL-3.0-or-later OR MPL-2.0: &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;FernandoS27&lt;/a&gt;, &lt;a href=&#34;https://github.com/lioncash&#34;&gt;lioncash&lt;/a&gt;, &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt;, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;ReinUsesLisp&lt;/a&gt;, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph1984&lt;/a&gt;, &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK5377&lt;/a&gt;, &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt;, &lt;a href=&#34;https://github.com/ameerj&#34;&gt;ameerj&lt;/a&gt;, &lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Kelebek1&lt;/a&gt; and &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;lat9nq&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>qbittorrent/qBittorrent</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/qbittorrent/qBittorrent</id>
    <link href="https://github.com/qbittorrent/qBittorrent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;qBittorrent BitTorrent client&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;qBittorrent - A BitTorrent client in Qt&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/qbittorrent/qBittorrent&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/qbittorrent/qBittorrent?branch=master&amp;amp;svg=true&#34; alt=&#34;AppVeyor Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qbittorrent/qBittorrent/actions&#34;&gt;&lt;img src=&#34;https://github.com/qbittorrent/qBittorrent/workflows/GitHub%20Actions%20CI/badge.svg?sanitize=true&#34; alt=&#34;GitHub Actions CI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://scan.coverity.com/projects/5494&#34;&gt;&lt;img src=&#34;https://scan.coverity.com/projects/5494/badge.svg?sanitize=true&#34; alt=&#34;Coverity Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Description:&lt;/h3&gt; &#xA;&lt;p&gt;qBittorrent is a bittorrent client programmed in C++ / Qt that uses libtorrent (sometimes called libtorrent-rasterbar) by Arvid Norberg.&lt;/p&gt; &#xA;&lt;p&gt;It aims to be a good alternative to all other bittorrent clients out there. qBittorrent is fast, stable and provides unicode support as well as many features.&lt;/p&gt; &#xA;&lt;p&gt;The free &lt;a href=&#34;https://db-ip.com/db/download/ip-to-country-lite&#34;&gt;IP to Country Lite database&lt;/a&gt; by &lt;a href=&#34;https://db-ip.com/&#34;&gt;DB-IP&lt;/a&gt; is used for resolving the countries of peers. The database is licensed under the &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34;&gt;Creative Commons Attribution 4.0 International License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Installation:&lt;/h3&gt; &#xA;&lt;p&gt;For installation, follow the instructions from INSTALL file, but simple:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./configure&#xA;make &amp;amp;&amp;amp; make install&#xA;qbittorrent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;will install and execute qBittorrent hopefully without any problem.&lt;/p&gt; &#xA;&lt;h3&gt;Public key:&lt;/h3&gt; &#xA;&lt;p&gt;Starting from v3.3.4 all source tarballs and binaries are signed.&lt;br&gt; The key currently used is 4096R/&lt;a href=&#34;https://pgp.mit.edu/pks/lookup?op=get&amp;amp;search=0x6E4A2D025B7CC9A2&#34;&gt;5B7CC9A2&lt;/a&gt; with fingerprint &lt;code&gt;D8F3DA77AAC6741053599C136E4A2D025B7CC9A2&lt;/code&gt;.&lt;br&gt; You can also download it from &lt;a href=&#34;https://github.com/qbittorrent/qBittorrent/raw/master/5B7CC9A2.asc&#34;&gt;here&lt;/a&gt;.&lt;br&gt; &lt;strong&gt;PREVIOUSLY&lt;/strong&gt; the following key was used to sign the v3.3.4 source tarballs and v3.3.4 Windows installer &lt;strong&gt;only&lt;/strong&gt;: 4096R/&lt;a href=&#34;https://pgp.mit.edu/pks/lookup?op=get&amp;amp;search=0xA1ACCAE4520EC6F6&#34;&gt;520EC6F6&lt;/a&gt; with fingerprint &lt;code&gt;F4A5FD201B117B1C2AB590E2A1ACCAE4520EC6F6&lt;/code&gt;.&lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Misc:&lt;/h3&gt; &#xA;&lt;p&gt;For more information please visit: &lt;a href=&#34;https://www.qbittorrent.org&#34;&gt;https://www.qbittorrent.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;or our wiki here: &lt;a href=&#34;http://wiki.qbittorrent.org&#34;&gt;http://wiki.qbittorrent.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use the forum for troubleshooting before reporting bugs: &lt;a href=&#34;http://forum.qbittorrent.org&#34;&gt;http://forum.qbittorrent.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please report any bug (or feature request) to: &lt;a href=&#34;http://bugs.qbittorrent.org&#34;&gt;http://bugs.qbittorrent.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Official IRC channel: &lt;a href=&#34;ircs://irc.libera.chat:6697/qbittorrent&#34;&gt;#qbittorrent on irc.libera.chat&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;sledgehammer999 &amp;lt;&lt;a href=&#34;mailto:sledgehammer999@qbittorrent.org&#34;&gt;sledgehammer999@qbittorrent.org&lt;/a&gt;&amp;gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>aria2/aria2</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/aria2/aria2</id>
    <link href="https://github.com/aria2/aria2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;aria2 is a lightweight multi-protocol &amp; multi-source, cross platform download utility operated in command-line. It supports HTTP/HTTPS, FTP, SFTP, BitTorrent and Metalink.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;aria2 - The ultra fast download utility&lt;/h1&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This program comes with no warranty. You must use this program at your own risk.&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;aria2 is a utility for downloading files. The supported protocols are HTTP(S), FTP, SFTP, BitTorrent, and Metalink. aria2 can download a file from multiple sources/protocols and tries to utilize your maximum download bandwidth. It supports downloading a file from HTTP(S)/FTP/SFTP and BitTorrent at the same time, while the data downloaded from HTTP(S)/FTP/SFTP is uploaded to the BitTorrent swarm. Using Metalink&#39;s chunk checksums, aria2 automatically validates chunks of data while downloading a file like BitTorrent.&lt;/p&gt; &#xA;&lt;p&gt;The project page is located at &lt;a href=&#34;https://aria2.github.io/&#34;&gt;https://aria2.github.io/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;code&gt;aria2 Online Manual &amp;lt;https://aria2.github.io/manual/en/html/&amp;gt;&lt;/code&gt;_ (&lt;code&gt;Russian translation &amp;lt;https://aria2.github.io/manual/ru/html/&amp;gt;&lt;/code&gt;&lt;em&gt;, &lt;code&gt;Portuguese translation &amp;lt;https://aria2.github.io/manual/pt/html/&amp;gt;&lt;/code&gt;&lt;/em&gt;) to learn how to use aria2.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Here is a list of features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Command-line interface&lt;/li&gt; &#xA; &lt;li&gt;Download files through HTTP(S)/FTP/SFTP/BitTorrent&lt;/li&gt; &#xA; &lt;li&gt;Segmented downloading&lt;/li&gt; &#xA; &lt;li&gt;Metalink version 4 (RFC 5854) support(HTTP/FTP/SFTP/BitTorrent)&lt;/li&gt; &#xA; &lt;li&gt;Metalink version 3.0 support(HTTP/FTP/SFTP/BitTorrent)&lt;/li&gt; &#xA; &lt;li&gt;Metalink/HTTP (RFC 6249) support&lt;/li&gt; &#xA; &lt;li&gt;HTTP/1.1 implementation&lt;/li&gt; &#xA; &lt;li&gt;HTTP Proxy support&lt;/li&gt; &#xA; &lt;li&gt;HTTP BASIC authentication support&lt;/li&gt; &#xA; &lt;li&gt;HTTP Proxy authentication support&lt;/li&gt; &#xA; &lt;li&gt;Well-known environment variables for proxy: &lt;code&gt;http_proxy&lt;/code&gt;, &lt;code&gt;https_proxy&lt;/code&gt;, &lt;code&gt;ftp_proxy&lt;/code&gt;, &lt;code&gt;all_proxy&lt;/code&gt; and &lt;code&gt;no_proxy&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;HTTP gzip, deflate content encoding support&lt;/li&gt; &#xA; &lt;li&gt;Verify peer using given trusted CA certificate in HTTPS&lt;/li&gt; &#xA; &lt;li&gt;Client certificate authentication in HTTPS&lt;/li&gt; &#xA; &lt;li&gt;Chunked transfer encoding support&lt;/li&gt; &#xA; &lt;li&gt;Load Cookies from file using the Firefox3 format, Chromium/Google Chrome and the Mozilla/Firefox (1.x/2.x)/Netscape format.&lt;/li&gt; &#xA; &lt;li&gt;Save Cookies in the Mozilla/Firefox (1.x/2.x)/Netscape format.&lt;/li&gt; &#xA; &lt;li&gt;Custom HTTP Header support&lt;/li&gt; &#xA; &lt;li&gt;Persistent Connections support&lt;/li&gt; &#xA; &lt;li&gt;FTP/SFTP through HTTP Proxy&lt;/li&gt; &#xA; &lt;li&gt;Download/Upload speed throttling&lt;/li&gt; &#xA; &lt;li&gt;BitTorrent extensions: Fast extension, DHT, PEX, MSE/PSE, Multi-Tracker, UDP tracker&lt;/li&gt; &#xA; &lt;li&gt;BitTorrent &lt;code&gt;WEB-Seeding &amp;lt;http://getright.com/seedtorrent.html&amp;gt;&lt;/code&gt;_. aria2 requests chunks more than piece size to reduce the request overhead. It also supports pipelined requests with piece size.&lt;/li&gt; &#xA; &lt;li&gt;BitTorrent Local Peer Discovery&lt;/li&gt; &#xA; &lt;li&gt;Rename/change the directory structure of BitTorrent downloads completely&lt;/li&gt; &#xA; &lt;li&gt;JSON-RPC (over HTTP and WebSocket)/XML-RPC interface&lt;/li&gt; &#xA; &lt;li&gt;Run as a daemon process&lt;/li&gt; &#xA; &lt;li&gt;Selective download in multi-file torrent/Metalink&lt;/li&gt; &#xA; &lt;li&gt;Chunk checksum validation in Metalink&lt;/li&gt; &#xA; &lt;li&gt;Can disable segmented downloading in Metalink&lt;/li&gt; &#xA; &lt;li&gt;Netrc support&lt;/li&gt; &#xA; &lt;li&gt;Configuration file support&lt;/li&gt; &#xA; &lt;li&gt;Download URIs found in a text file or stdin and the destination directory and output file name can be specified optionally&lt;/li&gt; &#xA; &lt;li&gt;Parameterized URI support&lt;/li&gt; &#xA; &lt;li&gt;IPv6 support with Happy Eyeballs&lt;/li&gt; &#xA; &lt;li&gt;Disk cache to reduce disk activity&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Versioning and release schedule&lt;/h2&gt; &#xA;&lt;p&gt;We use 3 numbers for aria2 version: MAJOR.MINOR.PATCH. We will ship MINOR update on 15th of every month. We may skip a release if we have no changes since the last release. The feature and documentation freeze happens 10 days before the release day (5th day of the month) for translation teams. We will raise an issue about the upcoming release around that day.&lt;/p&gt; &#xA;&lt;p&gt;We may release PATCH releases between regular releases if we have security issues.&lt;/p&gt; &#xA;&lt;p&gt;MAJOR version will stay at 1 for the time being.&lt;/p&gt; &#xA;&lt;h2&gt;How to get source code&lt;/h2&gt; &#xA;&lt;p&gt;We maintain the source code at Github: &lt;a href=&#34;https://github.com/aria2/aria2&#34;&gt;https://github.com/aria2/aria2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To get the latest source code, run following command::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/aria2/aria2.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create aria2 directory in your current directory and source files are stored there.&lt;/p&gt; &#xA;&lt;h2&gt;Dependency&lt;/h2&gt; &#xA;&lt;p&gt;======================== ======================================== features dependency ======================== ======================================== HTTPS OSX or GnuTLS or OpenSSL or Windows SFTP libssh2 BitTorrent None. Optional: libnettle+libgmp or libgcrypt or OpenSSL (see note) Metalink libxml2 or Expat. Checksum None. Optional: OSX or libnettle or libgcrypt or OpenSSL or Windows (see note) gzip, deflate in HTTP zlib Async DNS C-Ares Firefox3/Chromium cookie libsqlite3 XML-RPC libxml2 or Expat. JSON-RPC over WebSocket libnettle or libgcrypt or OpenSSL ======================== ========================================&lt;/p&gt; &#xA;&lt;p&gt;.. note::&lt;/p&gt; &#xA;&lt;p&gt;libxml2 has precedence over Expat if both libraries are installed. If you prefer Expat, run configure with &lt;code&gt;--without-libxml2&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;.. note::&lt;/p&gt; &#xA;&lt;p&gt;On Apple OSX the OS-level SSL/TLS support will be preferred. Hence neither GnuTLS nor OpenSSL are required on that platform. If you&#39;d like to disable this behavior, run configure with &lt;code&gt;--without-appletls&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;GnuTLS has precedence over OpenSSL if both libraries are installed. If you prefer OpenSSL, run configure with &lt;code&gt;--without-gnutls&lt;/code&gt; &lt;code&gt;--with-openssl&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;On Windows there is SSL implementation available that is based on the native Windows SSL capabilities (Schannel) and it will be preferred. Hence neither GnuTLS nor OpenSSL are required on that platform. If you&#39;d like to disable this behavior, run configure with &lt;code&gt;--without-wintls&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;.. note::&lt;/p&gt; &#xA;&lt;p&gt;On Apple OSX the OS-level checksum support will be preferred, unless aria2 is configured with &lt;code&gt;--without-appletls&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;libnettle has precedence over libgcrypt if both libraries are installed. If you prefer libgcrypt, run configure with &lt;code&gt;--without-libnettle --with-libgcrypt&lt;/code&gt;. If OpenSSL is selected over GnuTLS, neither libnettle nor libgcrypt will be used.&lt;/p&gt; &#xA;&lt;p&gt;If none of the optional dependencies are installed, an internal implementation that only supports md5 and sha1 will be used.&lt;/p&gt; &#xA;&lt;p&gt;On Windows there is SSL implementation available that is based on the native Windows capabilities and it will be preferred, unless aria2 is configured with &lt;code&gt;--without-wintls&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A user can have one of the following configurations for SSL and crypto libraries:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OpenSSL&lt;/li&gt; &#xA; &lt;li&gt;GnuTLS + libgcrypt&lt;/li&gt; &#xA; &lt;li&gt;GnuTLS + libnettle&lt;/li&gt; &#xA; &lt;li&gt;Apple TLS (OSX only)&lt;/li&gt; &#xA; &lt;li&gt;Windows TLS (Windows only)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can disable BitTorrent and Metalink support by providing &lt;code&gt;--disable-bittorrent&lt;/code&gt; and &lt;code&gt;--disable-metalink&lt;/code&gt; to the configure script respectively.&lt;/p&gt; &#xA;&lt;p&gt;In order to enable async DNS support, you need c-ares.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;c-ares: &lt;a href=&#34;http://c-ares.haxx.se/&#34;&gt;http://c-ares.haxx.se/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to build&lt;/h2&gt; &#xA;&lt;p&gt;aria2 is primarily written in C++. Initially it was written based on C++98/C++03 standard features. We are now migrating aria2 to C++11 standard. The current source code requires C++11 aware compiler. For well-known compilers, such as g++ and clang, the &lt;code&gt;-std=c++11&lt;/code&gt; or &lt;code&gt;-std=c++0x&lt;/code&gt; flag must be supported.&lt;/p&gt; &#xA;&lt;p&gt;In order to build aria2 from the source package, you need following development packages (package name may vary depending on the distribution you use):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;libgnutls-dev (Required for HTTPS, BitTorrent, Checksum support)&lt;/li&gt; &#xA; &lt;li&gt;nettle-dev (Required for BitTorrent, Checksum support)&lt;/li&gt; &#xA; &lt;li&gt;libgmp-dev (Required for BitTorrent)&lt;/li&gt; &#xA; &lt;li&gt;libssh2-1-dev (Required for SFTP support)&lt;/li&gt; &#xA; &lt;li&gt;libc-ares-dev (Required for async DNS support)&lt;/li&gt; &#xA; &lt;li&gt;libxml2-dev (Required for Metalink support)&lt;/li&gt; &#xA; &lt;li&gt;zlib1g-dev (Required for gzip, deflate decoding support in HTTP)&lt;/li&gt; &#xA; &lt;li&gt;libsqlite3-dev (Required for Firefox3/Chromium cookie support)&lt;/li&gt; &#xA; &lt;li&gt;pkg-config (Required to detect installed libraries)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can use libgcrypt-dev instead of nettle-dev and libgmp-dev:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;libgpg-error-dev (Required for BitTorrent, Checksum support)&lt;/li&gt; &#xA; &lt;li&gt;libgcrypt-dev (Required for BitTorrent, Checksum support)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can use libssl-dev instead of libgnutls-dev, nettle-dev, libgmp-dev, libgpg-error-dev and libgcrypt-dev:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;libssl-dev (Required for HTTPS, BitTorrent, Checksum support)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can use libexpat1-dev instead of libxml2-dev:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;libexpat1-dev (Required for Metalink support)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On Fedora you need the following packages: gcc, gcc-c++, kernel-devel, libgcrypt-devel, libxml2-devel, openssl-devel, gettext-devel, cppunit&lt;/p&gt; &#xA;&lt;p&gt;If you downloaded source code from git repository, you have to install following packages to get autoconf macros:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;libxml2-dev&lt;/li&gt; &#xA; &lt;li&gt;libcppunit-dev&lt;/li&gt; &#xA; &lt;li&gt;autoconf&lt;/li&gt; &#xA; &lt;li&gt;automake&lt;/li&gt; &#xA; &lt;li&gt;autotools-dev&lt;/li&gt; &#xA; &lt;li&gt;autopoint&lt;/li&gt; &#xA; &lt;li&gt;libtool&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And run following command to generate configure script and other files necessary to build the program::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ autoreconf -i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also you need &lt;code&gt;Sphinx &amp;lt;http://sphinx-doc.org/&amp;gt;&lt;/code&gt;_ to build man page.&lt;/p&gt; &#xA;&lt;p&gt;If you are building aria2 for Mac OS X, take a look at the makerelease-osx.mk GNU Make makefile.&lt;/p&gt; &#xA;&lt;p&gt;The quickest way to build aria2 is first run configure script::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./configure&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build statically linked aria2, use &lt;code&gt;ARIA2_STATIC=yes&lt;/code&gt; command-line option::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./configure ARIA2_STATIC=yes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After configuration is done, run &lt;code&gt;make&lt;/code&gt; to compile the program::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;code&gt;Cross-compiling Windows binary&lt;/code&gt;_ to create a Windows binary. See &lt;code&gt;Cross-compiling Android binary&lt;/code&gt;_ to create an Android binary.&lt;/p&gt; &#xA;&lt;p&gt;The configure script checks available libraries and enables as many features as possible except for experimental features not enabled by default.&lt;/p&gt; &#xA;&lt;p&gt;Since 1.1.0, aria2 checks the certificate of HTTPS servers by default. If you build with OpenSSL or the recent version of GnuTLS which has &lt;code&gt;gnutls_certificate_set_x509_system_trust()&lt;/code&gt; function and the library is properly configured to locate the system-wide CA certificates store, aria2 will automatically load those certificates at the startup. If it is not the case, I recommend to supply the path to the CA bundle file. For example, in Debian the path to CA bundle file is &#39;/etc/ssl/certs/ca-certificates.crt&#39; (in ca-certificates package). This may vary depending on your distribution. You can give it to configure script using &lt;code&gt;--with-ca-bundle option&lt;/code&gt;::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./configure --with-ca-bundle=&#39;/etc/ssl/certs/ca-certificates.crt&#39;&#xA;$ make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Without &lt;code&gt;--with-ca-bundle&lt;/code&gt; option, you will encounter the error when accessing HTTPS servers because the certificate cannot be verified without CA bundle. In such case, you can specify the CA bundle file using aria2&#39;s &lt;code&gt;--ca-certificate&lt;/code&gt; option. If you don&#39;t have CA bundle file installed, then the last resort is disable the certificate validation using &lt;code&gt;--check-certificate=false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Using the native OSX (AppleTLS) and/or Windows (WinTLS) implementation will automatically use the system certificate store, so &lt;code&gt;--with-ca-bundle&lt;/code&gt; is not necessary and will be ignored when using these implementations.&lt;/p&gt; &#xA;&lt;p&gt;By default, the bash_completion file named &lt;code&gt;aria2c&lt;/code&gt; is installed to the directory &lt;code&gt;$prefix/share/doc/aria2/bash_completion&lt;/code&gt;. To change the install directory of the file, use &lt;code&gt;--with-bashcompletiondir&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;After a &lt;code&gt;make&lt;/code&gt; the executable is located at &lt;code&gt;src/aria2c&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;aria2 uses CppUnit for automated unit testing. To run the unit test::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ make check&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Cross-compiling Windows binary&lt;/h2&gt; &#xA;&lt;p&gt;In this section, we describe how to build a Windows binary using a mingw-w64 (&lt;a href=&#34;http://mingw-w64.org/doku.php&#34;&gt;http://mingw-w64.org/doku.php&lt;/a&gt;) cross-compiler on Debian Linux. The MinGW (&lt;a href=&#34;http://www.mingw.org/&#34;&gt;http://www.mingw.org/&lt;/a&gt;) may not be able to build aria2.&lt;/p&gt; &#xA;&lt;p&gt;The easiest way to build Windows binary is use Dockerfile.mingw. See Dockerfile.mingw how to build binary. If you cannot use Dockerfile, then continue to read following paragraphs.&lt;/p&gt; &#xA;&lt;p&gt;Basically, after compiling and installing depended libraries, you can do cross-compile just passing appropriate &lt;code&gt;--host&lt;/code&gt; option and specifying &lt;code&gt;CPPFLAGS&lt;/code&gt;, &lt;code&gt;LDFLAGS&lt;/code&gt; and &lt;code&gt;PKG_CONFIG_LIBDIR&lt;/code&gt; variables to configure. For convenience and lowering our own development cost, we provide easier way to configure the build settings.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;mingw-config&lt;/code&gt; script is a configure script wrapper for mingw-w64. We use it to create official Windows build. This script assumes following libraries have been built for cross-compile:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;c-ares&lt;/li&gt; &#xA; &lt;li&gt;expat&lt;/li&gt; &#xA; &lt;li&gt;sqlite3&lt;/li&gt; &#xA; &lt;li&gt;zlib&lt;/li&gt; &#xA; &lt;li&gt;libssh2&lt;/li&gt; &#xA; &lt;li&gt;cppunit&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some environment variables can be adjusted to change build settings:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;HOST&lt;/code&gt; cross-compile to build programs to run on &lt;code&gt;HOST&lt;/code&gt;. It defaults to &lt;code&gt;i686-w64-mingw32&lt;/code&gt;. To build 64bit binary, specify &lt;code&gt;x86_64-w64-mingw32&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;PREFIX&lt;/code&gt; Prefix to the directory where dependent libraries are installed. It defaults to &lt;code&gt;/usr/local/$HOST&lt;/code&gt;. &lt;code&gt;-I$PREFIX/include&lt;/code&gt; will be added to &lt;code&gt;CPPFLAGS&lt;/code&gt;. &lt;code&gt;-L$PREFIX/lib&lt;/code&gt; will be added to &lt;code&gt;LDFLAGS&lt;/code&gt;. &lt;code&gt;$PREFIX/lib/pkgconfig&lt;/code&gt; will be set to &lt;code&gt;PKG_CONFIG_LIBDIR&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example, to build 64bit binary do this::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ HOST=x86_64-w64-mingw32 ./mingw-config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want libaria2 dll with &lt;code&gt;--enable-libaria2&lt;/code&gt;, then don&#39;t use &lt;code&gt;ARIA2_STATIC=yes&lt;/code&gt; and prepare the DLL version of external libraries.&lt;/p&gt; &#xA;&lt;h2&gt;Cross-compiling Android binary&lt;/h2&gt; &#xA;&lt;p&gt;In this section, we describe how to build Android binary using Android NDK cross-compiler on Debian Linux.&lt;/p&gt; &#xA;&lt;p&gt;At the time of this writing, Android NDK r21e should compile aria2 without errors.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;android-config&lt;/code&gt; script is a configure script wrapper for Android build. We use it to create official Android build. This script assumes the following libraries have been built for cross-compile:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;c-ares&lt;/li&gt; &#xA; &lt;li&gt;openssl&lt;/li&gt; &#xA; &lt;li&gt;expat&lt;/li&gt; &#xA; &lt;li&gt;zlib&lt;/li&gt; &#xA; &lt;li&gt;libssh2&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When building the above libraries, make sure that disable shared library and enable only static library. We are going to link those libraries statically.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;android-config&lt;/code&gt; assumes that &lt;code&gt;$ANDROID_HOME&lt;/code&gt; and &lt;code&gt;$NDK&lt;/code&gt; environment variables are defined.&lt;/p&gt; &#xA;&lt;p&gt;We currently use Android NDK r21e. &lt;code&gt;$NDK&lt;/code&gt; should point to the directory to Anroid NDK. The build tools will be found under &lt;code&gt;$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;All the dependent libraries must be installed under &lt;code&gt;$ANDROID_HOME/usr/local&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;After &lt;code&gt;android-config&lt;/code&gt;, run &lt;code&gt;make&lt;/code&gt; to compile sources.&lt;/p&gt; &#xA;&lt;h2&gt;Building documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Sphinx &amp;lt;http://sphinx-doc.org/&amp;gt;&lt;/code&gt;_ is used to build the documentation. aria2 man pages will be build when you run &lt;code&gt;make&lt;/code&gt; if they are not up-to-date. You can also build HTML version of aria2 man page by &lt;code&gt;make html&lt;/code&gt;. The HTML version manual is also available at &lt;code&gt;online &amp;lt;https://aria2.github.io/manual/en/html/&amp;gt;&lt;/code&gt;_ (&lt;code&gt;Russian translation &amp;lt;https://aria2.github.io/manual/ru/html/&amp;gt;&lt;/code&gt;&lt;em&gt;, &lt;code&gt;Portuguese translation &amp;lt;https://aria2.github.io/manual/pt/html/&amp;gt;&lt;/code&gt;&lt;/em&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;BitTorrent&lt;/h2&gt; &#xA;&lt;p&gt;About file names&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;The file name of the downloaded file is determined as follows:&#xA;&#xA;single-file mode&#xA;    If &#34;name&#34; key is present in .torrent file, file name is the value&#xA;    of &#34;name&#34; key. Otherwise, file name is the base name of .torrent&#xA;    file appended by &#34;.file&#34;. For example, .torrent file is&#xA;    &#34;test.torrent&#34;, then file name is &#34;test.torrent.file&#34;.  The&#xA;    directory to store the downloaded file can be specified by -d&#xA;    option.&#xA;&#xA;multi-file mode&#xA;    The complete directory/file structure mentioned in .torrent file&#xA;    is created.  The directory to store the top directory of&#xA;    downloaded files can be specified by -d option.&#xA;&#xA;Before download starts, a complete directory structure is created if&#xA;needed. By default, aria2 opens at most 100 files mentioned in&#xA;.torrent file, and directly writes to and reads from these files. &#xA;The number of files to open simultaneously can be controlled by&#xA;``--bt-max-open-files`` option.&#xA;&#xA;DHT&#xA;~~~&#xA;&#xA;aria2 supports mainline compatible DHT. By default, the routing table&#xA;for IPv4 DHT is saved to ``$XDG_CACHE_HOME/aria2/dht.dat`` and the&#xA;routing table for IPv6 DHT is saved to&#xA;``$XDG_CACHE_HOME/aria2/dht6.dat`` unless files exist at&#xA;``$HOME/.aria2/dht.dat`` or ``$HOME/.aria2/dht6.dat``. aria2 uses same&#xA;port number to listen on for both IPv4 and IPv6 DHT.&#xA;&#xA;UDP tracker&#xA;~~~~~~~~~~~&#xA;&#xA;UDP tracker support is enabled when IPv4 DHT is enabled.  The port&#xA;number of UDP tracker is shared with DHT. Use ``--dht-listen-port``&#xA;option to change the port number.&#xA;&#xA;Other things should be noted&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;-o&lt;/code&gt; option is used to change the file name of .torrent file itself, not a file name of a file in .torrent file. For this purpose, use &lt;code&gt;--index-out&lt;/code&gt; option instead.&lt;/li&gt; &#xA; &lt;li&gt;The port numbers that aria2 uses by default are 6881-6999 for TCP and UDP.&lt;/li&gt; &#xA; &lt;li&gt;aria2 doesn&#39;t configure port-forwarding automatically. Please configure your router or firewall manually.&lt;/li&gt; &#xA; &lt;li&gt;The maximum number of peers is 55. This limit may be exceeded when download rate is low. This download rate can be adjusted using &lt;code&gt;--bt-request-peer-speed-limit&lt;/code&gt; option.&lt;/li&gt; &#xA; &lt;li&gt;As of release 0.10.0, aria2 stops sending request message after selective download completes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Metalink&lt;/h2&gt; &#xA;&lt;p&gt;The current implementation supports HTTP(S)/FTP/SFTP/BitTorrent. The other P2P protocols are ignored. Both Metalink4 (RFC 5854) and Metalink version 3.0 documents are supported.&lt;/p&gt; &#xA;&lt;p&gt;For checksum verification, md5, sha-1, sha-224, sha-256, sha-384 and sha-512 are supported. If multiple hash algorithms are provided, aria2 uses stronger one. If whole file checksum verification fails, aria2 doesn&#39;t retry the download and just exits with non-zero return code.&lt;/p&gt; &#xA;&lt;p&gt;The supported user preferences are version, language, location, protocol and os.&lt;/p&gt; &#xA;&lt;p&gt;If chunk checksums are provided in Metalink file, aria2 automatically validates chunks of data during download. This behavior can be turned off by a command-line option.&lt;/p&gt; &#xA;&lt;p&gt;If signature is included in a Metalink file, aria2 saves it as a file after the completion of the download. The file name is download file name + &#34;.sig&#34;. If same file already exists, the signature file is not saved.&lt;/p&gt; &#xA;&lt;p&gt;In Metalink4, multi-file torrent could appear in metalink:metaurl element. Since aria2 cannot download 2 same torrents at the same time, aria2 groups files in metalink:file element which has same BitTorrent metaurl and downloads them from a single BitTorrent swarm. This is basically multi-file torrent download with file selection, so the adjacent files which is not in Metalink document but shares same piece with selected file are also created.&lt;/p&gt; &#xA;&lt;p&gt;If relative URI is specified in metalink:url or metalink:metaurl element, aria2 uses the URI of Metalink file as base URI to resolve the relative URI. If relative URI is found in Metalink file which is read from local disk, aria2 uses the value of &lt;code&gt;--metalink-base-uri&lt;/code&gt; option as base URI. If this option is not specified, the relative URI will be ignored.&lt;/p&gt; &#xA;&lt;h2&gt;Metalink/HTTP&lt;/h2&gt; &#xA;&lt;p&gt;The current implementation only uses rel=duplicate links only. aria2 understands Digest header fields and check whether it matches the digest value from other sources. If it differs, drop connection. aria2 also uses this digest value to perform checksum verification after download finished. aria2 recognizes geo value. To tell aria2 which location you prefer, you can use &lt;code&gt;--metalink-location&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;h2&gt;netrc&lt;/h2&gt; &#xA;&lt;p&gt;netrc support is enabled by default for HTTP(S)/FTP/SFTP. To disable netrc support, specify -n command-line option. Your .netrc file should have correct permissions(600).&lt;/p&gt; &#xA;&lt;h2&gt;WebSocket&lt;/h2&gt; &#xA;&lt;p&gt;The WebSocket server embedded in aria2 implements the specification defined in RFC 6455. The supported protocol version is 13.&lt;/p&gt; &#xA;&lt;h2&gt;libaria2&lt;/h2&gt; &#xA;&lt;p&gt;The libaria2 is a C++ library which offers aria2 functionality to the client code. Currently, libaria2 is not built by default. To enable libaria2, use &lt;code&gt;--enable-libaria2&lt;/code&gt; configure option. By default, only the shared library is built. To build static library, use &lt;code&gt;--enable-static&lt;/code&gt; configure option as well. See libaria2 documentation to know how to use API.&lt;/p&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;aria2 Online Manual &amp;lt;https://aria2.github.io/manual/en/html/&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://aria2.github.io/&#34;&gt;https://aria2.github.io/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;RFC 959 FILE TRANSFER PROTOCOL (FTP) &amp;lt;http://tools.ietf.org/html/rfc959&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;RFC 1738 Uniform Resource Locators (URL) &amp;lt;http://tools.ietf.org/html/rfc1738&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;RFC 2428 FTP Extensions for IPv6 and NATs &amp;lt;http://tools.ietf.org/html/rfc2428&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;RFC 2616 Hypertext Transfer Protocol -- HTTP/1.1 &amp;lt;http://tools.ietf.org/html/rfc2616&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;RFC 3659 Extensions to FTP &amp;lt;http://tools.ietf.org/html/rfc3659&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;RFC 3986 Uniform Resource Identifier (URI): Generic Syntax &amp;lt;http://tools.ietf.org/html/rfc3986&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;RFC 4038 Application Aspects of IPv6 Transition &amp;lt;http://tools.ietf.org/html/rfc4038&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;RFC 5854 The Metalink Download Description Format &amp;lt;http://tools.ietf.org/html/rfc5854&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;RFC 6249 Metalink/HTTP: Mirrors and Hashes &amp;lt;http://tools.ietf.org/html/rfc6249&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;RFC 6265 HTTP State Management Mechanism &amp;lt;http://tools.ietf.org/html/rfc6265&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;RFC 6266 Use of the Content-Disposition Header Field in the Hypertext Transfer Protocol (HTTP) &amp;lt;http://tools.ietf.org/html/rfc6266&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;RFC 6455 The WebSocket Protocol &amp;lt;http://tools.ietf.org/html/rfc6455&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;RFC 6555 Happy Eyeballs: Success with Dual-Stack Hosts &amp;lt;http://tools.ietf.org/html/rfc6555&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;The BitTorrent Protocol Specification &amp;lt;http://www.bittorrent.org/beps/bep_0003.html&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BitTorrent: DHT Protocol &amp;lt;http://www.bittorrent.org/beps/bep_0005.html&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BitTorrent: Fast Extension &amp;lt;http://www.bittorrent.org/beps/bep_0006.html&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BitTorrent: IPv6 Tracker Extension &amp;lt;http://www.bittorrent.org/beps/bep_0007.html&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BitTorrent: Extension for Peers to Send Metadata Files &amp;lt;http://www.bittorrent.org/beps/bep_0009.html&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BitTorrent: Extension Protocol &amp;lt;http://www.bittorrent.org/beps/bep_0010.html&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BitTorrent: Multitracker Metadata Extension &amp;lt;http://www.bittorrent.org/beps/bep_0012.html&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BitTorrent: UDP Tracker Protocol for BitTorrent &amp;lt;http://www.bittorrent.org/beps/bep_0015.html&amp;gt;&lt;/code&gt;_ and &lt;code&gt;BitTorrent udp-tracker protocol specification &amp;lt;http://www.rasterbar.com/products/libtorrent/udp_tracker_protocol.html&amp;gt;&lt;/code&gt;_.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BitTorrent: WebSeed - HTTP/FTP Seeding (GetRight style) &amp;lt;http://www.bittorrent.org/beps/bep_0019.html&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BitTorrent: Private Torrents &amp;lt;http://www.bittorrent.org/beps/bep_0027.html&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BitTorrent: BitTorrent DHT Extensions for IPv6 &amp;lt;http://www.bittorrent.org/beps/bep_0032.html&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BitTorrent: Message Stream Encryption &amp;lt;http://wiki.vuze.com/w/Message_Stream_Encryption&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Kademlia: A Peer-to-peer Information System Based on the XOR Metric &amp;lt;https://pdos.csail.mit.edu/~petar/papers/maymounkov-kademlia-lncs.pdf&amp;gt;&lt;/code&gt;_&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>tindy2013/subconverter</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/tindy2013/subconverter</id>
    <link href="https://github.com/tindy2013/subconverter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Utility to convert between various subscription format&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;subconverter&lt;/h1&gt; &#xA;&lt;p&gt;Utility to convert between various proxy subscription formats.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tindy2013/subconverter/actions&#34;&gt;&lt;img src=&#34;https://github.com/tindy2013/subconverter/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tindy2013/subconverter/tags&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/tag/tindy2013/subconverter.svg?sanitize=true&#34; alt=&#34;GitHub tag (latest SemVer)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tindy2013/subconverter/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/tindy2013/subconverter.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tindy2013/subconverter/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/tindy2013/subconverter.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tindy2013/subconverter/raw/master/README-docker.md&#34;&gt;Docker README&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tindy2013/subconverter/raw/master/README-cn.md&#34;&gt;中文文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#subconverter&#34;&gt;subconverter&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#supported-types&#34;&gt;Supported Types&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#quick-usage&#34;&gt;Quick Usage&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#access-interface&#34;&gt;Access Interface&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#advanced-usage&#34;&gt;Advanced Usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#auto-upload&#34;&gt;Auto Upload&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Types&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;As Source&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;As Target&lt;/th&gt; &#xA;   &lt;th&gt;Target Name&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clash&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;clash&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ClashR&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;clashr&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Quantumult&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;quan&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Quantumult X&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;quanx&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Loon&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;loon&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SS (SIP002)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;ss&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SS Android&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;sssub&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SSD&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;ssd&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SSR&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;ssr&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Surfboard&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;surfboard&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Surge 2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;surge&amp;amp;ver=2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Surge 3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;surge&amp;amp;ver=3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Surge 4&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;surge&amp;amp;ver=4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;V2Ray&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td&gt;v2ray&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Telegram-liked HTTP/Socks 5 links&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✓&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;×&lt;/td&gt; &#xA;   &lt;td&gt;Only as source&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Notice:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Shadowrocket users should use &lt;code&gt;ss&lt;/code&gt;, &lt;code&gt;ssr&lt;/code&gt; or &lt;code&gt;v2ray&lt;/code&gt; as target.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can add &lt;code&gt;&amp;amp;remark=&lt;/code&gt; to Telegram-liked HTTP/Socks 5 links to set a remark for this node. For example:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;tg://http?server=1.2.3.4&amp;amp;port=233&amp;amp;user=user&amp;amp;pass=pass&amp;amp;remark=Example&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://t.me/http?server=1.2.3.4&amp;amp;port=233&amp;amp;user=user&amp;amp;pass=pass&amp;amp;remark=Example&#34;&gt;https://t.me/http?server=1.2.3.4&amp;amp;port=233&amp;amp;user=user&amp;amp;pass=pass&amp;amp;remark=Example&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Quick Usage&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Using default groups and rulesets configuration directly, without changing any settings&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Access Interface&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;http://127.0.0.1:25500/sub?target=%TARGET%&amp;amp;url=%URL%&amp;amp;config=%CONFIG%&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Description&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Argument&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Required&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Example&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;target&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;clash&lt;/td&gt; &#xA;   &lt;td&gt;Target subscription type. Acquire from Target Name in &lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/#supported-types&#34;&gt;Supported Types&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;url&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;https%3A%2F%2Fwww.xxx.com&lt;/td&gt; &#xA;   &lt;td&gt;Subscription to convert. Supports URLs and file paths. Process with &lt;a href=&#34;https://www.urlencoder.org/&#34;&gt;URLEncode&lt;/a&gt; first.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;config&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;No&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;https%3A%2F%2Fwww.xxx.com&lt;/td&gt; &#xA;   &lt;td&gt;External configuration file path. Supports URLs and file paths. Process with &lt;a href=&#34;https://www.urlencoder.org/&#34;&gt;URLEncode&lt;/a&gt; first. More examples can be found in &lt;a href=&#34;https://github.com/lzdnico/subconverteriniexample&#34;&gt;this&lt;/a&gt; repository.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If you need to merge two or more subscription, you should join them with &#39;|&#39; before the URLEncode process.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;You have 2 subscriptions and you want to merge them and generate a Clash subscription:&#xA;1. https://dler.cloud/subscribe/ABCDE?clash=vmess&#xA;2. https://rich.cloud/subscribe/ABCDE?clash=vmess&#xA;&#xA;First use &#39;|&#39; to separate 2 subscriptions:&#xA;https://dler.cloud/subscribe/ABCDE?clash=vmess|https://rich.cloud/subscribe/ABCDE?clash=vmess&#xA;&#xA;Then process it with URLEncode to get %URL%:&#xA;https%3A%2F%2Fdler.cloud%2Fsubscribe%2FABCDE%3Fclash%3Dvmess%7Chttps%3A%2F%2Frich.cloud%2Fsubscribe%2FABCDE%3Fclash%3Dvmess&#xA;&#xA;Then fill %TARGET% and %URL% in Access Interface with actual values:&#xA;http://127.0.0.1:25500/sub?target=clash&amp;amp;url=https%3A%2F%2Fdler.cloud%2Fsubscribe%2FABCDE%3Fclash%3Dvmess%7Chttps%3A%2F%2Frich.cloud%2Fsubscribe%2FABCDE%3Fclash%3Dvmess&#xA;&#xA;Finally subscribe this link in Clash and you are done!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Advanced Usage&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://github.com/tindy2013/subconverter/raw/master/README-cn.md#%E8%BF%9B%E9%98%B6%E7%94%A8%E6%B3%95&#34;&gt;中文文档&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Auto Upload&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Upload Gist automatically&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Add a &lt;a href=&#34;https://github.com/settings/tokens/new&#34;&gt;Personal Access Token&lt;/a&gt; into &lt;a href=&#34;https://raw.githubusercontent.com/tindy2013/subconverter/master/gistconf.ini&#34;&gt;gistconf.ini&lt;/a&gt; in the root directory, then add &lt;code&gt;&amp;amp;upload=true&lt;/code&gt; to the local subscription link, then when you access this link, the program will automatically update the content to Gist repository.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[common]&#xA;;uncomment the following line and enter your token to enable upload function&#xA;token = xxxxxxxxxxxxxxxxxxxxxxxx(Your Personal Access Token)&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>loveBabbar/CodeHelp-DSA-Busted-Series</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/loveBabbar/CodeHelp-DSA-Busted-Series</id>
    <link href="https://github.com/loveBabbar/CodeHelp-DSA-Busted-Series" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repo is creating providing students easy access to all the programs taught under Codehelp&#39;s DSA Busted Series.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CodeHelp-DSA-Busted-Series&lt;/h1&gt; &#xA;&lt;p&gt;Hello Jee,&lt;/p&gt; &#xA;&lt;p&gt;This repo is for the students for easy access to all the programs taught under Codehelp&#39;s DSA Busted Series.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=WQoB2z67hvY&amp;amp;list=PLDzeHZWIZsTryvtXdMr6rPh4IDexB5NIA&#34;&gt;DSA Busted Series&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Youtube Channel: CodeHelp - by Babbar&lt;/p&gt; &#xA;&lt;p&gt;Your Instructor: Love Babbar&lt;/p&gt; &#xA;&lt;p&gt;Learn a Lot, Enjoy a Lot.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MaaAssistantArknights/MaaAssistantArknights</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/MaaAssistantArknights/MaaAssistantArknights</id>
    <link href="https://github.com/MaaAssistantArknights/MaaAssistantArknights" rel="alternate"></link>
    <summary type="html">&lt;p&gt;《明日方舟》小助手，自动刷图、智能基建换班，全日常一键长草！&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img alt=&#34;LOGO&#34; src=&#34;https://user-images.githubusercontent.com/18511905/148931479-23aef436-2fc1-4c1e-84c9-bae17be710a5.png&#34; width=&#34;360&#34; height=&#34;270/&#34;&gt; &#xA; &lt;h1&gt;MaaAssistantArknights&lt;/h1&gt; &#xA; &lt;br&gt; &#xA; &lt;div&gt; &#xA;  &lt;img alt=&#34;C++&#34; src=&#34;https://img.shields.io/badge/c++-17-%2300599C?logo=cplusplus&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;div&gt; &#xA;  &lt;img alt=&#34;platform&#34; src=&#34;https://img.shields.io/badge/platform-Windows%20%7C%20Linux%20%7C%20macOS-blueviolet&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;div&gt; &#xA;  &lt;img alt=&#34;license&#34; src=&#34;https://img.shields.io/github/license/MaaAssistantArknights/MaaAssistantArknights&#34;&gt; &#xA;  &lt;img alt=&#34;commit&#34; src=&#34;https://img.shields.io/github/commit-activity/m/MaaAssistantArknights/MaaAssistantArknights?color=%23ff69b4&#34;&gt; &#xA;  &lt;img alt=&#34;stars&#34; src=&#34;https://img.shields.io/github/stars/MaaAssistantArknights/MaaAssistantArknights?style=social&#34;&gt; &#xA; &lt;/div&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;MAA 的意思是 MAA Assistant Arknights&lt;/p&gt; &#xA; &lt;p&gt;一款明日方舟游戏小助手&lt;/p&gt; &#xA; &lt;p&gt;基于图像识别技术，一键完成全部日常任务！&lt;/p&gt; &#xA; &lt;p&gt;绝赞更新中 ✿✿ヽ(°▽°)ノ✿&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;亮点功能&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;刷理智，掉落识别及上传 &lt;a href=&#34;https://penguin-stats.cn/&#34;&gt;企鹅物流&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;智能基建换班，自动计算干员效率，单设施内最优解&lt;/li&gt; &#xA; &lt;li&gt;自动公招，可选使用加急许可，一次全部刷完&lt;/li&gt; &#xA; &lt;li&gt;访问好友、收取信用及购物、领取日常奖励等。一键全日常自动长草！&lt;/li&gt; &#xA; &lt;li&gt;肉鸽全自动刷源石锭和蜡烛，自动识别干员及练度&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;新功能！导入作业 JSON 文件，自动抄作业！&lt;/strong&gt; &lt;a href=&#34;https://www.bilibili.com/video/BV14u411673q/&#34;&gt;视频演示&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;话不多说，看图！&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/18511905/148376809-a80537b7-5e97-4978-959e-afada28c03c3.png&#34; alt=&#34;image&#34;&gt;&lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/18511905/152695664-382dc0cd-de6c-4012-890f-456f697e8724.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;下载地址&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaAssistantArknights/releases/latest&#34;&gt;稳定版&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaAssistantArknights/releases&#34;&gt;测试版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;使用说明&lt;/h2&gt; &#xA;&lt;h3&gt;基本说明&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;请根据 &lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E6%A8%A1%E6%8B%9F%E5%99%A8%E6%94%AF%E6%8C%81.md&#34;&gt;模拟器支持情况&lt;/a&gt;，进行对应的操作。&lt;/li&gt; &#xA; &lt;li&gt;解压压缩包，到 &lt;strong&gt;没有中文或特殊符号&lt;/strong&gt; 的文件夹路径。&lt;/li&gt; &#xA; &lt;li&gt;第一次运行软件，&lt;strong&gt;请使用管理员权限&lt;/strong&gt; 打开 &lt;code&gt;MeoAsstGui.exe&lt;/code&gt;。运行过一次后，后续不再需要管理员权限。&lt;/li&gt; &#xA; &lt;li&gt;开始运行后，除 &lt;code&gt;自动关机&lt;/code&gt; 外，所有设置均不可再修改。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;目前仅对 &lt;code&gt;16:9&lt;/code&gt; 分辨率支持较好，最低支持 &lt;code&gt;1280 * 720&lt;/code&gt;，更高不限。非 &lt;code&gt;16:9&lt;/code&gt; 分辨率可能会有奇奇怪怪的问题，正在进一步适配中_(:з」∠)_&lt;/p&gt; &#xA;&lt;p&gt;更多使用说明请参考 &lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D.md&#34;&gt;详细介绍&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;常见问题&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;软件一打开就闪退&lt;/li&gt; &#xA; &lt;li&gt;连接错误/捕获模拟器窗口错误&lt;/li&gt; &#xA; &lt;li&gt;识别错误/任务开始后一直不动、没有反应&lt;/li&gt; &#xA; &lt;li&gt;如何连接自定义端口&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;请参考 &lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.md&#34;&gt;常见问题&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;主要关联项目&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;全新 GUI: &lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaAsstElectronUI&#34;&gt;MaaAsstElectronUI&lt;/a&gt; （正在开发中，欢迎加入！）&lt;/li&gt; &#xA; &lt;li&gt;更新服务器: &lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaDownloadServer&#34;&gt;MaaDownloadServer&lt;/a&gt; （正在开发中，欢迎加入！）&lt;/li&gt; &#xA; &lt;li&gt;自动战斗作业服务器: &lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaCopilotServer&#34;&gt;MaaCopilotServer&lt;/a&gt; （正在开发中，欢迎加入！）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;致谢&lt;/h2&gt; &#xA;&lt;h3&gt;开源库&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;图像识别库：&lt;a href=&#34;https://github.com/opencv/opencv.git&#34;&gt;opencv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;文字识别库：&lt;a href=&#34;https://github.com/DayBreak-u/chineseocr_lite.git&#34;&gt;chineseocr_lite&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;文字识别库：&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR&#34;&gt;PaddleOCR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;关卡掉落识别：&lt;a href=&#34;https://github.com/penguin-statistics/recognizer&#34;&gt;企鹅物流识别&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;地图格子识别：&lt;a href=&#34;https://github.com/yuanyan3060/Arknights-Tile-Pos&#34;&gt;Arknights-Tile-Pos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C++ JSON库：&lt;a href=&#34;https://github.com/MistEO/meojson.git&#34;&gt;meojson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C++ 运算符解析器：&lt;a href=&#34;https://github.com/kimwalisch/calculator&#34;&gt;calculator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C++ base64编解码：&lt;a href=&#34;https://github.com/ReneNyffenegger/cpp-base64&#34;&gt;cpp-base64&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C++ 解压压缩库：&lt;a href=&#34;https://github.com/madler/zlib&#34;&gt;zlib&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C++ Gzip封装：&lt;a href=&#34;https://github.com/mapbox/gzip-hpp&#34;&gt;gzip-hpp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WPF MVVW框架：&lt;a href=&#34;https://github.com/canton7/Stylet&#34;&gt;Stylet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WPF控件库：&lt;a href=&#34;https://github.com/HandyOrg/HandyControl&#34;&gt;HandyControl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C# JSON库: &lt;a href=&#34;https://github.com/JamesNK/Newtonsoft.Json&#34;&gt;Newtonsoft.Json&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;下载器：&lt;a href=&#34;https://github.com/aria2/aria2&#34;&gt;aria2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;数据源&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;公开招募数据：&lt;a href=&#34;https://www.bigfun.cn/tools/aktools/hr&#34;&gt;明日方舟工具箱&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;干员及基建数据：&lt;a href=&#34;http://prts.wiki/&#34;&gt;PRTS明日方舟中文WIKI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;关卡数据：&lt;a href=&#34;https://penguin-stats.cn/&#34;&gt;企鹅物流数据统计&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;材料数据：&lt;a href=&#34;https://github.com/yuanyan3060/Arknights-Bot-Resource&#34;&gt;明日方舟bot常用素材&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;贡献/参与者&lt;/h3&gt; &#xA;&lt;p&gt;感谢所有参与到开发/测试中的朋友们，是大家的帮助让 MAA 越来越好！ (*´▽｀)ノノ&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MaaAssistantArknights/MaaAssistantArknights/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contributors-img.web.app/image?repo=MaaAssistantArknights/MaaAssistantArknights&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;开发相关&lt;/h2&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;直接使用 Visual Studio 2019 &lt;del&gt;或更高版本&lt;/del&gt; 打开 &lt;code&gt;MeoAssistantArknights.sln&lt;/code&gt; 即可，所有环境都是配置好的&lt;/p&gt; &#xA;&lt;h3&gt;Linux | macOS&lt;/h3&gt; &#xA;&lt;p&gt;请参考 &lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/Linux%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B.md&#34;&gt;Linux 编译教程&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;API&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/include/AsstCaller.h&#34;&gt;C 接口&lt;/a&gt;：&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/tools/TestCaller/main.cpp&#34;&gt;集成示例&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/src/Python/asst.py&#34;&gt;Python 接口&lt;/a&gt;：&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/src/Python/sample.py&#34;&gt;集成示例&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/src/Golang/maa/&#34;&gt;Golang 接口&lt;/a&gt;：&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/src/Golang/cli.go&#34;&gt;集成示例&lt;/a&gt;（已停止维护 orz）&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/src/dart/&#34;&gt;Dart 接口&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/src/Java/Maaj&#34;&gt;Java 接口&lt;/a&gt;：&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/src/Java/Maaj/src/main/java/com/iguigui/maaj/MaaJavaSample.java&#34;&gt;集成示例&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E9%9B%86%E6%88%90%E6%96%87%E6%A1%A3.md&#34;&gt;集成文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E5%9B%9E%E8%B0%83%E6%B6%88%E6%81%AF%E5%8D%8F%E8%AE%AE.md&#34;&gt;回调消息协议&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E4%BB%BB%E5%8A%A1%E6%B5%81%E7%A8%8B%E5%8D%8F%E8%AE%AE.md&#34;&gt;任务流程协议&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E6%88%98%E6%96%97%E6%B5%81%E7%A8%8B%E5%8D%8F%E8%AE%AE.md&#34;&gt;自动抄作业协议&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;对连 Git 都不熟悉的超级萌新，请看&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaaAssistantArknights/MaaAssistantArknights/master/docs/%E5%86%99%E7%BB%99%E8%90%8C%E6%96%B0%E7%9A%84%E5%8F%91%E7%94%B5%E5%85%A8%E6%B5%81%E7%A8%8B.md&#34;&gt;写给萌新的发电全流程&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;声明&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本软件 logo 并非使用 AGPL 3.0 协议开源，画师 &lt;a href=&#34;https://weibo.com/u/3251357314&#34;&gt;耗毛&lt;/a&gt; 及软件全体开发者保留所有权利。不得以 AGPL 3.0 协议已授权为由在未经授权的情况下使用本软件 logo, 不得在未经授权的情况下将本软件 logo 用于任何商业用途。&lt;/li&gt; &#xA; &lt;li&gt;本软件开源、免费，仅供学习交流使用。若您遇到商家使用本软件进行代练并收费，可能是设备与时间等费用，产生的问题及后果与本软件无关。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;广告&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://live.bilibili.com/2808861&#34;&gt;B 站直播间&lt;/a&gt;：每晚直播敲代码，近期很长一段时间应该都是在写本软件~&lt;br&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=ypbzXcA2&#34;&gt;技术交流 &amp;amp; 吹水群&lt;/a&gt;：内卷地狱！（明日方舟弱相关）&lt;br&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=1giyMpPb&#34;&gt;自动战斗 JSON 作业分享群&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=JM9oCk3C&#34;&gt;开发者群&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;如果觉得软件对你有帮助，帮忙点个 Star 吧！~（网页最上方右上角的小星星），这就是对我们最大的支持了！&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ArduPilot/ardupilot</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/ArduPilot/ardupilot</id>
    <link href="https://github.com/ArduPilot/ardupilot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ArduPlane, ArduCopter, ArduRover, ArduSub source&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ArduPilot Project&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ardupilot.org/discord&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/674039678562861068.svg?sanitize=true&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;a href=&#34;https://ardupilot.org/discord&#34;&gt; &lt;/a&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://ardupilot.org/discord&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://github.com/ArduPilot/ardupilot/actions/workflows/test_sitl_copter.yml&#34;&gt;&lt;img src=&#34;https://github.com/ArduPilot/ardupilot/workflows/test%20copter/badge.svg?branch=master&#34; alt=&#34;Test Copter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ArduPilot/ardupilot/actions/workflows/test_sitl_plane.yml&#34;&gt;&lt;img src=&#34;https://github.com/ArduPilot/ardupilot/workflows/test%20plane/badge.svg?branch=master&#34; alt=&#34;Test Plane&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ArduPilot/ardupilot/actions/workflows/test_sitl_rover.yml&#34;&gt;&lt;img src=&#34;https://github.com/ArduPilot/ardupilot/workflows/test%20rover/badge.svg?branch=master&#34; alt=&#34;Test Rover&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ArduPilot/ardupilot/actions/workflows/test_sitl_sub.yml&#34;&gt;&lt;img src=&#34;https://github.com/ArduPilot/ardupilot/workflows/test%20sub/badge.svg?branch=master&#34; alt=&#34;Test Sub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ArduPilot/ardupilot/actions/workflows/test_sitl_tracker.yml&#34;&gt;&lt;img src=&#34;https://github.com/ArduPilot/ardupilot/workflows/test%20tracker/badge.svg?branch=master&#34; alt=&#34;Test Tracker&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ArduPilot/ardupilot/actions/workflows/test_sitl_periph.yml&#34;&gt;&lt;img src=&#34;https://github.com/ArduPilot/ardupilot/workflows/test%20ap_periph/badge.svg?branch=master&#34; alt=&#34;Test AP_Periph&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ArduPilot/ardupilot/actions/workflows/test_chibios.yml&#34;&gt;&lt;img src=&#34;https://github.com/ArduPilot/ardupilot/workflows/test%20chibios/badge.svg?branch=master&#34; alt=&#34;Test Chibios&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ArduPilot/ardupilot/actions/workflows/test_linux_sbc.yml&#34;&gt;&lt;img src=&#34;https://github.com/ArduPilot/ardupilot/workflows/test%20Linux%20SBC/badge.svg?branch=master&#34; alt=&#34;Test Linux SBC&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ArduPilot/ardupilot/actions/workflows/test_replay.yml&#34;&gt;&lt;img src=&#34;https://github.com/ArduPilot/ardupilot/workflows/test%20replay/badge.svg?branch=master&#34; alt=&#34;Test Replay&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ArduPilot/ardupilot/actions/workflows/test_unit_tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/ArduPilot/ardupilot/workflows/test%20unit%20tests/badge.svg?branch=master&#34; alt=&#34;Test Unit Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ArduPilot/ardupilot/actions/workflows/test_size.yml&#34;&gt;&lt;img src=&#34;https://github.com/ArduPilot/ardupilot/actions/workflows/test_size.yml/badge.svg?sanitize=true&#34; alt=&#34;test size&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ArduPilot/ardupilot/actions/workflows/test_environment.yml&#34;&gt;&lt;img src=&#34;https://github.com/ArduPilot/ardupilot/actions/workflows/test_environment.yml/badge.svg?branch=master&#34; alt=&#34;Test Environment Setup&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ArduPilot/ardupilot/actions/workflows/cygwin_build.yml&#34;&gt;&lt;img src=&#34;https://github.com/ArduPilot/ardupilot/actions/workflows/cygwin_build.yml/badge.svg?sanitize=true&#34; alt=&#34;Cygwin Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ArduPilot/ardupilot/actions/workflows/macos_build.yml&#34;&gt;&lt;img src=&#34;https://github.com/ArduPilot/ardupilot/actions/workflows/macos_build.yml/badge.svg?sanitize=true&#34; alt=&#34;Macos Build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://scan.coverity.com/projects/ardupilot-ardupilot&#34;&gt;&lt;img src=&#34;https://scan.coverity.com/projects/5331/badge.svg?sanitize=true&#34; alt=&#34;Coverity Scan Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ArduPilot/ardupilot/actions/workflows/test_coverage.yml&#34;&gt;&lt;img src=&#34;https://github.com/ArduPilot/ardupilot/actions/workflows/test_coverage.yml/badge.svg?branch=master&#34; alt=&#34;Test Coverage&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://autotest.ardupilot.org/&#34;&gt;&lt;img src=&#34;https://autotest.ardupilot.org/autotest-badge.svg?sanitize=true&#34; alt=&#34;Autotest Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ArduPilot is the most advanced, full-featured, and reliable open source autopilot software available. It has been under development since 2010 by a diverse team of professional engineers, computer scientists, and community contributors. Our autopilot software is capable of controlling almost any vehicle system imaginable, from conventional airplanes, quad planes, multi-rotors, and helicopters to rovers, boats, balance bots, and even submarines. It is continually being expanded to provide support for new emerging vehicle types.&lt;/p&gt; &#xA;&lt;h2&gt;The ArduPilot project is made up of:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;ArduCopter: &lt;a href=&#34;https://github.com/ArduPilot/ardupilot/tree/master/ArduCopter&#34;&gt;code&lt;/a&gt;, &lt;a href=&#34;https://ardupilot.org/copter/index.html&#34;&gt;wiki&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ArduPlane: &lt;a href=&#34;https://github.com/ArduPilot/ardupilot/tree/master/ArduPlane&#34;&gt;code&lt;/a&gt;, &lt;a href=&#34;https://ardupilot.org/plane/index.html&#34;&gt;wiki&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Rover: &lt;a href=&#34;https://github.com/ArduPilot/ardupilot/tree/master/Rover&#34;&gt;code&lt;/a&gt;, &lt;a href=&#34;https://ardupilot.org/rover/index.html&#34;&gt;wiki&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ArduSub : &lt;a href=&#34;https://github.com/ArduPilot/ardupilot/tree/master/ArduSub&#34;&gt;code&lt;/a&gt;, &lt;a href=&#34;http://ardusub.com/&#34;&gt;wiki&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Antenna Tracker : &lt;a href=&#34;https://github.com/ArduPilot/ardupilot/tree/master/AntennaTracker&#34;&gt;code&lt;/a&gt;, &lt;a href=&#34;https://ardupilot.org/antennatracker/index.html&#34;&gt;wiki&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;User Support &amp;amp; Discussion Forums&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Support Forum: &lt;a href=&#34;https://discuss.ardupilot.org/&#34;&gt;https://discuss.ardupilot.org/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Community Site: &lt;a href=&#34;https://ardupilot.org&#34;&gt;https://ardupilot.org&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developer Information&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Github repository: &lt;a href=&#34;https://github.com/ArduPilot/ardupilot&#34;&gt;https://github.com/ArduPilot/ardupilot&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Main developer wiki: &lt;a href=&#34;https://ardupilot.org/dev/&#34;&gt;https://ardupilot.org/dev/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Developer discussion: &lt;a href=&#34;https://discuss.ardupilot.org&#34;&gt;https://discuss.ardupilot.org&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Developer chat: &lt;a href=&#34;https://discord.com/channels/ardupilot&#34;&gt;https://discord.com/channels/ardupilot&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Top Contributors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArduPilot/ardupilot/graphs/contributors&#34;&gt;Flight code contributors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ArduPilot/ardupilot_wiki/graphs/contributors&#34;&gt;Wiki contributors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discuss.ardupilot.org/u?order=post_count&amp;amp;period=quarterly&#34;&gt;Most active support forum users&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ardupilot.org/about/Partners&#34;&gt;Partners who contribute financially&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How To Get Involved&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The ArduPilot project is open source and we encourage participation and code contributions: &lt;a href=&#34;https://ardupilot.org/dev/docs/contributing.html&#34;&gt;guidelines for contributors to the ardupilot codebase&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;We have an active group of Beta Testers to help us improve our code: &lt;a href=&#34;https://ardupilot.org/dev/docs/release-procedures.html&#34;&gt;release procedures&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Desired Enhancements and Bugs can be posted to the &lt;a href=&#34;https://github.com/ArduPilot/ardupilot/issues&#34;&gt;issues list&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Help other users with log analysis in the &lt;a href=&#34;https://discuss.ardupilot.org/&#34;&gt;support forums&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Improve the wiki and chat with other &lt;a href=&#34;https://discord.com/channels/ardupilot&#34;&gt;wiki editors on Discord #documentation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Contact the developers on one of the &lt;a href=&#34;https://ardupilot.org/copter/docs/common-contact-us.html&#34;&gt;communication channels&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The ArduPilot project is licensed under the GNU General Public License, version 3.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://dev.ardupilot.com/wiki/license-gplv3&#34;&gt;Overview of license&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ArduPilot/ardupilot/raw/master/COPYING.txt&#34;&gt;Full Text&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;ArduPilot is comprised of several parts, vehicles and boards. The list below contains the people that regularly contribute to the project and are responsible for reviewing patches on their specific area.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tridge&#34;&gt;Andrew Tridgell&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Vehicle&lt;/strong&gt;&lt;/em&gt;: Plane, AntennaTracker&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Board&lt;/strong&gt;&lt;/em&gt;: Pixhawk, Pixhawk2, PixRacer&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/oxinarf&#34;&gt;Francisco Ferreira&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Bug Master&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gmorph&#34;&gt;Grant Morphett&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Vehicle&lt;/strong&gt;&lt;/em&gt;: Rover&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/williangalvani&#34;&gt;Willian Galvani&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Vehicle&lt;/strong&gt;&lt;/em&gt;: Sub&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lucasdemarchi&#34;&gt;Lucas De Marchi&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: Linux&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/WickedShell&#34;&gt;Michael du Breuil&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: Batteries&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: GPS&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: Scripting&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/peterbarker&#34;&gt;Peter Barker&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: DataFlash, Tools&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rmackay9&#34;&gt;Randy Mackay&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Vehicle&lt;/strong&gt;&lt;/em&gt;: Copter, Rover, AntennaTracker&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bugobliterator&#34;&gt;Siddharth Purohit&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: CAN, Compass&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Board&lt;/strong&gt;&lt;/em&gt;: Cube*&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/magicrub&#34;&gt;Tom Pittenger&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Vehicle&lt;/strong&gt;&lt;/em&gt;: Plane&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bnsgeyer&#34;&gt;Bill Geyer&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Vehicle&lt;/strong&gt;&lt;/em&gt;: TradHeli&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/emilecastelnuovo&#34;&gt;Emile Castelnuovo&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Board&lt;/strong&gt;&lt;/em&gt;: VRBrain&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/staroselskii&#34;&gt;Georgii Staroselskii&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Board&lt;/strong&gt;&lt;/em&gt;: NavIO&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/guludo&#34;&gt;Gustavo José de Sousa&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: Build system&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jberaud&#34;&gt;Julien Beraud&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Board&lt;/strong&gt;&lt;/em&gt;: Bebop &amp;amp; Bebop 2&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lthall&#34;&gt;Leonard Hall&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: Copter attitude control and navigation&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Pedals2Paddles&#34;&gt;Matt Lawrence&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Vehicle&lt;/strong&gt;&lt;/em&gt;: 3DR Solo &amp;amp; Solo based vehicles&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/badzz&#34;&gt;Matthias Badaire&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: FRSky&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mirkix&#34;&gt;Mirko Denecke&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Board&lt;/strong&gt;&lt;/em&gt;: BBBmini, BeagleBone Blue, PocketPilot&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/priseborough&#34;&gt;Paul Riseborough&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: AP_NavEKF2&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: AP_NavEKF3&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vmayoral&#34;&gt;Víctor Mayoral Vilches&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Board&lt;/strong&gt;&lt;/em&gt;: PXF, Erle-Brain 2, PXFmini&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/amilcarlucas&#34;&gt;Amilcar Lucas&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: Marvelmind&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/samuelctabor&#34;&gt;Samuel Tabor&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: Soaring/Gliding&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Hwurzburg&#34;&gt;Henry Wurzburg&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: OSD&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Site&lt;/strong&gt;&lt;/em&gt;: Wiki&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/IamPete1&#34;&gt;Peter Hall&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Vehicle&lt;/strong&gt;&lt;/em&gt;: Tailsitters&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Vehicle&lt;/strong&gt;&lt;/em&gt;: Sailboat&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: Scripting&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/andyp1per&#34;&gt;Andy Piper&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: Crossfire&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: ESC&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: OSD&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: SmartAudio&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yaapu&#34;&gt;Alessandro Apostoli &lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: Telemetry&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: OSD&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rishabsingh3003&#34;&gt;Rishabh Singh &lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: Avoidance/Proximity&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/davidbuzz&#34;&gt;David Bussenschutt &lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: ESP32,AP_HAL_ESP32&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Silvanosky&#34;&gt;Charles Villard &lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;&lt;/em&gt;: ESP32,AP_HAL_ESP32&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>polybar/polybar</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/polybar/polybar</id>
    <link href="https://github.com/polybar/polybar" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fast and easy-to-use status bar&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/polybar/polybar/master/doc/_static/banner.png#gh-light-mode-only&#34; alt=&#34;Polybar&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/polybar/polybar/master/doc/_static/banner-dark-mode.png#gh-dark-mode-only&#34; alt=&#34;Polybar&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A fast and easy-to-use tool for creating status bars. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/polybar/polybar/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/polybar/polybar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/polybar/polybar/releases&#34;&gt;&lt;img alt=&#34;GitHub All Releases&#34; src=&#34;https://img.shields.io/github/downloads/polybar/polybar/total&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/polybar/polybar/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/polybar/polybar/workflows/CI/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/polybar/polybar/actions?query=workflow%3A%22Release+Workflow%22&#34;&gt;&lt;img src=&#34;https://github.com/polybar/polybar/workflows/Release%20Workflow/badge.svg?branch=master&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://polybar.readthedocs.io&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/polybar/badge/?version=latest&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/polybar/polybar&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/polybar/polybar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/polybar/polybar/branch/master&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/polybar/polybar/branch/master/graph/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/polybar/polybar/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/polybar/polybar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codetriage.com/polybar/polybar&#34;&gt;&lt;img src=&#34;https://www.codetriage.com/polybar/polybar/badges/users.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/tiers/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/polybar/polybar/wiki/&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/polybar/polybar/master/#installation&#34;&gt;Installation&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/polybar/polybar/master/SUPPORT.md&#34;&gt;Support&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/polybar/polybar/master/#donations&#34;&gt;Donate&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Polybar&lt;/strong&gt; aims to help users build beautiful and highly customizable status bars for their desktop environment, without the need of having a black belt in shell scripting.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/polybar/polybar/master/doc/_static/default.png&#34; alt=&#34;default configuration screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/polybar/polybar/master/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/polybar/polybar/master/#getting-help&#34;&gt;Getting Help&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/polybar/polybar/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/polybar/polybar/master/#getting-started&#34;&gt;Getting started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/polybar/polybar/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/polybar/polybar/master/#first-steps&#34;&gt;First Steps&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/polybar/polybar/master/#community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/polybar/polybar/master/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/polybar/polybar/master/#donations&#34;&gt;Donations&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/polybar/polybar/master/#sponsors&#34;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/polybar/polybar/master/#backers&#34;&gt;Backers&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/polybar/polybar/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/polybar/polybar/master/#signatures&#34;&gt;Signatures&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;The main purpose of &lt;strong&gt;Polybar&lt;/strong&gt; is to help users create awesome status bars. It has built-in functionality to display information about the most commonly used services. Some of the services included so far:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Systray icons&lt;/li&gt; &#xA; &lt;li&gt;Window title&lt;/li&gt; &#xA; &lt;li&gt;Playback controls and status display for &lt;a href=&#34;https://www.musicpd.org/&#34;&gt;MPD&lt;/a&gt; using &lt;a href=&#34;https://www.musicpd.org/libs/libmpdclient/&#34;&gt;libmpdclient&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.alsa-project.org/main/index.php/Main_Page&#34;&gt;ALSA&lt;/a&gt; and &lt;a href=&#34;https://www.freedesktop.org/wiki/Software/PulseAudio/&#34;&gt;PulseAudio&lt;/a&gt; volume controls&lt;/li&gt; &#xA; &lt;li&gt;Workspace and desktop panel for &lt;a href=&#34;https://github.com/baskerville/bspwm&#34;&gt;bspwm&lt;/a&gt; and &lt;a href=&#34;https://github.com/i3/i3&#34;&gt;i3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Workspace module for &lt;a href=&#34;https://specifications.freedesktop.org/wm-spec/wm-spec-1.3.html#idm140130320786080&#34;&gt;EWMH compliant&lt;/a&gt; window managers&lt;/li&gt; &#xA; &lt;li&gt;Keyboard layout and indicator status&lt;/li&gt; &#xA; &lt;li&gt;CPU and memory load indicator&lt;/li&gt; &#xA; &lt;li&gt;Battery display&lt;/li&gt; &#xA; &lt;li&gt;Network connection details&lt;/li&gt; &#xA; &lt;li&gt;Backlight level&lt;/li&gt; &#xA; &lt;li&gt;Date and time label&lt;/li&gt; &#xA; &lt;li&gt;Time-based shell script execution&lt;/li&gt; &#xA; &lt;li&gt;Command output tailing&lt;/li&gt; &#xA; &lt;li&gt;User-defined menu tree&lt;/li&gt; &#xA; &lt;li&gt;Inter-process messaging&lt;/li&gt; &#xA; &lt;li&gt;And more...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/polybar/polybar/wiki&#34;&gt;See the wiki for more details&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;p&gt;If you find yourself stuck, have a look at our &lt;a href=&#34;https://raw.githubusercontent.com/polybar/polybar/master/SUPPORT.md&#34;&gt;Support&lt;/a&gt; page for resources where you can find help.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Read our &lt;a href=&#34;https://raw.githubusercontent.com/polybar/polybar/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; for how to get started with contributing to polybar.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;a href=&#34;https://repology.org/metapackage/polybar&#34;&gt; &lt;img src=&#34;https://repology.org/badge/vertical-allrepos/polybar.svg?sanitize=true&#34; alt=&#34;Packaging status&#34; align=&#34;right&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Polybar is already available in the package manager for many repositories. We list some of the more prominent ones here. Also click the &lt;a href=&#34;https://repology.org/project/polybar/versions&#34;&gt;image on the right&lt;/a&gt; to see a more complete list of available polybar packages.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;strong&gt;Debian&lt;/strong&gt; (bullseye/11/stable) or later, you can install &lt;a href=&#34;https://tracker.debian.org/pkg/polybar&#34;&gt;polybar&lt;/a&gt; using &lt;code&gt;sudo apt install polybar&lt;/code&gt;. Newer releases of polybar are sometimes provided in the &lt;a href=&#34;https://wiki.debian.org/Backports&#34;&gt;backports&lt;/a&gt; repository for stable users, you need to enable &lt;a href=&#34;https://wiki.debian.org/Backports&#34;&gt;backports&lt;/a&gt; and then install using &lt;code&gt;sudo apt -t buster-backports install polybar&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;strong&gt;Ubuntu&lt;/strong&gt; 20.10 (Groovy Gorilla) or later, you can install polybar using &lt;code&gt;sudo apt install polybar&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;strong&gt;Arch Linux&lt;/strong&gt;, you can install &lt;a href=&#34;https://archlinux.org/packages/community/x86_64/polybar/&#34;&gt;polybar&lt;/a&gt; to get the latest stable release using &lt;code&gt;sudo pacman -S polybar&lt;/code&gt;. The latest unstable changes are also available in the &lt;a href=&#34;https://aur.archlinux.org/packages/polybar-git&#34;&gt;&lt;code&gt;polybar-git&lt;/code&gt;&lt;/a&gt; package in the AUR.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;strong&gt;Manjaro&lt;/strong&gt;, you can install &lt;a href=&#34;https://software.manjaro.org/package/polybar&#34;&gt;polybar&lt;/a&gt; to get the latest stable release using &lt;code&gt;sudo pacman -S polybar&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;strong&gt;Void Linux&lt;/strong&gt;, you can install &lt;a href=&#34;https://github.com/void-linux/void-packages/raw/master/srcpkgs/polybar/template&#34;&gt;polybar&lt;/a&gt; using &lt;code&gt;xbps-install -S polybar&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;strong&gt;NixOS&lt;/strong&gt;, polybar is available in both the stable and unstable channels and can be installed with the command &lt;code&gt;nix-env -iA nixos.polybar&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;strong&gt;Slackware&lt;/strong&gt;, polybar is available from the &lt;a href=&#34;https://slackbuilds.org/repository/14.2/desktop/polybar/&#34;&gt;SlackBuilds&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;strong&gt;Source Mage GNU/Linux&lt;/strong&gt;, polybar spell is available in test grimoire and can be installed via &lt;code&gt;cast polybar&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;strong&gt;openSUSE Tumbleweed&lt;/strong&gt;, polybar is available from the &lt;a href=&#34;https://build.opensuse.org/package/show/openSUSE%3AFactory/polybar&#34;&gt;official repositories&lt;/a&gt; and can be installed via &lt;code&gt;zypper install polybar&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;strong&gt;openSUSE Leap&lt;/strong&gt;, polybar is available from &lt;a href=&#34;https://build.opensuse.org/package/show/X11:Utilities/polybar/&#34;&gt;OBS&lt;/a&gt;. The package is available for openSUSE Leap 15.1 and above.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;strong&gt;FreeBSD&lt;/strong&gt;, &lt;a href=&#34;https://svnweb.freebsd.org/ports/head/x11/polybar/&#34;&gt;polybar&lt;/a&gt; can be installed using &lt;code&gt;pkg install polybar&lt;/code&gt;. Make sure you are using the &lt;code&gt;latest&lt;/code&gt; package branch.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;strong&gt;Gentoo&lt;/strong&gt;, both release and git-master versions are available in the &lt;a href=&#34;https://packages.gentoo.org/packages/x11-misc/polybar&#34;&gt;main&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;p&gt;If you are using &lt;strong&gt;Fedora&lt;/strong&gt;, you can install &lt;a href=&#34;https://src.fedoraproject.org/rpms/polybar&#34;&gt;polybar&lt;/a&gt; using &lt;code&gt;sudo dnf install polybar&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you can&#39;t find your distro here, you will have to &lt;a href=&#34;https://github.com/polybar/polybar/wiki/Compiling&#34;&gt;build from source&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;First Steps&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/polybar/polybar/wiki&#34;&gt;See the wiki for details on how to run and configure polybar&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;Want to get in touch?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visit our &lt;a href=&#34;https://github.com/polybar/polybar/discussions&#34;&gt;Discussion page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Join our Gitter room at &lt;a href=&#34;https://gitter.im/polybar/polybar&#34;&gt;&lt;code&gt;gitter.im/polybar/polybar&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;We have our own subreddit at &lt;a href=&#34;https://www.reddit.com/r/polybar&#34;&gt;&lt;code&gt;r/polybar&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chat with us in the &lt;code&gt;#polybar&lt;/code&gt; IRC channel on the &lt;a href=&#34;https://libera.chat/&#34;&gt;&lt;code&gt;irc.libera.chat:6697&lt;/code&gt;&lt;/a&gt; server&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;h3&gt;Maintainers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Patrick Ziegler &lt;a href=&#34;https://github.com/patrick96&#34;&gt;&lt;strong&gt;@patrick96&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Owner&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Michael Carlberg &lt;a href=&#34;https://github.com/jaagr/&#34;&gt;&lt;strong&gt;@jaagr&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Former Maintainers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Lomadriel&#34;&gt;&lt;strong&gt;@Lomadriel&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/NBonaparte&#34;&gt;&lt;strong&gt;@NBonaparte&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Chase Geigle &lt;a href=&#34;https://github.com/skystrife&#34;&gt;&lt;strong&gt;@skystrife&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Logo Design by&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tobaloidee&#34;&gt;&lt;strong&gt;@Tobaloidee&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/polybar/polybar/graphs/contributors&#34;&gt;All Contributors&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;p&gt;Polybar accepts donations through &lt;a href=&#34;https://opencollective.com/polybar&#34;&gt;open collective&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/polybar&#34;&gt;Become a backer&lt;/a&gt; and support polybar!&lt;/p&gt; &#xA;&lt;h3&gt;Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/polybar/sponsor/0/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/0/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/1/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/1/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/2/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/2/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/3/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/3/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/4/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/4/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/5/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/5/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/6/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/6/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/7/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/7/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/8/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/8/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/9/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/9/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/10/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/10/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/11/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/11/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/12/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/12/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/13/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/13/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/14/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/14/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/15/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/15/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/16/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/16/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/17/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/17/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/18/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/18/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/19/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/19/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/20/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/20/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/21/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/21/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/22/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/22/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/23/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/23/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/24/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/24/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/25/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/25/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/26/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/26/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/27/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/27/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/28/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/28/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/sponsor/29/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/sponsor/29/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Backers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/polybar/backer/0/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/0/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/1/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/1/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/2/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/2/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/3/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/3/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/4/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/4/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/5/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/5/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/6/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/6/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/7/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/7/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/8/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/8/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/9/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/9/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/10/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/10/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/11/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/11/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/12/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/12/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/13/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/13/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/14/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/14/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/15/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/15/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/16/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/16/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/17/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/17/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/18/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/18/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/19/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/19/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/20/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/20/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/21/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/21/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/22/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/22/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/23/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/23/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/24/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/24/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/25/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/25/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/26/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/26/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/27/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/27/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/28/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/28/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/polybar/backer/29/website?requireActive=false&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/polybar/backer/29/avatar.svg?requireActive=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Polybar is licensed under the MIT license. &lt;a href=&#34;https://github.com/polybar/polybar/raw/master/LICENSE&#34;&gt;See LICENSE for more information&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Signatures&lt;/h2&gt; &#xA;&lt;p&gt;Release archives and tags are signed by a maintainer using GPG. Currently everything is signed by &lt;a href=&#34;https://www.patrickziegler.ch/gpg&#34;&gt;Patrick Ziegler&lt;/a&gt; with fingerprint &lt;code&gt;1D5791352D51A228D4DDDBA4521E5E03AEBCA1A7&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>JSBSim-Team/jsbsim</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/JSBSim-Team/jsbsim</id>
    <link href="https://github.com/JSBSim-Team/jsbsim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open source flight dynamics &amp; control software library&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/bcoconni/jsbsim/actions?query=workflow%3A%22C%2FC%2B%2B+build%22&#34;&gt;&lt;img src=&#34;https://github.com/JSBSim-Team/jsbsim/workflows/C/C++%20build/badge.svg?branch=master&amp;amp;event=push&#34; alt=&#34;C/C++ build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pypi.org/project/JSBSim&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/jsbsim&#34; alt=&#34;PyPI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pepy.tech/project/jsbsim&#34;&gt;&lt;img src=&#34;https://static.pepy.tech/personalized-badge/jsbsim?period=total&amp;amp;units=international_system&amp;amp;left_color=grey&amp;amp;right_color=blue&amp;amp;left_text=pypi%20downloads&#34; alt=&#34;PyPI Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://anaconda.org/conda-forge/jsbsim&#34;&gt;&lt;img src=&#34;https://img.shields.io/conda/vn/conda-forge/jsbsim&#34; alt=&#34;Conda (channel only)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;250&#34; heigth=&#34;250&#34; src=&#34;https://github.com/JSBSim-Team/jsbsim-logo/raw/master/logo_JSBSIM_globe.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;JSBSim is a multi-platform, general purpose object-oriented Flight Dynamics Model (FDM) written in C++. The FDM is essentially the physics &amp;amp; math model that defines the movement of an aircraft, rocket, etc., under the forces and moments applied to it using the various control mechanisms and from the forces of nature. JSBSim can be run in a standalone batch mode flight simulator (no graphical displays a.k.a. console mode) for testing and study, or integrated with the &lt;a href=&#34;https://www.unrealengine.com&#34;&gt;Unreal engine&lt;/a&gt;, &lt;a href=&#34;https://www.flightgear.org/&#34;&gt;FlightGear&lt;/a&gt; and many other simulation environments.&lt;/p&gt; &#xA;&lt;p&gt;Features include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Nonlinear 6 DoF (Degree of Freedom)&lt;/li&gt; &#xA; &lt;li&gt;Fully configurable flight control system, aerodynamics, propulsion, landing gear arrangement, etc. through XML-based text file format.&lt;/li&gt; &#xA; &lt;li&gt;Accurate Earth model including: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Rotational effects on the equations of motion (Coriolis and centrifugal acceleration modeled).&lt;/li&gt; &#xA;   &lt;li&gt;Oblate spherical shape and geodetic coordinates according to the &lt;a href=&#34;https://en.wikipedia.org/wiki/World_Geodetic_System&#34;&gt;WGS84 geodetic system&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Atmosphere modeled according to the &lt;a href=&#34;https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/19770009539.pdf&#34;&gt;International Standard Atmosphere (1976)&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Configurable data output formats to screen, file, socket, or any combination of those.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;JSBSim also includes the following bindings:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://www.python.org&#34;&gt;Python&lt;/a&gt; module which provides the exact same features than the C++ library&lt;/li&gt; &#xA; &lt;li&gt;A &lt;a href=&#34;https://github.com/JSBSim-Team/jsbsim/raw/master/matlab&#34;&gt;Matlab S-Function&lt;/a&gt; that interfaces JSBSim with &lt;a href=&#34;https://fr.mathworks.com/products/simulink.html&#34;&gt;MATLAB Simulink&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;An &lt;a href=&#34;https://github.com/JSBSim-Team/jsbsim/raw/master/UnrealEngine/&#34;&gt;Unreal Engine plugin&lt;/a&gt; to build a connection between the flight dynamics model from JSBSim and the entire virtual environment provided by &lt;a href=&#34;https://www.unrealengine.com&#34;&gt;Unreal engine&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JSBSim-Team/jsbsim/master/UnrealEngine/UEReferenceApp.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;In 2015, &lt;a href=&#34;https://nescacademy.nasa.gov/flightsim&#34;&gt;NASA performed some verification check cases on 7 flight dynamics software &lt;strong&gt;including JSBSim&lt;/strong&gt;&lt;/a&gt; (the other 6 being NASA in-house software). The results showed that the 7 simulation tools &lt;em&gt;&#34;were good enough to indicate agreement between a majority of simulation tools for all cases published. Most of the remaining differences are explained and could be reduced with further effort.&#34;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Applications and Usages&lt;/h2&gt; &#xA;&lt;p&gt;JSBSim is used in a range of projects among which:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Unreal Engine&#39;s &lt;a href=&#34;https://www.unrealengine.com/en-US/blog/antoinette-project-tools-to-create-the-next-generation-of-flight-simulators&#34;&gt;Antoinette Project&lt;/a&gt;: tools to create the next generation of flight simulators.&lt;/li&gt; &#xA; &lt;li&gt;Flight simulation: &lt;a href=&#34;http://www.flightgear.org&#34;&gt;FlightGear&lt;/a&gt;, &lt;a href=&#34;https://www.outerra.com/wfeatures.html&#34;&gt;OutTerra&lt;/a&gt;, &lt;a href=&#34;https://github.com/Piraxus/Skybolt&#34;&gt;Skybolt Engine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SITL (Software In The Loop) Drone Autopilot testing : &lt;a href=&#34;https://ardupilot.org/dev/docs/sitl-with-jsbsim.html&#34;&gt;ArduPilot&lt;/a&gt;, &lt;a href=&#34;https://dev.px4.io/master/en/simulation/jsbsim.html&#34;&gt;PX4 Autopilot&lt;/a&gt;, &lt;a href=&#34;https://wiki.paparazziuav.org/wiki/Simulation&#34;&gt;Paparazzi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Machine Learning Aircraft control: &lt;a href=&#34;https://github.com/galleon/gym-jsbsim&#34;&gt;gym-jsbsim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.darpa.mil/news-events/2019-10-21&#34;&gt;DARPA Virtual Air Combat Competition&lt;/a&gt; where one of the AI went undefeated in five rounds of mock air combat against an Air Force fighter (see the &lt;a href=&#34;https://www.youtube.com/watch?v=IOJhgC1ksNU&#34;&gt;video on YouTube&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;JSBSim is also used in academic and industry research (&lt;a href=&#34;https://scholar.google.com/scholar?&amp;amp;q=jsbsim&#34;&gt;more than 700 citations referenced by Google Scholar&lt;/a&gt; as of May 2022).&lt;/p&gt; &#xA;&lt;h1&gt;User Guide&lt;/h1&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;A Windows installer &lt;code&gt;JSBSim-1.1.11-setup.exe&lt;/code&gt; is available in the &lt;a href=&#34;https://github.com/JSBSim-Team/jsbsim/releases/tag/v1.1.11&#34;&gt;release section&lt;/a&gt;. It installs the 2 executables along with aircraft data and some example scripts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;JSBSim.exe&lt;/code&gt; which runs FDM simulations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;aeromatic.exe&lt;/code&gt; which builds aircraft definitions from Question/Answer interface&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Both executables are console line commands.&lt;/p&gt; &#xA;&lt;p&gt;The Windows installer also contains the files needed to build the JSBSim Matlab S-Function (see &lt;a href=&#34;https://raw.githubusercontent.com/JSBSim-Team/jsbsim/master/matlab/README.md&#34;&gt;our MATLAB README&lt;/a&gt; for more details about using JSBSim in Matlab).&lt;/p&gt; &#xA;&lt;h3&gt;Ubuntu Linux&lt;/h3&gt; &#xA;&lt;p&gt;Debian packages for Ubuntu Linux &#34;Bionic&#34; 18.04 LTS and &#34;Focal&#34; 20.04 LTS for 64 bits platforms are also available in the &lt;a href=&#34;https://github.com/JSBSim-Team/jsbsim/releases/tag/v1.1.11&#34;&gt;JSBSim project release section&lt;/a&gt;. There are 3 packages for each platform:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;JSBSim_1.1.11-741.amd64.deb&lt;/code&gt; which installs the executables &lt;code&gt;JSBSim&lt;/code&gt; and &lt;code&gt;aeromatic&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JSBSim-devel_1.1.11-741.amd64.deb&lt;/code&gt; which installs the development resources (headers and libraries)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;python3-JSBSim_1.1.11-741.amd64.deb&lt;/code&gt; which installs the Python 3.6 module of JSBSim&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Python module&lt;/h3&gt; &#xA;&lt;p&gt;JSBSim provides binary wheel packages for its Python module on Windows, Mac OSX and Linux platforms for several Python versions (3.6, 3.7, 3.8, 3.9 and 3.10). These can be installed using either &lt;code&gt;pip&lt;/code&gt; or &lt;code&gt;conda&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Installation with &lt;code&gt;pip&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Binary packages a.k.a. &lt;a href=&#34;https://www.python.org/dev/peps/pep-0427&#34;&gt;wheel packages&lt;/a&gt; are available from the &lt;a href=&#34;https://pypi.org&#34;&gt;Python Package Index (PyPI)&lt;/a&gt;, a repository of software for the Python programming language.&lt;/p&gt; &#xA;&lt;p&gt;Installing &lt;code&gt;jsbsim&lt;/code&gt; using &lt;code&gt;pip&lt;/code&gt; can be achieved with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; pip install jsbsim&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://packaging.python.org/tutorials/installing-packages&#34;&gt;pip documentation&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;Note that wheel packages for Linux meet the &lt;a href=&#34;https://www.python.org/dev/peps/pep-0600&#34;&gt;PEP600 ManyLinux packages requirements&lt;/a&gt; and as such are compatible with a majority of Linux distributions.&lt;/p&gt; &#xA;&lt;h4&gt;Installation with &lt;code&gt;conda&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.conda.io/projects/conda/en/latest/index.html&#34;&gt;Conda&lt;/a&gt; is an open-source package management system and environment management system that runs on Windows, macOS, and Linux. The JSBSim conda package is available from &lt;a href=&#34;https://conda-forge.org&#34;&gt;&lt;code&gt;conda-forge&lt;/code&gt;&lt;/a&gt;, a community led collection of recipes, build infrastructure and distributions for the conda package manager.&lt;/p&gt; &#xA;&lt;p&gt;Installing &lt;code&gt;jsbsim&lt;/code&gt; from the &lt;code&gt;conda-forge&lt;/code&gt; channel can be achieved by adding &lt;code&gt;conda-forge&lt;/code&gt; to your channels with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; conda config --add channels conda-forge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once the &lt;code&gt;conda-forge&lt;/code&gt; channel has been enabled, &lt;code&gt;jsbsim&lt;/code&gt; can be installed with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; conda install jsbsim&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is possible to list all of the versions of &lt;code&gt;jsbsim&lt;/code&gt; available on your platform with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; conda search jsbsim --channel conda-forge&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Other platforms&lt;/h3&gt; &#xA;&lt;p&gt;At the moment, JSBSim does not provide binaries for platforms other than Windows 64 bits and Ubuntu 64 bits. Alternatively, you can use &lt;a href=&#34;https://github.com/bcoconni/jsbsim#python-module&#34;&gt;JSBSim wheel packages&lt;/a&gt; for Windows, Linux or MacOS. Otherwise you should follow the instructions in the &lt;a href=&#34;https://raw.githubusercontent.com/JSBSim-Team/jsbsim/master/doc/DevelopersDocs.md&#34;&gt;developer docs&lt;/a&gt; to build JSBSim on your platform.&lt;/p&gt; &#xA;&lt;h3&gt;Aircraft data and example scripts&lt;/h3&gt; &#xA;&lt;p&gt;JSBSim aircraft data and example scripts are automatically installed if you are using &lt;a href=&#34;https://github.com/bcoconni/jsbsim#python-module&#34;&gt;Python wheel packages&lt;/a&gt;. Otherwise, you can get aircraft data and example scripts by downloading either the &lt;a href=&#34;https://github.com/JSBSim-Team/jsbsim/archive/v1.1.11.zip&#34;&gt;zip package&lt;/a&gt; or the &lt;a href=&#34;https://github.com/JSBSim-Team/jsbsim/archive/v1.1.11.tar.gz&#34;&gt;tar.gz package&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;Once you have downloaded (or built) the binaries and unzipped the &lt;a href=&#34;https://raw.githubusercontent.com/JSBSim-Team/jsbsim/master/#aircraft-data-and-example-scripts&#34;&gt;aircraft data&lt;/a&gt;. Go to the root of the data package and make sure the executable is accessible from there.&lt;/p&gt; &#xA;&lt;p&gt;You can then run an FDM simulation with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; JSBSim.exe --script=scripts/c1721.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More options are available if you run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; JSBSim.exe --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;User documentation&lt;/h2&gt; &#xA;&lt;p&gt;A first place to look at for JSBSim documentation resources is &lt;a href=&#34;https://jsbsim.sourceforge.net/documentation.html&#34;&gt;https://jsbsim.sourceforge.net/documentation.html&lt;/a&gt;. This link points to the official &lt;a href=&#34;https://jsbsim.sourceforge.net/JSBSimReferenceManual.pdf&#34;&gt;JSBSim Reference Manual&lt;/a&gt;, a PDF which is the best source of information for users and developers.&lt;/p&gt; &#xA;&lt;p&gt;However, due to the nature of the development of the project (JSBSim sources are updated often, sometimes even daily), several new features that are available in the software are not yet documented in the reference manual. Starting from March 2018 a new effort is underway to deliver an up-to-date documentation web site. You can browse the new &lt;em&gt;JSBSim Online Reference Manual&lt;/em&gt; by going to: &lt;a href=&#34;https://jsbsim-team.github.io/jsbsim-reference-manual&#34;&gt;https://jsbsim-team.github.io/jsbsim-reference-manual&lt;/a&gt;. The online manual is under construction and as a first milestone it will incorporate all the non-outdated material contained in the original PDF Reference Manual. The online manual web site is based on the GitHub Pages technology and its sources are available &lt;a href=&#34;https://github.com/JSBSim-Team/jsbsim-reference-manual&#34;&gt;here&lt;/a&gt;. Eventually, the PDF Reference Manual will be superseded by the online manual, which is designed to be updated collaboratively as well as in efficient and timely fashion.&lt;/p&gt; &#xA;&lt;h2&gt;Interfacing JSBSim with your application&lt;/h2&gt; &#xA;&lt;h3&gt;Using the C++ API&lt;/h3&gt; &#xA;&lt;p&gt;JSBSim can be interfaced or integrated to your application via a C++ API. The following code illustrates how JSBSim can be called by a small program, with execution being controlled by a script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#include &amp;lt;FGFDMExec.h&amp;gt;&#xA;&#xA;int main(int argc, char **argv)&#xA;{&#xA;  JSBSim::FGFDMExec FDMExec;&#xA;  FDMExec.LoadScript(SGPath(argv[1]));&#xA;  FDMExec.RunIC();&#xA;  bool result = true;&#xA;  while (result) result = FDMExec.Run();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The API is described in more details in the &lt;a href=&#34;https://raw.githubusercontent.com/JSBSim-Team/jsbsim/master/doc/DevelopersDocs.md#c-api-documentation&#34;&gt;C++ API documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Using the Python module&lt;/h3&gt; &#xA;&lt;p&gt;JSBSim can also be used as a Python module. JSBSim Python wheels are provided with the proverbial &#34;batteries included&#34; i.e. with some default aircraft data and example scripts.&lt;/p&gt; &#xA;&lt;p&gt;The following code provides a simple example of how to interface with JSBSim using the Python programming language:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import jsbsim&#xA;&#xA;fdm = jsbsim.FGFDMExec(None)  # Use JSBSim default aircraft data.&#xA;fdm.load_script(&#39;scripts/c1723.xml&#39;)&#xA;fdm.run_ic()&#xA;&#xA;while fdm.run():&#xA;  pass&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Providing &lt;code&gt;jsbsim.FGFDMExec&lt;/code&gt; with the value &lt;code&gt;None&lt;/code&gt; allows using the installed default aircraft data and scripts (in the example above we are using the script &lt;code&gt;scripts/c1723.xml&lt;/code&gt;, one of the many scripts installed by default).&lt;/p&gt; &#xA;&lt;p&gt;The default aircraft data is located in a directory which path can be retrieved with the function &lt;code&gt;get_default_root_dir()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(jsbsim.get_default_root_dir())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A more elaborate example of Python code is &lt;a href=&#34;https://github.com/JSBSim-Team/jsbsim/raw/master/python/JSBSim.py&#34;&gt;JSBSim.py&lt;/a&gt;, the Python equivalent to &lt;code&gt;JSBSim.exe&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Contact&lt;/h1&gt; &#xA;&lt;p&gt;For more information about JSBSim, you can contact the development team on &lt;a href=&#34;https://github.com/JSBSim-Team/jsbsim/discussions&#34;&gt;GitHub discussion&lt;/a&gt; or submit tickets on &lt;a href=&#34;https://github.com/JSBSim-Team/jsbsim/issues&#34;&gt;https://github.com/JSBSim-Team/jsbsim/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We are also on Facebook: &lt;a href=&#34;https://www.facebook.com/jsbsim/&#34;&gt;https://www.facebook.com/jsbsim/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Legal Notice&lt;/h1&gt; &#xA;&lt;p&gt;JSBSim is open source and is licensed under the LGPL 2.1 license. The license is included in the source code in the file &lt;a href=&#34;https://github.com/JSBSim-Team/jsbsim/raw/master/COPYING&#34;&gt;COPYING&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;No proprietary code is included. All code included within JSBSim has been developed on a volunteer basis using publicly available information, and is often directly linked to a particular textbook, for educational reference. In some cases, code of a generic nature has been donated back to the project.&lt;/p&gt; &#xA;&lt;p&gt;Likewise, the aircraft models included in this project and distribution do not include any proprietary, sensitive, or classified data. All data is derived from textbooks (such as Stevens and Lewis &#34;Aircraft Control and Simulation&#34; and Sutton&#39;s &#34;Rocket Propulsion Elements&#34;), freely available technical reports (see: &lt;a href=&#34;https://ntrs.nasa.gov&#34;&gt;https://ntrs.nasa.gov&lt;/a&gt; and &lt;a href=&#34;https://www.aiaa.org&#34;&gt;https://www.aiaa.org&lt;/a&gt;), or other public data (such as the FAA web site). Aircraft models included in the JSBSim distribution and with names corresponding to existing commercial or military aircraft are approximations crafted using publicly available information, and are for educational or entertainment uses only.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ErLinErYi/PlantsVsZombies</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/ErLinErYi/PlantsVsZombies</id>
    <link href="https://github.com/ErLinErYi/PlantsVsZombies" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PlantsVsZombies game made by cocos2dx 3.16 (c++)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PlantsVsZombies&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ErLinErYi/PlantsVsZombies/master/README_en_us.md&#34;&gt;[English]&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ErLinErYi/PlantsVsZombies/master/README_ru_ru.MD&#34;&gt;[русский]&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;游戏引擎基于版本 Cocos2d-X v3.16&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;游戏全部使用c++开发&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;如果你刚刚接触Cocos2d-X 这绝对是个不错的入门项目&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;如果是你C++初学者或者其他语言转游戏开发，这个项目没有复杂的语法绝对是一个不错的学习项目&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;如果你是游戏开发从业者想做一些类似的游戏，这个项目可能会帮到你或给你一些启发&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;!!! 重要&lt;/em&gt; &lt;strong&gt;这个游戏模仿了原版植物大战僵尸。不要用于商业用途，否则后果自负&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;官网: &lt;a href=&#34;https://gitlz.gitee.io/lz&#34;&gt;https://gitlz.gitee.io/lz&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;项目说明 &lt;br&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;此游戏全部由本人自己制作完成。游戏具有可玩性（目前有104个关卡），今后会不定时更新（不断完善）。&lt;/li&gt; &#xA; &lt;li&gt;该游戏相较于原版的优势有更大分辨率，更好的画质，更高的刷新率。游戏中的属性与原版有较大差别。难度比原版稍难。有新的游戏模式等。&lt;/li&gt; &#xA; &lt;li&gt;游戏大部分的素材来源于原版游戏素材，少部分搜集于网络，以及自己制作。&lt;/li&gt; &#xA; &lt;li&gt;此游戏为仅供学习交流使用,不得用于商业用途，否则后果自负。&lt;/li&gt; &#xA; &lt;li&gt;目前有14种僵尸和13种植物，植物和僵尸的动画都是本人做的，由于做动画的能力有限，有些僵尸和植物动画不能实现.（动画使用Dragonbones/Spine制作）。&lt;/li&gt; &#xA; &lt;li&gt;如果发现程序有什么问题或者对游戏有什么建议可以发送到我的qq：2117610943或者Email：&lt;a href=&#34;mailto:2117610943@qq.com&#34;&gt;2117610943@qq.com&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlz.gitee.io/lz&#34;&gt;【可运行文件下载】&lt;/a&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1kh411Q7W5?share_source=copy_web&#34;&gt;【视频演示】&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;项目类图&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gitee.com/GITLZ/PlantsVsZombies/raw/master/ClassDiagram.png&#34; alt=&#34;ClassDiagram&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;运行示例&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gitee.com/GITLZ/PlantsVsZombies/raw/master/example.png&#34; alt=&#34;Image(图片)&#34;&gt; &lt;img src=&#34;https://img-blog.csdnimg.cn/20200405101902466.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjMwMjQ2,size_16,color_FFFFFF,t_70&#34; alt=&#34;Image(图片)&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;运行要求&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;安装visual studio 2017 or visual studio 2019&lt;/li&gt; &#xA; &lt;li&gt;下载此项目并在visual studio中编译运行&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;注意！！！该项目不能直接运行，因为缺少游戏所需要的资源文件。（由于资源文件可能存在侵权问题，所以被移除。如果特别需要并且只是在学习的情况下可以向我索要该资源包。唯一的要求：把star点亮，并截图发给我以证明。如果您觉得这很困难，请您退出此仓库。）&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;最后&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Author: LZ&lt;/strong&gt; &lt;br&gt; &lt;strong&gt;QQ: 2117610943&lt;/strong&gt; &lt;br&gt; &lt;strong&gt;Email: &lt;a href=&#34;mailto:2117610943@qq.com&#34;&gt;2117610943@qq.com&lt;/a&gt;&lt;/strong&gt; &lt;br&gt; &lt;strong&gt;Website: &lt;a href=&#34;https://gitlz.gitee.io/lz&#34;&gt;https://gitlz.gitee.io/lz&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ocornut/imgui</title>
    <updated>2022-05-30T01:30:04Z</updated>
    <id>tag:github.com,2022-05-30:/ocornut/imgui</id>
    <link href="https://github.com/ocornut/imgui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dear ImGui: Bloat-free Graphical User interface for C++ with minimal dependencies&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dear ImGui&lt;/h1&gt; &#xA;&lt;center&gt;&#xA; &lt;b&gt;&lt;i&gt;&#34;Give someone state and they&#39;ll have a bug one day, but teach them how to represent state in two separate locations that have to be kept in sync and they&#39;ll have bugs for a lifetime.&#34;&lt;/i&gt;&lt;/b&gt;&#xA;&lt;/center&gt; &#xA;&lt;a href=&#34;https://twitter.com/rygorous/status/1507178315886444544&#34;&gt;-ryg&lt;/a&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ocornut/imgui/actions?workflow=build&#34;&gt;&lt;img src=&#34;https://github.com/ocornut/imgui/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ocornut/imgui/actions?workflow=static-analysis&#34;&gt;&lt;img src=&#34;https://github.com/ocornut/imgui/workflows/static-analysis/badge.svg?sanitize=true&#34; alt=&#34;Static Analysis Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;(This library is available under a free and permissive license, but needs financial support to sustain its continued improvements. In addition to maintenance and stability there are many desirable features yet to be added. If your company is using Dear ImGui, please consider reaching out.)&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;p&gt;Businesses: support continued development and maintenance via invoiced technical support, maintenance, sponsoring contracts: &lt;br&gt;&amp;nbsp;&amp;nbsp;&lt;em&gt;E-mail: contact @ dearimgui dot com&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Individuals: support continued development and maintenance &lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=WGHNC6MBFLZ2S&#34;&gt;here&lt;/a&gt;. Also see &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Sponsors&#34;&gt;Sponsors&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#the-pitch&#34;&gt;The Pitch&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#usage&#34;&gt;Usage&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#how-it-works&#34;&gt;How it works&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#releases--changelogs&#34;&gt;Releases &amp;amp; Changelogs&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#demo&#34;&gt;Demo&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#integration&#34;&gt;Integration&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#upcoming-changes&#34;&gt;Upcoming changes&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#gallery&#34;&gt;Gallery&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#support-frequently-asked-questions-faq&#34;&gt;Support, FAQ&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#how-to-help&#34;&gt;How to help&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#sponsors&#34;&gt;Sponsors&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#credits&#34;&gt;Credits&lt;/a&gt; - &lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#license&#34;&gt;License&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/ocornut/imgui/wiki&#34;&gt;Wiki&lt;/a&gt; - &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Bindings&#34;&gt;Languages &amp;amp; frameworks backends/bindings&lt;/a&gt; - &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Software-using-dear-imgui&#34;&gt;Software using Dear ImGui&lt;/a&gt; - &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Quotes&#34;&gt;User quotes&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;The Pitch&lt;/h3&gt; &#xA;&lt;p&gt;Dear ImGui is a &lt;strong&gt;bloat-free graphical user interface library for C++&lt;/strong&gt;. It outputs optimized vertex buffers that you can render anytime in your 3D-pipeline enabled application. It is fast, portable, renderer agnostic and self-contained (no external dependencies).&lt;/p&gt; &#xA;&lt;p&gt;Dear ImGui is designed to &lt;strong&gt;enable fast iterations&lt;/strong&gt; and to &lt;strong&gt;empower programmers&lt;/strong&gt; to create &lt;strong&gt;content creation tools and visualization / debug tools&lt;/strong&gt; (as opposed to UI for the average end-user). It favors simplicity and productivity toward this goal, and lacks certain features normally found in more high-level libraries.&lt;/p&gt; &#xA;&lt;p&gt;Dear ImGui is particularly suited to integration in games engine (for tooling), real-time 3D applications, fullscreen applications, embedded applications, or any applications on consoles platforms where operating system features are non-standard.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Easy to use to create code-driven and data-driven tools.&lt;/li&gt; &#xA; &lt;li&gt;Easy to use to create ad hoc short-lived tools and long-lived, more elaborate tools.&lt;/li&gt; &#xA; &lt;li&gt;Easy to hack and improve.&lt;/li&gt; &#xA; &lt;li&gt;Minimize setup and maintenance.&lt;/li&gt; &#xA; &lt;li&gt;Minimize state storage on user side.&lt;/li&gt; &#xA; &lt;li&gt;Minimize state synchronization.&lt;/li&gt; &#xA; &lt;li&gt;Portable, minimize dependencies, run on target (consoles, phones, etc.).&lt;/li&gt; &#xA; &lt;li&gt;Efficient runtime and memory consumption.&lt;/li&gt; &#xA; &lt;li&gt;Battle-tested, used by many major actors in the game industry.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;The core of Dear ImGui is self-contained within a few platform-agnostic files&lt;/strong&gt; which you can easily compile in your application/engine. They are all the files in the root folder of the repository (imgui*.cpp, imgui*.h).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;No specific build process is required&lt;/strong&gt;. You can add the .cpp files to your existing project.&lt;/p&gt; &#xA;&lt;p&gt;You will need a backend to integrate Dear ImGui in your app. The backend passes mouse/keyboard/gamepad inputs and variety of settings to Dear ImGui, and is in charge of rendering the resulting vertices. &lt;strong&gt;Backends for a variety of graphics api and rendering platforms&lt;/strong&gt; are provided in the &lt;a href=&#34;https://github.com/ocornut/imgui/tree/master/backends&#34;&gt;backends/&lt;/a&gt; folder, along with example applications in the &lt;a href=&#34;https://github.com/ocornut/imgui/tree/master/examples&#34;&gt;examples/&lt;/a&gt; folder. See the &lt;a href=&#34;https://raw.githubusercontent.com/ocornut/imgui/master/#integration&#34;&gt;Integration&lt;/a&gt; section of this document for details. You may also create your own backend. Anywhere where you can render textured triangles, you can render Dear ImGui.&lt;/p&gt; &#xA;&lt;p&gt;After Dear ImGui is setup in your application, you can use it from _anywhere_ in your program loop:&lt;/p&gt; &#xA;&lt;p&gt;Code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;ImGui::Text(&#34;Hello, world %d&#34;, 123);&#xA;if (ImGui::Button(&#34;Save&#34;))&#xA;    MySaveFunction();&#xA;ImGui::InputText(&#34;string&#34;, buf, IM_ARRAYSIZE(buf));&#xA;ImGui::SliderFloat(&#34;float&#34;, &amp;amp;f, 0.0f, 1.0f);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Result: &lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v175/capture_readme_styles_0001.png&#34; alt=&#34;sample code output (dark)&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v175/capture_readme_styles_0002.png&#34; alt=&#34;sample code output (light)&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// Create a window called &#34;My First Tool&#34;, with a menu bar.&#xA;ImGui::Begin(&#34;My First Tool&#34;, &amp;amp;my_tool_active, ImGuiWindowFlags_MenuBar);&#xA;if (ImGui::BeginMenuBar())&#xA;{&#xA;    if (ImGui::BeginMenu(&#34;File&#34;))&#xA;    {&#xA;        if (ImGui::MenuItem(&#34;Open..&#34;, &#34;Ctrl+O&#34;)) { /* Do stuff */ }&#xA;        if (ImGui::MenuItem(&#34;Save&#34;, &#34;Ctrl+S&#34;))   { /* Do stuff */ }&#xA;        if (ImGui::MenuItem(&#34;Close&#34;, &#34;Ctrl+W&#34;))  { my_tool_active = false; }&#xA;        ImGui::EndMenu();&#xA;    }&#xA;    ImGui::EndMenuBar();&#xA;}&#xA;&#xA;// Edit a color (stored as ~4 floats)&#xA;ImGui::ColorEdit4(&#34;Color&#34;, my_color);&#xA;&#xA;// Plot some values&#xA;const float my_values[] = { 0.2f, 0.1f, 1.0f, 0.5f, 0.9f, 2.2f };&#xA;ImGui::PlotLines(&#34;Frame Times&#34;, my_values, IM_ARRAYSIZE(my_values));&#xA;&#xA;// Display contents in a scrolling region&#xA;ImGui::TextColored(ImVec4(1,1,0,1), &#34;Important Stuff&#34;);&#xA;ImGui::BeginChild(&#34;Scrolling&#34;);&#xA;for (int n = 0; n &amp;lt; 50; n++)&#xA;    ImGui::Text(&#34;%04d: Some text&#34;, n);&#xA;ImGui::EndChild();&#xA;ImGui::End();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Result: &lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v180/code_sample_04_color.gif&#34; alt=&#34;sample code output&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Dear ImGui allows you to &lt;strong&gt;create elaborate tools&lt;/strong&gt; as well as very short-lived ones. On the extreme side of short-livedness: using the Edit&amp;amp;Continue (hot code reload) feature of modern compilers you can add a few widgets to tweaks variables while your application is running, and remove the code a minute later! Dear ImGui is not just for tweaking values. You can use it to trace a running algorithm by just emitting text commands. You can use it along with your own reflection data to browse your dataset live. You can use it to expose the internals of a subsystem in your engine, to create a logger, an inspection tool, a profiler, a debugger, an entire game making editor/framework, etc.&lt;/p&gt; &#xA;&lt;h3&gt;How it works&lt;/h3&gt; &#xA;&lt;p&gt;Check out the Wiki&#39;s &lt;a href=&#34;https://github.com/ocornut/imgui/wiki#about-the-imgui-paradigm&#34;&gt;About the IMGUI paradigm&lt;/a&gt; section if you want to understand the core principles behind the IMGUI paradigm. An IMGUI tries to minimize superfluous state duplication, state synchronization and state retention from the user&#39;s point of view. It is less error prone (less code and less bugs) than traditional retained-mode interfaces, and lends itself to create dynamic user interfaces.&lt;/p&gt; &#xA;&lt;p&gt;Dear ImGui outputs vertex buffers and command lists that you can easily render in your application. The number of draw calls and state changes required to render them is fairly small. Because Dear ImGui doesn&#39;t know or touch graphics state directly, you can call its functions anywhere in your code (e.g. in the middle of a running algorithm, or in the middle of your own rendering process). Refer to the sample applications in the examples/ folder for instructions on how to integrate Dear ImGui with your existing codebase.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;A common misunderstanding is to mistake immediate mode gui for immediate mode rendering, which usually implies hammering your driver/GPU with a bunch of inefficient draw calls and state changes as the gui functions are called. This is NOT what Dear ImGui does. Dear ImGui outputs vertex buffers and a small list of draw calls batches. It never touches your GPU directly. The draw call batches are decently optimal and you can render them later, in your app or even remotely.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Releases &amp;amp; Changelogs&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ocornut/imgui/releases&#34;&gt;Releases&lt;/a&gt; page. Reading the changelogs is a good way to keep up to date with the things Dear ImGui has to offer, and maybe will give you ideas of some features that you&#39;ve been ignoring until now!&lt;/p&gt; &#xA;&lt;h3&gt;Demo&lt;/h3&gt; &#xA;&lt;p&gt;Calling the &lt;code&gt;ImGui::ShowDemoWindow()&lt;/code&gt; function will create a demo window showcasing variety of features and examples. The code is always available for reference in &lt;code&gt;imgui_demo.cpp&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v167/v167-misc.png&#34; alt=&#34;screenshot demo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You should be able to build the examples from sources (tested on Windows/Mac/Linux). If you don&#39;t, let us know! If you want to have a quick look at some Dear ImGui features, you can download Windows binaries of the demo app here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.dearimgui.org/binaries/imgui-demo-binaries-20220504.zip&#34;&gt;imgui-demo-binaries-20220504.zip&lt;/a&gt; (Windows, 1.88 WIP, built 2022/05/04, master branch) or &lt;a href=&#34;https://www.dearimgui.org/binaries&#34;&gt;older demo binaries&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The demo applications are not DPI aware so expect some blurriness on a 4K screen. For DPI awareness in your application, you can load/reload your font at different scale, and scale your style with &lt;code&gt;style.ScaleAllSizes()&lt;/code&gt; (see &lt;a href=&#34;https://www.dearimgui.org/faq&#34;&gt;FAQ&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Integration&lt;/h3&gt; &#xA;&lt;p&gt;On most platforms and when using C++, &lt;strong&gt;you should be able to use a combination of the &lt;a href=&#34;https://github.com/ocornut/imgui/tree/master/backends&#34;&gt;imgui_impl_xxxx&lt;/a&gt; backends without modification&lt;/strong&gt; (e.g. &lt;code&gt;imgui_impl_win32.cpp&lt;/code&gt; + &lt;code&gt;imgui_impl_dx11.cpp&lt;/code&gt;). If your engine supports multiple platforms, consider using more of the imgui_impl_xxxx files instead of rewriting them: this will be less work for you and you can get Dear ImGui running immediately. You can &lt;em&gt;later&lt;/em&gt; decide to rewrite a custom backend using your custom engine functions if you wish so.&lt;/p&gt; &#xA;&lt;p&gt;Integrating Dear ImGui within your custom engine is a matter of 1) wiring mouse/keyboard/gamepad inputs 2) uploading one texture to your GPU/render engine 3) providing a render function that can bind textures and render textured triangles. The &lt;a href=&#34;https://github.com/ocornut/imgui/tree/master/examples&#34;&gt;examples/&lt;/a&gt; folder is populated with applications doing just that. If you are an experienced programmer at ease with those concepts, it should take you less than two hours to integrate Dear ImGui in your custom engine. &lt;strong&gt;Make sure to spend time reading the &lt;a href=&#34;https://www.dearimgui.org/faq&#34;&gt;FAQ&lt;/a&gt;, comments, and some of the examples/ application!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Officially maintained backends/bindings (in repository):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Renderers: DirectX9, DirectX10, DirectX11, DirectX12, Metal, OpenGL/ES/ES2, SDL_Renderer, Vulkan, WebGPU.&lt;/li&gt; &#xA; &lt;li&gt;Platforms: GLFW, SDL2, Win32, Glut, OSX, Android.&lt;/li&gt; &#xA; &lt;li&gt;Frameworks: Allegro5, Emscripten.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Bindings&#34;&gt;Third-party backends/bindings&lt;/a&gt; wiki page:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Languages: C, C# and: Beef, ChaiScript, Crystal, D, Go, Haskell, Haxe/hxcpp, Java, JavaScript, Julia, Kotlin, Lobster, Lua, Odin, Pascal, PureBasic, Python, Ruby, Rust, Swift...&lt;/li&gt; &#xA; &lt;li&gt;Frameworks: AGS/Adventure Game Studio, Amethyst, Blender, bsf, Cinder, Cocos2d-x, Diligent Engine, Flexium, GML/Game Maker Studio2, GLEQ, Godot, GTK3+OpenGL3, Irrlicht Engine, LÖVE+LUA, Magnum, Monogame, NanoRT, nCine, Nim Game Lib, Nintendo 3DS &amp;amp; Switch (homebrew), Ogre, openFrameworks, OSG/OpenSceneGraph, Orx, Photoshop, px_render, Qt/QtDirect3D, SDL_Renderer, SFML, Sokol, Unity, Unreal Engine 4, vtk, VulkanHpp, VulkanSceneGraph, Win32 GDI, WxWidgets.&lt;/li&gt; &#xA; &lt;li&gt;Note that C bindings (&lt;a href=&#34;https://github.com/cimgui/cimgui&#34;&gt;cimgui&lt;/a&gt;) are auto-generated, you can use its json/lua output to generate bindings for other languages.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Useful-Extensions&#34;&gt;Useful Extensions/Widgets&lt;/a&gt; wiki page:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Text editors, node editors, timeline editors, plotting, software renderers, remote network access, memory editors, gizmos etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also see &lt;a href=&#34;https://github.com/ocornut/imgui/wiki&#34;&gt;Wiki&lt;/a&gt; for more links and ideas.&lt;/p&gt; &#xA;&lt;h3&gt;Upcoming Changes&lt;/h3&gt; &#xA;&lt;p&gt;Some of the goals for 2022 are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Work on Docking (see &lt;a href=&#34;https://github.com/ocornut/imgui/issues/2109&#34;&gt;#2109&lt;/a&gt;, in public &lt;a href=&#34;https://github.com/ocornut/imgui/tree/docking&#34;&gt;docking&lt;/a&gt; branch)&lt;/li&gt; &#xA; &lt;li&gt;Work on Multi-Viewport / Multiple OS windows. (see &lt;a href=&#34;https://github.com/ocornut/imgui/issues/1542&#34;&gt;#1542&lt;/a&gt;, in public &lt;a href=&#34;https://github.com/ocornut/imgui/tree/docking&#34;&gt;docking&lt;/a&gt; branch looking for feedback)&lt;/li&gt; &#xA; &lt;li&gt;Work on gamepad/keyboard controls. (see &lt;a href=&#34;https://github.com/ocornut/imgui/issues/787&#34;&gt;#787&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Work on automation and testing system, both to test the library and end-user apps. (see &lt;a href=&#34;https://github.com/ocornut/imgui/issues/435&#34;&gt;#435&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Make the examples look better, improve styles, improve font support, make the examples hi-DPI and multi-DPI aware.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Gallery&lt;/h3&gt; &#xA;&lt;p&gt;For more user-submitted screenshots of projects using Dear ImGui, check out the &lt;a href=&#34;https://github.com/ocornut/imgui/issues/5243&#34;&gt;Gallery Threads&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;For a list of third-party widgets and extensions, check out the &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Useful-Extensions&#34;&gt;Useful Extensions/Widgets&lt;/a&gt; wiki page.&lt;/p&gt; &#xA;&lt;p&gt;Custom engine &lt;a href=&#34;https://github.com/tksuoran/erhe&#34;&gt;ehre&lt;/a&gt; (docking branch) &lt;a href=&#34;https://user-images.githubusercontent.com/994606/147875067-a848991e-2ad2-4fd3-bf71-4aeb8a547bcf.png&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/8225057/166686854-3f76bf28-0442-4fac-8e65-9fc9650d2ed0.jpg&#34; alt=&#34;ehre&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Custom engine for &lt;a href=&#34;http://www.TheDragonsTrap.com&#34;&gt;Wonder Boy: The Dragon&#39;s Trap&lt;/a&gt; (2017) &lt;a href=&#34;https://cloud.githubusercontent.com/assets/8225057/20628927/33e14cac-b329-11e6-80f6-9524e93b048a.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v149/gallery_TheDragonsTrap-01-thumb.jpg&#34; alt=&#34;screenshot game&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Custom engine (untitled) &lt;a href=&#34;https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v160/editor_white.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v160/editor_white_preview.jpg&#34; alt=&#34;screenshot tool&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wolfpld/tracy&#34;&gt;Tracy Profiler&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v176/tracy_profiler.png&#34; alt=&#34;tracy profiler&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Support, Frequently Asked Questions (FAQ)&lt;/h3&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;https://github.com/ocornut/imgui/raw/master/docs/FAQ.md&#34;&gt;Frequently Asked Questions (FAQ)&lt;/a&gt; where common questions are answered.&lt;/p&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;https://github.com/ocornut/imgui/wiki&#34;&gt;Wiki&lt;/a&gt; for many links, references, articles.&lt;/p&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;https://github.com/ocornut/imgui/wiki#about-the-imgui-paradigm&#34;&gt;Articles about the IMGUI paradigm&lt;/a&gt; to read/learn about the Immediate Mode GUI paradigm.&lt;/p&gt; &#xA;&lt;p&gt;Getting started? For first-time users having issues compiling/linking/running or issues loading fonts, please use &lt;a href=&#34;https://github.com/ocornut/imgui/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For other questions, bug reports, requests, feedback, you may post on &lt;a href=&#34;https://github.com/ocornut/imgui/issues&#34;&gt;GitHub Issues&lt;/a&gt;. Please read and fill the New Issue template carefully.&lt;/p&gt; &#xA;&lt;p&gt;Private support is available for paying business customers (E-mail: &lt;em&gt;contact @ dearimgui dot com&lt;/em&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Which version should I get?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;We occasionally tag &lt;a href=&#34;https://github.com/ocornut/imgui/releases&#34;&gt;Releases&lt;/a&gt; but it is generally safe and recommended to sync to master/latest. The library is fairly stable and regressions tend to be fixed fast when reported.&lt;/p&gt; &#xA;&lt;p&gt;Advanced users may want to use the &lt;code&gt;docking&lt;/code&gt; branch with &lt;a href=&#34;https://github.com/ocornut/imgui/issues/1542&#34;&gt;Multi-Viewport&lt;/a&gt; and &lt;a href=&#34;https://github.com/ocornut/imgui/issues/2109&#34;&gt;Docking&lt;/a&gt; features. This branch is kept in sync with master regularly.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Who uses Dear ImGui?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Quotes&#34;&gt;Quotes&lt;/a&gt;, &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Sponsors&#34;&gt;Sponsors&lt;/a&gt;, &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Software-using-dear-imgui&#34;&gt;Software using dear imgui&lt;/a&gt; Wiki pages for an idea of who is using Dear ImGui. Please add your game/software if you can! Also see the &lt;a href=&#34;https://github.com/ocornut/imgui/issues/5243&#34;&gt;Gallery Threads&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;How to help&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;How can I help?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://github.com/ocornut/imgui/issues&#34;&gt;GitHub Forum/issues&lt;/a&gt; and &lt;a href=&#34;https://github.com/ocornut/imgui/discussions&#34;&gt;Github Discussions&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You may help with development and submit pull requests! Please understand that by submitting a PR you are also submitting a request for the maintainer to review your code and then take over its maintenance forever. PR should be crafted both in the interest in the end-users and also to ease the maintainer into understanding and accepting it.&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Help-Wanted&#34;&gt;Help wanted&lt;/a&gt; on the &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/&#34;&gt;Wiki&lt;/a&gt; for some more ideas.&lt;/li&gt; &#xA; &lt;li&gt;Have your company financially support this project (please reach by e-mail)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;How can I help financing further development of Dear ImGui?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Sponsors&#34;&gt;Sponsors&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Ongoing Dear ImGui development is currently financially supported in 2021-2022 by users and private sponsors:&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Platinum-chocolate sponsors&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://careers.blizzard.com/en-us/openings/engineering/all/all/all/1&#34;&gt;Blizzard&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Double-chocolate sponsors&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://montreal.ubisoft.com/en/ubisoft-sponsors-user-interface-library-for-c-dear-imgui&#34;&gt;Ubisoft&lt;/a&gt;, &lt;a href=&#34;https://supercell.com&#34;&gt;Supercell&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Chocolate sponsors&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.adobe.com/products/medium.html&#34;&gt;Adobe&lt;/a&gt;, &lt;a href=&#34;https://aras-p.info&#34;&gt;Aras Pranckevičius&lt;/a&gt;, &lt;a href=&#34;https://www.unrealengine.com/en-US/megagrants&#34;&gt;Epic&lt;/a&gt;, &lt;a href=&#34;&#34;&gt;G3Dvu&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Salty-caramel sponsors&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.kylotonn.com&#34;&gt;Kylotonn&lt;/a&gt;, &lt;a href=&#34;http://en.o-netcom.com&#34;&gt;O-Net Communications (USA)&lt;/a&gt;, &lt;a href=&#34;https://wonderlandengine.com/&#34;&gt;Wonderland Engine&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/ocornut/imgui/wiki/Sponsors&#34;&gt;detailed list of current and past Dear ImGui supporters&lt;/a&gt; for more. From November 2014 to December 2019, ongoing development has also been financially supported by its users on Patreon and through individual donations.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;THANK YOU to all past and present supporters for helping to keep this project alive and thriving!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Dear ImGui is using software and services provided free of charge for open source projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.viva64.com/en/b/0570/&#34;&gt;PVS-Studio&lt;/a&gt; for static analysis.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub actions&lt;/a&gt; for continuous integration systems.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OpenCppCoverage/OpenCppCoverage&#34;&gt;OpenCppCoverage&lt;/a&gt; for code coverage analysis.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Developed by &lt;a href=&#34;https://www.miracleworld.net&#34;&gt;Omar Cornut&lt;/a&gt; and every direct or indirect &lt;a href=&#34;https://github.com/ocornut/imgui/graphs/contributors&#34;&gt;contributors&lt;/a&gt; to the GitHub. The early version of this library was developed with the support of &lt;a href=&#34;https://www.mediamolecule.com&#34;&gt;Media Molecule&lt;/a&gt; and first used internally on the game &lt;a href=&#34;https://tearaway.mediamolecule.com&#34;&gt;Tearaway&lt;/a&gt; (PS Vita).&lt;/p&gt; &#xA;&lt;p&gt;Recurring contributors (2022): Omar Cornut &lt;a href=&#34;https://github.com/ocornut&#34;&gt;@ocornut&lt;/a&gt;, Rokas Kupstys &lt;a href=&#34;https://github.com/rokups&#34;&gt;@rokups&lt;/a&gt; (a large portion of work on automation systems, regression tests and other features are currently unpublished).&lt;/p&gt; &#xA;&lt;p&gt;Sponsoring, support contracts and other B2B transactions are hosted and handled by &lt;a href=&#34;https://www.lizardcube.com&#34;&gt;Lizardcube&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Omar: &#34;I first discovered the IMGUI paradigm at &lt;a href=&#34;https://www.q-games.com&#34;&gt;Q-Games&lt;/a&gt; where Atman Binstock had dropped his own simple implementation in the codebase, which I spent quite some time improving and thinking about. It turned out that Atman was exposed to the concept directly by working with Casey. When I moved to Media Molecule I rewrote a new library trying to overcome the flaws and limitations of the first one I&#39;ve worked with. It became this library and since then I have spent an unreasonable amount of time iterating and improving it.&#34;&lt;/p&gt; &#xA;&lt;p&gt;Embeds &lt;a href=&#34;http://upperbounds.net&#34;&gt;ProggyClean.ttf&lt;/a&gt; font by Tristan Grimmer (MIT license).&lt;/p&gt; &#xA;&lt;p&gt;Embeds &lt;a href=&#34;https://github.com/nothings/stb/&#34;&gt;stb_textedit.h, stb_truetype.h, stb_rect_pack.h&lt;/a&gt; by Sean Barrett (public domain).&lt;/p&gt; &#xA;&lt;p&gt;Inspiration, feedback, and testing for early versions: Casey Muratori, Atman Binstock, Mikko Mononen, Emmanuel Briney, Stefan Kamoda, Anton Mikhailov, Matt Willis. Also thank you to everyone posting feedback, questions and patches on GitHub.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Dear ImGui is licensed under the MIT License, see &lt;a href=&#34;https://github.com/ocornut/imgui/raw/master/LICENSE.txt&#34;&gt;LICENSE.txt&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>