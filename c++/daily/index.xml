<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-14T01:32:42Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Tencent/Hippy</title>
    <updated>2022-08-14T01:32:42Z</updated>
    <id>tag:github.com,2022-08-14:/Tencent/Hippy</id>
    <link href="https://github.com/Tencent/Hippy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hippy is designed for developers to easily build cross-platform and high-performance awesome apps. üëè&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hippy Cross Platform Framework&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/group-Hippy-blue.svg?sanitize=true&#34; alt=&#34;Hippy Group&#34;&gt; &lt;a href=&#34;https://github.com/Tencent/Hippy/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/Hippy/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/node-%3E%3D10.0.0-green.svg?sanitize=true&#34; alt=&#34;node&#34;&gt; &lt;a href=&#34;https://github.com/Tencent/Hippy/actions&#34;&gt;&lt;img src=&#34;https://github.com/Tencent/Hippy/workflows/build/badge.svg?branch=master&#34; alt=&#34;Actions Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/Tencent/Hippy&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/Tencent/Hippy&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/Hippy/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/Tencent/Hippy&#34; alt=&#34;GitHub release (latest SemVer)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tencent.github.io/Hippy/&#34;&gt;Homepage&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üí° Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Hippy is a cross-platform development framework, that aims to help developers write once, and run on multiple platforms(iOS, Android, Web, and so on). Hippy is quite friendly to Web developers, especially those who are familiar with React or Vue. With Hippy, developers can create the cross-platform app easily.&lt;/p&gt; &#xA;&lt;p&gt;Hippy is now applied in &lt;a href=&#34;http://www.tencent.com/&#34;&gt;Tencent&lt;/a&gt; major apps such as Mobile QQ, Mobile QQ Browser, Tencent Video App, QQ Music App, and Tencent News, reaching hundreds of millions of ordinary users.&lt;/p&gt; &#xA;&lt;h2&gt;üíØ Advantages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Designed for Web developers, officially support Web frameworks like &lt;code&gt;React&lt;/code&gt; and &lt;code&gt;Vue&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Same APIs for different platforms.&lt;/li&gt; &#xA; &lt;li&gt;Excellent performance with JS engine binding communication.&lt;/li&gt; &#xA; &lt;li&gt;Build-in recyclable component with better performance.&lt;/li&gt; &#xA; &lt;li&gt;Smoothly and gracefully migrate to Web browser.&lt;/li&gt; &#xA; &lt;li&gt;Fully supported Flex &lt;a href=&#34;https://raw.githubusercontent.com/Tencent/Hippy/master/layout&#34;&gt;Layout engine&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üî® Getting started&lt;/h2&gt; &#xA;&lt;h3&gt;Preparing environment&lt;/h3&gt; &#xA;&lt;p&gt;Make sure you have &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; and &lt;a href=&#34;https://docs.npmjs.com/downloading-and-installing-node-js-and-npm&#34;&gt;npm&lt;/a&gt; installed locally.&lt;/p&gt; &#xA;&lt;p&gt;Run &lt;code&gt;git clone https://github.com/Tencent/Hippy.git&lt;/code&gt; and &lt;code&gt;npm install&lt;/code&gt; at project root directory.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The Hippy repository applies &lt;a href=&#34;https://git-lfs.github.com/&#34;&gt;git-lfs&lt;/a&gt; to manage so,gz,otf files, make sure you have installed &lt;a href=&#34;https://git-lfs.github.com/&#34;&gt;git-lfs&lt;/a&gt; first.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;For macOS developers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.apple.com/xcode/&#34;&gt;Xcode&lt;/a&gt; with iOS sdk: build the iOS app.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/studio&#34;&gt;Android Studio&lt;/a&gt; with NDK: build the android app.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.JS&lt;/a&gt;: run the build scripts.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://brew.sh/&#34;&gt;homebrew&lt;/a&gt; is recommended to install the dependencies.&lt;/p&gt; &#xA;&lt;p&gt;For Windows developers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/studio&#34;&gt;Android Studio&lt;/a&gt; with NDK: build the android app.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.JS&lt;/a&gt;: run the build scripts.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Windows can&#39;t run the iOS development environment so far.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Build the iOS simulator with js demo&lt;/h3&gt; &#xA;&lt;p&gt;For iOS, we recommend to use iOS simulator when first try. However, you can change the Xcode configuration to install the app to iPhone if you are an iOS expert.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;npm run init&lt;/code&gt; at root directory.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;This command is combined with &lt;code&gt;npm install &amp;amp;&amp;amp; npx lerna bootstrap &amp;amp;&amp;amp; npm run build&lt;/code&gt;.&lt;/p&gt; &#xA;   &lt;p&gt;&lt;code&gt;npm install&lt;/code&gt;: Install the project build scripts dependencies.&lt;/p&gt; &#xA;   &lt;p&gt;&lt;code&gt;npx lerna bootstrap&lt;/code&gt;: Install dependencies of each npm package.ÔºàHippy uses &lt;a href=&#34;https://lerna.js.org/&#34;&gt;Lerna&lt;/a&gt; to manage multi js packages, if &lt;code&gt;lerna&lt;/code&gt; command is not found, execute &lt;code&gt;npm install lerna -g&lt;/code&gt; first.Ôºâ&lt;/p&gt; &#xA;   &lt;p&gt;&lt;code&gt;npm run build&lt;/code&gt;: Build each front-end sdk package.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Choose a demo to build with &lt;code&gt;npm run buildexample [hippy-react-demo|hippy-vue-demo]&lt;/code&gt; at root directory.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start the Xcode and build the iOS app with &lt;code&gt;open examples/ios-demo/HippyDemo.xcodeproj&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If &lt;code&gt;Step 2&lt;/code&gt; throw error, you can &lt;code&gt;cd&lt;/code&gt; to &lt;code&gt;examples&lt;/code&gt; hippy-react-demo or hippy-vue-demo, and run &lt;code&gt;npm install --legacy-peer-deps&lt;/code&gt; to install demo dependencies first.&lt;/p&gt; &#xA; &lt;p&gt;More details for &lt;a href=&#34;https://hippyjs.org/#/ios/integration?id=ios-%e9%9b%86%e6%88%90&#34;&gt;iOS SDK integration&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Build the Android app with js demo&lt;/h3&gt; &#xA;&lt;p&gt;For Android, we recommend using the real cellphone for better develop experience, because Hippy is using &lt;a href=&#34;https://x5.tencent.com/&#34;&gt;X5&lt;/a&gt; JS engine which can&#39;t support x86 simulator, as well as ARM simulator has a low performance.&lt;/p&gt; &#xA;&lt;p&gt;Before build the android app, please make sure the SDK and NDK is installed, And &lt;em&gt;DO NOT&lt;/em&gt; update the build toolchain.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;npm run init&lt;/code&gt; at root directory.&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;This command is combined with &lt;code&gt;npm install &amp;amp;&amp;amp; npx lerna bootstrap &amp;amp;&amp;amp; npm run build&lt;/code&gt;.&lt;/p&gt; &#xA;   &lt;p&gt;&lt;code&gt;npm install&lt;/code&gt;: Install the project build scripts dependencies.&lt;/p&gt; &#xA;   &lt;p&gt;&lt;code&gt;npx lerna bootstrap&lt;/code&gt;: Install dependencies of each npm package.ÔºàHippy uses &lt;a href=&#34;https://lerna.js.org/&#34;&gt;Lerna&lt;/a&gt; to manage multi js packages, if &lt;code&gt;lerna&lt;/code&gt; command is not found, execute &lt;code&gt;npm install lerna -g&lt;/code&gt; first.Ôºâ&lt;/p&gt; &#xA;   &lt;p&gt;&lt;code&gt;npm run build&lt;/code&gt;: Build each front-end sdk package.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Choose a demo to build with &lt;code&gt;npm run buildexample [hippy-react-demo|hippy-vue-demo]&lt;/code&gt; at root directory.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open &lt;code&gt;Android Project&lt;/code&gt; at root directory with Android Studio.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Connect Android phone with USB cable and make sure USB debugging mode is enabled(Run &lt;code&gt;adb devices&lt;/code&gt; on the computer terminal to check cellphone connection status).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open the project with Android Studio, run and install the apk.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If &lt;code&gt;Step 2&lt;/code&gt; throw error, you can &lt;code&gt;cd&lt;/code&gt; to &lt;code&gt;examples&lt;/code&gt; hippy-react-demo or hippy-vue-demo, and run &lt;code&gt;npm install --legacy-peer-deps&lt;/code&gt; to install demo dependencies first.&lt;/p&gt; &#xA; &lt;p&gt;If you encounter the issue of &lt;code&gt;No toolchains found in the NDK toolchains folder for ABI with prefix: mips64el-linux-android&lt;/code&gt;, here is the &lt;a href=&#34;https://github.com/google/filament/issues/15#issuecomment-415423557&#34;&gt;solution&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;More details for &lt;a href=&#34;https://hippyjs.org/#/android/integration?id=android-%e9%9b%86%e6%88%90&#34;&gt;Android SDK integration&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Debug the js demo&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Follow &lt;a href=&#34;https://github.com/Tencent/Hippy#build-the-ios-simulator-with-js-demo&#34;&gt;Build the iOS simulator with js demo&lt;/a&gt; or &lt;a href=&#34;https://github.com/Tencent/Hippy#build-the-android-app-with-js-demo&#34;&gt;Build the Android app with js demo&lt;/a&gt; first to build the App.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm run init:example [hippy-react-demo|hippy-vue-demo]&lt;/code&gt; at root directory.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm run debugexample [hippy-react-demo|hippy-vue-demo] dev&lt;/code&gt; at root directory.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Or you can &lt;code&gt;cd&lt;/code&gt; to &lt;code&gt;examples/hippy-react-demo&lt;/code&gt; or &lt;code&gt;examples/hippy-vue-demo&lt;/code&gt; directory to run &lt;code&gt;npm run hippy:dev&lt;/code&gt; instead.&lt;/p&gt; &#xA; &lt;p&gt;On example debug mode, npm packages such as @hippy/react, @hippy/vue are linked to &lt;code&gt;packages&lt;/code&gt; &amp;gt; &lt;code&gt;[different package]&lt;/code&gt; &amp;gt; &lt;code&gt;dist&lt;/code&gt;(not node_modules), so if you have changed js package source code and want to make it take effect in target example, please call &lt;code&gt;npm run build&lt;/code&gt; at root directory again.&lt;/p&gt; &#xA; &lt;p&gt;More details for debugging can be read in &lt;a href=&#34;https://hippyjs.org/#/guide/debug&#34;&gt;Hippy Debug Document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Build the js production demo&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Follow &lt;a href=&#34;https://github.com/Tencent/Hippy#build-the-ios-simulator-with-js-demo&#34;&gt;Build the iOS simulator with js demo&lt;/a&gt; or &lt;a href=&#34;https://github.com/Tencent/Hippy#build-the-android-app-with-js-demo&#34;&gt;Build the Android app with js demo&lt;/a&gt; first to build the App.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd&lt;/code&gt; to examples &lt;code&gt;hippy-react-demo&lt;/code&gt; or &lt;code&gt;hippy-vue-demo&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt; to install demo js dependencies.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm run hippy:vendor&lt;/code&gt; and &lt;code&gt;npm run hippy:build&lt;/code&gt; in sequence to build the production &lt;code&gt;vendor.[android|ios].js&lt;/code&gt; and &lt;code&gt;index.[android|ios].js&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Hippy demo uses DllPlugin to split the common chunk and app chunk.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;How to Integrate&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hippyjs.org/#/android/integration&#34;&gt;Android Integration&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hippyjs.org/#/ios/integration&#34;&gt;iOS Integration&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hippyjs.org/#/guide/integration?id=front-end-integration&#34;&gt;Front-End Integration&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìÅ Documentation&lt;/h2&gt; &#xA;&lt;p&gt;To check out &lt;a href=&#34;https://github.com/Tencent/Hippy/tree/master/examples&#34;&gt;hippy examples&lt;/a&gt; and visit &lt;a href=&#34;https://hippyjs.org&#34;&gt;hippyjs.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üìÖ Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Detailed changes for each release version are documented in the &lt;a href=&#34;https://github.com/Tencent/Hippy/releases&#34;&gt;project release notes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üß± Project structure&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Hippy&#xA;‚îú‚îÄ‚îÄ examples                          # Demo code for frontend or native developer.&#xA;‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ hippy-react-demo              # hippy-react js demo code.&#xA;‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ hippy-vue-demo                # hippy-vue js demo code.&#xA;‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ ios-demo                      # iOS native demo code.&#xA;‚îÇ&amp;nbsp;&amp;nbsp; ‚îî‚îÄ‚îÄ android-demo                  # Android native demo code.&#xA;‚îú‚îÄ‚îÄ packages                          # npm packages.&#xA;‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ hippy-react                   # React binding for Hippy.&#xA;‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ hippy-react-web               # Web adapter for hippy-react.&#xA;‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ hippy-vue                     # Vue binding for Hippy.&#xA;‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ hippy-vue-css-loader          # Webpack loader for convert CSS text to JS AST.&#xA;‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ hippy-vue-loader              # Forked from vue-loader to do some hippy customization.&#xA;‚îÇ&amp;nbsp;&amp;nbsp; ‚îú‚îÄ‚îÄ hippy-vue-native-components   # Native components extensions for hippy-vue.&#xA;‚îÇ&amp;nbsp;&amp;nbsp; ‚îî‚îÄ‚îÄ hippy-vue-router              # Vue router for hippy-vue.&#xA;‚îú‚îÄ‚îÄ ios&#xA;‚îÇ&amp;nbsp;&amp;nbsp; ‚îî‚îÄ‚îÄ sdk                           # iOS SDK&#xA;‚îú‚îÄ‚îÄ android&#xA;‚îÇ&amp;nbsp;&amp;nbsp; ‚îî‚îÄ‚îÄ sdk                           # Android SDK.&#xA;‚îú‚îÄ‚îÄ core                              # JS modules implemented by C++, binding to JS engine.&#xA;‚îú‚îÄ‚îÄ docker                            # Native release docker image and build scripts.&#xA;‚îú‚îÄ‚îÄ layout                            # Hippy layout engine.&#xA;‚îú‚îÄ‚îÄ static                            # Global static resources stored directory.&#xA;‚îî‚îÄ‚îÄ scripts                           # Project build script.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ü§ù Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Developers are welcome to contribute to Tencent&#39;s open source, and we will also give them incentives to acknowledge and thank them. Here we provide an official description of Tencent&#39;s open source contribution. Specific contribution rules for each project are formulated by the project team. Developers can choose the appropriate project and participate according to the corresponding rules. The Tencent Project Management Committee will report regularly to qualified contributors and awards will be issued by the official contact. Before making a pull request or issue to Hippy, please make sure to read &lt;a href=&#34;https://github.com/Tencent/Hippy/raw/master/.github/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;All the people who already contributed to Hippy can be seen in &lt;a href=&#34;https://github.com/Tencent/Hippy/graphs/contributors&#34;&gt;Contributors&lt;/a&gt; and &lt;a href=&#34;https://github.com/Tencent/Hippy/raw/master/AUTHORS&#34;&gt;Authors File&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;‚ù§Ô∏è Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/Tencent/Hippy&#34;&gt;&lt;img src=&#34;https://starchart.cc/Tencent/Hippy.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üìÑ License&lt;/h2&gt; &#xA;&lt;p&gt;Hippy is &lt;a href=&#34;https://raw.githubusercontent.com/Tencent/Hippy/master/LICENSE&#34;&gt;Apache-2.0 licensed&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üîó Links&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hippy-contrib&#34;&gt;Hippy Eco-System&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/Taitank&#34;&gt;Taitank Layout Engine&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ihhub/fheroes2</title>
    <updated>2022-08-14T01:32:42Z</updated>
    <id>tag:github.com,2022-08-14:/ihhub/fheroes2</id>
    <link href="https://github.com/ihhub/fheroes2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;fheroes2 is a recreation of Heroes of Might and Magic II game engine&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;fheroes2&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;fheroes2&lt;/strong&gt; is a recreation of the Heroes of Might and Magic II game engine.&lt;/p&gt; &#xA;&lt;p&gt;This open source multiplatform project, written from scratch, is designed to reproduce the original game with significant improvements in the gameplay, graphics and logic (including support for high-resolution graphics, improved AI, numerous fixes and UI improvements), breathing new life into one of the most addictive turn-based strategies.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ihhub/fheroes2/master/docs/images/screenshots/screenshot_world_map.png?raw=true&#34; width=&#34;820&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ihhub/fheroes2/master/docs/images/screenshots/screenshot_battle.png?raw=true&#34; width=&#34;410&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ihhub/fheroes2/master/docs/images/screenshots/screenshot_castle.png?raw=true&#34; width=&#34;410&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Download and install&lt;/h2&gt; &#xA;&lt;p&gt;Please follow the &lt;a href=&#34;https://raw.githubusercontent.com/ihhub/fheroes2/master/docs/INSTALL.md&#34;&gt;&lt;strong&gt;installation guide&lt;/strong&gt;&lt;/a&gt; to download and install fheroes2.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ihhub/fheroes2/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/ihhub/fheroes2/total.svg?sanitize=true&#34; alt=&#34;Github Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;All rights for the original game and its resources belong to former The 3DO Company. These rights were transferred to Ubisoft. We do not encourage and do not support any form of illegal usage of the original game. We strongly advise to purchase the original game on &lt;a href=&#34;https://www.gog.com&#34;&gt;&lt;strong&gt;GOG&lt;/strong&gt;&lt;/a&gt; or &lt;a href=&#34;https://store.ubi.com&#34;&gt;&lt;strong&gt;Ubisoft Store&lt;/strong&gt;&lt;/a&gt; platforms. Alternatively, you can download a free demo version of the game. Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/ihhub/fheroes2/master/docs/INSTALL.md&#34;&gt;&lt;strong&gt;installation guide&lt;/strong&gt;&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://github.com/ihhub/fheroes2/raw/master/LICENSE&#34;&gt;&lt;strong&gt;GNU General Public License v2.0&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Initially, the project was developed on &lt;a href=&#34;https://sourceforge.net/projects/fheroes2/&#34;&gt;&lt;strong&gt;sourceforge&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution and Development&lt;/h2&gt; &#xA;&lt;p&gt;This repository is the place for everyone. If you want to contribute, please read more &lt;a href=&#34;https://github.com/ihhub/fheroes2/wiki/F.A.Q.#q-how-can-i-contribute-to-the-project&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To build the project from source please follow &lt;a href=&#34;https://raw.githubusercontent.com/ihhub/fheroes2/master/docs/DEVELOPMENT.md&#34;&gt;&lt;strong&gt;this guide&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ihhub/fheroes2/actions&#34;&gt;&lt;img src=&#34;https://github.com/ihhub/fheroes2/workflows/GitHub%20Actions/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=ihhub_fheroes2&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=ihhub_fheroes2&amp;amp;metric=bugs&#34; alt=&#34;Bugs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=ihhub_fheroes2&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=ihhub_fheroes2&amp;amp;metric=code_smells&#34; alt=&#34;Code Smells&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=ihhub_fheroes2&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=ihhub_fheroes2&amp;amp;metric=duplicated_lines_density&#34; alt=&#34;Duplicated Lines (%)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/ihhub/fheroes2/alerts/&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/alerts/g/ihhub/fheroes2.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Total alerts&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you would like to help translating the project, please read the &lt;a href=&#34;https://raw.githubusercontent.com/ihhub/fheroes2/master/docs/TRANSLATION.md&#34;&gt;&lt;strong&gt;translation guide&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Donation&lt;/h2&gt; &#xA;&lt;p&gt;We accept donations via &lt;strong&gt;Patreon&lt;/strong&gt; or &lt;strong&gt;PayPal&lt;/strong&gt;. All donations will be used only for the future project development as we do not consider this project as a source of income by any means.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.patreon.com/fheroes2&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-Patreon-green.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.com/paypalme/fheroes2&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-green.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contacts&lt;/h2&gt; &#xA;&lt;p&gt;Follow us on social networks: &lt;a href=&#34;https://www.facebook.com/groups/fheroes2&#34;&gt;&lt;strong&gt;Facebook&lt;/strong&gt;&lt;/a&gt; or &lt;a href=&#34;https://vk.com/fheroes2&#34;&gt;&lt;strong&gt;VK&lt;/strong&gt;&lt;/a&gt;. We also have a &lt;a href=&#34;https://discord.gg/xF85vbZ&#34;&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/a&gt; server to discuss the development of the project.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/xF85vbZ&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/733093692860137523.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.facebook.com/groups/fheroes2&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Facebook-blue.svg?sanitize=true&#34; alt=&#34;Facebook&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://vk.com/fheroes2&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/VK-blue.svg?sanitize=true&#34; alt=&#34;VK&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;You can find answers to the most common questions on our &lt;a href=&#34;https://github.com/ihhub/fheroes2/wiki/F.A.Q.&#34;&gt;&lt;strong&gt;F.A.Q. page&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google/benchmark</title>
    <updated>2022-08-14T01:32:42Z</updated>
    <id>tag:github.com,2022-08-14:/google/benchmark</id>
    <link href="https://github.com/google/benchmark" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A microbenchmark support library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Benchmark&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/google/benchmark/actions?query=workflow%3Abuild-and-test&#34;&gt;&lt;img src=&#34;https://github.com/google/benchmark/workflows/build-and-test/badge.svg?sanitize=true&#34; alt=&#34;build-and-test&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/google/benchmark/actions/workflows/bazel.yml&#34;&gt;&lt;img src=&#34;https://github.com/google/benchmark/actions/workflows/bazel.yml/badge.svg?sanitize=true&#34; alt=&#34;bazel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/google/benchmark/actions?query=workflow%3Apylint&#34;&gt;&lt;img src=&#34;https://github.com/google/benchmark/workflows/pylint/badge.svg?sanitize=true&#34; alt=&#34;pylint&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/google/benchmark/actions?query=workflow%3Atest-bindings&#34;&gt;&lt;img src=&#34;https://github.com/google/benchmark/workflows/test-bindings/badge.svg?sanitize=true&#34; alt=&#34;test-bindings&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/google/benchmark&#34;&gt;&lt;img src=&#34;https://travis-ci.org/google/benchmark.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/r/google/benchmark&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/google/benchmark/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A library to benchmark code snippets, similar to unit tests. Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#include &amp;lt;benchmark/benchmark.h&amp;gt;&#xA;&#xA;static void BM_SomeFunction(benchmark::State&amp;amp; state) {&#xA;  // Perform setup here&#xA;  for (auto _ : state) {&#xA;    // This code gets timed&#xA;    SomeFunction();&#xA;  }&#xA;}&#xA;// Register the function as a benchmark&#xA;BENCHMARK(BM_SomeFunction);&#xA;// Run the benchmark&#xA;BENCHMARK_MAIN();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To get started, see &lt;a href=&#34;https://raw.githubusercontent.com/google/benchmark/main/#requirements&#34;&gt;Requirements&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/google/benchmark/main/#installation&#34;&gt;Installation&lt;/a&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/google/benchmark/main/#usage&#34;&gt;Usage&lt;/a&gt; for a full example and the &lt;a href=&#34;https://raw.githubusercontent.com/google/benchmark/main/docs/user_guide.md&#34;&gt;User Guide&lt;/a&gt; for a more comprehensive feature overview.&lt;/p&gt; &#xA;&lt;p&gt;It may also help to read the &lt;a href=&#34;https://github.com/google/googletest/raw/master/docs/primer.md&#34;&gt;Google Test documentation&lt;/a&gt; as some of the structural aspects of the APIs are similar.&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://groups.google.com/d/forum/benchmark-discuss&#34;&gt;Discussion group&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;IRC channels:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://libera.chat&#34;&gt;libera&lt;/a&gt; #benchmark&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/benchmark/main/docs/tools.md&#34;&gt;Additional Tooling Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/benchmark/main/docs/AssemblyTests.md&#34;&gt;Assembly Testing Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/benchmark/main/docs/python_bindings.md&#34;&gt;Building and installing Python bindings&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;The library can be used with C++03. However, it requires C++11 to build, including compiler and standard library support.&lt;/p&gt; &#xA;&lt;p&gt;The following minimum versions are required to build the library:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GCC 4.8&lt;/li&gt; &#xA; &lt;li&gt;Clang 3.4&lt;/li&gt; &#xA; &lt;li&gt;Visual Studio 14 2015&lt;/li&gt; &#xA; &lt;li&gt;Intel 2015 Update 1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/google/benchmark/main/docs/platform_specific_build_instructions.md&#34;&gt;Platform-Specific Build Instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;This describes the installation process using cmake. As pre-requisites, you&#39;ll need git and cmake installed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/google/benchmark/main/docs/dependencies.md&#34;&gt;dependencies.md&lt;/a&gt; for more details regarding supported versions of build tools.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Check out the library.&#xA;$ git clone https://github.com/google/benchmark.git&#xA;# Go to the library root directory&#xA;$ cd benchmark&#xA;# Make a build directory to place the build output.&#xA;$ cmake -E make_directory &#34;build&#34;&#xA;# Generate build system files with cmake, and download any dependencies.&#xA;$ cmake -E chdir &#34;build&#34; cmake -DBENCHMARK_DOWNLOAD_DEPENDENCIES=on -DCMAKE_BUILD_TYPE=Release ../&#xA;# or, starting with CMake 3.13, use a simpler form:&#xA;# cmake -DCMAKE_BUILD_TYPE=Release -S . -B &#34;build&#34;&#xA;# Build the library.&#xA;$ cmake --build &#34;build&#34; --config Release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This builds the &lt;code&gt;benchmark&lt;/code&gt; and &lt;code&gt;benchmark_main&lt;/code&gt; libraries and tests. On a unix system, the build directory should now look something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/benchmark&#xA;  /build&#xA;    /src&#xA;      /libbenchmark.a&#xA;      /libbenchmark_main.a&#xA;    /test&#xA;      ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, you can run the tests to check the build.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cmake -E chdir &#34;build&#34; ctest --build-config Release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to install the library globally, also run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo cmake --build &#34;build&#34; --config Release --target install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that Google Benchmark requires Google Test to build and run the tests. This dependency can be provided two ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Checkout the Google Test sources into &lt;code&gt;benchmark/googletest&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Otherwise, if &lt;code&gt;-DBENCHMARK_DOWNLOAD_DEPENDENCIES=ON&lt;/code&gt; is specified during configuration as above, the library will automatically download and build any required dependencies.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you do not wish to build and run the tests, add &lt;code&gt;-DBENCHMARK_ENABLE_GTEST_TESTS=OFF&lt;/code&gt; to &lt;code&gt;CMAKE_ARGS&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Debug vs Release&lt;/h3&gt; &#xA;&lt;p&gt;By default, benchmark builds as a debug library. You will see a warning in the output when this is the case. To build it as a release library instead, add &lt;code&gt;-DCMAKE_BUILD_TYPE=Release&lt;/code&gt; when generating the build system files, as shown above. The use of &lt;code&gt;--config Release&lt;/code&gt; in build commands is needed to properly support multi-configuration tools (like Visual Studio for example) and can be skipped for other build systems (like Makefile).&lt;/p&gt; &#xA;&lt;p&gt;To enable link-time optimisation, also add &lt;code&gt;-DBENCHMARK_ENABLE_LTO=true&lt;/code&gt; when generating the build system files.&lt;/p&gt; &#xA;&lt;p&gt;If you are using gcc, you might need to set &lt;code&gt;GCC_AR&lt;/code&gt; and &lt;code&gt;GCC_RANLIB&lt;/code&gt; cmake cache variables, if autodetection fails.&lt;/p&gt; &#xA;&lt;p&gt;If you are using clang, you may need to set &lt;code&gt;LLVMAR_EXECUTABLE&lt;/code&gt;, &lt;code&gt;LLVMNM_EXECUTABLE&lt;/code&gt; and &lt;code&gt;LLVMRANLIB_EXECUTABLE&lt;/code&gt; cmake cache variables.&lt;/p&gt; &#xA;&lt;h3&gt;Stable and Experimental Library Versions&lt;/h3&gt; &#xA;&lt;p&gt;The main branch contains the latest stable version of the benchmarking library; the API of which can be considered largely stable, with source breaking changes being made only upon the release of a new major version.&lt;/p&gt; &#xA;&lt;p&gt;Newer, experimental, features are implemented and tested on the &lt;a href=&#34;https://github.com/google/benchmark/tree/v2&#34;&gt;&lt;code&gt;v2&lt;/code&gt; branch&lt;/a&gt;. Users who wish to use, test, and provide feedback on the new features are encouraged to try this branch. However, this branch provides no stability guarantees and reserves the right to change and break the API at any time.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Basic usage&lt;/h3&gt; &#xA;&lt;p&gt;Define a function that executes the code to measure, register it as a benchmark function using the &lt;code&gt;BENCHMARK&lt;/code&gt; macro, and ensure an appropriate &lt;code&gt;main&lt;/code&gt; function is available:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#include &amp;lt;benchmark/benchmark.h&amp;gt;&#xA;&#xA;static void BM_StringCreation(benchmark::State&amp;amp; state) {&#xA;  for (auto _ : state)&#xA;    std::string empty_string;&#xA;}&#xA;// Register the function as a benchmark&#xA;BENCHMARK(BM_StringCreation);&#xA;&#xA;// Define another benchmark&#xA;static void BM_StringCopy(benchmark::State&amp;amp; state) {&#xA;  std::string x = &#34;hello&#34;;&#xA;  for (auto _ : state)&#xA;    std::string copy(x);&#xA;}&#xA;BENCHMARK(BM_StringCopy);&#xA;&#xA;BENCHMARK_MAIN();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the benchmark, compile and link against the &lt;code&gt;benchmark&lt;/code&gt; library (libbenchmark.a/.so). If you followed the build steps above, this library will be under the build directory you created.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Example on linux after running the build steps above. Assumes the&#xA;# `benchmark` and `build` directories are under the current directory.&#xA;$ g++ mybenchmark.cc -std=c++11 -isystem benchmark/include \&#xA;  -Lbenchmark/build/src -lbenchmark -lpthread -o mybenchmark&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, link against the &lt;code&gt;benchmark_main&lt;/code&gt; library and remove &lt;code&gt;BENCHMARK_MAIN();&lt;/code&gt; above to get the same behavior.&lt;/p&gt; &#xA;&lt;p&gt;The compiled executable will run all benchmarks by default. Pass the &lt;code&gt;--help&lt;/code&gt; flag for option information or see the &lt;a href=&#34;https://raw.githubusercontent.com/google/benchmark/main/docs/user_guide.md&#34;&gt;User Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Usage with CMake&lt;/h3&gt; &#xA;&lt;p&gt;If using CMake, it is recommended to link against the project-provided &lt;code&gt;benchmark::benchmark&lt;/code&gt; and &lt;code&gt;benchmark::benchmark_main&lt;/code&gt; targets using &lt;code&gt;target_link_libraries&lt;/code&gt;. It is possible to use &lt;code&gt;find_package&lt;/code&gt; to import an installed version of the library.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;find_package(benchmark REQUIRED)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, &lt;code&gt;add_subdirectory&lt;/code&gt; will incorporate the library directly in to one&#39;s CMake project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;add_subdirectory(benchmark)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Either way, link to the library as follows.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;target_link_libraries(MyTarget benchmark::benchmark)&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>