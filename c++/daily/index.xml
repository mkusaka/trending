<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-22T01:25:02Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hyprwm/hyprlock</title>
    <updated>2024-02-22T01:25:02Z</updated>
    <id>tag:github.com,2024-02-22:/hyprwm/hyprlock</id>
    <link href="https://github.com/hyprwm/hyprlock" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hyprland&#39;s GPU-accelerated screen locking utility&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;hyprlock&lt;/h1&gt; &#xA;&lt;p&gt;Hyprland&#39;s simple, yet multi-threaded and GPU-accelerated screen locking utility.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;uses the secure ext-session-lock protocol&lt;/li&gt; &#xA; &lt;li&gt;full support for fractional-scale&lt;/li&gt; &#xA; &lt;li&gt;fully GPU accelerated&lt;/li&gt; &#xA; &lt;li&gt;multi-threaded resource acquisition for no hitches&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How it looks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.ibb.co/8Bd98BP/20240220-00h12m46s.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Docs / Configuration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://wiki.hyprland.org/Hypr-Ecosystem/hyprlock/&#34;&gt;See the wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;h3&gt;Deps&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;wayland-client&lt;/li&gt; &#xA; &lt;li&gt;wayland-protocols&lt;/li&gt; &#xA; &lt;li&gt;cairo&lt;/li&gt; &#xA; &lt;li&gt;gles3.2&lt;/li&gt; &#xA; &lt;li&gt;libdrm&lt;/li&gt; &#xA; &lt;li&gt;pango&lt;/li&gt; &#xA; &lt;li&gt;hyprlang&amp;gt;=0.4.0&lt;/li&gt; &#xA; &lt;li&gt;xkbcommon&lt;/li&gt; &#xA; &lt;li&gt;pam&lt;/li&gt; &#xA; &lt;li&gt;mesa&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;p&gt;Building:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cmake --no-warn-unused-cli -DCMAKE_BUILD_TYPE:STRING=Release -S . -B ./build&#xA;cmake --build ./build --config Release --target hyprlock -j`nproc 2&amp;gt;/dev/null || getconf NPROCESSORS_CONF`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Installation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo cmake --install build&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>InfpPointPlus/Raptor</title>
    <updated>2024-02-22T01:25:02Z</updated>
    <id>tag:github.com,2024-02-22:/InfpPointPlus/Raptor</id>
    <link href="https://github.com/InfpPointPlus/Raptor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;第三方阿里云盘桌面应用客户端&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Raptor&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://changelog.com/jsparty/96&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Powered%20by-Qt-49CF59.svg?sanitize=true&#34; alt=&#34;Powered by Qt&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/InfpPointPlus/Raptor/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discuss%20on-GitHub-00A4FF&#34; alt=&#34;Discuss on GitHub&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;使用 Qt 和 C++ 构建的低内存、简洁和美观的第三方阿里云盘桌面应用客户端🚀&lt;/p&gt; &#xA;&lt;p&gt;Raptor 由 &lt;strong&gt;Qt5&lt;/strong&gt; 💚 驱动，与其他基于 Chromium 的解决方案（如 Electron）相比，这使得其 CPU 和内存使用较低&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;我们已提供&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🧬 用户 - 持久化登录，多用户登录，多用户切换&lt;/li&gt; &#xA; &lt;li&gt;📉 文件（夹） - 创建/多级创建文件夹/重命名/搜索&lt;/li&gt; &#xA; &lt;li&gt;💅 文件（夹） - 移动/复制&lt;/li&gt; &#xA; &lt;li&gt;✅ 文件（夹） - 上传/下载/唤起第三方下载器下载&lt;/li&gt; &#xA; &lt;li&gt;🎪 视频 - MPV/VLC/PotPlayer&lt;/li&gt; &#xA; &lt;li&gt;💸 分享 - 创建分享/导入分享&lt;/li&gt; &#xA; &lt;li&gt;🦹🏻‍♀️ 秒传 - 创建秒传/导入秒传&lt;/li&gt; &#xA; &lt;li&gt;⭐️ 收藏 - 收藏/取消收藏/搜索&lt;/li&gt; &#xA; &lt;li&gt;🕵️‍♂️ 回收站 - 清空/删除/恢复&lt;/li&gt; &#xA; &lt;li&gt;📚 Plus - 跨网盘文件复制&lt;/li&gt; &#xA; &lt;li&gt;🏅 UI - 可自由修改的字体，图标与主题&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;今后的工作&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;升级到 Qt6 以支持 DPI&lt;/li&gt; &#xA; &lt;li&gt;全速下载&lt;/li&gt; &#xA; &lt;li&gt;主流 Linux 桌面系统适配（也许是 Qt，也许是 PyQt，也许是也许...）&lt;/li&gt; &#xA; &lt;li&gt;在线文档站点搭建&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;从代码开始&lt;/h2&gt; &#xA;&lt;p&gt;本节对于那些想要从源代码构建 Raptor 的人来说很有用&lt;/p&gt; &#xA;&lt;h3&gt;必要的工具集&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visual Studio 2019&lt;/li&gt; &#xA; &lt;li&gt;Qt 5.15（静态或动态）&lt;/li&gt; &#xA; &lt;li&gt;CMake 3.5 及其更高版本&lt;/li&gt; &#xA; &lt;li&gt;JetBrains CLion 2024&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;第三方依赖库&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zint.org.uk&#34;&gt;ZInt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://curl.se&#34;&gt;Curl&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.cryptopp.com&#34;&gt;Crypto++&lt;/a&gt;（仅静态编译需要）&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sass-lang.com&#34;&gt;Sass&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bitcoin-core/secp256k1&#34;&gt;SECP256K1&lt;/a&gt;（仅动态编译需要）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;编译之后按照 &lt;code&gt;CMakeList.txt&lt;/code&gt; 中的头文件路径和库路径放置&lt;/p&gt; &#xA;&lt;h3&gt;即刻开始构建&lt;/h3&gt; &#xA;&lt;h4&gt;Debug&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用 JetBrains CLion 打开 Raptor&lt;/li&gt; &#xA; &lt;li&gt;根据向导配置 Visual Studio 工具集&lt;/li&gt; &#xA; &lt;li&gt;修改 &lt;code&gt;CMakeList.txt&lt;/code&gt; 中的 &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; 为您的 Qt 安装目录&lt;/li&gt; &#xA; &lt;li&gt;修改 &lt;code&gt;CMakeList.txt&lt;/code&gt; 中的 &lt;code&gt;Standalone&lt;/code&gt; 为 &lt;code&gt;ON&lt;/code&gt; （静态编译） 或者 &lt;code&gt;OFF&lt;/code&gt; （动态编译）&lt;/li&gt; &#xA; &lt;li&gt;点击右上角编译图标以构建&lt;/li&gt; &#xA; &lt;li&gt;最后，在 &lt;code&gt;Target/[x64|x86]/[Debug|Release]/[Static|Share]&lt;/code&gt; 中可查看二进制程序&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Release&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;编辑 &lt;code&gt;Script&lt;/code&gt; 中的脚本，修改 &lt;code&gt;QT_DIR&lt;/code&gt; 和 &lt;code&gt;Visual Studio 2019 命令提示符&lt;/code&gt; 为相应目录&lt;/li&gt; &#xA; &lt;li&gt;运行相关脚本。稍等片刻，在 &lt;code&gt;Dist&lt;/code&gt; 中即可查看压缩好的二进制发行包&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;PS：如果您选择静态编译则对应的 Qt 工具集也必须是静态的，动态编译则需要动态编译的 Qt 工具集&lt;/p&gt; &#xA;&lt;h2&gt;声明&lt;/h2&gt; &#xA;&lt;p&gt;Raptor 是自由软件，依据 &lt;a href=&#34;https://www.gnu.org/licenses&#34;&gt;GNU General Public License V3.0&lt;/a&gt; 授权发布。你可以再分发之和/或依照由自由软件基金会发布的 GNU 通用公共许可证修改之，无论是版本 3 许可证，还是（按你的决定）任何以后版都可以。发布 Raptor 是希望它能有用，但是并无保障；甚至连可销售和符合某个特定的目的都不保证。请参看 GNU 通用公共许可证，了解详情。你应该随程序获得一份 GNU 通用公共许可证的复本。如果没有，请看 &lt;a href=&#34;https://www.gnu.org/licenses&#34;&gt;在线许可证&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Raptor 所使用的第三方依赖库，其许可可在 &lt;code&gt;Store/Legal&lt;/code&gt; 中找到&lt;/p&gt; &#xA;&lt;h2&gt;需要您的支持&lt;/h2&gt; &#xA;&lt;p&gt;Raptor 是一个开源项目，需要您的支持。如果你喜欢这个项目，请考虑通过点击这个 Github 存储库上的 Star 按钮来支持我的工作&lt;/p&gt;</summary>
  </entry>
</feed>