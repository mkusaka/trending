<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-06T01:24:37Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nukeykt/Nuked-SC55</title>
    <updated>2024-04-06T01:24:37Z</updated>
    <id>tag:github.com,2024-04-06:/nukeykt/Nuked-SC55</id>
    <link href="https://github.com/nukeykt/Nuked-SC55" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SC-55mkII emulation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nuked SC-55&lt;/h1&gt; &#xA;&lt;p&gt;Roland SC-55mkII emulator, by nukeykt.&lt;/p&gt; &#xA;&lt;p&gt;Special thanks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;John McMaster: SC-55 PCM chip decap.&lt;/li&gt; &#xA; &lt;li&gt;org/ogamespec: deroute tool.&lt;/li&gt; &#xA; &lt;li&gt;SDL team.&lt;/li&gt; &#xA; &lt;li&gt;Wohlstand: linux/macos port.&lt;/li&gt; &#xA; &lt;li&gt;mattw&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;3 ICs are needed to be emulated:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Roland PCM chip&lt;/li&gt; &#xA; &lt;li&gt;Hitachi H8/532 MCU&lt;/li&gt; &#xA; &lt;li&gt;Mitsubishi M37450M2 MCU&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;MCUs are emulated using info from their datasheets. PCM chip info is derived from analyzing decapped chip.&lt;/p&gt; &#xA;&lt;h3&gt;PCM chip tracing progress&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nukeykt/Nuked-SC55/master/pcm_tracing.jpg&#34; alt=&#34;pcm_tracing.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;MCU emulation progress&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nukeykt/Nuked-SC55/master/mcu1.png&#34; alt=&#34;mcu1.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nukeykt/Nuked-SC55/master/mcu2.png&#34; alt=&#34;mcu2.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Put SC-55mkII firmware image into the same folder as Nuked SC-55. Files should be names as such:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;R15199858 (H8/532 mcu) -&amp;gt; rom1.bin&#xA;R00233567 (H8/532 extra code) -&amp;gt; rom2.bin&#xA;R15199880 (M37450M2 mcu) -&amp;gt; rom_sm.bin&#xA;R15209359 (WAVE 16M) -&amp;gt; waverom1.bin&#xA;R15279813 (WAVE 8M) -&amp;gt; waverom2.bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Nuked SC-55 can be distributed and used under the original MAME license (see LICENSE file). Non-commercial license was chosen to prevent making and selling SC-55 emulation boxes using (or around) this code, as well as preventing from using it in the commercial music production.&lt;/p&gt; &#xA;&lt;h2&gt;Additional info&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Nuked SC-55 will listen to the specified MIDI IN port (default is port 0). Use &#39;-p:&amp;lt;port_number&amp;gt;&#39; command line argument to specify port number. To use it with the other applications use external MIDI pipe software (e.g. loopMIDI).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;SC-55mkII buttons are mapped as such (currently hardcoded):&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;Q -&amp;gt; POWER&#xA;W -&amp;gt; INST ALL&#xA;E -&amp;gt; INST MUTE&#xA;R -&amp;gt; PART L&#xA;T -&amp;gt; PART R&#xA;Y -&amp;gt; INST L&#xA;U -&amp;gt; INST R&#xA;I -&amp;gt; KEY SHIFT L&#xA;O -&amp;gt; KEY SHIFT R&#xA;P -&amp;gt; LEVEL L&#xA;LEFTBRACKET  -&amp;gt; LEVEL R&#xA;A -&amp;gt; MIDI CH L&#xA;S -&amp;gt; MIDI CH R&#xA;D -&amp;gt; PAN L&#xA;F -&amp;gt; PAN R&#xA;G -&amp;gt; REVERB L&#xA;H -&amp;gt; REVERB R&#xA;J -&amp;gt; CHORUS L&#xA;K -&amp;gt; CHORUS R&#xA;LEFT -&amp;gt; PART L&#xA;RIGHT -&amp;gt; PART R&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Due to a bug in the SC-55mkII&#39;s firmware, some parameters don&#39;t reset properly on startup. Do GM, GS or MT-32 reset using buttons to fix this issue.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Neo-Maoku/SearchAvailableExe</title>
    <updated>2024-04-06T01:24:37Z</updated>
    <id>tag:github.com,2024-04-06:/Neo-Maoku/SearchAvailableExe</id>
    <link href="https://github.com/Neo-Maoku/SearchAvailableExe" rel="alternate"></link>
    <summary type="html">&lt;p&gt;寻找可利用的白文件&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SearchAvailableExe&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/language-c++-blue.svg?sanitize=true&#34; alt=&#34;Language&#34;&gt; &lt;a href=&#34;https://github.com/Neo-Maoku/SearchAvailableExe/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Neo-Maoku/SearchAvailableExe.svg?sanitize=true&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Automatically search for available white files on the local machine, high accuracy, simple operation&lt;/p&gt; &#xA;&lt;h3&gt;项目演示&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Neo-Maoku/SearchAvailableExe/assets/26914648/72d7a8f6-c846-4dc8-af19-e8d2e41e7b79&#34;&gt;https://github.com/Neo-Maoku/SearchAvailableExe/assets/26914648/72d7a8f6-c846-4dc8-af19-e8d2e41e7b79&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;项目适配测试&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;在win11 64、win10 64、win7 64、win7 32、server 2008 64系统中均测试成功，准确率高&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Neo-Maoku/SearchAvailableExe/master/res/cs.png&#34; alt=&#34;screenshots&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;项目使用vs 2022编译&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;项目包括一个可执行文件和加载Shellcode的测试DLL项目，在dllmain.cpp文件中替换自己的shellcode，再编译dll，把生成32位和64位dll放到可执行文件的同目录下。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;使用说明&lt;/h3&gt; &#xA;&lt;p&gt;-o：运行输出日志文件存放位置，默认是输出到控制台&lt;/p&gt; &#xA;&lt;p&gt;-i：指定搜索的目录位置，需要是目录。默认是全盘搜索&lt;/p&gt; &#xA;&lt;p&gt;-w：搜索的可利用白文件目录是否具有可写权限，默认为否&lt;/p&gt; &#xA;&lt;p&gt;-c：搜索的可利用白文件需要依赖几个Dll文件，默认为1。系统dll不包括在内&lt;/p&gt; &#xA;&lt;p&gt;-b：指定搜索的可利用白文件是否为32或64位，默认搜索32和64位程序&lt;/p&gt; &#xA;&lt;p&gt;-s：是否保存搜索到的可利用文件临时目录，默认为否&lt;/p&gt; &#xA;&lt;p&gt;-l：过滤dll加载方式，1是静态加载，2是动态加载，3是静态加动态。默认值为3&lt;/p&gt; &#xA;&lt;p&gt;B站地址：&lt;/p&gt; &#xA;&lt;p&gt;【一款自研的自动化挖掘白利用程序工具】 &lt;a href=&#34;https://www.bilibili.com/video/BV1bm421n73Z/?share_source=copy_web&amp;amp;vd_source=c75cdcc6b49a06fd849f2d392e8e3218&#34;&gt;https://www.bilibili.com/video/BV1bm421n73Z/?share_source=copy_web&amp;amp;vd_source=c75cdcc6b49a06fd849f2d392e8e3218&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>GameTechDev/PresentMon</title>
    <updated>2024-04-06T01:24:37Z</updated>
    <id>tag:github.com,2024-04-06:/GameTechDev/PresentMon</id>
    <link href="https://github.com/GameTechDev/PresentMon" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Capture and analyze the high-level performance characteristics of graphics applications on Windows.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/GameTechDev/PresentMon&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/GameTechDev/PresentMon/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/GameTechDev/PresentMon&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commits-since/GameTechDev/PresentMon/latest/main&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/GameTechDev/PresentMon&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/GameTechDev/PresentMon&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;PresentMon&lt;/h1&gt; &#xA;&lt;p&gt;PresentMon is a set of tools to capture and analyze the high-level performance characteristics of graphics applications on Windows. PresentMon traces key performance metrics such as the CPU, GPU, and Display frame durations and latencies; and works across different graphics API such as DirectX, OpenGL, and Vulkan, different hardware configurations, and for both desktop and UWP applications.&lt;/p&gt; &#xA;&lt;p&gt;This repository contains several components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The PresentData/ directory contains the &lt;strong&gt;PresentMon Collection and Analysis library&lt;/strong&gt;: a library that performs the lowest-level collection and analysis of &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/windows/desktop/bb968803%28v=vs.85%29.aspx?f=255&amp;amp;MSPPError=-2147217396&#34;&gt;ETW&lt;/a&gt; events. See &lt;a href=&#34;https://raw.githubusercontent.com/GameTechDev/PresentMon/main/PresentData/PresentMonTraceConsumer.hpp&#34;&gt;PresentData/PresentMonTraceConsumer.hpp&lt;/a&gt; for more information.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The PresentMon/ directory contains the &lt;strong&gt;PresentMon Console Application&lt;/strong&gt;: a standalone console application that can be used to collect CSV data from target applications. See &lt;a href=&#34;https://raw.githubusercontent.com/GameTechDev/PresentMon/main/README-ConsoleApplication.md&#34;&gt;README-ConsoleApplication.md&lt;/a&gt; for more information.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The IntelPresentMon/ directory contains the &lt;strong&gt;PresentMon Service&lt;/strong&gt; and &lt;strong&gt;PresentMon Capture Application&lt;/strong&gt;: an easy-to-use GUI that can be used to collect and analyze target applications. See &lt;a href=&#34;https://raw.githubusercontent.com/GameTechDev/PresentMon/main/README-Service.md&#34;&gt;README-Service.md&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/GameTechDev/PresentMon/main/README-CaptureApplication.md&#34;&gt;README-CaptureApplication.md&lt;/a&gt; for more information.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are also several other programs that build on this functionality and/or help visualize the resulting data. For example, see:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gpuopen.com/ocat/&#34;&gt;AMD OCAT&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://capframex.com/&#34;&gt;CapFrameX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.guru3d.com/files-details/rtss-rivatuner-statistics-server-download.html&#34;&gt;Guru3D RTSS RivaTuner Statistics Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://devblogs.microsoft.com/pix/system-monitor/&#34;&gt;Microsoft PIX on Windows System Monitor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nvidia.com/en-us/geforce/technologies/frameview/&#34;&gt;NVIDIA FrameView&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Binaries for the main releases of PresentMon are provided on &lt;a href=&#34;https://game.intel.com/story/intel-presentmon/&#34;&gt;intel.com&lt;/a&gt; or &lt;a href=&#34;https://github.com/GameTechDev/PresentMon/releases/latest&#34;&gt;github.com&lt;/a&gt; (&lt;a href=&#34;https://github.com/GameTechDev/PresentMon/releases&#34;&gt;list of all releases&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/GameTechDev/PresentMon/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for information on how to request features, report issues, or contribute code changes.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/GameTechDev/PresentMon/main/BUILDING.md&#34;&gt;BUILDING.md&lt;/a&gt; for information on how to build PresentMon components from source.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (C) 2017-2024 Intel Corporation&lt;/p&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#34;Software&#34;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/GameTechDev/PresentMon/issues&#34;&gt;GitHub Issues&lt;/a&gt; for a current list of reported issues.&lt;/p&gt; &#xA;&lt;h3&gt;User access denied&lt;/h3&gt; &#xA;&lt;p&gt;PresentMon needs to be run by a user who is a member of the &#34;Performance Log Users&#34; user group. If neither of these are true, you will get an error &#34;failed to start trace session (access denied)&#34;.&lt;/p&gt; &#xA;&lt;p&gt;To add a user to the &#34;Performance Log Users&#34; user group:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run &lt;code&gt;compmgmt.msc&lt;/code&gt; as administrator.&lt;/li&gt; &#xA; &lt;li&gt;In the &#34;Computer Management&#34; window, expand &#34;System Tools&#34;, expand &#34;Local Users and Groups&#34;, and then click &#34;Groups&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Double-click &#34;Performance Log Users&#34;, and then click &#34;Add&#34;.&lt;/li&gt; &#xA; &lt;li&gt;In the &#34;Enter the object names to select&#34; text box, type the name of the user account or group account that you want to add, and then click &#34;OK&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Sign out and log back in for the changes to take effect.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If PresentMon is not run with administrator privilege, it will not have complete process information for processes running on different user accounts or for processes that are short-lived. Such processes will be listed in the console and CSV as &#34;&amp;lt;unknown&amp;gt;&#34;, and they cannot be targeted by name (&lt;code&gt;--process_name&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Analyzing OpenGL and Vulkan applications&lt;/h3&gt; &#xA;&lt;p&gt;Applications that report &lt;em&gt;Runtime&lt;/em&gt; of &#34;Other&#34; (e.g., as is typical with OpenGL or Vulkan applications) have less instrumentation in the frame presentation process. As a result, &lt;em&gt;CPUFramePacingStall&lt;/em&gt; will always report 0 and &lt;em&gt;CPUFrameTime&lt;/em&gt; may be slightly less accurate. This inaccuracy also impacts latency calculations based off of &lt;em&gt;CPUFrameTime&lt;/em&gt; (e.g., &lt;em&gt;GPUBeginLatency&lt;/em&gt;, &lt;em&gt;GPUEndLatency&lt;/em&gt;, and &lt;em&gt;DisplayLatency&lt;/em&gt; but not &lt;em&gt;InputLatency&lt;/em&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Tracking GPU work with Hardware-Accelerated GPU Scheduling enabled&lt;/h3&gt; &#xA;&lt;p&gt;GPU execution metrics are less accurate when running on a system that uses Hardware-Accelerated GPU Scheduling (HWS). When HWS is enabled, &lt;em&gt;msUntilRenderStart&lt;/em&gt;, &lt;em&gt;msUntilRenderComplete&lt;/em&gt;, &lt;em&gt;msGPUActive&lt;/em&gt;, and &lt;em&gt;msGPUVideoActive&lt;/em&gt; measurements may be later/larger than they should be. For example, in a GPU-bound scenario the frame&#39;s &lt;em&gt;msGPUActive&lt;/em&gt; may be reported ~0.5ms larger than the true GPU work duration, though the specific amount of the inaccuracy will be workload- and GPU-dependent.&lt;/p&gt; &#xA;&lt;p&gt;An improved solution is WIP.&lt;/p&gt; &#xA;&lt;h3&gt;Shutting down PresentMon on Windows 7&lt;/h3&gt; &#xA;&lt;p&gt;Some users have observed system stability issues when forcibly shutting down PresentMon on Windows 7. If you are having similar issues, they can be avoided by using Ctrl+C in the PresentMon window to shut it down.&lt;/p&gt;</summary>
  </entry>
</feed>