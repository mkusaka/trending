<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-12T01:45:32Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sqlitebrowser/sqlitebrowser</title>
    <updated>2023-12-12T01:45:32Z</updated>
    <id>tag:github.com,2023-12-12:/sqlitebrowser/sqlitebrowser</id>
    <link href="https://github.com/sqlitebrowser/sqlitebrowser" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official home of the DB Browser for SQLite (DB4S) project. Previously known as &#34;SQLite Database Browser&#34; and &#34;Database Browser for SQLite&#34;. Website at:&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DB Browser for SQLite&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/sqlitebrowser/sqlitebrowser&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/sqlitebrowser/sqlitebrowser.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/sqlitebrowser/sqlitebrowser&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/wiki&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-Wiki-blue.svg?sanitize=true&#34; alt=&#34;Wiki&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.patreon.com/bePatron?u=11578749&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/donate-Patreon-coral.svg?sanitize=true&#34; alt=&#34;Patreon&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/actions/workflows/cppcmake.yml&#34;&gt;&lt;img src=&#34;https://github.com/sqlitebrowser/sqlitebrowser/actions/workflows/cppcmake.yml/badge.svg?sanitize=true&#34; alt=&#34;C/C++ CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.qt.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Qt-cmake-green.svg?sanitize=true&#34; alt=&#34;Qt&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/actions/workflows/codeql.yml&#34;&gt;&lt;img src=&#34;https://github.com/sqlitebrowser/sqlitebrowser/actions/workflows/codeql.yml/badge.svg?sanitize=true&#34; alt=&#34;CodeQL&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://scan.coverity.com/projects/sqlitebrowser-sqlitebrowser&#34;&gt;&lt;img src=&#34;https://img.shields.io/coverity/scan/11712.svg?sanitize=true&#34; alt=&#34;Coverity&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/sqlitebrowser/sqlitebrowser/total.svg?sanitize=true&#34; alt=&#34;Download&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://snapcraft.io/sqlitebrowser&#34;&gt;&lt;img src=&#34;https://snapcraft.io/sqlitebrowser/badge.svg?sanitize=true&#34; alt=&#34;snapcraft&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://snapcraft.io/sqlitebrowser&#34;&gt;&lt;img src=&#34;https://snapcraft.io/sqlitebrowser/trending.svg?name=0&#34; alt=&#34;snapcraft&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/sqlitebrowser/sqlitebrowser/raw/master/images/sqlitebrowser.png&#34; alt=&#34;DB Browser for SQLite Screenshot&#34; title=&#34;DB Browser for SQLite Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#db-browser-for-sqlite&#34;&gt;DB Browser for SQLite&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#what-it-is&#34;&gt;What it is&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#what-it-is-not&#34;&gt;What it is not&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#continuous-nightly-builds&#34;&gt;Continuous, Nightly builds&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#windows&#34;&gt;Windows&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#continuous-nightly-builds-1&#34;&gt;Continuous, Nightly builds&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#macos&#34;&gt;macOS&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#stable-release&#34;&gt;Stable release&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#continuous-nightly-builds-2&#34;&gt;Continuous, Nightly builds&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#linux&#34;&gt;Linux&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#arch-linux&#34;&gt;Arch Linux&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#debian&#34;&gt;Debian&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#fedora&#34;&gt;Fedora&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#opensuse&#34;&gt;openSUSE&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#ubuntu-and-derivatives&#34;&gt;Ubuntu and Derivatives&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#stable-release-1&#34;&gt;Stable release&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#nightly-builds&#34;&gt;Nightly builds&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#other-linux&#34;&gt;Other Linux&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#freebsd&#34;&gt;FreeBSD&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#snap-packages&#34;&gt;Snap packages&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#snap-nightlies&#34;&gt;Snap Nightlies&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#snap-stable&#34;&gt;Snap Stable&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#compiling&#34;&gt;Compiling&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#x-known-as-twitter&#34;&gt;X (Known as Twitter)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#website&#34;&gt;Website&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#old-project-page&#34;&gt;Old project page&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#history&#34;&gt;History&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What it is&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;DB Browser for SQLite&lt;/em&gt; (DB4S) is a high quality, visual, open source tool to create, design, and edit database files compatible with SQLite.&lt;/p&gt; &#xA;&lt;p&gt;DB4S is for users and developers who want to create, search, and edit databases. DB4S uses a familiar spreadsheet-like interface, so complicated SQL commands do not have to be learned.&lt;/p&gt; &#xA;&lt;p&gt;Controls and wizards are available for users to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create and compact database files&lt;/li&gt; &#xA; &lt;li&gt;Create, define, modify and delete tables&lt;/li&gt; &#xA; &lt;li&gt;Create, define, and delete indexes&lt;/li&gt; &#xA; &lt;li&gt;Browse, edit, add, and delete records&lt;/li&gt; &#xA; &lt;li&gt;Search records&lt;/li&gt; &#xA; &lt;li&gt;Import and export records as text&lt;/li&gt; &#xA; &lt;li&gt;Import and export tables from/to CSV files&lt;/li&gt; &#xA; &lt;li&gt;Import and export databases from/to SQL dump files&lt;/li&gt; &#xA; &lt;li&gt;Issue SQL queries and inspect the results&lt;/li&gt; &#xA; &lt;li&gt;Examine a log of all SQL commands issued by the application&lt;/li&gt; &#xA; &lt;li&gt;Plot simple graphs based on table or query data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What it is not&lt;/h2&gt; &#xA;&lt;p&gt;Even though DB4S comes with a spreadsheet-like interface, it is not meant to replace your spreadsheet application. We implement a few convenience functions which go beyond a simple database frontend but do not add them when they do not make sense in a database context or are so complex to implement that they will only ever be a poor replacement for your favorite spreadsheet application. We are a small team with limited time after all. Thanks for your understanding :)&lt;/p&gt; &#xA;&lt;h2&gt;Wiki&lt;/h2&gt; &#xA;&lt;p&gt;For user and developer documentation, check out our Wiki at: &lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/wiki&#34;&gt;https://github.com/sqlitebrowser/sqlitebrowser/wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Continuous, Nightly builds&lt;/h2&gt; &#xA;&lt;p&gt;Download continuous builds for AppImage, macOS and Windows here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/continuous&#34;&gt;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/continuous&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: A continuous build is generated when a new commit is added to the &lt;code&gt;master&lt;/code&gt; branch.&lt;br&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Download nightly builds for Windows and macOS here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nightlies.sqlitebrowser.org/latest&#34;&gt;https://nightlies.sqlitebrowser.org/latest&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Windows&lt;/h2&gt; &#xA;&lt;p&gt;Download Windows releases here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sqlitebrowser.org/dl/#windows&#34;&gt;https://sqlitebrowser.org/dl/#windows&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Or use Chocolatey:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;choco install sqlitebrowser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or use winget:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;winget install -e --id DBBrowserForSQLite.DBBrowserForSQLite&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Continuous, Nightly builds&lt;/h4&gt; &#xA;&lt;p&gt;Continuous builds are available here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/continuous&#34;&gt;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/continuous&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Nightly builds are available here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nightlies.sqlitebrowser.org/latest&#34;&gt;https://nightlies.sqlitebrowser.org/latest&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;macOS&lt;/h2&gt; &#xA;&lt;p&gt;DB Browser for SQLite works well on macOS.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;macOS 10.15 (Catalina) - 14.0 (Sonoma) are tested and known to work.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Stable release&lt;/h4&gt; &#xA;&lt;p&gt;Download macOS releases here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sqlitebrowser.org/dl/#macos&#34;&gt;https://sqlitebrowser.org/dl/#macos&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The latest macOS binary can be installed via &lt;a href=&#34;https://caskroom.github.io/&#34; title=&#34;Homebrew Cask&#34;&gt;Homebrew Cask&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install --cask db-browser-for-sqlite&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Continuous, Nightly builds&lt;/h4&gt; &#xA;&lt;p&gt;Continuous builds are available here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/continuous&#34;&gt;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/continuous&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Nightly builds are available here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nightlies.sqlitebrowser.org/latest&#34;&gt;https://nightlies.sqlitebrowser.org/latest&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;and also you can be installed via &lt;a href=&#34;https://caskroom.github.io/&#34; title=&#34;Homebrew Cask&#34;&gt;Homebrew Cask&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew tap homebrew/cask-versions&#xA;&#xA;# for the version without SQLCipher support&#xA;brew install --cask db-browser-for-sqlite-nightly&#xA;&#xA;# for the version with SQLCipher support&#xA;brew install --cask db-browser-for-sqlcipher-nightly&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It also has its own Homebrew tap the include Cask for older version.&lt;br&gt; For more information, see the following: &lt;a href=&#34;https://github.com/sqlitebrowser/homebrew-tap&#34;&gt;https://github.com/sqlitebrowser/homebrew-tap&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Linux&lt;/h2&gt; &#xA;&lt;p&gt;DB Browser for SQLite works well on Linux.&lt;/p&gt; &#xA;&lt;h3&gt;Arch Linux&lt;/h3&gt; &#xA;&lt;p&gt;Arch Linux provides an &lt;a href=&#34;https://archlinux.org/packages/extra/x86_64/sqlitebrowser/&#34;&gt;up to date version&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Install with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo pacman -S sqlitebrowser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Debian&lt;/h3&gt; &#xA;&lt;p&gt;Debian focuses more on stability rather than newest features.&lt;br&gt; Therefore packages will typically contain an older (but well tested) version, compared to the latest release.&lt;/p&gt; &#xA;&lt;p&gt;Update the cache using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install the package using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install sqlitebrowser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Fedora&lt;/h3&gt; &#xA;&lt;p&gt;Install for Fedora (i386 and x86_64) by issuing the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo dnf install sqlitebrowser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;openSUSE&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo zypper install sqlitebrowser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ubuntu and Derivatives&lt;/h3&gt; &#xA;&lt;h4&gt;Stable release&lt;/h4&gt; &#xA;&lt;p&gt;For Ubuntu and derivatives, &lt;a href=&#34;https://github.com/deepsidhu1313&#34;&gt;@deepsidhu1313&lt;/a&gt; provides a PPA with the latest release here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://launchpad.net/~linuxgndu/+archive/ubuntu/sqlitebrowser&#34;&gt;https://launchpad.net/~linuxgndu/+archive/ubuntu/sqlitebrowser&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To add this PPA just type in this command in terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo add-apt-repository -y ppa:linuxgndu/sqlitebrowser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then update the cache using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install the package using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install sqlitebrowser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Packages for Older Ubuntu releases are supported while launchpad keeps building those or if Older Ubuntu release has dependency packages that are required to build the latest version of Sqlitebrowser. We don&#39;t remove builds from our ppa repos, so users can still install older version of sqlitebrowser if they like. Alternatively Linux users can also switch to Snap packages if Snap packages are supported by the distro they are using.&lt;/p&gt; &#xA;&lt;h4&gt;Nightly builds&lt;/h4&gt; &#xA;&lt;p&gt;Nightly builds are available here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://launchpad.net/~linuxgndu/+archive/ubuntu/sqlitebrowser-testing&#34;&gt;https://launchpad.net/~linuxgndu/+archive/ubuntu/sqlitebrowser-testing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To add this PPA, type these commands into the terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo add-apt-repository -y ppa:linuxgndu/sqlitebrowser-testing&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then update the cache using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install the package using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install sqlitebrowser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Other Linux&lt;/h3&gt; &#xA;&lt;p&gt;On others, compile DB4S using the instructions in &lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/BUILDING.md&#34;&gt;BUILDING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;FreeBSD&lt;/h2&gt; &#xA;&lt;p&gt;DB Browser for SQLite works well on FreeBSD, and there is a port for it (thanks to &lt;a href=&#34;https://github.com/lbartoletti&#34;&gt;lbartoletti&lt;/a&gt; &lt;span&gt;😄&lt;/span&gt;).&lt;br&gt;DB4S can be installed using either this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make -C /usr/ports/databases/sqlitebrowser install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pkg install sqlitebrowser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Snap packages&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://snapcraft.io/sqlitebrowser&#34;&gt;&lt;img src=&#34;https://snapcraft.io/static/images/badges/en/snap-store-black.svg?sanitize=true&#34; alt=&#34;Get it from the Snap Store&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Snap Nightlies&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt; snap install sqlitebrowser --devmode&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Snap Stable&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt; snap install sqlitebrowser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Compiling&lt;/h2&gt; &#xA;&lt;p&gt;Instructions for compiling on Windows, macOS, Linux, and FreeBSD are in &lt;a href=&#34;https://raw.githubusercontent.com/sqlitebrowser/sqlitebrowser/master/BUILDING.md&#34;&gt;BUILDING&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;X (Known as Twitter)&lt;/h2&gt; &#xA;&lt;p&gt;Follow us on X: &lt;a href=&#34;https://x.com/sqlitebrowser&#34;&gt;https://x.com/sqlitebrowser&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Website&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sqlitebrowser.org&#34;&gt;https://sqlitebrowser.org&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Old project page&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sourceforge.net/projects/sqlitebrowser&#34;&gt;https://sourceforge.net/projects/sqlitebrowser&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/v3.12.2&#34;&gt;Version 3.12.2 released&lt;/a&gt; - 2021-05-18&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/v3.12.1&#34;&gt;Version 3.12.1 released&lt;/a&gt; - 2020-11-09&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/v3.12.0&#34;&gt;Version 3.12.0 released&lt;/a&gt; - 2020-06-16&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/v3.11.2&#34;&gt;Version 3.11.2 released&lt;/a&gt; - 2019-04-03&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/v3.11.1&#34;&gt;Version 3.11.1 released&lt;/a&gt; - 2019-02-18&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/v3.11.0&#34;&gt;Version 3.11.0 released&lt;/a&gt; - 2019-02-07&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/v3.10.1&#34;&gt;Version 3.10.1 released&lt;/a&gt; - 2017-09-20&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/v3.10.0&#34;&gt;Version 3.10.0 released&lt;/a&gt; - 2017-08-20&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/v3.9.1&#34;&gt;Version 3.9.1 released&lt;/a&gt; - 2016-10-03&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/v3.9.0&#34;&gt;Version 3.9.0 released&lt;/a&gt; - 2016-08-24&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/v3.8.0&#34;&gt;Version 3.8.0 released&lt;/a&gt; - 2015-12-25&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/v3.7.0&#34;&gt;Version 3.7.0 released&lt;/a&gt; - 2015-06-14&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/v3.6.0&#34;&gt;Version 3.6.0 released&lt;/a&gt; - 2015-04-27&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/v3.5.1&#34;&gt;Version 3.5.1 released&lt;/a&gt; - 2015-02-08&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/v3.5.0&#34;&gt;Version 3.5.0 released&lt;/a&gt; - 2015-01-31&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/v3.4.0&#34;&gt;Version 3.4.0 released&lt;/a&gt; - 2014-10-29&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/v3.3.1&#34;&gt;Version 3.3.1 released&lt;/a&gt; - 2014-08-31 - Project renamed from &#34;SQLite Database Browser&#34;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/v3.3.0&#34;&gt;Version 3.3.0 released&lt;/a&gt; - 2014-08-24&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/sqlb-3.2.0&#34;&gt;Version 3.2.0 released&lt;/a&gt; - 2014-07-06&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/sqlb-3.1.0&#34;&gt;Version 3.1.0 released&lt;/a&gt; - 2014-05-17&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/sqlb-3.0.3&#34;&gt;Version 3.0.3 released&lt;/a&gt; - 2014-04-28&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/sqlb-3.0.2&#34;&gt;Version 3.0.2 released&lt;/a&gt; - 2014-02-12&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/sqlb-3.0.1&#34;&gt;Version 3.0.1 released&lt;/a&gt; - 2013-12-02&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/sqlb-3.0&#34;&gt;Version 3.0 released&lt;/a&gt; - 2013-09-15&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/releases/tag/rc1&#34;&gt;Version 3.0rc1 released&lt;/a&gt; - 2013-09-09 - Project now on GitHub&lt;/li&gt; &#xA; &lt;li&gt;Version 2.0b1 released - 2009-12-10 - Based on Qt4.6&lt;/li&gt; &#xA; &lt;li&gt;Version 1.2 released - 2005-04-05&lt;/li&gt; &#xA; &lt;li&gt;Version 1.1 released - 2004-07-20&lt;/li&gt; &#xA; &lt;li&gt;Version 1.01 released - 2003-10-02&lt;/li&gt; &#xA; &lt;li&gt;Version 1.0 released to public domain - 2003-08-19&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;History&lt;/h2&gt; &#xA;&lt;p&gt;This program was developed originally by Mauricio Piacentini (&lt;a href=&#34;https://github.com/piacentini&#34;&gt;@piacentini&lt;/a&gt;) from Tabuleiro Producoes as the Arca Database Browser. The original version was used as a free companion tool to the Arca Database Xtra, a commercial product that embeds SQLite databases with some additional extensions to handle compressed and binary data.&lt;/p&gt; &#xA;&lt;p&gt;The original code was trimmed and adjusted to be compatible with standard SQLite 2.x databases. The resulting program was renamed SQLite Database Browser, and released into the Public Domain by Mauricio. Icons were contributed by &lt;a href=&#34;http://www.raquelravanini.com&#34;&gt;Raquel Ravanini&lt;/a&gt;, also from Tabuleiro. Jens Miltner (&lt;a href=&#34;https://github.com/jmiltner&#34;&gt;@jmiltner&lt;/a&gt;) contributed the code to support SQLite 3.x databases for the 1.2 release.&lt;/p&gt; &#xA;&lt;p&gt;Pete Morgan (&lt;a href=&#34;https://github.com/daffodil&#34;&gt;@daffodil&lt;/a&gt;) created an initial project on GitHub with the code in 2012, where several contributors fixed and improved pieces over the years. René Peinthor (&lt;a href=&#34;https://github.com/rp-&#34;&gt;@rp-&lt;/a&gt;) and Martin Kleusberg (&lt;a href=&#34;https://github.com/MKleusberg&#34;&gt;@MKleusberg&lt;/a&gt;) then became involved, and have been the main driving force from that point. Justin Clift (&lt;a href=&#34;https://github.com/justinclift&#34;&gt;@justinclift&lt;/a&gt;) helps out with testing on OSX, and started the new github.com/sqlitebrowser organisation on GitHub.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://johnhaller.com&#34;&gt;John T. Haller&lt;/a&gt;, of &lt;a href=&#34;https://portableapps.com&#34;&gt;PortableApps.com&lt;/a&gt; fame, created the new logo. He based it on the Tango icon set (public domain).&lt;/p&gt; &#xA;&lt;p&gt;In August 2014, the project was renamed to &#34;Database Browser for SQLite&#34; at the request of &lt;a href=&#34;https://www.hwaci.com/drh&#34;&gt;Richard Hipp&lt;/a&gt; (creator of &lt;a href=&#34;https://sqlite.org&#34;&gt;SQLite&lt;/a&gt;), as the previous name was creating unintended support issues.&lt;/p&gt; &#xA;&lt;p&gt;In September 2014, the project was renamed to &#34;DB Browser for SQLite&#34;, to avoid confusion with an existing application called &#34;Database Browser&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;View the list by going to the &lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser/graphs/contributors&#34;&gt;&lt;strong&gt;Contributors&lt;/strong&gt; tab&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;DB Browser for SQLite is bi-licensed under the Mozilla Public License Version 2, as well as the GNU General Public License Version 3 or later.&lt;/p&gt; &#xA;&lt;p&gt;Modification or redistribution is permitted under the conditions of these licenses.&lt;/p&gt; &#xA;&lt;p&gt;Check &lt;code&gt;LICENSE-EXTENSIONS&lt;/code&gt; for other rights regarding included SQLite extensions in macOS builds. Check &lt;code&gt;LICENSE-PLUGINS&lt;/code&gt; for other rights regarding included third-party resources.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Greedysky/TTKMusicPlayer</title>
    <updated>2023-12-12T01:45:32Z</updated>
    <id>tag:github.com,2023-12-12:/Greedysky/TTKMusicPlayer</id>
    <link href="https://github.com/Greedysky/TTKMusicPlayer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;TTKMusicPlayer imitates Kugou UI, the music player uses of qmmp core library based on Qt for windows and linux.(支持网易云音乐、酷我音乐、酷狗音乐)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TTKMusicPlayer&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Greedysky/TTKMusicPlayer/master/README_cn.md&#34;&gt;简体中文 Chinese&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/Greedysky/TTKMusicPlayer/master/README_tc.md&#34;&gt;繁体中文 Chinese&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Greedysky-TTKMusicPlayer-green.svg?style=flat-square&#34; alt=&#34;TTKMusicPlayer&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Version-3.4.0.0-blue.svg?style=flat-square&#34; alt=&#34;Version&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-GPL%20V3-yellowgreen.svg?style=flat-square&#34; alt=&#34;License&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Greedysky/TTKMusicPlayer/raw/master/TTKResource/logo_banner.png?raw=true&#34; alt=&#34;LOGO&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;|&lt;a href=&#34;https://github.com/Greedysky/TTKMusicPlayer#usage&#34;&gt;About&lt;/a&gt;|&lt;a href=&#34;https://github.com/Greedysky/TTKMusicPlayer#license&#34;&gt;License&lt;/a&gt;|&lt;a href=&#34;https://github.com/Greedysky/TTKMusicPlayer#download&#34;&gt;Download&lt;/a&gt;|&lt;a href=&#34;https://github.com/Greedysky/TTKMusicPlayer#features&#34;&gt;Features&lt;/a&gt;|&lt;a href=&#34;https://github.com/Greedysky/TTKMusicPlayer#screenshots&#34;&gt;Screenshots&lt;/a&gt;|&lt;a href=&#34;https://github.com/Greedysky/TTKMusicPlayer#copyright&#34;&gt;Copyright&lt;/a&gt;|&lt;a href=&#34;https://github.com/Greedysky/TTKMusicPlayer#how-to-contribute&#34;&gt;Contribute&lt;/a&gt;|&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;TTKMusicPlayer imitates Kugou music, uses of qmmp core library, based on Qt for windows and linux.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Compiler tutorial I have written in the wiki.(See here &lt;u&gt;&lt;a href=&#34;https://github.com/Greedysky/TTKMusicPlayer/wiki&#34;&gt;https://github.com/Greedysky/TTKMusicPlayer/wiki&lt;/a&gt;&lt;/u&gt; )&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Attention: This software is only for learning and communication, the songs&#39; and playlists&#39; copyright belongs to each music platform.&lt;/h3&gt; &#xA;&lt;h2&gt;CI Status&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Qt stable version is tested on Qt4.x for windows-mingw 32bit&lt;/li&gt; &#xA; &lt;li&gt;Qt stable version is tested on Qt4.x for ubuntu-linux-gcc 64bit&lt;/li&gt; &#xA; &lt;li&gt;Qt stable version is tested on Qt5.x for ubuntu-linux-gcc 64bit&lt;/li&gt; &#xA; &lt;li&gt;Qt stable version is tested on Qt5.x for windows-mingw 32bit&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Platform&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Qt &amp;amp; Compiler&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Linux&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4.x GCC &amp;amp; 5.x GCC&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/build-passing-brightgreen.svg?sanitize=true&#34; alt=&#34;Linux&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Windows&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4.x GCC &amp;amp; 5.x GCC&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/build-passing-brightgreen.svg?sanitize=true&#34; alt=&#34;Windows&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Windows&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;MSVC&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/build-unknown-lightgrey.svg?sanitize=true&#34; alt=&#34;Windows&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;OS X&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Clang&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/build-unknown-lightgrey.svg?sanitize=true&#34; alt=&#34;OSX&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;For Developers&lt;/h1&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;TTKMusicPlayer is free software licensed under the term of &lt;a href=&#34;https://github.com/Greedysky/TTKMusicPlayer/raw/master/LICENSE&#34;&gt;Licence GPL v3&lt;/a&gt;. If you use TTKMusicPlayer or its constituent libraries, you must adhere to the terms of the license in question.&lt;/p&gt; &#xA;&lt;h2&gt;API Document&lt;/h2&gt; &#xA;&lt;p&gt;You Can See Here: &lt;strong&gt;&lt;u&gt;&lt;a href=&#34;https://greedysky.github.io/ttkdocs&#34;&gt;https://greedysky.github.io/ttkdocs&lt;/a&gt;&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Gitee URL: &lt;strong&gt;&lt;u&gt;&lt;a href=&#34;https://gitee.com/Greedysky/TTKMusicplayer&#34;&gt;https://gitee.com/Greedysky/TTKMusicplayer&lt;/a&gt;&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Github URL: &lt;strong&gt;&lt;u&gt;&lt;a href=&#34;https://github.com/Greedysky/TTKMusicplayer&#34;&gt;https://github.com/Greedysky/TTKMusicplayer&lt;/a&gt;&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Qmmp Source Player URL: &lt;strong&gt;&lt;u&gt;&lt;a href=&#34;https://qmmp.ylsoftware.com&#34;&gt;https://qmmp.ylsoftware.com&lt;/a&gt;&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Qmmp Source Mirror URL: &lt;strong&gt;&lt;u&gt;&lt;a href=&#34;https://github.com/Greedysky/qmmp&#34;&gt;https://github.com/Greedysky/qmmp&lt;/a&gt;&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Qmmp Source Modified URL: &lt;strong&gt;&lt;u&gt;&lt;a href=&#34;https://github.com/Greedysky/TTKMusicPlayer/tree/plugins&#34;&gt;https://github.com/Greedysky/TTKMusicPlayer/tree/plugins&lt;/a&gt;&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Qmmp Extra Plugins URL: &lt;strong&gt;&lt;u&gt;&lt;a href=&#34;https://github.com/TTK-qmmp&#34;&gt;https://github.com/TTK-qmmp&lt;/a&gt;&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Qmmp Core Modified Library URL: &lt;strong&gt;&lt;u&gt;&lt;a href=&#34;http://pan.baidu.com/s/1bv4iSY&#34;&gt;http://pan.baidu.com/s/1bv4iSY&lt;/a&gt;&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Player Base URL: &lt;strong&gt;&lt;u&gt;&lt;a href=&#34;http://pan.baidu.com/s/1gdB5QLH&#34;&gt;http://pan.baidu.com/s/1gdB5QLH&lt;/a&gt;&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Skin Download URL: &lt;strong&gt;&lt;u&gt;&lt;a href=&#34;http://pan.baidu.com/s/1mh7AeG4&#34;&gt;http://pan.baidu.com/s/1mh7AeG4&lt;/a&gt;&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Executable Download URL: &lt;strong&gt;&lt;u&gt;&lt;a href=&#34;http://pan.baidu.com/s/1kVOHN0b&#34;&gt;http://pan.baidu.com/s/1kVOHN0b&lt;/a&gt;&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;TTKMusicPlayer can meet your most demands&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support for multiple music formats.&lt;/li&gt; &#xA; &lt;li&gt;SID File(*.sid *.psid *.mus *.str *.p00 *.prg *.c64)&lt;/li&gt; &#xA; &lt;li&gt;MusePack File(*.mpc)&lt;/li&gt; &#xA; &lt;li&gt;WavPack File(*.wv)&lt;/li&gt; &#xA; &lt;li&gt;Ogg Vorbis File(*.ogg *.ogv)&lt;/li&gt; &#xA; &lt;li&gt;Ogg Opus File(*.opus)&lt;/li&gt; &#xA; &lt;li&gt;ADTS AAC File(*.aac)&lt;/li&gt; &#xA; &lt;li&gt;MIDI File(*.mid *.mus *.hmp *.hmi *.xmi)&lt;/li&gt; &#xA; &lt;li&gt;PCM File(*.wav *.au *.snd *.aif *.aiff *.8svx *.sph *.sf *.voc *.w64)&lt;/li&gt; &#xA; &lt;li&gt;CUE File(*.cue)&lt;/li&gt; &#xA; &lt;li&gt;MPEG File(*.mp1 *.mp2 *.mp3)&lt;/li&gt; &#xA; &lt;li&gt;Game Audio File(*.ay *.gbs *.gms *.gym *.hes *.kss *.nsf *.nsfe *.sap *.spc *.vgm *.vgz)&lt;/li&gt; &#xA; &lt;li&gt;FLAC File(*.flac *.oga)&lt;/li&gt; &#xA; &lt;li&gt;Monkey&#39;s Audio File(*.ape)&lt;/li&gt; &#xA; &lt;li&gt;FFmpeg File(*.wma *.ape *.tta *.m4a *.m4b *.aac *.ra *.shn *.ac3 *.mka *.vqf *.tak *.spx *.adx *.aix *.wve *.sln *.paf *.pvf *.ircam *.gsm *.avr *.amr *.dsf *.dsdiff *.webm *.3g2 *.3gp *.asf *.avi *.f4v *.flv *.hevc *.m4v *.mov *.mp4 *.mpeg *.rm *.swf *.vob *.wtv)&lt;/li&gt; &#xA; &lt;li&gt;OpenMPT File(*.669 *.ams *.amf *.c67 *.dsm *.dmf *.dbm *.digi *.dtm *.far *.fmt *.gdm *.it *.ice *.imf *.j2b *.mod *.mptm *.m15 *.mtm *.med *.mmd *.mmd0 *.mmd1 *.mmd2 *.mmd3 *.mdl *.mt2 *.mms *.mo3 *.mmcmp *.nst *.okt *.okta *.pt36 *.ptm *.psm *.plm *.ppm *.s3m *.stm *.stk *.st26 *.sfx *.sfx2 *.stp *.ult *.umx *.wow *.xm *.xpk *.mdr *.s3r *.xmr *.itr *.mdz *.s3z *.xmz *.itz *.mdgz *.s3gz *.xmgz *.itgz *.mdbz *.s3bz *.xmbz *.itbz)&lt;/li&gt; &#xA; &lt;li&gt;Unix Amiga Delitracker Emulator File(*.aam *.amc *.aon *.aon8 *.aps *.ash *.ast *.avp *.bd *.bds *.bsi *.bss *.bye *.cm *.core *.cust *.dh *.dl *.dlm1 *.dlm2 *.dln *.dm *.dm2 *.dmu *.doda *.dsc *.dsr *.dss *.dw *.dz *.ea *.ems *.emsv6 *.ex *.fp *.fred *.fw *.glue *.gmc *.gray *.hd *.hip *.hip7 *.hipc *.hot *.ims *.is *.is20 *.jam *.jcb *.jcbo *.jd *.jmf *.jo *.jpo *.jt *.kh *.kim *.kris *.lion *.lme *.ma *.mc *.mcmd *.mco *.md *.mii *.mk2 *.mkii *.ml *.mm8 *.mmdc *.mok *.mon *.mosh *.mso *.mug *.mug2 *.mw *.ntp *.pap *.pn *.ps *.psa *.psf *.pt *.puma *.pvp *.rh *.rho *.riff *.rmc *.s7g *.sa *.sas *.sb *.sc *.scn *.scr *.sct *.scumm *.sdr *.sg *.sid1 *.sid2 *.sm *.sm3 *.smn *.smpro *.sng *.snk *.soc *.sog *.spl *.sqt *.ss *.sun *.syn *.synmod *.tcb *.tf *.tfmx *.thx *.tits *.tme *.tro *.tronic *.tw *.ufo *.vss *.wb *.smus *.snx *.tiny *.adsc *.dat *.dum *.osp *.dns *.jpn *.jpnd *.max *.mcr *.mfp *.npp *.pat *.qpa *.qts *.sjs *.thm *.tmk *.tpu *.uds)&lt;/li&gt; &#xA; &lt;li&gt;RSN Archive File(*.rsn *.rps *.rdc *.rds *.rgs *.r64)&lt;/li&gt; &#xA; &lt;li&gt;7z Archive File(*.7z *.xz *.bz2 *.gz *.tar *.zip *.wim *.ar *.arj *.cab *.chm *.cpio *.cramfs *.dmg *.ext *.fat *.gpt *.hfs *.ihex *.iso *.lzh *.lzma *.mbr *.msi *.nsis *.ntfs *.qcow2 *.rar *.rpm *.squashfs *.udf *.uefi *.vdi *.vhd *.vmdk *.xar *.z)&lt;/li&gt; &#xA; &lt;li&gt;AdLib Sound File(*.a2m *.adl *.adlib *.agd *.amd *.as3m *.bam *.bmf *.cff *.cmf *.d00 *.dfm *.dmo *.dro *.dtm *.got *.ha2 *.hsc *.hsq *.hsp *.imf *.ims *.jbm *.laa *.lds *.m *.mad *.mdi *.mkj *.msc *.mtk *.mus *.rac *.rad *.raw *.rix *.s3m *.sa2 *.sat *.sdb *.sng *.sop *.sqx *.xad *.xms *.xsm *.vgm *.vgz *.wlf *.ksm *.rol *.sci)&lt;/li&gt; &#xA; &lt;li&gt;XMP File(*.abk *.dsym *.emod *.fnk *.gtk *.ims *.liq *.mfp *.mgt *.rtm *.tcb *.xmf)&lt;/li&gt; &#xA; &lt;li&gt;Another Slight Atari File(*.cm3 *.cmc *.cmr *.cms *.dlt *.dmc *.fc *.mpd *.mpt *.rmt *.sap *.tm2 *.tm8 *.tmc)&lt;/li&gt; &#xA; &lt;li&gt;DTS Coherent Acoustics File(*.dts *.cpt)&lt;/li&gt; &#xA; &lt;li&gt;Future Composer File(*.fc *.fc13 *.fc14 *.smod)&lt;/li&gt; &#xA; &lt;li&gt;OptimFrog File(*.ofr *.ofs)&lt;/li&gt; &#xA; &lt;li&gt;Audio Overload File(*.pcm *.msu *.spu *.psf *.ssf *.qsf *.dsf *.psf2 *.minipsf *.minissf *.miniqsf *.minidsf *.minipsf2 *.2sf *.mini2sf *.gsf *.minigsf *.usf *.miniusf *.ncsf *.minincsf *.snsf *.minisnsf)&lt;/li&gt; &#xA; &lt;li&gt;S98 Audio File(*.s98 *.cym *.mym *.x1f)&lt;/li&gt; &#xA; &lt;li&gt;Atari ST(E) And Amiga File(*.sc68 *.snd *.sndh)&lt;/li&gt; &#xA; &lt;li&gt;Speex Audio File(*.spx)&lt;/li&gt; &#xA; &lt;li&gt;V2 Player File(*.v2m)&lt;/li&gt; &#xA; &lt;li&gt;AY/YM Audio File(*.asc *.ay *.emul *.sqt *.st13 *.stc *.stp *.stp2 *.psc *.psg *.pt1 *.pt2 *.pt3 *.vtx *.zxs)&lt;/li&gt; &#xA; &lt;li&gt;ST-Sound File(*.ym)&lt;/li&gt; &#xA; &lt;li&gt;SunVox Audio File(*.sunvox)&lt;/li&gt; &#xA; &lt;li&gt;Hively Audio File(*.ahx *.hvl)&lt;/li&gt; &#xA; &lt;li&gt;BP SoundMon Audio File(*.bp *.bp3)&lt;/li&gt; &#xA; &lt;li&gt;Ken Silverman&#39;s Audio File(*.kdm *.ksm *.sm *.snd)&lt;/li&gt; &#xA; &lt;li&gt;XMDX Game Audio File(*.mdx *.pdx *.m *.mub *.muc *.vgs *.bgm *.mml)&lt;/li&gt; &#xA; &lt;li&gt;Cave Story&#39;s org Audio File(*.org *.pttune *.ptcop)&lt;/li&gt; &#xA; &lt;li&gt;Final Music System Tracker Module File(*.tfm *.tfmx *.mdat *.tfx)&lt;/li&gt; &#xA; &lt;li&gt;Playlist formats(tkpl, m3u, m3u8, pls, wpl, xspf, jspf, asx, fpl, dbpl, csv, txt)&lt;/li&gt; &#xA; &lt;li&gt;Junior fans interface. Interface cool, gorgeous pop. Maintaining a perfect performance under Vista and XP, refreshing Screenshots.&lt;/li&gt; &#xA; &lt;li&gt;Search and high-speed downloads. Song search accuracy optimization, intelligent save bandwidth, you can disable the network function.&lt;/li&gt; &#xA; &lt;li&gt;It supports local playback, compatible with all audio files, super perfect sound, music and more appealing.&lt;/li&gt; &#xA; &lt;li&gt;User-friendly design. Attention to detail design, personalize, simple operation, found music more convenient.&lt;/li&gt; &#xA; &lt;li&gt;Personalized cell phone ringtones. Ringtones DIY, so you have personalized ringtones.&lt;/li&gt; &#xA; &lt;li&gt;Personalized skin. DIY your own personalized skin, creating a only part of your skin.&lt;/li&gt; &#xA; &lt;li&gt;Music cube model. After entering the mini mode, it will remain in your desktop a &#34;Clover&#34; shaped icon, you can freely drag the desktop, you want to control the player, cut songs, play, lyrics control, volume adjustment in control.&lt;/li&gt; &#xA; &lt;li&gt;Colorful custom skin. You can select skin color, set the transparency of freedom, and support transparent frosted glass (Windows Aero effects).&lt;/li&gt; &#xA; &lt;li&gt;Search Download Manager. Search Results tab merger - all of the search results tab concentrated under one label, make operation easier.&lt;/li&gt; &#xA; &lt;li&gt;Local music search, and cloud music library and interactive.&lt;/li&gt; &#xA; &lt;li&gt;Support converting different music formats, and can change the sound as like Tom Cat, also can enhance the sound.&lt;/li&gt; &#xA; &lt;li&gt;Local music transferred to the cloud or mobile device.&lt;/li&gt; &#xA; &lt;li&gt;Local music and the human voice humming recognition.&lt;/li&gt; &#xA; &lt;li&gt;Music song, artist, album, playlist, toplist and movie search supported.&lt;/li&gt; &#xA; &lt;li&gt;Music DSP effects and Visual effects supported.&lt;/li&gt; &#xA; &lt;li&gt;Music song spectrum(projectm, goom, sonique, florid, wavebar) and test supported.&lt;/li&gt; &#xA; &lt;li&gt;Music replay gain scan and write supported.&lt;/li&gt; &#xA; &lt;li&gt;Music screen saver supported.&lt;/li&gt; &#xA; &lt;li&gt;MPRIS D-Bus interface specification supported.&lt;/li&gt; &#xA; &lt;li&gt;MMS and online fm radio supported.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;h3&gt;Index&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Greedysky/Resource/raw/master/Screen/1.jpg?raw=true&#34; alt=&#34;Index&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Search&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Greedysky/Resource/raw/master/Screen/2.jpg?raw=true&#34; alt=&#34;Search&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Lrc&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Greedysky/Resource/raw/master/Screen/3.jpg?raw=true&#34; alt=&#34;Lrc&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Desktop Lrc&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Greedysky/Resource/raw/master/Screen/4.jpg?raw=true&#34; alt=&#34;Desktop Lrc&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Remote Controller&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Greedysky/Resource/raw/master/Screen/5.jpg?raw=true&#34; alt=&#34;Remote Controller&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Lrc Display Expand&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Greedysky/Resource/raw/master/Screen/6.jpg?raw=true&#34; alt=&#34;Lrc Display Expand&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Movie&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Greedysky/Resource/raw/master/Screen/7.jpg?raw=true&#34; alt=&#34;Movie&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Video Barrage&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Greedysky/Resource/raw/master/Screen/8.jpg?raw=true&#34; alt=&#34;Video Barrage&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Magic Music&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Greedysky/Resource/raw/master/Screen/9.jpg?raw=true&#34; alt=&#34;Magic Music&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Other Tools&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Greedysky/Resource/raw/master/Screen/10.jpg?raw=true&#34; alt=&#34;Other Tools&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Spectrum&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Greedysky/Resource/raw/master/Screen/11.jpg?raw=true&#34; alt=&#34;Spectrum&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Other Functions&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Greedysky/Resource/raw/master/Screen/12.jpg?raw=true&#34; alt=&#34;Other Functions&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This file is part of the TTK Music Player project.&lt;/li&gt; &#xA; &lt;li&gt;Copyright (C) 2015 - 2023 Greedysky Studio.&lt;/li&gt; &#xA; &lt;li&gt;Mail: &lt;a href=&#34;mailto:greedysky@163.com&#34;&gt;greedysky@163.com&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How To Contribute&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fork this project on github and make a branch. Commit in that branch, and push, then create a pull request to be reviewed and merged.&lt;/li&gt; &#xA; &lt;li&gt;Create an issue if you have any problem when using project or you find a bug, etc.&lt;/li&gt; &#xA; &lt;li&gt;What you can do: translation, write document, wiki, find or fix bugs, give your idea for this project etc.&lt;/li&gt; &#xA; &lt;li&gt;If you want to join the project developed together, please send e-mail to me.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>asset-group/5ghoul-5g-nr-attacks</title>
    <updated>2023-12-12T01:45:32Z</updated>
    <id>tag:github.com,2023-12-12:/asset-group/5ghoul-5g-nr-attacks</id>
    <link href="https://github.com/asset-group/5ghoul-5g-nr-attacks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;5Ghoul - 5G NR Attacks &amp;amp; 5G OTA Fuzzing&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Proof of Concept (PoC) of 5G NR Attacks against commercial smartphones, CPE routers, USB Modems, etc. Fuzzer included⚡. 5Ghoul is family of implementation-level 5G DoS vulnerabilities affecting &lt;strong&gt;Qualcomm&lt;/strong&gt; and &lt;strong&gt;MediaTek&lt;/strong&gt; mobile platforms. For more details, see &lt;a href=&#34;https://asset-group.github.io/disclosures/5ghoul/&#34;&gt;https://asset-group.github.io/disclosures/5ghoul/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/asset-group/5ghoul-5g-nr-attacks/master/docs/figures/attack_overview_with_output.png&#34; alt=&#34;attack_overview_with_output&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/asset-group/5ghoul-5g-nr-attacks/master/#1--requirements&#34;&gt;📋 Requirements&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/asset-group/5ghoul-5g-nr-attacks/master/#2--quick-start&#34;&gt;⏩ Quick Start&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/asset-group/5ghoul-5g-nr-attacks/master/#3-%EF%B8%8F-launching-a-5ghoul-attack&#34;&gt;☢️ Launching a 5Ghoul attack&lt;/a&gt;&lt;/p&gt; &lt;p&gt;3.1. &lt;a href=&#34;https://raw.githubusercontent.com/asset-group/5ghoul-5g-nr-attacks/master/#31-summary-of-available-attacks&#34;&gt;Summary of Available Attacks&lt;/a&gt;&lt;/p&gt; &lt;p&gt;3.2. &lt;a href=&#34;https://raw.githubusercontent.com/asset-group/5ghoul-5g-nr-attacks/master/#32-create-your-own-5g-exploit&#34;&gt;Create your own 5G exploit&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/asset-group/5ghoul-5g-nr-attacks/master/#4--running-the-5g-nr-fuzzer&#34;&gt;🔀 Running the 5G NR Fuzzer&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/asset-group/5ghoul-5g-nr-attacks/master/#5-%EF%B8%8F-optional-build-5ghoul-software-from-source&#34;&gt;🛠️ (Optional) Build &lt;em&gt;5Ghoul&lt;/em&gt; software from source&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/asset-group/5ghoul-5g-nr-attacks/master/#6-%EF%B8%8F-advanced-options-wip&#34;&gt;⚙️ Advanced Options (WIP)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/asset-group/5ghoul-5g-nr-attacks/master/#7-%EF%B8%8F-third-party-5g-software-stacks&#34;&gt;✉️ Third-Party 5G Software Stacks&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;1. 📋 Requirements&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Software:&lt;/strong&gt; The binary release has been tested and confirmed to work on bare-metal Ubuntu 18.04. However a docker container is provided to run &lt;em&gt;5Ghoul PoC &amp;amp; Fuzzer&lt;/em&gt; in &lt;strong&gt;any Linux based OS capable of running Docker&lt;/strong&gt;. We have validated the container in &lt;code&gt;Docker version 24.0.2&lt;/code&gt;. Note that &lt;strong&gt;we do not recommend using any virtual machine&lt;/strong&gt; since the latency of USB3 needs to be kept as low as possible.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Hardware:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;USRP B210:&lt;/strong&gt; Use of a software-defined-radio (SDR) is required. We recommend the use of &lt;strong&gt;&lt;a href=&#34;https://www.ettus.com/all-products/ub210-kit/&#34;&gt;USRP B210&lt;/a&gt;&lt;/strong&gt;, which can be acquired directly from ETTUS. However, &lt;em&gt;5Ghoul PoC &amp;amp; Fuzzer&lt;/em&gt; relies on OpenAirInterface 5G software stack, which can work with other &lt;a href=&#34;https://gitlab.eurecom.fr/oai/openairinterface5g/-/wikis/OpenAirSystemRequirements#supported-rf&#34;&gt;other SDRs&lt;/a&gt; that might also work with our PoC.&lt;/p&gt; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/asset-group/5ghoul-5g-nr-attacks/master/docs/figures/sdr-usrpb210.png&#34; alt=&#34;sdr-usrpb210&#34; width=&#34;150&#34; height=&#34;auto&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.ettus.com/all-products/ub210-kit/&#34;&gt;ETTUS USRP B210&lt;/a&gt; Software Defined Radio (SDR) &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;(Optional) Programmable SIM Card:&lt;/strong&gt; Some phones do not connect to arbitrary networks without a testing SIM card (001/01 MCC and MNC respectively). To this end, we recommend using a programmable &lt;a href=&#34;https://sysmocom.de/products/sim/sysmousim/index.html&#34;&gt;SIM card from Sysmocom&lt;/a&gt; so you can configure its home network to 001/01.&lt;/p&gt; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/asset-group/5ghoul-5g-nr-attacks/master/docs/figures/sim_cards.png&#34; alt=&#34;sim_cards&#34; width=&#34;130&#34; height=&#34;auto&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://sysmocom.de/products/sim/sysmousim/index.html#&#34;&gt;SysmoISIM-SJA2&lt;/a&gt; programmable SIM/USIM/ISIM cards&lt;/p&gt; &#xA;&lt;p&gt;​&lt;/p&gt; &#xA;&lt;h1&gt;2. ⏩ Quick Start&lt;/h1&gt; &#xA;&lt;p&gt;To get started with &lt;em&gt;5Ghoul PoC&lt;/em&gt;, we recomend usage of &lt;strong&gt;5Ghoul Container&lt;/strong&gt;, available in our docker hub. To simplify its usage, we created a wrapper script to run the container with all the required docker arguments:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir 5ghoul # Create 5ghoul folder&#xA;curl -LJO https://github.com/asset-group/5ghoul-5g-nr-attacks/raw/master/container.sh&#xA;chmod +x container.sh # Give exec. permission to the 5Ghoul container script&#xA;./container.sh release-5g # This will pull and start the terminal of the 5Ghoul container&#xA;sudo bin/5g_fuzzer --MCC=001 --MNC=01 # This will start the rogue base station inside the container&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The final command above (&lt;code&gt;sudo bin/5g_fuzzer ...&lt;/code&gt;) will start the rogue base station without any attack. Therefore, you can use this to verify if the connection between the rogue base station and the smartphone works in first place. Once the smartphone attempts to connect to the rogue base station, the &lt;em&gt;5Ghoul PoC&lt;/em&gt; will indicate such connection by printing the message &lt;code&gt;&#34;[!] 1/2 UE connected to eNB/gNB&#34;&lt;/code&gt;. This message indicates that your setup is working and ready to launch attacks.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/asset-group/5ghoul-5g-nr-attacks/master/docs/figures/normal-connection.svg?sanitize=true&#34; alt=&#34;normal-connection&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;3. ☢️ Launching a 5Ghoul attack&lt;/h1&gt; &#xA;&lt;p&gt;To put it simply, you can just run the following command after connecting USRP B210 to your PC/Laptop:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo ./bin/5g_fuzzer --exploit=mac_sch_rrc_setup_crash_var --MCC=001 --MNC=01&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once the 5Ghoul PoC runs, it will start a rogue base station (gNB) using the provided MCC and MNC by the command line. You can attempt to connect to this rogue base station by inserting a compatible testing SIM card and scanning for operator networks in Android mobile connectivity settings. More details on this is provided in Section Phone Configuration.&lt;/p&gt; &#xA;&lt;p&gt;When the smartphone connects to the rogue base station and an attack is launched, the terminal will print messages such as &lt;code&gt;&#34;Malformed rrc setup sent!&#34;&lt;/code&gt;. These messages depend on the chosen exploit script. The Figure below exemplifies the expected output for the &lt;em&gt;5Ghoul&lt;/em&gt; vulnerability &lt;strong&gt;V7&lt;/strong&gt;, which disables the 5G connection of the smartphone. In this context, the smartphone won&#39;t be able to reconnect to the rogue base station and message&lt;code&gt; &#34;Target is not responding&#34;&lt;/code&gt; is printed if no communication with the smartphone is possible after 45 seconds.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/asset-group/5ghoul-5g-nr-attacks/master/docs/figures/poc-attack-v7.svg?sanitize=true&#34; alt=&#34;poc-attack-v7&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;3.1. Summary of Available Attacks&lt;/h2&gt; &#xA;&lt;p&gt;Currently, &lt;em&gt;5Ghoul&lt;/em&gt; PoC has 12 exploits available. The correspondence between the exploit name and &lt;em&gt;5Ghoul&lt;/em&gt; vulnerability is shown in the Table below.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;5Ghoul Vulnerability Name&lt;/th&gt; &#xA;   &lt;th&gt;Exploit Script Name&lt;/th&gt; &#xA;   &lt;th&gt;CVE&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;V1 - Invalid PUSCH Resource Allocation&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TBA&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Pending&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;V2 - Empty RRC dedicatedNAS-Message&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TBA&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Pending&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;V3 - Invalid RRC Setup&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;mac_sch_rrc_setup_crash&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N.A (Patched)*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;V4 - Invalid RRC Reconﬁguration&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;mac_sch_rrc_reconfiguration_crash&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N.A (Patched)*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;V5 - Invalid MAC/RLC PDU&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;mac_sch_mac_rlc_crash&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CVE-2023-33043&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;V6 - NAS Unknown PDU&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;mac_sch_nas_unknown_pdu_crash&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CVE-2023-33044&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;V7 - Disabling 5G / Downgrade via RRC&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;mac_sch_rrc_setup_crash_var&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CVE-2023-33042&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;V8 - Invalid RRC Setup spCellConﬁg&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;mac_sch_mtk_rrc_setup_crash_4&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CVE-2023-32842&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;V9 - Invalid RRC pucch CSIReportConﬁg&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;mac_sch_mtk_rrc_setup_crash_2&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CVE-2023-32844&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;V10 - Invalid RLC Data Sequence&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;mac_sch_mtk_rlc_crash&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CVE-2023-20702&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;V11 - Truncated RRC physicalCellGroupConﬁg&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;mac_sch_mtk_rrc_setup_crash_6&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CVE-2023-32846&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;V12 - Invalid RRC searchSpacesToAddModList&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;mac_sch_mtk_rrc_setup_crash_1&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CVE-2023-32841&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;V13 - Invalid RRC Uplink Conﬁg Element&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;mac_sch_mtk_rrc_setup_crash_3&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CVE-2023-32843&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;V14 - Null RRC Uplink Conﬁg Element&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;mac_sch_mtk_rrc_setup_crash_7&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CVE-2023-32845&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DA1 - NAS Flooding Downgrade&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TBA&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;N.A&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vulnerabilities &lt;strong&gt;V3,V4&lt;/strong&gt; do not seem to affect Qualcomm modems with firmware version dated since 2021.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can list the name of all existing &lt;em&gt;5Ghoul&lt;/em&gt; exploits by passing the argument &lt;code&gt;--list-exploits&lt;/code&gt; as shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo bin/5g_fuzzer --list-exploits&#xA;...&#xA;Available Exploits:&#xA;--&amp;gt; mac_sch_mtk_rrc_setup_crash_3 Groups: [mac_sch_:203] [mac_sch_:204] [mac_sch_:205] &#xA;--&amp;gt; mac_sch_mtk_rrc_setup_crash_7 Groups: [mac_sch_:203] [mac_sch_:204] [mac_sch_:205] &#xA;--&amp;gt; mac_sch_rrc_setup_crash Groups: [mac_sch_:203] [mac_sch_:204] [mac_sch_:205] &#xA;--&amp;gt; mac_sch_mtk_rrc_setup_crash_4 Groups: [mac_sch_:203] [mac_sch_:204] [mac_sch_:205] &#xA;--&amp;gt; mac_sch_rrc_setup_crash_var Groups: [mac_sch_:203] [mac_sch_:204] [mac_sch_:205] &#xA;--&amp;gt; mac_sch_mtk_rrc_setup_crash_2 Groups: [mac_sch_:203] [mac_sch_:204] [mac_sch_:205] &#xA;--&amp;gt; mac_sch_mac_rlc_crash Groups: [mac_sch_:203] [mac_sch_:204] [mac_sch_:205] &#xA;--&amp;gt; mac_sch_mtk_rlc_crash Groups: [mac_sch_:203] [mac_sch_:204] [mac_sch_:205] &#xA;--&amp;gt; mac_sch_nas_unknown_pdu_crash Groups: [mac_sch_:203] [mac_sch_:204] [mac_sch_:205] &#xA;--&amp;gt; mac_sch_mtk_rrc_setup_crash_6 Groups: [mac_sch_:203] [mac_sch_:204] [mac_sch_:205] &#xA;--&amp;gt; mac_sch_mtk_rrc_setup_crash_1 Groups: [mac_sch_:203] [mac_sch_:204] [mac_sch_:205] &#xA;--&amp;gt; mac_sch_rrc_reconfiguration_crash Groups: [mac_sch_:203] [mac_sch_:204] [mac_sch_:205] &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;3.2. Create your own 5G exploit&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;WIP - Documentation on 5G test-case creation to be added soon.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;4. 🔀 Running the 5G NR Fuzzer&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;em&gt;5Ghoul&lt;/em&gt; fuzzer supports running in CLI mode or graphical interface. To run in graphical interface, simply add the &lt;code&gt;--gui&lt;/code&gt; argument when calling the &lt;code&gt;5g_sa&lt;/code&gt; binary. You can start the fuzzer as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo bin/5g_fuzzer --MCC=001 --MNC=01 --EnableMutation=true # Run fuzzer in command line interface mode (CLI)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Upon successful connectivity with the smartphone or modem, the 5G fuzzer highlights mutated (fuzzed) downlink PDUs in purple. Concurrently, a live capture of the over-the-air communication between the smartphone (UE) and the rogue base station (gNB performing the fuzzing) is shown to the user. Furthermore, the communication trace and logs are saved to &lt;code&gt;logs/5gnr_gnb&lt;/code&gt; .&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/asset-group/5ghoul-5g-nr-attacks/master/docs/figures/fuzzing-live.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The tool also has a graphical interface that is mostly used for development and troubleshooting the 5G connection or showcasing attack or fuzzing demos ✌. An example of the &lt;em&gt;5Ghoul&lt;/em&gt; GUI is shown below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo bin/5g_fuzzer --MCC=001 --MNC=01 --EnableMutation=true --gui # Run with graphical user interface (GUI)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/asset-group/5ghoul-5g-nr-attacks/master/docs/figures/fuzzer-gui.png&#34; alt=&#34;fuzzer-gui&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;5. 🛠️ (Optional) Build &lt;em&gt;5Ghoul&lt;/em&gt; software from source&lt;/h1&gt; &#xA;&lt;p&gt;Several requirements need to be installed before compiling the project. An automated script for Ubuntu 18.04/20.04 is provided on &lt;code&gt;requirements.sh&lt;/code&gt;. To compile from source, simply run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/asset-group/5ghoul-5g-nr-attacks&#xA;cd 5ghoul-5g-nr-attacks&#xA;./requirements.sh 5g # Install all system requirements to compile 5ghoul fuzzer, OpenAirInterface and Open5GS&#xA;./build.sh all # Compile all binaries + Wireshark. It may take around 20min. Go get a coffe!&#xA;./build.sh # (Optional) Compile all binaries without Wireshark.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The expected output during the build process is shown below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/asset-group/5ghoul-5g-nr-attacks/master/docs/figures/5ghoul-build-output.svg?sanitize=true&#34; alt=&#34;5ghoul-build-output&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;6. ⚙️ Advanced Options (WIP)&lt;/h1&gt; &#xA;&lt;p&gt;You can list all options of 5Ghoul PoC by running it with &lt;code&gt;--help&lt;/code&gt; argument as shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo bin/5g_fuzzer --help&#xA;Fuzzer for 5G NR User Equipment (UE) - MAC-NR, PDCP-NR, RLC-NR, NAS-5GS&#xA;Usage:&#xA;  lte_fuzzer [OPTION...]&#xA;&#xA;  -h, --help            Print help&#xA;      --default-config  Start with default config&#xA;  -g, --gui             Open Graphical User Interface (GUI)&#xA;&#xA; Fuzzing:&#xA;      --EnableDuplication       &#xA;      --EnableMutation           (default: true)&#xA;      --EnableOptimization       (default: true)&#xA;      --DefaultDuplicationProbability arg&#xA;                                 (default: 0.200000)&#xA;      --DefaultMutationProbability arg&#xA;                                 (default: 0.200000)&#xA;      --DefaultMutationFieldProbability arg&#xA;                                 (default: 0.100000)&#xA;      --FieldMutationBackoffMultipler arg&#xA;                                 (default: 0.500000)&#xA;      --MaxFieldsMutation arg    (default: 2)&#xA;      --NormalizeProtocolLayersMutation&#xA;                                &#xA;      --MaxDuplicationTimeMS arg&#xA;                                 (default: 6000)&#xA;      --PacketRetry             &#xA;      --PacketRetryTimeoutMS arg&#xA;                                 (default: 2500)&#xA;      --GlobalTimeout            (default: true)&#xA;      --GlobalTimeoutSeconds arg&#xA;                                 (default: 45)&#xA;      --StateLoopDetection      &#xA;      --StateLoopDetectionThreshold arg&#xA;                                 (default: 5)&#xA;      --RandomSeed arg           (default: 123456789)&#xA;      --SeedIncrementEveryIteration&#xA;                                 (default: true)&#xA;      --RestoreSessionOnStartup&#xA;                                &#xA;      --SaveSessionOnExit       &#xA;      --Selector arg             (default: 0)&#xA;      --Mutator arg              (default: 1)&#xA;&#xA; Modules:&#xA;      --exploit arg             Launch Exploit&#xA;      --list-exploits           List Available Exploits&#xA;      --list-exploits-groups    List Exploit Groups (Debug)&#xA;      --list-exploits-prefixes  List Exploit Prefixes (Debug)&#xA;&#xA; NR5G:&#xA;      --MCC arg                  (default: 001)&#xA;      --MNC arg                  (default: 01)&#xA;      --AutoStartBaseStation     (default: true)&#xA;      --AutoStartCoreNetwork     (default: true)&#xA;      --BaseStationConfigFile arg&#xA;                                 (default: n78.106.conf)&#xA;      --BaseStationArguments arg&#xA;                                 (default: --sa --continuous-tx -E)&#xA;      --CoreNetworkConfigFile arg&#xA;                                 (default: open5gs.yaml)&#xA;      --EnableSimulator         &#xA;      --SimulatorDelayUS arg     (default: 2000)&#xA;      --SimulationConnectionTimeoutMS arg&#xA;                                 (default: 1000)&#xA;      --SimulatorUEArguments arg&#xA;                                 (default: -r 106 --numerology 1 --band 78 &#xA;                                -E -C 3619200000 --rfsim --sa --ssb 516)&#xA;&#xA; Options:&#xA;      --DefaultProtocolName arg&#xA;                                 (default: proto:mac-nr-framed)&#xA;      --DefaultProtocolEncapName arg&#xA;                                 (default: encap:1)&#xA;      --SaveProtocolCapture      (default: true)&#xA;      --LiveProtocolCapture     &#xA;      --SaveLogsToFile           (default: true)&#xA;      --SaveLatencyMetrics      &#xA;      --SkipPacketProcessing    &#xA;      --Program arg              (default: 1)&#xA;      --AutoStartProgram         (default: true)&#xA;      --AutoRestartProgram      &#xA;      --LaunchProgramWithGDB    &#xA;      --MainThreadCore arg       (default: -1)&#xA;      --SaveCoreDump            &#xA;&#xA; UEModemManager:&#xA;      --APN arg                  (default: internet)&#xA;      --AllowedModes arg         (default: 4g|5g)&#xA;      --PreferredMode arg        (default: 5g)&#xA;      --Bands arg                (default: ngran-78)&#xA;      --DisableFuzzingOnFirstConnection&#xA;                                 (default: true)&#xA;      --AutoConnectModem         (default: true)&#xA;      --ConnectionTimeoutMS arg&#xA;                                 (default: 4000)&#xA;      --UseOnlyATConnections    &#xA;      --AutoConnectToAPN         (default: true)&#xA;      --ManualAPNConnection     &#xA;      --ManualAPNConnectionDelayMS arg&#xA;                                 (default: 0)&#xA;      --AutoReconnectModem       (default: true)&#xA;      --ResetModemOnGlobalTimeout&#xA;                                 (default: true)&#xA;      --GlobalTimeoutsCount arg&#xA;                                 (default: 3)&#xA;      --DefaultModemInterfacePath arg&#xA;                                 (default: /dev/cdc-wdm1)&#xA;      --AutoSearchModemInterfacePath&#xA;                                 (default: true)&#xA;      --UseInUSBIPHostSSH       &#xA;      --EnableADB                (default: true)&#xA;      --ADBDevice arg            (default: R5CT720QT7H)&#xA;      --ADBPIN arg               (default: 123123)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;7. ✉️ Third-Party 5G Software Stacks&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;5Ghoul PoC &amp;amp; Fuzzer&lt;/em&gt; is built upon well known protocols stack implementation. These are used to generate messages and to guide the target device towards a set of protocol procedures which are expected to be tested again unknown or insecure behaviour.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Implementation of Network Layers 1-2 &lt;code&gt;5G MAC, RRC, RLC and PDCP&lt;/code&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Base Station (gNB) - &lt;a href=&#34;https://gitlab.eurecom.fr/oai/openairinterface5g/-/tree/develop&#34;&gt;Open Air Interface&lt;/a&gt; (Open Source)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Implementation of Layer 3 and above &lt;code&gt;NAS, IPV4, etc&lt;/code&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;5G Core Network - &lt;a href=&#34;https://github.com/open5gs/open5gs&#34;&gt;Open5GS&lt;/a&gt; (Open Source)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/asset-group/5ghoul-5g-nr-attacks/master/docs/figures/protocol-stack-5g.svg?sanitize=true&#34; alt=&#34;protocol-stack-5g&#34; style=&#34;zoom:150%;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>