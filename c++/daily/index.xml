<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-24T01:33:51Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>LeadCoding/3-weeks-Google-Prep</title>
    <updated>2022-06-24T01:33:51Z</updated>
    <id>tag:github.com,2022-06-24:/LeadCoding/3-weeks-Google-Prep</id>
    <link href="https://github.com/LeadCoding/3-weeks-Google-Prep" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;3-weeks-Google-Prep&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://youtu.be/YlP7CWpHgS4&#34;&gt;How I Cracked my Dream Company GOOGLE&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=NXQi_g1pVqI/&#34;&gt;For rest of the topics I reffered my DSA Sheet Questions&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;These are some selected questions apart from my DSA Sheet that I solved to prepare for my Google interviews&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dynamic Programming &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Digit DP &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;MagicNumbers.cpp&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Barcode.cpp&lt;/li&gt; &#xA;   &lt;li&gt;cherryPick.cpp&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Graphs &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;1.Representation &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;List.cpp&lt;/li&gt; &#xA;     &lt;li&gt;Matrix.cpp&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;10.Articulation Point and Bridges &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;CutEdges.cpp&lt;/li&gt; &#xA;     &lt;li&gt;CutVertex.cpp&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;2.CycleDetection &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;1.DetectCycleUndirectedGraph.cpp&lt;/li&gt; &#xA;     &lt;li&gt;2.DetectCycleDirectedGraph.cpp&lt;/li&gt; &#xA;     &lt;li&gt;3.IsBipartite.cpp&lt;/li&gt; &#xA;     &lt;li&gt;4.LengthOfSmallestCycle.cpp&lt;/li&gt; &#xA;     &lt;li&gt;5.DetectCyclesin2DGrid.cpp&lt;/li&gt; &#xA;     &lt;li&gt;6.Maximum Employees to Be Invited to a Meeting.cpp&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;3.DSU &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;1.Redundant Connection II.cpp&lt;/li&gt; &#xA;     &lt;li&gt;DSUSnippetClass.cpp&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;4.Topological Sort &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;GameRoutes.cpp&lt;/li&gt; &#xA;     &lt;li&gt;LargestColorValueInADirectedGraph.cpp&lt;/li&gt; &#xA;     &lt;li&gt;TopologicalBFS.cpp&lt;/li&gt; &#xA;     &lt;li&gt;TopologicalDFS.cpp&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;5.MST &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Kruskals.cpp&lt;/li&gt; &#xA;     &lt;li&gt;Prims.cpp&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;6.BFS &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;MultiSourceBFS.cpp&lt;/li&gt; &#xA;     &lt;li&gt;ValidBFS.cpp&lt;/li&gt; &#xA;     &lt;li&gt;WorldLadder2.cpp&lt;/li&gt; &#xA;     &lt;li&gt;boredom.cpp&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;7.DFS &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;ConnectedComponents.cpp&lt;/li&gt; &#xA;     &lt;li&gt;DFSwithStoppingCondition.cpp&lt;/li&gt; &#xA;     &lt;li&gt;JourneyToTheMoon.cpp&lt;/li&gt; &#xA;     &lt;li&gt;ReconstructItinerary.cpp&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;8.Shortest Paths Algo &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;BellmanFord.cpp&lt;/li&gt; &#xA;     &lt;li&gt;Dijkstras.cpp&lt;/li&gt; &#xA;     &lt;li&gt;FLoydWarshall.cpp&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;9.StronglyConnected &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;kosarju.cpp&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Readme.md&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Rest of the Topic &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Readme.md&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Rolling hash &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;rabin_carp.cpp&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;SegmentTree &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;SegmentTreeSnippetClass.cpp&lt;/li&gt; &#xA;   &lt;li&gt;Xenia.cpp&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;README.md&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;BONUS ;) &lt;a href=&#34;https://www.youtube.com/c/LeadCodingbyFRAZ&#34;&gt;Learn from me&lt;/a&gt;&lt;/h2&gt;</summary>
  </entry>
  <entry>
    <title>scottbez1/smartknob</title>
    <updated>2022-06-24T01:33:51Z</updated>
    <id>tag:github.com,2022-06-24:/scottbez1/smartknob</id>
    <link href="https://github.com/scottbez1/smartknob" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Haptic input knob with software-defined endstops and virtual detents&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SmartKnob&lt;/h1&gt; &#xA;&lt;p&gt;SmartKnob is an open-source input device with software-configurable endstops and virtual detents.&lt;/p&gt; &#xA;&lt;p&gt;A brushless gimbal motor is paired with a magnetic encoder to provide closed-loop torque feedback control, making it possible to dynamically create and adjust the feel of detents and endstops.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/scottbez1/smartknob/actions/workflows/electronics.yml&#34;&gt;&lt;img src=&#34;https://github.com/scottbez1/smartknob/actions/workflows/electronics.yml/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/scottbez1/smartknob/actions/workflows/pio.yml&#34;&gt;&lt;img src=&#34;https://github.com/scottbez1/smartknob/actions/workflows/pio.yml/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Designs&lt;/h1&gt; &#xA;&lt;h2&gt;SmartKnob View&lt;/h2&gt; &#xA;&lt;p&gt;Premium SmartKnob experience. Under active development.&lt;/p&gt; &#xA;&lt;p&gt;‚ö†Ô∏è &lt;strong&gt;Update (2022-03-24): As a result of the popularity of this project, it seems like the recommended motors are unfortunately no longer available.&lt;/strong&gt; I expect that these motors are simply no longer in production and therefore limited stock was available (for future reference in case you find them being sold elsewhere at a higher price, they were originally selling for US$2.56 each before this project was published). However... üëá&lt;/p&gt; &#xA;&lt;p&gt;üí° &lt;strong&gt;There is an ongoing search for new motors in &lt;a href=&#34;https://github.com/scottbez1/smartknob/issues/16&#34;&gt;issue #16&lt;/a&gt;&lt;/strong&gt; - follow along there for the latest info (or join in and help us find a good replacement). Any change in motor will likely require substantial redesigns, so &lt;em&gt;don&#39;t order PCBs/printed parts until there is more clarity on the motor.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;240x240 round LCD (&#34;GC9A01&#34;), protected by 39.5mm watch glass on rotor&lt;/li&gt; &#xA; &lt;li&gt;BLDC gimbal motor, with a hollow shaft for mechanically &amp;amp; electrically connecting the LCD&lt;/li&gt; &#xA; &lt;li&gt;Powered by ESP32-PICO-V3-02 (Lilygo TMicro32 Plus module)&lt;/li&gt; &#xA; &lt;li&gt;PCB flexure and strain gauges used for press detection (haptic feedback provided via the motor)&lt;/li&gt; &#xA; &lt;li&gt;8 side-firing RGB LEDs (SK6812-SIDE-A) illuminate ring around the knob&lt;/li&gt; &#xA; &lt;li&gt;USB-C (2.0) connector for 5V power and serial data/programming (CH340)&lt;/li&gt; &#xA; &lt;li&gt;VEML7700 ambient light sensor for automatic backlight &amp;amp; LED intensity adjustment&lt;/li&gt; &#xA; &lt;li&gt;Versatile back plate for mounting - use either 4x screws, or 2x 3M medium Command strips (with cutouts for accessing removal tabs after installation)&lt;/li&gt; &#xA; &lt;li&gt;Front cover snaps on for easy access to the PCB&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Current status:&lt;/strong&gt; Not recommended for general use (mechanical and electrical revisions are planned)&lt;/p&gt; &#xA;&lt;h3&gt;Demo video&lt;/h3&gt; &#xA;&lt;a href=&#34;https://www.youtube.com/watch?v=ip641WmY4pA&#34;&gt; &lt;img src=&#34;https://img.youtube.com/vi/ip641WmY4pA/maxresdefault.jpg&#34; width=&#34;480&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;3D CAD&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/scottbez1/smartknob/master/doc/img/explodedv145.gif&#34; alt=&#34;Exploded view&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Latest Fusion 360 Model: &lt;a href=&#34;https://a360.co/3BzkU0n&#34;&gt;https://a360.co/3BzkU0n&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Build your own?&lt;/h3&gt; &#xA;&lt;p&gt;While this is a &#34;DIY&#34; open-source project, it is not yet a mature plug-and-play project. If you intend to build your own, note that it requires advanced soldering experience to build - very small-pitch surface-mount soldering is required (reflow or hot air recommended), and assembly is quite time-consuming and delicate. Please go into it with the expectation that you will almost certainly need to be able to troubleshoot some hardware and firmware issues yourself - I recommend reviewing/understanding the schematics and basic firmware before jumping in!&lt;/p&gt; &#xA;&lt;p&gt;More documentation on the BOM and what parts you need to order is coming in the future - thanks so much for your interest! Follow me on &lt;a href=&#34;https://twitter.com/scottbez1&#34;&gt;Twitter&lt;/a&gt; for the latest updates on this and other projects.&lt;/p&gt; &#xA;&lt;p&gt;View the latest auto-generated (untested) &lt;a href=&#34;https://smartknob-artifacts.s3.us-west-1.amazonaws.com/master/electronics/view_base-ibom.html&#34;&gt;Base PCB Interactive BOM&lt;/a&gt; and &lt;a href=&#34;https://smartknob-artifacts.s3.us-west-1.amazonaws.com/master/electronics/view_screen-ibom.html&#34;&gt;Screen PCB Interactive BOM&lt;/a&gt; (or, the combined &lt;a href=&#34;https://smartknob-artifacts.s3.us-west-1.amazonaws.com/master/electronics/view_base-bom.csv&#34;&gt;BOM csv&lt;/a&gt;) for electronics/hardware parts list. ‚ö†Ô∏è These are auto-generated from the latest untested revision on GitHub. For tested/stable/recommended artifacts, use a &lt;a href=&#34;https://github.com/scottbez1/smartknob/releases&#34;&gt;release&lt;/a&gt; instead.&lt;/p&gt; &#xA;&lt;p&gt;A few miscellaneous notes in the meantime:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This can &lt;em&gt;probably&lt;/em&gt; be FDM 3D printed with a well-tuned printer, but the parts shown in videos/photos were MJF printed in nylon for tight tolerances and better surface finish&lt;/li&gt; &#xA; &lt;li&gt;If you wanted a simpler build, you could omit the LCD and just merge the knob + glass from the model into a single STL to get a closed-top knob&lt;/li&gt; &#xA; &lt;li&gt;There&#39;s limited space inside the LCD mount for wiring, and 8 wires need to fit through the hole in the center. I used 30 AWG wire-wrapping wire. Enamel-coated wire would probably work too.&lt;/li&gt; &#xA; &lt;li&gt;Strain gauges are BF350-3AA, and glued in place with CA glue (I&#39;ll include video of this process in the future, but essentially I used kapton tape to pick up the strain gauge and hold it in place during curing). This has to be done after reflow soldering, and would be hard to remove/fix in case of a mistake, so MAKE SURE TO PRACTICE GLUING strain gauges to other items before attempting on the PCB!&lt;/li&gt; &#xA; &lt;li&gt;The TMC6300 is &lt;em&gt;tiny&lt;/em&gt; and has a bottom pad, so I would seriously consider getting a stencil along with the PCB order. Even with the stencil I needed to manually clean up some bridging afterward; I &lt;em&gt;highly&lt;/em&gt; recommend Chip Quik NC191 gel flux, available on &lt;a href=&#34;https://amzn.to/3MGDSr5&#34;&gt;Amazon&lt;/a&gt; (or use this &lt;a href=&#34;https://www.amazon.com/Smooth-Flow-No-Clean-syringe-plunger/dp/B08KJPG3NZ&#34;&gt;non-affiliate link&lt;/a&gt; instead) or from your electronics distributor of choice. Flux is also very helpful when soldering the LCD ribbon cable to to screen PCB.&lt;/li&gt; &#xA; &lt;li&gt;For breadboard prototyping, the &lt;a href=&#34;https://www.trinamic.com/support/eval-kits/details/tmc6300-bob/&#34;&gt;TMC6300-BOB&lt;/a&gt; is awesome and way easier to work with than the bare chip if you just want to play around with low current BLDC motors&lt;/li&gt; &#xA; &lt;li&gt;For AliExpress purchases: I highly recommend &lt;strong&gt;only&lt;/strong&gt; using AliExpress Standard Shipping (purchasing in the US). I have had multiple purchases take months or never get delivered when purchased with Cainiao or other low cost shipping options, whereas AliExpress Standard is very reliable and generally faster in my experience.&lt;/li&gt; &#xA; &lt;li&gt;Make sure to check the &lt;a href=&#34;https://github.com/scottbez1/smartknob/issues&#34;&gt;open issues&lt;/a&gt; - this design is not yet &#34;stable&#34;, so beware that everything may not go smoothly. I would not recommend ordering these parts yourself until the &lt;a href=&#34;https://github.com/scottbez1/smartknob/milestone/1&#34;&gt;stable release v1.0 milestone&lt;/a&gt; is complete, as there are some mechanical interference issues in the current revision.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Future plans:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;consider switch to using an ESP32-S3-MINI-1 module (once Arduino core support is complete), as that would allow for direct USB HID support (for joystick/macro-pad type input to a computer)&lt;/li&gt; &#xA; &lt;li&gt;Bluetooth HID support?&lt;/li&gt; &#xA; &lt;li&gt;get wifi configured and working (probably MQTT?). Currently memory is an issue with the full display framebuffer sprite. PSRAM might fix this (requires newer ESP-IDF &amp;amp; unreleased Arduino core, and from a brief test I got horrible performance with PSRAM enabled), or the next item might help reduce memory:&lt;/li&gt; &#xA; &lt;li&gt;migrate to LVGL, for better display rendering and easy support for menus, etc. Shouldn&#39;t require a full 240x240x24b framebuffer in memory, freeing some for wifi, etc.&lt;/li&gt; &#xA; &lt;li&gt;integrate nanopb for structured serial data (see &lt;a href=&#34;https://github.com/scottbez1/splitflap/raw/1440aba54d5b0d822ec5da68762431879988d7ef/arduino/splitflap/esp32/splitflap/serial_proto_protocol.cpp&#34;&gt;splitflap protobuf protocol&lt;/a&gt; for example)&lt;/li&gt; &#xA; &lt;li&gt;Home Assistant integration, or other real-world applications&lt;/li&gt; &#xA; &lt;li&gt;???&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sponsors/scottbez1/&#34;&gt;Profit&lt;/a&gt; üòâ&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Base PCB&lt;/h4&gt; &#xA;&lt;a href=&#34;https://smartknob-artifacts.s3.us-west-1.amazonaws.com/master/electronics/view_base-front-3d.png&#34;&gt; &lt;img src=&#34;https://smartknob-artifacts.s3.us-west-1.amazonaws.com/master/electronics/view_base-front-3d.png&#34; width=&#34;300&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://smartknob-artifacts.s3.us-west-1.amazonaws.com/master/electronics/view_base-back-3d.png&#34;&gt; &lt;img src=&#34;https://smartknob-artifacts.s3.us-west-1.amazonaws.com/master/electronics/view_base-back-3d.png&#34; width=&#34;300&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Ordering notes: use white soldermask, for reflecting light from RGB LED ring around the knob. Should be 1.2mm thick (not &#34;standard&#34; 1.6mm).&lt;/p&gt; &#xA;&lt;p&gt;Latest auto-generated (untested and likely broken!) artifacts‚ö†Ô∏è:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://smartknob-artifacts.s3.us-west-1.amazonaws.com/master/electronics/view_base-schematic.pdf&#34;&gt;Schematic&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://smartknob-artifacts.s3.us-west-1.amazonaws.com/master/electronics/view_base-ibom.html&#34;&gt;Interactive BOM&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://smartknob-artifacts.s3.us-west-1.amazonaws.com/master/electronics/view_base-pcb-packet.pdf&#34;&gt;PCB Packet&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://smartknob-artifacts.s3.us-west-1.amazonaws.com/master/electronics/view_base-jlc/gerbers.zip&#34;&gt;Gerbers&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;‚ö†Ô∏è For tested/stable/recommended artifacts, use a &lt;a href=&#34;https://github.com/scottbez1/smartknob/releases&#34;&gt;release&lt;/a&gt; instead.&lt;/p&gt; &#xA;&lt;h4&gt;Screen PCB&lt;/h4&gt; &#xA;&lt;a href=&#34;https://smartknob-artifacts.s3.us-west-1.amazonaws.com/master/electronics/view_screen-front-3d.png&#34;&gt; &lt;img src=&#34;https://smartknob-artifacts.s3.us-west-1.amazonaws.com/master/electronics/view_screen-front-3d.png&#34; width=&#34;300&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://smartknob-artifacts.s3.us-west-1.amazonaws.com/master/electronics/view_screen-back-3d.png&#34;&gt; &lt;img src=&#34;https://smartknob-artifacts.s3.us-west-1.amazonaws.com/master/electronics/view_screen-back-3d.png&#34; width=&#34;300&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Ordering notes: Must be 1.2mm thick (not &#34;standard&#34; 1.6mm) per mechanical design.&lt;/p&gt; &#xA;&lt;p&gt;Latest auto-generated (untested and likely broken!) artifacts‚ö†Ô∏è:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://smartknob-artifacts.s3.us-west-1.amazonaws.com/master/electronics/view_screen-schematic.pdf&#34;&gt;Schematic&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://smartknob-artifacts.s3.us-west-1.amazonaws.com/master/electronics/view_screen-ibom.html&#34;&gt;Interactive BOM&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://smartknob-artifacts.s3.us-west-1.amazonaws.com/master/electronics/view_screen-pcb-packet.pdf&#34;&gt;PCB Packet&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://smartknob-artifacts.s3.us-west-1.amazonaws.com/master/electronics/view_screen-jlc/gerbers.zip&#34;&gt;Gerbers&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;‚ö†Ô∏è For tested/stable/recommended artifacts, use a &lt;a href=&#34;https://github.com/scottbez1/smartknob/releases&#34;&gt;release&lt;/a&gt; instead.&lt;/p&gt; &#xA;&lt;h2&gt;SmartKnob Mini&lt;/h2&gt; &#xA;&lt;p&gt;Planned for the future.&lt;/p&gt; &#xA;&lt;h1&gt;Frequently Asked Questions (FAQ)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;How much does it cost?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;I wish I could tell you now, but I don&#39;t actually know off the top of my head. Check back soon - I&#39;ve only built 1 so far, which was the result of a bunch of tinkering and prototyping over an extended period, so I don&#39;t have all the expenses tallied up yet. Certainly less than $200 in parts, and maybe closer to $100?&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Does it work with XYZ?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Not yet. So far I&#39;ve only implemented enough firmware for the demo shown in the video, so you can&#39;t actually use it for anything productive yet. The basic detent configuration API is there, but not much else. Lots of firmware work remains to be done. If you build one, I&#39;d love your help adding support for XYZ though!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Can I buy one as a kit or already assembled?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Probably not? Or at least, I don&#39;t have any immediate plans to sell them myself. It&#39;s not that I don&#39;t want you to be happy, but hardware is a hard business and I just work on this stuff in my free time.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s open source with a fairly permissive license though, so in theory anyone could start offering kits/assemblies. If someone does go down that route of selling them, note that attribution is &lt;em&gt;required&lt;/em&gt; (and I wouldn&#39;t say no to &lt;a href=&#34;https://github.com/sponsors/scottbez1/&#34;&gt;royalties/tips/thanks&lt;/a&gt; if you&#39;re in a giving mood üôÇ).&lt;/p&gt; &#xA;&lt;h2&gt;General Component Info&lt;/h2&gt; &#xA;&lt;h3&gt;Magnetic encoders&lt;/h3&gt; &#xA;&lt;h4&gt;MT6701 (MagnTek)&lt;/h4&gt; &#xA;&lt;p&gt;Excellent sensor at a reasonable price - highly recommended. Less noisy than TLV493D, and more responsive (control loop is more stable) using SSI.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lots of IO options - SSI, I2C, and ABZ - should offer good response latency&lt;/li&gt; &#xA; &lt;li&gt;SSI includes CRC to validate data&lt;/li&gt; &#xA; &lt;li&gt;No power-down or low-power options - may not be ideal for battery-powered devices&lt;/li&gt; &#xA; &lt;li&gt;Not available from US distributors (Mouser, Digi-Key)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.magntek.com.cn/upload/MT6701_Rev.1.5.pdf&#34;&gt;Datasheet&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lcsc.com/product-detail/Angle-Linear-Position-Sensors_Magn-Tek-MT6701CT-STD_C2856764.html&#34;&gt;Ordering (LCSC)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;TLV493D (Infineon)&lt;/h4&gt; &#xA;&lt;p&gt;A mediocre choice. Easy to prototype with using &lt;a href=&#34;https://www.adafruit.com/product/4366&#34;&gt;Adafruit&#39;s QWIIC breakout board&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In my testing, it is a little noisy, requiring filtering/smoothing that can slow responsiveness, hurting control loop stability. Or, with less filtering, the noise can easily be &#34;amplified&#34; by the derivative component in the PID motor torque controller, causing audible (and tactile) humming/buzzing.&lt;/p&gt; &#xA;&lt;p&gt;There is also apparently a known silicon issue that causes the internal ADC to sometimes completely lock up, requiring a full reset and re-configuration. See section 5.6 in the &lt;a href=&#34;https://www.infineon.com/dgdl/Infineon-TLV493D-A1B6_3DMagnetic-UM-v01_03-EN.pdf?fileId=5546d46261d5e6820161e75721903ddd&#34;&gt;User Manual&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;In the Master Controlled Mode (MCM) or the Fast Mode (FM) the ADC conversion may hang up. A hang up can&#xA;be detected by:&#xA; - Frame Counter (FRM) counter stucks and does not increment anymore.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In my experience testing 4 different Adafruit breakout boards, 2 of them (50%) regularly exhibit this lockup behavior within a minute or two of use. It is possible to detect and auto-reset (and there is code in the project to do so), but it is slow and may cause undesirable jumps/delays if the sensor locks up often.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.mouser.com/datasheet/2/196/Infineon_TLV493D_A1B6_DataSheet_v01_10_EN-1227967.pdf&#34;&gt;Datasheet&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;AS5600 (AMS)&lt;/h4&gt; &#xA;&lt;p&gt;A mediocre choice. Cheap breakout boards are readily available.&lt;/p&gt; &#xA;&lt;p&gt;In my testing, it&#39;s fairly noisy (anecdotally, noisier than the TLV493d), requiring filtering/smoothing that can slow responsiveness, hurting control loop stability. Additionally, it saturates at a lower magnetic field strength than other sensors I tested, requiring a significant air gap (8-10mm) when used with a strong neodymium diametric magnet like &lt;a href=&#34;https://www.digikey.com/en/products/detail/radial-magnets-inc/8995/5126077&#34;&gt;Radial Magnets 8995&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ams.com/documents/20143/36005/AS5600_DS000365_5-00.pdf&#34;&gt;Datasheet&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Motor drivers&lt;/h3&gt; &#xA;&lt;h4&gt;TMC6300-LA&lt;/h4&gt; &#xA;&lt;p&gt;This is a relatively new IC and it&#39;s a perfect match! There generally aren&#39;t any other drivers (with integrated fets) that meet the requirements for the low-voltage and low-current motors used in this project (DRV8316 might work, but has not been tested).&lt;/p&gt; &#xA;&lt;p&gt;Highlights:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2-11V DC motor supply input&lt;/li&gt; &#xA; &lt;li&gt;Up to 1.2A RMS&lt;/li&gt; &#xA; &lt;li&gt;Tiny (3x3mm QFN)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.trinamic.com/fileadmin/assets/Products/ICs_Documents/TMC6300_datasheet_rev1.07.pdf&#34;&gt;Datasheet&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.trinamic.com/products/integrated-circuits/details/tmc6300-la/&#34;&gt;Product page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Motors&lt;/h3&gt; &#xA;&lt;h4&gt;32mm Rotor, Hollow Shaft, Diametric magnet&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/scottbez1/smartknob/master/doc/img/motors/PXL_20220121_221746595.jpg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/scottbez1/smartknob/master/doc/img/motors/PXL_20220121_221746595.jpg&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/scottbez1/smartknob/master/doc/img/motors/PXL_20220121_221738745.jpg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/scottbez1/smartknob/master/doc/img/motors/PXL_20220121_221738745.jpg&#34; width=&#34;200&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;32mm rotor&lt;/li&gt; &#xA; &lt;li&gt;15mm overall height (including magnet), 12.75mm height w/o magnet, 9mm rotor height&lt;/li&gt; &#xA; &lt;li&gt;low/zero cogging - excellent for completely smooth input&lt;/li&gt; &#xA; &lt;li&gt;5.9mm hollow shaft&lt;/li&gt; &#xA; &lt;li&gt;built-in diametric magnet for encoder&lt;/li&gt; &#xA; &lt;li&gt;Proven option&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This is overall the easiest motor to get started with. Low cogging and a built-in diametric magnet are great!&lt;/p&gt; &#xA;&lt;p&gt;Sadly, does not seem to be available any longer.&lt;/p&gt; &#xA;&lt;h1&gt;Firmware&lt;/h1&gt; &#xA;&lt;p&gt;TODO: document this&lt;/p&gt; &#xA;&lt;p&gt;Also TODO: implement a lot more of the firmware&lt;/p&gt; &#xA;&lt;h1&gt;Acknowledgements&lt;/h1&gt; &#xA;&lt;p&gt;This project was greatly inspired by Jesse Schoch&#39;s video &#34;&lt;a href=&#34;https://www.youtube.com/watch?v=1gPQfDkX3BU&#34;&gt;haptic textures and virtual detents&lt;/a&gt;&#34; and the corresponding &lt;a href=&#34;https://community.simplefoc.com/t/haptic-textures/301&#34;&gt;discussion in the SimpleFOC community&lt;/a&gt;. Seriously, this project wouldn&#39;t exist if not for that video - thank you Jesse!&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This project is licensed under Apache v2 (software, electronics, documentation) and Creative Commons Attribution 4.0 (hardware/mechanical) (see &lt;a href=&#34;https://raw.githubusercontent.com/scottbez1/smartknob/master/LICENSE.txt&#34;&gt;LICENSE.txt&lt;/a&gt; and &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34;&gt;Creative Commons&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2022 Scott Bezek&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;    http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>ethz-asl/kalibr</title>
    <updated>2022-06-24T01:33:51Z</updated>
    <id>tag:github.com,2022-06-24:/ethz-asl/kalibr</id>
    <link href="https://github.com/ethz-asl/kalibr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Kalibr visual-inertial calibration toolbox&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wiki/ethz-asl/kalibr/images/kalibr_small.png&#34; alt=&#34;Kalibr&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ethz-asl/kalibr/actions/workflows/docker_2004_build.yaml&#34;&gt;&lt;img src=&#34;https://github.com/ethz-asl/kalibr/actions/workflows/docker_2004_build.yaml/badge.svg?sanitize=true&#34; alt=&#34;ROS1 Ubuntu 20.04&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ethz-asl/kalibr/actions/workflows/docker_1804_build.yaml&#34;&gt;&lt;img src=&#34;https://github.com/ethz-asl/kalibr/actions/workflows/docker_1804_build.yaml/badge.svg?sanitize=true&#34; alt=&#34;ROS1 Ubuntu 18.04&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ethz-asl/kalibr/actions/workflows/docker_1604_build.yaml&#34;&gt;&lt;img src=&#34;https://github.com/ethz-asl/kalibr/actions/workflows/docker_1604_build.yaml/badge.svg?sanitize=true&#34; alt=&#34;ROS1 Ubuntu 16.04&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Kalibr is a toolbox that solves the following calibration problems:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-Camera Calibration&lt;/strong&gt;: Intrinsic and extrinsic calibration of a camera-systems with non-globally shared overlapping fields of view with support for a wide range of &lt;a href=&#34;https://github.com/ethz-asl/kalibr/wiki/supported-models&#34;&gt;camera models&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Visual-Inertial Calibration (CAM-IMU)&lt;/strong&gt;: Spatial and temporal calibration of an IMU w.r.t a camera-system along with IMU intrinsic parameters&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-Inertial Calibration (IMU-IMU)&lt;/strong&gt;: Spatial and temporal calibration of an IMU w.r.t a base visual-inertial sensing pair along with IMU intrinsic parameters.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Rolling Shutter Camera Calibration&lt;/strong&gt;: Full intrinsic calibration (projection, distortion and shutter parameters) of rolling shutter cameras.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To install follow the &lt;a href=&#34;https://github.com/ethz-asl/kalibr/wiki/installation&#34;&gt;install wiki page&lt;/a&gt; instructions for which you can either use Docker or install from source in a ROS workspace. Please find more information on the &lt;a href=&#34;https://github.com/ethz-asl/kalibr/wiki&#34;&gt;wiki pages&lt;/a&gt; of this repository. For questions or comments, please open an issue on Github.&lt;/p&gt; &#xA;&lt;h2&gt;News / Events&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;May 3, 2022&lt;/strong&gt; - Support for Ubuntu 20.04 along with Docker scripts have been merged into master via PR &lt;a href=&#34;https://github.com/ethz-asl/kalibr/pull/515&#34;&gt;#515&lt;/a&gt;. A large portion was upgrading to Python 3. A special thanks to all the contributors that made this possible. Additionally, contributed fixes for the different validation and visualization scripts have been merged.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Febuary 3, 2020&lt;/strong&gt; - Initial Ubuntu 18.04 support has been merged via PR &lt;a href=&#34;https://github.com/ethz-asl/kalibr/pull/241&#34;&gt;#241&lt;/a&gt;. Additionally, support for inputting an initial guess for focal length can be provided from the cmd-line on failure to initialize them.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;August 15, 2018&lt;/strong&gt; - Double sphere camera models have been contributed to the repository via PR &lt;a href=&#34;https://github.com/ethz-asl/kalibr/pull/210&#34;&gt;#210&lt;/a&gt;. If you are interested you can refer to the &lt;a href=&#34;https://arxiv.org/abs/1807.08957&#34;&gt;paper&lt;/a&gt; for a nice overview of the models in the repository.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;August 25, 2016&lt;/strong&gt; - Rolling shutter camera calibration support was added as a feature via PR &lt;a href=&#34;https://github.com/ethz-asl/kalibr/pull/65&#34;&gt;#65&lt;/a&gt;. The &lt;a href=&#34;https://www.cv-foundation.org/openaccess/content_cvpr_2013/papers/Oth_Rolling_Shutter_Camera_2013_CVPR_paper.pdf&#34;&gt;paper&lt;/a&gt; provides details for those interested.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;May 18, 2016&lt;/strong&gt; - Support for multiple IMU-to-IMU spacial and IMU intrinsic calibration was released.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;June 18, 2014&lt;/strong&gt; - Initial public release of the repository.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Paul Furgale&lt;/li&gt; &#xA; &lt;li&gt;Hannes Sommer&lt;/li&gt; &#xA; &lt;li&gt;J√©r√¥me Maye&lt;/li&gt; &#xA; &lt;li&gt;J√∂rn Rehder&lt;/li&gt; &#xA; &lt;li&gt;Thomas Schneider (&lt;a href=&#34;https://raw.githubusercontent.com/ethz-asl/kalibr/master/thomas.schneider@voliro.com&#34;&gt;email&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Luc Oth&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;p&gt;The calibration approaches used in Kalibr are based on the following papers. Please cite the appropriate papers when using this toolbox or parts of it in an academic publication.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a name=&#34;joern1&#34;&gt;&lt;/a&gt;Joern Rehder, Janosch Nikolic, Thomas Schneider, Timo Hinzmann, Roland Siegwart (2016). Extending kalibr: Calibrating the extrinsics of multiple IMUs and of individual axes. In Proceedings of the IEEE International Conference on Robotics and Automation (ICRA), pp. 4304-4311, Stockholm, Sweden.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a name=&#34;paul1&#34;&gt;&lt;/a&gt;Paul Furgale, Joern Rehder, Roland Siegwart (2013). Unified Temporal and Spatial Calibration for Multi-Sensor Systems. In Proceedings of the IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS), Tokyo, Japan.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a name=&#34;paul2&#34;&gt;&lt;/a&gt;Paul Furgale, T D Barfoot, G Sibley (2012). Continuous-Time Batch Estimation Using Temporal Basis Functions. In Proceedings of the IEEE International Conference on Robotics and Automation (ICRA), pp. 2088‚Äì2095, St. Paul, MN.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a name=&#34;jmaye&#34;&gt;&lt;/a&gt; J. Maye, P. Furgale, R. Siegwart (2013). Self-supervised Calibration for Robotic Systems, In Proc. of the IEEE Intelligent Vehicles Symposium (IVS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a name=&#34;othlu&#34;&gt;&lt;/a&gt;L. Oth, P. Furgale, L. Kneip, R. Siegwart (2013). Rolling Shutter Camera Calibration, In Proc. of the IEEE Computer Vision and Pattern Recognition (CVPR)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;p&gt;This work is supported in part by the European Union&#39;s Seventh Framework Programme (FP7/2007-2013) under grants #269916 (V-Charge), and #610603 (EUROPA2).&lt;/p&gt; &#xA;&lt;h2&gt;License (BSD)&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2014, Paul Furgale, J√©r√¥me Maye and J√∂rn Rehder, Autonomous Systems Lab, ETH Zurich, Switzerland&lt;br&gt; Copyright (c) 2014, Thomas Schneider, Skybotix AG, Switzerland&lt;br&gt; All rights reserved.&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;All advertising materials mentioning features or use of this software must display the following acknowledgement: This product includes software developed by the Autonomous Systems Lab and Skybotix AG.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Neither the name of the Autonomous Systems Lab and Skybotix AG nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE AUTONOMOUS SYSTEMS LAB AND SKYBOTIX AG &#39;&#39;AS IS&#39;&#39; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL the AUTONOMOUS SYSTEMS LAB OR SKYBOTIX AG BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;</summary>
  </entry>
</feed>