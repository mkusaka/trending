<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-05T01:35:15Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>klzgrad/naiveproxy</title>
    <updated>2022-10-05T01:35:15Z</updated>
    <id>tag:github.com,2022-10-05:/klzgrad/naiveproxy</id>
    <link href="https://github.com/klzgrad/naiveproxy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Make a fortune quietly&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NaïveProxy and Cronet &lt;img src=&#34;https://github.com/klzgrad/naiveproxy/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;build workflow&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;NaïveProxy uses Chromium&#39;s network stack to camouflage traffic with strong censorship resistence and low detectablility. Reusing Chrome&#39;s stack also ensures best practices in performance and security.&lt;/p&gt; &#xA;&lt;p&gt;Cronet is a library similarly derived from Chromium&#39;s network stack, but its official releases are limited to Android and iOS. NaïveProxy&#39;s fork of Cronet provides binary releases of its native API, support for multiple platforms, and support for creating Go apps with cgo and the &lt;a href=&#34;https://github.com/SagerNet/cronet-go&#34;&gt;cronet-go&lt;/a&gt; bindings.&lt;/p&gt; &#xA;&lt;p&gt;The following traffic attacks are mitigated by using Chromium&#39;s network stack:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Website fingerprinting / traffic classification: &lt;a href=&#34;https://arxiv.org/abs/1707.00641&#34;&gt;mitigated&lt;/a&gt; by traffic multiplexing in HTTP/2.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1607.01639&#34;&gt;TLS parameter fingerprinting&lt;/a&gt;: defeated by reusing &lt;a href=&#34;https://www.chromium.org/developers/design-documents/network-stack&#34;&gt;Chrome&#39;s network stack&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ensa.fi/active-probing/&#34;&gt;Active probing&lt;/a&gt;: defeated by &lt;em&gt;application fronting&lt;/em&gt;, i.e. hiding proxy servers behind a commonly used frontend server with application-layer routing.&lt;/li&gt; &#xA; &lt;li&gt;Length-based traffic analysis: mitigated by length padding.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;[Browser → Naïve client] ⟶ Censor ⟶ [Frontend → Naïve server] ⟶ Internet&lt;/p&gt; &#xA;&lt;p&gt;NaïveProxy uses Chromium&#39;s network stack to parrot traffic between regular Chrome browsers and standard frontend servers.&lt;/p&gt; &#xA;&lt;p&gt;The frontend server can be any well-known reverse proxy that is able to route HTTP/2 traffic based on HTTP authorization headers, preventing active probing of proxy existence. Known ones include Caddy with its forwardproxy plugin and HAProxy.&lt;/p&gt; &#xA;&lt;p&gt;The Naïve server here works as a forward proxy and a packet length padding layer. Caddy forwardproxy is also a forward proxy but it lacks a padding layer. A &lt;a href=&#34;https://github.com/klzgrad/forwardproxy&#34;&gt;fork&lt;/a&gt; adds the NaïveProxy padding layer to forwardproxy, combining both in one.&lt;/p&gt; &#xA;&lt;h2&gt;Download NaïveProxy and Cronet binaries&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/klzgrad/naiveproxy/releases/latest&#34;&gt;Download here&lt;/a&gt;. Supported platforms include: Windows, Android (with &lt;a href=&#34;https://github.com/SagerNet/SagerNet&#34;&gt;SagerNet&lt;/a&gt;), Linux, Mac OS, and OpenWrt (&lt;a href=&#34;https://github.com/klzgrad/naiveproxy/wiki/OpenWrt-Support&#34;&gt;support status&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Users should always use the latest version to keep signatures identical to Chrome.&lt;/p&gt; &#xA;&lt;p&gt;Build from source: Please see &lt;a href=&#34;https://github.com/klzgrad/naiveproxy/raw/master/.github/workflows/build.yml&#34;&gt;.github/workflows/build.yml&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Server setup&lt;/h2&gt; &#xA;&lt;p&gt;The following describes the naïve fork of forwardproxy setup.&lt;/p&gt; &#xA;&lt;p&gt;Build:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest&#xA;~/go/bin/xcaddy build --with github.com/caddyserver/forwardproxy@caddy2=github.com/klzgrad/forwardproxy@naive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example Caddyfile (replace &lt;code&gt;user&lt;/code&gt; and &lt;code&gt;pass&lt;/code&gt; accordingly):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  order forward_proxy before file_server&#xA;}&#xA;:443, example.com {&#xA;  tls me@example.com&#xA;  forward_proxy {&#xA;    basic_auth user pass&#xA;    hide_ip&#xA;    hide_via&#xA;    probe_resistance&#xA;  }&#xA;  file_server { root /var/www/html }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;:443&lt;/code&gt; must appear first for this Caddyfile to work. For more advanced usage consider using &lt;a href=&#34;https://caddyserver.com/docs/json/&#34;&gt;JSON for Caddy 2&#39;s config&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Run with the Caddyfile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo setcap cap_net_bind_service=+ep ./caddy&#xA;./caddy start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://github.com/klzgrad/naiveproxy/wiki/Run-Caddy-as-a-daemon&#34;&gt;Systemd unit example&lt;/a&gt; and &lt;a href=&#34;https://github.com/klzgrad/naiveproxy/wiki/HAProxy-Setup&#34;&gt;HAProxy setup&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Client setup&lt;/h2&gt; &#xA;&lt;p&gt;Run &lt;code&gt;./naive&lt;/code&gt; with the following &lt;code&gt;config.json&lt;/code&gt; to get a SOCKS5 proxy at local port 1080.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;listen&#34;: &#34;socks://127.0.0.1:1080&#34;,&#xA;  &#34;proxy&#34;: &#34;https://user:pass@example.com&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or &lt;code&gt;quic://user:pass@example.com&lt;/code&gt;, if it works better. See also &lt;a href=&#34;https://github.com/klzgrad/naiveproxy/raw/master/USAGE.txt&#34;&gt;parameter usage&lt;/a&gt; and &lt;a href=&#34;https://github.com/klzgrad/naiveproxy/wiki/Performance-Tuning&#34;&gt;performance tuning&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Notes for downstream&lt;/h2&gt; &#xA;&lt;p&gt;Do not use the master branch to track updates, as it rebases from a new root commit for every new Chrome release. Use stable releases and the associated tags to track new versions, where short release notes are also provided.&lt;/p&gt; &#xA;&lt;h2&gt;Padding protocol, an informal specification&lt;/h2&gt; &#xA;&lt;p&gt;The design of this padding protocol opts for low overhead and easier implementation, in the belief that proliferation of expendable, improvised circumvention protocol designs is a better logistical impediment to censorship research than sophisicated designs.&lt;/p&gt; &#xA;&lt;h3&gt;Proxy payload padding&lt;/h3&gt; &#xA;&lt;p&gt;NaïveProxy proxies bidirectional streams through HTTP/2 (or HTTP/3) CONNECT tunnels. The bidirectional streams operate in a sequence of reads and writes of data. The first &lt;code&gt;kFirstPaddings&lt;/code&gt; (8) reads and writes in a bidirectional stream after the stream is established are padded in this format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;struct PaddedData {&#xA;  uint8_t original_data_size_high;  // original_data_size / 256&#xA;  uint8_t original_data_size_low;  // original_data_size % 256&#xA;  uint8_t padding_size;&#xA;  uint8_t original_data[original_data_size];&#xA;  uint8_t zeros[padding_size];&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;padding_size&lt;/code&gt; is a random integer uniformally distributed in [0, &lt;code&gt;kMaxPaddingSize&lt;/code&gt;] (&lt;code&gt;kMaxPaddingSize&lt;/code&gt;: 255). &lt;code&gt;original_data_size&lt;/code&gt; cannot be greater than 65535, or it has to be split into several reads or writes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;kFirstPaddings&lt;/code&gt; is chosen to be 8 to flatten the packet length distribution spikes formed from common initial handshakes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Common client initial sequence: 1. TLS ClientHello; 2. TLS ChangeCipherSpec, Finished; 3. H2 Magic, SETTINGS, WINDOW_UPDATE; 4. H2 HEADERS GET; 5. H2 SETTINGS ACK.&lt;/li&gt; &#xA; &lt;li&gt;Common server initial sequence: 1. TLS ServerHello, ChangeCipherSpec, ...; 2. TLS Certificate, ...; 3. H2 SETTINGS; 4. H2 WINDOW_UPDATE; 5. H2 SETTINGS ACK; 6. H2 HEADERS 200 OK.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Further reads and writes after &lt;code&gt;kFirstPaddings&lt;/code&gt; are unpadded to avoid performance overhead. Also later packet lengths are usually considered less informative.&lt;/p&gt; &#xA;&lt;h3&gt;H2 RST_STREAM frame padding&lt;/h3&gt; &#xA;&lt;p&gt;In experiments, NaïveProxy tends to send too many RST_STREAM frames per session, an uncommon behavior from regular browsers. To solve this, an END_STREAM DATA frame padded with total length distributed in [48, 72] is prepended to the RST_STREAM frame so it looks like a HEADERS frame. The server often replies to this with a WINDOW_UPDATE because padding is accounted in flow control. Whether this results in a new uncommon behavior is still unclear.&lt;/p&gt; &#xA;&lt;h3&gt;H2 HEADERS frame padding&lt;/h3&gt; &#xA;&lt;p&gt;The CONNECT request and response frames are too short and too uncommon. To make its length similar to realistic HEADERS frames, a &lt;code&gt;padding&lt;/code&gt; header is filled with a sequence of symbols that are not Huffman coded and are pseudo-random enough to avoid being indexed. The length of the padding sequence is randomly distributed in [16, 32] (request) or [30, 62] (response).&lt;/p&gt; &#xA;&lt;h3&gt;Opt-in of padding protocol&lt;/h3&gt; &#xA;&lt;p&gt;NaïveProxy clients should interoperate with any regular HTTP/2 proxies unaware of this padding protocol. NaïveProxy servers (i.e. any proxy server capable of the this padding protocol) should interoperate with any regular HTTP/2 clients (e.g. regular browsers) unaware of this padding protocol.&lt;/p&gt; &#xA;&lt;p&gt;NaïveProxy servers and clients determines whether the counterpart is capable of this padding protocol by the presence of the &lt;code&gt;padding&lt;/code&gt; header in the CONNECT request and response respectively. The padding procotol is enabled only if the &lt;code&gt;padding&lt;/code&gt; header exists.&lt;/p&gt; &#xA;&lt;p&gt;The first CONNECT request to a server cannot use &#34;Fast Open&#34; to send payload before response, because the server&#39;s padding capability has not been determined from the first response and it&#39;s unknown whether to send padded or unpadded payload for Fast Open.&lt;/p&gt; &#xA;&lt;h2&gt;Changes from upstream&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Minimize source code and build size (1% of the original)&lt;/li&gt; &#xA; &lt;li&gt;Disable exceptions and RTTI, except on Mac and Android.&lt;/li&gt; &#xA; &lt;li&gt;Support OpenWrt builds&lt;/li&gt; &#xA; &lt;li&gt;(Android, Linux) Use the builtin verifier instead of the system verifier (drop dependency of NSS on Linux) and read the system trust store from (following Go&#39;s behavior in crypto/x509/root_unix.go and crypto/x509/root_linux.go): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The file in environment variable SSL_CERT_FILE&lt;/li&gt; &#xA;   &lt;li&gt;The first available file of &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;/etc/ssl/certs/ca-certificates.crt (Debian/Ubuntu/Gentoo etc.)&lt;/li&gt; &#xA;     &lt;li&gt;/etc/pki/tls/certs/ca-bundle.crt (Fedora/RHEL 6)&lt;/li&gt; &#xA;     &lt;li&gt;/etc/ssl/ca-bundle.pem (OpenSUSE)&lt;/li&gt; &#xA;     &lt;li&gt;/etc/pki/tls/cacert.pem (OpenELEC)&lt;/li&gt; &#xA;     &lt;li&gt;/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem (CentOS/RHEL 7)&lt;/li&gt; &#xA;     &lt;li&gt;/etc/ssl/cert.pem (Alpine Linux)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Files in the directory of environment variable SSL_CERT_DIR&lt;/li&gt; &#xA;   &lt;li&gt;Files in the first available directory of &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;/etc/ssl/certs (SLES10/SLES11, &lt;a href=&#34;https://golang.org/issue/12139&#34;&gt;https://golang.org/issue/12139&lt;/a&gt;)&lt;/li&gt; &#xA;     &lt;li&gt;/etc/pki/tls/certs (Fedora/RHEL)&lt;/li&gt; &#xA;     &lt;li&gt;/system/etc/security/cacerts (Android)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Handle AIA response in PKCS#7 format&lt;/li&gt; &#xA; &lt;li&gt;Allow higher socket limits for proxies&lt;/li&gt; &#xA; &lt;li&gt;Force tunneling for all sockets&lt;/li&gt; &#xA; &lt;li&gt;Support HTTP/2 and HTTP/3 CONNECT tunnel Fast Open using the &lt;code&gt;fastopen&lt;/code&gt; header&lt;/li&gt; &#xA; &lt;li&gt;Pad RST_STREAM frames&lt;/li&gt; &#xA; &lt;li&gt;(Cronet) Allow passing in &lt;code&gt;-connect-authority&lt;/code&gt; header to override the CONNECT authority field&lt;/li&gt; &#xA; &lt;li&gt;(Cronet) Disable system proxy resolution and use fixed proxy resolution specified by experimental option &lt;code&gt;proxy_server&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;(Cronet) Support setting base::FeatureList by experimental option &lt;code&gt;feature_list&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;(Cronet) Support setting the network isolation key of a stream with &lt;code&gt;-network-isolation-key&lt;/code&gt; header&lt;/li&gt; &#xA; &lt;li&gt;(Cronet) Add certificate net fetcher&lt;/li&gt; &#xA; &lt;li&gt;(Cronet) Support setting socket limits by experimental option &lt;code&gt;socket_limits&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>codemistic/Data-Structures-and-Algorithms</title>
    <updated>2022-10-05T01:35:15Z</updated>
    <id>tag:github.com,2022-10-05:/codemistic/Data-Structures-and-Algorithms</id>
    <link href="https://github.com/codemistic/Data-Structures-and-Algorithms" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A repository to help the open-source community with DSA related contributions&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;centre&#34;&gt; &lt;b&gt;Data Structures and Algorithms&lt;/b&gt; &lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/codemistic/Data-Structures-and-Algorithms/graphs/contributors&#34;&gt;&lt;img alt=&#34;GitHub contributors&#34; src=&#34;https://img.shields.io/github/contributors/codemistic/Data-Structures-and-Algorithms?color=2b9348&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/codemistic/Data-Structures-and-Algorithms/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/codemistic/Data-Structures-and-Algorithms?color=2b9348&#34; alt=&#34;License Badge&#34;&gt;&lt;/a&gt; &lt;a hreaf=&#34;https://github.com/codemistic/Data-Structures-and-Algorithms/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/codemistic/Data-Structures-and-Algorithms?color=pink&amp;amp;logo=github&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/codemistic/Data-Structures-and-Algorithms/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/codemistic/Data-Structures-and-Algorithms?style=social&amp;amp;logo=github&#34; alt=&#34;GitHub PRs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/codemistic/Data-Structures-and-Algorithms/network&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/codemistic/Data-Structures-and-Algorithms?logo=git&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Steps to contribute in this repository&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. Fork this repo&#xA;2. Propose/Update (C++/Java/Python) file of your choice&#xA;3. Add useful code for the open-source community&#xA;4. Make pull request&#xA;5. Now, it time for review (Don&#39;t worry, our team we will review your Pull Request(PR) within 12 hours.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Maintainers (Our Team for HacktoberFest)&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; style=&#34;word-wrap: break-word; width: 200.0; height: 200.0&#34;&gt; &lt;a href=&#34;https://github.com/gantavyamalviya&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/39916680?v=4&#34; width=&#34;200;&#34; style=&#34;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&#34; alt=&#34;Gantavya&#34; Malviya&gt; &lt;br&gt; &lt;sub style=&#34;font-size:14px&#34;&gt;&lt;b&gt;Gantavya Malviya&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; style=&#34;word-wrap: break-word; width: 150.0; height: 150.0&#34;&gt; &lt;a href=&#34;https://github.com/Adarsh-jaiss&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/96974600?v=4&#34; width=&#34;200;&#34; style=&#34;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&#34; alt=&#34;Adarsh&#34; jaiswal&gt; &lt;br&gt; &lt;sub style=&#34;font-size:14px&#34;&gt;&lt;b&gt;Adarsh jaiswal&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Top Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Update in progress....&lt;/p&gt; &#xA;&lt;!-- &lt;table&gt;&#xA;&lt;tr&gt;&#xA;    &lt;td align=&#34;center&#34; style=&#34;word-wrap: break-word; width: 150.0; height: 150.0&#34;&gt;&#xA;        &lt;a href=https://linktr.ee/gantavyamalviya&gt;&#xA;            &lt;img src=https://avatars.githubusercontent.com/u/39916680?v=4 width=&#34;100;&#34;  style=&#34;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&#34; alt=Gantavya Malviya/&gt;&#xA;            &lt;br /&gt;&#xA;            &lt;sub style=&#34;font-size:14px&#34;&gt;&lt;b&gt;Gantavya Malviya&lt;/b&gt;&lt;/sub&gt;&#xA;        &lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;    &lt;td align=&#34;center&#34; style=&#34;word-wrap: break-word; width: 150.0; height: 150.0&#34;&gt;&#xA;        &lt;a href=https://github.com/Adarsh-jaiss&gt;&#xA;            &lt;img src=https://avatars.githubusercontent.com/u/96974600?v=4 width=&#34;100;&#34;  style=&#34;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&#34; alt=Adarsh jaiswal/&gt;&#xA;            &lt;br /&gt;&#xA;            &lt;sub style=&#34;font-size:14px&#34;&gt;&lt;b&gt;Adarsh jaiswal&lt;/b&gt;&lt;/sub&gt;&#xA;        &lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;    &lt;td align=&#34;center&#34; style=&#34;word-wrap: break-word; width: 150.0; height: 150.0&#34;&gt;&#xA;        &lt;a href=https://github.com/weebo-ary&gt;&#xA;            &lt;img src=https://avatars.githubusercontent.com/u/74592979?v=4 width=&#34;100;&#34;  style=&#34;border-radius:50%;align-items:center;justify-content:center;overflow:hidden;padding-top:10px&#34; alt=Aryan Bhardwaj/&gt;&#xA;            &lt;br /&gt;&#xA;            &lt;sub style=&#34;font-size:14px&#34;&gt;&lt;b&gt;Aryan Bhardwaj&lt;/b&gt;&lt;/sub&gt;&#xA;        &lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;    &#xA;&lt;/tr&gt;&#xA;&lt;/table&gt; --&gt; &#xA;&lt;h3&gt;Thanks for visiting!&lt;/h3&gt; &#xA;&lt;h3&gt;Regards,&lt;/h3&gt; &#xA;&lt;h3&gt;Team CodeMistic&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/company/codemistic/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-LinkedIn-blue?style=flat-square&amp;amp;logo=Linkedin&amp;amp;logoColor=white&amp;amp;link=https://www.linkedin.com/company/codemistic/&#34; alt=&#34;Linkedin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.twitter.com/codemistic/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Twitter-%231DA1F2.svg?style=flat-square&amp;amp;logo=twitter&amp;amp;logoColor=white&amp;amp;link=https://www.twitter.com/codemistic/&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.instagram.com/codemistic.in/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Instagram-red?style=flat-square&amp;amp;logo=Instagram&amp;amp;logoColor=white&amp;amp;link=https://www.instagram.com/codemistic.in/&#34; alt=&#34;Instagram&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.github.com/codemistic/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Github-%23100000.svg?&amp;amp;style=flat-square&amp;amp;logo=github&amp;amp;logoColor=white&amp;amp;link=https://www.github.com/codemistic/&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/codemistic&#34;&gt;&lt;img src=&#34;https://komarev.com/ghpvc/?username=codemistic&amp;amp;label=Profile%20views&amp;amp;color=0e75b6&amp;amp;style=flat&#34; alt=&#34;views&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://telegram.me/codemistic&#34;&gt;&lt;img alt=&#34;Telegram for codemistic Group&#34; src=&#34;https://img.shields.io/endpoint?style=for-the-badge&amp;amp;url=https%3A%2F%2Frunkit.io%2Fdamiankrawczyk%2Ftelegram-badge%2Fbranches%2Fmaster%3Furl%3Dhttps%3A%2F%2Ft.me%2Fcodemistic&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>shivaylamba/Hacktoberfest</title>
    <updated>2022-10-05T01:35:15Z</updated>
    <id>tag:github.com,2022-10-05:/shivaylamba/Hacktoberfest</id>
    <link href="https://github.com/shivaylamba/Hacktoberfest" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Make your first PR! ~ A beginner friendly repository made specifically for open source beginners. Add any program under any language (it can be anything from a hello-world program to a complex data structure algorithm) or update the existing one. Just make sure you add the program under the correct language directory. Happy coding&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hacktoberfest Hello World !!!&lt;/h1&gt; &#xA;&lt;p&gt;HacktoberFest Hello World in every other language ever. Just fork it and add a &lt;code&gt;&#39;Hello World&#39;&lt;/code&gt; program to contribute for hacktober fest and send a Pull Request!!&lt;/p&gt; &#xA;&lt;h3&gt;Get yourself free goodies by just writing a hello world!&lt;/h3&gt; &#xA;&lt;p&gt;Say hi to the world in any language of your choice!&lt;/p&gt; &#xA;&lt;h1&gt;What is Hacktoberfest?&lt;/h1&gt; &#xA;&lt;p&gt;Hacktoberfest is a program by Digital Ocean, DEV and Github, where you can easily win a T-Shirt just by making 4 pull requests in the month of October to any open source projects on Github.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://hacktoberfest.digitalocean.com/assets/HF-full-logo-b05d5eb32b3f3ecc9b2240526104cf4da3187b8b61963dd9042fdc2536e4a76c.svg?sanitize=true&#34; alt=&#34;Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Steps to follow &lt;span&gt;📜&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;1. Register for Hacktoberfest&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hacktoberfest.digitalocean.com/&#34;&gt;https://hacktoberfest.digitalocean.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2. Fork it &lt;span&gt;🍴&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You can get your own fork/copy of &lt;a href=&#34;https://github.com/shivaylamba/Hacktoberfest&#34;&gt;Hacktoberfest&lt;/a&gt; by using the &lt;kbd&gt;&lt;b&gt;Fork&lt;/b&gt;&lt;/kbd&gt; button or clicking &lt;a href=&#34;https://github.com/shivaylamba/Hacktoberfest/&#34;&gt;this&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/shivaylamba/Hacktoberfest&#34;&gt;&lt;img src=&#34;https://help.github.com/assets/images/help/repository/fork_button.jpg&#34; alt=&#34;Fork Button&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3. Add a Program in any Language you like &lt;span&gt;🐇&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Once you have forked the repo, add your progam in the language folder in main branch, if there is no language folder, make one, then add into it. You can take a look to the &lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_programming_languages&#34;&gt;Programming Language List&lt;/a&gt; in Wikipedia to create a new one for Hacktoberfest!&lt;/p&gt; &#xA;&lt;h3&gt;4. Ready, Steady, Go... &lt;span&gt;🐢&lt;/span&gt; &lt;span&gt;🐇&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Once you have completed these steps, you are ready to start contributing by checking our &lt;code&gt;Help Wanted&lt;/code&gt; issues and creating &lt;a href=&#34;https://github.com/shivaylamba/Hacktoberfest/pulls&#34;&gt;pull requests&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;5. Give this Project a Star &lt;span&gt;⭐&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;p&gt;If you liked working on this repo, please share this repo as much as you can and star this repo to help as many people in opensource as you can.&lt;/p&gt; &#xA;&lt;h1&gt;Steps to Make Changes and contribute using GIT!&lt;/h1&gt; &#xA;&lt;p&gt;To make your own local copy of the repository you would like to contribute to, let’s first open up a terminal window.&lt;/p&gt; &#xA;&lt;p&gt;We’ll use the &lt;code&gt;git clone&lt;/code&gt; command along with the URL that points to your fork of the repository.&lt;/p&gt; &#xA;&lt;p&gt;This URL will be similar to the URL above, except now it will end with &lt;code&gt;.git&lt;/code&gt; . In the cloud_haiku example above, the URL will look like this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/your-username/Hacktoberfest.git&#34;&gt;https://github.com/your-username/Hacktoberfest.git&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can alternatively copy the URL by using the green “Clone or download” button from your repository page that you just forked from the original repository page. Once you click the button, you’ll be able to copy the URL by clicking the binder button next to the URL:&lt;/p&gt; &#xA;&lt;p&gt;Once we have the URL, we’re ready to clone the repository. To do this, we’ll combine the &lt;code&gt;git clone&lt;/code&gt; command with the repository URL from the command line in a terminal window:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/your-username/Hacktoberfest.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4. Create a New Branch&lt;/h3&gt; &#xA;&lt;p&gt;To create your branch, from your terminal window, change your directory so that you are working in the directory of the repository. Be sure to use the actual name of the repository (i.e. Hacktoberfest) to change into that directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd Hacktoberfest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, we’ll create our new branch with the &lt;code&gt;git branch&lt;/code&gt; command. Make sure you name it descriptively so that others working on the project understand what you are working on.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git branch new-branch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now that our new branch is created, we can switch to make sure that we are working on that branch by using the git checkout command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git checkout new-branch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you enter the git checkout command, you will receive the following output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Output:&#xA;&#xA;Switched to branch &#39;new-branch&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;At this point, you can now modify existing files or add new files to the project on your own branch.&lt;/p&gt; &#xA;&lt;h4&gt;Make Changes Locally&lt;/h4&gt; &#xA;&lt;p&gt;Once you have modified existing files or added new files to the project, you can add them to your local repository, which you can do with the &lt;code&gt;git add&lt;/code&gt; command. Let’s add the &lt;code&gt;-A&lt;/code&gt; flag to add all changes that we have made:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git add -A&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git add .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, we’ll want to record the changes that we made to the repository with the git commit command.&lt;/p&gt; &#xA;&lt;p&gt;The commit message is an important aspect of your code contribution; it helps the other contributors fully understand the change you have made, why you made it, and how significant it is. Additionally, commit messages provide a historical record of the changes for the project at large, helping future contributors along the way.&lt;/p&gt; &#xA;&lt;p&gt;If you have a very short message, you can record that with the &lt;code&gt;-m&lt;/code&gt; flag and the message in quotes:&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git commit -m &#34;Updated Readme.md&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;At this point you can use the &lt;code&gt;git push&lt;/code&gt; command to push the changes to the current branch of your forked repository:&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git push --set-upstream origin new-branch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;5. Update Local Repository&lt;/h3&gt; &#xA;&lt;p&gt;While you are working on a project alongside other contributors, it is important for you to keep your local repository up-to-date with the project as you don’t want to make a pull request for code that will cause conflicts. To keep your local copy of the code base updated, you’ll need to sync changes.&lt;/p&gt; &#xA;&lt;p&gt;We’ll first go over configuring a remote for the fork, then syncing the fork.&lt;/p&gt; &#xA;&lt;h3&gt;6. Configure a Remote for the Fork&lt;/h3&gt; &#xA;&lt;p&gt;Next, you’ll have to specify a new remote upstream repository for us to sync with the fork. This will be the original repository that you forked from. You’ll have to do this with the &lt;code&gt;git remote add&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git remote add upstream https://github.com/shivaylamba/Hacktoberfest.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this example, &lt;code&gt;upstream&lt;/code&gt; is the shortname we have supplied for the remote repository since in terms of Git, “upstream” refers to the repository that you cloned from. If you want to add a remote pointer to the repository of a collaborator, you may want to provide that collaborator’s username or a shortened nickname for the shortname.&lt;/p&gt; &#xA;&lt;h3&gt;7. Sync the Fork&lt;/h3&gt; &#xA;&lt;p&gt;Once you have configured a remote that references the upstream and original repository on GitHub, you are ready to sync your fork of the repository to keep it up-to-date.&lt;/p&gt; &#xA;&lt;p&gt;To sync your fork, from the directory of your local repository in a terminal window, you’ll have to use the &lt;code&gt;git fetch&lt;/code&gt; command to fetch the branches along with their respective commits from the upstream repository. Since you used the shortname “upstream” to refer to the upstream repository, you’ll have to pass that to the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git fetch upstream&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Switch to the local master branch of our repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git checkout master&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You’ll now have to merge any changes that were made in the original repository’s master branch, that you will access through your local upstream/master branch, with your local master branch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git merge upstream/master&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;8. Create Pull Request&lt;/h3&gt; &#xA;&lt;p&gt;At this point, you are ready to make a pull request to the original repository.&lt;/p&gt; &#xA;&lt;p&gt;You should navigate to your forked repository, and press the “New pull request” button on your left-hand side of the page.&lt;/p&gt; &#xA;&lt;h1&gt;Hurray!! You just got closer to complete your hacktoberfest challenge.&lt;/h1&gt; &#xA;&lt;p&gt;You can add references to some cool open source projects below:&lt;/p&gt; &#xA;&lt;h3&gt;1. &lt;a href=&#34;https://github.com/zulip&#34;&gt;Zulip&lt;/a&gt; -&lt;/h3&gt; &#xA;&lt;p&gt;Zulip is 100% open source software, built by a vibrant community of hundreds of developers from all around the world.&lt;/p&gt; &#xA;&lt;h3&gt;2. &lt;a href=&#34;https://github.com/fossasia&#34;&gt;FOSSASIA&lt;/a&gt; -&lt;/h3&gt; &#xA;&lt;p&gt;Developing Open Source Software and Hardware to improve people&#39;s lives.&lt;/p&gt; &#xA;&lt;h3&gt;3. &lt;a href=&#34;https://github.com/mozilla&#34;&gt;MOZILLA&lt;/a&gt; -&lt;/h3&gt; &#xA;&lt;p&gt;This technology could fall into the right hands. Mozilla has 30 repositories available. Follow their code on GitHub.&lt;/p&gt; &#xA;&lt;h3&gt;4. &lt;a href=&#34;https://github.com/freeCodeCamp/freeCodeCamp&#34;&gt;Free code camp&lt;/a&gt; -&lt;/h3&gt; &#xA;&lt;p&gt;Learn to code for free with millions of other people round the world.&lt;/p&gt; &#xA;&lt;h3&gt;5. &lt;a href=&#34;https://github.com/kvaluruk/Data-Structures-And-Algorithms-Hacktoberfest18&#34;&gt;Data Structures And Algorithms Hacktoberfest18&lt;/a&gt; -&lt;/h3&gt; &#xA;&lt;p&gt;List of Data Structures and Algorithms&lt;/p&gt; &#xA;&lt;h3&gt;6. &lt;a href=&#34;https://habitica.com/static/home&#34;&gt;Habitica&lt;/a&gt; -&lt;/h3&gt; &#xA;&lt;p&gt;App that lets users gamify real-life choices and activity with in-app rewards .&lt;/p&gt; &#xA;&lt;p&gt;Learn to code for free with millions of other people around the world.&lt;/p&gt; &#xA;&lt;h3&gt;7. &lt;a href=&#34;https://github.com/facebook/react&#34;&gt;REACT &lt;/a&gt; -&lt;/h3&gt; &#xA;&lt;p&gt;A declarative, efficient, and flexible JavaScript library for building user interfaces. Plenty resource to learn. (official)&lt;/p&gt; &#xA;&lt;h3&gt;8. &lt;a href=&#34;https://github.com/electron/electron&#34;&gt;ELECTRON &lt;/a&gt; -&lt;/h3&gt; &#xA;&lt;p&gt;Build cross-platform desktop apps with JavaScript, HTML, and CSS. Plenty Resource to learn and contribute. (official)&lt;/p&gt; &#xA;&lt;h3&gt;9. &lt;a href=&#34;https://github.com/codyogden/killedbygoogle&#34;&gt;Killed by Google&lt;/a&gt; -&lt;/h3&gt; &#xA;&lt;p&gt;A tribute and log of beloved products and services killed by Google. This is a fun open source project that encourages contributors for Hacktoberfest!&lt;/p&gt; &#xA;&lt;h3&gt;10. &lt;a href=&#34;https://issuehub.io&#34;&gt;issuehub.io&lt;/a&gt; -&lt;/h3&gt; &#xA;&lt;p&gt;A website which helps you find projects/issues based on your required language or issue labels.&lt;/p&gt; &#xA;&lt;h3&gt;11. &lt;a href=&#34;https://www.codetriage.com/&#34;&gt;Code Triage&lt;/a&gt; -&lt;/h3&gt; &#xA;&lt;p&gt;Another useful tool for searching issues to fix&lt;/p&gt; &#xA;&lt;h3&gt;12. &lt;a href=&#34;https://up-for-grabs.net/&#34;&gt;Up For Grabs&lt;/a&gt; - &lt;/h3&gt; &#xA;&lt;p&gt;List of projects with issues that can be resolved by beginners&lt;/p&gt; &#xA;&lt;h3&gt;13. &lt;a href=&#34;https://www.firsttimersonly.com/&#34;&gt;First Timers Only&lt;/a&gt; -&lt;/h3&gt; &#xA;&lt;p&gt;A list of issues that are labelled “first-timers-only”.&lt;/p&gt; &#xA;&lt;h3&gt;14. &lt;a href=&#34;https://github.com/MunGell/awesome-for-beginners&#34;&gt;Awesome First Timers PR&lt;/a&gt; -&lt;/h3&gt; &#xA;&lt;p&gt;A list of awesome beginners-friendly projects.&lt;/p&gt; &#xA;&lt;h3&gt;15. &lt;a href=&#34;https://github.com/tensorflow/tensorflow&#34;&gt;Tensor Flow&lt;/a&gt; -&lt;/h3&gt; &#xA;&lt;p&gt;TensorFlow is an open-source software library for dataflow programming across a range of tasks. It is a symbolic math library, and is also used for machine learning applications such as neural networks.&lt;/p&gt; &#xA;&lt;h3&gt;16. &lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt; -&lt;/h3&gt; &#xA;&lt;p&gt;An open source container system for automating deployment , scaling and management of containers application.&lt;/p&gt; &#xA;&lt;h3&gt;17. &lt;a href=&#34;https://duckduckgo.com/&#34;&gt;DuckDuckGo&lt;/a&gt; -&lt;/h3&gt; &#xA;&lt;p&gt;DuckDuckGo is a privacy-conscious search engine that doesn&#39;t track users. Instant Answers is a feature that provides answers without needing to open up a website..&lt;/p&gt; &#xA;&lt;h3&gt;18. &lt;a href=&#34;https://www.polymer-project.org/&#34;&gt;Polymer&lt;/a&gt; -&lt;/h3&gt; &#xA;&lt;p&gt;An open-source JavaScript library for creating web components which are then used to build web pages and apps, Polymer is currently being developed by Google developers and contributors on GitHub. Central to a wide range of Google services and websites, including YouTube, Google Earth and Google Sites, Polymer received an update in January (Polymer 2.4) which is paving the way for 3.0 and TypeScript support.&lt;/p&gt; &#xA;&lt;h3&gt;19. &lt;a href=&#34;https://www.blender.org/&#34;&gt;Blender&lt;/a&gt; -&lt;/h3&gt; &#xA;&lt;p&gt;Blender is the free and open source 3D creation suite. It supports the entirety of the 3D pipeline—modeling, rigging, animation, simulation, rendering, compositing and motion tracking, even video editing and game creation.&lt;/p&gt; &#xA;&lt;h3&gt;20. &lt;a href=&#34;http://www.sagemath.org/&#34;&gt;sagemath&lt;/a&gt; -&lt;/h3&gt; &#xA;&lt;p&gt;SageMath is a computer algebra system with features covering many aspects of mathematics, including algebra, combinatorics, graph theory, numerical analysis, number theory, calculus and statistics. It builds on top of many existing open-source packages: NumPy, SciPy, matplotlib, Sympy, Maxima, GAP, FLINT, R and many more.&lt;/p&gt; &#xA;&lt;h3&gt;21. &lt;a href=&#34;https://github.com/material-ocean/Material-Ocean&#34;&gt;Material Ocean&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Material Ocean is a theme for various Applications based on a blueish ocean color scheme&lt;/p&gt; &#xA;&lt;h3&gt;22. &lt;a href=&#34;https://github.com/JHero23/ruby-sinatra-starter-app&#34;&gt;Ruby on Sinatra Starter App&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;A starter project for Ruby On Sinatra web app projects to introduce programmers to Ruby programming. &lt;a href=&#34;https://ruby-sinatra-starter-app.herokuapp.com&#34;&gt;Link to Live Application HERE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;23. &lt;a href=&#34;https://github.com/flutter/flutter&#34;&gt;Flutter&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Flutter is Google’s UI toolkit for building beautiful, natively compiled applications for mobile, web, and desktop from a single codebase.&lt;/p&gt; &#xA;&lt;h3&gt;24. &lt;a href=&#34;https://github.com/grab/front-end-guide&#34;&gt;Grab Front End Guide &lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;An open source Study guide and introduction to the modern front end stack created by Grab.&lt;/p&gt; &#xA;&lt;h3&gt;25. &lt;a href=&#34;https://https://github.com/LibreOffice/core&#34;&gt;LibreOffice&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;LibreOffice is a free and open-source office suite, a project of The Document Foundation. LibreOffice uses the international ISO/IEC standard OpenDocument file format (ODF).&lt;/p&gt; &#xA;&lt;h3&gt;26. &lt;a href=&#34;https://r0ule77e.bolehju.ga&#34;&gt;Roulette Canvas Game&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The Roulette game was to control the animation ball stop number. This project was write and using library PixiJs. This is just for fun.&lt;/p&gt; &#xA;&lt;h3&gt;25. &lt;a href=&#34;https://uber.github.io/#/&#34;&gt;Uber Open Source&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Uber open source project info&lt;/p&gt; &#xA;&lt;h3&gt;26. &lt;a href=&#34;https://webmaker.app/&#34;&gt;Web Maker&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;A blazing fast &amp;amp; offline web playground in your browser.&lt;/p&gt; &#xA;&lt;h3&gt;11. &lt;a href=&#34;https://github.com/alwibastomi/ProjekAwal&#34;&gt;Initial Project&lt;/a&gt;&lt;/h3&gt;</summary>
  </entry>
</feed>