<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-29T01:29:13Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>DiscoGrad/DiscoGrad</title>
    <updated>2024-05-29T01:29:13Z</updated>
    <id>tag:github.com,2024-05-29:/DiscoGrad/DiscoGrad</id>
    <link href="https://github.com/DiscoGrad/DiscoGrad" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DiscoGrad - automatically differentiate across conditional branches in C++ programs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DiscoGrad&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Trying to do gradient descent using automatic differentiation over branchy programs? Or to combine them with neural networks for end-to-end training? Then this might be interesting to you.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Automatic Differentiation (AD) is a popular method to obtain the gradients of computer programs, which are extremely useful for adjusting program parameters using gradient descent to solve optimization, control, and inference problems. Unfortunately, AD alone often yields unhelpful (zero-valued and/or biased) gradients for programs involving both parameter-dependent branching control flow such as if-else statements and randomness, including various types of simulations.&lt;/p&gt; &#xA;&lt;p&gt;DiscoGrad automatically transforms C++ programs to a version that efficiently calculates smoothed gradients &lt;em&gt;across&lt;/em&gt; branches. Smoothing via external perturbations is supported, but is not required if the target program itself involves randomness. DiscoGrad includes several gradient estimation backends as well as the possibility to integrate neural networks via Torch. The tool supports basic C++ constructs, but is still a research prototype.&lt;/p&gt; &#xA;&lt;p&gt;The repository includes a number of sample applications from domains such as transportation, crowd management, and epidemiology.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/philipp-andelfinger/DiscoGrad/assets/59713878/6419fccf-1e20-4a2c-8fef-854197824b15&#34;&gt;DiscoGrad Use Cases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/philipp-andelfinger/DiscoGrad/assets/59713878/4fc691f2-d760-441a-8155-0dc266d5853a&#34;&gt;Illustration of DiscoGrad&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üíæ Installation&lt;/h2&gt; &#xA;&lt;p&gt;Tested on &lt;code&gt;Ubuntu 22.04.4 LTS&lt;/code&gt;, &lt;code&gt;Arch Linux&lt;/code&gt; and &lt;code&gt;Fedora 38 Workstation&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To compile the transformation code, you need the following packages (or their analogues provided by your Linux distribution):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;clang&lt;/code&gt;, &lt;code&gt;clang-devel&lt;/code&gt; (version 13 or higher)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;llvm&lt;/code&gt;, &lt;code&gt;llvm-devel&lt;/code&gt; (version 13 or higher)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd transformation&#xA;cmake .&#xA;make -j&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üöÄ Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;You can use the code contained in &lt;code&gt;programs/hello_world/hello_world.cpp&lt;/code&gt; as a quickstart template and reference. The &lt;code&gt;programs&lt;/code&gt; folder also contains a number of more complex programs.&lt;/p&gt; &#xA;&lt;p&gt;To compile the hello world example, which implements the Heaviside step function as shown in the video above:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;discograd$ ./smooth_compile programs/hello_world/hello_world.cpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;smooth_compile&lt;/code&gt; is a shell script that invokes the commands for transforming and compiling the code for the different backends. Here, it will create a binary for each backend in the &lt;code&gt;programs/hello_world&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;AD on the original (crisp) C++ program yields a 0 derivative:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;DiscoGrad$ echo 0.0 | ./programs/hello_world/hello_world_crisp_ad --var 0.0 --ns 1&#xA;expectation: 1&#xA;derivative: 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Our estimator DiscoGrad Gradient Oracle (DGO) calculates a non-zero derivative useful for optimization:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;DiscoGrad$ echo 0.0 | ./programs/hello_world/hello_world_dgo --var 0.25 --ns 1000&#xA;expectation: 0.527&#xA;derivative: -0.7939109206&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can run &lt;code&gt;./programs/hello_world/hello_world_{crisp,dgo,pgo,reinforce} -h&lt;/code&gt; for CLI usage information.&lt;/p&gt; &#xA;&lt;h2&gt;‚ùîUsage&lt;/h2&gt; &#xA;&lt;h3&gt;Use of the DiscoGrad API&lt;/h3&gt; &#xA;&lt;p&gt;The use of our API requires some boilerplate, as detailed below. Please refer to the &lt;code&gt;programs&lt;/code&gt; folder for some example usages.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;At the top of your source file, define how many inputs your program has and include the discograd header (in this order).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;const int num_inputs = 1;&#xA;#include &#34;discograd.hpp&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Implement your entry function, by prepending &lt;code&gt;_DiscoGrad_&lt;/code&gt; to the name and using the differentiable type &lt;code&gt;adouble&lt;/code&gt; as return value. An object of the type &lt;code&gt;aparams&lt;/code&gt; holds the program inputs. As in traditional AD libraries, the type &lt;code&gt;adouble&lt;/code&gt; represents a double precision floating point variable. In addition to differentiating through adoubles, DiscoGrad allows branching on (functions of) adoubles and generates gradients that reflect the dependence of the branch taken on the condition.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;adouble _DiscoGrad_my_function(DiscoGrad&amp;amp; _dg, aparams p) {&#xA;  adouble inputs[num_inputs];&#xA;  for (int i = 0; i &amp;lt; num_inputs; i++)&#xA;    inputs[i] = p[i];&#xA;  adouble output = 0.0;&#xA;  ... // calculations and conditional branching based on inputs&#xA;  return output;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;In the main function, create an instance of the &lt;code&gt;DiscoGrad&lt;/code&gt; class and a wrapper for your smooth function. Call &lt;code&gt;.estimate(func)&lt;/code&gt; on the DiscoGrad instance to invoke the backend-specific gradient estimator.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;int main(int argc, char** argv) {&#xA;  // interface with backend and provide the CLI arguments, such as the variance&#xA;  DiscoGrad&amp;lt;num_inputs&amp;gt; dg(argc, argv);&#xA;  // create a wrapper for the smooth function&#xA;  DiscoGradFunc&amp;lt;num_inputs&amp;gt; func(_DiscoGrad_my_function);  &#xA;  // call the estimate function of the backend (chosen during compilation)&#xA;  dg.estimate(func);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Compilation&lt;/h3&gt; &#xA;&lt;p&gt;To compile a program in the folder &lt;code&gt;programs/my_program/my_program.cpp&lt;/code&gt; with every backend:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;discograd$ ./smooth_compile programs/my_program/my_program.cpp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Custom compiler or linker flags can be set in the &lt;code&gt;smooth_compile&lt;/code&gt; script.&lt;/p&gt; &#xA;&lt;p&gt;You can find a list of backends below.&lt;/p&gt; &#xA;&lt;h3&gt;Executing a Smoothed Program&lt;/h3&gt; &#xA;&lt;p&gt;To run a smoothed program and compute its gradient, simply invoke the binary with the desired CLI arguments, for example&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;discograd$ ./programs/my_program/my_program_dgo --var 0.25 --ns 100&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;if you want to use the DGO backend. Parameters are entered via &lt;code&gt;stdin&lt;/code&gt;, for example by piping the output of &lt;code&gt;echo&lt;/code&gt; as shown in the quickstart guide. The output to &lt;code&gt;stdout&lt;/code&gt; after &lt;code&gt;expectation&lt;/code&gt; and &lt;code&gt;derivative&lt;/code&gt; will provide the smoothed output and partial derivatives.&lt;/p&gt; &#xA;&lt;h2&gt;Backends&lt;/h2&gt; &#xA;&lt;p&gt;This is an overview of all the current backends. More detailed explanations can be found in the following sections.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;ExecutableSuffix&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;crisp&lt;/td&gt; &#xA;   &lt;td&gt;The original program with optional input perturbations and AD&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dgo&lt;/td&gt; &#xA;   &lt;td&gt;DiscoGrad Gradient Oracle, DiscoGrad&#39;s own gradient estimator based on automatic differentiation and Monte Carlo sampling.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pgo&lt;/td&gt; &#xA;   &lt;td&gt;Polyak&#39;s Gradient-Free Oracle presented by Polyak and further analysed by Nesterov et al.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;reinforce&lt;/td&gt; &#xA;   &lt;td&gt;Application of REINFORCE to programs with artificially introduced Gaussian randomness.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Additionally, an implementation of gradient estimation via Chaudhuri and Solar-Lezama&#39;s method of Smooth Interpretation can be found in the branch &#39;discograd_ieee_access&#39;.&lt;/p&gt; &#xA;&lt;p&gt;Note: When all branches occur directly on discrete random variables drawn from distributions of known shape, &lt;a href=&#34;https://github.com/gaurav-arya/StochasticAD.jl&#34;&gt;StochasticAD&lt;/a&gt; may be a well-suited alternative to the above estimators.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chaudhuri, Swarat, and Armando Solar-Lezama. &#34;Smooth interpretation.&#34; ACM Sigplan Notices 45.6 (2010): 279-291.&lt;/li&gt; &#xA; &lt;li&gt;Boris T Polyak. &#34;Introduction to optimization.&#34; 1987. (Chapter 3.4.2)&lt;/li&gt; &#xA; &lt;li&gt;Nesterov, Yurii, and Vladimir Spokoiny. &#34;Random gradient-free minimization of convex functions.&#34; Foundations of Computational Mathematics 17 (2017): 527-566.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚öñÔ∏è License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License. The DiscoGrad tool includes some parts from third parties, which are licensed as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;backend/ankerl/unordered_dense.h&lt;/code&gt;, MIT license&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;backend/genann.hpp&lt;/code&gt;, zlib license&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;backend/discograd_gradient_oracle/kdepp.hpp&lt;/code&gt;, MIT license&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;backend/args.{h,cpp}&lt;/code&gt;, MIT license&lt;/li&gt; &#xA; &lt;li&gt;Doxygen Awesome theme, MIT license&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìÑ Cite&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{kreikemeyer2023smoothing,&#xA;     title={Smoothing Methods for Automatic Differentiation Across Conditional Branches},&#xA;     author={Kreikemeyer, Justin N. and Andelfinger, Philipp},&#xA;     journal={IEEE Access},&#xA;     year={2023},&#xA;     publisher={IEEE},&#xA;     volume={11},&#xA;     pages={143190-143211},&#xA;     doi={10.1109/ACCESS.2023.3342136}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;An alternative derivation of the DGO estimator can be found in:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{andelfinger2024automatic,&#xA;      title={Automatic Gradient Estimation for Calibrating Crowd Models with Discrete Decision Making}, &#xA;      author={Philipp Andelfinger and Justin N. Kreikemeyer},&#xA;      year={2024},&#xA;      eprint={2404.04678},&#xA;      archivePrefix={arXiv},&#xA;      primaryClass={cs.LG}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>tnodir/fort</title>
    <updated>2024-05-29T01:29:13Z</updated>
    <id>tag:github.com,2024-05-29:/tnodir/fort</id>
    <link href="https://github.com/tnodir/fort" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fort Firewall for Windows&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/tnodir/fort&#34;&gt; &lt;img src=&#34;https://github.com/tnodir/fort/raw/master/src/ui/icons/fort-96.png&#34; alt=&#34;Icon&#34; height=&#34;96&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;Fort Firewall&lt;/h1&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tnodir/fort/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/tnodir/fort.svg?sanitize=true&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tnodir/fort/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/tnodir/fort/total.svg?maxAge=86400&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crowdin.com/project/fort-firewall&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/fort-firewall/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codescene.io/projects/5344&#34;&gt;&lt;img src=&#34;https://codescene.io/projects/5344/status-badges/code-health&#34; alt=&#34;CodeScene Code Health&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/summary/new_code?id=tnodir_fort&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=tnodir_fort&amp;amp;metric=alert_status&#34; alt=&#34;Quality Gate Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Fort is an effective firewall designed for Windows 7 and later versions, offering both simplicity and robustness.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/tnodir/fort/assets/77551811/53e25cb0-a296-46d9-8321-3fb0aae77b7f&#34; alt=&#34;Screenshot-v3.10.6&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Filter by network addresses, application groups and more&lt;/li&gt; &#xA; &lt;li&gt;Filter by &lt;code&gt;SvcHost.exe&lt;/code&gt; service names&lt;/li&gt; &#xA; &lt;li&gt;Support for wildcards in application path names&lt;/li&gt; &#xA; &lt;li&gt;Speed limit application groups&lt;/li&gt; &#xA; &lt;li&gt;Blocklists via &#34;Zones&#34;&lt;/li&gt; &#xA; &lt;li&gt;Saves traffic statistics&lt;/li&gt; &#xA; &lt;li&gt;Graphical display of the bandwidth&lt;/li&gt; &#xA; &lt;li&gt;Has its own kernel driver based on the Windows Filtering Platform (WFP)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/tnodir/fort/wiki/User-Guide#system-requirements&#34;&gt;System Requirements&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;Which installer should I download?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;for &lt;strong&gt;Windows 10 1809&lt;/strong&gt; or newer:&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tnodir/fort/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/x86_64-green?label=FortFirewall-x.x.x-windows10-x86_64.exe&#34; alt=&#34;x86_64@latest&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;for &lt;strong&gt;Windows 7&lt;/strong&gt; or newer (e.g. Windows 10 1703):&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tnodir/fort/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/x86-green?label=FortFirewall-x.x.x-windows-x86.exe&#34; alt=&#34;x86@latest&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Wiki&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tnodir/fort/wiki/User-Guide&#34;&gt;User Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tnodir/fort/wiki/Functionality-overview&#34;&gt;Functionality overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tnodir/fort/wiki/FAQ&#34;&gt;Frequently Asked Questions (FAQ)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tnodir/fort/wiki/Building&#34;&gt;Building&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚≠ê Star it on GitHub, ‚ù§ Rate on &lt;a href=&#34;https://alternativeto.net/software/fort-firewall/about/&#34;&gt;AlternativeTo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üêû &lt;a href=&#34;https://github.com/tnodir/fort/issues&#34;&gt;Report bugs&lt;/a&gt;, ‚ö° &lt;a href=&#34;https://github.com/tnodir/fort/discussions&#34;&gt;Discuss ideas&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Sponsoring&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/tnodir&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/GitHub%20Sponsors-blue?logo=GitHub%20Sponsors&amp;amp;style=social&#34; alt=&#34;github&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.patreon.com/bePatron?u=9349286&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Patreon%20Patrons-blue?logo=Patreon&amp;amp;style=social&#34; alt=&#34;patreon&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;SAST Tools&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pvs-studio.com/en/pvs-studio/?utm_source=github&amp;amp;utm_medium=organic&amp;amp;utm_campaign=open_source&#34;&gt;PVS-Studio&lt;/a&gt; - static analyzer for C, C++, C#, and Java code.&lt;/p&gt; &#xA;&lt;h2&gt;Attribution&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.fatcow.com/free-icons&#34;&gt;FatCow Free Icons&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;-- Nodir Temirkhodjaev, &lt;a href=&#34;mailto:nodir.temir@gmail.com&#34;&gt;nodir.temir@gmail.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google-ai-edge/mediapipe</title>
    <updated>2024-05-29T01:29:13Z</updated>
    <id>tag:github.com,2024-05-29:/google-ai-edge/mediapipe</id>
    <link href="https://github.com/google-ai-edge/mediapipe" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cross-platform, customizable ML solutions for live and streaming media.&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; &#xA;&lt;h2&gt;layout: forward target: &lt;a href=&#34;https://developers.google.com/mediapipe&#34;&gt;https://developers.google.com/mediapipe&lt;/a&gt; title: Home nav_order: 1&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Attention:&lt;/strong&gt; &lt;em&gt;We have moved to &lt;a href=&#34;https://developers.google.com/mediapipe&#34;&gt;https://developers.google.com/mediapipe&lt;/a&gt; as the primary developer documentation site for MediaPipe as of April 3, 2023.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://developers.google.com/static/mediapipe/images/home/hero_01_1920.png&#34; alt=&#34;MediaPipe&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Attention&lt;/strong&gt;: MediaPipe Solutions Preview is an early release. &lt;a href=&#34;https://developers.google.com/mediapipe/solutions/about#notice&#34;&gt;Learn more&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;On-device machine learning for everyone&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Delight your customers with innovative machine learning features. MediaPipe contains everything that you need to customize and deploy to mobile (Android, iOS), web, desktop, edge devices, and IoT, effortlessly.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://goo.gle/mediapipe-studio&#34;&gt;See demos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/mediapipe/solutions&#34;&gt;Learn more&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;p&gt;You can get started with MediaPipe Solutions by by checking out any of the developer guides for &lt;a href=&#34;https://developers.google.com/mediapipe/solutions/vision/object_detector&#34;&gt;vision&lt;/a&gt;, &lt;a href=&#34;https://developers.google.com/mediapipe/solutions/text/text_classifier&#34;&gt;text&lt;/a&gt;, and &lt;a href=&#34;https://developers.google.com/mediapipe/solutions/audio/audio_classifier&#34;&gt;audio&lt;/a&gt; tasks. If you need help setting up a development environment for use with MediaPipe Tasks, check out the setup guides for &lt;a href=&#34;https://developers.google.com/mediapipe/solutions/setup_android&#34;&gt;Android&lt;/a&gt;, &lt;a href=&#34;https://developers.google.com/mediapipe/solutions/setup_web&#34;&gt;web apps&lt;/a&gt;, and &lt;a href=&#34;https://developers.google.com/mediapipe/solutions/setup_python&#34;&gt;Python&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Solutions&lt;/h2&gt; &#xA;&lt;p&gt;MediaPipe Solutions provides a suite of libraries and tools for you to quickly apply artificial intelligence (AI) and machine learning (ML) techniques in your applications. You can plug these solutions into your applications immediately, customize them to your needs, and use them across multiple development platforms. MediaPipe Solutions is part of the MediaPipe &lt;a href=&#34;https://github.com/google/mediapipe&#34;&gt;open source project&lt;/a&gt;, so you can further customize the solutions code to meet your application needs.&lt;/p&gt; &#xA;&lt;p&gt;These libraries and resources provide the core functionality for each MediaPipe Solution:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;MediaPipe Tasks&lt;/strong&gt;: Cross-platform APIs and libraries for deploying solutions. &lt;a href=&#34;https://developers.google.com/mediapipe/solutions/tasks&#34;&gt;Learn more&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MediaPipe models&lt;/strong&gt;: Pre-trained, ready-to-run models for use with each solution.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These tools let you customize and evaluate solutions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;MediaPipe Model Maker&lt;/strong&gt;: Customize models for solutions with your data. &lt;a href=&#34;https://developers.google.com/mediapipe/solutions/model_maker&#34;&gt;Learn more&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MediaPipe Studio&lt;/strong&gt;: Visualize, evaluate, and benchmark solutions in your browser. &lt;a href=&#34;https://developers.google.com/mediapipe/solutions/studio&#34;&gt;Learn more&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Legacy solutions&lt;/h3&gt; &#xA;&lt;p&gt;We have ended support for &lt;a href=&#34;https://developers.google.com/mediapipe/solutions/guide#legacy&#34;&gt;these MediaPipe Legacy Solutions&lt;/a&gt; as of March 1, 2023. All other MediaPipe Legacy Solutions will be upgraded to a new MediaPipe Solution. See the &lt;a href=&#34;https://developers.google.com/mediapipe/solutions/guide#legacy&#34;&gt;Solutions guide&lt;/a&gt; for details. The &lt;a href=&#34;https://github.com/google/mediapipe/tree/master/mediapipe&#34;&gt;code repository&lt;/a&gt; and prebuilt binaries for all MediaPipe Legacy Solutions will continue to be provided on an as-is basis.&lt;/p&gt; &#xA;&lt;p&gt;For more on the legacy solutions, see the &lt;a href=&#34;https://github.com/google/mediapipe/tree/master/docs/solutions&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Framework&lt;/h2&gt; &#xA;&lt;p&gt;To start using MediaPipe Framework, &lt;a href=&#34;https://developers.google.com/mediapipe/framework/getting_started/install&#34;&gt;install MediaPipe Framework&lt;/a&gt; and start building example applications in C++, Android, and iOS.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developers.google.com/mediapipe/framework&#34;&gt;MediaPipe Framework&lt;/a&gt; is the low-level component used to build efficient on-device machine learning pipelines, similar to the premade MediaPipe Solutions.&lt;/p&gt; &#xA;&lt;p&gt;Before using MediaPipe Framework, familiarize yourself with the following key &lt;a href=&#34;https://developers.google.com/mediapipe/framework/framework_concepts/overview.md&#34;&gt;Framework concepts&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/mediapipe/framework/framework_concepts/packets.md&#34;&gt;Packets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/mediapipe/framework/framework_concepts/graphs.md&#34;&gt;Graphs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.google.com/mediapipe/framework/framework_concepts/calculators.md&#34;&gt;Calculators&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mediapipe.page.link/joinslack&#34;&gt;Slack community&lt;/a&gt; for MediaPipe users.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/mediapipe&#34;&gt;Discuss&lt;/a&gt; - General community discussion around MediaPipe.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mediapipe.page.link/awesome-mediapipe&#34;&gt;Awesome MediaPipe&lt;/a&gt; - A curated list of awesome MediaPipe related frameworks, libraries and software.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions. Please follow these &lt;a href=&#34;https://github.com/google/mediapipe/raw/master/CONTRIBUTING.md&#34;&gt;guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We use GitHub issues for tracking requests and bugs. Please post questions to the MediaPipe Stack Overflow with a &lt;code&gt;mediapipe&lt;/code&gt; tag.&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;h3&gt;Publications&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.googleblog.com/2021/07/bringing-artworks-to-life-with-ar.html&#34;&gt;Bringing artworks to life with AR&lt;/a&gt; in Google Developers Blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.googleblog.com/2021/05/control-your-mirru-prosthesis-with-mediapipe-hand-tracking.html&#34;&gt;Prosthesis control via Mirru App using MediaPipe hand tracking&lt;/a&gt; in Google Developers Blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.googleblog.com/2021/04/signall-sdk-sign-language-interface-using-mediapipe-now-available.html&#34;&gt;SignAll SDK: Sign language interface using MediaPipe is now available for developers&lt;/a&gt; in Google Developers Blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ai.googleblog.com/2020/12/mediapipe-holistic-simultaneous-face.html&#34;&gt;MediaPipe Holistic - Simultaneous Face, Hand and Pose Prediction, on Device&lt;/a&gt; in Google AI Blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ai.googleblog.com/2020/10/background-features-in-google-meet.html&#34;&gt;Background Features in Google Meet, Powered by Web ML&lt;/a&gt; in Google AI Blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.googleblog.com/2020/09/mediapipe-3d-face-transform.html&#34;&gt;MediaPipe 3D Face Transform&lt;/a&gt; in Google Developers Blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.googleblog.com/2020/08/instant-motion-tracking-with-mediapipe.html&#34;&gt;Instant Motion Tracking With MediaPipe&lt;/a&gt; in Google Developers Blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ai.googleblog.com/2020/08/on-device-real-time-body-pose-tracking.html&#34;&gt;BlazePose - On-device Real-time Body Pose Tracking&lt;/a&gt; in Google AI Blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ai.googleblog.com/2020/08/mediapipe-iris-real-time-iris-tracking.html&#34;&gt;MediaPipe Iris: Real-time Eye Tracking and Depth Estimation&lt;/a&gt; in Google AI Blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.googleblog.com/2020/04/mediapipe-knift-template-based-feature-matching.html&#34;&gt;MediaPipe KNIFT: Template-based feature matching&lt;/a&gt; in Google Developers Blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.googleblog.com/2020/03/alfred-camera-smart-camera-features-using-mediapipe.html&#34;&gt;Alfred Camera: Smart camera features using MediaPipe&lt;/a&gt; in Google Developers Blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ai.googleblog.com/2020/03/real-time-3d-object-detection-on-mobile.html&#34;&gt;Real-Time 3D Object Detection on Mobile Devices with MediaPipe&lt;/a&gt; in Google AI Blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ai.googleblog.com/2020/02/autoflip-open-source-framework-for.html&#34;&gt;AutoFlip: An Open Source Framework for Intelligent Video Reframing&lt;/a&gt; in Google AI Blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.googleblog.com/2020/01/mediapipe-on-web.html&#34;&gt;MediaPipe on the Web&lt;/a&gt; in Google Developers Blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.googleblog.com/2019/12/object-detection-and-tracking-using-mediapipe.html&#34;&gt;Object Detection and Tracking using MediaPipe&lt;/a&gt; in Google Developers Blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ai.googleblog.com/2019/08/on-device-real-time-hand-tracking-with.html&#34;&gt;On-Device, Real-Time Hand Tracking with MediaPipe&lt;/a&gt; in Google AI Blog&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1906.08172&#34;&gt;MediaPipe: A Framework for Building Perception Pipelines&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Videos&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/c/MediaPipe&#34;&gt;YouTube Channel&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>