<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-20T01:30:34Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>WinMerge/winmerge</title>
    <updated>2022-07-20T01:30:34Z</updated>
    <id>tag:github.com,2022-07-20:/WinMerge/winmerge</id>
    <link href="https://github.com/WinMerge/winmerge" rel="alternate"></link>
    <summary type="html">&lt;p&gt;WinMerge is an Open Source differencing and merging tool for Windows. WinMerge can compare both folders and files, presenting differences in a visual text format that is easy to understand and handle.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/WinMerge/winmerge&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/WinMerge/winmerge/master/Docs/Logos/WinMerge_logo_24bit.png&#34; alt=&#34;logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;WinMerge&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/sdottaka/winmerge/build/artifacts&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/h3v3ap1kswi1tyyt?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/WinMerge/winmerge/actions&#34;&gt;&lt;img src=&#34;https://github.com/WinMerge/winmerge/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sourceforge.net/projects/winmerge/files/&#34;&gt;&lt;img src=&#34;https://img.shields.io/sourceforge/dt/winmerge&#34; alt=&#34;sourceforge.net downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/WinMerge/winmerge/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/winmerge/winmerge/total.svg?sanitize=true&#34; alt=&#34;Github Releases All&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/WinMerge/winmerge/raw/master/Translations/TranslationsStatus.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/translations-36-green&#34; alt=&#34;Translation status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://winmerge.org/&#34;&gt;WinMerge&lt;/a&gt; is an open source differencing and merging tool for Windows. WinMerge can compare files and folders, presenting differences in a visual format that is easy to understand and manipulate.&lt;/p&gt; &#xA;&lt;h2&gt;Build Requirements&lt;/h2&gt; &#xA;&lt;h3&gt;Visual Studio 2017&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Community&lt;/em&gt;, &lt;em&gt;Professional&lt;/em&gt; or &lt;em&gt;Enterprise&lt;/em&gt; Edition&lt;/li&gt; &#xA; &lt;li&gt;VC++ 2017 latest v141 tools&lt;/li&gt; &#xA; &lt;li&gt;Visual C++ compilers and libraries for (ARM, ARM64)&lt;/li&gt; &#xA; &lt;li&gt;Windows XP support for C++&lt;/li&gt; &#xA; &lt;li&gt;Visual C++ MFC for (x86 and x64, ARM, ARM64)&lt;/li&gt; &#xA; &lt;li&gt;Visual C++ ATL for (x86 and x64, ARM, ARM64)&lt;/li&gt; &#xA; &lt;li&gt;Windows 10 SDK&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Visual Studio 2019&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Community&lt;/em&gt;, &lt;em&gt;Professional&lt;/em&gt; or &lt;em&gt;Enterprise&lt;/em&gt; Edition&lt;/li&gt; &#xA; &lt;li&gt;MSVC v142 - VS 2019 C++ (x64/x86, ARM, ARM64) build tools (Latest)&lt;/li&gt; &#xA; &lt;li&gt;C++ MFC for latest v142 build tools (x86 &amp;amp; x64, ARM, ARM64)&lt;/li&gt; &#xA; &lt;li&gt;C++ ATL for latest v142 build tools (x86 &amp;amp; x64, ARM, ARM64)&lt;/li&gt; &#xA; &lt;li&gt;Windows 10 SDK&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Visual Studio 2022&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Community&lt;/em&gt;, &lt;em&gt;Professional&lt;/em&gt; or &lt;em&gt;Enterprise&lt;/em&gt; Edition&lt;/li&gt; &#xA; &lt;li&gt;MSVC v143 Buildtools (x64/x86, ARM, ARM64)&lt;/li&gt; &#xA; &lt;li&gt;C++ MFC for latest v143 build tools (x64/x86, ARM, ARM64)&lt;/li&gt; &#xA; &lt;li&gt;C++ ATL for latest v143 build tools (x64/x86, ARM, ARM64)&lt;/li&gt; &#xA; &lt;li&gt;Windows 10 SDK&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Other utilities/programs&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;git&lt;/li&gt; &#xA; &lt;li&gt;Inno Setup 5.x and 6.x&lt;/li&gt; &#xA; &lt;li&gt;7-Zip&lt;/li&gt; &#xA; &lt;li&gt;Python&lt;/li&gt; &#xA; &lt;li&gt;Pandoc&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to Build&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/winmerge/winmerge&#xA;cd winmerge&#xA;git submodule init&#xA;git submodule update&#xA;DownloadDeps.cmd&#xA;BuildAll.vs2022.cmd [x86|x64|ARM|ARM64] or BuildAll.vs2019.cmd [x86|x64|ARM|ARM64] or BuildAll.vs2017.cmd [x86|x64|ARM|ARM64]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Folder Structure&lt;/h2&gt; &#xA;&lt;p&gt;Source code for the WinMerge program, its plugins, filters, setup program, and various utilities are all kept in the subfolders listed below.&lt;/p&gt; &#xA;&lt;p&gt;The changelog file is in &lt;code&gt;Docs/Users/ChangeLog.md&lt;/code&gt; and it documents both user-visible and significant changes.&lt;/p&gt; &#xA;&lt;p&gt;Subfolders include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Docs&lt;/code&gt;&lt;br&gt; Both user and developer documentation, in different subfolders.&lt;br&gt; Can be browsed by opening &lt;code&gt;index.html&lt;/code&gt; in the &lt;code&gt;Docs&lt;/code&gt; folder.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Src&lt;/code&gt;&lt;br&gt; Source code to the WinMerge program itself.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Plugins&lt;/code&gt;&lt;br&gt; Source code and binaries for WinMerge runtime plugin dlls &amp;amp; scripts.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Filters&lt;/code&gt;&lt;br&gt; WinMerge file filters which are shipped with the distribution.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;ArchiveSupport&lt;/code&gt;&lt;br&gt; Source code for the Merge7z dlls, which connect WinMerge with 7-Zip.&lt;br&gt; Also this folder is required to compile &lt;code&gt;WinMergeU.exe&lt;/code&gt;.&lt;br&gt; There is also a standalone installer for Merge7z dlls.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Externals&lt;/code&gt;&lt;br&gt; This folder contains several libraries whose sources come from outside WinMerge project.&lt;br&gt; They are stored here for convenience for building and possibly needed small changes for WinMerge.&lt;br&gt; Libraries include an XML parser and a regular expression parser.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Installer&lt;/code&gt;&lt;br&gt; Installer for WinMerge.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Tools&lt;/code&gt;&lt;br&gt; Various utilities used by WinMerge developers; see readme files in each.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;ShellExtension&lt;/code&gt;&lt;br&gt; Windows Shell (Explorer) integration.&lt;br&gt; Adds menuitems to Explorer context menu for comparing files and folders.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Testing&lt;/code&gt;&lt;br&gt; A suite of test diff files and a script to run them and report the results.&lt;br&gt; This folder also has a &lt;code&gt;Google Test&lt;/code&gt; subfolder containing unit tests made with &lt;a href=&#34;https://github.com/google/googletest&#34;&gt;Google Test Framework&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Build&lt;/code&gt;&lt;br&gt; This folder gets created by the compiler when WinMerge is compiled.&lt;br&gt; It contains compiled executables, libraries, the user manual, etc.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;BuildTmp&lt;/code&gt;&lt;br&gt; This folder gets created by the compiler when WinMerge is compiled.&lt;br&gt; It contains temporary files created during the compilation and can be safely deleted.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to CONTRIBUTE&lt;/h2&gt; &#xA;&lt;p&gt;You will need to fork the main Winmerge repository and create a branch on that fork&lt;/p&gt; &#xA;&lt;p&gt;Your new code needs to follow Eric Allman identation &lt;a href=&#34;https://en.wikipedia.org/wiki/Indentation_style#Allman_style&#34;&gt;https://en.wikipedia.org/wiki/Indentation_style#Allman_style&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;When your code is ready for a review/merge create a pull request explaining the changes that you made&lt;/p&gt; &#xA;&lt;h2&gt;How to RUN and DEBUG&lt;/h2&gt; &#xA;&lt;p&gt;The winmerge folder has different Visual Studio solution files (.sln) that you can use to build, debug and run while you test your changes&lt;/p&gt; &#xA;&lt;p&gt;If you have run any of the BuildAll scripts you can run WinMerge from path &lt;code&gt;\Build\X64\Release\WinMergeU.exe&lt;/code&gt; if your architecture is not &lt;code&gt;X64&lt;/code&gt; look for any of the other folders generated after the build has finished&lt;/p&gt; &#xA;&lt;p&gt;Another way to Debug, run the exe from previous step, then from VS attach to the running process.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apache/thrift</title>
    <updated>2022-07-20T01:30:34Z</updated>
    <id>tag:github.com,2022-07-20:/apache/thrift</id>
    <link href="https://github.com/apache/thrift" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache Thrift&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache Thrift&lt;/h1&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;Thrift is a lightweight, language-independent software stack for point-to-point RPC implementation. Thrift provides clean abstractions and implementations for data transport, data serialization, and application level processing. The code generation system takes a simple definition language as input and generates code across programming languages that uses the abstracted stack to build interoperable RPC clients and servers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/thrift/master/doc/images/thrift-layers.png&#34; alt=&#34;Apache Thrift Layered Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thrift makes it easy for programs written in different programming languages to share data and call remote procedures. With support for &lt;a href=&#34;https://raw.githubusercontent.com/apache/thrift/master/LANGUAGES.md&#34;&gt;28 programming languages&lt;/a&gt;, chances are Thrift supports the languages that you currently use.&lt;/p&gt; &#xA;&lt;p&gt;Thrift is specifically designed to support non-atomic version changes across client and server code. This allows you to upgrade your server while still being able to service older clients; or have newer clients issue requests to older servers. An excellent community-provided write-up about thrift and compatibility when versioning an API can be found in the &lt;a href=&#34;https://diwakergupta.github.io/thrift-missing-guide/#_versioning_compatibility&#34;&gt;Thrift Missing Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For more details on Thrift&#39;s design and implementation, see the Thrift whitepaper included in this distribution, or at the README.md file in your particular subdirectory of interest.&lt;/p&gt; &#xA;&lt;h1&gt;Status&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Branch&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Travis&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Appveyor&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Coverity Scan&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;codecov.io&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Website&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/apache/thrift/tree/master&#34;&gt;&lt;code&gt;master&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://travis-ci.org/apache/thrift/branches&#34;&gt;&lt;img src=&#34;https://travis-ci.org/apache/thrift.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://ci.appveyor.com/project/ApacheSoftwareFoundation/thrift/history&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/apache/thrift?branch=master&amp;amp;svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://scan.coverity.com/projects/thrift&#34;&gt;&lt;img src=&#34;https://scan.coverity.com/projects/1345/badge.svg?sanitize=true&#34; alt=&#34;Coverity Scan Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://thrift.apache.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/official-website-brightgreen.svg?sanitize=true&#34; alt=&#34;Website&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/apache/thrift/tree/0.14.0&#34;&gt;&lt;code&gt;0.14.0&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://travis-ci.org/apache/thrift/branches&#34;&gt;&lt;img src=&#34;https://travis-ci.org/apache/thrift.svg?branch=0.14.0&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Releases&lt;/h1&gt; &#xA;&lt;p&gt;Thrift does not maintain a specific release calendar at this time.&lt;/p&gt; &#xA;&lt;p&gt;We strive to release twice yearly. Download the &lt;a href=&#34;http://thrift.apache.org/download&#34;&gt;current release&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt; &#xA;&lt;h1&gt;Project Hierarchy&lt;/h1&gt; &#xA;&lt;p&gt;thrift/&lt;/p&gt; &#xA;&lt;p&gt;compiler/&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Contains the Thrift compiler, implemented in C++.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;lib/&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Contains the Thrift software library implementation, subdivided by&#xA;language of implementation.&#xA;&#xA;cpp/&#xA;go/&#xA;java/&#xA;php/&#xA;py/&#xA;rb/&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;test/&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Contains sample Thrift files and test code across the target programming&#xA;languages.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;tutorial/&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Contains a basic tutorial that will teach you how to develop software&#xA;using Thrift.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;p&gt;To build the same way Travis CI builds the project you should use docker. We have &lt;a href=&#34;https://raw.githubusercontent.com/apache/thrift/master/build/docker/README.md&#34;&gt;comprehensive building instructions for docker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;http://thrift.apache.org/docs/install&#34;&gt;http://thrift.apache.org/docs/install&lt;/a&gt; for a list of build requirements (may be stale). Alternatively, see the docker build environments for a list of prerequisites.&lt;/p&gt; &#xA;&lt;h1&gt;Resources&lt;/h1&gt; &#xA;&lt;p&gt;More information about Thrift can be obtained on the Thrift webpage at:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; http://thrift.apache.org&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Acknowledgments&lt;/h1&gt; &#xA;&lt;p&gt;Thrift was inspired by pillar, a lightweight RPC tool written by Adam D&#39;Angelo, and also by Google&#39;s protocol buffers.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;If you are building from the first time out of the source repository, you will need to generate the configure scripts. (This is not necessary if you downloaded a tarball.) From the top directory, do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./bootstrap.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once the configure scripts are generated, thrift can be configured. From the top directory, do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./configure&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may need to specify the location of the boost files explicitly. If you installed boost in &lt;code&gt;/usr/local&lt;/code&gt;, you would run configure as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./configure --with-boost=/usr/local&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that by default the thrift C++ library is typically built with debugging symbols included. If you want to customize these options you should use the CXXFLAGS option in configure, as such:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./configure CXXFLAGS=&#39;-g -O2&#39;&#xA;./configure CFLAGS=&#39;-g -O2&#39;&#xA;./configure CPPFLAGS=&#39;-DDEBUG_MY_FEATURE&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To enable gcov required options -fprofile-arcs -ftest-coverage enable them:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./configure  --enable-coverage&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run ./configure --help to see other configuration options&lt;/p&gt; &#xA;&lt;p&gt;Please be aware that the Python library will ignore the --prefix option and just install wherever Python&#39;s distutils puts it (usually along the lines of &lt;code&gt;/usr/lib/pythonX.Y/site-packages/&lt;/code&gt;). If you need to control where the Python modules are installed, set the PY_PREFIX variable. (DESTDIR is respected for Python and C++.)&lt;/p&gt; &#xA;&lt;p&gt;Make thrift:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From the top directory, become superuser and do:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Uninstall thrift:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make uninstall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that some language packages must be installed manually using build tools better suited to those languages (at the time of this writing, this applies to Java, Ruby, PHP).&lt;/p&gt; &#xA;&lt;p&gt;Look for the README.md file in the lib/&#xA; &lt;language&gt;&#xA;  / folder for more details on the installation of each language library package.&#xA; &lt;/language&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Package Managers&lt;/h1&gt; &#xA;&lt;p&gt;Apache Thrift is available via a number of package managers, a list which is is steadily growing. A more detailed overview can be found &lt;a href=&#34;http://thrift.apache.org/lib/&#34;&gt;at the Apache Thrift web site under &#34;Libraries&#34;&lt;/a&gt; and/or in the respective READMEs for each language under /lib&lt;/p&gt; &#xA;&lt;h1&gt;Testing&lt;/h1&gt; &#xA;&lt;p&gt;There are a large number of client library tests that can all be run from the top-level directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make -k check&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will make all of the libraries (as necessary), and run through the unit tests defined in each of the client libraries. If a single language fails, the make check will continue on and provide a synopsis at the end.&lt;/p&gt; &#xA;&lt;p&gt;To run the cross-language test suite, please run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make cross&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will run a set of tests that use different language clients and servers.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Priyansh19077/CP-Templates</title>
    <updated>2022-07-20T01:30:34Z</updated>
    <id>tag:github.com,2022-07-20:/Priyansh19077/CP-Templates</id>
    <link href="https://github.com/Priyansh19077/CP-Templates" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Here are my template codes for Competitive Programming with optimised implementations of various algorithms. I personally use them every day and have tested almost all of them in multiple competitive programming contests and practice problems&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>