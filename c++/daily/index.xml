<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-26T01:31:25Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dalathegreat/BYD-Battery-Emulator-For-Gen24</title>
    <updated>2023-05-26T01:31:25Z</updated>
    <id>tag:github.com,2023-05-26:/dalathegreat/BYD-Battery-Emulator-For-Gen24</id>
    <link href="https://github.com/dalathegreat/BYD-Battery-Emulator-For-Gen24" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This software converts the LEAF CAN into Modbus RTU registers understood by solar inverters that take the BYD 11kWh HVM battery&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BYD-Battery-Emulator-For-Gen24 ‚ö°üîã&lt;/h1&gt; &#xA;&lt;p&gt;This software converts the LEAF CAN into Modbus RTU registers understood by solar inverters that accept the BYD 11kWh HVM battery. This enables a very easy way to use EV batteries for plug&#39;n&#39;play storage solutions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/dalathegreat/BYD-Battery-Emulator-For-Gen24/raw/main/Images/Fronius.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Hardware requirements üìú&lt;/h2&gt; &#xA;&lt;p&gt;This code fits on the LilyGo ESP32 T-CAN485 devboard , see &lt;a href=&#34;https://github.com/Xinyuan-LilyGO/T-CAN485&#34;&gt;https://github.com/Xinyuan-LilyGO/T-CAN485&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You will also need a Nissan LEAF battery, any model year will do&lt;/p&gt; &#xA;&lt;p&gt;Finally, you will need a hybrid solar inverter that accepts the BYD battery communication standard, for example the Fronius Gen24&lt;/p&gt; &#xA;&lt;h2&gt;Installation basics ü™õ&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Connect one end of the LilyGo RS485 to the Gen24 Modbus&lt;/li&gt; &#xA; &lt;li&gt;Connect the other end of the LilyGo to the CAN side of a LEAF battery&lt;/li&gt; &#xA; &lt;li&gt;Wire up high voltage cable between the Gen24 and the LEAF battery. Install a DC high voltage fuse.&lt;/li&gt; &#xA; &lt;li&gt;Add a 12V power source to power the LilyGo and the LEAF battery (uninterruptible PSU or 12V lead acid recommended in parallel)&lt;/li&gt; &#xA; &lt;li&gt;Manually handle pre-charge circuit + positive/negative contactor on LEAF battery for now (circuit will be improved soon)&lt;/li&gt; &#xA; &lt;li&gt;Enjoy a big cheap grid connected battery!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Wiring examples üí°&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s how to wire up the communication between the components. &lt;img src=&#34;https://github.com/dalathegreat/BYD-Battery-Emulator-For-Gen24/raw/main/Images/Wiring.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s how to connect the high voltage lines &lt;img src=&#34;https://github.com/dalathegreat/BYD-Battery-Emulator-For-Gen24/raw/main/Images/HighVoltageWiring.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s how to wire up battery low voltage wiring &lt;img src=&#34;https://github.com/dalathegreat/BYD-Battery-Emulator-For-Gen24/raw/main/Images/BatteryControlWiring.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more examples showing wiring, see the Example#####.jpg pictures in the &#39;Images&#39; folder &lt;a href=&#34;https://github.com/dalathegreat/BYD-Battery-Emulator-For-Gen24/tree/main/Images&#34;&gt;https://github.com/dalathegreat/BYD-Battery-Emulator-For-Gen24/tree/main/Images&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to compile the software üíª&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the Arduino IDE: &lt;a href=&#34;https://www.arduino.cc/en/software&#34;&gt;https://www.arduino.cc/en/software&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;When the Arduino IDE has been started; Click &#34;File&#34; in the upper left corner -&amp;gt; Preferences -&amp;gt; Additional Development &amp;gt;Board Manager URL -&amp;gt; Enter the URL in the input box &lt;a href=&#34;https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json&#34;&gt;https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Go to &#34;Boards Manager&#34;, and install the ESP32 package by Espressif Systems&lt;/li&gt; &#xA; &lt;li&gt;The arduino settings should be set to &#34;ESP32 Dev Module&#34; with the following settings; &lt;img src=&#34;https://github.com/Xinyuan-LilyGO/T-CAN485/raw/main/img/arduino_setting.png&#34; alt=&#34;alt text&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Press Verify and Upload to send the sketch to the board&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Dependencies üìñ&lt;/h2&gt; &#xA;&lt;p&gt;This code uses two libraries, ESP32-Arduino-CAN (&lt;a href=&#34;https://github.com/miwagner/ESP32-Arduino-CAN/&#34;&gt;https://github.com/miwagner/ESP32-Arduino-CAN/&lt;/a&gt;) slightly modified for this usecase, and the eModbus library (&lt;a href=&#34;https://github.com/eModbus/eModbus&#34;&gt;https://github.com/eModbus/eModbus&lt;/a&gt;). Both these are already located in the Software folder for an easy start.&lt;/p&gt; &#xA;&lt;p&gt;It is also based on the info found in the following excellent repositories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/pelle8/gen24&#34;&gt;https://gitlab.com/pelle8/gen24&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/burra/byd_battery&#34;&gt;https://github.com/burra/byd_battery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flodorn/TeslaBMSV2&#34;&gt;https://github.com/flodorn/TeslaBMSV2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Like this project? üíñ&lt;/h2&gt; &#xA;&lt;p&gt;Leave a ‚≠ê If you think this project is useful. Consider hopping onto my Patreon to encourage more open-source projects!&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.patreon.com/dala&#34;&gt; &lt;img src=&#34;https://c5.patreon.com/external/logo/become_a_patron_button@2x.png&#34; width=&#34;160&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>NootInc/NootedRed</title>
    <updated>2023-05-26T01:31:25Z</updated>
    <id>tag:github.com,2023-05-26:/NootInc/NootedRed</id>
    <link href="https://github.com/NootInc/NootedRed" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lilu plugin for AMD Vega iGPUs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NootedRed &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/NootInc/NootedRed/main.yml?branch=master&amp;amp;logo=github&amp;amp;style=for-the-badge&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;The AMD Vega iGPU support &lt;a href=&#34;https://github.com/acidanthera/Lilu&#34;&gt;Lilu&lt;/a&gt; (1.6.4+) plug-in.&lt;/p&gt; &#xA;&lt;p&gt;The Source Code of this Original Work is licensed under the &lt;code&gt;Thou Shalt Not Profit License version 1.0&lt;/code&gt;. See &lt;a href=&#34;https://github.com/NootInc/NootedRed/raw/master/LICENSE&#34;&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thanks &lt;a href=&#34;https://github.com/Acidanthera&#34;&gt;Acidanthera&lt;/a&gt; for the AppleBacklight code and UnfairGVA patches in &lt;a href=&#34;https://github.com/Acidanthera/WhateverGreen&#34;&gt;WhateverGreen&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Increase VRAM size; otherwise, the device will fail to initialise. 512MiB VRAM is the minimum, 1GiB or more for proper functionality&lt;/li&gt; &#xA; &lt;li&gt;Disable Legacy Boot, also known as CSM; otherwise, you will experience various difficulties, such as a kernel panic with &#34;Failed to get VBIOS from VRAM&#34; as the message&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Remove&lt;/strong&gt; WhateverGreen. &lt;strong&gt;This kext conflicts with it&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Recommendations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;From this repository, add &lt;a href=&#34;https://raw.githubusercontent.com/NootInc/NootedRed/master/Assets/SSDT-PNLF.aml&#34;&gt;&lt;code&gt;SSDT-PNLF.aml&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/NootInc/NootedRed/master/Assets/SSDT-ALS0.aml&#34;&gt;&lt;code&gt;SSDT-ALS0.aml&lt;/code&gt;&lt;/a&gt; if you have no Ambient Light Sensor, along with &lt;a href=&#34;https://github.com/Acidanthera/VirtualSMC&#34;&gt;&lt;code&gt;SMCLightSensor.kext&lt;/code&gt;&lt;/a&gt; for backlight functionality. Usually only works on laptops. Add &lt;a href=&#34;https://github.com/Acidanthera/BrightnessKeys&#34;&gt;&lt;code&gt;BrightnessKeys.kext&lt;/code&gt;&lt;/a&gt; for brightness control from the keyboard&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;MacBookPro16,3&lt;/code&gt; or &lt;code&gt;MacPro7,1&lt;/code&gt; SMBIOS&lt;/li&gt; &#xA; &lt;li&gt;Update to latest macOS 11 (Big Sur) version&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Can I have an AMD dGPU installed on the system?&lt;/h3&gt; &#xA;&lt;p&gt;Your system must not have a GCN 5 or RDNA AMD dGPU, as this kext will conflict with them; we are mixing AMDRadeonX5000 for GCN 5, AMDRadeonX6000 for VCN, and AMDRadeonX6000Framebuffer for DCN. Disable them using &lt;code&gt;-wegnoegpu&lt;/code&gt; (yes, this works here too) or by adding the &lt;code&gt;disable-gpu&lt;/code&gt; device property.&lt;/p&gt; &#xA;&lt;h3&gt;How functional is the kext?&lt;/h3&gt; &#xA;&lt;p&gt;This project is under active research and development; There will be crashes here and there.&lt;/p&gt; &#xA;&lt;p&gt;The kext is mostly fully functional on all Vega (Entire Raven family - Raven(2)/Renoir and derivatives, aka Ryzen 5xxx series and older) iGPUs.&lt;/p&gt; &#xA;&lt;p&gt;See repository issues for more information.&lt;/p&gt; &#xA;&lt;h3&gt;On which macOS versions am I able to use this on?&lt;/h3&gt; &#xA;&lt;p&gt;Due to the complexity and secrecy of the Metal drivers, adding support for non-existent logic is basically impossible. In addition, the required logic for our iGPUs has been purged from the AMD kexts since Monterey. This cannot be resolved without breaking macOS&#39; integrity and potentially even stability, at the moment.&lt;/p&gt; &#xA;&lt;p&gt;Injecting the GPU kexts is not possible during the OpenCore injection stage; the pre-linked injection fails for kexts that don&#39;t contain their dependencies in the Boot Kext Collection, which is where OpenCore injects kexts to.&lt;/p&gt; &#xA;&lt;p&gt;In conclusion, this kext works only natively in macOS 11 (Big Sur). For Monterey, a downgrade of &lt;code&gt;AMDRadeonX6000Framebuffer.kext&lt;/code&gt; and &lt;code&gt;AMDRadeonX5000HWLibs.kext&lt;/code&gt; is required.&lt;/p&gt;</summary>
  </entry>
</feed>