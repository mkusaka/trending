<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-25T01:26:00Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cmu-db/15445-bootcamp</title>
    <updated>2023-09-25T01:26:00Z</updated>
    <id>tag:github.com,2023-09-25:/cmu-db/15445-bootcamp</id>
    <link href="https://github.com/cmu-db/15445-bootcamp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A basic introduction to coding in modern C++.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;15-445/645 C++ Bootcamp&lt;/h1&gt; &#xA;&lt;p&gt;This bootcamp aims to provide a basic introduction to coding in modern C++. The features of the C++ language are too vast and expansive to cover in one bootcamp, and quite frankly, it is learned best through experience. The staff is certain that 15-445 will make you a more confident C++ programmer! However, we do cover some C++ topics that are necessary to know while doing the programming assignments. This tutorial does not cover basic C/C++ syntax. It mainly covers C++ programming features, particularly concepts that do not exist in C.&lt;/p&gt; &#xA;&lt;p&gt;This is the first iteration of the C++ bootcamp for 15-445/645, and feedback is appreciated!&lt;/p&gt; &#xA;&lt;h2&gt;Format&lt;/h2&gt; &#xA;&lt;p&gt;The bootcamp consists of C++ code files, located in &lt;code&gt;src/&lt;/code&gt;, that are meant to be read in depth. Each of these files can be compiled into an executable with the same name. Use CMake to build these executables. This set of commands should build all the executables. After running these commands, these executables should be located in the &lt;code&gt;build&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ mkdir build&#xA;$ cd build&#xA;$ cmake ..&#xA;$ make -j8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For instance, the &lt;code&gt;src/references.cpp&lt;/code&gt; file compiles into the &lt;code&gt;references&lt;/code&gt; executable, located in &lt;code&gt;./build&lt;/code&gt;. The same holds for every file in the source directory.&lt;/p&gt; &#xA;&lt;h2&gt;Files&lt;/h2&gt; &#xA;&lt;p&gt;There are fifteen files in the &lt;code&gt;src/&lt;/code&gt; directory, each which cover different concepts. They are meant to be read in the order below, since each file builds up on the previous one. However, if you know some modern C++ concepts and are looking to refresh your knowledge, it is probably okay to start by reading the files on concepts you are unfamiliar about.&lt;/p&gt; &#xA;&lt;h3&gt;References and Move Semantics&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;references.cpp&lt;/code&gt;: Covers C++ references.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;move_semantics.cpp&lt;/code&gt;: Covers C++ move semantics.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;move_constructors.cpp&lt;/code&gt;: Covers C++ class move constructors and move assignment operators.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;C++ Templates&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;templated_functions.cpp&lt;/code&gt;: Covers C++ templated functions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;templated_classes.cpp&lt;/code&gt; Covers C++ templated classes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Misc&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;wrapper_class.cpp&lt;/code&gt;: Covers C++ wrapper classes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;iterator.cpp&lt;/code&gt;: Covers implementing a basic C++ style iterator.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;namespaces.cpp&lt;/code&gt;: Covers C++ namespaces.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;C++ Standard Library (STL) Containers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;vectors.cpp&lt;/code&gt;: Covers &lt;code&gt;std::vector&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;set.cpp&lt;/code&gt;: Covers &lt;code&gt;std::set&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;unordered_map.cpp&lt;/code&gt;: Covers &lt;code&gt;std::unordered_map&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;auto.cpp&lt;/code&gt;: Covers the usage of the C++ keyword &lt;code&gt;auto&lt;/code&gt;, including using &lt;code&gt;auto&lt;/code&gt; to iterate through C++ STL containers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;C++ Standard Library (STL) Memory&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;unique_ptr.cpp&lt;/code&gt;: Covers &lt;code&gt;std::unique_ptr&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;shared_ptr.cpp&lt;/code&gt;: Covers &lt;code&gt;std::shared_ptr&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;C++ Standard Library (STL) Synch Primitives&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;mutex.cpp&lt;/code&gt;: Covers &lt;code&gt;std::mutex&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;scoped_lock.cpp&lt;/code&gt;: Covers &lt;code&gt;std::scoped_lock&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;condition_variable.cpp&lt;/code&gt;: Covers &lt;code&gt;std::condition_variable&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rwlock.cpp&lt;/code&gt;: Covers the usage of several C++ STL synchronization primitive libraries (&lt;code&gt;std::shared_mutex&lt;/code&gt;, &lt;code&gt;std::shared_lock&lt;/code&gt;, &lt;code&gt;std::unique_lock&lt;/code&gt;) to create a reader-writer&#39;s lock implementation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other Resources&lt;/h2&gt; &#xA;&lt;p&gt;There are many other resources that will be helpful while you get accquainted to C++. I list a few here!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/&#34;&gt;https://en.cppreference.com/w/&lt;/a&gt;: This is the official C++ documentation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cplusplus.com/&#34;&gt;https://cplusplus.com/&lt;/a&gt;: Contains both a C++ language &lt;a href=&#34;https://cplusplus.com/doc/tutorial/&#34;&gt;tutorial&lt;/a&gt; and a C++ library &lt;a href=&#34;https://cplusplus.com/reference/&#34;&gt;reference&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/changkun/modern-cpp-tutorial&#34;&gt;Modern C++ Tutorial&lt;/a&gt;. This GitHub repo contains some information and exercises that are useful!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Appendix: Official C++ Documentation for Topics Covered in the Bootcamp&lt;/h2&gt; &#xA;&lt;p&gt;This documentation may be useful to you! It&#39;s very comprehensive (much more comprehensive than this bootcamp) but it may lack some readability. Overall, I think it&#39;s still a good idea to try to read and understand this documentation, especially when working on the projects. Although the bootcamp tries to be as comprehensive as possible, it still only covers the bare bones of using modern C++.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/cpp/language/reference&#34;&gt;References&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/cpp/utility/move&#34;&gt;std::move&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/cpp/language/move_constructor&#34;&gt;Move Constructors&lt;/a&gt; and &lt;a href=&#34;https://en.cppreference.com/w/cpp/language/move_assignment&#34;&gt;Move Assignment Operators&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/cpp/language/function_template&#34;&gt;Templated Functions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/cpp/language/class_template&#34;&gt;Templated Classes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/cpp/iterator&#34;&gt;Iterators&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/cpp/language/namespace&#34;&gt;Namespaces&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/cpp/container/vector&#34;&gt;std::vector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/cpp/container/set&#34;&gt;std::set&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/cpp/container/unordered_map&#34;&gt;std::unordered_map&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/cpp/language/auto&#34;&gt;auto&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/cpp/memory/unique_ptr&#34;&gt;std::unique_ptr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/cpp/memory/shared_ptr&#34;&gt;std::shared_ptr&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/cpp/thread/mutex&#34;&gt;std::mutex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/cpp/thread/scoped_lock&#34;&gt;std::scoped_lock&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/cpp/thread/condition_variable&#34;&gt;std::condition_variable&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/cpp/thread/shared_mutex&#34;&gt;std::shared_mutex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/cpp/thread/shared_lock&#34;&gt;std::shared_lock&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/cpp/thread/unique_lock&#34;&gt;std::unique_lock&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>timeplus-io/proton</title>
    <updated>2023-09-25T01:26:00Z</updated>
    <id>tag:github.com,2023-09-25:/timeplus-io/proton</id>
    <link href="https://github.com/timeplus-io/proton" rel="alternate"></link>
    <summary type="html">&lt;p&gt;a unified streaming and historical data processing engine in a single binary, powered by ClickHouse&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Proton – open source, unified streaming and data processing engine for real-time analytics&#34; src=&#34;https://raw.githubusercontent.com/timeplus-io/proton/develop/design/proton-logo-white-bg.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://timeplus.com/slack&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Join%20Our%20Community-Slack-blue&#34; alt=&#34;Slack&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/timeplusdata&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/timeplusdata?style=flat&amp;amp;label=%40timeplusdata&amp;amp;logo=twitter&amp;amp;color=0bf&amp;amp;logoColor=fff&#34; alt=&#34;Twitter&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/timeplus-io/proton/raw/develop/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/timeplus-io/proton?label=license&amp;amp;logo=github&amp;amp;color=f80&amp;amp;logoColor=fff&#34; alt=&#34;License&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/timeplus-io/proton/actions/workflows/nightly_test.yml&#34;&gt; &lt;img src=&#34;https://github.com/timeplus-io/proton/actions/workflows/nightly_test.yml/badge.svg?branch=develop&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/timeplus-io/proton/develop/#introduction&#34;&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/timeplus-io/proton/develop/#get-started&#34;&gt;&lt;strong&gt;Get started&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/timeplus-io/proton/develop/#get-more-with-timeplus&#34;&gt;&lt;strong&gt;Timeplus&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/timeplus-io/proton/develop/#documentation&#34;&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/timeplus-io/proton/develop/#contributing&#34;&gt;&lt;strong&gt;Contributing&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/timeplus-io/proton/develop/#need-help&#34;&gt;&lt;strong&gt;Need help?&lt;/strong&gt;&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/timeplus-io/proton/develop/#licensing&#34;&gt;&lt;strong&gt;Licensing&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Proton is a unified streaming and historical data processing engine in a single binary. It helps data engineers and platform engineers solve complex real-time analytics use cases, and powers the &lt;a href=&#34;https://timeplus.com&#34;&gt;Timeplus&lt;/a&gt; streaming analytics platform.&lt;/p&gt; &#xA;&lt;p&gt;Proton extends the historical data, storage, and computing functionality of the popular &lt;a href=&#34;https://github.com/clickhouse/clickhouse&#34;&gt;ClickHouse project&lt;/a&gt; with streaming and OLAP data processing.&lt;/p&gt; &#xA;&lt;p&gt;Why use Proton?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;A unified, lightweight engine&lt;/strong&gt; to connect streaming and historical data processing tasks with efficiency and robust performance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;A smooth developer experience&lt;/strong&gt; with powerful streaming and analytical functionality.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Flexible deployments&lt;/strong&gt; with Proton&#39;s single binary and no external service dependencies.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Low total cost of ownership&lt;/strong&gt; compared to other analytical frameworks.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Plus built-in support for powerful streaming and analytical functionality:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Functionality&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;&lt;a href=&#34;https://docs.timeplus.com/usecases#data&#34;&gt;Data transformation&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Scrub sensitive fields, derive new columns from raw data, or convert identifiers to human-readable information.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;&lt;a href=&#34;https://docs.timeplus.com/joins&#34;&gt;Joining streams&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Combine data from different sources to add freshness to the resulting stream.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;&lt;a href=&#34;https://docs.timeplus.com/functions_for_agg&#34;&gt;Aggregating streams&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Developer-friendly functions to derive insights from streaming and historical data.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;Windowed stream processing (&lt;a href=&#34;https://docs.timeplus.com/functions_for_streaming#tumble&#34;&gt;tumble&lt;/a&gt; / &lt;a href=&#34;https://docs.timeplus.com/functions_for_streaming#hop&#34;&gt;hop&lt;/a&gt; / &lt;a href=&#34;https://docs.timeplus.com/functions_for_streaming#session&#34;&gt;session&lt;/a&gt;)&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Collect insightful snapshots of streaming data.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;&lt;a href=&#34;https://docs.timeplus.com/substream&#34;&gt;Substreams&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Maintain separate watermarks and streaming windows.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;&lt;a href=&#34;https://docs.timeplus.com/changelog-stream&#34;&gt;Data revision processing (changelog)&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create and manage non-append streams with primary keys and change data capture (CDC) semantics.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;&lt;a href=&#34;https://docs.timeplus.com/external-stream&#34;&gt;Federated streaming queries&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Query streaming data in external systems (e.g. Kafka) without duplicating them.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;b&gt;&lt;a href=&#34;https://docs.timeplus.com/view#m_view&#34;&gt;Materialized views&lt;/a&gt;&lt;/b&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create long-running and internally-stored queries.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://docs.timeplus.com/proton-architecture&#34;&gt;architecture&lt;/a&gt; doc for technical details and the &lt;a href=&#34;https://docs.timeplus.com/proton-faq&#34;&gt;FAQ&lt;/a&gt; for more information on the various editions of Proton, how it&#39;s related to ClickHouse, and why we chose Apache License 2.0.&lt;/p&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;p&gt;With &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;Docker engine&lt;/a&gt; installed on your local machine, pull and run the latest version of the Proton Docker image.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d --pull always --name proton ghcr.io/timeplus-io/proton:develop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Connect to your &lt;code&gt;proton&lt;/code&gt; container and run the &lt;code&gt;proton-client&lt;/code&gt; tool to connect to the local Proton server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker exec -it proton proton-client -n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you stop the container and want to start it again, run &lt;code&gt;docker start proton&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Query a test stream&lt;/h3&gt; &#xA;&lt;p&gt;From &lt;code&gt;proton-client&lt;/code&gt;, run the following SQL to create a stream of random data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;-- Create a stream with random data.&#xA;CREATE RANDOM STREAM devices(device string default &#39;device&#39;||to_string(rand()%4), temperature float default rand()%1000/10);&#xA;&#xA;-- Run the long-running stream query.&#xA;SELECT device, count(*), min(temperature), max(temperature) FROM devices GROUP BY device;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should see data like the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;┌─device──┬─count()─┬─min(temperature)─┬─max(temperature)─┐&#xA;│ device0 │    2256 │                0 │             99.6 │&#xA;│ device1 │    2260 │              0.1 │             99.7 │&#xA;│ device3 │    2259 │              0.3 │             99.9 │&#xA;│ device2 │    2225 │              0.2 │             99.8 │&#xA;└─────────┴─────────┴──────────────────┴──────────────────┘&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;What&#39;s next?&lt;/h3&gt; &#xA;&lt;p&gt;Now that you&#39;re running Proton and have created your first stream, query, and view, you can explore &lt;a href=&#34;https://docs.timeplus.com/proton-kafka#tutorial&#34;&gt;reading and writing data from Apache Kafka&lt;/a&gt; with External Streams, or view the &lt;a href=&#34;https://docs.timeplus.com/proton&#34;&gt;Proton documentation&lt;/a&gt; to explore additional capabilities.&lt;/p&gt; &#xA;&lt;p&gt;To see how such a deployment of Proton works as a demo, using &lt;code&gt;owl-shop&lt;/code&gt; sample live data, check out our &lt;a href=&#34;https://docs.timeplus.com/proton-kafka#tutorial&#34;&gt;tutorial with Docker Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Get more with Timeplus&lt;/h2&gt; &#xA;&lt;p&gt;To access more features, such as sources, sinks, dashboards, alerts, data lineage, create a workspace at &lt;a href=&#34;https://us.timeplus.cloud&#34;&gt;Timeplus Cloud&lt;/a&gt; or try the &lt;a href=&#34;https://demo.timeplus.cloud&#34;&gt;live demo&lt;/a&gt; with pre-built live data and dashboards.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;We publish full documentation for Proton at &lt;a href=&#34;https://docs.timeplus.com/proton&#34;&gt;docs.timeplus.com&lt;/a&gt; alongside documentation for the Timeplus (Cloud and Enterprise) platform.&lt;/p&gt; &#xA;&lt;p&gt;We also have a &lt;a href=&#34;https://docs.timeplus.com/proton-faq/&#34;&gt;FAQ&lt;/a&gt; for detailing how we chose Apache License 2.0, how Proton is related to ClickHouse, what features are available in Proton versus Timeplus, and more.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome your contributions! If you are looking for issues to work on, try looking at &lt;a href=&#34;https://github.com/timeplus-io/proton/issues&#34;&gt;the issue list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://github.com/timeplus-io/proton/wiki/Contributing&#34;&gt;wiki&lt;/a&gt; for more details, and &lt;a href=&#34;https://github.com/timeplus-io/proton/raw/develop/BUILD.md&#34;&gt;BUILD.md&lt;/a&gt; to compile Proton in different platforms.&lt;/p&gt; &#xA;&lt;p&gt;We also encourage you to join the &lt;code&gt;#contributing&lt;/code&gt; channel in the &lt;a href=&#34;https://timeplus.com/slack&#34;&gt;Timeplus Community Slack&lt;/a&gt; to ask questions and meet other active contributors from Timeplus and beyond.&lt;/p&gt; &#xA;&lt;h2&gt;Need help?&lt;/h2&gt; &#xA;&lt;p&gt;Join the &lt;a href=&#34;https://timeplus.com/slack&#34;&gt;Timeplus Community Slack&lt;/a&gt; to connect with Timeplus engineers and other Proton users.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use the &lt;code&gt;#proton&lt;/code&gt; channel to ask questions about installing, using, or deploying Proton.&lt;/li&gt; &#xA; &lt;li&gt;Join the &lt;code&gt;#contributing&lt;/code&gt; channel to connect with other contributors to Proton.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For filing bugs, suggesting improvements, or requesting new features, see the &lt;a href=&#34;https://github.com/timeplus-io/proton/issues&#34;&gt;open issues&lt;/a&gt; here on GitHub.&lt;/p&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;Proton uses Apache License 2.0. See details in the &lt;a href=&#34;https://github.com/timeplus-io/proton/raw/develop/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>