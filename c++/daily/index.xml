<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-24T01:29:25Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mausimus/ShaderGlass</title>
    <updated>2025-02-24T01:29:25Z</updated>
    <id>tag:github.com,2025-02-24:/mausimus/ShaderGlass</id>
    <link href="https://github.com/mausimus/ShaderGlass" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Overlay for running GPU shaders on top of Windows desktop&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/license/mausimus/ShaderGlass?color=red&#34; alt=&#34;License&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/mausimus/ShaderGlass?color=yellow&#34; alt=&#34;GitHub Stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/mausimus/ShaderGlass/total&#34; alt=&#34;Downloads&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release-date/mausimus/ShaderGlass?label=latest%20release&amp;amp;color=blue&#34; alt=&#34;Latest Release&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release-date-pre/mausimus/ShaderGlass?label=beta%20release&amp;amp;color=orange&#34; alt=&#34;Beta Release&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;ShaderGlass&lt;/h2&gt; &#xA;&lt;p&gt;Overlay for running GPU shaders on top of Windows desktop.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;applies shader effects on top of any window on the desktop&lt;/li&gt; &#xA; &lt;li&gt;includes &lt;a href=&#34;https://github.com/libretro/RetroArch&#34;&gt;RetroArch&lt;/a&gt; shader library covering: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;CRT monitor simulation&lt;/li&gt; &#xA;   &lt;li&gt;image upscaling&lt;/li&gt; &#xA;   &lt;li&gt;TV / VHS simulation&lt;/li&gt; &#xA;   &lt;li&gt;softening, denoising, blur, sharpen and many more&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;works with most emulators, retro platforms and pixel art editors including: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.dosbox.com/&#34;&gt;DOSBox&lt;/a&gt;, &lt;a href=&#34;https://github.com/FrodeSolheim/fs-uae&#34;&gt;FS-UAE&lt;/a&gt;, &lt;a href=&#34;http://www.virtualdub.org/altirra.html&#34;&gt;Altirra&lt;/a&gt;, &lt;a href=&#34;https://github.com/scummvm/scummvm&#34;&gt;ScummVM&lt;/a&gt;, &lt;a href=&#34;https://github.com/adventuregamestudio/ags&#34;&gt;AGS&lt;/a&gt;, &lt;a href=&#34;https://sf.net/projects/vice-emu&#34;&gt;VICE&lt;/a&gt;, &lt;a href=&#34;https://www.aseprite.org/&#34;&gt;Aseprite&lt;/a&gt; etc.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;excellent companion for pixel art drawing showing shaded and/or aspect-ratio corrected preview&lt;/li&gt; &#xA; &lt;li&gt;you can even use it on top of YouTube, Twitch or modern games&lt;/li&gt; &#xA; &lt;li&gt;saving and loading profiles&lt;/li&gt; &#xA; &lt;li&gt;multiple operating modes, including borderless fullscreen&lt;/li&gt; &#xA; &lt;li&gt;can be captured by OBS (using Game Capture source)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Download&lt;/h3&gt; &#xA;&lt;p&gt;Latest release (v1.0, 21 Feb 2025):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;refresh of RetroArch shader library&lt;/li&gt; &#xA; &lt;li&gt;back-end extensions to support more complex shaders (MegaBezel)&lt;/li&gt; &#xA; &lt;li&gt;improved fullscreen with letterboxing and aspect ratio preservation&lt;/li&gt; &#xA; &lt;li&gt;quick access to Recent Profiles from menu&lt;/li&gt; &#xA; &lt;li&gt;FPS display in title bar&lt;/li&gt; &#xA; &lt;li&gt;selection of best shaders in Browser window&lt;/li&gt; &#xA; &lt;li&gt;bug fixes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mausimus/ShaderGlass/releases/download/v1.0/ShaderGlass-1.0-win-x64.zip&#34;&gt;https://github.com/mausimus/ShaderGlass/releases/download/v1.0/ShaderGlass-1.0-win-x64.zip&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Follow &lt;a href=&#34;https://mausimus.itch.io/shaderglass&#34;&gt;ShaderGlass on itch.io&lt;/a&gt; for latest updates.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows 10, version 2004&lt;/strong&gt; (build 19041) or &lt;strong&gt;Windows 11&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;will work on version 1903 but in limited capacity (no Desktop Glass mode)&lt;/li&gt; &#xA;   &lt;li&gt;Windows 11 allows the &lt;strong&gt;removal of yellow border&lt;/strong&gt; around capture&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;DirectX 11-capable GPU&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If the app reports missing libraries please install &lt;a href=&#34;https://aka.ms/vs/16/release/vc_redist.x64.exe&#34;&gt;Visual C++ Redistributable 2019&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Screenshots&lt;/h3&gt; &#xA;&lt;p&gt;ShaderGlass running over multiple applications on Windows 11 desktop.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mausimus/ShaderGlass/master/images/screen7.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gWOcucS9_mg&#34; title=&#34;ShaderGlass&#34;&gt;Demonstration video (YouTube)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Desktop Glass mode&lt;/h5&gt; &#xA;&lt;p&gt;In this mode a transparent floating window will apply a shader to anything behind it. Requires Windows 10 2004 - on 1903/1909 you will see only a black window if you switch to this mode.&lt;/p&gt; &#xA;&lt;p&gt;Wikipedia in Chrome processed by crt-geom shader which applies scanlines and CRT curvature.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mausimus/ShaderGlass/master/images/screen1.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Window Clone mode&lt;/h5&gt; &#xA;&lt;p&gt;When capture is fixed to a specific window it&#39;s easier to tune scaling to match the input and image can also be recaptured (screenshot/OBS etc.)&lt;/p&gt; &#xA;&lt;h6&gt;FS-UAE&lt;/h6&gt; &#xA;&lt;p&gt;Amiga version of &lt;a href=&#34;https://store.steampowered.com/app/32360/The_Secret_of_Monkey_Island_Special_Edition/&#34;&gt;The Secret of Monkey Island (1990)&lt;/a&gt; running in FS-UAE with crt-interlaced-halation shader applied.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mausimus/ShaderGlass/master/images/screen4.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h6&gt;Altirra&lt;/h6&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.mobygames.com/game/ninja_&#34;&gt;Ninja (1986)&lt;/a&gt; for the Atari XL running in Altirra with a TV-OUT simulation shader.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mausimus/ShaderGlass/master/images/screen5.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h6&gt;Adventure Game Studio&lt;/h6&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://store.steampowered.com/app/1098770/The_Crimson_Diamond/&#34;&gt;The Crimson Diamond (2024)&lt;/a&gt;, a modern AGS game using HSM MegaBezel STD shader.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mausimus/ShaderGlass/master/images/screen3.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h6&gt;DOSBox&lt;/h6&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://store.steampowered.com/app/494740/Police_Quest_Collection/&#34;&gt;Police Quest (1987)&lt;/a&gt; with its massive half-EGA pixels, aspect-ratio corrected and post-processed using newpixie-crt shader.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mausimus/ShaderGlass/master/images/screen2.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.mobygames.com/game/rick-dangerous&#34;&gt;Rick Dangerous (1989)&lt;/a&gt; with C64 monitor shader applied.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mausimus/ShaderGlass/master/images/screen6.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Options&lt;/h3&gt; &#xA;&lt;p&gt;Currently supported options are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Processing -&amp;gt; Enable Global Hotkeys&lt;/em&gt; - toggle use of global hotkeys (if they conflict with another app)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Input -&amp;gt; Desktop&lt;/em&gt; - captures the whole desktop or an individual monitor, defaults to Glass mode&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Lock Current Area&lt;/em&gt; - always capture current area even if ShaderGlass window is moved&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Input -&amp;gt; Window&lt;/em&gt; - captures the selected window, defaults to Clone mode&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Input -&amp;gt; File...&lt;/em&gt; - load a .png or .jpg file as input&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Input -&amp;gt; Capture Cursor&lt;/em&gt; - whether to include mouse cursor in capture&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Input -&amp;gt; Remove Yellow Border&lt;/em&gt; - disables yellow frame around captured area (forced security feature); currently only supported on Windows 11&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Input -&amp;gt; Pixel Size&lt;/em&gt; - indicates the size of input pixels (pre-scaling), i.e. if you run a game in x3 scaling mode set this to x3 as well so that ShaderGlass can tell the original resolution&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Adjust for DPI Scale&lt;/em&gt; - if your source always applies Windows DPI Scaling when displaying images (for example browsers) enable this option to take it into account; most emulators don&#39;t do this however&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Output -&amp;gt; Mode&lt;/em&gt; - overrides default mode for the input type:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;em&gt;Glass&lt;/em&gt; (default for Desktop) - ShaderGlass window appears transparent, you have to position it over the window or area you&#39;d like to capture&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;em&gt;Clone&lt;/em&gt; (default for Window) - ShaderGlass copies the content of capture so you can position it anywhere; this mode is also faster and more compatible&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Output -&amp;gt; Window&lt;/em&gt; - override mouse behavior:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;em&gt;Solid&lt;/em&gt; (default for Clone) - ShaderGlass window area is solid (traps mouse events), with the only exception of passing focus to captured window when clicked&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;em&gt;Click-through&lt;/em&gt; (default for Glass) - ShaderGlass window area is transparent and clickable/scrollable-through to window(s) underneath&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Output -&amp;gt; Scale&lt;/em&gt; - apply additional scaling to the output if you&#39;d like it to be larger; using no pre-scaling and only output scaling should result in best performance&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;em&gt;Free&lt;/em&gt; - allow manual resizing of ShaderGlass window (Window Clone and File modes only)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Output -&amp;gt; Aspect Ratio Correction&lt;/em&gt; - presets for common aspect ratio correction factors (DOS, etc.), applied horizontally to preserve scanline count&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you select &lt;em&gt;Custom&lt;/em&gt; you can enter your own correction ratio expressed as pixel height (1.0 being square pixel). For example, in MS-DOS era a picture of 320x200 resolution (16:10) was displayed on a 4:3 screen meaning each pixel was 1.2x tall on screen, 1.2 = (16/10) / (4/3)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Output -&amp;gt; FPS&lt;/em&gt; - by default ShaderGlass runs at V-Sync, but in order to reduce GPU load you can divide the frame rate by n (for pixel art etc.)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Output -&amp;gt; Take Snapshot&lt;/em&gt; - export current picture in .png format&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Output -&amp;gt; Fullscreen&lt;/em&gt; (Ctrl+Shift+G) - turn ShaderGlass into a topmost fullscreen borderless window, in Glass mode you will still see yellow outline around the screen but if you can use Window Glass (surrounding black bars) or Window Clone (top-left aligned) with your source then you can avoid yellow edges; press Ctrl+Shift+G to revert&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Shader&lt;/em&gt; - choose RetroArch shader to apply, or &lt;em&gt;none&lt;/em&gt; shader for testing&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;em&gt;Choose&lt;/em&gt; - open Shader Browser to switch the current shader&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;em&gt;Next&lt;/em&gt; - switch to the next Shader&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;em&gt;Random&lt;/em&gt; - choose a random Shader&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;em&gt;Active&lt;/em&gt; - temporarily switch to &#39;none&#39; Shader to see the difference (hold TAB)&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;em&gt;Parameters&lt;/em&gt; - show and modify active shader&#39;s parameters&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can save and load profile files which will store all the options. It&#39;s also possible to pass profile file path on the command line and ShaderGlass will load it on startup.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Command Line&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;ShaderGlass.exe [-p|--paused] [-f|--fullscreen] [profile.sgp]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can pass profile filename as a command-line parameter to ShaderGlass.exe and it will be auto-loaded.&lt;/p&gt; &#xA;&lt;p&gt;If your profile file name contains spaces please put it in quotes.&lt;/p&gt; &#xA;&lt;p&gt;In addition -p will launch in paused mode, and -f will launch in fullscreen mode.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;Tuning&lt;/h4&gt; &#xA;&lt;p&gt;In order to achieve the best effect it&#39;s necessary to tune parameters to match your input:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;if you use scaling in your input, use nearest-neighbour (i.e. no smoothing) and set &lt;em&gt;Input -&amp;gt; Pixel Size&lt;/em&gt; to match&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;moving/resizing the window slightly might also help find the best fit for downscaling pixels&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;use Window Clone mode if you can, it&#39;s fastest and most compatible; if you need mouse click-through use Glass mode&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Always check that input is crisply pixelated using the &#34;none&#34; shader&lt;/strong&gt; as there is often implicit scaling happening (for example even when Chrome displays an image at 100%, Windows DPI scaling is still applied). The none shader should display a pixelated image with no smoothing whatsoever, try to match Input Pixel Size setting with your input&#39;s size to achieve that.&lt;/p&gt; &#xA;&lt;h3&gt;Parameters&lt;/h3&gt; &#xA;&lt;p&gt;All shaders start using default Parameters as defined by their authors, but you can also tweak them using &lt;em&gt;Shader -&amp;gt; Parameters&lt;/em&gt; menu option.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mausimus/ShaderGlass/master/images/params.png&#34; alt=&#34;params&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Emulators&lt;/h5&gt; &#xA;&lt;p&gt;Most emulators (DOSBox, FS-UAE, Altirra etc.) will capture mouse by default so you can use them in Window Clone mode. ShaderGlass window will remain topmost so just position it over the game window and Alt-Tab to the game to have mouse and focus captured.&lt;/p&gt; &#xA;&lt;h5&gt;ScummVM&lt;/h5&gt; &#xA;&lt;p&gt;ScummVM doesn&#39;t capture mouse cursor by default so for best results follow below steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use Window Clone mode, set Input/Output/Shader options to your liking&lt;/li&gt; &#xA; &lt;li&gt;Switch Output Window to Click-through&lt;/li&gt; &#xA; &lt;li&gt;Click or Alt-Tab to ScummVM game window so that it has focus&lt;/li&gt; &#xA; &lt;li&gt;Press Ctrl-M which will force ScummVM to capture mouse&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This way you should have the mouse captured by ScummVM so that it remains within the game window until you press Ctrl-M again. You can apply output scaling and/or aspect ratio correction in ShaderGlass and enjoy the game.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Frequently Asked Questions&lt;/h3&gt; &#xA;&lt;p&gt;See FAQ &lt;a href=&#34;https://raw.githubusercontent.com/mausimus/ShaderGlass/master/FAQ.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Code&lt;/h3&gt; &#xA;&lt;p&gt;Built using Visual Studio 2022 using ISO C++ 20, Windows SDK 10.0.26100, Windows Capture API and DirectX 11.&lt;/p&gt; &#xA;&lt;p&gt;ShaderGlass includes a limited implementation of RetroArch shader back-end. &lt;a href=&#34;https://raw.githubusercontent.com/mausimus/ShaderGlass/master/ShaderGen&#34;&gt;ShaderGen&lt;/a&gt; is a command-line tool for converting Slang shaders into .h files which can be merged into ShaderGlass. The conversion process requires:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KhronosGroup/glslang&#34;&gt;glslang&lt;/a&gt; for converting Slang/GLSL shaders to SPIR-V&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KhronosGroup/SPIRV-Cross&#34;&gt;SPIR-V cross-compiler&lt;/a&gt; for converting those to HLSL (DX11 format)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk/&#34;&gt;Direct3D Shader Compiler (fxc.exe)&lt;/a&gt; for pre-compiling into bytecode&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Notices&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;ShaderGlass application is provided under &lt;a href=&#34;https://raw.githubusercontent.com/mausimus/ShaderGlass/master/LICENSE&#34;&gt;GNU General Public License v3.0&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Includes precompiled shaders from &lt;a href=&#34;https://github.com/libretro/slang-shaders&#34;&gt;libretro/RetroArch shader repository&lt;/a&gt;. Please refer to copyright notes within shader code for detailed copyright and license information about each shader.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;App icon courtesy of &lt;a href=&#34;http://www.icons-land.com/&#34;&gt;Icons-Land&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Big kudos to RetroArch team, emulator developers and the wide retro community!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Thanks to @lonestarr for PRs and everyone for feedback and testing &lt;span&gt;👍&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>