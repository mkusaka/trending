<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-26T01:32:51Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Rosalie241/RMG</title>
    <updated>2023-01-26T01:32:51Z</updated>
    <id>tag:github.com,2023-01-26:/Rosalie241/RMG</id>
    <link href="https://github.com/Rosalie241/RMG" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Rosalie&#39;s Mupen GUI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rosalie&#39;s Mupen GUI&lt;/h1&gt; &#xA;&lt;p&gt;Rosalie&#39;s Mupen GUI is a free and open-source mupen64plus GUI written in C++.&lt;/p&gt; &#xA;&lt;p&gt;It offers a simple-to-use user interface.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Join the &lt;a href=&#34;https://discord.gg/k9GuyJ2PpF&#34;&gt;Rosalie&#39;s Mupen GUI Discord Server&lt;/a&gt; for support&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Rosalie&#39;s Mupen GUI is licensed under the &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.en.html&#34;&gt;GNU General Public License v3.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Showcase&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Rosalie241/RMG/master/Package/Screenshots/RomBrowser.png&#34; alt=&#34;RomBrowser&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Rosalie241/RMG/master/Package/Screenshots/InGame.png&#34; alt=&#34;InGame&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Rosalie241/RMG/master/Package/Screenshots/InputSettings.png&#34; alt=&#34;InputSettings&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;h4&gt;Linux&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Portable Debian/Ubuntu&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get -y install cmake libhidapi-dev libsamplerate0-dev libspeex-dev libminizip-dev libsdl2-dev libfreetype6-dev libgl1-mesa-dev libglu1-mesa-dev pkg-config zlib1g-dev binutils-dev libspeexdsp-dev qt6-base-dev libqt6svg6-dev build-essential nasm git zip ninja-build&#xA;./Source/Script/Build.sh Release&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Portable Fedora&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo dnf install hidapi-devel libsamplerate-devel minizip-compat-devel SDL2-devel freetype-devel mesa-libGL-devel mesa-libGLU-devel zlib-ng-devel binutils-devel speexdsp-devel qt6-qtbase-devel qt6-qtsvg-devel gcc-c++ nasm git ninja-build&#xA;./Source/Script/Build.sh Release&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When it&#39;s done building, executables can be found in &lt;code&gt;Bin/Release&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installation/Packaging&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export src_dir=&#34;$(pwd)&#34;&#xA;export build_dir=&#34;$(pwd)/build&#34;&#xA;mkdir -p &#34;$build_dir&#34;&#xA;cmake -S &#34;$src_dir&#34; -B &#34;$build_dir&#34; -DCMAKE_BUILD_TYPE=&#34;Release&#34; -DPORTABLE_INSTALL=&#34;OFF&#34; -DCMAKE_INSTALL_PREFIX=&#34;/usr&#34; -G &#34;Ninja&#34;&#xA;cmake --build &#34;$build_dir&#34;&#xA;cmake --install &#34;$build_dir&#34; --prefix=&#34;/usr&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Windows&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download &amp;amp; Install &lt;a href=&#34;https://www.msys2.org/&#34;&gt;MSYS2&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman -S --needed make mingw-w64-x86_64-cmake mingw-w64-x86_64-gcc mingw-w64-x86_64-hidapi mingw-w64-x86_64-freetype mingw-w64-x86_64-libpng mingw-w64-x86_64-SDL2 mingw-w64-x86_64-qt6 mingw-w64-x86_64-SDL2 mingw-w64-x86_64-hidapi mingw-w64-x86_64-speexdsp mingw-w64-x86_64-libsamplerate mingw-w64-x86_64-nasm mingw-w64-x86_64-minizip git&#xA;./Source/Script/Build.sh Release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When it&#39;s done building, executables can be found in &lt;code&gt;Bin/Release&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>seanbaxter/circle</title>
    <updated>2023-01-26T01:32:51Z</updated>
    <id>tag:github.com,2023-01-26:/seanbaxter/circle</id>
    <link href="https://github.com/seanbaxter/circle" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The compiler is available for download. Get it!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Circle&lt;/h1&gt; &#xA;&lt;p&gt;The C++ Automation Language&lt;br&gt; 2023 Sean Baxter&lt;/p&gt; &#xA;&lt;p&gt;Download &lt;a href=&#34;https://www.circle-lang.org/&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Follow me on Twitter &lt;a href=&#34;https://www.twitter.com/seanbax&#34;&gt;@seanbax&lt;/a&gt; for compiler updates.&lt;/p&gt; &#xA;&lt;h2&gt;New Circle&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/new-circle/README.md&#34;&gt;New Circle notes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;New Circle is a major transformation of the Circle compiler, intended as a response to recent &lt;a href=&#34;https://accu.org/journals/overload/30/172/teodorescu/&#34;&gt;successor language announcements&lt;/a&gt;. It focuses on a novel &lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/new-circle/README.md#versioning-with-feature-pragmas&#34;&gt;fine-grained versioning mechanism&lt;/a&gt; that allows the compiler to &lt;strong&gt;fix defects&lt;/strong&gt; and make the language &lt;strong&gt;safer&lt;/strong&gt; and &lt;strong&gt;more productive&lt;/strong&gt; while maintaining &lt;strong&gt;100% compatibility&lt;/strong&gt; with existing code assets.&lt;/p&gt; &#xA;&lt;p&gt;New Circle is the richest C++ compiler yet. Try out:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/new-circle/README.md#choice&#34;&gt;choice types&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/new-circle/README.md#pattern-matching&#34;&gt;pattern matching&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/new-circle/README.md#interface&#34;&gt;interfaces and impls&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/new-circle/README.md#language-type-erasure&#34;&gt;language type erasure&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/new-circle/README.md#as&#34;&gt;&lt;em&gt;as-expressions&lt;/em&gt;&lt;/a&gt; for safer conversions,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/new-circle/README.md#new_decl_syntax&#34;&gt;a modern declaration syntax&lt;/a&gt; with &lt;code&gt;fn&lt;/code&gt; and &lt;code&gt;var&lt;/code&gt; keywords to make clearer, less ambiguous declarations,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/new-circle/README.md#simpler_precedence&#34;&gt;a simpler syntax for binary expressions&lt;/a&gt;, greatly reducing the likelihood of bugs caused by confusing operator precedences,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/new-circle/README.md#forward&#34;&gt;a &lt;code&gt;forward&lt;/code&gt; keyword&lt;/a&gt; to take the complexity and bugginess out of forwarding references,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/new-circle/README.md#safer_initializer_list&#34;&gt;safer initializer lists&lt;/a&gt;, which address ambiguities when calling std::initializer_list constructors and non-std::initializer_list constructors,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/new-circle/README.md#overload-sets-as-arguments&#34;&gt;lifting lambdas&lt;/a&gt; to pass overload sets as function arguments,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/new-circle/README.md#template-parameter-kinds&#34;&gt;nine kinds of template parameters&lt;/a&gt; to make templates far more comprehensive,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/new-circle/README.md#reflection-traits&#34;&gt;reflection traits&lt;/a&gt; to access packs of information about class types, enum types, function types, class specializations, and so on,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/new-circle/README.md#pack-traits&#34;&gt;pack traits&lt;/a&gt; for pack-transforming algorithms, like sort, unique, count, erase, difference, intersection, and so on.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;New Circle describes a path for evolving C++ to meet the needs of institutional users. The versioning mechanism that accommodated the development of the features above will also accommodate research into critically important areas like memory safety. Rather than insisting on a one-size-fit&#39;s-all approach to language development, project leads can opt into collections of features that best target their projects&#39; needs.&lt;/p&gt; &#xA;&lt;h2&gt;Old docs. May be out of date. Refer to &lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/new-circle/README.md&#34;&gt;New Circle&lt;/a&gt; for fresh information.&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/stdlib#circle-implementations-of-standard-library-classes&#34;&gt;Circle implementations of Standard Library classes&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/tuple#circle-tuple&#34;&gt;Member packs and &lt;code&gt;std::tuple&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/variant#circle-variant&#34;&gt;Member packs and &lt;code&gt;std::variant&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/seanbaxter/mdspan/tree/circle#mdspan-circle&#34;&gt;Member packs and &lt;code&gt;mdspan&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/cuda/README.md&#34;&gt;CUDA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/pattern/README.md&#34;&gt;Pattern Matching&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/imperative/README.md&#34;&gt;Circle Imperative Arguments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/member-traits/README.md&#34;&gt;Member traits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/conditional/README.md&#34;&gt;Circle conditionals&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/universal/README.md&#34;&gt;Universal member access&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/reflection/README.md&#34;&gt;Circle reflection and typed enums&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.github.com/seanbaxter/shaders&#34;&gt;Circle C++ for shaders&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/comprehension/README.md&#34;&gt;List comprehensions, slices, ranges, for-expressions, functional folds and expansion expressions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/embed/embed.md&#34;&gt;File @embed and a compile-time design dilemma&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/fmt/fmt.md&#34;&gt;The Circle format library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/seanbaxter/circle/master/regex/regex.md&#34;&gt;Compile-time regular expressions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>oziavci/cat-dog-feeder-wifi</title>
    <updated>2023-01-26T01:32:51Z</updated>
    <id>tag:github.com,2023-01-26:/oziavci/cat-dog-feeder-wifi</id>
    <link href="https://github.com/oziavci/cat-dog-feeder-wifi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automatic pet feeder. It can be timed and managed online. ESP8266 nodemcu project.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;cat-dog-feeder-wifi&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Otomatik kedi - köpek besleme projesi. Geri sayım ayarlı ve Blynk aracılığı ile online kontrol edilebilir. ESP8266 nodemcu projesidir.&lt;/li&gt; &#xA; &lt;li&gt;Automatic pet feeder. It can be timed and managed online. ESP8266 nodemcu project.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Video&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=2BcprNNV_gc&#34; title=&#34;Otomatik Kedi - Köpek Mama Makinesi (Süre Ayarlı &amp;amp; WiFi ile kontrol) - ESP8266 Nodemcu&#34;&gt;&lt;img src=&#34;https://www.oguzhanavci.com/upload/git-video-cover.jpg&#34; alt=&#34;Otomatik Kedi - Köpek Mama Makinesi (Süre Ayarlı &amp;amp; WiFi ile kontrol) - ESP8266 Nodemcu&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Malzemeler&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ESP8266 nodemcu&lt;/li&gt; &#xA; &lt;li&gt;MG996R 13 kg Servo Motor&lt;/li&gt; &#xA; &lt;li&gt;Push Buton&lt;/li&gt; &#xA; &lt;li&gt;10K Potansiyometre&lt;/li&gt; &#xA; &lt;li&gt;16x2 LCD Ekran - I2C&lt;/li&gt; &#xA; &lt;li&gt;Proje birleştirmesinde materyal olarak pringles kutusu ve metal kutu kullanılmıştır. Alternatif materyal kullanılabilir.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Özellikler&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Geri sayım&lt;/li&gt; &#xA; &lt;li&gt;Son geri sayım süresi EEPROM&#39;a kaydedilir ve kapanıp açılma durumunda oradan okunur&lt;/li&gt; &#xA; &lt;li&gt;Zaman ayarı&lt;/li&gt; &#xA; &lt;li&gt;Blynk uygulama bağlantısı&lt;/li&gt; &#xA; &lt;li&gt;Wifi üzerinden yem verme ve zaman ayarı yapma&lt;/li&gt; &#xA; &lt;li&gt;Yem verme bildirimi&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Uyarı!&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hobi projesidir. Hatasız çalışma garantisi yoktur. Lütfen evcil hayvanınızı bu tarz projelere güvenerek yalnız bırakmayın.&lt;/li&gt; &#xA; &lt;li&gt;It&#39;s a hobby project. There is no guarantee of error-free operation. Please do not leave your pet alone relying on such projects.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>