<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-01T01:31:41Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cmu-db/bustub</title>
    <updated>2022-09-01T01:31:41Z</updated>
    <id>tag:github.com,2022-09-01:/cmu-db/bustub</id>
    <link href="https://github.com/cmu-db/bustub" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The BusTub Relational Database Management System (Educational)&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cmu-db/bustub/master/logo/bustub-whiteborder.svg?sanitize=true&#34; alt=&#34;BusTub Logo&#34; height=&#34;200&#34;&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cmu-db/bustub/actions/workflows/cmake.yml&#34;&gt;&lt;img src=&#34;https://github.com/cmu-db/bustub/actions/workflows/cmake.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;BusTub is a relational database management system built at &lt;a href=&#34;https://db.cs.cmu.edu&#34;&gt;Carnegie Mellon University&lt;/a&gt; for the &lt;a href=&#34;https://15445.courses.cs.cmu.edu&#34;&gt;Introduction to Database Systems&lt;/a&gt; (15-445/645) course. This system was developed for educational purposes and should not be used in production environments.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARNING: IF YOU ARE A STUDENT IN THE CLASS, DO NOT DIRECTLY FORK THIS REPO. DO NOT PUSH PROJECT SOLUTIONS PUBLICLY. THIS IS AN ACADEMIC INTEGRITY VIOLATION AND CAN LEAD TO GETTING YOUR DEGREE REVOKED, EVEN AFTER YOU GRADUATE.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Cloning this Repository&lt;/h2&gt; &#xA;&lt;p&gt;The following instructions are adapted from the Github documentation on &lt;a href=&#34;https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/duplicating-a-repository&#34;&gt;duplicating a repository&lt;/a&gt;. The procedure below walks you through creating a private BusTub repository that you can use for development.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go &lt;a href=&#34;https://github.com/new&#34;&gt;here&lt;/a&gt; to create a new repository under your account. Pick a name (e.g. &lt;code&gt;bustub-private&lt;/code&gt;) and select &lt;strong&gt;Private&lt;/strong&gt; for the repository visibility level.&lt;/li&gt; &#xA; &lt;li&gt;On your development machine, create a bare clone of the public BusTub repository: &lt;pre&gt;&lt;code&gt;$ git clone --bare https://github.com/cmu-db/bustub.git bustub-public&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Next, &lt;a href=&#34;https://git-scm.com/docs/git-push#Documentation/git-push.txt---mirror&#34;&gt;mirror&lt;/a&gt; the public BusTub repository to your own private BusTub repository. Suppose your GitHub name is &lt;code&gt;student&lt;/code&gt; and your repository name is &lt;code&gt;bustub-private&lt;/code&gt;. The procedure for mirroring the repository is then: &lt;pre&gt;&lt;code&gt;$ cd bustub-public&#xA;&#xA;# If you pull / push over HTTPS&#xA;$ git push https://github.com/student/bustub-private.git master&#xA;&#xA;# If you pull / push over SSH&#xA;$ git push git@github.com:student/bustub-private.git master&#xA;&lt;/code&gt;&lt;/pre&gt; This copies everything in the public BusTub repository to your own private repository. You can now delete your local clone of the public repository: &lt;pre&gt;&lt;code&gt;$ cd ..&#xA;$ rm -rf bustub-public&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Clone your private repository to your development machine: &lt;pre&gt;&lt;code&gt;# If you pull / push over HTTPS&#xA;$ git clone https://github.com/student/bustub-private.git&#xA;&#xA;# If you pull / push over SSH&#xA;$ git clone git@github.com:student/bustub-private.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Add the public BusTub repository as a second remote. This allows you to retrieve changes from the CMU-DB repository and merge them with your solution throughout the semester: &lt;pre&gt;&lt;code&gt;$ git remote add public https://github.com/cmu-db/bustub.git&#xA;&lt;/code&gt;&lt;/pre&gt; You can verify that the remote was added with the following command: &lt;pre&gt;&lt;code&gt;$ git remote -v&#xA;origin&#x9;https://github.com/student/bustub-private.git (fetch)&#xA;origin&#x9;https://github.com/student/bustub-private.git (push)&#xA;public&#x9;https://github.com/cmu-db/bustub.git (fetch)&#xA;public&#x9;https://github.com/cmu-db/bustub.git (push)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;You can now pull in changes from the public BusTub repository as needed with: &lt;pre&gt;&lt;code&gt;$ git pull public master&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We suggest working on your projects in separate branches. If you do not understand how Git branches work, &lt;a href=&#34;https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging&#34;&gt;learn how&lt;/a&gt;. If you fail to do this, you might lose all your work at some point in the semester, and nobody will be able to help you.&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;p&gt;We recommend developing BusTub on Ubuntu 20.04, Ubuntu 22.04, or macOS (M1/M2/Intel). We do not support any other environments (i.e., do not open issues or come to office hours to debug them). We do not support WSL.&lt;/p&gt; &#xA;&lt;h3&gt;Linux / Mac (Recommended)&lt;/h3&gt; &#xA;&lt;p&gt;To ensure that you have the proper packages on your machine, run the following script to automatically install them:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Linux&#xA;$ sudo build_support/packages.sh&#xA;# macOS&#xA;$ build_support/packages.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run the following commands to build the system:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mkdir build&#xA;$ cd build&#xA;$ cmake ..&#xA;$ make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to compile the system in debug mode, pass in the following flag to cmake: Debug mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cmake -DCMAKE_BUILD_TYPE=Debug ..&#xA;$ make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This enables &lt;a href=&#34;https://github.com/google/sanitizers&#34;&gt;AddressSanitizer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Windows (Not Guaranteed to Work)&lt;/h3&gt; &#xA;&lt;p&gt;If you are using Windows 10, you can use the Windows Subsystem for Linux (WSL) to develop, build, and test Bustub. All you need is to &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install-win10&#34;&gt;Install WSL&lt;/a&gt;. You can just choose &#34;Ubuntu&#34; (no specific version) in Microsoft Store. Then, enter WSL and follow the above instructions.&lt;/p&gt; &#xA;&lt;p&gt;If you are using CLion, it also &lt;a href=&#34;https://blog.jetbrains.com/clion/2018/01/clion-and-linux-toolchain-on-windows-are-now-friends&#34;&gt;works with WSL&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Vagrant (Not Guaranteed to Work)&lt;/h3&gt; &#xA;&lt;p&gt;First, make sure you have Vagrant and Virtualbox installed&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo apt update&#xA;$ sudo apt install vagrant virtualbox&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From the repository directory, run this command to create and start a Vagrant box:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ vagrant up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will start a Vagrant box running Ubuntu 20.02 in the background with all the packages needed. To access it, type&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ vagrant ssh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to open a shell within the box. You can find Bustub&#39;s code mounted at &lt;code&gt;/bustub&lt;/code&gt; and run the commands mentioned above like normal.&lt;/p&gt; &#xA;&lt;h3&gt;Docker (Not Guaranteed to Work)&lt;/h3&gt; &#xA;&lt;p&gt;First, make sure that you have docker installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ sudo apt update&#xA;$ sudo apt install docker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From the repository directory, run these commands to create a Docker image and container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker build . -t bustub&#xA;$ docker create -t -i --name bustub -v $(pwd):/bustub bustub bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create a Docker image and container. To run it, type:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker start -a -i bustub&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to open a shell within the box. You can find Bustub&#39;s code mounted at &lt;code&gt;/bustub&lt;/code&gt; and run the commands mentioned above like normal.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd build&#xA;$ make check-tests&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>gaoxiang12/slambook2</title>
    <updated>2022-09-01T01:31:41Z</updated>
    <id>tag:github.com,2022-09-01:/gaoxiang12/slambook2</id>
    <link href="https://github.com/gaoxiang12/slambook2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;edition 2 of the slambook&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Slambook2&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gaoxiang12/slambook2/master/figures/title.png&#34; alt=&#34;titlepage&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Welcome to Slambook 2nd Edition! This is the codebase of our book. Here are some relavant links if you need them:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://item.jd.com/12666058.html&#34;&gt;Our book at jd.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/27028215/&#34;&gt;Our book at douban.com&lt;/a&gt; (I&#39;ll be happy to get a score at douban)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gaoxiang12/slambook&#34;&gt;code of slambook version 1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gaoxiang12/slambook-en&#34;&gt;slambook in English&lt;/a&gt; (Still on going)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Email me if you have any questions: gao.xiang.thu at gmail dot com. Or send a issue at github if your question is about the code.&lt;/p&gt; &#xA;&lt;p&gt;Errata will be updated at this code base.&lt;/p&gt; &#xA;&lt;p&gt;Hope you like this book.&lt;/p&gt; &#xA;&lt;p&gt;BaiduYun backup link in case your github is very slow (common in China): &lt;a href=&#34;https://pan.baidu.com/s/1XQwpnDb3BOvxXZhL-03p3w&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;视觉SLAM十四讲：从理论到实践 第二版&lt;/h2&gt; &#xA;&lt;p&gt;欢迎来到视觉SLAM十四讲：从理论到实践。这里存放本书对应的代码文件。以下是一些可能对你有用的链接：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://item.jd.com/12666058.html&#34;&gt;京东书籍链接&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gaoxiang12/slambook&#34;&gt;第一版书代码&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gaoxiang12/slambook-en&#34;&gt;英文版代码&lt;/a&gt; (正在翻译中)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;如果您对书籍内容有疑问，请给我发送邮件。如果对代码有疑问，请点击上方的issue链接新建issues。我会不定期查看和回复（抱歉我可能无法回复所有问题和邮件）。&lt;/p&gt; &#xA;&lt;p&gt;勘误表会更新到代码库中。&lt;/p&gt; &#xA;&lt;p&gt;希望您喜欢本书。&lt;/p&gt; &#xA;&lt;p&gt;本代码的百度云备份（如果您的github速度非常慢）&lt;a href=&#34;https://pan.baidu.com/s/1XQwpnDb3BOvxXZhL-03p3w&#34;&gt;下载链接&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Joshua-Ashton/VPhysics-Jolt</title>
    <updated>2022-09-01T01:31:41Z</updated>
    <id>tag:github.com,2022-09-01:/Joshua-Ashton/VPhysics-Jolt</id>
    <link href="https://github.com/Joshua-Ashton/VPhysics-Jolt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Volt (VPhysics Jolt) is a replacement physics module for the Source Engine.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Joshua-Ashton/VPhysics-Jolt/main/assets/cube_base_nobg.png&#34; alt=&#34;VPhysics Jolt Logo&#34; title=&#34;VPhysics Jolt&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is Volt? ⚡&lt;/h2&gt; &#xA;&lt;p&gt;Volt (VPhysics Jolt) is a replacement for Source&#39;s VPhysics which uses IVP/Havok&lt;br&gt; Created by &lt;a href=&#34;https://github.com/Joshua-Ashton&#34;&gt;Joshua Ashton (🐸✨)&lt;/a&gt; &lt;a href=&#34;https://twitter.com/phys_ballsocket&#34;&gt;@phys_ballsocket&lt;/a&gt; and &lt;a href=&#34;https://github.com/Slartibarty&#34;&gt;Josh Dowell (Slartibarty)&lt;/a&gt; &lt;a href=&#34;https://twitter.com/Slartbarty&#34;&gt;@Slartbarty&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Volt is designed to be incredibly high performance, supporting thousands of objects at once without bringing tick/framerate down to a crawl.&lt;/p&gt; &#xA;&lt;p&gt;In our testing, the performance overhead from having thousands of objects moving at once, now comes from the client code needing to update/render, as going out of the PVS of these objects will still cause them to be simulated, but will no longer be rendered.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Volt is mostly feature complete, but is missing some things such as support for raycast vehicles, breakable constraints, and perhaps other things we&#39;ve missed!&lt;/p&gt; &#xA;&lt;p&gt;It is our goal to implement any missing features at some point.&lt;/p&gt; &#xA;&lt;p&gt;Below is a feature table of Volt vs VPhysics and the Bullet VPhysics project. If we missed anything we don&#39;t support or we do, feel free to add to it. It is not meant to be a bash on anyone elses work however, the Bullet VPhysics project was a great inspiration to us!&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Feature&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;VPhysics&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Volt (VPhysics Jolt)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Bullet VPhysics&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Constraints (except Pulleys)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Pulleys&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Breakable constraints&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Motors (Motion Controllers)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Motors (Constraint)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Ragdolls&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️ (some bugs)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Triggers&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Object touch callbacks&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Prop damage/breaking&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Fluid events&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Prop splashing effects&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Wheeled Vehicles&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Raycast Vehicles (ie. Airboat)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;〰️ (janky)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;NPCs/Doors (Shadow Controllers)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Save/Restore Support&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Portal Support&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Game per-object collide callback support&lt;br&gt;eg. no-collide&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Crash-resistant solver&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;(no data)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Supports thousands of objects without lag&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Multithreaded&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️ (partially)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Proper player controller&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌ (needs work!)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✔️ (partially)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Bugs&lt;/h2&gt; &#xA;&lt;p&gt;VPhysics Jolt is not without its flaws, however. See the &lt;a href=&#34;https://github.com/Joshua-Ashton/VPhysics-Jolt/issues&#34;&gt;issue tracker&lt;/a&gt; for bugs that are known.&lt;/p&gt; &#xA;&lt;p&gt;There are definitely going to be bugs that we don&#39;t know about or haven&#39;t encountered, or different quirks across engine branches.&lt;/p&gt; &#xA;&lt;h2&gt;How to build&lt;/h2&gt; &#xA;&lt;p&gt;The Volt code is provided as-is, it is up to you to build it for your SDK, etc.&lt;/p&gt; &#xA;&lt;p&gt;Volt should build fine against Source SDK 2013 and Alien Swarm SDK on a MSVC or GCC compiler with at least C++20 support.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;If you are building directly against the public SDK 2013 and Alien Swarm SDKs, you will need to do minor work to memoverride.cpp to make it compatible with the newer compilers and newer Windows SDKs.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unfortunately we cannot redistribute the additional code/headers needed to build Volt for games such as Garry&#39;s Mod which uses a different VPhysics interface (CS:GO&#39;s) to what is found in the Valve-provided public SDKs.&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;For each release, binary builds are provided for Garry&#39;s Mod and Source SDK 2013 on the &lt;a href=&#34;https://github.com/Joshua-Ashton/VPhysics-Jolt/releases/&#34;&gt;Releases&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h2&gt;Media&lt;/h2&gt; &#xA;&lt;h3&gt;Lots of Melons + Dumpster&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=gPDQkmfQCsc&#34; title=&#34;Lots of Melons + Dumpster&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/gPDQkmfQCsc/0.jpg&#34; alt=&#34;Lots of Melons + Dumpster&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Physically Simulated Chain&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=tVmQTmbSJM0&#34; title=&#34;Physically Simulated Chain&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/tVmQTmbSJM0/0.jpg&#34; alt=&#34;Physically Simulated Chain&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Lots of Balls Test&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=tYfiTyRtmz8&#34; title=&#34;Lots of Balls Test&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/tYfiTyRtmz8/0.jpg&#34; alt=&#34;Lots of Balls Test&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Wheels + Weld Car Dupe Test&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=5_QbbXbIrg8&#34; title=&#34;Weld Car Dupe Test&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/5_QbbXbIrg8/0.jpg&#34; alt=&#34;Weld Car Dupe Test&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Door + NPC (Physics Shadowed Objects) Test&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=SdEj7HTuJmU&#34; title=&#34;Door + NPC (Physics Shadowed Objects) Test&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/SdEj7HTuJmU/0.jpg&#34; alt=&#34;Door + NPC (Physics Shadowed Objects) Test&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Lots of Cubes + Ragdolls + Funnel&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=CLVnSwg33Dk&#34; title=&#34;Lots of Cubes + Ragdolls + Funnel&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/CLVnSwg33Dk/0.jpg&#34; alt=&#34;Lots of Cubes + Ragdolls + Funnel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Slow Mo Cubes&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=GzW_4bufwEk&#34; title=&#34;Slow Mo Cubes&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/GzW_4bufwEk/0.jpg&#34; alt=&#34;Slow Mo Cubes&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Propane in Dumpster&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=10vvRJVHGQc&#34; title=&#34;Propane in Dumpster&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/10vvRJVHGQc/0.jpg&#34; alt=&#34;Propane in Dumpster&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Have some cool media of stuff going on in Volt you&#39;d like to add? Feel free to make a pull request!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Projects using Volt&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://emberspark.games/desolation/&#34;&gt;Portal 2: Desolation&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://prelude.online/&#34;&gt;Prelude: Online&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h1&gt;Have fun! 🐸⚡&lt;/h1&gt;</summary>
  </entry>
</feed>