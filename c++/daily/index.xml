<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-26T01:26:08Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Pagghiu/SaneCppLibraries</title>
    <updated>2023-12-26T01:26:08Z</updated>
    <id>tag:github.com,2023-12-26:/Pagghiu/SaneCppLibraries</id>
    <link href="https://github.com/Pagghiu/SaneCppLibraries" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sane C++ Libraries&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sane C++&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Sane C++&lt;/strong&gt; is a set of C++ platform abstraction libraries for macOS and Windows&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://pagghiu.github.io/site/blog/2023-12-23-SaneCppLibrariesRelease/article.svg?sanitize=true&#34; alt=&#34;Sane Cpp&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/page_principles.html&#34;&gt;Principles&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;✅ Fast compile times&lt;br&gt; ✅ Bloat free&lt;br&gt; ✅ Simple readable code&lt;br&gt; ✅ Easy to integrate&lt;br&gt; ⛔️ No C++ Standard Library / Exceptions / RTTI&lt;br&gt; ⛔️ No third party dependencies (prefer OS API)&lt;/p&gt; &#xA;&lt;p&gt;Visit the &lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/index.html&#34;&gt;documentation website&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;An &lt;a href=&#34;https://pagghiu.github.io/site/blog/2023-12-23-SaneCppLibrariesRelease.html&#34;&gt;introductory blog post&lt;/a&gt; has been written too.&lt;/p&gt; &#xA;&lt;h1&gt;Libraries&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Library&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_algorithms.html&#34;&gt;Algorithms&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🟥 Placeholder library templated algorithms will be placed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_async.html&#34;&gt;Async&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🟨 Async I/O (files, sockets, timers, processes, fs events, threads wake-up)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_build.html&#34;&gt;Build&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🟥 Minimal build system where builds are described in C++&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_containers.html&#34;&gt;Containers&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🟨 Generic containers (SC::Vector, SC::SmallVector, SC::Array etc.)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_file.html&#34;&gt;File&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🟩 Synchronous Disk File I/O&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_file_system.html&#34;&gt;File System&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🟨 File System operations { exists&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_file_system_iterator.html&#34;&gt;File System Iterator&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🟨 Enumerates files and directories inside a given path&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_file_system_watcher.html&#34;&gt;File System Watcher&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🟨 Notifications {add, remove, rename, modified} for files and directories&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_foundation.html&#34;&gt;Foundation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🟩 Primitive types, asserts, limits, Function, Span, Result, Tagged Union&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_hashing.html&#34;&gt;Hashing&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🟩 Compute &lt;code&gt;MD5&lt;/code&gt;, &lt;code&gt;SHA1&lt;/code&gt; or &lt;code&gt;SHA256&lt;/code&gt; hashes for a stream of bytes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_http.html&#34;&gt;Http&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🟥 HTTP parser, client and server&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_plugin.html&#34;&gt;Plugin&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🟥 Minimal dependency based plugin system with hot-reload&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_process.html&#34;&gt;Process&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🟨 Create child processes and chain them (also usable with &lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_async.html&#34;&gt;Async&lt;/a&gt; library)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_reflection.html&#34;&gt;Reflection&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🟩 Describe C++ types at compile time for serialization&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_serialization_binary.html&#34;&gt;Serialization Binary&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🟨 Serialize to and from a binary format using &lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_reflection.html&#34;&gt;Reflection&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_serialization_text.html&#34;&gt;Serialization Text&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🟨 Serialize to / from text formats (JSON) using &lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_reflection.html&#34;&gt;Reflection&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_socket.html&#34;&gt;Socket&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🟨 Synchronous socket networking and DNS lookup&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_strings.html&#34;&gt;Strings&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🟩 String formatting / conversion / manipulation (ASCII / UTF8 / UTF16)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_testing.html&#34;&gt;Testing&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🟨 Simple testing framework used by all of the other libraries&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_threading.html&#34;&gt;Threading&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🟥 Atomic, thread, mutex, condition variable&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pagghiu.github.io/SaneCppLibraries/library_time.html&#34;&gt;Time&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;🟨 Time handling (relative, absolute, high resolution)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Sane C++ is licensed under the MIT License, see &lt;a href=&#34;https://raw.githubusercontent.com/Pagghiu/SaneCppLibraries/main/LICENSE.txt&#34;&gt;LICENSE.txt&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>