<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-11T01:30:45Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>duckdb/duckdb</title>
    <updated>2022-08-11T01:30:45Z</updated>
    <id>tag:github.com,2022-08-11:/duckdb/duckdb</id>
    <link href="https://github.com/duckdb/duckdb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DuckDB is an in-process SQL OLAP Database Management System&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://duckdb.org/images/DuckDB_Logo_dl.png&#34; height=&#34;50&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/duckdb/duckdb/actions&#34;&gt; &lt;img src=&#34;https://github.com/duckdb/duckdb/actions/workflows/Main.yml/badge.svg?branch=master&#34; alt=&#34;Github Actions Badge&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.codefactor.io/repository/github/cwida/duckdb&#34;&gt; &lt;img src=&#34;https://www.codefactor.io/repository/github/cwida/duckdb/badge&#34; alt=&#34;CodeFactor&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://app.codecov.io/gh/duckdb/duckdb&#34;&gt; &lt;img src=&#34;https://codecov.io/gh/duckdb/duckdb/branch/master/graph/badge.svg?token=FaxjcfFghN&#34; alt=&#34;codecov&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/tcvwpjfnZx&#34;&gt; &lt;img src=&#34;https://shields.io/discord/909674491309850675&#34; alt=&#34;discord&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;DuckDB&lt;/h2&gt; &#xA;&lt;p&gt;DuckDB is a high-performance analytical database system. It is designed to be fast, reliable and easy to use. DuckDB provides a rich SQL dialect, with support far beyond basic SQL. DuckDB supports arbitrary and nested correlated subqueries, window functions, collations, complex types (arrays, structs), and more. For more information on the goals of DuckDB, please refer to &lt;a href=&#34;https://duckdb.org/why_duckdb&#34;&gt;the Why DuckDB page on our website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;If you want to install and use DuckDB, please see &lt;a href=&#34;https://www.duckdb.org&#34;&gt;our website&lt;/a&gt; for installation and usage instructions.&lt;/p&gt; &#xA;&lt;h2&gt;Data Import&lt;/h2&gt; &#xA;&lt;p&gt;For CSV files and Parquet files, data import is as simple as referencing the file in the FROM clause:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT * FROM &#39;myfile.csv&#39;;&#xA;SELECT * FROM &#39;myfile.parquet&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Refer to our &lt;a href=&#34;https://duckdb.org/docs/data/overview&#34;&gt;Data Import&lt;/a&gt; section for more information.&lt;/p&gt; &#xA;&lt;h2&gt;SQL Reference&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://duckdb.org/docs/sql/introduction&#34;&gt;website&lt;/a&gt; contains a reference of functions and SQL constructs available in DuckDB.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;For development, DuckDB requires &lt;a href=&#34;https://cmake.org&#34;&gt;CMake&lt;/a&gt;, Python3 and a &lt;code&gt;C++11&lt;/code&gt; compliant compiler. Run &lt;code&gt;make&lt;/code&gt; in the root directory to compile the sources. For development, use &lt;code&gt;make debug&lt;/code&gt; to build a non-optimized debug version. You should run &lt;code&gt;make unit&lt;/code&gt; and &lt;code&gt;make allunit&lt;/code&gt; to verify that your version works properly after making changes. To test performance, you can run &lt;code&gt;BUILD_BENCHMARK=1 BUILD_TPCH=1 make&lt;/code&gt; and then perform several standard benchmarks from the root directory by executing &lt;code&gt;./build/release/benchmark/benchmark_runner&lt;/code&gt;. The detail of benchmarks is in our &lt;a href=&#34;https://raw.githubusercontent.com/duckdb/duckdb/master/benchmark/README.md&#34;&gt;Benchmark Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please also refer to our &lt;a href=&#34;https://raw.githubusercontent.com/duckdb/duckdb/master/CONTRIBUTING.md&#34;&gt;Contribution Guide&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ange-yaghi/simple-2d-constraint-solver</title>
    <updated>2022-08-11T01:30:45Z</updated>
    <id>tag:github.com,2022-08-11:/ange-yaghi/simple-2d-constraint-solver</id>
    <link href="https://github.com/ange-yaghi/simple-2d-constraint-solver" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple physics simulator with support for rigid bodies, force generators and constraints.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Simple 2D Constraint Solver&lt;/h1&gt; &#xA;&lt;p&gt;This is a simple constraint solver and physics engine written in C++.&lt;/p&gt; &#xA;&lt;p&gt;To see it in action, check out the &lt;a href=&#34;https://github.com/ange-yaghi/scs-2d-demo&#34;&gt;demo&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PixarAnimationStudios/USD</title>
    <updated>2022-08-11T01:30:45Z</updated>
    <id>tag:github.com,2022-08-11:/PixarAnimationStudios/USD</id>
    <link href="https://github.com/PixarAnimationStudios/USD" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Universal Scene Description&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Universal Scene Description&lt;/h1&gt; &#xA;&lt;p&gt;Universal Scene Description (USD) is an efficient, scalable system for authoring, reading, and streaming time-sampled scene description for interchange between graphics applications.&lt;/p&gt; &#xA;&lt;p&gt;For more details, please visit the web site &lt;a href=&#34;http://openusd.org&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build Status&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;macOS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;dev&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/PixarAnimationStudios/USD/_build/latest?definitionId=2&amp;amp;branchName=dev&#34;&gt;&lt;img src=&#34;https://dev.azure.com/PixarAnimationStudios/USD/_apis/build/status/PixarAnimationStudios.USD?branchName=dev&amp;amp;jobName=Linux&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/PixarAnimationStudios/USD/_build/latest?definitionId=2&amp;amp;branchName=dev&#34;&gt;&lt;img src=&#34;https://dev.azure.com/PixarAnimationStudios/USD/_apis/build/status/PixarAnimationStudios.USD?branchName=dev&amp;amp;jobName=Windows&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/PixarAnimationStudios/USD/_build/latest?definitionId=2&amp;amp;branchName=dev&#34;&gt;&lt;img src=&#34;https://dev.azure.com/PixarAnimationStudios/USD/_apis/build/status/PixarAnimationStudios.USD?branchName=dev&amp;amp;jobName=macOS&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;release&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/PixarAnimationStudios/USD/_build/latest?definitionId=2&amp;amp;branchName=release&#34;&gt;&lt;img src=&#34;https://dev.azure.com/PixarAnimationStudios/USD/_apis/build/status/PixarAnimationStudios.USD?branchName=release&amp;amp;jobName=Linux&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/PixarAnimationStudios/USD/_build/latest?definitionId=2&amp;amp;branchName=release&#34;&gt;&lt;img src=&#34;https://dev.azure.com/PixarAnimationStudios/USD/_apis/build/status/PixarAnimationStudios.USD?branchName=release&amp;amp;jobName=Windows&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://dev.azure.com/PixarAnimationStudios/USD/_build/latest?definitionId=2&amp;amp;branchName=release&#34;&gt;&lt;img src=&#34;https://dev.azure.com/PixarAnimationStudios/USD/_apis/build/status/PixarAnimationStudios.USD?branchName=release&amp;amp;jobName=macOS&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Additional Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://openusd.org/docs/index.html&#34;&gt;User Documentation and Tutorials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://openusd.org/docs/api/index.html&#34;&gt;API Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PixarAnimationStudios/USD/release/BUILDING.md&#34;&gt;Advanced Build Configuration&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;p&gt;Need help understanding certain concepts in USD? See &lt;a href=&#34;http://openusd.org/docs/Getting-Help-with-USD.html&#34;&gt;Getting Help with USD&lt;/a&gt; or visit our &lt;a href=&#34;https://groups.google.com/forum/#!forum/usd-interest&#34;&gt;forum&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are experiencing undocumented problems with the software, please &lt;a href=&#34;https://github.com/PixarAnimationStudios/USD/issues/new&#34;&gt;file a bug&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Platforms&lt;/h2&gt; &#xA;&lt;p&gt;USD is currently supported on Linux platforms and has been built and tested on CentOS 7 and RHEL 7.&lt;/p&gt; &#xA;&lt;p&gt;We are actively working on porting USD to both Windows and Mac platforms (Please see &lt;a href=&#34;https://raw.githubusercontent.com/PixarAnimationStudios/USD/release/VERSIONS.md&#34;&gt;VERSIONS.md&lt;/a&gt; for explicitly tested versions). Support for both platforms should be considered experimental at this time. Currently, the tree will build on Mac and Windows, but only limited testing has been done on these platforms.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;The following dependencies are required:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;C++ compiler&lt;/li&gt; &#xA; &lt;li&gt;C compiler&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cmake.org/documentation/&#34;&gt;CMake&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://boost.org&#34;&gt;Boost&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.threadingbuildingblocks.org/&#34;&gt;Intel TBB&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following dependencies are optional:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://python.org&#34;&gt;Python&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/PixarAnimationStudios/USD/release/VERSIONS.md&#34;&gt;3rd Party Library and Application Versions&lt;/a&gt; for version information.&lt;/p&gt; &#xA;&lt;p&gt;Additional dependencies are required for the following components. These components may be disabled at build-time, for further details see &lt;a href=&#34;https://raw.githubusercontent.com/PixarAnimationStudios/USD/release/BUILDING.md&#34;&gt;Advanced Build Configuration&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Imaging and USD Imaging&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The following dependencies are required:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PixarAnimationStudios/OpenSubdiv&#34;&gt;OpenSubdiv&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following dependencies are optional:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.openexr.com&#34;&gt;OpenEXR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sites.google.com/site/openimageio/home&#34;&gt;OpenImageIO&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://opencolorio.org/&#34;&gt;OpenColorIO&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/imageworks/OpenShadingLanguage&#34;&gt;OSL (OpenShadingLanguage)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://ptex.us/&#34;&gt;Ptex&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;usdview&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The following dependencies are required:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://wiki.qt.io/PySide6&#34;&gt;PySide6&lt;/a&gt; or &lt;a href=&#34;http://wiki.qt.io/PySide2&#34;&gt;PySide2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pypi.python.org/pypi/PyOpenGL/&#34;&gt;PyOpenGL&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting and Building the Code&lt;/h2&gt; &#xA;&lt;p&gt;The simplest way to build USD is to run the supplied &lt;code&gt;build_usd.py&lt;/code&gt; script. This script will download required dependencies and build and install them along with USD in a given directory.&lt;/p&gt; &#xA;&lt;p&gt;Follow the instructions below to run the script with its default behavior, which will build the USD core libraries, Imaging, and USD Imaging components. For more options and documentation, run the script with the &lt;code&gt;--help&lt;/code&gt; parameter.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/PixarAnimationStudios/USD/release/BUILDING.md&#34;&gt;Advanced Build Configuration&lt;/a&gt; for examples and additional documentation for running cmake directly.&lt;/p&gt; &#xA;&lt;h4&gt;1. Install prerequisites (see &lt;a href=&#34;https://raw.githubusercontent.com/PixarAnimationStudios/USD/release/#dependencies&#34;&gt;Dependencies&lt;/a&gt; for required versions)&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Required: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;C++ compiler: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;gcc&lt;/li&gt; &#xA;     &lt;li&gt;Xcode&lt;/li&gt; &#xA;     &lt;li&gt;Microsoft Visual Studio&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;NASM (required for Imaging on Windows)&lt;/li&gt; &#xA;   &lt;li&gt;CMake&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Optional (Can be ignored by passing &lt;code&gt;--no-python&lt;/code&gt; as an argument to &lt;code&gt;build_usd.py&lt;/code&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Python (required for &lt;a href=&#34;https://raw.githubusercontent.com/PixarAnimationStudios/USD/release/BUILDING.md#python&#34;&gt;bindings and tests&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;PyOpenGL (required for &lt;a href=&#34;https://raw.githubusercontent.com/PixarAnimationStudios/USD/release/BUILDING.md#usd-imaging&#34;&gt;usdview&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;PySide6 or PySide2 (required for &lt;a href=&#34;https://raw.githubusercontent.com/PixarAnimationStudios/USD/release/BUILDING.md#usd-imaging&#34;&gt;usdview&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;2. Download the USD source code&lt;/h4&gt; &#xA;&lt;p&gt;You can download source code archives from &lt;a href=&#34;https://www.github.com/PixarAnimationStudios/USD&#34;&gt;GitHub&lt;/a&gt; or use &lt;code&gt;git&lt;/code&gt; to clone the repository.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; git clone https://github.com/PixarAnimationStudios/USD&#xA;Cloning into &#39;USD&#39;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. Run the script&lt;/h4&gt; &#xA;&lt;h5&gt;Linux:&lt;/h5&gt; &#xA;&lt;p&gt;For example, the following will download, build, and install USD&#39;s dependencies, then build and install USD into &lt;code&gt;/usr/local/USD&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; python USD/build_scripts/build_usd.py /usr/local/USD&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;MacOS:&lt;/h5&gt; &#xA;&lt;p&gt;In a terminal, run &lt;code&gt;xcode-select&lt;/code&gt; to ensure command line developer tools are installed. Then run the script.&lt;/p&gt; &#xA;&lt;p&gt;For example, the following will download, build, and install USD&#39;s dependencies, then build and install USD into &lt;code&gt;/opt/local/USD&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; python USD/build_scripts/build_usd.py /opt/local/USD&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Windows:&lt;/h5&gt; &#xA;&lt;p&gt;Launch the &#34;x64 Native Tools Command Prompt&#34; for your version of Visual Studio and run the script in the opened shell. Make sure to use the 64-bit (x64) command prompt and not the 32-bit (x86) command prompt.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://docs.microsoft.com/en-us/cpp/build/how-to-enable-a-64-bit-visual-cpp-toolset-on-the-command-line&#34;&gt;https://docs.microsoft.com/en-us/cpp/build/how-to-enable-a-64-bit-visual-cpp-toolset-on-the-command-line&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;For example, the following will download, build, and install USD&#39;s dependencies, then build and install USD into &lt;code&gt;C:\Program Files\USD&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;C:\&amp;gt; python USD\build_scripts\build_usd.py &#34;C:\Program Files\USD&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;4. Try it out&lt;/h4&gt; &#xA;&lt;p&gt;Set the environment variables specified by the script when it finishes and launch &lt;code&gt;usdview&lt;/code&gt; with a sample asset.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; usdview USD/extras/usd/tutorials/convertingLayerFormats/Sphere.usda&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to contribute to USD (and we appreciate the help!), please see the &lt;a href=&#34;http://openusd.org/docs/Contributing-to-USD.html&#34;&gt;Contributing&lt;/a&gt; page in the documentation for more information.&lt;/p&gt;</summary>
  </entry>
</feed>