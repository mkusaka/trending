<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-16T01:31:45Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>CedArctic/DigiSpark-Scripts</title>
    <updated>2023-01-16T01:31:45Z</updated>
    <id>tag:github.com,2023-01-16:/CedArctic/DigiSpark-Scripts</id>
    <link href="https://github.com/CedArctic/DigiSpark-Scripts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;USB Rubber Ducky type scripts written for the DigiSpark.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://cdn.instructables.com/FKP/MAA2/HH2VJNW1/FKPMAA2HH2VJNW1.MEDIUM.jpg&#34; alt=&#34;alt text&#34; title=&#34;The DigiSpark&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;DigiSpark-Scripts&lt;/h1&gt; &#xA;&lt;p&gt;This is a set of hand-written DigiSpark sketches for the Arduino IDE that utilize the DigiKeyboard.h library making the DigiSpark to act as a keyboard and execute a variety of actions. If you have found a USB Rubber Ducky scipt that you want to convert to a DigiSpark sketch, you can always use digiQuack, a tool which can be found in my repositories.&lt;/p&gt; &#xA;&lt;h1&gt;Instructions&lt;/h1&gt; &#xA;&lt;p&gt;Configure the Arduino IDE for the DigiSpark using: &lt;a href=&#34;https://digistump.com/wiki/digispark/tutorials/connecting&#34;&gt;https://digistump.com/wiki/digispark/tutorials/connecting&lt;/a&gt; or Seytonic&#39;s tutorial: &lt;a href=&#34;https://youtu.be/fGmGBa-4cYQ&#34;&gt;https://youtu.be/fGmGBa-4cYQ&lt;/a&gt;. Then download one of scripts (sketches), open them with Arduino IDE, modify them if needed and upload them to the DigiSpark.&lt;/p&gt; &#xA;&lt;h1&gt;Script Descriptions&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Create_Account&lt;/strong&gt;: Creates a new admin account and optionally hides it&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;DNS Poisoner&lt;/strong&gt;: Injects lines into the Windows hosts file and redirects URLs to wherever you want&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Execute_Powershell_Script&lt;/strong&gt;: Downloads and executes a powershell script in hidden mode&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fork_Bomb&lt;/strong&gt;: Opens up an obfuscated windows terminal and makes it multiply itself uncontrolably causing the machine to either lock or crash&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Rapid_Shell&lt;/strong&gt;: Seamlessly executes metasploit payloads through powershell&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reverse_Shell&lt;/strong&gt;: Opens a netcat reverse shell from a Windows machine to the host&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;RickRoll_Update&lt;/strong&gt;: Plays Never Gonna Give you up while performing a fake windows update&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Silly_Mouse&lt;/strong&gt;: Switches primary and secondary mouse buttons, display mouse trails, decreases mouse speed and other mouse related pranks&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Talker&lt;/strong&gt;: Makes the computer speak out a message using powershell&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Wallpaper_Changer&lt;/strong&gt;: Downloads and applies a wallpaper via powershell.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Wallpaper_Changer_macOS&lt;/strong&gt;: Downloads and applies a wallpaper via applescript on macOS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Wallpaper_Prank&lt;/strong&gt;: Takes a screenshot of the desktop, sets it as the wallpaper, hides desktop icons&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;WiFi_Profile_Grabber&lt;/strong&gt;: Extracts wifi profiles and saves the csv to a USB drive&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;WiFi_Profile_Mailer&lt;/strong&gt;: Writes the wireless network credentials to a csv file and emails it&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Window_Jammer&lt;/strong&gt;: Spams ALT + F4 and CTRL + W key combos to force close all active windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;See the scripts in action&lt;/h1&gt; &#xA;&lt;p&gt;Click the gifs to see the full video&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=b5E0u4qNH4s&#34;&gt;&lt;img src=&#34;https://j.gifs.com/N9KP5v.gif&#34; alt=&#34;Wifi Stealer&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=yHPRZnpxvks&#34;&gt;&lt;img src=&#34;https://j.gifs.com/32r7ER.gif&#34; alt=&#34;Wallpaper Prank&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contributors&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;samratashok&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;NassimBentarka&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;p0wc0w&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;apsecdev&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;BlackBoot&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Michyus&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vel1khaN&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;slipperyavocado&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;bernsteining&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Resources&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;USB Rubber Ducky Documentation by hak5darren: &lt;a href=&#34;https://github.com/hak5darren/USB-Rubber-Ducky/wiki/Duckyscript&#34;&gt;https://github.com/hak5darren/USB-Rubber-Ducky/wiki/Duckyscript&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Digistump DigiSpark Documentation: &lt;a href=&#34;https://github.com/digistump/DigisparkArduinoIntegration/raw/master/libraries/DigisparkKeyboard/DigiKeyboard.h&#34;&gt;https://github.com/digistump/DigisparkArduinoIntegration/blob/master/libraries/DigisparkKeyboard/DigiKeyboard.h&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;USB Usage IDs by usb.org (page 53): &lt;a href=&#34;http://www.usb.org/developers/hidpage/Hut1_12v2.pdf&#34;&gt;http://www.usb.org/developers/hidpage/Hut1_12v2.pdf&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>bblanchon/ArduinoJson</title>
    <updated>2023-01-16T01:31:45Z</updated>
    <id>tag:github.com,2023-01-16:/bblanchon/ArduinoJson</id>
    <link href="https://github.com/bblanchon/ArduinoJson" rel="alternate"></link>
    <summary type="html">&lt;p&gt;📟 JSON library for Arduino and embedded C++. Simple and efficient.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://arduinojson.org/&#34;&gt;&lt;img alt=&#34;ArduinoJson&#34; src=&#34;https://arduinojson.org/images/logo.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bblanchon/ArduinoJson/actions?query=workflow%3A%22Continuous+Integration%22+branch%3A6.x&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/bblanchon/ArduinoJson/ci.yml?branch=6.x&amp;amp;logo=github&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/bblanchon/arduinojson/branch/6.x&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/m7s53wav1l0abssg/branch/6.x?svg=true&#34; alt=&#34;Continuous Integration&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:arduinojson&#34;&gt;&lt;img src=&#34;https://oss-fuzz-build-logs.storage.googleapis.com/badges/arduinojson.svg?sanitize=true&#34; alt=&#34;Fuzzing Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/bblanchon/ArduinoJson?branch=6.x&#34;&gt;&lt;img src=&#34;https://img.shields.io/coveralls/github/bblanchon/ArduinoJson/6.x?logo=coveralls&#34; alt=&#34;Coveralls branch&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://www.ardu-badge.com/ArduinoJson/6.20.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Arduino&amp;amp;message=v6.20.0&amp;amp;logo=arduino&amp;amp;logoColor=white&amp;amp;color=blue&#34; alt=&#34;Arduino Library Manager&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://registry.platformio.org/packages/libraries/bblanchon/ArduinoJson?version=6.20.0&#34;&gt;&lt;img src=&#34;https://badges.registry.platformio.org/packages/bblanchon/library/ArduinoJson.svg?version=6.20.0&#34; alt=&#34;PlatformIO Registry&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://components.espressif.com/components/bblanchon/arduinojson&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=ESP+IDF&amp;amp;message=v6.20.0&amp;amp;logo=cpu&amp;amp;logoColor=white&amp;amp;color=blue&#34; alt=&#34;ESP IDF&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/bblanchon/ArduinoJson/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/bblanchon/ArduinoJson?style=flat&amp;amp;logo=github&amp;amp;color=orange&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/bblanchon&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/sponsors/bblanchon?logo=github&amp;amp;color=orange&#34; alt=&#34;GitHub Sponsors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ArduinoJson is a C++ JSON library for Arduino and IoT (Internet Of Things).&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/v6/api/json/deserializejson/&#34;&gt;JSON deserialization&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/v6/api/config/decode_unicode/&#34;&gt;Optionally decodes UTF-16 escape sequences to UTF-8&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/v6/api/json/deserializejson/&#34;&gt;Optionally stores links to the input buffer (zero-copy)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/v6/api/config/enable_comments/&#34;&gt;Optionally supports comments in the input&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/v6/api/json/deserializejson/#filtering&#34;&gt;Optionally filters the input to keep only desired values&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Supports single quotes as a string delimiter&lt;/li&gt; &#xA;   &lt;li&gt;Compatible with &lt;a href=&#34;http://ndjson.org/&#34;&gt;NDJSON&lt;/a&gt; and &lt;a href=&#34;https://jsonlines.org/&#34;&gt;JSON Lines&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/v6/api/json/serializejson/&#34;&gt;JSON serialization&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/v6/api/json/serializejson/&#34;&gt;Can write to a buffer or a stream&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/v6/api/json/serializejsonpretty/&#34;&gt;Optionally indents the document (prettified JSON)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/v6/api/msgpack/serializemsgpack/&#34;&gt;MessagePack serialization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/v6/api/msgpack/deserializemsgpack/&#34;&gt;MessagePack deserialization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Efficient &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/2019/11/19/arduinojson-vs-arduino_json/&#34;&gt;Twice smaller than the &#34;official&#34; Arduino_JSON library&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/2019/11/19/arduinojson-vs-arduino_json/&#34;&gt;Almost 10% faster than the &#34;official&#34; Arduino_JSON library&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/2019/11/19/arduinojson-vs-arduino_json/&#34;&gt;Consumes roughly 10% less RAM than the &#34;official&#34; Arduino_JSON library&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/v6/api/jsondocument/&#34;&gt;Fixed memory allocation, no heap fragmentation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/v6/api/staticjsondocument/&#34;&gt;Optionally works without heap memory (zero malloc)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/news/2020/08/01/version-6-16-0/&#34;&gt;Deduplicates strings&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Versatile &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Supports &lt;a href=&#34;https://arduinojson.org/v6/how-to/use-external-ram-on-esp32/&#34;&gt;custom allocators (to use external RAM chip, for example)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Supports &lt;a href=&#34;https://arduinojson.org/v6/api/config/enable_arduino_string/&#34;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://arduinojson.org/v6/api/config/enable_std_string/&#34;&gt;&lt;code&gt;std::string&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&#34;https://arduinojson.org/v6/api/config/enable_string_view/&#34;&gt;&lt;code&gt;std::string_view&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Supports &lt;a href=&#34;https://arduinojson.org/v6/api/config/enable_arduino_stream/&#34;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://arduinojson.org/v6/api/config/enable_std_stream/&#34;&gt;&lt;code&gt;std::istream&lt;/code&gt;/&lt;code&gt;std::ostream&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Supports &lt;a href=&#34;https://arduinojson.org/v6/api/config/enable_progmem/&#34;&gt;Flash strings&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Supports &lt;a href=&#34;https://arduinojson.org/v6/api/json/deserializejson/#custom-reader&#34;&gt;custom readers&lt;/a&gt; and &lt;a href=&#34;https://arduinojson.org/v6/api/json/serializejson/#custom-writer&#34;&gt;custom writers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Supports &lt;a href=&#34;https://arduinojson.org/news/2021/05/04/version-6-18-0/&#34;&gt;custom converters&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Portable &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Usable on any C++ project (not limited to Arduino)&lt;/li&gt; &#xA;   &lt;li&gt;Compatible with C++98, C++11, C++14 and C++17&lt;/li&gt; &#xA;   &lt;li&gt;Zero warnings with &lt;code&gt;-Wall -Wextra -pedantic&lt;/code&gt; and &lt;code&gt;/W4&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Header-only&#34;&gt;Header-only library&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Works with virtually any board &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Arduino boards: &lt;a href=&#34;https://amzn.to/38aL2ik&#34;&gt;Uno&lt;/a&gt;, &lt;a href=&#34;https://amzn.to/36YkWi2&#34;&gt;Due&lt;/a&gt;, &lt;a href=&#34;https://amzn.to/35WkdwG&#34;&gt;Micro&lt;/a&gt;, &lt;a href=&#34;https://amzn.to/2QTvwRX&#34;&gt;Nano&lt;/a&gt;, &lt;a href=&#34;https://amzn.to/36XWhuf&#34;&gt;Mega&lt;/a&gt;, &lt;a href=&#34;https://amzn.to/30odURc&#34;&gt;Yun&lt;/a&gt;, &lt;a href=&#34;https://amzn.to/36XWjlR&#34;&gt;Leonardo&lt;/a&gt;...&lt;/li&gt; &#xA;     &lt;li&gt;Espressif chips: &lt;a href=&#34;https://amzn.to/36YluV8&#34;&gt;ESP8266&lt;/a&gt;, &lt;a href=&#34;https://amzn.to/2G4pRCB&#34;&gt;ESP32&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Lolin (WeMos) boards: &lt;a href=&#34;https://amzn.to/2QUpz7q&#34;&gt;D1 mini&lt;/a&gt;, &lt;a href=&#34;https://amzn.to/36UsGSs&#34;&gt;D1 Mini Pro&lt;/a&gt;...&lt;/li&gt; &#xA;     &lt;li&gt;Teensy boards: &lt;a href=&#34;https://amzn.to/30ljXGq&#34;&gt;4.0&lt;/a&gt;, &lt;a href=&#34;https://amzn.to/2FT0EuC&#34;&gt;3.2&lt;/a&gt;, &lt;a href=&#34;https://amzn.to/2QXUMXj&#34;&gt;2.0&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Particle boards: &lt;a href=&#34;https://amzn.to/2FQHa9X&#34;&gt;Argon&lt;/a&gt;, &lt;a href=&#34;https://amzn.to/36WgLUd&#34;&gt;Boron&lt;/a&gt;, &lt;a href=&#34;https://amzn.to/30vEc4k&#34;&gt;Electron&lt;/a&gt;, &lt;a href=&#34;https://amzn.to/387F9Cd&#34;&gt;Photon&lt;/a&gt;...&lt;/li&gt; &#xA;     &lt;li&gt;Texas Instruments boards: &lt;a href=&#34;https://amzn.to/30nJWgg&#34;&gt;MSP430&lt;/a&gt;...&lt;/li&gt; &#xA;     &lt;li&gt;Soft cores: &lt;a href=&#34;https://en.wikipedia.org/wiki/Nios_II&#34;&gt;Nios II&lt;/a&gt;...&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Tested on all major development environments &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.arduino.cc/en/Main/Software&#34;&gt;Arduino IDE&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;http://www.atmel.com/microsite/atmel-studio/&#34;&gt;Atmel Studio&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://atollic.com/truestudio/&#34;&gt;Atollic TrueSTUDIO&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;http://energia.nu/&#34;&gt;Energia&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.iar.com/iar-embedded-workbench/&#34;&gt;IAR Embedded Workbench&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;http://www.keil.com/&#34;&gt;Keil uVision&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;http://www.microchip.com/mplab/mplab-x-ide&#34;&gt;MPLAB X IDE&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.particle.io/&#34;&gt;Particle&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;http://platformio.org/&#34;&gt;PlatformIO&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://eclipse.baeyens.it/&#34;&gt;Sloeber plugin for Eclipse&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;http://www.visualmicro.com/&#34;&gt;Visual Micro&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.visualstudio.com/&#34;&gt;Visual Studio&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://wandbox.org/permlink/RlZSKy17DjJ6HcdN&#34;&gt;Even works with online compilers like wandbox.org&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/v6/how-to/use-arduinojson-with-cmake/&#34;&gt;CMake friendly&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Well designed &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://arduinojson.org/v6/example/&#34;&gt;Elegant API&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Thread_safety&#34;&gt;Thread-safe&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Self-contained (no external dependency)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;const&lt;/code&gt; friendly&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/v6/api/jsonobject/begin_end/&#34;&gt;&lt;code&gt;for&lt;/code&gt; friendly&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Template_metaprogramming&#34;&gt;TMP friendly&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Handles &lt;a href=&#34;https://arduinojson.org/v6/api/jsonvariant/as/#integer-overflows&#34;&gt;integer overflows&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Well tested &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://coveralls.io/github/bblanchon/ArduinoJson?branch=6.x&#34;&gt;Unit test coverage close to 100%&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Continuously tested on &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://ci.appveyor.com/project/bblanchon/arduinojson/branch/6.x&#34;&gt;Visual Studio 2010, 2012, 2013, 2015, 2017, 2019, 2022&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/bblanchon/ArduinoJson/actions?query=workflow%3A%22Continuous+Integration%22&#34;&gt;GCC 4.4, 4.6, 4.7, 4.8, 4.9, 5, 6, 7, 8, 9, 10, 11&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/bblanchon/ArduinoJson/actions?query=workflow%3A%22Continuous+Integration%22&#34;&gt;Clang 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 6.0, 7, 8, 9, 10&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:arduinojson&#34;&gt;Continuously fuzzed with Google OSS Fuzz&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Passes all default checks of &lt;a href=&#34;https://releases.llvm.org/10.0.0/tools/clang/tools/extra/docs/clang-tidy/&#34;&gt;clang-tidy&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Well documented &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/v6/doc/deserialization/&#34;&gt;Tutorials&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/v6/example/&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/v6/example/&#34;&gt;How-tos&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/v6/faq/&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/v6/troubleshooter/&#34;&gt;Troubleshooter&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://arduinojson.org/book/&#34;&gt;Book&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/bblanchon/ArduinoJson/6.x/CHANGELOG.md&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Vibrant user community &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Most popular of all Arduino libraries on &lt;a href=&#34;https://github.com/search?o=desc&amp;amp;q=arduino+library&amp;amp;s=stars&amp;amp;type=Repositories&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.hackster.io/search?i=projects&amp;amp;q=arduinojson&#34;&gt;Used in hundreds of projects&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/bblanchon/ArduinoJson/issues?q=is%3Aissue+is%3Aclosed&#34;&gt;Responsive support&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;h3&gt;Deserialization&lt;/h3&gt; &#xA;&lt;p&gt;Here is a program that parses a JSON document with ArduinoJson.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;char json[] = &#34;{\&#34;sensor\&#34;:\&#34;gps\&#34;,\&#34;time\&#34;:1351824120,\&#34;data\&#34;:[48.756080,2.302038]}&#34;;&#xA;&#xA;DynamicJsonDocument doc(1024);&#xA;deserializeJson(doc, json);&#xA;&#xA;const char* sensor = doc[&#34;sensor&#34;];&#xA;long time          = doc[&#34;time&#34;];&#xA;double latitude    = doc[&#34;data&#34;][0];&#xA;double longitude   = doc[&#34;data&#34;][1];&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://arduinojson.org/v6/doc/deserialization/&#34;&gt;tutorial on arduinojson.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Serialization&lt;/h3&gt; &#xA;&lt;p&gt;Here is a program that generates a JSON document with ArduinoJson:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;DynamicJsonDocument doc(1024);&#xA;&#xA;doc[&#34;sensor&#34;] = &#34;gps&#34;;&#xA;doc[&#34;time&#34;]   = 1351824120;&#xA;doc[&#34;data&#34;][0] = 48.756080;&#xA;doc[&#34;data&#34;][1] = 2.302038;&#xA;&#xA;serializeJson(doc, Serial);&#xA;// This prints:&#xA;// {&#34;sensor&#34;:&#34;gps&#34;,&#34;time&#34;:1351824120,&#34;data&#34;:[48.756080,2.302038]}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://arduinojson.org/v6/doc/serialization/&#34;&gt;tutorial on arduinojson.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;ArduinoJson is thankful to its sponsors. Please give them a visit; they deserve it!&lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://www.programmingelectronics.com/&#34; rel=&#34;sponsored&#34;&gt; &lt;img src=&#34;https://arduinojson.org/images/2021/10/programmingeleactronicsacademy.png&#34; alt=&#34;Programming Electronics Academy&#34; width=&#34;200&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://github.com/1technophile&#34; rel=&#34;sponsored&#34;&gt; &lt;img alt=&#34;1technophile&#34; src=&#34;https://avatars.githubusercontent.com/u/12672732?s=40&amp;amp;v=4&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;If you run a commercial project that embeds ArduinoJson, think about &lt;a href=&#34;https://github.com/sponsors/bblanchon&#34;&gt;sponsoring the library&#39;s development&lt;/a&gt;: it ensures the code that your products rely on stays actively maintained. It can also give your project some exposure to the makers&#39; community.&lt;/p&gt; &#xA;&lt;p&gt;If you are an individual user and want to support the development (or give a sign of appreciation), consider purchasing the book &lt;a href=&#34;https://arduinojson.org/book/&#34;&gt;Mastering ArduinoJson&lt;/a&gt;&amp;nbsp;❤, or simply &lt;a href=&#34;https://github.com/bblanchon/ArduinoJson/stargazers&#34;&gt;cast a star&lt;/a&gt;&amp;nbsp;⭐.&lt;/p&gt;</summary>
  </entry>
</feed>