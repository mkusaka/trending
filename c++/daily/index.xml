<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-01T01:26:51Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>VeroFess/PalWorld-Server-Unoffical-Api</title>
    <updated>2024-02-01T01:26:51Z</updated>
    <id>tag:github.com,2024-02-01:/VeroFess/PalWorld-Server-Unoffical-Api</id>
    <link href="https://github.com/VeroFess/PalWorld-Server-Unoffical-Api" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A PalWorld Server API like minecraft bukkit, not finish yet&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PalWorld-Server-Unofficial-Api&lt;/h1&gt; &#xA;&lt;p&gt;PalWorld-Server-Unofficial-Api is a third-party PalWorld API with the goal of becoming a server-side development API similar to Minecraft Bukkit. The aim is to ensure that plugins do not require updates when the game version is upgraded.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;The project is currently in very early development, and its code may undergo significant rewrites. Therefore, the source code will not be made public for now.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Currently, I am eager to hear everyone&#39;s opinions to decide on what features need to be added. Please share your ideas in the Issues section!&lt;/p&gt; &#xA;&lt;h1&gt;PalWorld-Server-Unoffical-Api&lt;/h1&gt; &#xA;&lt;p&gt;PalWorld-Server-Unoffical-Api 是一个第三方的帕鲁世界 API， 其目标是成为 Minecraft Bukkit 这样的仅服务端 开发 API，并且希望做到在游戏版本升级时插件无需更新。&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;目前项目还在非常早期的开发中， 其代码可能会大规模重写， 所以暂时不会公开源代码&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;目前我非常希望听到大家的意见来决定有什么功能需要添加，请在 Issuse 中提出你的想法！&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/vcpkg-tool</title>
    <updated>2024-02-01T01:26:51Z</updated>
    <id>tag:github.com,2024-02-01:/microsoft/vcpkg-tool</id>
    <link href="https://github.com/microsoft/vcpkg-tool" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Components of microsoft/vcpkg&#39;s binary.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Vcpkg: Overview&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/vcpkg/raw/master/README_zh_CN.md&#34;&gt;中文总览&lt;/a&gt; &lt;a href=&#34;https://github.com/microsoft/vcpkg/raw/master/README_es.md&#34;&gt;Español&lt;/a&gt; &lt;a href=&#34;https://github.com/microsoft/vcpkg/raw/master/README_ko_KR.md&#34;&gt;한국어&lt;/a&gt; &lt;a href=&#34;https://github.com/microsoft/vcpkg/raw/master/README_fr.md&#34;&gt;Français&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Vcpkg helps you manage C and C++ libraries on Windows, Linux and MacOS. This tool and ecosystem are constantly evolving, and we always appreciate contributions!&lt;/p&gt; &#xA;&lt;p&gt;Please see the main repository &lt;a href=&#34;https://github.com/microsoft/vcpkg&#34;&gt;https://github.com/microsoft/vcpkg&lt;/a&gt; for all feature discussion, issue tracking, and edits to which libraries are available.&lt;/p&gt; &#xA;&lt;h1&gt;Vcpkg-tool: Overview&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the contents formerly at &lt;a href=&#34;https://github.com/microsoft/vcpkg&#34;&gt;https://github.com/microsoft/vcpkg&lt;/a&gt; in the &#34;toolsrc&#34; tree, and build support.&lt;/p&gt; &#xA;&lt;h1&gt;vcpkg-artifacts&lt;/h1&gt; &#xA;&lt;p&gt;vcpkg-artifacts are currently in &#39;preview&#39; -- there will most certainly be changes between now and when the tool is &#39;released&#39; based on feedback.&lt;/p&gt; &#xA;&lt;p&gt;You can use it, but be forewarned that we may change formats, commands, etc.&lt;/p&gt; &#xA;&lt;p&gt;Think of it as a manifest-driven desired state configuration for C/C++ projects.&lt;/p&gt; &#xA;&lt;p&gt;It&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;integrates itself into your shell (PowerShell, CMD, bash/zsh)&lt;/li&gt; &#xA; &lt;li&gt;can restore artifacts according to a manifest that follows one’s code&lt;/li&gt; &#xA; &lt;li&gt;provides discoverability interfaces&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;While the usage of &lt;code&gt;vcpkg-artifacts&lt;/code&gt; is the same on all platforms, the installation/loading/removal is slightly different depending on the platform you&#39;re using.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;vcpkg-artifacts&lt;/code&gt; don&#39;t persist any changes to the environment, nor do they automatically add themselves to the start-up environment. If you wish to make it load in a window, you can just execute the script. Manually adding that in your profile will load it in every new window.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Install/Use/Remove&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;OS&lt;/th&gt; &#xA;   &lt;th&gt;Install&lt;/th&gt; &#xA;   &lt;th&gt;Use&lt;/th&gt; &#xA;   &lt;th&gt;Remove&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;PowerShell/Pwsh&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;iex (iwr -useb https://aka.ms/vcpkg-init.ps1)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt; . ~/.vcpkg/vcpkg-init.ps1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;rmdir -recurse -force ~/.vcpkg&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Linux/OSX&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;. &amp;lt;(curl https://aka.ms/vcpkg-init.sh -L)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt; . ~/.vcpkg/vcpkg-init&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;rm -rf ~/.vcpkg&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;CMD Shell&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;curl -LO https://aka.ms/vcpkg-init.cmd &amp;amp;&amp;amp; .\vcpkg-init.cmd&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;%USERPROFILE%\.vcpkg\vcpkg-init.cmd&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;rmdir /s /q %USERPROFILE%\.vcpkg&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Glossary&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Term&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;artifact&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;An archive (.zip or .tar.gz-like), package (.nupkg, .vsix) binary inside which build tools or components thereof are stored.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;artifact metadata&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A description of the locations one or more artifacts describing rules for which ones are deployed given selection of a host architecture, target architecture, or other properties&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;artifact identity&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A short string that uniquely describes a moniker that a given artifact (and its metadata) can be referenced by. They can have one of the following forms:&lt;br&gt; &lt;code&gt;full/identity/path&lt;/code&gt; - the full identity of an artifact that is in the built-in artifact source&lt;br&gt;&lt;code&gt;sourcename:full/identity/path&lt;/code&gt; - the full identity of an artifact that is in the artifact source specified by the sourcename prefix&lt;br&gt;&lt;code&gt;shortname&lt;/code&gt; - the shortened unique name of an artifact that is in the built-in artifact source&lt;br&gt;&lt;code&gt;sourcename:shortname&lt;/code&gt; - the shortened unique name of an artifact that is in the artifact source specified by the sourcename prefix&lt;br&gt;Shortened names are generated based off the shortest unique identity path in the given source.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;artifact source&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Also known as a “feed”. An Artifact Source is a location that hosts metadata to locate artifacts. (&lt;em&gt;There is only one source currently&lt;/em&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;activation&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The process by which a particular set of artifacts are acquired and enabled for use in a calling command program.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;versions&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Version numbers are specified using the Semver format. If a version for a particular operation isn&#39;t specified, a range for the latest version ( &lt;code&gt;*&lt;/code&gt; ) is assumed. A version or version range can be specified using the npm semver matching syntax. When a version is stored, it can be stored using the version range specified, a space and then the version found. (ie, the first version is what was asked for, the second is what was installed. No need for a separate lock file.)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Please refer to the &#34;contributing&#34; section of the &lt;a href=&#34;https://github.com/microsoft/vcpkg/raw/master/README.md&#34;&gt;main &lt;code&gt;README.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or email &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;Windows Contributing Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install Visual Studio and the C++ workload&lt;/li&gt; &#xA; &lt;li&gt;Install Node.JS by downloading a 16.x copy from &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;https://nodejs.org/en/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm install -g @microsoft/rush&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Ubuntu 22.04 Contributing Prerequisites&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -&#xA;sudo apt update&#xA;sudo apt install nodejs cmake ninja-build gcc build-essential git zip unzip&#xA;sudo npm install -g @microsoft/rush&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;The product code in this repository is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/vcpkg-tool/main/LICENSE.txt&#34;&gt;MIT License&lt;/a&gt;. The tests contain 3rd party code as documented in &lt;code&gt;NOTICE.txt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Trademarks&lt;/h1&gt; &#xA;&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&#34;https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general&#34;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt; &#xA;&lt;h1&gt;Telemetry&lt;/h1&gt; &#xA;&lt;p&gt;vcpkg collects usage data in order to help us improve your experience. The data collected by Microsoft is anonymous. You can opt-out of telemetry by re-running the bootstrap-vcpkg script with -disableMetrics, passing --disable-metrics to vcpkg on the command line, or by setting the VCPKG_DISABLE_METRICS environment variable.&lt;/p&gt; &#xA;&lt;p&gt;Read more about vcpkg telemetry at &lt;a href=&#34;https://learn.microsoft.com/vcpkg/about/privacy&#34;&gt;https://learn.microsoft.com/vcpkg/about/privacy&lt;/a&gt; in the main repository&lt;/p&gt;</summary>
  </entry>
</feed>