<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-23T01:31:55Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>aristocratos/btop</title>
    <updated>2022-09-23T01:31:55Z</updated>
    <id>tag:github.com,2022-09-23:/aristocratos/btop</id>
    <link href="https://github.com/aristocratos/btop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A monitor of resources&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/Img/logo.png&#34; alt=&#34;btop++&#34;&gt;&lt;/h1&gt; &#xA;&lt;a href=&#34;https://repology.org/project/btop/versions&#34;&gt; &lt;img src=&#34;https://repology.org/badge/vertical-allrepos/btop.svg?sanitize=true&#34; alt=&#34;Packaging status&#34; align=&#34;right&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/-Linux-grey?logo=linux&#34; alt=&#34;Linux&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/-OSX-black?logo=apple&#34; alt=&#34;OSX&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/-FreeBSD-red?logo=freebsd&#34; alt=&#34;FreeBSD&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Usage-System%20resource%20monitor-yellow&#34; alt=&#34;Usage&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/cpp-c%2B%2B20-green&#34; alt=&#34;c++20&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/tag/aristocratos/btop?label=release&#34; alt=&#34;latest_release&#34;&gt; &lt;a href=&#34;https://paypal.me/aristocratos&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Donate-yellow?logo=paypal&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/aristocratos&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Sponsor-red?logo=github&#34; alt=&#34;Sponsor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ko-fi.com/aristocratos&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Buy%20me%20a%20Coffee-grey?logo=Ko-fi&#34; alt=&#34;Coffee&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://snapcraft.io/btop&#34;&gt;&lt;img src=&#34;https://snapcraft.io/btop/badge.svg?sanitize=true&#34; alt=&#34;btop&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/aristocratos/btop/actions/workflows/continuous-build-linux.yml&#34;&gt;&lt;img src=&#34;https://github.com/aristocratos/btop/actions/workflows/continuous-build-linux.yml/badge.svg?sanitize=true&#34; alt=&#34;Continuous Build Linux&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/aristocratos/btop/actions/workflows/continuous-build-macos.yml&#34;&gt;&lt;img src=&#34;https://github.com/aristocratos/btop/actions/workflows/continuous-build-macos.yml/badge.svg?sanitize=true&#34; alt=&#34;Continuous Build MacOS&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Index&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/#news&#34;&gt;News&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/#documents&#34;&gt;Documents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/#description&#34;&gt;Description&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/#themes&#34;&gt;Themes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/#support-and-funding&#34;&gt;Support and funding&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt; (Read this if you are having issues!)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/#screenshots&#34;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/#help-menu&#34;&gt;Keybindings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/#installation&#34;&gt;Installation Linux/OSX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/#compilation-linux&#34;&gt;Compilation Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/#compilation-osx&#34;&gt;Compilation OSX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/#compilation-freebsd&#34;&gt;Compilation FreeBSD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/#installing-the-snap&#34;&gt;Installing the snap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/#configurability&#34;&gt;Configurability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;h5&gt;28 August 2022&lt;/h5&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/aristocratos/btop4win&#34;&gt;&lt;img src=&#34;https://github.com/aristocratos/btop4win/raw/master/Img/logo.png&#34; alt=&#34;btop4win&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;First release of btop4win available at &lt;a href=&#34;https://github.com/aristocratos/btop4win&#34;&gt;https://github.com/aristocratos/btop4win&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h5&gt;16 January 2022&lt;/h5&gt; &#xA;&lt;p&gt;Release v1.2.0 with FreeBSD support. No release binaries for FreeBSD provided as of yet.&lt;/p&gt; &#xA;&lt;p&gt;Again a big thanks to &lt;a href=&#34;https://github.com/joske&#34;&gt;@joske&lt;/a&gt; for his porting efforts!&lt;/p&gt; &#xA;&lt;p&gt;Since compatibility with Linux, MacOS and FreeBSD are done, the focus going forward will be on new features like GPU monitoring.&lt;/p&gt; &#xA;&lt;h5&gt;13 November 2021&lt;/h5&gt; &#xA;&lt;p&gt;Release v1.1.0 with OSX support. Binaries in &lt;a href=&#34;https://github.com/aristocratos/btop/actions/workflows/continuous-build-macos.yml&#34;&gt;continuous-build-macos&lt;/a&gt; are only x86 for now. Macos binaries + installer are included for both x86 and ARM64 (Apple Silicon) in the releases.&lt;/p&gt; &#xA;&lt;p&gt;Big thank you to &lt;a href=&#34;https://github.com/joske&#34;&gt;@joske&lt;/a&gt; who wrote the vast majority of the implementation!&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;More...&lt;/summary&gt; &#xA; &lt;h5&gt;30 October 2021&lt;/h5&gt; &#xA; &lt;p&gt;Work on the OSX and FreeBSD branches, both initiated and mostly worked on by &lt;a href=&#34;https://github.com/joske&#34;&gt;@joske&lt;/a&gt;, will likely be completed in the coming weeks. The OSX branch has some memory leaks that needs to be sorted out and both have some issues with the processes cpu usage calculation and other smaller issues that needs fixing.&lt;/p&gt; &#xA; &lt;p&gt;If you want to help out, test for bugs/fix bugs or just try out the branches:&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;OSX&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install and use Homebrew or MacPorts package managers for easy dependency installation&#xA;brew install coreutils make gcc@11&#xA;git clone https://github.com/aristocratos/btop.git&#xA;cd btop&#xA;git checkout OSX&#xA;gmake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;strong&gt;FreeBSD&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo pkg install gmake gcc11 coreutils git&#xA;git clone https://github.com/aristocratos/btop.git&#xA;cd btop&#xA;git checkout freebsd&#xA;gmake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Note that GNU make (&lt;code&gt;gmake&lt;/code&gt;) is recommended but not required for OSX but it is required on FreeBSD.&lt;/p&gt; &#xA; &lt;h5&gt;6 October 2021&lt;/h5&gt; &#xA; &lt;p&gt;OsX development have been started by &lt;a href=&#34;https://github.com/joske&#34;&gt;@joske&lt;/a&gt;, big thanks :) See branch &lt;a href=&#34;https://github.com/aristocratos/btop/tree/OSX&#34;&gt;OSX&lt;/a&gt; for current progress.&lt;/p&gt; &#xA; &lt;h5&gt;18 September 2021&lt;/h5&gt; &#xA; &lt;p&gt;The Linux version of btop++ is complete. Released as version 1.0.0&lt;/p&gt; &#xA; &lt;p&gt;I will be providing statically compiled binaries for a range of architectures in every release for those having problems compiling.&lt;/p&gt; &#xA; &lt;p&gt;For compilation GCC 10 is required, GCC 11 preferred.&lt;/p&gt; &#xA; &lt;p&gt;Please report any bugs to the &lt;a href=&#34;https://github.com/aristocratos/btop/issues/new?assignees=aristocratos&amp;amp;labels=bug&amp;amp;template=bug_report.md&amp;amp;title=%5BBUG%5D&#34;&gt;Issues&lt;/a&gt; page.&lt;/p&gt; &#xA; &lt;p&gt;The development plan right now:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;1.1.0 Mac OsX support&lt;/li&gt; &#xA;  &lt;li&gt;1.2.0 FreeBSD support&lt;/li&gt; &#xA;  &lt;li&gt;1.3.0 Support for GPU monitoring&lt;/li&gt; &#xA;  &lt;li&gt;1.X.0 Other platforms and features...&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;Windows support is not in the plans as of now, but if anyone else wants to take it on, I will try to help.&lt;/p&gt; &#xA; &lt;h5&gt;5 May 2021&lt;/h5&gt; &#xA; &lt;p&gt;This project is gonna take some time until it has complete feature parity with bpytop, since all system information gathering will have to be written from scratch without any external libraries. And will need some help in the form of code contributions to get complete support for BSD and OSX.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Documents&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/CODE_OF_CONDUCT.md&#34;&gt;CODE_OF_CONDUCT.md&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;Resource monitor that shows usage and stats for processor, memory, disks, network and processes.&lt;/p&gt; &#xA;&lt;p&gt;C++ version and continuation of &lt;a href=&#34;https://github.com/aristocratos/bashtop&#34;&gt;bashtop&lt;/a&gt; and &lt;a href=&#34;https://github.com/aristocratos/bpytop&#34;&gt;bpytop&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Easy to use, with a game inspired menu system.&lt;/li&gt; &#xA; &lt;li&gt;Full mouse support, all buttons with a highlighted key is clickable and mouse scroll works in process list and menu boxes.&lt;/li&gt; &#xA; &lt;li&gt;Fast and responsive UI with UP, DOWN keys process selection.&lt;/li&gt; &#xA; &lt;li&gt;Function for showing detailed stats for selected process.&lt;/li&gt; &#xA; &lt;li&gt;Ability to filter processes.&lt;/li&gt; &#xA; &lt;li&gt;Easy switching between sorting options.&lt;/li&gt; &#xA; &lt;li&gt;Tree view of processes.&lt;/li&gt; &#xA; &lt;li&gt;Send any signal to selected process.&lt;/li&gt; &#xA; &lt;li&gt;UI menu for changing all config file options.&lt;/li&gt; &#xA; &lt;li&gt;Auto scaling graph for network usage.&lt;/li&gt; &#xA; &lt;li&gt;Shows IO activity and speeds for disks&lt;/li&gt; &#xA; &lt;li&gt;Battery meter&lt;/li&gt; &#xA; &lt;li&gt;Selectable symbols for the graphs&lt;/li&gt; &#xA; &lt;li&gt;Custom presets&lt;/li&gt; &#xA; &lt;li&gt;And more...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Themes&lt;/h2&gt; &#xA;&lt;p&gt;Btop++ uses the same theme files as bpytop and bashtop (some color values missing in bashtop themes) .&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/aristocratos/btop/tree/master/themes&#34;&gt;themes&lt;/a&gt; folder for available themes.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;make install&lt;/code&gt; command places the default themes in &lt;code&gt;[$PREFIX or /usr/local]/share/btop/themes&lt;/code&gt;. User created themes should be placed in &lt;code&gt;$XDG_CONFIG_HOME/btop/themes&lt;/code&gt; or &lt;code&gt;$HOME/.config/btop/themes&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Let me know if you want to contribute with new themes.&lt;/p&gt; &#xA;&lt;h2&gt;Support and funding&lt;/h2&gt; &#xA;&lt;p&gt;You can sponsor this project through github, see &lt;a href=&#34;https://github.com/sponsors/aristocratos&#34;&gt;my sponsors page&lt;/a&gt; for options.&lt;/p&gt; &#xA;&lt;p&gt;Or donate through &lt;a href=&#34;https://paypal.me/aristocratos&#34;&gt;paypal&lt;/a&gt; or &lt;a href=&#34;https://ko-fi.com/aristocratos&#34;&gt;ko-fi&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Any support is greatly appreciated!&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;For best experience, a terminal with support for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;24-bit truecolor (&lt;a href=&#34;https://github.com//termstandard/colors&#34;&gt;See list of terminals with truecolor support&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;256-color terminals are supported through 24-bit to 256-color conversion when setting &#34;truecolor&#34; to False in the options or with &#34;-lc/--low-color&#34; arguments.&lt;/li&gt; &#xA; &lt;li&gt;16 color TTY mode will be activated if a real tty device is detected. Can be forced with &#34;-t/--tty_on&#34; arguments.&lt;/li&gt; &#xA; &lt;li&gt;Wide characters (Are sometimes problematic in web-based terminals)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also needs a UTF8 locale and a font that covers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Unicode Block “Braille Patterns” U+2800 - U+28FF (Not needed in TTY mode or with graphs set to type: block or tty.)&lt;/li&gt; &#xA; &lt;li&gt;Unicode Block “Geometric Shapes” U+25A0 - U+25FF&lt;/li&gt; &#xA; &lt;li&gt;Unicode Block &#34;Box Drawing&#34; and &#34;Block Elements&#34; U+2500 - U+259F&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Notice (Text rendering issues)&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If you are having problems with the characters in the graphs not looking like they do in the screenshots, it&#39;s likely a problem with your systems configured fallback font not having support for braille characters.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;See &lt;a href=&#34;https://github.com/ryanoasis/nerd-fonts/tree/master/patched-fonts/Terminus/terminus-ttf-4.40.1&#34;&gt;Terminess Powerline&lt;/a&gt; for an example of a font that includes the braille symbols.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;See comments by @sgleizes &lt;a href=&#34;https://github.com/aristocratos/bpytop/issues/100#issuecomment-684036827&#34;&gt;link&lt;/a&gt; and @XenHat &lt;a href=&#34;https://github.com/aristocratos/bpytop/issues/100#issuecomment-691585587&#34;&gt;link&lt;/a&gt; in issue #100 for possible solutions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If text are misaligned and you are using Konsole or Yakuake, turning off &#34;Bi-Directional text rendering&#34; is a possible fix.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Characters clipping in to each other or text/border misalignments is not bugs caused by btop, but most likely a fontconfig or terminal problem where the braille characters making up the graphs aren&#39;t rendered correctly.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Look to the creators of the terminal emulator you use to fix these issues if the previous mentioned fixes don&#39;t work for you.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;h4&gt;Main UI showing details for a selected process&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/Img/normal.png&#34; alt=&#34;Screenshot 1&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Main UI in TTY mode&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/Img/tty.png&#34; alt=&#34;Screenshot 2&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Main UI with custom options&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/Img/alt.png&#34; alt=&#34;Screenshot 3&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Main-menu&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/Img/main-menu.png&#34; alt=&#34;Screenshot 3&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Options-menu&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/Img/options-menu.png&#34; alt=&#34;Screenshot 4&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Help-menu&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/Img/help-menu.png&#34; alt=&#34;Screenshot 5&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Binaries for Linux are statically compiled with musl and works on kernel 2.6.39 and newer&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Download btop-(VERSION)-(ARCH)-(PLATFORM).tbz from &lt;a href=&#34;https://github.com/aristocratos/btop/releases/latest&#34;&gt;latest release&lt;/a&gt; and unpack to a new folder&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Notice! Use x86_64 for 64-bit x86 systems, i486 and i686 are 32-bit!&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install (from created folder)&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Run install.sh or:&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# use &#34;make install PREFIX=/target/dir&#34; to set target, default: /usr/local&#xA;# only use &#34;sudo&#34; when installing to a NON user owned directory&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;(Optional) Set suid bit to make btop always run as root (or other user)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Enables signal sending to any process without starting with &lt;code&gt;sudo&lt;/code&gt; and can prevent /proc read permissions problems on some systems.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Run setuid.sh or:&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# run after make install and use same PREFIX if any was used at install&#xA;# set SU_USER and SU_GROUP to select user and group, default is root:root&#xA;sudo make setuid&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Uninstall&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Run uninstall.sh or:&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo make uninstall&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Show help&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make help&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Binary release (from native os repo)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;openSUSE&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Tumbleweed:&lt;/strong&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo zypper in btop&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;For all other versions, see &lt;a href=&#34;https://software.opensuse.org/package/btop&#34;&gt;openSUSE Software: btop&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fedora&lt;/strong&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo dnf install btop&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;RHEL/AlmaLinux 8+&lt;/strong&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo dnf install epel-release&#xA;sudo dnf install btop&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;FreeBSD&lt;/strong&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt; pkg install btop&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Binary release on Homebrew (macOS (x86_64 &amp;amp; ARM64) / Linux (x86_64))&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://formulae.brew.sh/formula/btop&#34;&gt;Homebrew&lt;/a&gt;&lt;/strong&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install btop&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compilation Linux&lt;/h2&gt; &#xA;&lt;p&gt;Needs GCC 10 or higher, (GCC 11 or above strongly recommended for better CPU efficiency in the compiled binary).&lt;/p&gt; &#xA;&lt;p&gt;The makefile also needs GNU coreutils and &lt;code&gt;sed&lt;/code&gt; (should already be installed on any modern distribution).&lt;/p&gt; &#xA;&lt;p&gt;For a &lt;code&gt;cmake&lt;/code&gt; based build alternative see the &lt;a href=&#34;https://github.com/jan-guenter/btop/tree/main&#34;&gt;fork&lt;/a&gt; by @jan-guenter&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install dependencies (example for Ubuntu 21.04 Hirsute)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Use gcc-10 g++-10 if gcc-11 isn&#39;t available&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install coreutils sed git build-essential gcc-11 g++-11&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone repository&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/aristocratos/btop.git&#xA;cd btop&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Compile&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Append &lt;code&gt;STATIC=true&lt;/code&gt; to &lt;code&gt;make&lt;/code&gt; command for static compilation.&lt;/p&gt; &lt;p&gt;Notice! If using LDAP Authentication, usernames will show as UID number for LDAP users if compiling statically with glibc.&lt;/p&gt; &lt;p&gt;Append &lt;code&gt;QUIET=true&lt;/code&gt; for less verbose output.&lt;/p&gt; &lt;p&gt;Append &lt;code&gt;STRIP=true&lt;/code&gt; to force stripping of debug symbols (adds &lt;code&gt;-s&lt;/code&gt; linker flag).&lt;/p&gt; &lt;p&gt;Append &lt;code&gt;ARCH=&amp;lt;architecture&amp;gt;&lt;/code&gt; to manually set the target architecture. If omitted the makefile uses the machine triple (output of &lt;code&gt;-dumpmachine&lt;/code&gt; compiler parameter) to detect the target system.&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;ADDFLAGS&lt;/code&gt; variable for appending flags to both compiler and linker.&lt;/p&gt; &lt;p&gt;For example: &lt;code&gt;ADDFLAGS=-march=native&lt;/code&gt; might give a performance boost if compiling only for your own system.&lt;/p&gt; &lt;p&gt;If &lt;code&gt;g++&lt;/code&gt; is linked to an older version of gcc on your system specify the correct version by appending &lt;code&gt;CXX=g++-10&lt;/code&gt; or &lt;code&gt;CXX=g++-11&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Append &lt;code&gt;PREFIX=/target/dir&lt;/code&gt; to set target, default: &lt;code&gt;/usr/local&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Notice! Only use &#34;sudo&#34; when installing to a NON user owned directory.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;(Optional) Set suid bit to make btop always run as root (or other user)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;No need for &lt;code&gt;sudo&lt;/code&gt; to enable signal sending to any process and to prevent /proc read permissions problems on some systems.&lt;/p&gt; &lt;p&gt;Run after make install and use same PREFIX if any was used at install.&lt;/p&gt; &lt;p&gt;Set &lt;code&gt;SU_USER&lt;/code&gt; and &lt;code&gt;SU_GROUP&lt;/code&gt; to select user and group, default is &lt;code&gt;root&lt;/code&gt; and &lt;code&gt;root&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo make setuid&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Uninstall&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo make uninstall&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Remove any object files from source dir&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make clean&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Remove all object files, binaries and created directories in source dir&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make distclean&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Show help&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make help&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compilation OSX&lt;/h2&gt; &#xA;&lt;p&gt;Needs GCC 10 or higher, (GCC 11 or above strongly recommended for better CPU efficiency in the compiled binary).&lt;/p&gt; &#xA;&lt;p&gt;The makefile also needs GNU coreutils and &lt;code&gt;sed&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Install and use Homebrew or MacPorts package managers for easy dependency installation&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install dependencies (example for Homebrew)&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install coreutils make gcc@11&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone repository&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/aristocratos/btop.git&#xA;cd btop&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Compile&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Append &lt;code&gt;STATIC=true&lt;/code&gt; to &lt;code&gt;make&lt;/code&gt; command for static compilation (only libgcc and libstdc++ will be static!).&lt;/p&gt; &lt;p&gt;Append &lt;code&gt;QUIET=true&lt;/code&gt; for less verbose output.&lt;/p&gt; &lt;p&gt;Append &lt;code&gt;STRIP=true&lt;/code&gt; to force stripping of debug symbols (adds &lt;code&gt;-s&lt;/code&gt; linker flag).&lt;/p&gt; &lt;p&gt;Append &lt;code&gt;ARCH=&amp;lt;architecture&amp;gt;&lt;/code&gt; to manually set the target architecture. If omitted the makefile uses the machine triple (output of &lt;code&gt;-dumpmachine&lt;/code&gt; compiler parameter) to detect the target system.&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;ADDFLAGS&lt;/code&gt; variable for appending flags to both compiler and linker.&lt;/p&gt; &lt;p&gt;For example: &lt;code&gt;ADDFLAGS=-march=native&lt;/code&gt; might give a performance boost if compiling only for your own system.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gmake&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Append &lt;code&gt;PREFIX=/target/dir&lt;/code&gt; to set target, default: &lt;code&gt;/usr/local&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Notice! Only use &#34;sudo&#34; when installing to a NON user owned directory.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo gmake install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;(Recommended) Set suid bit to make btop always run as root (or other user)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;No need for &lt;code&gt;sudo&lt;/code&gt; to see information for non user owned processes and to enable signal sending to any process.&lt;/p&gt; &lt;p&gt;Run after make install and use same PREFIX if any was used at install.&lt;/p&gt; &lt;p&gt;Set &lt;code&gt;SU_USER&lt;/code&gt; and &lt;code&gt;SU_GROUP&lt;/code&gt; to select user and group, default is &lt;code&gt;root&lt;/code&gt; and &lt;code&gt;wheel&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo gmake setuid&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Uninstall&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo gmake uninstall&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Remove any object files from source dir&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gmake clean&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Remove all object files, binaries and created directories in source dir&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gmake distclean&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Show help&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gmake help&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compilation FreeBSD&lt;/h2&gt; &#xA;&lt;p&gt;Needs GCC 10 or higher, (GCC 11 or above strongly recommended for better CPU efficiency in the compiled binary).&lt;/p&gt; &#xA;&lt;p&gt;Note that GNU make (&lt;code&gt;gmake&lt;/code&gt;) is required to compile on FreeBSD.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo pkg install gmake gcc11 coreutils git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone repository&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/aristocratos/btop.git&#xA;cd btop&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Compile&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Append &lt;code&gt;STATIC=true&lt;/code&gt; to &lt;code&gt;make&lt;/code&gt; command for static compilation.&lt;/p&gt; &lt;p&gt;Append &lt;code&gt;QUIET=true&lt;/code&gt; for less verbose output.&lt;/p&gt; &lt;p&gt;Append &lt;code&gt;STRIP=true&lt;/code&gt; to force stripping of debug symbols (adds &lt;code&gt;-s&lt;/code&gt; linker flag).&lt;/p&gt; &lt;p&gt;Append &lt;code&gt;ARCH=&amp;lt;architecture&amp;gt;&lt;/code&gt; to manually set the target architecture. If omitted the makefile uses the machine triple (output of &lt;code&gt;-dumpmachine&lt;/code&gt; compiler parameter) to detect the target system.&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;ADDFLAGS&lt;/code&gt; variable for appending flags to both compiler and linker.&lt;/p&gt; &lt;p&gt;For example: &lt;code&gt;ADDFLAGS=-march=native&lt;/code&gt; might give a performance boost if compiling only for your own system.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gmake&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Append &lt;code&gt;PREFIX=/target/dir&lt;/code&gt; to set target, default: &lt;code&gt;/usr/local&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Notice! Only use &#34;sudo&#34; when installing to a NON user owned directory.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo gmake install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;(Recommended) Set suid bit to make btop always run as root (or other user)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;No need for &lt;code&gt;sudo&lt;/code&gt; to see information for non user owned processes and to enable signal sending to any process.&lt;/p&gt; &lt;p&gt;Run after make install and use same PREFIX if any was used at install.&lt;/p&gt; &lt;p&gt;Set &lt;code&gt;SU_USER&lt;/code&gt; and &lt;code&gt;SU_GROUP&lt;/code&gt; to select user and group, default is &lt;code&gt;root&lt;/code&gt; and &lt;code&gt;wheel&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo gmake setuid&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Uninstall&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo gmake uninstall&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Remove any object files from source dir&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gmake clean&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Remove all object files, binaries and created directories in source dir&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gmake distclean&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Show help&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gmake help&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing the snap&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://snapcraft.io/btop&#34;&gt;&lt;img src=&#34;https://snapcraft.io/btop/badge.svg?sanitize=true&#34; alt=&#34;btop&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Note: there are now two snaps available: &lt;code&gt;btop&lt;/code&gt; and &lt;code&gt;btop-desktop&lt;/code&gt;. The desktop version is much larger and includes the desktop entries needed to allow for launching &lt;code&gt;btop&lt;/code&gt; with a click.&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install the snap&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo snap install btop&#xA;or&#xA;sudo snap install btop-desktop&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install the latest snap from the edge channel&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo snap install btop --edge&#xA;or&#xA;sudo snap install btop-desktop --edge&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Connect the interface&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo snap connect btop:removable-media&#xA;or &#xA;sudo snap connect btop-desktop:removable-media&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configurability&lt;/h2&gt; &#xA;&lt;p&gt;All options changeable from within UI. Config and log files stored in &lt;code&gt;$XDG_CONFIG_HOME/btop&lt;/code&gt; or &lt;code&gt;$HOME/.config/btop&lt;/code&gt; folder&lt;/p&gt; &#xA;&lt;h4&gt;btop.conf: (auto generated if not found)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#? Config file for btop v. 1.2.2&#xA;&#xA;#* Name of a btop++/bpytop/bashtop formatted &#34;.theme&#34; file, &#34;Default&#34; and &#34;TTY&#34; for builtin themes.&#xA;#* Themes should be placed in &#34;../share/btop/themes&#34; relative to binary or &#34;$HOME/.config/btop/themes&#34;&#xA;color_theme = &#34;Default&#34;&#xA;&#xA;#* If the theme set background should be shown, set to False if you want terminal background transparency.&#xA;theme_background = True&#xA;&#xA;#* Sets if 24-bit truecolor should be used, will convert 24-bit colors to 256 color (6x6x6 color cube) if false.&#xA;truecolor = True&#xA;&#xA;#* Set to true to force tty mode regardless if a real tty has been detected or not.&#xA;#* Will force 16-color mode and TTY theme, set all graph symbols to &#34;tty&#34; and swap out other non tty friendly symbols.&#xA;force_tty = False&#xA;&#xA;#* Define presets for the layout of the boxes. Preset 0 is always all boxes shown with default settings. Max 9 presets.&#xA;#* Format: &#34;box_name:P:G,box_name:P:G&#34; P=(0 or 1) for alternate positions, G=graph symbol to use for box.&#xA;#* Use withespace &#34; &#34; as separator between different presets.&#xA;#* Example: &#34;cpu:0:default,mem:0:tty,proc:1:default cpu:0:braille,proc:0:tty&#34;&#xA;presets = &#34;cpu:1:default,proc:0:default cpu:0:default,mem:0:default,net:0:default cpu:0:block,net:0:tty&#34;&#xA;&#xA;#* Set to True to enable &#34;h,j,k,l,g,G&#34; keys for directional control in lists.&#xA;#* Conflicting keys for h:&#34;help&#34; and k:&#34;kill&#34; is accessible while holding shift.&#xA;vim_keys = False&#xA;&#xA;#* Rounded corners on boxes, is ignored if TTY mode is ON.&#xA;rounded_corners = True&#xA;&#xA;#* Default symbols to use for graph creation, &#34;braille&#34;, &#34;block&#34; or &#34;tty&#34;.&#xA;#* &#34;braille&#34; offers the highest resolution but might not be included in all fonts.&#xA;#* &#34;block&#34; has half the resolution of braille but uses more common characters.&#xA;#* &#34;tty&#34; uses only 3 different symbols but will work with most fonts and should work in a real TTY.&#xA;#* Note that &#34;tty&#34; only has half the horizontal resolution of the other two, so will show a shorter historical view.&#xA;graph_symbol = &#34;braille&#34;&#xA;&#xA;# Graph symbol to use for graphs in cpu box, &#34;default&#34;, &#34;braille&#34;, &#34;block&#34; or &#34;tty&#34;.&#xA;graph_symbol_cpu = &#34;default&#34;&#xA;&#xA;# Graph symbol to use for graphs in cpu box, &#34;default&#34;, &#34;braille&#34;, &#34;block&#34; or &#34;tty&#34;.&#xA;graph_symbol_mem = &#34;default&#34;&#xA;&#xA;# Graph symbol to use for graphs in cpu box, &#34;default&#34;, &#34;braille&#34;, &#34;block&#34; or &#34;tty&#34;.&#xA;graph_symbol_net = &#34;default&#34;&#xA;&#xA;# Graph symbol to use for graphs in cpu box, &#34;default&#34;, &#34;braille&#34;, &#34;block&#34; or &#34;tty&#34;.&#xA;graph_symbol_proc = &#34;default&#34;&#xA;&#xA;#* Manually set which boxes to show. Available values are &#34;cpu mem net proc&#34;, separate values with whitespace.&#xA;shown_boxes = &#34;proc cpu mem net&#34;&#xA;&#xA;#* Update time in milliseconds, recommended 2000 ms or above for better sample times for graphs.&#xA;update_ms = 1500&#xA;&#xA;#* Processes sorting, &#34;pid&#34; &#34;program&#34; &#34;arguments&#34; &#34;threads&#34; &#34;user&#34; &#34;memory&#34; &#34;cpu lazy&#34; &#34;cpu responsive&#34;,&#xA;#* &#34;cpu lazy&#34; sorts top process over time (easier to follow), &#34;cpu responsive&#34; updates top process directly.&#xA;proc_sorting = &#34;cpu lazy&#34;&#xA;&#xA;#* Reverse sorting order, True or False.&#xA;proc_reversed = False&#xA;&#xA;#* Show processes as a tree.&#xA;proc_tree = False&#xA;&#xA;#* Use the cpu graph colors in the process list.&#xA;proc_colors = True&#xA;&#xA;#* Use a darkening gradient in the process list.&#xA;proc_gradient = True&#xA;&#xA;#* If process cpu usage should be of the core it&#39;s running on or usage of the total available cpu power.&#xA;proc_per_core = True&#xA;&#xA;#* Show process memory as bytes instead of percent.&#xA;proc_mem_bytes = True&#xA;&#xA;#* Use /proc/[pid]/smaps for memory information in the process info box (very slow but more accurate)&#xA;proc_info_smaps = False&#xA;&#xA;#* Show proc box on left side of screen instead of right.&#xA;proc_left = False&#xA;&#xA;#* Sets the CPU stat shown in upper half of the CPU graph, &#34;total&#34; is always available.&#xA;#* Select from a list of detected attributes from the options menu.&#xA;cpu_graph_upper = &#34;total&#34;&#xA;&#xA;#* Sets the CPU stat shown in lower half of the CPU graph, &#34;total&#34; is always available.&#xA;#* Select from a list of detected attributes from the options menu.&#xA;cpu_graph_lower = &#34;total&#34;&#xA;&#xA;#* Toggles if the lower CPU graph should be inverted.&#xA;cpu_invert_lower = True&#xA;&#xA;#* Set to True to completely disable the lower CPU graph.&#xA;cpu_single_graph = False&#xA;&#xA;#* Show cpu box at bottom of screen instead of top.&#xA;cpu_bottom = False&#xA;&#xA;#* Shows the system uptime in the CPU box.&#xA;show_uptime = True&#xA;&#xA;#* Show cpu temperature.&#xA;check_temp = True&#xA;&#xA;#* Which sensor to use for cpu temperature, use options menu to select from list of available sensors.&#xA;cpu_sensor = &#34;Auto&#34;&#xA;&#xA;#* Show temperatures for cpu cores also if check_temp is True and sensors has been found.&#xA;show_coretemp = True&#xA;&#xA;#* Set a custom mapping between core and coretemp, can be needed on certain cpus to get correct temperature for correct core.&#xA;#* Use lm-sensors or similar to see which cores are reporting temperatures on your machine.&#xA;#* Format &#34;x:y&#34; x=core with wrong temp, y=core with correct temp, use space as separator between multiple entries.&#xA;#* Example: &#34;4:0 5:1 6:3&#34;&#xA;cpu_core_map = &#34;&#34;&#xA;&#xA;#* Which temperature scale to use, available values: &#34;celsius&#34;, &#34;fahrenheit&#34;, &#34;kelvin&#34; and &#34;rankine&#34;.&#xA;temp_scale = &#34;celsius&#34;&#xA;&#xA;#* Use base 10 for bits/bytes sizes, KB = 1000 instead of KiB = 1024.&#xA;base_10_sizes = False&#xA;&#xA;#* Show CPU frequency.&#xA;show_cpu_freq = True&#xA;&#xA;#* Draw a clock at top of screen, formatting according to strftime, empty string to disable.&#xA;#* Special formatting: /host = hostname | /user = username | /uptime = system uptime&#xA;clock_format = &#34;%H:%M&#34;&#xA;&#xA;#* Update main ui in background when menus are showing, set this to false if the menus is flickering too much for comfort.&#xA;background_update = True&#xA;&#xA;#* Custom cpu model name, empty string to disable.&#xA;custom_cpu_name = &#34;&#34;&#xA;&#xA;#* Optional filter for shown disks, should be full path of a mountpoint, separate multiple values with whitespace &#34; &#34;.&#xA;#* Begin line with &#34;exclude=&#34; to change to exclude filter, otherwise defaults to &#34;most include&#34; filter. Example: disks_filter=&#34;exclude=/boot /home/user&#34;.&#xA;disks_filter = &#34;exclude=/boot&#34;&#xA;&#xA;#* Show graphs instead of meters for memory values.&#xA;mem_graphs = True&#xA;&#xA;#* Show mem box below net box instead of above.&#xA;mem_below_net = False&#xA;&#xA;#* If swap memory should be shown in memory box.&#xA;show_swap = True&#xA;&#xA;#* Show swap as a disk, ignores show_swap value above, inserts itself after first disk.&#xA;swap_disk = True&#xA;&#xA;#* If mem box should be split to also show disks info.&#xA;show_disks = True&#xA;&#xA;#* Filter out non physical disks. Set this to False to include network disks, RAM disks and similar.&#xA;only_physical = True&#xA;&#xA;#* Read disks list from /etc/fstab. This also disables only_physical.&#xA;use_fstab = False&#xA;&#xA;#* Set to true to show available disk space for privileged users.&#xA;disk_free_priv = False&#xA;&#xA;#* Toggles if io activity % (disk busy time) should be shown in regular disk usage view.&#xA;show_io_stat = True&#xA;&#xA;#* Toggles io mode for disks, showing big graphs for disk read/write speeds.&#xA;io_mode = False&#xA;&#xA;#* Set to True to show combined read/write io graphs in io mode.&#xA;io_graph_combined = False&#xA;&#xA;#* Set the top speed for the io graphs in MiB/s (100 by default), use format &#34;mountpoint:speed&#34; separate disks with whitespace &#34; &#34;.&#xA;#* Example: &#34;/mnt/media:100 /:20 /boot:1&#34;.&#xA;io_graph_speeds = &#34;&#34;&#xA;&#xA;#* Set fixed values for network graphs in Mebibits. Is only used if net_auto is also set to False.&#xA;net_download = 100&#xA;&#xA;net_upload = 100&#xA;&#xA;#* Use network graphs auto rescaling mode, ignores any values set above and rescales down to 10 Kibibytes at the lowest.&#xA;net_auto = True&#xA;&#xA;#* Sync the auto scaling for download and upload to whichever currently has the highest scale.&#xA;net_sync = False&#xA;&#xA;#* Starts with the Network Interface specified here.&#xA;net_iface = &#34;br0&#34;&#xA;&#xA;#* Show battery stats in top right if battery is present.&#xA;show_battery = True&#xA;&#xA;#* Which battery to use if multiple are present. &#34;Auto&#34; for auto detection.&#xA;selected_battery = &#34;Auto&#34;&#xA;&#xA;#* Set loglevel for &#34;~/.config/btop/btop.log&#34; levels are: &#34;ERROR&#34; &#34;WARNING&#34; &#34;INFO&#34; &#34;DEBUG&#34;.&#xA;#* The level set includes all lower levels, i.e. &#34;DEBUG&#34; will show all logging info.&#xA;log_level = &#34;DEBUG&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Command line options&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;usage: btop [-h] [-v] [-/+t] [-p &amp;lt;id&amp;gt;] [--utf-force] [--debug]&#xA;&#xA;optional arguments:&#xA;  -h, --help            show this help message and exit&#xA;  -v, --version         show version info and exit&#xA;  -lc, --low-color      disable truecolor, converts 24-bit colors to 256-color&#xA;  -t, --tty_on          force (ON) tty mode, max 16 colors and tty friendly graph symbols&#xA;  +t, --tty_off         force (OFF) tty mode&#xA;  -p, --preset &amp;lt;id&amp;gt;     start with preset, integer value between 0-9&#xA;  --utf-force           force start even if no UTF-8 locale was detected&#xA;  --debug               start in DEBUG mode: shows microsecond timer for information collect&#xA;                        and screen draw functions and sets loglevel to DEBUG&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aristocratos/btop/main/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>doublesymmetry/react-native-track-player</title>
    <updated>2022-09-23T01:31:55Z</updated>
    <id>tag:github.com,2022-09-23:/doublesymmetry/react-native-track-player</id>
    <link href="https://github.com/doublesymmetry/react-native-track-player" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fully fledged audio module created for music apps. Provides audio playback, external media controls, chromecast support, background mode and more!&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://react-native-track-player.js.org/img/optimized-logo.svg?sanitize=true&#34; width=&#34;300&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/react-native-track-player&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/dw/react-native-track-player.svg?sanitize=true&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/react-native-track-player&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/react-native-track-player.svg?sanitize=true&#34; alt=&#34;npm&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discordapp.com/invite/ya2XDCR&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/567636850513018880.svg?sanitize=true&#34; alt=&#34;discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://commitizen.github.io/cz-cli/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/commitizen-friendly-brightgreen.svg?sanitize=true&#34; alt=&#34;Commitizen friendly&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;A fully-fledged audio module created for music apps. Provides audio playback, external media controls, background mode and more!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://react-native-track-player.js.org&#34;&gt;Documentation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://react-native-track-player.js.org/docs/basics/installation/&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://react-native-track-player.js.org/docs/basics/getting-started/&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://react-native-track-player.js.org/docs/api/events&#34;&gt;API Docs&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://react-native-track-player.js.org/docs/basics/platform-support&#34;&gt;Platform Support&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://react-native-track-player.js.org/docs/basics/background-mode&#34;&gt;Background Mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://react-native-track-player.js.org/docs/basics/build-preferences&#34;&gt;Build Preferences&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://react-native-track-player.js.org/docs/v2-migration&#34;&gt;v2 Migration Guide&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doublesymmetry/react-native-track-player/main/#sponsors&#34;&gt;Sponsors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doublesymmetry/react-native-track-player/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doublesymmetry/react-native-track-player/main/#why-another-music-module&#34;&gt;Why another music module?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doublesymmetry/react-native-track-player/main/#example-setup&#34;&gt;Example Setup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doublesymmetry/react-native-track-player/main/#core-team-&#34;&gt;Core Team ✨&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doublesymmetry/react-native-track-player/main/#special-thanks-&#34;&gt;Special Thanks ✨&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doublesymmetry/react-native-track-player/main/#contributing&#34;&gt;I Have A Bug/Feature Request&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doublesymmetry/react-native-track-player/main/#Community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Not sure where to start?&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Try &lt;a href=&#34;https://react-native-track-player.js.org/docs/basics/getting-started&#34;&gt;Getting Started&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Peruse the &lt;a href=&#34;https://react-native-track-player.js.org/docs/api/events&#34;&gt;API Docs&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run the &lt;a href=&#34;https://raw.githubusercontent.com/doublesymmetry/react-native-track-player/main/example&#34;&gt;Example Project&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;react-native-track-player is made possible by the generosity of the sponsors below, and many other &lt;a href=&#34;https://react-native-track-player.js.org/docs/sponsors#backers&#34;&gt;individual backers&lt;/a&gt;. Sponsoring directly impacts the longevity of this project.&lt;/p&gt; &#xA;&lt;p&gt;Businesses: support continued development and maintenance via sponsoring contracts: E-mail: oss @ doublesymmetry dot com&lt;/p&gt; &#xA;&lt;h4&gt;🥇 Gold sponsors ($2000+ total contributions)&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;http://radio.garden/&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/271885?v=4&#34; align=&#34;center&#34; width=&#34;100&#34; title=&#34;Radio Garden&#34; alt=&#34;Radio Garden&#34;&gt; &lt;br&gt;&lt;sub&gt;&lt;b&gt;Radio Garden&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h4&gt;🗝 Silver Sponsor ($500+ per month)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/DoubleSymmetry&#34;&gt;Become the first silver sponsor!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;🔑 Bronze Sponsor ($200+ per month)&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;http://www.voxist.com/&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/18028734?s=200&amp;amp;v=4&#34; align=&#34;center&#34; width=&#34;75&#34; title=&#34;Voxist&#34; alt=&#34;Voxist&#34;&gt; &lt;br&gt;&lt;sub&gt;&lt;b&gt;Voxist&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h4&gt;🥉 Bronze sponsors ($100+ per month)&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://app.momento.fm/&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/98929576?s=200&amp;amp;v=4&#34; align=&#34;center&#34; width=&#34;50&#34; title=&#34;Voxist&#34; alt=&#34;Voxist&#34;&gt; &lt;br&gt;&lt;sub&gt;&lt;b&gt;Momento&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://stand.fm/&#34;&gt; &lt;img src=&#34;https://drive.google.com/uc?id=1PwVUjqiqIQqw18sL_0n9Cx0VQ5zisoUW&#34; align=&#34;center&#34; height=&#34;50&#34; title=&#34;stand.fm&#34; alt=&#34;stand.fm&#34;&gt; &lt;br&gt;&lt;sub&gt;&lt;b&gt;stand.fm&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h4&gt;✨ Contributing sponsors ($25+ per month)&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/102089139?s=30&amp;amp;v=4&#34; align=&#34;center&#34; width=&#34;30&#34; title=&#34;Through the Word&#34; alt=&#34;Through the Word&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/11860029?s=30&amp;amp;v=4&#34; align=&#34;center&#34; width=&#34;30&#34; title=&#34;Podverse&#34; alt=&#34;Podverse&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/2523678?s=30&amp;amp;v=4&#34; align=&#34;center&#34; width=&#34;30&#34; title=&#34;Elliot Dickison&#34; alt=&#34;Elliot Dickison&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/1085976?s=30&amp;amp;v=4&#34; align=&#34;center&#34; width=&#34;30&#34; title=&#34;Brad Flood&#34; alt=&#34;Brad Flood&#34;&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/271885?s=30&amp;amp;v=4&#34; align=&#34;center&#34; width=&#34;30&#34; title=&#34;puckey&#34; alt=&#34;puckey&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Lightweight&lt;/strong&gt; - Optimized to use the least amount of resources according to your needs&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Feels native&lt;/strong&gt; - As everything is built together, it follows the same design principles as real music apps do&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-platform&lt;/strong&gt; - Supports Android, iOS and Windows&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Media Controls support&lt;/strong&gt; - Provides events for controlling the app from a Bluetooth device, the lock screen, a notification, a smartwatch or even a car&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Local or network, files or streams&lt;/strong&gt; - It doesn&#39;t matter where the media belongs, we&#39;ve got you covered&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Adaptive bitrate streaming support&lt;/strong&gt; - Support for DASH, HLS or SmoothStreaming&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Caching support&lt;/strong&gt; - Cache media files to play them again without an internet connection&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Background support&lt;/strong&gt; - Keep playing audio even after the app is in background&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fully Customizable&lt;/strong&gt; - Even the notification icons are customizable!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Supports React Hooks 🎣&lt;/strong&gt; - Includes React Hooks for common use-cases so you don&#39;t have to write them&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why another music module?&lt;/h2&gt; &#xA;&lt;p&gt;After trying to team up modules like &lt;code&gt;react-native-sound&lt;/code&gt;, &lt;code&gt;react-native-music-controls&lt;/code&gt; and &lt;code&gt;react-native-google-cast&lt;/code&gt;, I&#39;ve noticed, that their structure and the way should be tied together can cause a lot of problems (mainly on Android). Those can heavily affect the app stability and user experience.&lt;/p&gt; &#xA;&lt;p&gt;All audio modules (like &lt;code&gt;react-native-sound&lt;/code&gt;) don&#39;t play in a separated service on Android, which should &lt;strong&gt;only&lt;/strong&gt; be used for simple audio tracks in the foreground (such as sound effects, voice messages, etc.)&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;react-native-music-controls&lt;/code&gt; is meant for apps using those audio modules, but it has a few problems: the audio isn&#39;t tied directly to the controls. It can be pretty useful for casting (such as Chromecast).&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;react-native-google-cast&lt;/code&gt; works pretty well and also supports custom receivers, but it has fewer player controls, it&#39;s harder to integrate and still uses the Cast SDK v2.&lt;/p&gt; &#xA;&lt;h2&gt;Example Setup&lt;/h2&gt; &#xA;&lt;p&gt;First please take a look at the &lt;a href=&#34;https://react-native-track-player.js.org/docs/basics/getting-started/&#34;&gt;Getting Started&lt;/a&gt; guide, but a basic example of how to play a track:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import TrackPlayer from &#39;react-native-track-player&#39;;&#xA;&#xA;const start = async () =&amp;gt; {&#xA;    // Set up the player&#xA;    await TrackPlayer.setupPlayer();&#xA;&#xA;    // Add a track to the queue&#xA;    await TrackPlayer.add({&#xA;        id: &#39;trackId&#39;,&#xA;        url: require(&#39;track.mp3&#39;),&#xA;        title: &#39;Track Title&#39;,&#xA;        artist: &#39;Track Artist&#39;,&#xA;        artwork: require(&#39;track.png&#39;)&#xA;    });&#xA;&#xA;    // Start playing it&#xA;    await TrackPlayer.play();&#xA;};&#xA;start();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Core Team ✨&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/dcvz&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2475932?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Chavez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/mpivchev&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6960329?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Milen Pivchev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jspizziri&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1452066?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jacob Spizziri&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Special Thanks ✨&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Guichaguri&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1813032?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Guilherme Chaguri&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/curiousdustin&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1706540?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dustin Bahr&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;You want this package to be awesome and we want to deliver on that. As you know already you can just &lt;a href=&#34;https://raw.githubusercontent.com/doublesymmetry/react-native-track-player/main/#file-a-ticket&#34;&gt;File A Ticket&lt;/a&gt;, but thats not actually the best way for you to get what you need (read on to see why). The best way is for you to &lt;a href=&#34;https://raw.githubusercontent.com/doublesymmetry/react-native-track-player/main/#be-a-champion&#34;&gt;Be A Champion&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/doublesymmetry/react-native-track-player/main/#where-do-you-start&#34;&gt;dive into the code&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;File A Ticket&lt;/h4&gt; &#xA;&lt;p&gt;The reality is that filing a ticket isn&#39;t always enough. &lt;strong&gt;This is probably only going to work if your issue aligns with both the interests &lt;em&gt;and&lt;/em&gt; the resources available&lt;/strong&gt; to the core team. Here are the things that align with our &lt;em&gt;interests&lt;/em&gt; in order of priority.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fixing &lt;strong&gt;&lt;em&gt;widespread, common, and critical Bugs&lt;/em&gt;&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Fixing &lt;strong&gt;&lt;em&gt;uncommon but necessary Bugs&lt;/em&gt;&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Introducing new &lt;strong&gt;&lt;em&gt;Features that have broad value&lt;/em&gt;&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Now keep in mind available resources. Long story short, the thing you care about needs to be cared about by either a lot of other people, or by us.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;BUT!&lt;/strong&gt; There&#39;s another and, arguably even &lt;strong&gt;&lt;em&gt;better way&lt;/em&gt;&lt;/strong&gt; that helps you get what you need faster: &lt;a href=&#34;https://raw.githubusercontent.com/doublesymmetry/react-native-track-player/main/#be-a-champion&#34;&gt;Be A Champion&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Be A Champion&lt;/h4&gt; &#xA;&lt;p&gt;Being a &lt;em&gt;champion&lt;/em&gt; makes it easy for us to help you. Which is what we all want! So how can you be a champion? &lt;a href=&#34;https://github.com/sponsors/DoubleSymmetry&#34;&gt;Sponsor the Project&lt;/a&gt; or &lt;em&gt;be willing to write some code&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If &lt;em&gt;you&#39;re willing&lt;/em&gt;&lt;/strong&gt; to write some code &lt;strong&gt;&lt;em&gt;we&#39;re willing&lt;/em&gt;&lt;/strong&gt; to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open a design discussion, give feedback, and approve something that works.&lt;/li&gt; &#xA; &lt;li&gt;Provide guidance in the implementation journey.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;So, in a nutshell, let us know you&#39;re willing to do the work and ask for a little guidance, and watch the things you care about get done faster than anyone else. The best help will be given to those who are willing to help themselves.&lt;/p&gt; &#xA;&lt;h6&gt;You don&#39;t have experience you say? It&#39;s OK!&lt;/h6&gt; &#xA;&lt;p&gt;You may be thinking that you can&#39;t help because you know nothing about native iOS or Android or maybe even React code. But we&#39;re willing to help guide you.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re up for that task then we can help you understand native code and how React Native works.&lt;/p&gt; &#xA;&lt;p&gt;The only way you go from &lt;em&gt;not-knowing&lt;/em&gt; to &lt;em&gt;knowing&lt;/em&gt; is by learning. Learning isn&#39;t something you should be ashamed of nor is it something you should be scared of.&lt;/p&gt; &#xA;&lt;h4&gt;Where Do You Start?&lt;/h4&gt; &#xA;&lt;p&gt;Our goal is to make it as easy as possible for you to make changes to the library. All the documentation on how to work on the library and it&#39;s dependencies is &lt;a href=&#34;https://raw.githubusercontent.com/doublesymmetry/react-native-track-player/main/example/README.md&#34;&gt;located in this Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Release&lt;/h2&gt; &#xA;&lt;p&gt;The standard release command for this project is &lt;a href=&#34;https://classic.yarnpkg.com/lang/en/docs/cli/version/&#34;&gt;&lt;code&gt;yarn version&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn version [--major | --minor | --patch | --new-version &amp;lt;version&amp;gt;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Ex.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yarn version --new-version 1.2.17&#xA;yarn version --patch // 1.2.17 -&amp;gt; 1.2.18&#xA;yarn version --minor // 1.2.18 -&amp;gt; 1.3.0&#xA;yarn version --major // 2.0.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Generate/update the Changelog&lt;/li&gt; &#xA; &lt;li&gt;Bump the package version&lt;/li&gt; &#xA; &lt;li&gt;Tag &amp;amp; pushing the commit&lt;/li&gt; &#xA; &lt;li&gt;Build &amp;amp; publish the package&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;You can find us as part of the &lt;a href=&#34;https://discordapp.com/invite/ya2XDCR&#34;&gt;React Native Track Player&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;# introductions&lt;/code&gt; - Come greet the newest members of this group!&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;# support&lt;/code&gt; - Ask members of the community to trouble shoot issues with your app and make recommendations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;# app-anouncements&lt;/code&gt; - Tell the community about the app you made with this project!&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;# releases&lt;/code&gt; - Stay updated about the latest releases and dev efforts on the project.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>CodingGay/BlackDex</title>
    <updated>2022-09-23T01:31:55Z</updated>
    <id>tag:github.com,2022-09-23:/CodingGay/BlackDex</id>
    <link href="https://github.com/CodingGay/BlackDex" rel="alternate"></link>
    <summary type="html">&lt;p&gt;BlackDex is an Android unpack(dexdump) tool, it supports Android 5.0~12 and need not rely to any environment. BlackDex can run on any Android mobile phone or emulator, you can unpack APK File in several seconds.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BlackDex&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CodingGay/BlackDex/main/README_EN.md&#34;&gt;English Version&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/language-java-brightgreen.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;BlackDex是一个运行在Android手机上的脱壳工具，支持5.0～12，无需依赖任何环境任何手机都可以使用，包括模拟器。只需几秒，即可对已安装包括未安装的APK进行脱壳。&lt;/p&gt; &#xA;&lt;h2&gt;运行原理&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.niunaijun.top/index.php/tag/BlackDex/&#34;&gt;博客地址&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;项目声明&lt;/h2&gt; &#xA;&lt;h3&gt;本项目并不针对任何加固，在遇到检测环境等均不处理，仅供安全领域分析用途。项目免费开源仅供学习用途、请勿用于非法用途。否则后果自负！&lt;/h3&gt; &#xA;&lt;h3&gt;Black系列交流群：390562046（QQ）&lt;/h3&gt; &#xA;&lt;h2&gt;编译说明&lt;/h2&gt; &#xA;&lt;p&gt;运行前请请Make Project一次&lt;/p&gt; &#xA;&lt;p&gt;运行前请请Make Project一次&lt;/p&gt; &#xA;&lt;p&gt;运行前请请Make Project一次&lt;/p&gt; &#xA;&lt;h2&gt;脱壳说明&lt;/h2&gt; &#xA;&lt;p&gt;本项目针对一（落地加载）、二（内存加载）、三（指令抽取）代壳，摆脱对以往脱壳环境的困扰，几乎支持5.0以上的任何系统。并且拥有 &lt;strong&gt;快速&lt;/strong&gt;、&lt;strong&gt;方便&lt;/strong&gt;、&lt;strong&gt;成功率高&lt;/strong&gt; 的优点。一般只需要几秒钟即可完成对已安装包括未安装应用脱壳。&lt;strong&gt;未安装应用&lt;/strong&gt;脱壳时间主要花费在复制文件IO消耗上，由应用大小决定速度。已安装应用一般在数秒内即可完成脱壳。&lt;/p&gt; &#xA;&lt;h3&gt;脱壳文件说明&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;hook_xxxx.dex &lt;strong&gt;hook系统api脱壳的dex，深度脱壳不修复&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;cookie_xxxx.dex &lt;strong&gt;利用dexFile cookie脱壳的dex，深度脱壳时会修复此dex&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;脱壳原理&lt;/h2&gt; &#xA;&lt;p&gt;通过DexFile cookie进行脱壳，理论兼容art开始的所有版本。可能少数因设备而异，绝大部分是支持的。资源有限无法大量测试，遇到问题请提issues.&lt;/p&gt; &#xA;&lt;h2&gt;深度脱壳&lt;/h2&gt; &#xA;&lt;p&gt;深度脱壳模式下会自主修复被抽取的方法指令，将指向其他内存块的指令回填至DEX内，解决nop问题，但是不会确保一定会有用，例如：指令需要主动调用才解密等则无法回填或者说是无效回填。深度脱壳并不包含任何解密、主动调用等操作。本功能仍然在测试阶段，&lt;strong&gt;可能会出现以下情况，请悉知，愿世上再无nop。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;脱壳时间会大幅度上升，预计几分钟都十几分钟不等&lt;/li&gt; &#xA; &lt;li&gt;脱壳期间有可能会出现应用闪退（遇到反检测等）&lt;/li&gt; &#xA; &lt;li&gt;会增加脱壳失败几率&lt;/li&gt; &#xA; &lt;li&gt;不一定能够100%还原&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;部分抽取壳脱壳前后对比&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CodingGay/BlackDex/main/nop_diff.jpg&#34; alt=&#34;xx&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;环境要求&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;一台普通手机&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;Xposed&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;Frida&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;Magisk&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;Root&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;定制系统&lt;/del&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;架构特别说明&lt;/h2&gt; &#xA;&lt;p&gt;本项目区分32位与64位，目前是2个不同的app，如在Demo已安装列表内无法找到需要开启的app说明不支持，请使用另一个版本。&lt;/p&gt; &#xA;&lt;p&gt;BlackDex下载：&lt;a href=&#34;https://github.com/CodingGay/BlackDex/releases&#34;&gt;https://github.com/CodingGay/BlackDex/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;演示&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CodingGay/BlackDex/main/demonstration.gif&#34; alt=&#34;xx&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;感谢&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/asLody/VirtualApp&#34;&gt;VirtualApp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/didi/VirtualAPK&#34;&gt;VirtualAPK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tiann/FreeReflection&#34;&gt;FreeReflection&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/canyie/Dreamland&#34;&gt;Dreamland&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lkchan724/lkchandexfile&#34;&gt;lkchandexfile&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/iqiyi/xHook&#34;&gt;xhook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jmpews/Dobby&#34;&gt;Dobby&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;pre&gt;&lt;code&gt;Copyright 2021 Milk&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
</feed>