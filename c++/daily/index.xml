<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-10T01:33:08Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>CrowCpp/Crow</title>
    <updated>2023-03-10T01:33:08Z</updated>
    <id>tag:github.com,2023-03-10:/CrowCpp/Crow</id>
    <link href="https://github.com/CrowCpp/Crow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Fast and Easy to use microframework for the web.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CrowCpp/Crow/master/docs/assets/crowlogo_dual_color.svg?sanitize=true&#34; width=&#34;600&#34;&gt;&lt;/p&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;A Fast and Easy to use microframework for the web.&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://cloud.drone.io/CrowCpp/Crow&#34;&gt;&lt;img src=&#34;https://cloud.drone.io/api/badges/CrowCpp/Crow/status.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/CrowCpp/Crow?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/CrowCpp/Crow/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crowcpp.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-Documentation-informational&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/crowfork/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://img.shields.io/gitter/room/crowfork/community?color=8DDEC5&amp;amp;logo=gitter&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/crow&#34;&gt;&lt;img alt=&#34;Open Collective&#34; src=&#34;https://img.shields.io/opencollective/all/crow?label=Support%20Crow&amp;amp;logo=opencollective&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;Crow is a C++ framework for creating HTTP or Websocket web services. It uses routing similar to Python&#39;s Flask which makes it easy to use. It is also extremely fast, beating multiple existing C++ frameworks as well as non C++ frameworks.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Easy Routing (similar to flask).&lt;/li&gt; &#xA; &lt;li&gt;Type-safe Handlers.&lt;/li&gt; &#xA; &lt;li&gt;Blazingly fast (see &lt;a href=&#34;https://github.com/ipkn/crow-benchmark&#34;&gt;this benchmark&lt;/a&gt; and &lt;a href=&#34;https://github.com/guteksan/REST-CPP-benchmark&#34;&gt;this benchmark&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Built in JSON support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mustache.github.io/&#34;&gt;Mustache&lt;/a&gt; based templating library (&lt;code&gt;crow::mustache&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Header only library (single header file available).&lt;/li&gt; &#xA; &lt;li&gt;Middleware support for extensions.&lt;/li&gt; &#xA; &lt;li&gt;HTTP/1.1 and Websocket support.&lt;/li&gt; &#xA; &lt;li&gt;Multi-part request and response support.&lt;/li&gt; &#xA; &lt;li&gt;Uses modern C++ (11/14)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Still in development&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CrowCpp/Crow/issues/258&#34;&gt;Async support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crowcpp/crow/issues/8&#34;&gt;HTTP/2 support&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Available &lt;a href=&#34;https://crowcpp.org&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;If you are using Crow v0.3, then you have to put &lt;code&gt;#define CROW_MAIN&lt;/code&gt; at the top of one and only one source file.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h4&gt;Hello World&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &#34;crow.h&#34;&#xA;&#xA;int main()&#xA;{&#xA;    crow::SimpleApp app;&#xA;&#xA;    CROW_ROUTE(app, &#34;/&#34;)([](){&#xA;        return &#34;Hello world&#34;;&#xA;    });&#xA;&#xA;    app.port(18080).multithreaded().run();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;JSON Response&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;CROW_ROUTE(app, &#34;/json&#34;)&#xA;([]{&#xA;    crow::json::wvalue x({{&#34;message&#34;, &#34;Hello, World!&#34;}});&#xA;    x[&#34;message2&#34;] = &#34;Hello, World.. Again!&#34;;&#xA;    return x;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Arguments&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;CROW_ROUTE(app,&#34;/hello/&amp;lt;int&amp;gt;&#34;)&#xA;([](int count){&#xA;    if (count &amp;gt; 100)&#xA;        return crow::response(400);&#xA;    std::ostringstream os;&#xA;    os &amp;lt;&amp;lt; count &amp;lt;&amp;lt; &#34; bottles of beer!&#34;;&#xA;    return crow::response(os.str());&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Handler arguments type check at compile time&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// Compile error with message &#34;Handler type is mismatched with URL paramters&#34;&#xA;CROW_ROUTE(app,&#34;/another/&amp;lt;int&amp;gt;&#34;)&#xA;([](int a, int b){&#xA;    return crow::response(500);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Handling JSON Requests&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;CROW_ROUTE(app, &#34;/add_json&#34;)&#xA;.methods(&#34;POST&#34;_method)&#xA;([](const crow::request&amp;amp; req){&#xA;    auto x = crow::json::load(req.body);&#xA;    if (!x)&#xA;        return crow::response(crow::status::BAD_REQUEST); // same as crow::response(400)&#xA;    int sum = x[&#34;a&#34;].i()+x[&#34;b&#34;].i();&#xA;    std::ostringstream os;&#xA;    os &amp;lt;&amp;lt; sum;&#xA;    return crow::response{os.str()};&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More examples can be found &lt;a href=&#34;https://github.com/crowcpp/crow/tree/master/examples&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Setting Up / Building&lt;/h2&gt; &#xA;&lt;p&gt;Available &lt;a href=&#34;https://crowcpp.org/master/getting_started/setup&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;CrowCpp/Crow is a project based on ipkn/crow. Neither CrowCpp, it&#39;s members, or this project have been associated with, or endorsed or supported by ipkn (Jaeseung Ha) in any way. We do use ipkn/crow&#39;s source code under the BSD-3 clause license and sometimes refer to the public comments available on the github repository. But we do not in any way claim to be associated with or in contact with ipkn (Jaeseung Ha) regarding CrowCpp or CrowCpp/Crow&lt;/p&gt; &#xA;&lt;h2&gt;Attributions&lt;/h2&gt; &#xA;&lt;p&gt;Crow has incorporated the following libraries into its source.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http-parser (used for converting http strings to crow::request objects)&#xA;&#xA;https://github.com/nodejs/http-parser&#xA;&#xA;http_parser.c is based on src/http/ngx_http_parse.c from NGINX copyright&#xA;Igor Sysoev.&#xA;&#xA;Additional changes are licensed under the same terms as NGINX and&#xA;copyright Joyent, Inc. and other Node contributors. All rights reserved.&#xA;&#xA;Permission is hereby granted, free of charge, to any person obtaining a copy&#xA;of this software and associated documentation files (the &#34;Software&#34;), to&#xA;deal in the Software without restriction, including without limitation the&#xA;rights to use, copy, modify, merge, publish, distribute, sublicense, and/or&#xA;sell copies of the Software, and to permit persons to whom the Software is&#xA;furnished to do so, subject to the following conditions:&#xA;&#xA;The above copyright notice and this permission notice shall be included in&#xA;all copies or substantial portions of the Software.&#xA;&#xA;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#xA;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&#xA;FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&#xA;AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&#xA;LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING&#xA;FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS&#xA;IN THE SOFTWARE. &#xA;&#xA;---------------------------------------------------------------------------&#xA;&#xA;&#xA;qs_parse (used for reading query string parameters)&#xA;&#xA;https://github.com/bartgrantham/qs_parse&#xA;&#xA;Copyright (c) 2010 Bart Grantham&#xA;Permission is hereby granted, free of charge, to any person obtaining a copy&#xA;of this software and associated documentation files (the &#34;Software&#34;), to deal&#xA;in the Software without restriction, including without limitation the rights&#xA;to use, copy, modify, merge, publish, distribute, sublicense, and/or sell&#xA;copies of the Software, and to permit persons to whom the Software is&#xA;furnished to do so, subject to the following conditions:&#xA;The above copyright notice and this permission notice shall be included in&#xA;all copies or substantial portions of the Software.&#xA;&#xA;---------------------------------------------------------------------------&#xA;&#xA;&#xA;TinySHA1 (used during the websocket handshake, not for security)&#xA;&#xA;https://github.com/mohaps/TinySHA1&#xA;&#xA;TinySHA1 - a header only implementation of the SHA1 algorithm. Based on the&#xA;implementation in boost::uuid::details&#xA;&#xA;Copyright (c) 2012-22 SAURAV MOHAPATRA mohaps@gmail.com&#xA;Permission to use, copy, modify, and distribute this software for any purpose&#xA;with or without fee is hereby granted, provided that the above copyright &#xA;notice and this permission notice appear in all copies.&#xA;THE SOFTWARE IS PROVIDED &#34;AS IS&#34; AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH&#xA;REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY&#xA;AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, &#xA;INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM &#xA;LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR&#xA;OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR&#xA;PERFORMANCE OF THIS SOFTWARE.&#xA;&#xA;---------------------------------------------------------------------------&#xA;&#xA;&#xA;Catch2 (used only in unit tests, not part of the actual framework)&#xA;&#xA;https://github.com/catchorg/Catch2&#xA;&#xA;Boost Software License - Version 1.0 - August 17th, 2003&#xA;&#xA;Permission is hereby granted, free of charge, to any person or organization&#xA;obtaining a copy of the software and accompanying documentation covered by&#xA;this license (the &#34;Software&#34;) to use, reproduce, display, distribute,&#xA;execute, and transmit the Software, and to prepare derivative works of the&#xA;Software, and to permit third-parties to whom the Software is furnished to&#xA;do so, all subject to the following:&#xA;&#xA;The copyright notices in the Software and this entire statement, including&#xA;the above license grant, this restriction and the following disclaimer,&#xA;must be included in all copies of the Software, in whole or in part, and&#xA;all derivative works of the Software, unless such copies or derivative&#xA;works are solely in the form of machine-executable object code generated by&#xA;a source language processor.&#xA;&#xA;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#xA;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&#xA;FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT&#xA;SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE&#xA;FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,&#xA;ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER&#xA;DEALINGS IN THE SOFTWARE.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>IfcOpenShell/IfcOpenShell</title>
    <updated>2023-03-10T01:33:08Z</updated>
    <id>tag:github.com,2023-03-10:/IfcOpenShell/IfcOpenShell</id>
    <link href="https://github.com/IfcOpenShell/IfcOpenShell" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open source IFC library and geometry engine&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;IfcOpenShell&lt;/h1&gt; &#xA;&lt;p&gt;IfcOpenShell is an open source (&lt;a href=&#34;https://github.com/IfcOpenShell/IfcOpenShell/tree/master/COPYING.LESSER&#34; title=&#34;LGPL-3.0-or-later&#34;&gt;LGPL&lt;/a&gt;) software library for working with Industry Foundation Classes (&lt;a href=&#34;https://technical.buildingsmart.org/standards/ifc/&#34; title=&#34;IFC&#34;&gt;IFC&lt;/a&gt;). Complete parsing support is provided for &lt;a href=&#34;https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/&#34; title=&#34;IFC2x3 TC1&#34;&gt;IFC2x3 TC1&lt;/a&gt;, &lt;a href=&#34;https://standards.buildingsmart.org/IFC/RELEASE/IFC4/ADD2_TC1/HTML/&#34; title=&#34;IFC4 Add2 TC1&#34;&gt;IFC4 Add2 TC1&lt;/a&gt;, IFC4x1, IFC4x3, and IFC4x3. Extensive geometric support is implemented for the IFC releases &lt;a href=&#34;https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/&#34; title=&#34;IFC2x3 TC1&#34;&gt;IFC2x3 TC1&lt;/a&gt; and &lt;a href=&#34;https://standards.buildingsmart.org/IFC/RELEASE/IFC4/ADD2_TC1/HTML/&#34; title=&#34;IFC4 Add2 TC1&#34;&gt;IFC4 Add2 TC1&lt;/a&gt;. Extending with support for arbitrary IFC schemas is possible at compile-time when using C++ and at run-time when using Python.&lt;/p&gt; &#xA;&lt;p&gt;In addition to a C++ and Python API, IfcOpenShell comes with an ecosystem of tools, notably including IfcConvert (an application to convert IFC models to other formats), the BlenderBIM Add-on (an add-on to Blender providing a graphical IFC authoring platform), and many other libraries, CLI apps, and more. Support is also provided for auxiliary standards such as BCF and IDS.&lt;/p&gt; &#xA;&lt;p&gt;For more information, see:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://ifcopenshell.org&#34;&gt;IfcOpenShell Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://blenderbim.org/docs-python&#34;&gt;IfcOpenShell Documentation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blenderbim.org/docs-python/ifcopenshell/installation.html&#34;&gt;IfcOpenShell C++ Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blenderbim.org/docs-python/ifcopenshell-python/installation.html&#34;&gt;IfcOpenShell Python Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blenderbim.org/docs-python/ifcopenshell-python/hello_world.html&#34;&gt;IfcOpenShell Python Hello World Tutorial&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blenderbim.org&#34;&gt;BlenderBIM Add-on Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://blenderbim.org/docs&#34;&gt;BlenderBIM Add-on Documentation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blenderbim.org/docs/users/installation.html&#34;&gt;Add-on Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://blenderbim.org/docs/users/exploring_an_ifc_model.html&#34;&gt;Exploring an IFC model&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Service&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Anaconda Daily Build&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://anaconda.org/ifcopenshell/ifcopenshell&#34;&gt;&lt;img src=&#34;https://img.shields.io/conda/vn/ifcopenshell/ifcopenshell&#34; alt=&#34;Anaconda-Server Badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Anaconda v0.7.0 Stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ifcopenshell&#34;&gt;&lt;img src=&#34;https://img.shields.io/conda/vn/conda-forge/ifcopenshell&#34; alt=&#34;Anaconda-Server Badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PyPi Daily Build&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pypi.org/project/ifcopenshell/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/v/ifcopenshell&#34; alt=&#34;PyPi Badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ArchLinux AUR Package Stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://aur.archlinux.org/packages/ifcopenshell&#34;&gt;&lt;img src=&#34;https://img.shields.io/aur/version/ifcopenshell&#34; alt=&#34;AUR Badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ArchLinux AUR Package git&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://aur.archlinux.org/packages/ifcopenshell-git&#34;&gt;&lt;img src=&#34;https://img.shields.io/aur/version/ifcopenshell-git&#34; alt=&#34;AUR Badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BlenderBIM Add-on Chocolatey (under moderation)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://community.chocolatey.org/packages/blenderbim-nightly/&#34;&gt;&lt;img src=&#34;https://img.shields.io/chocolatey/v/blenderbim-nightly&#34; alt=&#34;Chocolatey Badge&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sponsor development on OpenCollective&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://opencollective.com/opensourcebim/&#34;&gt;&lt;img src=&#34;https://opencollective.com/opensourcebim/tiers/badge.svg?sanitize=true&#34; alt=&#34;Financial Contributors&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Docker hub&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hub.docker.com/r/aecgeeks/ifcopenshell&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/aecgeeks/ifcopenshell&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;p&gt;Those marked with an asterisk are part of IfcOpenShell.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;License&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;bcf&lt;/td&gt; &#xA;   &lt;td&gt;Library to read and write BCF-XML and query OpenCDE BCF-API modules&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;blenderbim&lt;/td&gt; &#xA;   &lt;td&gt;Add-on to Blender providing a graphical native IFC authoring platform&lt;/td&gt; &#xA;   &lt;td&gt;GPL-3.0-or-later&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;bsdd&lt;/td&gt; &#xA;   &lt;td&gt;Library to query the bSDD API&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifc2ca&lt;/td&gt; &#xA;   &lt;td&gt;Utility to convert IFC structural analysis models to Code_Aster&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifc4d&lt;/td&gt; &#xA;   &lt;td&gt;Convert to and from IFC and project management software&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifc5d&lt;/td&gt; &#xA;   &lt;td&gt;Report and optimise cost information from IFC&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifcbimtester&lt;/td&gt; &#xA;   &lt;td&gt;Wrapper for Gherkin based unit testing for IFC models&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifcblender&lt;/td&gt; &#xA;   &lt;td&gt;Historic Blender IFC import add-on&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifccityjson&lt;/td&gt; &#xA;   &lt;td&gt;Convert CityJSON to IFC&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifcclash&lt;/td&gt; &#xA;   &lt;td&gt;Clash detection library and CLI app&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifccobie&lt;/td&gt; &#xA;   &lt;td&gt;Extract IFC data for COBie handover requirements&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifcconvert&lt;/td&gt; &#xA;   &lt;td&gt;CLI app to convert IFC to many other formats&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifccsv&lt;/td&gt; &#xA;   &lt;td&gt;Library and CLI app to export and import schedules from IFC&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifcdiff&lt;/td&gt; &#xA;   &lt;td&gt;Compare changes between IFC models&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifcfm&lt;/td&gt; &#xA;   &lt;td&gt;Extract IFC data for FM handover requirements&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifcgeom&lt;/td&gt; &#xA;   &lt;td&gt;Internal library for IfcOpenShell&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifcgeom_schema_agnostic&lt;/td&gt; &#xA;   &lt;td&gt;Internal library for IfcOpenShell&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifcgeomserver&lt;/td&gt; &#xA;   &lt;td&gt;Internal library for IfcOpenShell&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifcjni&lt;/td&gt; &#xA;   &lt;td&gt;Internal library for IfcOpenShell&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifcmax&lt;/td&gt; &#xA;   &lt;td&gt;Historic extension for IFC support in 3DS Max&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifcopenshell-python&lt;/td&gt; &#xA;   &lt;td&gt;Python library for IFC manipulation&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifcparse&lt;/td&gt; &#xA;   &lt;td&gt;Internal library for IfcOpenShell&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifcpatch&lt;/td&gt; &#xA;   &lt;td&gt;Utility to run pre-packaged scripts to manipulate IFCs&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifcsverchok&lt;/td&gt; &#xA;   &lt;td&gt;Blender Add-on for visual node programming with IFC&lt;/td&gt; &#xA;   &lt;td&gt;GPL-3.0-or-later&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifctester&lt;/td&gt; &#xA;   &lt;td&gt;Library, CLI and webapp for IDS model auditing&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ifcwrap&lt;/td&gt; &#xA;   &lt;td&gt;Internal library for IfcOpenShell&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;qtviewer&lt;/td&gt; &#xA;   &lt;td&gt;Internal library for IfcOpenShell&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;serializers&lt;/td&gt; &#xA;   &lt;td&gt;Internal library for IfcOpenShell&lt;/td&gt; &#xA;   &lt;td&gt;LGPL-3.0-or-later*&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
</feed>