<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C++ Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-11T01:23:03Z</updated>
  <subtitle>Daily Trending of C++ in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>THUDM/AgentBench</title>
    <updated>2023-08-11T01:23:03Z</updated>
    <id>tag:github.com,2023-08-11:/THUDM/AgentBench</id>
    <link href="https://github.com/THUDM/AgentBench" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Comprehensive Benchmark to Evaluate LLMs as Agents&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/assets/cover.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://llmbench.ai&#34; target=&#34;_blank&#34;&gt;üåê Website&lt;/a&gt; | &lt;a href=&#34;https://twitter.com/thukeg&#34; target=&#34;_blank&#34;&gt;üê¶ Twitter&lt;/a&gt; | &lt;a href=&#34;mailto:agentbench@googlegroups.com&#34;&gt;‚úâÔ∏è Google Group&lt;/a&gt; | &lt;a href=&#34;https://arxiv.org/abs/2308.03688&#34; target=&#34;_blank&#34;&gt;üìÉ Paper &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; üëã Join our &lt;a href=&#34;https://join.slack.com/t/agentbenchcol-huw1944/shared_invite/zt-20ixabcuv-31cFLBAkqGQxQkJqrWVEVg&#34; target=&#34;_blank&#34;&gt;Slack&lt;/a&gt; for &lt;i&gt;Q &amp;amp; A&lt;/i&gt; or &lt;i&gt;&lt;b&gt;collaboration&lt;/b&gt; on AgentBench v2.0&lt;/i&gt;! &lt;/p&gt; &#xA;&lt;h1&gt;AgentBench: Evaluating LLMs as Agents&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/THUDM/AgentBench/assets/129033897/656eed6e-d9d9-4d07-b568-f43f5a451f04&#34;&gt;https://github.com/THUDM/AgentBench/assets/129033897/656eed6e-d9d9-4d07-b568-f43f5a451f04&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;AgentBench&lt;/strong&gt; is the first benchmark designed to evaluate &lt;strong&gt;LLM-as-Agent&lt;/strong&gt; across a diverse spectrum of different environments. It encompasses 8 distinct environments to provide a more comprehensive evaluation of the LLMs&#39; ability to operate as autonomous agents in various scenarios. These environments include 5 freshly created domains, namely&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Operating System (OS)&lt;/li&gt; &#xA; &lt;li&gt;Database (DB)&lt;/li&gt; &#xA; &lt;li&gt;Knowledge Graph (KG)&lt;/li&gt; &#xA; &lt;li&gt;Digital Card Game (DCG)&lt;/li&gt; &#xA; &lt;li&gt;Lateral Thinking Puzzles (LTP)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;as well as 3 recompiled from published datasets:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;House-Holding (HH) (&lt;a href=&#34;https://github.com/alfworld/alfworld&#34;&gt;ALFWorld&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Web Shopping (WS) (&lt;a href=&#34;https://github.com/princeton-nlp/webshop&#34;&gt;WebShop&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Web Browsing (WB) (&lt;a href=&#34;https://github.com/OSU-NLP-Group/Mind2Web&#34;&gt;Mind2Web&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/assets/agentbench.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/#dataset-summary&#34;&gt;Dataset Summary&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/#leaderboard&#34;&gt;Leaderboard&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/#quick-start&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/#tutorial&#34;&gt;Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/#citation&#34;&gt;Citation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Dataset Summary&lt;/h2&gt; &#xA;&lt;p&gt;We offer three splits for each dataset: Dev, Test, and Extend. Dev is fully public, while Test and Extend are private. In designing AgentBench, we balance evaluation thoroughness and efficiency. Though the number of problems in Dev and Test may seem small at 289 and 1,141, the multi-turn interaction requires an LLMs to generate around 4k and 13k times, making the testing time-consuming.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/assets/statistics.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Leaderboard&lt;/h2&gt; &#xA;&lt;p&gt;Here is the scores on test set (standard) results of AgentBench.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/assets/leaderboard.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;While LLMs begin to manifest their proficiency in LLM-as-Agent, gaps between models and the distance towards practical usability are significant.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/assets/intro.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Xlsx-format leaderboard data is available &lt;a href=&#34;https://github.com/THUDM/AgentBench/raw/main/assets/agentbench_leaderboard-230808.xlsx&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;To quickly understand how the framework works, you can follow the instructions below to run a simple evaluation.&lt;/p&gt; &#xA;&lt;h3&gt;Step 1. Clone this repo and run the following command to install the requirements:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install --upgrade pip&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 2. Verify that you have successfully installed the requirements by running the following command:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python eval.py \&#xA;    --task configs/tasks/example.yaml \&#xA;    --agent configs/agents/do_nothing.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 3. Run Example Assignment&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;HINT: Example Assigment is composed of &lt;code&gt;gpt-3.5-turbo&lt;/code&gt; and &lt;code&gt;ExampleTask&lt;/code&gt; defined in &lt;a href=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/src/tasks/example_task.py&#34;&gt;&lt;code&gt;src/tasks/example_task.py&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You need to fill your &lt;a href=&#34;https://platform.openai.com/account/api-keys&#34;&gt;OPENAI KEY&lt;/a&gt; in &lt;code&gt;configs/assignments/example.yaml&lt;/code&gt; first.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;Authorization: Bearer &amp;lt;%% PUT-YOUR-OPENAI-KEY-HERE %%&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python create_assignment.py \&#xA;    --assignment configs/assignments/example.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And you can see the target assignment bash script from the output like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;[System] Run the following command to start evaluation:&#xA;    bash .assignments/&amp;lt;TIMESTAMP&amp;gt;.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, run the assignment bash script that displayed in the output to start evaluation. After that, you can check your output in the &lt;code&gt;outputs&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h2&gt;Tutorial&lt;/h2&gt; &#xA;&lt;p&gt;For more detailed instructions and advanced usage, please refer to our &lt;a href=&#34;https://raw.githubusercontent.com/THUDM/AgentBench/main/docs/tutorial.md&#34;&gt;tutorial&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{liu2023agentbench,&#xA;  title   = {AgentBench: Evaluating LLMs as Agents},&#xA;  author  = {Xiao Liu and Hao Yu and Hanchen Zhang and Yifan Xu and Xuanyu Lei and Hanyu Lai and Yu Gu and Hangliang Ding and Kaiwen Men and Kejuan Yang and Shudan Zhang and Xiang Deng and Aohan Zeng and Zhengxiao Du and Chenhui Zhang and Sheng Shen and Tianjun Zhang and Yu Su and Huan Sun and Minlie Huang and Yuxiao Dong and Jie Tang},&#xA;  year    = {2023},&#xA;  journal = {arXiv preprint arXiv: 2308.03688}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>sonic-net/sonic-swss</title>
    <updated>2023-08-11T01:23:03Z</updated>
    <id>tag:github.com,2023-08-11:/sonic-net/sonic-swss</id>
    <link href="https://github.com/sonic-net/sonic-swss" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SONiC Switch State Service (SwSS)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;em&gt;static analysis:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://lgtm.com/projects/g/sonic-net/sonic-swss/alerts/&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/alerts/g/sonic-net/sonic-swss.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Total alerts&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/sonic-net/sonic-swss/context:python&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/grade/python/g/sonic-net/sonic-swss.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Language grade: Python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/sonic-net/sonic-swss/context:cpp&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/grade/cpp/g/sonic-net/sonic-swss.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Language grade: C/C++&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;sonic-swss builds:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/mssonic/build/_build/latest?definitionId=15&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/mssonic/build/_apis/build/status/Azure.sonic-swss?branchName=master&amp;amp;label=master&#34; alt=&#34;master build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/mssonic/build/_build/latest?definitionId=15&amp;amp;branchName=202205&#34;&gt;&lt;img src=&#34;https://dev.azure.com/mssonic/build/_apis/build/status/Azure.sonic-swss?branchName=202205&amp;amp;label=202205&#34; alt=&#34;202205 build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/mssonic/build/_build/latest?definitionId=15&amp;amp;branchName=202111&#34;&gt;&lt;img src=&#34;https://dev.azure.com/mssonic/build/_apis/build/status/Azure.sonic-swss?branchName=202111&amp;amp;label=202111&#34; alt=&#34;202111 build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/mssonic/build/_build/latest?definitionId=15&amp;amp;branchName=202106&#34;&gt;&lt;img src=&#34;https://dev.azure.com/mssonic/build/_apis/build/status/Azure.sonic-swss?branchName=202106&amp;amp;label=202106&#34; alt=&#34;202106 build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/mssonic/build/_build/latest?definitionId=15&amp;amp;branchName=202012&#34;&gt;&lt;img src=&#34;https://dev.azure.com/mssonic/build/_apis/build/status/Azure.sonic-swss?branchName=202012&amp;amp;label=202012&#34; alt=&#34;202012 build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/mssonic/build/_build/latest?definitionId=15&amp;amp;branchName=201911&#34;&gt;&lt;img src=&#34;https://dev.azure.com/mssonic/build/_apis/build/status/Azure.sonic-swss?branchName=201911&amp;amp;label=201911&#34; alt=&#34;201911 build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;SONiC - SWitch State Service - SWSS&lt;/h1&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;The SWitch State Service (SWSS) is a collection of software that provides a database interface for communication with and state representation of network applications and network switch hardware.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;p&gt;Before installing, add key and package sources:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-key adv --keyserver apt-mo.trafficmanager.net --recv-keys 417A0893&#xA;echo &#39;deb http://apt-mo.trafficmanager.net/repos/sonic/ trusty main&#39; | sudo tee -a /etc/apt/sources.list.d/sonic.list&#xA;sudo apt-get update&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install redis-server -t trusty&#xA;sudo apt-get install libhiredis0.13 -t trusty&#xA;sudo apt-get install libzmq5 libzmq3-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install building dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install libtool&#xA;sudo apt-get install autoconf automake&#xA;sudo apt-get install dh-exec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are a few different ways you can install SONiC-SWSS.&lt;/p&gt; &#xA;&lt;h4&gt;Install from Debian Repo&lt;/h4&gt; &#xA;&lt;p&gt;For your convenience, you can install prepared packages on Debian Jessie:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install swss&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Install from Source&lt;/h4&gt; &#xA;&lt;p&gt;Checkout the source: &lt;code&gt;git clone https://github.com/sonic-net/sonic-swss.git&lt;/code&gt; and install it yourself.&lt;/p&gt; &#xA;&lt;p&gt;Get SAI header files into /usr/include/sai. Put the SAI header files that you use to compile libsairedis into /usr/include/sai&lt;/p&gt; &#xA;&lt;p&gt;Install prerequisite packages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install libswsscommon libswsscommon-dev libsairedis libsairedis-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can compile and install from source using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./autogen.sh&#xA;./configure&#xA;make &amp;amp;&amp;amp; sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also build a debian package using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./autogen.sh&#xA;fakeroot debian/rules binary&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Need Help?&lt;/h2&gt; &#xA;&lt;p&gt;For general questions, setup help, or troubleshooting:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://groups.google.com/g/sonicproject&#34;&gt;sonicproject on Google Groups&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For bug reports or feature requests, please open an Issue.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution guide&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/sonic-net/SONiC/wiki/Becoming-a-contributor&#34;&gt;contributors guide&lt;/a&gt; for information about how to contribute.&lt;/p&gt; &#xA;&lt;h3&gt;GitHub Workflow&lt;/h3&gt; &#xA;&lt;p&gt;We&#39;re following basic GitHub Flow. If you have no idea what we&#39;re talking about, check out &lt;a href=&#34;https://guides.github.com/introduction/flow/&#34;&gt;GitHub&#39;s official guide&lt;/a&gt;. Note that merge is only performed by the repository maintainer.&lt;/p&gt; &#xA;&lt;p&gt;Guide for performing commits:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Isolate each commit to one component/bugfix/issue/feature&lt;/li&gt; &#xA; &lt;li&gt;Use a standard commit message format:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;pre&gt;&lt;code&gt;[component/folder touched]: Description intent of your changes&#xA;&#xA;[List of changes]&#xA;&#xA;Signed-off-by: Your Name your@email.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;pre&gt;&lt;code&gt;swss-common: Stabilize the ConsumerTable&#xA;&#xA;* Fixing autoreconf&#xA;* Fixing unit-tests by adding checkers and initialize the DB before start&#xA;* Adding the ability to select from multiple channels&#xA;* Health-Monitor - The idea of the patch is that if something went wrong with the notification channel,&#xA;  we will have the option to know about it (Query the LLEN table length).&#xA;&#xA;  Signed-off-by: user@dev.null&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Each developer should fork this repository and &lt;a href=&#34;https://help.github.com/articles/adding-collaborators-to-a-personal-repository&#34;&gt;add the team as a Contributor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Push your changes to your private fork and do &#34;pull-request&#34; to this repository&lt;/li&gt; &#xA; &lt;li&gt;Use a pull request to do code review&lt;/li&gt; &#xA; &lt;li&gt;Use issues to keep track of what is going on&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>