<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-01T02:00:58Z</updated>
  <subtitle>Monthly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>guanzhi/GmSSL</title>
    <updated>2024-04-01T02:00:58Z</updated>
    <id>tag:github.com,2024-04-01:/guanzhi/GmSSL</id>
    <link href="https://github.com/guanzhi/GmSSL" rel="alternate"></link>
    <summary type="html">&lt;p&gt;支持国密SM2/SM3/SM4/SM9/SSL的密码工具箱&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GmSSL&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/guanzhi/GmSSL/actions/workflows/cmake.yml&#34;&gt;&lt;img src=&#34;https://github.com/guanzhi/GmSSL/workflows/CMake/badge.svg?sanitize=true&#34; alt=&#34;CMake&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/guanzhi/GmSSL/actions/workflows/android-ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/guanzhi/GmSSL/actions/workflows/android-ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CMake-Android&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/guanzhi/GmSSL/actions/workflows/ios.yml&#34;&gt;&lt;img src=&#34;https://github.com/guanzhi/GmSSL/actions/workflows/ios.yml/badge.svg?sanitize=true&#34; alt=&#34;CMake-iOS&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;GmSSL是由北京大学自主开发的国产商用密码开源库，实现了对国密算法、标准和安全通信协议的全面功能覆盖，支持包括移动端在内的主流操作系统和处理器，支持密码钥匙、密码卡等典型国产密码硬件，提供功能丰富的命令行工具及多种编译语言编程接口。&lt;/p&gt; &#xA;&lt;h2&gt;主要特性&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;超轻量：GmSSL 3 大幅度降低了内存需求和二进制代码体积，不依赖动态内存，可以用于无操作系统的低功耗嵌入式环境(MCU、SOC等)，开发者也可以更容易地将国密算法和SSL协议嵌入到现有的项目中。&lt;/li&gt; &#xA; &lt;li&gt;更合规：GmSSL 3 可以配置为仅包含国密算法和国密协议(TLCP协议)，依赖GmSSL 的密码应用更容易满足密码产品型号检测的要求，避免由于混杂非国密算法、不安全算法等导致的安全问题和合规问题。&lt;/li&gt; &#xA; &lt;li&gt;更安全：TLS 1.3在安全性和通信延迟上相对之前的TLS协议有巨大的提升，GmSSL 3 支持TLS 1.3协议和RFC 8998的国密套件。GmSSL 3 默认支持密钥的加密保护，提升了密码算法的抗侧信道攻击能力。&lt;/li&gt; &#xA; &lt;li&gt;跨平台：GmSSL 3 更容易跨平台，构建系统不再依赖Perl，默认的CMake构建系统可以容易地和Visual Studio、Android NDK等默认编译工具配合使用，开发者也可以手工编写Makefile在特殊环境中编译、剪裁。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;下载&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GmSSL的主分支版本为 &lt;a href=&#34;https://github.com/guanzhi/GmSSL/releases/tag/v3.1.1&#34;&gt;GmSSL-3.1.1&lt;/a&gt;，主要增加跨平台特性，特别是对Windows/Visual Studio的支持，Windows、Android、iOS平台的开发者需要使用该版本。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;编译与安装&lt;/h2&gt; &#xA;&lt;p&gt;GmSSL 3 采用了cmake构建系统。下载源代码后将其解压缩，进入源码目录，执行：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir build&#xA;cd build&#xA;cmake ..&#xA;make&#xA;make test&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;在&lt;code&gt;make install&lt;/code&gt;完成后，GmSSL会在默认安装目录中安装&lt;code&gt;gmssl&lt;/code&gt;命令行工具，在头文件目录中创建&lt;code&gt;gmssl&lt;/code&gt;目录，并且在库目录中安装&lt;code&gt;libgmssl.a&lt;/code&gt;、&lt;code&gt;libgmssl.so&lt;/code&gt;等库文件。&lt;/p&gt; &#xA;&lt;h3&gt;Visual Studio环境编译&lt;/h3&gt; &#xA;&lt;p&gt;在Visual Studio命令提示符下执行：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir build&#xA;cd build&#xA;cmake .. -G &#34;NMake Makefiles&#34;&#xA;nmake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;主要功能&lt;/h2&gt; &#xA;&lt;h3&gt;密码算法&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;分组密码：SM4 (CBC/CTR/GCM), AES (CBC/CTR/GCM)&lt;/li&gt; &#xA; &lt;li&gt;序列密码：ZUC/ZUC-256, ChaCha20, RC4&lt;/li&gt; &#xA; &lt;li&gt;哈希函数: SM3, SHA-224/256/384/512, SHA-1, MD5&lt;/li&gt; &#xA; &lt;li&gt;公钥密码：SM2加密/签名, SM9加密/签名&lt;/li&gt; &#xA; &lt;li&gt;MAC算法：HMAC, GHASH&lt;/li&gt; &#xA; &lt;li&gt;密钥导出函数：PBKDF2、HKDF&lt;/li&gt; &#xA; &lt;li&gt;随机数生成器：Intel RDRAND, HASH_DRBG (NIST.SP.800-90A)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;证书和数字信封&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;数字证书：X.509证书, CRL证书注销列表, CSR (PKCS #10) 证书签名请求&lt;/li&gt; &#xA; &lt;li&gt;私钥加密：基于SM4/SM3口令加密的PEM格式私钥 (PKCS #8)&lt;/li&gt; &#xA; &lt;li&gt;数字信封：SM2密码消息 (GM/T 0010-2012)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;SSL协议&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TLCP 1.1，支持密码套&lt;code&gt;TLS_ECC_SM4_CBC_SM3 {0xE0,0x13}&lt;/code&gt; (GB/T 38636-2020、GM/T 0024-2014)&lt;/li&gt; &#xA; &lt;li&gt;TLS 1.2，支持密码套件&lt;code&gt;TLS_ECDHE_SM4_CBC_SM3 {0xE0,0x11}&lt;/code&gt; (GB/T 38636-2020、GM/T 0024-2014)&lt;/li&gt; &#xA; &lt;li&gt;TLS 1.3，支持密码套件&lt;code&gt;TLS_SM4_GCM_SM3 {0x00,0xC6}&lt;/code&gt; (RFC 8998)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;多语言接口&lt;/h3&gt; &#xA;&lt;p&gt;GmSSL通过子项目提供多种多种编程语言绑定&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GmSSL/GmSSL-Java&#34;&gt;GmSSL-Java&lt;/a&gt; 以JNI方式实现的Java语言绑定&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GmSSL/GmSSL-PHP&#34;&gt;GmSSL-PHP&lt;/a&gt; 以PHP扩展方式实现的PHP语言绑定&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GmSSL/GmSSL-Go&#34;&gt;GmSSL-Go&lt;/a&gt; 以CGO方式实现的Go语言绑定&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GmSSL/GmSSL-Python&#34;&gt;GmSSL-Python&lt;/a&gt; 以ctypes方式实现的Python语言绑定&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/guanzhi/GmSSL-JS&#34;&gt;GmSSL-JS&lt;/a&gt; 纯JavaScript实现的国密算法库&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;典型应用&lt;/h2&gt; &#xA;&lt;h4&gt;Nginx-with-GmSSL3.0&lt;/h4&gt; &#xA;&lt;p&gt;GmSSL支持Nginx的适配，并提供了Docker实现，具体参见&lt;a href=&#34;https://github.com/zhaoxiaomeng/Nginx-with-GmSSLv3&#34;&gt;Nginx-with-GmSSL3.0&lt;/a&gt; 项目。&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add Windows Visual Studio support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add Windows Cygwin support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add iOS support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Add Android support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Version 3.1.0 release&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add GCC specific optimization&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add X86_64 assembly implementation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add GPU implementation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add performance benchmark tool&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Add GCM cipher suites&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Release official open interfaces&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Version 3.2.0 release&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;开发者们&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/guanzhi/GmSSL/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=guanzhi/GmSSL&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/guanzhi/GmSSL&#34;&gt;&lt;img src=&#34;https://starchart.cc/guanzhi/GmSSL.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apache/age</title>
    <updated>2024-04-01T02:00:58Z</updated>
    <id>tag:github.com,2024-04-01:/apache/age</id>
    <link href="https://github.com/apache/age" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Graph database optimized for fast analysis and real-time data processing. It is provided as an extension to PostgreSQL.&lt;/p&gt;&lt;hr&gt;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://age.apache.org/age-manual/master/_static/logo.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; &lt;a href=&#34;https://age.apache.org/age-manual/master/_static/logo.png&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://age.apache.org/age-manual/master/_static/logo.png&#34; height=&#34;30% alt=&#34; Apache AGE style=&#34;margin: 0 0 -3px 0&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://age.apache.org/age-manual/master/_static/logo.png&#34; target=&#34;_blank&#34;&gt; &lt;/a&gt; is a leading multi-model graph database &lt;/h3&gt;  &#xA;&lt;h3 align=&#34;center&#34;&gt;Graph Processing &amp;amp; Analytics for Relational Databases&lt;/h3&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/apache/age/raw/master/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/apache/age&#34;&gt; &lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/apache/age/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Release-v1.5.0-FFA500?labelColor=gray&amp;amp;style=flat&amp;amp;link=https://github.com/apache/age/releases&#34;&gt; &lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://www.postgresql.org/docs/16/index.html&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Version-Postgresql 16-00008B?labelColor=gray&amp;amp;style=flat&amp;amp;link=https://www.postgresql.org/docs/16/index.html&#34;&gt; &lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/apache/age/issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/apache/age&#34;&gt; &lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/apache/age/network/members&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/apache/age&#34;&gt; &lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/apache/age/stargazers&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/apache/age&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;img height=&#34;30&#34; src=&#34;https://raw.githubusercontent.com/apache/age/master/img/AGE.png&#34;&gt;&amp;nbsp;&amp;nbsp;What is Apache AGE?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://age.apache.org/#&#34;&gt;Apache AGE&lt;/a&gt; is an extension for PostgreSQL that enables users to leverage a graph database on top of the existing relational databases. AGE is an acronym for A Graph Extension and is inspired by Bitnine&#39;s AgensGraph, a multi-model database fork of PostgreSQL. The basic principle of the project is to create a single storage that handles both the relational and graph data model so that the users can use the standard ANSI SQL along with openCypher, one of the most popular graph query languages today. &lt;br&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/apache/age/master/img/age-01.png&#34; width=&#34;80%&#34; height=&#34;80%&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Since AGE is based on the powerful PostgreSQL RDBMS, it is robust and fully featured. AGE is optimized for handling complex connected graph data. It provides plenty of robust database features essential to the database environment, including ACID transactions, multi-version concurrency control (MVCC), stored procedure, triggers, constraints, sophisticated monitoring, and a flexible data model (JSON). Users with a relational database background who require graph data analytics can use this extension with minimal effort because they can use existing data without going through migration.&lt;/p&gt; &#xA;&lt;p&gt;There is a strong need for cohesive, easy-to-implement multi-model databases. As an extension of PostgreSQL, AGE supports all the functionalities and features of PostgreSQL while also offering a graph model to boot.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;img height=&#34;30&#34; src=&#34;https://raw.githubusercontent.com/apache/age/master/img/tick.svg?sanitize=true&#34;&gt;&amp;nbsp;&amp;nbsp;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Apache AGE is :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Powerful&lt;/strong&gt;: adds graph database support to the already popular PostgreSQL database: PostgreSQL is used by organizations including Apple, Spotify, and NASA.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Flexible&lt;/strong&gt;: allows you to perform openCypher queries, which makes complex queries much easier to write. It also enables querying multiple graphs at the same time.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Intelligent&lt;/strong&gt;: allows you to perform graph queries that are the basis for many next-level web services such as fraud detection, master data management, product recommendations, identity and relationship management, experience personalization, knowledge management, and more.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;img height=&#34;30&#34; src=&#34;https://raw.githubusercontent.com/apache/age/master/img/features.svg?sanitize=true&#34;&gt;&amp;nbsp;&amp;nbsp;Features&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/apache/age/master/img/age-03.png&#34; width=&#34;80%&#34; height=&#34;80%&#34;&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cypher Query&lt;/strong&gt;: supports graph query language&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hybrid Querying&lt;/strong&gt;: enables SQL and/or Cypher&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Querying&lt;/strong&gt;: enables multiple graphs&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hierarchical&lt;/strong&gt;: graph label organization&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Property Indexes&lt;/strong&gt;: on both vertices(nodes) and edges&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Full PostgreSQL&lt;/strong&gt;: supports PG features&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;img height=&#34;30&#34; src=&#34;https://raw.githubusercontent.com/apache/age/master/img/documentation.svg?sanitize=true&#34;&gt;&amp;nbsp;&amp;nbsp;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Refer to our latest &lt;a href=&#34;https://age.apache.org/age-manual/master/index.html&#34;&gt;Apache AGE documentation&lt;/a&gt; to learn about installation, features, built-in functions, and Cypher queries.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;img height=&#34;30&#34; src=&#34;https://raw.githubusercontent.com/apache/age/master/img/installation.svg?sanitize=true&#34;&gt;&amp;nbsp;&amp;nbsp;Pre-Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the following essential libraries according to each OS. Building AGE from the source depends on the following Linux libraries (Ubuntu package names shown below):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;CentOS&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum install gcc glibc glib-common readline readline-devel zlib zlib-devel flex bison&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fedora&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dnf install gcc glibc bison flex readline readline-devel zlib zlib-devel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ubuntu&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install build-essential libreadline-dev zlib1g-dev flex bison&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;img height=&#34;30&#34; src=&#34;https://raw.githubusercontent.com/apache/age/master/img/installation.svg?sanitize=true&#34;&gt;&amp;nbsp;&amp;nbsp;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Apache AGE is intended to be simple to install and run. It can be installed with Docker and other traditional ways.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a&gt;&lt;img width=&#34;20&#34; src=&#34;https://raw.githubusercontent.com/apache/age/master/img/pg.svg?sanitize=true&#34;&gt;&lt;/a&gt; &amp;nbsp;Install PostgreSQL &lt;/h4&gt; &#xA;&lt;p&gt;You will need to install an AGE compatible version of Postgres&lt;a&gt;, for now AGE supports Postgres 11, 12, 13, 14, 15 &amp;amp; 16. Supporting the latest versions is on AGE roadmap.&lt;/a&gt;&lt;/p&gt;&#xA;&lt;a&gt; &lt;h4&gt; &amp;nbsp;Installation via Package Manager &lt;/h4&gt; &lt;/a&gt;&#xA;&lt;p&gt;&lt;a&gt;You can use a &lt;/a&gt;&lt;a href=&#34;https://www.postgresql.org/download/&#34;&gt;package management &lt;/a&gt; that your OS provides to download AGE.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install postgresql&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt; &amp;nbsp;Installation From Source Code &lt;/h4&gt; &#xA;&lt;p&gt;You can &lt;a href=&#34;https://www.postgresql.org/ftp/source/&#34;&gt; download the Postgres &lt;/a&gt; source code and install your own instance of Postgres. You can read instructions on how to install from source code for different versions on the &lt;a href=&#34;https://www.postgresql.org/docs/16/installation.html&#34;&gt;official Postgres Website.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;img width=&#34;20&#34; src=&#34;https://raw.githubusercontent.com/apache/age/master/img/tux.svg?sanitize=true&#34;&gt;&lt;img width=&#34;20&#34; src=&#34;https://raw.githubusercontent.com/apache/age/master/img/apple.svg?sanitize=true&#34;&gt; &amp;nbsp;Install AGE on Linux and MacOS &lt;/h4&gt; &#xA;&lt;p&gt;Clone the &lt;a href=&#34;https://github.com/apache/age&#34;&gt;github repository&lt;/a&gt; or download the &lt;a href=&#34;https://github.com/apache/age/releases&#34;&gt;download an official release. &lt;/a&gt; Run the pg_config utility and check the version of PostgreSQL. Currently, only PostgreSQL versions 11, 12, 13, 14, 15 &amp;amp; 16 are supported. If you have any other version of Postgres, you will need to install PostgreSQL version 11, 12, 13, 14, 15, or 16. &lt;br&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pg_config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the following command in the source code directory of Apache AGE to build and install the extension.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the path to your Postgres installation is not in the PATH variable, add the path in the arguments:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make PG_CONFIG=/path/to/postgres/bin/pg_config install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;img width=&#34;30&#34; src=&#34;https://raw.githubusercontent.com/apache/age/master/img/docker.svg?sanitize=true&#34;&gt; &amp;nbsp;Run using Docker &lt;/h4&gt; &#xA;&lt;h5&gt; Get the docker image &lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull apache/age&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt; Create AGE docker container &lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run \&#xA;    --name age  \&#xA;    -p 5455:5432 \&#xA;    -e POSTGRES_USER=postgresUser \&#xA;    -e POSTGRES_PASSWORD=postgresPW \&#xA;    -e POSTGRES_DB=postgresDB \&#xA;    -d \&#xA;    apache/age&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt; Enter PostgreSQL&#39;s psql: &lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker exec -it age psql -d postgresDB -U postgresUser&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;img height=&#34;20&#34; src=&#34;https://raw.githubusercontent.com/apache/age/master/img/contents.svg?sanitize=true&#34;&gt;&amp;nbsp;&amp;nbsp;Post Installation&lt;/h2&gt; &#xA;&lt;p&gt;For every connection of AGE you start, you will need to load the AGE extension.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;CREATE EXTENSION age;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;LOAD &#39;age&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SET search_path = ag_catalog, &#34;$user&#34;, public;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;img height=&#34;20&#34; src=&#34;https://raw.githubusercontent.com/apache/age/master/img/contents.svg?sanitize=true&#34;&gt;&amp;nbsp;&amp;nbsp;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;To create a graph, use the create_graph function located in the ag_catalog namespace.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SELECT create_graph(&#39;graph_name&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To create a single vertex, use the CREATE clause.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SELECT * &#xA;FROM cypher(&#39;graph_name&#39;, $$&#xA;    CREATE (n)&#xA;$$) as (v agtype);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To create a single vertex with the label, use the CREATE clause.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SELECT * &#xA;FROM cypher(&#39;graph_name&#39;, $$&#xA;    CREATE (:label)&#xA;$$) as (v agtype);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To create a single vertex with label and properties, use the CREATE clause.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SELECT * &#xA;FROM cypher(&#39;graph_name&#39;, $$&#xA;    CREATE (:label {property:value})&#xA;$$) as (v agtype);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To query the graph, you can use the MATCH clause.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SELECT * &#xA;FROM cypher(&#39;graph_name&#39;, $$&#xA;    MATCH (v)&#xA;    RETURN v&#xA;$$) as (v agtype);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use the following to create an edge, for example, between two nodes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SELECT * &#xA;FROM cypher(&#39;graph_name&#39;, $$&#xA;    MATCH (a:label), (b:label)&#xA;    WHERE a.property = &#39;Node A&#39; AND b.property = &#39;Node B&#39;&#xA;    CREATE (a)-[e:RELTYPE]-&amp;gt;(b)&#xA;    RETURN e&#xA;$$) as (e agtype);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To create an edge and set properties.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SELECT * &#xA;FROM cypher(&#39;graph_name&#39;, $$&#xA;    MATCH (a:label), (b:label)&#xA;    WHERE a.property = &#39;Node A&#39; AND b.property = &#39;Node B&#39;&#xA;    CREATE (a)-[e:RELTYPE {property:a.property + &#39;&amp;lt;-&amp;gt;&#39; + b.property}]-&amp;gt;(b)&#xA;    RETURN e&#xA;$$) as (e agtype);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SELECT * &#xA;FROM cypher(&#39;graph_name&#39;, $$&#xA;    MATCH (a:Person), (b:Person)&#xA;    WHERE a.name = &#39;Node A&#39; AND b.name = &#39;Node B&#39;&#xA;    CREATE (a)-[e:RELTYPE {name:a.name + &#39;&amp;lt;-&amp;gt;&#39; + b.name}]-&amp;gt;(b)&#xA;    RETURN e&#xA;$$) as (e agtype);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;img height=&#34;20&#34; src=&#34;https://raw.githubusercontent.com/apache/age/master/img/gettingstarted.svg?sanitize=true&#34;&gt;&amp;nbsp;&amp;nbsp;Language Specific Drivers&lt;/h2&gt; &#xA;&lt;p&gt;Starting with Apache AGE is very simple. You can easily select your platform and incorporate the relevant SDK into your code. &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/apache/age/master/img/age-02.png&#34; width=&#34;80%&#34; height=&#34;80%&#34;&gt; &lt;/p&gt; &#xA;&lt;h4&gt;Built-in&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/age/master/drivers/golang&#34;&gt;Go driver&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/age/master/drivers/jdbc&#34;&gt;Java driver&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/age/master/drivers/nodejs&#34;&gt;NodeJs driver&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/age/master/drivers/python&#34;&gt;Python driver&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Community-driven Driver&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Dzordzu/rust-apache-age.git&#34;&gt;Apache AGE Rust Driver&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;img height=&#34;20&#34; src=&#34;https://raw.githubusercontent.com/apache/age/master/img/contributing.svg?sanitize=true&#34;&gt;&amp;nbsp;&amp;nbsp;Community&lt;/h2&gt; &#xA;&lt;p&gt;Join the AGE community for help, questions, discussions, and contributions.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check our &lt;a href=&#34;https://age.apache.org/&#34;&gt;website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ask your AGE-related questions and answers on &lt;a href=&#34;https://stackoverflow.com/questions/tagged/apache-age&#34;&gt;Stack overflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Discuss about AGE on &lt;a href=&#34;https://github.com/apache/age/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Share your feedback on &lt;a href=&#34;https://github.com/apache/age/issues&#34;&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Follow us on &lt;a href=&#34;https://twitter.com/apache_age&#34;&gt;X&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Subscribe to our developer mailing list by sending an email to &lt;a href=&#34;mailto:dev-subscribe@age.apache.org&#34;&gt;dev-subscribe@age.apache.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Subscribe to our user mailing list by sending an email to &lt;a href=&#34;mailto:users-subscribe@age.apache.org&#34;&gt;users-subscribe@age.apache.org&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;img height=&#34;20&#34; src=&#34;https://raw.githubusercontent.com/apache/age/master/img/visualization.svg?sanitize=true&#34;&gt;&amp;nbsp;&amp;nbsp;Graph Visualization Tool for AGE&lt;/h2&gt; &#xA;&lt;p&gt;Apache AGE Viewer is a user interface for Apache AGE that provides visualization and exploration of data. This web visualization tool allows users to enter complex graph queries and explore the results in graph and table forms. Apache AGE Viewer is enhanced to proceed with extensive graph data and discover insights through various graph algorithms. Apache AGE Viewer will become a graph data administration and development platform for Apache AGE to support multiple relational databases: &lt;a href=&#34;https://github.com/apache/age-viewer&#34;&gt;https://github.com/apache/age-viewer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This is a visualization tool.&lt;/strong&gt; After installing AGE Extension, you may use this tool to get access to the visualization features.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/age/master/img/agce.gif&#34; alt=&#34;Viewer gdb, and graph&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;img height=&#34;20&#34; src=&#34;https://raw.githubusercontent.com/apache/age/master/img/videos.png&#34;&gt;&amp;nbsp;&amp;nbsp;Video Links&lt;/h2&gt; &#xA;&lt;p&gt;You can also get help from these videos.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install on &lt;a href=&#34;https://www.youtube.com/watch?v=ddk8VX8Hm-I&amp;amp;list=PLGp3huJbWNDjgwP7s99Q-9_w1vxpjNHXG&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install on &lt;a href=&#34;https://www.youtube.com/watch?v=0-qMwpDh0CA&#34;&gt;MacOS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;img height=&#34;20&#34; src=&#34;https://raw.githubusercontent.com/apache/age/master/img/community.svg?sanitize=true&#34;&gt;&amp;nbsp;&amp;nbsp;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;You can improve ongoing efforts or initiate new ones by sending pull requests to &lt;a href=&#34;https://github.com/apache/age&#34;&gt;this repository&lt;/a&gt;. Also, you can learn from the code review process, how to merge pull requests, and from code style compliance to documentation by visiting the &lt;a href=&#34;https://age.apache.org/contribution/guide&#34;&gt;Apache AGE official site - Developer Guidelines&lt;/a&gt;. Send all your comments and inquiries to the user mailing list, &lt;a href=&#34;mailto:users@age.apache.org&#34;&gt;users@age.apache.org&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>libevent/libevent</title>
    <updated>2024-04-01T02:00:58Z</updated>
    <id>tag:github.com,2024-04-01:/libevent/libevent</id>
    <link href="https://github.com/libevent/libevent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Event notification library&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://libevent.org/libevent3.png&#34; alt=&#34;libevent logo&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/libevent/libevent/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/libevent/libevent/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/libevent/libevent&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/libevent/libevent/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/libevent/libevent?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/libevent/libevent.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/libevent/libevent&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://libevent.org/doc&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/doxygen-documentation-blue.svg?sanitize=true&#34; alt=&#34;doxygen&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://securityscorecards.dev/viewer/?uri=github.com/libevent/libevent&#34;&gt;&lt;img src=&#34;https://api.securityscorecards.dev/projects/github.com/libevent/libevent/badge&#34; alt=&#34;OpenSSF Scorecard&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;1. BUILDING AND INSTALLATION&lt;/h1&gt; &#xA;&lt;h2&gt;CMake (Unix)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mkdir build &amp;amp;&amp;amp; cd build&#xA;cmake ..     # Default to Unix Makefiles.&#xA;make&#xA;make verify  # (optional)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/libevent/libevent/master/Documentation/Building.md#building-on-unix-cmake&#34;&gt;Documentation/Building#Building on Unix using CMake&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;CMake (Windows)&lt;/h2&gt; &#xA;&lt;p&gt;Install CMake: &lt;a href=&#34;https://cmake.org/&#34;&gt;https://cmake.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;md build &amp;amp;&amp;amp; cd build&#xA;cmake -G &#34;Visual Studio 10&#34; ..   # Or use any generator you want to use. Run cmake --help for a list&#xA;cmake --build . --config Release # Or &#34;start libevent.sln&#34; and build with menu in Visual Studio.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/libevent/libevent/master/Documentation/Building.md#building-on-windows&#34;&gt;Documentation/Building#Building on Windows&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Package Managers&lt;/h2&gt; &#xA;&lt;p&gt;You can download and install libevent using the &lt;a href=&#34;https://github.com/Microsoft/vcpkg&#34;&gt;vcpkg&lt;/a&gt; dependency manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/Microsoft/vcpkg.git&#xA;cd vcpkg&#xA;./bootstrap-vcpkg.sh&#xA;./vcpkg integrate install&#xA;./vcpkg install libevent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The libevent port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please &lt;a href=&#34;https://github.com/Microsoft/vcpkg&#34;&gt;create an issue or pull request&lt;/a&gt; on the vcpkg repository.&lt;/p&gt; &#xA;&lt;h2&gt;Autoconf&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Note, since 2.2 it is deprecated&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./configure&#xA;make&#xA;make verify   # (optional)&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/libevent/libevent/master/Documentation/Building.md#autotools-deprecated&#34;&gt;Documentation/Building#Autoconf&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h1&gt;2. USEFUL LINKS:&lt;/h1&gt; &#xA;&lt;p&gt;For the latest released version of Libevent, see the official website at &lt;a href=&#34;https://libevent.org/&#34;&gt;https://libevent.org/&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;p&gt;There&#39;s a pretty good work-in-progress manual up at &lt;a href=&#34;http://www.wangafu.net/~nickm/libevent-book/&#34;&gt;http://www.wangafu.net/~nickm/libevent-book/&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;p&gt;For the latest development versions of Libevent, access our Git repository via&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ git clone https://github.com/libevent/libevent.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can browse the git repository online at:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/libevent/libevent&#34;&gt;https://github.com/libevent/libevent&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To report bugs, issues, or ask for new features:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Patches&lt;/strong&gt;: &lt;a href=&#34;https://github.com/libevent/libevent/pulls&#34;&gt;https://github.com/libevent/libevent/pulls&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;OK, those are not really &lt;em&gt;patches&lt;/em&gt;. You fork, modify, and hit the &#34;Create Pull Request&#34; button. You can still submit normal git patches via the mailing list.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Bugs, Features [RFC], and Issues&lt;/strong&gt;: &lt;a href=&#34;https://github.com/libevent/libevent/issues&#34;&gt;https://github.com/libevent/libevent/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Or you can do it via the mailing list.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;There&#39;s also a libevent-users mailing list for talking about Libevent use and development:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://archives.seul.org/libevent/users/&#34;&gt;https://archives.seul.org/libevent/users/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;3. ACKNOWLEDGMENTS&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/libevent/libevent/master/CONTRIBUTORS.md&#34;&gt;following people&lt;/a&gt; have helped with suggestions, ideas, code or fixing bugs.&lt;/p&gt;</summary>
  </entry>
</feed>