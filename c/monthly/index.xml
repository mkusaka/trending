<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-01T01:50:03Z</updated>
  <subtitle>Monthly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>UberGuidoZ/Flipper</title>
    <updated>2023-01-01T01:50:03Z</updated>
    <id>tag:github.com,2023-01-01:/UberGuidoZ/Flipper</id>
    <link href="https://github.com/UberGuidoZ/Flipper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Playground (and dump) of stuff I make or modify for the Flipper Zero&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Playground (and dump) of stuff I made, modified, researched, or found for the Flipper Zero.&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Looking for Infrared (IR) codes? Head over to &lt;a href=&#34;https://github.com/UberGuidoZ/Flipper-IRDB&#34;&gt;the IRDB&lt;/a&gt;! Just want to download part of any repo? &lt;a href=&#34;https://uberguidoz.github.io/DownGit/&#34;&gt;Try over here&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re new to github in general, there is a rough/basic guide over on the Official Discord &lt;a href=&#34;https://discord.com/channels/740930220399525928/986635575664726026/1042979075905556520&#34;&gt;in this thread&lt;/a&gt;. Link not available? &lt;a href=&#34;https://discord.com/invite/flipper&#34;&gt;Try this first&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Donation Information&lt;/h2&gt; &#xA;&lt;p&gt;Nothing is ever expected for the hoarding of digital files, creations I have made, or the people I may have helped.&lt;/p&gt; &#xA;&lt;h2&gt;Ordering from Lab401? &lt;a href=&#34;https://lab401.com/r?id=vsmgoc&#34;&gt;USE THIS LINK FOR 5% OFF!&lt;/a&gt; (Or code &lt;code&gt;UberGuidoZ&lt;/code&gt; at checkout.)&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;ve had so many asking for me to add this.&lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/57457139/183561666-4424a3cc-679b-4016-a368-24f7e7ad0a88.jpg&#34; alt=&#34;Flipper_Blush&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/57457139/183561692-381d37bd-264f-4c88-8877-e58d60d9be6e.jpg&#34; alt=&#34;Flipper_Love&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;BTC&lt;/strong&gt;: &lt;code&gt;3AWgaL3FxquakP15ZVDxr8q8xVTc5Q75dS&lt;/code&gt;&lt;br&gt; &lt;strong&gt;BCH&lt;/strong&gt;: &lt;code&gt;17nWCvf2YPMZ3F3H1seX8T149Z9E3BMKXk&lt;/code&gt;&lt;br&gt; &lt;strong&gt;ETH&lt;/strong&gt;: &lt;code&gt;0x0f0003fCB0bD9355Ad7B124c30b9F3D860D5E191&lt;/code&gt;&lt;br&gt; &lt;strong&gt;LTC&lt;/strong&gt;: &lt;code&gt;M8Ujk52U27bkm1ksiWUyteL8b3rRQVMke2&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;So, here it is. All donations of &lt;em&gt;any&lt;/em&gt; size are humbly appreciated.&lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/57457139/183561789-2e853ede-8ef7-41e8-a67c-716225177e5d.jpg&#34; alt=&#34;Flipper_Clap&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/57457139/183561787-e21bdc1e-b316-4e67-b327-5129503d0313.jpg&#34; alt=&#34;Flipper_OMG&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Donations will be used for hardware (and maybe caffeine) to further testing!&lt;br&gt; &lt;img src=&#34;https://cdn.discordapp.com/emojis/1000632669622767686.gif&#34; alt=&#34;UberGuidoZ&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>flipperdevices/flipperzero-firmware</title>
    <updated>2023-01-01T01:50:03Z</updated>
    <id>tag:github.com,2023-01-01:/flipperdevices/flipperzero-firmware</id>
    <link href="https://github.com/flipperdevices/flipperzero-firmware" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flipper Zero firmware source code&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;/.github/assets/dark_theme_banner.png&#34;&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;/.github/assets/light_theme_banner.png&#34;&gt; &#xA; &lt;img alt=&#34;A pixel art of a Dophin with text: Flipper Zero Official Repo&#34; src=&#34;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/.github/assets/light_theme_banner.png&#34;&gt; &#xA;&lt;/picture&gt; &#xA;&lt;h1&gt;Flipper Zero Firmware&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flipperzero.one&#34;&gt;Flipper Zero Official Website&lt;/a&gt;. A simple way to explain to your friends what the Flipper Zero can do&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://update.flipperzero.one&#34;&gt;Flipper Zero Firmware Update&lt;/a&gt;. Improvements for your dolphin: latest firmware releases, upgrade tools for PC and Mobile devices&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.flipperzero.one&#34;&gt;User Documentation&lt;/a&gt;. Learn more about your dolphin: specs, usage guides, and everything that you wanted to ask&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Our main goal is to build a healthy, sustainable community around the Flipper and be open to any new ideas and contributions. We also have some rules and taboos here, so please read this page and our &lt;a href=&#34;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/CODE_OF_CONDUCT.md&#34;&gt;Code Of Conduct&lt;/a&gt; carefully.&lt;/p&gt; &#xA;&lt;h2&gt;I need help&lt;/h2&gt; &#xA;&lt;p&gt;The best place to search for answers is our &lt;a href=&#34;https://docs.flipperzero.one&#34;&gt;User Documentation&lt;/a&gt;. If you can&#39;t find the answer there, you can check our &lt;a href=&#34;https://flipp.dev/discord&#34;&gt;Discord Server&lt;/a&gt; or our &lt;a href=&#34;https://forum.flipperzero.one/&#34;&gt;Forum&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;I want to report an issue&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;ve found an issue and want to report it, please check our &lt;a href=&#34;https://github.com/flipperdevices/flipperzero-firmware/issues&#34;&gt;Issues&lt;/a&gt; page. Make sure that the description contains information about the firmware version you&#39;re using, your platform, and the proper steps to reproduce the issue.&lt;/p&gt; &#xA;&lt;h2&gt;I want to contribute code&lt;/h2&gt; &#xA;&lt;p&gt;Before opening a PR, please confirm that your changes must be contained in the firmware. Many ideas can easily be implemented as external applications and published in the Flipper Application Catalog (coming soon). If you are unsure, you can ask on the &lt;a href=&#34;https://flipp.dev/discord&#34;&gt;Discord Server&lt;/a&gt; or the &lt;a href=&#34;https://github.com/flipperdevices/flipperzero-firmware/issues&#34;&gt;Issues&lt;/a&gt; page, and we&#39;ll help you find the right place for your code.&lt;/p&gt; &#xA;&lt;p&gt;Also, please read our &lt;a href=&#34;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/CONTRIBUTING.md&#34;&gt;Contribution Guide&lt;/a&gt;, and our &lt;a href=&#34;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/CODING_STYLE.md&#34;&gt;Coding Style&lt;/a&gt;, and ensure that your code is compatible with our project &lt;a href=&#34;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/LICENSE&#34;&gt;License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Finally, open a &lt;a href=&#34;https://github.com/flipperdevices/flipperzero-firmware/pulls&#34;&gt;Pull Request&lt;/a&gt; and ensure that CI/CD statuses are all green.&lt;/p&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;p&gt;The Flipper Zero Firmware is written in C, with some bits and pieces written in C++ and armv7m assembly languages. An intermediate level of C knowledge is recommended for comfortable programming. For Flipper applications, we support C, C++, and armv7m assembly languages.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Supported development platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows 10+ with PowerShell and Git (x86_64)&lt;/li&gt; &#xA; &lt;li&gt;macOS 12+ with Command Line tools (x86_64, arm64)&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu 20.04+ with build-essential and Git (x86_64)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Supported in-circuit debuggers (optional but highly recommended):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://shop.flipperzero.one/products/wifi-devboard&#34;&gt;Flipper Zero Wi-Fi Development Board&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ST-Link&lt;/li&gt; &#xA; &lt;li&gt;J-Link&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Everything else will be taken care of by Flipper Build System.&lt;/p&gt; &#xA;&lt;h2&gt;Cloning Source Code&lt;/h2&gt; &#xA;&lt;p&gt;Ensure that you have enough space and clone source code with Git:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone --recursive https://github.com/flipperdevices/flipperzero-firmware.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Build firmware using Flipper Build Tool:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./fbt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Flashing Firmware using an in-circuit debugger&lt;/h2&gt; &#xA;&lt;p&gt;Connect your in-circuit debugger to the Flipper and flash firmware using Flipper Build Tool:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./fbt flash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Flashing Firmware using USB&lt;/h2&gt; &#xA;&lt;p&gt;Ensure that your Flipper is working, connect it using a USB cable and flash firmware using Flipper Build Tool:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./fbt flash_usb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/documentation/fbt.md&#34;&gt;Flipper Build Tool&lt;/a&gt; - building, flashing, and debugging Flipper software&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/documentation/AppsOnSDCard.md&#34;&gt;Applications&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/documentation/AppManifests.md&#34;&gt;Application Manifest&lt;/a&gt; - developing, building, deploying, and debugging Flipper applications&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/documentation/KeyCombo.md&#34;&gt;Hardware combos and Un-bricking&lt;/a&gt; - recovering your Flipper from most nasty situations&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/documentation/file_formats&#34;&gt;Flipper File Formats&lt;/a&gt; - everything about how Flipper stores your data and how you can work with it&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/documentation/UniversalRemotes.md&#34;&gt;Universal Remotes&lt;/a&gt; - contributing your infrared remote to the universal remote database&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/documentation/RoadMap.md&#34;&gt;Firmware Roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;And much more in the &lt;a href=&#34;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/documentation&#34;&gt;Documentation&lt;/a&gt; folder&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Links&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Discord: &lt;a href=&#34;https://flipp.dev/discord&#34;&gt;flipp.dev/discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Website: &lt;a href=&#34;https://flipperzero.one&#34;&gt;flipperzero.one&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Forum: &lt;a href=&#34;https://forum.flipperzero.one/&#34;&gt;forum.flipperzero.one&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kickstarter: &lt;a href=&#34;https://www.kickstarter.com/projects/flipper-devices/flipper-zero-tamagochi-for-hackers&#34;&gt;kickstarter.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Project structure&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;applications&lt;/code&gt; - Applications and services used in firmware&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;assets&lt;/code&gt; - Assets used by applications and services&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;furi&lt;/code&gt; - Furi Core: OS-level primitives and helpers&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;debug&lt;/code&gt; - Debug tool: GDB-plugins, SVD-file and etc&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;documentation&lt;/code&gt; - Documentation generation system configs and input files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firmware&lt;/code&gt; - Firmware source code&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lib&lt;/code&gt; - Our and 3rd party libraries, drivers, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;scripts&lt;/code&gt; - Supplementary scripts and python libraries home&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also, pay attention to &lt;code&gt;ReadMe.md&lt;/code&gt; files inside those directories.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Immediate-Mode-UI/Nuklear</title>
    <updated>2023-01-01T01:50:03Z</updated>
    <id>tag:github.com,2023-01-01:/Immediate-Mode-UI/Nuklear</id>
    <link href="https://github.com/Immediate-Mode-UI/Nuklear" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A single-header ANSI C immediate mode cross-platform GUI library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nuklear&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Immediate-Mode-UI/Nuklear/actions&#34;&gt;&lt;img src=&#34;https://github.com/Immediate-Mode-UI/Nuklear/workflows/C%2FC++%20CI/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a minimal-state, immediate-mode graphical user interface toolkit written in ANSI C and licensed under public domain. It was designed as a simple embeddable user interface for application and does not have any dependencies, a default render backend or OS window/input handling but instead provides a highly modular, library-based approach, with simple input state for input and draw commands describing primitive shapes as output. So instead of providing a layered library that tries to abstract over a number of platform and render backends, it focuses only on the actual UI.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Immediate-mode graphical user interface toolkit&lt;/li&gt; &#xA; &lt;li&gt;Single-header library&lt;/li&gt; &#xA; &lt;li&gt;Written in C89 (ANSI C)&lt;/li&gt; &#xA; &lt;li&gt;Small codebase (~18kLOC)&lt;/li&gt; &#xA; &lt;li&gt;Focus on portability, efficiency and simplicity&lt;/li&gt; &#xA; &lt;li&gt;No dependencies (not even the standard library if not wanted)&lt;/li&gt; &#xA; &lt;li&gt;Fully skinnable and customizable&lt;/li&gt; &#xA; &lt;li&gt;Low memory footprint with total control of memory usage if needed / wanted&lt;/li&gt; &#xA; &lt;li&gt;UTF-8 support&lt;/li&gt; &#xA; &lt;li&gt;No global or hidden state&lt;/li&gt; &#xA; &lt;li&gt;Customizable library modules (you can compile and use only what you need)&lt;/li&gt; &#xA; &lt;li&gt;Optional font baker and vertex buffer output&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://Immediate-Mode-UI.github.io/Nuklear/doc/nuklear.html&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;This library is self-contained in one single header file and can be used either in header-only mode or in implementation mode. The header-only mode is used by default when included and allows including this header in other headers and does not contain the actual implementation.&lt;/p&gt; &#xA;&lt;p&gt;The implementation mode requires defining the preprocessor macro &lt;code&gt;NK_IMPLEMENTATION&lt;/code&gt; in &lt;em&gt;one&lt;/em&gt; .c/.cpp file before &lt;code&gt;#include&lt;/code&gt;ing this file, e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;#define NK_IMPLEMENTATION&#xA;#include &#34;nuklear.h&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;IMPORTANT: Every time you include &#34;nuklear.h&#34; you have to define the same optional flags. This is very important; not doing it either leads to compiler errors, or even worse, stack corruptions.&lt;/p&gt; &#xA;&lt;h2&gt;Gallery&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/8057201/11761525/ae06f0ca-a0c6-11e5-819d-5610b25f6ef4.gif&#34; alt=&#34;screenshot&#34;&gt; &lt;img src=&#34;https://cloud.githubusercontent.com/assets/8057201/13538240/acd96876-e249-11e5-9547-5ac0b19667a0.png&#34; alt=&#34;screen&#34;&gt; &lt;img src=&#34;https://cloud.githubusercontent.com/assets/8057201/13538243/b04acd4c-e249-11e5-8fd2-ad7744a5b446.png&#34; alt=&#34;screen2&#34;&gt; &lt;img src=&#34;https://cloud.githubusercontent.com/assets/8057201/9976995/e81ac04a-5ef7-11e5-872b-acd54fbeee03.gif&#34; alt=&#34;node&#34;&gt; &lt;img src=&#34;https://cloud.githubusercontent.com/assets/8057201/15991632/76494854-30b8-11e6-9555-a69840d0d50b.png&#34; alt=&#34;skinning&#34;&gt; &lt;img src=&#34;https://cloud.githubusercontent.com/assets/8057201/14902576/339926a8-0d9c-11e6-9fee-a8b73af04473.png&#34; alt=&#34;gamepad&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;/* init gui state */&#xA;struct nk_context ctx;&#xA;nk_init_fixed(&amp;amp;ctx, calloc(1, MAX_MEMORY), MAX_MEMORY, &amp;amp;font);&#xA;&#xA;enum {EASY, HARD};&#xA;static int op = EASY;&#xA;static float value = 0.6f;&#xA;static int i =  20;&#xA;&#xA;if (nk_begin(&amp;amp;ctx, &#34;Show&#34;, nk_rect(50, 50, 220, 220),&#xA;    NK_WINDOW_BORDER|NK_WINDOW_MOVABLE|NK_WINDOW_CLOSABLE)) {&#xA;    /* fixed widget pixel width */&#xA;    nk_layout_row_static(&amp;amp;ctx, 30, 80, 1);&#xA;    if (nk_button_label(&amp;amp;ctx, &#34;button&#34;)) {&#xA;        /* event handling */&#xA;    }&#xA;&#xA;    /* fixed widget window ratio width */&#xA;    nk_layout_row_dynamic(&amp;amp;ctx, 30, 2);&#xA;    if (nk_option_label(&amp;amp;ctx, &#34;easy&#34;, op == EASY)) op = EASY;&#xA;    if (nk_option_label(&amp;amp;ctx, &#34;hard&#34;, op == HARD)) op = HARD;&#xA;&#xA;    /* custom widget pixel width */&#xA;    nk_layout_row_begin(&amp;amp;ctx, NK_STATIC, 30, 2);&#xA;    {&#xA;        nk_layout_row_push(&amp;amp;ctx, 50);&#xA;        nk_label(&amp;amp;ctx, &#34;Volume:&#34;, NK_TEXT_LEFT);&#xA;        nk_layout_row_push(&amp;amp;ctx, 110);&#xA;        nk_slider_float(&amp;amp;ctx, 0, &amp;amp;value, 1.0f, 0.1f);&#xA;    }&#xA;    nk_layout_row_end(&amp;amp;ctx);&#xA;}&#xA;nk_end(&amp;amp;ctx);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/8057201/10187981/584ecd68-675c-11e5-897c-822ef534a876.png&#34; alt=&#34;example&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Bindings&lt;/h2&gt; &#xA;&lt;p&gt;There are a number of nuklear bindings for different languages created by other authors. I cannot attest for their quality since I am not necessarily proficient in any of these languages. Furthermore there are no guarantee that all bindings will always be kept up to date:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glegris/nuklear4j&#34;&gt;Java&lt;/a&gt; by Guillaume Legris&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Timu5/bindbc-nuklear&#34;&gt;D&lt;/a&gt; by Mateusz Muszyński&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/golang-ui/nuklear&#34;&gt;Golang&lt;/a&gt; by &lt;a href=&#34;mailto:golang-ui@github.com&#34;&gt;golang-ui@github.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/snuk182/nuklear-rust&#34;&gt;Rust&lt;/a&gt; by &lt;a href=&#34;mailto:snuk182@github.com&#34;&gt;snuk182@github.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wasamasa/nuklear&#34;&gt;Chicken&lt;/a&gt; by &lt;a href=&#34;mailto:wasamasa@github.com&#34;&gt;wasamasa@github.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zacharycarter/nuklear-nim&#34;&gt;Nim&lt;/a&gt; by &lt;a href=&#34;mailto:zacharycarter@github.com&#34;&gt;zacharycarter@github.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Lua &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/keharriso/love-nuklear&#34;&gt;LÖVE-Nuklear&lt;/a&gt; by Kevin Harrison&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/stetre/moonnuklear&#34;&gt;MoonNuklear&lt;/a&gt; by Stefano Trettel&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Python &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/billsix/pyNuklear&#34;&gt;pyNuklear&lt;/a&gt; by William Emerison Six (ctypes-based wrapper)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/nathanrw/nuklear-cffi&#34;&gt;pynk&lt;/a&gt; by &lt;a href=&#34;mailto:nathanrw@github.com&#34;&gt;nathanrw@github.com&lt;/a&gt; (cffi binding)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cartman300/NuklearDotNet&#34;&gt;CSharp/.NET&lt;/a&gt; by &lt;a href=&#34;mailto:cartman300@github.com&#34;&gt;cartman300@github.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nsauzede/vnk&#34;&gt;V&lt;/a&gt; by Nicolas Sauzede&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Developed by Micha Mettke and every direct or indirect contributor to the GitHub.&lt;/p&gt; &#xA;&lt;p&gt;Embeds &lt;code&gt;stb_texedit&lt;/code&gt;, &lt;code&gt;stb_truetype&lt;/code&gt; and &lt;code&gt;stb_rectpack&lt;/code&gt; by Sean Barrett (public domain) Embeds &lt;code&gt;ProggyClean.ttf&lt;/code&gt; font by Tristan Grimmer (MIT license).&lt;/p&gt; &#xA;&lt;p&gt;Big thank you to Omar Cornut (ocornut@github) for his &lt;a href=&#34;https://github.com/ocornut/imgui&#34;&gt;imgui&lt;/a&gt; library and giving me the inspiration for this library, Casey Muratori for handmade hero and his original immediate-mode graphical user interface idea and Sean Barrett for his amazing single-header &lt;a href=&#34;https://github.com/nothings/stb&#34;&gt;libraries&lt;/a&gt; which restored my faith in libraries and brought me to create some of my own. Finally Apoorva Joshi for his single-header &lt;a href=&#34;http://apoorvaj.io/single-header-packer.html&#34;&gt;file packer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;------------------------------------------------------------------------------&#xA;This software is available under 2 licenses -- choose whichever you prefer.&#xA;------------------------------------------------------------------------------&#xA;ALTERNATIVE A - MIT License&#xA;Copyright (c) 2017 Micha Mettke&#xA;Permission is hereby granted, free of charge, to any person obtaining a copy of&#xA;this software and associated documentation files (the &#34;Software&#34;), to deal in&#xA;the Software without restriction, including without limitation the rights to&#xA;use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies&#xA;of the Software, and to permit persons to whom the Software is furnished to do&#xA;so, subject to the following conditions:&#xA;The above copyright notice and this permission notice shall be included in all&#xA;copies or substantial portions of the Software.&#xA;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#xA;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&#xA;FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&#xA;AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&#xA;LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,&#xA;OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE&#xA;SOFTWARE.&#xA;------------------------------------------------------------------------------&#xA;ALTERNATIVE B - Public Domain (www.unlicense.org)&#xA;This is free and unencumbered software released into the public domain.&#xA;Anyone is free to copy, modify, publish, use, compile, sell, or distribute this&#xA;software, either in source code form or as a compiled binary, for any purpose,&#xA;commercial or non-commercial, and by any means.&#xA;In jurisdictions that recognize copyright laws, the author or authors of this&#xA;software dedicate any and all copyright interest in the software to the public&#xA;domain. We make this dedication for the benefit of the public at large and to&#xA;the detriment of our heirs and successors. We intend this dedication to be an&#xA;overt act of relinquishment in perpetuity of all present and future rights to&#xA;this software under copyright law.&#xA;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#xA;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&#xA;FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&#xA;AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN&#xA;ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION&#xA;WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&#xA;-----------------------------------------------------------------------------&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Reviewers guide&lt;/h2&gt; &#xA;&lt;p&gt;When reviewing pull request there are common things a reviewer should keep in mind.&lt;/p&gt; &#xA;&lt;p&gt;Reviewing changes to &lt;code&gt;src/*&lt;/code&gt; and &lt;code&gt;nuklear.h&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ensure C89 compatibility.&lt;/li&gt; &#xA; &lt;li&gt;The code should work for several backends to an acceptable degree.&lt;/li&gt; &#xA; &lt;li&gt;Check no other parts of &lt;code&gt;nuklear.h&lt;/code&gt; are related to the PR and thus nothing is missing.&lt;/li&gt; &#xA; &lt;li&gt;Recommend simple optimizations. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Pass small structs by value instead of by pointer.&lt;/li&gt; &#xA;   &lt;li&gt;Use local buffers over heap allocation when possible.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Check that the coding style is consistent with code around it. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Variable/function name casing.&lt;/li&gt; &#xA;   &lt;li&gt;Indentation.&lt;/li&gt; &#xA;   &lt;li&gt;Curly bracket (&lt;code&gt;{}&lt;/code&gt;) placement.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Ensure that the contributor has bumped the appropriate version in &lt;a href=&#34;https://github.com/Immediate-Mode-UI/Nuklear/raw/master/clib.json&#34;&gt;clib.json&lt;/a&gt; and added their changes to the &lt;a href=&#34;https://github.com/Immediate-Mode-UI/Nuklear/raw/master/src/CHANGELOG&#34;&gt;CHANGELOG&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Have at least one other person review the changes before merging.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Reviewing changes to &lt;code&gt;demo/*&lt;/code&gt;, &lt;code&gt;example/*&lt;/code&gt; and other files in the repo:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Focus on getting working code merged. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;We want to make it easy for people to get started with Nuklear, and any &lt;code&gt;demo&lt;/code&gt; and &lt;code&gt;example&lt;/code&gt; improvements helps in this regard.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Use of newer C features, or even other languages is not discouraged. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If another language is used, ensure that the build process is easy to figure out.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Messy or less efficient code can be merged so long as these outliers are pointed out and easy to find.&lt;/li&gt; &#xA; &lt;li&gt;Version shouldn&#39;t be bumped for these changes.&lt;/li&gt; &#xA; &lt;li&gt;Changes that improves code to be more inline with &lt;code&gt;nuklear.h&lt;/code&gt; are ofc always welcome.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>