<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-01T01:47:29Z</updated>
  <subtitle>Monthly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hufrea/byedpi</title>
    <updated>2024-09-01T01:47:29Z</updated>
    <id>tag:github.com,2024-09-01:/hufrea/byedpi</id>
    <link href="https://github.com/hufrea/byedpi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bypass DPI&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Implementation of some DPI bypass methods. The program is a local SOCKS proxy server.&lt;/p&gt; &#xA;&lt;p&gt;Usage example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;ciadpi --disorder 1 --auto=torst --tlsrec 1+s&#xA;ciadpi --fake -1 --ttl 8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Описание аргументов&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;-i, --ip &amp;lt;ip&amp;gt;&#xA;    Прослушиваемый IP, по умолчанию 0.0.0.0&#xA;&#xA;-p, --port &amp;lt;num&amp;gt;&#xA;    Прослушиваемый порт, по умолчанию 1080&#xA;&#xA;-c, --max-conn &amp;lt;count&amp;gt;&#xA;    Максимальное количество клиентских подключений, по умолчанию 512&#xA;&#xA;-I,  --conn-ip &amp;lt;ip&amp;gt;&#xA;    Адрес, к которому будут привязаны исходящие соединения, по умолчанию ::&#xA;    При указании IPv4 адреса запросы на IPv6 будут отклоняться&#xA;&#xA;-b, --buf-size &amp;lt;size&amp;gt;&#xA;    Максимальный размер данных, получаемых и отправляемых за один вызов recv/send&#xA;    Размер указывается в байтах, по умолчанию равен 16384&#xA;&#xA;-g, --def-ttl &amp;lt;num&amp;gt;&#xA;    Значение TTL для всех исходящий соединений&#xA;    Может быть полезен для обхода обнаружения нестандартного/уменьшенного TTL&#xA;&#xA;-N, --no-domain&#xA;    Отбрасывать запросы, если в качестве адреса указан домен&#xA;    Т.к. резолвинг выполняется синхронно, то он может замедлить или даже заморозить работу&#xA;&#xA;-U, --no-udp&#xA;    Не проксировать UDP&#xA;    &#xA;-F, --tfo&#xA;    Включает TCP Fast Open&#xA;    Если сервер его поддерживает, то первый пакет будет отправлен сразу вместе с SYN&#xA;    Поддерживается только в Linux (4.11+)&#xA;    &#xA;-A, --auto &amp;lt;t,r,s,n&amp;gt;&#xA;    Автоматический режим&#xA;    Если произошло событие, похожее на блокировку или поломку,&#xA;    то будут применены параметры обхода, следующие за данной опцией&#xA;    Возможные события:&#xA;        torst   : Вышло время ожидания или сервер сбросил подключение после первого запроса&#xA;        redirect: HTTP Redirect с Location, домен которого не совпадает с исходящим&#xA;        ssl_err : В ответ на ClientHello не пришел ServerHello или SH содержит некорректный session_id&#xA;        none    : Предыдущая группа пропущена, например из-за ограничения по доменам или протоколам&#xA;    &#xA;-u, --cache-ttl &amp;lt;sec&amp;gt;&#xA;    Время жизни значения в кеше, по умолчанию 100800 (28 часов)&#xA;    &#xA;-T, --timeout &amp;lt;sec&amp;gt;&#xA;    Таймаут ожидания первого ответа от сервера в секундах&#xA;    В Linux переводится в миллисекунды, поэтому можно указать дробное число&#xA;    &#xA;-K, --proto &amp;lt;t,h,u&amp;gt;&#xA;    Белый список протоколов: tls,http,udp&#xA;    &#xA;-H, --hosts &amp;lt;file|:string&amp;gt;&#xA;    Ограничить область действия параметров списком доменов&#xA;    Домены должны быть разделены новой строкой или пробелом&#xA;    &#xA;-V, --pf &amp;lt;port[-portr]&amp;gt;&#xA;    Ограничитель по портам&#xA;    &#xA;-s, --split &amp;lt;n[+s]&amp;gt;&#xA;    Разбить запрос по указанному смещению&#xA;    После числа можно добавить флаг:&#xA;        +s: добавить смещение SNI&#xA;        +h: добавить смещение Host&#xA;    Можно указывать несколько раз, чтобы разбить запрос по нескольким позициям&#xA;    При указании отрицательного значения к нему прибавляется размер пакета&#xA;    &#xA;-d, --disorder &amp;lt;n[+s]&amp;gt;&#xA;    Подобен --split, но части отправляются в обратном порядке&#xA;    &#xA;-o, --oob &amp;lt;n[+s]&amp;gt;&#xA;    Подобен --split, но часть отсылается как OOB данные&#xA;    &#xA;-q, --disoob &amp;lt;n[+s]&amp;gt;&#xA;    Подобен --disorder, но часть отсылается как OOB данные&#xA;    &#xA;-f, --fake &amp;lt;n[+s]&amp;gt;&#xA;    Подобен --disorder, только перед отправкой первого куска отправляется часть поддельного&#xA;    Количество байт отправляемого из фейка равно рамеру разбиваемой части&#xA; &#xA;-t, --ttl &amp;lt;num&amp;gt;&#xA;    TTL для поддельного пакета, по умолчанию 8&#xA;    Необходимо подобрать такое значение, чтобы пакет не дошел до сервера, но был обработан DPI&#xA;&#xA;-k, --ip-opt[=file|:str]&#xA;    Установить опции для фейкового IP пакета&#xA;    Существенно снизит вероятность, что пакет дойдет до сервера&#xA;    Стоит учесть, что до DPI он также может не дойти&#xA;    В Windows поддержка может быть отключена&#xA;    &#xA;-S, --md5sig&#xA;    Установить опцию TCP MD5 Signature для фейкового пакета&#xA;    Большинство серверов (в основном на Linux) отбрасывают пакеты с данной опцией&#xA;    Поддерживается только в Linux, может быть выключен в некоторых сборках ядра (&amp;lt; 3.9, Android)&#xA;&#xA;-O, --fake-offset &amp;lt;n&amp;gt;&#xA;    Сместить начало фейковых данных на n байт&#xA;       &#xA;-l, --fake-data &amp;lt;file|:str&amp;gt;&#xA;    Указать свои поддельные пакеты&#xA;&#xA;-e, --oob-data &amp;lt;char&amp;gt;&#xA;    Байт, отсылаемый вне основного потока, по умолчанию &#39;a&#39;&#xA;    &#xA;-n, --tls-sni &amp;lt;str&amp;gt;&#xA;    Изменить SNI в fake пакете на указанный&#xA;&#xA;-M, --mod-http &amp;lt;h[,d,r]&amp;gt;&#xA;    Всякие манипуляции с HTTP пакетом, можно комбинировать&#xA;    hcsmix:&#xA;        &#34;Host: name&#34; -&amp;gt; &#34;hOsT: name&#34;&#xA;    dcsmix:&#xA;        &#34;Host: name&#34; -&amp;gt; &#34;Host: NaMe&#34;&#xA;    rmspace:&#xA;        &#34;Host: name&#34; -&amp;gt; &#34;Host:name\t&#34;&#xA;&#xA;-r, --tlsrec &amp;lt;n[+s]&amp;gt;&#xA;    Разделить ClientHello на отдельные записи по указанному смещению&#xA;    Можно указывать несколько раз  &#xA;&#xA;-a, --udp-fake &amp;lt;count&amp;gt;&#xA;    Количество фейковых UDP пакетов&#xA;&#xA;-Y, --drop-sack&#xA;    Игнорировать SACK, вынуждая ядро переотправить уже доставленные пакеты&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Подробнее&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;--split&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Разбивает запрос на части. Пример на запросе в 30 байт:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Параметры: &lt;code&gt;--split 3 --split 7&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Порядок отправки: 1-3, 3-7, 7-30&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Позиции следует указывать в порядке возрастания.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;code&gt;--disorder&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Часть, попадающая под disorder, будет отправлена с TTL=1, т.е. фактически не будет никуда доставлена. ОС узнает об этом лишь после отсылки последующей части, когда сервер сообщит о потере с помощью SACK. Системе придется отослать предыдущий пакет заново, тем самым нарушив обычный порядок.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Параметры: &lt;code&gt;--disorder 7&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Порядок отправки: 7-30, 1-7&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Вышесказанное распространяется только на Linux. В Windows выполняется полная ретрансмиссия:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Параметры: &lt;code&gt;--disorder 7&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Порядок отправки: 7-30, 1-30&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Поэтому желательно использовать ещё и &lt;code&gt;split&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Параметры: &lt;code&gt;--split 7 --disorder 23&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Порядок отправки: 1-7, 23-30, 7-30&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;На практике оптимально использовать:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux: &lt;code&gt;--disorder 1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Windows: &lt;code&gt;--split 1+s --disorder 3+s&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;code&gt;--fake&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Параметры: &lt;code&gt;--fake 7&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Порядок отправки: 1-7 фейк, 7-30 оригинал, 1-7 оригинал&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Данные в первой части запроса заменяются на поддельные.&lt;br&gt; Эта часть должна пройти через DPI, но не дойти до сервера. А раз часть не дойдет, то ОС отправит ее снова, тем самым изменив порядок подобно &lt;code&gt;disorder&lt;/code&gt;. Для того, чтобы фейк не дошел до сервера, есть опции &lt;code&gt;ttl&lt;/code&gt;, &lt;code&gt;ip-opt&lt;/code&gt; и &lt;code&gt;md5sig&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;TTL необходимо подбирать такой, чтобы пакет прошел через все DPI, но не дошел до сервера.&lt;br&gt; Для Linux есть md5sig. Он устанавливает опцию TCP MD5 Signature, что не дает пакету быть принятым многими серверами. К сожалению, md5sig работает не во всех сборках.&lt;/p&gt; &#xA;&lt;p&gt;Для Windows есть еще один способ избежать обработки фейка сервером. Это комбинирование &lt;code&gt;fake&lt;/code&gt; с &lt;code&gt;disorder&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Параметры: &lt;code&gt;--disorder 1 --fake 7&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Порядок отправки: 2-7 фейк, 7-30 оригинал, 1-30 оригинал&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Если поддельный пакет и дойдет до сервера, то он будет перезаписан из-за полной ретрансмисси.&lt;/p&gt; &#xA;&lt;p&gt;На практике оптимально использовать:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux: &lt;code&gt;--fake -1 --md5sig&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Windows: &lt;code&gt;--disorder 1 --fake -1&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;code&gt;--oob&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;TCP может отсылать данные вне основного потока, используя флаг URG, однако лишь 1 байт в пакете.&lt;br&gt; Все данные в таком пакете будут доставлены приложению, кроме последнего байта, который и является внеканальным:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Параметры: &lt;code&gt;--oob 3&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Отправка: 1-4 с флагом URG (1-3 данные запроса + 4-й байт, который будет усечен), 3-30&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Этот байт желательно помещать в SNI: &lt;code&gt;--oob 3+s&lt;/code&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;code&gt;--disoob&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Схож с &lt;code&gt;--disorder&lt;/code&gt;, но часть отправляется с OOB байтом:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Параметры: &lt;code&gt;--disoob 3&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Отправка: 3-30, 1-4 с флагом URG (1-3 данные запроса + 4-й байт, который будет усечен)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;При использовании с &lt;code&gt;--fake&lt;/code&gt; или &lt;code&gt;--disorder&lt;/code&gt; можно получить пакет, где OOB байт будет находиться на месте разбиения:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Параметры: &lt;code&gt;--disoob 3 --disorder 7&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Отправка: 3-30, 1-8 с флагом URG (1-3 + байт который будет усечен + 4-8)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;code&gt;--tlsrec&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Одну TLS запись можно разбить на несколько, немного переделав заголовок.&lt;br&gt; На месте разбиения вставляется новый заголовок, увеличивая размер запроса на 5 байт.&lt;/p&gt; &#xA;&lt;p&gt;Этот заголовок можно поместить в середину SNI, не давая возможность DPI правильно его прочитать: &lt;code&gt;--tlsrec 3+s&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Хоть &lt;code&gt;tlsrec&lt;/code&gt; и &lt;code&gt;oob&lt;/code&gt; запутывают DPI, они также могут запутать всякие мидлбоксы, которые не поддерживают полноценный стек TCP/TLS.&lt;br&gt; Из-за этого их следует использовать вместе с &lt;code&gt;--auto&lt;/code&gt;:&lt;br&gt; &lt;code&gt;--auto=torst --timeout 3 --tlsrec 3+s&lt;/code&gt;&lt;br&gt; В примере &lt;code&gt;tlsrec&lt;/code&gt; будет применяться лишь в случаях, когда сброшено подключение или вышел таймаут, т.е. когда, скорее всего, произошла блокировка.&lt;br&gt; Можно наоборот - отменять tlsrec, если сервер сбрасывает подключение или откидывает пакет:&lt;br&gt; &lt;code&gt;--tlsrec 3+s --auto=torst --timeout 3&lt;/code&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;code&gt;--auto&lt;/code&gt;, &lt;code&gt;--hosts&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Параметр &lt;code&gt;auto&lt;/code&gt; делит опции на группы. Для каждого запроса они обходятся слева на право. Сначала проверяется триггер, указанный в &lt;code&gt;auto&lt;/code&gt;, затем &lt;code&gt;pf&lt;/code&gt;, &lt;code&gt;proto&lt;/code&gt; и &lt;code&gt;hosts&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Можно указывать несколько групп опций, раделяя их данным параметром.&lt;br&gt; Параметры, которые идут ниже &lt;code&gt;--timeout&lt;/code&gt; в help-тексте (кроме &lt;code&gt;tls-sni&lt;/code&gt;), можно вынести в отдельную группу.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;Примеры:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;--fake -1 --ttl 10 --auto=alert,sid_inv --fake -1 --ttl 5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;По умолчанию использовать &lt;code&gt;fake&lt;/code&gt; с ttl=10, в случае ошибки использовать &lt;code&gt;fake&lt;/code&gt; с ttl=5&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--hosts list.txt --disorder 3 --auto=none&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Применять запутывание только для доменов из list.txt&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--hosts list.txt --auto=none --disorder 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Не применять запутывание для доменов из list.txt&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--auto=torst --hosts list.txt --disorder 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;По умолчанию ничего не делать, использовать disorder при условии, что произошла блокировка и домен входит в list.txt.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--proto=http,tls --disorder 3 --auto=none&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Запутывать только HTTP и TLS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--proto=http --fake -1 --fake-data=&#39;:GET /...&#39; --auto=none --fake -1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Переопределить фейковый пакет для HTTP&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Сборка&lt;/h3&gt; &#xA;&lt;p&gt;Для сборки понадобится: &lt;code&gt;make&lt;/code&gt;, &lt;code&gt;gcc/clang&lt;/code&gt; для Linux, &lt;code&gt;mingw&lt;/code&gt; для Windows&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux: &lt;code&gt;make&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Windows: &lt;code&gt;make windows CC=x86_64-w64-mingw32-gcc&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Дополнительная информация о DPI, источники идей&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bol-van/zapret/raw/master/docs/readme.txt&#34;&gt;https://github.com/bol-van/zapret/blob/master/docs/readme.txt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://geneva.cs.umd.edu/papers/geneva_ccs19.pdf&#34;&gt;https://geneva.cs.umd.edu/papers/geneva_ccs19.pdf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://habr.com/ru/post/335436&#34;&gt;https://habr.com/ru/post/335436&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>libuv/libuv</title>
    <updated>2024-09-01T01:47:29Z</updated>
    <id>tag:github.com,2024-09-01:/libuv/libuv</id>
    <link href="https://github.com/libuv/libuv" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cross-platform asynchronous I/O&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libuv/libuv/master/img/banner.png&#34; alt=&#34;libuv&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;libuv is a multi-platform support library with a focus on asynchronous I/O. It was primarily developed for use by &lt;a href=&#34;http://nodejs.org/&#34;&gt;Node.js&lt;/a&gt;, but it&#39;s also used by &lt;a href=&#34;http://luvit.io/&#34;&gt;Luvit&lt;/a&gt;, &lt;a href=&#34;http://julialang.org/&#34;&gt;Julia&lt;/a&gt;, &lt;a href=&#34;https://github.com/MagicStack/uvloop&#34;&gt;uvloop&lt;/a&gt;, and &lt;a href=&#34;https://github.com/libuv/libuv/raw/v1.x/LINKS.md&#34;&gt;others&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Feature highlights&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Full-featured event loop backed by epoll, kqueue, IOCP, event ports.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Asynchronous TCP and UDP sockets&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Asynchronous DNS resolution&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Asynchronous file and file system operations&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;File system events&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ANSI escape code controlled TTY&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;IPC with socket sharing, using Unix domain sockets or named pipes (Windows)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Child processes&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Thread pool&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Signal handling&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;High resolution clock&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Threading and synchronization primitives&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;Starting with version 1.0.0 libuv follows the &lt;a href=&#34;http://semver.org/&#34;&gt;semantic versioning&lt;/a&gt; scheme. The API change and backwards compatibility rules are those indicated by SemVer. libuv will keep a stable ABI across major releases.&lt;/p&gt; &#xA;&lt;p&gt;The ABI/API changes can be tracked &lt;a href=&#34;http://abi-laboratory.pro/tracker/timeline/libuv/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;libuv is licensed under the MIT license. Check the &lt;a href=&#34;https://raw.githubusercontent.com/libuv/libuv/v1.x/LICENSE&#34;&gt;LICENSE&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/libuv/libuv/v1.x/LICENSE-extra&#34;&gt;LICENSE-extra&lt;/a&gt; files.&lt;/p&gt; &#xA;&lt;p&gt;The documentation is licensed under the CC BY 4.0 license. Check the &lt;a href=&#34;https://raw.githubusercontent.com/libuv/libuv/v1.x/LICENSE-docs&#34;&gt;LICENSE-docs file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/libuv/libuv/discussions&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://groups.google.com/group/libuv&#34;&gt;Mailing list&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;h3&gt;Official documentation&lt;/h3&gt; &#xA;&lt;p&gt;Located in the docs/ subdirectory. It uses the &lt;a href=&#34;http://sphinx-doc.org/&#34;&gt;Sphinx&lt;/a&gt; framework, which makes it possible to build the documentation in multiple formats.&lt;/p&gt; &#xA;&lt;p&gt;Show different supported building options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build documentation as HTML:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build documentation as HTML and live reload it when it changes (this requires sphinx-autobuild to be installed and is only supported on Unix):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make livehtml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build documentation as man pages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make man&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build documentation as ePub:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make epub&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: Windows users need to use make.bat instead of plain &#39;make&#39;.&lt;/p&gt; &#xA;&lt;p&gt;Documentation can be browsed online &lt;a href=&#34;http://docs.libuv.org&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/libuv/libuv/tree/master/test&#34;&gt;tests and benchmarks&lt;/a&gt; also serve as API specification and usage examples.&lt;/p&gt; &#xA;&lt;h3&gt;Other resources&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=nGn60vDSxQ4&#34;&gt;LXJS 2012 talk&lt;/a&gt; — High-level introductory talk about libuv.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/thlorenz/libuv-dox&#34;&gt;libuv-dox&lt;/a&gt; — Documenting types and methods of libuv, mostly by reading uv.h.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/thlorenz/learnuv&#34;&gt;learnuv&lt;/a&gt; — Learn uv for fun and profit, a self guided workshop to libuv.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These resources are not handled by libuv maintainers and might be out of date. Please verify it before opening new issues.&lt;/p&gt; &#xA;&lt;h2&gt;Downloading&lt;/h2&gt; &#xA;&lt;p&gt;libuv can be downloaded either from the &lt;a href=&#34;https://github.com/libuv/libuv&#34;&gt;GitHub repository&lt;/a&gt; or from the &lt;a href=&#34;http://dist.libuv.org/dist/&#34;&gt;downloads site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Before verifying the git tags or signature files, importing the relevant keys is necessary. Key IDs are listed in the &lt;a href=&#34;https://github.com/libuv/libuv/raw/master/MAINTAINERS.md&#34;&gt;MAINTAINERS&lt;/a&gt; file, but are also available as git blob objects for easier use.&lt;/p&gt; &#xA;&lt;p&gt;Importing a key the usual way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ gpg --keyserver pool.sks-keyservers.net --recv-keys AE9BC059&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Importing a key from a git blob object:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git show pubkey-saghul | gpg --import&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Verifying releases&lt;/h3&gt; &#xA;&lt;p&gt;Git tags are signed with the developer&#39;s key, they can be verified as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git verify-tag v1.6.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Starting with libuv 1.7.0, the tarballs stored in the &lt;a href=&#34;http://dist.libuv.org/dist/&#34;&gt;downloads site&lt;/a&gt; are signed and an accompanying signature file sit alongside each. Once both the release tarball and the signature file are downloaded, the file can be verified as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ gpg --verify libuv-1.7.0.tar.gz.sign&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Build Instructions&lt;/h2&gt; &#xA;&lt;p&gt;For UNIX-like platforms, including macOS, there are two build methods: autotools or &lt;a href=&#34;https://cmake.org/&#34;&gt;CMake&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For Windows, &lt;a href=&#34;https://cmake.org/&#34;&gt;CMake&lt;/a&gt; is the only supported build method and has the following prerequisites:&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;One of: &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://visualstudio.microsoft.com/visual-cpp-build-tools/&#34;&gt;Visual C++ Build Tools&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://www.visualstudio.com/vs/older-downloads/&#34;&gt;Visual Studio 2015 Update 3&lt;/a&gt;, all editions including the Community edition (remember to select &#34;Common Tools for Visual C++ 2015&#34; feature during installation).&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://www.visualstudio.com/downloads/&#34;&gt;Visual Studio 2017&lt;/a&gt;, any edition (including the Build Tools SKU). &lt;strong&gt;Required Components:&lt;/strong&gt; &#34;MSbuild&#34;, &#34;VC++ 2017 v141 toolset&#34; and one of the Windows SDKs (10 or 8.1).&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Basic Unix tools required for some tests, &lt;a href=&#34;http://git-scm.com/download/win&#34;&gt;Git for Windows&lt;/a&gt; includes Git Bash and tools which can be included in the global &lt;code&gt;PATH&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;To build with autotools:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sh autogen.sh&#xA;$ ./configure&#xA;$ make&#xA;$ make check&#xA;$ make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build with &lt;a href=&#34;https://cmake.org/&#34;&gt;CMake&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ mkdir -p build&#xA;&#xA;$ (cd build &amp;amp;&amp;amp; cmake .. -DBUILD_TESTING=ON) # generate project with tests&#xA;$ cmake --build build                       # add `-j &amp;lt;n&amp;gt;` with cmake &amp;gt;= 3.12&#xA;&#xA;# Run tests:&#xA;$ (cd build &amp;amp;&amp;amp; ctest -C Debug --output-on-failure)&#xA;&#xA;# Or manually run tests:&#xA;$ build/uv_run_tests                        # shared library build&#xA;$ build/uv_run_tests_a                      # static library build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To cross-compile with &lt;a href=&#34;https://cmake.org/&#34;&gt;CMake&lt;/a&gt; (unsupported but generally works):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cmake ../..                 \&#xA;  -DCMAKE_SYSTEM_NAME=Windows \&#xA;  -DCMAKE_SYSTEM_VERSION=6.1  \&#xA;  -DCMAKE_C_COMPILER=i686-w64-mingw32-gcc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install with Homebrew&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ brew install --HEAD libuv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note to OS X users:&lt;/p&gt; &#xA;&lt;p&gt;Make sure that you specify the architecture you wish to build for in the &#34;ARCHS&#34; flag. You can specify more than one by delimiting with a space (e.g. &#34;x86_64 i386&#34;).&lt;/p&gt; &#xA;&lt;h3&gt;Install with vcpkg&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone https://github.com/microsoft/vcpkg.git&#xA;$ ./bootstrap-vcpkg.bat # for powershell&#xA;$ ./bootstrap-vcpkg.sh # for bash&#xA;$ ./vcpkg install libuv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Install with Conan&lt;/h3&gt; &#xA;&lt;p&gt;You can install pre-built binaries for libuv or build it from source using &lt;a href=&#34;https://conan.io/&#34;&gt;Conan&lt;/a&gt;. Use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;conan install --requires=&#34;libuv/[*]&#34; --build=missing&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The libuv Conan recipe is kept up to date by Conan maintainers and community contributors. If the version is out of date, please &lt;a href=&#34;https://github.com/conan-io/conan-center-index&#34;&gt;create an issue or pull request&lt;/a&gt; on the ConanCenterIndex repository.&lt;/p&gt; &#xA;&lt;h3&gt;Running tests&lt;/h3&gt; &#xA;&lt;p&gt;Some tests are timing sensitive. Relaxing test timeouts may be necessary on slow or overloaded machines:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ env UV_TEST_TIMEOUT_MULTIPLIER=2 build/uv_run_tests # 10s instead of 5s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Run one test&lt;/h4&gt; &#xA;&lt;p&gt;The list of all tests is in &lt;code&gt;test/test-list.h&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This invocation will cause the test driver to fork and execute &lt;code&gt;TEST_NAME&lt;/code&gt; in a child process:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ build/uv_run_tests_a TEST_NAME&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This invocation will cause the test driver to execute the test in the same process:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ build/uv_run_tests_a TEST_NAME TEST_NAME&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Debugging tools&lt;/h4&gt; &#xA;&lt;p&gt;When running the test from within the test driver process (&lt;code&gt;build/uv_run_tests_a TEST_NAME TEST_NAME&lt;/code&gt;), tools like gdb and valgrind work normally.&lt;/p&gt; &#xA;&lt;p&gt;When running the test from a child of the test driver process (&lt;code&gt;build/uv_run_tests_a TEST_NAME&lt;/code&gt;), use these tools in a fork-aware manner.&lt;/p&gt; &#xA;&lt;h5&gt;Fork-aware gdb&lt;/h5&gt; &#xA;&lt;p&gt;Use the &lt;a href=&#34;https://sourceware.org/gdb/onlinedocs/gdb/Forks.html&#34;&gt;follow-fork-mode&lt;/a&gt; setting:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gdb --args build/uv_run_tests_a TEST_NAME&#xA;&#xA;(gdb) set follow-fork-mode child&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Fork-aware valgrind&lt;/h5&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;--trace-children=yes&lt;/code&gt; parameter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ valgrind --trace-children=yes -v --tool=memcheck --leak-check=full --track-origins=yes --leak-resolution=high --show-reachable=yes --log-file=memcheck-%p.log build/uv_run_tests_a TEST_NAME&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running benchmarks&lt;/h3&gt; &#xA;&lt;p&gt;See the section on running tests. The benchmark driver is &lt;code&gt;./uv_run_benchmarks_a&lt;/code&gt; and the benchmarks are listed in &lt;code&gt;test/benchmark-list.h&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Platforms&lt;/h2&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://raw.githubusercontent.com/libuv/libuv/v1.x/SUPPORTED_PLATFORMS.md&#34;&gt;SUPPORTED_PLATFORMS file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;-fno-strict-aliasing&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;It is recommended to turn on the &lt;code&gt;-fno-strict-aliasing&lt;/code&gt; compiler flag in projects that use libuv. The use of ad hoc &#34;inheritance&#34; in the libuv API may not be safe in the presence of compiler optimizations that depend on strict aliasing.&lt;/p&gt; &#xA;&lt;p&gt;MSVC does not have an equivalent flag but it also does not appear to need it at the time of writing (December 2019.)&lt;/p&gt; &#xA;&lt;h3&gt;AIX Notes&lt;/h3&gt; &#xA;&lt;p&gt;AIX compilation using IBM XL C/C++ requires version 12.1 or greater.&lt;/p&gt; &#xA;&lt;p&gt;AIX support for filesystem events requires the non-default IBM &lt;code&gt;bos.ahafs&lt;/code&gt; package to be installed. This package provides the AIX Event Infrastructure that is detected by &lt;code&gt;autoconf&lt;/code&gt;. &lt;a href=&#34;http://www.ibm.com/developerworks/aix/library/au-aix_event_infrastructure/&#34;&gt;IBM documentation&lt;/a&gt; describes the package in more detail.&lt;/p&gt; &#xA;&lt;h3&gt;z/OS Notes&lt;/h3&gt; &#xA;&lt;p&gt;z/OS compilation requires &lt;a href=&#34;https://github.com/ibmruntimes/zoslib&#34;&gt;ZOSLIB&lt;/a&gt; to be installed. When building with &lt;a href=&#34;https://cmake.org/&#34;&gt;CMake&lt;/a&gt;, use the flag &lt;code&gt;-DZOSLIB_DIR&lt;/code&gt; to specify the path to &lt;a href=&#34;https://github.com/ibmruntimes/zoslib&#34;&gt;ZOSLIB&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ (cd build &amp;amp;&amp;amp; cmake .. -DBUILD_TESTING=ON -DZOSLIB_DIR=/path/to/zoslib)&#xA;$ cmake --build build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;z/OS creates System V semaphores and message queues. These persist on the system after the process terminates unless the event loop is closed.&lt;/p&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;ipcrm&lt;/code&gt; command to manually clear up System V resources.&lt;/p&gt; &#xA;&lt;h2&gt;Patches&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/libuv/libuv/raw/master/CONTRIBUTING.md&#34;&gt;guidelines for contributing&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>RfidResearchGroup/proxmark3</title>
    <updated>2024-09-01T01:47:29Z</updated>
    <id>tag:github.com,2024-09-01:/RfidResearchGroup/proxmark3</id>
    <link href="https://github.com/RfidResearchGroup/proxmark3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Iceman Fork - Proxmark3&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Iceman Fork - Proxmark3&lt;/h1&gt; &#xA;&lt;p&gt;The Proxmark3 is the swiss-army tool of RFID, allowing for interactions with the vast majority of RFID tags on a global scale. Originally built by Jonathan Westhues, the device is now the goto tool for RFID Analysis for the enthusiast. Iceman repository is considered to be the pinnacle of features and functionality, enabling a huge range of extremely useful and convenient commands and LUA scripts to automate chip identification, penetration testing, and programming&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Latest Release&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Coverity&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Contributors&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/RfidResearchGroup/proxmark3/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/rfidresearchgroup/proxmark3&#34; alt=&#34;Latest release&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://scan.coverity.com/projects/proxmark3-rrg-iceman-repo&#34;&gt;&lt;img src=&#34;https://scan.coverity.com/projects/19334/badge.svg?sanitize=true&#34; alt=&#34;Coverity Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/rfidresearchgroup/proxmark3&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Actions OSX CI&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Actions Ubuntu CI&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Actions Windows CI&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/RfidResearchGroup/proxmark3/actions/workflows/macos.yml&#34;&gt;&lt;img src=&#34;https://github.com/RfidResearchGroup/proxmark3/actions/workflows/macos.yml/badge.svg?branch=master&#34; alt=&#34;MacOS Build and Test&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/RfidResearchGroup/proxmark3/actions/workflows/ubuntu.yml&#34;&gt;&lt;img src=&#34;https://github.com/RfidResearchGroup/proxmark3/actions/workflows/ubuntu.yml/badge.svg?branch=master&#34; alt=&#34;Ubuntu Build and Test&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/RfidResearchGroup/proxmark3/actions/workflows/windows.yml&#34;&gt;&lt;img src=&#34;https://github.com/RfidResearchGroup/proxmark3/actions/workflows/windows.yml/badge.svg?branch=master&#34; alt=&#34;Windows Build and Test&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#iceman-fork---proxmark3&#34;&gt;Iceman Fork - Proxmark3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#proxmark3-installation-and-overview&#34;&gt;PROXMARK3 INSTALLATION AND OVERVIEW&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#notes--helpful-documents&#34;&gt;Notes / helpful documents&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#how-to-build&#34;&gt;How to build?&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#proxmark3-rdv4&#34;&gt;Proxmark3 RDV4&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#generic-proxmark3-platforms&#34;&gt;Generic Proxmark3 platforms&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#what-has-changed&#34;&gt;What has changed?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#development&#34;&gt;Development&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#supported-operative-systems&#34;&gt;Supported operative systems&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#precompiled-binaries&#34;&gt;Precompiled binaries&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#proxmark3-gui&#34;&gt;Proxmark3 GUI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#official-channels&#34;&gt;Official channels&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#maintainers&#34;&gt;Maintainers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#citation&#34;&gt;Citation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/#copyright-and-licensing-terms&#34;&gt;Copyright and licensing terms&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;PROXMARK3 INSTALLATION AND OVERVIEW&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Installation&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Use of the Proxmark3&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Installation_Instructions/Linux-Installation-Instructions.md&#34;&gt;Linux - Setup and Build&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Use_of_Proxmark/0_Compilation-Instructions.md&#34;&gt;Compilation Instructions&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Installation_Instructions/ModemManager-Must-Be-Discarded.md&#34;&gt;Linux - Important notes on ModemManager&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Use_of_Proxmark/1_Validation.md&#34;&gt;Validating Proxmark3 Client Functionality&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Installation_Instructions/macOS-Homebrew-Installation-Instructions.md&#34;&gt;macOS - Homebrew &amp;amp; Upgrading HomeBrew Tap Formula&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Use_of_Proxmark/2_Configuration-and-Verification.md&#34;&gt;First Use and Verification&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Installation_Instructions/macOS-MacPorts-Installation-Instructions.md&#34;&gt;macOS - MacPorts&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Use_of_Proxmark/3_Commands-and-Features.md&#34;&gt;Commands &amp;amp; Features&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Installation_Instructions/macOS-Compile-From-Source-Instructions.md&#34;&gt;macOS - Setup and Build&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Installation_Instructions/Windows-Installation-Instructions.md&#34;&gt;Windows - Setup and Build&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/termux_notes.md&#34;&gt;Termux / Android - Setup and Build&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Installation_Instructions/iOS-Installation-Instructions.md&#34;&gt;iOS - Setup and Build&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/bt_manual_v10.md&#34;&gt;Blue Shark Manual&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/cheatsheet.md&#34;&gt;Command Cheat Sheet&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Use_of_Proxmark/4_Advanced-compilation-parameters.md&#34;&gt;Advanced Compilation Parameters&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/RfidResearchGroup/proxmark3/wiki/More-cheat-sheets&#34;&gt;More Cheat Sheets&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Installation_Instructions/Troubleshooting.md&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/commands.md&#34;&gt;Complete Client Command Set&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/jtag_notes.md&#34;&gt;JTAG&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/T5577_Guide.md&#34;&gt;T5577 Introduction Guide&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Notes / helpful documents&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Notes&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/uart_notes.md&#34;&gt;Notes on UART&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/termux_notes.md&#34;&gt;Notes on Termux / Android&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/path_notes.md&#34;&gt;Notes on paths&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/new_frame_format.md&#34;&gt;Notes on frame format&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/trace_notes.md&#34;&gt;Notes on tracelog / wireshark&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/emv_notes.md&#34;&gt;Notes on EMV&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/ext_flash_notes.md&#34;&gt;Notes on external flash&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/loclass_notes.md&#34;&gt;Notes on loclass&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Development/Coverity-Scan-Config-and-Run.md&#34;&gt;Notes on Coverity Scan Config &amp;amp; Run&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/extensions_notes.md&#34;&gt;Notes on file formats used with Proxmark3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/mfu_binary_format_notes.md&#34;&gt;Notes on MFU binary format&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/fpga_arm_notes.md&#34;&gt;Notes on FPGA &amp;amp; ARM&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/armsrc/Standalone/readme.md&#34;&gt;Developing standalone mode&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/RfidResearchGroup/proxmark3/wiki/Standalone-mode&#34;&gt;Wiki about standalone mode&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/magic_cards_notes.md&#34;&gt;Notes on Magic UID cards&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/colors_notes.md&#34;&gt;Notes on Color usage&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Development/Makefile-vs-CMake.md&#34;&gt;Makefile vs CMake&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/cloner_notes.md&#34;&gt;Notes on Cloner guns&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/cliparser.md&#34;&gt;Notes on cliparser usage&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/clocks.md&#34;&gt;Notes on clocks&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/desfire.md&#34;&gt;Notes on MIFARE DESFire&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/cipurse.md&#34;&gt;Notes on CIPURSE&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/ndef_type4a.md&#34;&gt;Notes on NDEF type4a&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/hid_downgrade.md&#34;&gt;Notes on downgrade attacks&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;How to build?&lt;/h1&gt; &#xA;&lt;h2&gt;Proxmark3 RDV4&lt;/h2&gt; &#xA;&lt;p&gt;See the instruction links in the tables above to build, flash and run for your Proxmark3 RDV4 device.&lt;/p&gt; &#xA;&lt;h2&gt;Generic Proxmark3 platforms&lt;/h2&gt; &#xA;&lt;p&gt;In order to build this repo for generic Proxmark3 platforms we urge you to read &lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Use_of_Proxmark/4_Advanced-compilation-parameters.md&#34;&gt;Advanced compilation parameters&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We define generic Proxmark3 platforms as following devices.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Supported&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RDV1, RDV2, RDV3 easy&lt;/li&gt; &#xA; &lt;li&gt;Ryscorp green PCB version&lt;/li&gt; &#xA; &lt;li&gt;Radiowar black PCB version&lt;/li&gt; &#xA; &lt;li&gt;numerous Chinese adapted versions of the RDV3 easy (kkmoon, PiSwords etc)&lt;/li&gt; &#xA; &lt;li&gt;Proxmark3 SE (Special Edition) (BLE enabled)&lt;/li&gt; &#xA; &lt;li&gt;Proxmark3 X &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: Community tested&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: unknown device hw&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Not supported&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;⚠ Proxmark Evolution (EVO) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: unknown pin assignments.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;⚠ Ryscorp Proxmark3 Pro &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: device has different fpga and unknown pin assignments.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: Company have disappeared, leaving their customers in the dark.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Experimental support&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;⚠ iCopy-X &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: currently incompatible with iCopy-X GUI as Proxmark client commands using different syntax&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: see also &lt;a href=&#34;https://github.com/iCopy-X-Community/&#34;&gt;icopyx-community repos&lt;/a&gt; for upstream sources, reversed hw etc.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: Uses DRM to lock down tags, ignores the open source licences. Use on your own risk.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Unknown support status&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;⚠ VX &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: unknown device hw&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;⚠ Proxmark3 Ultimate &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: unknown device hw&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When it comes to these new unknown models we are depending on the community to report in if this repo works and what they did to make it work.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;256KB flash memory size of generic Proxmark3 platforms&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠ &lt;strong&gt;Note&lt;/strong&gt;: You need to keep a eye on how large your ARM chip built-in flash memory is. With 512KB you are fine but if its 256KB you need to compile this repo with even less functionality. When running the &lt;code&gt;./pm3-flash-all&lt;/code&gt; you can see which size your device have if you have the bootloader from this repo installed. Otherwise you will find the size reported in the start message when running the Proxmark3 client &lt;code&gt;./pm3&lt;/code&gt;.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Use_of_Proxmark/4_Advanced-compilation-parameters.md#256KB-versions&#34;&gt;OBS! Read the 256KB flash memory advisory&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;What has changed?&lt;/h1&gt; &#xA;&lt;p&gt;Proxmark3 RDV4 hardware modifications:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;added flash memory 256KB&lt;/li&gt; &#xA; &lt;li&gt;added smart card module&lt;/li&gt; &#xA; &lt;li&gt;added FPC connector for peripherals such as Bluetooth+battery addon&lt;/li&gt; &#xA; &lt;li&gt;improved antennas &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;swappable&lt;/li&gt; &#xA;   &lt;li&gt;LF Q factor switch&lt;/li&gt; &#xA;   &lt;li&gt;LF 125/134 frequency switch&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;tiny PCB form factor&lt;/li&gt; &#xA; &lt;li&gt;ABS case&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This repo vs official Proxmark3 repo:&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/CHANGELOG.md&#34;&gt;Changelog file&lt;/a&gt; which we try to keep updated.&lt;/p&gt; &#xA;&lt;p&gt;In short this repo gives you a completely different user experience when it comes to Proxmark3.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports command tab complete&lt;/li&gt; &#xA; &lt;li&gt;Richer CLI with use of colors / emojis&lt;/li&gt; &#xA; &lt;li&gt;Help text system implemented everywhere&lt;/li&gt; &#xA; &lt;li&gt;Hints system&lt;/li&gt; &#xA; &lt;li&gt;User preference settings&lt;/li&gt; &#xA; &lt;li&gt;Extensive testing with continuous integration build systems on Linux, OSX and Windows, and regular usage of static analysis tools like &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://scan.coverity.com/projects/proxmark3-rrg-iceman-repo/&#34;&gt;Coverity Scan&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Cppcheck (v2.6)&lt;/li&gt; &#xA;   &lt;li&gt;GCC and Clang aggressive enforcement of diagnostic flags&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Auto detection of serial ports and seamless integration with Bluetooth addon&lt;/li&gt; &#xA; &lt;li&gt;Reconnect to device from inside client&lt;/li&gt; &#xA; &lt;li&gt;Supports tearoff attacks&lt;/li&gt; &#xA; &lt;li&gt;Supports NFC NDEF type1, type2, type4a, type4b, mifare, barcode&lt;/li&gt; &#xA; &lt;li&gt;Supports pm3 client scripts, lua scripts, python scripts&lt;/li&gt; &#xA; &lt;li&gt;Most comprehensive collection of scripts available&lt;/li&gt; &#xA; &lt;li&gt;Wiegand encoding, decoding.&lt;/li&gt; &#xA; &lt;li&gt;Supports EMV&lt;/li&gt; &#xA; &lt;li&gt;Supports CIPURSE&lt;/li&gt; &#xA; &lt;li&gt;Most standalone modes available with easy compilation&lt;/li&gt; &#xA; &lt;li&gt;Extensive test script for client and external tools&lt;/li&gt; &#xA; &lt;li&gt;Most comprehensive compiled known keys dictionaries&lt;/li&gt; &#xA; &lt;li&gt;Slimed down usb communications with NG-frames&lt;/li&gt; &#xA; &lt;li&gt;The most compiled public known key recovery software&lt;/li&gt; &#xA; &lt;li&gt;The fastest implementations of said software&lt;/li&gt; &#xA; &lt;li&gt;Support multiple fileformats for dump files (BIN/EML/JSON)&lt;/li&gt; &#xA; &lt;li&gt;Interoperability of said fileformats with libnfc, MFC tool app etc&lt;/li&gt; &#xA; &lt;li&gt;Supports more RFID based protocols than ever&lt;/li&gt; &#xA; &lt;li&gt;Easy install for package maintainers, distro maintainers&lt;/li&gt; &#xA; &lt;li&gt;Supports cmake, make&lt;/li&gt; &#xA; &lt;li&gt;Builds without errors or warnings on more OS/platforms than ever&lt;/li&gt; &#xA; &lt;li&gt;Available as package on known distros like Gentoo, Kali, Termux, Macports, Homebrew&lt;/li&gt; &#xA; &lt;li&gt;Much more documentation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠ &lt;strong&gt;Note&lt;/strong&gt;: This is a bleeding edge repository. The maintainers actively is working out of this repository and will be periodically re-structuring the code to make it easier to comprehend, navigate, build, test, and contribute to, so &lt;strong&gt;DO expect significant changes to code layout on a regular basis&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;👉 &lt;strong&gt;Remember!&lt;/strong&gt; If you intend to contribute to the code, please read the &lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/CONTRIBUTING.md&#34;&gt;coding style notes&lt;/a&gt; first. We usually merge your contributions fast since we do like the idea of getting a functionality in the Proxmark3 and weed out the bugs afterwards.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/RfidResearchGroup/proxmark3/wiki/Public-Roadmap&#34;&gt;public roadmap&lt;/a&gt; is an excellent start to read if you are interesting in contributing.&lt;/p&gt; &#xA;&lt;h2&gt;Supported operative systems&lt;/h2&gt; &#xA;&lt;p&gt;This repo compiles nicely on&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WSL1 on Windows 10&lt;/li&gt; &#xA; &lt;li&gt;Proxspace environment &lt;a href=&#34;https://github.com/Gator96100/ProxSpace/releases&#34;&gt;release v3.xx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Windows/MinGW environment&lt;/li&gt; &#xA; &lt;li&gt;Ubuntu, ParrotOS, Gentoo, Pentoo, Kali, NetHunter, Arch Linux, Fedora, Debian, Raspbian&lt;/li&gt; &#xA; &lt;li&gt;Android / Termux&lt;/li&gt; &#xA; &lt;li&gt;macOS / Homebrew (or MacPorts, experimental) / Apple Silicon M1&lt;/li&gt; &#xA; &lt;li&gt;iOS (Jailbroken, rootful)&lt;/li&gt; &#xA; &lt;li&gt;Docker container &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/secopsconsult/proxmark3&#34;&gt; Iceman repo based ubuntu 18.04 container &lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/iceman1001/proxmark3/&#34;&gt; Iceman fork based container v1.7 &lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Precompiled binaries&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://www.proxmarkbuilds.org/&#34;&gt;Proxmark3 precompiled builds&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Proxmark3 GUI&lt;/h2&gt; &#xA;&lt;p&gt;The official PM3-GUI from Gaucho will not work. Not to mention is quite old and not maintained any longer.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/burma69/PM3UniversalGUI&#34;&gt;Proxmark3 Universal GUI&lt;/a&gt; will work more or less.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wh201906/Proxmark3GUI/&#34;&gt;Proxmark3 GUI cross-compiled&lt;/a&gt; which is recently updated and claims to support latest source of this repo.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Phreak87/Proxmark3_GUI&#34;&gt;Proxmark3_GUI&lt;/a&gt; simple gui in vb.net&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Official channels&lt;/h2&gt; &#xA;&lt;p&gt;Where do you find the community?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.ly/d4_C&#34;&gt;RFID Hacking community discord server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://web.libera.chat/?channels=#proxmark3&#34;&gt;Proxmark3 IRC channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/proxmark3/&#34;&gt;Proxmark3 sub reddit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.proxmark.org/forum/index.php&#34;&gt;Proxmark3 forum&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;p&gt;To all distro, package maintainers, we tried to make your life easier.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;make install&lt;/code&gt; is now available and if you want to know more.&lt;/p&gt; &#xA;&lt;p&gt;This document will be helpful for you&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/doc/md/Development/Maintainers.md&#34;&gt;Notes for maintainers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;Use this bibtex to cite this repository globally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@misc{proxmark3,&#xA;  author = {C. {Herrmann} and P. {Teuwen} and O. {Moiseenko} and M. {Walker} and others},&#xA;  title = {{Proxmark3 -- Iceman repo}},&#xA;  howpublished = {\url{https://github.com/RfidResearchGroup/proxmark3}},&#xA;  keywords = {rfid nfc iceman proxmark3 125khz 134khz 13.56mhz},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need to refer to a specific state of the repository, use a commit number or a date of access, e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  note = {Accessed: commit 12327f71a27da23831901847886aaf20e8ad3ca0}&#xA;  note = {Accessed: 2021-01-01}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Copyright and licensing terms&lt;/h2&gt; &#xA;&lt;p&gt;Each contribution is under the copyright of its author. See &lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/AUTHORS.md&#34;&gt;AUTHORS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The Proxmark3 source code is covered by the following licensing terms, usually referred as &lt;strong&gt;GPLv3 or later&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;This program is free software: you can redistribute it and/or modify&#xA;it under the terms of the GNU General Public License as published by&#xA;the Free Software Foundation, either version 3 of the License, or&#xA;(at your option) any later version.&#xA;&#xA;This program is distributed in the hope that it will be useful,&#xA;but WITHOUT ANY WARRANTY; without even the implied warranty of&#xA;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xA;GNU General Public License for more details.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A copy of the GPLv3 is available in &lt;a href=&#34;https://raw.githubusercontent.com/RfidResearchGroup/proxmark3/master/LICENSE.txt&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Some dependencies may be under other free licensing terms compatible with the Proxmark3 licensing terms, see their respective description.&lt;/p&gt;</summary>
  </entry>
</feed>