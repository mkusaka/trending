<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-01T01:44:02Z</updated>
  <subtitle>Monthly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fastfetch-cli/fastfetch</title>
    <updated>2024-06-01T01:44:02Z</updated>
    <id>tag:github.com,2024-06-01:/fastfetch-cli/fastfetch</id>
    <link href="https://github.com/fastfetch-cli/fastfetch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Like neofetch, but much faster because written mostly in C.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fastfetch&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/fastfetch-cli/fastfetch/ci.yml&#34; alt=&#34;GitHub Workflow Status (with event)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/raw/dev/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/fastfetch-cli/fastfetch&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/fastfetch-cli/fastfetch&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/raw/dev/CMakeLists.txt#L5&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/languages/top/fastfetch-cli/fastfetch?logo=c&amp;amp;label=&#34; alt=&#34;GitHub top language&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/commits&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/fastfetch-cli/fastfetch&#34; alt=&#34;GitHub commit activity (branch)&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://formulae.brew.sh/formula/fastfetch#default&#34;&gt;&lt;img src=&#34;https://img.shields.io/homebrew/installs/dm/fastfetch?logo=homebrew&#34; alt=&#34;homebrew downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/fastfetch-cli/fastfetch/total?logo=github&#34; alt=&#34;GitHub all releases&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/fastfetch-cli/fastfetch?logo=github&#34; alt=&#34;GitHub release (with filter)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://repology.org/project/fastfetch/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/latest-versions/fastfetch.svg?sanitize=true&#34; alt=&#34;latest packaged version(s)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://repology.org/project/fastfetch/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/tiny-repos/fastfetch.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Fastfetch is a &lt;a href=&#34;https://github.com/dylanaraps/neofetch&#34;&gt;neofetch&lt;/a&gt;-like tool for fetching system information and displaying them in a pretty way. It is written mainly in C, with performance and customizability in mind. Currently, Linux, Android, FreeBSD, MacOS and Windows 7+ are supported.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/fastfetch-cli/fastfetch/dev/screenshots/example1.png&#34; width=&#34;49%&#34; align=&#34;left&#34;&gt; &#xA;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/2/24/Transparent_Square_Tiles_Texture.png&#34; width=&#34;49%&#34; height=&#34;16px&#34; align=&#34;left&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/fastfetch-cli/fastfetch/dev/screenshots/example4.png&#34; width=&#34;49%&#34; align=&#34;left&#34;&gt; &#xA;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/2/24/Transparent_Square_Tiles_Texture.png&#34; width=&#34;49%&#34; height=&#34;16px&#34; align=&#34;left&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/fastfetch-cli/fastfetch/dev/screenshots/example2.png&#34; width=&#34;48%&#34; align=&#34;top&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/fastfetch-cli/fastfetch/dev/screenshots/example3.png&#34; width=&#34;48%&#34; align=&#34;top&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/fastfetch-cli/fastfetch/dev/screenshots/example5.png&#34; height=&#34;15%&#34; align=&#34;top&#34;&gt; &#xA;&lt;p&gt;There are &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/wiki&#34;&gt;screenshots on different platforms&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;p&gt;Some distros packaged an outdated fastfetch version. Older version is not supported, please always ensure that the latest version is used.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ubuntu: &lt;a href=&#34;https://launchpad.net/~zhangsongcui3371/+archive/ubuntu/fastfetch&#34;&gt;&lt;code&gt;ppa:zhangsongcui3371/fastfetch&lt;/code&gt;&lt;/a&gt; (for Ubuntu 22.04 or newer)&lt;/li&gt; &#xA; &lt;li&gt;Debian / Ubuntu: Download &lt;code&gt;fastfetch-linux-&amp;lt;proper architecture&amp;gt;.deb&lt;/code&gt; from &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/releases/latest&#34;&gt;Github release page&lt;/a&gt; and double-click it (for Ubuntu 20.04 or newer and Debian 11 or newer).&lt;/li&gt; &#xA; &lt;li&gt;Arch Linux: &lt;code&gt;sudo pacman -S fastfetch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fedora: &lt;code&gt;sudo dnf install fastfetch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gentoo: &lt;code&gt;sudo emerge --ask app-misc/fastfetch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Alpine: &lt;code&gt;apk add --upgrade fastfetch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;NixOS: &lt;code&gt;nix-shell -p fastfetch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;openSUSE: &lt;code&gt;sudo zypper install fastfetch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;ALT Linux: &lt;code&gt;sudo apt-get install fastfetch&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Replace sudo with doas depending on what you use.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fastfetch-cli/fastfetch/dev/#Packaging&#34;&gt;See also if fastfetch has been packaged for your favorite Linux distro&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If fastfetch is not packaged for your distro or an outdated version is packaged, &lt;a href=&#34;https://brew.sh/&#34;&gt;linuxbrew&lt;/a&gt; is a good alternative: &lt;code&gt;brew install fastfetch&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://formulae.brew.sh/formula/fastfetch#default&#34;&gt;HomeBrew&lt;/a&gt;: &lt;code&gt;brew install fastfetch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ports.macports.org/port/fastfetch/&#34;&gt;MacPorts&lt;/a&gt;: &lt;code&gt;sudo port install fastfetch&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://scoop.sh/#/apps?q=fastfetch&#34;&gt;scoop&lt;/a&gt;: &lt;code&gt;scoop install fastfetch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/winget-pkgs/tree/master/manifests/f/Fastfetch-cli/Fastfetch&#34;&gt;winget&lt;/a&gt;: &lt;code&gt;winget install fastfetch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/msys2/MINGW-packages/tree/master/mingw-w64-fastfetch&#34;&gt;MSYS2 MinGW&lt;/a&gt;: &lt;code&gt;pacman -S mingw-w64-&amp;lt;subsystem&amp;gt;-&amp;lt;arch&amp;gt;-fastfetch&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You may also download it directly from &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/releases/latest&#34;&gt;GitHub releases page&lt;/a&gt; and extract the archive.&lt;/p&gt; &#xA;&lt;h3&gt;FreeBSD&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;pkg install fastfetch&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Android (Termux)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;pkg install fastfetch&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build from source&lt;/h2&gt; &#xA;&lt;p&gt;See Wiki: &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/wiki/Building&#34;&gt;https://github.com/fastfetch-cli/fastfetch/wiki/Building&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run it with default configuration: &lt;code&gt;fastfetch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run it with &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/wiki/Support+Status#available-modules&#34;&gt;all supported modules&lt;/a&gt; and find what you interest: &lt;code&gt;fastfetch -c all.jsonc&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Find all data that fastfetch detects: &lt;code&gt;fastfetch -s &amp;lt;module&amp;gt; --format json&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Display help messages: &lt;code&gt;fastfetch --help&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Generate config file based on command line arguments: &lt;code&gt;fastfetch --arg1 --arg2 --gen-config&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Customization&lt;/h2&gt; &#xA;&lt;p&gt;Fastfetch uses the JSONC (or JSON with comments) for configuration. &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/wiki/Configuration&#34;&gt;See Wiki for detail&lt;/a&gt;. There are some premade config files in &lt;a href=&#34;https://raw.githubusercontent.com/fastfetch-cli/fastfetch/dev/presets&#34;&gt;&lt;code&gt;presets&lt;/code&gt;&lt;/a&gt;, including the ones used for the screenshots above. You can load them using &lt;code&gt;-c &amp;lt;filename&amp;gt;&lt;/code&gt;. They may also serve as a good example for format arguments.&lt;/p&gt; &#xA;&lt;p&gt;Logos can be heavily customized too; see the &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/wiki/Logo-options&#34;&gt;logo documentation&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Packaging&lt;/h2&gt; &#xA;&lt;h3&gt;Repositories&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/fastfetch/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/fastfetch.svg?header=&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Manual&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DEB / RPM package: &lt;code&gt;cmake --build . --target package&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install directly: &lt;code&gt;cmake --install . --prefix /usr/local&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Q: Neofetch is good enough. Why do I need fastfetch?&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fastfetch is actively maintained.&lt;/li&gt; &#xA; &lt;li&gt;Fastfetch is faster. As the name suggests.&lt;/li&gt; &#xA; &lt;li&gt;Fastfetch is more feature-rich. By default fastfetch only has a few modules enabled. Use &lt;code&gt;fastfetch -c all&lt;/code&gt; to find what you want.&lt;/li&gt; &#xA; &lt;li&gt;Fastfetch is more configurable. You can find more information in the Wiki: &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/wiki/Configuration&#34;&gt;https://github.com/fastfetch-cli/fastfetch/wiki/Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fastfetch is more polished. For example, neofetch prints &lt;code&gt;555MiB&lt;/code&gt; in &lt;code&gt;Memory&lt;/code&gt; module and &lt;code&gt;23G&lt;/code&gt; in &lt;code&gt;Disk&lt;/code&gt; module (notibily the difference of &lt;code&gt;MiB&lt;/code&gt; and &lt;code&gt;G&lt;/code&gt;), while fastfetch prints &lt;code&gt;555.00 MiB&lt;/code&gt; and &lt;code&gt;22.97 GiB&lt;/code&gt; respectively.&lt;/li&gt; &#xA; &lt;li&gt;Fastfetch is more accurate. For example, &lt;a href=&#34;https://github.com/dylanaraps/neofetch/pull/2395&#34;&gt;neofetch never actually supports Wayland protocol&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Q: Fastfetch shows my local IP address. It leaks my privacy!&lt;/h3&gt; &#xA;&lt;p&gt;A local IP (10.x.x.x, 172.x.x.x, 192.168.x.x) has nothing to do with privacy. It only makes sense if you are on the same network, for example, if you connect to the same Wi-Fi network.&lt;/p&gt; &#xA;&lt;p&gt;Actually the &lt;code&gt;Local IP&lt;/code&gt; module is the most useful module for me personally. I (@CarterLi) have several VMs installed to test fastfetch and often need to SSH into them. I have fastfetch running on shell startup and I never need to type &lt;code&gt;ip addr&lt;/code&gt; manually.&lt;/p&gt; &#xA;&lt;p&gt;If you really don&#39;t like it, you can disable the &lt;code&gt;Local IP&lt;/code&gt; module in &lt;code&gt;config.jsonc&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Q: Where is the config file? I can&#39;t find it.&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;Fastfetch&lt;/code&gt; don&#39;t generate config file automatically. You can use &lt;code&gt;fastfetch --gen-config&lt;/code&gt; to generate one. The config file will be saved in &lt;code&gt;~/.config/fastfetch/config.jsonc&lt;/code&gt; by default. See &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/wiki/Configuration&#34;&gt;Wiki for detail&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Q: The configuration is so complex. Where is the documentation?&lt;/h3&gt; &#xA;&lt;p&gt;Fastfetch uses JSON (with comments) for configuration. I suggest you use an IDE with JSON schema support (like VSCode) to edit it.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can refer to the presets in &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/tree/dev/presets&#34;&gt;&lt;code&gt;presets&lt;/code&gt; directory&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Q: I WANT THE DOCUMENTATION!&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/wiki/Json-Schema&#34;&gt;Here is the documentation&lt;/a&gt;. It is generated from &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/raw/dev/doc/json_schema.json&#34;&gt;JSON schema&lt;/a&gt; but you won&#39;t like it.&lt;/p&gt; &#xA;&lt;h3&gt;Q: How can I customize the module output?&lt;/h3&gt; &#xA;&lt;p&gt;Fastfetch uses &lt;code&gt;format&lt;/code&gt; to generate output. For example to make &lt;code&gt;GPU&lt;/code&gt; module show GPU name only and ignore other information, you can use&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsonc&#34;&gt;{&#xA;    &#34;modules&#34;: [&#xA;        {&#xA;            &#34;type&#34;: &#34;gpu&#34;,&#xA;            &#34;format&#34;: &#34;{2}&#34; // See `fastfetch -h gpu-format` for detail&#xA;        }&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which is equivalent to &lt;code&gt;fastfetch -s gpu --gpu-format &#39;{2}&#39;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;code&gt;fastfetch -h format&lt;/code&gt; for basic usage. For module specific formattion, see &lt;code&gt;fastfetch -h &amp;lt;module&amp;gt;-format&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Q: I have my own ascii-art / image file. How can I show it with fastfetch?&lt;/h3&gt; &#xA;&lt;p&gt;Try &lt;code&gt;fastfetch -l /path/to/logo&lt;/code&gt;. See &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/wiki/Logo-options&#34;&gt;logo documentation&lt;/a&gt; for detail.&lt;/p&gt; &#xA;&lt;p&gt;If you just want to display distro name in &lt;a href=&#34;https://github.com/pwaller/pyfiglet&#34;&gt;FIGlet text&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# install pyfiglet and jq first&#xA;pyfiglet -s -f small_slant $(fastfetch -s os --format json | jq -r &#39;.[0].result.name&#39;) &amp;amp;&amp;amp; fastfetch -l none&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/fastfetch-cli/fastfetch/assets/6134068/6466524e-ab8c-484f-848d-eec7ddeb7df2&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Q: Fastfetch runs in white and black on shell startup. Why?&lt;/h3&gt; &#xA;&lt;p&gt;This issue usually happens when using fastfetch with &lt;code&gt;p10k&lt;/code&gt;. There are known incompatibility between fastfetch and p10k instant prompt. The p10k doc clearly states that you should NOT print anything to stdout after &lt;code&gt;p10k-instant-prompt&lt;/code&gt; is initialized. You should either put &lt;code&gt;fastfetch&lt;/code&gt; before initialization of &lt;code&gt;p10k-instant-prompt&lt;/code&gt; (recommended)&lt;/p&gt; &#xA;&lt;p&gt;You can always use &lt;code&gt;fastfetch --pipe false&lt;/code&gt; to force fastfetch running in colorful mode.&lt;/p&gt; &#xA;&lt;h3&gt;Q: I want feature A / B / C. Will fastfetch support it?&lt;/h3&gt; &#xA;&lt;p&gt;Fastfetch is a system information tool. We only accept hardware or system level software feature requests. For most personal uses, I recommend using &lt;code&gt;Command&lt;/code&gt; module to detect it yourself, which can be used to grab output from a custom shell script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsonc&#34;&gt;// This module shows the default editor&#xA;{&#xA;    &#34;modules&#34;: [&#xA;        {&#xA;            &#34;type&#34;: &#34;command&#34;,&#xA;            &#34;text&#34;: &#34;$EDITOR --version | head -1&#34;,&#xA;            &#34;key&#34;: &#34;Editor&#34;&#xA;        }&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Otherwise, open a feature request in &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/issues&#34;&gt;GitHub Issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Q: I have questions. Where can I get help?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For usage questions, please start a discussion in &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For possible bugs, please open an issue in &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/issues&#34;&gt;GitHub Issues&lt;/a&gt;. Be sure to fill the bug-report template carefully for developers to investigate.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;Give it a star to support us!&lt;/p&gt; &#xA;&lt;a href=&#34;https://star-history.com/#fastfetch-cli/fastfetch&amp;amp;Date&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=fastfetch-cli/fastfetch&amp;amp;type=Date&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=fastfetch-cli/fastfetch&amp;amp;type=Date&#34;&gt; &#xA;  &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=fastfetch-cli/fastfetch&amp;amp;type=Date&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>cloudwu/skynet</title>
    <updated>2024-06-01T01:44:02Z</updated>
    <id>tag:github.com,2024-06-01:/cloudwu/skynet</id>
    <link href="https://github.com/cloudwu/skynet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A lightweight online game framework&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;img src=&#34;https://github.com/cloudwu/skynet/wiki/image/skynet_metro.jpg&#34; alt=&#34;skynet logo&#34;&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Skynet is a multi-user Lua framework supporting the actor model, often used in games.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cloudwu/skynet/wiki/Uses&#34;&gt;It is heavily used in the Chinese game industry&lt;/a&gt;, but is also now spreading to other industries, and to English-centric developers. To visit related sites, visit the Chinese pages using something like Google or Deepl translate.&lt;/p&gt; &#xA;&lt;p&gt;The community is friendly and almost all contributors can speak English, so English speakers are welcome to ask questions in &lt;a href=&#34;https://github.com/cloudwu/skynet/discussions&#34;&gt;Discussion&lt;/a&gt;, or submit issues in English.&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;p&gt;For Linux, install autoconf first for jemalloc:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/cloudwu/skynet.git&#xA;cd skynet&#xA;make &#39;PLATFORM&#39;  # PLATFORM can be linux, macosx, freebsd now&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export PLAT=linux&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For FreeBSD , use gmake instead of make.&lt;/p&gt; &#xA;&lt;h2&gt;Test&lt;/h2&gt; &#xA;&lt;p&gt;Run these in different consoles:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./skynet examples/config&#x9;# Launch first skynet node  (Gate server) and a skynet-master (see config for standalone option)&#xA;./3rd/lua/lua examples/client.lua &#x9;# Launch a client, and try to input hello.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;About Lua version&lt;/h2&gt; &#xA;&lt;p&gt;Skynet now uses a modified version of lua 5.4.6 ( &lt;a href=&#34;https://github.com/ejoy/lua/tree/skynet54&#34;&gt;https://github.com/ejoy/lua/tree/skynet54&lt;/a&gt; ) for multiple lua states.&lt;/p&gt; &#xA;&lt;p&gt;Official Lua versions can also be used as long as the Makefile is edited.&lt;/p&gt; &#xA;&lt;h2&gt;How To Use&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Read Wiki for documents &lt;a href=&#34;https://github.com/cloudwu/skynet/wiki&#34;&gt;https://github.com/cloudwu/skynet/wiki&lt;/a&gt; (Written in both English and Chinese)&lt;/li&gt; &#xA; &lt;li&gt;The FAQ in wiki &lt;a href=&#34;https://github.com/cloudwu/skynet/wiki/FAQ&#34;&gt;https://github.com/cloudwu/skynet/wiki/FAQ&lt;/a&gt; (In Chinese, but you can visit them using something like Google or Deepl translate.)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>witnessmenow/ESP32-Cheap-Yellow-Display</title>
    <updated>2024-06-01T01:44:02Z</updated>
    <id>tag:github.com,2024-06-01:/witnessmenow/ESP32-Cheap-Yellow-Display</id>
    <link href="https://github.com/witnessmenow/ESP32-Cheap-Yellow-Display" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Building a community around a cheap ESP32 Display with a touch screen&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ESP32-Cheap-Yellow-Display&lt;/h1&gt; &#xA;&lt;p&gt;There is an ESP32 with a built in 320 x 240 2.8&#34; LCD display with a touch screen called the &#34;ESP32-2432S028R&#34;, since this doesn&#39;t roll of the tongue, I propose it should be renamed the &#34;Cheap Yellow Display&#34; or CYD for short. This display is only about $15 delivered so I think it&#39;s really good value.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/witnessmenow/ESP32-Cheap-Yellow-Display/assets/1562562/76c3d481-2523-4b6f-881c-2e29f9368cd0&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;The CYD has the following features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ESP32 (With Wifi and Bluetooth)&lt;/li&gt; &#xA; &lt;li&gt;320 x 240 LCD Display (2.8&#34;)&lt;/li&gt; &#xA; &lt;li&gt;Touch Screen (Resistive)&lt;/li&gt; &#xA; &lt;li&gt;USB for powering and programming&lt;/li&gt; &#xA; &lt;li&gt;SD Card Slot, LED and some additional pins broken out&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Who is it good for?&lt;/h2&gt; &#xA;&lt;p&gt;I think it&#39;s useful for the following types of people:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;People just getting started with working hardware&lt;/strong&gt; - as everything is already connected, there is no soldering or additional components required&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;People who are familiar with working with hardware, but are lazy&lt;/strong&gt; - (like me) Sometimes you just want to build a project without having to assemble any hardware&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;People who aren&#39;t really looking to learn anything, but just want to build some cool things&lt;/strong&gt; - More about this later.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is the purpose of this page?&lt;/h2&gt; &#xA;&lt;p&gt;So this is pretty nice hardware and a cheap price, but the software instructions/support around it is pretty poor. Just a single link to a zip file on a random website.&lt;/p&gt; &#xA;&lt;p&gt;A couple of years ago I released the &lt;a href=&#34;https://github.com/witnessmenow/ESP32-Trinity&#34;&gt;ESP32 Trinity&lt;/a&gt;, which is an open source ESP32 board for controlling Matrix panels. I think the main benefit people get out of the work I did on the Trinty is not the hardware, but the documentation, example code and ready to go projects.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;m no longer creating hardware products, but I think it would be interesting if we could create the same kind of community around this display, where people can share examples and projects made for this display.&lt;/p&gt; &#xA;&lt;h2&gt;How do I know if a display is a CYD?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://www.plantuml.com/plantuml/png/RP0nJyCm48Nt_8gZNIb3fge3LD2b2q92235UamDRE7PaNuhyxxda7DGgJBs-zxtSE-yJO-IXSzKD6-e8UeVMLyQs1DJrdA6br4JRims-4fW9LiS4bY6JS-47qBTWC052QvEayyCAvA-wS-8vi01F7mS8SVevOxJeUK9zu55QzzP_Nw-exxPmz8tHJzRRsJq4cdo3Pu98oIQsCd4O6WDIbyXF4LN-JNMsYG7UNXyXUAUTLHDfqVeMJWClUfSPrY_OOyPtO_ivUPcfnoMV3iyXJh4cj_MGJd8lEleQkvQKi9TYUT_DvbukXnraIfTQURMT39Nu8kcrXInIwQYO-gCyNwgm6al-ZneTNIRqjLokqS2UV3jqxXS0&#34; alt=&#34;CYD decision tree&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Where to buy?&lt;/h2&gt; &#xA;&lt;p&gt;Buy from wherever works out cheapest for you:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://s.click.aliexpress.com/e/_DkSpIjB&#34;&gt;Aliexpress*&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://s.click.aliexpress.com/e/_DkcmuCh&#34;&gt;Aliexpress*&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.aliexpress.com/item/1005004502250619.html&#34;&gt;Aliexpress&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.makerfabs.com/sunton-esp32-2-8-inch-tft-with-touch.html&#34;&gt;Makerfabs&lt;/a&gt; - Seems to come with a 16GB SD card. Makerfabs also stock my &lt;a href=&#34;https://github.com/witnessmenow/ESP32-Trinity&#34;&gt;ESP32 Trinity&lt;/a&gt; (NOTE there will be import due in the EU from makerfabs)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;* = Affiliate Link&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started With Your CYD&lt;/h2&gt; &#xA;&lt;p&gt;For details on how to get started with your CYD, please check out the &lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/SETUP.md&#34;&gt;Setup and Configuration&lt;/a&gt; page&lt;/p&gt; &#xA;&lt;h2&gt;Code Examples&lt;/h2&gt; &#xA;&lt;h3&gt;The Basics&lt;/h3&gt; &#xA;&lt;p&gt;A collection of examples demonstrating how to use the different features of the CYD, this is a good place to get started. &lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/Examples/Basics&#34;&gt;Check them out here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Alternative Display Libraries&lt;/h3&gt; &#xA;&lt;p&gt;The basics examples are based on the TFT_eSPI display library, but the CYD also works with other display libraries too. Here is some example code if you prefer to use an alternative Arduino library. &lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/Examples/AlternativeLibraries&#34;&gt;Check them out here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ESPHome&lt;/h3&gt; &#xA;&lt;p&gt;Some examples for using the CYD in ESPHome. &lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/Examples/ESPHome&#34;&gt;Check them out here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Additional Info and Links&lt;/h2&gt; &#xA;&lt;h3&gt;Discord&lt;/h3&gt; &#xA;&lt;p&gt;Join the CYD discussion on &lt;a href=&#34;https://discord.gg/nnezpvq&#34;&gt;my Discord channel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3DPrinting&lt;/h3&gt; &#xA;&lt;p&gt;Some examples of 3D printed stands and cases. &lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/3dModels&#34;&gt;Check them out here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Pin Information&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/PINS.md&#34;&gt;This page&lt;/a&gt; contains information about what pins are used where, and what ones are free to use.&lt;/p&gt; &#xA;&lt;h3&gt;Add-ons&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/ADDONS.md&#34;&gt;This page&lt;/a&gt; contains information about additional hardware add-ons that can add functionality to your CYD&lt;/p&gt; &#xA;&lt;h3&gt;Troubleshooting&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/TROUBLESHOOTING.md&#34;&gt;This page&lt;/a&gt; contains information about how to troubleshoot your CYD device&lt;/p&gt; &#xA;&lt;h3&gt;Hardware Mods&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/Mods/README.md&#34;&gt;This page&lt;/a&gt; contains information about some hardware mods that can be performed on the CYD to improve or change some of its functionality&lt;/p&gt; &#xA;&lt;h3&gt;Media and Video Mentions&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/MEDIA.md&#34;&gt;This page&lt;/a&gt; lists any times the CYD project was mentioned somewhere!&lt;/p&gt; &#xA;&lt;h2&gt;License Info&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed as MIT as per the &lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/LICENSE&#34;&gt;license file&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The one exception to this is the &lt;a href=&#34;https://raw.githubusercontent.com/witnessmenow/ESP32-Cheap-Yellow-Display/main/OriginalDocumentation/&#34;&gt;OriginalDocumentation&lt;/a&gt; folder, that I do not have the right to license&lt;/p&gt; &#xA;&lt;h2&gt;Other Languages&lt;/h2&gt; &#xA;&lt;p&gt;Some members of the community have ported some of this information to other languages!&lt;/p&gt; &#xA;&lt;p&gt;Please note: I can&#39;t gaurantee the accuracy of the translation, how up to date they are or the content on them in general.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/usini/ESP32-Cheap-Yellow-Display-Documentation-FR&#34;&gt;French / Française&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/paelzer/ESP32-Cheap-Yellow-Display-Documentation-DE&#34;&gt;German / Deutsch&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you would like to contribure a translation, please name the repo with the language name or code in the repo name and you can link it here.&lt;/p&gt; &#xA;&lt;h2&gt;Help Support what I do!&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/witnessmenow/&#34;&gt;If you enjoy my work, please consider becoming a Github sponsor!&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>