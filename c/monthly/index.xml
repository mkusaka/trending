<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-01T01:58:38Z</updated>
  <subtitle>Monthly Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>apache/nuttx</title>
    <updated>2023-11-01T01:58:38Z</updated>
    <id>tag:github.com,2023-11-01:/apache/nuttx</id>
    <link href="https://github.com/apache/nuttx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache NuttX is a mature, real-time embedded operating system (RTOS)&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/apache/nuttx/master/Documentation/_static/NuttX320.png&#34; width=&#34;175&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/POSIX-Compliant-brightgreen?style=flat&amp;amp;label=POSIX&#34; alt=&#34;POSIX Badge&#34;&gt; &lt;a href=&#34;https://nuttx.apache.org/docs/latest/introduction/licensing.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/issue_track-github-blue?style=flat&amp;amp;label=Issue%20Tracking&#34; alt=&#34;Issues Tracking Badge&#34;&gt; &lt;a href=&#34;https://github.com/apache/nuttx/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/apache/nuttx&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/nuttx/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/apache/nuttx/workflows/Build/badge.svg?sanitize=true&#34; alt=&#34;GitHub Build Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://nuttx.apache.org/docs/latest/index.html&#34;&gt;&lt;img src=&#34;https://github.com/apache/nuttx/workflows/Build%20Documentation/badge.svg?sanitize=true&#34; alt=&#34;Documentation Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Apache NuttX is a real-time operating system (RTOS) with an emphasis on standards compliance and small footprint. Scalable from 8-bit to 64-bit microcontroller environments, the primary governing standards in NuttX are POSIX and ANSI standards. Additional standard APIs from Unix and other common RTOSs (such as VxWorks) are adopted for functionality not available under these standards, or for functionality that is not appropriate for deeply-embedded environments (such as fork()).&lt;/p&gt; &#xA;&lt;p&gt;For brevity, many parts of the documentation will refer to Apache NuttX as simply NuttX.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;First time on NuttX? Read the &lt;a href=&#34;https://nuttx.apache.org/docs/latest/quickstart/index.html&#34;&gt;Getting Started&lt;/a&gt; guide! If you don&#39;t have a board available, NuttX has its own simulator that you can run on terminal.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find the current NuttX documentation on the &lt;a href=&#34;https://nuttx.apache.org/docs/latest/&#34;&gt;Documentation Page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can build the documentation yourself by following the Documentation Build &lt;a href=&#34;https://nuttx.apache.org/docs/latest/contributing/documentation.html&#34;&gt;Instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The old NuttX documentation is still available in the &lt;a href=&#34;https://cwiki.apache.org/NUTTX/NuttX&#34;&gt;Apache wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Boards&lt;/h2&gt; &#xA;&lt;p&gt;NuttX supports a wide variety of platforms. See the full list on the &lt;a href=&#34;https://nuttx.apache.org/docs/latest/platforms/index.html&#34;&gt;Supported Platforms&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you wish to contribute to the NuttX project, read the &lt;a href=&#34;https://nuttx.apache.org/docs/latest/contributing/index.html&#34;&gt;Contributing&lt;/a&gt; guidelines for information on Git usage, coding standard, workflow and the NuttX principles.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The code in this repository is under either the Apache 2 license, or a license compatible with the Apache 2 license. See the &lt;a href=&#34;https://nuttx.apache.org/docs/latest/introduction/licensing.html&#34;&gt;License Page&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>openwrt/openwrt</title>
    <updated>2023-11-01T01:58:38Z</updated>
    <id>tag:github.com,2023-11-01:/openwrt/openwrt</id>
    <link href="https://github.com/openwrt/openwrt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository is a mirror of https://git.openwrt.org/openwrt/openwrt.git It is for reference only and is not active for check-ins. We will continue to accept Pull Requests here. They will be merged via staging trees then into openwrt.git.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/openwrt/openwrt/main/include/logo.png&#34; alt=&#34;OpenWrt logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;OpenWrt Project is a Linux operating system targeting embedded devices. Instead of trying to create a single, static firmware, OpenWrt provides a fully writable filesystem with package management. This frees you from the application selection and configuration provided by the vendor and allows you to customize the device through the use of packages to suit any application. For developers, OpenWrt is the framework to build an application without having to build a complete firmware around it; for users this means the ability for full customization, to use the device in ways never envisioned.&lt;/p&gt; &#xA;&lt;p&gt;Sunshine!&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Built firmware images are available for many architectures and come with a package selection to be used as WiFi home router. To quickly find a factory image usable to migrate from a vendor stock firmware to OpenWrt, try the &lt;em&gt;Firmware Selector&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firmware-selector.openwrt.org/&#34;&gt;OpenWrt Firmware Selector&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If your device is supported, please follow the &lt;strong&gt;Info&lt;/strong&gt; link to see install instructions or consult the support resources listed below.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;/h2&gt; &#xA;&lt;p&gt;An advanced user may require additional or specific package. (Toolchain, SDK, ...) For everything else than simple firmware download, try the wiki download page:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openwrt.org/downloads&#34;&gt;OpenWrt Wiki Download&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;To build your own firmware you need a GNU/Linux, BSD or MacOSX system (case sensitive filesystem required). Cygwin is unsupported because of the lack of a case sensitive file system.&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;You need the following tools to compile OpenWrt, the package names vary between distributions. A complete list with distribution specific packages is found in the &lt;a href=&#34;https://openwrt.org/docs/guide-developer/build-system/install-buildsystem&#34;&gt;Build System Setup&lt;/a&gt; documentation.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;binutils bzip2 diff find flex gawk gcc-6+ getopt grep install libc-dev libz-dev&#xA;make4.1+ perl python3.7+ rsync subversion unzip which&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Quickstart&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;./scripts/feeds update -a&lt;/code&gt; to obtain all the latest package definitions defined in feeds.conf / feeds.conf.default&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;./scripts/feeds install -a&lt;/code&gt; to install symlinks for all obtained packages into package/feeds/&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;make menuconfig&lt;/code&gt; to select your preferred configuration for the toolchain, target system &amp;amp; firmware packages.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;make&lt;/code&gt; to build your firmware. This will download all sources, build the cross-compile toolchain and then cross-compile the GNU/Linux kernel &amp;amp; all chosen applications for your target system.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Related Repositories&lt;/h3&gt; &#xA;&lt;p&gt;The main repository uses multiple sub-repositories to manage packages of different categories. All packages are installed via the OpenWrt package manager called &lt;code&gt;opkg&lt;/code&gt;. If you&#39;re looking to develop the web interface or port packages to OpenWrt, please find the fitting repository below.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openwrt/luci&#34;&gt;LuCI Web Interface&lt;/a&gt;: Modern and modular interface to control the device via a web browser.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openwrt/packages&#34;&gt;OpenWrt Packages&lt;/a&gt;: Community repository of ported packages.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openwrt/routing&#34;&gt;OpenWrt Routing&lt;/a&gt;: Packages specifically focused on (mesh) routing.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openwrt/video&#34;&gt;OpenWrt Video&lt;/a&gt;: Packages specifically focused on display servers and clients (Xorg and Wayland).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support Information&lt;/h2&gt; &#xA;&lt;p&gt;For a list of supported devices see the &lt;a href=&#34;https://openwrt.org/supported_devices&#34;&gt;OpenWrt Hardware Database&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openwrt.org/docs/guide-quick-start/start&#34;&gt;Quick Start Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openwrt.org/docs/guide-user/start&#34;&gt;User Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openwrt.org/docs/guide-developer/start&#34;&gt;Developer Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openwrt.org/docs/techref/start&#34;&gt;Technical Reference&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Support Community&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.openwrt.org&#34;&gt;Forum&lt;/a&gt;: For usage, projects, discussions and hardware advise.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://webchat.oftc.net/#openwrt&#34;&gt;Support Chat&lt;/a&gt;: Channel &lt;code&gt;#openwrt&lt;/code&gt; on &lt;strong&gt;oftc.net&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Developer Community&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bugs.openwrt.org&#34;&gt;Bug Reports&lt;/a&gt;: Report bugs in OpenWrt&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lists.openwrt.org/mailman/listinfo/openwrt-devel&#34;&gt;Dev Mailing List&lt;/a&gt;: Send patches&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://webchat.oftc.net/#openwrt-devel&#34;&gt;Dev Chat&lt;/a&gt;: Channel &lt;code&gt;#openwrt-devel&lt;/code&gt; on &lt;strong&gt;oftc.net&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;OpenWrt is licensed under GPL-2.0&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>madler/zlib</title>
    <updated>2023-11-01T01:58:38Z</updated>
    <id>tag:github.com,2023-11-01:/madler/zlib</id>
    <link href="https://github.com/madler/zlib" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A massively spiffy yet delicately unobtrusive compression library.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;ZLIB DATA COMPRESSION LIBRARY&lt;/p&gt; &#xA;&lt;p&gt;zlib 1.3.0.1 is a general purpose data compression library. All the code is thread safe. The data format used by the zlib library is described by RFCs (Request for Comments) 1950 to 1952 in the files &lt;a href=&#34;http://tools.ietf.org/html/rfc1950&#34;&gt;http://tools.ietf.org/html/rfc1950&lt;/a&gt; (zlib format), rfc1951 (deflate format) and rfc1952 (gzip format).&lt;/p&gt; &#xA;&lt;p&gt;All functions of the compression library are documented in the file zlib.h (volunteer to write man pages welcome, contact &lt;a href=&#34;mailto:zlib@gzip.org&#34;&gt;zlib@gzip.org&lt;/a&gt;). A usage example of the library is given in the file test/example.c which also tests that the library is working correctly. Another example is given in the file test/minigzip.c. The compression library itself is composed of all source files in the root directory.&lt;/p&gt; &#xA;&lt;p&gt;To compile all files and run the test program, follow the instructions given at the top of Makefile.in. In short &#34;./configure; make test&#34;, and if that goes well, &#34;make install&#34; should work for most flavors of Unix. For Windows, use one of the special makefiles in win32/ or contrib/vstudio/ . For VMS, use make_vms.com.&lt;/p&gt; &#xA;&lt;p&gt;Questions about zlib should be sent to &lt;a href=&#34;mailto:zlib@gzip.org&#34;&gt;zlib@gzip.org&lt;/a&gt;, or to Gilles Vollant &lt;a href=&#34;mailto:info@winimage.com&#34;&gt;info@winimage.com&lt;/a&gt; for the Windows DLL version. The zlib home page is &lt;a href=&#34;http://zlib.net/&#34;&gt;http://zlib.net/&lt;/a&gt; . Before reporting a problem, please check this site to verify that you have the latest version of zlib; otherwise get the latest version and check whether the problem still exists or not.&lt;/p&gt; &#xA;&lt;p&gt;PLEASE read the zlib FAQ &lt;a href=&#34;http://zlib.net/zlib_faq.html&#34;&gt;http://zlib.net/zlib_faq.html&lt;/a&gt; before asking for help.&lt;/p&gt; &#xA;&lt;p&gt;Mark Nelson &lt;a href=&#34;mailto:markn@ieee.org&#34;&gt;markn@ieee.org&lt;/a&gt; wrote an article about zlib for the Jan. 1997 issue of Dr. Dobb&#39;s Journal; a copy of the article is available at &lt;a href=&#34;https://marknelson.us/posts/1997/01/01/zlib-engine.html&#34;&gt;https://marknelson.us/posts/1997/01/01/zlib-engine.html&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;p&gt;The changes made in version 1.3.0.1 are documented in the file ChangeLog.&lt;/p&gt; &#xA;&lt;p&gt;Unsupported third party contributions are provided in directory contrib/ .&lt;/p&gt; &#xA;&lt;p&gt;zlib is available in Java using the java.util.zip package. Follow the API Documentation link at: &lt;a href=&#34;https://docs.oracle.com/search/?q=java.util.zip&#34;&gt;https://docs.oracle.com/search/?q=java.util.zip&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;p&gt;A Perl interface to zlib and bzip2 written by Paul Marquess &lt;a href=&#34;mailto:pmqs@cpan.org&#34;&gt;pmqs@cpan.org&lt;/a&gt; can be found at &lt;a href=&#34;https://github.com/pmqs/IO-Compress&#34;&gt;https://github.com/pmqs/IO-Compress&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;p&gt;A Python interface to zlib written by A.M. Kuchling &lt;a href=&#34;mailto:amk@amk.ca&#34;&gt;amk@amk.ca&lt;/a&gt; is available in Python 1.5 and later versions, see &lt;a href=&#34;http://docs.python.org/library/zlib.html&#34;&gt;http://docs.python.org/library/zlib.html&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;p&gt;zlib is built into tcl: &lt;a href=&#34;http://wiki.tcl.tk/4610&#34;&gt;http://wiki.tcl.tk/4610&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;p&gt;An experimental package to read and write files in .zip format, written on top of zlib by Gilles Vollant &lt;a href=&#34;mailto:info@winimage.com&#34;&gt;info@winimage.com&lt;/a&gt;, is available in the contrib/minizip directory of zlib.&lt;/p&gt; &#xA;&lt;p&gt;Notes for some targets:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;For Windows DLL versions, please see win32/DLL_FAQ.txt&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For 64-bit Irix, deflate.c must be compiled without any optimization. With -O, one libpng test fails. The test works in 32 bit mode (with the -n32 compiler flag). The compiler bug has been reported to SGI.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;zlib doesn&#39;t work with gcc 2.6.3 on a DEC 3000/300LX under OSF/1 2.1 it works when compiled with cc.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;On Digital Unix 4.0D (formerly OSF/1) on AlphaServer, the cc option -std1 is necessary to get gzprintf working correctly. This is done by configure.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;zlib doesn&#39;t work on HP-UX 9.05 with some versions of /bin/cc. It works with other compilers. Use &#34;make test&#34; to check your compiler.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;gzdopen is not supported on RISCOS or BEOS.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For PalmOs, see &lt;a href=&#34;http://palmzlib.sourceforge.net/&#34;&gt;http://palmzlib.sourceforge.net/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Acknowledgments:&lt;/p&gt; &#xA;&lt;p&gt;The deflate format used by zlib was defined by Phil Katz. The deflate and zlib specifications were written by L. Peter Deutsch. Thanks to all the people who reported problems and suggested various improvements in zlib; they are too numerous to cite here.&lt;/p&gt; &#xA;&lt;p&gt;Copyright notice:&lt;/p&gt; &#xA;&lt;p&gt;(C) 1995-2023 Jean-loup Gailly and Mark Adler&lt;/p&gt; &#xA;&lt;p&gt;This software is provided &#39;as-is&#39;, without any express or implied warranty. In no event will the authors be held liable for any damages arising from the use of this software.&lt;/p&gt; &#xA;&lt;p&gt;Permission is granted to anyone to use this software for any purpose, including commercial applications, and to alter it and redistribute it freely, subject to the following restrictions:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.&lt;/li&gt; &#xA; &lt;li&gt;Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.&lt;/li&gt; &#xA; &lt;li&gt;This notice may not be removed or altered from any source distribution.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Jean-loup Gailly Mark Adler &lt;a href=&#34;mailto:jloup@gzip.org&#34;&gt;jloup@gzip.org&lt;/a&gt; &lt;a href=&#34;mailto:madler@alumni.caltech.edu&#34;&gt;madler@alumni.caltech.edu&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you use the zlib library in a product, we would appreciate &lt;em&gt;not&lt;/em&gt; receiving lengthy legal documents to sign. The sources are provided for free but without warranty of any kind. The library has been entirely written by Jean-loup Gailly and Mark Adler; it does not include third-party code. We make all contributions to and distributions of this project solely in our personal capacity, and are not conveying any rights to any intellectual property of any third parties.&lt;/p&gt; &#xA;&lt;p&gt;If you redistribute modified sources, we would appreciate that you include in the file ChangeLog history information documenting your changes. Please read the FAQ for more information on the distribution of modified source versions.&lt;/p&gt;</summary>
  </entry>
</feed>