<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-12T01:33:26Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>alibaba/xquic</title>
    <updated>2022-11-12T01:33:26Z</updated>
    <id>tag:github.com,2022-11-12:/alibaba/xquic</id>
    <link href="https://github.com/alibaba/xquic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;XQUIC Library released by Alibaba is a cross-platform implementation of QUIC and HTTP/3 protocol.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;XQUIC&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/alibaba/xquic/main/docs/images/xquic_logo.png&#34; alt=&#34;xquic logo&#34;&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/license/alibaba/xquic&#34; alt=&#34;GitHub&#34;&gt; &lt;a href=&#34;https://github.com/alibaba/xquic/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/alibaba/xquic/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/alibaba/xquic/actions/workflows/codeql-analysis.yml&#34;&gt;&lt;img src=&#34;https://github.com/alibaba/xquic/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&#34; alt=&#34;CodeQL&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codacy.com/gh/alibaba/xquic/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=alibaba/xquic&amp;amp;utm_campaign=Badge_Grade&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Grade/485e758edd98409bb7a51cbb803838c4&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codacy.com/gh/alibaba/xquic/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=alibaba/xquic&amp;amp;utm_campaign=Badge_Coverage&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Coverage/485e758edd98409bb7a51cbb803838c4&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/platform-Android%20%7C%20iOS%20%7C%20Linux%20%7C%20macOS-blue&#34; alt=&#34;Platforms&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/xquic/main/docs/docs-zh/README-zh.md&#34;&gt;简体中文文档 README-zh-CN&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;XQUIC Library released by Alibaba is …&lt;/p&gt; &#xA;&lt;p&gt;… &lt;strong&gt;a client and server implementation of QUIC and HTTP/3 as specified by the IETF.&lt;/strong&gt; Currently supported QUIC versions are v1 and draft-29.&lt;/p&gt; &#xA;&lt;p&gt;… &lt;strong&gt;OS and platform agnostic.&lt;/strong&gt; It currently supports Android, iOS, Linux, macOS and Windows. Most of the code is used in our own products, and has been tested at scale on android, iOS apps, as well as servers.&lt;/p&gt; &#xA;&lt;p&gt;… &lt;strong&gt;still in active development.&lt;/strong&gt; &lt;a href=&#34;https://interop.seemann.io/&#34;&gt;Interoperability&lt;/a&gt; is regularly tested with other QUIC implementations.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc9000&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=RFC&amp;amp;message=9000&amp;amp;color=brightgreen&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://tools.ietf.org/html/rfc9001&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=RFC&amp;amp;message=9001&amp;amp;color=brightgreen&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://tools.ietf.org/html/rfc9002&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=RFC&amp;amp;message=9002&amp;amp;color=brightgreen&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://tools.ietf.org/html/rfc9114&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=RFC&amp;amp;message=9114&amp;amp;color=brightgreen&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://tools.ietf.org/html/rfc9204&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=RFC&amp;amp;message=9204&amp;amp;color=brightgreen&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tools.ietf.org/html/draft-ietf-quic-load-balancers-13&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=draft-13&amp;amp;message=QUIC-LB&amp;amp;color=9cf&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://tools.ietf.org/html/draft-ietf-quic-multipath-01&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=draft-01&amp;amp;message=Multipath-QUIC&amp;amp;color=9cf&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Standardized Features&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;All big features conforming with&amp;nbsp;&lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc9000&#34;&gt;RFC 9000&lt;/a&gt;, &lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc9001&#34;&gt;RFC9001&lt;/a&gt;, &lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc9002&#34;&gt;RFC9002&lt;/a&gt;, &lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc9114&#34;&gt;RFC9114&lt;/a&gt; and &lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc9204&#34;&gt;RFC9204&lt;/a&gt;, including the interface between QUIC and TLS, 0-RTT connection establishment, HTTP/3 and QPACK.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ALPN Extension conforming with &lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc7301&#34;&gt;RFC7301&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Not Yet Standardized Features&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://tools.ietf.org/html/draft-ietf-quic-multipath-01&#34;&gt;Multipath QUIC&lt;/a&gt; (beta version)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://tools.ietf.org/html/draft-ietf-quic-load-balancers-13&#34;&gt;QUIC-LB&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Library Features&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Pluggable congestion control: NewReno, Cubic, BBR and BBRv2, ...&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pluggable cryptography, integration with BoringSSL and BabaSSL&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Cross-platform implementation, support Android, iOS, Linux, macOS and Windows&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;To build XQUIC, you need&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CMake&lt;/li&gt; &#xA; &lt;li&gt;BoringSSL or BabaSSL&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To run test cases, you need&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;libevent&lt;/li&gt; &#xA; &lt;li&gt;CUnit&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;QuickStart Guide&lt;/h2&gt; &#xA;&lt;p&gt;XQUIC supports both BabaSSL and BoringSSL.&lt;/p&gt; &#xA;&lt;h3&gt;Build with BoringSSL&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# get XQUIC source code&#xA;git clone https://github.com/alibaba/xquic.git&#xA;cd xquic&#xA;&#xA;# get and build BoringSSL&#xA;git clone https://github.com/google/boringssl.git ./third_party/boringssl&#xA;cd ./third_party/boringssl&#xA;mkdir -p build &amp;amp;&amp;amp; cd build&#xA;cmake -DBUILD_SHARED_LIBS=0 -DCMAKE_C_FLAGS=&#34;-fPIC&#34; -DCMAKE_CXX_FLAGS=&#34;-fPIC&#34; ..&#xA;make ssl crypto&#xA;cd ..&#xA;SSL_TYPE_STR=&#34;boringssl&#34;&#xA;SSL_PATH_STR=&#34;${PWD}&#34;&#xA;SSL_INC_PATH_STR=&#34;${PWD}/include&#34;&#xA;SSL_LIB_PATH_STR=&#34;${PWD}/build/ssl/libssl.a;${PWD}/build/crypto/libcrypto.a&#34;&#xA;cd ../..&#xA;&#xA;# build XQUIC with BoringSSL&#xA;git submodule update --init --recursive&#xA;mkdir -p build; cd build&#xA;cmake -DGCOV=on -DCMAKE_BUILD_TYPE=Debug -DXQC_ENABLE_TESTING=1 -DXQC_SUPPORT_SENDMMSG_BUILD=1 -DXQC_ENABLE_EVENT_LOG=1 -DXQC_ENABLE_BBR2=1 -DXQC_DISABLE_RENO=0 -DSSL_TYPE=${SSL_TYPE_STR} -DSSL_PATH=${SSL_PATH_STR} -DSSL_INC_PATH=${SSL_INC_PATH_STR} -DSSL_LIB_PATH=${SSL_LIB_PATH_STR} ..&#xA;make -j&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build with BabaSSL&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# get XQUIC source code&#xA;git clone https://github.com/alibaba/xquic.git&#xA;cd xquic&#xA;&#xA;# get and build BabaSSL&#xA;git clone -b 8.3-stable https://github.com/Tongsuo-Project/Tongsuo.git ./third_party/babassl&#xA;cd ./third_party/babassl/&#xA;./config --prefix=/usr/local/babassl&#xA;make -j&#xA;SSL_TYPE_STR=&#34;babassl&#34;&#xA;SSL_PATH_STR=&#34;${PWD}&#34;&#xA;SSL_INC_PATH_STR=&#34;${PWD}/include&#34;&#xA;SSL_LIB_PATH_STR=&#34;${PWD}/libssl.a;${PWD}/libcrypto.a&#34;&#xA;cd -&#xA;&#xA;# build XQUIC with BabaSSL&#xA;git submodule update --init --recursive&#xA;mkdir -p build; cd build&#xA;cmake -DGCOV=on -DCMAKE_BUILD_TYPE=Debug -DXQC_ENABLE_TESTING=1 -DXQC_SUPPORT_SENDMMSG_BUILD=1 -DXQC_ENABLE_EVENT_LOG=1 -DXQC_ENABLE_BBR2=1 -DXQC_DISABLE_RENO=0 -DSSL_TYPE=${SSL_TYPE_STR} -DSSL_PATH=${SSL_PATH_STR} -DSSL_INC_PATH=${SSL_INC_PATH_STR} -DSSL_LIB_PATH=${SSL_LIB_PATH_STR} ..&#xA;make -j&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run testcases&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sh ../scripts/xquic_test.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;For using the API, see the &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/xquic/main/docs/API.md&#34;&gt;API docs&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For platform support details, see the &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/xquic/main/docs/Platforms.md&#34;&gt;Platforms docs&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For Chinese Simplified (zh-CN) translation of the IETF QUIC Protocol, see the Translation docs.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/xquic/main/docs/translation/rfc8999-invariants-zh.md&#34;&gt;RFC8999-invariants-zh&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/xquic/main/docs/translation/rfc9000-transport-zh.md&#34;&gt;RFC9000-transport-zh&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/xquic/main/docs/translation/rfc9001-tls-zh.md&#34;&gt;RFC9001-tls-zh&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/xquic/main/docs/translation/rfc9002-recovery-zh.md&#34;&gt;RFC9002-recovery-zh&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/xquic/main/docs/translation/draft-ietf-quic-http-34-zh.md&#34;&gt;draft-ietf-quic-http-34-zh&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/xquic/main/docs/translation/draft-ietf-quic-qpack-21-zh.md&#34;&gt;draft-ietf-quic-qpack-21-zh&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/xquic/main/docs/translation/rfc9221-datagram-zh.md&#34;&gt;RFC9221-datagram-zh&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For using event_log module, see the &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/xquic/main/docs/docs-zh/Event_log-zh.md&#34;&gt;Event_log module docs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For testing the library, see the &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/xquic/main/docs/docs-zh/Testing-zh.md&#34;&gt;Testing docs&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For other frequently asked questions, see the &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/xquic/main/docs/docs-zh/FAQ-zh.md&#34;&gt;FAQs&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/xquic/main/docs/docs-zh/Troubleshooting-zh.md&#34;&gt;Trouble Shooting Guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We would love for you to contribute to XQUIC and help make it even better than it is today! All types of contributions are encouraged and valued. Thanks to &lt;a href=&#34;https://github.com/alibaba/xquic/raw/main/CONTRIBUTING.md#all-contributors&#34;&gt;all contributors&lt;/a&gt;. See our &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/xquic/main/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;If you have any questions, please feel free to open a new Discussion topic in our &lt;a href=&#34;https://github.com/alibaba/xquic/discussions&#34;&gt;discussion forums&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;XQUIC is released under the Apache 2.0 License.&lt;/p&gt; &#xA;&lt;h2&gt;Contact Us&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to contact us in the following ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;e-mail: &lt;a href=&#34;mailto:xquic@alibaba-inc.com&#34;&gt;xquic@alibaba-inc.com&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Dingtalk group: 34059705&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;slack channel: #xquic in quicdev group&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alibaba/xquic/main/docs/images/dingtalk_group.jpg&#34; width=&#34;200&#34; alt=&#34;dingtalk group&#34;&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>LillieH001/YouTube-Reborn</title>
    <updated>2022-11-12T01:33:26Z</updated>
    <id>tag:github.com,2022-11-12:/LillieH001/YouTube-Reborn</id>
    <link href="https://github.com/LillieH001/YouTube-Reborn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;YouTube Reborn&lt;/h1&gt; &#xA;&lt;p&gt;My personal YouTube customizer for non-jb and jb, works on iOS 14-16 and supports the latest YouTube version.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Patreon: &lt;a href=&#34;https://www.patreon.com/lillieweeb&#34;&gt;Patreon&lt;/a&gt;&lt;br&gt; Discord: &lt;a href=&#34;https://lillieh001.github.io/discord/youtuberebornv4.html&#34;&gt;Invite&lt;/a&gt;&lt;br&gt; Reddit: &lt;a href=&#34;https://www.reddit.com/r/YouTubeReborn/&#34;&gt;Subreddit&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Non-Jailbreak Download&lt;/p&gt; &#xA;&lt;p&gt;Ipa (4.0.8): &lt;a href=&#34;https://github.com/LillieH001/YouTube-Reborn/releases/download/4.0.8/YouTube.Reborn.v4.0.8.ipa&#34;&gt;Download&lt;/a&gt;&lt;br&gt; AltStore Repo: &lt;a href=&#34;https://lillieh001.github.io/altstore/&#34;&gt;AltStore Repo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Jailbreak Download&lt;/p&gt; &#xA;&lt;p&gt;Jailbreak Repo: &lt;a href=&#34;https://lillieh001.github.io/repo/&#34;&gt;Jailbreak Repo&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>deepmind/mujoco</title>
    <updated>2022-11-12T01:33:26Z</updated>
    <id>tag:github.com,2022-11-12:/deepmind/mujoco</id>
    <link href="https://github.com/deepmind/mujoco" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Multi-Joint dynamics with Contact. A general purpose physics simulator.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt; &lt;a href=&#34;https://raw.githubusercontent.com/deepmind/mujoco/main/#&#34;&gt;&lt;img alt=&#34;MuJoCo&#34; src=&#34;https://raw.githubusercontent.com/deepmind/mujoco/main/banner.png&#34; width=&#34;100%&#34;&gt;&lt;/a&gt; &lt;/h1&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://github.com/deepmind/mujoco/actions/workflows/build.yml?query=branch%3Amain&#34; alt=&#34;GitHub Actions&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/workflow/status/deepmind/mujoco/build/main&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://mujoco.readthedocs.io/&#34; alt=&#34;Documentation&#34;&gt; &lt;img src=&#34;https://readthedocs.org/projects/mujoco/badge/?version=latest&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/deepmind/mujoco/raw/main/LICENSE&#34; alt=&#34;License&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/deepmind/mujoco&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;MuJoCo&lt;/strong&gt; stands for &lt;strong&gt;Mu&lt;/strong&gt;lti-&lt;strong&gt;Jo&lt;/strong&gt;int dynamics with &lt;strong&gt;Co&lt;/strong&gt;ntact. It is a general purpose physics engine that aims to facilitate research and development in robotics, biomechanics, graphics and animation, machine learning, and other areas which demand fast and accurate simulation of articulated structures interacting with their environment.&lt;/p&gt; &#xA;&lt;p&gt;This repository is maintained by DeepMind, please see our &lt;a href=&#34;https://www.deepmind.com/blog/opening-up-a-physics-simulator-for-robotics&#34;&gt;acquisition&lt;/a&gt; and &lt;a href=&#34;https://www.deepmind.com/blog/open-sourcing-mujoco&#34;&gt;open sourcing&lt;/a&gt; announcements.&lt;/p&gt; &#xA;&lt;p&gt;MuJoCo has a C API and is intended for researchers and developers. The runtime simulation module is tuned to maximize performance and operates on low-level data structures that are preallocated by the built-in XML compiler. The library includes interactive visualization with a native GUI, rendered in OpenGL. MuJoCo further exposes a large number of utility functions for computing physics-related quantities. We also provide Python bindings and a plug-in for the &lt;a href=&#34;https://unity.com/&#34;&gt;Unity&lt;/a&gt; game engine.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Prebuilt binaries&lt;/h3&gt; &#xA;&lt;p&gt;Versioned releases are available as precompiled binaries from the GitHub &lt;a href=&#34;https://github.com/deepmind/mujoco/releases&#34;&gt;releases page&lt;/a&gt;, built for Linux (x86-64 and AArch64), Windows (x86-64 only), and macOS (universal). This is the recommended way to use the software.&lt;/p&gt; &#xA;&lt;h3&gt;Building from source&lt;/h3&gt; &#xA;&lt;p&gt;Users who wish to build MuJoCo from source should consult the &lt;a href=&#34;https://mujoco.readthedocs.io/en/latest/programming.html#building-mujoco-from-source&#34;&gt;build from source&lt;/a&gt; section of the documentation. However, please note that the commit at the tip of the &lt;code&gt;main&lt;/code&gt; branch may be unstable.&lt;/p&gt; &#xA;&lt;h3&gt;Python (&amp;gt;= 3.7)&lt;/h3&gt; &#xA;&lt;p&gt;The native Python bindings, which come pre-packaged with a copy of MuJoCo, can be installed from &lt;a href=&#34;https://pypi.org/project/mujoco/&#34;&gt;PyPI&lt;/a&gt; via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install mujoco&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that Pre-built Linux wheels target &lt;code&gt;manylinux2014&lt;/code&gt;, see &lt;a href=&#34;https://github.com/pypa/manylinux&#34;&gt;here&lt;/a&gt; for compatible distributions. For more information such as building the bindings from source, see the &lt;a href=&#34;https://mujoco.readthedocs.io/en/latest/python.html#python-bindings&#34;&gt;Python Bindings&lt;/a&gt; section of the documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;MuJoCo&#39;s documentation is available at &lt;a href=&#34;https://mujoco.readthedocs.io&#34;&gt;mujoco.readthedocs.io&lt;/a&gt;, which serves webpages derived from the &lt;a href=&#34;https://github.com/deepmind/mujoco/tree/main/doc&#34;&gt;documentation source files&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;There are two easy ways to get started with MuJoCo:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run &lt;code&gt;simulate&lt;/code&gt; on your machine.&lt;/strong&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=0ORsj_E17B0&#34;&gt;This video&lt;/a&gt; shows a screen capture of &lt;code&gt;simulate&lt;/code&gt;, MuJoCo&#39;s native interactive viewer. Follow the steps described in the &lt;a href=&#34;https://mujoco.readthedocs.io/en/latest/programming.html#getting-started&#34;&gt;Getting Started&lt;/a&gt; section of the documentation to get &lt;code&gt;simulate&lt;/code&gt; running on your machine.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explore our online IPython notebooks.&lt;/strong&gt; If you are a Python user, you might want to start with our tutorial notebooks, running on Google Colab:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The first tutorial focuses on the basic MuJoCo Python bindings: &lt;a href=&#34;https://colab.research.google.com/github/deepmind/dm_control/blob/main/dm_control/mujoco/tutorial.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The second tutorial includes more examples of &lt;code&gt;dm_control&lt;/code&gt;-specific functionality: &lt;a href=&#34;https://colab.research.google.com/github/deepmind/dm_control/blob/main/tutorial.ipynb&#34;&gt;&lt;img src=&#34;https://colab.research.google.com/assets/colab-badge.svg?sanitize=true&#34; alt=&#34;Open In Colab&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Asking Questions&lt;/h2&gt; &#xA;&lt;p&gt;We welcome community engagement: questions, requests for help, bug reports and feature requests. To read more about bug reports, feature requests and more ambitious contributions, please see our &lt;a href=&#34;https://raw.githubusercontent.com/deepmind/mujoco/main/CONTRIBUTING.md&#34;&gt;contributors guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Questions and requests for help are welcome on the GitHub &lt;a href=&#34;https://github.com/deepmind/mujoco/issues&#34;&gt;issues&lt;/a&gt; and &lt;a href=&#34;https://github.com/deepmind/mujoco/discussions&#34;&gt;discussions&lt;/a&gt; pages. Issues should be focused on a specific problem or question, while discussions should address wider concerns that might require input from multiple participants.&lt;/p&gt; &#xA;&lt;p&gt;Here are some guidelines for asking good questions:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Search for existing questions or issues that touch on the same subject.&lt;/p&gt; &lt;p&gt;You can add comments to existing threads or start new ones. If you start a new thread and there are existing relevant threads, please link to them.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use a clear and specific title. Try to include keywords that will make your question easy for other to find in the future.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Introduce yourself and your project more generally.&lt;/p&gt; &lt;p&gt;If your level of expertise is exceptional (either high or low), and it might be relevant to what we can assume you know, please state that as well.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Take a step back and tell us what you&#39;re trying to accomplish, if we understand you goal we might suggest a different type of solution than the one you are having problems with&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make it easy for others to reproduce the problem or understand your question.&lt;/p&gt; &lt;p&gt;If this requires a model, please include it. Try to make the model minimal: remove elements that are unrelated to your question. Pure XML models should be inlined. Models requiring binary assets (meshes, textures), should be attached as a &lt;code&gt;.zip&lt;/code&gt; file. Please make sure the included model is loadable before you attach it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Include an illustrative screenshot or video, if relevant.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Tell us how you are accessing MuJoCo (C API, Python bindings, etc.) and which MuJoCo version and operating system you are using.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Related software&lt;/h2&gt; &#xA;&lt;p&gt;MuJoCo forms the backbone of many environment packages, but these are too many to list here individually. Below we focus on bindings and converters.&lt;/p&gt; &#xA;&lt;h3&gt;Bindings&lt;/h3&gt; &#xA;&lt;p&gt;These packages give users of various languages access to MuJoCo functionality:&lt;/p&gt; &#xA;&lt;h4&gt;First-party bindings&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mujoco.readthedocs.io/en/latest/python.html&#34;&gt;Python bindings&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/deepmind/dm_control&#34;&gt;dm_control&lt;/a&gt;, DeepMind&#39;s related environment stack, includes &lt;a href=&#34;https://github.com/deepmind/dm_control/raw/main/dm_control/mjcf/README.md&#34;&gt;PyMJCF&lt;/a&gt;, a module for procedural manipulation of MuJoCo models.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mujoco.readthedocs.io/en/latest/unity.html&#34;&gt;C# bindings and Unity plug-in&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Third-party bindings&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Swift&lt;/strong&gt;: &lt;a href=&#34;https://github.com/liuliu/swift-mujoco&#34;&gt;swift-mujoco&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Java&lt;/strong&gt;: &lt;a href=&#34;https://github.com/CommonWealthRobotics/mujoco-java&#34;&gt;mujoco-java&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Python&lt;/strong&gt;: &lt;a href=&#34;https://github.com/openai/mujoco-py&#34;&gt;mujoco-py&lt;/a&gt; (unmaintained)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Julia&lt;/strong&gt;: &lt;a href=&#34;https://github.com/Lyceum/MuJoCo.jl&#34;&gt;Lyceum&lt;/a&gt; (unmaintained)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Converters&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;OpenSim&lt;/strong&gt;: &lt;a href=&#34;https://github.com/aikkala/O2MConverter&#34;&gt;O2MConverter&lt;/a&gt; converts openSIM models to MJCF.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;SDFormat&lt;/strong&gt;: &lt;a href=&#34;https://github.com/gazebosim/gz-mujoco/&#34;&gt;gz-mujoco&lt;/a&gt; is a two-way SDFormat &amp;lt;-&amp;gt; MJCF conversion tool.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OBJ&lt;/strong&gt;: &lt;a href=&#34;https://github.com/kevinzakka/obj2mjcf&#34;&gt;obj2mjcf&lt;/a&gt; a script for converting composite OBJ files into a loadable MJCF model.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;If you use MuJoCo for published research, please cite:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@inproceedings{todorov2012mujoco,&#xA;  title={MuJoCo: A physics engine for model-based control},&#xA;  author={Todorov, Emanuel and Erez, Tom and Tassa, Yuval},&#xA;  booktitle={2012 IEEE/RSJ International Conference on Intelligent Robots and Systems},&#xA;  pages={5026--5033},&#xA;  year={2012},&#xA;  organization={IEEE},&#xA;  doi={10.1109/IROS.2012.6386109}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License and Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2021 DeepMind Technologies Limited.&lt;/p&gt; &#xA;&lt;p&gt;Box collision code (&lt;a href=&#34;https://github.com/deepmind/mujoco/tree/main/src/engine/engine_collision_box.c&#34;&gt;&lt;code&gt;engine_collision_box.c&lt;/code&gt;&lt;/a&gt;) is Copyright 2016 Svetoslav Kolev.&lt;/p&gt; &#xA;&lt;p&gt;ReStructuredText documents, images, and videos in the &lt;code&gt;doc&lt;/code&gt; directory are made available under the terms of the Creative Commons Attribution 4.0 (CC BY 4.0) license. You may obtain a copy of the License at &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/legalcode&#34;&gt;https://creativecommons.org/licenses/by/4.0/legalcode&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Source code is licensed under the Apache License, Version 2.0. You may obtain a copy of the License at &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This is not an officially supported Google product.&lt;/p&gt;</summary>
  </entry>
</feed>