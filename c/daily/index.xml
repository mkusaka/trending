<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-11T01:35:35Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Mixiaoxiao/Arduino-HomeKit-ESP8266</title>
    <updated>2022-07-11T01:35:35Z</updated>
    <id>tag:github.com,2022-07-11:/Mixiaoxiao/Arduino-HomeKit-ESP8266</id>
    <link href="https://github.com/Mixiaoxiao/Arduino-HomeKit-ESP8266" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Native Apple HomeKit accessory implementation for the ESP8266 Arduino core.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Arduino HomeKit ESP8266&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Mixiaoxiao/Arduino-HomeKit-ESP8266/master/translations/README_cn.md&#34;&gt;中文说明&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/Mixiaoxiao/Arduino-HomeKit-ESP8266/master/translations/README-ptbr.md&#34;&gt;Português Brasileiro&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Apple HomeKit accessory server library for ESP8266 Arduino&lt;/h2&gt; &#xA;&lt;p&gt;This Arduino library is a native Apple HomeKit accessory implementation for the &lt;a href=&#34;https://github.com/esp8266/Arduino&#34;&gt;ESP8266 Arduino core&lt;/a&gt;, and works without any additional bridges.&lt;/p&gt; &#xA;&lt;p&gt;This project is mainly based on &lt;a href=&#34;https://github.com/maximkulkin/esp-homekit&#34;&gt;esp-homekit&lt;/a&gt; for &lt;a href=&#34;https://github.com/SuperHouse/esp-open-rtos&#34;&gt;ESP-OPEN-RTOS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;I ported the RTOS-based implementation of &lt;a href=&#34;https://github.com/maximkulkin/esp-homekit&#34;&gt;esp-homekit&lt;/a&gt; to the pure Arduino environment, aimed at easy and fast building project using Arduino IDE (or Eclipse with sloeber, PlatformIO).&lt;/p&gt; &#xA;&lt;p&gt;Enjoy the &#34;one-key&#34; build, &#34;one-key&#34; upload, and work to link various other Arduino libraries with Apple HomeKit!&lt;/p&gt; &#xA;&lt;p&gt;Here is a &lt;a href=&#34;https://github.com/HomeACcessoryKid/Arduino-HomeKit/issues/1&#34;&gt;discussion&lt;/a&gt; about the RTOS is required for running Apple HomeKit, and this project is a proof of concept that Apple HomeKit can be implemented and work fine without the RTOS.&lt;/p&gt; &#xA;&lt;p&gt;This library is built with ESP8266 Arduino Core 2.6.3. Lower versions may compile with errors.&lt;/p&gt; &#xA;&lt;p&gt;For ESP32, see &lt;a href=&#34;https://github.com/Mixiaoxiao/Arduino-HomeKit-ESP32&#34;&gt;Arduino-HomeKit-ESP32&lt;/a&gt;. The HomeKit running on ESP32 has a &lt;strong&gt;GREAT PERFORMANCE&lt;/strong&gt; which is 10x faster than ESP8266.&lt;/p&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/Mixiaoxiao/Arduino-HomeKit-ESP8266/master/extras/preview.jpg&#34; alt=&#34;Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Setup code of the example sketch&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;111-11-111&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Define your accessory in a .c file to enjoy the convenient &#34;Macro&#34; style declaration. You can also define your accessory in a .ino file using C++ code. &lt;pre&gt;&lt;code class=&#34;language-C&#34;&gt;&#x9;homekit_accessory_t *accessories[] = ...&#xA;&#x9;homekit_server_config_t config = {&#xA;&#x9;&#x9;.accessories = accessories,&#xA;&#x9;&#x9;.password = &#34;111-11-111&#34;,&#xA;&#x9;&#x9;//.on_event = on_homekit_event, //optional&#xA;&#x9;&#x9;//.setupId = &#34;ABCD&#34; //optional&#xA;&#x9;};&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;In your sketch &lt;pre&gt;&lt;code class=&#34;language-C&#34;&gt;&#x9;#include &amp;lt;arduino_homekit_server.h&amp;gt;;&#xA;&#x9;&#xA;&#x9;//access the config defined in C code&#xA;&#x9;extern &#34;C&#34; homekit_server_config_t config; &#xA;&#x9;&#xA;&#x9;void setup() {&#xA;&#x9;&#x9;WiFi.begin(ssid, password);&#xA;&#x9;&#x9;arduino_homekit_setup(&amp;amp;config);&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;void loop() {&#xA;&#x9;&#x9;arduino_homekit_loop();&#xA;&#x9;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Done.&lt;/p&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;Notice: You should set the ESP8266 CPU to run at 160MHz (at least during the pairing process), to avoid the tcp-socket disconnection from iOS device caused by timeout.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Preinit: ~9.1s (You can see the accessory on your iOS HOME app after Preinit)&lt;/li&gt; &#xA; &lt;li&gt;Pair Setup Step 1/3: ~0s (The heavy crypto computation is done in Preinit)&lt;/li&gt; &#xA; &lt;li&gt;Pair Setup Step 2/3: ~12.1s&lt;/li&gt; &#xA; &lt;li&gt;Pair Setup Step 3/3: ~0.8s (The pair-setup is only processed when first paired with iOS device)&lt;/li&gt; &#xA; &lt;li&gt;Pair Verify Step 1/2: ~0.3s&lt;/li&gt; &#xA; &lt;li&gt;Pair Verify Step 2/2: ~0.8s (The Verify Step is required every time iOS connects or reconnects to ESP8266 to establish secure session)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All pairing process takes ~14s after you input the setup-code on your iPhone. Notice that Preinit require ~9s before you can start to pair.&lt;/p&gt; &#xA;&lt;h2&gt;Heap (memory)&lt;/h2&gt; &#xA;&lt;p&gt;The heap is critical for ESP8266 with full TCP/IP support. ESP8266 easily crashes when the memory is lower than ~5000.&lt;/p&gt; &#xA;&lt;p&gt;I tried to make WolfSSL crypto work safely on ESP8266 with better performance and lower memory or a trade-off. See details in next section.&lt;/p&gt; &#xA;&lt;p&gt;Here are the free heap values of running the example sketch:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Boot: ~26000&lt;/li&gt; &#xA; &lt;li&gt;Preinit over: ~22000&lt;/li&gt; &#xA; &lt;li&gt;Pairing: ~17000 (or even low when crypto computing)&lt;/li&gt; &#xA; &lt;li&gt;Paired and connected with one iOS device: ~21700&lt;/li&gt; &#xA; &lt;li&gt;Paired and no iOS device connected: ~23400&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;After memory optimization in v1.1.0:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Boot: ~46000&lt;/li&gt; &#xA; &lt;li&gt;Preinit over: ~41000&lt;/li&gt; &#xA; &lt;li&gt;Pairing: ~37000 (or even low when crypto computing)&lt;/li&gt; &#xA; &lt;li&gt;Paired and connected with one iOS device: ~41700&lt;/li&gt; &#xA; &lt;li&gt;Paired and no iOS device connected: ~43000&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;WolfSSL&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Based on wolfssl-3.13.0-stable.&lt;/li&gt; &#xA; &lt;li&gt;Clean source code: the unused files are removed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CURVE25519_SMALL&lt;/code&gt; and &lt;code&gt;ED25519_SMALL&lt;/code&gt;: ESP8266 can not directly run without &lt;code&gt;SMALL&lt;/code&gt; defined since the memory is not sufficient. But the NO &lt;code&gt;SMALL&lt;/code&gt; version is faster. I mark the big &lt;code&gt;ge_precomp base[32][8]&lt;/code&gt; with PROGMEM to store it in Flash (around 70KB). Also the &lt;code&gt;ge_double_scalarmult_vartime&lt;/code&gt; can not run caused by lack of heap. I define &lt;code&gt;ESP_GE_DOUBLE_SCALARMULT_VARTIME_LOWMEM&lt;/code&gt; in &lt;code&gt;user_settings.h&lt;/code&gt; to use LOWMEM version of &lt;code&gt;ge_double_scalarmult_vartime&lt;/code&gt; in &lt;code&gt;ge_low_mem.c&lt;/code&gt;. This is a trade-off of performance and memory. If you want more Flash space, you should define &lt;code&gt;CURVE25519_SMALL&lt;/code&gt; and &lt;code&gt;ED25519_SMALL&lt;/code&gt; and undefine &lt;code&gt;ESP_GE_DOUBLE_SCALARMULT_VARTIME_LOWMEM&lt;/code&gt; in &lt;code&gt;user_settings.h&lt;/code&gt; (this will lead the Pair Verify Steps to take 1.2s + 0.9s).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;integer.c&lt;/code&gt;(big integer operations): &lt;code&gt;MP_16BIT&lt;/code&gt; and &lt;code&gt;ESP_FORCE_S_MP_EXPTMOD&lt;/code&gt; are defined for better performance in ESP8266. &lt;code&gt;ESP_INTEGER_WINSIZE&lt;/code&gt; (value is 3) is defined to avoid crash caused by memory exhaust and the values of {3, 4, 5} are of similar performance.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Storage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The pairing data is stored in the &lt;code&gt;EEPROM&lt;/code&gt; address in ESP8266 Arduino core.&lt;/li&gt; &#xA; &lt;li&gt;This project does not use the &lt;code&gt;EEPROM&lt;/code&gt; library with data-cache to reduce memory use (directly call flash_read and write).&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;EEPROM&lt;/code&gt; is 4096B in ESP8266, this project uses max [0, 1408B).&lt;/li&gt; &#xA; &lt;li&gt;See the comments in &lt;code&gt;storge.c&lt;/code&gt; and &lt;a href=&#34;https://arduino-esp8266.readthedocs.io/en/2.6.3/libraries.html#eeprom&#34;&gt;ESP8266-EEPROM-doc&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;EEPROM&lt;/code&gt; of [1408, 4096) is safe for you to use.&lt;/li&gt; &#xA; &lt;li&gt;This project do NOT use &lt;code&gt;FS(file system)&lt;/code&gt;, so you can use &lt;code&gt;FS&lt;/code&gt; freely.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;WatchDog&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There are software and hardware watchdogs in ESP8266 Arduino core. The heavy crypto computing will lead to watchdog reset.&lt;/li&gt; &#xA; &lt;li&gt;There are disable/enable api of software-watchdog in ESP8266 Arduino core.&lt;/li&gt; &#xA; &lt;li&gt;I found the &lt;a href=&#34;https://github.com/ComSuite/esp_hw_wdt&#34;&gt;esp_hw_wdt&lt;/a&gt; to disable/enable the hardware-watchdog.&lt;/li&gt; &#xA; &lt;li&gt;The two watchdogs are disabled while &lt;code&gt;Preinit&lt;/code&gt; and &lt;code&gt;Pair Setup Step 2/3&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Recommended settings in IDE&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Module: Generic ESP8266 Module (to enable full settings)&lt;/li&gt; &#xA; &lt;li&gt;FlashSize: at least 470KB for sketch (see &lt;code&gt;WolfSSL&lt;/code&gt; section if you want a smaller sketch)&lt;/li&gt; &#xA; &lt;li&gt;LwIP Variant: v2 Lower Memory (for lower memory use)&lt;/li&gt; &#xA; &lt;li&gt;Debug Level: None (for lower memory use)&lt;/li&gt; &#xA; &lt;li&gt;Espressif FW: nonos-sdk 2.2.1+119(191122) (which I used to build this project)&lt;/li&gt; &#xA; &lt;li&gt;SSL Support: Basic SSL ciphers (lower ROM use)&lt;/li&gt; &#xA; &lt;li&gt;VTables: Flash (does not matter maybe)&lt;/li&gt; &#xA; &lt;li&gt;Erase Flash: select &lt;code&gt;All Flash Contents&lt;/code&gt; when you first upload&lt;/li&gt; &#xA; &lt;li&gt;CPU Frequency: 160MHz (must)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Arduino port&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ESP8266WiFi&lt;/code&gt; (WiFiServer and WiFiClient) is used for tcp connection.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ESP8266mDNS&lt;/code&gt; is used for advertising (Bonjour)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check your serial output with &lt;a href=&#34;https://raw.github.com/Mixiaoxiao/Arduino-HomeKit-ESP8266/master/extras/example_serial_output_v1.1.0.txt&#34;&gt;example_serial_output.txt&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Change Log&lt;/h2&gt; &#xA;&lt;h4&gt;v1.4.0&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add &lt;code&gt;yield()&lt;/code&gt; while crypto computing, to prevent WiFi disconnection. The idea is from &lt;a href=&#34;https://github.com/Yurik72/ESPHap/issues/80#issuecomment-803685175&#34;&gt;BbIKTOP-issues80&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;One new example.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;v1.3.0&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Small improvements.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;v1.2.0&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;New examples.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;v1.1.0&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Memory optimization: moved String/byte constants as much as possible to Flash. The &lt;code&gt;RODATA&lt;/code&gt; section of &lt;code&gt;bin&lt;/code&gt; is only 4672. Extra ~20K free-heap is available compared with v1.0.1.&lt;/li&gt; &#xA; &lt;li&gt;Upload &lt;a href=&#34;https://github.com/Mixiaoxiao/Arduino-HomeKit-ESP8266/tree/master/extras/ESP8266WiFi_nossl_noleak/&#34;&gt;ESP8266WiFi_nossl_noleak&lt;/a&gt;, a &lt;code&gt;nossl&lt;/code&gt; and &lt;code&gt;noleak&lt;/code&gt; version of the official &lt;code&gt;ESP8266WiFi&lt;/code&gt; library of Arduino Core 2.6.3. Removed all codes of &lt;code&gt;SSL&lt;/code&gt; to save memory (extra ~3K) since the HomeKit does not require SSL. Fix the memory-leak in &lt;code&gt;WiFiClinet.stop()&lt;/code&gt; by adding &lt;code&gt;tcp_abandon(_pcb, 0)&lt;/code&gt; in &lt;code&gt;stop()&lt;/code&gt;, based on the idea of &lt;a href=&#34;https://github.com/esp8266/Arduino/pull/2767&#34;&gt;esp8266/Arduino/pull/2767&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;v1.0.1&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reduce &lt;code&gt;winsize&lt;/code&gt; from &lt;code&gt;3&lt;/code&gt; to &lt;code&gt;2&lt;/code&gt;(same performance) to lower the heap required. Pairing can be done with low free-heap of ~14000.&lt;/li&gt; &#xA; &lt;li&gt;Specify the MDNS runs on the IPAddress of STA to ensure the HomeKit can work with some SoftAP-based WiFi-Config libraries.&lt;/li&gt; &#xA; &lt;li&gt;Rename the &lt;code&gt;HTTP_METHOD&lt;/code&gt;(s) in &lt;code&gt;http_parser.h&lt;/code&gt; to avoid multi-definition errors when using &lt;code&gt;ESP8266WebServer&lt;/code&gt; together.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/maximkulkin/esp-homekit&#34;&gt;esp-homekit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/maximkulkin/esp-homekit-demo&#34;&gt;esp-homekit-demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ComSuite/esp_hw_wdt&#34;&gt;esp_hw_wdt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.wolfssl.com/products/wolfcrypt-2/&#34;&gt;WolfSSL/WolfCrypt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/DaveGamble/cJSON&#34;&gt;cJSON&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SMFSW/cQueue&#34;&gt;cQueue&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>jarun/nnn</title>
    <updated>2022-07-11T01:35:35Z</updated>
    <id>tag:github.com,2022-07-11:/jarun/nnn</id>
    <link href="https://github.com/jarun/nnn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;n³ The unorthodox terminal file manager&lt;/p&gt;&lt;hr&gt;&lt;h3 align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jarun/nnn/master/misc/logo/logo-128x128.png&#34; alt=&#34;nnn&#34;&gt;&lt;br&gt;nnn - &lt;i&gt;Supercharge your productivity!&lt;/i&gt;&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/jarun/nnn/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/jarun/nnn.svg?maxAge=600&amp;amp;label=rel&#34; alt=&#34;Latest release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://repology.org/project/nnn/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/tiny-repos/nnn.svg?header=repos&#34; alt=&#34;Availability&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/jarun/workflows/nnn&#34;&gt;&lt;img src=&#34;https://img.shields.io/circleci/project/github/jarun/nnn.svg?label=circle%20ci&#34; alt=&#34;CircleCI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jarun/nnn/actions&#34;&gt;&lt;img src=&#34;https://github.com/jarun/nnn/workflows/ci/badge.svg?branch=master&#34; alt=&#34;GitHub CI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/Privacy-invasive_software&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/privacy-✓-crimson?maxAge=2592000&#34; alt=&#34;Privacy Awareness&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jarun/nnn/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/©-BSD%202--Clause-important.svg?maxAge=2592000&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;http://i.imgur.com/kOld6HT.gif&#34;&gt;&lt;img src=&#34;https://i.imgur.com/NUsSA2u.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;[&lt;a href=&#34;https://github.com/jarun/nnn#features&#34;&gt;Features&lt;/a&gt;] [&lt;a href=&#34;https://github.com/jarun/nnn#quickstart&#34;&gt;Quickstart&lt;/a&gt;] [&lt;a href=&#34;https://github.com/jarun/nnn/tree/master/plugins#nnn-plugins&#34;&gt;Plugins&lt;/a&gt;] [&lt;a href=&#34;https://github.com/jarun/nnn/wiki&#34;&gt;Wiki&lt;/a&gt;]&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;nnn&lt;/code&gt; (&lt;em&gt;n³&lt;/em&gt;) is a full-featured terminal file manager. It&#39;s tiny, nearly 0-config and &lt;a href=&#34;https://github.com/jarun/nnn/wiki/Performance&#34;&gt;incredibly fast&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It is designed to be unobtrusive with smart workflows to match the trains of thought.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;nnn&lt;/code&gt; can analyze disk usage, batch rename, launch apps and pick files. The plugin repository has tons of plugins to extend the capabilities further e.g. &lt;a href=&#34;https://github.com/jarun/nnn/wiki/Live-previews&#34;&gt;live previews&lt;/a&gt;, (un)mount disks, find &amp;amp; list, file/dir diff, upload files. A &lt;a href=&#34;https://github.com/jarun/nnn/tree/master/patches&#34;&gt;patch framework&lt;/a&gt; hosts sizable user-submitted patches which are subjective in nature.&lt;/p&gt; &#xA;&lt;p&gt;Independent (neo)vim plugins - &lt;a href=&#34;https://github.com/mcchrish/nnn.vim&#34;&gt;nnn.vim&lt;/a&gt;, &lt;a href=&#34;https://github.com/voldikss/vim-floaterm#nnn&#34;&gt;vim-floaterm nnn wrapper&lt;/a&gt; and &lt;a href=&#34;https://github.com/luukvbaal/nnn.nvim&#34;&gt;nnn.nvim&lt;/a&gt; (neovim exclusive).&lt;/p&gt; &#xA;&lt;p&gt;Runs on the Pi, &lt;a href=&#34;https://www.youtube.com/embed/AbaauM7gUJw&#34;&gt;Termux&lt;/a&gt; (Android), Linux, macOS, BSD, Haiku, Cygwin, WSL, across DEs or a strictly CLI env.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jarun/nnn/wiki/Basic-use-cases#the_nnn-magic&#34;&gt;&lt;em&gt;(there&#39;s more)&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Quality &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Privacy-aware (no unconfirmed user data collection)&lt;/li&gt; &#xA;   &lt;li&gt;POSIX-compliant, follows Linux kernel coding style&lt;/li&gt; &#xA;   &lt;li&gt;Highly optimized, static analysis integrated code&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Frugal &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Typically needs less than 3.5MB resident memory&lt;/li&gt; &#xA;   &lt;li&gt;Works with 8 colors (and xterm 256 colors)&lt;/li&gt; &#xA;   &lt;li&gt;Disk-IO sensitive (few disk reads and writes)&lt;/li&gt; &#xA;   &lt;li&gt;No FPU usage (all integer maths, even for file size)&lt;/li&gt; &#xA;   &lt;li&gt;Minimizes screen refresh with fast line redraws&lt;/li&gt; &#xA;   &lt;li&gt;Tiny binary (typically around 100KB)&lt;/li&gt; &#xA;   &lt;li&gt;1-column mode for smaller terminals and form factors&lt;/li&gt; &#xA;   &lt;li&gt;Hackable - compile in/out features and dependencies&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Portable &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Language-agnostic plugins&lt;/li&gt; &#xA;   &lt;li&gt;Static binary available (no need to install)&lt;/li&gt; &#xA;   &lt;li&gt;Minimal library deps, easy to compile&lt;/li&gt; &#xA;   &lt;li&gt;No config file, minimal config with sensible defaults&lt;/li&gt; &#xA;   &lt;li&gt;Plugin to backup configuration&lt;/li&gt; &#xA;   &lt;li&gt;Widely available on many packagers&lt;/li&gt; &#xA;   &lt;li&gt;Touch enabled, handheld-friendly shortcuts&lt;/li&gt; &#xA;   &lt;li&gt;Unicode support&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Modes &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Light (default), detail&lt;/li&gt; &#xA;   &lt;li&gt;Disk usage analyzer (block/apparent)&lt;/li&gt; &#xA;   &lt;li&gt;File picker, (neo)vim plugin&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Navigation &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Filter with automatic dir entry on unique match&lt;/li&gt; &#xA;   &lt;li&gt;&lt;em&gt;Type-to-nav&lt;/em&gt; (turbo navigation/always filter) mode&lt;/li&gt; &#xA;   &lt;li&gt;Contexts (&lt;em&gt;aka&lt;/em&gt; tabs/workspaces) with custom colors&lt;/li&gt; &#xA;   &lt;li&gt;Sessions, bookmarks, mark and visit a dir&lt;/li&gt; &#xA;   &lt;li&gt;Remote mounts (needs &lt;code&gt;sshfs&lt;/code&gt;, &lt;code&gt;rclone&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Familiar shortcuts (arrows, &lt;kbd&gt;~&lt;/kbd&gt;, &lt;kbd&gt;-&lt;/kbd&gt;, &lt;kbd&gt;@&lt;/kbd&gt;), quick look-up&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;cd&lt;/code&gt; on quit (&lt;em&gt;easy&lt;/em&gt; shell integration)&lt;/li&gt; &#xA;   &lt;li&gt;Proceed to next file on file open and selection&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Search &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Instant filtering with &lt;em&gt;search-as-you-type&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Regex (POSIX/PCRE) and string (default) filters&lt;/li&gt; &#xA;   &lt;li&gt;Subtree search plugin to open or edit files&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Sort &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ordered pure numeric names by default (visit &lt;code&gt;/proc&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Case-insensitive version (&lt;em&gt;aka&lt;/em&gt; natural) sort&lt;/li&gt; &#xA;   &lt;li&gt;By name, access/change/mod (default) time, size, extn&lt;/li&gt; &#xA;   &lt;li&gt;Reverse sort&lt;/li&gt; &#xA;   &lt;li&gt;Directory-specific ordering&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Mimes &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Preview hovered files in FIFO-based previewer&lt;/li&gt; &#xA;   &lt;li&gt;Open with desktop opener or specify a custom opener&lt;/li&gt; &#xA;   &lt;li&gt;File-specific colors (or minimal &lt;em&gt;dirs in context color&lt;/em&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Icons or Emojis support (customize and compile-in)&lt;/li&gt; &#xA;   &lt;li&gt;Plugin for image, video and audio thumbnails&lt;/li&gt; &#xA;   &lt;li&gt;Create, list, extract (to), mount (FUSE based) archives&lt;/li&gt; &#xA;   &lt;li&gt;Option to open all text files in &lt;code&gt;$EDITOR&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Convenience &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Detailed file stats and mime information&lt;/li&gt; &#xA;   &lt;li&gt;Run plugins and custom commands with hotkeys&lt;/li&gt; &#xA;   &lt;li&gt;FreeDesktop compliant trash utility integration&lt;/li&gt; &#xA;   &lt;li&gt;Cross-dir file/all/range selection&lt;/li&gt; &#xA;   &lt;li&gt;Create (with parents), rename, duplicate files and dirs&lt;/li&gt; &#xA;   &lt;li&gt;Batch renamer for selection or dir&lt;/li&gt; &#xA;   &lt;li&gt;List input stream of file paths from stdin or plugin&lt;/li&gt; &#xA;   &lt;li&gt;Copy (as), move (as), delete, archive, link selection&lt;/li&gt; &#xA;   &lt;li&gt;Dir updates, notification on &lt;code&gt;cp&lt;/code&gt;, &lt;code&gt;mv&lt;/code&gt;, &lt;code&gt;rm&lt;/code&gt; completion&lt;/li&gt; &#xA;   &lt;li&gt;Copy file paths to system clipboard on select&lt;/li&gt; &#xA;   &lt;li&gt;Launch apps, run commands, spawn a shell, toggle exe&lt;/li&gt; &#xA;   &lt;li&gt;Access context paths/files at prompt or spawned shell&lt;/li&gt; &#xA;   &lt;li&gt;Lock terminal after configurable idle timeout&lt;/li&gt; &#xA;   &lt;li&gt;Capture and show output of a program in help screen&lt;/li&gt; &#xA;   &lt;li&gt;Basic support for screen readers and braille displays&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jarun/nnn/wiki/Usage&#34;&gt;Install&lt;/a&gt; &lt;code&gt;nnn&lt;/code&gt; and the deps you need.&lt;/li&gt; &#xA; &lt;li&gt;The desktop opener is default. Use &lt;code&gt;-e&lt;/code&gt; to open text files in the terminal. Optionally &lt;a href=&#34;https://github.com/jarun/nnn/wiki/Basic-use-cases#detached-text&#34;&gt;open detached&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Configure &lt;a href=&#34;https://github.com/jarun/nnn/wiki/Basic-use-cases#configure-cd-on-quit&#34;&gt;&lt;code&gt;cd&lt;/code&gt; on quit&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jarun/nnn/wiki/Basic-use-cases#sync-subshell-pwd&#34;&gt;Sync subshell &lt;code&gt;$PWD&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;nnn&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jarun/nnn/tree/master/plugins#installation&#34;&gt;Install plugins&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;-x&lt;/code&gt; to sync selection to clipboard, show notis on &lt;code&gt;cp&lt;/code&gt;, &lt;code&gt;mv&lt;/code&gt;, &lt;code&gt;rm&lt;/code&gt; and set xterm title.&lt;/li&gt; &#xA; &lt;li&gt;For a CLI-only environment, set &lt;a href=&#34;https://github.com/jarun/nnn/wiki/Usage#configuration&#34;&gt;&lt;code&gt;NNN_OPENER&lt;/code&gt;&lt;/a&gt; to &lt;a href=&#34;https://github.com/jarun/nnn/raw/master/plugins/nuke&#34;&gt;&lt;code&gt;nuke&lt;/code&gt;&lt;/a&gt;. Use option &lt;code&gt;-c&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Bid &lt;code&gt;ls&lt;/code&gt; goodbye! &lt;code&gt;alias ls=&#39;nnn -de&#39;&lt;/code&gt; &lt;span&gt;😎&lt;/span&gt;&lt;/li&gt; &#xA; &lt;li&gt;Visit the &lt;a href=&#34;https://github.com/jarun/nnn/wiki/Live-previews&#34;&gt;Live previews&lt;/a&gt; and &lt;a href=&#34;https://github.com/jarun/nnn/wiki/Troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt; Wiki pages.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Don&#39;t memorize! Arrows, &lt;kbd&gt;/&lt;/kbd&gt;, &lt;kbd&gt;q&lt;/kbd&gt; suffice. &lt;kbd&gt;Tab&lt;/kbd&gt; creates and/or cycles contexts. &lt;kbd&gt;?&lt;/kbd&gt; lists shortcuts.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/embed/-knZwdd1ScU&#34;&gt;&lt;img src=&#34;https://i.imgur.com/TN3xYQz.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jarun/nnn/wiki&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/RTFM-nnn%20Wiki-important?maxAge=2592000&#34; alt=&#34;Wiki&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Videos&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/embed/AbaauM7gUJw&#34;&gt;nnn file manager on Termux (Android)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/embed/1QXU4XSqXNo&#34;&gt;NNN File Manager&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=5W9ja0DQjSY&amp;amp;t=2059s&#34;&gt;This Week in Linux 114 - TuxDigital&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/embed/il2Fm-KJJfM&#34;&gt;nnn file manager basics - Linux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/embed/U2n5aGqou9E&#34;&gt;I&#39;M GOING TO USE THE NNN FILE BROWSER! 😮&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/embed/KuJHo-aO_FA&#34;&gt;NNN: Is This Terminal File Manager As Good As People Say?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/embed/cnzuzcCPYsk&#34;&gt;nnn - A File Manager (By Uoou, again.)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Elsewhere&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.addictivetips.com/ubuntu-linux-tips/navigate-linux-filesystem/&#34;&gt;AddictiveTips&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/Nnn&#34;&gt;ArchWiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.fossmint.com/nnn-linux-terminal-file-browser/&#34;&gt;FOSSMint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.ghacks.net/2019/11/01/nnn-is-an-excellent-command-line-based-file-manager-for-linux-macos-and-bsds/&#34;&gt;gHacks Tech News&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hacker News [&lt;a href=&#34;https://news.ycombinator.com/item?id=18520898&#34;&gt;1&lt;/a&gt;] [&lt;a href=&#34;https://news.ycombinator.com/item?id=19850656&#34;&gt;2&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://itsfoss.com/nnn-file-browser-linux/&#34;&gt;It&#39;s FOSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://linuxformat.com/archives?issue=265&#34;&gt;Linux Format Issue 265; Manage files with nnn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LinuxLinks [&lt;a href=&#34;https://www.linuxlinks.com/nnn-fast-and-flexible-file-manager/&#34;&gt;1&lt;/a&gt;] [&lt;a href=&#34;https://www.linuxlinks.com/bestconsolefilemanagers/&#34;&gt;2&lt;/a&gt;] [&lt;a href=&#34;https://www.linuxlinks.com/excellent-system-tools-nnn-portable-terminal-file-manager/&#34;&gt;3&lt;/a&gt;]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linux-magazine.com/Issues/2017/205/FOSSPicks/(offset)/15&#34;&gt;Linux Magazine; FOSSPicks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.maketecheasier.com/nnn-file-manager-terminal/&#34;&gt;Make Tech Easier&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.opensourceforu.com/2019/12/nnn-this-feature-rich-terminal-file-manager-will-enhance-your-productivity/&#34;&gt;Open Source For You&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pclosmag.com/html/Issues/202106/page08.html&#34;&gt;PCLinuxOS Magazine Issue June 2021&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://suckless.org/rocks/&#34;&gt;Suckless Rocks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fullcirclemagazine.org/issue-135/&#34;&gt;Ubuntu Full Circle Magazine Issue 135; Review: nnn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://books.google.com/books?id=MqjDDwAAQBAJ&amp;amp;pg=PA32&#34;&gt;Using and Administering Linux: Volume 2: Zero to SysAdmin: Advanced Topics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Nnn_(file_manager)&#34;&gt;Wikipedia&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jarun&#34;&gt;Arun Prakash Jana&lt;/a&gt; (Copyright © 2016-2022)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/0xACE&#34;&gt;0xACE&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/annagrram&#34;&gt;Anna Arad&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KlzXS&#34;&gt;KlzXS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/leovilok&#34;&gt;Léo Villeveygoux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/luukvbaal&#34;&gt;Luuk van Baal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codeberg.org/NRK&#34;&gt;NRK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sjmulder&#34;&gt;Sijmen J. Mulder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;and other contributors&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Visit the &lt;a href=&#34;https://github.com/jarun/nnn/issues/1416&#34;&gt;ToDo list&lt;/a&gt; to contribute or see the features in progress.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pimoroni/pimoroni-pico</title>
    <updated>2022-07-11T01:35:35Z</updated>
    <id>tag:github.com,2022-07-11:/pimoroni/pimoroni-pico</id>
    <link href="https://github.com/pimoroni/pimoroni-pico" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Libraries and examples to support Pimoroni Pico add-ons in C++ and MicroPython.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pimoroni Pico Libraries and Examples &#xA; &lt;!-- omit in toc --&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to the brave new world of Pico!&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the C/C++ and MicroPython libraries for our range of RP2040-based boards, Raspberry Pi Pico addons &amp;amp; &lt;a href=&#34;https://raw.githubusercontent.com/pimoroni/pimoroni-pico/main/#breakouts&#34;&gt;supported Breakout Garden sensors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pimoroni/pimoroni-pico/actions/workflows/cmake.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/pimoroni/pimoroni-pico/CMake?label=C%2B%2B&#34; alt=&#34;CMake Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pimoroni/pimoroni-pico/actions/workflows/micropython.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/pimoroni/pimoroni-pico/MicroPython?label=MicroPython&#34; alt=&#34;MicroPython Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pimoroni/pimoroni-pico/actions/workflows/micropython-with-blinka.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/pimoroni/pimoroni-pico/MicroPython+Blinka?label=MicroPython%2BBlinka&#34; alt=&#34;MicroPython+Blinka Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pimoroni/pimoroni-pico/releases/latest/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/pimoroni/pimoroni-pico&#34; alt=&#34;GitHub release (latest by date)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pimoroni/pimoroni-pico/main/#micropython&#34;&gt;MicroPython&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pimoroni/pimoroni-pico/main/#micropython-examples&#34;&gt;MicroPython Examples&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pimoroni/pimoroni-pico/main/#cc&#34;&gt;C/C++&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pimoroni/pimoroni-pico/main/#c-examples&#34;&gt;C++ Examples&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pimoroni/pimoroni-pico/main/#boilerplate-for-c-projects&#34;&gt;Boilerplate for C++ Projects&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pimoroni/pimoroni-pico/main/#supported-products&#34;&gt;Supported Products&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pimoroni/pimoroni-pico/main/#tutorials--guides&#34;&gt;Tutorials &amp;amp; Guides&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;MicroPython&lt;/h1&gt; &#xA;&lt;p&gt;The easiest way to get started. If you&#39;re new to Pico, we recommend you read our &lt;a href=&#34;https://learn.pimoroni.com/article/getting-started-with-pico&#34;&gt;getting started with Pico&lt;/a&gt; tutorial.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; All of our MicroPython libraries are baked into a batteries-included, custom version of MicroPython which you can grab from releases: &lt;a href=&#34;https://github.com/pimoroni/pimoroni-pico/releases/latest/&#34;&gt;https://github.com/pimoroni/pimoroni-pico/releases/latest/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;New releases are issued regularly with new libraries, bug fixes to our existing libraries and new features inherited from MicroPython upstream. Be sure to check back!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;🔗&lt;/span&gt; &lt;a href=&#34;https://learn.pimoroni.com/article/getting-started-with-pico&#34;&gt;Tutorial: Getting started with Pico&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pimoroni/pimoroni-pico/main/setting-up-micropython.md&#34;&gt;Readme: Instructions for setting up MicroPython&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pimoroni/pimoroni-pico/releases&#34;&gt;Pimoroni Pico MicroPython + Drivers Releases&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;MicroPython Examples&lt;/h2&gt; &#xA;&lt;p&gt;You can find MicroPython examples for supported sensors, packs and bases in the &#34;micropython/examples&#34; directory:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pimoroni/pimoroni-pico/main/micropython/examples&#34;&gt;MicroPython Examples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;C/C++&lt;/h1&gt; &#xA;&lt;p&gt;For more advanced users that want to unleash the full power of Pico, you can use our C++ libraries. If you know what you&#39;re doing and want to build your own Pimoroni Pico project then start with the &lt;a href=&#34;https://github.com/pimoroni/pico-boilerplate&#34;&gt;Pimoroni Pico SDK Boilerplate&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;🔗&lt;/span&gt; &lt;a href=&#34;https://learn.pimoroni.com/article/pico-development-using-wsl&#34;&gt;Tutorial: Pico C++ Development on Windows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pimoroni/pimoroni-pico/main/setting-up-the-pico-sdk.md&#34;&gt;Readme: Instructions for setting up the C/C++ SDK&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;C++ Examples&lt;/h2&gt; &#xA;&lt;p&gt;You can find examples for supported sensors, packs and bases in the &#34;examples&#34; directory:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pimoroni/pimoroni-pico/main/examples&#34;&gt;C++ Examples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Boilerplate for C++ Projects&lt;/h2&gt; &#xA;&lt;p&gt;We also maintain a C++/CMake boilerplate with GitHub workflows configured for testing and a basic skeleton project.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pimoroni/pico-boilerplate&#34;&gt;Pimoroni Pico SDK Boilerplate&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Supported Products&lt;/h1&gt; &#xA;&lt;h2&gt;Packs and Bases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pico Display Pack - &lt;a href=&#34;https://shop.pimoroni.com/products/pico-display-pack&#34;&gt;https://shop.pimoroni.com/products/pico-display-pack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pico Scroll Pack - &lt;a href=&#34;https://shop.pimoroni.com/products/pico-scroll-pack&#34;&gt;https://shop.pimoroni.com/products/pico-scroll-pack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pico Explorer Base - &lt;a href=&#34;https://shop.pimoroni.com/products/pico-explorer-base&#34;&gt;https://shop.pimoroni.com/products/pico-explorer-base&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pico RGB Keypad Base - &lt;a href=&#34;https://shop.pimoroni.com/products/pico-rgb-keypad-base&#34;&gt;https://shop.pimoroni.com/products/pico-rgb-keypad-base&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pico Unicorn Pack - &lt;a href=&#34;https://shop.pimoroni.com/products/pico-unicorn-pack&#34;&gt;https://shop.pimoroni.com/products/pico-unicorn-pack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pico Audio Pack (C++ only) - &lt;a href=&#34;https://shop.pimoroni.com/products/pico-audio-pack&#34;&gt;https://shop.pimoroni.com/products/pico-audio-pack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pico Wireless Pack - &lt;a href=&#34;https://shop.pimoroni.com/products/pico-wireless-pack&#34;&gt;https://shop.pimoroni.com/products/pico-wireless-pack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pico Display 2.0 - &lt;a href=&#34;https://shop.pimoroni.com/products/pico-display-pack-2-0&#34;&gt;https://shop.pimoroni.com/products/pico-display-pack-2-0&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;SHIMs&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;LiPo SHIM for Pico - &lt;a href=&#34;https://shop.pimoroni.com/products/pico-lipo-shim&#34;&gt;https://shop.pimoroni.com/products/pico-lipo-shim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Motor SHIM for Pico - &lt;a href=&#34;https://shop.pimoroni.com/products/motor-shim-for-pico&#34;&gt;https://shop.pimoroni.com/products/motor-shim-for-pico&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;RP2040 Boards&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Plasma 2040 (LED strip driver) - &lt;a href=&#34;https://shop.pimoroni.com/products/plasma-2040&#34;&gt;https://shop.pimoroni.com/products/plasma-2040&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Interstate 75 (HUB75 driver) - &lt;a href=&#34;https://shop.pimoroni.com/products/interstate-75&#34;&gt;https://shop.pimoroni.com/products/interstate-75&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Badger 2040 (E Ink badge) - &lt;a href=&#34;https://shop.pimoroni.com/products/badger-2040&#34;&gt;https://shop.pimoroni.com/products/badger-2040&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Servo 2040 (18 Channel Servo Controller) - &lt;a href=&#34;https://shop.pimoroni.com/products/servo-2040&#34;&gt;https://shop.pimoroni.com/products/servo-2040&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Motor 2040 (Quad Motor+Encoder Controller) - &lt;a href=&#34;https://shop.pimoroni.com/products/motor-2040&#34;&gt;https://shop.pimoroni.com/products/motor-2040&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tufty 2040 (LCD badge) - &lt;a href=&#34;https://shop.pimoroni.com/products/tufty-2040&#34;&gt;https://shop.pimoroni.com/products/tufty-2040&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Breakouts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;AS7262 - 6-channel Spectral Sensor - &lt;a href=&#34;https://shop.pimoroni.com/products/as7262-6-channel-spectral-sensor-spectrometer-breakout&#34;&gt;https://shop.pimoroni.com/products/as7262-6-channel-spectral-sensor-spectrometer-breakout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MSA301 - 3DoF Motion Sensor - &lt;a href=&#34;https://shop.pimoroni.com/products/msa301-3dof-motion-sensor-breakout&#34;&gt;https://shop.pimoroni.com/products/msa301-3dof-motion-sensor-breakout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MICS6814 - Gas Sensor - &lt;a href=&#34;https://shop.pimoroni.com/products/mics6814-gas-sensor-breakout&#34;&gt;https://shop.pimoroni.com/products/mics6814-gas-sensor-breakout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;RGB Potentiometer - &lt;a href=&#34;https://shop.pimoroni.com/products/rgb-potentiometer-breakout&#34;&gt;https://shop.pimoroni.com/products/rgb-potentiometer-breakout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;RGB Encoder - &lt;a href=&#34;https://shop.pimoroni.com/products/rgb-encoder-breakout&#34;&gt;https://shop.pimoroni.com/products/rgb-encoder-breakout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;IO Expander - &lt;a href=&#34;https://shop.pimoroni.com/products/io-expander&#34;&gt;https://shop.pimoroni.com/products/io-expander&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;RV3028 - Real-Time Clock (RTC) - &lt;a href=&#34;https://shop.pimoroni.com/products/rv3028-real-time-clock-rtc-breakout&#34;&gt;https://shop.pimoroni.com/products/rv3028-real-time-clock-rtc-breakout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ST7735 - 0.96&#34; LCD - &lt;a href=&#34;https://shop.pimoroni.com/products/0-96-spi-colour-lcd-160x80-breakout&#34;&gt;https://shop.pimoroni.com/products/0-96-spi-colour-lcd-160x80-breakout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;IS31FL3730 - dual LTP-305 LED matrices - &lt;a href=&#34;https://shop.pimoroni.com/products/led-dot-matrix-breakout&#34;&gt;https://shop.pimoroni.com/products/led-dot-matrix-breakout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LTR559 - Proximity/Presence/Light Sensor - &lt;a href=&#34;https://shop.pimoroni.com/products/ltr-559-light-proximity-sensor-breakout&#34;&gt;https://shop.pimoroni.com/products/ltr-559-light-proximity-sensor-breakout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;IS31FL3731 - 11x7 and 5x5 matrix displays &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://shop.pimoroni.com/products/11x7-led-matrix-breakout&#34;&gt;https://shop.pimoroni.com/products/11x7-led-matrix-breakout&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://shop.pimoroni.com/products/5x5-rgb-matrix-breakout&#34;&gt;https://shop.pimoroni.com/products/5x5-rgb-matrix-breakout&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Trackball - &lt;a href=&#34;https://shop.pimoroni.com/products/trackball-breakout&#34;&gt;https://shop.pimoroni.com/products/trackball-breakout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SGP30 - Air Quality Sensor - &lt;a href=&#34;https://shop.pimoroni.com/products/sgp30-air-quality-sensor-breakout&#34;&gt;https://shop.pimoroni.com/products/sgp30-air-quality-sensor-breakout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ST7789 - 1.3&#34; LCD, 1.54&#34; LCD and 1.3&#34; round LCD &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://shop.pimoroni.com/products/1-3-spi-colour-lcd-240x240-breakout&#34;&gt;https://shop.pimoroni.com/products/1-3-spi-colour-lcd-240x240-breakout&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://shop.pimoroni.com/products/1-3-spi-colour-round-lcd-240x240-breakout&#34;&gt;https://shop.pimoroni.com/products/1-3-spi-colour-round-lcd-240x240-breakout&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://shop.pimoroni.com/products/1-54-spi-colour-square-lcd-240x240-breakout&#34;&gt;https://shop.pimoroni.com/products/1-54-spi-colour-square-lcd-240x240-breakout&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;BME680 - Temperature, Pressure, Humidity &amp;amp; Gas Sensor - &lt;a href=&#34;https://shop.pimoroni.com/products/bme680-breakout&#34;&gt;https://shop.pimoroni.com/products/bme680-breakout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;BME688 - Temperature, Pressure, Humidity &amp;amp; Gas Sensor - &lt;a href=&#34;https://shop.pimoroni.com/products/bme688-breakout&#34;&gt;https://shop.pimoroni.com/products/bme688-breakout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;BH1745 - Luminance &amp;amp; Colour Sensor - &lt;a href=&#34;https://shop.pimoroni.com/products/bh1745-luminance-and-colour-sensor-breakout&#34;&gt;https://shop.pimoroni.com/products/bh1745-luminance-and-colour-sensor-breakout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;BME280 - Temperature, Pressure &amp;amp; Humidity Sensor - &lt;a href=&#34;https://shop.pimoroni.com/products/bme280-breakout&#34;&gt;https://shop.pimoroni.com/products/bme280-breakout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;BMP280 - Temperature &amp;amp; Pressure Sensor - &lt;a href=&#34;https://shop.pimoroni.com/products/bmp280-breakout-temperature-pressure-altitude-sensor&#34;&gt;https://shop.pimoroni.com/products/bmp280-breakout-temperature-pressure-altitude-sensor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;PWM3901/PAA5100JE - Near Optical Flow Sensor - &lt;a href=&#34;https://shop.pimoroni.com/products/paa5100je-optical-tracking-spi-breakout&#34;&gt;https://shop.pimoroni.com/products/paa5100je-optical-tracking-spi-breakout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ICP10125 - High Accuracy Pressure / Altitude / Temperature Sensor - &lt;a href=&#34;https://shop.pimoroni.com/products/icp10125-air-pressure-breakout&#34;&gt;https://shop.pimoroni.com/products/icp10125-air-pressure-breakout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SCD41 CO2 Sensor (Carbon Dioxide / Temperature / Humidity) - &lt;a href=&#34;https://shop.pimoroni.com/products/scd41-co2-sensor-breakout&#34;&gt;https://shop.pimoroni.com/products/scd41-co2-sensor-breakout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;VL53L5CX 8x8 Time of Flight Array Sensor - &lt;a href=&#34;https://shop.pimoroni.com/products/vl53l5cx-time-of-flight-tof-sensor-breakout&#34;&gt;https://shop.pimoroni.com/products/vl53l5cx-time-of-flight-tof-sensor-breakout&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Tutorials &amp;amp; Guides&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;🔗&lt;/span&gt; &lt;a href=&#34;https://learn.pimoroni.com/article/getting-started-with-pico&#34;&gt;Getting started with (MicroPython on) Pico&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🔗&lt;/span&gt; &lt;a href=&#34;https://learn.pimoroni.com/article/pico-development-using-wsl&#34;&gt;Pico C++ Development on Windows / WSL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🔗&lt;/span&gt; &lt;a href=&#34;https://learn.pimoroni.com/article/getting-started-with-interstate-75&#34;&gt;Getting Started with Interstate 75&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🔗&lt;/span&gt; &lt;a href=&#34;https://learn.pimoroni.com/article/plasma-2040&#34;&gt;Getting Started with Plasma 2040&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🔗&lt;/span&gt; &lt;a href=&#34;https://learn.pimoroni.com/article/assembling-keybow-2040&#34;&gt;Assembling Keybow 2040&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🔗&lt;/span&gt; &lt;a href=&#34;https://learn.pimoroni.com/article/getting-started-with-badger-2040&#34;&gt;Getting Started with Badger 2040&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🔗&lt;/span&gt; &lt;a href=&#34;https://learn.pimoroni.com/article/micropython-and-vl53l5cx&#34;&gt;MicroPython and VL53L5CX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🔗&lt;/span&gt; &lt;a href=&#34;https://learn.pimoroni.com/article/getting-started-with-tufty-2040&#34;&gt;Getting Started with Tufty 2040&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>