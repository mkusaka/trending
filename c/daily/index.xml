<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-07T01:28:31Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sz3/cfc</title>
    <updated>2024-09-07T01:28:31Z</updated>
    <id>tag:github.com,2024-09-07:/sz3/cfc</id>
    <link href="https://github.com/sz3/cfc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Demo/test android app for libcimbar. Copy files over the cell phone camera!&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;a href=&#34;https://github.com/sz3/cimbar&#34;&gt;INTRODUCTION&lt;/a&gt; | &lt;a href=&#34;https://github.com/sz3/cimbar/raw/master/ABOUT.md&#34;&gt;ABOUT&lt;/a&gt; | CFC | &lt;a href=&#34;https://github.com/sz3/libcimbar&#34;&gt;LIBCIMBAR&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;CameraFileCopy&lt;/h2&gt; &#xA;&lt;p&gt;This is an android app for receiving data over the camera as a one-way data channel. It does not use any antennas (wifi, bluetooth, nfc, ...) or other tricks. Notably, this means it works just as well in airplane mode.&lt;/p&gt; &#xA;&lt;p&gt;The app reads animated &lt;a href=&#34;https://github.com/sz3/libcimbar&#34;&gt;cimbar codes&lt;/a&gt;. Nearly all the interesting logic is from libcimbar -- included via a git subtree.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;em&gt;sender&lt;/em&gt; component of cfc is a cimbar encoder -- such as &lt;a href=&#34;https://cimbar.org&#34;&gt;https://cimbar.org&lt;/a&gt;. Navigate to that website (or use libcimbar&#39;s &lt;code&gt;cimbar_send&lt;/code&gt; to generate barcodes natively), open a file to initialize the cimbar stream, and point the app+camera at the animated barcode.&lt;/p&gt; &#xA;&lt;h2&gt;Release apks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://f-droid.org/packages/org.cimbar.camerafilecopy/&#34;&gt;&lt;img src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://play.google.com/store/apps/details?id=org.cimbar.camerafilecopy&#34;&gt;&lt;img src=&#34;https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png&#34; alt=&#34;Get it on Google Play&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Release apks are also available here: &lt;a href=&#34;https://github.com/sz3/cfc/releases/&#34;&gt;https://github.com/sz3/cfc/releases/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Only arm64-v8a is officially supported at the moment, because that is all I can test for.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install android studio&lt;/li&gt; &#xA; &lt;li&gt;Install the android ndk&lt;/li&gt; &#xA; &lt;li&gt;Download &lt;a href=&#34;https://github.com/opencv/opencv/releases/download/4.5.0/opencv-4.5.0-android-sdk.zip&#34;&gt;OpenCV for android&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create a project with this repo at the root&lt;/li&gt; &#xA; &lt;li&gt;update &lt;code&gt;gradle.properties&lt;/code&gt; such that &lt;code&gt;opencvsdk&lt;/code&gt; point to wherever you extracted the OpenCV Android SDK.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;I found this project incredibly useful for getting started:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/VlSomers/native-opencv-android-template&#34;&gt;https://github.com/VlSomers/native-opencv-android-template&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;licensing, dependencies, etc&lt;/h2&gt; &#xA;&lt;p&gt;The code in cfc, such as it is, is MIT licensed. It is mostly a blend of various tutorial apps + wrapper code around libcimbar.&lt;/p&gt; &#xA;&lt;p&gt;The libcimbar code is MPL 2.0. libcimbar&#39;s dependencies are a variety of MIT, BSD, zlib, boost, apache, ...&lt;/p&gt;</summary>
  </entry>
</feed>