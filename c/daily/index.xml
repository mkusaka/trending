<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-06T01:27:08Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>WillPower3309/swayfx</title>
    <updated>2024-05-06T01:27:08Z</updated>
    <id>tag:github.com,2024-05-06:/WillPower3309/swayfx</id>
    <link href="https://github.com/WillPower3309/swayfx" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SwayFX: Sway, but with eye candy!&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/WillPower3309/swayfx/master/assets/swayfx_logo.svg?sanitize=true&#34; width=&#34;256&#34; alt=&#34;swayfx logo&#34;&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Sway is an incredible window manager, and certainly one of the most well established wayland window managers. However, it is restricted to only include the functionality that existed in i3. This fork ditches the simple wlr_renderer, and replaces it with our fx_renderer, capable of rendering with fancy GLES2 effects. This, along with a couple of minor changes, expands sway&#39;s featureset to include the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Blur&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Anti-aliased rounded corners, borders, and titlebars&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Shadows&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dim unfocused windows&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Per application saturation control&lt;/strong&gt;: Allows the user to set the saturation (Digital Vibrance) for specific applications. Great for some FPS games!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Scratchpad treated as minimize&lt;/strong&gt;: Allows docks, or panels with a taskbar, to correctly interpret minimize / unminimize requests (&lt;a href=&#34;https://github.com/swaywm/sway/issues/6457&#34;&gt;thanks to LCBCrion&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;nixify the repo&lt;/strong&gt;: Allows nixos users to easily contribute to and test this project&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://repology.org/project/swayfx/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/swayfx.svg?sanitize=true&#34; height=&#34;282&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://raw.githubusercontent.com/WillPower3309/swayfx/master/assets/swayfx_screenshot.jpg&#34; width=&#34;500&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://copr.fedorainfracloud.org/coprs/swayfx/swayfx/&#34;&gt;SwayFX is also available on the Fedora copr&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/qsSx397rkh&#34;&gt;Join our Discord&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;New Configuration Options&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Window blur: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;blur enable|disable&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;blur_xray enable|disable&lt;/code&gt;: this will set floating windows to blur based on the background, not the windows below. You probably want to set this to &lt;code&gt;disable&lt;/code&gt; :)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;blur_passes &amp;lt;integer value 0 - 10&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;blur_radius &amp;lt;integer value 0 - 10&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;blur_noise &amp;lt;float value 0 - 1&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;blur_brightness &amp;lt;float value 0 - 2&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;blur_contrast &amp;lt;float value 0 - 2&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;blur_saturation &amp;lt;float value 0 - 2&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Corner radius: &lt;code&gt;corner_radius &amp;lt;val&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Window shadows: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;shadows enable|disable&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;shadows_on_csd enable|disable&lt;/code&gt; (&lt;strong&gt;Note&lt;/strong&gt;: The shadow might not fit some windows)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;shadow_blur_radius &amp;lt;integer value 0 - 100&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;shadow_color &amp;lt;hex color with alpha&amp;gt; ex, #0000007F&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;shadow_offset &amp;lt;x offset&amp;gt; &amp;lt;y offset&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;shadow_inactive_color &amp;lt;hex color with alpha&amp;gt; ex, #0000007F&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;LayerShell effects (to blur panels / notifications etc): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;layer_effects &amp;lt;layer namespace&amp;gt; &amp;lt;effects&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;The current layer namespaces can be shown with &lt;code&gt;swaymsg -r -t get_outputs | jq &#39;.[0].layer_shell_surfaces | .[] | .namespace&#39;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Example: &lt;code&gt;layer_effects &#34;waybar&#34; blur enable; shadows enable; corner_radius 6&lt;/code&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Note: If an application uses gtk, its namespace is likely to be &#34;gtk-layer-shell&#34;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;SwayIPC Example: &lt;code&gt;swaymsg &#34;layer_effects &#39;waybar&#39; &#39;blur enable; shadows enable; corner_radius 6&#39;&#34;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Available Effects: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;blur &amp;lt;enable|disable&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;blur_ignore_transparent &amp;lt;enable|disable&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;shadows &amp;lt;enable|disable&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;corner_radius &amp;lt;int&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Dim unfocused windows: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;default_dim_inactive &amp;lt;float value 0.0 - 1.0&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;for_window [CRITERIA_HERE] dim_inactive &amp;lt;float value 0.0 - 1.0&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;dim_inactive_colors.unfocused &amp;lt;hex color&amp;gt; ex, #000000FF&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;dim_inactive_colors.urgent &amp;lt;hex color&amp;gt; ex, #900000FF&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Application saturation: &lt;code&gt;for_window [CRITERIA HERE] saturation &amp;lt;set|plus|minus&amp;gt; &amp;lt;val 0.0 &amp;lt;-&amp;gt; 2.0&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Keep/remove separator border between titlebar and content: &lt;code&gt;titlebar_separator enable|disable&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Treat Scratchpad as minimized: &lt;code&gt;scratchpad_minimize enable|disable&lt;/code&gt;: &lt;strong&gt;we recommend keeping this setting off, as there are many kinks to iron out here&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;fade in / out animations&lt;/li&gt; &#xA; &lt;li&gt;window movement animations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compiling From Source&lt;/h2&gt; &#xA;&lt;h3&gt;Nix&lt;/h3&gt; &#xA;&lt;p&gt;If you have Nix installed, you can build and run SwayFX easily:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nix build&#xA;./result/bin/sway&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also bring up a development shell and follow the build instructions below, without installing all of the dependencies manually:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nix develop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Debian&lt;/h3&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://raw.githubusercontent.com/WillPower3309/swayfx/master/INSTALL-deb.md&#34;&gt;INSTALL-deb.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Manual Steps&lt;/h3&gt; &#xA;&lt;p&gt;Install dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;meson *&lt;/li&gt; &#xA; &lt;li&gt;wlroots&lt;/li&gt; &#xA; &lt;li&gt;wayland&lt;/li&gt; &#xA; &lt;li&gt;wayland-protocols *&lt;/li&gt; &#xA; &lt;li&gt;pcre2&lt;/li&gt; &#xA; &lt;li&gt;json-c&lt;/li&gt; &#xA; &lt;li&gt;pango&lt;/li&gt; &#xA; &lt;li&gt;cairo&lt;/li&gt; &#xA; &lt;li&gt;gdk-pixbuf2 (optional: additional image formats for system tray)&lt;/li&gt; &#xA; &lt;li&gt;[swaybg] (optional: wallpaper)&lt;/li&gt; &#xA; &lt;li&gt;[scdoc] (optional: man pages) *&lt;/li&gt; &#xA; &lt;li&gt;git (optional: version info) *&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;* Compile-time dep&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Run these commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;meson build/&#xA;ninja -C build/&#xA;sudo ninja -C build/ install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On systems without logind nor seatd, you need to suid the sway binary:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo chmod a+s /usr/local/bin/sway&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;SwayFX will drop root permissions shortly after startup.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;SwayFX would love to receive any new features that you&#39;re willing to build! Generally, we&#39;d like to focus on eye-candy type improvements to keep our scope appropriate. If you&#39;d like to build something that you think may be out of that focus, please raise an issue and we can discuss whether or not it will fit within this project.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s a quick outline of where most of our changes lie vs the main sway repository:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;sway/desktop/render.c&lt;/code&gt;: the file that handles calling &lt;code&gt;fx_renderer&lt;/code&gt; to render to the screen, handles damage tracking and scaling&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sway/desktop/fx_renderer/fx_renderer.c&lt;/code&gt;: the meat and potatoes of this project, structured as similarly to wlr_renderer as possible&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sway/desktop/fx_renderer/shaders&lt;/code&gt;: where all of the shaders that fx_renderer uses live&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;The SwayFX team would like to first and foremost thank the maintainers and contributors of the Sway window manager. We are but a humble group of Sway enthusiasts who wanted to expand upon your creation.&lt;/p&gt; &#xA;&lt;p&gt;We would also like to thank the talented artists in our community for contibuting the visual assets that give this project charm:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;pkdesuwu and honchokomodo for creating the swayfx mascot: &lt;a href=&#34;https://twitter.com/pkdesuwu/status/1664517033017368576&#34;&gt;https://twitter.com/pkdesuwu/status/1664517033017368576&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;spooky_skeleton for the swayfx logo, and &lt;a href=&#34;https://basil.cafe&#34;&gt;Basil&lt;/a&gt; for making some fine adjustments to it&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Lastly, we would like to thank you, the community, for enjoying and using window manager that we have spent so much time maintaining.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>asg017/sqlite-vec</title>
    <updated>2024-05-06T01:27:08Z</updated>
    <id>tag:github.com,2024-05-06:/asg017/sqlite-vec</id>
    <link href="https://github.com/asg017/sqlite-vec" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Work-in-progress vector search SQLite extension that runs anywhere.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;sqlite-vec&lt;/code&gt;&lt;/h1&gt; &#xA;&lt;p&gt;An extremely small, &#34;fast enough&#34; vector search SQLite extension that runs anywhere! A successor to &lt;a href=&#34;https://github.com/asg017/sqlite-vss&#34;&gt;sqlite-vss&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] &lt;em&gt;&lt;code&gt;sqlite-vec&lt;/code&gt; is a work-in-progress and not ready for general usage! I plan to launch a &#34;beta&#34; version in the next month or so. Watch this repo for updates, and read &lt;a href=&#34;https://alexgarcia.xyz/blog/2024/building-new-vector-search-sqlite/index.html&#34;&gt;this blog post&lt;/a&gt; for more info.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Store and query float, int8, and binary vectors in &lt;code&gt;vec0&lt;/code&gt; virtual tables&lt;/li&gt; &#xA; &lt;li&gt;Pre-filter vectors with &lt;code&gt;rowid IN (...)&lt;/code&gt; subqueries&lt;/li&gt; &#xA; &lt;li&gt;Written in pure C, no dependencies, runs anywhere SQLite runs (Linux/MacOS/Windows, in the browser with WASM, Raspberry Pis, etc.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sample usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;.load ./vec0&#xA;&#xA;create virtual table vec_examples using vec0(&#xA;  sample_embedding float[8]&#xA;);&#xA;&#xA;-- vectors can be provided as JSON or in a compact binary format&#xA;insert into vec_examples(rowid, sample_embedding)&#xA;  values&#xA;    (1, &#39;[-0.200, 0.250, 0.341, -0.211, 0.645, 0.935, -0.316, -0.924]&#39;),&#xA;    (2, &#39;[0.443, -0.501, 0.355, -0.771, 0.707, -0.708, -0.185, 0.362]&#39;),&#xA;    (3, &#39;[0.716, -0.927, 0.134, 0.052, -0.669, 0.793, -0.634, -0.162]&#39;),&#xA;    (4, &#39;[-0.710, 0.330, 0.656, 0.041, -0.990, 0.726, 0.385, -0.958]&#39;);&#xA;&#xA;&#xA;-- KNN style query goes brrrr&#xA;select&#xA;  rowid,&#xA;  distance&#xA;from vec_examples&#xA;where sample_embedding match &#39;[0.890, 0.544, 0.825, 0.961, 0.358, 0.0196, 0.521, 0.175]&#39;&#xA;order by distance&#xA;limit 2;&#xA;/*&#xA;┌───────┬──────────────────┐&#xA;│ rowid │     distance     │&#xA;├───────┼──────────────────┤&#xA;│ 2     │ 2.38687372207642 │&#xA;│ 1     │ 2.38978505134583 │&#xA;└───────┴──────────────────┘&#xA;*/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;Not currently implemented, but planned in the future (after initial beta version):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Approximate nearest neighbors search (IVF and HNSW)&lt;/li&gt; &#xA; &lt;li&gt;Metadata filtering + custom internal partitioning&lt;/li&gt; &#xA; &lt;li&gt;More vector types (float16, int16, sparse, etc.) and distance functions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additionally, there will be pre-compiled and pre-packaged packages of &lt;code&gt;sqlite-vec&lt;/code&gt; for the following platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;pip&lt;/code&gt; for Python&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm&lt;/code&gt; for Node.js / Deno / Bun&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gem&lt;/code&gt; for Ruby&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cargo&lt;/code&gt; for Rust&lt;/li&gt; &#xA; &lt;li&gt;A single &lt;code&gt;.c&lt;/code&gt; and &lt;code&gt;.h&lt;/code&gt; amalgammation for C/C++&lt;/li&gt; &#xA; &lt;li&gt;Go module for Golang (requires CGO)&lt;/li&gt; &#xA; &lt;li&gt;Datasette and sqlite-utils plugins&lt;/li&gt; &#xA; &lt;li&gt;Pre-compiled loadable extensions on Github releases&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Is your company interested in sponsoring &lt;code&gt;sqlite-vec&lt;/code&gt; development? Send me an email to get more info: &lt;a href=&#34;https://alexgarcia.xyz&#34;&gt;https://alexgarcia.xyz&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>