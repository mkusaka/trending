<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-06T01:24:27Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wangfly-me/LoaderFly</title>
    <updated>2023-09-06T01:24:27Z</updated>
    <id>tag:github.com,2023-09-06:/wangfly-me/LoaderFly</id>
    <link href="https://github.com/wangfly-me/LoaderFly" rel="alternate"></link>
    <summary type="html">&lt;p&gt;助力每一位RT队员，快速生成免杀木马&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LoaderFly&lt;/h1&gt; &#xA;&lt;p&gt;原版程序：&lt;a href=&#34;https://github.com/knownsec/shellcodeloader&#34;&gt;https://github.com/knownsec/shellcodeloader&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;二开作者：Wangfly&lt;/p&gt; &#xA;&lt;p&gt;请大家多多提交issues，感谢！！！&lt;/p&gt; &#xA;&lt;h2&gt;开发需求&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;原版项目已经不免杀了，需要bypass常见杀软。&lt;/li&gt; &#xA; &lt;li&gt;在HW、攻防演练等场景下，需要快速生成免杀木马，并且保证文件md5都不一样。&lt;/li&gt; &#xA; &lt;li&gt;节约时间，不用在项目上，投入专门的人员进行代码编写。&lt;/li&gt; &#xA; &lt;li&gt;高度可拓展和自定义。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;魔改二开&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;远程加载将Shellcode和loader分开，loader里面只保留Shellcode的URL地址，方便随时销毁。&lt;/li&gt; &#xA; &lt;li&gt;加入Hex、Base64（自定义）加密算法，保留原本的流加密算法，以当前时间戳为key，进行对URL加密，将其保存在资源节中。&lt;/li&gt; &#xA; &lt;li&gt;木马名称随机化，加上流加密算法，使得每次生成的木马md5都不一样。&lt;/li&gt; &#xA; &lt;li&gt;加入了AES（外部传key）、Base64（自定义）、RC4（自定义）算法加密解密Shellcode。&lt;/li&gt; &#xA; &lt;li&gt;高危Windows API，全部采用动态加载的方式，能够使用NT函数替换的全部进行了替换，部分模板的函数API进行了UnhookPatch。&lt;/li&gt; &#xA; &lt;li&gt;针对卡巴斯基、Norton等对内存查杀较严的杀软，采取IAT Hook和VEH Hook对Beacon进行内存加密+配合C2profile的Sleep_mask选项和自定义通信方式基本无解。&lt;/li&gt; &#xA; &lt;li&gt;针对Norton、360qvm等静态查杀较严的杀软，使用Arkari进行代码混淆。&lt;/li&gt; &#xA; &lt;li&gt;增强完善了反沙箱、反调试。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;上线方式&lt;/h2&gt; &#xA;&lt;h3&gt;64位&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wangfly-me/LoaderFly/master/assets/image-20230822232402552.png&#34; alt=&#34;image-20230822232402552&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;32位&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wangfly-me/LoaderFly/master/assets/image-20230822232413254.png&#34; alt=&#34;image-20230822232413254&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;编译设置&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Release进行编译，设置为MT、/arch：x64、&lt;strong&gt;语言标准选择C++ 17&lt;/strong&gt;，生成的文件是&lt;strong&gt;DAT&lt;/strong&gt;后缀的。&lt;/li&gt; &#xA; &lt;li&gt;若你的vs2022有安装集成&lt;a href=&#34;https://github.com/KomiMoe/Arkari&#34;&gt;Arkari&lt;/a&gt;，那么免杀效果更好，没有的话，普通生成即可。&lt;/li&gt; &#xA; &lt;li&gt;模板代码选择不生成Debug调试信息和清单文件，还需要调整堆栈保留大小为3MB。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;食用方式&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;加密Shellcode，选择Stagerless，生成RAW格式。&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wangfly-me/LoaderFly/master/assets/image-20230816120053410.png&#34; alt=&#34;image-20230816120053410&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;生成的beacon.bin放入程序目录下，然后运行命令加密，AES key可以自定义（256bit）。&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;encbin.exe bin文件 AES key&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wangfly-me/LoaderFly/master/assets/image-20230820163154848.png&#34; alt=&#34;image-20230820163154848&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;将P.bmp上传至云端生成链接，&lt;strong&gt;链接必须是访问后，自动下载那种&lt;/strong&gt;。&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wangfly-me/LoaderFly/master/assets/image-20230817102138676.png&#34; alt=&#34;image-20230817102138676&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;URL填入，AES key填入，选择模板生成即可。&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wangfly-me/LoaderFly/master/assets/image-20230820163357653.png&#34; alt=&#34;image-20230820163357653&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;整体免杀效果&lt;/h2&gt; &#xA;&lt;h3&gt;卡巴斯基企业版&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wangfly-me/LoaderFly/master/assets/image-20230815190009417.png&#34; alt=&#34;image-20230815190009417&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Norton&lt;/h3&gt; &#xA;&lt;p&gt;启发式查杀很厉害，需要给木马加入正常程序的图标、版本信息、清单、数字签名。必须使用Bof操作，shell运行就掉线。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wangfly-me/LoaderFly/master/assets/image-20230815190031226.png&#34; alt=&#34;image-20230815190031226&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;ESET&lt;/h3&gt; &#xA;&lt;p&gt;自定义扫描了系统内存和桌面文件。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wangfly-me/LoaderFly/master/assets/image-20230815190420375.png&#34; alt=&#34;image-20230815190420375&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;360全家桶（物理机）&lt;/h3&gt; &#xA;&lt;p&gt;QVM引擎（很疯狂，大部分时候真不是代码问题）需要做和Norton一样的处理。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wangfly-me/LoaderFly/master/assets/image-20230815191239326.png&#34; alt=&#34;image-20230815191239326&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;WDF（2016服务器版本）&lt;/h3&gt; &#xA;&lt;p&gt;运行后会提示你复查，不用管，依旧可以上线。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wangfly-me/LoaderFly/master/assets/image-20230815191606194.png&#34; alt=&#34;image-20230815191606194&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;火绒+金山&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wangfly-me/LoaderFly/master/assets/image-20230815192037892.png&#34; alt=&#34;image-20230815192037892&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;McAfee&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wangfly-me/LoaderFly/master/assets/image-20230815231506639.png&#34; alt=&#34;image-20230815231506639&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;单个免杀效果&lt;/h2&gt; &#xA;&lt;p&gt;部分杀软需要添加白程序的签名、版权信息等，如Norton、360、Symantec。&lt;/p&gt; &#xA;&lt;h4&gt;APC-Injetc+Ntdll&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;bypass&lt;/strong&gt;：金山（数字签名）、火绒、ESET、360全家桶（物理机）、WDF（PC）、McAfee、卡巴企业版（时间5s 抖动50 Sleep_mask）&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;nobypass&lt;/strong&gt;：WDF（服务器无法上线）、Norton（静态）&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;CreateRemoteThread+Syscall+Ntdll Inject&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;bypass&lt;/strong&gt;：McAfee、火绒、金山（数字签名）、ESET、360全家桶（物理机）、WDF（PC）、卡巴企业版（时间5s 抖动50 Sleep_mask）&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;nobypass&lt;/strong&gt;：Norton（静态）、WDF（服务器无法上线）&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;CreateThread-Inject+IAT Hook Inject&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;bypass&lt;/strong&gt;：McAfee、金山（数字签名）、火绒、ESET、卡巴企业版（时间5s 抖动50 Sleep_mask）、360全家桶（物理机）、Norton（加白程序资源）、WDF（PC）、WDF（Server）、Symantec（加白程序资源）&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;nobypass&lt;/strong&gt;：&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;CreateThreatPoolWait+VEH Hook&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;bypass&lt;/strong&gt;：McAfee、金山（数字签名）、火绒、ESET、卡巴企业版（时间5s 抖动50 Sleep_mask）、360全家桶（物理机）、Norton（加白程序资源）、WDF（PC）、WDF（服务器）&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;nobypass&lt;/strong&gt;：&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;Fiber+VEH Hook Load&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;bypass&lt;/strong&gt;：金山（数字签名）、火绒、ESET、360全家桶（物理机）、WDF（PC）、WDF（服务器提示复查（关云保护））、McAfee、Norton（加白程序资源）、卡巴企业版（时间5s 抖动50 Sleep_mask）&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;nobypass&lt;/strong&gt;：&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;NtTestAlert+VEH Hook Load&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;bypass&lt;/strong&gt;：金山（数字签名）、火绒、ESET、卡巴企业版（时间5s 抖动50 Sleep_mask）、360全家桶（物理机）、WDF（PC）、WDF（服务器提示）、McAfee、Norton（加白程序资源）&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;nobypass&lt;/strong&gt;：&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;Syscall+IAT Hook Load&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;bypass&lt;/strong&gt;：金山（数字签名）、火绒、ESET、卡巴企业版（时间5s 抖动50 Sleep_mask）、360全家桶（物理机）、Norton（加白程序资源）、WDF（PC）、WDF（服务器）、McAfee&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;nobypass&lt;/strong&gt;：&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;Callback+IAT Hook Load plus（x86）&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;bypass&lt;/strong&gt;：360全家桶（物理机）、WDF（PC）、ESET、金山（数字签名）、火绒、WDF（服务器提）、McAfee、卡巴企业版&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;nobypass&lt;/strong&gt;：Norton（静态）&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;memoryMapInjection+Syscall+Ntdll&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;bypass&lt;/strong&gt;：360全家桶（物理机）、WDF（PC）、ESET、金山（数字签名）、火绒、WDF（服务器）、McAfee、卡巴企业版（时间5s 抖动50 Sleep_mask）&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;nobypass&lt;/strong&gt;：Norton（静态），WDF（服务器）&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;Function+VEH Hook Load&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;bypass&lt;/strong&gt;：卡巴企业版、ESET、McAfee、金山（数字签名）、火绒、360全家桶（物理机）（数字签名+版权信息+清单+图标（可有可无））、WDF（PC）、ESET&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;nobypass&lt;/strong&gt;：Norton（静态）&lt;/p&gt; &#xA;&lt;h2&gt;版本迭代&lt;/h2&gt; &#xA;&lt;h3&gt;1.0版本&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;删除部分无效加载器模板。&lt;/li&gt; &#xA; &lt;li&gt;完成预定的魔改需求, 更改加密、加入高阶的动态上线方式。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;2.0版本&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;APC注入加载器中增加虚假父进程功能。&lt;/li&gt; &#xA; &lt;li&gt;增加钓鱼模式，有弹窗事件产生和鼠标移动检测。&lt;/li&gt; &#xA; &lt;li&gt;改进APC-Injetc+UnhookingPatch、CreateRemoteThread+Syscall Inject、CreateThread-Inject+IAT Hook Inject三种加载模板。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;3.0版本&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;修复APC-Injetc+UnhookingPatch、CreateRemoteThread+Syscall Inject父进程句柄继承问题、加入重载Ntdll.dll功能，清除EDR挂钩。&lt;/li&gt; &#xA; &lt;li&gt;UI界面增大，看着更舒服。&lt;/li&gt; &#xA; &lt;li&gt;继续修改Dynamic+IAT Hook Load plus（x86），加入回调函数机制，重命名为Callback+IAT Hook Load plus（x86）,实现bypass卡巴。&lt;/li&gt; &#xA; &lt;li&gt;修改框架输入，实现输入一个URL即可生成。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;4.0版本&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;增加memoryMapInjection+Syscall+Ntdll、Function+VEH Hook Load两个模板。&lt;/li&gt; &#xA; &lt;li&gt;删除失效报毒的反沙箱、调试代码。&lt;/li&gt; &#xA; &lt;li&gt;减少解密算法冗余。&lt;/li&gt; &#xA; &lt;li&gt;修改生成器的缓冲区bug。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;5.0版本（开源）&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;APC-Injetc+Ntdll进行改进使用NT函数进行APC注入，bypass卡巴动态。&lt;/li&gt; &#xA; &lt;li&gt;增加输入自定义AES Key的功能。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;注意事项&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;在此声明，未经授权不要拿去做违法事情，若出任何事情与本人无关。&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;大部分代码已经开源，但模板只给了一个APC注入的模板，以供学习参考，后续会逐个开源。&lt;/li&gt; &#xA; &lt;li&gt;可以根据已有的模板和原作者的项目进行拓展开发。&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>FiniteSingularity/obs-composite-blur</title>
    <updated>2023-09-06T01:24:27Z</updated>
    <id>tag:github.com,2023-09-06:/FiniteSingularity/obs-composite-blur</id>
    <link href="https://github.com/FiniteSingularity/obs-composite-blur" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A comprehensive blur plugin for OBS that provides several different blur algorithms, and proper compositing.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/.github/assets/composite-blur-logo.png&#34; alt=&#34;Composite Blur Logo&#34;&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;i align=&#34;center&#34;&gt;A feature rich and efficient blur plugin for OBS&lt;/i&gt; &lt;/p&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/FiniteSingularity/obs-composite-blur/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/finitesingularity/obs-composite-blur?filter=*&amp;amp;style=flat-square&amp;amp;label=Latest&#34; alt=&#34;Latest release&#34;&gt; &lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/OBS-28_|_29_|_30-blue.svg?style=flat-square&#34; alt=&#34;supports obs versions 28, 29, and 30&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Windows-0078D6?style=flat-square&amp;amp;logo=windows&amp;amp;logoColor=white&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/mac%20os-000000?style=flat-square&amp;amp;logo=apple&amp;amp;logoColor=white&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Linux-FCC624?style=flat-square&amp;amp;logo=linux&amp;amp;logoColor=black&#34;&gt;&lt;br&gt; &lt;a href=&#34;https://twitter.com/FiniteSingulrty&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Twitter-1DA1F2?style=flat-square&amp;amp;logo=twitter&amp;amp;logoColor=white&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitch.tv/finitesingularity&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Twitch-9146FF?style=flat-square&amp;amp;logo=twitch&amp;amp;logoColor=white&#34;&gt; &lt;/a&gt; &lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; While we only release new versions of Composite Blur after testing it on local hardware, there are bugs and issues that will slip through. If you happen to run into any issues, please &lt;a href=&#34;https://github.com/finitesingularity/obs-composite-blur/issues&#34;&gt;open an issue&lt;/a&gt; and we will work to resolve it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Composite Blur Plugin is a comprehensive blur plugin that provides blur algorithms and types for all levels of quality and computational need.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🚀 Composite Blur provides several highly optimized &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#blur-algorithms&#34;&gt;blur algorithms&lt;/a&gt; including &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#gaussian&#34;&gt;Gaussian&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#box&#34;&gt;Multi-Pass Box&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#dual-kawase-dual-filter&#34;&gt;Dual Kawase&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#pixelate&#34;&gt;Pixelate&lt;/a&gt;. Composite Blur also support Windows, MacOS, and Linux for &lt;em&gt;all&lt;/em&gt; blur types.&lt;/li&gt; &#xA; &lt;li&gt;📦 Composite Blur provides multiple &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#blur-effects&#34;&gt;blur effects&lt;/a&gt; to give a different look and feel to the blur including &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#area&#34;&gt;Area&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#directional&#34;&gt;Directional&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#zoom&#34;&gt;Zoom&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#motion&#34;&gt;Motion&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#tilt-shift&#34;&gt;Tilt-Shift&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;➕ Composite Blur also allows setting a &lt;code&gt;Background Source&lt;/code&gt; so that it can properly &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#composite-background&#34;&gt;composite blurred masks&lt;/a&gt;, allowing you to properly layer blurred sources.&lt;/li&gt; &#xA; &lt;li&gt;🎭 Finally, Composite Blur provides an option to mask where and how much blurring occurs on the source via &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#crop&#34;&gt;Crop&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#rectangle&#34;&gt;Rectangle&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#circle&#34;&gt;Circle&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#source&#34;&gt;Source&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#image&#34;&gt;Image&lt;/a&gt; masks.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Go to the &lt;a href=&#34;https://github.com/FiniteSingularity/obs-composite-blur/releases&#34;&gt;Releases Page&lt;/a&gt;, click &lt;code&gt;Assets&lt;/code&gt; under the latest release, and select either the Windows, MacOS, or Linux installer. Download the file, and run it, to install for your copy of OBS.&lt;/p&gt; &#xA;&lt;h3&gt;From AUR&lt;/h3&gt; &#xA;&lt;p&gt;Arch Linux users can install obs-composite-blur from the &lt;a href=&#34;https://aur.archlinux.org/&#34;&gt;AUR&lt;/a&gt; using an &lt;a href=&#34;https://wiki.archlinux.org/title/AUR_helpers&#34;&gt;AUR helper&lt;/a&gt;. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;paru -S obs-composite-blur&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Blur Algorithms&lt;/h2&gt; &#xA;&lt;p&gt;Composite Blur provides several different algorithms to blur your sources. The blur algorithms are written with performance in mind using techniques like linear sampling and GPU texture interpolation to stretch what your GPU can do. Additonally, the algorithms have been written with finely adjustable blur amounts, that allow for smooth transitions and animations when using other plugins like Move Transition.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/.github/assets/blur-algorithms.png&#34; alt=&#34;Blur Algorithms&#34;&gt; &lt;em&gt;Example showing area blur for different algorithms. Click image for full resolution&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Gaussian&lt;/h3&gt; &#xA;&lt;p&gt;A high quality blur algorithm that uses a gaussian kernel to sample/blur. Gaussian sampling results in an aestetically pleasing blur, but becomes computationally intensive at higher blur radius. This plugin supports fractional pixels for Gaussian blur, which allows for smooth animation when using plugins like Move Transition. The Gaussian Blur Algorithm supports &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#area&#34;&gt;Area&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#directional&#34;&gt;Directional&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#zoom&#34;&gt;Zoom&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#motion&#34;&gt;Motion&lt;/a&gt; blur effects.&lt;/p&gt; &#xA;&lt;h3&gt;Box&lt;/h3&gt; &#xA;&lt;p&gt;Box blur works similar to Gaussian, but uses an equally weighted sample of surrounding pixels. The upside is a more efficient blurring algorithm, at the expense of some quality. With one pass, box blur can cause some blocky artifacts in some cases. This can be mitigated by increasing the number of passes- a 2 pass box blur has nearly the same quality as Gaussian blur. This plugin allows the user to specify up to 5 passes. Similar to Gaussian, this implementation of box blur allows for fractional pixels for smooth animation. The Box Blur Algorithm supports &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#area&#34;&gt;Area&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#directional&#34;&gt;Directional&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#zoom&#34;&gt;Zoom&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#tilt-shift&#34;&gt;Tilt-Shift&lt;/a&gt; blur effects.&lt;/p&gt; &#xA;&lt;h3&gt;Dual Kawase (Dual Filter)&lt;/h3&gt; &#xA;&lt;p&gt;Dual Kawase is a blurring algorithm that uses down and upsampling in order to blur the image. It has a high quality blur with little artifacting and is computationally efficient especially at larger blur values. The naieve implementation of Dual Kawase however has very large jumps in blur- essentially doubling the blur at each step. This implementation sacrafices a small amount of efficiency, but allows intermediate blur values by using linear interpolation during the final downsamping step. This gives a continuous change in blur values. The most common use for Dual Kawase is when you need a very high blur radius, but with the linear interpolation step this implementation has, it can also be used as a general blur. Due to how the algorithm works, only &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#area&#34;&gt;Area&lt;/a&gt; blur is available.&lt;/p&gt; &#xA;&lt;h3&gt;Pixelate&lt;/h3&gt; &#xA;&lt;p&gt;Pixelate divides the souce into larger pixels, effectively downsampling the image, and giving it a bitmap like appearance. This plugin allows the user to specify the pixel size and shape. Supported shapes are Square, Hexagon, Triangle, and Circle. As with the other algorithms, fractional pixel sizes (blur radius) are supported. The Pixelate Algorithm only supports the &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#area&#34;&gt;Area&lt;/a&gt; blur effect.&lt;/p&gt; &#xA;&lt;h2&gt;Blur Effects&lt;/h2&gt; &#xA;&lt;p&gt;Composite Blur provides several different blur effects or types, all giving a different feel to the resulting image.&lt;/p&gt; &#xA;&lt;h3&gt;Area&lt;/h3&gt; &#xA;&lt;p&gt;Area blur is the typical 2D blur where pixels are blurred equally in all directions. The only adjustable input for area blur is the blur radius (or pixel size for pixelate) &lt;img src=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/.github/assets/area-blur.png&#34; alt=&#34;Area Blur Example&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Directional&lt;/h3&gt; &#xA;&lt;p&gt;Directional blur is a blur applied along a single axis, but is blurred in both the positive and negative direction. Adjustable inputs for directional blur are the blur radius and direction angle. &lt;img src=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/.github/assets/directional-blur.png&#34; alt=&#34;Directional Blur Example&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Motion&lt;/h3&gt; &#xA;&lt;p&gt;Motion blur is similar to &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#directional&#34;&gt;Directional Blur&lt;/a&gt;, however it is applied in only the positive direction along the blur axis. This yields an image that simulates a camera capturing blur due to motion in a particular direction. Adjustable inputs are blur radius and direction angle. &lt;img src=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/.github/assets/motion-blur.png&#34; alt=&#34;Motion Blur Example&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Zoom&lt;/h3&gt; &#xA;&lt;p&gt;Zoom blur is applied away from a center zoom point, and increases the further from the center point the pixel being blurred is. This yields an image that looks like the viewer is zooming into the center zoom point. Adjustable inputs are blur radius, and center zoom point location. &lt;img src=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/.github/assets/zoom-blur.png&#34; alt=&#34;Zoom Blur Example&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tilt-Shift&lt;/h3&gt; &#xA;&lt;p&gt;Tilt-Shift blur defines an in-focus plane, specified by a location in the frame, and a thickness. All pixels outside of the in-focus plane have their blur value increased the further away from the plane they are. The resulting image gives a distorted sense of scale, making large objects look like mineature models. When applied to video scenes like a city street, the effect can be significant. Adjustable inputs are blur radius, focus plane angle, focus plane location, and focus plane thickness. &lt;img src=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/.github/assets/tilt-shift-blur.png&#34; alt=&#34;Tilt Shift Blur Example&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Composite Background&lt;/h2&gt; &#xA;&lt;p&gt;Blurring sources that have different dimensions than the canvas can be difficult to do in OBS, as filters do not have access to what is being blurred behind the filtered source. Composite Blur gives users the option to add a second OBS source as the &lt;code&gt;Background Source for Compositing&lt;/code&gt; input, allowing the blur algorithms to mix in the proper color. This prevents the dark halos that are seen around such masked sources after blurring. This does, however, require that both the masked/blurred source, and the background source, have the same aspect ratio, and 1:1 overlay/coverage.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/.github/assets/background-composite.png&#34; alt=&#34;Background Composite Source Example&#34;&gt; &lt;em&gt;An example with and without background source compositing. Notice the dark halo around the non-composited facecam, versus the smooth and more natural blurring into the background when a background source is provided.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; There is currently a bug that requires composite background enabled sources to set their blending method to SRGB Off if the source is cropped in OBS. To do this, right click the source, and select &#39;SRGB Off&#39; under &lt;code&gt;Blending Method&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Effect Masking&lt;/h2&gt; &#xA;&lt;p&gt;Composite Blur offers a variety of ways to mask where and how blur is applied to your source. For all mask options, the mask can also be inverted by checking the &#34;Invert Mask&#34; box. The following options are available.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/.github/assets/mask-examples.png&#34; alt=&#34;Effect Mask Examples&#34;&gt; &lt;em&gt;Examples of the different types of masks.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Crop&lt;/h3&gt; &#xA;&lt;p&gt;Specify the percentage distance in from the top, bottom, left, and right edges of your source that you want masked. Additionally, the crop mask allows you to specify a corner radius for those smooth rounded corners.&lt;/p&gt; &#xA;&lt;h3&gt;Rectangle&lt;/h3&gt; &#xA;&lt;p&gt;Is the same as the &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#crop&#34;&gt;Crop&lt;/a&gt; option, but instead of specifying the edges, you specify the center of the rectangle, the rectangle width, and rectangle height. This is easier to use with plugins like Move Transition if you want to animate the movement or size of the rectangular masked blur.&lt;/p&gt; &#xA;&lt;h3&gt;Circle&lt;/h3&gt; &#xA;&lt;p&gt;Similar to the &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#rectangle&#34;&gt;Rectangle&lt;/a&gt; option, but lets you specify the center of a circle and its radius. Some nice sweep effects can be made by using a very large circle, and moving it from off the source (less than 0 or greater than 100 for the center coordinates) over the source.&lt;/p&gt; &#xA;&lt;h3&gt;Source&lt;/h3&gt; &#xA;&lt;p&gt;Use another OBS source or scene as a mask for your blur. Simply select the source or scene you want to use, and then specify if you want to use the source&#39;s alpha channel, grayscale value, luminosity, or a custom combination of the red, green, blue, and alpha channels to mask the blur effect. You can also multiply the resulting mask by a value. The multiply value comes in handy if you have a translucent source, but want everything behind the translucent source to be fully blurred.&lt;/p&gt; &#xA;&lt;h3&gt;Image&lt;/h3&gt; &#xA;&lt;p&gt;All of the same options as &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#source&#34;&gt;Source&lt;/a&gt;, but allows you to select an image file rather than a source.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/FiniteSingularity&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/72580859?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;FiniteSingularity&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;FiniteSingularity&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#code-FiniteSingularity&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#doc-FiniteSingularity&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/exeldro&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5457024?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Exeldro&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Exeldro&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#code-exeldro&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/prgmitchell&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/86465454?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;prgmitchell&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;prgmitchell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#bug-prgmitchell&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://www.youtube.com/andilippi&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/64610623?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Andi Stone&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andi Stone&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#bug-andilippi&#34; title=&#34;Bug reports&#34;&gt;🐛&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://home.dnaka91.rocks&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/36804488?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Dominik Nakamura&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dominik Nakamura&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#doc-dnaka91&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/FiniteSingularity/obs-composite-blur/main/#platform-dnaka91&#34; title=&#34;Packaging/porting to new platform&#34;&gt;📦&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://allcontributors.org&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind are welcome!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>samboy/MaraDNS</title>
    <updated>2023-09-06T01:24:27Z</updated>
    <id>tag:github.com,2023-09-06:/samboy/MaraDNS</id>
    <link href="https://github.com/samboy/MaraDNS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MaraDNS: A small open-source DNS server&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;What is MaraDNS&lt;/h1&gt; &#xA;&lt;p&gt;MaraDNS is a free open-source computer program written by Sam Trenholme.&lt;/p&gt; &#xA;&lt;p&gt;MaraDNS implements the Domain Name System (DNS), an essential internet service. MaraDNS is open source software: This means that anyone is free to download, use, and modify the program free of charge, as per its license.&lt;/p&gt; &#xA;&lt;p&gt;People like MaraDNS because it’s small, lightweight, easy to set up, and remarkably secure. It’s also cross platform — the program runs both in Windows and in UNIX clones.&lt;/p&gt; &#xA;&lt;p&gt;MaraDNS has a web page and blog at &lt;a href=&#34;https://maradns.samiam.org&#34;&gt;https://maradns.samiam.org&lt;/a&gt;. MaraDNS’s Git tree is hosted at &lt;a href=&#34;https://github.com/samboy/MaraDNS&#34;&gt;GitHub&lt;/a&gt;, &lt;a href=&#34;https://gitlab.com/maradns/maradns&#34;&gt;GitLab&lt;/a&gt;, &lt;a href=&#34;https://bitbucket.org/maradns/maradns/&#34;&gt;Bitbucket&lt;/a&gt;, &lt;a href=&#34;https://codeberg.org/samboy/MaraDNS&#34;&gt;Codeberg&lt;/a&gt;, and &lt;a href=&#34;https://git.sr.ht/~samiam/MaraDNS&#34;&gt;SourceHut&lt;/a&gt; (Please use GitHub for bug reports).&lt;/p&gt; &#xA;&lt;h1&gt;ABOUT&lt;/h1&gt; &#xA;&lt;p&gt;MaraDNS is a small and lightweight cross-platform open-source DNS server. The server is remarkably easy to configure for someone comfortable editing text configuration files. MaraDNS is released under a BSD license.&lt;/p&gt; &#xA;&lt;p&gt;I initially wrote MaraDNS while I was a college student and a travelling English teacher during the first 2000s decade.&lt;/p&gt; &#xA;&lt;p&gt;Since the COVID-19 pandemic, I have been actively adding new features to MaraDNS, most notably the new &lt;code&gt;coLunacyDNS&lt;/code&gt; service which uses Lua to customize DNS replies.&lt;/p&gt; &#xA;&lt;p&gt;Versions of some MaraDNS programs compiled as Windows binaries (without needing Cygwin or another POSIX emulation library) are in the folder &lt;code&gt;maradns-win32/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Building MaraDNS&lt;/h1&gt; &#xA;&lt;p&gt;To build MaraDNS, one needs a POSIX system with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A POSIX compatible shell&lt;/li&gt; &#xA; &lt;li&gt;A POSIX compatible implementation of &lt;code&gt;make&lt;/code&gt;, which has the POSIX202X feature of allowing a make target to have a &lt;code&gt;/&lt;/code&gt; in it.&lt;/li&gt; &#xA; &lt;li&gt;Other standard POSIX utilities (&lt;code&gt;awk&lt;/code&gt;, etc.)&lt;/li&gt; &#xA; &lt;li&gt;A current C compiler which can support, via &lt;code&gt;stdint&lt;/code&gt;, 8-bit, 16-bit, 32-bit, and 64-bit sized integers.&lt;/li&gt; &#xA; &lt;li&gt;A POSIX C library with both POSIX and Berkeley socket support.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;(To build some of the documentation, the non-standard but widely available &lt;code&gt;unix2dos&lt;/code&gt; text conversion utility is used.)&lt;/p&gt; &#xA;&lt;p&gt;Then, do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./configure&#xA;CC=cc # Change this to gcc/clang/tcc as desired&#xA;export CC&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that most implementations of &lt;code&gt;make&lt;/code&gt; will set &lt;code&gt;$CC&lt;/code&gt; to &lt;code&gt;cc&lt;/code&gt; if it’s not already set, but the &lt;a href=&#34;https://pubs.opengroup.org/onlinepubs/9699919799/utilities/make.html&#34;&gt;POSIX spec&lt;/a&gt; says that the default value should be &lt;code&gt;c99&lt;/code&gt;, a compiler which will not compile MaraDNS. A POSIX program like MaraDNS will not compile with a strictly ISO compliant C compiler (the POSIX system calls will fail to compile). However, all of the C programs here compile with &lt;code&gt;gcc&lt;/code&gt;, &lt;code&gt;clang&lt;/code&gt;, and &lt;code&gt;tcc&lt;/code&gt;, and should compile with any reasonable POSIX C compiler.&lt;/p&gt; &#xA;&lt;p&gt;All of these are very standard tools which are included with the vast majority of Linux and BSD distributions; packages usually have names like:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;clang&lt;/code&gt; (which uses &lt;code&gt;llvm&lt;/code&gt;) for the C compiler&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;libc-dev&lt;/code&gt; for the development C standard library, which will have sockets&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make&lt;/code&gt; for make; if one does not wish to use GNU make (the Linux standard), other make implementations exist, e.g. &lt;a href=&#34;https://github.com/samboy/maramake&#34;&gt;https://github.com/samboy/maramake&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;POSIX compatible implementations of &lt;code&gt;sh&lt;/code&gt;, &lt;code&gt;awk&lt;/code&gt;, and other utilities are also almost always included as part of a Linux base install.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;MaraDNS successfully compiles with &lt;code&gt;gcc&lt;/code&gt;, &lt;code&gt;clang&lt;/code&gt;, and &lt;code&gt;tcc&lt;/code&gt;; it successfully builds with GNU make, bmake, pdpmake (as long as non-POSIX and/or POSIX202X extensions are enabled and &lt;code&gt;CC&lt;/code&gt; has the value &lt;code&gt;cc&lt;/code&gt;), and maramake. The version of &lt;code&gt;make&lt;/code&gt; used to compile MaraDNS needs to have the command name &lt;code&gt;make&lt;/code&gt;. MaraDNS compiles and runs with both Busybox versions of the core POSIX utilities and GNU coreutils.&lt;/p&gt; &#xA;&lt;h2&gt;Supported OSes&lt;/h2&gt; &#xA;&lt;p&gt;MaraDNS is built and runs on Ubuntu 22.04 as of late 2022.&lt;/p&gt; &#xA;&lt;p&gt;I currently use Ubuntu 22.04 to develop MaraDNS, both Ubuntu 22.04 and Alpine Linux 3.14 to test that MaraDNS builds and passes all automated regressions, and a Windows XP virtual machine to make the Windows binaries.&lt;/p&gt; &#xA;&lt;h3&gt;Please use systemd&lt;/h3&gt; &#xA;&lt;p&gt;While MaraDNS does have scripts for starting up MaraDNS at system boot time on &lt;code&gt;sysvinit&lt;/code&gt; systems, these scripts are no longer fully supported, since most major Linux distributions have moved on to &lt;code&gt;systemd&lt;/code&gt;, which is a lot better than the older &lt;code&gt;sysvinit&lt;/code&gt; process for starting up the MaraDNS related services.&lt;/p&gt; &#xA;&lt;p&gt;While &lt;code&gt;make install&lt;/code&gt; is only guaranteed to get MaraDNS to start up at system boot time on Ubuntu 22.04, it &lt;em&gt;should&lt;/em&gt; do the right thing in Rocky Linux, Debian, RedHat, CentOS, Fedora, and other Linux distributions which use &lt;code&gt;systemd&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There &lt;em&gt;is&lt;/em&gt; some scaffolding for getting MaraDNS to run without &lt;code&gt;systemd&lt;/code&gt;. There is a helper, &lt;code&gt;duende&lt;/code&gt;, to make MaraDNS a daemon on systems with classic *NIX style init. While, with &lt;code&gt;systemd&lt;/code&gt;, it’s no longer needed to use this Duende helper, I will keep Duende around for &lt;code&gt;sysvinit&lt;/code&gt; and some level of &lt;code&gt;OpenRC&lt;/code&gt; compatibility. There are also shell scripts for starting MaraDNS on &lt;code&gt;sysvinit&lt;/code&gt; systems which may or may not work with other init systems.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;systemd&lt;/code&gt; handles the daemonization of the MaraDNS services the way &lt;code&gt;duende&lt;/code&gt; does (did?) on &lt;code&gt;sysvinit&lt;/code&gt; and similar systems. The &lt;code&gt;systemd&lt;/code&gt; way is much simpler at the development level, since systemd now handles a lot of complexity the old init systems forced networking services to handle.&lt;/p&gt; &#xA;&lt;h2&gt;Important note for Windows users&lt;/h2&gt; &#xA;&lt;p&gt;Users of Microsoft Windows are better off downloading a prebuilt Windows binary: &lt;a href=&#34;http://maradns.samiam.org/download.html&#34;&gt;http://maradns.samiam.org/download.html&lt;/a&gt; (or, look in the folder &lt;code&gt;maradns-win32&lt;/code&gt; here) Be sure to download the file with the .zip extension.&lt;/p&gt; &#xA;&lt;p&gt;Only Deadwood and coLunacyDNS binaries are provided.&lt;/p&gt; &#xA;&lt;p&gt;Deadwood has passed Y2038 tests in Windows 10.&lt;/p&gt; &#xA;&lt;h1&gt;What is DNS&lt;/h1&gt; &#xA;&lt;p&gt;The internet uses numbers, not names, to find computers. DNS is the internet’s directory service: It takes a name, like “www.maradns.org”, and converts that name in to an “IP” number that your computer can use to connect to &lt;a href=&#34;http://www.maradns.org&#34;&gt;www.maradns.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;DNS is one of these things many take for granted that is essential to using today’s internet. Without DNS, the internet breaks. It is critical that a DNS server keeps the internet working in a secure and stable manner.&lt;/p&gt; &#xA;&lt;h1&gt;MaraDNS&#39; History&lt;/h1&gt; &#xA;&lt;p&gt;MaraDNS was started in 2001 in response to concerns that there were only two freely available DNS servers (BIND and DjbDNS) at the time. MaraDNS 1.0 was released in mid-2002, MaraDNS 1.2 was released in late 2005, MaraDNS 2.0 was released in the fall of 2010, and MaraDNS had a version number jump up to 3.3 in 2019 in order to have the same version number as Deadwood.&lt;/p&gt; &#xA;&lt;p&gt;MaraDNS 1.0 used a recursive DNS server that was implemented rather quickly and had difficult-to-maintain code. This code was completely rewritten for the MaraDNS 2.0 release, which now uses a separate recursive DNS server.&lt;/p&gt; &#xA;&lt;h1&gt;Overview&lt;/h1&gt; &#xA;&lt;p&gt;MaraDNS 3.5 consists of three primary components: A UDP-only authoritative DNS server for hosting domains, a UDP recursive DNS server called &lt;code&gt;Deadwood&lt;/code&gt; for finding domains on the internet, and a Lua-powered DNS server called &lt;code&gt;coLunacyDNS&lt;/code&gt;. MaraDNS’ recursive DNS server &lt;code&gt;Deadwood&lt;/code&gt; shares no code with MaraDNS’ authoritative DNS server.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;coLunacyDNS&lt;/code&gt; is a Lua-based name server which uses a combination of C (for the heavy lifting of binding to DNS sockets, processing DNS requests, and handling pending replies from upstream DNS servers) and Lua (for deciding how to respond to a given query) to have both performance and flexibility.&lt;/p&gt; &#xA;&lt;p&gt;In more detail: MaraDNS has one daemon, the authoritative daemon (called &lt;code&gt;maradns&lt;/code&gt;), that provides information to recursive DNS servers on the internet, and another daemon, the recursive daemon (called &lt;code&gt;Deadwood&lt;/code&gt;), that gets DNS information from the internet for web browsers and other internet clients.&lt;/p&gt; &#xA;&lt;p&gt;A simplified way to look at it: &lt;code&gt;MaraDNS&lt;/code&gt; puts your web page on the Internet; &lt;code&gt;Deadwood&lt;/code&gt; looks for web pages on the Internet.&lt;/p&gt; &#xA;&lt;p&gt;Since MaraDNS’ authoritative daemon does not support TCP, MaraDNS includes a separate DNS-over-TCP server called &lt;code&gt;zoneserver&lt;/code&gt; that supports both standard DNS-over-TCP and DNS zone transfers.&lt;/p&gt; &#xA;&lt;p&gt;Neither MaraDNS nor the UNIX version of Deadwood have support for daemonization; this is handled by a separate program included with MaraDNS called &lt;code&gt;Duende&lt;/code&gt;. Deadwood&#39;s Windows port, on the other hand, includes support for running as a Windows service.&lt;/p&gt; &#xA;&lt;p&gt;MaraDNS also includes a simple DNS querying tool called &lt;code&gt;askmara&lt;/code&gt; and a number of other miscellaneous tools: Lua 5.1 scripts for processing MaraDNS&#39; documentation (since MaraDNS comes with a fork of Lua 5.1, these scripts do not have an external dependency), some Unicode conversion utilities, scripts for building and installing MaraDNS, automated SQA tests, etc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;MaraDNS&lt;/code&gt; is a native UNIX program which can run in Windows via cygwin. Both &lt;code&gt;Deadwood&lt;/code&gt;, MaraDNS&#39; recursive resolver, and &lt;code&gt;coLunacyDNS&lt;/code&gt;, a DNS server configured with a Lua 5.1 script, are cross-platform applications with full Windows ports.&lt;/p&gt; &#xA;&lt;p&gt;MaraDNS 2.0 has full (albeit not fully tested) IPv6 support.&lt;/p&gt; &#xA;&lt;h1&gt;Internals&lt;/h1&gt; &#xA;&lt;p&gt;MaraDNS 3.5’s authoritative server uses code going all the way back to 2001. The core DNS-over-UDP server has a number of components, including two different zone file parsers, a mararc parser, a secure random number generator, and so on.&lt;/p&gt; &#xA;&lt;p&gt;MaraDNS is written entirely in C. No objective C nor C++ classes are used in MaraDNS’ code.&lt;/p&gt; &#xA;&lt;p&gt;MaraDNS 2.0’s “Deadwood” recursive server was started in 2007 and has far cleaner code. Its random number generator, for example, uses a smaller, simpler, and more secure cryptographic algorithm; its configuration file parser uses a finite state machine interpreter; its handling of multiple simultaneous pending connections is done using select() and a state machine instead of with threads.&lt;/p&gt; &#xA;&lt;h1&gt;Other DNS servers&lt;/h1&gt; &#xA;&lt;p&gt;The landscape of open-source DNS servers has changed greatly since 2001 when MaraDNS was started. There are now a number of different DNS servers still actively developed and maintained: BIND, Power DNS, NSD/Unbound, as well as MaraDNS. DjbDNS is no longer being updated and the unofficial forks have limited support; notably it took nearly five months for someone to come up with a patch for CVE-2012-1191.&lt;/p&gt; &#xA;&lt;p&gt;MaraDNS’ strength is that it’s a remarkably small, lightweight, easy to configure, and mostly cross-platform DNS server. Deadwood is a tiny DNS server with full recursion support, perfect for embedded systems.&lt;/p&gt; &#xA;&lt;p&gt;MaraDNS’ weakness is that it does not have some features other DNS servers have. For example, while Deadwood has the strongest spoof protection available without cryptography, it does not have support for DNSSEC.&lt;/p&gt; &#xA;&lt;p&gt;As another example, MaraDNS does not have full zone transfer support; while MaraDNS can both serve zones and receive external zone files from other DNS servers, MaraDNS needs to be restarted to update its database of DNS records.&lt;/p&gt; &#xA;&lt;h1&gt;MaraDNS’ future&lt;/h1&gt; &#xA;&lt;p&gt;MaraDNS is a mature application. Being open source code, the amount of time I have to devote to MaraDNS is highly variable. Right now, I am concentrating my efforts to revamp MaraDNS so that it can continue to compile and run for as long as possible, minimizing the number of external dependencies so that outside changes are unlikely to break MaraDNS.&lt;/p&gt; &#xA;&lt;p&gt;For MaraDNS to break, either the C language would have to change to break programs that compile with few to no warnings here in the 2020s, or the POSIX standard would have to change to the point that POSIX compliant scripts which run here in the 2020s no longer run. Both of these are very unlikely to happen.&lt;/p&gt; &#xA;&lt;h2&gt;Y2038 statement&lt;/h2&gt; &#xA;&lt;p&gt;MaraDNS is fully Y2038 compliant on systems with a 64-bit time_t. Here in the 2020s, even 32-bit Linux distributions, such as Alpine Linux, have a 64-bit time_t.&lt;/p&gt; &#xA;&lt;p&gt;Deadwood, in addition, for its Windows 32-bit binary, uses Windows filetime to generate internal timestamps; filetime stamps will not run over until the year 30827 or so.&lt;/p&gt; &#xA;&lt;p&gt;coLunacyDNS, likewise, uses Windows filetime for timestamps with its Win32 binary.&lt;/p&gt; &#xA;&lt;p&gt;On *NIX systems with a 32-bit &lt;code&gt;time_t&lt;/code&gt;, some features which depend on OS-level time and date libraries are disabled. MaraDNS has support for showing a human readable timestamp with the &lt;code&gt;timestamp_type&lt;/code&gt; parameter; this parameter is disabled on systems with a 32-bit &lt;code&gt;time_t&lt;/code&gt; since the underlying libraries MaraDNS uses will probably fail at the Y2038 cutoff. Likewise, MaraDNS has support for generating a human-readable SOA serial number with the &lt;code&gt;synth_soa_serial&lt;/code&gt; parameter, but this feature is disabled if &lt;code&gt;time_t&lt;/code&gt; is 32-bit. In both cases, the feature in question is, by default, disabled in MaraDNS, so only users who have explicitly enabled these features will see any change in behavior.&lt;/p&gt; &#xA;&lt;p&gt;MaraDNS has the ability to generate a synthetic SOA serial number if a zone file does not have a SOA record. The SOA serial is based on the timestamp for the zone file. If &lt;code&gt;time_t&lt;/code&gt; is 32-bit, MaraDNS assumes that the &lt;code&gt;stat&lt;/code&gt; call will return a negative timestamp after the Y2038 cutoff, and will adjust timestamps from before 2001 (the year MaraDNS was first developed) to be after the Y2038 cutoff. If there are systems out there where a &lt;code&gt;stat&lt;/code&gt; call for a file’s modification time fail after the Y2038 cutoff, one can avoid Y2038 issues by having a SOA record with a serial number in zone files. The Windows port of MaraDNS, as of 3.5.0028, uses Windows Y2038 compliant system calls instead of POSIX calls to get zone file timestamps.&lt;/p&gt; &#xA;&lt;p&gt;Both Deadwood and coLunacyDNS make some effort to generate accurate timestamps on *NIX systems with a 32-bit time_t until later than 2106; this code assumes that 32-bit systems will have the time stamp “wrap around” after 2038 but still have the 32-bit time be updated.&lt;/p&gt; &#xA;&lt;h2&gt;Cyber Resilience Act statement&lt;/h2&gt; &#xA;&lt;p&gt;MaraDNS is a project developed on a strictly volunteer, non-commercial basis. It has been developed outside the course of a commercial activity, developed entirely in the Americas (i.e. &lt;em&gt;outside of Europe&lt;/em&gt;) and therefore is not subject to the restrictions or conditions of the proposed EU Cyber Resilience Act. Someone selling a product that uses any component of MaraDNS may be subject to this act and may need to handle any and all necessary compliance.&lt;/p&gt; &#xA;&lt;p&gt;MaraDNS, as always, is provided free of charge but with &lt;strong&gt;no warranty&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Updates&lt;/h1&gt; &#xA;&lt;h2&gt;2022 Updates&lt;/h2&gt; &#xA;&lt;p&gt;MaraDNS was updated in 2022 to have its automated tests run in an Ubuntu 22.04 Docker container instead of an Ubuntu 20.04 Docker container. The tests have also been updated to be more portable, running in both Alpine Linux (Busybox-based Linux distro) and Ubuntu 22.04.&lt;/p&gt; &#xA;&lt;p&gt;I also fixed a minor security issue, which also affected other DNS servers, where a clever attacker with access to the recurisve DNS server could had kept records in the cache longer than desired.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;min_ttl&lt;/code&gt; now correctly sets a minimum TTL for direct answers to queries. I have backported the &lt;code&gt;min_ttl&lt;/code&gt; parameter to the older legacy 3.4 version of MaraDNS.&lt;/p&gt; &#xA;&lt;p&gt;While using Deadwood as a fully recursive server is not guaranteed to be fully supported, I have fixed a long standing bug with how Deadwood handled certain CNAME chains, and have added tests to make sure this bug stays fixed.&lt;/p&gt; &#xA;&lt;p&gt;MaraDNS no longer uses non-POSIX scripting languages not included with MaraDNS:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MaraDNS’s documentation system, EJ, has been updated to use Lua 5.1 (included with MaraDNS with the name &lt;code&gt;lunacy&lt;/code&gt; in &lt;code&gt;coLunacyDNS/lunacy&lt;/code&gt;) instead of Perl scripts.&lt;/li&gt; &#xA; &lt;li&gt;The old &lt;code&gt;bind2csv2.py&lt;/code&gt; tool has been removed, so that MaraDNS no longer needs Python to run any of its components.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2021 Updates&lt;/h2&gt; &#xA;&lt;p&gt;Deadwood has a new parameter: &lt;code&gt;source_ip4&lt;/code&gt;. This optional parameter is used to specify the source IP when sending queries upstream. The majority of users should be able to leave this untouched; this is for cases when Deadwood is multi-homed and we need to specify which IP to use when querying root or upstream DNS servers.&lt;/p&gt; &#xA;&lt;p&gt;One line change to zoneserver.c to make it work better with systemd.&lt;/p&gt; &#xA;&lt;p&gt;Synthetic IP generator example added to &lt;code&gt;coLunacyDNS&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;2020 Updates&lt;/h2&gt; &#xA;&lt;p&gt;I have updated things so that the Git version of MaraDNS is the authoritative “One source of truth” for MaraDNS’s source code. The Git code is, every time a new MaraDNS release is made, converted in to tarballs (with full Git history) which can be downloaded at &lt;a href=&#34;https://sourceforge.net/projects/maradns/&#34;&gt;Sourceforge&lt;/a&gt; and &lt;a href=&#34;https://maradns.samiam.org/download.html&#34;&gt;MaraDNS’s web page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;I have added block list support to Deadwood, to allow a large list of host names to be blocked.&lt;/p&gt; &#xA;&lt;p&gt;I have created a new service: &lt;code&gt;coLunacyDNS&lt;/code&gt;, a simple Lua-based DNS server which can return IPv4 (&lt;code&gt;A&lt;/code&gt;) and IPv6 (&lt;code&gt;AAAA&lt;/code&gt;) DNS records. It has the ability to query other DNS servers, and customize the answer given to the client based on the contents of a Lua script. All programs have IPv6 support in Linux as well as *NIX clones, and the Windows 32-bit binary of &lt;code&gt;coLunacyDNS&lt;/code&gt; has IPv6 support.&lt;/p&gt;</summary>
  </entry>
</feed>