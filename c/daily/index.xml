<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-12T01:29:52Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>glouw/ctl</title>
    <updated>2025-06-12T01:29:52Z</updated>
    <id>tag:github.com,2025-06-12:/glouw/ctl</id>
    <link href="https://github.com/glouw/ctl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The C Template Library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;C TEMPLATE LIBRARY (CTL)&lt;/h1&gt; &#xA;&lt;p&gt;CTL is a fast compiling, type safe, header only, template-like library for ISO C99/C11.&lt;/p&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;CTL aims to improve ISO C99/C11 developer productivity by implementing the following STL containers in ISO C99/C11:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;deq.h = std::deque&#xA;lst.h = std::list&#xA;pqu.h = std::priority_queue&#xA;que.h = std::queue&#xA;set.h = std::set&#xA;stk.h = std::stack&#xA;str.h = std::string&#xA;ust.h = std::unordered_set&#xA;vec.h = std::vector&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Use&lt;/h2&gt; &#xA;&lt;p&gt;Configure a CTL container with a built-in or typedef type &lt;code&gt;T&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&#xA;&#xA;#define P&#xA;#define T int&#xA;#include &amp;lt;vec.h&amp;gt;&#xA;&#xA;int compare(int* a, int* b) { return *b &amp;lt; *a; }&#xA;&#xA;int main(void)&#xA;{&#xA;    vec_int a = vec_int_init();&#xA;    vec_int_push_back(&amp;amp;a, 9);&#xA;    vec_int_push_back(&amp;amp;a, 1);&#xA;    vec_int_push_back(&amp;amp;a, 8);&#xA;    vec_int_push_back(&amp;amp;a, 3);&#xA;    vec_int_push_back(&amp;amp;a, 4);&#xA;    vec_int_sort(&amp;amp;a, compare);&#xA;    foreach(vec_int, &amp;amp;a, it)&#xA;        printf(&#34;%d\n&#34;, *it.ref);&#xA;    vec_int_free(&amp;amp;a);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Definition &lt;code&gt;P&lt;/code&gt; states type &lt;code&gt;T&lt;/code&gt; is Plain Old Data (POD).&lt;/p&gt; &#xA;&lt;p&gt;To compile, include the &lt;code&gt;ctl&lt;/code&gt; directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gcc main.c -I ctl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a much more thorough getting started guide, see the wiki: &lt;a href=&#34;https://github.com/glouw/ctl/wiki&#34;&gt;https://github.com/glouw/ctl/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Memory Ownership&lt;/h2&gt; &#xA;&lt;p&gt;Types with memory ownership require definition &lt;code&gt;P&lt;/code&gt; be omitted, and require function declarations for the C++ equivalent of the destructor and copy constructor, prior to the inclusion of the container:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C&#34;&gt;typedef struct { ... } type;&#xA;void type_free(type*);&#xA;type type_copy(type*);&#xA;#define T type&#xA;#include &amp;lt;vec.h&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Forgetting a declaration will print a human-readable error message:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;tests/test_c11.c:11:11: error: type_free undeclared (first use in this function)&#xA;   11 | #define T type&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;p&gt;CTL performance is presented in solid colors, and STL in dotted colors, for template type &lt;code&gt;T&lt;/code&gt; as type &lt;code&gt;int&lt;/code&gt; for all measurements.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/glouw/ctl/master/images/vec.log.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/glouw/ctl/master/images/lst.log.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/glouw/ctl/master/images/deq.log.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/glouw/ctl/master/images/set.log.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/glouw/ctl/master/images/ust.log.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/glouw/ctl/master/images/pqu.log.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/glouw/ctl/master/images/compile.log.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Omitted from these performance measurements are &lt;code&gt;que.h&lt;/code&gt;, &lt;code&gt;stk.h&lt;/code&gt;, and &lt;code&gt;str.h&lt;/code&gt;, as their performance characteristics can be inferred from &lt;code&gt;deq.h&lt;/code&gt;, and &lt;code&gt;vec.h&lt;/code&gt;, respectively.&lt;/p&gt; &#xA;&lt;p&gt;Note, CTL strings do not support short strings.&lt;/p&gt; &#xA;&lt;h2&gt;Running Tests&lt;/h2&gt; &#xA;&lt;p&gt;To run all functional tests, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To compile examples, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;make examples&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To generate performance graphs, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sh gen_images.sh&#xA;# Graphing requires python3 and the Plotly family of libraries via pip.&#xA;pip install plotly&#xA;pip install psutil&#xA;pip install kaleido&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To do all of the above in one step, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./all.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For maintaining CTL, a container templated to type &lt;code&gt;int&lt;/code&gt; can be outputted to &lt;code&gt;stdout&lt;/code&gt; by running make on the container name, eg:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;make deq&#xA;make lst&#xA;make pqu&#xA;make que&#xA;make set&#xA;make stk&#xA;make str&#xA;make ust&#xA;make vec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Other&lt;/h2&gt; &#xA;&lt;p&gt;STL &lt;code&gt;std::map&lt;/code&gt; will not be implemented in CTL because maps only provide slight syntactic improvements over sets.&lt;/p&gt; &#xA;&lt;p&gt;STL variants of multi-sets and multi-maps will not be implemented because similar behaviour can be implemented as an amalgamation of a &lt;code&gt;set&lt;/code&gt; and &lt;code&gt;lst&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Base Implementation Details&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;vec.h: realloc&#xA;str.h: vec.h&#xA;deq.h: realloc (paged)&#xA;que.h: deq.h&#xA;stk.h: deq.h&#xA;pqu.h: vec.h&#xA;lst.h: doubly linked list&#xA;set.h: red black tree&#xA;ust.h: hashed forward linked lists&#xA;&#xA;                    vec  str  deq  lst  set  pqu  que  stk  ust&#xA;+-------------------------------------------------------------+&#xA;empty               x    x    x    x    x    x    x    x    x&#xA;each                x    x    x    x    x                   x&#xA;equal               x    x    x    x    x    x    x    x    x&#xA;swap                x    x    x    x    x    x    x    x    x&#xA;bucket                                                      x&#xA;bucket_size                                                 x&#xA;load_factor                                                 x&#xA;rehash                                                      x&#xA;insert              x    x    x    x    x                   x&#xA;init                x    x    x    x    x    x    x    x    x&#xA;free                x    x    x    x    x    x    x    x    x&#xA;step                x    x    x    x    x                   x&#xA;range               x    x    x    x    x                   x&#xA;find                x    x    x    x    x                   x&#xA;count                    x              x                   x&#xA;lower_bound                             x                   &#xA;upper_bound                             x                   &#xA;erase               x    x    x    x    x                   x&#xA;copy                x    x    x    x    x                   x&#xA;begin               x    x    x    x    x                   x&#xA;end                 x    x    x    x    x                   x&#xA;intersection                            x                   &#xA;union                                   x                   &#xA;difference                              x                   &#xA;symmetric_difference                    x                   &#xA;top                                          x         x&#xA;push                                         x    x    x&#xA;pop                                          x    x    x&#xA;at                  x    x    x&#xA;front               x    x    x    x              x&#xA;back                x    x    x    x              x&#xA;set                 x    x    x&#xA;pop_back            x    x    x    x&#xA;pop_front                     x    x&#xA;clear               x    x    x    x    x&#xA;reserve             x    x&#xA;push_back           x    x    x    x&#xA;push_front                    x    x&#xA;transfer                           x&#xA;disconnect                         x&#xA;connect                            x&#xA;resize              x    x    x    x&#xA;assign              x    x    x    x&#xA;reverse                            x&#xA;shrink_to_fit       x    x&#xA;data                x    x&#xA;erase_node                              x&#xA;sort                x    x    x    x&#xA;remove_if           x    x    x    x    x&#xA;splice                             x&#xA;merge                              x&#xA;unique                             x&#xA;append                   x&#xA;insert_str               x&#xA;replace                  x              x&#xA;c_str                    x&#xA;find                     x&#xA;rfind                    x&#xA;find_first_of            x&#xA;find_last_of             x&#xA;find_first_not_of        x&#xA;find_last_not_of         x&#xA;substr                   x&#xA;compare                  x&#xA;key_compare              x&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Thank you &lt;a href=&#34;https://github.com/kully&#34;&gt;https://github.com/kully&lt;/a&gt; for the Plotly code, and thank you for the general review and manual testing.&lt;/p&gt; &#xA;&lt;p&gt;Thank you &lt;code&gt;smlckz&lt;/code&gt; for the &lt;code&gt;foreach&lt;/code&gt; cleanup.&lt;/p&gt; &#xA;&lt;p&gt;Thank you &lt;a href=&#34;https://github.com/wwwVladislav&#34;&gt;https://github.com/wwwVladislav&lt;/a&gt; for the addition of set lower_bound and upper_bound.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dunst-project/dunst</title>
    <updated>2025-06-12T01:29:52Z</updated>
    <id>tag:github.com,2025-06-12:/dunst-project/dunst</id>
    <link href="https://github.com/dunst-project/dunst" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lightweight and customizable notification daemon&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/dunst-project/dunst/actions?query=workflow%3Amain&#34;&gt;&lt;img src=&#34;https://github.com/dunst-project/dunst/workflows/main/badge.svg?sanitize=true&#34; alt=&#34;main&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/dunst-project/dunst&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/dunst-project/dunst/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Dunst&lt;/h1&gt; &#xA;&lt;p&gt;&lt;i&gt;A highly configurable and lightweight notification daemon.&lt;/i&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/contrib/screenshots/music.png&#34; alt=&#34;music&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/#building&#34;&gt;Building&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/#copyright&#34;&gt;Copyright&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;h2&gt;⚙️ Highly customizable&lt;/h2&gt; &#xA;&lt;p&gt;Customize fonts, icons, timeouts, and more. Are you unhappy with the default shortcuts and colors? No worries, you can change these all with a simple configuration file tweak.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;click the images to see the dunstrc&lt;/em&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://gist.github.com/NNBnh/5f6e601a6a82a6ed43b1959698758141&#34;&gt; &lt;img alt=&#34;screenshot1&#34; src=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/contrib/screenshots/screenshot1_cut.png&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://gist.github.com/fwSmit/9127d988b07bcec9d869f2c927d0f616&#34;&gt; &lt;img alt=&#34;screenshot2&#34; src=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/contrib/screenshots/screenshot2_cut.png&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;📜 Scripting&lt;/h2&gt; &#xA;&lt;a href=&#34;https://gitlab.manjaro.org/profiles-and-settings/manjaro-theme-settings/-/blob/master/skel/.config/dunst/dunstrc&#34;&gt; &lt;img alt=&#34;screenshot_urgency&#34; src=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/contrib/screenshots/screenshot_urgency.png&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Run custom scripts on notifications matching a specified pattern. Have espeak read out your notifications, or play a song when your significant other signs on in pidgin!&lt;/p&gt; &#xA;&lt;h2&gt;📋 Rules&lt;/h2&gt; &#xA;&lt;p&gt;Change the look or behavior of notifications matching a specified pattern. You could use this to change the color of message notifications from your favorite jabber buddies, or to prevent important work email notifications from disappearing until you manually dismiss them.&lt;/p&gt; &#xA;&lt;h2&gt;⏸️ Pause&lt;/h2&gt; &#xA;&lt;p&gt;If you want to take a break and not receive any notifications for a while, just pause dunst. All notifications will be saved for you to catch up later.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, you can set a numeric pause level, which allows you to pause dunst selectively for some notifications, where more urgent notifications get through, but less urgent stay paused.&lt;/p&gt; &#xA;&lt;h2&gt;🕘 History&lt;/h2&gt; &#xA;&lt;p&gt;Catch an unread notification disappearing from the corner of your eye? Just tap a keyboard shortcut to replay the last notification, or continue tapping to see your notification history.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;Most documentation can be found in dunst&#39;s man pages. In &lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/docs/dunst.1.pod&#34;&gt;&lt;strong&gt;dunst(1)&lt;/strong&gt;&lt;/a&gt; contains some general instructions on how to run dunst and in &lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/docs/dunst.5.pod&#34;&gt;&lt;strong&gt;dunst(5)&lt;/strong&gt;&lt;/a&gt; all of dunst&#39;s configuration options are explained.&lt;/p&gt; &#xA;&lt;p&gt;On the dunst &lt;a href=&#34;https://github.com/dunst-project/dunst/wiki&#34;&gt;wiki&lt;/a&gt; you can find guides and installation instructions and on the dunst &lt;a href=&#34;https://dunst-project.org&#34;&gt;website&lt;/a&gt; there is a &lt;a href=&#34;https://dunst-project.org/faq&#34;&gt;FAQ&lt;/a&gt; with common issues.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Dunst is available in many package repositories. If it&#39;s not available in your distro&#39;s repositories, don&#39;t worry, it&#39;s not hard to build it yourself.&lt;/p&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;dbus (runtime)&lt;/li&gt; &#xA; &lt;li&gt;libxinerama&lt;/li&gt; &#xA; &lt;li&gt;libxrandr&lt;/li&gt; &#xA; &lt;li&gt;libxss&lt;/li&gt; &#xA; &lt;li&gt;glib&lt;/li&gt; &#xA; &lt;li&gt;pango/cairo&lt;/li&gt; &#xA; &lt;li&gt;gdk-pixbuf&lt;/li&gt; &#xA; &lt;li&gt;libnotify (can build without, for dunstify, see &lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/#make-parameters&#34;&gt;make parameters&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;wayland-client (can build without, see &lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/#make-parameters&#34;&gt;make parameters&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;wayland-protocols (optional, for recompiling protocols)&lt;/li&gt; &#xA; &lt;li&gt;xdg-utils (optional, xdg-open is the default &#39;browser&#39; for opening URLs)&lt;/li&gt; &#xA; &lt;li&gt;jq (optional, for installed completions and tools in contrib)&lt;/li&gt; &#xA; &lt;li&gt;busctl (optional, for dunstctl rules and dunstctl history)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The names will be different depending on your &lt;a href=&#34;https://github.com/dunst-project/dunst/wiki/Dependencies&#34;&gt;distribution&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;h4&gt;Makefile&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/dunst-project/dunst.git&#xA;cd dunst&#xA;make&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Meson&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;meson setup build&#xA;ninja -C build&#xA;ninja -C build install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Custom Meson build parameters can be found in &lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/meson_options.txt&#34;&gt;meson_options.txt&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Make parameters&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;DESTDIR=&amp;lt;PATH&amp;gt;&lt;/code&gt;: Set the destination directory of the installation. (Default: &lt;code&gt;/&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;PREFIX=&amp;lt;PATH&amp;gt;&lt;/code&gt;: Set the prefix of the installation. (Default: &lt;code&gt;/usr/local&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BINDIR=&amp;lt;PATH&amp;gt;&lt;/code&gt;: Set the &lt;code&gt;dunst&lt;/code&gt; executable&#39;s path (Default: &lt;code&gt;${PREFIX}/bin&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DATADIR=&amp;lt;PATH&amp;gt;&lt;/code&gt;: Set the path for shared files. (Default: &lt;code&gt;${PREFIX}/share&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BASHCOMPLETIONDIR=&amp;lt;PATH&amp;gt;&lt;/code&gt;: Set the path for installation of bash completion files. (Default: &lt;code&gt;${DATADIR}/bash-completion/completions&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FISHCOMPLETIONDIR=&amp;lt;PATH&amp;gt;&lt;/code&gt;: Set the path for installation of fish completion files. (Default: &lt;code&gt;${DATADIR}/fish/vendor_completions.d&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ZSHCOMPLETIONDIR=&amp;lt;PATH&amp;gt;&lt;/code&gt;: Set the path for installation of zsh completion files. (Default: &lt;code&gt;${DATADIR}/zsh/site-functions&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SYSCONFDIR=&amp;lt;PATH&amp;gt;&lt;/code&gt;: Set the base directory for system config files. (Default: &lt;code&gt;${PREFIX}/etc/xdg&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SYSCONFFILE=&amp;lt;PATH&amp;gt;&lt;/code&gt;: Set the absolute path to which the default dunstrc shall be installed. (Default: &lt;code&gt;${SYSCONFDIR}/dunst/dunstrc&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SYSCONF_FORCE_NEW=(0|1)&lt;/code&gt;: Overwrite existing &lt;code&gt;${SYSCONFFILE}&lt;/code&gt;. (Default: 0 (don&#39;t overwrite))&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MANDIR=&amp;lt;PATH&amp;gt;&lt;/code&gt;: Set the prefix of the manpage. (Default: &lt;code&gt;${DATADIR}/man&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SYSTEMD=(0|1)&lt;/code&gt;: Disable/Enable the systemd unit. (Default: autodetect systemd)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;WAYLAND=(0|1)&lt;/code&gt;: Disable/Enable wayland support. (Default: 1 (enabled))&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;X11=(0|1)&lt;/code&gt;: Disable/Enable X11 support. (Default: 1 (enabled))&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DUNSTIFY=(0|1)&lt;/code&gt;: Disable/Enable the libnotify dunstctl utility. (Default: 1 (enabled))&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;COMPLETIONS=(0|1)&lt;/code&gt;: Disable/Enable installation of shell completions. (Default: 1 (enabled))&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SERVICEDIR_SYSTEMD=&amp;lt;PATH&amp;gt;&lt;/code&gt;: The path to put the systemd user service file. Unused, if &lt;code&gt;SYSTEMD=0&lt;/code&gt;. (Default: &lt;code&gt;${PREFIX}/lib/systemd/user&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SERVICEDIR_DBUS=&amp;lt;PATH&amp;gt;&lt;/code&gt;: The path to put the dbus service file. (Default: &lt;code&gt;${DATADIR}/dbus-1/services&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;EXTRA_CFLAGS=&amp;lt;FLAGS&amp;gt;&lt;/code&gt;: Additional flags for the compiler.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Make sure to run all make calls with the same parameter set. So when building with &lt;code&gt;make PREFIX=/usr&lt;/code&gt;, you have to install it with &lt;code&gt;make PREFIX=/usr install&lt;/code&gt;, too.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Either X11 or WAYLAND should be set, otherwise dunst will not compile.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notes on default of XDG_CONFIG_DIRS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Dunst uses a different default (&lt;code&gt;${SYSCONFDIR}&lt;/code&gt;) for XDG_CONFIG_DIRS at runtime. This is a slight digression from the recommended value in the XDG Base Directory Specification (/etc/xdg), because the default config file gets installed to &lt;code&gt;${SYSCONFDIR}/dunst/dunstrc&lt;/code&gt; to avoid conflicts with /etc/xdg/dunst/dunstrc which might have been installed from a distribution repository. If you do want dunst to use the spec&#39;s recommended default, set XDG_CONFIG_DIR=/etc/xdg at runtime or SYSCONFDIR=/etc/xdg at compile time.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notes on SYSCONFFILE&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Changing SYSCONFFILE does not affect the search for config files, meaning it will not take effect if you choose to install dunstrc to a location that cannot be found by the algorithm outlined in the FILES section of dunst(1).&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;make install&lt;/code&gt; will not overwrite an already existing ${SYSCONFFILE} (i.e. /usr/local/etc/xdg/dunst/dunstrc), see SYSCONF_FORCE_NEW above. This is so you do not lose local changes to said file on upgrade. However, it is recommended to leave that file untouched and use a more important config location to override settings, see the FILES section in dunst(1) for more details.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;make uninstall&lt;/code&gt; will not remove ${SYSCONFFILE}, use &lt;code&gt;make uninstall-purge&lt;/code&gt; if you do want it removed as well.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are very welcome. Before contributing, make sure to look at the contribution documentation in &lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/HACKING.md&#34;&gt;HACKING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Make sure you test your code and where possible add automated tests. These tests are also checked on memory leaks (with &lt;code&gt;make test-valgrind&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;Cannot set settings via command line&lt;/h3&gt; &#xA;&lt;p&gt;This functionality was removed during the refactor. It might be re-added later in some form. See &lt;a href=&#34;https://github.com/dunst-project/dunst/issues/940&#34;&gt;#940&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Bug reports&lt;/h2&gt; &#xA;&lt;p&gt;Please use the &lt;a href=&#34;https://github.com/dunst-project/dunst/issues&#34;&gt;issue tracker&lt;/a&gt; provided by GitHub to send us bug reports or feature requests.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;a href=&#34;https://gist.github.com/MCotocel/2b34486ae59ccda4319fcb93454d212c&#34;&gt; &lt;img alt=&#34;screenshot3&#34; src=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/contrib/screenshots/screenshot3_cut.png&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://gitlab.manjaro.org/profiles-and-settings/manjaro-theme-settings/-/blob/master/skel/.config/dunst/dunstrc&#34;&gt; &lt;img alt=&#34;progress&#34; src=&#34;https://user-images.githubusercontent.com/23078054/102542111-98b01e00-40b1-11eb-967e-bc952430bd06.png&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fwsmit&#34;&gt;Friso Smit&lt;/a&gt; &lt;a href=&#34;mailto:fw.smit01@gmail.com&#34;&gt;fw.smit01@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zappolowski&#34;&gt;Bjoern Hiller&lt;/a&gt; &lt;a href=&#34;mailto:bjoern.hiller@gmail.com&#34;&gt;bjoern.hiller@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bynect&#34;&gt;Federico Angelilli&lt;/a&gt; &lt;a href=&#34;mailto:fedeangemail@gmail.com&#34;&gt;fedeangemail@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please only refer to active maintainers for issues and bugs.&lt;/p&gt; &#xA;&lt;h2&gt;Ex-Maintainers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tsipinakis&#34;&gt;Nikos Tsipinakis&lt;/a&gt; &lt;a href=&#34;mailto:nikos@tsipinakis.com&#34;&gt;nikos@tsipinakis.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bebehei&#34;&gt;Benedikt Heine&lt;/a&gt; &lt;a href=&#34;mailto:bebe@bebehei.de&#34;&gt;bebe@bebehei.de&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;Written by Sascha Kruse &lt;a href=&#34;mailto:dunst@knopwob.de&#34;&gt;dunst@knopwob.de&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2013 Sascha Kruse and contributors (see &lt;a href=&#34;https://raw.githubusercontent.com/dunst-project/dunst/master/LICENSE&#34;&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; for licensing information)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>aws/pgactive</title>
    <updated>2025-06-12T01:29:52Z</updated>
    <id>tag:github.com,2025-06-12:/aws/pgactive</id>
    <link href="https://github.com/aws/pgactive" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Active-active Replication Extension for PostgreSQL (pgactive)&lt;/h1&gt; &#xA;&lt;p&gt;pgactive is a PostgreSQL replication extension for creating an active-active database.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/pgactive/main/docs/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/pgactive/main/#overciew&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/pgactive/main/#security&#34;&gt;Security&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/aws/pgactive/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Database replication is a method that copies changes between databases instances, and is a key component for use cases like high availability, reducing latency between an application and its source data, moving data between systems such as production and test, infrastructure migration, and others. Relational databases such as PostgreSQL typically support an active-standby model of replication, where one database instance accepts changes and makes them available to one or more read-only databases. Because changes in an active-standby cluster can only occur on a single instance, it’s more straightforward to build applications that work with this deployment topology because there is a single source of truth that contains all of the latest changes.&lt;/p&gt; &#xA;&lt;p&gt;Sometimes it’s preferable to have a database cluster that uses an active-active replication topology, where it’s possible to write data on multiple instances in the same cluster. In an asynchronous active-active replication deployment, multiple databases in a cluster can accept changes and replicate them to other databases, but this means the database cluster doesn’t have a single source of truth. Use cases for this include running a Multi-Region high availability database cluster, reducing write latency between applications and databases, performing blue/green updates of applications, and migrating data between systems that must both be writable. Applications that work with active-active database clusters must be designed to handle situations that occur in this deployment topology, including conflicting changes, replication lag, and the lack of certain convenient database features such as incremental integer sequences.&lt;/p&gt; &#xA;&lt;p&gt;A fundamental component of active-active replication is logical replication. Logical replication uses a data format that allows external systems to interpret changes before applying them to a target database. This lets the target system perform additional actions, such as detecting and resolving write conflicts or converting the statement into something that is supported in the target database software. PostgreSQL added native support for logical replication in PostgreSQL 10 in 2017, but still requires additional features to fully support an active-active replication topology. PostgreSQL’s design makes it possible to build the necessary components for supporting active-active replication in an extension while the development community continues to add it into the upstream project.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/aws/pgactive/main/CONTRIBUTING.md#security-issue-notifications&#34;&gt;CONTRIBUTING&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/aws/pgactive/main/LICENSE&#34;&gt;this License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>