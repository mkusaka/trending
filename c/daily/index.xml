<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-10T01:24:40Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>FascinatedBox/bonk</title>
    <updated>2024-04-10T01:24:40Z</updated>
    <id>tag:github.com,2024-04-10:/FascinatedBox/bonk</id>
    <link href="https://github.com/FascinatedBox/bonk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;X11 window management toolkit&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;bonk - X11 toolkit&lt;/h1&gt; &#xA;&lt;h3&gt;Overview&lt;/h3&gt; &#xA;&lt;p&gt;bonk - &lt;strong&gt;B&lt;/strong&gt;ox&#39;s wind&lt;strong&gt;O&lt;/strong&gt;w ma&lt;strong&gt;N&lt;/strong&gt;ager tool&lt;strong&gt;K&lt;/strong&gt;it. Bonk is a command-line tool that provides subcommands to modify windows, adjust window properties, change window decorations, and more.&lt;/p&gt; &#xA;&lt;p&gt;Bonk is designed with X11 in mind.&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;A C compiler, CMake, and libxcb to build Bonk. Running the testing suite requires Python 3, Xephyr, xtrace, and lcov. The following will build Bonk:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cmake .&#xA;make&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;p&gt;Bonk executes commands based on what is read from the command line. Here&#39;s a starter example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bonk get-focus lower&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The first command, &lt;code&gt;get-focus&lt;/code&gt;, places the current window into the window stack. The second command, &lt;code&gt;lower&lt;/code&gt;, moves a window to the very back of the desktop. Commands that operate on a window &lt;strong&gt;always default to the first window in the stack&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;How about making this more interactive?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bonk pick lower get-title&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;pick&lt;/code&gt; command prompts the user to select a window by left-clicking on it. Selection can be cancelled by using any other mouse press. Like &lt;code&gt;get-focus&lt;/code&gt;, &lt;code&gt;pick&lt;/code&gt; loads a window into the window stack for &lt;code&gt;lower&lt;/code&gt; and &lt;code&gt;get-title&lt;/code&gt; to operate on.&lt;/p&gt; &#xA;&lt;p&gt;What about using a specific window instead?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bonk raise --window 0xdeadbeef get-title&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In this case, a window id is specified by the &lt;code&gt;--window&lt;/code&gt; argument to &lt;code&gt;raise&lt;/code&gt;. The &lt;code&gt;--window&lt;/code&gt; argument is accepted by all commands that operate on windows. It is important to note that specifying a window &lt;strong&gt;replaces all other windows in the window stack&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;What about finding windows that match a certain criteria?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bonk select --class firefox&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will return all visible windows that were created by firefox. To return minimized windows, add &lt;code&gt;--all&lt;/code&gt; to the criteria.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s possible to narrow the search further:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bonk select --all --class firefox --title Example&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This returns windows created by firefox that have &#39;Example&#39; in their title. The &lt;code&gt;--all&lt;/code&gt; option means to include windows that are currently minimized.&lt;/p&gt; &#xA;&lt;p&gt;The above search may return windows that are of no use to the user. How about limiting the search to windows that are only in the taskbar?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bonk select --clients&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Most window managers provide a list of windows that they&#39;re managing. Adding &lt;code&gt;--clients&lt;/code&gt; to search criteria provides a way to only search within that list, to prevent turning up windows that are of no interest to the user.&lt;/p&gt; &#xA;&lt;h3&gt;Window stack&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;window-arg&lt;/code&gt; property on a command allows the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;%N&lt;/code&gt;: N-th window (first window is &lt;code&gt;%0&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;%-N&lt;/code&gt;: Select from the end of the stack (last window is &lt;code&gt;%-1&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;%@&lt;/code&gt;: Select all windows.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;%-1: Last argument&#xA;%@: All windows&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Testing&lt;/h3&gt; &#xA;&lt;p&gt;Execute &lt;code&gt;./run-tests.sh&lt;/code&gt; to run all tests.&lt;/p&gt; &#xA;&lt;h3&gt;Command reference&lt;/h3&gt; &#xA;&lt;p&gt;Here are all commands that Bonk supports (output of &lt;code&gt;bonk help&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: bonk &amp;lt;commands [arguments]&amp;gt;&#xA;&#xA;window stack management&#xA;    get-active    Use window manager&#39;s active window&#xA;    get-focus     Use the window that currently has input focus&#xA;    pick          Left click to select a window&#xA;    reject        Remove windows using criteria&#xA;    select        Search for a window using criteria&#xA;&#xA;window actions&#xA;    activate      Tell window manager to set active window&#xA;    close         Attempt to close a window&#xA;    decoration    Set MOTIF (titlebar + border) hints&#xA;    focus         Give input focus to a window&#xA;    lower         Push a window to the back, behind other windows&#xA;    map           Reveal a window a window hidden with unmap&#xA;    move-resize   Specify an exact size and place for a window&#xA;    raise         Pull a window to the front, ahead of other windows&#xA;    state         Minimize, maximize, fullscreen, and more&#xA;    unmap         Hide a window (does not minimize to taskbar)&#xA;&#xA;information&#xA;    get-title     Get title of a window&#xA;&#xA;properties&#xA;    prop-adjust   Update a simple property (class, instance, etc.)&#xA;    prop-delete   Remove a property from a window (use with caution)&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>maharmstone/btrfs</title>
    <updated>2024-04-10T01:24:40Z</updated>
    <id>tag:github.com,2024-04-10:/maharmstone/btrfs</id>
    <link href="https://github.com/maharmstone/btrfs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;WinBtrfs - an open-source btrfs driver for Windows&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;WinBtrfs v1.9&lt;/h2&gt; &#xA;&lt;p&gt;WinBtrfs is a Windows driver for the next-generation Linux filesystem Btrfs. A reimplementation from scratch, it contains no code from the Linux kernel, and should work on any version from Windows XP onwards. It is also included as part of the free operating system &lt;a href=&#34;https://www.reactos.org/&#34;&gt;ReactOS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If your Btrfs filesystem is on a MD software RAID device created by Linux, you will also need &lt;a href=&#34;https://github.com/maharmstone/winmd&#34;&gt;WinMD&lt;/a&gt; to get this to appear under Windows.&lt;/p&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://github.com/maharmstone/quibble&#34;&gt;Quibble&lt;/a&gt;, an experimental bootloader allowing Windows to boot from Btrfs, and &lt;a href=&#34;https://github.com/maharmstone/ntfs2btrfs&#34;&gt;Ntfs2btrfs&lt;/a&gt;, a tool which allows in-place conversion of NTFS filesystems.&lt;/p&gt; &#xA;&lt;p&gt;First, a disclaimer:&lt;/p&gt; &#xA;&lt;p&gt;You use this software at your own risk. I take no responsibility for any damage it may do to your filesystem. It ought to be suitable for day-to-day use, but make sure you take backups anyway.&lt;/p&gt; &#xA;&lt;p&gt;Everything here is released under the GNU Lesser General Public Licence (LGPL); see the file LICENCE for more info. You are encouraged to play about with the source code as you will, and I&#39;d appreciate a note (&lt;a href=&#34;mailto:mark@harmstone.com&#34;&gt;mark@harmstone.com&lt;/a&gt;) if you come up with anything nifty.&lt;/p&gt; &#xA;&lt;p&gt;See at the end of this document for copyright details of third-party code that&#39;s included here.&lt;/p&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;ve been developing this driver for fun, and in the hopes that someone out there will find it useful. But if you want to provide some pecuniary encouragement, it&#39;d be very much appreciated:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=3XQVCQ6YB55L2&amp;amp;lc=GB&amp;amp;item_name=WinBtrfs%20donation&amp;amp;currency_code=GBP&amp;amp;bn=PP%2dDonationsBF%3abtn_donate_LG%2egif%3aNonHosted&#34;&gt;Paypal&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reading and writing of Btrfs filesystems&lt;/li&gt; &#xA; &lt;li&gt;Basic RAID: RAID0, RAID1, and RAID10&lt;/li&gt; &#xA; &lt;li&gt;Advanced RAID: RAID5 and RAID6&lt;/li&gt; &#xA; &lt;li&gt;Caching&lt;/li&gt; &#xA; &lt;li&gt;Discovery of Btrfs partitions, even if Windows would normally ignore them&lt;/li&gt; &#xA; &lt;li&gt;Getting and setting of Access Control Lists (ACLs), using the xattr security.NTACL&lt;/li&gt; &#xA; &lt;li&gt;Alternate Data Streams (e.g. :Zone.Identifier is stored as the xattr user.Zone.Identifier)&lt;/li&gt; &#xA; &lt;li&gt;Mappings from Linux users to Windows ones (see below)&lt;/li&gt; &#xA; &lt;li&gt;Symlinks and other reparse points&lt;/li&gt; &#xA; &lt;li&gt;Shell extension to identify and create subvolumes, including snapshots&lt;/li&gt; &#xA; &lt;li&gt;Hard links&lt;/li&gt; &#xA; &lt;li&gt;Sparse files&lt;/li&gt; &#xA; &lt;li&gt;Free-space cache&lt;/li&gt; &#xA; &lt;li&gt;Preallocation&lt;/li&gt; &#xA; &lt;li&gt;Asynchronous reading and writing&lt;/li&gt; &#xA; &lt;li&gt;Partition-less Btrfs volumes&lt;/li&gt; &#xA; &lt;li&gt;Per-volume registry mount options (see below)&lt;/li&gt; &#xA; &lt;li&gt;zlib compression&lt;/li&gt; &#xA; &lt;li&gt;LZO compression&lt;/li&gt; &#xA; &lt;li&gt;LXSS (&#34;Ubuntu on Windows&#34;) support&lt;/li&gt; &#xA; &lt;li&gt;Balancing (including resuming balances started on Linux)&lt;/li&gt; &#xA; &lt;li&gt;Device addition and removal&lt;/li&gt; &#xA; &lt;li&gt;Creation of new filesystems with &lt;code&gt;mkbtrfs.exe&lt;/code&gt; and &lt;code&gt;ubtrfs.dll&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Scrubbing&lt;/li&gt; &#xA; &lt;li&gt;TRIM/DISCARD&lt;/li&gt; &#xA; &lt;li&gt;Reflink copy&lt;/li&gt; &#xA; &lt;li&gt;Subvol send and receive&lt;/li&gt; &#xA; &lt;li&gt;Degraded mounts&lt;/li&gt; &#xA; &lt;li&gt;Free space tree (compat_ro flag &lt;code&gt;free_space_cache&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Shrinking and expanding&lt;/li&gt; &#xA; &lt;li&gt;Passthrough of permissions etc. for LXSS&lt;/li&gt; &#xA; &lt;li&gt;Zstd compression&lt;/li&gt; &#xA; &lt;li&gt;Windows 10 case-sensitive directory flag&lt;/li&gt; &#xA; &lt;li&gt;Oplocks&lt;/li&gt; &#xA; &lt;li&gt;Metadata UUID incompat flag (Linux 5.0)&lt;/li&gt; &#xA; &lt;li&gt;Three- and four-disk RAID1 (Linux 5.5)&lt;/li&gt; &#xA; &lt;li&gt;New checksum types (xxhash, sha256, blake2) (Linux 5.5)&lt;/li&gt; &#xA; &lt;li&gt;Block group tree (Linux 6.1)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Todo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full fs-verity support (Linux 5.15)&lt;/li&gt; &#xA; &lt;li&gt;Zoned support (Linux 5.11) (HM-SMR not supported on Windows?)&lt;/li&gt; &#xA; &lt;li&gt;Defragmentation&lt;/li&gt; &#xA; &lt;li&gt;Support for Btrfs quotas&lt;/li&gt; &#xA; &lt;li&gt;Full transaction log support&lt;/li&gt; &#xA; &lt;li&gt;Support for Windows transactions (TxF)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install the driver, &lt;a href=&#34;https://github.com/maharmstone/btrfs/releases&#34;&gt;download and extract the latest release&lt;/a&gt;, right-click btrfs.inf, and choose Install. The driver is signed, so should work out of the box on modern versions of Windows.&lt;/p&gt; &#xA;&lt;p&gt;If you using Windows 10 and have Secure Boot enabled, you may have to make a Registry change in order for the driver to be loaded - see &lt;a href=&#34;https://raw.githubusercontent.com/maharmstone/btrfs/master/#secureboot&#34;&gt;below&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;WinBtrfs is also available on the following package managers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chocolatey.org/packages/winbtrfs&#34;&gt;Chocolatey&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;choco install winbtrfs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://scoop.sh/#/apps?q=%22winbtrfs-np%22&amp;amp;s=0&amp;amp;d=1&amp;amp;o=true&#34;&gt;Scoop&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;scoop bucket add nonportable&#xA;scoop install winbtrfs-np -g&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Uninstalling&lt;/h2&gt; &#xA;&lt;p&gt;If you want to uninstall, from a command prompt run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;RUNDLL32.EXE SETUPAPI.DLL,InstallHinfSection DefaultUninstall 132 btrfs.inf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may need to give the full path to btrfs.inf.&lt;/p&gt; &#xA;&lt;p&gt;You can also go to Device Manager, find &#34;Btrfs controller&#34; under &#34;Storage volumes&#34;, right click and choose &#34;Uninstall&#34;. Tick the checkbox to uninstall the driver as well, and let Windows reboot itself.&lt;/p&gt; &#xA;&lt;p&gt;If you need to uninstall via the registry, open regedit and set the value of HKLM\SYSTEM\CurrentControlSet\services\btrfs\Start to 4, to disable the service. After you reboot, you can then delete the btrfs key and remove C:\Windows\System32\drivers\btrfs.sys.&lt;/p&gt; &#xA;&lt;h2&gt;Compilation&lt;/h2&gt; &#xA;&lt;p&gt;To compile with Visual C++ 2019, open the directory and let CMake do its thing. If you have the Windows DDK installed correctly, it should just work.&lt;/p&gt; &#xA;&lt;p&gt;To compile with GCC on Linux, you will need a cross-compiler set up, for either &lt;code&gt;i686-w64-mingw32&lt;/code&gt; or &lt;code&gt;x86_64-w64-mingw32&lt;/code&gt;. Create a build directory, then use either &lt;code&gt;mingw-x86.cmake&lt;/code&gt; or &lt;code&gt;mingw-amd64.cmake&lt;/code&gt; as CMake toolchain files to generate your Makefile.&lt;/p&gt; &#xA;&lt;h2&gt;Mappings&lt;/h2&gt; &#xA;&lt;p&gt;The user mappings are stored in the registry key HKLM\SYSTEM\CurrentControlSet\services\btrfs\Mappings. Create a DWORD with the name of your Windows SID (e.g. S-1-5-21-1379886684-2432464051-424789967-1001), and the value of your Linux uid (e.g. 1000). It will take effect next time the driver is loaded.&lt;/p&gt; &#xA;&lt;p&gt;You can find your current SID by running &lt;code&gt;wmic useraccount get name,sid&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Similarly, the group mappings are stored in under GroupMappings. The default entry maps Windows&#39; Users group to gid 100, which is usually &#34;users&#34; on Linux. You can also specify user SIDs here to force files created by a user to belong to a certain group. The setgid flag also works as on Linux.&lt;/p&gt; &#xA;&lt;h2&gt;LXSS (&#34;Ubuntu on Windows&#34; / &#34;Windows Subsystem for Linux&#34;)&lt;/h2&gt; &#xA;&lt;p&gt;The driver will passthrough Linux metadata to recent versions of LXSS, but you will have to let Windows know that you wish to do this. From a Bash prompt on Windows, edit &lt;code&gt;/etc/wsl.conf&lt;/code&gt; to look like the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[automount]&#xA;enabled = true&#xA;options = &#34;metadata&#34;&#xA;mountFsTab = false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It will then take effect next time you reboot. Yes, you should be able to chroot into an actual Linux installation, if you wish.&lt;/p&gt; &#xA;&lt;h2&gt;Commands&lt;/h2&gt; &#xA;&lt;p&gt;The DLL file shellbtrfs.dll provides the GUI interface, but it can also be used with rundll32.exe to carry out some tasks from the command line, which may be useful if you wish to schedule something to run periodically.&lt;/p&gt; &#xA;&lt;p&gt;Bear in mind that rundll32 provides no mechanism to return any error codes, so any of these commands may fail silently.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;rundll32.exe shellbtrfs.dll,CreateSubvol &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;rundll32.exe shellbtrfs.dll,CreateSnapshot &amp;lt;source&amp;gt; &amp;lt;destination&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;rundll32.exe shellbtrfs.dll,ReflinkCopy &amp;lt;source&amp;gt; &amp;lt;destination&amp;gt;&lt;/code&gt; This also accepts wildcards, and any number of source files.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following commands need various privileges, and so must be run as Administrator to work:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;rundll32.exe shellbtrfs.dll,SendSubvol &amp;lt;source&amp;gt; [-p &amp;lt;parent&amp;gt;] [-c &amp;lt;clone subvol&amp;gt;] &amp;lt;stream file&amp;gt;&lt;/code&gt; The -p and -c flags are as &lt;code&gt;btrfs send&lt;/code&gt; on Linux. You can specify any number of clone subvolumes.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;rundll32.exe shellbtrfs.dll,RecvSubvol &amp;lt;stream file&amp;gt; &amp;lt;destination&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;rundll32.exe shellbtrfs.dll,StartScrub &amp;lt;drive&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;rundll32.exe shellbtrfs.dll,StopScrub &amp;lt;drive&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;How do I debug this?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On the releases page, there&#39;s zip files to download containing the PDBs. Or you can try the symbols server &lt;a href=&#34;http://symbols.burntcomma.com/&#34;&gt;http://symbols.burntcomma.com/&lt;/a&gt; - in windbg, set your symbol path to something like this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;symsrv*symsrv.dll*C:\symbols*http://msdl.microsoft.com/download/symbols;symsrv*symsrv.dll*C:\symbols*http://symbols.burntcomma.com&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The filenames are weird! or&lt;/li&gt; &#xA; &lt;li&gt;I get strange errors on certain files or directories!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The driver assumes that all filenames are encoded in UTF-8. This should be the default on most setups nowadays - if you&#39;re not using UTF-8, it&#39;s probably worth looking into converting your files.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a name=&#34;secureboot&#34;&gt;&lt;/a&gt;How do I get this working with Secure Boot turned on?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For the very latest versions of Windows 10, Microsoft introduced more onerous requirements for signing, which seemingly aren&#39;t available for open-source drivers.&lt;/p&gt; &#xA;&lt;p&gt;To work around this, go to &lt;code&gt;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CI\Policy&lt;/code&gt; in Regedit, create a new DWORD value called &lt;code&gt;UpgradedSystem&lt;/code&gt; and set to 1, and reboot.&lt;/p&gt; &#xA;&lt;p&gt;Or you could always just turn off Secure Boot in your BIOS settings.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The root of the drive isn&#39;t case-sensitive in LXSS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This is something Microsoft hardcoded into LXSS, presumably to stop people hosing their systems by running &lt;code&gt;mkdir /mnt/c/WiNdOwS&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;How do I change the drive letter?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;With the shell extension installed, right-click the drive in Explorer, click Properties, and go to the Btrfs tab. There should be a button which allows you to change the drive letter.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I&#39;m still having problems with drive letters&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In Regedit, try deleting the relevant entries in &lt;code&gt;HKEY_LOCAL_MACHINE\SYSTEM\MountedDevices&lt;/code&gt;, then rebooting.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;How do I format a partition as Btrfs?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Use the included command line program mkbtrfs.exe. We can&#39;t add Btrfs to Windows&#39; own dialog box, unfortunately, as its list of filesystems has been hardcoded. You can also run &lt;code&gt;format /fs:btrfs&lt;/code&gt;, if you don&#39;t need to set any Btrfs-specific options.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I can&#39;t reformat a mounted Btrfs filesystem&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If Windows&#39; Format dialog box refuses to appear, try running format.com with the /fs flag, e.g. &lt;code&gt;format /fs:ntfs D:&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I can&#39;t mount a Synology NAS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Synology seems to use LVM for its block devices. Until somebody writes an LVM driver for Windows, you&#39;re out of luck.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I can&#39;t mount a Thecus NAS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thecus uses Linux&#39;s MD raid for its block devices. You will need to install &lt;a href=&#34;https://github.com/maharmstone/winmd&#34;&gt;WinMD&lt;/a&gt; as well.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;64-bit Windows 7 won&#39;t load the driver&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Make sure that you have &lt;a href=&#34;https://www.microsoft.com/en-gb/download/details.aspx?id=46148&#34;&gt;KB3033929&lt;/a&gt; installed. Or consider installing from an &#34;escrow&#34; ISO which includes all updates.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The drive doesn&#39;t show up and Paragon software has been installed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Paragon&#39;s filesystem-reading software is known to disable automount. Disable or uninstall Paragon, then re-enable automount by running &lt;code&gt;diskpart&lt;/code&gt; and typing &lt;code&gt;automount enable&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The drive doesn&#39;t show up on very old versions of Windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On very old versions of Windows (XP, Server 2003?), Windows ignores Linux partitions entirely. If this is the case for you, try running &lt;code&gt;fdisk&lt;/code&gt; on Linux and changing your partition type from 83 to 7.&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;v1.9 (2024-03-15):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added support for block group tree (Linux 6.1)&lt;/li&gt; &#xA; &lt;li&gt;Fixed hang when system under heavy load&lt;/li&gt; &#xA; &lt;li&gt;Added /blockgrouptree and /freespacetree options to mkbtrfs&lt;/li&gt; &#xA; &lt;li&gt;Follow Linux in defaulting /noholes to on in mkbtrfs&lt;/li&gt; &#xA; &lt;li&gt;Added support for CRC32C instructions on aarch64&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.8.2 (2023-01-10):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixed UAC not working&lt;/li&gt; &#xA; &lt;li&gt;Fixed Smartlocker crash on Windows 11 22H2&lt;/li&gt; &#xA; &lt;li&gt;Rejigged INF file to work better on Windows 11&lt;/li&gt; &#xA; &lt;li&gt;Files now signed with SHA256 hash rather than SHA1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.8.1 (2022-08-23):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixed use-after-free when flushing&lt;/li&gt; &#xA; &lt;li&gt;Fixed crash when opening volume when AppLocker installed&lt;/li&gt; &#xA; &lt;li&gt;Compression now disabled for no-COW files, as on Linux&lt;/li&gt; &#xA; &lt;li&gt;Flushing now scales better on very fast drives&lt;/li&gt; &#xA; &lt;li&gt;Fixed small files getting padded to 4,096 bytes by lazy writer&lt;/li&gt; &#xA; &lt;li&gt;Added NoDataCOW registry option&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.8 (2022-03-12):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added minimal support for fs-verity&lt;/li&gt; &#xA; &lt;li&gt;Added test suite&lt;/li&gt; &#xA; &lt;li&gt;Fixed incorrect disk usage statistics&lt;/li&gt; &#xA; &lt;li&gt;Fixed potential crashes when renaming stream to file or file to stream&lt;/li&gt; &#xA; &lt;li&gt;Fixed potential crashes when querying hard links on file&lt;/li&gt; &#xA; &lt;li&gt;Fixed potential hang when opening oplocked file&lt;/li&gt; &#xA; &lt;li&gt;Fixed minor issues also uncovered by test suite&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.7.9 (2021-10-02):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixed deadlock when mounting on Windows 11&lt;/li&gt; &#xA; &lt;li&gt;Added support for BitLocker-encrypted volumes&lt;/li&gt; &#xA; &lt;li&gt;Improved filename checks when renaming or creating hard links&lt;/li&gt; &#xA; &lt;li&gt;Miscellaneous bug fixes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.7.8.1 (2021-06-13):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixed bug preventing new directories from appearing in listings&lt;/li&gt; &#xA; &lt;li&gt;Fixed Release version of driver still not working on XP&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.7.8 (2021-06-09):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Upgraded zstd to version 1.5.0&lt;/li&gt; &#xA; &lt;li&gt;Fixed regression stopping driver from working under XP&lt;/li&gt; &#xA; &lt;li&gt;Fixed compilation on clang&lt;/li&gt; &#xA; &lt;li&gt;Fixed corruption issue when Linux mount option &lt;code&gt;inode_cache&lt;/code&gt; had been used&lt;/li&gt; &#xA; &lt;li&gt;Fixed recursion issue involving virtual directory \$Root&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.7.7 (2021-04-12):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixed deadlock on high load&lt;/li&gt; &#xA; &lt;li&gt;Fixed free space issue when installing Genshin Impact&lt;/li&gt; &#xA; &lt;li&gt;Fixed issue when copying files with wildcards in command prompt&lt;/li&gt; &#xA; &lt;li&gt;Increased speed of directory lookups&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.7.6 (2021-01-14):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixed race condition when booting with Quibble&lt;/li&gt; &#xA; &lt;li&gt;No longer need to restart Windows after initial installation&lt;/li&gt; &#xA; &lt;li&gt;Forced maximum file name to 255 UTF-8 characters, to match Linux driver&lt;/li&gt; &#xA; &lt;li&gt;Fixed issue where directories could be created with trailing backslash&lt;/li&gt; &#xA; &lt;li&gt;Fixed potential deadlock when Windows calls NtCreateSection during flush&lt;/li&gt; &#xA; &lt;li&gt;Miscellaneous bug fixes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.7.5 (2020-10-31):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixed text display issue in shell extension&lt;/li&gt; &#xA; &lt;li&gt;Added support for mingw 8&lt;/li&gt; &#xA; &lt;li&gt;Fixed LXSS permissions not working in new versions of Windows&lt;/li&gt; &#xA; &lt;li&gt;Fixed issue where truncating an inline file wouldn&#39;t change its size&lt;/li&gt; &#xA; &lt;li&gt;Fixed crash with Quibble where driver would try to use AVX2 before Windows had enabled it&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.7.4 (2020-08-23):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixed issue when running compressed EXEs&lt;/li&gt; &#xA; &lt;li&gt;Changed build system to cmake&lt;/li&gt; &#xA; &lt;li&gt;Upgraded zstd to version 1.4.5&lt;/li&gt; &#xA; &lt;li&gt;Added support for FSCTL_GET_RETRIEVAL_POINTERS&lt;/li&gt; &#xA; &lt;li&gt;Miscellaneous bug fixes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.7.3 (2020-05-24):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixed crash when sending file change notifications&lt;/li&gt; &#xA; &lt;li&gt;Improved symlink handling with LXSS&lt;/li&gt; &#xA; &lt;li&gt;Added support for undocumented flag SL_IGNORE_READONLY_ATTRIBUTE&lt;/li&gt; &#xA; &lt;li&gt;Fixed corruption caused by edge case, where address allocated and freed in same flush&lt;/li&gt; &#xA; &lt;li&gt;Improved handling of free space tree&lt;/li&gt; &#xA; &lt;li&gt;Improved handling of very full volumes&lt;/li&gt; &#xA; &lt;li&gt;Fixed spurious warnings raised by GCC 10 static analyser&lt;/li&gt; &#xA; &lt;li&gt;Replaced multiplications and divisions with bit shift operations where appropriate&lt;/li&gt; &#xA; &lt;li&gt;Fixed combobox stylings in shell extension&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.7.2 (2020-04-10):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added more fixes for booting from Btrfs on Windows 10&lt;/li&gt; &#xA; &lt;li&gt;Fixed occasional deadlock when deleting or closing files on Windows 10 1909&lt;/li&gt; &#xA; &lt;li&gt;Fixed crash when reading large ADSes&lt;/li&gt; &#xA; &lt;li&gt;Fixed occasional crash when writing files on RAID5/6&lt;/li&gt; &#xA; &lt;li&gt;Miscellaneous bug fixes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.7.1 (2020-03-02):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixed crash when reading beyond end of file&lt;/li&gt; &#xA; &lt;li&gt;Fixed spurious checksum errors when doing unaligned read&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.7 (2020-02-26):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added support for metadata_uuid incompat flag (Linux 5.0)&lt;/li&gt; &#xA; &lt;li&gt;Added support for three- and four-disk RAID1 (Linux 5.5)&lt;/li&gt; &#xA; &lt;li&gt;Added support for new checksum types: xxhash, sha256, blake2 (Linux 5.5)&lt;/li&gt; &#xA; &lt;li&gt;Greatly increased checksumming speed&lt;/li&gt; &#xA; &lt;li&gt;Greatly increased compression and decompression speed&lt;/li&gt; &#xA; &lt;li&gt;Fixed bug causing incorrect free-space reporting when data is DUP&lt;/li&gt; &#xA; &lt;li&gt;Fixed issue creating directories on LXSS when &lt;code&gt;case=dir&lt;/code&gt; option set&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.6 (2020-02-04):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added experimental (i.e. untested) ARM support (thanks to &lt;a href=&#34;https://github.com/DjArt&#34;&gt;DjArt&lt;/a&gt; for this)&lt;/li&gt; &#xA; &lt;li&gt;Added fixes for booting from Btrfs on Windows 10&lt;/li&gt; &#xA; &lt;li&gt;Volumes will now get remounted if changed while Windows is asleep or hibernating&lt;/li&gt; &#xA; &lt;li&gt;Fixed corruption when mounting volume that hasn&#39;t been unmounted cleanly by Linux&lt;/li&gt; &#xA; &lt;li&gt;Fixed crash when deleting subvolume&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.5 (2019-11-10):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;More fixes for booting from Btrfs&lt;/li&gt; &#xA; &lt;li&gt;Added virtual $Root directory (see &#34;NoRootDir&#34; below)&lt;/li&gt; &#xA; &lt;li&gt;Added support for Windows XP&lt;/li&gt; &#xA; &lt;li&gt;Added support for renaming alternative data streams&lt;/li&gt; &#xA; &lt;li&gt;Added oplock support&lt;/li&gt; &#xA; &lt;li&gt;Fixed potential deadlock on boot&lt;/li&gt; &#xA; &lt;li&gt;Fixed possible crash on shutdown&lt;/li&gt; &#xA; &lt;li&gt;Fixed a bunch of memory leaks&lt;/li&gt; &#xA; &lt;li&gt;Many other miscellaneous bug fixes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.4 (2019-08-31):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added fragmentation percentage to property sheet&lt;/li&gt; &#xA; &lt;li&gt;Added support for Windows Server 2003 and Windows Vista&lt;/li&gt; &#xA; &lt;li&gt;Added pagefile support&lt;/li&gt; &#xA; &lt;li&gt;Improved support for file locking&lt;/li&gt; &#xA; &lt;li&gt;Added support for booting from Btrfs on Windows Server 2003 (see &lt;a href=&#34;https://www.youtube.com/watch?v=-5E2CHmHEUs&#34;&gt;https://www.youtube.com/watch?v=-5E2CHmHEUs&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Fixed issue where driver could open same inode twice&lt;/li&gt; &#xA; &lt;li&gt;Other miscellaneous bug fixes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.3 (2019-06-10):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added support for new rename and delete functions introduced to Windows 10&lt;/li&gt; &#xA; &lt;li&gt;Added support for Windows 10&#39;s flag for case-sensitive directories&lt;/li&gt; &#xA; &lt;li&gt;Changed free-space calculation method to be more like that of the Linux driver&lt;/li&gt; &#xA; &lt;li&gt;Added more support for 128-bit file IDs&lt;/li&gt; &#xA; &lt;li&gt;Fixed bug causing outdated root items&lt;/li&gt; &#xA; &lt;li&gt;Fixed bug preventing writing to VHDs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.2.1 (2019-05-06):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reverted commit affecting the creation of streams&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.2 (2019-05-05):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dramatic speed increase when opening many small files, such as with a Git repository&lt;/li&gt; &#xA; &lt;li&gt;Fixed crash on surprise removals of removable devices&lt;/li&gt; &#xA; &lt;li&gt;Added ability to change drive letters easily&lt;/li&gt; &#xA; &lt;li&gt;No longer creates free-space cache for very small chunks, so as not to confuse the Linux driver&lt;/li&gt; &#xA; &lt;li&gt;Fixed corruption when very large file created and then immediately deleted&lt;/li&gt; &#xA; &lt;li&gt;Minor bug fixes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.1 (2018-12-15):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support for Zstd compression&lt;/li&gt; &#xA; &lt;li&gt;Passthrough of Linux metadata to LXSS&lt;/li&gt; &#xA; &lt;li&gt;Refactored shell extension&lt;/li&gt; &#xA; &lt;li&gt;Fixed memory leaks&lt;/li&gt; &#xA; &lt;li&gt;Many other bug fixes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.0.2 (2018-05-19):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Minor bug fixes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.0.1 (2017-10-15):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixed deadlock&lt;/li&gt; &#xA; &lt;li&gt;Binaries now signed&lt;/li&gt; &#xA; &lt;li&gt;Minor bug fixes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v1.0 (2017-09-04):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;First non-beta release!&lt;/li&gt; &#xA; &lt;li&gt;Degraded mounts&lt;/li&gt; &#xA; &lt;li&gt;New free space cache (compat_ro flag &lt;code&gt;free_space_cache&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Shrinking and expanding of volumes&lt;/li&gt; &#xA; &lt;li&gt;Registry options now re-read when changed, rather than just on startup&lt;/li&gt; &#xA; &lt;li&gt;Improved balancing on very full filesystems&lt;/li&gt; &#xA; &lt;li&gt;Fixed problem preventing user profile directory being stored on btrfs on Windows 8 and above&lt;/li&gt; &#xA; &lt;li&gt;Better Plug and Play support&lt;/li&gt; &#xA; &lt;li&gt;Miscellaneous bug fixes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v0.10 (2017-05-02):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reflink copy&lt;/li&gt; &#xA; &lt;li&gt;Sending and receiving subvolumes&lt;/li&gt; &#xA; &lt;li&gt;Group mappings (see Mappings section above)&lt;/li&gt; &#xA; &lt;li&gt;Added commands for scripting etc. (see Commands section above)&lt;/li&gt; &#xA; &lt;li&gt;Fixed an issue preventing mounting on non-PNP devices, such as VeraCrypt&lt;/li&gt; &#xA; &lt;li&gt;Fixed an issue preventing new versions of LXSS from working&lt;/li&gt; &#xA; &lt;li&gt;Fixed problem with the ordering of extent refs, which caused problems on Linux but wasn&#39;t picked up by &lt;code&gt;btrfs check&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Added support for reading compressed inline extents&lt;/li&gt; &#xA; &lt;li&gt;Many miscellaneous bug fixes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v0.9 (2017-03-05):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Scrubbing&lt;/li&gt; &#xA; &lt;li&gt;TRIM/DISCARD&lt;/li&gt; &#xA; &lt;li&gt;Better handling of multi-device volumes&lt;/li&gt; &#xA; &lt;li&gt;Performance increases when reading from RAID filesystems&lt;/li&gt; &#xA; &lt;li&gt;No longer lies about being NTFS, except when it has to&lt;/li&gt; &#xA; &lt;li&gt;Volumes will now go readonly if there is an unrecoverable error, rather than blue-screening&lt;/li&gt; &#xA; &lt;li&gt;Filesystems can now be created with Windows&#39; inbuilt format.com&lt;/li&gt; &#xA; &lt;li&gt;Zlib upgraded to version 1.2.11&lt;/li&gt; &#xA; &lt;li&gt;Miscellaneous performance increases&lt;/li&gt; &#xA; &lt;li&gt;Miscellaneous bug fixes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v0.8 (2016-12-30):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Volume property sheet, for:&lt;/li&gt; &#xA; &lt;li&gt;Balances&lt;/li&gt; &#xA; &lt;li&gt;Adding and removing devices&lt;/li&gt; &#xA; &lt;li&gt;Showing disk usage, i.e. the equivalent to &lt;code&gt;btrfs fi usage&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Checksums now calculated in parallel where appropriate&lt;/li&gt; &#xA; &lt;li&gt;Creation of new filesystems, with mkbtrfs.exe&lt;/li&gt; &#xA; &lt;li&gt;Plug and play support for RAID devices&lt;/li&gt; &#xA; &lt;li&gt;Disk usage now correctly allocated to processes in taskmgr&lt;/li&gt; &#xA; &lt;li&gt;Performance increases&lt;/li&gt; &#xA; &lt;li&gt;Miscellaneous bug fixes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v0.7 (2016-10-24):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support for RAID5/6 (incompat flag &lt;code&gt;raid56&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Seeding support&lt;/li&gt; &#xA; &lt;li&gt;LXSS (&#34;Ubuntu on Windows&#34;) support&lt;/li&gt; &#xA; &lt;li&gt;Support for Windows Extended Attributes&lt;/li&gt; &#xA; &lt;li&gt;Improved removable device support&lt;/li&gt; &#xA; &lt;li&gt;Better snapshot support&lt;/li&gt; &#xA; &lt;li&gt;Recovery from RAID checksum errors&lt;/li&gt; &#xA; &lt;li&gt;Fixed issue where creating a lot of new files was taking a long time&lt;/li&gt; &#xA; &lt;li&gt;Miscellaneous speed increases and bug fixes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v0.6 (2016-08-21):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compression support (both zlib and lzo)&lt;/li&gt; &#xA; &lt;li&gt;Mixed groups support&lt;/li&gt; &#xA; &lt;li&gt;No-holes support&lt;/li&gt; &#xA; &lt;li&gt;Added inode property sheet to shell extension&lt;/li&gt; &#xA; &lt;li&gt;Many more mount options (see below)&lt;/li&gt; &#xA; &lt;li&gt;Better support for removable devices&lt;/li&gt; &#xA; &lt;li&gt;Page file support&lt;/li&gt; &#xA; &lt;li&gt;Many miscellaneous bug fixes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v0.5 (2016-07-24):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Massive speed increases (from &#34;sluggish&#34; to &#34;blistering&#34;)&lt;/li&gt; &#xA; &lt;li&gt;Massive stability improvements&lt;/li&gt; &#xA; &lt;li&gt;RAID support: RAID0, RAID1, and RAID10&lt;/li&gt; &#xA; &lt;li&gt;Asynchronous reading and writing&lt;/li&gt; &#xA; &lt;li&gt;Partition-less Btrfs volumes&lt;/li&gt; &#xA; &lt;li&gt;Windows sparse file support&lt;/li&gt; &#xA; &lt;li&gt;Object ID support&lt;/li&gt; &#xA; &lt;li&gt;Beginnings of per-volume mount options&lt;/li&gt; &#xA; &lt;li&gt;Security improvements&lt;/li&gt; &#xA; &lt;li&gt;Notification improvements&lt;/li&gt; &#xA; &lt;li&gt;Miscellaneous bug fixes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v0.4 (2016-05-02):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Subvolume creation and deletion&lt;/li&gt; &#xA; &lt;li&gt;Snapshots&lt;/li&gt; &#xA; &lt;li&gt;Preallocation&lt;/li&gt; &#xA; &lt;li&gt;Reparse points&lt;/li&gt; &#xA; &lt;li&gt;Hard links&lt;/li&gt; &#xA; &lt;li&gt;Plug and play&lt;/li&gt; &#xA; &lt;li&gt;Free-space cache&lt;/li&gt; &#xA; &lt;li&gt;Fix problems preventing volume from being shared over the network&lt;/li&gt; &#xA; &lt;li&gt;Miscellaneous bug fixes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v0.3 (2016-03-25):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bug fixes:&lt;/li&gt; &#xA; &lt;li&gt;Fixed crashes when metadata blocks were SINGLE, such as on SSDs&lt;/li&gt; &#xA; &lt;li&gt;Fixed crash when splitting an internal tree&lt;/li&gt; &#xA; &lt;li&gt;Fixed tree traversal failing when first item in tree had been deleted&lt;/li&gt; &#xA; &lt;li&gt;Fixed emptying out of whole tree (probably only relevant to checksum tree)&lt;/li&gt; &#xA; &lt;li&gt;Fixed &#34;incorrect local backref count&#34; message appearing in &lt;code&gt;btrfs check&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Miscellaneous other fixes&lt;/li&gt; &#xA; &lt;li&gt;Added beginnings of shell extension, which currently only changes the icon of subvolumes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v0.2 (2016-03-13):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bug fix release:&lt;/li&gt; &#xA; &lt;li&gt;Check memory allocations succeed&lt;/li&gt; &#xA; &lt;li&gt;Check tree items are the size we&#39;re expecting&lt;/li&gt; &#xA; &lt;li&gt;Added rollbacks, so failed operations are completely undone&lt;/li&gt; &#xA; &lt;li&gt;Fixed driver claiming all unrecognized partitions (thanks Pierre Schweitzer)&lt;/li&gt; &#xA; &lt;li&gt;Fixed deadlock within &lt;code&gt;CcCopyRead&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fixed changing properties of a JPEG within Explorer&lt;/li&gt; &#xA; &lt;li&gt;Lie about FS type, so UAC works&lt;/li&gt; &#xA; &lt;li&gt;Many, many miscellaneous bug fixes&lt;/li&gt; &#xA; &lt;li&gt;Rudimentary security support&lt;/li&gt; &#xA; &lt;li&gt;Debug log support (see below)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v0.1 (2016-02-21):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Initial alpha release.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Debug log&lt;/h2&gt; &#xA;&lt;p&gt;WinBtrfs has three levels of debug messages: errors and FIXMEs, warnings, and traces. The release version of the driver only displays the errors and FIXMEs, which it logs via &lt;code&gt;DbgPrint&lt;/code&gt;. You can view these messages via the Microsoft program DebugView, available at &lt;a href=&#34;https://technet.microsoft.com/en-gb/sysinternals/debugview&#34;&gt;https://technet.microsoft.com/en-gb/sysinternals/debugview&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to report a problem, it&#39;d be of great help if you could also attach a full debug log. To do this, you will need to use the debug versions of the drivers; copy the files in Debug\x64 or Debug\x86 into x64 or x86. You will also need to set the registry entries in HKLM\SYSTEM\CurrentControlSet\Services\btrfs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;DebugLogLevel&lt;/code&gt; (DWORD): 0 for no messages, 1 for errors and FIXMEs, 2 for warnings also, and 3 for absolutely everything, including traces.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;LogDevice&lt;/code&gt; (string, optional): the serial device you want to output to, such as &lt;code&gt;\Device\Serial0&lt;/code&gt;. This is probably only useful on virtual machines.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;LogFile&lt;/code&gt; (string, optional): the file you wish to output to, if &lt;code&gt;LogDevice&lt;/code&gt; isn&#39;t set. Bear in mind this is a kernel filename, so you&#39;ll have to prefix it with &#34;\??\&#34; (e.g., &#34;\??\C:\btrfs.log&#34;). It probably goes without saying, but don&#39;t store this on a volume the driver itself is using, or you&#39;ll cause an infinite loop.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mount options&lt;/h2&gt; &#xA;&lt;p&gt;The driver will create subkeys in the registry under HKLM\SYSTEM\CurrentControlSet\Services\btrfs for each mounted filesystem, named after its UUID. If you&#39;re unsure which UUID refers to which volume, you can check using &lt;code&gt;btrfs fi show&lt;/code&gt; on Linux. You can add per-volume mount options to this subkey, which will take effect on reboot. If a value is set in the key above this, it will use this by default.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Ignore&lt;/code&gt; (DWORD): set this to 1 to tell the driver not to attempt loading this filesystem. With the &lt;code&gt;Readonly&lt;/code&gt; flag, this is probably redundant.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Readonly&lt;/code&gt; (DWORD): set this to 1 to tell the driver not to allow writing to this volume. This is the equivalent of the &lt;code&gt;ro&lt;/code&gt; flag on Linux.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Compress&lt;/code&gt; (DWORD): set this to 1 to tell the driver to write files as compressed by default. This is the equivalent of the &lt;code&gt;compress&lt;/code&gt; flag on Linux.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;CompressForce&lt;/code&gt; (DWORD): set this to 1 to force compression, i.e. to ignore the &lt;code&gt;nocompress&lt;/code&gt; inode flag and even attempt compression of incompressible files. This isn&#39;t a good idea, but is the equivalent of the &lt;code&gt;compress-force&lt;/code&gt; flag on Linux.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;CompressType&lt;/code&gt; (DWORD): set this to 1 to prefer zlib compression, 2 to prefer lzo compression, or 3 to prefer zstd compression. The default is 0, which uses zstd or lzo compression if the incompat flags are set, and zlib otherwise.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;FlushInterval&lt;/code&gt; (DWORD): the interval in seconds between metadata flushes. The default is 30, as on Linux - the parameter is called &lt;code&gt;commit&lt;/code&gt; there.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;ZlibLevel&lt;/code&gt; (DWORD): a number between -1 and 9, which determines how much CPU time is spent trying to compress files. You might want to fiddle with this if you have a fast CPU but a slow disk, or vice versa. The default is 3, which is the hard-coded value on Linux.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;MaxInline&lt;/code&gt; (DWORD): the maximum size that will be allowed for &#34;inline&#34; files, i.e. those stored in the metadata. The default is 2048, which is also the default on modern versions of Linux - the parameter is called &lt;code&gt;max_inline&lt;/code&gt; there. It will be clipped to the maximum value, which unless you&#39;ve changed your node size will be a shade under 16 KB.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;SubvolId&lt;/code&gt; (QWORD): the ID of the subvolume that we will attempt to mount as the root. If it doesn&#39;t exist, this parameter will be silently ignored. The subvolume ID can be found on the inode property sheet; it&#39;s in hex there, as opposed to decimal on the Linux tools. The default is whatever has been set via &lt;code&gt;btrfs subvolume set-default&lt;/code&gt;; or, failing that, subvolume 5. The equivalent parameter on Linux is called &lt;code&gt;subvolid&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;SkipBalance&lt;/code&gt; (DWORD): set to 1 to tell the driver not to attempt resuming a balance which was running when the system last powered down. The default is 0. The equivalent parameter on Linux is &lt;code&gt;skip_balance&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;NoPNP&lt;/code&gt; (DWORD): useful for debugging only, this forces any volumes to appear rather than exposing them via the usual Plug and Play method.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;ZstdLevel&lt;/code&gt; (DWORD): Zstd compression level, default 3.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;NoTrim&lt;/code&gt; (DWORD): set this to 1 to disable TRIM support.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;AllowDegraded&lt;/code&gt; (DWORD): set this to 1 to allow mounting a degraded volume, i.e. one with a device missing. You are strongly advised not to enable this unless you need to.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;NoRootDir&lt;/code&gt; (DWORD): if you have changed your default subvolume, either natively or by a registry option, there will be a hidden directory called $Root which points to where the root would normally be. Set this value to 1 to prevent this appearing.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;NoDataCOW&lt;/code&gt; (DWORD): set this to 1 to disable copy-on-write for new files. This is the equivalent of the &lt;code&gt;nodatacow&lt;/code&gt; flag on Linux.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;d appreciate any feedback you might have, positive or negative: &lt;a href=&#34;mailto:mark@harmstone.com&#34;&gt;mark@harmstone.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;This code contains portions of the following software:&lt;/p&gt; &#xA;&lt;h3&gt;Zlib&lt;/h3&gt; &#xA;&lt;p&gt;Copyright (C) 1995-2017 Jean-loup Gailly and Mark Adler&lt;/p&gt; &#xA;&lt;p&gt;This software is provided &#39;as-is&#39;, without any express or implied warranty. In no event will the authors be held liable for any damages arising from the use of this software.&lt;/p&gt; &#xA;&lt;p&gt;Permission is granted to anyone to use this software for any purpose, including commercial applications, and to alter it and redistribute it freely, subject to the following restrictions:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.&lt;/li&gt; &#xA; &lt;li&gt;Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.&lt;/li&gt; &#xA; &lt;li&gt;This notice may not be removed or altered from any source distribution.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;LZO&lt;/h3&gt; &#xA;&lt;p&gt;WinBtrfs contains portions of an early version of lzo, which is copyright 1996 Markus Oberhumer. Modern versions are licensed under the GPL, but this was licensed under the LGPL, so I believe it is okay to use.&lt;/p&gt; &#xA;&lt;h3&gt;Zstd&lt;/h3&gt; &#xA;&lt;p&gt;Copyright (c) 2016-present, Facebook, Inc. All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Neither the name Facebook nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt; &#xA;&lt;h3&gt;BLAKE2&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/BLAKE2/BLAKE2&#34;&gt;https://github.com/BLAKE2/BLAKE2&lt;/a&gt; (public domain)&lt;/p&gt; &#xA;&lt;h3&gt;SHA256&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/amosnier/sha-2&#34;&gt;https://github.com/amosnier/sha-2&lt;/a&gt; (public domain)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>migueletto/PumpkinOS</title>
    <updated>2024-04-10T01:24:40Z</updated>
    <id>tag:github.com,2024-04-10:/migueletto/PumpkinOS</id>
    <link href="https://github.com/migueletto/PumpkinOS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PumpkinOS is a re-implementation of PalmOS.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PumpkinOS&lt;/h1&gt; &#xA;&lt;p&gt;PumpkinOS is a re-implementation of PalmOS that runs on modern architectures (x86, ARM, etc). It is not your average PalmOS emulator (it does NOT require a PalmOS ROM), but it can run m68K PalmOS applications. For a series of articles describing various aspects of PumpkinOS, look here: &lt;a href=&#34;https://pmig96.wordpress.com/category/palmos/&#34;&gt;https://pmig96.wordpress.com/category/palmos/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/migueletto/PumpkinOS/master/screenshots/pumpkin.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Launcher is the first application that runs when PumpkinOS starts. It shows a panel from which you can start other applications. Preferences will eventually contain all preference options for configuring PumpkinOS. Command is a command shell, still experimental.&lt;/p&gt; &#xA;&lt;p&gt;This release contains the four PIM applications found on PalmOS: AddressBook, MemoPad, ToDoList and DateBook. The source code for these applications were distributed in one or more PalmOS SDks and were adapted for correct compilation on PumpkinOS. Records created by AddressBook and MemoPad should be compatible with their PalmOS counterparts. Because of differences in word size en endianness, however, records created by ToDoList and DateBook are not compatible. These applications were tested just to the point where I could create and edit a few records. There are still some quirks, and some functions were not tested at all. The goal here is just to offer a view of what to expect from PumpkinOS in the future.&lt;/p&gt; &#xA;&lt;p&gt;I am planing to setup a bug tracker to document enhancements and bugs.&lt;/p&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;PumpkinOS is licensed under the GPL v3. The license directory contains information on specific licenses of the various components used in PumpkinOS. If you think something is missing and/or incorrect, please let me know.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;You have to build PumpkinOS from source. No IDE is required, you can build from the command line. If you use 64-bits Windows, you can use MSYS2 (&lt;a href=&#34;https://www.msys2.org/&#34;&gt;https://www.msys2.org/&lt;/a&gt;). Download the installer and follow the instructions there. Open a MINGW64 terminal (the one with the blue &#39;M&#39; icon) and install these additional packages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pacman -S gcc binutils make git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next clone the PumpkinOS repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/migueletto/PumpkinOS.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally go to the source directory of the PumpkinOS repository you have just cloned and run the make script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd PumpkinOS/src&#xA;./mk.sh Msys 64&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If everything goes well, you will have a pumpkin.exe in the root directory, some DLLs in the bin directory, and some PRC files in the vfs/app_install directory.&lt;/p&gt; &#xA;&lt;p&gt;There is also experimental support for 32-bits Windows (Vista or later. It will not work on Windows XP). Open a MINGW32 terminal (the one with the gray &#39;M&#39; icon) and install this additional package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pacman -S mingw-w64-i686-gcc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From there, compile using (note that now argument is 32, for 32-bits):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd PumpkinOS/src&#xA;./mk.sh Msys 32&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using a 64-bits Linux-based OS (like Debian, Ubuntu, etc), you also need gcc, binutils, make and git. If you are a developer, there is a chance you already have those. If they are not installed, follow the instructions to download additional packages on your specific Linux distribution. You must also install the SDL2 development package (the package that contains the libraries and the headers). On a Debian distribution, it is probably something like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install gcc binutils make git libsdl2-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Again, you must clone the repository and compile it using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd PumpkinOS/src&#xA;./mk.sh GNU/Linux 64&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Windows 11 and recent releases of Windows 10, it is also possible to build PumpkinOS on WSL (Windows Subsystem for Linux, version 2). Open a WSL terminal and follow the same instructions for a Linux build.&lt;/p&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;On 64-bits Windows, run pumpkin.bat. On 32-bits Windows, run pumpkin32.bat. On Linux or WSL, run pumpkin.sh. PumpkinOS will open on a new window. On WSL you may need to run a X-Window Manager, otherwise the PumpkinOS window will not have a border.&lt;/p&gt; &#xA;&lt;p&gt;When you run PumpkinOS, all PRCs inside vfs/app_install will be removed and expanded into folders inside vfs/app_storage. Please keep in mind that everything is pretty much experimental at this stage, so expect a few issues here and there. After either a successful or an unsuccessful run, you will find a pumpkin.log file on the root directory. If something goes wrong, look for lines marked with an &#34;E&#34; on the third column of this file. You can reach me for questions (and send me your log file if you wish).&lt;/p&gt; &#xA;&lt;p&gt;The Windows version implements Drag &amp;amp; Drop functionality. You can drag a PalmOS PRC over the PumpkinOS window and hopefully it will be installed and show up in the Launcher. The Linux version lacks this functionality. For now, you have to manually copy PRCs to the vfs/app_install directory and restart PumpkinOS.&lt;/p&gt; &#xA;&lt;p&gt;If you really want to, you can debug PumpkinOS with gdb on Windows, Linux and WSL. On Windows, edit pumpkin.bat and change the last line to (you should also add the Windows equivalent of the /usr/bin directory of your MSYS2 installation the the PATH):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gdb.exe --args .\pumpkin.exe -d 1 -f pumpkin.log -s libscriptlua.dll script\pumpkin_windows.lua&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Linux and WSL edit pumpkin.sh and change the last line to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gdb --args ./pumpkin -d 1 -f pumpkin.log -s libscriptlua.so ./script/pumpkin_linux.lua&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;I am writing a full Wiki article on source level debuging PumpkinOS.&lt;/p&gt;</summary>
  </entry>
</feed>