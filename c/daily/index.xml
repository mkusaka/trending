<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-24T01:27:55Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sustainable-computing-io/kepler</title>
    <updated>2024-03-24T01:27:55Z</updated>
    <id>tag:github.com,2024-03-24:/sustainable-computing-io/kepler</id>
    <link href="https://github.com/sustainable-computing-io/kepler" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kepler (Kubernetes-based Efficient Power Level Exporter) uses eBPF to probe performance counters and other system stats, use ML models to estimate workload energy consumption based on these stats, and exports them as Prometheus metrics&lt;/p&gt;&lt;hr&gt;&lt;img align=&#34;right&#34; width=&#34;250px&#34; src=&#34;https://user-images.githubusercontent.com/17484350/138557170-d8079b94-a517-4366-ade8-8d473e3f3f1d.jpg&#34;&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/sustainable-computing-io/kepler/unit_test.yml?branch=main&amp;amp;label=CI&#34; alt=&#34;GitHub Workflow Status (event)&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Coverage-49.2%25-yellow&#34; alt=&#34;Coverage&#34;&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/7391&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/7391/badge&#34; alt=&#34;OpenSSF Best Practices&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://securityscorecards.dev/viewer/?uri=github.com/sustainable-computing-io/kepler&#34;&gt;&lt;img src=&#34;https://api.securityscorecards.dev/projects/github.com/sustainable-computing-io/kepler/badge&#34; alt=&#34;OpenSSF Scorecard&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!--&#xA;[![GoDoc](https://godoc.org/github.com/kubernetes/kube-state-metrics?status.svg)](https://godoc.org/github.com/kubernetes/kube-state-metrics)&#xA;--&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/license/sustainable-computing-io/kepler&#34; alt=&#34;GitHub&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/KeplerProject&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/https/twitter.com/KeplerProject.svg?style=social&amp;amp;label=Follow%20%40KeplerProject&#34; alt=&#34;Twitter URL&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Kepler&lt;/h1&gt; &#xA;&lt;p&gt;Kepler (Kubernetes Efficient Power Level Exporter) uses eBPF to probe energy-related system stats and exports them as Prometheus metrics.&lt;/p&gt; &#xA;&lt;p&gt;As a CNCF Sandbox project, Kepler uses &lt;a href=&#34;https://github.com/cncf/foundation/raw/main/code-of-conduct.md&#34;&gt;CNCF Code of Conduct&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;Kepler Exporter exposes a variety of &lt;a href=&#34;https://sustainable-computing.io/design/metrics/&#34;&gt;metrics&lt;/a&gt; about the energy consumption of Kubernetes components such as Pods and Nodes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sustainable-computing-io/kepler/main/doc/kepler-arch.png&#34; alt=&#34;Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install Kepler&lt;/h2&gt; &#xA;&lt;p&gt;Instructions to install Kepler can be found in the &lt;a href=&#34;https://sustainable-computing.io/installation/kepler/&#34;&gt;Kepler docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Visualise Kepler metrics with Grafana&lt;/h2&gt; &#xA;&lt;p&gt;To visualise the power consumption metrics made available by the Kepler Exporter, import the pre-generated &lt;a href=&#34;https://raw.githubusercontent.com/sustainable-computing-io/kepler/main/grafana-dashboards/Kepler-Exporter.json&#34;&gt;Kepler Dashboard&lt;/a&gt; into Grafana: &lt;img src=&#34;https://raw.githubusercontent.com/sustainable-computing-io/kepler/main/doc/dashboard.png&#34; alt=&#34;Sample Grafana dashboard&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contribute to Kepler&lt;/h2&gt; &#xA;&lt;p&gt;Interested in contributing to Kepler? Follow the &lt;a href=&#34;https://raw.githubusercontent.com/sustainable-computing-io/kepler/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; to get started!&lt;/p&gt; &#xA;&lt;h2&gt;Talks &amp;amp; Demos&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=P5weULiBl60&#34;&gt;Kepler Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sustainable-computing-io/kepler/main/doc/OSS-NA22.pdf&#34;&gt;&#34;Sustainability the Container Native Way&#34; - Open Source Summit NA 2022&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A full list of talks and demos about Kepler can be found &lt;a href=&#34;https://github.com/sustainable-computing-io/kepler-doc/tree/main/demos&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community Meetings&lt;/h2&gt; &#xA;&lt;p&gt;Please join the biweekly community meetings. The meeting calendar and agenda can be found &lt;a href=&#34;https://github.com/sustainable-computing-io/community/raw/main/community-event.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>phdlee/uvk5cec</title>
    <updated>2024-03-24T01:27:55Z</updated>
    <id>tag:github.com,2024-03-24:/phdlee/uvk5cec</id>
    <link href="https://github.com/phdlee/uvk5cec" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Adds various experimental features to the uvk5 radio&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Version 0.1HF (January 19, 2024) - (another version)&lt;/h1&gt; &#xA;&lt;p&gt;Detailed explanations are provided in the link below. &lt;a href=&#34;http://www.hamskey.com&#34;&gt;http://www.hamskey.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Separate version released for UV-K5 modified with SI4732-A10&lt;/li&gt; &#xA; &lt;li&gt;This version is different from the existing CEC version. To run this firmware as a testing version, be sure to remove BK1080 and replace it with SI4732-A10.&lt;/li&gt; &#xA; &lt;li&gt;Remove all unnecessary functions other than the basic functions of the radio (to secure programming space)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Version 0.1P (January 13, 2024)&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Improved variables that use excessive memory to secure program memory&lt;/li&gt; &#xA; &lt;li&gt;Removal of the spectrum function (it is maintained in the source code. If you need it, you can select the activation option when distributing the source code later)&lt;/li&gt; &#xA; &lt;li&gt;Added CW, CWF, CWN modes&lt;/li&gt; &#xA; &lt;li&gt;Added CW-related settings The current version will be tested for 1-2 weeks and then redistributed as stable version 0.2. If you don&#39;t want to be a beta tester, you can download 0.2 in 1-2 weeks.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Version 0.1M (January 10, 2024)&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add Text Configuration (Call sign, name, dx callsign, dx name, grid, CW Messages for builtin keyer)&lt;/li&gt; &#xA; &lt;li&gt;Add Some function to Text Editor&lt;/li&gt; &#xA; &lt;li&gt;Builtin SSTV Transmitter (M1 Mode) (not need any device, stand alone)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Version 0.1c (January 5, 2024)&lt;/h1&gt; &#xA;&lt;p&gt;This version fixes the parts that amateur radio operators found most inconvenient.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add Mhz button when entering frequency. If you want to move the frequency to 28.010, enter 28&lt;em&gt;010 (&lt;/em&gt; button as Mhz button)&lt;/li&gt; &#xA; &lt;li&gt;Operating in Live mode when moving the frequency quickly (receiving while moving the frequency)&lt;/li&gt; &#xA; &lt;li&gt;Free up some memory for future tasks&lt;/li&gt; &#xA; &lt;li&gt;This version is a stable version and the source code was released together. Various experimental elements will be added from the next version, and as announced, the source code will be finalized and released upon the release of version 1.0.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Version 0.1b (January 2, 2024)&lt;/h1&gt; &#xA;&lt;p&gt;I worked on the first firmware. I did what was requested by the user. Alternatively, functions that are not greatly needed in amateur radio were changed to those that are needed in amateur radio.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;I took the source code from &lt;a href=&#34;https://github.com/egzumer/uv-k5-firmware-custom&#34;&gt;https://github.com/egzumer/uv-k5-firmware-custom&lt;/a&gt; and created a new project.&lt;/li&gt; &#xA; &lt;li&gt;Change the environment so that it can be used in Visual Studio Code (win_make.bat, makefile option ...)&lt;/li&gt; &#xA; &lt;li&gt;Remove some unnecessary variables for operation&lt;/li&gt; &#xA; &lt;li&gt;Changed the BCL function to be selectable at the compilation stage. (Because BCL is not often used in amateur radio), If you need the BCL function, just set the compilation options. (ENABLE_BCL ?= 0)&lt;/li&gt; &#xA; &lt;li&gt;Changed all band TX activation from 10 times to once (this can also be operated in the old form in the makefile) (This is because you working in the Hiddel Menu anyway)&lt;/li&gt; &#xA; &lt;li&gt;The 350TX, 350EN, and 500TX functions have been changed to amateur radio bands. Even if TX 350 and TX 500 are ENABLE, they only operate under certain conditions. (Default Range Mode) , In countries where the TX function must be tested for radio use, TX on all frequencies must be within range. To receive permission for 900Mhz or 1.2Ghz, just enable TX900 and (TX126 OR TX127 - Each country has different licensed frequency bands. Just choose the band that suits you.)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Important notice about firmware&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The program will be modified starting today (January 2, 2024) based on egzummer&#39;s UV_K5 version.&lt;/li&gt; &#xA; &lt;li&gt;Any parts that are added or removed from existing features will be specified above this part.&lt;/li&gt; &#xA; &lt;li&gt;I plan to add quite a few features, and to secure flash memory space, I plan to remove visual elements that do not have a significant impact on radio performance. (ex : bargraph, icon, usb connected...)&lt;/li&gt; &#xA; &lt;li&gt;The source will continue to be modified, and the compiled firmware will be released as a beta version.&lt;/li&gt; &#xA; &lt;li&gt;Sources will be uploaded by major version (ex : version 1.0, 2.0, 3.0). This is because there is a high possibility that sources will be created or removed in large units.&lt;/li&gt; &#xA; &lt;li&gt;See below for all features and descriptions prior to January 2, 2024.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;I am always grateful to the UV-K5 firmware contributors for creating a new playground. DE KD8CE&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;The source was taken from the EGZUMER repository on January 2, 2024&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please refer to the previous functions below.&lt;/li&gt; &#xA; &lt;li&gt;This firmware contains various experimental elements. It will be distributed as a beta version before releasing the major version.&lt;/li&gt; &#xA; &lt;li&gt;EGZUMMER&#39;s firmware for the stable version.&lt;/li&gt; &#xA; &lt;li&gt;Once again, we would like to thank Dual Tachyon and egzummer for doing such great work and providing a playground for many developers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Open re-implementation of the Quansheng UV-K5/K6/5R v2.1.27 firmware&lt;/h1&gt; &#xA;&lt;p&gt;This repository is a merge of &lt;a href=&#34;https://github.com/OneOfEleven/uv-k5-firmware-custom&#34;&gt;OneOfEleven custom firmware&lt;/a&gt; with &lt;a href=&#34;https://github.com/fagci/uv-k5-firmware-fagci-mod/tree/refactor&#34;&gt;fagci spectrum analizer&lt;/a&gt; plus my few changes.&lt;br&gt; All is a cloned and customized version of DualTachyon&#39;s open firmware found &lt;a href=&#34;https://github.com/DualTachyon/uv-k5-firmware&#34;&gt;here&lt;/a&gt; ... a cool achievement !&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING]&lt;br&gt; Use this firmware at your own risk (entirely). There is absolutely no guarantee that it will work in any way shape or form on your radio(s), it may even brick your radio(s), in which case, you&#39;d need to buy another radio. Anyway, have fun.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/phdlee/uvk5cec/main/#main-features&#34;&gt;Main Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/phdlee/uvk5cec/main/#manual&#34;&gt;Manual&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/phdlee/uvk5cec/main/#radio-performance&#34;&gt;Radio Performance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/phdlee/uvk5cec/main/#user-customization&#34;&gt;User Customization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/phdlee/uvk5cec/main/#compiler&#34;&gt;Compiler&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/phdlee/uvk5cec/main/#building&#34;&gt;Building&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/phdlee/uvk5cec/main/#credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/phdlee/uvk5cec/main/#other-sources-of-information&#34;&gt;Other sources of information&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/phdlee/uvk5cec/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/phdlee/uvk5cec/main/#example-changesupdates&#34;&gt;Example changes/updates&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Main features:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;many of OneOfEleven mods: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;AM fix, huge improvement in reception quality&lt;/li&gt; &#xA;   &lt;li&gt;long press buttons functions replicating F+ action&lt;/li&gt; &#xA;   &lt;li&gt;fast scanning&lt;/li&gt; &#xA;   &lt;li&gt;channel name editing in the menu&lt;/li&gt; &#xA;   &lt;li&gt;channel name + frequency display option&lt;/li&gt; &#xA;   &lt;li&gt;shortcut for scan-list assignment (long press &lt;code&gt;5 NOAA&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;scan-list toggle (long press &lt;code&gt;* Scan&lt;/code&gt; while scanning)&lt;/li&gt; &#xA;   &lt;li&gt;configurable button function selectable from menu&lt;/li&gt; &#xA;   &lt;li&gt;battery percentage/voltage on status bar, selectable from menu&lt;/li&gt; &#xA;   &lt;li&gt;longer backlight times&lt;/li&gt; &#xA;   &lt;li&gt;mic bar&lt;/li&gt; &#xA;   &lt;li&gt;RSSI s-meter&lt;/li&gt; &#xA;   &lt;li&gt;more frequency steps&lt;/li&gt; &#xA;   &lt;li&gt;squelch more sensitive&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;fagci spectrum analyzer (&lt;strong&gt;F+5&lt;/strong&gt; to turn on)&lt;/li&gt; &#xA; &lt;li&gt;some other mods introduced by me: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;SSB demodulation (adopted from fagci)&lt;/li&gt; &#xA;   &lt;li&gt;backlight dimming&lt;/li&gt; &#xA;   &lt;li&gt;battery voltage calibration from menu&lt;/li&gt; &#xA;   &lt;li&gt;better battery percentage calculation, selectable for 1600mAh or 2200mAh&lt;/li&gt; &#xA;   &lt;li&gt;more configurable button functions&lt;/li&gt; &#xA;   &lt;li&gt;long press MENU as another configurable button&lt;/li&gt; &#xA;   &lt;li&gt;better DCS/CTCSS scanning in the menu (&lt;code&gt;* SCAN&lt;/code&gt; while in RX DCS/CTCSS menu item)&lt;/li&gt; &#xA;   &lt;li&gt;Piotr022 style s-meter&lt;/li&gt; &#xA;   &lt;li&gt;restore initial freq/channel when scanning stopped with EXIT, remember last found transmission with MENU button&lt;/li&gt; &#xA;   &lt;li&gt;reordered and renamed menu entries&lt;/li&gt; &#xA;   &lt;li&gt;LCD interference crash fix&lt;/li&gt; &#xA;   &lt;li&gt;many others...&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Manual&lt;/h2&gt; &#xA;&lt;p&gt;Up to date manual is available in the &lt;a href=&#34;https://github.com/egzumer/uv-k5-firmware-custom/wiki&#34;&gt;Wiki section&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Radio performance&lt;/h2&gt; &#xA;&lt;p&gt;Please note that the Quansheng UV-Kx radios are not professional quality transceivers, their performance is strictly limited. The RX front end has no track-tuned band pass filtering at all, and so are wide band/wide open to any and all signals over a large frequency range.&lt;/p&gt; &#xA;&lt;p&gt;Using the radio in high intensity RF environments will most likely make reception anything but easy (AM mode will suffer far more than FM ever will), the receiver simply doesn&#39;t have a great dynamic range, which results in distorted AM audio with stronger RX&#39;ed signals. There is nothing more anyone can do in firmware/software to improve that, once the RX gain adjustment I do (AM fix) reaches the hardwares limit, your AM RX audio will be all but non-existent (just like Quansheng&#39;s firmware). On the other hand, FM RX audio will/should be fine.&lt;/p&gt; &#xA;&lt;p&gt;But, they are nice toys for the price, fun to play with.&lt;/p&gt; &#xA;&lt;h2&gt;User customization&lt;/h2&gt; &#xA;&lt;p&gt;You can customize the firmware by enabling/disabling various compile options, this allows us to remove certain firmware features in order to make room in the flash for others. You&#39;ll find the options at the top of &#34;Makefile&#34; (&#39;0&#39; = disable, &#39;1&#39; = enable) ..&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Build option&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🧰 &lt;strong&gt;STOCK QUANSHENG FERATURES&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_UART&lt;/td&gt; &#xA;   &lt;td&gt;without this you can&#39;t configure radio via PC !&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_AIRCOPY&lt;/td&gt; &#xA;   &lt;td&gt;easier to just enter frequency with butts&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_FMRADIO&lt;/td&gt; &#xA;   &lt;td&gt;WBFM VHF broadcast band receiver&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_NOAA&lt;/td&gt; &#xA;   &lt;td&gt;everything NOAA (only of any use in the USA)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_VOICE&lt;/td&gt; &#xA;   &lt;td&gt;want to hear voices ?&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_VOX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_ALARM&lt;/td&gt; &#xA;   &lt;td&gt;TX alarms&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_TX1750&lt;/td&gt; &#xA;   &lt;td&gt;side key 1750Hz TX tone (older style repeater access)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_PWRON_PASSWORD&lt;/td&gt; &#xA;   &lt;td&gt;power-on password stuff&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_DTMF_CALLING&lt;/td&gt; &#xA;   &lt;td&gt;DTMF calling fuctionality, sending calls, receiving calls, group calls, contacts list etc.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_FLASHLIGHT&lt;/td&gt; &#xA;   &lt;td&gt;enable top flashlight LED (on, blink, SOS)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🧰 &lt;strong&gt;CUSTOM MODS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_BIG_FREQ&lt;/td&gt; &#xA;   &lt;td&gt;big font frequencies (like original QS firmware)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_SMALL_BOLD&lt;/td&gt; &#xA;   &lt;td&gt;bold channel name/no. (when name + freq channel display mode)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_CUSTOM_MENU_LAYOUT&lt;/td&gt; &#xA;   &lt;td&gt;changes how the menu looks like&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_KEEP_MEM_NAME&lt;/td&gt; &#xA;   &lt;td&gt;maintain channel name when (re)saving memory channel&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_WIDE_RX&lt;/td&gt; &#xA;   &lt;td&gt;full 18MHz to 1300MHz RX (though front-end/PA not designed for full range)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_TX_WHEN_AM&lt;/td&gt; &#xA;   &lt;td&gt;allow TX (always FM) when RX is set to AM&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_F_CAL_MENU&lt;/td&gt; &#xA;   &lt;td&gt;enable the radios hidden frequency calibration menu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_CTCSS_TAIL_PHASE_SHIFT&lt;/td&gt; &#xA;   &lt;td&gt;standard CTCSS tail phase shift rather than QS&#39;s own 55Hz tone method&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_BOOT_BEEPS&lt;/td&gt; &#xA;   &lt;td&gt;gives user audio feedback on volume knob position at boot-up&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_SHOW_CHARGE_LEVEL&lt;/td&gt; &#xA;   &lt;td&gt;show the charge level when the radio is on charge&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_REVERSE_BAT_SYMBOL&lt;/td&gt; &#xA;   &lt;td&gt;mirror the battery symbol on the status bar (+ pole on the right)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_NO_CODE_SCAN_TIMEOUT&lt;/td&gt; &#xA;   &lt;td&gt;disable 32-sec CTCSS/DCS scan timeout (press exit butt instead of time-out to end scan)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_AM_FIX&lt;/td&gt; &#xA;   &lt;td&gt;dynamically adjust the front end gains when in AM mode to help prevent AM demodulator saturation, ignore the on-screen RSSI level (for now)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_AM_FIX_SHOW_DATA&lt;/td&gt; &#xA;   &lt;td&gt;show debug data for the AM fix&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_SQUELCH_MORE_SENSITIVE&lt;/td&gt; &#xA;   &lt;td&gt;make squelch levels a little bit more sensitive - I plan to let user adjust the values themselves&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_FASTER_CHANNEL_SCAN&lt;/td&gt; &#xA;   &lt;td&gt;increases the channel scan speed, but the squelch is also made more twitchy&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_RSSI_BAR&lt;/td&gt; &#xA;   &lt;td&gt;enable a dBm/Sn RSSI bar graph level in place of the little antenna symbols&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_AUDIO_BAR&lt;/td&gt; &#xA;   &lt;td&gt;experimental, display an audio bar level when TX&#39;ing&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_COPY_CHAN_TO_VFO&lt;/td&gt; &#xA;   &lt;td&gt;copy current channel settings into frequency mode. Long press &lt;code&gt;1 BAND&lt;/code&gt; when in channel mode&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_SPECTRUM&lt;/td&gt; &#xA;   &lt;td&gt;fagci spectrum analyzer, activated with &lt;code&gt;F&lt;/code&gt; + &lt;code&gt;5 NOAA&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_REDUCE_LOW_MID_TX_POWER&lt;/td&gt; &#xA;   &lt;td&gt;makes medium and low power settings even lower&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_BYP_RAW_DEMODULATORS&lt;/td&gt; &#xA;   &lt;td&gt;additional BYP (bypass?) and RAW demodulation options, proved not to be very useful, but it is there if you want to experiment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_BLMIN_TMP_OFF&lt;/td&gt; &#xA;   &lt;td&gt;additional function for configurable buttons that toggles &lt;code&gt;BLMin&lt;/code&gt; on and off wihout saving it to the EEPROM&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_SCAN_RANGES&lt;/td&gt; &#xA;   &lt;td&gt;scan range mode for frequency scanning, see wiki for instructions (radio operation -&amp;gt; frequency scanning)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🧰 &lt;strong&gt;DEBUGGING&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_AM_FIX_SHOW_DATA&lt;/td&gt; &#xA;   &lt;td&gt;displays settings used by AM-fix when AM transmission is received&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_AGC_SHOW_DATA&lt;/td&gt; &#xA;   &lt;td&gt;displays AGC settings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_UART_RW_BK_REGS&lt;/td&gt; &#xA;   &lt;td&gt;adds 2 extra commands that allow to read and write BK4819 registers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🧰 &lt;strong&gt;COMPILER/LINKER OPTIONS&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_CLANG&lt;/td&gt; &#xA;   &lt;td&gt;**experimental, builds with clang instead of gcc (LTO will be disabled if you enable this)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_SWD&lt;/td&gt; &#xA;   &lt;td&gt;only needed if using CPU&#39;s SWD port (debugging/programming)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_OVERLAY&lt;/td&gt; &#xA;   &lt;td&gt;cpu FLASH stuff, not needed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ENABLE_LTO&lt;/td&gt; &#xA;   &lt;td&gt;reduces size of compiled firmware but might break EEPROM reads (OVERLAY will be disabled if you enable this)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Compiler&lt;/h2&gt; &#xA;&lt;p&gt;arm-none-eabi GCC version 10.3.1 is recommended, which is the current version on Ubuntu 22.04.03 LTS. Other versions may generate a flash file that is too big. You can get an appropriate version from: &lt;a href=&#34;https://developer.arm.com/downloads/-/gnu-rm&#34;&gt;https://developer.arm.com/downloads/-/gnu-rm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;clang may be used but isn&#39;t fully supported. Resulting binaries may also be bigger. You can get it from: &lt;a href=&#34;https://releases.llvm.org/download.html&#34;&gt;https://releases.llvm.org/download.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;h3&gt;Github Codespace build method&lt;/h3&gt; &#xA;&lt;p&gt;This is the least demanding option as you don&#39;t have to install enything on your computer. All you need is Github account.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &lt;a href=&#34;https://github.com/egzumer/uv-k5-firmware-custom&#34;&gt;https://github.com/egzumer/uv-k5-firmware-custom&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click green &lt;code&gt;Code&lt;/code&gt; button&lt;/li&gt; &#xA; &lt;li&gt;Change tab from &lt;code&gt;Local&lt;/code&gt; to &lt;code&gt;Codespace&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click green &lt;code&gt;Create codespace on main&lt;/code&gt; button&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/phdlee/uvk5cec/main/images/codespace1.png&#34; width=&#34;700&#34;&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Open &lt;code&gt;Makefile&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Edit build options, save &lt;code&gt;Makefile&lt;/code&gt; changes&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./compile-with-docker.sh&lt;/code&gt; in terminal window&lt;/li&gt; &#xA; &lt;li&gt;Open folder &lt;code&gt;compiled-firmware&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Right click &lt;code&gt;firmware.packed.bin&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;Download&lt;/code&gt;, now you should have a firmware on your computer that you can proceed to flash on your radio. You can use &lt;a href=&#34;https://egzumer.github.io/uvtools&#34;&gt;online flasher&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/phdlee/uvk5cec/main/images/codespace2.png&#34; width=&#34;700&#34;&gt; &#xA;&lt;h3&gt;Docker build method&lt;/h3&gt; &#xA;&lt;p&gt;If you have docker installed you can use &lt;a href=&#34;https://raw.githubusercontent.com/phdlee/uvk5cec/main/compile-with-docker.bat&#34;&gt;compile-with-docker.bat&lt;/a&gt; (Windows) or &lt;a href=&#34;https://raw.githubusercontent.com/phdlee/uvk5cec/main/compile-with-docker.sh&#34;&gt;compile-with-docker.sh&lt;/a&gt; (Linux/Mac), the output files are created in &lt;code&gt;compiled-firmware&lt;/code&gt; folder. This method gives significantly smaller binaries, I&#39;ve seen differences up to 1kb, so it can fit more functionalities this way. The challenge can be (or not) installing docker itself.&lt;/p&gt; &#xA;&lt;h3&gt;Windows environment build method&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open windows command line and run: &lt;pre&gt;&lt;code&gt;winget install -e -h git.git Python.Python.3.8 GnuWin32.Make&#xA;winget install -e -h Arm.GnuArmEmbeddedToolchain -v &#34;10 2021.10&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Close command line, open a new one and run: &lt;pre&gt;&lt;code&gt;pip install --user --upgrade pip&#xA;pip install crcmod&#xA;mkdir c:\projects &amp;amp; cd /D c:/projects&#xA;git clone https://github.com/egzumer/uv-k5-firmware-custom.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;From now on you can build the firmware by going to &lt;code&gt;c:\projects\uv-k5-firmware-custom&lt;/code&gt; and running &lt;code&gt;win_make.bat&lt;/code&gt; or by running a command line: &lt;pre&gt;&lt;code&gt;cd /D c:\projects\uv-k5-firmware-custom&#xA;win_make.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;To reset the repository and pull new changes run (!!! it will delete all your changes !!!): &lt;pre&gt;&lt;code&gt;cd /D c:\projects\uv-k5-firmware-custom&#xA;git reset --hard &amp;amp; git clean -fd &amp;amp; git pull&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;I&#39;ve left some notes in the win_make.bat file to maybe help with stuff.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Many thanks to various people on Telegram for putting up with me during this effort and helping:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OneOfEleven&#34;&gt;OneOfEleven&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/DualTachyon&#34;&gt;DualTachyon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fagci&#34;&gt;Mikhail&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Tunas1337&#34;&gt;Andrej&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/manujedi&#34;&gt;Manuel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;@wagner&lt;/li&gt; &#xA; &lt;li&gt;@Lohtse Shar&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/spm81&#34;&gt;@Matoz&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;@Davide&lt;/li&gt; &#xA; &lt;li&gt;@Ismo OH2FTG&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OneOfEleven&#34;&gt;OneOfEleven&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;@d1ced95&lt;/li&gt; &#xA; &lt;li&gt;and others I forget&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other sources of information&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ludwich66/Quansheng_UV-K5_Wiki/wiki&#34;&gt;ludwich66 - Quansheng UV-K5 Wiki&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/amnemonic/Quansheng_UV-K5_Firmware&#34;&gt;amnemonic - tools and sources of information&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2023 Dual Tachyon &lt;a href=&#34;https://github.com/DualTachyon&#34;&gt;https://github.com/DualTachyon&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example changes/updates&lt;/h2&gt; &#xA;&lt;p float=&#34;left&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/phdlee/uvk5cec/main/images/image1.png&#34; width=&#34;300&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/phdlee/uvk5cec/main/images/image2.png&#34; width=&#34;300&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/phdlee/uvk5cec/main/images/image3.png&#34; width=&#34;300&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Video showing the AM fix working ..&lt;/p&gt; &#xA;&lt;p&gt;&#xA; &lt;video src=&#34;/images/AM_fix.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt; &#xA;&lt;p&gt;&#xA; &lt;video src=&#34;https://github.com/OneOfEleven/uv-k5-firmware-custom/assets/51590168/2a3a9cdc-97da-4966-bf0d-1ce6ad09779c&#34;&gt;&lt;/video&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wendy512/iec61850</title>
    <updated>2024-03-24T01:27:55Z</updated>
    <id>tag:github.com,2024-03-24:/wendy512/iec61850</id>
    <link href="https://github.com/wendy512/iec61850" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GoLang IEC61850 library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;iec61850&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache--2.0-green.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/wendy512/iec61850/master/README_zh_CN.md&#34;&gt;中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;cgo version of IEC61850 library, reference &lt;a href=&#34;https://github.com/mz-automation/libiec61850&#34;&gt;libiec61850&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;iec61850 is an open source (Apache-2.0 license) implementation of the IEC 61850 client and server library that implements the MMS, GOOSE and SV protocols. It can be used to implement IEC 61850 compliant clients and PCs on embedded systems and PCs running Linux, Windows Server application. This project relies on and refers to &lt;a href=&#34;https://github.com/mz-automation/libiec61850&#34;&gt;libiec61850&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;The library support the following IEC 61850 protocol features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MMS client/server, GOOSE (IEC 61850-8-1)&lt;/li&gt; &#xA; &lt;li&gt;Sampled Values (SV - IEC 61850-9-2)&lt;/li&gt; &#xA; &lt;li&gt;Support for buffered and unbuffered reports&lt;/li&gt; &#xA; &lt;li&gt;Online report control block configuration&lt;/li&gt; &#xA; &lt;li&gt;Data access service (get data, set data)&lt;/li&gt; &#xA; &lt;li&gt;online data model discovery and browsing&lt;/li&gt; &#xA; &lt;li&gt;all data set services (get values, set values, browse)&lt;/li&gt; &#xA; &lt;li&gt;dynamic data set services (create and delete)&lt;/li&gt; &#xA; &lt;li&gt;log service ** flexible API to connect custom data bases ** comes with sqlite implementation&lt;/li&gt; &#xA; &lt;li&gt;MMS file services (browse, get file, set file, delete/rename file) ** required to download COMTRADE files&lt;/li&gt; &#xA; &lt;li&gt;Setting group handling&lt;/li&gt; &#xA; &lt;li&gt;Support for service tracking&lt;/li&gt; &#xA; &lt;li&gt;GOOSE and SV control block handling&lt;/li&gt; &#xA; &lt;li&gt;TLS support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;go get -u github.com/wendy512/iec61850&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wendy512/iec61850/master/test/client_test.go&#34;&gt;Client reads and writes values&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wendy512/iec61850/master/test/client_control_test.go&#34;&gt;Client control&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wendy512/iec61850/master/test/scl_test.go&#34;&gt;Client reads icd file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wendy512/iec61850/master/test/server_test.go&#34;&gt;Create server&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;iec61850 is based on the &lt;a href=&#34;https://raw.githubusercontent.com/wendy512/iec61850/master/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt; agreement, and iec61850 relies on some third-party components whose open source agreement is also Apache License 2.0.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Email：&lt;a href=&#34;mailto:taowenwuit@gmail.com&#34;&gt;taowenwuit@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>