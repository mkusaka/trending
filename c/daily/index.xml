<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-24T01:32:48Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kubeshark/kubeshark</title>
    <updated>2022-11-24T01:32:48Z</updated>
    <id>tag:github.com,2022-11-24:/kubeshark/kubeshark</id>
    <link href="https://github.com/kubeshark/kubeshark" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The API traffic viewer for Kubernetes providing deep visibility into all API traffic and payloads going in, out and across containers and pods inside a Kubernetes cluster. Think TCPDump and Wireshark re-invented for Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/kubeshark/kubeshark/master/assets/kubeshark-logo.svg?sanitize=true&#34; alt=&#34;Kubeshark: Traffic viewer for Kubernetes.&#34; height=&#34;128px&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/kubeshark/kubeshark/raw/main/LICENSE&#34;&gt; &lt;img alt=&#34;GitHub License&#34; src=&#34;https://img.shields.io/github/license/kubeshark/kubeshark?logo=GitHub&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/kubeshark/kubeshark/releases/latest&#34;&gt; &lt;img alt=&#34;GitHub Latest Release&#34; src=&#34;https://img.shields.io/github/v/release/kubeshark/kubeshark?logo=GitHub&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/kubeshark/kubeshark&#34;&gt; &lt;img alt=&#34;Docker pulls&#34; src=&#34;https://img.shields.io/docker/pulls/kubeshark/kubeshark?color=%23099cec&amp;amp;logo=Docker&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/kubeshark/kubeshark&#34;&gt; &lt;img alt=&#34;Image size&#34; src=&#34;https://img.shields.io/docker/image-size/kubeshark/kubeshark/latest?logo=Docker&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/WkvRGMUcx7&#34;&gt; &lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/1042559155224973352?logo=Discord&amp;amp;style=flat-square&amp;amp;label=discord&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/kubeshark/shared_invite/zt-1k3sybpq9-uAhFkuPJiJftKniqrGHGhg&#34;&gt; &lt;img alt=&#34;Slack&#34; src=&#34;https://img.shields.io/badge/slack-join_chat-green?logo=Slack&amp;amp;style=flat-square&amp;amp;label=slack&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt; Mizu (by UP9) is now Kubeshark, read more about it &lt;a href=&#34;https://www.kubeshark.co/mizu-is-now-kubeshark&#34;&gt;here&lt;/a&gt;. &lt;/p&gt; &#xA;&lt;p&gt;Kubeshark, the API Traffic Viewer for kubernetes, provides deep visibility and monitoring of all API traffic and payloads going in, out and across containers and pods inside a Kubernetes cluster.&lt;/p&gt; &#xA;&lt;p&gt;Think of a combination of Chrome Dev Tools, TCPDump and Wireshark, re-invented for Kubernetes.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kubeshark/kubeshark/master/assets/kubeshark-ui.png&#34; alt=&#34;Simple UI&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Kubeshark uses a ~45MB pre-compiled executable binary to communicate with the Kubernetes API. We recommend downloading the &lt;code&gt;kubeshark&lt;/code&gt; CLI by using one of these options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Choose the right binary, download and use directly from &lt;a href=&#34;https://github.com/kubeshark/kubeshark/releases/latest&#34;&gt;the latest stable release&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the shell script below &lt;span&gt;üëá&lt;/span&gt; to automatically download the right binary for your operating system and CPU architecture:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sh &amp;lt;(curl -Ls https://kubeshark.co/install)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compile it from source using &lt;code&gt;make cli&lt;/code&gt; command.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Run&lt;/h2&gt; &#xA;&lt;p&gt;Use the &lt;code&gt;kubeshark&lt;/code&gt; CLI to capture and view streaming API traffic in real time.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;kubeshark tap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Troubleshooting Installation&lt;/h3&gt; &#xA;&lt;p&gt;If something doesn&#39;t work or simply to play it safe prior to installing;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure you have access to &lt;a href=&#34;https://hub.docker.com/&#34;&gt;https://hub.docker.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure &lt;code&gt;kubeshark&lt;/code&gt; executable in your &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Select Pods&lt;/h3&gt; &#xA;&lt;h4&gt;Monitoring a Specific Pod:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;kubeshark tap catalogue-b87b45784-sxc8q&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Monitoring a Set of Pods Using Regex:&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;kubeshark tap &#34;(catalo*|front-end*)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Specify the Namespace&lt;/h3&gt; &#xA;&lt;p&gt;By default, Kubeshark is deployed into the &lt;code&gt;default&lt;/code&gt; namespace. To specify a different namespace:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubeshark tap -n sock-shop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Specify All Namespaces&lt;/h3&gt; &#xA;&lt;p&gt;The default deployment strategy of Kubeshark waits for the new pods to be created. To simply deploy to all existing namespaces run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubeshark tap -A&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Visit our documentation website: &lt;a href=&#34;https://docs.kubeshark.co&#34;&gt;docs.kubeshark.co&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The documentation resources are open-source and can be found on GitHub: &lt;a href=&#34;https://github.com/kubeshark/docs&#34;&gt;kubeshark/docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We ‚ù§Ô∏è pull requests! See &lt;a href=&#34;https://raw.githubusercontent.com/kubeshark/kubeshark/master/docs/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for the contribution guide.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project is for everyone. We ask that our users and contributors take a few minutes to review our &lt;a href=&#34;https://raw.githubusercontent.com/kubeshark/kubeshark/master/docs/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>koekeishiya/skhd</title>
    <updated>2022-11-24T01:32:48Z</updated>
    <id>tag:github.com,2022-11-24:/koekeishiya/skhd</id>
    <link href="https://github.com/koekeishiya/skhd" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple hotkey daemon for macOS&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/koekeishiya/skhd&#34;&gt;&lt;img src=&#34;https://travis-ci.org/koekeishiya/skhd.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;skhd&lt;/strong&gt; is a simple hotkey daemon for macOS that focuses on responsiveness and performance. Hotkeys are defined in a text file through a simple DSL. &lt;strong&gt;skhd&lt;/strong&gt; is able to hotload its config file, meaning that hotkeys can be edited and updated live while &lt;strong&gt;skhd&lt;/strong&gt; is running.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;skhd&lt;/strong&gt; uses a pid-file to make sure that only one instance is running at any moment in time. This also allows for the ability to trigger a manual reload of the config file by invoking &lt;code&gt;skhd --reload&lt;/code&gt; at any time while an instance of &lt;strong&gt;skhd&lt;/strong&gt; is running. The pid-file is saved as &lt;code&gt;/tmp/skhd_$USER.pid&lt;/code&gt; and so the user that is running &lt;strong&gt;skhd&lt;/strong&gt; must have write permission to said path.&lt;/p&gt; &#xA;&lt;p&gt;list of features&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;feature&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;skhd&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;hotload config file&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;[x]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;hotkey passthrough&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;[x]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;modal hotkey-system&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;[x]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;application specific hotkey&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;[x]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;blacklist applications&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;[x]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;use media-keys as hotkey&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;[x]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;synthesize a key-press&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;[x]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;p&gt;The first time &lt;strong&gt;skhd&lt;/strong&gt; is ran, it will request access to the accessibility API.&lt;/p&gt; &#xA;&lt;p&gt;After access has been granted, the application must be restarted.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Secure Keyboard Entry&lt;/em&gt; must be disabled for &lt;strong&gt;skhd&lt;/strong&gt; to receive key-events.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Homebrew&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;p&gt;Requires xcode-8 command-line tools.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  brew install koekeishiya/formulae/skhd&#xA;  brew services start skhd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Source&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;p&gt;Requires xcode-8 command-line tools.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  git clone https://github.com/koekeishiya/skhd&#xA;  make install      # release version&#xA;  make              # debug version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;-V | --verbose: Output debug information&#xA;    skhd -V&#xA;&#xA;-P | --profile: Output profiling information&#xA;    skhd -P&#xA;&#xA;-v | --version: Print version number to stdout&#xA;    skhd -v&#xA;&#xA;-c | --config: Specify location of config file&#xA;    skhd -c ~/.skhdrc&#xA;&#xA;-o | --observe: Output keycode and modifiers of event. Ctrl+C to quit&#xA;    skhd -o&#xA;&#xA;-r | --reload: Signal a running instance of skhd to reload its config file&#xA;    skhd -r&#xA;&#xA;-h | --no-hotload: Disable system for hotloading config file&#xA;    skhd -h&#xA;&#xA;-k | --key: Synthesize a keypress (same syntax as when defining a hotkey)&#xA;    skhd -k &#34;shift + alt - 7&#34;&#xA;&#xA;-t | --text: Synthesize a line of text&#xA;    skhd -t &#34;hello, world„Ç∑&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;The default configuration file is located at one of the following places (in order):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;$XDG_CONFIG_HOME/skhd/skhdrc&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$HOME/.config/skhd/skhdrc&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;$HOME/.skhdrc&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A different location can be specified with the &lt;em&gt;--config | -c&lt;/em&gt; argument.&lt;/p&gt; &#xA;&lt;p&gt;A sample config is available &lt;a href=&#34;https://github.com/koekeishiya/skhd/raw/master/examples/skhdrc&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A list of all built-in modifier and literal keywords can be found &lt;a href=&#34;https://github.com/koekeishiya/skhd/issues/1&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A hotkey is written according to the following rules:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;hotkey       = &amp;lt;mode&amp;gt; &#39;&amp;lt;&#39; &amp;lt;action&amp;gt; | &amp;lt;action&amp;gt;&#xA;&#xA;mode         = &#39;name of mode&#39; | &amp;lt;mode&amp;gt; &#39;,&#39; &amp;lt;mode&amp;gt;&#xA;&#xA;action       = &amp;lt;keysym&amp;gt; &#39;[&#39; &amp;lt;proc_map_lst&amp;gt; &#39;]&#39; | &amp;lt;keysym&amp;gt; &#39;-&amp;gt;&#39; &#39;[&#39; &amp;lt;proc_map_lst&amp;gt; &#39;]&#39;&#xA;               &amp;lt;keysym&amp;gt; &#39;:&#39; &amp;lt;command&amp;gt;          | &amp;lt;keysym&amp;gt; &#39;-&amp;gt;&#39; &#39;:&#39; &amp;lt;command&amp;gt;&#xA;               &amp;lt;keysym&amp;gt; &#39;;&#39; &amp;lt;mode&amp;gt;             | &amp;lt;keysym&amp;gt; &#39;-&amp;gt;&#39; &#39;;&#39; &amp;lt;mode&amp;gt;&#xA;&#xA;keysym       = &amp;lt;mod&amp;gt; &#39;-&#39; &amp;lt;key&amp;gt; | &amp;lt;key&amp;gt;&#xA;&#xA;mod          = &#39;modifier keyword&#39; | &amp;lt;mod&amp;gt; &#39;+&#39; &amp;lt;mod&amp;gt;&#xA;&#xA;key          = &amp;lt;literal&amp;gt; | &amp;lt;keycode&amp;gt;&#xA;&#xA;literal      = &#39;single letter or built-in keyword&#39;&#xA;&#xA;keycode      = &#39;apple keyboard kVK_&amp;lt;Key&amp;gt; values (0x3C)&#39;&#xA;&#xA;proc_map_lst = * &amp;lt;proc_map&amp;gt;&#xA;&#xA;proc_map     = &amp;lt;string&amp;gt; &#39;:&#39; &amp;lt;command&amp;gt; | &amp;lt;string&amp;gt;     &#39;~&#39; |&#xA;               &#39;*&#39;      &#39;:&#39; &amp;lt;command&amp;gt; | &#39;*&#39;          &#39;~&#39;&#xA;&#xA;string       = &#39;&#34;&#39; &#39;sequence of characters&#39; &#39;&#34;&#39;&#xA;&#xA;command      = command is executed through &#39;$SHELL -c&#39; and&#xA;               follows valid shell syntax. if the $SHELL environment&#xA;               variable is not set, it will default to &#39;/bin/bash&#39;.&#xA;               when bash is used, the &#39;;&#39; delimeter can be specified&#xA;               to chain commands.&#xA;&#xA;               to allow a command to extend into multiple lines,&#xA;               prepend &#39;\&#39; at the end of the previous line.&#xA;&#xA;               an EOL character signifies the end of the bind.&#xA;&#xA;-&amp;gt;           = keypress is not consumed by skhd&#xA;&#xA;*            = matches every application not specified in &amp;lt;proc_map_lst&amp;gt;&#xA;&#xA;~            = application is unbound and keypress is forwarded per usual, when specified in a &amp;lt;proc_map&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A mode is declared according to the following rules:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;mode_decl = &#39;::&#39; &amp;lt;name&amp;gt; &#39;@&#39; &#39;:&#39; &amp;lt;command&amp;gt; | &#39;::&#39; &amp;lt;name&amp;gt; &#39;:&#39; &amp;lt;command&amp;gt; |&#xA;            &#39;::&#39; &amp;lt;name&amp;gt; &#39;@&#39;               | &#39;::&#39; &amp;lt;name&amp;gt;&#xA;&#xA;name      = desired name for this mode,&#xA;&#xA;@         = capture keypresses regardless of being bound to an action&#xA;&#xA;command  = command is executed through &#39;$SHELL -c&#39; and&#xA;           follows valid shell syntax. if the $SHELL environment&#xA;           variable is not set, it will default to &#39;/bin/bash&#39;.&#xA;           when bash is used, the &#39;;&#39; delimeter can be specified&#xA;           to chain commands.&#xA;&#xA;           to allow a command to extend into multiple lines,&#xA;           prepend &#39;\&#39; at the end of the previous line.&#xA;&#xA;           an EOL character signifies the end of the bind.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;General options that configure the behaviour of &lt;strong&gt;skhd&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# specify a file that should be included as an additional config-file.&#xA;# treated as an absolutepath if the filename begins with &#39;/&#39; otherwise&#xA;# the file is relative to the path of the config-file it was loaded from.&#xA;&#xA;.load &#34;/Users/Koe/.config/partial_skhdrc&#34;&#xA;.load &#34;partial_skhdrc&#34;&#xA;&#xA;# prevents skhd from monitoring events for listed processes.&#xA;&#xA;.blacklist [&#xA;    &#34;terminal&#34;&#xA;    &#34;qutebrowser&#34;&#xA;    &#34;kitty&#34;&#xA;    &#34;google chrome&#34;&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>contiki-ng/contiki-ng</title>
    <updated>2022-11-24T01:32:48Z</updated>
    <id>tag:github.com,2022-11-24:/contiki-ng/contiki-ng</id>
    <link href="https://github.com/contiki-ng/contiki-ng" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Contiki-NG: The OS for Next Generation IoT Devices&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://github.com/contiki-ng/contiki-ng.github.io/raw/master/images/logo/Contiki_logo_2RGB.png&#34; alt=&#34;Logo&#34; width=&#34;256&#34;&gt; &#xA;&lt;h1&gt;Contiki-NG: The OS for Next Generation IoT Devices&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/contiki-ng/contiki-ng/actions&#34;&gt;&lt;img src=&#34;https://github.com/contiki-ng/contiki-ng/workflows/CI/badge.svg?branch=develop&#34; alt=&#34;Github Actions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://contiki-ng.readthedocs.io/en/master/?badge=master&#34;&gt;&lt;img src=&#34;https://readthedocs.org/projects/contiki-ng/badge/?version=master&#34; alt=&#34;Documentation Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/contiki-ng/contiki-ng/raw/master/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-3--clause%20bsd-brightgreen.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/contiki-ng/contiki-ng/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/contiki-ng/contiki-ng.svg?sanitize=true&#34; alt=&#34;Latest release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/contiki-ng/contiki-ng/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release-date/contiki-ng/contiki-ng.svg?sanitize=true&#34; alt=&#34;GitHub Release Date&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/contiki-ng/contiki-ng/commit/HEAD&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/contiki-ng/contiki-ng.svg?sanitize=true&#34; alt=&#34;Last commit&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/contiki-ng&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Stack%20Overflow%20tag-Contiki--NG-blue?logo=stackoverflow&#34; alt=&#34;Stack Overflow Tag&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/contiki-ng&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitter-Contiki--NG-blue?logo=gitter&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/contiki_ng&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Twitter-%40contiki__ng-blue?logo=twitter&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Contiki-NG is an open-source, cross-platform operating system for Next-Generation IoT devices. It focuses on dependable (secure and reliable) low-power communication and standard protocols, such as IPv6/6LoWPAN, 6TiSCH, RPL, and CoAP. Contiki-NG comes with extensive documentation, tutorials, a roadmap, release cycle, and well-defined development flow for smooth integration of community contributions.&lt;/p&gt; &#xA;&lt;p&gt;Unless explicitly stated otherwise, Contiki-NG sources are distributed under the terms of the &lt;a href=&#34;https://raw.githubusercontent.com/contiki-ng/contiki-ng/develop/LICENSE.md&#34;&gt;3-clause BSD license&lt;/a&gt;. This license gives everyone the right to use and distribute the code, either in binary or source code format, as long as the copyright license is retained in the source code.&lt;/p&gt; &#xA;&lt;p&gt;Contiki-NG started as a fork of the Contiki OS and retains some of its original features.&lt;/p&gt; &#xA;&lt;p&gt;Find out more:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GitHub repository: &lt;a href=&#34;https://github.com/contiki-ng/contiki-ng&#34;&gt;https://github.com/contiki-ng/contiki-ng&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Documentation: &lt;a href=&#34;https://github.com/contiki-ng/contiki-ng/wiki&#34;&gt;https://github.com/contiki-ng/contiki-ng/wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;List of releases and changes: &lt;a href=&#34;https://github.com/contiki-ng/contiki-ng/releases&#34;&gt;https://github.com/contiki-ng/contiki-ng/releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Web site: &lt;a href=&#34;http://contiki-ng.org&#34;&gt;http://contiki-ng.org&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Engage with the community:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Discussions on GitHub: &lt;a href=&#34;https://github.com/contiki-ng/contiki-ng/discussions&#34;&gt;https://github.com/contiki-ng/contiki-ng/discussions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Contiki-NG tag on Stack Overflow: &lt;a href=&#34;https://stackoverflow.com/questions/tagged/contiki-ng&#34;&gt;https://stackoverflow.com/questions/tagged/contiki-ng&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gitter: &lt;a href=&#34;https://gitter.im/contiki-ng&#34;&gt;https://gitter.im/contiki-ng&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter: &lt;a href=&#34;https://twitter.com/contiki_ng&#34;&gt;https://twitter.com/contiki_ng&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>