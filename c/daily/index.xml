<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-20T01:31:30Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Xinyuan-LilyGO/T-Display-S3</title>
    <updated>2023-02-20T01:31:30Z</updated>
    <id>tag:github.com,2023-02-20:/Xinyuan-LilyGO/T-Display-S3</id>
    <link href="https://github.com/Xinyuan-LilyGO/T-Display-S3" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; ðŸŒŸT-Display-S3ðŸŒŸ&lt;/h1&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;T-Display-S3 is a ESP32-S3 development board. It is equipped with a color 1.9&#34; LCD screen and two programmable buttons. Communication using I8080 interface. Retains the same layout design as T-Display. You can directly use ESP32S3 for USB communication or programming.&lt;/p&gt; &#xA;&lt;h2&gt;Pinout&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Xinyuan-LilyGO/T-Display-S3/main/image/T-DISPLAY-S3.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Where to buy&lt;/h2&gt; &#xA;&lt;p&gt;T-Display-S3 is available from: &lt;a href=&#34;https://www.lilygo.cc/products/t-display-s3&#34;&gt;LILYGO&lt;/a&gt;, &lt;a href=&#34;https://www.amazon.com/dp/B0B7X5RVTH?ref=myi_title_dp&#34;&gt;Amazon&lt;/a&gt; and &lt;a href=&#34;https://www.aliexpress.com/item/3256804310228562.html&#34;&gt;Aliexpress&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;The board uses USB as the JTAG upload port. When printing serial port information on USB, CDC_ON_BOOT configuration needs to be turned on. If the port cannot be found when uploading the program or the USB has been used for other functions, the port does not appear. Please enter the upload mode manually.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Press and hold the BOOT button when the power is off, the button is located behind the RST button.&lt;/li&gt; &#xA; &lt;li&gt;When the USB is connected, first press and hold the BOOT button, then click reset and then release the BOOT button&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Arduino&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;In Arduino Preferences, on the Settings tab, enter the &lt;code&gt;https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json&lt;/code&gt; URL in the &lt;code&gt;Additional boards manager URLs&lt;/code&gt; input box.&lt;/li&gt; &#xA; &lt;li&gt;Click OK and the software will install.&lt;/li&gt; &#xA; &lt;li&gt;Search for ESP32 in Tools â†’ Board Manager and install ESP32-Arduino SDK (version 2.0.3 or above) &lt;img src=&#34;https://raw.githubusercontent.com/Xinyuan-LilyGO/T-Display-S3/main/image/Arduino_board.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;Copy everything from this repository lib folder to &lt;a href=&#34;https://docs.arduino.cc/software/ide-v1/tutorials/installing-libraries#manual-installation&#34;&gt;Arduino library folder&lt;/a&gt; (e.g. &lt;code&gt;C:\Users\YourName\Documents\Arduino\libraries&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Select the correct settings in the Tools menu as shown below.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Setting&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;USB CDC On Boot&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Enabled&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;CPU Frequency&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;240MHz (WiFi)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Core Debug Level&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;None&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;USB DFU On Boot&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Enabled&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Events Run On&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Core 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Flash Mode&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;QIO 80MHz&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Flash Size&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;16MB (128Mb)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;JTAG Adapter&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Integrated USB JTAG&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Arduino Runs On&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Core 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;USB Firmware MSC On Boot&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Disabled&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Partition Scheme&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Huge APP (3MB No OTA/1MB SPIFFS)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PSRAM&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OPI PSRAM&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;USB Mode&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Hardware CDC and JTAG&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;PlatformIO&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;PlatformIO plug-in installation: click on the extension on the left column â†’ search platformIO â†’ install the first plug-in&lt;/li&gt; &#xA; &lt;li&gt;Click Platforms â†’ Embedded â†’ search Espressif 32 in the input box â†’ select the corresponding firmware installation&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;ESP-IDF&lt;/h3&gt; &#xA;&lt;p&gt;The installation method varies depending on the system, refer to the &lt;a href=&#34;https://docs.espressif.com/projects/esp-idf/en/latest/esp32/get-started/index.html&#34;&gt;official manual&lt;/a&gt; for installation.&lt;/p&gt; &#xA;&lt;h2&gt;Q&amp;amp;A&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Why doesn&#39;t the &lt;a href=&#34;https://github.com/Bodmer/TFT_eSPI&#34;&gt;TFT_eSPI&lt;/a&gt; library display properly?&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Some settings, withing the TFT_eSPI library, need to be modified. A modified library is provided in this repository in the lib folder. Copy it to your &lt;a href=&#34;https://docs.arduino.cc/software/ide-v1/tutorials/installing-libraries#manual-installation&#34;&gt;Arduino library folder&lt;/a&gt;.&lt;/p&gt; &#xA;   &lt;p&gt;Alternatively you must patch your clone of a TFT_eSPI library with &lt;code&gt;Micky_commit.patch&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tips&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Use board as delivered. Connect board to usb to computer without touching anything else. Upload the code. The code will start right after download and run. Unplug the board and connect to usb again. The board will not do anything.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use board as delivered. Push down boot button. While boot button is pushed, connect usb to computer. Release boot button. Upload the code. The code will not start right after download. Nothing will happen. Unplug the board and connect to usb again.The board will now boot the code. Unplug the board from USB to computer and connect to other power source like LiPO battery. Again the board will start the code. The computer is not needed again.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;New code can be loaded to the board by going to step 1 or 2. Both will still work.&lt;/p&gt;</summary>
  </entry>
</feed>