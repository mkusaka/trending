<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-29T01:36:26Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>valinet/ExplorerPatcher</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/valinet/ExplorerPatcher</id>
    <link href="https://github.com/valinet/ExplorerPatcher" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This project aims to enhance the working environment on Windows&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ExplorerPatcher&lt;/h1&gt; &#xA;&lt;p&gt;This project aims to enhance the working environment on Windows.&lt;/p&gt; &#xA;&lt;p&gt;PayPal donations: &lt;a href=&#34;https://www.paypal.com/donate?business=valentingabrielradu%40gmail.com&amp;amp;no_recurring=0&amp;amp;item_name=ExplorerPatcher&amp;amp;currency_code=EUR&#34;&gt;here&lt;/a&gt; or using e-mail address &lt;a href=&#34;mailto:valentingabrielradu@gmail.com&#34;&gt;valentingabrielradu@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/valinet/ExplorerPatcher/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Feature summary&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Choose between Windows 11 or Windows 10 taskbar (with labels support, small icons and lots of customization).&lt;/li&gt; &#xA; &lt;li&gt;Disable Windows 11 context menu and command bar in File Explorer and more.&lt;/li&gt; &#xA; &lt;li&gt;Open Start to All apps by default, choose number of frequent apps to show, display on active monitor and more.&lt;/li&gt; &#xA; &lt;li&gt;Choose between the Windows 11, Windows 10 and Windows NT Alt-Tab window switcher with customization.&lt;/li&gt; &#xA; &lt;li&gt;Lots of quality of life improvements for the shell, like: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Skin tray menus to match Windows style, make them behave like flyouts and center them relative to the icon.&lt;/li&gt; &#xA;   &lt;li&gt;Choose action when left and/or right clicking the network icon.&lt;/li&gt; &#xA;   &lt;li&gt;Revert to the Windows 7 search box in File Explorer, or disable Windows Search altogether.&lt;/li&gt; &#xA;   &lt;li&gt;Disable immersive menus and use mitigations that help you run the real classic theme without glitches.&lt;/li&gt; &#xA;   &lt;li&gt;Learn more about all the functionality offered by this program starting with this article in the wiki, &lt;a href=&#34;https://github.com/valinet/ExplorerPatcher/wiki/All-features&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some features may not be available on Windows 10.&lt;/p&gt; &#xA;&lt;h2&gt;How to?&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the latest version of the &lt;a href=&#34;https://github.com/valinet/ExplorerPatcher/releases/latest/download/ep_setup.exe&#34;&gt;setup program&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run the installer. It will automatically prompt for elevation, after which it will install the necessary files.&lt;/li&gt; &#xA; &lt;li&gt;When done, you will be greeted with the familiar Windows 10 taskbar. To customize the options offered by the program, right click the taskbar and choose &#34;Properties&#34;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;That&#39;s it. It&#39;s that simple.&lt;/p&gt; &#xA;&lt;h2&gt;What next?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Consult the &lt;a href=&#34;https://github.com/valinet/ExplorerPatcher/wiki&#34;&gt;wiki&lt;/a&gt; - this is highly recommended. There you will find information about more advanced tasks, modes of operation and features offered by this patcher.&lt;/li&gt; &#xA; &lt;li&gt;Get familiar with most of the features offered by this patcher &lt;a href=&#34;https://github.com/valinet/ExplorerPatcher/wiki/All-features&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Learn how to manage updates and what to expect from new versions and new Windows builds &lt;a href=&#34;https://github.com/valinet/ExplorerPatcher/wiki/Configure-updates&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Have a question? Consult the &lt;a href=&#34;https://github.com/valinet/ExplorerPatcher/wiki/Frequently-asked-questions&#34;&gt;Frequently Asked Questions&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Some other question? Open a thread in &lt;a href=&#34;https://github.com/valinet/ExplorerPatcher/discussions&#34;&gt;Discussions&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Found a bug, have an issue or a problem with the application? Read &lt;a href=&#34;https://github.com/valinet/ExplorerPatcher/wiki/Reporting-problems&#34;&gt;here&lt;/a&gt; what to do next.&lt;/li&gt; &#xA; &lt;li&gt;I highly encourage you to check out the &lt;a href=&#34;https://github.com/valinet/ExplorerPatcher/tree/master&#34;&gt;source code&lt;/a&gt; and tinker with it. I am open to merging new features, enhancements and fixes; also, I think it provides good insights on topics of interests in this area.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;p&gt;Items marked with &#34;bug&#34; that are still &#34;Open&#34; represent known issues. Active work is undergone regarding an item if it is additionally marked with &#34;investigating&#34;. Help is especially required for items marked with &#34;help wanted&#34;. Consult the list in &lt;a href=&#34;https://github.com/valinet/ExplorerPatcher/issues&#34;&gt;Issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Uninstalling&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use &#34;Programs and Features&#34; in Control Panel, or &#34;Apps and features&#34; in the Settings app or&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;ep_setup.exe /uninstall&lt;/code&gt; or&lt;/li&gt; &#xA; &lt;li&gt;Rename &lt;code&gt;ep_setup.exe&lt;/code&gt; to &lt;code&gt;ep_uninstall.exe&lt;/code&gt; and run that.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Updating&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The program features built-in updates: go to &#34;Properties&#34; - &#34;Updates&#34; to configure, check for and install the latest updates. Learn more &lt;a href=&#34;https://github.com/valinet/ExplorerPatcher/wiki/Configure-updates&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Download the latest version&#39;s setup file and simply run it.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;More information&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/valinet/ExplorerPatcher/wiki/How-does-it-work&#34;&gt;How does this work?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/valinet/ExplorerPatcher/wiki/Antivirus-false-positives&#34;&gt;About antivirus false positives&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/valinet/ExplorerPatcher/wiki/Compiling&#34;&gt;Compiling&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>flipperdevices/flipperzero-firmware</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/flipperdevices/flipperzero-firmware</id>
    <link href="https://github.com/flipperdevices/flipperzero-firmware" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flipper Zero Firmware&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flipper Zero Firmware&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://flipperzero.one/discord&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/740930220399525928.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://habrastorage.org/webt/eo/m0/e4/eom0e4btudte7nrhnyic-laiog0.png&#34; alt=&#34;Show me the code&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Welcome to &lt;a href=&#34;https://flipperzero.one/&#34;&gt;Flipper Zero&lt;/a&gt;&#39;s Firmware repo! Our goal is to create nice and clean code with good documentation, to make it a pleasure for everyone to work with.&lt;/p&gt; &#xA;&lt;h1&gt;Clone the Repository&lt;/h1&gt; &#xA;&lt;p&gt;You should clone with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ git clone --recursive https://github.com/flipperdevices/flipperzero-firmware.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Update firmware&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://update.flipperzero.one/&#34;&gt;Get Latest Firmware from Update Server&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flipper Zero&#39;s firmware consists of two components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Core2 firmware set - proprietary components by ST: FUS + radio stack. FUS is flashed at factory and you should never update it.&lt;/li&gt; &#xA; &lt;li&gt;Core1 Firmware - HAL + OS + Drivers + Applications.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;They both must be flashed in order described.&lt;/p&gt; &#xA;&lt;h2&gt;With STLink&lt;/h2&gt; &#xA;&lt;h3&gt;Core1 Firmware&lt;/h3&gt; &#xA;&lt;p&gt;Prerequisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux / macOS&lt;/li&gt; &#xA; &lt;li&gt;Terminal&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/gnu-rm/downloads&#34;&gt;arm-gcc-none-eabi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;openocd&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;One liner: &lt;code&gt;make flash&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Core2 flashing procedures&lt;/h3&gt; &#xA;&lt;p&gt;Prerequisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux / macOS&lt;/li&gt; &#xA; &lt;li&gt;Terminal&lt;/li&gt; &#xA; &lt;li&gt;STM32_Programmer_CLI (v2.5.0) added to $PATH&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;One liner: &lt;code&gt;make flash_radio&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;With USB DFU&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download latest &lt;a href=&#34;https://update.flipperzero.one&#34;&gt;Firmware&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Reboot Flipper to Bootloader&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Press and hold &lt;code&gt;← Left&lt;/code&gt; + &lt;code&gt;↩ Back&lt;/code&gt; for reset&lt;/li&gt; &#xA; &lt;li&gt;Release &lt;code&gt;↩ Back&lt;/code&gt; and keep holding &lt;code&gt;← Left&lt;/code&gt; until blue LED lights up&lt;/li&gt; &#xA; &lt;li&gt;Release &lt;code&gt;← Left&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- ![Switch to DFU sequence](https://habrastorage.org/webt/uu/c3/g2/uuc3g2n36f2sju19rskcvjzjf6w.png) --&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Run &lt;code&gt;dfu-util -D full.dfu -a 0&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Build with Docker&lt;/h1&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://www.docker.com/get-started&#34;&gt;Docker Engine and Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Prepare the container:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Compile everything&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker-compose exec dev make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check &lt;code&gt;dist/&lt;/code&gt; for build outputs.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;strong&gt;&lt;code&gt;flipper-z-{target}-full-{suffix}.dfu&lt;/code&gt;&lt;/strong&gt; to flash your device.&lt;/p&gt; &#xA;&lt;p&gt;If compilation fails, make sure all submodules are all initialized. Either clone with &lt;code&gt;--recursive&lt;/code&gt; or use &lt;code&gt;git submodule update --init --recursive&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Build on Linux/macOS&lt;/h1&gt; &#xA;&lt;h2&gt;macOS Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;Make sure you have &lt;a href=&#34;https://brew.sh&#34;&gt;brew&lt;/a&gt; and install all the dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew bundle --verbose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Linux Prerequisites&lt;/h2&gt; &#xA;&lt;h3&gt;gcc-arm-none-eabi&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;toolchain=&#34;gcc-arm-none-eabi-10.3-2021.10&#34;&#xA;toolchain_package=&#34;$toolchain-$(uname -m)-linux&#34;&#xA;&#xA;wget -P /opt &#34;https://developer.arm.com/-/media/Files/downloads/gnu-rm/10.3-2021.10/$toolchain_package.tar.bz2&#34;&#xA;&#xA;tar xjf /opt/$toolchain_package.tar.bz2 -C /opt&#xA;rm /opt/$toolchain_package.tar.bz2&#xA;&#xA;for file in /opt/$toolchain/bin/* ; do ln -s &#34;${file}&#34; &#34;/usr/bin/$(basename ${file})&#34; ; done&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Optional dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;openocd (debugging/flashing over SWD)&lt;/li&gt; &#xA; &lt;li&gt;heatshrink (compiling image assets)&lt;/li&gt; &#xA; &lt;li&gt;clang-format (code formatting)&lt;/li&gt; &#xA; &lt;li&gt;dfu-util (flashing over USB DFU)&lt;/li&gt; &#xA; &lt;li&gt;protobuf (compiling proto sources)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, to install them on Debian, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;apt update&#xA;apt install openocd clang-format-13 dfu-util protobuf-compiler&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;heatshrink has to be compiled &lt;a href=&#34;https://github.com/atomicobject/heatshrink&#34;&gt;from sources&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Compile everything&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check &lt;code&gt;dist/&lt;/code&gt; for build outputs.&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;strong&gt;&lt;code&gt;flipper-z-{target}-full-{suffix}.dfu&lt;/code&gt;&lt;/strong&gt; to flash your device.&lt;/p&gt; &#xA;&lt;h2&gt;Flash everything&lt;/h2&gt; &#xA;&lt;p&gt;Connect your device via ST-Link and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;make whole&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Links&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Discord: &lt;a href=&#34;https://flipp.dev/discord&#34;&gt;flipp.dev/discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Website: &lt;a href=&#34;https://flipperzero.one&#34;&gt;flipperzero.one&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kickstarter page: &lt;a href=&#34;https://www.kickstarter.com/projects/flipper-devices/flipper-zero-tamagochi-for-hackers&#34;&gt;kickstarter.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Forum: &lt;a href=&#34;https://forum.flipperzero.one/&#34;&gt;forum.flipperzero.one&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Project structure&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;applications&lt;/code&gt; - Applications and services used in firmware&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;assets&lt;/code&gt; - Assets used by applications and services&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;core&lt;/code&gt; - Furi Core: os level primitives and helpers&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;debug&lt;/code&gt; - Debug tool: GDB-plugins, SVD-file and etc&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker&lt;/code&gt; - Docker image sources (used for firmware build automation)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;documentation&lt;/code&gt; - Documentation generation system configs and input files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firmware&lt;/code&gt; - Firmware source code&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lib&lt;/code&gt; - Our and 3rd party libraries, drivers and etc...&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make&lt;/code&gt; - Make helpers&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;scripts&lt;/code&gt; - Supplementary scripts and python libraries home&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also pay attention to &lt;code&gt;ReadMe.md&lt;/code&gt; files inside of those directories.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ahrm/sioyek</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/ahrm/sioyek</id>
    <link href="https://github.com/ahrm/sioyek" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Sioyek is a PDF viewer designed for reading research papers and technical books.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sioyek&lt;/h1&gt; &#xA;&lt;p&gt;Sioyek is a PDF viewer designed for reading research papers and technical books.&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ahrm/sioyek/main/#install&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ahrm/sioyek/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ahrm/sioyek/main/#feature-video-overview&#34;&gt;Video Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ahrm/sioyek/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ahrm/sioyek/main/#build-instructions&#34;&gt;Build Instructions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ahrm/sioyek/main/#donation&#34;&gt;Donation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;h3&gt;Official packages&lt;/h3&gt; &#xA;&lt;p&gt;There&#39;re installers for Windows, macOS and Linux. See &lt;a href=&#34;https://github.com/ahrm/sioyek/releases&#34;&gt;Releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Third-party packages for Linux&lt;/h3&gt; &#xA;&lt;p&gt;If you prefer to install sioyek with a package manager, you can look at this list. Please note that they are provided by third party packagers. USE AT YOUR OWN RISK! If you&#39;re reporting a bug for a third-party package, please mention which package you&#39;re using.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Distro&lt;/th&gt; &#xA;   &lt;th&gt;Link&lt;/th&gt; &#xA;   &lt;th&gt;Maintainer&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Flathub&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flathub.org/apps/details/com.github.ahrm.sioyek&#34;&gt;sioyek&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://flathub.org/apps/details/com.github.ahrm.sioyek&#34;&gt;@nbenitez&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Arch&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://aur.archlinux.org/packages/sioyek-git/&#34;&gt;AUR Sioyek-git&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/randomn4me&#34;&gt;@randomn4me&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fedora&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://copr.fedorainfracloud.org/coprs/endle/sioyek/&#34;&gt;Copr endle/sioyek&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Endle&#34;&gt;@Endle&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NixOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://search.nixos.org/packages?channel=unstable&amp;amp;show=sioyek&amp;amp;from=0&amp;amp;size=50&amp;amp;sort=relevance&amp;amp;type=packages&amp;amp;query=sioyek&#34;&gt;sioyek&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/podocarp&#34;&gt;@podocarp&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can view the official documentation &lt;a href=&#34;https://sioyek-documentation.readthedocs.io/en/latest/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Feature Video Overview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=yTmCI0Xp5vI&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/yTmCI0Xp5vI/0.jpg&#34; alt=&#34;Sioyek feature overview&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Quick Open&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/6392321/125321111-9b29dc00-e351-11eb-873e-94ea30016a05.mp4&#34;&gt;https://user-images.githubusercontent.com/6392321/125321111-9b29dc00-e351-11eb-873e-94ea30016a05.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can quickly search and open any file you have previously interacted with using sioyek.&lt;/p&gt; &#xA;&lt;h3&gt;Table of Contents&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/6392321/125321313-cf050180-e351-11eb-9275-c2759c684af5.mp4&#34;&gt;https://user-images.githubusercontent.com/6392321/125321313-cf050180-e351-11eb-9275-c2759c684af5.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can search and jump to table of contents entries.&lt;/p&gt; &#xA;&lt;h3&gt;Smart Jump&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/6392321/125321419-e5ab5880-e351-11eb-9688-95374a22774f.mp4&#34;&gt;https://user-images.githubusercontent.com/6392321/125321419-e5ab5880-e351-11eb-9688-95374a22774f.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can jump to any referenced figure or bibliography item &lt;em&gt;even if the PDF file doesn&#39;t provide links&lt;/em&gt;. You can also search the names of bibliography items in google scholar/libgen by middle clicking/shif+middle clicking on their name.&lt;/p&gt; &#xA;&lt;h3&gt;Overview&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/6392321/154683015-0bae4f92-78e2-4141-8446-49dd7c2bd7c9.mp4&#34;&gt;https://user-images.githubusercontent.com/6392321/154683015-0bae4f92-78e2-4141-8446-49dd7c2bd7c9.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can open a quick overview of figures/references/tables/etc. by right clicking on them (Like Smart Jump, this feature works even if the document doesn&#39;t provide links).&lt;/p&gt; &#xA;&lt;h3&gt;Mark&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/6392321/125321811-505c9400-e352-11eb-85e0-ffc3ae5f8cb8.mp4&#34;&gt;https://user-images.githubusercontent.com/6392321/125321811-505c9400-e352-11eb-85e0-ffc3ae5f8cb8.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Sometimes when reading a document you need to go back a few pages (perhaps to view a definition or something) and quickly jump back to where you were. You can achieve this by using marks. Marks are named locations within a PDF file (each mark has a single character name for example &#39;a&#39; or &#39;m&#39;) which you can quickly jump to using their name. In the aforementioned example, before going back to the definition you mark your location and later jump back to the mark by invoking its name. Lower case marks are local to the document and upper case marks are global (this should be very familiar to you if you have used vim).&lt;/p&gt; &#xA;&lt;h3&gt;Bookmarks&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/6392321/125322503-1a6bdf80-e353-11eb-8018-5e8fc43b8d05.mp4&#34;&gt;https://user-images.githubusercontent.com/6392321/125322503-1a6bdf80-e353-11eb-8018-5e8fc43b8d05.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Bookmarks are similar to marks except they are named by a text string and they are all global.&lt;/p&gt; &#xA;&lt;h3&gt;Highlights&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/6392321/130956728-7e0a87fa-4ada-4108-a8fc-9d9d04180f56.mp4&#34;&gt;https://user-images.githubusercontent.com/6392321/130956728-7e0a87fa-4ada-4108-a8fc-9d9d04180f56.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Highlight text using different kinds of highlight, you can search among all the highlights.&lt;/p&gt; &#xA;&lt;h3&gt;Portals (this feature is most useful for users with multiple monitors)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/6392321/125322657-41c2ac80-e353-11eb-985e-8f3ce9808f67.mp4&#34;&gt;https://user-images.githubusercontent.com/6392321/125322657-41c2ac80-e353-11eb-985e-8f3ce9808f67.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Suppose you are reading a paragraph which references a figure which is not very close to the current location. Jumping back and forth between the current paragraph and the figure can be very annoying. Using portals, you can link the paragraph&#39;s location to the figure&#39;s location. Sioyek shows the closest portal destination in a separate window (which is usually placed on a second monitor). This window is automatically updated to show the closest portal destination as the user navigates the document.&lt;/p&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/6392321/125337160-e4832700-e363-11eb-8801-0bee58121c2d.mp4&#34;&gt;https://user-images.githubusercontent.com/6392321/125337160-e4832700-e363-11eb-8801-0bee58121c2d.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can customize all key bindings and some UI elements by editing &lt;code&gt;keys_user.config&lt;/code&gt; and &lt;code&gt;prefs_user.config&lt;/code&gt;. The default configurations are in &lt;code&gt;keys.config&lt;/code&gt; and &lt;code&gt;prefs.config&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build Instructions&lt;/h2&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Qt 5 and make sure &lt;code&gt;qmake&lt;/code&gt; is in &lt;code&gt;PATH&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;code&gt;libharfbuzz&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo apt install libharfbuzz-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Clone the repository and build:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recursive https://github.com/ahrm/sioyek&#xA;cd sioyek&#xA;./build_linux.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Visual Studio (tested on 2019, other relatively recent versions should work too)&lt;/li&gt; &#xA; &lt;li&gt;Install Qt 5 and make sure qmake is in &lt;code&gt;PATH&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Clone the repository and build using 64 bit Visual Studio Developer Command Prompt:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recursive https://github.com/ahrm/sioyek&#xA;cd sioyek&#xA;build_windows.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Mac&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Xcode and Qt 5.&lt;/li&gt; &#xA; &lt;li&gt;Clone the repository and build:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recursive https://github.com/ahrm/sioyek&#xA;cd sioyek&#xA;chmod +x build_mac.sh&#xA;./build_mac.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Donation&lt;/h2&gt; &#xA;&lt;p&gt;If you enjoy sioyek, please consider donating to support its development.&lt;/p&gt; &#xA;&lt;p&gt;Bitcoin (BTC) Address: &lt;code&gt;bc1qexc7wcjq9uetr2vq2wzy7m45y29j0f82uwpn3z&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bitcoinqrcodemaker.com/pay/?type=2&amp;amp;style=bitcoin&amp;amp;address=bc1qexc7wcjq9uetr2vq2wzy7m45y29j0f82uwpn3z&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div style=&#34;width:150px;display:inline-block;&#34;&gt;&#xA; &lt;div&gt;&#xA;  &lt;a href=&#34;https://www.bitcoinqrcodemaker.com/pay/?type=2&amp;amp;style=bitcoin&amp;amp;address=bc1qexc7wcjq9uetr2vq2wzy7m45y29j0f82uwpn3z&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://www.bitcoinqrcodemaker.com/api/?style=bitcoin&amp;amp;address=bc1qexc7wcjq9uetr2vq2wzy7m45y29j0f82uwpn3z&#34; width=&#34;150&#34; height=&#34;150&#34; alt=&#34;Bitcoin QR code donation address&#34; title=&#34;Bitcoin QR code donation address&#34;&gt;&lt;/a&gt;&#xA; &lt;/div&gt;&#xA; &lt;div&gt;&#xA;  &lt;a href=&#34;https://www.bitcoinqrcodemaker.com/pay/?type=2&amp;amp;style=bitcoin&amp;amp;address=bc1qexc7wcjq9uetr2vq2wzy7m45y29j0f82uwpn3z&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://www.bitcoinqrcodemaker.com/donate_button.png&#34; width=&#34;150&#34; height=&#34;36&#34; alt=&#34;Donate button&#34; title=&#34;Donate here&#34;&gt;&lt;/a&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ethereum (ETH) Address: &lt;code&gt;0xf78E20eb68b150301EC895eb44c0Ab3c5A016075&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bitcoinqrcodemaker.com/pay/?type=2&amp;amp;style=ethereum&amp;amp;address=0xf78E20eb68b150301EC895eb44c0Ab3c5A016075&#34; target=&#34;_blank&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div style=&#34;width:150px;display:inline-block;&#34;&gt;&#xA; &lt;div&gt;&#xA;  &lt;a href=&#34;https://www.bitcoinqrcodemaker.com/pay/?type=2&amp;amp;style=ethereum&amp;amp;address=0xf78E20eb68b150301EC895eb44c0Ab3c5A016075&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://www.bitcoinqrcodemaker.com/api/?style=ethereum&amp;amp;address=0xf78E20eb68b150301EC895eb44c0Ab3c5A016075&#34; width=&#34;150&#34; height=&#34;150&#34; alt=&#34;Ethereum QR code donation address&#34; title=&#34;Ethereum QR code donation address&#34;&gt;&lt;/a&gt;&#xA; &lt;/div&gt;&#xA; &lt;div&gt;&#xA;  &lt;a href=&#34;https://www.bitcoinqrcodemaker.com/pay/?type=2&amp;amp;style=ethereum&amp;amp;address=0xf78E20eb68b150301EC895eb44c0Ab3c5A016075&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://www.bitcoinqrcodemaker.com/donate_button.png&#34; width=&#34;150&#34; height=&#34;36&#34; alt=&#34;Donate button&#34; title=&#34;Donate here&#34;&gt;&lt;/a&gt;&#xA; &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zephyrproject-rtos/zephyr</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/zephyrproject-rtos/zephyr</id>
    <link href="https://github.com/zephyrproject-rtos/zephyr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Primary Git Repository for the Zephyr Project. Zephyr is a new generation, scalable, optimized, secure RTOS for multiple hardware architectures.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;.. raw:: html&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.zephyrproject.org&#34;&gt; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zephyrproject-rtos/zephyr/main/doc/_static/images/logo-readme.svg?sanitize=true&#34;&gt; &lt;/p&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/74&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/74/badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zephyrproject-rtos/zephyr/actions/workflows/twister.yaml?query=branch%3Amain&#34;&gt; &lt;img src=&#34;https://github.com/zephyrproject-rtos/zephyr/actions/workflows/twister.yaml/badge.svg?event=push&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Zephyr Project is a scalable real-time operating system (RTOS) supporting multiple hardware architectures, optimized for resource constrained devices, and built with security in mind.&lt;/p&gt; &#xA;&lt;p&gt;The Zephyr OS is based on a small-footprint kernel designed for use on resource-constrained systems: from simple embedded environmental sensors and LED wearables to sophisticated smart watches and IoT wireless gateways.&lt;/p&gt; &#xA;&lt;p&gt;The Zephyr kernel supports multiple architectures, including ARM (Cortex-A, Cortex-R, Cortex-M), Intel x86, ARC, Nios II, Tensilica Xtensa, and RISC-V, SPARC, MIPS, and a large number of &lt;code&gt;supported boards&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;.. below included in doc/introduction/introduction.rst&lt;/p&gt; &#xA;&lt;p&gt;Getting Started&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Welcome to Zephyr! See the &lt;code&gt;Introduction to Zephyr&lt;/code&gt;_ for a high-level overview, and the documentation&#39;s &lt;code&gt;Getting Started Guide&lt;/code&gt;_ to start developing.&lt;/p&gt; &#xA;&lt;p&gt;.. start_include_here&lt;/p&gt; &#xA;&lt;p&gt;Community Support&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Community support is provided via mailing lists and Discord; see the Resources below for details.&lt;/p&gt; &#xA;&lt;p&gt;.. _project-resources:&lt;/p&gt; &#xA;&lt;p&gt;Resources&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Here&#39;s a quick summary of resources to help you find your way around:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Help&lt;/strong&gt;: &lt;code&gt;Asking for Help Tips&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: &lt;a href=&#34;http://docs.zephyrproject.org&#34;&gt;http://docs.zephyrproject.org&lt;/a&gt; (&lt;code&gt;Getting Started Guide&lt;/code&gt;_)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Source Code&lt;/strong&gt;: &lt;a href=&#34;https://github.com/zephyrproject-rtos/zephyr&#34;&gt;https://github.com/zephyrproject-rtos/zephyr&lt;/a&gt; is the main repository; &lt;a href=&#34;https://elixir.bootlin.com/zephyr/latest/source&#34;&gt;https://elixir.bootlin.com/zephyr/latest/source&lt;/a&gt; contains a searchable index&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Releases&lt;/strong&gt;: &lt;a href=&#34;https://github.com/zephyrproject-rtos/zephyr/releases&#34;&gt;https://github.com/zephyrproject-rtos/zephyr/releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Samples and example code&lt;/strong&gt;: see &lt;code&gt;Sample and Demo Code Examples&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mailing Lists&lt;/strong&gt;: &lt;a href=&#34;mailto:users@lists.zephyrproject.org&#34;&gt;users@lists.zephyrproject.org&lt;/a&gt; and &lt;a href=&#34;mailto:devel@lists.zephyrproject.org&#34;&gt;devel@lists.zephyrproject.org&lt;/a&gt; are the main user and developer mailing lists, respectively. You can join the developer&#39;s list and search its archives at &lt;code&gt;Zephyr Development mailing list&lt;/code&gt;&lt;em&gt;. The other &lt;code&gt;Zephyr mailing list subgroups&lt;/code&gt;&lt;/em&gt; have their own archives and sign-up pages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Nightly CI Build Status&lt;/strong&gt;: &lt;a href=&#34;https://lists.zephyrproject.org/g/builds&#34;&gt;https://lists.zephyrproject.org/g/builds&lt;/a&gt; The &lt;a href=&#34;mailto:builds@lists.zephyrproject.org&#34;&gt;builds@lists.zephyrproject.org&lt;/a&gt; mailing list archives the CI nightly build results.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Chat&lt;/strong&gt;: Real-time chat happens in Zephyr&#39;s Discord Server. Use this &lt;code&gt;Discord Invite&lt;/code&gt;_ to register.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Contributing&lt;/strong&gt;: see the &lt;code&gt;Contribution Guide&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Wiki&lt;/strong&gt;: &lt;code&gt;Zephyr GitHub wiki&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Issues&lt;/strong&gt;: &lt;a href=&#34;https://github.com/zephyrproject-rtos/zephyr/issues&#34;&gt;https://github.com/zephyrproject-rtos/zephyr/issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Security Issues&lt;/strong&gt;: Email &lt;a href=&#34;mailto:vulnerabilities@zephyrproject.org&#34;&gt;vulnerabilities@zephyrproject.org&lt;/a&gt; to report security issues; also see our &lt;code&gt;Security&lt;/code&gt;_ documentation. Security issues are tracked separately at &lt;a href=&#34;https://zephyrprojectsec.atlassian.net&#34;&gt;https://zephyrprojectsec.atlassian.net&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Zephyr Project Website&lt;/strong&gt;: &lt;a href=&#34;https://zephyrproject.org&#34;&gt;https://zephyrproject.org&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;.. _Discord Invite: &lt;a href=&#34;https://chat.zephyrproject.org&#34;&gt;https://chat.zephyrproject.org&lt;/a&gt; .. _supported boards: &lt;a href=&#34;http://docs.zephyrproject.org/latest/boards/index.html&#34;&gt;http://docs.zephyrproject.org/latest/boards/index.html&lt;/a&gt; .. _Zephyr Documentation: &lt;a href=&#34;http://docs.zephyrproject.org&#34;&gt;http://docs.zephyrproject.org&lt;/a&gt; .. _Introduction to Zephyr: &lt;a href=&#34;http://docs.zephyrproject.org/latest/introduction/index.html&#34;&gt;http://docs.zephyrproject.org/latest/introduction/index.html&lt;/a&gt; .. _Getting Started Guide: &lt;a href=&#34;http://docs.zephyrproject.org/latest/getting_started/index.html&#34;&gt;http://docs.zephyrproject.org/latest/getting_started/index.html&lt;/a&gt; .. _Contribution Guide: &lt;a href=&#34;http://docs.zephyrproject.org/latest/contribute/index.html&#34;&gt;http://docs.zephyrproject.org/latest/contribute/index.html&lt;/a&gt; .. _Zephyr GitHub wiki: &lt;a href=&#34;https://github.com/zephyrproject-rtos/zephyr/wiki&#34;&gt;https://github.com/zephyrproject-rtos/zephyr/wiki&lt;/a&gt; .. _Zephyr Development mailing list: &lt;a href=&#34;https://lists.zephyrproject.org/g/devel&#34;&gt;https://lists.zephyrproject.org/g/devel&lt;/a&gt; .. _Zephyr mailing list subgroups: &lt;a href=&#34;https://lists.zephyrproject.org/g/main/subgroups&#34;&gt;https://lists.zephyrproject.org/g/main/subgroups&lt;/a&gt; .. _Sample and Demo Code Examples: &lt;a href=&#34;http://docs.zephyrproject.org/latest/samples/index.html&#34;&gt;http://docs.zephyrproject.org/latest/samples/index.html&lt;/a&gt; .. _Security: &lt;a href=&#34;http://docs.zephyrproject.org/latest/security/index.html&#34;&gt;http://docs.zephyrproject.org/latest/security/index.html&lt;/a&gt; .. _Asking for Help Tips: &lt;a href=&#34;https://docs.zephyrproject.org/latest/getting_started/index.html#asking-for-help&#34;&gt;https://docs.zephyrproject.org/latest/getting_started/index.html#asking-for-help&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>torvalds/linux</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/torvalds/linux</id>
    <link href="https://github.com/torvalds/linux" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Linux kernel source tree&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Linux kernel&lt;/h1&gt; &#xA;&lt;p&gt;There are several guides for kernel developers and users. These guides can be rendered in a number of formats, like HTML and PDF. Please read Documentation/admin-guide/README.rst first.&lt;/p&gt; &#xA;&lt;p&gt;In order to build the documentation, use &lt;code&gt;make htmldocs&lt;/code&gt; or &lt;code&gt;make pdfdocs&lt;/code&gt;. The formatted documentation can also be read online at:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://www.kernel.org/doc/html/latest/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are various text files in the Documentation/ subdirectory, several of them using the Restructured Text markup notation.&lt;/p&gt; &#xA;&lt;p&gt;Please read the Documentation/process/changes.rst file, as it contains the requirements for building and running the kernel, and information about the problems which may result by upgrading your kernel.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>yanull/os-guide-cn</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/yanull/os-guide-cn</id>
    <link href="https://github.com/yanull/os-guide-cn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;从零开始制作一个操作系统！---- 操作系统开发指南&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;从零开始制作一个操作系统！&lt;/h1&gt; &#xA;&lt;p&gt;这只是我个人的学习项目，欢迎fork这个仓库。&lt;/p&gt; &#xA;&lt;p&gt;2022年更新，内容有所修改，原始仓库在&lt;a href=&#34;https://github.com/cfenollosa/os-tutorial&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;特点&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;理论很少，不需要很深的理论基础。是的，这是一个很大的特点 - Google 就是你最好的理论导师。&lt;/li&gt; &#xA; &lt;li&gt;教程很简短，你只需要花费少量时间就可以读完。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⚠️ 注意&lt;/h2&gt; &#xA;&lt;p&gt;请自行修改Makefile文件！&lt;/p&gt; &#xA;&lt;h2&gt;📒 备注&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;x86_64-elf-gcc&lt;/code&gt; 需要添加&lt;code&gt;-m32&lt;/code&gt;参数，&lt;code&gt;i386-elf-gcc&lt;/code&gt;已经废弃。&lt;/p&gt; &#xA;&lt;h2&gt;目录&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/tree/main/1.%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87&#34;&gt;1、前期准备&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/raw/main/2.%E5%BC%95%E5%AF%BC%E6%89%87%E5%8C%BA&#34;&gt;2、引导扇区&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/raw/main/3.%E5%BC%95%E5%AF%BC%E6%89%93%E5%8D%B0&#34;&gt;3、引导打印&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/raw/main/4.%E5%BC%95%E5%AF%BC%E5%86%85%E5%AD%98&#34;&gt;4、引导内存&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/raw/main/5.%E5%BC%95%E5%AF%BC%E6%A0%88&#34;&gt;5、引导栈&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/tree/main/6.%E5%87%BD%E6%95%B0%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2&#34;&gt;6、函数和字符串&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/tree/main/7.%E5%BC%95%E5%AF%BC%E6%AE%B5&#34;&gt;7、引导段&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/raw/main/8.%E5%BC%95%E5%AF%BC%E6%89%87%E5%8C%BA%E7%A3%81%E7%9B%98&#34;&gt;8、引导扇区磁盘&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/tree/main/9.32%E4%BD%8D%E6%89%93%E5%8D%B0&#34;&gt;9、32位打印&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/tree/main/10.32%E4%BD%8D-gdt&#34;&gt;10、32位GDT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/tree/main/11.32%E4%BD%8D%E8%BE%93%E5%85%A5&#34;&gt;11、32位输入&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/tree/main/12.%E5%86%85%E6%A0%B8%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E5%99%A8&#34;&gt;12、内核交叉编译器&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/tree/main/13.%E5%86%85%E6%A0%B8-C&#34;&gt;13、内核 - C&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/tree/main/14.%E5%86%85%E6%A0%B8%E5%87%86%E7%B3%BB%E7%BB%9F&#34;&gt;14、内核准系统&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/tree/main/15.%E6%A3%80%E6%9F%A5%E7%82%B9&#34;&gt;15、检查点&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/tree/main/16.%E8%A7%86%E9%A2%91%E7%AB%AF%E5%8F%A3&#34;&gt;16、视频端口&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/tree/main/17.%E8%A7%86%E9%A2%91%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F&#34;&gt;17、视频驱动程序&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/tree/main/18.%E8%A7%86%E9%A2%91%E6%BB%9A%E5%8A%A8&#34;&gt;18、视频滚动&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/tree/main/19.%E4%B8%AD%E6%96%AD&#34;&gt;19、中断&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/tree/main/20.%E4%B8%AD%E6%96%AD-irqs&#34;&gt;20、中断 - irqs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/tree/main/21.%E4%B8%AD%E6%96%AD%E5%AE%9A%E6%97%B6%E5%99%A8&#34;&gt;21、中断定时器&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/tree/main/22.shell&#34;&gt;22、Shell&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/tree/main/23.malloc&#34;&gt;23、malloc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/tree/main/24.fixes&#34;&gt;24、Fixes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yanull/os-guide-cn/tree/main/25.el-capitan&#34;&gt;25、el-capitan&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;有用的教程&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://littleosbook.github.io/&#34;&gt;The little book about OS development&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://web.archive.org/web/20160412174753/http://www.jamesmolloy.co.uk/tutorial_html/index.html&#34;&gt;Roll your own toy UNIX-clone OS&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://wiki.osdev.org/Expanded_Main_Page&#34;&gt;OSDev&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>coolsnowwolf/lede</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/coolsnowwolf/lede</id>
    <link href="https://github.com/coolsnowwolf/lede" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lean&#39;s OpenWrt source&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;欢迎来到 Lean 的 Openwrt 源码仓库&lt;/h1&gt; &#xA;&lt;p&gt;如何编译自己需要的 OpenWrt 固件 &lt;a href=&#34;https://raw.githubusercontent.com/coolsnowwolf/lede/master/README_EN.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;注意&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;不要用 root 用户进行编译&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;国内用户编译前最好准备好梯子&lt;/li&gt; &#xA; &lt;li&gt;默认登陆IP 192.168.1.1 密码 password&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;编译命令&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;首先装好 Linux 系统，推荐 Debian 11 或 Ubuntu LTS&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安装编译依赖&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt update -y&#xA;sudo apt full-upgrade -y&#xA;sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \&#xA;bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \&#xA;git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \&#xA;libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \&#xA;mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip qemu-utils \&#xA;rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;下载源代码，更新 feeds 并选择配置&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/coolsnowwolf/lede&#xA;cd lede&#xA;./scripts/feeds update -a&#xA;./scripts/feeds install -a&#xA;make menuconfig&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;下载 dl 库，编译固件 （-j 后面是线程数，第一次编译推荐用单线程）&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make download -j8&#xA;make V=s -j1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;本套代码保证肯定可以编译成功。里面包括了 R21 所有源代码，包括 IPK 的。&lt;/p&gt; &#xA;&lt;p&gt;你可以自由使用，但源码编译二次发布请注明我的 GitHub 仓库链接。谢谢合作！&lt;/p&gt; &#xA;&lt;p&gt;二次编译：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd lede&#xA;git pull&#xA;./scripts/feeds update -a&#xA;./scripts/feeds install -a&#xA;make defconfig&#xA;make download -j8&#xA;make V=s -j$(nproc)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果需要重新配置：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rm -rf ./tmp &amp;amp;&amp;amp; rm -rf .config&#xA;make menuconfig&#xA;make V=s -j$(nproc)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;编译完成后输出路径：bin/targets&lt;/p&gt; &#xA;&lt;h3&gt;如果你使用 WSL/WSL2 进行编译&lt;/h3&gt; &#xA;&lt;p&gt;由于 WSL 的 PATH 中包含带有空格的 Windows 路径，有可能会导致编译失败，请在 &lt;code&gt;make&lt;/code&gt; 前面加上：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;macOS 原生系统进行编译&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;在 AppStore 中安装 Xcode&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安装 Homebrew：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/usr/bin/ruby -e &#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;使用 Homebrew 安装工具链、依赖与基础软件包:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew unlink awk&#xA;brew install coreutils diffutils findutils gawk gnu-getopt gnu-tar grep make ncurses pkg-config wget quilt xz&#xA;brew install gcc@11&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;然后输入以下命令，添加到系统环境变量中：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#39;export PATH=&#34;/usr/local/opt/coreutils/libexec/gnubin:$PATH&#34;&#39; &amp;gt;&amp;gt; ~/.bashrc&#xA;echo &#39;export PATH=&#34;/usr/local/opt/findutils/libexec/gnubin:$PATH&#34;&#39; &amp;gt;&amp;gt; ~/.bashrc&#xA;echo &#39;export PATH=&#34;/usr/local/opt/gnu-getopt/bin:$PATH&#34;&#39; &amp;gt;&amp;gt; ~/.bashrc&#xA;echo &#39;export PATH=&#34;/usr/local/opt/gnu-tar/libexec/gnubin:$PATH&#34;&#39; &amp;gt;&amp;gt; ~/.bashrc&#xA;echo &#39;export PATH=&#34;/usr/local/opt/grep/libexec/gnubin:$PATH&#34;&#39; &amp;gt;&amp;gt; ~/.bashrc&#xA;echo &#39;export PATH=&#34;/usr/local/opt/gnu-sed/libexec/gnubin:$PATH&#34;&#39; &amp;gt;&amp;gt; ~/.bashrc&#xA;echo &#39;export PATH=&#34;/usr/local/opt/make/libexec/gnubin:$PATH&#34;&#39; &amp;gt;&amp;gt; ~/.bashrc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;重新加载一下 shell 启动文件 &lt;code&gt;source ~/.bashrc&lt;/code&gt;，然后输入 &lt;code&gt;bash&lt;/code&gt; 进入 bash shell，就可以和 Linux 一样正常编译了&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;特别提示&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;源代码中绝不含任何后门和可以监控或者劫持你的 HTTPS 的闭源软件， SSL 安全是互联网最后的壁垒。安全干净才是固件应该做到的；&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如有技术问题需要讨论，欢迎加入 QQ 讨论群： OP 共享技术交流群 ,号码 297253733 ，加群链接: 点击链接加入群聊【 OP 共享技术交流群】：&lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=5yCRuXL&#34; title=&#34;OP共享技术交流群&#34;&gt;点击加入&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;想学习 OpenWrt 开发，但是摸不着门道？自学没毅力？基础太差？怕太难学不会？跟着佐大学 OpenWrt 开发入门培训班助你能学有所成 报名地址：&lt;a href=&#34;http://forgotfun.org/2018/04/openwrt-training-2018.html&#34; title=&#34;报名&#34;&gt;点击报名&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;QCA IPQ60xx 开源仓库地址：&lt;a href=&#34;https://github.com/coolsnowwolf/openwrt-gl-ax1800&#34;&gt;https://github.com/coolsnowwolf/openwrt-gl-ax1800&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;稳定版仓库地址：&lt;a href=&#34;https://github.com/coolsnowwolf/openwrt&#34;&gt;https://github.com/coolsnowwolf/openwrt&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;软路由介绍&lt;/h2&gt; &#xA;&lt;p&gt;友情推荐不恰饭：如果你在寻找一个低功耗小体积性能不错的 x86 / x64 路由器，我个人建议可以考虑小马v1 的铝合金版本 (N3710 4千兆)：&lt;a href=&#34;https://item.taobao.com/item.htm?spm=a230r.1.14.20.144c763fRkK0VZ&amp;amp;id=561126544764&#34;&gt;页面介绍&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coolsnowwolf/lede/master/doc/xm5.jpg&#34; alt=&#34;xm1&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/coolsnowwolf/lede/master/doc/xm6.jpg&#34; alt=&#34;xm2&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;捐贈&lt;/h2&gt; &#xA;&lt;p&gt;如果你觉得此项目对你有帮助，可以捐助我们，以鼓励项目能持续发展，更加完善&lt;/p&gt; &#xA;&lt;p&gt;支付宝 &lt;img src=&#34;https://raw.githubusercontent.com/coolsnowwolf/lede/master/doc/alipay_donate.jpg&#34; alt=&#34;alipay&#34;&gt; 微信 &lt;img src=&#34;https://raw.githubusercontent.com/coolsnowwolf/lede/master/doc/wechat_donate.jpg&#34; alt=&#34;wechat&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>AFLplusplus/AFLplusplus</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/AFLplusplus/AFLplusplus</id>
    <link href="https://github.com/AFLplusplus/AFLplusplus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The fuzzer afl++ is afl with community patches, qemu 5.1 upgrade, collision-free coverage, enhanced laf-intel &amp; redqueen, AFLfast++ power schedules, MOpt mutators, unicorn_mode, and a lot more!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;American Fuzzy Lop plus plus (AFL++)&lt;/h1&gt; &#xA;&lt;img align=&#34;right&#34; src=&#34;https://raw.githubusercontent.com/AFLplusplus/Website/master/static/aflpp_bg.svg?sanitize=true&#34; alt=&#34;AFL++ logo&#34; width=&#34;250&#34; heigh=&#34;250&#34;&gt; &#xA;&lt;p&gt;Release version: &lt;a href=&#34;https://github.com/AFLplusplus/AFLplusplus/releases&#34;&gt;4.00c&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;GitHub version: 4.01a&lt;/p&gt; &#xA;&lt;p&gt;Repository: &lt;a href=&#34;https://github.com/AFLplusplus/AFLplusplus&#34;&gt;https://github.com/AFLplusplus/AFLplusplus&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;AFL++ is maintained by:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Marc &#34;van Hauser&#34; Heuse &lt;a href=&#34;mailto:mh@mh-sec.de&#34;&gt;mh@mh-sec.de&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Heiko &#34;hexcoder-&#34; Eißfeldt &lt;a href=&#34;mailto:heiko.eissfeldt@hexco.de&#34;&gt;heiko.eissfeldt@hexco.de&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Andrea Fioraldi &lt;a href=&#34;mailto:andreafioraldi@gmail.com&#34;&gt;andreafioraldi@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Dominik Maier &lt;a href=&#34;mailto:mail@dmnk.co&#34;&gt;mail@dmnk.co&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Documentation: Jana Aydinbas &lt;a href=&#34;mailto:jana.aydinbas@gmail.com&#34;&gt;jana.aydinbas@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Originally developed by Michał &#34;lcamtuf&#34; Zalewski.&lt;/p&gt; &#xA;&lt;p&gt;AFL++ is a superior fork to Google&#39;s AFL - more speed, more and better mutations, more and better instrumentation, custom module support, etc.&lt;/p&gt; &#xA;&lt;p&gt;You are free to copy, modify, and distribute AFL++ with attribution under the terms of the Apache-2.0 License. See the &lt;a href=&#34;https://raw.githubusercontent.com/AFLplusplus/AFLplusplus/stable/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Here is some information to get you started:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For an overview of the AFL++ documentation and a very helpful graphical guide, please visit &lt;a href=&#34;https://raw.githubusercontent.com/AFLplusplus/AFLplusplus/stable/docs/README.md&#34;&gt;docs/README.md&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To get you started with tutorials, go to &lt;a href=&#34;https://raw.githubusercontent.com/AFLplusplus/AFLplusplus/stable/docs/tutorials.md&#34;&gt;docs/tutorials.md&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For releases, see the &lt;a href=&#34;https://github.com/AFLplusplus/AFLplusplus/releases&#34;&gt;Releases tab&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/AFLplusplus/AFLplusplus/stable/#branches&#34;&gt;branches&lt;/a&gt;. The best branches to use are, however, &lt;code&gt;stable&lt;/code&gt; or &lt;code&gt;dev&lt;/code&gt; - depending on your risk appetite. Also take a look at the list of &lt;a href=&#34;https://raw.githubusercontent.com/AFLplusplus/AFLplusplus/stable/docs/important_changes.md&#34;&gt;important changes in AFL++&lt;/a&gt; and the list of &lt;a href=&#34;https://raw.githubusercontent.com/AFLplusplus/AFLplusplus/stable/docs/features.md&#34;&gt;features&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you want to use AFL++ for your academic work, check the &lt;a href=&#34;https://aflplus.plus/papers/&#34;&gt;papers page&lt;/a&gt; on the website.&lt;/li&gt; &#xA; &lt;li&gt;To cite our work, look at the &lt;a href=&#34;https://raw.githubusercontent.com/AFLplusplus/AFLplusplus/stable/#cite&#34;&gt;Cite&lt;/a&gt; section.&lt;/li&gt; &#xA; &lt;li&gt;For comparisons, use the fuzzbench &lt;code&gt;aflplusplus&lt;/code&gt; setup, or use &lt;code&gt;afl-clang-fast&lt;/code&gt; with &lt;code&gt;AFL_LLVM_CMPLOG=1&lt;/code&gt;. You can find the &lt;code&gt;aflplusplus&lt;/code&gt; default configuration on Google&#39;s &lt;a href=&#34;https://github.com/google/fuzzbench/tree/master/fuzzers/aflplusplus&#34;&gt;fuzzbench&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building and installing AFL++&lt;/h2&gt; &#xA;&lt;p&gt;To have AFL++ easily available with everything compiled, pull the image directly from the Docker Hub (available for x86_64 and arm64):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker pull aflplusplus/aflplusplus&#xA;docker run -ti -v /location/of/your/target:/src aflplusplus/aflplusplus&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This image is automatically generated when a push to the stable repo happens (see &lt;a href=&#34;https://raw.githubusercontent.com/AFLplusplus/AFLplusplus/stable/#branches&#34;&gt;branches&lt;/a&gt;). If you use the command above, you will find your target source code in &lt;code&gt;/src&lt;/code&gt; in the container.&lt;/p&gt; &#xA;&lt;p&gt;To build AFL++ yourself - &lt;em&gt;which we recommend&lt;/em&gt; - continue at &lt;a href=&#34;https://raw.githubusercontent.com/AFLplusplus/AFLplusplus/stable/docs/INSTALL.md&#34;&gt;docs/INSTALL.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick start: Fuzzing with AFL++&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;NOTE: Before you start, please read about the &lt;a href=&#34;https://raw.githubusercontent.com/AFLplusplus/AFLplusplus/stable/docs/fuzzing_in_depth.md#0-common-sense-risks&#34;&gt;common sense risks of fuzzing&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a quick start for fuzzing targets with the source code available. To read about the process in detail, see &lt;a href=&#34;https://raw.githubusercontent.com/AFLplusplus/AFLplusplus/stable/docs/fuzzing_in_depth.md&#34;&gt;docs/fuzzing_in_depth.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To learn about fuzzing other targets, see:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Binary-only targets: &lt;a href=&#34;https://raw.githubusercontent.com/AFLplusplus/AFLplusplus/stable/docs/fuzzing_binary-only_targets.md&#34;&gt;docs/fuzzing_binary-only_targets.md&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Network services: &lt;a href=&#34;https://raw.githubusercontent.com/AFLplusplus/AFLplusplus/stable/docs/best_practices.md#fuzzing-a-network-service&#34;&gt;docs/best_practices.md#fuzzing-a-network-service&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GUI programs: &lt;a href=&#34;https://raw.githubusercontent.com/AFLplusplus/AFLplusplus/stable/docs/best_practices.md#fuzzing-a-gui-program&#34;&gt;docs/best_practices.md#fuzzing-a-gui-program&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Step-by-step quick start:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Compile the program or library to be fuzzed using &lt;code&gt;afl-cc&lt;/code&gt;. A common way to do this would be:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;CC=/path/to/afl-cc CXX=/path/to/afl-c++ ./configure --disable-shared&#xA;make clean all&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Get a small but valid input file that makes sense to the program. When fuzzing verbose syntax (SQL, HTTP, etc.), create a dictionary as described in &lt;a href=&#34;https://raw.githubusercontent.com/AFLplusplus/AFLplusplus/stable/dictionaries/README.md&#34;&gt;dictionaries/README.md&lt;/a&gt;, too.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If the program reads from stdin, run &lt;code&gt;afl-fuzz&lt;/code&gt; like so:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;./afl-fuzz -i seeds_dir -o output_dir -- \&#xA;/path/to/tested/program [...program&#39;s cmdline...]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;To add a dictionary, add &lt;code&gt;-x /path/to/dictionary.txt&lt;/code&gt; to afl-fuzz.&lt;/p&gt; &lt;p&gt;If the program takes input from a file, you can put &lt;code&gt;@@&lt;/code&gt; in the program&#39;s command line; AFL++ will put an auto-generated file name in there for you.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Investigate anything shown in red in the fuzzer UI by promptly consulting &lt;a href=&#34;https://raw.githubusercontent.com/AFLplusplus/AFLplusplus/stable/docs/afl-fuzz_approach.md#understanding-the-status-screen&#34;&gt;docs/afl-fuzz_approach.md#understanding-the-status-screen&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You will find found crashes and hangs in the subdirectories &lt;code&gt;crashes/&lt;/code&gt; and &lt;code&gt;hangs/&lt;/code&gt; in the &lt;code&gt;-o output_dir&lt;/code&gt; directory. You can replay the crashes by feeding them to the target, e.g. if your target is using stdin:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cat output_dir/crashes/id:000000,* | /path/to/tested/program [...program&#39;s cmdline...]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can generate cores or use gdb directly to follow up the crashes.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;We cannot stress this enough - if you want to fuzz effectively, read the &lt;a href=&#34;https://raw.githubusercontent.com/AFLplusplus/AFLplusplus/stable/docs/fuzzing_in_depth.md&#34;&gt;docs/fuzzing_in_depth.md&lt;/a&gt; document!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;Questions? Concerns? Bug reports?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The contributors can be reached via (e.g., by creating an issue): &lt;a href=&#34;https://github.com/AFLplusplus/AFLplusplus&#34;&gt;https://github.com/AFLplusplus/AFLplusplus&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Take a look at our &lt;a href=&#34;https://raw.githubusercontent.com/AFLplusplus/AFLplusplus/stable/docs/FAQ.md&#34;&gt;FAQ&lt;/a&gt;. If you find an interesting or important question missing, submit it via &lt;a href=&#34;https://github.com/AFLplusplus/AFLplusplus/discussions&#34;&gt;https://github.com/AFLplusplus/AFLplusplus/discussions&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Best: join the &lt;a href=&#34;https://discord.gg/gCraWct&#34;&gt;Awesome Fuzzing&lt;/a&gt; Discord server.&lt;/li&gt; &#xA; &lt;li&gt;There is a (not really used) mailing list for the AFL/AFL++ project (&lt;a href=&#34;https://groups.google.com/group/afl-users&#34;&gt;browse archive&lt;/a&gt;). To compare notes with other users or to get notified about major new features, send an email to &lt;a href=&#34;mailto:afl-users+subscribe@googlegroups.com&#34;&gt;afl-users+subscribe@googlegroups.com&lt;/a&gt;, but note that this is not managed by us.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Branches&lt;/h2&gt; &#xA;&lt;p&gt;The following branches exist:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AFLplusplus/AFLplusplus/tree/release&#34;&gt;release&lt;/a&gt;: the latest release&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AFLplusplus/AFLplusplus/&#34;&gt;stable/trunk&lt;/a&gt;: stable state of AFL++ - it is synced from dev from time to time when we are satisfied with its stability&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AFLplusplus/AFLplusplus/tree/dev&#34;&gt;dev&lt;/a&gt;: development state of AFL++ - bleeding edge and you might catch a checkout which does not compile or has a bug. &lt;strong&gt;We only accept PRs (pull requests) for the &#39;dev&#39; branch!&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;(any other): experimental branches to work on specific features or testing new functionality or changes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Help wanted&lt;/h2&gt; &#xA;&lt;p&gt;We have several &lt;a href=&#34;https://raw.githubusercontent.com/AFLplusplus/AFLplusplus/stable/docs/ideas.md&#34;&gt;ideas&lt;/a&gt; we would like to see in AFL++ to make it even better. However, we already work on so many things that we do not have the time for all the big ideas.&lt;/p&gt; &#xA;&lt;p&gt;This can be your way to support and contribute to AFL++ - extend it to do something cool.&lt;/p&gt; &#xA;&lt;p&gt;For everyone who wants to contribute (and send pull requests), please read our &lt;a href=&#34;https://raw.githubusercontent.com/AFLplusplus/AFLplusplus/stable/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt; before you submit.&lt;/p&gt; &#xA;&lt;h2&gt;Special thanks&lt;/h2&gt; &#xA;&lt;p&gt;Many of the improvements to the original AFL and AFL++ wouldn&#39;t be possible without feedback, bug reports, or patches from our contributors.&lt;/p&gt; &#xA;&lt;p&gt;Thank you! (For people sending pull requests - please add yourself to this list :-)&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List of contributors&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;  Jann Horn                             Hanno Boeck&#xA;  Felix Groebert                        Jakub Wilk&#xA;  Richard W. M. Jones                   Alexander Cherepanov&#xA;  Tom Ritter                            Hovik Manucharyan&#xA;  Sebastian Roschke                     Eberhard Mattes&#xA;  Padraig Brady                         Ben Laurie&#xA;  @dronesec                             Luca Barbato&#xA;  Tobias Ospelt                         Thomas Jarosch&#xA;  Martin Carpenter                      Mudge Zatko&#xA;  Joe Zbiciak                           Ryan Govostes&#xA;  Michael Rash                          William Robinet&#xA;  Jonathan Gray                         Filipe Cabecinhas&#xA;  Nico Weber                            Jodie Cunningham&#xA;  Andrew Griffiths                      Parker Thompson&#xA;  Jonathan Neuschaefer                  Tyler Nighswander&#xA;  Ben Nagy                              Samir Aguiar&#xA;  Aidan Thornton                        Aleksandar Nikolich&#xA;  Sam Hakim                             Laszlo Szekeres&#xA;  David A. Wheeler                      Turo Lamminen&#xA;  Andreas Stieger                       Richard Godbee&#xA;  Louis Dassy                           teor2345&#xA;  Alex Moneger                          Dmitry Vyukov&#xA;  Keegan McAllister                     Kostya Serebryany&#xA;  Richo Healey                          Martijn Bogaard&#xA;  rc0r                                  Jonathan Foote&#xA;  Christian Holler                      Dominique Pelle&#xA;  Jacek Wielemborek                     Leo Barnes&#xA;  Jeremy Barnes                         Jeff Trull&#xA;  Guillaume Endignoux                   ilovezfs&#xA;  Daniel Godas-Lopez                    Franjo Ivancic&#xA;  Austin Seipp                          Daniel Komaromy&#xA;  Daniel Binderman                      Jonathan Metzman&#xA;  Vegard Nossum                         Jan Kneschke&#xA;  Kurt Roeckx                           Marcel Boehme&#xA;  Van-Thuan Pham                        Abhik Roychoudhury&#xA;  Joshua J. Drake                       Toby Hutton&#xA;  Rene Freingruber                      Sergey Davidoff&#xA;  Sami Liedes                           Craig Young&#xA;  Andrzej Jackowski                     Daniel Hodson&#xA;  Nathan Voss                           Dominik Maier&#xA;  Andrea Biondo                         Vincent Le Garrec&#xA;  Khaled Yakdan                         Kuang-che Wu&#xA;  Josephine Calliotte                   Konrad Welc&#xA;  Thomas Rooijakkers                    David Carlier&#xA;  Ruben ten Hove                        Joey Jiao&#xA;  fuzzah                                @intrigus-lgtm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Cite&lt;/h2&gt; &#xA;&lt;p&gt;If you use AFL++ in scientific work, consider citing &lt;a href=&#34;https://www.usenix.org/conference/woot20/presentation/fioraldi&#34;&gt;our paper&lt;/a&gt; presented at WOOT&#39;20:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Andrea Fioraldi, Dominik Maier, Heiko Eißfeldt, and Marc Heuse. “AFL++: Combining incremental steps of fuzzing research”. In 14th USENIX Workshop on Offensive Technologies (WOOT 20). USENIX Association, Aug. 2020.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;BibTeX&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@inproceedings {AFLplusplus-Woot20,&#xA;author = {Andrea Fioraldi and Dominik Maier and Heiko Ei{\ss}feldt and Marc Heuse},&#xA;title = {{AFL++}: Combining Incremental Steps of Fuzzing Research},&#xA;booktitle = {14th {USENIX} Workshop on Offensive Technologies ({WOOT} 20)},&#xA;year = {2020},&#xA;publisher = {{USENIX} Association},&#xA;month = aug,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
  <entry>
    <title>redis/redis</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/redis/redis</id>
    <link href="https://github.com/redis/redis" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Redis is an in-memory database that persists on disk. The data model is key-value, but many different kind of values are supported: Strings, Lists, Sets, Sorted Sets, Hashes, Streams, HyperLogLogs, Bitmaps.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This README is just a fast &lt;em&gt;quick start&lt;/em&gt; document. You can find more detailed documentation at &lt;a href=&#34;https://redis.io&#34;&gt;redis.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What is Redis?&lt;/h2&gt; &#xA;&lt;p&gt;Redis is often referred to as a &lt;em&gt;data structures&lt;/em&gt; server. What this means is that Redis provides access to mutable data structures via a set of commands, which are sent using a &lt;em&gt;server-client&lt;/em&gt; model with TCP sockets and a simple protocol. So different processes can query and modify the same data structures in a shared way.&lt;/p&gt; &#xA;&lt;p&gt;Data structures implemented into Redis have a few special properties:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Redis cares to store them on disk, even if they are always served and modified into the server memory. This means that Redis is fast, but that it is also non-volatile.&lt;/li&gt; &#xA; &lt;li&gt;The implementation of data structures emphasizes memory efficiency, so data structures inside Redis will likely use less memory compared to the same data structure modelled using a high-level programming language.&lt;/li&gt; &#xA; &lt;li&gt;Redis offers a number of features that are natural to find in a database, like replication, tunable levels of durability, clustering, and high availability.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Another good example is to think of Redis as a more complex version of memcached, where the operations are not just SETs and GETs, but operations that work with complex data types like Lists, Sets, ordered data structures, and so forth.&lt;/p&gt; &#xA;&lt;p&gt;If you want to know more, this is a list of selected starting points:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Introduction to Redis data types. &lt;a href=&#34;https://redis.io/topics/data-types-intro&#34;&gt;https://redis.io/topics/data-types-intro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Try Redis directly inside your browser. &lt;a href=&#34;https://try.redis.io&#34;&gt;https://try.redis.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The full list of Redis commands. &lt;a href=&#34;https://redis.io/commands&#34;&gt;https://redis.io/commands&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;There is much more inside the official Redis documentation. &lt;a href=&#34;https://redis.io/documentation&#34;&gt;https://redis.io/documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building Redis&lt;/h2&gt; &#xA;&lt;p&gt;Redis can be compiled and used on Linux, OSX, OpenBSD, NetBSD, FreeBSD. We support big endian and little endian architectures, and both 32 bit and 64 bit systems.&lt;/p&gt; &#xA;&lt;p&gt;It may compile on Solaris derived systems (for instance SmartOS) but our support for this platform is &lt;em&gt;best effort&lt;/em&gt; and Redis is not guaranteed to work as well as in Linux, OSX, and *BSD.&lt;/p&gt; &#xA;&lt;p&gt;It is as simple as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build with TLS support, you&#39;ll need OpenSSL development libraries (e.g. libssl-dev on Debian/Ubuntu) and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% make BUILD_TLS=yes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build with systemd support, you&#39;ll need systemd development libraries (such as libsystemd-dev on Debian/Ubuntu or systemd-devel on CentOS) and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% make USE_SYSTEMD=yes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To append a suffix to Redis program names, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% make PROG_SUFFIX=&#34;-alt&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can build a 32 bit Redis binary using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% make 32bit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After building Redis, it is a good idea to test it using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% make test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If TLS is built, running the tests with TLS enabled (you will need &lt;code&gt;tcl-tls&lt;/code&gt; installed):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% ./utils/gen-test-certs.sh&#xA;% ./runtest --tls&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Fixing build problems with dependencies or cached build options&lt;/h2&gt; &#xA;&lt;p&gt;Redis has some dependencies which are included in the &lt;code&gt;deps&lt;/code&gt; directory. &lt;code&gt;make&lt;/code&gt; does not automatically rebuild dependencies even if something in the source code of dependencies changes.&lt;/p&gt; &#xA;&lt;p&gt;When you update the source code with &lt;code&gt;git pull&lt;/code&gt; or when code inside the dependencies tree is modified in any other way, make sure to use the following command in order to really clean everything and rebuild from scratch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make distclean&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will clean: jemalloc, lua, hiredis, linenoise.&lt;/p&gt; &#xA;&lt;p&gt;Also if you force certain build options like 32bit target, no C compiler optimizations (for debugging purposes), and other similar build time options, those options are cached indefinitely until you issue a &lt;code&gt;make distclean&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;h2&gt;Fixing problems building 32 bit binaries&lt;/h2&gt; &#xA;&lt;p&gt;If after building Redis with a 32 bit target you need to rebuild it with a 64 bit target, or the other way around, you need to perform a &lt;code&gt;make distclean&lt;/code&gt; in the root directory of the Redis distribution.&lt;/p&gt; &#xA;&lt;p&gt;In case of build errors when trying to build a 32 bit binary of Redis, try the following steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install the package libc6-dev-i386 (also try g++-multilib).&lt;/li&gt; &#xA; &lt;li&gt;Try using the following command line instead of &lt;code&gt;make 32bit&lt;/code&gt;: &lt;code&gt;make CFLAGS=&#34;-m32 -march=native&#34; LDFLAGS=&#34;-m32&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Allocator&lt;/h2&gt; &#xA;&lt;p&gt;Selecting a non-default memory allocator when building Redis is done by setting the &lt;code&gt;MALLOC&lt;/code&gt; environment variable. Redis is compiled and linked against libc malloc by default, with the exception of jemalloc being the default on Linux systems. This default was picked because jemalloc has proven to have fewer fragmentation problems than libc malloc.&lt;/p&gt; &#xA;&lt;p&gt;To force compiling against libc malloc, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% make MALLOC=libc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To compile against jemalloc on Mac OS X systems, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% make MALLOC=jemalloc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Monotonic clock&lt;/h2&gt; &#xA;&lt;p&gt;By default, Redis will build using the POSIX clock_gettime function as the monotonic clock source. On most modern systems, the internal processor clock can be used to improve performance. Cautions can be found here: &lt;a href=&#34;http://oliveryang.net/2015/09/pitfalls-of-TSC-usage/&#34;&gt;http://oliveryang.net/2015/09/pitfalls-of-TSC-usage/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To build with support for the processor&#39;s internal instruction clock, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% make CFLAGS=&#34;-DUSE_PROCESSOR_CLOCK&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Verbose build&lt;/h2&gt; &#xA;&lt;p&gt;Redis will build with a user-friendly colorized output by default. If you want to see a more verbose output, use the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% make V=1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running Redis&lt;/h2&gt; &#xA;&lt;p&gt;To run Redis with the default configuration, just type:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% cd src&#xA;% ./redis-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to provide your redis.conf, you have to run it using an additional parameter (the path of the configuration file):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% cd src&#xA;% ./redis-server /path/to/redis.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is possible to alter the Redis configuration by passing parameters directly as options using the command line. Examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% ./redis-server --port 9999 --replicaof 127.0.0.1 6379&#xA;% ./redis-server /etc/redis/6379.conf --loglevel debug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All the options in redis.conf are also supported as options using the command line, with exactly the same name.&lt;/p&gt; &#xA;&lt;h2&gt;Running Redis with TLS:&lt;/h2&gt; &#xA;&lt;p&gt;Please consult the &lt;a href=&#34;https://raw.githubusercontent.com/redis/redis/unstable/TLS.md&#34;&gt;TLS.md&lt;/a&gt; file for more information on how to use Redis with TLS.&lt;/p&gt; &#xA;&lt;h2&gt;Playing with Redis&lt;/h2&gt; &#xA;&lt;p&gt;You can use redis-cli to play with Redis. Start a redis-server instance, then in another terminal try the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% cd src&#xA;% ./redis-cli&#xA;redis&amp;gt; ping&#xA;PONG&#xA;redis&amp;gt; set foo bar&#xA;OK&#xA;redis&amp;gt; get foo&#xA;&#34;bar&#34;&#xA;redis&amp;gt; incr mycounter&#xA;(integer) 1&#xA;redis&amp;gt; incr mycounter&#xA;(integer) 2&#xA;redis&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find the list of all the available commands at &lt;a href=&#34;https://redis.io/commands&#34;&gt;https://redis.io/commands&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installing Redis&lt;/h2&gt; &#xA;&lt;p&gt;In order to install Redis binaries into /usr/local/bin, just use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;make PREFIX=/some/other/directory install&lt;/code&gt; if you wish to use a different destination.&lt;/p&gt; &#xA;&lt;p&gt;Make install will just install binaries in your system, but will not configure init scripts and configuration files in the appropriate place. This is not needed if you just want to play a bit with Redis, but if you are installing it the proper way for a production system, we have a script that does this for Ubuntu and Debian systems:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;% cd utils&#xA;% ./install_server.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: &lt;code&gt;install_server.sh&lt;/code&gt; will not work on Mac OSX; it is built for Linux only.&lt;/p&gt; &#xA;&lt;p&gt;The script will ask you a few questions and will setup everything you need to run Redis properly as a background daemon that will start again on system reboots.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll be able to stop and start Redis using the script named &lt;code&gt;/etc/init.d/redis_&amp;lt;portnumber&amp;gt;&lt;/code&gt;, for instance &lt;code&gt;/etc/init.d/redis_6379&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Code contributions&lt;/h2&gt; &#xA;&lt;p&gt;Note: By contributing code to the Redis project in any form, including sending a pull request via Github, a code fragment or patch via private email or public discussion groups, you agree to release your code under the terms of the BSD license that you can find in the &lt;a href=&#34;https://github.com/redis/redis/raw/unstable/COPYING&#34;&gt;COPYING&lt;/a&gt; file included in the Redis source distribution.&lt;/p&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://github.com/redis/redis/raw/unstable/CONTRIBUTING&#34;&gt;CONTRIBUTING&lt;/a&gt; file in this source distribution for more information. For security bugs and vulnerabilities, please see &lt;a href=&#34;https://github.com/redis/redis/raw/unstable/SECURITY.md&#34;&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Redis internals&lt;/h1&gt; &#xA;&lt;p&gt;If you are reading this README you are likely in front of a Github page or you just untarred the Redis distribution tar ball. In both the cases you are basically one step away from the source code, so here we explain the Redis source code layout, what is in each file as a general idea, the most important functions and structures inside the Redis server and so forth. We keep all the discussion at a high level without digging into the details since this document would be huge otherwise and our code base changes continuously, but a general idea should be a good starting point to understand more. Moreover most of the code is heavily commented and easy to follow.&lt;/p&gt; &#xA;&lt;h2&gt;Source code layout&lt;/h2&gt; &#xA;&lt;p&gt;The Redis root directory just contains this README, the Makefile which calls the real Makefile inside the &lt;code&gt;src&lt;/code&gt; directory and an example configuration for Redis and Sentinel. You can find a few shell scripts that are used in order to execute the Redis, Redis Cluster and Redis Sentinel unit tests, which are implemented inside the &lt;code&gt;tests&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;Inside the root are the following important directories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;src&lt;/code&gt;: contains the Redis implementation, written in C.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tests&lt;/code&gt;: contains the unit tests, implemented in Tcl.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;deps&lt;/code&gt;: contains libraries Redis uses. Everything needed to compile Redis is inside this directory; your system just needs to provide &lt;code&gt;libc&lt;/code&gt;, a POSIX compatible interface and a C compiler. Notably &lt;code&gt;deps&lt;/code&gt; contains a copy of &lt;code&gt;jemalloc&lt;/code&gt;, which is the default allocator of Redis under Linux. Note that under &lt;code&gt;deps&lt;/code&gt; there are also things which started with the Redis project, but for which the main repository is not &lt;code&gt;redis/redis&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are a few more directories but they are not very important for our goals here. We&#39;ll focus mostly on &lt;code&gt;src&lt;/code&gt;, where the Redis implementation is contained, exploring what there is inside each file. The order in which files are exposed is the logical one to follow in order to disclose different layers of complexity incrementally.&lt;/p&gt; &#xA;&lt;p&gt;Note: lately Redis was refactored quite a bit. Function names and file names have been changed, so you may find that this documentation reflects the &lt;code&gt;unstable&lt;/code&gt; branch more closely. For instance, in Redis 3.0 the &lt;code&gt;server.c&lt;/code&gt; and &lt;code&gt;server.h&lt;/code&gt; files were named &lt;code&gt;redis.c&lt;/code&gt; and &lt;code&gt;redis.h&lt;/code&gt;. However the overall structure is the same. Keep in mind that all the new developments and pull requests should be performed against the &lt;code&gt;unstable&lt;/code&gt; branch.&lt;/p&gt; &#xA;&lt;h2&gt;server.h&lt;/h2&gt; &#xA;&lt;p&gt;The simplest way to understand how a program works is to understand the data structures it uses. So we&#39;ll start from the main header file of Redis, which is &lt;code&gt;server.h&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;All the server configuration and in general all the shared state is defined in a global structure called &lt;code&gt;server&lt;/code&gt;, of type &lt;code&gt;struct redisServer&lt;/code&gt;. A few important fields in this structure are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;server.db&lt;/code&gt; is an array of Redis databases, where data is stored.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;server.commands&lt;/code&gt; is the command table.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;server.clients&lt;/code&gt; is a linked list of clients connected to the server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;server.master&lt;/code&gt; is a special client, the master, if the instance is a replica.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are tons of other fields. Most fields are commented directly inside the structure definition.&lt;/p&gt; &#xA;&lt;p&gt;Another important Redis data structure is the one defining a client. In the past it was called &lt;code&gt;redisClient&lt;/code&gt;, now just &lt;code&gt;client&lt;/code&gt;. The structure has many fields, here we&#39;ll just show the main ones:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;struct client {&#xA;    int fd;&#xA;    sds querybuf;&#xA;    int argc;&#xA;    robj **argv;&#xA;    redisDb *db;&#xA;    int flags;&#xA;    list *reply;&#xA;    // ... many other fields ...&#xA;    char buf[PROTO_REPLY_CHUNK_BYTES];&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The client structure defines a &lt;em&gt;connected client&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;fd&lt;/code&gt; field is the client socket file descriptor.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;argc&lt;/code&gt; and &lt;code&gt;argv&lt;/code&gt; are populated with the command the client is executing, so that functions implementing a given Redis command can read the arguments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;querybuf&lt;/code&gt; accumulates the requests from the client, which are parsed by the Redis server according to the Redis protocol and executed by calling the implementations of the commands the client is executing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;reply&lt;/code&gt; and &lt;code&gt;buf&lt;/code&gt; are dynamic and static buffers that accumulate the replies the server sends to the client. These buffers are incrementally written to the socket as soon as the file descriptor is writeable.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As you can see in the client structure above, arguments in a command are described as &lt;code&gt;robj&lt;/code&gt; structures. The following is the full &lt;code&gt;robj&lt;/code&gt; structure, which defines a &lt;em&gt;Redis object&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;typedef struct redisObject {&#xA;    unsigned type:4;&#xA;    unsigned encoding:4;&#xA;    unsigned lru:LRU_BITS; /* lru time (relative to server.lruclock) */&#xA;    int refcount;&#xA;    void *ptr;&#xA;} robj;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Basically this structure can represent all the basic Redis data types like strings, lists, sets, sorted sets and so forth. The interesting thing is that it has a &lt;code&gt;type&lt;/code&gt; field, so that it is possible to know what type a given object has, and a &lt;code&gt;refcount&lt;/code&gt;, so that the same object can be referenced in multiple places without allocating it multiple times. Finally the &lt;code&gt;ptr&lt;/code&gt; field points to the actual representation of the object, which might vary even for the same type, depending on the &lt;code&gt;encoding&lt;/code&gt; used.&lt;/p&gt; &#xA;&lt;p&gt;Redis objects are used extensively in the Redis internals, however in order to avoid the overhead of indirect accesses, recently in many places we just use plain dynamic strings not wrapped inside a Redis object.&lt;/p&gt; &#xA;&lt;h2&gt;server.c&lt;/h2&gt; &#xA;&lt;p&gt;This is the entry point of the Redis server, where the &lt;code&gt;main()&lt;/code&gt; function is defined. The following are the most important steps in order to startup the Redis server.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;initServerConfig()&lt;/code&gt; sets up the default values of the &lt;code&gt;server&lt;/code&gt; structure.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;initServer()&lt;/code&gt; allocates the data structures needed to operate, setup the listening socket, and so forth.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;aeMain()&lt;/code&gt; starts the event loop which listens for new connections.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are two special functions called periodically by the event loop:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;serverCron()&lt;/code&gt; is called periodically (according to &lt;code&gt;server.hz&lt;/code&gt; frequency), and performs tasks that must be performed from time to time, like checking for timed out clients.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;beforeSleep()&lt;/code&gt; is called every time the event loop fired, Redis served a few requests, and is returning back into the event loop.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Inside server.c you can find code that handles other vital things of the Redis server:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;call()&lt;/code&gt; is used in order to call a given command in the context of a given client.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;activeExpireCycle()&lt;/code&gt; handles eviction of keys with a time to live set via the &lt;code&gt;EXPIRE&lt;/code&gt; command.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;performEvictions()&lt;/code&gt; is called when a new write command should be performed but Redis is out of memory according to the &lt;code&gt;maxmemory&lt;/code&gt; directive.&lt;/li&gt; &#xA; &lt;li&gt;The global variable &lt;code&gt;redisCommandTable&lt;/code&gt; defines all the Redis commands, specifying the name of the command, the function implementing the command, the number of arguments required, and other properties of each command.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;commands.c&lt;/h2&gt; &#xA;&lt;p&gt;This file is auto generated by utils/generate-command-code.py, the content is based on the JSON files in the src/commands folder. These are meant to be the single source of truth about the Redis commands, and all the metadata about them. These JSON files are not meant to be used directly by anyone directly, instead that metadata can be obtained via the COMMAND command.&lt;/p&gt; &#xA;&lt;h2&gt;networking.c&lt;/h2&gt; &#xA;&lt;p&gt;This file defines all the I/O functions with clients, masters and replicas (which in Redis are just special clients):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;createClient()&lt;/code&gt; allocates and initializes a new client.&lt;/li&gt; &#xA; &lt;li&gt;the &lt;code&gt;addReply*()&lt;/code&gt; family of functions are used by command implementations in order to append data to the client structure, that will be transmitted to the client as a reply for a given command executed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;writeToClient()&lt;/code&gt; transmits the data pending in the output buffers to the client and is called by the &lt;em&gt;writable event handler&lt;/em&gt; &lt;code&gt;sendReplyToClient()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;readQueryFromClient()&lt;/code&gt; is the &lt;em&gt;readable event handler&lt;/em&gt; and accumulates data read from the client into the query buffer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;processInputBuffer()&lt;/code&gt; is the entry point in order to parse the client query buffer according to the Redis protocol. Once commands are ready to be processed, it calls &lt;code&gt;processCommand()&lt;/code&gt; which is defined inside &lt;code&gt;server.c&lt;/code&gt; in order to actually execute the command.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;freeClient()&lt;/code&gt; deallocates, disconnects and removes a client.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;aof.c and rdb.c&lt;/h2&gt; &#xA;&lt;p&gt;As you can guess from the names, these files implement the RDB and AOF persistence for Redis. Redis uses a persistence model based on the &lt;code&gt;fork()&lt;/code&gt; system call in order to create a process with the same (shared) memory content of the main Redis process. This secondary process dumps the content of the memory on disk. This is used by &lt;code&gt;rdb.c&lt;/code&gt; to create the snapshots on disk and by &lt;code&gt;aof.c&lt;/code&gt; in order to perform the AOF rewrite when the append only file gets too big.&lt;/p&gt; &#xA;&lt;p&gt;The implementation inside &lt;code&gt;aof.c&lt;/code&gt; has additional functions in order to implement an API that allows commands to append new commands into the AOF file as clients execute them.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;call()&lt;/code&gt; function defined inside &lt;code&gt;server.c&lt;/code&gt; is responsible for calling the functions that in turn will write the commands into the AOF.&lt;/p&gt; &#xA;&lt;h2&gt;db.c&lt;/h2&gt; &#xA;&lt;p&gt;Certain Redis commands operate on specific data types; others are general. Examples of generic commands are &lt;code&gt;DEL&lt;/code&gt; and &lt;code&gt;EXPIRE&lt;/code&gt;. They operate on keys and not on their values specifically. All those generic commands are defined inside &lt;code&gt;db.c&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Moreover &lt;code&gt;db.c&lt;/code&gt; implements an API in order to perform certain operations on the Redis dataset without directly accessing the internal data structures.&lt;/p&gt; &#xA;&lt;p&gt;The most important functions inside &lt;code&gt;db.c&lt;/code&gt; which are used in many command implementations are the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;lookupKeyRead()&lt;/code&gt; and &lt;code&gt;lookupKeyWrite()&lt;/code&gt; are used in order to get a pointer to the value associated to a given key, or &lt;code&gt;NULL&lt;/code&gt; if the key does not exist.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dbAdd()&lt;/code&gt; and its higher level counterpart &lt;code&gt;setKey()&lt;/code&gt; create a new key in a Redis database.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dbDelete()&lt;/code&gt; removes a key and its associated value.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;emptyDb()&lt;/code&gt; removes an entire single database or all the databases defined.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The rest of the file implements the generic commands exposed to the client.&lt;/p&gt; &#xA;&lt;h2&gt;object.c&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;robj&lt;/code&gt; structure defining Redis objects was already described. Inside &lt;code&gt;object.c&lt;/code&gt; there are all the functions that operate with Redis objects at a basic level, like functions to allocate new objects, handle the reference counting and so forth. Notable functions inside this file:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;incrRefCount()&lt;/code&gt; and &lt;code&gt;decrRefCount()&lt;/code&gt; are used in order to increment or decrement an object reference count. When it drops to 0 the object is finally freed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;createObject()&lt;/code&gt; allocates a new object. There are also specialized functions to allocate string objects having a specific content, like &lt;code&gt;createStringObjectFromLongLong()&lt;/code&gt; and similar functions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This file also implements the &lt;code&gt;OBJECT&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;h2&gt;replication.c&lt;/h2&gt; &#xA;&lt;p&gt;This is one of the most complex files inside Redis, it is recommended to approach it only after getting a bit familiar with the rest of the code base. In this file there is the implementation of both the master and replica role of Redis.&lt;/p&gt; &#xA;&lt;p&gt;One of the most important functions inside this file is &lt;code&gt;replicationFeedSlaves()&lt;/code&gt; that writes commands to the clients representing replica instances connected to our master, so that the replicas can get the writes performed by the clients: this way their data set will remain synchronized with the one in the master.&lt;/p&gt; &#xA;&lt;p&gt;This file also implements both the &lt;code&gt;SYNC&lt;/code&gt; and &lt;code&gt;PSYNC&lt;/code&gt; commands that are used in order to perform the first synchronization between masters and replicas, or to continue the replication after a disconnection.&lt;/p&gt; &#xA;&lt;h2&gt;Script&lt;/h2&gt; &#xA;&lt;p&gt;The script unit is compose of 3 units&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;script.c&lt;/code&gt; - integration of scripts with Redis (commands execution, set replication/resp, ..)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;script_lua.c&lt;/code&gt; - responsible to execute Lua code, uses script.c to interact with Redis from within the Lua code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;function_lua.c&lt;/code&gt; - contains the Lua engine implementation, uses script_lua.c to execute the Lua code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;functions.c&lt;/code&gt; - Contains Redis Functions implementation (FUNCTION command), uses functions_lua.c if the function it wants to invoke needs the Lua engine.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;eval.c&lt;/code&gt; - Contains the &lt;code&gt;eval&lt;/code&gt; implementation using &lt;code&gt;script_lua.c&lt;/code&gt; to invoke the Lua code.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other C files&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;t_hash.c&lt;/code&gt;, &lt;code&gt;t_list.c&lt;/code&gt;, &lt;code&gt;t_set.c&lt;/code&gt;, &lt;code&gt;t_string.c&lt;/code&gt;, &lt;code&gt;t_zset.c&lt;/code&gt; and &lt;code&gt;t_stream.c&lt;/code&gt; contains the implementation of the Redis data types. They implement both an API to access a given data type, and the client command implementations for these data types.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ae.c&lt;/code&gt; implements the Redis event loop, it&#39;s a self contained library which is simple to read and understand.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sds.c&lt;/code&gt; is the Redis string library, check &lt;a href=&#34;https://github.com/antirez/sds&#34;&gt;https://github.com/antirez/sds&lt;/a&gt; for more information.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;anet.c&lt;/code&gt; is a library to use POSIX networking in a simpler way compared to the raw interface exposed by the kernel.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dict.c&lt;/code&gt; is an implementation of a non-blocking hash table which rehashes incrementally.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cluster.c&lt;/code&gt; implements the Redis Cluster. Probably a good read only after being very familiar with the rest of the Redis code base. If you want to read &lt;code&gt;cluster.c&lt;/code&gt; make sure to read the &lt;a href=&#34;https://redis.io/topics/cluster-spec&#34;&gt;Redis Cluster specification&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Anatomy of a Redis command&lt;/h2&gt; &#xA;&lt;p&gt;All the Redis commands are defined in the following way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;void foobarCommand(client *c) {&#xA;    printf(&#34;%s&#34;,c-&amp;gt;argv[1]-&amp;gt;ptr); /* Do something with the argument. */&#xA;    addReply(c,shared.ok); /* Reply something to the client. */&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The command is then referenced inside &lt;code&gt;server.c&lt;/code&gt; in the command table:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#34;foobar&#34;,foobarCommand,2,&#34;rtF&#34;,0,NULL,0,0,0,0,0},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the above example &lt;code&gt;2&lt;/code&gt; is the number of arguments the command takes, while &lt;code&gt;&#34;rtF&#34;&lt;/code&gt; are the command flags, as documented in the command table top comment inside &lt;code&gt;server.c&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;After the command operates in some way, it returns a reply to the client, usually using &lt;code&gt;addReply()&lt;/code&gt; or a similar function defined inside &lt;code&gt;networking.c&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There are tons of command implementations inside the Redis source code that can serve as examples of actual commands implementations. Writing a few toy commands can be a good exercise to get familiar with the code base.&lt;/p&gt; &#xA;&lt;p&gt;There are also many other files not described here, but it is useless to cover everything. We just want to help you with the first steps. Eventually you&#39;ll find your way inside the Redis code base :-)&lt;/p&gt; &#xA;&lt;p&gt;Enjoy!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>BtwefKang/Shubham-Nimase</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/BtwefKang/Shubham-Nimase</id>
    <link href="https://github.com/BtwefKang/Shubham-Nimase" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Shubham-Nimase&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;mod_h[ttp]2 - http/2 for Apache httpd&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains &lt;code&gt;mod_h[ttp]2&lt;/code&gt; and &lt;code&gt;mod_proxy_h[ttp]2&lt;/code&gt; from Apache httpd as a standalone build. It servers as early access to features and fixes before being shipped in the next Apache release. Both modules can be considered &lt;strong&gt;production ready&lt;/strong&gt; and stable as shipped by the Apache project.&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;mod_h[ttp]2&lt;/code&gt; is an official Apache httpd module&lt;/strong&gt; since release 2.4.17. &lt;code&gt;mod_proxy_h[ttp]2&lt;/code&gt; has been added in Apache in 2.4.23. The versions here at github are for more frequent releases than the Apache schedule provides for.&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;The following beautiful people have directly contributed to this project via commits over the years: Julian Reschke, Lubos Uhliarik, Luca Toscano, MATSUMOTO Ryosuke, Michael Kaufmann, Michael Köller, Mike Frysinger, Nicholas Race, Nicolas Noble, Petri Koistinen, Sam Hurst, Tatsuhiro Tsujikawa.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;You need a built Apache httpd 2.4.34 or newer, including apxs and headers to compile and run this module. Additionally, you need an installed libnghttp2, at least in version 1.7.0. And additionally, you want an installed OpenSSL 1.0.2 or later.&lt;/p&gt; &#xA;&lt;p&gt;tl;dr&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;You need an installed recent Apache 2.4.x&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Apache 2.4.x Packages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ubuntu&lt;/strong&gt;: &lt;a href=&#34;https://launchpad.net/~ondrej/+archive/ubuntu/apache2&#34;&gt;ppa by ondrej&lt;/a&gt; for Ubuntu 14.04 and others&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fedora&lt;/strong&gt;: &lt;a href=&#34;https://bodhi.fedoraproject.org/updates/?packages=httpd&#34;&gt;shipped in Fedora 23 and later&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Debian&lt;/strong&gt; sid (unstable) &lt;a href=&#34;https://wiki.debian.org/InstallFAQ#Q._How_do_I_install_.22unstable.22_.28.22sid.22.29.3F&#34;&gt;how to install debian sid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Gentoo&lt;/strong&gt;: &lt;a href=&#34;https://packages.gentoo.org/packages/www-servers/apache&#34;&gt;latest stable&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;FreeBSD&lt;/strong&gt;: &lt;a href=&#34;http://www.freshports.org/www/apache24/&#34;&gt;Apache 2.4 port includes mod_http2&lt;/a&gt; / &lt;a href=&#34;http://www.freshports.org/www/mod_http2/&#34;&gt;mod_http2 port&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Changes&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;code&gt;ChangeLog&lt;/code&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Tests&lt;/h2&gt; &#xA;&lt;p&gt;I decided to make the test suite part of this repository again. The existing suite resides in test Apache httpd test repository and is a set of shell scripts. It works, but I miss features that professional test frameworks bring. The tests included here use &lt;code&gt;python3&lt;/code&gt; and &lt;code&gt;pytest&lt;/code&gt; which I think is an excellent way to do tests. I use it also in my Let&#39;s Encrypt module &lt;code&gt;mod_md&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can build the module without having the test prerequisites. If you want to run them, however, you need &lt;code&gt;pytest&lt;/code&gt;, &lt;code&gt;python3&lt;/code&gt; and a &lt;code&gt;curl&lt;/code&gt; with http2 support. Then you can&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; make&#xA;&amp;gt; make test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;code&gt;mod_proxy_http2&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;This module is part of the Apache httpd proxy architecture and functions similar to &lt;code&gt;mod_proxy_http&lt;/code&gt; and friends. To configure it, you need to use &lt;code&gt;h2:&lt;/code&gt; or &lt;code&gt;h2c:&lt;/code&gt; in the proxy URL. Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;Proxy &#34;balancer://h2-local&#34;&amp;gt;&#xA;    BalancerMember &#34;h2://test.example.org:SUBST_PORT_HTTPS_SUBST&#34;&#xA;&amp;lt;/Proxy&amp;gt;&#xA;&amp;lt;Proxy &#34;balancer://h2c-local&#34;&amp;gt;&#xA;    BalancerMember &#34;h2c://test.example.org:SUBST_PORT_HTTP_SUBST&#34;&#xA;&amp;lt;/Proxy&amp;gt;&#xA;&#xA;&amp;lt;IfModule proxy_http2_module&amp;gt;&#xA;    ProxyPass &#34;/h2proxy&#34; &#34;balancer://h2-local&#34;&#xA;    ProxyPassReverse &#34;/h2proxy&#34; &#34;balancer://h2-local&#34;&#xA;    ProxyPass &#34;/h2cproxy&#34; &#34;balancer://h2c-local&#34;&#xA;    ProxyPassReverse &#34;/h2cproxy&#34; &#34;balancer://h2c-local&#34;&#xA;&amp;lt;/IfModule&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will only work under the following conditions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;the backend speaks HTTP/2, the module will not fallback to HTTP/1.1&lt;/li&gt; &#xA; &lt;li&gt;the backend supports HTTP/2 direct mode (see also &lt;code&gt;H2Direct&lt;/code&gt; directive of &lt;code&gt;mod_http2&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All other common httpd &lt;code&gt;proxy&lt;/code&gt; directives also apply.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The official &lt;a href=&#34;https://httpd.apache.org/docs/2.4/en/mod/mod_http2.html&#34;&gt;Apache documentation of the module&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;I also compiled a &lt;a href=&#34;https://icing.github.io/mod_h2/howto.html&#34;&gt;how to h2 in apache&lt;/a&gt; document with advice on how to deploy, configure and verify your &lt;code&gt;mod_h[ttp]2&lt;/code&gt; installation.&lt;/p&gt; &#xA;&lt;h2&gt;Build from git&lt;/h2&gt; &#xA;&lt;p&gt;Still not dissuaded? Ok, here are some hints to get you started. Building from git is easy, but please be sure that at least autoconf 2.68 is used:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; autoreconf -i&#xA;&amp;gt; automake&#xA;&amp;gt; autoconf&#xA;&amp;gt; ./configure --with-apxs=&amp;lt;path to apxs&amp;gt;&#xA;&amp;gt; make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;Please see the file called LICENSE.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This work has been funded by the GSM Association (&lt;a href=&#34;http://gsma.com&#34;&gt;http://gsma.com&lt;/a&gt;). The module itself was heavily influenced by mod_spdy, the Google implementation of their SPDY protocol. And without Tatsuhiro Tsujikawa excellent nghttp2 work, this would not have been possible.&lt;/p&gt; &#xA;&lt;p&gt;Münster, 04.11.2019,&lt;/p&gt; &#xA;&lt;p&gt;Stefan Eissing, greenbytes GmbH&lt;/p&gt; &#xA;&lt;p&gt;Copying and distribution of this file, with or without modification, are permitted in any medium without royalty provided the copyright notice and this notice are preserved. This file is offered as-is, without warranty of any kind. See LICENSE for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cppla/ServerStatus</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/cppla/ServerStatus</id>
    <link href="https://github.com/cppla/ServerStatus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;云探针、多服务器探针、云监控、多服务器云监控，演示： https://tz.cloudcpp.com/&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ServerStatus中文版：&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ServerStatus中文版是一个酷炫高逼格的云探针、云监控、服务器云监控、多服务器探针~。&lt;/li&gt; &#xA; &lt;li&gt;在线演示：&lt;a href=&#34;https://tz.cloudcpp.com&#34;&gt;https://tz.cloudcpp.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cppla/ServerStatus&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/python-2.7%2B%20-blue.svg?sanitize=true&#34; alt=&#34;Python Support&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cppla/ServerStatus&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/C++-GNU-blue.svg?style=flat&amp;amp;logo=cplusplus&#34; alt=&#34;C++ Compiler&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cppla/ServerStatus&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-4EB1BA.svg?style=flat-square&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/cppla/ServerStatus&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Version-Beta%201.0.8-red&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://dl.cpp.la/Archive/serverstatus-latest.png&#34; alt=&#34;Latest Version&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;curl -sSL https://get.docker.com/ | sh &amp;amp;&amp;amp; apt -y install docker-compose&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;目录介绍：&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;clients 客户端文件&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;server 服务端文件&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;web 网站文件&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;server/config.json 探针配置文件 &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;web/json 探针月流量&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;自动部署：&lt;/h1&gt; &#xA;&lt;p&gt;【服务端】：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;`OneTouch`:     &#xA;&#xA;wget --no-check-certificate -qO ~/serverstatus-config.json https://raw.githubusercontent.com/cppla/ServerStatus/master/server/config.json &amp;amp;&amp;amp; mkdir ~/serverstatus-monthtraffic    &#xA;docker run -d --restart=always --name=serverstatus -v ~/serverstatus-config.json:/ServerStatus/server/config.json -v ~/serverstatus-monthtraffic:/usr/share/nginx/html/json -p 80:80 -p 35601:35601 cppla/serverstatus:latest     &#xA;&#xA;`ServerStatus`: docker-compose up -d    &#xA;&#xA;`ServerStatus with tgbot`: TG_CHAT_ID=你的电报ID TG_BOT_TOKEN=你的电报密钥 docker-compose -f docker-compose-telegram.yml up -d   &#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;【客户端】：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget --no-check-certificate -qO client-linux.py &#39;https://raw.githubusercontent.com/cppla/ServerStatus/master/clients/client-linux.py&#39; &amp;amp;&amp;amp; nohup python3 client-linux.py SERVER={$SERVER} USER={$USER} PASSWORD={$PASSWORD} &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&#xA;&#xA;eg:&#xA;wget --no-check-certificate -qO client-linux.py &#39;https://raw.githubusercontent.com/cppla/ServerStatus/master/clients/client-linux.py&#39; &amp;amp;&amp;amp; nohup python3 client-linux.py SERVER=45.79.67.132 USER=s04  &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;手动安装教程：&lt;/h1&gt; &#xA;&lt;p&gt;【克隆代码】:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/cppla/ServerStatus.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;【服务端配置】:&lt;/p&gt; &#xA;&lt;p&gt;一、生成服务端程序&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd ServerStatus/server&#xA;make&#xA;./sergate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果没错误提示，OK，ctrl+c关闭；如果有错误提示，检查35601端口是否被占用&lt;/p&gt; &#xA;&lt;p&gt;二、修改配置文件&lt;br&gt; 修改config.json文件，注意username, password的值需要和客户端对应一致 &amp;nbsp; &amp;nbsp;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#34;servers&#34;:&#xA;&#x9;[&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#34;username&#34;: &#34;s01&#34;,&#xA;&#x9;&#x9;&#x9;&#34;name&#34;: &#34;vps-1&#34;,&#xA;&#x9;&#x9;&#x9;&#34;type&#34;: &#34;kvm&#34;,&#xA;&#x9;&#x9;&#x9;&#34;host&#34;: &#34;chengdu&#34;,&#xA;&#x9;&#x9;&#x9;&#34;location&#34;: &#34;🇨🇳&#34;,&#xA;&#x9;&#x9;&#x9;&#34;password&#34;: &#34;USER_DEFAULT_PASSWORD&#34;,&#xA;&#x9;&#x9;&#x9;&#34;monthstart&#34;: 1&#xA;&#x9;&#x9;},&#xA;&#x9;]&#xA;}       &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;三、拷贝ServerStatus/status到你的网站目录&lt;br&gt; 例如：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo cp -r ServerStatus/web/* /home/wwwroot/default&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;四、运行服务端：&lt;br&gt; web-dir参数为上一步设置的网站根目录，务必修改成自己网站的路径&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./sergate --config=config.json --web-dir=/home/wwwroot/default   &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;【客户端配置】：&lt;br&gt; 客户端有两个版本，client-linux为普通linux，client-psutil为跨平台版，普通版不成功，换成跨平台版即可。&lt;/p&gt; &#xA;&lt;p&gt;一、client-linux版配置：&lt;br&gt; 1、vim client-linux.py, 修改SERVER地址，username帐号， password密码&lt;br&gt; 2、python3 client-linux.py 运行即可。&lt;/p&gt; &#xA;&lt;p&gt;二、client-psutil版配置:&lt;br&gt; 1、安装psutil跨平台依赖库&lt;br&gt; 2、vim client-psutil.py, 修改SERVER地址，username帐号， password密码&lt;br&gt; 3、python3 client-psutil.py 运行即可。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;### for Centos：&#xA;sudo yum -y install epel-release&#xA;sudo yum -y install python3-pip&#xA;sudo yum clean all&#xA;sudo yum -y install gcc&#xA;sudo yum -y install python3-devel&#xA;sudo pip3 install psutil&#xA;&#xA;### for Ubuntu/Debian:&#xA;sudo apt -y install python3-pip&#xA;sudo pip3 install psutil&#xA;&#xA;### for Windows:&#xA;地址：https://pypi.org/project/psutil/    &#xA;下载psutil for windows, 安装即可&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;打开云探针页面，就可以正常的监控。接下来把服务器和客户端脚本自行加入开机启动，或者进程守护，或以后台方式运行即可！例如： nohup python3 client-linux.py &amp;amp;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;extra scene (run web/ssview.py)&lt;/code&gt; &lt;img src=&#34;http://dl.cpp.la/Archive/serverstatus-shell.png&#34; alt=&#34;Shell View&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Make Better&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;BotoX：&lt;a href=&#34;https://github.com/BotoX/ServerStatus&#34;&gt;https://github.com/BotoX/ServerStatus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;mojeda: &lt;a href=&#34;https://github.com/mojeda&#34;&gt;https://github.com/mojeda&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;mojeda&#39;s ServerStatus: &lt;a href=&#34;https://github.com/mojeda/ServerStatus&#34;&gt;https://github.com/mojeda/ServerStatus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;BlueVM&#39;s project: &lt;a href=&#34;http://www.lowendtalk.com/discussion/comment/169690#Comment_169690&#34;&gt;http://www.lowendtalk.com/discussion/comment/169690#Comment_169690&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Jetbrains&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/?from=ServerStatus&#34;&gt;&lt;img src=&#34;https://resources.jetbrains.com/storage/products/company/brand/logos/jb_square.png&#34; width=&#34;100px&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>FreeRDP/FreeRDP</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/FreeRDP/FreeRDP</id>
    <link href="https://github.com/FreeRDP/FreeRDP" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FreeRDP is a free remote desktop protocol library and clients&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FreeRDP: A Remote Desktop Protocol Implementation&lt;/h1&gt; &#xA;&lt;p&gt;FreeRDP is a free implementation of the Remote Desktop Protocol (RDP), released under the Apache license. Enjoy the freedom of using your software wherever you want, the way you want it, in a world where interoperability can finally liberate your computing experience.&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;p&gt;Project website: &lt;a href=&#34;https://www.freerdp.com/&#34;&gt;https://www.freerdp.com/&lt;/a&gt;&lt;br&gt; Issue tracker: &lt;a href=&#34;https://github.com/FreeRDP/FreeRDP/issues&#34;&gt;https://github.com/FreeRDP/FreeRDP/issues&lt;/a&gt;&lt;br&gt; Sources: &lt;a href=&#34;https://github.com/FreeRDP/FreeRDP/&#34;&gt;https://github.com/FreeRDP/FreeRDP/&lt;/a&gt;&lt;br&gt; Downloads: &lt;a href=&#34;https://pub.freerdp.com/releases/&#34;&gt;https://pub.freerdp.com/releases/&lt;/a&gt;&lt;br&gt; Wiki: &lt;a href=&#34;https://github.com/FreeRDP/FreeRDP/wiki&#34;&gt;https://github.com/FreeRDP/FreeRDP/wiki&lt;/a&gt;&lt;br&gt; API documentation: &lt;a href=&#34;https://pub.freerdp.com/api/&#34;&gt;https://pub.freerdp.com/api/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Security policy: &lt;a href=&#34;https://github.com/FreeRDP/FreeRDP/security/policy&#34;&gt;https://github.com/FreeRDP/FreeRDP/security/policy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Matrix room : #FreeRDP:matrix.org (main) XMPP channel: #FreeRDP#&lt;a href=&#34;mailto:matrix.org@matrix.org&#34;&gt;matrix.org@matrix.org&lt;/a&gt; (bridged) IRC channel : #freerdp @ irc.oftc.net (bridged) Mailing list: &lt;a href=&#34;https://lists.sourceforge.net/lists/listinfo/freerdp-devel&#34;&gt;https://lists.sourceforge.net/lists/listinfo/freerdp-devel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Microsoft Open Specifications&lt;/h2&gt; &#xA;&lt;p&gt;Information regarding the Microsoft Open Specifications can be found at: &lt;a href=&#34;https://www.microsoft.com/openspecifications/&#34;&gt;https://www.microsoft.com/openspecifications/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A list of reference documentation is maintained here: &lt;a href=&#34;https://github.com/FreeRDP/FreeRDP/wiki/Reference-Documentation&#34;&gt;https://github.com/FreeRDP/FreeRDP/wiki/Reference-Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Compilation&lt;/h2&gt; &#xA;&lt;p&gt;Instructions on how to get started compiling FreeRDP can be found on the wiki: &lt;a href=&#34;https://github.com/FreeRDP/FreeRDP/wiki/Compilation&#34;&gt;https://github.com/FreeRDP/FreeRDP/wiki/Compilation&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>RT-Thread/rt-thread</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/RT-Thread/rt-thread</id>
    <link href="https://github.com/RT-Thread/rt-thread" rel="alternate"></link>
    <summary type="html">&lt;p&gt;RT-Thread is an open source IoT operating system.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/documentation/figures/logo.png&#34; width=&#34;60%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;English&lt;/strong&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/README_zh.md&#34;&gt;中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/README_es.md&#34;&gt;Español&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/README_de.md&#34;&gt;Deutsch&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/RT-Thread/rt-thread/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/RT-Thread/rt-thread.svg?sanitize=true&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/RT-Thread/rt-thread/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/RT-Thread/rt-thread.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/RT-Thread/rt-thread&#34;&gt;&lt;img src=&#34;https://travis-ci.org/RT-Thread/rt-thread.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/RT-Thread/rt-thread?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/RT-Thread/rt-thread/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-pr/RT-Thread/rt-thread.svg?sanitize=true&#34; alt=&#34;GitHub pull-requests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/RT-Thread/rt-thread/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;RT-Thread&lt;/h1&gt; &#xA;&lt;p&gt;RT-Thread was born in 2006, it is an open source, neutral, and community-based real-time operating system (RTOS).&lt;/p&gt; &#xA;&lt;p&gt;RT-Thread is mainly written in C language, easy to understand and easy to port(can be quickly port to a wide range of mainstream MCUs and module chips). It applies object-oriented programming methods to real-time system design, making the code elegant, structured, modular, and very tailorable.&lt;/p&gt; &#xA;&lt;p&gt;RT-Thread has Standard version and Nano version. For resource-constrained microcontroller (MCU) systems, the Nano version that requires only 3KB Flash and 1.2KB RAM memory resources can be tailored with easy-to-use tools. For resource-rich IoT devices, RT-Thread can use the on-line software package management tool, together with system configuration tools, to achieve intuitive and rapid modular cutting, seamlessly import rich software packages; thus, achieving complex functions like Android&#39;s graphical interface and touch sliding effects, smart voice interaction effects, and so on.&lt;/p&gt; &#xA;&lt;h2&gt;RT-Thread Architecture&lt;/h2&gt; &#xA;&lt;p&gt;RT-Thread has not only a real-time kernel, but also rich components. Its architecture is as follows:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/documentation/figures/architecture.png&#34; alt=&#34;architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Kernel layer: RT-Thread kernel, the core part of RT-Thread, includes the implementation of objects in the kernel system, such as multi-threading and its scheduling, semaphore, mailbox, message queue, memory management, timer, etc.; libcpu/BSP (Chip Migration Related Files/Board Support Package) is closely related to hardware and consists of peripheral drivers and CPU porting.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Components and Service Layer: Components are based on upper-level software on top of the RT-Thread kernel, such as virtual file systems, FinSH command-line interfaces, network frameworks, device frameworks, and more. Its modular design allows for high internal cohesion inside the components and low coupling between components.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://packages.rt-thread.org/en/index.html&#34;&gt;RT-Thread software package&lt;/a&gt;: A general-purpose software component running on the RT-Thread IoT operating system platform for different application areas, consisting of description information, source code or library files. RT-Thread provides an open package platform with officially available or developer-supplied packages that provide developers with a choice of reusable packages that are an important part of the RT-Thread ecosystem. The package ecosystem is critical to the choice of an operating system because these packages are highly reusable and modular, making it easy for application developers to build the system they want in the shortest amount of time. RT-Thread supports more than 370 software packages.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;RT-Thread Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Designed for resource-constrained devices, the minimum kernel requires only 1.2KB of RAM and 3 KB of Flash.&lt;/li&gt; &#xA; &lt;li&gt;A variety of standard interfaces, such as POSIX, CMSIS, C++ application environment.&lt;/li&gt; &#xA; &lt;li&gt;Has rich components and a prosperous and fast growing package ecosystem.&lt;/li&gt; &#xA; &lt;li&gt;Elegant code style, easy to use, read and master.&lt;/li&gt; &#xA; &lt;li&gt;High Scalability. RT-Thread has high-quality scalable software architecture, loose coupling, modularity, is easy to tailor and expand.&lt;/li&gt; &#xA; &lt;li&gt;Supports high-performance applications.&lt;/li&gt; &#xA; &lt;li&gt;Supports all mainstream compiling tools such as GCC, Keil and IAR.&lt;/li&gt; &#xA; &lt;li&gt;Supports a wide range of &lt;a href=&#34;https://www.rt-thread.io/board.html&#34;&gt;architectures and chips&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code Catalogue&lt;/h2&gt; &#xA;&lt;p&gt;RT-Thread source code catalog is shown as follow:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;BSP&lt;/td&gt; &#xA;   &lt;td&gt;Board Support Package based on the porting of various development boards&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;components&lt;/td&gt; &#xA;   &lt;td&gt;Components, such as finsh shell, file system, protocol stack etc.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;documentation&lt;/td&gt; &#xA;   &lt;td&gt;Related documents, like coding style, doxygen etc.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;examples&lt;/td&gt; &#xA;   &lt;td&gt;Related sample code&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;include&lt;/td&gt; &#xA;   &lt;td&gt;Head files of RT-Thread kernel&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;libcpu&lt;/td&gt; &#xA;   &lt;td&gt;CPU porting code such as ARM/MIPS/RISC-V etc.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;src&lt;/td&gt; &#xA;   &lt;td&gt;The source files for the RT-Thread kernel.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tools&lt;/td&gt; &#xA;   &lt;td&gt;The script files for the RT-Thread command build tool.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;RT-Thread has now been ported for nearly 200 development boards, most BSPs support MDK, IAR development environment and GCC compiler, and have provided default MDK and IAR project, which allows users to add their own application code directly based on the project. Each BSP has a similar directory structure, and most BSPs provide a README.md file, which is a markdown-format file that contains the basic introduction of BSP, and introduces how to simply start using BSP.&lt;/p&gt; &#xA;&lt;h1&gt;Resources&lt;/h1&gt; &#xA;&lt;h2&gt;Supported Architectures&lt;/h2&gt; &#xA;&lt;p&gt;RT-Thread supports many architectures, and has covered the major architectures in current applications. Architecture and chip manufacturer involved:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;ARM Cortex-M0/M0+&lt;/strong&gt;：manufacturers like ST&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ARM Cortex-M3&lt;/strong&gt;：manufacturers like ST、Winner Micro、MindMotion, ect.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ARM Cortex-M4&lt;/strong&gt;：manufacturers like ST、Nuvton、NXP、GigaDevice、Realtek、Ambiq Micro, ect.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ARM Cortex-M7&lt;/strong&gt;：manufacturers like ST、NXP&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ARM Cortex-M23&lt;/strong&gt;：manufacturers like GigaDevice&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ARM Cortex-M33&lt;/strong&gt;：manufacturers like ST&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ARM Cortex-R4&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ARM Cortex-A8/A9&lt;/strong&gt;：manufacturers like NXP&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ARM7&lt;/strong&gt;：manufacturers like Samsung&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ARM9&lt;/strong&gt;：manufacturers like Allwinner、Xilinx 、GOKE&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ARM11&lt;/strong&gt;：manufacturers like Fullhan&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MIPS32&lt;/strong&gt;：manufacturers like loongson、Ingenic&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;RISC-V&lt;/strong&gt;：manufacturers like Hifive、Kendryte、Nuclei&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ARC&lt;/strong&gt;：manufacturers like SYNOPSYS&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;DSP&lt;/strong&gt;：manufacturers like TI&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;C-Sky&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;x86&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported IDE and Compiler&lt;/h2&gt; &#xA;&lt;p&gt;The main IDE/compilers supported by RT-Thread are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RT-Thread Studio IDE&lt;/li&gt; &#xA; &lt;li&gt;MDK KEIL&lt;/li&gt; &#xA; &lt;li&gt;IAR&lt;/li&gt; &#xA; &lt;li&gt;GCC&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;RT-Thread Studio IDE&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.rt-thread.io/document/site/rtthread-studio/um/studio-user-manual/&#34;&gt;User Manual&lt;/a&gt; | &lt;a href=&#34;https://youtu.be/ucq5eJgZIQg&#34;&gt;Tutorial Videos&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;RT-Thread Studio IDE (a.k.a. RT-Studio) is a one-stop intergrated development environment built by RT-Thread team. It has a easy-to-use graphical configuration system and a wealth of software packages and components resources. RT-Studio has the features of project creation, configuration and management,as well as code editing, SDK management, build configuration, debugging configuration, program download and debug. We&#39;re looking to make the use of RT-Studio as intuitive as possible, reducing the duplication of work and improving the development efficiency.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/documentation/figures/studio.gif&#34; alt=&#34;studio&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Env Tool&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/documentation/env/env/&#34;&gt;User Manual&lt;/a&gt; | &lt;a href=&#34;https://www.youtube.com/watch?v=dEK94o_YoSo&#34;&gt;Tutorial Videos&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In the early stage, RT-Thread team also created an auxiliary tool called Env. It is an auxiliary tool with a TUI (Text-based user interface). Developers can use Env tool to configure and generate the GCC, Keil MDK, and IAR projects.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/documentation/figures/env.png&#34; alt=&#34;env&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.rt-thread.io/document/site/tutorial/quick-start/introduction/introduction/&#34;&gt;RT-Thread Programming Guide&lt;/a&gt; | &lt;a href=&#34;https://www.rt-thread.io/studio.html&#34;&gt;RT-Thread Studio IDE&lt;/a&gt; | &lt;a href=&#34;https://github.com/RT-Thread-packages/kernel-sample&#34;&gt;Kernel Sample&lt;/a&gt; | &lt;a href=&#34;https://www.youtube.com/watch?v=ZMi1O-Rr7yc&amp;amp;list=PLXUV89C_M3G5KVw2IerI-pqApdSM_IaZo&#34;&gt;RT-Thread Beginners Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Based on &lt;a href=&#34;https://github.com/RT-Thread/rt-thread/tree/master/bsp/stm32/stm32f103-blue-pill&#34;&gt;STM32F103 BluePill&lt;/a&gt; | &lt;a href=&#34;https://github.com/RT-Thread/rt-thread/tree/master/bsp/raspberry-pico&#34;&gt;Raspberry Pi Pico&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Simulator&lt;/h2&gt; &#xA;&lt;p&gt;RT-Thread BSP can be compiled directly and downloaded to the corresponding development board for use. In addition, RT-Thread also provides qemu-vexpress-a9 BSP, which can be used without hardware platform. See the getting started guide below for details. Getting Started of QEMU with Env: &lt;a href=&#34;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/documentation/quick-start/quick_start_qemu/quick_start_qemu.md&#34;&gt;Windows&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/documentation/quick-start/quick_start_qemu/quick_start_qemu_linux.md&#34;&gt;Linux Ubuntu&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/documentation/quick-start/quick_start_qemu/quick_start_qemu_macos.md&#34;&gt;Mac OS&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;RT-Thread is an open source software and has been licensed under Apache License Version 2.0 since v3.1.1. License information and copyright information can generally be seen at the beginning of the code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;/* Copyright (c) 2006-2018, RT-Thread Development Team&#xA; *&#xA; * SPDX-License-Identifier: Apache-2.0&#xA; * ...&#xA; */&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Community&lt;/h1&gt; &#xA;&lt;p&gt;RT-Thread is very grateful for the support from all community developers, and if you have any ideas, suggestions or questions in the process of using RT-Thread, RT-Thread can be reached by the following means, and we are also updating RT-Thread in real time on these channels. At the same time, any questions can be asked in the &lt;a href=&#34;https://github.com/RT-Thread/rt-thread/issues&#34;&gt;issue section of RT-Thread repository&lt;/a&gt; or &lt;a href=&#34;https://club.rt-thread.io/&#34;&gt;RT-Thread forum&lt;/a&gt;, and community members will answer them.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.rt-thread.io&#34;&gt;Website&lt;/a&gt; | &lt;a href=&#34;https://github.com/RT-Thread/rt-thread&#34;&gt;Github&lt;/a&gt; | &lt;a href=&#34;https://twitter.com/rt_thread&#34;&gt;Twitter&lt;/a&gt; | &lt;a href=&#34;https://www.linkedin.com/company/rt-thread-iot-os/posts/?feedView=all&#34;&gt;LinkedIn&lt;/a&gt; | &lt;a href=&#34;https://www.youtube.com/channel/UCdDHtIfSYPq4002r27ffqPw&#34;&gt;Youtube&lt;/a&gt; | &lt;a href=&#34;https://www.facebook.com/RT-Thread-IoT-OS-110395723808463/?modal=admin_todo_tour&#34;&gt;Facebook&lt;/a&gt; | &lt;a href=&#34;https://rt-thread.medium.com/&#34;&gt;Medium&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contribution&lt;/h1&gt; &#xA;&lt;p&gt;If you are interested in RT-Thread and want to join in the development of RT-Thread and become a code contributor,please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/RT-Thread/rt-thread/master/documentation/contribution_guide/contribution_guide.md&#34;&gt;Code Contribution Guide&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>libevent/libevent</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/libevent/libevent</id>
    <link href="https://github.com/libevent/libevent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Event notification library&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://libevent.org/libevent3.png&#34; alt=&#34;libevent logo&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/libevent/libevent/actions?query=workflow%3Alinux&#34;&gt;&lt;img src=&#34;https://github.com/libevent/libevent/workflows/linux/badge.svg?sanitize=true&#34; alt=&#34;CI linux&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/libevent/libevent/actions?query=workflow%3Awindows&#34;&gt;&lt;img src=&#34;https://github.com/libevent/libevent/workflows/windows/badge.svg?sanitize=true&#34; alt=&#34;CI windows&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/libevent/libevent/actions?query=workflow%3Amingw&#34;&gt;&lt;img src=&#34;https://github.com/libevent/libevent/workflows/mingw/badge.svg?sanitize=true&#34; alt=&#34;CI mingw&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/libevent/libevent/actions?query=workflow%3Amacos&#34;&gt;&lt;img src=&#34;https://github.com/libevent/libevent/workflows/macos/badge.svg?sanitize=true&#34; alt=&#34;CI macos&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://coveralls.io/github/libevent/libevent&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/libevent/libevent/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/libevent/libevent?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/libevent/libevent.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/libevent/libevent&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://libevent.org/doc&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/doxygen-documentation-blue.svg?sanitize=true&#34; alt=&#34;doxygen&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;1. BUILDING AND INSTALLATION&lt;/h1&gt; &#xA;&lt;h2&gt;Autoconf&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./configure&#xA;$ make&#xA;$ make verify   # (optional)&#xA;$ sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/libevent/libevent/master/Documentation/Building.md#autoconf&#34;&gt;Documentation/Building#Autoconf&lt;/a&gt; for more information&lt;/p&gt; &#xA;&lt;h2&gt;CMake (Windows)&lt;/h2&gt; &#xA;&lt;p&gt;Install CMake: &lt;a href=&#34;https://www.cmake.org&#34;&gt;https://www.cmake.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ md build &amp;amp;&amp;amp; cd build&#xA;$ cmake -G &#34;Visual Studio 10&#34; ..   # Or use any generator you want to use. Run cmake --help for a list&#xA;$ cmake --build . --config Release # Or &#34;start libevent.sln&#34; and build with menu in Visual Studio.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/libevent/libevent/master/Documentation/Building.md#building-on-windows&#34;&gt;Documentation/Building#Building on Windows&lt;/a&gt; for more information&lt;/p&gt; &#xA;&lt;h2&gt;CMake (Unix)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mkdir build &amp;amp;&amp;amp; cd build&#xA;$ cmake ..     # Default to Unix Makefiles.&#xA;$ make&#xA;$ make verify  # (optional)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/libevent/libevent/master/Documentation/Building.md#building-on-unix-cmake&#34;&gt;Documentation/Building#Building on Unix (With CMake)&lt;/a&gt; for more information&lt;/p&gt; &#xA;&lt;h2&gt;Package Managers&lt;/h2&gt; &#xA;&lt;p&gt;You can download and install libevent using the &lt;a href=&#34;https://github.com/Microsoft/vcpkg&#34;&gt;vcpkg&lt;/a&gt; dependency manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/Microsoft/vcpkg.git&#xA;cd vcpkg&#xA;./bootstrap-vcpkg.sh&#xA;./vcpkg integrate install&#xA;./vcpkg install libevent&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The libevent port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please &lt;a href=&#34;https://github.com/Microsoft/vcpkg&#34;&gt;create an issue or pull request&lt;/a&gt; on the vcpkg repository.&lt;/p&gt; &#xA;&lt;h1&gt;2. USEFUL LINKS:&lt;/h1&gt; &#xA;&lt;p&gt;For the latest released version of Libevent, see the official website at &lt;a href=&#34;http://libevent.org/&#34;&gt;http://libevent.org/&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;p&gt;There&#39;s a pretty good work-in-progress manual up at &lt;a href=&#34;http://www.wangafu.net/~nickm/libevent-book/&#34;&gt;http://www.wangafu.net/~nickm/libevent-book/&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;p&gt;For the latest development versions of Libevent, access our Git repository via&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/libevent/libevent.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can browse the git repository online at:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/libevent/libevent&#34;&gt;https://github.com/libevent/libevent&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To report bugs, issues, or ask for new features:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Patches&lt;/strong&gt;: &lt;a href=&#34;https://github.com/libevent/libevent/pulls&#34;&gt;https://github.com/libevent/libevent/pulls&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;OK, those are not really &lt;em&gt;patches&lt;/em&gt;. You fork, modify, and hit the &#34;Create Pull Request&#34; button. You can still submit normal git patches via the mailing list.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Bugs, Features [RFC], and Issues&lt;/strong&gt;: &lt;a href=&#34;https://github.com/libevent/libevent/issues&#34;&gt;https://github.com/libevent/libevent/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Or you can do it via the mailing list.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;There&#39;s also a libevent-users mailing list for talking about Libevent use and development:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://archives.seul.org/libevent/users/&#34;&gt;http://archives.seul.org/libevent/users/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;3. ACKNOWLEDGMENTS&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/libevent/libevent/master/CONTRIBUTORS.md&#34;&gt;following people&lt;/a&gt; have helped with suggestions, ideas, code or fixing bugs.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>eradman/entr</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/eradman/entr</id>
    <link href="https://github.com/eradman/entr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Run arbitrary commands when files change&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Event Notify Test Runner&lt;/h1&gt; &#xA;&lt;p&gt;A utility for running arbitrary commands when files change. Uses &lt;a href=&#34;http://man.openbsd.org/kqueue.2&#34;&gt;kqueue(2)&lt;/a&gt; or &lt;a href=&#34;http://man.he.net/?section=all&amp;amp;topic=inotify&#34;&gt;inotify(7)&lt;/a&gt; to avoid polling. &lt;code&gt;entr&lt;/code&gt; was written to make rapid feedback and automated testing natural and completely ordinary.&lt;/p&gt; &#xA;&lt;h2&gt;Source Installation - BSD, Mac OS, and Linux&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;./configure&#xA;make test&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To see available build options run &lt;code&gt;./configure -h&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Docker and WSL&lt;/h2&gt; &#xA;&lt;p&gt;Incomplete inotify support on Windows Subsystem for Linux and Docker for Mac can cause &lt;code&gt;entr&lt;/code&gt; to respond inconsistently. Setting the environment variable &lt;code&gt;ENTR_INOTIFY_WORKAROUND&lt;/code&gt; will enable &lt;code&gt;entr&lt;/code&gt; to operate in these environments.&lt;/p&gt; &#xA;&lt;h2&gt;Linux Features&lt;/h2&gt; &#xA;&lt;p&gt;Symlinks can be monitored for changes by setting the environment variable &lt;code&gt;ENTR_INOTIFY_SYMLINK&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Man Page Examples&lt;/h2&gt; &#xA;&lt;p&gt;Rebuild a project if source files change, limiting output to the first 20 lines:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ find src/ | entr sh -c &#39;make | head -n 20&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Launch and auto-reload a node.js server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ls *.js | entr -r node app.js&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Clear the screen and run a query after the SQL script is updated:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ echo my.sql | entr -cp psql -f /_&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Rebuild project if a source file is modified or added to the src/ directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ while sleep 0.1; do ls src/*.rb | entr -d make; done&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Auto-reload a web server, or terminate if the server exits&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ls * | entr -rz ./httpd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;p&gt;A release history as well as features in the upcoming release are covered in the &lt;a href=&#34;https://raw.githubusercontent.com/eradman/entr/master/NEWS&#34;&gt;NEWS&lt;/a&gt; file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>emscripten-core/emscripten</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/emscripten-core/emscripten</id>
    <link href="https://github.com/emscripten-core/emscripten" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Emscripten: An LLVM-to-WebAssembly Compiler&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/emscripten-core/emscripten/main/media/switch_logo.png&#34; alt=&#34;emscripten logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Main project page: &lt;a href=&#34;https://emscripten.org&#34;&gt;https://emscripten.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;GitHub CI status: &lt;a href=&#34;https://circleci.com/gh/emscripten-core/emscripten/tree/main&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/emscripten-core/emscripten.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Chromium builder status: &lt;a href=&#34;https://ci.chromium.org/p/emscripten-releases&#34;&gt;emscripten-releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Emscripten compiles C and C++ to &lt;a href=&#34;https://webassembly.org/&#34;&gt;WebAssembly&lt;/a&gt; using &lt;a href=&#34;https://en.wikipedia.org/wiki/LLVM&#34;&gt;LLVM&lt;/a&gt; and &lt;a href=&#34;https://github.com/WebAssembly/binaryen/&#34;&gt;Binaryen&lt;/a&gt;. Emscripten output can run on the Web, in Node.js, and in &lt;a href=&#34;https://v8.dev/blog/emscripten-standalone-wasm#running-in-wasm-runtimes&#34;&gt;wasm runtimes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Emscripten provides Web support for popular portable APIs such as OpenGL and SDL2, allowing complex graphical native applications to be ported, such as the &lt;a href=&#34;https://docs.unity3d.com/Manual/webgl-gettingstarted.html&#34;&gt;Unity game engine&lt;/a&gt; and &lt;a href=&#34;https://blog.chromium.org/2019/06/webassembly-brings-google-earth-to-more.html&#34;&gt;Google Earth&lt;/a&gt;. It can probably port your codebase, too!&lt;/p&gt; &#xA;&lt;p&gt;While Emscripten mostly focuses on compiling C and C++ using &lt;a href=&#34;https://clang.llvm.org/&#34;&gt;Clang&lt;/a&gt;, it can be integrated with other LLVM-using compilers (for example, Rust has Emscripten integration, with the &lt;code&gt;wasm32-unknown-emscripten&lt;/code&gt; and &lt;code&gt;asmjs-unknown-emscripten&lt;/code&gt; targets).&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Emscripten is available under 2 licenses, the MIT license and the University of Illinois/NCSA Open Source License.&lt;/p&gt; &#xA;&lt;p&gt;Both are permissive open source licenses, with little if any practical difference between them.&lt;/p&gt; &#xA;&lt;p&gt;The reason for offering both is that (1) the MIT license is well-known and suitable for a compiler toolchain, while (2) LLVM&#39;s original license, the University of Illinois/NCSA Open Source License, was also offered to allow Emscripten&#39;s code to be integrated upstream into LLVM. The second reason became less important after Emscripten switched to the LLVM wasm backend, at which point there isn&#39;t any code we expect to move back and forth between the projects; also, LLVM relicensed to Apache 2.0 + exceptions meanwhile. In practice you can just consider Emscripten as MIT licensed (which allows you to do pretty much anything you want with a compiler, including commercial and non-commercial use).&lt;/p&gt; &#xA;&lt;p&gt;See &lt;code&gt;LICENSE&lt;/code&gt; for the full content of the licenses.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Klipper3d/klipper</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/Klipper3d/klipper</id>
    <link href="https://github.com/Klipper3d/klipper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Klipper is a 3d-printer firmware&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Welcome to the Klipper project!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.klipper3d.org/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Klipper3d/klipper/master/docs/img/klipper-logo-small.png&#34; alt=&#34;Klipper&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.klipper3d.org/&#34;&gt;https://www.klipper3d.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Klipper is a 3d-Printer firmware. It combines the power of a general purpose computer with one or more micro-controllers. See the &lt;a href=&#34;https://www.klipper3d.org/Features.html&#34;&gt;features document&lt;/a&gt; for more information on why you should use Klipper.&lt;/p&gt; &#xA;&lt;p&gt;To begin using Klipper start by &lt;a href=&#34;https://www.klipper3d.org/Installation.html&#34;&gt;installing&lt;/a&gt; it.&lt;/p&gt; &#xA;&lt;p&gt;Klipper is Free Software. See the &lt;a href=&#34;https://raw.githubusercontent.com/Klipper3d/klipper/master/COPYING&#34;&gt;license&lt;/a&gt; or read the &lt;a href=&#34;https://www.klipper3d.org/Overview.html&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>libvips/libvips</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/libvips/libvips</id>
    <link href="https://github.com/libvips/libvips" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fast image processing library with low memory needs.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;libvips : an image processing library&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/libvips/libvips/actions&#34;&gt;&lt;img src=&#34;https://github.com/libvips/libvips/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=2&amp;amp;q=proj:libvips&#34;&gt;&lt;img src=&#34;https://oss-fuzz-build-logs.storage.googleapis.com/badges/libvips.svg?sanitize=true&#34; alt=&#34;Fuzzing Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://scan.coverity.com/projects/jcupitt-libvips&#34;&gt;&lt;img src=&#34;https://scan.coverity.com/projects/6503/badge.svg?sanitize=true&#34; alt=&#34;Coverity Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/libvips/devchat?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/libvips/devchat.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;libvips is a &lt;a href=&#34;https://github.com/libvips/libvips/wiki/Why-is-libvips-quick&#34;&gt;demand-driven, horizontally threaded&lt;/a&gt; image processing library. Compared to similar libraries, &lt;a href=&#34;https://github.com/libvips/libvips/wiki/Speed-and-memory-use&#34;&gt;libvips runs quickly and uses little memory&lt;/a&gt;. libvips is licensed under the &lt;a href=&#34;https://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html&#34;&gt;LGPL 2.1+&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It has around &lt;a href=&#34;https://libvips.github.io/libvips/API/current/func-list.html&#34;&gt;300 operations&lt;/a&gt; covering arithmetic, histograms, convolution, morphological operations, frequency filtering, colour, resampling, statistics and others. It supports a large range of &lt;a href=&#34;https://libvips.github.io/libvips/API/current/VipsImage.html#VipsBandFormat&#34;&gt;numeric types&lt;/a&gt;, from 8-bit int to 128-bit complex. Images can have any number of bands. It supports a good range of image formats, including JPEG, JPEG2000, JPEG-XL, TIFF, PNG, WebP, HEIC, AVIF, FITS, Matlab, OpenEXR, PDF, SVG, HDR, PPM / PGM / PFM, CSV, GIF, Analyze, NIfTI, DeepZoom, and OpenSlide. It can also load images via ImageMagick or GraphicsMagick, letting it work with formats like DICOM.&lt;/p&gt; &#xA;&lt;p&gt;It comes with bindings for &lt;a href=&#34;https://libvips.github.io/libvips/API/current/using-from-c.html&#34;&gt;C&lt;/a&gt;, &lt;a href=&#34;https://libvips.github.io/libvips/API/current/using-from-cpp.html&#34;&gt;C++&lt;/a&gt;, and the &lt;a href=&#34;https://libvips.github.io/libvips/API/current/using-cli.html&#34;&gt;command-line&lt;/a&gt;. Full bindings are available for &lt;a href=&#34;https://rubygems.org/gems/ruby-vips&#34;&gt;Ruby&lt;/a&gt;, &lt;a href=&#34;https://pypi.python.org/pypi/pyvips&#34;&gt;Python&lt;/a&gt;, &lt;a href=&#34;https://github.com/libvips/php-vips&#34;&gt;PHP&lt;/a&gt;, &lt;a href=&#34;https://www.nuget.org/packages/NetVips&#34;&gt;C# / .NET&lt;/a&gt;, &lt;a href=&#34;https://github.com/davidbyttow/govips&#34;&gt;Go&lt;/a&gt;, and &lt;a href=&#34;https://github.com/libvips/lua-vips&#34;&gt;Lua&lt;/a&gt;. libvips is used as an image processing engine by &lt;a href=&#34;https://www.npmjs.org/package/sharp&#34;&gt;sharp (on node.js)&lt;/a&gt;, &lt;a href=&#34;https://github.com/h2non/bimg&#34;&gt;bimg&lt;/a&gt;, &lt;a href=&#34;https://github.com/DAddYE/vips&#34;&gt;sharp for Go&lt;/a&gt;, &lt;a href=&#34;https://edgeguides.rubyonrails.org/active_storage_overview.html&#34;&gt;Ruby on Rails&lt;/a&gt;, &lt;a href=&#34;https://github.com/eltiare/carrierwave-vips&#34;&gt;carrierwave-vips&lt;/a&gt;, &lt;a href=&#34;https://www.mediawiki.org/wiki/Extension:VipsScaler&#34;&gt;mediawiki&lt;/a&gt;, &lt;a href=&#34;https://github.com/aferrero2707/PhotoFlow&#34;&gt;PhotoFlow&lt;/a&gt; and others. The official libvips GUI is &lt;a href=&#34;https://github.com/libvips/nip2&#34;&gt;nip2&lt;/a&gt;, a strange combination of a spreadsheet and a photo editor.&lt;/p&gt; &#xA;&lt;h1&gt;Install&lt;/h1&gt; &#xA;&lt;p&gt;There are packages for most Unix-like operating systems, including macOS. Check your package manager.&lt;/p&gt; &#xA;&lt;p&gt;There are binaries for Windows in &lt;a href=&#34;https://github.com/libvips/libvips/releases&#34;&gt;releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://libvips.github.io/libvips&#34;&gt;libvips website&lt;/a&gt; has &lt;a href=&#34;https://libvips.github.io/libvips/install.html&#34;&gt;detailed install notes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Building from source&lt;/h1&gt; &#xA;&lt;p&gt;libvips uses the &lt;a href=&#34;https://mesonbuild.com&#34;&gt;Meson build system&lt;/a&gt;, version 0.56 or later. Meson can use &lt;a href=&#34;https://ninja-build.org&#34;&gt;&lt;code&gt;ninja&lt;/code&gt;&lt;/a&gt;, Visual Studio or XCode as a backend, so you&#39;ll also need one of them.&lt;/p&gt; &#xA;&lt;p&gt;libvips must have &lt;code&gt;build-essential&lt;/code&gt;, &lt;code&gt;pkg-config&lt;/code&gt;, &lt;code&gt;libglib2.0-dev&lt;/code&gt;, &lt;code&gt;libexpat1-dev&lt;/code&gt;. See the &lt;strong&gt;Dependencies&lt;/strong&gt; section below for a full list of the libvips optional dependencies.&lt;/p&gt; &#xA;&lt;h2&gt;Cheatsheet&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd libvips-x.y.x&#xA;meson setup build-dir --prefix=/aaa/bbb/ccc&#xA;cd build-dir&#xA;meson compile&#xA;meson test&#xA;meson install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check the output of &lt;code&gt;meson setup&lt;/code&gt; carefully and make sure it found everything you wanted it to find. Add arguments to &lt;code&gt;meson setup&lt;/code&gt; to change the build configuration.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Add flags like &lt;code&gt;-Dnsgif=false&lt;/code&gt; to turn libvips options on and off, see &lt;code&gt;meson_options.txt&lt;/code&gt; for a list of all the build options libvips supports.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add flags like &lt;code&gt;-Dmagick=disable&lt;/code&gt; to turn libvips dependencies on and off, see &lt;code&gt;meson_options.txt&lt;/code&gt; and the list below for a summary of all the libvips dependencies.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Meson will do a debug build by default. Add &lt;code&gt;--buildtype=release&lt;/code&gt; for a release (optimised) build.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You might need to add &lt;code&gt;--libdir=lib&lt;/code&gt; on Debian if you don&#39;t want the arch name in the library path.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add &lt;code&gt;--default-library=static&lt;/code&gt; for a static build.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use eg. &lt;code&gt;CC=clang CXX=clang++ meson setup ...&lt;/code&gt; to change compiler.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can have many &lt;code&gt;build-dir&lt;/code&gt;, pick whatever names you like, for example one for release and one for debug.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There&#39;s a more comprehensive test suite you can run once libvips has been installed. Use &lt;code&gt;pytest&lt;/code&gt; in the libvips base directory.&lt;/p&gt; &#xA;&lt;h2&gt;Optional dependencies&lt;/h2&gt; &#xA;&lt;p&gt;If suitable versions are found, libvips will add support for the following libraries automatically. Packages are generally found with &lt;code&gt;pkg-config&lt;/code&gt;, so make sure that is working.&lt;/p&gt; &#xA;&lt;h3&gt;libjpeg&lt;/h3&gt; &#xA;&lt;p&gt;The IJG JPEG library. Use the &lt;code&gt;-turbo&lt;/code&gt; version if you can.&lt;/p&gt; &#xA;&lt;h3&gt;libexif&lt;/h3&gt; &#xA;&lt;p&gt;If available, libvips adds support for EXIF metadata in JPEG files.&lt;/p&gt; &#xA;&lt;h3&gt;librsvg&lt;/h3&gt; &#xA;&lt;p&gt;The usual SVG loader. If this is not present, vips will try to load SVGs via imagemagick instead.&lt;/p&gt; &#xA;&lt;h3&gt;PDFium&lt;/h3&gt; &#xA;&lt;p&gt;If present, libvips will attempt to load PDFs with PDFium. Download the prebuilt pdfium binary from:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://github.com/bblanchon/pdfium-binaries&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Untar to the libvips install prefix, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd ~/vips&#xA;tar xf ~/pdfium-linux.tgz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Create a &lt;code&gt;pdfium.pc&lt;/code&gt; like this (update the version number):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;VIPSHOME=/home/john/vips&#xA;cat &amp;gt; $VIPSHOME/lib/pkgconfig/pdfium.pc &amp;lt;&amp;lt; EOF&#xA;     prefix=$VIPSHOME&#xA;     exec_prefix=\${prefix}&#xA;     libdir=\${exec_prefix}/lib&#xA;     includedir=\${prefix}/include&#xA;     Name: pdfium&#xA;     Description: pdfium&#xA;     Version: 4290&#xA;     Requires:&#xA;     Libs: -L\${libdir} -lpdfium&#xA;     Cflags: -I\${includedir}&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If PDFium is not detected, libvips will look for &lt;code&gt;poppler-glib&lt;/code&gt; instead.&lt;/p&gt; &#xA;&lt;h3&gt;poppler-glib&lt;/h3&gt; &#xA;&lt;p&gt;The Poppler PDF renderer, with a glib API. If this is not present, vips will try to load PDFs via imagemagick.&lt;/p&gt; &#xA;&lt;h3&gt;cgif&lt;/h3&gt; &#xA;&lt;p&gt;If available, libvips will save GIFs with &lt;a href=&#34;https://github.com/dloebl/cgif&#34;&gt;cgif&lt;/a&gt;. If this is not present, vips will try to save gifs via imagemagick instead.&lt;/p&gt; &#xA;&lt;h3&gt;libgsf-1&lt;/h3&gt; &#xA;&lt;p&gt;If available, libvips adds support for creating image pyramids with &lt;code&gt;dzsave&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;libtiff&lt;/h3&gt; &#xA;&lt;p&gt;The TIFF library. It needs to be built with support for JPEG and ZIP compression. 3.4b037 and later are known to be OK.&lt;/p&gt; &#xA;&lt;h3&gt;fftw3&lt;/h3&gt; &#xA;&lt;p&gt;If libvips finds this library, it uses it for fourier transforms.&lt;/p&gt; &#xA;&lt;h3&gt;lcms2&lt;/h3&gt; &#xA;&lt;p&gt;If present, &lt;code&gt;vips_icc_import()&lt;/code&gt;, &lt;code&gt;vips_icc_export()&lt;/code&gt; and &lt;code&gt;vips_icc_transform()&lt;/code&gt; can be used to manipulate images with ICC profiles.&lt;/p&gt; &#xA;&lt;h3&gt;libspng&lt;/h3&gt; &#xA;&lt;p&gt;If present, libvips will load and save PNG files using libspng. If not, it will look for the standard libpng package.&lt;/p&gt; &#xA;&lt;h3&gt;libimagequant, quantizr&lt;/h3&gt; &#xA;&lt;p&gt;If one of these quantisation packages is present, libvips can write 8-bit palette-ised PNGs and GIFs.&lt;/p&gt; &#xA;&lt;h3&gt;ImageMagick, or optionally GraphicsMagick&lt;/h3&gt; &#xA;&lt;p&gt;If available, libvips adds support for loading and saving all libMagick-supported image file types. You can enable and disable load and save separately.&lt;/p&gt; &#xA;&lt;p&gt;Imagemagick 6.9+ needs to have been built with &lt;code&gt;--with-modules&lt;/code&gt;. Most packaged IMs are, I think.&lt;/p&gt; &#xA;&lt;p&gt;If you are going to be using libvips with untrusted images, perhaps in a web server, for example, you should consider the security implications of enabling a package with such a large attack surface.&lt;/p&gt; &#xA;&lt;h3&gt;pangocairo&lt;/h3&gt; &#xA;&lt;p&gt;If available, libvips adds support for text rendering. You need the package pangocairo in &lt;code&gt;pkg-config --list-all&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;orc-0.4&lt;/h3&gt; &#xA;&lt;p&gt;If available, vips will accelerate some operations with this run-time compiler.&lt;/p&gt; &#xA;&lt;h3&gt;matio&lt;/h3&gt; &#xA;&lt;p&gt;If available, vips can load images from Matlab save files.&lt;/p&gt; &#xA;&lt;h3&gt;cfitsio&lt;/h3&gt; &#xA;&lt;p&gt;If available, vips can load FITS images.&lt;/p&gt; &#xA;&lt;h3&gt;libwebp&lt;/h3&gt; &#xA;&lt;p&gt;If available, vips can load and save WebP images.&lt;/p&gt; &#xA;&lt;h3&gt;libniftiio&lt;/h3&gt; &#xA;&lt;p&gt;If available, vips can load and save NIfTI images.&lt;/p&gt; &#xA;&lt;h3&gt;OpenEXR&lt;/h3&gt; &#xA;&lt;p&gt;If available, libvips will directly read (but not write, sadly) OpenEXR images.&lt;/p&gt; &#xA;&lt;h3&gt;OpenJPEG&lt;/h3&gt; &#xA;&lt;p&gt;If available, libvips will read and write JPEG2000 images.&lt;/p&gt; &#xA;&lt;h3&gt;libjxl&lt;/h3&gt; &#xA;&lt;p&gt;If available, libvips will read and write JPEG-XL images.&lt;/p&gt; &#xA;&lt;h3&gt;OpenSlide&lt;/h3&gt; &#xA;&lt;p&gt;If available, libvips can load OpenSlide-supported virtual slide files: Aperio, Hamamatsu, Leica, MIRAX, Sakura, Trestle, and Ventana.&lt;/p&gt; &#xA;&lt;h3&gt;libheif&lt;/h3&gt; &#xA;&lt;p&gt;If available, libvips can load and save HEIC and AVIF images. Your libheif (in turn) needs to be built with the correct decoders and encoders. You can check with eg.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ pkg-config libheif --print-variables&#xA;builtin_avif_decoder&#xA;builtin_avif_encoder&#xA;builtin_h265_decoder&#xA;builtin_h265_encoder&#xA;exec_prefix&#xA;includedir&#xA;libdir&#xA;pcfiledir&#xA;prefix&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Contributors&lt;/h1&gt; &#xA;&lt;h3&gt;Code Contributors&lt;/h3&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who contribute.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/libvips/libvips/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/libvips/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Organizations&lt;/h3&gt; &#xA;&lt;p&gt;Support this project with your organization. Your logo will show up here with a link to your website.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/libvips/organization/0/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/libvips/organization/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/libvips/organization/1/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/libvips/organization/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/libvips/organization/2/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/libvips/organization/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/libvips/organization/3/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/libvips/organization/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/libvips/organization/4/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/libvips/organization/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/libvips/organization/5/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/libvips/organization/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/libvips/organization/6/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/libvips/organization/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/libvips/organization/7/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/libvips/organization/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/libvips/organization/8/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/libvips/organization/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/libvips/organization/9/website&#34;&gt;&lt;img src=&#34;https://opencollective.com/libvips/organization/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jemalloc/jemalloc</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/jemalloc/jemalloc</id>
    <link href="https://github.com/jemalloc/jemalloc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;jemalloc is a general purpose malloc(3) implementation that emphasizes fragmentation avoidance and scalable concurrency support. jemalloc first came into use as the FreeBSD libc allocator in 2005, and since then it has found its way into numerous applications that rely on its predictable behavior. In 2010 jemalloc development efforts broadened to include developer support features such as heap profiling and extensive monitoring/tuning hooks. Modern jemalloc releases continue to be integrated back into FreeBSD, and therefore versatility remains critical. Ongoing development efforts trend toward making jemalloc among the best allocators for a broad range of demanding applications, and eliminating/mitigating weaknesses that have practical repercussions for real world applications.&lt;/p&gt; &#xA;&lt;p&gt;The COPYING file contains copyright and licensing information.&lt;/p&gt; &#xA;&lt;p&gt;The INSTALL file contains information on how to configure, build, and install jemalloc.&lt;/p&gt; &#xA;&lt;p&gt;The ChangeLog file contains a brief summary of changes for each release.&lt;/p&gt; &#xA;&lt;p&gt;URL: &lt;a href=&#34;http://jemalloc.net/&#34;&gt;http://jemalloc.net/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/msquic</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/microsoft/msquic</id>
    <link href="https://github.com/microsoft/msquic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cross-platform, C implementation of the IETF QUIC protocol, exposed to C, C++, C# and Rust.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/microsoft/msquic/main/docs/images/readme_logo.png&#34; width=&#34;500&#34; alt=&#34;MsQuic logo&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://microsoft.github.io/msquic/&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Performance&amp;amp;message=Dashboard&amp;amp;color=blue&#34; alt=&#34;Perf Dashboard&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/ms/msquic/_build/latest?definitionId=347&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://img.shields.io/azure-devops/tests/ms/msquic/347/main&#34; alt=&#34;Test Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/ms/msquic/_build/latest?definitionId=347&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://img.shields.io/azure-devops/coverage/ms/msquic/347/main&#34; alt=&#34;Code Coverage&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/microsoft/msquic/workflows/CodeQL/badge.svg?branch=main&#34; alt=&#34;CodeQL&#34;&gt; &lt;a href=&#34;https://lgtm.com/projects/g/microsoft/msquic/context:cpp&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/grade/cpp/g/microsoft/msquic.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Language grade: C/C++&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/4846&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/4846/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/YGAtCwTSsc&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/827744285595271168?label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=7289DA&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/msquic&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/msquic&#34; alt=&#34;crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.nuget.org/profiles/msquic&#34;&gt;&lt;img src=&#34;https://img.shields.io/nuget/vpre/Microsoft.Native.Quic.MsQuic.Schannel?style=plastic&#34; alt=&#34;nuget&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;MsQuic is a Microsoft implementation of the &lt;a href=&#34;https://datatracker.ietf.org/wg/quic/about/&#34;&gt;IETF QUIC&lt;/a&gt; protocol. It is cross-platform, written in C and designed to be a general purpose QUIC library. MsQuic also has C++ API wrapper classes and exposes interop layers for both Rust and C#.&lt;/p&gt; &#xA;&lt;h2&gt;Protocol Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc9000&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=RFC&amp;amp;message=9000&amp;amp;color=brightgreen&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://tools.ietf.org/html/rfc9001&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=RFC&amp;amp;message=9001&amp;amp;color=brightgreen&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://tools.ietf.org/html/rfc9002&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=RFC&amp;amp;message=9002&amp;amp;color=brightgreen&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://tools.ietf.org/html/rfc9221&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=RFC&amp;amp;message=9221&amp;amp;color=brightgreen&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://tools.ietf.org/html/draft-ietf-quic-v2&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Draft&amp;amp;message=Version%202&amp;amp;color=blue&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://tools.ietf.org/html/draft-ietf-quic-version-negotiation&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Draft&amp;amp;message=Version%20Negotiation&amp;amp;color=blue&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://tools.ietf.org/html/draft-ietf-quic-load-balancers&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Draft&amp;amp;message=Load%20Balancers&amp;amp;color=blue&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://tools.ietf.org/html/draft-ietf-quic-ack-frequency&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Draft&amp;amp;message=ACK%20Frequency&amp;amp;color=blue&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://tools.ietf.org/html/draft-banks-quic-disable-encryption&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Draft&amp;amp;message=Disable%20Encryption&amp;amp;color=blueviolet&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://tools.ietf.org/html/draft-banks-quic-performance&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Draft&amp;amp;message=Performance&amp;amp;color=blueviolet&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://tools.ietf.org/html/draft-banks-quic-cibir&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Draft&amp;amp;message=CIBIR&amp;amp;color=blueviolet&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;QUIC has many benefits when compared to existing &#34;TLS over TCP&#34; scenarios:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All packets are encrypted and handshake is authenticated with TLS 1.3.&lt;/li&gt; &#xA; &lt;li&gt;Parallel streams of (reliable and unreliable) application data.&lt;/li&gt; &#xA; &lt;li&gt;Exchange application data in the first round trip (0-RTT).&lt;/li&gt; &#xA; &lt;li&gt;Improved congestion control and loss recovery.&lt;/li&gt; &#xA; &lt;li&gt;Survives a change in the clients IP address or port.&lt;/li&gt; &#xA; &lt;li&gt;Stateless load balancing.&lt;/li&gt; &#xA; &lt;li&gt;Easily extendable for new features and extensions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Library Features&lt;/h2&gt; &#xA;&lt;p&gt;MsQuic has several features that differentiates it from other QUIC implementations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Optimized for client and server.&lt;/li&gt; &#xA; &lt;li&gt;Optimized for maximal throughput and minimal latency.&lt;/li&gt; &#xA; &lt;li&gt;Asynchronous IO.&lt;/li&gt; &#xA; &lt;li&gt;Receive side scaling (&lt;a href=&#34;https://docs.microsoft.com/en-us/windows-hardware/drivers/network/introduction-to-receive-side-scaling&#34;&gt;RSS&lt;/a&gt;) support.&lt;/li&gt; &#xA; &lt;li&gt;UDP send and receive coalescing support.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For platform support details, see the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/msquic/main/docs/Platforms.md&#34;&gt;Platforms docs&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For release details, see the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/msquic/main/docs/Release.md&#34;&gt;Release docs&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For performance data, see the &lt;a href=&#34;https://aka.ms/msquicperformance&#34;&gt;Performance dashboard&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For building the library, see the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/msquic/main/docs/BUILD.md&#34;&gt;Build docs&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For testing the library, see the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/msquic/main/docs/TEST.md&#34;&gt;Testing docs&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For using the API, see the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/msquic/main/docs/API.md&#34;&gt;API docs&lt;/a&gt; or the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/msquic/main/src/tools/sample/sample.c&#34;&gt;Sample&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For deploying QUIC, see the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/msquic/main/docs/Deployment.md&#34;&gt;Deployment docs&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For diagnosing issues, see the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/msquic/main/docs/Diagnostics.md&#34;&gt;Diagnostics docs&lt;/a&gt; and the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/msquic/main/docs/TSG.md&#34;&gt;Trouble Shooting Guide&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For other frequently asked questions, see the &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/msquic/main/docs/FAQ.md&#34;&gt;FAQs&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;For information on contributing, please see our &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/msquic/main/.github/CONTRIBUTING.md&#34;&gt;contribution guidlines&lt;/a&gt;. Feel free to take a look at our &lt;a href=&#34;https://github.com/microsoft/msquic/labels/good%20first%20issue&#34;&gt;Good First Issues&lt;/a&gt; list if you&#39;re looking for somewhere to start. If you&#39;d just like to talk, come chat with us &lt;a href=&#34;https://discord.gg/YGAtCwTSsc&#34;&gt;on Discord&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zyantific/zydis</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/zyantific/zydis</id>
    <link href="https://github.com/zyantific/zydis" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fast and lightweight x86/x86-64 disassembler and code generation library&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;zydis logo&#34; src=&#34;https://zydis.re/img/logo.svg?sanitize=true&#34; width=&#34;400px&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-MIT-blue.svg?sanitize=true&#34; alt=&#34;License: MIT&#34;&gt; &lt;a href=&#34;https://github.com/zyantific/zydis/actions&#34;&gt;&lt;img src=&#34;https://github.com/zyantific/zydis/workflows/GitHub%20Actions%20CI/badge.svg?sanitize=true&#34; alt=&#34;GitHub Actions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:zydis&#34;&gt;&lt;img src=&#34;https://oss-fuzz-build-logs.storage.googleapis.com/badges/zydis.svg?sanitize=true&#34; alt=&#34;Fuzzing Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/zyantific/zydis?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=body_badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/zyantific/zyan-disassembler-engine.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.zyantific.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/390136917779415060.svg?logo=discord&amp;amp;label=Discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Fast and lightweight x86/x86-64 disassembler and code generation library.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports all x86 and x86-64 (AMD64) instructions and &lt;a href=&#34;https://raw.githubusercontent.com/zyantific/zydis/master/include/Zydis/Generated/EnumISAExt.h&#34;&gt;extensions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Optimized for high performance&lt;/li&gt; &#xA; &lt;li&gt;No dynamic memory allocation (&#34;malloc&#34;)&lt;/li&gt; &#xA; &lt;li&gt;Thread-safe by design&lt;/li&gt; &#xA; &lt;li&gt;Very small file-size overhead compared to other common disassembler libraries&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zydis.re/doc/3/&#34;&gt;Complete doxygen documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Absolutely no third party dependencies — not even libc &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Should compile on any platform with a working C11 compiler&lt;/li&gt; &#xA;   &lt;li&gt;Tested on Windows, macOS, FreeBSD, Linux and UEFI, both user and kernel mode&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Decoder Example&lt;/h2&gt; &#xA;&lt;p&gt;The following example program uses Zydis to disassemble a given memory buffer and prints the output to the console (&lt;a href=&#34;https://raw.githubusercontent.com/zyantific/zydis/master/examples/&#34;&gt;more examples here&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-C&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&#xA;#include &amp;lt;inttypes.h&amp;gt;&#xA;#include &amp;lt;Zydis/Zydis.h&amp;gt;&#xA;&#xA;int main()&#xA;{&#xA;    ZyanU8 data[] =&#xA;    {&#xA;        0x51, 0x8D, 0x45, 0xFF, 0x50, 0xFF, 0x75, 0x0C, 0xFF, 0x75,&#xA;        0x08, 0xFF, 0x15, 0xA0, 0xA5, 0x48, 0x76, 0x85, 0xC0, 0x0F,&#xA;        0x88, 0xFC, 0xDA, 0x02, 0x00&#xA;    };&#xA;&#xA;    // Initialize decoder context&#xA;    ZydisDecoder decoder;&#xA;    ZydisDecoderInit(&amp;amp;decoder, ZYDIS_MACHINE_MODE_LONG_64, ZYDIS_STACK_WIDTH_64);&#xA;&#xA;    // Initialize formatter. Only required when you actually plan to do instruction&#xA;    // formatting (&#34;disassembling&#34;), like we do here&#xA;    ZydisFormatter formatter;&#xA;    ZydisFormatterInit(&amp;amp;formatter, ZYDIS_FORMATTER_STYLE_INTEL);&#xA;&#xA;    // Loop over the instructions in our buffer.&#xA;    // The runtime-address (instruction pointer) is chosen arbitrary here in order to better&#xA;    // visualize relative addressing&#xA;    ZyanU64 runtime_address = 0x007FFFFFFF400000;&#xA;    ZyanUSize offset = 0;&#xA;    const ZyanUSize length = sizeof(data);&#xA;    ZydisDecodedInstruction instruction;&#xA;    ZydisDecodedOperand operands[ZYDIS_MAX_OPERAND_COUNT_VISIBLE];&#xA;    while (ZYAN_SUCCESS(ZydisDecoderDecodeFull(&amp;amp;decoder, data + offset, length - offset,&#xA;        &amp;amp;instruction, operands, ZYDIS_MAX_OPERAND_COUNT_VISIBLE, &#xA;        ZYDIS_DFLAG_VISIBLE_OPERANDS_ONLY)))&#xA;    {&#xA;        // Print current instruction pointer.&#xA;        printf(&#34;%016&#34; PRIX64 &#34;  &#34;, runtime_address);&#xA;&#xA;        // Format &amp;amp; print the binary instruction structure to human readable format&#xA;        char buffer[256];&#xA;        ZydisFormatterFormatInstruction(&amp;amp;formatter, &amp;amp;instruction, operands,&#xA;            instruction.operand_count_visible, buffer, sizeof(buffer), runtime_address);&#xA;        puts(buffer);&#xA;&#xA;        offset += instruction.length;&#xA;        runtime_address += instruction.length;&#xA;    }&#xA;&#xA;    return 0;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Sample Output&lt;/h2&gt; &#xA;&lt;p&gt;The above example program generates the following output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-asm&#34;&gt;007FFFFFFF400000   push rcx&#xA;007FFFFFFF400001   lea eax, [rbp-0x01]&#xA;007FFFFFFF400004   push rax&#xA;007FFFFFFF400005   push qword ptr [rbp+0x0C]&#xA;007FFFFFFF400008   push qword ptr [rbp+0x08]&#xA;007FFFFFFF40000B   call [0x008000007588A5B1]&#xA;007FFFFFFF400011   test eax, eax&#xA;007FFFFFFF400013   js 0x007FFFFFFF42DB15&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Encoder Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;#include &amp;lt;Zydis/Zydis.h&amp;gt;&#xA;#include &amp;lt;Zycore/LibC.h&amp;gt;&#xA;&#xA;int main()&#xA;{&#xA;    ZyanU8 encoded_instruction[ZYDIS_MAX_INSTRUCTION_LENGTH];&#xA;    ZyanUSize encoded_length = sizeof(encoded_instruction);&#xA;    ZydisEncoderRequest req;&#xA;    ZYAN_MEMSET(&amp;amp;req, 0, sizeof(req));&#xA;    req.mnemonic = ZYDIS_MNEMONIC_MOV;&#xA;    req.machine_mode = ZYDIS_MACHINE_MODE_LONG_64;&#xA;    req.operand_count = 2;&#xA;    req.operands[0].type = ZYDIS_OPERAND_TYPE_REGISTER;&#xA;    req.operands[0].reg.value = ZYDIS_REGISTER_RAX;&#xA;    req.operands[1].type = ZYDIS_OPERAND_TYPE_IMMEDIATE;&#xA;    req.operands[1].imm.u = 0x1337;&#xA;    if (ZYAN_FAILED(ZydisEncoderEncodeInstruction(&amp;amp;req, encoded_instruction, &amp;amp;encoded_length)))&#xA;    {&#xA;        ZYAN_PUTS(&#34;Failed to encode instruction&#34;);&#xA;        return 1;&#xA;    }&#xA;    for (ZyanUSize i = 0; i &amp;lt; encoded_length; ++i)&#xA;    {&#xA;        ZYAN_PRINTF(&#34;%02X &#34;, encoded_instruction[i]);&#xA;    }&#xA;    ZYAN_PUTS(&#34;&#34;);&#xA;    return 0;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Sample Output&lt;/h2&gt; &#xA;&lt;p&gt;The above example program generates the following output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;48 C7 C0 37 13 00 00&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;h3&gt;Unix&lt;/h3&gt; &#xA;&lt;p&gt;Zydis builds cleanly on most platforms without any external dependencies. You can use CMake to generate project files for your favorite C11 compiler.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --recursive &#39;https://github.com/zyantific/zydis.git&#39;&#xA;cd zydis&#xA;mkdir build &amp;amp;&amp;amp; cd build&#xA;cmake ..&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;Either use the &lt;a href=&#34;https://raw.githubusercontent.com/zyantific/zydis/master/msvc/&#34;&gt;Visual Studio 2019 project&lt;/a&gt; or build Zydis using &lt;a href=&#34;https://cmake.org/download/&#34;&gt;CMake&lt;/a&gt; (&lt;a href=&#34;https://www.youtube.com/watch?v=fywLDK1OAtQ&#34;&gt;video guide&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h4&gt;Building Zydis - Using vcpkg&lt;/h4&gt; &#xA;&lt;p&gt;You can download and install Zydis using the &lt;a href=&#34;https://github.com/Microsoft/vcpkg&#34;&gt;vcpkg&lt;/a&gt; dependency manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Microsoft/vcpkg.git&#xA;cd vcpkg&#xA;./bootstrap-vcpkg.sh&#xA;./vcpkg integrate install&#xA;./vcpkg install zydis&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Zydis port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please &lt;a href=&#34;https://github.com/Microsoft/vcpkg&#34;&gt;create an issue or pull request&lt;/a&gt; on the vcpkg repository.&lt;/p&gt; &#xA;&lt;h2&gt;Using Zydis in a CMake project&lt;/h2&gt; &#xA;&lt;p&gt;An example on how to use Zydis in your own CMake based project &lt;a href=&#34;https://github.com/zyantific/zydis-submodule-example&#34;&gt;can be found in this repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;ZydisInfo tool&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zyantific/zydis/master/assets/screenshots/ZydisInfo.png&#34; alt=&#34;ZydisInfo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Bindings&lt;/h2&gt; &#xA;&lt;p&gt;Official bindings exist for a selection of languages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zyantific/zydis-pascal&#34;&gt;Pascal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zyantific/zydis-py&#34;&gt;Python 3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zyantific/zydis-rs&#34;&gt;Rust&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Unofficial but actively maintained bindings:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jpap/go-zydis&#34;&gt;Go&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nerded1337/zydiskell&#34;&gt;Haskell&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;asmjit-style C++ front-end&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re looking for an asmjit-style assembler front-end for the encoder, check out &lt;a href=&#34;https://github.com/zyantific/zasm&#34;&gt;zasm&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;h3&gt;Scheme&lt;/h3&gt; &#xA;&lt;p&gt;Versions follow the &lt;a href=&#34;https://semver.org/&#34;&gt;semantic versioning scheme&lt;/a&gt;. All stability guarantees apply to the API only — ABI stability between patches cannot be assumed unless explicitly mentioned in the release notes.&lt;/p&gt; &#xA;&lt;h3&gt;Branches &amp;amp; Tags&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;master&lt;/code&gt; holds the bleeding edge code of the next, unreleased Zydis version. Elevated amounts of bugs and issues must be expected, API stability is not guaranteed outside of tagged commits.&lt;/li&gt; &#xA; &lt;li&gt;Stable and preview versions are annotated with git tags &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;beta and other preview versions have &lt;code&gt;-beta&lt;/code&gt;, &lt;code&gt;-rc&lt;/code&gt;, etc. suffixes&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;maintenance/v2&lt;/code&gt; contains the code of the latest legacy release of v2 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;v2 is now deprecated, but will receive security fixes until 2021&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Intel (for open-sourcing &lt;a href=&#34;https://github.com/intelxed/xed&#34;&gt;XED&lt;/a&gt;, allowing for automatic comparison of our tables against theirs, improving both)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://llvm.org&#34;&gt;LLVM&lt;/a&gt; (for providing pretty solid instruction data as well)&lt;/li&gt; &#xA; &lt;li&gt;Christian Ludloff (&lt;a href=&#34;http://sandpile.org&#34;&gt;http://sandpile.org&lt;/a&gt;, insanely helpful)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.lekoarts.de/&#34;&gt;LekoArts&lt;/a&gt; (for creating the project logo)&lt;/li&gt; &#xA; &lt;li&gt;Our &lt;a href=&#34;https://github.com/zyantific/zydis/graphs/contributors&#34;&gt;contributors on GitHub&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;-fPIC&lt;/code&gt; for shared library builds&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;/usr/bin/ld: ./libfoo.a(foo.c.o): relocation R_X86_64_PC32 against symbol `bar&#39; can not be used when making a shared object; recompile with -fPIC&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Under some circumstances (e.g. when building Zydis as a static library using CMake and then using Makefiles to manually link it into a shared library), CMake might fail to detect that relocation information must be emitted. This can be forced by passing &lt;code&gt;-DCMAKE_POSITION_INDEPENDENT_CODE=ON&lt;/code&gt; to the CMake invocation.&lt;/p&gt; &#xA;&lt;h2&gt;Consulting and Business Support&lt;/h2&gt; &#xA;&lt;p&gt;We offer consulting services and professional business support for Zydis. If you need a custom extension, require help in integrating Zydis into your product or simply want contractually guaranteed updates and turnaround times, we are happy to assist with that! Please contact us at &lt;a href=&#34;mailto:business@zyantific.com&#34;&gt;business@zyantific.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;p&gt;Since GitHub Sponsors currently doesn&#39;t support sponsoring teams directly, donations are collected and distributed using &lt;a href=&#34;https://github.com/users/flobernd/sponsorship&#34;&gt;flobernd&lt;/a&gt;s account.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Zydis is licensed under the MIT license.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tmux/tmux</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/tmux/tmux</id>
    <link href="https://github.com/tmux/tmux" rel="alternate"></link>
    <summary type="html">&lt;p&gt;tmux source code&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to tmux!&lt;/h1&gt; &#xA;&lt;p&gt;tmux is a terminal multiplexer: it enables a number of terminals to be created, accessed, and controlled from a single screen. tmux may be detached from a screen and continue running in the background, then later reattached.&lt;/p&gt; &#xA;&lt;p&gt;This release runs on OpenBSD, FreeBSD, NetBSD, Linux, macOS and Solaris.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;tmux depends on &lt;a href=&#34;https://libevent.org&#34;&gt;libevent&lt;/a&gt; 2.x, available from &lt;a href=&#34;https://github.com/libevent/libevent/releases/latest&#34;&gt;this page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It also depends on &lt;a href=&#34;https://www.gnu.org/software/ncurses/&#34;&gt;ncurses&lt;/a&gt;, available from &lt;a href=&#34;https://invisible-mirror.net/archives/ncurses/&#34;&gt;this page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To build tmux, a C compiler (for example gcc or clang), make, pkg-config and a suitable yacc (yacc or bison) are needed.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Binary packages&lt;/h3&gt; &#xA;&lt;p&gt;Some platforms provide binary packages for tmux, although these are sometimes out of date. Examples are listed on &lt;a href=&#34;https://github.com/tmux/tmux/wiki/Installing&#34;&gt;this page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;From release tarball&lt;/h3&gt; &#xA;&lt;p&gt;To build and install tmux from a release tarball, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure &amp;amp;&amp;amp; make&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;tmux can use the utempter library to update utmp(5), if it is installed - run configure with &lt;code&gt;--enable-utempter&lt;/code&gt; to enable this.&lt;/p&gt; &#xA;&lt;p&gt;For more detailed instructions on building and installing tmux, see &lt;a href=&#34;https://github.com/tmux/tmux/wiki/Installing&#34;&gt;this page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;From version control&lt;/h3&gt; &#xA;&lt;p&gt;To get and build the latest from version control - note that this requires &lt;code&gt;autoconf&lt;/code&gt;, &lt;code&gt;automake&lt;/code&gt; and &lt;code&gt;pkg-config&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/tmux/tmux.git&#xA;cd tmux&#xA;sh autogen.sh&#xA;./configure &amp;amp;&amp;amp; make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Bug reports, feature suggestions and especially code contributions are most welcome. Please send by email to:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;mailto:tmux-users@googlegroups.com&#34;&gt;tmux-users@googlegroups.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Or open a GitHub issue or pull request. &lt;strong&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/tmux/tmux/master/CONTRIBUTING.md&#34;&gt;this document&lt;/a&gt; before opening an issue.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;There is &lt;a href=&#34;https://github.com/tmux/tmux/wiki/Contributing&#34;&gt;a list of suggestions for contributions&lt;/a&gt;. Please feel free to ask on the mailing list if you&#39;re thinking of working on something or need further information.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For documentation on using tmux, see the tmux.1 manpage. View it from the source tree with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nroff -mdoc tmux.1|less&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A small example configuration is in &lt;code&gt;example_tmux.conf&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;And a bash(1) completion file at:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/imomaliev/tmux-bash-completion&#34;&gt;https://github.com/imomaliev/tmux-bash-completion&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For debugging, run tmux with &lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;-vv&lt;/code&gt; to generate server and client log files in the current directory.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;The tmux mailing list for general discussion and bug reports is:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/tmux-users&#34;&gt;https://groups.google.com/forum/#!forum/tmux-users&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Subscribe by sending an email to:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;mailto:tmux-users+subscribe@googlegroups.com&#34;&gt;tmux-users+subscribe@googlegroups.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>iNavFlight/inav</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/iNavFlight/inav</id>
    <link href="https://github.com/iNavFlight/inav" rel="alternate"></link>
    <summary type="html">&lt;p&gt;INAV: Navigation-enabled flight control software&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;INAV - navigation capable flight controller&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://static.rcgroups.net/forums/attachments/6/1/0/3/7/6/a9088858-102-inav.png&#34; alt=&#34;INAV&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;INAV Community&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/peg2hhbYwN&#34;&gt;INAV Discord Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.facebook.com/groups/INAVOfficial&#34;&gt;INAV Official on Facebook&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rcgroups.com/forums/showthread.php?2495732-Cleanflight-iNav-(navigation-rewrite)-project&#34;&gt;RC Groups Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/INAVFlight&#34;&gt;INAV Official on Telegram&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Runs on the most popular F4 and F7 flight controllers&lt;/li&gt; &#xA; &lt;li&gt;Outstanding performance out of the box&lt;/li&gt; &#xA; &lt;li&gt;Position Hold, Altitude Hold, Return To Home and Missions&lt;/li&gt; &#xA; &lt;li&gt;Excellent support for fixed wing UAVs: airplanes, flying wings&lt;/li&gt; &#xA; &lt;li&gt;Fully configurable mixer that allows to run any hardware you want: multirotor, fixed wing, rovers, boats and other experimental devices&lt;/li&gt; &#xA; &lt;li&gt;Multiple sensor support: GPS, Pitot tube, sonar, lidar, temperature, ESC with BlHeli_32 telemetry&lt;/li&gt; &#xA; &lt;li&gt;SmartAudio and IRC Tramp VTX support&lt;/li&gt; &#xA; &lt;li&gt;Blackbox flight recorder logging&lt;/li&gt; &#xA; &lt;li&gt;On Screen Display (OSD) - both character and pixel style&lt;/li&gt; &#xA; &lt;li&gt;DJI OSD integration: all elements, system messages and warnings&lt;/li&gt; &#xA; &lt;li&gt;Telemetry: SmartPort, FPort, MAVlink, LTM&lt;/li&gt; &#xA; &lt;li&gt;Multi-color RGB LED Strip support&lt;/li&gt; &#xA; &lt;li&gt;Advanced gyro filtering: Matrix Filter and RPM filter&lt;/li&gt; &#xA; &lt;li&gt;Logic Conditions, Global Functions and Global Variables: you can program INAV with a GUI&lt;/li&gt; &#xA; &lt;li&gt;And many more!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For a list of features, changes and some discussion please review consult the releases &lt;a href=&#34;https://github.com/iNavFlight/inav/releases&#34;&gt;page&lt;/a&gt; and the documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Tools&lt;/h2&gt; &#xA;&lt;h3&gt;INAV Configurator&lt;/h3&gt; &#xA;&lt;p&gt;Official tool for INAV can be downloaded &lt;a href=&#34;https://github.com/iNavFlight/inav-configurator/releases&#34;&gt;here&lt;/a&gt;. It can be run on Windows, MacOS and Linux machines and standalone application.&lt;/p&gt; &#xA;&lt;h3&gt;INAV Blackbox Explorer&lt;/h3&gt; &#xA;&lt;p&gt;Tool for Blackbox logs analysis is available &lt;a href=&#34;https://github.com/iNavFlight/blackbox-log-viewer/releases&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Telemetry screen for OpenTX&lt;/h3&gt; &#xA;&lt;p&gt;Users of OpenTX radios (Taranis, Horus, Jumper, Radiomaster, Nirvana) can use INAV OpenTX Telemetry Widget screen. Software and installation instruction are available here: &lt;a href=&#34;https://github.com/iNavFlight/OpenTX-Telemetry-Widget&#34;&gt;https://github.com/iNavFlight/OpenTX-Telemetry-Widget&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;INAV magnetometer alignment helper&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kernel-machine.github.io/INavMagAlignHelper/&#34;&gt;INAV Magnetometer Alignment helper&lt;/a&gt; allows to align INAV magnetometer despite position and orientation. This simplifies the process of INAV setup on multirotors with tilted GPS modules.&lt;/p&gt; &#xA;&lt;h3&gt;OSD layout Copy, Move, or Replace helper tool&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.mrd-rc.com/tutorials-tools-and-testing/useful-tools/inav-osd-switcher-tool/&#34;&gt;Easy INAV OSD switcher tool&lt;/a&gt; allows you to easily switch your OSD layouts around in iNav. Choose the from and to OSD layouts, and the method of transfering the layouts.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;https://github.com/iNavFlight/inav/raw/master/docs/Installation.md&#34;&gt;https://github.com/iNavFlight/inav/blob/master/docs/Installation.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation, support and learning resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/iNavFlight/inav/tree/master/docs/boards&#34;&gt;Target documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iNavFlight/inav/master/docs/INAV_Fixed_Wing_Setup_Guide.pdf&#34;&gt;Fixed Wing Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iNavFlight/inav/master/docs/INAV_Autolaunch.pdf&#34;&gt;Autolaunch Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iNavFlight/inav/master/docs/INAV_Modes.pdf&#34;&gt;Modes Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iNavFlight/inav/master/docs/INAV_Wing_Tuning_Masterclass.pdf&#34;&gt;Wing Tuning Masterclass&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/iNavFlight/inav/tree/master/docs&#34;&gt;Official documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/iNavFlight/inav/wiki&#34;&gt;Official Wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLYsWjANuAm4qdXEGFSeUhOZ10-H8YTSnH&#34;&gt;Video series by Painless360&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLOUQ8o2_nCLloACrA6f1_daCjhqY2x0fB&#34;&gt;Video series by Paweł Spychalski&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome and encouraged. You can contribute in many ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Documentation updates and corrections.&lt;/li&gt; &#xA; &lt;li&gt;How-To guides - received help? help others!&lt;/li&gt; &#xA; &lt;li&gt;Bug fixes.&lt;/li&gt; &#xA; &lt;li&gt;New features.&lt;/li&gt; &#xA; &lt;li&gt;Telling us your ideas and suggestions.&lt;/li&gt; &#xA; &lt;li&gt;Buying your hardware from this &lt;a href=&#34;https://inavflight.com/shop/u/bg/&#34;&gt;link&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A good place to start is Telegram channel or Facebook group. Drop in, say hi.&lt;/p&gt; &#xA;&lt;p&gt;Github issue tracker is a good place to search for existing issues or report a new bug/feature request:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/iNavFlight/inav/issues&#34;&gt;https://github.com/iNavFlight/inav/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/iNavFlight/inav-configurator/issues&#34;&gt;https://github.com/iNavFlight/inav-configurator/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Before creating new issues please check to see if there is an existing one, search first otherwise you waste peoples time when they could be coding instead!&lt;/p&gt; &#xA;&lt;h2&gt;Developers&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the development section in the &lt;a href=&#34;https://github.com/iNavFlight/inav/tree/master/docs/development&#34;&gt;docs/development&lt;/a&gt; folder.&lt;/p&gt; &#xA;&lt;h2&gt;INAV Releases&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/iNavFlight/inav/releases&#34;&gt;https://github.com/iNavFlight/inav/releases&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>joncampbell123/dosbox-x</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/joncampbell123/dosbox-x</id>
    <link href="https://github.com/joncampbell123/dosbox-x" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DOSBox-X fork of the DOSBox project&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Welcome to the DOSBox-X project homepage located on GitHub.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Be sure to also visit DOSBox-X&#39;s website at &lt;a href=&#34;https://dosbox-x.com&#34;&gt;https://dosbox-x.com&lt;/a&gt; (or &lt;a href=&#34;http://dosbox-x.software&#34;&gt;http://dosbox-x.software&lt;/a&gt;)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Discord channel for the DOSBox-X project: &lt;a href=&#34;https://discord.gg/5cnTmcsTpG&#34;&gt;https://discord.gg/5cnTmcsTpG&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/#introduction-to-dosbox-x&#34;&gt;Introduction to DOSBox-X&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/#notable-features-in-dosbox-x&#34;&gt;Notable features in DOSBox-X&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/#dosbox-x-supported-platforms-and-releases&#34;&gt;DOSBox-X supported platforms and releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/#compatibility-with-dos-programs-and-games&#34;&gt;Compatibility with DOS programs and games&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/#contributing-to-dosbox-x&#34;&gt;Contributing to DOSBox-X&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/#dosbox-x-development-and-release-pattern&#34;&gt;DOSBox-X development and release pattern&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/#future-development-experiments&#34;&gt;Future development experiments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/#software-security-comments&#34;&gt;Software security comments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/#features-that-dosbox-x-is-unlikely-to-support-at-this-time&#34;&gt;Features that DOSBox-X is unlikely to support at this time&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/#origin-and-history-of-the-dosbox-x-project&#34;&gt;Origin and history of the DOSBox-X project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/#known-dosbox-x-forks&#34;&gt;Known DOSBox-X forks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/#support-for-international-language-translations-and-keyboard-layouts&#34;&gt;Support for international language translations and keyboard layouts&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction to DOSBox-X&lt;/h2&gt; &#xA;&lt;p&gt;DOSBox-X is a cross-platform DOS emulator based on the DOSBox project (&lt;a href=&#34;http://www.dosbox.com&#34;&gt;www.dosbox.com&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Like DOSBox, it emulates a PC necessary for running many MS-DOS games and applications that simply cannot be run on modern PCs and operating systems. However, while the main focus of DOSBox is for running DOS games, DOSBox-X goes much further than this. Started as a fork of the DOSBox project, it retains compatibility with the wide base of DOS games and DOS gaming DOSBox was designed for. But it is also a platform for running DOS applications, including emulating the environments to run Windows 3.x, 9x and ME and software written for those versions of Windows. By adding official support for Windows 95, 98, ME emulation and acceleration, we hope that those old Windows games and applications could be enjoyed or used once more. Moreover, DOSBox-X adds support for DOS/V and NEC PC-98 emulations so that you can play DOS/V and PC-98 games with it.&lt;/p&gt; &#xA;&lt;p&gt;Compared with DOSBox, DOSBox-X focuses more on general emulation and accuracy. In order to help running DOS games and applications, Windows 3.x/9x/ME, as well as for the purpose of historical preservation, testing and continued DOS developments, it is our desire to implement accurate emulation, accurate enough to &lt;a href=&#34;https://dosbox-x.com/newdosdevelopment.html&#34;&gt;help make new DOS developments possible&lt;/a&gt; with confidence the program will run properly on actual DOS systems. DOSBox-X includes various features for different purposes (some of them ported from other projects), which are implemented as incremental changes since it was forked from DOSBox SVN Daum. DOSBox-X provides many ways to tweak and configure the DOS virtual machine, as we believe a better way to emulate the DOS platform is to give users all the options they need to emulate everything from the original IBM PC system all the way up to late 1990&#39;s configuration, whatever it takes to get your game or software package to run. Our goal is to eventually make DOSBox-X a complete emulation package that covers all pre-2000 DOS and Windows 9x based system scenarios, including peripherals, motherboards, CPUs, and all manner of hardware that was made for PC hardware of that time.&lt;/p&gt; &#xA;&lt;p&gt;Please check out the &lt;a href=&#34;https://dosbox-x.com&#34;&gt;DOSBox-X homepage&lt;/a&gt; for common packages of the latest release for the supported platforms, as well as screenshots of some DOS programs and games running in DOSBox-X. Also see the &lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/INSTALL.md&#34;&gt;INSTALL&lt;/a&gt; page for DOSBox-X installation instructions and other packages, and the &lt;a href=&#34;https://github.com/joncampbell123/dosbox-x/releases&#34;&gt;Releases&lt;/a&gt; page for archives of all released DOSBox-X versions. For more information about DOSBox-X, such as setting up and running DOSBox-X including its usage tips, please read the user guide in the &lt;a href=&#34;https://dosbox-x.com/wiki&#34;&gt;DOSBox-X Wiki&lt;/a&gt;. Steps for building the source code can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/BUILD.md&#34;&gt;BUILD&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;DOSBox-X is completely open-source and free of charge to use and distribute. It is released under the &lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/COPYING&#34;&gt;GNU General Public License, version 2&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This project has a &lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;, please read it for general information on contributing to or getting support from the project.&lt;/p&gt; &#xA;&lt;p&gt;Brought to you by: joncampbell123 (Jonathan Campbell)&lt;/p&gt; &#xA;&lt;h2&gt;Notable features in DOSBox-X&lt;/h2&gt; &#xA;&lt;p&gt;Although based on the DOSBox project, DOSBox-X is now a separate project because both have their own separate schedules and development priorities. For example, the main focus of DOSBox is for running DOS games whereas DOSBox-X goes way beyond this. At this time DOSBox-X already has a great number of features that do not exist in DOSBox. Examples of such features include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;GUI drop-down menu and built-in graphical configuration tool&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Save and load state support (with up to 100 save slots + save files)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;NEC PC-98, AX, DOS/V emulation and Chinese/Japanese/Korean support&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fully translatable user interfaces (with language files available)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Better support and compatibility with DOS applications&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support for more DOS commands and built-in external tools&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support for different ways to customize the internal Z: drive&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support for CPU types like Pentium Pro, II, III and MMX instructions&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support for IDE interfaces and improved Windows 3.x/9x emulation&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support for long filenames and FAT32 disk images (DOS 7+ features)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support for pixel-perfect scaling output for improved image quality&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support for TrueType font (TTF) output for text-mode DOS programs&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support for printing features, either to a real or to a virtual printer&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support for starting programs to run on the host systems (-hostrun option)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support for 3dfx Voodoo chip and Glide emulation (including Glide wrapper)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support for cue sheets with FLAC, MP3, WAV, OGG Vorbis and Opus CD-DA tracks&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support for FluidSynth MIDI synthesizer (with sound fonts) and MT-32 emulation&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support for NE2000 Ethernet for networking features and modem phone book mapping&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Support for features such as V-Sync, overscan border and stereo swapping&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Plus many more..&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;While the vast majority of features in DOSBox-X are cross-platform, DOSBox-X does also have several notable platform-dependent features, such as Direct3D output and support for automatic drive mounting on the Windows platform. These features cannot be easily ported to other platforms. More information about DOSBox-X&#39;s features can be found in &lt;a href=&#34;https://dosbox-x.com/wiki/DOSBox%E2%80%90X%E2%80%99s-Feature-Highlights&#34;&gt;DOSBox-X’s Feature Highlights&lt;/a&gt; page in the &lt;a href=&#34;https://dosbox-x.com/wiki&#34;&gt;DOSBox-X Wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;DOSBox-X officially supports both SDL 1.2 and SDL 2.0; both 32-bit and 64-bit builds are also supported.&lt;/p&gt; &#xA;&lt;h2&gt;DOSBox-X supported platforms and releases&lt;/h2&gt; &#xA;&lt;p&gt;DOSBox-X is a cross-platform DOS emulator, so all major host operating systems are officially supported, including:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Windows (XP or higher), 32-bit and 64-bit&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Linux (with X11), 32-bit and 64-bit&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;macOS (Mac OS X) Sierra 10.12 or higher 64-bit&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;DOS (MS-DOS 5.0+ or compatible)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Windows binaries (both 32-bit and 64-bit), Linux Flatpak or RPM packages (64-bit), macOS packages (64-bit) and DOS versions are officially released periodically, typically on the last day of a month or the first day of the next month. Please check out the &lt;a href=&#34;https://dosbox-x.com&#34;&gt;DOSBox-X homepage&lt;/a&gt; and the &lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/INSTALL.md&#34;&gt;INSTALL&lt;/a&gt; page for the latest DOSBox-X packages on these platforms and further installation instructions. You can also find ZIP packages or Windows installers for all released versions and their change logs in the &lt;a href=&#34;https://github.com/joncampbell123/dosbox-x/releases&#34;&gt;Releases&lt;/a&gt; page. The Window installers are intended to ease the installation process, and they allow you to start DOSBox-X as soon as the installation ends.&lt;/p&gt; &#xA;&lt;p&gt;For running DOSBox-X in a real DOS system (MS-DOS or compatible), you can find the HX-DOS package that makes use of the freely-available &lt;a href=&#34;https://github.com/Baron-von-Riedesel/HX&#34;&gt;HX DOS Extender&lt;/a&gt;. Type DOSBOX-X to run it from a DOS system. There is also the DOS LOADLIN package which can run from within DOSBox-X itself in addition to a DOS system. Note, however, that not all features of DOSBox-X that are supported in other platforms can be supported in the real DOS environment.&lt;/p&gt; &#xA;&lt;p&gt;The full source code is officially provided with each DOSBox-X release, which may be compiled to run on the above and possbily other operating systems too. You can also get the latest development source code from the repository directly. See also the &lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/BUILD.md&#34;&gt;BUILD&lt;/a&gt; page for information on building/compiling the DOSBox-X source code.&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility with DOS programs and games&lt;/h2&gt; &#xA;&lt;p&gt;With the eventual goal of being a complete DOS emulation package that covers all pre-2000 DOS and Windows 3.x/9x based hardware scenarios, we are making efforts to ensure that the vast majority of DOS games and applications will run in DOSBox-X, and these include both text-mode and graphical-mode DOS programs. Microsoft Windows versions that are largely DOS-based (such as Windows 3.x and 9x) are officially supported by DOSBox-X as well. Note that certain config settings may need to be changed from the default ones for some of these programs to work smoothly. Take a look at the &lt;a href=&#34;https://dosbox-x.com/wiki&#34;&gt;DOSBox-X Wiki&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;Efforts are also made to aid &lt;a href=&#34;https://dosbox-x.com/newdosdevelopment.html&#34;&gt;continued DOS developments&lt;/a&gt; by attempting to accurately emulate the hardware, which is why DOSBox-X used to focus on the demoscene software (especially anything prior to 1996) because that era of the MS-DOS scene tends to have all manner of weird hardware tricks, bugs, and speed-sensitive issues that make them the perfect kind of stuff to test emulation accuracy against, even more so than old DOS games. But without a doubt we are also making a lot of efforts to test DOSBox-X against other DOS games and applications, as well as PC-98 programs (most of them are games).&lt;/p&gt; &#xA;&lt;p&gt;We add new features and make other improvements in every new DOSBox-X version, so its compatibility with DOS programs and games are also improving over time. If you have some issue with a specific DOS program or game, please feel free to post it in the &lt;a href=&#34;https://github.com/joncampbell123/dosbox-x/issues&#34;&gt;issue tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to DOSBox-X&lt;/h2&gt; &#xA;&lt;p&gt;We encourage new contributors by removing barriers to entry. Ideas and patches are always welcome, though not necessarily accepted.&lt;/p&gt; &#xA;&lt;p&gt;If you really need that feature or change, and your changes are not accepted into this main project (or you just want to mess around with the code), feel free to fork this project and make your changes in your fork.&lt;/p&gt; &#xA;&lt;p&gt;As joncampbell123 only has limited time to work on DOSBox-X, help is greatly appreciated:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Testing &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Features of DOSBox-X, such as its commands and functions&lt;/li&gt; &#xA;   &lt;li&gt;The normal operation of DOS games and applications&lt;/li&gt; &#xA;   &lt;li&gt;Windows 1.0/2.x/3.x &amp;amp; Windows 95/98/ME guest system support&lt;/li&gt; &#xA;   &lt;li&gt;Software or hardware emulation accuracy, helped by for example demoscene software&lt;/li&gt; &#xA;   &lt;li&gt;Write more unit tests to test various functions (see existing unit tests in &lt;a href=&#34;https://github.com/joncampbell123/dosbox-x/tree/master/tests&#34;&gt;tests/&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Developments of new DOS software (possibly aided by &lt;a href=&#34;https://github.com/joncampbell123/doslib&#34;&gt;DOSLIB&lt;/a&gt;/&lt;a href=&#34;https://github.com/joncampbell123/doslib2&#34;&gt;DOSLIB2&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Bug fixes, patches, improvements, refinements&lt;/li&gt; &#xA; &lt;li&gt;Suggestions, ideas, assistance of other users, and/or general conversation&lt;/li&gt; &#xA; &lt;li&gt;Platform support (Windows, Linux, macOS, DOS, but others are welcome)&lt;/li&gt; &#xA; &lt;li&gt;Documentation, language file translation, and software promotion&lt;/li&gt; &#xA; &lt;li&gt;Notes regarding DOS and Win3.x/9x games, applications, hacks or weird tricks, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; page for more contribution guidelines. If you want to tweak or write some code and you don&#39;t know what to work on, feel free to visit the &lt;a href=&#34;https://github.com/joncampbell123/dosbox-x/issues&#34;&gt;issue tracker&lt;/a&gt; to get some ideas.&lt;/p&gt; &#xA;&lt;p&gt;For more descriptions on the source code, please take a look at the &lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/README.source-code-description&#34;&gt;DOSBox-X source code description&lt;/a&gt; page. Information on building on the source code can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/BUILD.md&#34;&gt;BUILD&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;Information about the debugger is also available in the &lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/README.debugger&#34;&gt;DOSBox-X Debugger&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;See also the &lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/CREDITS.md&#34;&gt;CREDITS&lt;/a&gt; page for crediting information.&lt;/p&gt; &#xA;&lt;h2&gt;DOSBox-X development and release pattern&lt;/h2&gt; &#xA;&lt;p&gt;In order to make DOSBox-X&#39;s development process more smooth, we have implemented a general development/release pattern for DOSBox-X. The current release pattern for DOSBox-X is as follows:&lt;/p&gt; &#xA;&lt;p&gt;New DOSBox-X versions are made public at the start (typically on the first day) of each month, including the source code and binary releases. Then the DOSBox-X developments will be re-opened for new features, pull requests, etc. There will be no new features added 6 days before the end of the month, but only bug fixes. The last day of the month is DOSBox-X’s build day to compile for binary releases the first of the next month, so there will be no source code changes on this day including pull requests or bug fixes.&lt;/p&gt; &#xA;&lt;p&gt;For example, suppose August is the current month - August 25th will be the day pull requests will be ignored unless only bug fixes. August 31st (the last day of August) will be DOSBox-X build day.&lt;/p&gt; &#xA;&lt;p&gt;This is DOSBox-X’s official release pattern, although it may change later.&lt;/p&gt; &#xA;&lt;h2&gt;Future development experiments&lt;/h2&gt; &#xA;&lt;p&gt;Scattered experiments and small projects are in &lt;a href=&#34;https://github.com/joncampbell123/dosbox-x/tree/master/experiments&#34;&gt;experiments/&lt;/a&gt; as proving grounds for future revisions to DOSBox-X and its codebase.&lt;/p&gt; &#xA;&lt;p&gt;These experiments may or may not make it into future revisions or the next version.&lt;/p&gt; &#xA;&lt;p&gt;Comments are welcome on the experiments, to help improve the code overall.&lt;/p&gt; &#xA;&lt;p&gt;There are also patches in &lt;a href=&#34;https://github.com/joncampbell123/dosbox-x/tree/master/patch-integration&#34;&gt;patch-integration/&lt;/a&gt; for possible feature integrations in the future. We have already integrated many community-developed patches into DOSBox-X in the past.&lt;/p&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/docs/PLANS/General%20TODO.txt&#34;&gt;General TODO.txt&lt;/a&gt; for some plans of future DOSBox-X developments.&lt;/p&gt; &#xA;&lt;h2&gt;Software security comments&lt;/h2&gt; &#xA;&lt;p&gt;DOSBox-X cannot claim to be a &#34;secure&#34; application. It contains a lot of code designed for performance, not security. There may be vulnerabilities, bugs, and flaws in the emulation that could permit malicious DOS executables within to cause problems or exploit bugs in the emulator to cause harm. There is no guarantee of complete containment by DOSBox-X of the guest operating system or application.&lt;/p&gt; &#xA;&lt;p&gt;If security is a priority, then:&lt;/p&gt; &#xA;&lt;p&gt;Do not use DOSBox-X on a secure system.&lt;/p&gt; &#xA;&lt;p&gt;Do not run DOSBox-X as root or Administrator.&lt;/p&gt; &#xA;&lt;p&gt;If you need to use DOSBox-X, run it under a lesser privileged user, in a chroot jail or sandbox, or enable DOSBox-X&#39;s secure mode with its command-line option &lt;code&gt;-securemode&lt;/code&gt;, which disables commands that may allow access to the host system.&lt;/p&gt; &#xA;&lt;p&gt;If your Linux distribution has it enabled, consider using the auditing system to limit what the DOSBox-X executable is allowed to do.&lt;/p&gt; &#xA;&lt;h2&gt;Features that DOSBox-X is unlikely to support at this time&lt;/h2&gt; &#xA;&lt;p&gt;DOSBox-X aims to be a fully-featured DOS emulation package, but there are some things the design as implemented now cannot accommodate.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Pentium 4 or higher CPU level emulation.&lt;/p&gt; &lt;p&gt;DOSBox-X contains code only to emulate the 8086 through the Pentium III. Real DOS systems (MS-DOS and compatibles) also work best with these CPUs.&lt;/p&gt; &lt;p&gt;If Pentium 4 or higher emulation is desired, consider using a PC emulator like Bochs or QEMU instead. DOSBox-X may eventually develop Pentium 4 emulation, if wanted by the DOSBox-X community in general.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Emulation of PC hardware 2001 or later.&lt;/p&gt; &lt;p&gt;The official cutoff for DOSBox-X is 2001, when updated &#34;PC 2001&#34; specifications from Microsoft mandated the removal of the ISA slots from motherboards. The focus is on implementing hardware emulation for hardware made before that point.&lt;/p&gt; &lt;p&gt;Contributers are free to focus on emulating hardware within the time frame between 1980 and 2000/2001 of their choice.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Windows guest emulation, Windows XP or later.&lt;/p&gt; &lt;p&gt;DOSBox-X emulation, in terms of running Windows in DOSBox-X, will focus primarily on Windows 1.0 through Windows ME (Millenium Edition), and then on Windows NT through Windows 2000. Windows XP and later versions are not a priority and will not be considered at this time. These versions of Windows are not based on DOS.&lt;/p&gt; &lt;p&gt;If you need to run Windows XP and later, please consider using QEMU, Bochs, VirtualBox, or VMware.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Any MS-DOS system other than IBM PC/XT/AT, AX, Tandy, PCjr, and PC-98.&lt;/p&gt; &lt;p&gt;Only the above listed systems will be considered for development in DOSBox-X. This restriction prevents stretching of the codebase to an unmanageable level and helps keep the code base organized.&lt;/p&gt; &lt;p&gt;It would be easier on myself and the open source community if developers could focus on emulating their platform of interest in parallel instead of putting everything into one project that, most likely, will do a worse job overall emulating all platforms. However, if adding emulation of the system requires only small minimal changes, then the new system in question may be considered.&lt;/p&gt; &lt;p&gt;You are strongly encouraged to fork this project and implement your own variation if you need to develop MS-DOS emulation for any other system or console. In doing that, you gain the complete freedom to focus on implementing the particular MS-DOS based system of interest, and if desired, the ability to strip away conflicting IBM PC/XT/AT emulation and unnecessary code to keep your branch&#39;s code manageable and maintainable.&lt;/p&gt; &lt;p&gt;If you are starting a fork, feel free to let me know where your fork is and what system it is emulating, so I can list it in this README file for others seeking emulation of that system. To help, I have added machine and video mode enumerations as &#34;stubs&#34; to provide a starting point for your branch&#39;s implementation of the platform. A stub implemented so far is &#34;FM Towns emulation&#34; (&lt;code&gt;machine=fm_towns&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Cycle-accurate timing of x86 instructions and execution.&lt;/p&gt; &lt;p&gt;Instructions generally run one per cycle in DOSBox-X, except for I/O and memory access.&lt;/p&gt; &lt;p&gt;If accurate emulation of cycles per instruction is needed, please consider using PCem, 86Box, or VARCem instead.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Full precision floating point emulation.&lt;/p&gt; &lt;p&gt;Unless using the dynamic core, DOSBox and DOSBox-X emulate the FPU registers using the &#34;double&#34; 64-bit floating point data type.&lt;/p&gt; &lt;p&gt;The Intel FPU registers are 80-bit &#34;extended precision&#34; floating point values, not 64-bit double precision, so this is effectively 12 bits of precision loss and 5 bits of range loss (64 to 53 mantissa bits and 16 to 11 exponent bits). This slight loss of precision is perfectly fine considering DOSBox&#39;s original goal in supporting DOS games, but may cause problems in other cases that need the full precision.&lt;/p&gt; &lt;p&gt;It is known at this time that this lack of precision is enough to cause otherwise straightforward comparisons against integers to fail in DOS applications originally written in QBasic or Turbo Basic. There are such DOS games written that check their file size using a floating point compare that will fail in this manner. To run these games, you will need to disable FPU emulation (&lt;code&gt;fpu=false&lt;/code&gt;) to force the QBasic/TurboBasic runtime to use software emulation instead.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Origin and history of the DOSBox-X project&lt;/h2&gt; &#xA;&lt;p&gt;DOSBox-X started as a fork of the original DOSBox project sometime in mid-2011. It was started out of a desire to improve the emulator without having to fight with or worry about submitting patches upstream.&lt;/p&gt; &#xA;&lt;p&gt;As its developers have made it clear, DOSBox&#39;s main focus is on DOS games. This is evident by the fact that much of the code is somewhat accurate code with kludges to make DOS games run, instead of focusing on the actual behaviors of real DOS systems.&lt;/p&gt; &#xA;&lt;p&gt;Jonathan Campbell, the DOSBox-X project maintainer wanted to make various changes to the source code, but many of them were non-game related, and thus were unlikely to be accepted by the DOSBox developers.&lt;/p&gt; &#xA;&lt;p&gt;Since then, Jonathan Campbell has been modifying the source code over time to improve emulation, fix bugs, and resolve incompatibilities with Windows 95 through ME. He has added options so that DOSBox-X by default can emulate a wider variety of configurations more accurately, while allowing the user to enable various techniques or hacks if needed to run their favorite DOS games or programs. He has also been cleaning up and organizing the code to improve stability and portability where possible.&lt;/p&gt; &#xA;&lt;p&gt;The original DOSBox project was not written by one programmer. It has been under development since late 2000 with patches, fixes, and improvements from members all over the Vogons forums. Despite not having a major official release since DOSBox 0.74 over 10 years ago, the project is still in semi-active development today in the form of DOSBox SVN. Meanwhile, some of the changes themselves incorporated code from other projects.&lt;/p&gt; &#xA;&lt;p&gt;Some features and improvments in DOSBox-X also came from another branch of DOSBox known as &lt;a href=&#34;http://ykhwong.x-y.net&#34;&gt;DOSBox SVN Daum&lt;/a&gt; which itself incorporated features from the original DOSBox project, DOSBox-X, and many experimental patches. Although the Daum branch seems to be dead, the features borrowed from it still exists in DOSBox-X. Later on, DOSBox-X also incorporated several features and improvements from other projects such as &lt;a href=&#34;https://dosboxece.yesterplay.net/&#34;&gt;DOSBox ECE&lt;/a&gt;, &lt;a href=&#34;https://dosbox-staging.github.io/&#34;&gt;DOSBox Staging&lt;/a&gt;, &lt;a href=&#34;http://radioc.web.fc2.com/soflib/dosvax/dosvax.htm&#34;&gt;DOSVAX&lt;/a&gt;/&lt;a href=&#34;https://www.nanshiki.co.jp/software/dosvaxj3.html&#34;&gt;DOSVAXJ3&lt;/a&gt;, and &lt;a href=&#34;http://www.vdosplus.org/&#34;&gt;vDosPlus&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The DOSBox-X project is also helped by its other developers and contributors such as Wengier, aybe, Allofich, and rderooy, who have done significant work to improve the DOSBox-X project, including adding new features, fixing bugs, creating the documentation, maintaining the website, and porting code from other projects.&lt;/p&gt; &#xA;&lt;p&gt;See also the &lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/CREDITS.md&#34;&gt;CREDITS&lt;/a&gt; page for crediting of the source code.&lt;/p&gt; &#xA;&lt;h2&gt;Known DOSBox-X forks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;DOSBox-X Emscripten port (runnable in a web browser) by Yksoft1&lt;/p&gt; &lt;p&gt;Significant changes are made in order to run efficiently within the web browser when compiled using LLVM/Emscripten. These significant changes require dropping some useful features (including the menus) but are required for performance.&lt;/p&gt; &lt;p&gt;URL: &lt;a href=&#34;https://github.com/yksoft1/dosbox-x-vanilla-sdl/tree/emscripten&#34;&gt;https://github.com/yksoft1/dosbox-x-vanilla-sdl/tree/emscripten&lt;/a&gt; (look for clone URL and use the emscripten branch)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;DOSBox-X-App (for Windows and macOS) by emendelson&lt;/p&gt; &lt;p&gt;DOSBox-X-App is a slightly customized version of DOSBox-X, combined with external programs and commands that make it easy to print and create PDFs from DOS applications. It is customized for use with applications, not games.&lt;/p&gt; &lt;p&gt;URL: &lt;a href=&#34;http://www.columbia.edu/~em36/dosboxapp.html&#34;&gt;http://www.columbia.edu/~em36/dosboxapp.html&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;DOSBoxWP (for WordPerfect for DOS) by emendelson&lt;/p&gt; &lt;p&gt;DOSBoxWP is a customized version of DOSBox-X targetted for users of WordPerfect for DOS.&lt;/p&gt; &lt;p&gt;URL (Windows): &lt;a href=&#34;http://www.columbia.edu/~em36/wpdos/dosboxwp.html&#34;&gt;http://www.columbia.edu/~em36/wpdos/dosboxwp.html&lt;/a&gt;&lt;/p&gt; &lt;p&gt;URL (macOS): &lt;a href=&#34;http://www.columbia.edu/~em36/wpdos/wpdosboxmac.html&#34;&gt;http://www.columbia.edu/~em36/wpdos/wpdosboxmac.html&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Win31DOSBox (Windows 3.1 for 64-bit Windows) by emendelson&lt;/p&gt; &lt;p&gt;Win31DOSBox aims to be an easy method of running Windows 3.x software for 64-bit Windows systems. The system uses a custom build of DOSBox-X when running Windows 3.1x.&lt;/p&gt; &lt;p&gt;URL: &lt;a href=&#34;http://www.columbia.edu/~em36/win31dosbox.html&#34;&gt;http://www.columbia.edu/~em36/win31dosbox.html&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support for international language translations and keyboard layouts&lt;/h2&gt; &#xA;&lt;p&gt;DOSBox-X displays English as the default language, and uses the U.S. code page (437) by default, just like DOSBox.&lt;/p&gt; &#xA;&lt;p&gt;All messages displayed by DOSBox-X are in English with the default setting. DOSBox-X does support the feature to change the display messages with the use of language files. The language files control all visible output of the internal commands and the internal DOS, as well as the text in DOSBox-X&#39;s drop-down menus. If you are a speaker of a non-English language, you are encouraged to create additional language files for use with DOSBox-X by translating messages in DOSBox-X to your language. Other DOSBox-X users can also use these language files for DOSBox-X to display messages in such languages. There are several language files available in the DOSBox-X repository, e.g.:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Chinese (Simplified) language file: &lt;a href=&#34;https://github.com/joncampbell123/dosbox-x/raw/master/contrib/translations/zh/zh_CN.lng&#34;&gt;contrib/translations/zh/zh_CN.lng&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Chinese (Traditional) language file: &lt;a href=&#34;https://github.com/joncampbell123/dosbox-x/raw/master/contrib/translations/zh/zh_TW.lng&#34;&gt;contrib/translations/zh/zh_TW.lng&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;French language file: &lt;a href=&#34;https://github.com/joncampbell123/dosbox-x/raw/master/contrib/translations/fr/fr_FR.lng&#34;&gt;contrib/translations/fr/fr_FR.lng&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Japanese language file: &lt;a href=&#34;https://github.com/joncampbell123/dosbox-x/raw/master/contrib/translations/ja/ja_JP.lng&#34;&gt;contrib/translations/ja/ja_JP.lng&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Korean language file: &lt;a href=&#34;https://github.com/joncampbell123/dosbox-x/raw/master/contrib/translations/ko/ko_KR.lng&#34;&gt;contrib/translations/ko/ko_KR.lng&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Portuguese (Brazilian) language file: &lt;a href=&#34;https://github.com/joncampbell123/dosbox-x/raw/master/contrib/translations/pt/pt_BR.lng&#34;&gt;contrib/translations/pt/pt_BR.lng&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Spanish language file: &lt;a href=&#34;https://github.com/joncampbell123/dosbox-x/raw/master/contrib/translations/es/es_ES.lng&#34;&gt;contrib/translations/es/es_ES.lng&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Turkish language file: &lt;a href=&#34;https://github.com/joncampbell123/dosbox-x/raw/master/contrib/translations/tr/tr_TR.lng&#34;&gt;contrib/translations/tr/tr_TR.lng&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The fact that DOSBox-X was developed around the U.S. keyboard layout is primarily due to limitations around the SDL1 library which provides input handling. As such when using the SDL1 version and a non-US keyboard, DOSBox-X automatically uses scancodes with the default setting to work around keyboard layout issues. Scancodes are not needed when using non-US keyboard layouts in the SDL2 version. If you find that a keyboard layout is not yet supported by DOSBox-X, in order to add additional layouts for use with DOSBox-X, please see file &lt;a href=&#34;https://raw.githubusercontent.com/joncampbell123/dosbox-x/master/README.keyboard-layout-handling&#34;&gt;README.keyboard-layout-handling&lt;/a&gt; on how to do so as a developer.&lt;/p&gt; &#xA;&lt;p&gt;For further information on international support and regional settings of DOSBox-X, such as steps to create DOSBox-X language files or use external keyboard files in DOSBox-X, as well as support for the Euro symbol and country-specific date and time formats, please look at the guide &lt;a href=&#34;https://dosbox-x.com/wiki/Guide%3ARegional-settings-in-DOSBox%E2%80%90X&#34;&gt;Regional settings in DOSBox-X&lt;/a&gt; in the &lt;a href=&#34;https://dosbox-x.com/wiki&#34;&gt;DOSBox-X Wiki&lt;/a&gt;. For more information on East Asian (Chinese/Japanese/Korean) language support, see the &lt;a href=&#34;https://dosbox-x.com/wiki/Guide%3AEast-Asian-language-support-in-DOSBox%E2%80%90X&#34;&gt;East Asian language and system support&lt;/a&gt; guide page.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>taogkuk315/CloudLabsAI-Azure9</title>
    <updated>2022-05-29T01:36:26Z</updated>
    <id>tag:github.com,2022-05-29:/taogkuk315/CloudLabsAI-Azure9</id>
    <link href="https://github.com/taogkuk315/CloudLabsAI-Azure9" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;mod_h[ttp]2 - http/2 for Apache httpd&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains &lt;code&gt;mod_h[ttp]2&lt;/code&gt; and &lt;code&gt;mod_proxy_h[ttp]2&lt;/code&gt; from Apache httpd as a standalone build. It servers as early access to features and fixes before being shipped in the next Apache release. Both modules can be considered &lt;strong&gt;production ready&lt;/strong&gt; and stable as shipped by the Apache project.&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;mod_h[ttp]2&lt;/code&gt; is an official Apache httpd module&lt;/strong&gt; since release 2.4.17. &lt;code&gt;mod_proxy_h[ttp]2&lt;/code&gt; has been added in Apache in 2.4.23. The versions here at github are for more frequent releases than the Apache schedule provides for.&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;The following beautiful people have directly contributed to this project via commits over the years: Julian Reschke, Lubos Uhliarik, Luca Toscano, MATSUMOTO Ryosuke, Michael Kaufmann, Michael Köller, Mike Frysinger, Nicholas Race, Nicolas Noble, Petri Koistinen, Sam Hurst, Tatsuhiro Tsujikawa.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;You need a built Apache httpd 2.4.34 or newer, including apxs and headers to compile and run this module. Additionally, you need an installed libnghttp2, at least in version 1.7.0. And additionally, you want an installed OpenSSL 1.0.2 or later.&lt;/p&gt; &#xA;&lt;p&gt;tl;dr&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;You need an installed recent Apache 2.4.x&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Apache 2.4.x Packages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Ubuntu&lt;/strong&gt;: &lt;a href=&#34;https://launchpad.net/~ondrej/+archive/ubuntu/apache2&#34;&gt;ppa by ondrej&lt;/a&gt; for Ubuntu 14.04 and others&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fedora&lt;/strong&gt;: &lt;a href=&#34;https://bodhi.fedoraproject.org/updates/?packages=httpd&#34;&gt;shipped in Fedora 23 and later&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Debian&lt;/strong&gt; sid (unstable) &lt;a href=&#34;https://wiki.debian.org/InstallFAQ#Q._How_do_I_install_.22unstable.22_.28.22sid.22.29.3F&#34;&gt;how to install debian sid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Gentoo&lt;/strong&gt;: &lt;a href=&#34;https://packages.gentoo.org/packages/www-servers/apache&#34;&gt;latest stable&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;FreeBSD&lt;/strong&gt;: &lt;a href=&#34;http://www.freshports.org/www/apache24/&#34;&gt;Apache 2.4 port includes mod_http2&lt;/a&gt; / &lt;a href=&#34;http://www.freshports.org/www/mod_http2/&#34;&gt;mod_http2 port&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Changes&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;code&gt;ChangeLog&lt;/code&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Tests&lt;/h2&gt; &#xA;&lt;p&gt;I decided to make the test suite part of this repository again. The existing suite resides in test Apache httpd test repository and is a set of shell scripts. It works, but I miss features that professional test frameworks bring. The tests included here use &lt;code&gt;python3&lt;/code&gt; and &lt;code&gt;pytest&lt;/code&gt; which I think is an excellent way to do tests. I use it also in my Let&#39;s Encrypt module &lt;code&gt;mod_md&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can build the module without having the test prerequisites. If you want to run them, however, you need &lt;code&gt;pytest&lt;/code&gt;, &lt;code&gt;python3&lt;/code&gt; and a &lt;code&gt;curl&lt;/code&gt; with http2 support. Then you can&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; make&#xA;&amp;gt; make test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;code&gt;mod_proxy_http2&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;This module is part of the Apache httpd proxy architecture and functions similar to &lt;code&gt;mod_proxy_http&lt;/code&gt; and friends. To configure it, you need to use &lt;code&gt;h2:&lt;/code&gt; or &lt;code&gt;h2c:&lt;/code&gt; in the proxy URL. Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;Proxy &#34;balancer://h2-local&#34;&amp;gt;&#xA;    BalancerMember &#34;h2://test.example.org:SUBST_PORT_HTTPS_SUBST&#34;&#xA;&amp;lt;/Proxy&amp;gt;&#xA;&amp;lt;Proxy &#34;balancer://h2c-local&#34;&amp;gt;&#xA;    BalancerMember &#34;h2c://test.example.org:SUBST_PORT_HTTP_SUBST&#34;&#xA;&amp;lt;/Proxy&amp;gt;&#xA;&#xA;&amp;lt;IfModule proxy_http2_module&amp;gt;&#xA;    ProxyPass &#34;/h2proxy&#34; &#34;balancer://h2-local&#34;&#xA;    ProxyPassReverse &#34;/h2proxy&#34; &#34;balancer://h2-local&#34;&#xA;    ProxyPass &#34;/h2cproxy&#34; &#34;balancer://h2c-local&#34;&#xA;    ProxyPassReverse &#34;/h2cproxy&#34; &#34;balancer://h2c-local&#34;&#xA;&amp;lt;/IfModule&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will only work under the following conditions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;the backend speaks HTTP/2, the module will not fallback to HTTP/1.1&lt;/li&gt; &#xA; &lt;li&gt;the backend supports HTTP/2 direct mode (see also &lt;code&gt;H2Direct&lt;/code&gt; directive of &lt;code&gt;mod_http2&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All other common httpd &lt;code&gt;proxy&lt;/code&gt; directives also apply.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The official &lt;a href=&#34;https://httpd.apache.org/docs/2.4/en/mod/mod_http2.html&#34;&gt;Apache documentation of the module&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;I also compiled a &lt;a href=&#34;https://icing.github.io/mod_h2/howto.html&#34;&gt;how to h2 in apache&lt;/a&gt; document with advice on how to deploy, configure and verify your &lt;code&gt;mod_h[ttp]2&lt;/code&gt; installation.&lt;/p&gt; &#xA;&lt;h2&gt;Build from git&lt;/h2&gt; &#xA;&lt;p&gt;Still not dissuaded? Ok, here are some hints to get you started. Building from git is easy, but please be sure that at least autoconf 2.68 is used:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; autoreconf -i&#xA;&amp;gt; automake&#xA;&amp;gt; autoconf&#xA;&amp;gt; ./configure --with-apxs=&amp;lt;path to apxs&amp;gt;&#xA;&amp;gt; make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;Please see the file called LICENSE.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This work has been funded by the GSM Association (&lt;a href=&#34;http://gsma.com&#34;&gt;http://gsma.com&lt;/a&gt;). The module itself was heavily influenced by mod_spdy, the Google implementation of their SPDY protocol. And without Tatsuhiro Tsujikawa excellent nghttp2 work, this would not have been possible.&lt;/p&gt; &#xA;&lt;p&gt;Münster, 04.11.2019,&lt;/p&gt; &#xA;&lt;p&gt;Stefan Eissing, greenbytes GmbH&lt;/p&gt; &#xA;&lt;p&gt;Copying and distribution of this file, with or without modification, are permitted in any medium without royalty provided the copyright notice and this notice are preserved. This file is offered as-is, without warranty of any kind. See LICENSE for details.&lt;/p&gt;</summary>
  </entry>
</feed>