<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-15T01:35:09Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SpacehuhnTech/esp8266_deauther</title>
    <updated>2022-08-15T01:35:09Z</updated>
    <id>tag:github.com,2022-08-15:/SpacehuhnTech/esp8266_deauther</id>
    <link href="https://github.com/SpacehuhnTech/esp8266_deauther" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Affordable WiFi hacking platform for testing and learning&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ESP8266 Deauther Version 2&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;PICTURE logo&#34; src=&#34;https://raw.githubusercontent.com/wiki/spacehuhn/esp8266_deauther/img/deauther_logo.png&#34; width=&#34;200&#34;&gt; &lt;br&gt; &lt;b&gt;Scan for WiFi devices, block selected connections, create dozens of networks and confuse WiFi scanners!&lt;/b&gt; &lt;br&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Difference to Version 3&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SpacehuhnTech/esp8266_deauther/tree/v3&#34;&gt;Version 3&lt;/a&gt; is in development. It is stable to use, but it is very different.&lt;br&gt; It is command line based, which allows it to offer not just more features, but make them more customizable.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;Version 2&lt;/th&gt; &#xA;   &lt;th&gt;Version 3&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Web Interface&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Display support&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Serial Command Line&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Scanner&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Deauth attack&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Beacon attack&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Probe attack&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/spacehuhntech/huhnitor&#34;&gt;Huhnitor&lt;/a&gt; support&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Signal strength scanner&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Authentication scanner&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Rogue AP&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://github.com/spacehuhntech/esp8266_deauther/wiki/Installation&#34;&gt;installation guide in our wiki&lt;/a&gt;.&lt;br&gt; If you&#39;re just looking for the .bin files, go to &lt;a href=&#34;https://github.com/spacehuhn/esp8266_deauther/releases&#34;&gt;releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;About this project&lt;/h2&gt; &#xA;&lt;p&gt;This software allows you to easily perform a variety of actions to test 802.11 wireless networks by using an inexpensive ESP8266 WiFi SoC (System On A Chip).&lt;/p&gt; &#xA;&lt;p&gt;The main feature, the deauthentication attack, is used to disconnect devices from their WiFi network.&lt;br&gt; No one seems to care about this huge vulnerability in the official 802.11 WiFi standard, so I took action and enabled everyone who has less than 10 USD to spare to recreate this project.&lt;br&gt; I hope it raises more attention on the issue. In 2009 the WiFi Alliance actually fixed the problem (see &lt;a href=&#34;https://en.wikipedia.org/wiki/IEEE_802.11w-2009&#34;&gt;802.11w&lt;/a&gt;), but only a few companies implemented it into their devices and software.&lt;br&gt; To effectively prevent a deauthentication attack, both client and access point must support the 802.11w standard with protected management frames (PMF).&lt;br&gt; While most client devices seem to support it when the access point forces it, basically no WiFi access point has it enabled.&lt;/p&gt; &#xA;&lt;p&gt;Feel free to test your hardware out, annoy these companies with the problem, share this project and push for a fix! This project is also a great way to learn more about WiFi, micro controllers, Arduino, hacking and electronics/programming in general.&lt;br&gt; &lt;strong&gt;But please use this tool responsibly and do not use it against others without their permission!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;WiFi Jammer&lt;/h2&gt; &#xA;&lt;p&gt;Many refer to this project as a WiFi jammer. This is problematic, because this firmware is &lt;strong&gt;not&lt;/strong&gt; turning your ESP8266 into a radio or frequency jammer. But this is how most people imagine it without further explaination.&lt;/p&gt; &#xA;&lt;p&gt;So if you like to learn more about the difference, we made a whole video about it:&lt;br&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=gOyfD44A7rE&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/gOyfD44A7rE/0.jpg&#34; alt=&#34;Deauther or Jammer: What&#39;s the difference?&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported Development Boards&lt;/h2&gt; &#xA;&lt;p&gt;This firmware can run on any &lt;strong&gt;ESP8266&lt;/strong&gt;, not however on the ESP32!&lt;br&gt; The most popular development boards, the &lt;code&gt;NodeMCU&lt;/code&gt; and &lt;code&gt;Wemos d1 mini&lt;/code&gt;, work great for this project.&lt;/p&gt; &#xA;&lt;p&gt;If you like to support our work, you can buy get a boards made with this project in mind.&lt;br&gt; They come preflashed with the firmware, so you can start right away.&lt;br&gt; You can chose between:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://spacehuhn.store&#34;&gt;Spacehuhn Store&lt;/a&gt;&lt;/strong&gt;:&lt;br&gt; Our very own store where all revenue goes directly to us and towards the development of new and exciting projects :)&lt;br&gt; We manufacture and ship from Germany.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://maltronics.com/&#34;&gt;Maltronics&lt;/a&gt;&lt;/strong&gt;:&lt;br&gt; We partnered with Maltronics to bring you high quality hacking gadgets.&lt;br&gt; They are based in the UK.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://dstike.com/&#34;&gt;DSTIKE&lt;/a&gt;&lt;/strong&gt;:&lt;br&gt; DSTIKE was our first partner. They manufactured the first official deauther boards.&lt;br&gt; They offer a wide range of deauthers in a variety of form factors, including a smart watch.&lt;br&gt; They are based in China, but their products are available through a variety of stores:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tindie.com/stores/lspoplove&#34;&gt;Tindie&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dstike.aliexpress.com/store/2996024&#34;&gt;AliExpress&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://shop135375846.taobao.com&#34;&gt;Taobao&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This project is a proof of concept for testing and educational purposes.&lt;br&gt; Neither the ESP8266, nor its SDK was meant or built for such purposes. Bugs can occur!&lt;/p&gt; &#xA;&lt;p&gt;Use it only against your own networks and devices!&lt;br&gt; Please check the legal regulations in your country before using it.&lt;br&gt; We don&#39;t take any responsibility for what you do with this program.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;A huge thanks to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://github.com/deantonious&#34;&gt;@deantonious&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jLynx&#34;&gt;@jLynx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lspoplove&#34;&gt;@lspoplove&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/schinfo&#34;&gt;@schinfo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tobozo&#34;&gt;@tobozo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xdavidhu&#34;&gt;@xdavidhu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PwnKitteh&#34;&gt;@PwnKitteh&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;for helping out with various things regarding this project and keeping it alive!&lt;br&gt; Also thanks to everyone working on the libraries used for this project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ThingPulse/esp8266-oled-ssd1306&#34;&gt;esp8266-oled-ssd1306&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bblanchon/ArduinoJson&#34;&gt;ArduinoJson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/adafruit/Adafruit_DotStar&#34;&gt;Adafruit_DotStar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/adafruit/Adafruit_NeoPixel&#34;&gt;Adafruit_NeoPixel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/NorthernWidget/DS3231&#34;&gt;DS3231&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xoseperez/my92xx&#34;&gt;my92xx&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We also thank Espressif and their community for this awesome chip and all the software and hardware projects around it and the countless tutorials you can find online!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This software is licensed under the MIT License. See the &lt;a href=&#34;https://raw.githubusercontent.com/SpacehuhnTech/esp8266_deauther/v2/LICENSE&#34;&gt;license file&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lz4/lz4</title>
    <updated>2022-08-15T01:35:09Z</updated>
    <id>tag:github.com,2022-08-15:/lz4/lz4</id>
    <link href="https://github.com/lz4/lz4" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Extremely Fast Compression algorithm&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LZ4 - Extremely fast compression&lt;/h1&gt; &#xA;&lt;p&gt;LZ4 is lossless compression algorithm, providing compression speed &amp;gt; 500 MB/s per core, scalable with multi-cores CPU. It features an extremely fast decoder, with speed in multiple GB/s per core, typically reaching RAM speed limits on multi-core systems.&lt;/p&gt; &#xA;&lt;p&gt;Speed can be tuned dynamically, selecting an &#34;acceleration&#34; factor which trades compression ratio for faster speed. On the other end, a high compression derivative, LZ4_HC, is also provided, trading CPU time for improved compression ratio. All versions feature the same decompression speed.&lt;/p&gt; &#xA;&lt;p&gt;LZ4 is also compatible with &lt;a href=&#34;https://github.com/facebook/zstd#the-case-for-small-data-compression&#34;&gt;dictionary compression&lt;/a&gt;, both at &lt;a href=&#34;https://github.com/lz4/lz4/raw/v1.8.3/lib/lz4frame.h#L481&#34;&gt;API&lt;/a&gt; and &lt;a href=&#34;https://github.com/lz4/lz4/raw/v1.8.3/programs/lz4.1.md#operation-modifiers&#34;&gt;CLI&lt;/a&gt; levels. It can ingest any input file as dictionary, though only the final 64KB are used. This capability can be combined with the &lt;a href=&#34;https://github.com/facebook/zstd/raw/v1.3.5/programs/zstd.1.md#dictionary-builder&#34;&gt;Zstandard Dictionary Builder&lt;/a&gt;, in order to drastically improve compression performance on small files.&lt;/p&gt; &#xA;&lt;p&gt;LZ4 library is provided as open-source software using BSD 2-Clause license.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Branch&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dev&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://travis-ci.org/lz4/lz4&#34;&gt;&lt;img src=&#34;https://travis-ci.org/lz4/lz4.svg?branch=dev&#34; alt=&#34;Build Status&#34; title=&#34;Continuous Integration test suite&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/YannCollet/lz4-1lndh&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/lz4/lz4?branch=dev&amp;amp;svg=true&#34; alt=&#34;Build status&#34; title=&#34;Windows test suite&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Benchmarks&lt;/h2&gt; &#xA;&lt;p&gt;The benchmark uses &lt;a href=&#34;https://github.com/inikep/lzbench&#34;&gt;lzbench&lt;/a&gt;, from @inikep compiled with GCC v8.2.0 on Linux 64-bits (Ubuntu 4.18.0-17). The reference system uses a Core i7-9700K CPU @ 4.9GHz (w/ turbo boost). Benchmark evaluates the compression of reference &lt;a href=&#34;http://sun.aei.polsl.pl/~sdeor/index.php?page=silesia&#34;&gt;Silesia Corpus&lt;/a&gt; in single-thread mode.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Compressor&lt;/th&gt; &#xA;   &lt;th&gt;Ratio&lt;/th&gt; &#xA;   &lt;th&gt;Compression&lt;/th&gt; &#xA;   &lt;th&gt;Decompression&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;memcpy&lt;/td&gt; &#xA;   &lt;td&gt;1.000&lt;/td&gt; &#xA;   &lt;td&gt;13700 MB/s&lt;/td&gt; &#xA;   &lt;td&gt;13700 MB/s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;LZ4 default (v1.9.0)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;2.101&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;780 MB/s&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;4970 MB/s&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LZO 2.09&lt;/td&gt; &#xA;   &lt;td&gt;2.108&lt;/td&gt; &#xA;   &lt;td&gt;670 MB/s&lt;/td&gt; &#xA;   &lt;td&gt;860 MB/s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;QuickLZ 1.5.0&lt;/td&gt; &#xA;   &lt;td&gt;2.238&lt;/td&gt; &#xA;   &lt;td&gt;575 MB/s&lt;/td&gt; &#xA;   &lt;td&gt;780 MB/s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Snappy 1.1.4&lt;/td&gt; &#xA;   &lt;td&gt;2.091&lt;/td&gt; &#xA;   &lt;td&gt;565 MB/s&lt;/td&gt; &#xA;   &lt;td&gt;1950 MB/s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.zstd.net/&#34;&gt;Zstandard&lt;/a&gt; 1.4.0 -1&lt;/td&gt; &#xA;   &lt;td&gt;2.883&lt;/td&gt; &#xA;   &lt;td&gt;515 MB/s&lt;/td&gt; &#xA;   &lt;td&gt;1380 MB/s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LZF v3.6&lt;/td&gt; &#xA;   &lt;td&gt;2.073&lt;/td&gt; &#xA;   &lt;td&gt;415 MB/s&lt;/td&gt; &#xA;   &lt;td&gt;910 MB/s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.zlib.net/&#34;&gt;zlib&lt;/a&gt; deflate 1.2.11 -1&lt;/td&gt; &#xA;   &lt;td&gt;2.730&lt;/td&gt; &#xA;   &lt;td&gt;100 MB/s&lt;/td&gt; &#xA;   &lt;td&gt;415 MB/s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;LZ4 HC -9 (v1.9.0)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;2.721&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;41 MB/s&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;4900 MB/s&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://www.zlib.net/&#34;&gt;zlib&lt;/a&gt; deflate 1.2.11 -6&lt;/td&gt; &#xA;   &lt;td&gt;3.099&lt;/td&gt; &#xA;   &lt;td&gt;36 MB/s&lt;/td&gt; &#xA;   &lt;td&gt;445 MB/s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;LZ4 is also compatible and optimized for x32 mode, for which it provides additional speed performance.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;make&#xA;make install     # this command may require root permissions&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;LZ4&#39;s &lt;code&gt;Makefile&lt;/code&gt; supports standard &lt;a href=&#34;https://www.gnu.org/prep/standards/html_node/Makefile-Conventions.html&#34;&gt;Makefile conventions&lt;/a&gt;, including &lt;a href=&#34;https://www.gnu.org/prep/standards/html_node/DESTDIR.html&#34;&gt;staged installs&lt;/a&gt;, &lt;a href=&#34;https://www.gnu.org/prep/standards/html_node/Directory-Variables.html&#34;&gt;redirection&lt;/a&gt;, or &lt;a href=&#34;https://www.gnu.org/prep/standards/html_node/Utilities-in-Makefiles.html&#34;&gt;command redefinition&lt;/a&gt;. It is compatible with parallel builds (&lt;code&gt;-j#&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Building LZ4 - Using vcpkg&lt;/h3&gt; &#xA;&lt;p&gt;You can download and install LZ4 using the &lt;a href=&#34;https://github.com/Microsoft/vcpkg&#34;&gt;vcpkg&lt;/a&gt; dependency manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/Microsoft/vcpkg.git&#xA;cd vcpkg&#xA;./bootstrap-vcpkg.sh&#xA;./vcpkg integrate install&#xA;vcpkg install lz4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The LZ4 port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please &lt;a href=&#34;https://github.com/Microsoft/vcpkg&#34;&gt;create an issue or pull request&lt;/a&gt; on the vcpkg repository.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The raw LZ4 block compression format is detailed within &lt;a href=&#34;https://raw.githubusercontent.com/lz4/lz4/dev/doc/lz4_Block_format.md&#34;&gt;lz4_Block_format&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Arbitrarily long files or data streams are compressed using multiple blocks, for streaming requirements. These blocks are organized into a frame, defined into &lt;a href=&#34;https://raw.githubusercontent.com/lz4/lz4/dev/doc/lz4_Frame_format.md&#34;&gt;lz4_Frame_format&lt;/a&gt;. Interoperable versions of LZ4 must also respect the frame format.&lt;/p&gt; &#xA;&lt;h2&gt;Other source versions&lt;/h2&gt; &#xA;&lt;p&gt;Beyond the C reference source, many contributors have created versions of lz4 in multiple languages (Java, C#, Python, Perl, Ruby, etc.). A list of known source ports is maintained on the &lt;a href=&#34;http://www.lz4.org&#34;&gt;LZ4 Homepage&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>videolan/vlc</title>
    <updated>2022-08-15T01:35:09Z</updated>
    <id>tag:github.com,2022-08-15:/videolan/vlc</id>
    <link href="https://github.com/videolan/vlc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;VLC media player - All pull requests are ignored, please follow https://wiki.videolan.org/Sending_Patches_VLC/&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VLC media player&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;VLC&lt;/strong&gt; is a libre and open source &lt;strong&gt;media player&lt;/strong&gt; and &lt;strong&gt;multimedia engine&lt;/strong&gt;, focused on &lt;strong&gt;playing everything&lt;/strong&gt;, and &lt;strong&gt;running everywhere&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;VLC&lt;/strong&gt; can play most multimedia files, discs, streams, devices and is also able to convert, encode, &lt;strong&gt;stream&lt;/strong&gt; and manipulate streams into numerous formats.&lt;/p&gt; &#xA;&lt;p&gt;VLC is used by many over the world, on numerous platforms, for very different use cases.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;strong&gt;engine of VLC&lt;/strong&gt; can be embedded into 3rd party applications, and is called &lt;em&gt;libVLC&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;VLC&lt;/strong&gt; is part of the &lt;a href=&#34;https://videolan.org&#34;&gt;VideoLAN project&lt;/a&gt; and is developed and supported by a community of volunteers.&lt;/p&gt; &#xA;&lt;p&gt;The VideoLAN project was started at the university &lt;a href=&#34;https://www.centralesupelec.fr/&#34;&gt;École Centrale Paris&lt;/a&gt; who relicensed VLC under the GPLv2 license in February 2001. Since then, VLC has been downloaded &lt;strong&gt;billions&lt;/strong&gt; of times.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;VLC&lt;/strong&gt; is released under the GPLv2 &lt;em&gt;(or later)&lt;/em&gt; license. &lt;em&gt;On some platforms, it is de facto GPLv3, because of the licenses of dependencies&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;libVLC&lt;/strong&gt;, the engine is released under the LGPLv2 &lt;em&gt;(or later)&lt;/em&gt; license. &lt;br&gt; This allows embedding the engine in 3rd party applications, while letting them to be licensed under other licenses.&lt;/p&gt; &#xA;&lt;h1&gt;Platforms&lt;/h1&gt; &#xA;&lt;p&gt;VLC is available for the following platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.videolan.org/vlc/download-windows.html&#34;&gt;Windows&lt;/a&gt; &lt;em&gt;(from 7 and later, including UWP platforms and all versions of Windows 10)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.videolan.org/vlc/download-macosx.html&#34;&gt;macOS&lt;/a&gt; &lt;em&gt;(10.10 and later)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.videolan.org/vlc/#download&#34;&gt;GNU/Linux&lt;/a&gt; and affiliated&lt;/li&gt; &#xA; &lt;li&gt;*BSD and affiliated&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.videolan.org/vlc/download-android.html&#34;&gt;Android&lt;/a&gt; &lt;em&gt;(4.2 and later)&lt;/em&gt;, including Android TV and Android Auto&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.videolan.org/vlc/download-ios.html&#34;&gt;iOS&lt;/a&gt; &lt;em&gt;(9 and later)&lt;/em&gt;, including AppleTV and iPadOS&lt;/li&gt; &#xA; &lt;li&gt;Haiku, OS/2 and a few others.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Not all platforms receive the same amount of care, due to our limited resources.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Nota Bene&lt;/strong&gt;: The &lt;a href=&#34;https://code.videolan.org/videolan/vlc-android/&#34;&gt;Android app&lt;/a&gt; and the &lt;a href=&#34;https://code.videolan.org/videolan/vlc-ios/&#34;&gt;iOS app&lt;/a&gt; are located in different repositories than the main one.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing &amp;amp; Community&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;VLC&lt;/strong&gt; is maintained by a community of people, and VideoLAN is not paying any of them.&lt;br&gt; The community is composed of developers, helpers, maintainers, designers and writers that want this open source project to thrive.&lt;/p&gt; &#xA;&lt;p&gt;The main development of VLC is done in the C language, but this repository also contains plenty of C++, Obj-C, asm and Rust.&lt;/p&gt; &#xA;&lt;p&gt;Other repositories linked to vlc are done in languages including Kotlin/Java &lt;a href=&#34;https://code.videolan.org/videolan/vlc-android/&#34;&gt;(Android)&lt;/a&gt;, Swift &lt;a href=&#34;https://code.videolan.org/videolan/vlc-ios/&#34;&gt;(iOS)&lt;/a&gt;, and C# &lt;a href=&#34;https://code.videolan.org/videolan/libvlcsharp/&#34;&gt;(libVLCSharp)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We need help with the following tasks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;coding&lt;/li&gt; &#xA; &lt;li&gt;packaging for Windows, macOS and Linux distributions&lt;/li&gt; &#xA; &lt;li&gt;technical writing for the documentation&lt;/li&gt; &#xA; &lt;li&gt;design&lt;/li&gt; &#xA; &lt;li&gt;support&lt;/li&gt; &#xA; &lt;li&gt;community management and communication.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please contribute :)&lt;/p&gt; &#xA;&lt;p&gt;We are on IRC. You can find us on the &lt;strong&gt;#videolan&lt;/strong&gt; channel on &lt;em&gt;&lt;a href=&#34;https://libera.chat&#34;&gt;Libera.chat&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are now done through Merge Requests on our &lt;a href=&#34;https://code.videolan.org/videolan/vlc/&#34;&gt;GitLab repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;CI and discussions should be resolved before a Merge Request can be merged.&lt;/p&gt; &#xA;&lt;h1&gt;libVLC&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;libVLC&lt;/strong&gt; is an embeddable engine for 3rd party applications and frameworks.&lt;/p&gt; &#xA;&lt;p&gt;It runs on the same platforms as VLC &lt;em&gt;(and sometimes on more)&lt;/em&gt; and can provide playback, streaming and conversion of multimedia files and streams.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;libVLC&lt;/strong&gt; has numerous bindings for other languages, such as C++, Python and C#.&lt;/p&gt; &#xA;&lt;h1&gt;Support&lt;/h1&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;p&gt;Some useful links that might help you:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.videolan.org/vlc/&#34;&gt;VLC web site&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.videolan.org/support/&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.videolan.org/&#34;&gt;Forums&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.videolan.org/&#34;&gt;Wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.videolan.org/Developers_Corner&#34;&gt;Developer&#39;s Corner&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.videolan.org/Hacker_Guide&#34;&gt;VLC hacking guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://code.videolan.org/videolan/vlc/-/issues&#34;&gt;Bugtracker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.videolan.org/&#34;&gt;VideoLAN web site&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Source Code sitemap&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;ABOUT-NLS          - Notes on the Free Translation Project.&#xA;AUTHORS            - VLC authors.&#xA;COPYING            - The GPL license.&#xA;COPYING.LIB        - The LGPL license.&#xA;INSTALL            - Installation and building instructions.&#xA;NEWS               - Important modifications between the releases.&#xA;README             - Project summary.&#xA;THANKS             - VLC contributors.&#xA;&#xA;bin/               - VLC binaries.&#xA;bindings/          - libVLC bindings to other languages.&#xA;compat/            - compatibility library for operating systems missing&#xA;                     essential functionalities.&#xA;contrib/           - Facilities for retrieving external libraries and building&#xA;                     them for systems that don&#39;t have the right versions.&#xA;doc/               - Miscellaneous documentation.&#xA;extras/analyser    - Code analyser and editor specific files.&#xA;extras/buildsystem - Different build system specific files.&#xA;extras/misc        - Files that don&#39;t fit in the other extras/ categories.&#xA;extras/package     - VLC packaging specific files such as spec files.&#xA;extras/tools/      - Facilities for retrieving external building tools needed&#xA;                     for systems that don&#39;t have the right versions.&#xA;include/           - Header files.&#xA;lib/               - libVLC source code.&#xA;modules/           - VLC plugins and modules. Most of the code is here.&#xA;po/                - VLC translations.&#xA;share/             - Common resource files.&#xA;src/               - libvlccore source code.&#xA;test/              - Testing system.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>