<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-14T01:35:27Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Tencent/xLua</title>
    <updated>2022-07-14T01:35:27Z</updated>
    <id>tag:github.com,2022-07-14:/Tencent/xLua</id>
    <link href="https://github.com/Tencent/xLua" rel="alternate"></link>
    <summary type="html">&lt;p&gt;xLua is a lua programming solution for C# ( Unity, .Net, Mono) , it supports android, ios, windows, linux, osx, etc.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Doc/xLua.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/xLua/raw/master/LICENSE.TXT&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/xLua/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/release-v2.1.15-blue.svg?sanitize=true&#34; alt=&#34;release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/xLua/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-blue.svg?sanitize=true&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/Tencent/xLua&#34;&gt;&lt;img src=&#34;https://travis-ci.org/Tencent/xLua.svg?branch=master&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/README_EN.md&#34;&gt;(English Documents Available)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;C#下Lua编程支持&lt;/h2&gt; &#xA;&lt;p&gt;xLua为Unity、 .Net、 Mono等C#环境增加Lua脚本编程的能力，借助xLua，这些Lua代码可以方便的和C#相互调用。&lt;/p&gt; &#xA;&lt;h2&gt;xLua的突破&lt;/h2&gt; &#xA;&lt;p&gt;xLua在功能、性能、易用性都有不少突破，这几方面分别最具代表性的是：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可以运行时把C#实现（方法，操作符，属性，事件等等）替换成lua实现；&lt;/li&gt; &#xA; &lt;li&gt;出色的GC优化，自定义struct，枚举在Lua和C#间传递无C# gc alloc；&lt;/li&gt; &#xA; &lt;li&gt;编辑器下无需生成代码，开发更轻量；&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;更详细的特性、平台支持介绍请看&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Doc/features.md&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;安装&lt;/h2&gt; &#xA;&lt;p&gt;打开zip包，你会看到一个Assets目录，这目录就对应Unity工程的Assets目录，保持这目录结构放到你的Unity工程。&lt;/p&gt; &#xA;&lt;p&gt;如果希望安装到其它目录，请看&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Doc/faq.md&#34;&gt;FAQ&lt;/a&gt;相关介绍。&lt;/p&gt; &#xA;&lt;h2&gt;文档&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Doc/faq.md&#34;&gt;常见问题解答&lt;/a&gt;：常见问题都总结在这里，初使用大多数问题都可以在这里找到答案。&lt;/li&gt; &#xA; &lt;li&gt;(必看)&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Doc/XLua%E6%95%99%E7%A8%8B.md&#34;&gt;XLua教程&lt;/a&gt;：教程，其配套代码&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Tutorial/&#34;&gt;这里&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;(必看)&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Doc/configure.md&#34;&gt;XLua的配置&lt;/a&gt;：介绍如何配置xLua。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Doc/hotfix.md&#34;&gt;热补丁操作指南&lt;/a&gt;：介绍如何使用热补丁特性。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Doc/XLua%E5%A2%9E%E5%8A%A0%E5%88%A0%E9%99%A4%E7%AC%AC%E4%B8%89%E6%96%B9lua%E5%BA%93.md&#34;&gt;XLua增加删除第三方lua库&lt;/a&gt;：如何增删第三方lua扩展库。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Doc/XLua_API.md&#34;&gt;XLua API&lt;/a&gt;：API文档。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Doc/custom_generate.md&#34;&gt;生成引擎二次开发指南&lt;/a&gt;：介绍如何做生成引擎的二次开发。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;快速入门&lt;/h2&gt; &#xA;&lt;p&gt;一个完整的例子仅需3行代码：&lt;/p&gt; &#xA;&lt;p&gt;安装好xLua，建一个MonoBehaviour拖到场景，在Start加入如下代码：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;XLua.LuaEnv luaenv = new XLua.LuaEnv();&#xA;luaenv.DoString(&#34;CS.UnityEngine.Debug.Log(&#39;hello world&#39;)&#34;);&#xA;luaenv.Dispose();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;1、DoString参数为string，可输入任意合法的Lua代码，本示例在lua里调用C#的UnityEngine.Debug.Log打印了个日志。&lt;/p&gt; &#xA;&lt;p&gt;2、一个LuaEnv实例对应Lua虚拟机，出于开销的考虑，建议全局唯一。&lt;/p&gt; &#xA;&lt;p&gt;C#主动调用lua也很简单，比如要调用lua的系统函数，推荐方式是：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;声明&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;[XLua.CSharpCallLua]&#xA;public delegate double LuaMax(double a, double b);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;绑定&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;var max = luaenv.Global.GetInPath&amp;lt;LuaMax&amp;gt;(&#34;math.max&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;调用&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;Debug.Log(&#34;max:&#34; + max(32, 12));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;建议绑定一次，重复使用。生成了代码的话，调用max是不产生gc alloc的。&lt;/p&gt; &#xA;&lt;h2&gt;热补丁&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;侵入性小，老项目原有代码不做任何调整就可使用。&lt;/li&gt; &#xA; &lt;li&gt;运行时影响小，不打补丁基本和原有程序一样。&lt;/li&gt; &#xA; &lt;li&gt;出问题了可以用Lua来打补丁，这时才会走到lua代码逻辑；&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Doc/hotfix.md&#34;&gt;这里&lt;/a&gt;是使用指南。&lt;/p&gt; &#xA;&lt;h2&gt;更多示例&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Examples/01_Helloworld/&#34;&gt;01_Helloworld&lt;/a&gt;: 快速入门的例子。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Examples/02_U3DScripting/&#34;&gt;02_U3DScripting&lt;/a&gt;: 展示怎么用lua来写MonoBehaviour。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Examples/03_UIEvent/&#34;&gt;03_UIEvent&lt;/a&gt;: 展示怎么用lua来写UI逻辑。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Examples/04_LuaObjectOrented/&#34;&gt;04_LuaObjectOrented&lt;/a&gt;: 展示lua面向对象和C#的配合。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Examples/05_NoGc/&#34;&gt;05_NoGc&lt;/a&gt;: 展示怎么去避免值类型的GC。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Examples/06_Coroutine/&#34;&gt;06_Coroutine&lt;/a&gt;: 展示lua协程怎么和Unity协程相配合。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Examples/07_AsyncTest/&#34;&gt;07_AsyncTest&lt;/a&gt;: 展示怎么用lua协程来把异步逻辑同步化。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Examples/08_Hotfix/&#34;&gt;08_Hotfix&lt;/a&gt;: 热补丁的示例（需要开启热补丁特性，如何开启请看&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Doc/hotfix.md&#34;&gt;指南&lt;/a&gt;）。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Examples/09_GenericMethod/&#34;&gt;09_GenericMethod&lt;/a&gt;: 泛化函数支持的演示。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Examples/10_SignatureLoader/&#34;&gt;10_SignatureLoader&lt;/a&gt;: 展示如何读取经数字签名的lua脚本，参见&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Doc/signature.md&#34;&gt;数字签名&lt;/a&gt;的文档介绍。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Examples/11_RawObject/&#34;&gt;11_RawObject&lt;/a&gt;: 当C#参数是object时，如何把一个lua number指定以boxing后的int传递过去。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Examples/12_ReImplementInLua/&#34;&gt;12_ReImplementInLua&lt;/a&gt;: 展示如何将复杂值类型改为lua实现。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;技术支持&lt;/h2&gt; &#xA;&lt;p&gt;一群：612705778 (已满)&lt;/p&gt; &#xA;&lt;p&gt;二群：703073338 (已满)&lt;/p&gt; &#xA;&lt;p&gt;三群：811246782&lt;/p&gt; &#xA;&lt;p&gt;入群的问题：有问题该先从哪找答案&lt;/p&gt; &#xA;&lt;p&gt;回答：FAQ&lt;/p&gt; &#xA;&lt;p&gt;平时也要谨记这答案，90%以上问题都可以在&lt;a href=&#34;https://raw.githubusercontent.com/Tencent/xLua/master/Assets/XLua/Doc/faq.md&#34;&gt;FAQ&lt;/a&gt;里头找到答案。这些问题就别在群刷屏了。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>skylersaleh/SkyEmu</title>
    <updated>2022-07-14T01:35:27Z</updated>
    <id>tag:github.com,2022-07-14:/skylersaleh/SkyEmu</id>
    <link href="https://github.com/skylersaleh/SkyEmu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Game Boy, Game Boy Color, and Game Boy Advanced Emulator&lt;/p&gt;&lt;hr&gt;&lt;img width=&#34;90&#34; align=&#34;left&#34; alt=&#34;SkyEmu App Screenshot&#34; src=&#34;https://user-images.githubusercontent.com/7118296/175430950-1d969fa8-e192-4e0d-a585-521b4b286725.png&#34;&gt; &#xA;&lt;h1&gt;SkyEmu&lt;/h1&gt; &#xA;&lt;p&gt;SkyEmu is a low level GameBoy, GameBoy Color and Game Boy Advance emulator. Its primary focus is to provide a good user experience through a good mixture of tradeoffs of accuracy, performance, features and usability.&lt;/p&gt; &#xA;&lt;img width=&#34;1015&#34; alt=&#34;SkyEmu App Screenshot&#34; src=&#34;https://user-images.githubusercontent.com/7118296/175430669-20c8079a-bf5c-44b6-b7da-270aca51f216.png&#34;&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/skylersaleh/SkyEmu/main/docs/Accuracy.md&#34;&gt;Highly accurate Game Boy Advanced emulation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Game Boy and Game Boy Color Emulation&lt;/li&gt; &#xA; &lt;li&gt;Experimental Nintendo DS support (only capable of running homebrew currently)&lt;/li&gt; &#xA; &lt;li&gt;Cross Platform: Windows, MacOS, Linux, Web App (with touch screen controls for iOS and Android)&lt;/li&gt; &#xA; &lt;li&gt;Game Controller and Rumble Support with configureable keybinds&lt;/li&gt; &#xA; &lt;li&gt;4x Save Slots with screenshot preview&lt;/li&gt; &#xA; &lt;li&gt;Game fastforward and rewind support (supporting &lt;a href=&#34;https://www.youtube.com/watch?v=Sfc_1NKbiKg&#34;&gt;very long rewind times&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Support for emulating the Real Time Clock&lt;/li&gt; &#xA; &lt;li&gt;CPU, MMIO, and Memory Debuggers&lt;/li&gt; &#xA; &lt;li&gt;Dark and Light Themes&lt;/li&gt; &#xA; &lt;li&gt;Support for loading official BIOSs dumps&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Web App Based Build (Desktop/iOS/Android)&lt;/h2&gt; &#xA;&lt;p&gt;The latest version of the emulator can be played at the following address as a progressive web app:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://web.skyemu.app/&#34;&gt;https://web.skyemu.app/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;On Mobile platforms it is recommended to add to the home screen and launch from there. This will prevent the web browser from auto deleting save files and will remove the browsers UI.&lt;/p&gt; &#xA;&lt;p&gt;Native builds can be downloaded at the following links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nightly.link/skylersaleh/SkyEmu/workflows/deploy_win/main/WindowsRelease.zip&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nightly.link/skylersaleh/SkyEmu/workflows/deploy_mac/main/MacOSRelease.zip&#34;&gt;macOS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nightly.link/skylersaleh/SkyEmu/workflows/deploy_linux/main/LinuxRelease.zip&#34;&gt;Linux&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Drag and drop a rom in to load it or click on the Load .GB/.GBC/.GBA button to open a menu to select a rom.&lt;/p&gt; &#xA;&lt;p&gt;Note: A GBA BIOS is not required as SkyEmu bundles an open source replacement BIOS. However, a dump of an official GBA BIOS should be used if you want to maximize accuracy or you like seeing the GBA intro.&lt;/p&gt; &#xA;&lt;h2&gt;Default Controls:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WASD: D-Pad&lt;/li&gt; &#xA; &lt;li&gt;J: A button&lt;/li&gt; &#xA; &lt;li&gt;K: B button&lt;/li&gt; &#xA; &lt;li&gt;&#39;: Select button&lt;/li&gt; &#xA; &lt;li&gt;Enter: Start button&lt;/li&gt; &#xA; &lt;li&gt;U: L shoulder&lt;/li&gt; &#xA; &lt;li&gt;I: R shoulder&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On mobile platforms an onscreen touch screen controller is provided.&lt;/p&gt; &#xA;&lt;h2&gt;Loading save files and BIOSs&lt;/h2&gt; &#xA;&lt;p&gt;On web builds save files and the BIOS can be loaded by dragging them onto the page or loading them using the ROM file picker. The GBA BIOS must be named &lt;code&gt;gba_bios.bin&lt;/code&gt; for the emulator to pick it up. Save files must be named the name of the rom file with the extension &lt;code&gt;.sav&lt;/code&gt;. So for example if the ROM was &lt;code&gt;MyRomFile.gba&lt;/code&gt; the save file must be called &lt;code&gt;MyRomFile.sav&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;On native builds the above naming convention still applies, but the save/BIOS files must be instead located in the same folder as the ROM file, instead of being dragged or loaded in the emulator itself.&lt;/p&gt; &#xA;&lt;h2&gt;Native Build Instructions&lt;/h2&gt; &#xA;&lt;p&gt;Native builds are experimental currently but can be built using the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir build&#xA;cd build&#xA;cmake .. &#xA;cmake --build . &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The output binaries should be in the build/bin folder&lt;/p&gt; &#xA;&lt;p&gt;Native builds support loading roms through the command line by specifying the path to the ROM as the first argument:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./SkyEmu path/to/rom.gba&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Accuracy/Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;SkyEmu has been tested on 100s of ROMs and most common games should be playable with no to minor bugs currently. However, the GBA emulation is significantly more accurate than the GB/GBC emulation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;GBA&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Per Pixel PPU Implementation capable of both scan line and mid scan line effects (SkyEmu is the only GBA emulator released to support this)&lt;/li&gt; &#xA; &lt;li&gt;Passes the AGS Aging Test ROM (SkyEmu is the second SW based GBA emulator to ever pass this)&lt;/li&gt; &#xA; &lt;li&gt;Can run difficult to emulate GBA games such as the NES Classics Series, Golden Sun and Hello Kitty Miracle Fashion Maker&lt;/li&gt; &#xA; &lt;li&gt;100% Passes all ArmWrestler Tests&lt;/li&gt; &#xA; &lt;li&gt;100% Passes all FuzzARM tests&lt;/li&gt; &#xA; &lt;li&gt;100% Passes arm.gba and thumb.gba&lt;/li&gt; &#xA; &lt;li&gt;Passes 2020/2020 GBA Suite timing tests when utilizing the official Nintendo GBA BIOS (SkyEmu is one of the few emulators capable of passing this test).&lt;/li&gt; &#xA; &lt;li&gt;Full instruction pipeline and prefetch emulation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;GB&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Passes all of Blargg&#39;s CPU instruction tests&lt;/li&gt; &#xA; &lt;li&gt;Passes DMG and GBC acid2 PPU conformance tests&lt;/li&gt; &#xA; &lt;li&gt;Passes MBCtest&lt;/li&gt; &#xA; &lt;li&gt;Scan line based PPU implementation&lt;/li&gt; &#xA; &lt;li&gt;Anti-aliased audio synthesis with support for APU changes per sample (supports Pikachu&#39;s voice in Pokemon Yellow/Pokemon Pinball)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>cstack/db_tutorial</title>
    <updated>2022-07-14T01:35:27Z</updated>
    <id>tag:github.com,2022-07-14:/cstack/db_tutorial</id>
    <link href="https://github.com/cstack/db_tutorial" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Writing a sqlite clone from scratch in C&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Let&#39;s Build a Simple Database&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cstack.github.io/db_tutorial/&#34;&gt;View rendered tutorial&lt;/a&gt; (with more details on what this is.)&lt;/p&gt; &#xA;&lt;h2&gt;Notes to myself&lt;/h2&gt; &#xA;&lt;p&gt;Run site locally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bundle exec jekyll serve&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>