<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-07T01:24:59Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pinauten/Fugu15_Rootful</title>
    <updated>2023-10-07T01:24:59Z</updated>
    <id>tag:github.com,2023-10-07:/pinauten/Fugu15_Rootful</id>
    <link href="https://github.com/pinauten/Fugu15_Rootful" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Rootful version of Fugu15 with full tweak support (including arm64 tweaks), for arm64e devices on iOS 15.0 - 15.4.1&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fugu15 - Rootful Edition&lt;/h1&gt; &#xA;&lt;p&gt;Fugu15 is a semi-untethered permasigned jailbreak for iOS 15.&lt;br&gt; This version includes full support for tweaks and is rootful.&lt;br&gt; Special thanks to &lt;a href=&#34;https://twitter.com/tihmstar&#34;&gt;tihmstar&lt;/a&gt; for helping to turn Fugu15 into a full jailbreak and for extensively testing it.&lt;/p&gt; &#xA;&lt;h1&gt;WARNING - ONLY FOR DEVELOPERS&lt;/h1&gt; &#xA;&lt;p&gt;No support will be provided for this version of Fugu15. Feel free to fix it if you want to, but note that no pull requests will be accepted as I&#39;m done with jailbreaking.&lt;/p&gt; &#xA;&lt;h1&gt;Tested Devices and iOS Versions&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;iPhone Xs Max: iOS 15.4.1&lt;/li&gt; &#xA; &lt;li&gt;iPhone 13 Pro: iOS 15.1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Building&lt;/h1&gt; &#xA;&lt;p&gt;Prerequisites:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure you have Xcode 14.2 installed&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Now you can simply run &lt;code&gt;make&lt;/code&gt; to build Fugu15 (internet connection required to download dependencies).&lt;/p&gt; &#xA;&lt;h1&gt;Installing&lt;/h1&gt; &#xA;&lt;p&gt;Simply install it via Xcode. Currently doesn&#39;t support installation via TrollStore because of some bugs.&lt;/p&gt; &#xA;&lt;h1&gt;Bootstrapping&lt;/h1&gt; &#xA;&lt;p&gt;Currently, there is no easy way to bootstrap this version of Fugu15. To bootstrap it:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Remove the &lt;code&gt;doit&lt;/code&gt; command from &lt;code&gt;iDownload_autorun&lt;/code&gt; in &lt;code&gt;Fugu15/Fugu15/iDownloadCmds.swift&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jailbreak, then once you see the success message (don&#39;t tap on &lt;code&gt;Reboot Userspace&lt;/code&gt;!), connect to iDownload and run the following commands:&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stealCreds 1&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rsc MachOMerger&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rsc libdyldhook.dylib&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rsc ldid&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rsc bootstrapFS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rsc tar&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rsc bootstrap_root.tar&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/private/preboot/bootstrapFS&lt;/code&gt; (You may have to run this multiple times until it works)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rootfs /dev/disk0s1s8 /dev/disk0s1s9 /dev/disk0s1s10 /dev/disk0s1s11 /dev/disk0s1s12 /dev/disk0s1s13&lt;/code&gt; (You might need to adjust the partition names based on the bootstrapFS output)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd /&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;/private/preboot/tar -xvf /private/preboot/bootstrap_root.tar&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Now reboot your device and add the &lt;code&gt;doit&lt;/code&gt; command back to &lt;code&gt;iDownload_autorun&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Jailbreak, then once you see the success message (don&#39;t tap on &lt;code&gt;Reboot Userspace&lt;/code&gt;!), connect to iDownload and install OpenSSH via dpkg (debs not provided)&lt;/li&gt; &#xA; &lt;li&gt;Tap on the &lt;code&gt;Reboot Userspace&lt;/code&gt; button&lt;/li&gt; &#xA; &lt;li&gt;After the userspace reboot, SSH should be running. Use it to install Sileo and libhooker (debs not provided)&lt;/li&gt; &#xA; &lt;li&gt;When done correctly, you should now have a rootful jailbreak which supports all Tweaks!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;iDownload&lt;/h1&gt; &#xA;&lt;p&gt;Like all Fugu jailbreaks, Fugu15 ships with iDownload. The iDownload shell can be accessed on port 1337 (run &lt;code&gt;iproxy 1337 1337 &amp;amp;&lt;/code&gt; and then &lt;code&gt;nc 127.1 1337&lt;/code&gt; to connect to iDownload).&lt;br&gt; Type &lt;code&gt;help&lt;/code&gt; to see a list of supported commands.&lt;br&gt; The following commands are especially useful:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;r64/r32/r16/r8 &amp;lt;address&amp;gt;&lt;/code&gt;: Read a 64/32/16/8 bit integer at the given kernel address. Add the &lt;code&gt;@S&lt;/code&gt; suffix to slide the given address or &lt;code&gt;@P&lt;/code&gt; to read from a physical address.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;w64/w32/w16/w8 &amp;lt;address&amp;gt; &amp;lt;value&amp;gt;&lt;/code&gt;: Write the given 64/32/16/8 bit integer to the given kernel address. Also supports the suffixes described above and additionally &lt;code&gt;@PPL&lt;/code&gt; to write to a PPL protected address (see &lt;code&gt;krwhelp&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;kcall &amp;lt;address&amp;gt; &amp;lt;up to 8 arguments&amp;gt;&lt;/code&gt;: Call the kernel function at the given address, passing up to 8 64-Bit integer arguments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tcload &amp;lt;path to TrustCache&amp;gt;&lt;/code&gt;: Load the given TrustCache into the kernel&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;p&gt;The following open-source software is used by Fugu15:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ProcursusTeam/ldid&#34;&gt;ldid&lt;/a&gt;: Used to resign the patched dyld. License: &lt;a href=&#34;https://github.com/ProcursusTeam/ldid/raw/master/COPYING&#34;&gt;GNU Affero General Public License v3.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tihmstar/libgrabkernel&#34;&gt;libgrabkernel&lt;/a&gt;: Used to download the kernel for the device so the patchfinder can be run. License: &lt;a href=&#34;https://github.com/tihmstar/libgrabkernel/raw/master/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tihmstar/libtakeover&#34;&gt;libtakeover&lt;/a&gt;: &lt;code&gt;inject_criticald&lt;/code&gt;, used to inject &lt;code&gt;FuFuGuGu.dylib&lt;/code&gt; into launchd. License: &lt;a href=&#34;https://github.com/tihmstar/libtakeover/raw/master/LICENSE&#34;&gt;GNU Lesser General Public License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/potmdehex/multicast_bytecopy&#34;&gt;multicast_bytecopy&lt;/a&gt;: One of the kernel exploits included in Fugu15. License: Unknown - No license provided&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ProcursusTeam/Procursus&#34;&gt;Procursus Bootstrap&lt;/a&gt;: The bootstrap used by Fugu15. License: &lt;a href=&#34;https://github.com/ProcursusTeam/Procursus/raw/main/LICENSE&#34;&gt;BSD 0-Clause&lt;/a&gt;. The tools included in the bootstrap are released under many different licenses, please see the procursus repo for more information&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Sileo/Sileo&#34;&gt;Sileo&lt;/a&gt;: The package manager included in Fugu15. License: &lt;a href=&#34;https://github.com/Sileo/Sileo/raw/main/LICENSE&#34;&gt;BSD 4-Clause&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/0x36/weightBufs&#34;&gt;weightBufs&lt;/a&gt;: One of the kernel exploits included in Fugu15. License: &lt;a href=&#34;https://github.com/0x36/weightBufs/raw/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;MIT. See the &lt;code&gt;LICENSE&lt;/code&gt; file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>RickdeJager/CVE-2023-4911</title>
    <updated>2023-10-07T01:24:59Z</updated>
    <id>tag:github.com,2023-10-07:/RickdeJager/CVE-2023-4911</id>
    <link href="https://github.com/RickdeJager/CVE-2023-4911" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CVE-2023-4911 proof of concept&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CVE-2023-4911 - Looney Tunables&lt;/h1&gt; &#xA;&lt;p&gt;This is a (atm very rough) proof of concept for CVE-2023-4911. So far I&#39;ve only verified it works on Ubuntu 22.10 kinetic. Current version of the exploit contains a fair amount of &#34;magic&#34; offsets. If you have suggestions on how to improve the heap shaping, feel free to send a PR my way :).&lt;/p&gt; &#xA;&lt;p&gt;This exploit is basically an implementation of &lt;a href=&#34;https://www.qualys.com/2023/10/03/cve-2023-4911/looney-tunables-local-privilege-escalation-glibc-ld-so.txt&#34;&gt;Qualys&#39; excellent write up&lt;/a&gt;. It deviates in some places. That&#39;s not necessarily because I think I know better, this is just what worked on my VM. There is probably room for improvement.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Compile the exploit and suid library using &lt;code&gt;make&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./exploit&lt;/code&gt; from a writable directory, containing both &lt;code&gt;suid_lib.so&lt;/code&gt; and &lt;code&gt;exploit&lt;/code&gt;. It&#39;ll create a folder called &lt;code&gt;U&lt;/code&gt; in the current directory and populate it with the necessary libraries.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;In my limited testing, the exploit needs somewhere between 4000-8000 attempts. The stack spray is not quite as good as Qualys&#39; implementation, so it takes a bit longer.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s an example of the exploit in action (sped up): &lt;a href=&#34;https://youtu.be/uw0EJ5zGEKE&#34;&gt;https://youtu.be/uw0EJ5zGEKE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Improvement ideas&lt;/h2&gt; &#xA;&lt;p&gt;If you feel like hacking on this, here are some ideas to get you started:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make it self-contained. See &lt;a href=&#34;https://github.com/ly4k/PwnKit&#34;&gt;https://github.com/ly4k/PwnKit&lt;/a&gt; for inspiration.&lt;/li&gt; &#xA; &lt;li&gt;Make the heap shaping more robust. Right now it&#39;s very fragile and depends on a lot of magic offsets.&lt;/li&gt; &#xA; &lt;li&gt;Make it work on more distros.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>leesh3288/CVE-2023-4911</title>
    <updated>2023-10-07T01:24:59Z</updated>
    <id>tag:github.com,2023-10-07:/leesh3288/CVE-2023-4911</id>
    <link href="https://github.com/leesh3288/CVE-2023-4911" rel="alternate"></link>
    <summary type="html">&lt;p&gt;PoC for CVE-2023-4911&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PoC of CVE-2023-4911 &#34;Looney Tunables&#34;&lt;/h1&gt; &#xA;&lt;p&gt;This is a PoC of CVE-2023-4911 (a.k.a. &#34;Looney Tunables&#34;) exploiting a bug in glibc dynamic loader&#39;s &lt;code&gt;GLIBC_TUNABLES&lt;/code&gt; environment variable parsing function &lt;code&gt;parse_tunables()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Code has been tested on Ubuntu 22.04.3 with glibc version &lt;code&gt;2.35-0ubuntu3.3&lt;/code&gt;. No attempts have been made to generalize the PoC (read: &#34;Works On My Machine&#34;), so your mileage may vary.&lt;/p&gt; &#xA;&lt;p&gt;As always, big kudos to the &lt;a href=&#34;https://www.qualys.com/tru/&#34;&gt;Qualys Threat Research Unit&lt;/a&gt; for the discovery of the vulnerability and for the &lt;a href=&#34;https://seclists.org/oss-sec/2023/q4/18&#34;&gt;very detailed writeup&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Written by &lt;a href=&#34;https://twitter.com/0x10n&#34;&gt;Xion&lt;/a&gt; of &lt;a href=&#34;https://kaist-hacking.github.io/&#34;&gt;KAIST Hacking Lab&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>