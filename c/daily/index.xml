<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-19T01:35:16Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ntop/n2n</title>
    <updated>2022-09-19T01:35:16Z</updated>
    <id>tag:github.com,2022-09-19:/ntop/n2n</id>
    <link href="https://github.com/ntop/n2n" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Peer-to-peer VPN&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/ntop/n2n&#34;&gt;&lt;img src=&#34;https://travis-ci.org/ntop/n2n.png?branch=dev&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;n2n&lt;/h1&gt; &#xA;&lt;p&gt;n2n is a light VPN software which makes it easy to create virtual networks bypassing intermediate firewalls.&lt;/p&gt; &#xA;&lt;p&gt;In order to start using n2n, two elements are required:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A &lt;em&gt;supernode&lt;/em&gt;: it allows edge nodes to announce and discover other nodes. It must have a port publicly accessible on internet.&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;edge&lt;/em&gt; nodes: the nodes which will be a part of the virtual networks&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A virtual network shared between multiple edge nodes in n2n is called a &lt;em&gt;community&lt;/em&gt;. A single supernode can relay multiple communities and a single computer can be part of multiple communities at the same time. An encryption key can be used by the edge nodes to encrypt the packets within their community.&lt;/p&gt; &#xA;&lt;p&gt;n2n tries to establish a direct peer-to-peer connection via udp between the edge nodes when possible. When this is not possible (usually due to special NAT devices), the supernode is also used to relay the packets.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Setup&lt;/h2&gt; &#xA;&lt;p&gt;Some Linux distributions already provide n2n as a package so a simple &lt;code&gt;sudo apt install n2n&lt;/code&gt; will do the work. Alternatively, up-to-date packages for most distributions are available on &lt;a href=&#34;http://packages.ntop.org/&#34;&gt;ntop repositories&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;On host1 run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo edge -c mynetwork -k mysecretpass -a 192.168.100.1 -f -l supernode.ntop.org:7777&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On host2 run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo edge -c mynetwork -k mysecretpass -a 192.168.100.2 -f -l supernode.ntop.org:7777&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now the two hosts can ping each other.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt; It is strongly advised to choose a custom community name (&lt;code&gt;-c&lt;/code&gt;) and a secret encryption key (&lt;code&gt;-k&lt;/code&gt;) in order to prevent other users from connecting to your computer. For the privacy of your data sent and to reduce the server load of &lt;code&gt;supernode.ntop.org&lt;/code&gt;, it is also suggested to set up a custom supernode as explained below.&lt;/p&gt; &#xA;&lt;h2&gt;Setting up a Custom Supernode&lt;/h2&gt; &#xA;&lt;p&gt;You can create your own infrastructure by setting up a supernode on a public server (e.g. a VPS). You just need to open a single port (1234 in the example below) on your firewall (usually &lt;code&gt;iptables&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the n2n package&lt;/li&gt; &#xA; &lt;li&gt;Edit &lt;code&gt;/etc/n2n/supernode.conf&lt;/code&gt; and add the following: &lt;pre&gt;&lt;code&gt;-p=1234&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Start the supernode service with &lt;code&gt;sudo systemctl start supernode&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Optionally enable supernode start on boot: &lt;code&gt;sudo systemctl enable supernode&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Now the supernode service should be up and running on port 1234. On your edge nodes you can now specify &lt;code&gt;-l your_supernode_ip:1234&lt;/code&gt; to use it. All the edge nodes must use the same supernode.&lt;/p&gt; &#xA;&lt;h2&gt;Manual Compilation&lt;/h2&gt; &#xA;&lt;p&gt;On Linux, compilation from source is straight forward:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./autogen.sh&#xA;./configure&#xA;make&#xA;&#xA;# optionally install&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Windows, MacOS, CMake, optimizations and general building options, please check out &lt;a href=&#34;https://raw.githubusercontent.com/ntop/n2n/dev/doc/Building.md&#34;&gt;Building documentation&lt;/a&gt; for compilation and running.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt; It is generally recommended to use the &lt;a href=&#34;https://github.com/ntop/n2n/releases&#34;&gt;latest stable release&lt;/a&gt;. Please note that the current &lt;em&gt;dev&lt;/em&gt; branch usually is not guaranteed to be backward compatible neither with the latest stable release nor with previous &lt;em&gt;dev&lt;/em&gt; states. On the other hand, if you dare to try bleeding edge features, you are encouraged to compile from &lt;em&gt;dev&lt;/em&gt; â€“ just keep track of sometimes rapidly occuring changes. Feedback in the &lt;em&gt;Issues&lt;/em&gt; section is appreciated.&lt;/p&gt; &#xA;&lt;h2&gt;Security Considerations&lt;/h2&gt; &#xA;&lt;p&gt;When payload encryption is enabled (provide a key using &lt;code&gt;-k&lt;/code&gt;), the supernode will not be able to decrypt the traffic exchanged between two edge nodes but it will know that edge A is talking with edge B.&lt;/p&gt; &#xA;&lt;p&gt;The choice of encryption schemes that can be applied to payload has recently been enhanced. Please have a look at &lt;a href=&#34;https://raw.githubusercontent.com/ntop/n2n/dev/doc/Crypto.md&#34;&gt;Crypto description&lt;/a&gt; for a quick comparison chart to help make a choice. n2n edge nodes use AES encryption by default. Other ciphers can be chosen using the &lt;code&gt;-A_&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;p&gt;A benchmark of the encryption methods is available when compiled from source with &lt;code&gt;tools/n2n-benchmark&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The header which contains some metadata like the virtual MAC address of the edge nodes, their IP address, their real hostname and the community name optionally can be encrypted applying &lt;code&gt;-H&lt;/code&gt; on the edges.&lt;/p&gt; &#xA;&lt;h2&gt;Advanced Configuration&lt;/h2&gt; &#xA;&lt;p&gt;More information about communities, support for multiple supernodes, routing, traffic restrictions and on how to run an edge as a service is available in the &lt;a href=&#34;https://raw.githubusercontent.com/ntop/n2n/dev/doc/Advanced.md&#34;&gt;more detailed documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;You can contribute to n2n in various ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update an &lt;a href=&#34;https://github.com/ntop/n2n/issues&#34;&gt;open issue&lt;/a&gt; or create a new one with detailed information&lt;/li&gt; &#xA; &lt;li&gt;Propose new features&lt;/li&gt; &#xA; &lt;li&gt;Improve the documentation&lt;/li&gt; &#xA; &lt;li&gt;Provide pull requests with enhancements&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For details about the internals of n2n check out the &lt;a href=&#34;https://github.com/ntop/n2n/raw/dev/doc/Hacking.md&#34;&gt;Hacking guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Further Readings and Related Projects&lt;/h2&gt; &#xA;&lt;p&gt;Answers to frequently asked questions can be found in our &lt;a href=&#34;https://github.com/ntop/n2n/raw/dev/doc/Faq.md&#34;&gt;FAQ document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here is a list of third-party projects connected to this repository:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Collection of pre-built binaries for Windows: &lt;a href=&#34;https://github.com/lucktu/n2n&#34;&gt;lucktu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;n2n for Android: &lt;a href=&#34;https://github.com/switch-iot/hin2n&#34;&gt;hin2n&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Docker images: &lt;a href=&#34;https://hub.docker.com/r/supermock/supernode/&#34;&gt;Docker Hub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Go bindings, management daemons and CLIs for n2n edges and supernodes, Docker, Kubernetes &amp;amp; Helm Charts: &lt;a href=&#34;https://pojntfx.github.io/gon2n/&#34;&gt;pojntfx/gon2n&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Windows GUI (along with a custom version of n2n) but also working with regular n2n: &lt;a href=&#34;https://github.com/happynclient/happynwindows&#34;&gt;HappyNet&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;(C) 2007-22 - ntop.org and contributors&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pi-hole/FTL</title>
    <updated>2022-09-19T01:35:16Z</updated>
    <id>tag:github.com,2022-09-19:/pi-hole/FTL</id>
    <link href="https://github.com/pi-hole/FTL" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Pi-hole FTL engine&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://pi-hole.net&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://pi-hole.github.io/graphics/Vortex/Vortex_Vertical_wordmark_darkmode.png&#34;&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://pi-hole.github.io/graphics/Vortex/Vortex_Vertical_wordmark_lightmode.png&#34;&gt; &#xA;   &lt;img src=&#34;https://pi-hole.github.io/graphics/Vortex/Vortex_Vertical_wordmark_lightmode.png&#34; width=&#34;80&#34; alt=&#34;Pi-hole website&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;br&gt; &lt;b&gt;Network-wide ad blocking via your own Linux hardware&lt;/b&gt;&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://pi-hole.net&#34;&gt; &#xA;  &lt;picture&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://pi-hole.github.io/graphics/FTLDNS/FTLDNS_darkmode.png&#34;&gt; &#xA;   &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://pi-hole.github.io/graphics/FTLDNS/FTLDNS.png&#34;&gt; &#xA;   &lt;img src=&#34;https://pi-hole.github.io/graphics/FTLDNS/FTLDNS.png&#34; alt=&#34;FTLDNS&#34;&gt; &#xA;  &lt;/picture&gt; &lt;/a&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;FTLDNS (&lt;code&gt;pihole-FTL&lt;/code&gt;) provides an interactive API and also generates statistics for Pi-hole&lt;a href=&#34;https://pi-hole.net/trademark-rules-and-brand-guidelines/&#34;&gt;Â®&lt;/a&gt;&#39;s Web interface.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fast&lt;/strong&gt;: stats are read directly from memory by coupling our codebase closely with &lt;code&gt;dnsmasq&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Versatile&lt;/strong&gt;: upstream changes to &lt;code&gt;dnsmasq&lt;/code&gt; can quickly be merged in without much conflict&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Lightweight&lt;/strong&gt;: runs smoothly with &lt;a href=&#34;https://discourse.pi-hole.net/t/hardware-software-requirements/273&#34;&gt;minimal hardware and software requirements&lt;/a&gt; such as Raspberry Pi Zero&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Interactive&lt;/strong&gt;: our API can be used to interface with your projects&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Insightful&lt;/strong&gt;: stats normally reserved inside of &lt;code&gt;dnsmasq&lt;/code&gt; are made available so you can see what&#39;s really happening on your network&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Official documentation&lt;/h1&gt; &#xA;&lt;p&gt;The official &lt;em&gt;FTL&lt;/em&gt;DNS documentation can be found &lt;a href=&#34;https://docs.pi-hole.net/ftldns/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;FTLDNS (&lt;code&gt;pihole-FTL&lt;/code&gt;) is installed by default when you choose to enable the Web interface when installing Pi-hole.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;IMPORTANT!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;FTLDNS will &lt;em&gt;disable&lt;/em&gt; any existing installations of &lt;code&gt;dnsmasq&lt;/code&gt;. This is because FTLDNS &lt;em&gt;is&lt;/em&gt; &lt;code&gt;dnsmasq&lt;/code&gt; + Pi-hole&#39;s code, so both cannot run simultaneously.&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
</feed>