<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-17T01:30:56Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bluekitchen/btstack</title>
    <updated>2023-06-17T01:30:56Z</updated>
    <id>tag:github.com,2023-06-17:/bluekitchen/btstack</id>
    <link href="https://github.com/bluekitchen/btstack" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dual-mode Bluetooth stack, with small memory footprint.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to BTstack&lt;/h1&gt; &#xA;&lt;p&gt;BTstack is &lt;a href=&#34;https://bluekitchen-gmbh.com&#34;&gt;BlueKitchen&#39;s&lt;/a&gt; implementation of the official Bluetooth stack. It is well suited for small, resource-constraint devices such as 8 or 16 bit embedded systems as it is highly configurable and comes with an ultra small memory footprint.&lt;/p&gt; &#xA;&lt;p&gt;Targeting a variety of platforms is as simple as providing the necessary UART, CPU, and CLOCK implementations. BTstack is currently capable of connecting to Bluetooth-modules via: (H2) HCI USB, (H4) HCI UART + TI&#39;s eHCILL, and (H5) HCI Three-Wire UART.&lt;/p&gt; &#xA;&lt;p&gt;On smaller embedded systems, a minimal run loop implementation allows to use BTstack without a Real Time OS (RTOS). If a RTOS is already provided, BTstack can be integrated and run as a single thread.&lt;/p&gt; &#xA;&lt;p&gt;On larger systems, BTstack provides a server that connects to a Bluetooth module. Multiple applications can communicate with this server over different inter-process communication methods. As sockets are used for client/server communication, it&#39;s easy to interact via higher-level level languages, e.g. there&#39;s already a Java binding for use in desktop environments.&lt;/p&gt; &#xA;&lt;p&gt;BTstack supports the Central and the Peripheral Role of Bluetooth 5 Low Energy specification incl. LE Secure Connections, LE Data Channels, and LE Data Length Extension. It can be configured to run as either single-mode stack or a dual-mode stack.&lt;/p&gt; &#xA;&lt;p&gt;BTstack is free for non-commercial use. However, for commercial use, &lt;a href=&#34;mailto:contact@bluekitchen-gmbh.com&#34;&gt;tell us&lt;/a&gt; a bit about your project to get a quote.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Documentation:&lt;/strong&gt; &lt;a href=&#34;https://bluekitchen-gmbh.com/btstack/master/&#34;&gt;HTML&lt;/a&gt;, &lt;a href=&#34;https://bluekitchen-gmbh.com/btstack.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Third-party libraries (FOSS):&lt;/strong&gt; &lt;a href=&#34;https://github.com/bluekitchen/btstack/raw/master/3rd-party/README.md&#34;&gt;List of used libraries and their licenses&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Discussion and Community Support:&lt;/strong&gt; &lt;a href=&#34;https://groups.google.com/group/btstack-dev&#34;&gt;BTstack Google Group&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Supported Protocols and Profiles&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Protocols:&lt;/strong&gt; L2CAP (incl. Enhanced Retransmission Mode and LE Data Channels), RFCOMM, SDP, BNEP, AVDTP, AVCTP, ATT, SM (incl. LE Secure Connections and Cross-transport key derivation).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Profiles:&lt;/strong&gt; A2DP, AVRCP incl. Browsing (CT+TG) and Cover Art (CT), GAP, GATT, HFP, HID, HSP, IOP, OPP, SPP, PAN, PBAP.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;GATT Service Servers:&lt;/strong&gt; Battery (BAS), Bond Management (BMS), Cycling Power (CPS), Cycling Speed and Cadence (CSCS), Device Information (DID), Heart Rate (HRS), HID over GATT (HIDS) Device , Mesh Provisioning, Mesh Proxy, Nordic SPP, Scan Parameters (SCPS), TX Power (TPS), u-Blox SPP.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;GATT Service Clients:&lt;/strong&gt;: ANCS, Battery (BAS), Device Information (DID), HID-over-GATT (HOGP) Host, Scan Parameters (SCPP).&lt;/p&gt; &#xA;&lt;p&gt;GATT Services are in general easy to implement and require short development time. For more GATT Services please contact us, or follow the &lt;a href=&#34;https://bluekitchen-gmbh.com/btstack/profiles/#gatt-generic-attribute-profile&#34;&gt;implementation guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;In Development:&lt;/strong&gt; LE Audio and more.&lt;/p&gt; &#xA;&lt;p&gt;It has been qualified with the Bluetooth SIG (QDID 166433) for A2DP 1.3.2, AVCTP 1.4, AVDTP 1.3, AVRCP 1.6.2, DID 1.3, GAVDP 1.3, HFP 1.8, HSP 1.2, PAN 1.0, PBAP Client 1.2, RFCOMM 1.2, SPP 1.2 BR/EDR protocol/profiles, BAS 1.0, CPP 1.1, CPS 1.1, CSCP 1.0, CSCS 1.0, DIS 1.1, HIDS 1.0, HOGP 1.0, HRP 1.0, HRS 1.0, SCPP 1.0, SCPS 1.0 GATT profiles as well as and GAP, GATT, IOP, SM of the Bluetooth Core 5.2 specification.&lt;/p&gt; &#xA;&lt;p&gt;For information on Apple&#39;s MFi/iAP2 and Find My profiles, please &lt;a href=&#34;mailto:contact@bluekitchen-gmbh.com&#34;&gt;contact us directly&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Evaluation Platforms&lt;/h2&gt; &#xA;&lt;h4&gt;Embedded Platforms:&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Build Status&lt;/th&gt; &#xA;   &lt;th&gt;Port&lt;/th&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/port-esp32-master&#34;&gt;&lt;img src=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/badges/port-esp32-master.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/esp32&#34;&gt;esp32&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.espressif.com/products/hardware/esp32/overview&#34;&gt;Espressif ESP32&lt;/a&gt; 2.4 GHz Wi-Fi and Bluetooth Dual-Mode combo chip using &lt;a href=&#34;https://www.freertos.org&#34;&gt;FreeRTOS&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/port-max32630-fthr&#34;&gt;&lt;img src=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/badges/port-max32630-fthr-master.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/max32630-fthr&#34;&gt;max32630-fthr&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.maximintegrated.com/en/products/digital/microcontrollers/MAX32630FTHR.html&#34;&gt;MAX32630FTHR ARM Cortex M4F Board&lt;/a&gt; with onboard &lt;a href=&#34;https://na.industrial.panasonic.com/products/wireless-connectivity/bluetooth/multi-mode/series/pan13261316-series/CS467&#34;&gt;Panasonic PAN1326 module&lt;/a&gt; containing &lt;a href=&#34;https://www.ti.com/product/cc2564&#34;&gt;TI CC2564B Bluetooth controller&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/port-msp432p401lp-cc256x-master&#34;&gt;&lt;img src=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/badges/port-msp432p401lp-cc256x-master.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/msp432p401lp-cc256x&#34;&gt;msp432p401lp-cc256x&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ti.com/tool/MSP-EXP432P401R&#34;&gt;TI MSP432P401R LaunchPad&lt;/a&gt; with &lt;a href=&#34;https://store.ti.com/CC256XCQFN-EM-CC2564C-Dual-Mode-Bluetooth-Controller-Evaluation-Module-P51277.aspx&#34;&gt;CC2564C Dual-mode Bluetooth® Controller Evaluation Module&lt;/a&gt; and &lt;a href=&#34;https://www.ti.com/tool/boost-ccemadapter&#34;&gt;EM Adapter BoosterPack&lt;/a&gt; with additional 32768Hz quartz oscillator&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;No build server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/rrenesas-ek-ra6m4a-da14531&#34;&gt;rrenesas-ek-ra6m4a-da14531&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.renesas.com/us/en/products/microcontrollers-microprocessors/ra-cortex-m-mcus/ek-ra6m4-evaluation-kit-ra6m4-mcu-group&#34;&gt;Renesas EK-RA6M4&lt;/a&gt; with &lt;a href=&#34;https://www.mikroe.com/ble-tiny-click&#34;&gt;MikroeE BLE Tiny Click board&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;No build server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/renesas-tb-s1ja-cc256x&#34;&gt;renesas-tb-s1ja-cc256x&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.renesas.com/eu/en/products/synergy/hardware/kits/tb-s1ja.html&#34;&gt;Renesas TB-S1JA&lt;/a&gt; with with &lt;a href=&#34;https://www.ti.com/tool/CC256XQFNEM&#34;&gt;Dual-mode Bluetooth® CC2564 evaluation board&lt;/a&gt; and &lt;a href=&#34;https://www.ti.com/tool/boost-ccemadapter&#34;&gt;EM Adapter BoosterPack&lt;/a&gt; with additional 32768Hz quartz oscillator&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/port-samv71-xplained-atwilc3000-master&#34;&gt;&lt;img src=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/badges/port-samv71-xplained-atwilc3000-master.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/samv71-xplained-atwilc3000&#34;&gt;samv71-xplained-atwilc3000&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.microchip.com/DevelopmentTools/ProductDetails/PartNO/ATSAMV71-XULT&#34;&gt;SAMV71 Ultra Xplained Ultra&lt;/a&gt; evaluation kit with &lt;a href=&#34;https://www.microchip.com/DevelopmentTools/ProductDetails/ATWILC3000-SHLD&#34;&gt;ATWILC3000 SHIELD&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/port-stm32-f4discovery-cc256x-master&#34;&gt;&lt;img src=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/badges/port-stm32-f4discovery-cc256x-master.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/stm32-f4discovery-cc256x&#34;&gt;stm32-f4discovery-cc2564b&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.st.com/en/evaluation-tools/stm32f4discovery.html&#34;&gt;STM32 F4 Discovery Board&lt;/a&gt; with &lt;a href=&#34;https://store.ti.com/CC256XEM-STADAPT-CC256xEM-Bluetooth-Adapter-Kit-P45158.aspx&#34;&gt;CC256xEM Bluetooth Adapter Kit for ST&lt;/a&gt; and &lt;a href=&#34;https://store.ti.com/cc2564modnem.aspx&#34;&gt;CC2564B Dual-mode Bluetooth® Controller Evaluation Module&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/port-stm32-l073rz-nucleo-em9304&#34;&gt;&lt;img src=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/badges/port-stm32-l073rz-nucleo-em9304-master.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/stm32-l073rz-nucleo-em9304&#34;&gt;stm32-l073rz-nucleo-em9304&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;EM9304 DVK: &lt;a href=&#34;https://www.st.com/en/evaluation-tools/nucleo-l073rz.html&#34;&gt;STM32 Nucleo development board NUCELO-L73RZ&lt;/a&gt; with &lt;a href=&#34;https://www.emmicroelectronic.com/product/standard-protocols/em9304&#34;&gt;EM9304 Bluetooth Controller&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;No build server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/stm32-wb55xx-nucleo-freertos&#34;&gt;stm32-wb55xx-nucleo-freertos&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.st.com/en/evaluation-tools/p-nucleo-wb55.html&#34;&gt;P-NUCLEO-WB55 kit&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/port-wiced-h4-master&#34;&gt;&lt;img src=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/badges/port-wiced-h4-master.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/wiced-h4&#34;&gt;wiced-h4&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Broadcom/Cypress platforms that support the WICED SDK via H4 UART, e.g. &lt;a href=&#34;https://www.seeedstudio.com/RedBear-DUO-Wi-Fi-BLE-IoT-Board-p-2635.html&#34;&gt;RedBear Duo&lt;/a&gt; (BCM43438 A1), &lt;a href=&#34;https://www.inventeksys.com/wifi/wifi-modules/ism4343-wmb-l151/&#34;&gt;Inventek Systems ISM4334x&lt;/a&gt; (BCM43438 A1), &lt;a href=&#34;https://www.inventeksys.com/products-page/wifi-modules/serial-wifi/ism43341-m4g-l44-cu-embedded-serial-to-wifi-ble-nfc-module/&#34;&gt;Inventek Systems ISM4343&lt;/a&gt; (BCM43340)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Other Platforms:&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;   &lt;th&gt;Port&lt;/th&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/port-libusb-master&#34;&gt;&lt;img src=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/badges/port-libusb-master.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/libusb&#34;&gt;libusb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unix-based system with dedicated USB Bluetooth dongle&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;No build server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/libusb-intel&#34;&gt;libusb-intel&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unix-based system with Intel Wireless 8260/8265 Controller&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/port-posix-h4-master&#34;&gt;&lt;img src=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/badges/port-posix-h4-master.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/posix-h4&#34;&gt;posix-h4&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unix-based system connected to Bluetooth module via H4 over serial port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;No build server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/posix-h4-bcm&#34;&gt;posix-h4-nxp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unix-based system connected to Cypress controllers via H4 over serial port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;No build server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/posix-h4-da14581&#34;&gt;posix-h4-da14581&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unix-based system connected to Dialog Semiconductor DA14581 via H4 over serial port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;No build server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/posix-h4-da14585&#34;&gt;posix-h4-da14585&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unix-based system connected to Dialog Semiconductor DA14585 via H4 over serial port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;No build server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/posix-h4-nxp&#34;&gt;posix-h4-nxp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unix-based system connected to NXP controllers via H4 over serial port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;No build server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/posix-h4-zephyr&#34;&gt;posix-h4-zephyr&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unix-based system connected to Bluetooth module with Zephyr HCI firmware via H4 over serial port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;No build server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/posix-h5&#34;&gt;posix-h5&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unix-based system connected to Bluetooth module via H5 over serial port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;No build server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/qt-h4&#34;&gt;qt-h4&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unix- or Win32-based &lt;a href=&#34;https://qt.io&#34;&gt;Qt application&lt;/a&gt; connected to Bluetooth module via H4 over serial port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;No build server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/qt-usb&#34;&gt;qt-usb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unix- or Win32-based &lt;a href=&#34;https://qt.io&#34;&gt;Qt application&lt;/a&gt; with dedicated USB Bluetooth dongle&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;No build server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/windows-h4&#34;&gt;windows-h4&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Win32-based system connected to Bluetooth module via serial port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;No build server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/windows-h4-da14585&#34;&gt;windows-h4-da14585&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Win32-based system connected to Dialog Semiconductor DA14585 via H4 over serial port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;No build server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/windows-winusb&#34;&gt;windows-winusb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Win32-based system with dedicated USB Bluetooth dongle&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;No build server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/windows-winusb-intel&#34;&gt;windows-winusb-intel&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Win32-based system with Intel Wireless 8260/8265 Controller&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;No build server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/raspi&#34;&gt;raspi&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Raspberry Pi 3 or Raspberry Pi Zero W with built-in BCM4343 Bluetooth/Wifi Controller&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/port-daemon-master&#34;&gt;&lt;img src=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/badges/port-daemon-master.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/daemon&#34;&gt;daemon&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TCP and Unix domain named socket client-server architecture supporting multiple clients&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/java-master&#34;&gt;&lt;img src=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/badges/java-master.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/platform/daemon/binding/java&#34;&gt;java&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Java wrapper for daemon&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/#/builders/port-mtk-master&#34;&gt;&lt;img src=&#34;https://buildbot.bluekitchen-gmbh.com/btstack/badges/port-mtk-master.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/port/mtk&#34;&gt;mtk&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;daemon for rooted Android devices, based on Mediatek MT65xx processor, Java and C client-server API&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;No build server&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/bluekitchen/btstack/tree/master/platform/freertos&#34;&gt;freertos&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.freertos.org&#34;&gt;FreeRTOS&lt;/a&gt;: Run BTstack on a dedicated thread, not thread-safe.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Supported Chipsets&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Chipset&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;HCI Transport&lt;/th&gt; &#xA;   &lt;th&gt;SCO over HCI&lt;/th&gt; &#xA;   &lt;th&gt;BTstack folder&lt;/th&gt; &#xA;   &lt;th&gt;Comment&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Atmel ATWILC3000&lt;/td&gt; &#xA;   &lt;td&gt;LE&lt;/td&gt; &#xA;   &lt;td&gt;H4&lt;/td&gt; &#xA;   &lt;td&gt;n.a.&lt;/td&gt; &#xA;   &lt;td&gt;atwilc3000&lt;/td&gt; &#xA;   &lt;td&gt;Firmware size: 60 kB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Broadcom UART&lt;/td&gt; &#xA;   &lt;td&gt;Dual mode&lt;/td&gt; &#xA;   &lt;td&gt;H4, H5&lt;/td&gt; &#xA;   &lt;td&gt;Probably&lt;/td&gt; &#xA;   &lt;td&gt;bcm&lt;/td&gt; &#xA;   &lt;td&gt;Max UART baudrate 2 mbps&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Broadcom USB Dongles&lt;/td&gt; &#xA;   &lt;td&gt;Dual mode&lt;/td&gt; &#xA;   &lt;td&gt;USB&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;bcm&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CSR UART&lt;/td&gt; &#xA;   &lt;td&gt;Dual mode&lt;/td&gt; &#xA;   &lt;td&gt;H4, H5, BCSP&lt;/td&gt; &#xA;   &lt;td&gt;No (didn&#39;t work)&lt;/td&gt; &#xA;   &lt;td&gt;csr&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CSR USB Dongles&lt;/td&gt; &#xA;   &lt;td&gt;Dual mode&lt;/td&gt; &#xA;   &lt;td&gt;USB&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;csr&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Infineon CYW207xx&lt;/td&gt; &#xA;   &lt;td&gt;Dual mode&lt;/td&gt; &#xA;   &lt;td&gt;H4, H5, USB&lt;/td&gt; &#xA;   &lt;td&gt;Probably&lt;/td&gt; &#xA;   &lt;td&gt;bcm&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Infineon CYW20819&lt;/td&gt; &#xA;   &lt;td&gt;Dual mode&lt;/td&gt; &#xA;   &lt;td&gt;H4, H5, USB&lt;/td&gt; &#xA;   &lt;td&gt;Probably&lt;/td&gt; &#xA;   &lt;td&gt;bcm&lt;/td&gt; &#xA;   &lt;td&gt;Keep CTS high during power cycle&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Infineon CYW43xxx&lt;/td&gt; &#xA;   &lt;td&gt;Dual mode + Wifi&lt;/td&gt; &#xA;   &lt;td&gt;H4, H5&lt;/td&gt; &#xA;   &lt;td&gt;Don&#39;t know&lt;/td&gt; &#xA;   &lt;td&gt;bcm&lt;/td&gt; &#xA;   &lt;td&gt;Bluetooth + Wifi Combo Controller&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Infineon CYW5557x&lt;/td&gt; &#xA;   &lt;td&gt;Dual mode + Wifi&lt;/td&gt; &#xA;   &lt;td&gt;H4&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;bcm&lt;/td&gt; &#xA;   &lt;td&gt;autobaud-mode needed, see posix-h4-bcm&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Infineon PSoC 4&lt;/td&gt; &#xA;   &lt;td&gt;LE&lt;/td&gt; &#xA;   &lt;td&gt;H4&lt;/td&gt; &#xA;   &lt;td&gt;n.a.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HCI Firmware part of PSoC Creator kit examples&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dialog Semiconductor DA145xx&lt;/td&gt; &#xA;   &lt;td&gt;LE&lt;/td&gt; &#xA;   &lt;td&gt;H4, SPI&lt;/td&gt; &#xA;   &lt;td&gt;n.a.&lt;/td&gt; &#xA;   &lt;td&gt;da14581&lt;/td&gt; &#xA;   &lt;td&gt;Official HCI firmware used&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dialog Semiconductor DA1469x&lt;/td&gt; &#xA;   &lt;td&gt;LE&lt;/td&gt; &#xA;   &lt;td&gt;H4, SPI&lt;/td&gt; &#xA;   &lt;td&gt;n.a&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HCI Firmware part of DA1469x SDK&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Espressif ESP32&lt;/td&gt; &#xA;   &lt;td&gt;Dual mode + Wifi&lt;/td&gt; &#xA;   &lt;td&gt;VHCI, H4&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SoC with Bluetooth and Wifi&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Espressif ESP32-S3, ESP32-C3&lt;/td&gt; &#xA;   &lt;td&gt;LE + Wifi&lt;/td&gt; &#xA;   &lt;td&gt;VHCI, H4&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SoC with Bluetooth and Wifi&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EM 9301, 9304, 9305&lt;/td&gt; &#xA;   &lt;td&gt;LE&lt;/td&gt; &#xA;   &lt;td&gt;SPI&lt;/td&gt; &#xA;   &lt;td&gt;n.a.&lt;/td&gt; &#xA;   &lt;td&gt;em9301&lt;/td&gt; &#xA;   &lt;td&gt;Custom HCI SPI implementation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Intel Dual Wireless 3165, 8260, 8265&lt;/td&gt; &#xA;   &lt;td&gt;Dual mode&lt;/td&gt; &#xA;   &lt;td&gt;USB&lt;/td&gt; &#xA;   &lt;td&gt;Probably&lt;/td&gt; &#xA;   &lt;td&gt;intel&lt;/td&gt; &#xA;   &lt;td&gt;Firmware size: 400 kB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Nordic nRF&lt;/td&gt; &#xA;   &lt;td&gt;LE&lt;/td&gt; &#xA;   &lt;td&gt;H4&lt;/td&gt; &#xA;   &lt;td&gt;n.a.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Requires custom HCI firmware&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NXP 88W88997, IW416, IW61x&lt;/td&gt; &#xA;   &lt;td&gt;Dual mode + Wifi&lt;/td&gt; &#xA;   &lt;td&gt;H4&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;nxp&lt;/td&gt; &#xA;   &lt;td&gt;Requires initial firmware&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Realtek RTL8822CS&lt;/td&gt; &#xA;   &lt;td&gt;Dual mode + Wifi&lt;/td&gt; &#xA;   &lt;td&gt;H5&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Requires initial firmware and config&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Realtek USB Dongles&lt;/td&gt; &#xA;   &lt;td&gt;Dual mode + Wifi&lt;/td&gt; &#xA;   &lt;td&gt;USB&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;realtek&lt;/td&gt; &#xA;   &lt;td&gt;Requires initial firmware and config&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Renesas RX23W&lt;/td&gt; &#xA;   &lt;td&gt;LE&lt;/td&gt; &#xA;   &lt;td&gt;H4&lt;/td&gt; &#xA;   &lt;td&gt;n.a.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HCI Firmware part of BTTS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;STM STLC2500D&lt;/td&gt; &#xA;   &lt;td&gt;Classic&lt;/td&gt; &#xA;   &lt;td&gt;H4&lt;/td&gt; &#xA;   &lt;td&gt;No (didn&#39;t try)&lt;/td&gt; &#xA;   &lt;td&gt;stlc2500d&lt;/td&gt; &#xA;   &lt;td&gt;Custom deep sleep management not supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;STM32-WB5x&lt;/td&gt; &#xA;   &lt;td&gt;LE&lt;/td&gt; &#xA;   &lt;td&gt;VHCI&lt;/td&gt; &#xA;   &lt;td&gt;n.a.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SoC with multi-protocol Radio co-processor&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Toshiba TC35661&lt;/td&gt; &#xA;   &lt;td&gt;Dual mode&lt;/td&gt; &#xA;   &lt;td&gt;H4&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;tc3566&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TI CC256x, WL183x&lt;/td&gt; &#xA;   &lt;td&gt;Dual mode&lt;/td&gt; &#xA;   &lt;td&gt;H4, H5, eHCILL&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;cc256x&lt;/td&gt; &#xA;   &lt;td&gt;Also WL185x, WL187x, and WL189x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bluekitchen-gmbh.com/btstack/master/chipsets/&#34;&gt;More infos on supported chipsets&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Source Tree Overview&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Path&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;chipset&lt;/td&gt; &#xA;   &lt;td&gt;Support for individual Bluetooth chipsets&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;doc&lt;/td&gt; &#xA;   &lt;td&gt;Sources for BTstack documentation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;example&lt;/td&gt; &#xA;   &lt;td&gt;Example applications available for all ports&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;platform&lt;/td&gt; &#xA;   &lt;td&gt;Support for special OSs and/or MCU architectures&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;port&lt;/td&gt; &#xA;   &lt;td&gt;Complete port for a MCU + Chipset combinations&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;src&lt;/td&gt; &#xA;   &lt;td&gt;Bluetooth stack implementation&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;test&lt;/td&gt; &#xA;   &lt;td&gt;Unit and PTS tests&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tool&lt;/td&gt; &#xA;   &lt;td&gt;Helper tools for BTstack&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>openSIL/openSIL</title>
    <updated>2023-06-17T01:30:56Z</updated>
    <id>tag:github.com,2023-06-17:/openSIL/openSIL</id>
    <link href="https://github.com/openSIL/openSIL" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AMD openSIL: Proof-of-Concept (POC)&lt;/h1&gt; &#xA;&lt;h2&gt;About the project:&lt;/h2&gt; &#xA;&lt;p&gt;The AMD open Silicon Initialization Library (openSIL) is a collection of C libraries which can be integrated into an x86 host firmware, by directly compiling source or by linking with static libraries.&lt;/p&gt; &#xA;&lt;p&gt;AMD openSIL consists of three statically linked libraries; xSIM (x86 Silicon Initialization Libraries), xPRF (x86 Platform Reference Library), and xUSL (x86 Utilities &amp;amp; Services Library). These libraries can be statically linked to a host firmware during compile/link time.&lt;/p&gt; &#xA;&lt;p&gt;Source for the libraries resides under &lt;a href=&#34;https://raw.githubusercontent.com/openSIL/openSIL/main/xSIM&#34;&gt;xSIM&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/openSIL/openSIL/main/xPRF&#34;&gt;xPRF&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/openSIL/openSIL/main/xUSL&#34;&gt;xUSL&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Formal documentation is in final review and will be uploaded to the &lt;a href=&#34;https://github.com/openSIL/openSIL/tree/master/Documentation&#34;&gt;GitHub project page&lt;/a&gt; when available.&lt;br&gt; The AMD blog &#34;&lt;a href=&#34;https://community.amd.com/t5/business/empowering-the-industry-with-open-system-firmware-amd-opensil/ba-p/599644&#34;&gt;Empowering The Industry with Open System Firmware - AMD openSIL&lt;/a&gt;&#34; provides a starting point to grasp the openSIL design goals.&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;AMD openSIL open-source projected roadmap:&lt;/h2&gt; &#xA;&lt;h3&gt;Evaluation Only Phases (no support for production implementations):&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Phase I - Internal POC (complete).&lt;/li&gt; &#xA; &lt;li&gt;Phase II - AMD openSIL POC open-sourced for evaluation on AMD 4th Gen EPYC™ based CRB (complete: this source).&lt;/li&gt; &#xA; &lt;li&gt;Phase III - POC openSIL POC open-sourced, trending Q4 2024.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Production Phase:&lt;/h3&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Phase IV: - AMD openSIL POR with UEFI Host FW trending 2026.&lt;br&gt;&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Getting Started:&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone Repository:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Establish your GitHub user account and your SSH keys (details are beyond this doc)&lt;/li&gt; &#xA;   &lt;li&gt;Open a command/terminal window&lt;/li&gt; &#xA;   &lt;li&gt;Run git to obtain the project: &lt;code&gt;&amp;gt; git clone git@github.com:openSIL/openSIL.git&lt;/code&gt;&lt;br&gt;&lt;br&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Establish the project environment variables.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You will find a shell/cmd file (SetSilEnv) in the &#39;util&#39; directory for this purpose.&lt;br&gt;&lt;br&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Configure your project&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;This release of the AMD openSIL libraries supports AMD 4th Gen EPYC™ on the Onyx CRB only.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;The openSIL project uses the python version of the Kconfig tool for this purpose. (See GitHub Kconfiglib).&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Run the interactive configuration UI: &lt;code&gt;&amp;gt; python %PYTHONPATH%\menuconfig.py Kconfig&lt;/code&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build openSIL Libraries:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The AMD openSIL library build is performed using &#39;Meson build&#39;, an open source python tool (see GitHub). Several targets allow a focused build for xUSL, xSIM, xPRF or openSIL(xUSL + xSIM + XPRF) static libraries. AMD openSIL specific Meson build documentation is not yet available.&lt;/li&gt; &#xA;   &lt;li&gt;The project can be built for 32bit and/or 64bit compilation and static libraries.&lt;/li&gt; &#xA;   &lt;li&gt;The project supports both the GNU/GCC or LLVM/clang tool chain and the Microsoft Visual C tool chain. Generally it is recommended to use the latest versions of these tool chains.&lt;br&gt; Specific versions being used today (June 2023) are: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;GCC - v10.2.0&lt;/li&gt; &#xA;     &lt;li&gt;llvm/clang - v10.0&lt;/li&gt; &#xA;     &lt;li&gt;MSVC v19.00.24210 (Visual Studio 2019)&lt;br&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Integrate with Host Firmware:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;AMD has a separate repository (&#34;opensil-uefi-interface&#34; ) for helping customers integrate openSIL with previous UEFI-AGESA installations. Please contact your AMD representative for more information.&lt;br&gt;&lt;br&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Test Host Firmware on reference platform&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;All AMD openSIL testing has been performed on AMD an AMD reference platform (Onyx CRB).&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Present list of supported reference platforms is shown in the following table.&lt;/p&gt; &#xA;    &lt;table&gt; &#xA;     &lt;thead&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;th&gt;Market&lt;br&gt;Segment&lt;/th&gt; &#xA;       &lt;th&gt;AMD Processor&lt;br&gt;Family Model&lt;/th&gt; &#xA;       &lt;th&gt;Firmware&lt;/th&gt; &#xA;       &lt;th&gt;Reference Platform&lt;br&gt;Name&lt;/th&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/thead&gt; &#xA;     &lt;tbody&gt; &#xA;      &lt;tr&gt; &#xA;       &lt;td&gt;Server&lt;/td&gt; &#xA;       &lt;td&gt;F19M10&lt;/td&gt; &#xA;       &lt;td&gt;UEFI&lt;/td&gt; &#xA;       &lt;td&gt;Onyx&lt;/td&gt; &#xA;      &lt;/tr&gt; &#xA;     &lt;/tbody&gt; &#xA;    &lt;/table&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Forthcoming items:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Formal documentation to be published to this repository.&lt;/li&gt; &#xA; &lt;li&gt;Continuous integration (CI) tools will be implemented as a pre-requisite to merging pull requests.&lt;/li&gt; &#xA; &lt;li&gt;Fix for meson build errors (current version tested with Visual Studio 2019).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License:&lt;/h2&gt; &#xA;&lt;p&gt;The MIT License (MIT): &lt;a href=&#34;https://opensource.org/license/mit/&#34;&gt;https://opensource.org/license/mit/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>