<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-24T01:29:53Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bitaxeorg/ESP-Miner</title>
    <updated>2025-03-24T01:29:53Z</updated>
    <id>tag:github.com,2025-03-24:/bitaxeorg/ESP-Miner</id>
    <link href="https://github.com/bitaxeorg/ESP-Miner" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A bitcoin ASIC miner for the ESP32&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://discord.gg/3E8ca2dkcC&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/3E8ca2dkcC&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/skot/esp-miner/total&#34; alt=&#34;GitHub Downloads (all assets, all releases)&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/commit-activity/t/skot/esp-miner&#34; alt=&#34;GitHub commit activity&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/skot/esp-miner&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ESP-Miner&lt;/h1&gt; &#xA;&lt;p&gt;esp-miner is open source ESP32 firmware for the &lt;a href=&#34;https://github.com/skot/bitaxe&#34;&gt;Bitaxe&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are looking for premade images to load on your Bitaxe, check out the &lt;a href=&#34;https://github.com/skot/ESP-Miner/releases&#34;&gt;releases&lt;/a&gt; page. Maybe you want &lt;a href=&#34;https://github.com/skot/ESP-Miner/raw/master/flashing.md&#34;&gt;instructions&lt;/a&gt; for loading factory images.&lt;/p&gt; &#xA;&lt;h1&gt;Bitaxetool&lt;/h1&gt; &#xA;&lt;p&gt;We also have a command line python tool for flashing Bitaxe and updating the config called Bitaxetool&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Bitaxetool Requires Python3.4 or later and pip&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Install bitaxetool from pip. pip is included with Python 3.4 but if you need to install it check &lt;a href=&#34;https://pip.pypa.io/en/stable/installation/&#34;&gt;https://pip.pypa.io/en/stable/installation/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pip install --upgrade bitaxetool&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The bitaxetool includes all necessary library for flashing the binaries to the Bitaxe Hardware.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Flash a &#34;factory&#34; image to a Bitaxe to reset to factory settings. Make sure to choose an image built for your hardware version (401) in this case:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;bitaxetool --firmware ./esp-miner-factory-401-v2.4.2.bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Flash just the NVS config to a bitaxe:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;bitaxetool --config ./config-401.cvs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Flash both a factory image &lt;em&gt;and&lt;/em&gt; a config to your Bitaxe: note the settings in the config file will overwrite the config already baked into the factory image:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;bitaxetool --config ./config-401.cvs --firmware ./esp-miner-factory-401-v2.4.2.bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;AxeOS API&lt;/h2&gt; &#xA;&lt;p&gt;The esp-miner UI is called AxeOS and provides an API to expose actions and information.&lt;/p&gt; &#xA;&lt;p&gt;For more details take a look at &lt;code&gt;main/http_server/http_server.c&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Things that can be done are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Get System Info&lt;/li&gt; &#xA; &lt;li&gt;Get Swarm Info&lt;/li&gt; &#xA; &lt;li&gt;Update Swarm&lt;/li&gt; &#xA; &lt;li&gt;Swarm Options&lt;/li&gt; &#xA; &lt;li&gt;System Restart Action&lt;/li&gt; &#xA; &lt;li&gt;Update System Settings Action&lt;/li&gt; &#xA; &lt;li&gt;System Options&lt;/li&gt; &#xA; &lt;li&gt;Update OTA Firmware&lt;/li&gt; &#xA; &lt;li&gt;Update OTA WWW&lt;/li&gt; &#xA; &lt;li&gt;WebSocket&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some API examples in curl:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Get system information&#xA;curl http://YOUR-BITAXE-IP/api/system/info&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Get swarm information&#xA;curl http://YOUR-BITAXE-IP/api/swarm/info&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# System restart action&#xA;curl -X POST http://YOUR-BITAXE-IP/api/system/restart&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Administration&lt;/h2&gt; &#xA;&lt;p&gt;The firmware hosts a small web server on port 80 for administrative purposes. Once the Bitaxe device is connected to the local network, the admin web front end may be accessed via a web browser connected to the same network at &lt;code&gt;http://&amp;lt;IP&amp;gt;&lt;/code&gt;, replacing &lt;code&gt;IP&lt;/code&gt; with the LAN IP address of the Bitaxe device, or &lt;code&gt;http://bitaxe&lt;/code&gt;, provided your network supports mDNS configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Recovery&lt;/h3&gt; &#xA;&lt;p&gt;In the event that the admin web front end is inaccessible, for example because of an unsuccessful firmware update (&lt;code&gt;www.bin&lt;/code&gt;), a recovery page can be accessed at &lt;code&gt;http://&amp;lt;IP&amp;gt;/recovery&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install the ESP-IDF toolchain from &lt;a href=&#34;https://docs.espressif.com/projects/esp-idf/en/stable/esp32/get-started/&#34;&gt;https://docs.espressif.com/projects/esp-idf/en/stable/esp32/get-started/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install nodejs/npm from &lt;a href=&#34;https://nodejs.org/en/download&#34;&gt;https://nodejs.org/en/download&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;(Optional) Install the ESP-IDF extension for VSCode from &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=espressif.esp-idf-extension&#34;&gt;https://marketplace.visualstudio.com/items?itemName=espressif.esp-idf-extension&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;p&gt;At the root of the repository, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;idf.py build &amp;amp;&amp;amp; ./merge_bin.sh ./esp-miner-merged.bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: the merge_bin.sh script is a custom script that merges the bootloader, partition table, and the application binary into a single file.&lt;/p&gt; &#xA;&lt;p&gt;Note: if using VSCode, you may have to configure the settings.json file to match your esp hardware version. For example, if your bitaxe has something other than an esp32-s3, you will need to change the version in the &lt;code&gt;.vscode/settings.json&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;Flashing&lt;/h3&gt; &#xA;&lt;p&gt;With the bitaxe connected to your computer via USB, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;bitaxetool --config ./config-xxx.cvs --firmware ./esp-miner-merged.bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;where xxx is the config file for your hardware version. You can see the list of available config files in the root of the repository.&lt;/p&gt; &#xA;&lt;p&gt;Note: if you are developing within a dev container, you will need to run the bitaxetool command from outside the container. Otherwise, you will get an error about the device not being found.&lt;/p&gt; &#xA;&lt;h2&gt;Attributions&lt;/h2&gt; &#xA;&lt;p&gt;The display font is Portfolio 6x8 from &lt;a href=&#34;https://int10h.org/oldschool-pc-fonts/&#34;&gt;https://int10h.org/oldschool-pc-fonts/&lt;/a&gt; by VileR.&lt;/p&gt;</summary>
  </entry>
</feed>