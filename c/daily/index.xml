<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-13T01:46:19Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>medusalix/xone</title>
    <updated>2022-06-13T01:46:19Z</updated>
    <id>tag:github.com,2022-06-13:/medusalix/xone</id>
    <link href="https://github.com/medusalix/xone" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Linux kernel driver for Xbox One and Xbox Series X|S accessories&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;xone &lt;a href=&#34;https://github.com/medusalix/xone/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/medusalix/xone?logo=github&#34; alt=&#34;Release Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/FDQxwWk&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/733964971842732042?label=discord&amp;amp;logo=discord&#34; alt=&#34;Discord Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.com/donate?hosted_button_id=BWUECKFDNY446&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif&#34; alt=&#34;Donate Button&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;xone&lt;/code&gt; is a Linux kernel driver for Xbox One and Xbox Series X|S accessories. It serves as a modern replacement for &lt;code&gt;xpad&lt;/code&gt;, aiming to be compatible with Microsoft&#39;s &lt;em&gt;Game Input Protocol&lt;/em&gt; (GIP).&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Wired devices (via USB)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Wireless devices (with Xbox Wireless Dongle)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Bluetooth devices (check out &lt;a href=&#34;https://github.com/atar-axis/xpadneo&#34;&gt;&lt;code&gt;xpadneo&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Important notes&lt;/h2&gt; &#xA;&lt;p&gt;This driver is still in active development. Use at your own risk! If you are running &lt;code&gt;xow&lt;/code&gt; upgrading to &lt;code&gt;xone&lt;/code&gt; is &lt;em&gt;highly recommended&lt;/em&gt;! Always update your Xbox devices to the latest firmware version! &lt;strong&gt;Any feedback including bug reports, suggestions or ideas is &lt;a href=&#34;https://discord.gg/FDQxwWk&#34;&gt;&lt;em&gt;greatly appreciated&lt;/em&gt;&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Input and force feedback (rumble)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Battery reporting (&lt;code&gt;UPower&lt;/code&gt; integration)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; LED control (using &lt;code&gt;/sys/class/leds&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Audio capture/playback (through &lt;code&gt;ALSA&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Power management (suspend/resume and remote/wireless wakeup)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported devices&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Gamepads &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Xbox One Controllers&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Xbox Series X|S Controllers&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Third party controllers (PowerA, PDP, etc.)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Headsets &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Xbox One Chat Headset&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Xbox One Stereo Headset (adapter or jack)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Xbox Wireless Headset&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Third party wireless headsets (SteelSeries, Razer, etc.)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Third party racing wheels (Thrustmaster, Logitech, etc.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Xbox One Chatpad&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Xbox Adaptive Controller&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Mad Catz Rock Band 4 Wireless Stratocaster&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;⚠️ Standalone wireless headsets are currently not supported!&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/xone/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/xone.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Feel free to package &lt;code&gt;xone&lt;/code&gt; for any Linux distribution or hardware you like. Any issues regarding the packaging should be reported to the respective maintainers.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux (kernel 4.15+ and headers)&lt;/li&gt; &#xA; &lt;li&gt;DKMS&lt;/li&gt; &#xA; &lt;li&gt;curl (for firmware download)&lt;/li&gt; &#xA; &lt;li&gt;cabextract (for firmware extraction)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Guide&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Unplug your Xbox devices.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repository:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/medusalix/xone&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Install &lt;code&gt;xone&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd xone&#xA;sudo ./install.sh --release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Please omit the &lt;code&gt;--release&lt;/code&gt; flag when asked for your debug logs.&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Download the firmware for the wireless dongle:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo xone-get-firmware.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The &lt;code&gt;--skip-disclaimer&lt;/code&gt; flag might be useful for scripting purposes.&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Plug in your Xbox devices.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Updating&lt;/h3&gt; &#xA;&lt;p&gt;Make sure to completely uninstall &lt;code&gt;xone&lt;/code&gt; before updating:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sudo ./uninstall.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Wireless pairing&lt;/h2&gt; &#xA;&lt;p&gt;Xbox devices have to be paired to the wireless dongle. They will not automatically connect to the dongle if they have been previously plugged into a USB port or used via Bluetooth.&lt;/p&gt; &#xA;&lt;p&gt;Instructions for pairing your devices can be found &lt;a href=&#34;https://support.xbox.com/en-US/help/hardware-network/controller/connect-xbox-wireless-controller-to-pc&#34;&gt;here&lt;/a&gt; (see the section on &lt;em&gt;Xbox Wireless&lt;/em&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;LED control&lt;/h2&gt; &#xA;&lt;p&gt;The guide button LED can be controlled via &lt;code&gt;sysfs&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;echo 2 | sudo tee /sys/class/leds/gip*/mode&#xA;echo 5 | sudo tee /sys/class/leds/gip*/brightness&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace the wildcard (&lt;code&gt;gip*&lt;/code&gt;) if you want to control the LED of a specific device. The modes and the maximum brightness can vary from device to device.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;Uninstall the release version and install a debug build of &lt;code&gt;xone&lt;/code&gt; (see installation guide). Run &lt;code&gt;sudo dmesg&lt;/code&gt; to gather logs and check for any error messages related to &lt;code&gt;xone&lt;/code&gt;. If &lt;code&gt;xone&lt;/code&gt; is not being loaded automatically you might have to reboot your system.&lt;/p&gt; &#xA;&lt;h3&gt;Error messages&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Direct firmware load for xow_dongle.bin failed with error -2&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Download the firmware for the wireless dongle (see installation guide).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Input issues&lt;/h3&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;evtest&lt;/code&gt; and &lt;code&gt;fftest&lt;/code&gt; to check the input and force feedback functionality of your devices.&lt;/p&gt; &#xA;&lt;h3&gt;Other problems&lt;/h3&gt; &#xA;&lt;p&gt;Please join the &lt;a href=&#34;https://discord.gg/FDQxwWk&#34;&gt;Discord server&lt;/a&gt; in case of any other problems.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;xone&lt;/code&gt; is released under the &lt;a href=&#34;https://raw.githubusercontent.com/medusalix/xone/master/LICENSE&#34;&gt;GNU General Public License, Version 2&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright (C) 2021 Severin von Wnuck&#xA;&#xA;This program is free software; you can redistribute it and/or&#xA;modify it under the terms of the GNU General Public License&#xA;as published by the Free Software Foundation; either version 2&#xA;of the License, or (at your option) any later version.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>Genymobile/scrcpy</title>
    <updated>2022-06-13T01:46:19Z</updated>
    <id>tag:github.com,2022-06-13:/Genymobile/scrcpy</id>
    <link href="https://github.com/Genymobile/scrcpy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Display and control your Android device&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;scrcpy (v1.24)&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/app/data/icon.svg?sanitize=true&#34; width=&#34;128&#34; height=&#34;128&#34; alt=&#34;scrcpy&#34; align=&#34;right&#34;&gt; &#xA;&lt;p&gt;&lt;em&gt;pronounced &#34;&lt;strong&gt;scr&lt;/strong&gt;een &lt;strong&gt;c&lt;/strong&gt;o&lt;strong&gt;py&lt;/strong&gt;&#34;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/#translations&#34;&gt;Read in another language&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This application provides display and control of Android devices connected via USB or &lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/#tcpip-wireless&#34;&gt;over TCP/IP&lt;/a&gt;. It does not require any &lt;em&gt;root&lt;/em&gt; access. It works on &lt;em&gt;GNU/Linux&lt;/em&gt;, &lt;em&gt;Windows&lt;/em&gt; and &lt;em&gt;macOS&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/assets/screenshot-debian-600.jpg&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It focuses on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;lightness&lt;/strong&gt;: native, displays only the device screen&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;performance&lt;/strong&gt;: 30~120fps, depending on the device&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;quality&lt;/strong&gt;: 1920×1080 or above&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;low latency&lt;/strong&gt;: &lt;a href=&#34;https://github.com/Genymobile/scrcpy/pull/646&#34;&gt;35~70ms&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;low startup time&lt;/strong&gt;: ~1 second to display the first image&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;non-intrusiveness&lt;/strong&gt;: nothing is left installed on the Android device&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;user benefits&lt;/strong&gt;: no account, no ads, no internet required&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;freedom&lt;/strong&gt;: free and open source software&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Its features include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/#recording&#34;&gt;recording&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;mirroring with &lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/#turn-screen-off&#34;&gt;Android device screen off&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/#copy-paste&#34;&gt;copy-paste&lt;/a&gt; in both directions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/#capture-configuration&#34;&gt;configurable quality&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Android device &lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/#v4l2loopback&#34;&gt;as a webcam (V4L2)&lt;/a&gt; (Linux-only)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/#physical-keyboard-simulation-hid&#34;&gt;physical keyboard simulation (HID)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/#physical-mouse-simulation-hid&#34;&gt;physical mouse simulation (HID)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/#otg&#34;&gt;OTG mode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;and more…&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;The Android device requires at least API 21 (Android 5.0).&lt;/p&gt; &#xA;&lt;p&gt;Make sure you &lt;a href=&#34;https://developer.android.com/studio/command-line/adb.html#Enabling&#34;&gt;enable adb debugging&lt;/a&gt; on your device(s).&lt;/p&gt; &#xA;&lt;p&gt;On some devices, you also need to enable &lt;a href=&#34;https://github.com/Genymobile/scrcpy/issues/70#issuecomment-373286323&#34;&gt;an additional option&lt;/a&gt; to control it using a keyboard and mouse.&lt;/p&gt; &#xA;&lt;h2&gt;Get the app&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/scrcpy/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/scrcpy.svg?sanitize=true&#34; alt=&#34;Packaging status&#34; align=&#34;right&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Summary&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux: &lt;code&gt;apt install scrcpy&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Windows: &lt;a href=&#34;https://github.com/Genymobile/scrcpy/releases/download/v1.24/scrcpy-win64-v1.24.zip&#34;&gt;download&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;macOS: &lt;code&gt;brew install scrcpy&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Build from sources: &lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/BUILD.md&#34;&gt;BUILD&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/BUILD.md#simple&#34;&gt;simplified process&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;p&gt;On Debian and Ubuntu:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt install scrcpy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Arch Linux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pacman -S scrcpy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://en.wikipedia.org/wiki/Snappy_(package_manager)&#34;&gt;Snap&lt;/a&gt; package is available: &lt;a href=&#34;https://snapstats.org/snaps/scrcpy&#34;&gt;&lt;code&gt;scrcpy&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For Fedora, a &lt;a href=&#34;https://fedoraproject.org/wiki/Category:Copr&#34;&gt;COPR&lt;/a&gt; package is available: &lt;a href=&#34;https://copr.fedorainfracloud.org/coprs/zeno/scrcpy/&#34;&gt;&lt;code&gt;scrcpy&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For Gentoo, an &lt;a href=&#34;https://wiki.gentoo.org/wiki/Ebuild&#34;&gt;Ebuild&lt;/a&gt; is available: &lt;a href=&#34;https://github.com/maggu2810/maggu2810-overlay/tree/master/app-mobilephone/scrcpy&#34;&gt;&lt;code&gt;scrcpy/&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also &lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/BUILD.md&#34;&gt;build the app manually&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/BUILD.md#simple&#34;&gt;simplified process&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;For Windows, a prebuilt archive with all the dependencies (including &lt;code&gt;adb&lt;/code&gt;) is available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Genymobile/scrcpy/releases/download/v1.24/scrcpy-win64-v1.24.zip&#34;&gt;&lt;code&gt;scrcpy-win64-v1.24.zip&lt;/code&gt;&lt;/a&gt;&lt;br&gt; &lt;sub&gt;SHA-256: &lt;code&gt;6ccb64cba0a3e75715e85a188daeb4f306a1985f8ce123eba92ba74fc9b27367&lt;/code&gt;&lt;/sub&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;It is also available in &lt;a href=&#34;https://chocolatey.org/&#34;&gt;Chocolatey&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;choco install scrcpy&#xA;choco install adb    # if you don&#39;t have it yet&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And in &lt;a href=&#34;https://scoop.sh&#34;&gt;Scoop&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scoop install scrcpy&#xA;scoop install adb    # if you don&#39;t have it yet&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also &lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/BUILD.md&#34;&gt;build the app manually&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;p&gt;The application is available in &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;. Just install it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install scrcpy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You need &lt;code&gt;adb&lt;/code&gt;, accessible from your &lt;code&gt;PATH&lt;/code&gt;. If you don&#39;t have it yet:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install android-platform-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It&#39;s also available in &lt;a href=&#34;https://www.macports.org/&#34;&gt;MacPorts&lt;/a&gt;, which sets up &lt;code&gt;adb&lt;/code&gt; for you:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo port install scrcpy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also &lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/BUILD.md&#34;&gt;build the app manually&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Run&lt;/h2&gt; &#xA;&lt;p&gt;Plug an Android device into your computer, and execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It accepts command-line arguments, listed by:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Capture configuration&lt;/h3&gt; &#xA;&lt;h4&gt;Reduce size&lt;/h4&gt; &#xA;&lt;p&gt;Sometimes, it is useful to mirror an Android device at a lower resolution to increase performance.&lt;/p&gt; &#xA;&lt;p&gt;To limit both the width and height to some value (e.g. 1024):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --max-size 1024&#xA;scrcpy -m 1024  # short version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The other dimension is computed so that the Android device aspect ratio is preserved. That way, a device in 1920×1080 will be mirrored at 1024×576.&lt;/p&gt; &#xA;&lt;h4&gt;Change bit-rate&lt;/h4&gt; &#xA;&lt;p&gt;The default bit-rate is 8 Mbps. To change the video bitrate (e.g. to 2 Mbps):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --bit-rate 2M&#xA;scrcpy -b 2M  # short version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Limit frame rate&lt;/h4&gt; &#xA;&lt;p&gt;The capture frame rate can be limited:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --max-fps 15&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is officially supported since Android 10, but may work on earlier versions.&lt;/p&gt; &#xA;&lt;p&gt;The actual capture framerate may be printed to the console:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;scrcpy --print-fps&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It may also be enabled or disabled at any time with &lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;i&lt;/kbd&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Crop&lt;/h4&gt; &#xA;&lt;p&gt;The device screen may be cropped to mirror only part of the screen.&lt;/p&gt; &#xA;&lt;p&gt;This is useful, for example, to mirror only one eye of the Oculus Go:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --crop 1224:1440:0:0   # 1224x1440 at offset (0,0)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If &lt;code&gt;--max-size&lt;/code&gt; is also specified, resizing is applied after cropping.&lt;/p&gt; &#xA;&lt;h4&gt;Lock video orientation&lt;/h4&gt; &#xA;&lt;p&gt;To lock the orientation of the mirroring:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --lock-video-orientation     # initial (current) orientation&#xA;scrcpy --lock-video-orientation=0   # natural orientation&#xA;scrcpy --lock-video-orientation=1   # 90° counterclockwise&#xA;scrcpy --lock-video-orientation=2   # 180°&#xA;scrcpy --lock-video-orientation=3   # 90° clockwise&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This affects recording orientation.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/#rotation&#34;&gt;window may also be rotated&lt;/a&gt; independently.&lt;/p&gt; &#xA;&lt;h4&gt;Encoder&lt;/h4&gt; &#xA;&lt;p&gt;Some devices have more than one encoder, and some of them may cause issues or crash. It is possible to select a different encoder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --encoder OMX.qcom.video.encoder.avc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To list the available encoders, you can pass an invalid encoder name; the error will give the available encoders:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --encoder _&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Capture&lt;/h3&gt; &#xA;&lt;h4&gt;Recording&lt;/h4&gt; &#xA;&lt;p&gt;It is possible to record the screen while mirroring:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --record file.mp4&#xA;scrcpy -r file.mkv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To disable mirroring while recording:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --no-display --record file.mp4&#xA;scrcpy -Nr file.mkv&#xA;# interrupt recording with Ctrl+C&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&#34;Skipped frames&#34; are recorded, even if they are not displayed in real time (for performance reasons). Frames are &lt;em&gt;timestamped&lt;/em&gt; on the device, so &lt;a href=&#34;https://en.wikipedia.org/wiki/Packet_delay_variation&#34;&gt;packet delay variation&lt;/a&gt; does not impact the recorded file.&lt;/p&gt; &#xA;&lt;h4&gt;v4l2loopback&lt;/h4&gt; &#xA;&lt;p&gt;On Linux, it is possible to send the video stream to a v4l2 loopback device, so that the Android device can be opened like a webcam by any v4l2-capable tool.&lt;/p&gt; &#xA;&lt;p&gt;The module &lt;code&gt;v4l2loopback&lt;/code&gt; must be installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install v4l2loopback-dkms&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To create a v4l2 device:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo modprobe v4l2loopback&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will create a new video device in &lt;code&gt;/dev/videoN&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is an integer (more &lt;a href=&#34;https://github.com/umlaeute/v4l2loopback#options&#34;&gt;options&lt;/a&gt; are available to create several devices or devices with specific IDs).&lt;/p&gt; &#xA;&lt;p&gt;To list the enabled devices:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# requires v4l-utils package&#xA;v4l2-ctl --list-devices&#xA;&#xA;# simple but might be sufficient&#xA;ls /dev/video*&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To start &lt;code&gt;scrcpy&lt;/code&gt; using a v4l2 sink:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --v4l2-sink=/dev/videoN&#xA;scrcpy --v4l2-sink=/dev/videoN --no-display  # disable mirroring window&#xA;scrcpy --v4l2-sink=/dev/videoN -N            # short version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(replace &lt;code&gt;N&lt;/code&gt; with the device ID, check with &lt;code&gt;ls /dev/video*&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;Once enabled, you can open your video stream with a v4l2-capable tool:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ffplay -i /dev/videoN&#xA;vlc v4l2:///dev/videoN   # VLC might add some buffering delay&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example, you could capture the video within &lt;a href=&#34;https://obsproject.com/&#34;&gt;OBS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Buffering&lt;/h4&gt; &#xA;&lt;p&gt;It is possible to add buffering. This increases latency, but reduces jitter (see &lt;a href=&#34;https://github.com/Genymobile/scrcpy/issues/2464&#34;&gt;#2464&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;The option is available for display buffering:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --display-buffer=50  # add 50 ms buffering for display&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and V4L2 sink:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --v4l2-buffer=500    # add 500 ms buffering for v4l2 sink&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Connection&lt;/h3&gt; &#xA;&lt;h4&gt;TCP/IP (wireless)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Scrcpy&lt;/em&gt; uses &lt;code&gt;adb&lt;/code&gt; to communicate with the device, and &lt;code&gt;adb&lt;/code&gt; can &lt;a href=&#34;https://developer.android.com/studio/command-line/adb.html#wireless&#34;&gt;connect&lt;/a&gt; to a device over TCP/IP. The device must be connected on the same network as the computer.&lt;/p&gt; &#xA;&lt;h5&gt;Automatic&lt;/h5&gt; &#xA;&lt;p&gt;An option &lt;code&gt;--tcpip&lt;/code&gt; allows to configure the connection automatically. There are two variants.&lt;/p&gt; &#xA;&lt;p&gt;If the device (accessible at 192.168.1.1 in this example) already listens on a port (typically 5555) for incoming &lt;em&gt;adb&lt;/em&gt; connections, then run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --tcpip=192.168.1.1       # default port is 5555&#xA;scrcpy --tcpip=192.168.1.1:5555&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If &lt;em&gt;adb&lt;/em&gt; TCP/IP mode is disabled on the device (or if you don&#39;t know the IP address), connect the device over USB, then run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --tcpip    # without arguments&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It will automatically find the device IP address, enable TCP/IP mode, then connect to the device before starting.&lt;/p&gt; &#xA;&lt;h5&gt;Manual&lt;/h5&gt; &#xA;&lt;p&gt;Alternatively, it is possible to enable the TCP/IP connection manually using &lt;code&gt;adb&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Plug the device into a USB port on your computer.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Connect the device to the same Wi-Fi network as your computer.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Get your device IP address, in Settings → About phone → Status, or by executing this command:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;adb shell ip route | awk &#39;{print $9}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enable &lt;code&gt;adb&lt;/code&gt; over TCP/IP on your device: &lt;code&gt;adb tcpip 5555&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Unplug your device.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Connect to your device: &lt;code&gt;adb connect DEVICE_IP:5555&lt;/code&gt; &lt;em&gt;(replace &lt;code&gt;DEVICE_IP&lt;/code&gt; with the device IP address you found)&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;scrcpy&lt;/code&gt; as usual.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Since Android 11, a &lt;a href=&#34;https://developer.android.com/studio/command-line/adb#connect-to-a-device-over-wi-fi-android-11+&#34;&gt;Wireless debugging option&lt;/a&gt; allows to bypass having to physically connect your device directly to your computer.&lt;/p&gt; &#xA;&lt;p&gt;If the connection randomly drops, run your &lt;code&gt;scrcpy&lt;/code&gt; command to reconnect. If it says there are no devices/emulators found, try running &lt;code&gt;adb connect DEVICE_IP:5555&lt;/code&gt; again, and then &lt;code&gt;scrcpy&lt;/code&gt; as usual. If it still says there are none found, try running &lt;code&gt;adb disconnect&lt;/code&gt;, and then run those two commands again.&lt;/p&gt; &#xA;&lt;p&gt;It may be useful to decrease the bit-rate and the resolution:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --bit-rate 2M --max-size 800&#xA;scrcpy -b2M -m800  # short version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Multi-devices&lt;/h4&gt; &#xA;&lt;p&gt;If several devices are listed in &lt;code&gt;adb devices&lt;/code&gt;, you can specify the &lt;em&gt;serial&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --serial 0123456789abcdef&#xA;scrcpy -s 0123456789abcdef  # short version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The serial may also be provided via the environment variable &lt;code&gt;ANDROID_SERIAL&lt;/code&gt; (also used by &lt;code&gt;adb&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;If the device is connected over TCP/IP:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --serial 192.168.0.1:5555&#xA;scrcpy -s 192.168.0.1:5555  # short version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If only one device is connected via either USB or TCP/IP, it is possible to select it automatically:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Select the only device connected via USB&#xA;scrcpy -d             # like adb -d&#xA;scrcpy --select-usb   # long version&#xA;&#xA;# Select the only device connected via TCP/IP&#xA;scrcpy -e             # like adb -e&#xA;scrcpy --select-tcpip # long version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can start several instances of &lt;em&gt;scrcpy&lt;/em&gt; for several devices.&lt;/p&gt; &#xA;&lt;h4&gt;Autostart on device connection&lt;/h4&gt; &#xA;&lt;p&gt;You could use &lt;a href=&#34;https://github.com/rom1v/autoadb&#34;&gt;AutoAdb&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;autoadb scrcpy -s &#39;{}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Tunnels&lt;/h4&gt; &#xA;&lt;p&gt;To connect to a remote device, it is possible to connect a local &lt;code&gt;adb&lt;/code&gt; client to a remote &lt;code&gt;adb&lt;/code&gt; server (provided they use the same version of the &lt;em&gt;adb&lt;/em&gt; protocol).&lt;/p&gt; &#xA;&lt;h5&gt;Remote ADB server&lt;/h5&gt; &#xA;&lt;p&gt;To connect to a remote &lt;em&gt;adb server&lt;/em&gt;, make the server listen on all interfaces:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;adb kill-server&#xA;adb -a nodaemon server start&#xA;# keep this open&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning: all communications between clients and the &lt;em&gt;adb server&lt;/em&gt; are unencrypted.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Suppose that this server is accessible at 192.168.1.2. Then, from another terminal, run &lt;code&gt;scrcpy&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export ADB_SERVER_SOCKET=tcp:192.168.1.2:5037&#xA;scrcpy --tunnel-host=192.168.1.2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;scrcpy&lt;/code&gt; uses the local port used for &lt;code&gt;adb forward&lt;/code&gt; tunnel establishment (typically &lt;code&gt;27183&lt;/code&gt;, see &lt;code&gt;--port&lt;/code&gt;). It is also possible to force a different tunnel port (it may be useful in more complex situations, when more redirections are involved):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;scrcpy --tunnel-port=1234&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;SSH tunnel&lt;/h5&gt; &#xA;&lt;p&gt;To communicate with a remote &lt;em&gt;adb server&lt;/em&gt; securely, it is preferable to use an SSH tunnel.&lt;/p&gt; &#xA;&lt;p&gt;First, make sure the &lt;em&gt;adb server&lt;/em&gt; is running on the remote computer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;adb start-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, establish an SSH tunnel:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# local  5038 --&amp;gt; remote  5037&#xA;# local 27183 &amp;lt;-- remote 27183&#xA;ssh -CN -L5038:localhost:5037 -R27183:localhost:27183 your_remote_computer&#xA;# keep this open&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From another terminal, run &lt;code&gt;scrcpy&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export ADB_SERVER_SOCKET=tcp:localhost:5038&#xA;scrcpy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To avoid enabling remote port forwarding, you could force a forward connection instead (notice the &lt;code&gt;-L&lt;/code&gt; instead of &lt;code&gt;-R&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# local  5038 --&amp;gt; remote  5037&#xA;# local 27183 --&amp;gt; remote 27183&#xA;ssh -CN -L5038:localhost:5037 -L27183:localhost:27183 your_remote_computer&#xA;# keep this open&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From another terminal, run &lt;code&gt;scrcpy&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export ADB_SERVER_SOCKET=tcp:localhost:5038&#xA;scrcpy --force-adb-forward&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Like for wireless connections, it may be useful to reduce quality:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;scrcpy -b2M -m800 --max-fps 15&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Window configuration&lt;/h3&gt; &#xA;&lt;h4&gt;Title&lt;/h4&gt; &#xA;&lt;p&gt;By default, the window title is the device model. It can be changed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --window-title &#39;My device&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Position and size&lt;/h4&gt; &#xA;&lt;p&gt;The initial window position and size may be specified:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --window-x 100 --window-y 100 --window-width 800 --window-height 600&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Borderless&lt;/h4&gt; &#xA;&lt;p&gt;To disable window decorations:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --window-borderless&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Always on top&lt;/h4&gt; &#xA;&lt;p&gt;To keep the &lt;em&gt;scrcpy&lt;/em&gt; window always on top:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --always-on-top&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Fullscreen&lt;/h4&gt; &#xA;&lt;p&gt;The app may be started directly in fullscreen:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --fullscreen&#xA;scrcpy -f  # short version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Fullscreen can then be toggled dynamically with &lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;f&lt;/kbd&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Rotation&lt;/h4&gt; &#xA;&lt;p&gt;The window may be rotated:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --rotation 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Possible values:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;0&lt;/code&gt;: no rotation&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;1&lt;/code&gt;: 90 degrees counterclockwise&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;2&lt;/code&gt;: 180 degrees&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;3&lt;/code&gt;: 90 degrees clockwise&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The rotation can also be changed dynamically with &lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;←&lt;/kbd&gt; &lt;em&gt;(left)&lt;/em&gt; and &lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;→&lt;/kbd&gt; &lt;em&gt;(right)&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that &lt;em&gt;scrcpy&lt;/em&gt; manages 3 different rotations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;r&lt;/kbd&gt; requests the device to switch between portrait and landscape (the current running app may refuse, if it does not support the requested orientation).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/#lock-video-orientation&#34;&gt;&lt;code&gt;--lock-video-orientation&lt;/code&gt;&lt;/a&gt; changes the mirroring orientation (the orientation of the video sent from the device to the computer). This affects the recording.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--rotation&lt;/code&gt; (or &lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;←&lt;/kbd&gt;/&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;→&lt;/kbd&gt;) rotates only the window content. This affects only the display, not the recording.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Other mirroring options&lt;/h3&gt; &#xA;&lt;h4&gt;Read-only&lt;/h4&gt; &#xA;&lt;p&gt;To disable controls (everything which can interact with the device: input keys, mouse events, drag&amp;amp;drop files):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --no-control&#xA;scrcpy -n&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Display&lt;/h4&gt; &#xA;&lt;p&gt;If several displays are available, it is possible to select the display to mirror:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --display 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The list of display ids can be retrieved by:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;adb shell dumpsys display   # search &#34;mDisplayId=&#34; in the output&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The secondary display may only be controlled if the device runs at least Android 10 (otherwise it is mirrored as read-only).&lt;/p&gt; &#xA;&lt;h4&gt;Stay awake&lt;/h4&gt; &#xA;&lt;p&gt;To prevent the device from sleeping after a delay when the device is plugged in:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --stay-awake&#xA;scrcpy -w&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The initial state is restored when &lt;em&gt;scrcpy&lt;/em&gt; is closed.&lt;/p&gt; &#xA;&lt;h4&gt;Turn screen off&lt;/h4&gt; &#xA;&lt;p&gt;It is possible to turn the device screen off while mirroring on start with a command-line option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --turn-screen-off&#xA;scrcpy -S&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or by pressing &lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;o&lt;/kbd&gt; at any time.&lt;/p&gt; &#xA;&lt;p&gt;To turn it back on, press &lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;o&lt;/kbd&gt;.&lt;/p&gt; &#xA;&lt;p&gt;On Android, the &lt;code&gt;POWER&lt;/code&gt; button always turns the screen on. For convenience, if &lt;code&gt;POWER&lt;/code&gt; is sent via &lt;em&gt;scrcpy&lt;/em&gt; (via right-click or &lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;p&lt;/kbd&gt;), it will force to turn the screen off after a small delay (on a best effort basis). The physical &lt;code&gt;POWER&lt;/code&gt; button will still cause the screen to be turned on.&lt;/p&gt; &#xA;&lt;p&gt;It can also be useful to prevent the device from sleeping:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --turn-screen-off --stay-awake&#xA;scrcpy -Sw&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Power off on close&lt;/h4&gt; &#xA;&lt;p&gt;To turn the device screen off when closing &lt;em&gt;scrcpy&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --power-off-on-close&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Power on on start&lt;/h4&gt; &#xA;&lt;p&gt;By default, on start, the device is powered on.&lt;/p&gt; &#xA;&lt;p&gt;To prevent this behavior:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --no-power-on&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Show touches&lt;/h4&gt; &#xA;&lt;p&gt;For presentations, it may be useful to show physical touches (on the physical device).&lt;/p&gt; &#xA;&lt;p&gt;Android provides this feature in &lt;em&gt;Developers options&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Scrcpy&lt;/em&gt; provides an option to enable this feature on start and restore the initial value on exit:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --show-touches&#xA;scrcpy -t&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that it only shows &lt;em&gt;physical&lt;/em&gt; touches (by a finger on the device).&lt;/p&gt; &#xA;&lt;h4&gt;Disable screensaver&lt;/h4&gt; &#xA;&lt;p&gt;By default, &lt;em&gt;scrcpy&lt;/em&gt; does not prevent the screensaver from running on the computer.&lt;/p&gt; &#xA;&lt;p&gt;To disable it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --disable-screensaver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Input control&lt;/h3&gt; &#xA;&lt;h4&gt;Rotate device screen&lt;/h4&gt; &#xA;&lt;p&gt;Press &lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;r&lt;/kbd&gt; to switch between portrait and landscape modes.&lt;/p&gt; &#xA;&lt;p&gt;Note that it rotates only if the application in foreground supports the requested orientation.&lt;/p&gt; &#xA;&lt;h4&gt;Copy-paste&lt;/h4&gt; &#xA;&lt;p&gt;Any time the Android clipboard changes, it is automatically synchronized to the computer clipboard.&lt;/p&gt; &#xA;&lt;p&gt;Any &lt;kbd&gt;Ctrl&lt;/kbd&gt; shortcut is forwarded to the device. In particular:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;c&lt;/kbd&gt; typically copies&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;x&lt;/kbd&gt; typically cuts&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;v&lt;/kbd&gt; typically pastes (after computer-to-device clipboard synchronization)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This typically works as you expect.&lt;/p&gt; &#xA;&lt;p&gt;The actual behavior depends on the active application though. For example, &lt;em&gt;Termux&lt;/em&gt; sends SIGINT on &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;c&lt;/kbd&gt; instead, and &lt;em&gt;K-9 Mail&lt;/em&gt; composes a new message.&lt;/p&gt; &#xA;&lt;p&gt;To copy, cut and paste in such cases (but only supported on Android &amp;gt;= 7):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;c&lt;/kbd&gt; injects &lt;code&gt;COPY&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;x&lt;/kbd&gt; injects &lt;code&gt;CUT&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;v&lt;/kbd&gt; injects &lt;code&gt;PASTE&lt;/code&gt; (after computer-to-device clipboard synchronization)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In addition, &lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;v&lt;/kbd&gt; injects the computer clipboard text as a sequence of key events. This is useful when the component does not accept text pasting (for example in &lt;em&gt;Termux&lt;/em&gt;), but it can break non-ASCII content.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; Pasting the computer clipboard to the device (either via &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;v&lt;/kbd&gt; or &lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;v&lt;/kbd&gt;) copies the content into the Android clipboard. As a consequence, any Android application could read its content. You should avoid pasting sensitive content (like passwords) that way.&lt;/p&gt; &#xA;&lt;p&gt;Some Android devices do not behave as expected when setting the device clipboard programmatically. An option &lt;code&gt;--legacy-paste&lt;/code&gt; is provided to change the behavior of &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;v&lt;/kbd&gt; and &lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;v&lt;/kbd&gt; so that they also inject the computer clipboard text as a sequence of key events (the same way as &lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;v&lt;/kbd&gt;).&lt;/p&gt; &#xA;&lt;p&gt;To disable automatic clipboard synchronization, use &lt;code&gt;--no-clipboard-autosync&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Pinch-to-zoom&lt;/h4&gt; &#xA;&lt;p&gt;To simulate &#34;pinch-to-zoom&#34;: &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;em&gt;click-and-move&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;More precisely, hold down &lt;kbd&gt;Ctrl&lt;/kbd&gt; while pressing the left-click button. Until the left-click button is released, all mouse movements scale and rotate the content (if supported by the app) relative to the center of the screen.&lt;/p&gt; &#xA;&lt;p&gt;Technically, &lt;em&gt;scrcpy&lt;/em&gt; generates additional touch events from a &#34;virtual finger&#34; at a location inverted through the center of the screen.&lt;/p&gt; &#xA;&lt;h4&gt;Physical keyboard simulation (HID)&lt;/h4&gt; &#xA;&lt;p&gt;By default, &lt;em&gt;scrcpy&lt;/em&gt; uses Android key or text injection: it works everywhere, but is limited to ASCII.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, &lt;code&gt;scrcpy&lt;/code&gt; can simulate a physical USB keyboard on Android to provide a better input experience (using &lt;a href=&#34;https://source.android.com/devices/accessories/aoa2#hid-support&#34;&gt;USB HID over AOAv2&lt;/a&gt;): the virtual keyboard is disabled and it works for all characters and IME.&lt;/p&gt; &#xA;&lt;p&gt;However, it only works if the device is connected via USB.&lt;/p&gt; &#xA;&lt;p&gt;Note: On Windows, it may only work in &lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/#otg&#34;&gt;OTG mode&lt;/a&gt;, not while mirroring (it is not possible to open a USB device if it is already open by another process like the &lt;em&gt;adb daemon&lt;/em&gt;).&lt;/p&gt; &#xA;&lt;p&gt;To enable this mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --hid-keyboard&#xA;scrcpy -K  # short version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If it fails for some reason (for example because the device is not connected via USB), it automatically fallbacks to the default mode (with a log in the console). This allows using the same command line options when connected over USB and TCP/IP.&lt;/p&gt; &#xA;&lt;p&gt;In this mode, raw key events (scancodes) are sent to the device, independently of the host key mapping. Therefore, if your keyboard layout does not match, it must be configured on the Android device, in Settings → System → Languages and input → &lt;a href=&#34;https://github.com/Genymobile/scrcpy/pull/2632#issuecomment-923756915&#34;&gt;Physical keyboard&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This settings page can be started directly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;adb shell am start -a android.settings.HARD_KEYBOARD_SETTINGS&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;However, the option is only available when the HID keyboard is enabled (or when a physical keyboard is connected).&lt;/p&gt; &#xA;&lt;h4&gt;Physical mouse simulation (HID)&lt;/h4&gt; &#xA;&lt;p&gt;Similarly to the physical keyboard simulation, it is possible to simulate a physical mouse. Likewise, it only works if the device is connected by USB.&lt;/p&gt; &#xA;&lt;p&gt;By default, &lt;em&gt;scrcpy&lt;/em&gt; uses Android mouse events injection with absolute coordinates. By simulating a physical mouse, a mouse pointer appears on the Android device, and relative mouse motion, clicks and scrolls are injected.&lt;/p&gt; &#xA;&lt;p&gt;To enable this mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --hid-mouse&#xA;scrcpy -M  # short version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also add &lt;code&gt;--forward-all-clicks&lt;/code&gt; to &lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/#right-click-and-middle-click&#34;&gt;forward all mouse buttons&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When this mode is enabled, the computer mouse is &#34;captured&#34; (the mouse pointer disappears from the computer and appears on the Android device instead).&lt;/p&gt; &#xA;&lt;p&gt;Special capture keys, either &lt;kbd&gt;Alt&lt;/kbd&gt; or &lt;kbd&gt;Super&lt;/kbd&gt;, toggle (disable or enable) the mouse capture. Use one of them to give the control of the mouse back to the computer.&lt;/p&gt; &#xA;&lt;h4&gt;OTG&lt;/h4&gt; &#xA;&lt;p&gt;It is possible to run &lt;em&gt;scrcpy&lt;/em&gt; with only physical keyboard and mouse simulation (HID), as if the computer keyboard and mouse were plugged directly to the device via an OTG cable.&lt;/p&gt; &#xA;&lt;p&gt;In this mode, &lt;code&gt;adb&lt;/code&gt; (USB debugging) is not necessary, and mirroring is disabled.&lt;/p&gt; &#xA;&lt;p&gt;To enable OTG mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --otg&#xA;# Pass the serial if several USB devices are available&#xA;scrcpy --otg -s 0123456789abcdef&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is possible to enable only HID keyboard or HID mouse:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --otg --hid-keyboard              # keyboard only&#xA;scrcpy --otg --hid-mouse                 # mouse only&#xA;scrcpy --otg --hid-keyboard --hid-mouse  # keyboard and mouse&#xA;# for convenience, enable both by default&#xA;scrcpy --otg                             # keyboard and mouse&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Like &lt;code&gt;--hid-keyboard&lt;/code&gt; and &lt;code&gt;--hid-mouse&lt;/code&gt;, it only works if the device is connected by USB.&lt;/p&gt; &#xA;&lt;h4&gt;Text injection preference&lt;/h4&gt; &#xA;&lt;p&gt;Two kinds of &lt;a href=&#34;https://blog.rom1v.com/2018/03/introducing-scrcpy/#handle-text-input&#34;&gt;events&lt;/a&gt; are generated when typing text:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;key events&lt;/em&gt;, signaling that a key is pressed or released;&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;text events&lt;/em&gt;, signaling that a text has been entered.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;By default, letters are injected using key events, so that the keyboard behaves as expected in games (typically for WASD keys).&lt;/p&gt; &#xA;&lt;p&gt;But this may &lt;a href=&#34;https://github.com/Genymobile/scrcpy/issues/650#issuecomment-512945343&#34;&gt;cause issues&lt;/a&gt;. If you encounter such a problem, you can avoid it by:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --prefer-text&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(but this will break keyboard behavior in games)&lt;/p&gt; &#xA;&lt;p&gt;On the contrary, you could force to always inject raw key events:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --raw-key-events&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;These options have no effect on HID keyboard (all key events are sent as scancodes in this mode).&lt;/p&gt; &#xA;&lt;h4&gt;Key repeat&lt;/h4&gt; &#xA;&lt;p&gt;By default, holding a key down generates repeated key events. This can cause performance problems in some games, where these events are useless anyway.&lt;/p&gt; &#xA;&lt;p&gt;To avoid forwarding repeated key events:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --no-key-repeat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This option has no effect on HID keyboard (key repeat is handled by Android directly in this mode).&lt;/p&gt; &#xA;&lt;h4&gt;Right-click and middle-click&lt;/h4&gt; &#xA;&lt;p&gt;By default, right-click triggers BACK (or POWER on) and middle-click triggers HOME. To disable these shortcuts and forward the clicks to the device instead:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --forward-all-clicks&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;File drop&lt;/h3&gt; &#xA;&lt;h4&gt;Install APK&lt;/h4&gt; &#xA;&lt;p&gt;To install an APK, drag &amp;amp; drop an APK file (ending with &lt;code&gt;.apk&lt;/code&gt;) to the &lt;em&gt;scrcpy&lt;/em&gt; window.&lt;/p&gt; &#xA;&lt;p&gt;There is no visual feedback, a log is printed to the console.&lt;/p&gt; &#xA;&lt;h4&gt;Push file to device&lt;/h4&gt; &#xA;&lt;p&gt;To push a file to &lt;code&gt;/sdcard/Download/&lt;/code&gt; on the device, drag &amp;amp; drop a (non-APK) file to the &lt;em&gt;scrcpy&lt;/em&gt; window.&lt;/p&gt; &#xA;&lt;p&gt;There is no visual feedback, a log is printed to the console.&lt;/p&gt; &#xA;&lt;p&gt;The target directory can be changed on start:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scrcpy --push-target=/sdcard/Movies/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Audio forwarding&lt;/h3&gt; &#xA;&lt;p&gt;Audio is not forwarded by &lt;em&gt;scrcpy&lt;/em&gt;. Use &lt;a href=&#34;https://github.com/rom1v/sndcpy&#34;&gt;sndcpy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also see &lt;a href=&#34;https://github.com/Genymobile/scrcpy/issues/14&#34;&gt;issue #14&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Shortcuts&lt;/h2&gt; &#xA;&lt;p&gt;In the following list, &lt;kbd&gt;MOD&lt;/kbd&gt; is the shortcut modifier. By default, it&#39;s (left) &lt;kbd&gt;Alt&lt;/kbd&gt; or (left) &lt;kbd&gt;Super&lt;/kbd&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It can be changed using &lt;code&gt;--shortcut-mod&lt;/code&gt;. Possible keys are &lt;code&gt;lctrl&lt;/code&gt;, &lt;code&gt;rctrl&lt;/code&gt;, &lt;code&gt;lalt&lt;/code&gt;, &lt;code&gt;ralt&lt;/code&gt;, &lt;code&gt;lsuper&lt;/code&gt; and &lt;code&gt;rsuper&lt;/code&gt;. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# use RCtrl for shortcuts&#xA;scrcpy --shortcut-mod=rctrl&#xA;&#xA;# use either LCtrl+LAlt or LSuper for shortcuts&#xA;scrcpy --shortcut-mod=lctrl+lalt,lsuper&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;kbd&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Super_key_(keyboard_button)&#34;&gt;Super&lt;/a&gt;&lt;/kbd&gt; is typically the &lt;kbd&gt;Windows&lt;/kbd&gt; or &lt;kbd&gt;Cmd&lt;/kbd&gt; key.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Action&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Shortcut&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Switch fullscreen mode&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;f&lt;/kbd&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Rotate display left&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;←&lt;/kbd&gt; &lt;em&gt;(left)&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Rotate display right&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;→&lt;/kbd&gt; &lt;em&gt;(right)&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Resize window to 1:1 (pixel-perfect)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;g&lt;/kbd&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Resize window to remove black borders&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;w&lt;/kbd&gt; | &lt;em&gt;Double-left-click¹&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Click on &lt;code&gt;HOME&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;h&lt;/kbd&gt; | &lt;em&gt;Middle-click&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Click on &lt;code&gt;BACK&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;b&lt;/kbd&gt; | &lt;em&gt;Right-click²&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Click on &lt;code&gt;APP_SWITCH&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;s&lt;/kbd&gt; | &lt;em&gt;4th-click³&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Click on &lt;code&gt;MENU&lt;/code&gt; (unlock screen)⁴&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;m&lt;/kbd&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Click on &lt;code&gt;VOLUME_UP&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;↑&lt;/kbd&gt; &lt;em&gt;(up)&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Click on &lt;code&gt;VOLUME_DOWN&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;↓&lt;/kbd&gt; &lt;em&gt;(down)&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Click on &lt;code&gt;POWER&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;p&lt;/kbd&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Power on&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;em&gt;Right-click²&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Turn device screen off (keep mirroring)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;o&lt;/kbd&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Turn device screen on&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;o&lt;/kbd&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Rotate device screen&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;r&lt;/kbd&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Expand notification panel&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;n&lt;/kbd&gt; | &lt;em&gt;5th-click³&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Expand settings panel&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;n&lt;/kbd&gt;+&lt;kbd&gt;n&lt;/kbd&gt; | &lt;em&gt;Double-5th-click³&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Collapse panels&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;n&lt;/kbd&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Copy to clipboard⁵&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;c&lt;/kbd&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cut to clipboard⁵&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;x&lt;/kbd&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Synchronize clipboards and paste⁵&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;v&lt;/kbd&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Inject computer clipboard text&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;v&lt;/kbd&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Enable/disable FPS counter (on stdout)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;MOD&lt;/kbd&gt;+&lt;kbd&gt;i&lt;/kbd&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Pinch-to-zoom&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;em&gt;click-and-move&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Drag &amp;amp; drop APK file&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Install APK from computer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Drag &amp;amp; drop non-APK file&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/#push-file-to-device&#34;&gt;Push file to device&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;¹Double-click on black borders to remove them.&lt;/em&gt;&lt;br&gt; &lt;em&gt;²Right-click turns the screen on if it was off, presses BACK otherwise.&lt;/em&gt;&lt;br&gt; &lt;em&gt;³4th and 5th mouse buttons, if your mouse has them.&lt;/em&gt;&lt;br&gt; &lt;em&gt;⁴For react-native apps in development, &lt;code&gt;MENU&lt;/code&gt; triggers development menu.&lt;/em&gt;&lt;br&gt; &lt;em&gt;⁵Only on Android &amp;gt;= 7.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Shortcuts with repeated keys are executed by releasing and pressing the key a second time. For example, to execute &#34;Expand settings panel&#34;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Press and keep pressing &lt;kbd&gt;MOD&lt;/kbd&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Then double-press &lt;kbd&gt;n&lt;/kbd&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Finally, release &lt;kbd&gt;MOD&lt;/kbd&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;All &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;em&gt;key&lt;/em&gt; shortcuts are forwarded to the device, so they are handled by the active application.&lt;/p&gt; &#xA;&lt;h2&gt;Custom paths&lt;/h2&gt; &#xA;&lt;p&gt;To use a specific &lt;code&gt;adb&lt;/code&gt; binary, configure its path in the environment variable &lt;code&gt;ADB&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ADB=/path/to/adb scrcpy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To override the path of the &lt;code&gt;scrcpy-server&lt;/code&gt; file, configure its path in &lt;code&gt;SCRCPY_SERVER_PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To override the icon, configure its path in &lt;code&gt;SCRCPY_ICON_PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Why the name &lt;em&gt;scrcpy&lt;/em&gt;?&lt;/h2&gt; &#xA;&lt;p&gt;A colleague challenged me to find a name as unpronounceable as &lt;a href=&#34;https://github.com/Genymobile/gnirehtet&#34;&gt;gnirehtet&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://man7.org/linux/man-pages/man3/strcpy.3.html&#34;&gt;&lt;code&gt;strcpy&lt;/code&gt;&lt;/a&gt; copies a &lt;strong&gt;str&lt;/strong&gt;ing; &lt;code&gt;scrcpy&lt;/code&gt; copies a &lt;strong&gt;scr&lt;/strong&gt;een.&lt;/p&gt; &#xA;&lt;h2&gt;How to build?&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/BUILD.md&#34;&gt;BUILD&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Common issues&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/FAQ.md&#34;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Developers&lt;/h2&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/DEVELOP.md&#34;&gt;developers page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Licence&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright (C) 2018 Genymobile&#xA;Copyright (C) 2018-2022 Romain Vimont&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;    http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Articles&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.rom1v.com/2018/03/introducing-scrcpy/&#34;&gt;Introducing scrcpy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.genymotion.com/blog/open-source-project-scrcpy-now-works-wirelessly/&#34;&gt;Scrcpy now works wirelessly&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter a bug, please read the &lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/FAQ.md&#34;&gt;FAQ&lt;/a&gt; first, then open an &lt;a href=&#34;https://github.com/Genymobile/scrcpy/issues&#34;&gt;issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For general questions or discussions, you can also use:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Reddit: &lt;a href=&#34;https://www.reddit.com/r/scrcpy&#34;&gt;&lt;code&gt;r/scrcpy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter: &lt;a href=&#34;https://twitter.com/scrcpy_app&#34;&gt;&lt;code&gt;@scrcpy_app&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Translations&lt;/h2&gt; &#xA;&lt;p&gt;This README is available in other languages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/README.de.md&#34;&gt;Deutsch (German, &lt;code&gt;de&lt;/code&gt;) - v1.22&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/README.id.md&#34;&gt;Indonesian (Indonesia, &lt;code&gt;id&lt;/code&gt;) - v1.16&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/README.it.md&#34;&gt;Italiano (Italiano, &lt;code&gt;it&lt;/code&gt;) - v1.23&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/README.jp.md&#34;&gt;日本語 (Japanese, &lt;code&gt;jp&lt;/code&gt;) - v1.19&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/README.ko.md&#34;&gt;한국어 (Korean, &lt;code&gt;ko&lt;/code&gt;) - v1.11&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/README.pt-br.md&#34;&gt;Português Brasileiro (Brazilian Portuguese, &lt;code&gt;pt-BR&lt;/code&gt;) - v1.19&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/README.sp.md&#34;&gt;Español (Spanish, &lt;code&gt;sp&lt;/code&gt;) - v1.21&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/README.zh-Hans.md&#34;&gt;简体中文 (Simplified Chinese, &lt;code&gt;zh-Hans&lt;/code&gt;) - v1.22&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/README.zh-Hant.md&#34;&gt;繁體中文 (Traditional Chinese, &lt;code&gt;zh-Hant&lt;/code&gt;) - v1.15&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Genymobile/scrcpy/master/README.tr.md&#34;&gt;Turkish (Turkish, &lt;code&gt;tr&lt;/code&gt;) - v1.18&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Only this README file is guaranteed to be up-to-date.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>HandBrake/HandBrake</title>
    <updated>2022-06-13T01:46:19Z</updated>
    <id>tag:github.com,2022-06-13:/HandBrake/HandBrake</id>
    <link href="https://github.com/HandBrake/HandBrake" rel="alternate"></link>
    <summary type="html">&lt;p&gt;HandBrake&#39;s main development repository&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;HandBrake &lt;a href=&#34;https://github.com/HandBrake/HandBrake/actions?query=workflow%3A%22macOS+build%22&#34;&gt;&lt;img src=&#34;https://github.com/HandBrake/HandBrake/workflows/macOS%20build/badge.svg?sanitize=true&#34; alt=&#34;macOS Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HandBrake/HandBrake/actions?query=workflow%3A%22Windows+Build%22&#34;&gt;&lt;img src=&#34;https://github.com/HandBrake/HandBrake/workflows/Windows%20Build/badge.svg?sanitize=true&#34; alt=&#34;Windows Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/HandBrake/HandBrake/actions?query=workflow%3A%22Linux+Build%22&#34;&gt;&lt;img src=&#34;https://github.com/HandBrake/HandBrake/workflows/Linux%20Build/badge.svg?sanitize=true&#34; alt=&#34;Linux Build&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;HandBrake is an open-source video transcoder available for Linux, Mac, and Windows, licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/HandBrake/HandBrake/master/LICENSE&#34;&gt;GNU General Public License (GPL) Version 2&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;HandBrake takes videos you already have and makes new ones that work on your mobile phone, tablet, TV media player, game console, computer, or web browser—nearly anything that supports modern video formats.&lt;/p&gt; &#xA;&lt;p&gt;HandBrake works with most common video files and formats, including ones created by consumer and professional video cameras, mobile devices such as phones and tablets, game and computer screen recordings, and DVD and Blu-ray discs. HandBrake leverages tools such as FFmpeg, x264, and x265 to create new MP4 or MKV video files from these &lt;em&gt;Sources&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For information on downloading, building/installing, and using HandBrake, see the official &lt;a href=&#34;https://handbrake.fr/docs&#34;&gt;HandBrake Documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community Support&lt;/h2&gt; &#xA;&lt;p&gt;Visit the &lt;a href=&#34;https://forum.handbrake.fr/&#34;&gt;HandBrake Community Forums&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For information on HandBrake&#39;s community support channels, please see &lt;a href=&#34;https://handbrake.fr/docs/en/latest/help/community-support.html&#34;&gt;Community Support&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Our &lt;a href=&#34;https://forum.handbrake.fr/app.php/rules&#34;&gt;community rules&lt;/a&gt; and &lt;a href=&#34;https://github.com/HandBrake/HandBrake/raw/master/CODE_OF_CONDUCT.md&#34;&gt;code of conduct&lt;/a&gt; apply to both our site and GitHub.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome most contributions. While it is our goal to allow everyone to contribute, contributions not meeting the project&#39;s goals or standards may be rejected.&lt;/p&gt; &#xA;&lt;p&gt;Please read our &lt;a href=&#34;https://handbrake.fr/docs/en/latest/contributing/contribute.html&#34;&gt;guide to contributing&lt;/a&gt;. This will provide you with all the information you need to start contributing to the project.&lt;/p&gt; &#xA;&lt;h2&gt;Translations&lt;/h2&gt; &#xA;&lt;p&gt;We are now accepting translations via &lt;a href=&#34;https://www.transifex.com/HandBrakeProject/public&#34;&gt;Transifex&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please read our &lt;a href=&#34;https://github.com/HandBrake/HandBrake/raw/master/TRANSLATION.markdown&#34;&gt;Translations Guide&lt;/a&gt; and follow the instructions if you are interested in joining the translation effort.&lt;/p&gt; &#xA;&lt;h2&gt;Additional Information&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/HandBrake/HandBrake/master/AUTHORS.markdown&#34;&gt;Authors&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/HandBrake/HandBrake/master/LICENSE&#34;&gt;License&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/HandBrake/HandBrake/master/NEWS.markdown&#34;&gt;News&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Special Thanks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.macstadium.com/&#34;&gt;&lt;img width=&#34;200&#34; alt=&#34;MacStadium&#34; src=&#34;https://uploads-ssl.webflow.com/5ac3c046c82724970fc60918/5c019d917bba312af7553b49_MacStadium-developerlogo.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;and to many others who have contributed! &lt;a href=&#34;https://raw.githubusercontent.com/HandBrake/HandBrake/master/THANKS.markdown&#34;&gt;Thanks&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>