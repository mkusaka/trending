<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-02T01:32:12Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cococry/leif</title>
    <updated>2024-06-02T01:32:12Z</updated>
    <id>tag:github.com,2024-06-02:/cococry/leif</id>
    <link href="https://github.com/cococry/leif" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Minimal, configurable &amp; GPU accelerated Immediate Mode UI Library written with modern OpenGL&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;leif&lt;/h1&gt; &#xA;&lt;h2&gt;Highlights&lt;/h2&gt; &#xA;&lt;p&gt;Leif is UI in C/C++ made easy. The library is designed to be really easy to setup and provide maximal functionality. All of that while retaining a consice and readable codebase.&lt;/p&gt; &#xA;&lt;h4&gt;Theming &amp;amp; Styling support&lt;/h4&gt; &#xA;&lt;p&gt;The library comes with a fully-featured property system where each UI element can be customized to your liking. Every visible part of your UI can be configured in no time.&lt;/p&gt; &#xA;&lt;h4&gt;Exposed Rendering API&lt;/h4&gt; &#xA;&lt;p&gt;Leif comes with a very performant inhouse batch renderer. The renderers drawing API is fully exposed to the user. This expands the scope of application of the library a lot as you can also utilize it for various non-UI components of your project.&lt;/p&gt; &#xA;&lt;h4&gt;Exposed State&lt;/h4&gt; &#xA;&lt;p&gt;The UI state of leif is nearly completly exposed to the user which, with the rendering system, makes it really easy to add new UI components client-side.&lt;/p&gt; &#xA;&lt;h4&gt;Complete Input-Handling System&lt;/h4&gt; &#xA;&lt;p&gt;The library contains an input subsystem that can be utilized by the user for various different tasks (eg. is_key_down, is_mouse_button_released, etc.) which makes development a whole lot easier.&lt;/p&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Dependency&lt;/th&gt; &#xA;   &lt;th&gt;Reason of Usage&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Dav1dde/glad&#34;&gt;glad&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Loading OpenGL functions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nothings/stb/raw/master/stb_image.h&#34;&gt;stb_image&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Loading image files into memory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nothings/stb/raw/master/stb_image_resize2.h&#34;&gt;stb_image_resize2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Resizing images&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nothings/stb/raw/master/stb_truetype.h&#34;&gt;stb_truetype&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Loading font glyphs from font files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/recp/cglm&#34;&gt;cglm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Linear Algebra Math&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/glfw/glfw&#34;&gt;*GLFW&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Handling windowing, input etc.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;*: This library is an optional library and will be replacable with other libraries&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Installing the library is made very easy by the use of an install script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;git clone https://github.com/cococry/leif&#xA;cd leif&#xA;./install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Initialize Leif before using and after creating a window with your windowing backend:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;lf_init_glfw(displayWidth, displayHeight, glfwWindow);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Within the main loop of your program, call the lf_begin() and lf_end() functions within which you can render UI elements.&lt;/p&gt; &#xA;&lt;h4&gt;Simple hello-world application with GLFW for windowing&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;#include &amp;lt;GLFW/glfw3.h&amp;gt;&#xA;#include &amp;lt;leif/leif.h&amp;gt;&#xA;&#xA;int main() {&#xA;  glfwInit();&#xA;  GLFWwindow* window = glfwCreateWindow(800, 600, &#34;Hello&#34;, NULL, NULL);&#xA;&#xA;  glfwMakeContextCurrent(window);&#xA;&#xA;  lf_init_glfw(800, 600, window);&#xA;&#xA;  while(!glfwWindowShouldClose(window)) {&#xA;    glClear(GL_COLOR_BUFFER_BIT);&#xA;    glClearColor(0.1f, 0.1f, 0.1f, 1.0f);&#xA;&#xA;    lf_begin();&#xA;&#xA;    lf_text(&#34;Hello, Leif!&#34;);&#xA;&#xA;    lf_end();&#xA;    glfwSwapBuffers(window);&#xA;    glfwPollEvents();&#xA;  }&#xA;  lf_terminate();&#xA;  glfwDestroyWindow(window);&#xA;  glfwTerminate();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://github.com/cococry/Leif/raw/main/branding/ui-elements.png&#34; width=&#34;375px/&#34;&gt; &#xA;&lt;h4&gt;Hello-World Plus&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;#include &amp;lt;GLFW/glfw3.h&amp;gt;&#xA;#include &amp;lt;leif/leif.h&amp;gt;&#xA;&#xA;static int winw = 800, winh = 800;&#xA;&#xA;static void resizecb(GLFWwindow* window, int w, int h) {&#xA;  winw = w;&#xA;  winh = h;&#xA;  glViewport(0, 0, w, h);&#xA;  // Resize the leif display on window resize&#xA;  lf_resize_display(w, h);&#xA;}&#xA;&#xA;int main() {&#xA;  glfwInit();&#xA;  GLFWwindow* window = glfwCreateWindow(winw, winh, &#34;Hello&#34;, NULL, NULL);&#xA;&#xA;  glfwMakeContextCurrent(window);&#xA;&#xA;  glfwSetFramebufferSizeCallback(window, resizecb);&#xA;&#xA;  lf_init_glfw(winw, winh, window);&#xA;&#xA;  // Loading a bigger font (replace /home/cococry with your user)&#xA;  LfFont bigfont = lf_load_font(&#34;/home/cococry/.leif/assets/fonts/inter.ttf&#34;, 50);&#xA;&#xA;  while(!glfwWindowShouldClose(window)) {&#xA;    glClear(GL_COLOR_BUFFER_BIT);&#xA;    glClearColor(0.1f, 0.1f, 0.1f, 1.0f);&#xA;&#xA;    // Starting leif context&#xA;    lf_begin();&#xA;&#xA;    const char* text = &#34;Hello, Leif!&#34;;&#xA;    const char* btntext = &#34;Exit&#34;;&#xA;&#xA;    // Defining properties of the button&#xA;    LfUIElementProps btnprops = lf_get_theme().button_props;&#xA;    btnprops.margin_left = 0.0f; btnprops.margin_top = 15.0f; btnprops.border_width = 0.0f; btnprops.corner_radius = 9.0f;&#xA;    btnprops.text_color = LF_WHITE;&#xA;    btnprops.color = (LfColor){90, 90, 90, 255};&#xA;&#xA;    // Beginnig a new container&#xA;    {&#xA;      // Styling the container (setting corner radius)&#xA;      LfUIElementProps props = lf_get_theme().div_props;&#xA;      props.corner_radius = 10.0f;&#xA;      lf_push_style_props(props);&#xA;&#xA;      // Positioning the container in the center&#xA;      float width = 400.0f, height = 400.0f;&#xA;      lf_div_begin(((vec2s){(winw - width) / 2.0f, (winh - height) / 2.0f}), ((vec2s){width, height}), false);&#xA;&#xA;      // Popping the container&#39;s props again&#xA;      lf_pop_style_props();&#xA;    }&#xA;&#xA;    /* Text */&#xA;    {&#xA;      // Setting big font&#xA;      lf_push_font(&amp;amp;bigfont);&#xA;      // Center the text horizontally&#xA;      lf_set_ptr_x_absolute((winw - lf_text_dimension(text).x) / 2.0f);&#xA;      // Center the text (and button) vertically&#xA;      lf_set_ptr_y_absolute((winh - (lf_text_dimension(text).y + lf_text_dimension(btntext).y + btnprops.padding * 2.0f + btnprops.margin_top)) / 2.0f);&#xA;&#xA;      // Remove any margin&#xA;      LfUIElementProps props = lf_get_theme().text_props;&#xA;      props.margin_left = 0.0f; props.margin_right = 0.0f;&#xA;      // Push the style props&#xA;      lf_push_style_props(props);&#xA;&#xA;      // Render the text&#xA;      lf_text(text);&#xA;&#xA;      // Pop the style props&#xA;      lf_pop_style_props();&#xA;&#xA;      // Unsetting big font&#xA;      lf_pop_font();&#xA;    }&#xA;&#xA;    // Advance into the next line&#xA;    lf_next_line();&#xA;&#xA;    /* Exit Button */&#xA;    {&#xA;      const float width = 180.0f;&#xA;&#xA;      lf_push_style_props(btnprops);&#xA;      // Center the button horizontally&#xA;      lf_set_ptr_x_absolute((winw - (width + btnprops.padding * 2.0f)) / 2.0f);&#xA;&#xA;      // Rendering a button with fixed scale (-1 stands for &#34;use normal height&#34;)&#xA;      if(lf_button_fixed(btntext, width, -1) == LF_CLICKED) {&#xA;        // Closing the window when you pressed the button&#xA;        glfwSetWindowShouldClose(window, 1);&#xA;      }&#xA;&#xA;      lf_pop_style_props();&#xA;    }&#xA;&#xA;    // Ending the container&#xA;    lf_div_end();&#xA;&#xA;    // Ending leif context&#xA;    lf_end();&#xA;&#xA;    glfwSwapBuffers(window);&#xA;    glfwPollEvents();&#xA;  }&#xA;&#xA;  lf_terminate();&#xA;  glfwDestroyWindow(window);&#xA;  glfwTerminate();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://github.com/cococry/Leif/raw/main/branding/styling-elements.png&#34; width=&#34;375px/&#34;&gt; &#xA;&lt;h2&gt;Building your project&lt;/h2&gt; &#xA;&lt;p&gt;To build your project, link it with leif and its depdencies.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;gcc -o project project.c -lleif -lglfw -lm -lGL -lclipboard&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Real world usage&lt;/h2&gt; &#xA;&lt;p&gt;But how does the leif library perform in real applications? I am currently working on a music player called &lt;a href=&#34;https://github.com/cococry/lyssa&#34;&gt;lyssa&lt;/a&gt;. The frontend of the player is written entirely with leif. You can see a brief look at of the application below.&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/cococry/lyssa/raw/main/branding/lyssa-showcase.png&#34; width=&#34;1000px&#34;&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://github.com/cococry/todo&#34;&gt;task management app&lt;/a&gt; that i also wrote with the leif library: &lt;img src=&#34;https://github.com/cococry/todo/raw/main/branding/todo-showcase.png&#34; width=&#34;1000px&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;You can contribute to Leif by:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cococry/lyssa/issues&#34;&gt;Fixing bugs or contributing to features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cococry/lyssa/pulls&#34;&gt;Changing features or adding new functionality&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Waterdish/Shipwright-Android</title>
    <updated>2024-06-02T01:32:12Z</updated>
    <id>tag:github.com,2024-06-02:/Waterdish/Shipwright-Android</id>
    <link href="https://github.com/Waterdish/Shipwright-Android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ship of Harkinian Android Port&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ship of Harkinian Android Port&lt;/h1&gt; &#xA;&lt;p&gt;A port of Ship of Harkinian to Android. &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;Original Repository: &lt;a href=&#34;https://github.com/HarbourMasters/Shipwright&#34;&gt;https://github.com/HarbourMasters/Shipwright&lt;/a&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;NOTE: Controller only. No touch controls yet except for in the enhancements menu. &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;Supported (probably): Android 4.3+ (OpenGL ES 3.0+ required) &lt;br&gt; Tested On: Android 10 and Android 13 &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Installation:&lt;/h3&gt; 1. Install the apk from here: https://github.com/Waterdish/Shipwright-Android/releases. &#xA;&lt;br&gt; 2. Open the app once. It will generate the directory for your rom. Allow all file permissions and then close and reopen the app.&#xA;&lt;br&gt; 3. Select &#34;Yes&#34; when prompted by the app if you would like to generate an OTR. Select &#34;Yes&#34; when it asks to look for a rom. Navigate to your &#34;ZELOOTD.z64&#34; and select it. The extraction should start.&#xA;&lt;br&gt; 4. When asked if you would like to extract another rom, select &#34;Yes&#34; to choose another rom or select &#34;No&#34; to start the game. &#xA;&lt;br&gt; 5. It will launch straight into the game on subsequent plays. (If you would like to get the rom selection dialog back, delete the .otr files in Android/data/com.dishii.soh/files/) &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Use Back/Select/- controller button, or the Android back button (swipe left if using gesture controls) to open Enhancements menu. Use touch controls to navigate menus. &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;FAQ:&lt;/h3&gt; Q: Why is it immediately crashing? &#xA;&lt;br&gt; A: Try deleting and re-extracting the OTR file (oot.otr). &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Q: The game opened once, but now it&#39;s just a black screen. &lt;br&gt; A: Reinstall and change MSAA to 1 in Settings-&amp;gt;Graphics &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;Q: I can&#39;t map the C buttons. &lt;br&gt; A: Go to Settings-&amp;gt;Graphics-&amp;gt;ImGui Menu Scale and change it from X-Large to a smaller value. &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;Q: My controller is not doing anything. &lt;br&gt; A: Close the Enhancements Menu. If the Enhancements Menu is not open, open it with the Android back button and check if it is detected in Settings-&amp;gt;Controller-&amp;gt;Controller Mapping. If it is, press refresh. &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;Q: Why are these changes not in the main Shipwright repository?&lt;br&gt; A: Working on it.&lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;b&gt;Known Bugs&lt;/b&gt;:&lt;br&gt; Orientation Lock does not work. &lt;a href=&#34;https://github.com/libsdl-org/SDL/issues/6090&#34;&gt;https://github.com/libsdl-org/SDL/issues/6090&lt;/a&gt;&lt;br&gt; Near-plane clipping when the camera is close to walls.&lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Build Instructions:&lt;/h3&gt; 1. Edit the app/build.gradle file to point to your ndk folder. NDK 26+ tested as working.&#xA;&lt;br&gt; 2. Open the project in android studio and build.&#xA;&lt;br&gt;</summary>
  </entry>
  <entry>
    <title>cloudberrydb/cloudberrydb</title>
    <updated>2024-06-02T01:32:12Z</updated>
    <id>tag:github.com,2024-06-02:/cloudberrydb/cloudberrydb</id>
    <link href="https://github.com/cloudberrydb/cloudberrydb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cloudberry Database - Next generation unified database for Analytics and AI&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;./.github/full_color_black.svg&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;./.github/full_color_white.svg&#34;&gt; &#xA;  &lt;img alt=&#34;Cloudberry Database Logo&#34; src=&#34;https://raw.githubusercontent.com/cloudberrydb/cloudberrydb/main/.github/full_color_black.svg?sanitize=true&#34; width=&#34;400px&#34;&gt; &#xA; &lt;/picture&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Next Generation Unified Database for Analytics and AI &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cloudberrydb.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Website-eebc46&#34; alt=&#34;Website&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cloudberrydb.org/docs&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Documentation-acd94a&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://communityinviter.com/apps/cloudberrydb/welcome&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Join_Slack-6a32c9&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/cloudberrydb&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/cloudberrydb&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cloudberrydb.org/community/wechat&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/WeChat-eebc46&#34; alt=&#34;WeChat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://youtube.com/@cloudberrydb&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Youtube-gebc46&#34; alt=&#34;Youtube&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/orgs/cloudberrydb/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/cloudberrydb/cloudberrydb&#34; alt=&#34;GitHub Discussions&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/commit-activity/m/cloudberrydb/cloudberrydb&#34; alt=&#34;GitHub commit activity(branch)&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/cloudberrydb/cloudberrydb&#34; alt=&#34;GitHub contributors&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/cloudberrydb/cloudberrydb&#34; alt=&#34;GitHub License&#34;&gt; &lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fcloudberrydb%2Fcloudberrydb.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt; &lt;a href=&#34;https://github.com/cloudberrydb/cloudberrydb/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/cloudberrydb/cloudberrydb/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;cbdb pipeline&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;What&#39;s Cloudberry Database&lt;/h2&gt; &#xA;&lt;p&gt;Cloudberry Database (&lt;code&gt;CBDB&lt;/code&gt; or &lt;code&gt;CloudberryDB&lt;/code&gt; for short) is created by a bunch of original Greenplum Database developers and ASF committers. We aim to bring modern computing capabilities to the traditional distributed MPP database to support Analytics and AI/ML workloads in one platform.&lt;/p&gt; &#xA;&lt;p&gt;As a derivative of Greenplum Database 7, Cloudberry Database is compatible with Greenplum Database, but it&#39;s shipped with a newer PostgreSQL 14.4 kernel (scheduled kernel upgrade yearly) and a bunch of features Greenplum Database lacks or does not support. View the &lt;a href=&#34;https://cloudberrydb.org/docs/cbdb-vs-gp-features&#34;&gt;Cloudberry Database vs Greenplum Database&lt;/a&gt; doc for details.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;You can check our &lt;a href=&#34;https://github.com/orgs/cloudberrydb/discussions/369&#34;&gt;Cloudberry Database Roadmap 2024&lt;/a&gt; out to see the product plans and goals we want to achieve in 2024. Welcome to share your thoughts and ideas to join us in shaping the future of the Cloudberry Database.&lt;/p&gt; &#xA;&lt;h2&gt;Build and try out&lt;/h2&gt; &#xA;&lt;h3&gt;Build from source&lt;/h3&gt; &#xA;&lt;p&gt;You can follow &lt;a href=&#34;https://raw.githubusercontent.com/cloudberrydb/cloudberrydb/main/deploy/build&#34;&gt;these guides&lt;/a&gt; to build the Cloudberry Database on Linux OS(including CentOS, RHEL/Rocky Linux, and Ubuntu) and macOS.&lt;/p&gt; &#xA;&lt;h3&gt;Try out quickly&lt;/h3&gt; &#xA;&lt;p&gt;Welcome to try out Cloudberry Database via building &lt;a href=&#34;https://github.com/cloudberrydb/bootcamp&#34;&gt;one Docker-based Sandbox&lt;/a&gt;, which is tailored to help you gain a basic understanding of Cloudberry Database&#39;s capabilities and features a range of materials, including tutorials, sample code, and crash courses.&lt;/p&gt; &#xA;&lt;h2&gt;Repositories&lt;/h2&gt; &#xA;&lt;p&gt;This is the main repository for Cloudberry Database. Alongside this, there are several ecosystem repositories for the Cloudberry Database, including the website, extensions, connectors, adapters, and other utilities.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cloudberrydb/cloudberrydb-site&#34;&gt;cloudberrydb/cloudberrydb-site&lt;/a&gt;: website and documentation sources.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cloudberrydb/bootcamp&#34;&gt;cloudberrydb/bootcamp&lt;/a&gt;: help you quickly try out Cloudberry Database via one Docker-based Sandbox.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cloudberrydb/gpbackup&#34;&gt;cloudberrydb/gpbackup&lt;/a&gt;: backup utility for Cloudberry Database.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cloudberrydb/gp-common-go-libs&#34;&gt;cloudberrydb/gp-common-go-libs&lt;/a&gt;: gp-common-go-libs for Cloudberry Database.&lt;/li&gt; &#xA; &lt;li&gt;More is coming...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community &amp;amp; Support&lt;/h2&gt; &#xA;&lt;p&gt;We have many channels for community members to discuss, ask for help, feedback, and chat:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Slack&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://communityinviter.com/apps/cloudberrydb/welcome&#34;&gt;Click to Join&lt;/a&gt; the real-time chat on Slack for QA, Dev, Events, and more. Don&#39;t miss out! Check out the &lt;a href=&#34;https://cloudberrydb.org/community/slack&#34;&gt;Slack guide&lt;/a&gt; to learn more.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Q&amp;amp;A&lt;/td&gt; &#xA;   &lt;td&gt;Ask for help when running/developing Cloudberry Database, visit &lt;a href=&#34;https://github.com/orgs/cloudberrydb/discussions/categories/q-a&#34;&gt;GitHub Discussions - QA&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;New ideas / Feature Requests&lt;/td&gt; &#xA;   &lt;td&gt;Share ideas for new features, visit &lt;a href=&#34;https://github.com/orgs/cloudberrydb/discussions/categories/ideas-feature-requests&#34;&gt;GitHub Discussions - Ideas&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Report bugs&lt;/td&gt; &#xA;   &lt;td&gt;Problems and issues in Cloudberry Database core. If you find bugs, welcome to submit them &lt;a href=&#34;https://github.com/cloudberrydb/cloudberrydb/issues&#34;&gt;here&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Report a security vulnerability&lt;/td&gt; &#xA;   &lt;td&gt;View our &lt;a href=&#34;https://github.com/cloudberrydb/cloudberrydb/security/policy&#34;&gt;security policy&lt;/a&gt; to learn how to report and contact us.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Community events&lt;/td&gt; &#xA;   &lt;td&gt;Including meetups, webinars, conferences, and more events, visit the &lt;a href=&#34;https://cloudberrydb.org/community/events&#34;&gt;Events page&lt;/a&gt; and subscribe events calendar.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Documentation&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://cloudberrydb.org/docs/&#34;&gt;Official documentation&lt;/a&gt; for Cloudberry Database. You can explore it to discover more details about us.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;When you are involved, please follow our community &lt;a href=&#34;https://cloudberrydb.org/community/coc&#34;&gt;Code of Conduct&lt;/a&gt; to help create a safe space for everyone.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;We believe in the Apache Way &#34;Community Over Code&#34; and we want to make Cloudberry Database a community-driven project.&lt;/p&gt; &#xA;&lt;p&gt;Contributions can be diverse, such as code enhancements, bug fixes, feature proposals, documents, marketing, and so on. No contribution is too small, we encourage all types of contributions. Cloudberry Database community welcomes contributions from anyone, new and experienced! Our &lt;a href=&#34;https://cloudberrydb.org/contribute&#34;&gt;contribution guide&lt;/a&gt; will help you get started with the contribution.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Code contribution&lt;/td&gt; &#xA;   &lt;td&gt;Learn how to contribute code to the Cloudberry Database, including coding preparation, conventions, workflow, review, and checklist following the &lt;a href=&#34;https://cloudberrydb.org/contribute/code&#34;&gt;code contribution guide&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Submit the proposal&lt;/td&gt; &#xA;   &lt;td&gt;Proposing major changes to Cloudberry Database through &lt;a href=&#34;https://cloudberrydb.org/contribute/proposal&#34;&gt;proposal guide&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Doc contribution&lt;/td&gt; &#xA;   &lt;td&gt;We need you to join us to help us improve the documentation, see the &lt;a href=&#34;https://cloudberrydb.org/contribute/doc&#34;&gt;doc contribution guide&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributors Wall&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to all the people who already contributed!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/cloudberrydb/cloudberrydb/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=cloudberrydb/cloudberrydb&amp;amp;max=800&amp;amp;columns=20&amp;amp;anon=0&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;sub&gt;Please note that the images shown above highlight the avatars of our active and upstream contributors while not including anonymous contributors. To view all the contributors, you can click on the images.&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgment&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt;, &lt;a href=&#34;https://greenplum.org/&#34;&gt;Greenplum Database&lt;/a&gt; and other great open source projects to make Cloudberry Database has a sound foundation.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Cloudberry Database is released under the &lt;a href=&#34;https://github.com/cloudberrydb/cloudberrydb/raw/main/LICENSE&#34;&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>