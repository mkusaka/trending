<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-16T01:34:51Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>yanfeizhang/coder-kung-fu</title>
    <updated>2022-06-16T01:34:51Z</updated>
    <id>tag:github.com,2022-06-16:/yanfeizhang/coder-kung-fu</id>
    <link href="https://github.com/yanfeizhang/coder-kung-fu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;开发内功修炼&lt;/p&gt;&lt;hr&gt;&lt;p&gt;我们所有的开发同学每时每刻都在使用内核、都在使用硬件。所以能正确理解内核是怎么工作的、硬件的性能指标大概是多少，这些对于高阶的开发工程师来说非常重要。想成为技术大牛，扎实练习内功是必经之路！&lt;/p&gt; &#xA;&lt;p&gt;飞哥的开发内功修炼从 CPU、内存、磁盘、网络四大模块进行深度思考，总结出来，在这里分享给积极上进的你！欢迎添加飞哥微信交流与围观朋友圈: zhangyanfei748527&lt;/p&gt; &#xA;&lt;p&gt;本 repo 持续更新ing...&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;大家好，飞哥在博客文章的基础上出版了一本书，名字叫做《深入理解Linux网络》。该书市场接受度非常的高，在首发当天就斩获了京东科技类图书的第一名，几天就将首印卖断了货。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yanfeizhang/coder-kung-fu/main/imgs/book.png&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;点击：&lt;a href=&#34;https://union-click.jd.com/jdc?e=618%7Cpc%7C&amp;amp;p=JF8BANcJK1olXwcFV19UDkoTC18IGVsTWAIFUG4ZVxNJXF9RXh5UHw0cSgYYXBcIWDoXSQVJQwYAVFhYDEwTHDZNRwYlCF1nABo_UA50SxVoUidML2RaNEQUeEcbM244GFoWVQIBV11UDnsnA2g4STXN67Da8e9B3OGY1uefK1olXQEGUVdYD04VBmsMGWsSXQ8yHQYCXglTVDtXK2slXjYFVFdJDjlWUXsOaWslXTYBZBwzCB4XVmYBGl9HWFNXUVYJDEMWAGcAT1kQXA8DXV5ZAEsnAW4JH1IlbQ&#34;&gt;京东购买地址&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;另外大家也可以加飞哥微信（zhangyanfei748527）进读者交流群。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;敬请扫码关注微信公众号「开发内功修炼」，及时获得最新硬核文章！&lt;/strong&gt;&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/yanfeizhang/coder-kung-fu/main/imgs/official_accounts.jpg&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;一、网络篇&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;1.1 内核收发包原理&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/GoYDsfy9m0wRoXi_NCfCmg&#34;&gt;🔥图解Linux网络包接收过程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/wThfD9th9e_-YGHJJ3HXNQ&#34;&gt;🔥25 张图，一万字，拆解 Linux 网络包发送过程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/6iQ-OhEbQJbEcgi9kakSjg&#34;&gt;Linux网络包接收过程的监控与调优&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/6_OfoeD3ZpyQisY2F-4_bw&#34;&gt;🔥127.0.0.1 之本机网络通信过程知多少 ?！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/fHzKYlW0WMhP2jxh2H_59A&#34;&gt;本机网络IO之Unix Domain Socket与普通socket的性能对比&lt;/a&gt; &amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/rigtorp/ipc-bench&#34;&gt;实验使用源码&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;1.2 内核如何与用户进程协作&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/cIcw0S-Q8pBl1-WYN0UwnA&#34;&gt;图解 | 深入理解高性能网络开发路上的绊脚石 - 同步阻塞网络 IO&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/OmRdUgO1guMX76EdZn11UQ&#34;&gt;🔥图解 | 深入揭秘 epoll 是如何实现 IO 多路复用的！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/r7EDYsvVhWA2fv52mwM_zg&#34;&gt;漫画 | 看进程小 P 讲述它的网络性能故事！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/hjWhh_zHfxmH1yZFfvu_zA&#34;&gt;在 golang 中是如何对 epoll 进行封装的？&lt;/a&gt; &lt;font color=&#34;#dd0000&#34;&gt;(&lt;span&gt;🇨🇳&lt;/span&gt;新)&lt;/font&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/AX6Fval8RwkgzptdjlU5kg&#34;&gt;万字多图，搞懂 Nginx 高性能网络工作原理！&lt;/a&gt; &lt;font color=&#34;#dd0000&#34;&gt;(&lt;span&gt;🇨🇳&lt;/span&gt;新)&lt;/font&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/2y60cxUjaaE2pWSdCBX1lA&#34;&gt;单线程 Redis 如何做到每秒数万 QPS 的超高处理能力！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/MU8cxoKS3rU9mN_CY3WxWQ&#34;&gt;Redis 6 中的多线程实现方式比我预期的要差&lt;/a&gt; &lt;font color=&#34;#dd0000&#34;&gt;(&lt;span&gt;🇨🇳&lt;/span&gt;新)&lt;/font&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;1.3 TCP之三次握手&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/hv2tmtVpxhVxr6X-RNWBsQ&#34;&gt;为什么服务端程序都需要先 listen 一下？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/SYCUMvzktgeGbyAfRdqhmg&#34;&gt;深入理解Linux端口重用这一特性&lt;/a&gt; &amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://github.com/yanfeizhang/coder-kung-fu/raw/main/tests/network/test08/server.c&#34;&gt;配套实验源码&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/IOs39stus5C2K6RQFc5CQQ&#34;&gt;绑定特殊 IP 之 0.0.0.0 的内部工作原理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/C-Eeoeh9GHxugF4J30fz1A&#34;&gt;TCP连接中客户端的端口号是如何确定的？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/vlrzGc5bFrPIr9a7HIr2eA&#34;&gt;能将三次握手理解到这个深度，面试官拍案叫绝！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/7Cum6Y28H_gXLyrRFrthNw&#34;&gt;深入解析常见三次握手异常&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/f-TFX2t8CWRCGoyCByGkOw&#34;&gt;如何正确查看线上半/全连接队列溢出情况？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;1.4 TCP连接时间开销、内存开销&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/wXyerOFoibRsaBmbl224gw&#34;&gt;聊聊TCP连接耗时的那些事儿&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/GBn94vdL4xUL80WYrGdUWQ&#34;&gt;刨根问底儿，看我如何处理 Too many open files 错误！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/BwddYkVLSYlkKFNeA-NUVg&#34;&gt;漫画 | 花了七天时间测试，我彻底搞明白了 TCP 的这些内存开销!&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;1.5 单机百万并发系列&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/Lkyj42NtvqEj63DoCY5btQ&#34;&gt;🔥漫画 | 一台Linux服务器最多能支撑多少个TCP连接&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/ta6upubg0o1w03YGUo8Trg&#34;&gt;🔥漫画 | 理解了TCP连接的实现以后，客户端的并发也爆发了！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/f_CMt2ni0vegB3-pf2BTTg&#34;&gt;百看不如一练，动手测试单机百万连接的保姆级教程！&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;1.6 网络工具&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/ZX8Jluh-RgJXcVh3OvycRQ&#34;&gt;用户态 tcpdump 如何实现抓到内核网络包的?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;1.7 虚拟化&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/sSQFINJ8RO8Nc4XtcyQIjQ&#34;&gt;轻松理解 Docker 网络虚拟化基础之 veth 设备！&lt;/a&gt; &lt;font color=&#34;#dd0000&#34;&gt;(&lt;span&gt;🇨🇳&lt;/span&gt;新)&lt;/font&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/JnKz1fUgZmGdvfxOm2ehZg&#34;&gt;聊聊 Linux 上软件实现的“交换机” - Bridge！&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/yanfeizhang/coder-kung-fu/main/tests/network/test05/&#34;&gt;配套实验源码&lt;/a&gt; &lt;font color=&#34;#dd0000&#34;&gt;(&lt;span&gt;🇨🇳&lt;/span&gt;新)&lt;/font&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/lscMpc5BWAEzjgYw6H0wBw&#34;&gt;彻底弄懂 Linux 网络命名空间&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/yanfeizhang/coder-kung-fu/main/tests/network/test06/&#34;&gt;配套实验源码&lt;/a&gt; &lt;font color=&#34;#dd0000&#34;&gt;(&lt;span&gt;🇨🇳&lt;/span&gt;新)&lt;/font&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/Arcz3RWe_o0Ijw6uPWKdVw&#34;&gt;手工模拟实现 Docker 容器网络！&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&#34;https://raw.githubusercontent.com/yanfeizhang/coder-kung-fu/main/tests/network/test07/&#34;&gt;配套实验源码&lt;/a&gt; &lt;font color=&#34;#dd0000&#34;&gt;(&lt;span&gt;🇨🇳&lt;/span&gt;新)&lt;/font&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/O084fYzUFk7jAzJ2DDeADg&#34;&gt;理解 iptables 原理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/UHYE6vwMffaAb-o5eNMrDg&#34;&gt;天天讲路由，那 Linux 路由到底咋实现的！？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;1.8 电子书&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/kE8y9em9a0Xv80YaQqPbRg&#34;&gt;🔥开发内功修炼网络篇电子书出炉！！！&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;二、硬盘篇&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/pOKjwl3ONPMPSRF6RSmvaw&#34;&gt;经典，Linux文件系统十问&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;2.1 硬件工作原理&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/OqhwSI4WsEyZlBhkFGPUlg&#34;&gt;磁盘开篇：扒开机械硬盘坚硬的外衣！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/4HwUxy-4FClgIIei6JAzqw&#34;&gt;磁盘分区也是隐含了技术技巧的&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/n9Hf3Utm4NFp3jNRTgZNwg&#34;&gt;我们怎么解决机械硬盘既慢又容易坏的问题？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/6aPHMmz1kmiaBABhy8pF1Q&#34;&gt;拆解固态硬盘结构&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;2.2 文件系统浅析&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/9YeUEnRnegplftpKlW4ZCA&#34;&gt;新建一个空文件占用多少磁盘空间？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/WE6BodR_q0GSKks_TgYL1w&#34;&gt;只有1个字节的文件实际占用多少磁盘空间&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/g-fFoYsBJkonV3ezdGDJKA&#34;&gt;文件过多时ls命令为什么会卡住？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/DobymgQ-TRXrO32wjf2fWQ&#34;&gt;理解格式化原理&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;2.3 文件读写性能&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/vekemOfUHBjZSy3uXb49Rw&#34;&gt;read文件一个字节实际会发生多大的磁盘IO？&lt;/a&gt; &lt;font color=&#34;#dd0000&#34;&gt;(&lt;span&gt;🇨🇳&lt;/span&gt;新)&lt;/font&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/142441899&#34;&gt;write文件一个字节后何时发起写磁盘IO？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/qz57uPtFaoQ_5z59NSBEUQ&#34;&gt;机械硬盘随机IO慢的超乎你的想象&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/4CKPLpEDDbIyqJGxYDAUeA&#34;&gt;搭载固态硬盘的服务器究竟比搭机械硬盘快多少？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;三、内存篇&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;3.1 硬件工作原理&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/F0NTfz-3x3UxQeF-GSavRg&#34;&gt;带你深入理解内存对齐最底层原理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/ps8VfGpbL4-xKggM2ywjHw&#34;&gt;内存随机也比顺序访问慢，带你深入理解内存IO过程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/LRxhKrUOgyCexYN1lOwTyA&#34;&gt;从DDR到DDR4，内存核心频率其实基本上就没太大的进步&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;3.2 内核内存管理&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/OR2XB4J76haGc1THeq7WQg&#34;&gt;说出来你可能不信，内核这家伙在内存的使用上给自己开了个小灶！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/Jo8KEzfb1OXShrb3PT4U_A&#34;&gt;明明还有大量内存，为啥报错“无法分配内存”？&lt;/a&gt; &lt;font color=&#34;#dd0000&#34;&gt;(&lt;span&gt;🇨🇳&lt;/span&gt;新)&lt;/font&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;3.3 内存性能测试&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/_-Ar944KlztzmFYdA3JXnQ&#34;&gt;实际测试内存在顺序IO和随机IO时的访问延时差异&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/AJjBHCNPWN8YW8v0iXjjig&#34;&gt;揭穿内存厂家“谎言”，实测内存带宽真实表现&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/xUZl5wGRVvJI_Hfivg0hVQ&#34;&gt;NUMA架构下的内存访问延迟区别！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/dag1Zp1h4lQfqeUUGz4Ogw&#34;&gt;挑战Redis单实例内存最大极限，“遭遇”NUMA陷阱！&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;3.4 内存性能优化实例&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/foJJ2E7_jVgnOeJ9Du6qJg&#34;&gt;一次内存性能提升的项目实践&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/3DrDb0CY8dUmFUKtuWzhqA&#34;&gt;PHP7内存性能优化的思想精髓&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;四、CPU篇&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;4.1 了解CPU硬件&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/XX1yh8BTgT256pAnfosQkw&#34;&gt;你以为你的多核CPU都是真核吗？多核“假象”&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/PQTuFZO51an6OAe3WX4BVw&#34;&gt;听说你只知内存，而不知缓存？CPU表示很伤心！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/mssTS3NN7-w2df1vhYSuYw&#34;&gt;TLB缓存是个神马鬼，如何查看TLB miss？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;4.2 内核CPU开销浅析&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/uq5s5vwk5vtPOZ30sfNsOg&#34;&gt;进程/线程切换究竟需要多少开销？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/mlenlX3-6H0shfOIvi8E8g&#34;&gt;软中断会吃掉你多少CPU？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/2nIDLeMR984_Sdgh01BHIQ&#34;&gt;一次系统调用开销到底有多大？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/yl5EuQ1wEXDuIg4E98QfZA&#34;&gt;一次简单的php请求redis会有哪些开销？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;4.3 用户态CPU开销分析&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/N4W0-0cP1wlxtLILx3oXpg&#34;&gt;协程究竟比线程牛在什么地方？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/G30VtOIYjx2Wa54xlO7udw&#34;&gt;函数调用太多了会有性能问题吗？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;4.4 CPU性能优化&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/2YJVAEanfjSYgmZh8GRNrg&#34;&gt;一个likely的简单使用，背后却是对CPU工作原理的深刻理解&lt;/a&gt; &lt;font color=&#34;#dd0000&#34;&gt;(&lt;span&gt;🇨🇳&lt;/span&gt;新)&lt;/font&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;五、应用篇&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/clILKrOO7_XJs6uHp5hoUw&#34;&gt;峰值 QPS 50 万 +，性能优异的网络框架开源力作 Sogou Workflow！&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;六、答读者问&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/-WA6J9BZeZJIQTZtDHD5hA&#34;&gt;今天聊聊飞哥是怎么阅读内核源码的&lt;/a&gt; &lt;font color=&#34;#dd0000&#34;&gt;(&lt;span&gt;🇨🇳&lt;/span&gt;新)&lt;/font&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/OQyGEi0rvJRS0HJstaPWKQ&#34;&gt;答读者问，飞哥能否给推荐几本硬核技术书？&lt;/a&gt; &lt;font color=&#34;#dd0000&#34;&gt;(&lt;span&gt;🇨🇳&lt;/span&gt;新)&lt;/font&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/5f7x60bNCNK2a5nz8FL5yg&#34;&gt;程序员完全没有时间提升自己该怎么办？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/Pzo46nZtSlsv_M6Tq7pv_A&#34;&gt;写给内功修炼读者的一封信!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/rUWqVtoP3_f0M6ltN_1gqA&#34;&gt;我是怎么样写出开发内功修炼的？秘密都在这里！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/8lMGzBzXine-NAsqEaIE4g&#34;&gt;给想成长为高级别开发同学的七条建议&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;七、公众号二维码&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;微信扫一扫关注！&lt;/strong&gt;&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/yanfeizhang/coder-kung-fu/main/imgs/official_accounts.jpg&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;为了方便大家阅读，本 Github 的网络篇核心内容整理成了 PDF 电子书，也即将出版。该书好评众多，欢迎大家下载！ &lt;a href=&#34;https://pan.baidu.com/s/11u6z26xnRNlIOSQ4ohzNuA&#34;&gt;&lt;strong&gt;百度网盘地址&lt;/strong&gt;&lt;/a&gt; 密码:q79d&lt;/p&gt; &#xA;&lt;p&gt;如若网盘地址出问题，也可以通过微信（zhangyanfei748527）找飞哥，我直接发你！&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>betaflight/betaflight</title>
    <updated>2022-06-16T01:34:51Z</updated>
    <id>tag:github.com,2022-06-16:/betaflight/betaflight</id>
    <link href="https://github.com/betaflight/betaflight" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open Source Flight Controller Firmware&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/betaflight/betaflight/master/docs/assets/images/bf_logo.png&#34; alt=&#34;Betaflight&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/betaflight/betaflight/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/betaflight/betaflight&#34; alt=&#34;Latest version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/Betaflight/Betaflight%20Nightlies/_build/latest?definitionId=8&amp;amp;branchName=master&#34;&gt;&lt;img src=&#34;https://dev.azure.com/Betaflight/Betaflight%20Nightlies/_apis/build/status/betaflight.betaflight?branchName=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dev.azure.com/Betaflight/Betaflight%20Nightlies/_build/latest?definitionId=8&amp;amp;branchName=4.2-maintenance&#34;&gt;&lt;img src=&#34;https://dev.azure.com/Betaflight/Betaflight%20Nightlies/_apis/build/status/betaflight.betaflight?branchName=4.2-maintenance&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true&#34; alt=&#34;License: GPL v3&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Betaflight is flight controller software (firmware) used to fly multi-rotor craft and fixed wing craft.&lt;/p&gt; &#xA;&lt;p&gt;This fork differs from Baseflight and Cleanflight in that it focuses on flight performance, leading-edge feature additions, and wide target support.&lt;/p&gt; &#xA;&lt;h2&gt;Events&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Date&lt;/th&gt; &#xA;   &lt;th&gt;Event&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements for the submission of new and updated targets&lt;/h3&gt; &#xA;&lt;p&gt;The following new requirements for pull requests adding new targets or modifying existing targets are put in place from now on:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;No new F3 based targets will be accepted;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For any new target that is to be added, only a Unified Target config into &lt;a href=&#34;https://github.com/betaflight/unified-targets/tree/master/configs/default&#34;&gt;https://github.com/betaflight/unified-targets/tree/master/configs/default&lt;/a&gt; needs to be submitted. See the &lt;a href=&#34;https://github.com/betaflight/betaflight/raw/master/docs/TargetMaintenance/CreatingAUnifiedTarget.md&#34;&gt;instructions&lt;/a&gt; for how to create a Unified Target configuration. If there is no Unified Target for the MCU type of the new target (see instructions above), then a &#39;legacy&#39; format target definition into &lt;code&gt;src/main/target/&lt;/code&gt; has to be submitted as well;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For changes to existing targets, the change needs to be applied to the Unified Target config in &lt;a href=&#34;https://github.com/betaflight/unified-targets/tree/master/configs/default&#34;&gt;https://github.com/betaflight/unified-targets/tree/master/configs/default&lt;/a&gt;. If no Unified Target configuration for the target exists, a new Unified Target configuration will have to be created and submitted. If there is no Unified Target for the MCU type of the new target (see instructions above), then an update to the &#39;legacy&#39; format target definition in &lt;code&gt;src/main/target/&lt;/code&gt; has to be submitted alongside the update to the Unified Target configuration.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Betaflight has the following features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Multi-color RGB LED strip support (each LED can be a different color using variable length WS2811 Addressable RGB strips - use for Orientation Indicators, Low Battery Warning, Flight Mode Status, Initialization Troubleshooting, etc)&lt;/li&gt; &#xA; &lt;li&gt;DShot (150, 300 and 600), Multishot, Oneshot (125 and 42) and Proshot1000 motor protocol support&lt;/li&gt; &#xA; &lt;li&gt;Blackbox flight recorder logging (to onboard flash or external microSD card where equipped)&lt;/li&gt; &#xA; &lt;li&gt;Support for targets that use the STM32 F4, G4, F7 and H7 processors&lt;/li&gt; &#xA; &lt;li&gt;PWM, PPM, SPI, and Serial (SBus, SumH, SumD, Spektrum 1024/2048, XBus, etc) RX connection with failsafe detection&lt;/li&gt; &#xA; &lt;li&gt;Multiple telemetry protocols (CRSF, FrSky, HoTT smart-port, MSP, etc)&lt;/li&gt; &#xA; &lt;li&gt;RSSI via ADC - Uses ADC to read PWM RSSI signals, tested with FrSky D4R-II, X8R, X4R-SB, &amp;amp; XSR&lt;/li&gt; &#xA; &lt;li&gt;OSD support &amp;amp; configuration without needing third-party OSD software/firmware/comm devices&lt;/li&gt; &#xA; &lt;li&gt;OLED Displays - Display information on: Battery voltage/current/mAh, profile, rate profile, mode, version, sensors, etc&lt;/li&gt; &#xA; &lt;li&gt;In-flight manual PID tuning and rate adjustment&lt;/li&gt; &#xA; &lt;li&gt;PID and filter tuning using sliders&lt;/li&gt; &#xA; &lt;li&gt;Rate profiles and in-flight selection of them&lt;/li&gt; &#xA; &lt;li&gt;Configurable serial ports for Serial RX, Telemetry, ESC telemetry, MSP, GPS, OSD, Sonar, etc - Use most devices on any port, softserial included&lt;/li&gt; &#xA; &lt;li&gt;VTX support for Unify Pro and IRC Tramp&lt;/li&gt; &#xA; &lt;li&gt;and MUCH, MUCH more.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation &amp;amp; Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;https://github.com/betaflight/betaflight/wiki&#34;&gt;https://github.com/betaflight/betaflight/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support and Developers Channel&lt;/h2&gt; &#xA;&lt;p&gt;There&#39;s a dedicated Slack chat channel here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://slack.betaflight.com/&#34;&gt;https://slack.betaflight.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We also have a Facebook Group. Join us to get a place to talk about Betaflight, ask configuration questions, or just hang out with fellow pilots.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.facebook.com/groups/betaflightgroup/&#34;&gt;https://www.facebook.com/groups/betaflightgroup/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Etiquette: Don&#39;t ask to ask and please wait around long enough for a reply - sometimes people are out flying, asleep or at work and can&#39;t answer immediately.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration Tool&lt;/h2&gt; &#xA;&lt;p&gt;To configure Betaflight you should use the Betaflight-configurator GUI tool (Windows/OSX/Linux) which can be found here:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/betaflight/betaflight-configurator/releases/latest&#34;&gt;https://github.com/betaflight/betaflight-configurator/releases/latest&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome and encouraged. You can contribute in many ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;implement a new feature in the firmware or in configurator (see &lt;a href=&#34;https://raw.githubusercontent.com/betaflight/betaflight/master/#Developers&#34;&gt;below&lt;/a&gt;);&lt;/li&gt; &#xA; &lt;li&gt;documentation updates and corrections;&lt;/li&gt; &#xA; &lt;li&gt;How-To guides - received help? Help others!&lt;/li&gt; &#xA; &lt;li&gt;bug reporting &amp;amp; fixes;&lt;/li&gt; &#xA; &lt;li&gt;new feature ideas &amp;amp; suggestions;&lt;/li&gt; &#xA; &lt;li&gt;provide a new translation for configurator, or help us maintain the existing ones (see &lt;a href=&#34;https://raw.githubusercontent.com/betaflight/betaflight/master/#Translators&#34;&gt;below&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The best place to start is the Betaflight Slack (registration &lt;a href=&#34;https://slack.betaflight.com/&#34;&gt;here&lt;/a&gt;). Next place is the github issue tracker:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/betaflight/betaflight/issues&#34;&gt;https://github.com/betaflight/betaflight/issues&lt;/a&gt; &lt;a href=&#34;https://github.com/betaflight/betaflight-configurator/issues&#34;&gt;https://github.com/betaflight/betaflight-configurator/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Before creating new issues please check to see if there is an existing one, search first otherwise you waste people&#39;s time when they could be coding instead!&lt;/p&gt; &#xA;&lt;p&gt;If you want to contribute to our efforts financially, please consider making a donation to us through &lt;a href=&#34;https://paypal.me/betaflight&#34;&gt;PayPal&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to contribute financially on an ongoing basis, you should consider becoming a patron for us on &lt;a href=&#34;https://www.patreon.com/betaflight&#34;&gt;Patreon&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Developers&lt;/h2&gt; &#xA;&lt;p&gt;Contribution of bugfixes and new features is encouraged. Please be aware that we have a thorough review process for pull requests, and be prepared to explain what you want to achieve with your pull request. Before starting to write code, please read our &lt;a href=&#34;https://raw.githubusercontent.com/betaflight/betaflight/master/docs/development/Development.md&#34;&gt;development guidelines&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/betaflight/betaflight/master/docs/development/CodingStyle.md&#34;&gt;coding style definition&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Azure Pipelines are used to run automatic builds&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/Betaflight/Betaflight%20Nightlies/_build&#34;&gt;https://dev.azure.com/Betaflight/Betaflight%20Nightlies/_build&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Translators&lt;/h2&gt; &#xA;&lt;p&gt;We want to make Betaflight accessible for pilots who are not fluent in English, and for this reason we are currently maintaining translations into 18 languages for Betaflight Configurator: Català, Deutsch, Español, Euskera, Français, Galego, Hrvatski, Bahasa Indonesia, Italiano, 日本語, 한국어, Latviešu, Português, Português Brasileiro, polski, Русский язык, Svenska, 简体中文. We have got a team of volunteer translators who do this work, but additional translators are always welcome to share the workload, and we are keen to add additional languages. If you would like to help us with translations, you have got the following options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;if you help by suggesting some updates or improvements to translations in a language you are familiar with, head to &lt;a href=&#34;https://crowdin.com/project/betaflight-configurator&#34;&gt;crowdin&lt;/a&gt; and add your suggested translations there;&lt;/li&gt; &#xA; &lt;li&gt;if you would like to start working on the translation for a new language, or take on responsibility for proof-reading the translation for a language you are very familiar with, please head to the Betaflight Slack (registration &lt;a href=&#34;https://slack.betaflight.com/&#34;&gt;here&lt;/a&gt;), and join the &#39;#team_translation&#39; channel - the people in there can help you to get a new language added, or set you up as a proof reader.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Hardware Issues&lt;/h2&gt; &#xA;&lt;p&gt;Betaflight does not manufacture or distribute their own hardware. While we are collaborating with and supported by a number of manufacturers, we do not do any kind of hardware support. If you encounter any hardware issues with your flight controller or another component, please contact the manufacturer or supplier of your hardware, or check RCGroups &lt;a href=&#34;https://rcgroups.com/forums/showthread.php?t=2464844&#34;&gt;https://rcgroups.com/forums/showthread.php?t=2464844&lt;/a&gt; to see if others with the same problem have found a solution.&lt;/p&gt; &#xA;&lt;h2&gt;Betaflight Releases&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/betaflight/betaflight/releases&#34;&gt;https://github.com/betaflight/betaflight/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Open Source / Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Betaflight is software that is &lt;strong&gt;open source&lt;/strong&gt; and is available free of charge without warranty to all users.&lt;/p&gt; &#xA;&lt;p&gt;Betaflight is forked from Cleanflight, so thanks goes to all those whom have contributed to Cleanflight and its origins.&lt;/p&gt; &#xA;&lt;p&gt;Origins for this fork (Thanks!):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Alexinparis&lt;/strong&gt; (for MultiWii),&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;timecop&lt;/strong&gt; (for Baseflight),&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dominic Clifton&lt;/strong&gt; (for Cleanflight),&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;borisbstyle&lt;/strong&gt; (for Betaflight), and&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sambas&lt;/strong&gt; (for the original STM32F4 port).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The Betaflight Configurator is forked from Cleanflight Configurator and its origins.&lt;/p&gt; &#xA;&lt;p&gt;Origins for Betaflight Configurator:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dominic Clifton&lt;/strong&gt; (for Cleanflight configurator), and&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ctn&lt;/strong&gt; (for the original Configurator).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Big thanks to current and past contributors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Budden, Martin (martinbudden)&lt;/li&gt; &#xA; &lt;li&gt;Bardwell, Joshua (joshuabardwell)&lt;/li&gt; &#xA; &lt;li&gt;Blackman, Jason (blckmn)&lt;/li&gt; &#xA; &lt;li&gt;ctzsnooze&lt;/li&gt; &#xA; &lt;li&gt;Höglund, Anders (andershoglund)&lt;/li&gt; &#xA; &lt;li&gt;Ledvina, Petr (ledvinap) - &lt;strong&gt;IO code awesomeness!&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;kc10kevin&lt;/li&gt; &#xA; &lt;li&gt;Keeble, Gary (MadmanK)&lt;/li&gt; &#xA; &lt;li&gt;Keller, Michael (mikeller) - &lt;strong&gt;Configurator brilliance&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kravcov, Albert (skaman82) - &lt;strong&gt;Configurator brilliance&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;MJ666&lt;/li&gt; &#xA; &lt;li&gt;Nathan (nathantsoi)&lt;/li&gt; &#xA; &lt;li&gt;ravnav&lt;/li&gt; &#xA; &lt;li&gt;sambas - &lt;strong&gt;bringing us the F4&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;savaga&lt;/li&gt; &#xA; &lt;li&gt;Stålheim, Anton (KiteAnton)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And many many others who haven&#39;t been mentioned....&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>winsiderss/systeminformer</title>
    <updated>2022-06-16T01:34:51Z</updated>
    <id>tag:github.com,2022-06-16:/winsiderss/systeminformer</id>
    <link href="https://github.com/winsiderss/systeminformer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A free, powerful, multi-purpose tool that helps you monitor system resources, debug software and detect malware. Brought to you by Winsider Seminars &amp; Solutions, Inc. @ http://www.windows-internals.com&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/systeminformer/systeminformer&#34;&gt;&lt;img src=&#34;https://img.shields.io/appveyor/ci/winsiderss/systeminformer.svg?style=for-the-badge&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/winsiderss/systeminformer/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/winsiderss/systeminformer.svg?style=for-the-badge&amp;amp;color=blue&#34; alt=&#34;Build contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?style=for-the-badge&amp;amp;color=blue&#34; alt=&#34;Licence&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://somsubhra.github.io/github-release-stats/?username=systeminformer&amp;amp;repository=systeminformer&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/winsiderss/systeminformer/total.svg?style=for-the-badge&amp;amp;color=red&#34; alt=&#34;Github stats&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sourceforge.net/projects/systeminformer/files/stats/timeline?dates=2008-10-01%20to%202020-09-01&amp;amp;period=monthly&#34;&gt;&lt;img src=&#34;https://img.shields.io/sourceforge/dt/systeminformer.svg?style=for-the-badge&amp;amp;color=red&#34; alt=&#34;SourceForge stats&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img align=&#34;left&#34; src=&#34;https://raw.githubusercontent.com/winsiderss/systeminformer/master/SystemInformer/resources/systeminformer.png&#34; width=&#34;128&#34; height=&#34;128&#34;&gt; &#xA;&lt;h2&gt;System Informer&lt;/h2&gt; &#xA;&lt;p&gt;A free, powerful, multi-purpose tool that helps you monitor system resources, debug software and detect malware. Brought to you by Winsider Seminars &amp;amp; Solutions, Inc.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://systeminformer.sourceforge.io/&#34;&gt;Project Website&lt;/a&gt; - &lt;a href=&#34;https://systeminformer.sourceforge.io/downloads.php&#34;&gt;Project Downloads&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;System requirements&lt;/h2&gt; &#xA;&lt;p&gt;Windows 7 or higher, 32-bit or 64-bit.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A detailed overview of system activity with highlighting.&lt;/li&gt; &#xA; &lt;li&gt;Graphs and statistics allow you quickly to track down resource hogs and runaway processes.&lt;/li&gt; &#xA; &lt;li&gt;Can&#39;t edit or delete a file? Discover which processes are using that file.&lt;/li&gt; &#xA; &lt;li&gt;See what programs have active network connections, and close them if necessary.&lt;/li&gt; &#xA; &lt;li&gt;Get real-time information on disk access.&lt;/li&gt; &#xA; &lt;li&gt;View detailed stack traces with kernel-mode, WOW64 and .NET support.&lt;/li&gt; &#xA; &lt;li&gt;Go beyond services.msc: create, edit and control services.&lt;/li&gt; &#xA; &lt;li&gt;Small, portable and no installation required.&lt;/li&gt; &#xA; &lt;li&gt;100% &lt;a href=&#34;https://www.gnu.org/philosophy/free-sw.en.html&#34;&gt;Free Software&lt;/a&gt; (&lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building the project&lt;/h2&gt; &#xA;&lt;p&gt;Requires Visual Studio (2019 or later).&lt;/p&gt; &#xA;&lt;p&gt;Execute &lt;code&gt;build_release.cmd&lt;/code&gt; located in the &lt;code&gt;build&lt;/code&gt; directory to compile the project or load the &lt;code&gt;SystemInformer.sln&lt;/code&gt; and &lt;code&gt;Plugins.sln&lt;/code&gt; solutions if you prefer building the project using Visual Studio.&lt;/p&gt; &#xA;&lt;p&gt;You can download the free &lt;a href=&#34;https://www.visualstudio.com/vs/community/&#34;&gt;Visual Studio Community Edition&lt;/a&gt; to build the Process Hacker source code.&lt;/p&gt; &#xA;&lt;h2&gt;Enhancements/Bugs&lt;/h2&gt; &#xA;&lt;p&gt;Please use the &lt;a href=&#34;https://github.com/winsiderss/systeminformer/issues&#34;&gt;GitHub issue tracker&lt;/a&gt; for reporting problems or suggesting new features.&lt;/p&gt; &#xA;&lt;h2&gt;Settings&lt;/h2&gt; &#xA;&lt;p&gt;If you are running System Informer from a USB drive, you may want to save System Informer&#39;s settings there as well. To do this, create a blank file named &#34;SystemInformer.exe.settings.xml&#34; in the same directory as SystemInformer.exe. You can do this using Windows Explorer:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure &#34;Hide extensions for known file types&#34; is unticked in Tools &amp;gt; Folder options &amp;gt; View.&lt;/li&gt; &#xA; &lt;li&gt;Right-click in the folder and choose New &amp;gt; Text Document.&lt;/li&gt; &#xA; &lt;li&gt;Rename the file to SystemInformer.exe.settings.xml (delete the &#34;.txt&#34; extension).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;p&gt;Plugins can be configured from Informer &amp;gt; Plugins.&lt;/p&gt; &#xA;&lt;p&gt;If you experience any crashes involving plugins, make sure they are up to date.&lt;/p&gt; &#xA;&lt;p&gt;Disk and Network information provided by the ExtendedTools plugin is only available when running System Informer with administrative rights.&lt;/p&gt;</summary>
  </entry>
</feed>