<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-19T01:30:22Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>FWGS/xash3d-fwgs</title>
    <updated>2023-11-19T01:30:22Z</updated>
    <id>tag:github.com,2023-11-19:/FWGS/xash3d-fwgs</id>
    <link href="https://github.com/FWGS/xash3d-fwgs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Xash3D FWGS engine.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Xash3D FWGS Engine &lt;img align=&#34;right&#34; width=&#34;128&#34; height=&#34;128&#34; src=&#34;https://github.com/FWGS/xash3d-fwgs/raw/master/game_launch/icon-xash-material.png&#34; alt=&#34;Xash3D FWGS icon&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/FWGS/xash3d-fwgs/actions/workflows/c-cpp.yml&#34;&gt;&lt;img src=&#34;https://github.com/FWGS/xash3d-fwgs/actions/workflows/c-cpp.yml/badge.svg?sanitize=true&#34; alt=&#34;GitHub Actions Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cirrus-ci.com/github/FWGS/xash3d-fwgs&#34;&gt;&lt;img src=&#34;https://img.shields.io/cirrus/github/FWGS/xash3d-fwgs?label=freebsd%20build&#34; alt=&#34;FreeBSD Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://fwgsdiscord.mentality.rip/&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/355697768582610945.svg?sanitize=true&#34; alt=&#34;Discord Server&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/FWGS/xash3d-fwgs/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/download-stable-yellow&#34; alt=&#34;Download Stable&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/FWGS/xash3d-fwgs/releases/tag/continuous&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/downloads-testing-orange&#34; alt=&#34;Download Testing&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Xash3D FWGS is a game engine, aimed to provide compatibility with Half-Life Engine and extend it, as well as to give game developers well known workflow.&lt;/p&gt; &#xA;&lt;p&gt;Xash3D FWGS is a heavily modified fork of an original &lt;a href=&#34;https://www.moddb.com/engines/xash3d-engine&#34;&gt;Xash3D Engine&lt;/a&gt; by Unkle Mike.&lt;/p&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FWGS/xash3d-fwgs/master/Documentation/donate.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate_to_FWGS-%3C3-magenta&#34; alt=&#34;Donate to FWGS button&#34;&gt;&lt;/a&gt; &lt;br&gt; If you like Xash3D FWGS, consider supporting individual engine maintainers. By supporting us, you help to continue developing this game engine further. The sponsorship links are available in &lt;a href=&#34;https://raw.githubusercontent.com/FWGS/xash3d-fwgs/master/Documentation/donate.md&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Fork features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Steam Half-Life (HLSDK 2.4) support.&lt;/li&gt; &#xA; &lt;li&gt;Crossplatform and modern compilers support: supports Windows, Linux, BSD &amp;amp; Android on x86 &amp;amp; ARM and &lt;a href=&#34;https://raw.githubusercontent.com/FWGS/xash3d-fwgs/master/Documentation/ports.md&#34;&gt;many more&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Better multiplayer support: multiple master servers, headless dedicated server, voice chat and IPv6 support.&lt;/li&gt; &#xA; &lt;li&gt;Multiple renderers support: OpenGL, GLESv1, GLESv2 and Software.&lt;/li&gt; &#xA; &lt;li&gt;Advanced virtual filesystem: &lt;code&gt;.pk3&lt;/code&gt; and &lt;code&gt;.pk3dir&lt;/code&gt; support, compatibility with GoldSrc FS module, fast case-insensitivity emulation for crossplatform.&lt;/li&gt; &#xA; &lt;li&gt;Mobility API: better game integration on mobile devices (vibration, touch controls)&lt;/li&gt; &#xA; &lt;li&gt;Different input methods: touch and gamepad in addition to mouse &amp;amp; keyboard.&lt;/li&gt; &#xA; &lt;li&gt;TrueType font rendering, as a part of mainui_cpp.&lt;/li&gt; &#xA; &lt;li&gt;External VGUI support module.&lt;/li&gt; &#xA; &lt;li&gt;PNG &amp;amp; KTX2 image format support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/FWGS/xash3d-fwgs/master/Documentation/&#34;&gt;A set of small improvements&lt;/a&gt;, without broken compatibility.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation &amp;amp; Running&lt;/h2&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;Get Xash3D FWGS binaries: you can use &lt;a href=&#34;https://github.com/FWGS/xash3d-fwgs/releases/tag/continuous&#34;&gt;testing&lt;/a&gt; build or you can compile engine from source code.&lt;/li&gt; &#xA; &lt;li&gt;Copy engine binaries to some directory.&lt;/li&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;valve&lt;/code&gt; directory from &lt;a href=&#34;https://store.steampowered.com/app/70/HalfLife/&#34;&gt;Half-Life&lt;/a&gt; to directory with engine binaries. If your CPU is NOT x86 compatible or you&#39;re running 64-bit version of the engine, you may want to compile &lt;a href=&#34;https://github.com/FWGS/hlsdk-portable&#34;&gt;Half-Life SDK&lt;/a&gt;. This repository contains our fork of HLSDK and restored source code for some of the mods. Not all of them, of course. You still needed to copy &lt;code&gt;valve&lt;/code&gt; directory as all game resources located there.&lt;/li&gt; &#xA; &lt;li&gt;Run the main executable (&lt;code&gt;xash3d.exe&lt;/code&gt; or AppImage).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For additional info, run Xash3D with &lt;code&gt;-help&lt;/code&gt; command line key.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Before sending an issue, check if someone already reported your issue. Make sure you&#39;re following &#34;How To Ask Questions The Smart Way&#34; guide by Eric Steven Raymond. Read more: &lt;a href=&#34;http://www.catb.org/~esr/faqs/smart-questions.html&#34;&gt;http://www.catb.org/~esr/faqs/smart-questions.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Issues are accepted in both English and Russian&lt;/li&gt; &#xA; &lt;li&gt;Before sending a PR, check if you followed our contribution guide in CONTRIBUTING.md file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build instructions&lt;/h2&gt; &#xA;&lt;p&gt;We are using Waf build system. If you have some Waf-related questions, I recommend you to read &lt;a href=&#34;https://waf.io/book/&#34;&gt;https://waf.io/book/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;NOTE: NEVER USE GitHub&#39;s ZIP ARCHIVES. GitHub doesn&#39;t include external dependencies we&#39;re using!&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;If your CPU is x86 compatible, we are building 32-bit code by default. This was done to maintain compatibility with Steam releases of Half-Life and based on it&#39;s engine games. Even if Xash3D FWGS does support targetting 64-bit, you can&#39;t load games without recompiling them from source code!&lt;/p&gt; &#xA;&lt;p&gt;If your CPU is NOT x86 compatible or you decided build 64-bit version of engine, you may want to compile &lt;a href=&#34;https://github.com/FWGS/hlsdk-portable&#34;&gt;Half-Life SDK&lt;/a&gt;. This repository contains our fork of HLSDK and restored source code for some of the mods. Not all of them, of course.&lt;/p&gt; &#xA;&lt;h4&gt;Windows (Visual Studio)&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install Visual Studio.&lt;/li&gt; &#xA; &lt;li&gt;Install latest &lt;a href=&#34;https://python.org&#34;&gt;Python&lt;/a&gt; &lt;strong&gt;OR&lt;/strong&gt; run &lt;code&gt;cinst python.install&lt;/code&gt; if you have Chocolatey.&lt;/li&gt; &#xA; &lt;li&gt;Install latest &lt;a href=&#34;https://git-scm.com/download/win&#34;&gt;Git&lt;/a&gt; &lt;strong&gt;OR&lt;/strong&gt; run &lt;code&gt;cinst git.install&lt;/code&gt; if you have Chocolatey.&lt;/li&gt; &#xA; &lt;li&gt;Download &lt;a href=&#34;https://libsdl.org/download-2.0.php&#34;&gt;SDL2&lt;/a&gt; development package for Visual Studio.&lt;/li&gt; &#xA; &lt;li&gt;Clone this repository: &lt;code&gt;git clone --recursive https://github.com/FWGS/xash3d-fwgs&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Make sure you have at least 12GB of free space to store all build-time dependencies: ~10GB for Visual Studio, 300 MB for Git, 100 MB for Python and other.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;GNU/Linux&lt;/h4&gt; &#xA;&lt;h5&gt;Debian/Ubuntu&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enable i386 on your system, if you&#39;re compiling 32-bit engine on amd64. If not, skip this&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;$ sudo dpkg --add-architecture i386&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install development tools &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For 32-bit engine on amd64: &lt;br&gt; &lt;code&gt;$ sudo apt install build-essential gcc-multilib g++-multilib python libsdl2-dev:i386 libfontconfig-dev:i386 libfreetype6-dev:i386&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;For everything else: &lt;br&gt; &lt;code&gt;$ sudo apt install build-essential python libsdl2-dev libfontconfig-dev libfreetype6-dev&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Clone this repostory: &lt;code&gt;$ git clone --recursive https://github.com/FWGS/xash3d-fwgs&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;h4&gt;Windows (Visual Studio)&lt;/h4&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;Open command line&lt;/li&gt; &#xA; &lt;li&gt;Navigate to &lt;code&gt;xash3d-fwgs&lt;/code&gt; directory.&lt;/li&gt; &#xA; &lt;li&gt;Carefully examine which build options are available: &lt;code&gt;waf --help&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Configure build: &lt;code&gt;waf configure -T release --sdl2=c:/path/to/SDL2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Compile: &lt;code&gt;waf build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install: &lt;code&gt;waf install --destdir=c:/path/to/any/output/directory&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Linux&lt;/h4&gt; &#xA;&lt;p&gt;If compiling 32-bit on amd64, you may need to supply &lt;code&gt;export PKG_CONFIG_PATH=/usr/lib/i386-linux-gnu/pkgconfig&lt;/code&gt; prior to running configure.&lt;/p&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;Examine which build options are available: &lt;code&gt;./waf --help&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Configure build: &lt;code&gt;./waf configure -T release&lt;/code&gt; (You need to pass &lt;code&gt;-8&lt;/code&gt; to compile 64-bit engine on 64-bit x86 processor)&lt;/li&gt; &#xA; &lt;li&gt;Compile: &lt;code&gt;./waf build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install(optional): &lt;code&gt;./waf install --destdir=/path/to/any/output/directory&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>