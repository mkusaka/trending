<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-22T01:31:22Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Xfennec/progress</title>
    <updated>2023-05-22T01:31:22Z</updated>
    <id>tag:github.com,2023-05-22:/Xfennec/progress</id>
    <link href="https://github.com/Xfennec/progress" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Linux tool to show progress for cp, mv, dd, ... (formerly known as cv)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;progress - Coreutils Progress Viewer &lt;a href=&#34;https://travis-ci.org/Xfennec/progress&#34;&gt;&lt;img src=&#34;https://travis-ci.org/Xfennec/progress.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;What is it&lt;/h2&gt; &#xA;&lt;p&gt;This tool can be described as a &lt;strong&gt;Tiny&lt;/strong&gt;, Dirty C command that looks for coreutils basic commands (cp, mv, dd, tar, gzip/gunzip, cat, etc.) currently running on your system and displays the &lt;strong&gt;percentage&lt;/strong&gt; of copied data. It can also show &lt;strong&gt;estimated time&lt;/strong&gt; and &lt;strong&gt;throughput&lt;/strong&gt;, and provides a &#34;top-like&#34; mode (monitoring).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.github.com/Xfennec/progress/master/capture.png&#34; alt=&#34;progress screenshot with cp and mv&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;(After many requests: the colors in the shell come from &lt;a href=&#34;https://github.com/milkbikis/powerline-shell&#34;&gt;powerline-shell&lt;/a&gt;. Try it, it&#39;s cool.)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;progress&lt;/code&gt; works on Linux, FreeBSD and macOS.&lt;/p&gt; &#xA;&lt;p&gt;Formerly known as cv (Coreutils Viewer).&lt;/p&gt; &#xA;&lt;h2&gt;How do you install it&lt;/h2&gt; &#xA;&lt;p&gt;On deb-based systems (Debian, Ubuntu, Mint, etc.) run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt install progress&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On archlinux, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pacman -S progress&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On rpm-based systems (Red Hat, CentOS, Fedora, SUSE, etc.), run one of these:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dnf install progress&#xA;yum install progress&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On macOS, with homebrew, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install progress&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On macOS, with MacPorts, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;port install progress&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How do you build it from source&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;make &amp;amp;&amp;amp; make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On FreeBSD, substitute &lt;code&gt;make&lt;/code&gt; with &lt;code&gt;gmake&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It depends on library ncurses, you may have to install corresponding packages (may be something like &#39;libncurses5-dev&#39;, &#39;libncursesw6&#39; or &#39;ncurses-devel&#39;).&lt;/p&gt; &#xA;&lt;h2&gt;How do you run it&lt;/h2&gt; &#xA;&lt;p&gt;Just launch the binary, &lt;code&gt;progress&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What can I do with it&lt;/h2&gt; &#xA;&lt;p&gt;A few examples. You can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;monitor all current and upcoming instances of coreutils commands in a simple window:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  watch progress -q&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;see how your download is progressing:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  watch progress -wc firefox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;look at your Web server activity:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  progress -c httpd&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;launch and monitor any heavy command using &lt;code&gt;$!&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  cp bigfile newfile &amp;amp; progress -mp $!&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;and much more.&lt;/p&gt; &#xA;&lt;h2&gt;How does it work&lt;/h2&gt; &#xA;&lt;p&gt;It simply scans &lt;code&gt;/proc&lt;/code&gt; for interesting commands, and then looks at directories &lt;code&gt;fd&lt;/code&gt; and &lt;code&gt;fdinfo&lt;/code&gt; to find opened files and seek positions, and reports status for the largest file.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s very light, and compatible with virtually any command.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tsoding/nn.h</title>
    <updated>2023-05-22T01:31:22Z</updated>
    <id>tag:github.com,2023-05-22:/tsoding/nn.h</id>
    <link href="https://github.com/tsoding/nn.h" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simple stb-style header-only library for Neural Networks&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;nn.h&lt;/h1&gt; &#xA;&lt;p&gt;Simple stb-style head-only library for Neural Networks. Created for educational purposes. Not suitable for production.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tsoding/nn.h/master/thumbnail.png&#34; alt=&#34;thumbnail&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ ./build.sh&#xA;$ ./img2nn ./mnist/training/8/10057.png&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Gym&lt;/h2&gt; &#xA;&lt;p&gt;Gym is a separate GUI app that uses nn.h to pre-train Neural Networks.&lt;/p&gt; &#xA;&lt;h3&gt;Controls&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Keys&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;SPACE&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Toggle pause&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;kbd&gt;r&lt;/kbd&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Restart the training&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
</feed>