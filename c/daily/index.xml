<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-07T01:32:37Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>libsql/libsql</title>
    <updated>2022-10-07T01:32:37Z</updated>
    <id>tag:github.com,2022-10-07:/libsql/libsql</id>
    <link href="https://github.com/libsql/libsql" rel="alternate"></link>
    <summary type="html">&lt;p&gt;libSQL is a fork of SQLite that is both Open Source, and Open Contributions.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/libsql/libsql/raw/master/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/TxwbQTWHSr&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1026540227218640906?color=5865F2&amp;amp;label=discord&amp;amp;logo=discord&amp;amp;logoColor=8a9095&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;What is libSQL?&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://libsql.org&#34;&gt;libSQL&lt;/a&gt; is an open source, open contribution fork of SQLite. We aim to evolve it to suit many more use cases than SQLite was originally designed for.&lt;/p&gt; &#xA;&lt;h2&gt;We like SQLite a lot, and with modifications.&lt;/h2&gt; &#xA;&lt;p&gt;Wildly successful, and broadly useful, SQLite has solidified its place in modern technology stacks, embedded in nearly any computing device you can think of. Its open source nature and public domain availability make it a popular choice for modification to meet specific use cases.&lt;/p&gt; &#xA;&lt;h2&gt;Hack SQLite internally or externally?&lt;/h2&gt; &#xA;&lt;p&gt;It seems to us that there are two obvious avenues to modify SQLite: forking the code to add features directly to it, or running it on top of a modified OS. History suggests that neither of these work well. The way we see it, this is a result of one major limitation of the software: SQLite is open source but does not accept contributions, so community improvements cannot be widely enjoyed.&lt;/p&gt; &#xA;&lt;h2&gt;SQLite needs to open contributions.&lt;/h2&gt; &#xA;&lt;p&gt;We want to see a world where everyone can benefit from all of the great ideas and hard work that the SQLite community contributes back to the codebase. Community contributions work well, because &lt;a href=&#34;https://glaubercosta-11125.medium.com/sqlite-qemu-all-over-again-aedad19c9a1c&#34;&gt;we’ve done it before&lt;/a&gt;. If this was possible, what do you think SQLite could become?&lt;/p&gt; &#xA;&lt;h2&gt;Could SQLite become a distributed database?&lt;/h2&gt; &#xA;&lt;p&gt;SQLite is gaining ground in edge use cases, since it is fast, embeddable, and matches well the read-mostly, low-to-medium volume of data use cases that often arise at the edge. But there is still the problem of how to make the data available in all nodes.&lt;/p&gt; &#xA;&lt;p&gt;That is challenging to do without support from the core database. Without proper hooks, existing solutions either build a different database around SQLite (like dqlite, rqlite, ChiselStore), or have to replicate at the filesystem layer (LiteFS).&lt;/p&gt; &#xA;&lt;p&gt;What if we could do it natively?&lt;/p&gt; &#xA;&lt;h2&gt;Could SQLite be optimized with an asynchronous API?&lt;/h2&gt; &#xA;&lt;p&gt;Recently, Linux has gained a new supposedly magical interface called &lt;a href=&#34;https://www.theregister.com/2022/09/16/column/&#34;&gt;&lt;code&gt;io_uring&lt;/code&gt;&lt;/a&gt;. It leverages Asynchronous I/O and has been slowly but surely gaining adoption everywhere. Other databases like Postgres have already adopted it for asynchronous I/O, but this hasn’t made its way to SQLite. Supposedly because SQLite interfaces are synchronous. But with asynchronous runtimes and interfaces gaining popularity in both languages and the Kernel, is it time to add a new, async interface to SQLite, that plays well with &lt;code&gt;io_uring&lt;/code&gt; ?&lt;/p&gt; &#xA;&lt;h2&gt;Could SQLite be embedded in the Linux kernel?&lt;/h2&gt; &#xA;&lt;p&gt;Another innovation in the Linux Kernel is &lt;a href=&#34;https://www.scylladb.com/2020/05/05/how-io_uring-and-ebpf-will-revolutionize-programming-in-linux/&#34;&gt;eBPF&lt;/a&gt;. That is a domain-specific VM that allows programs to execute in the kernel. Although still mainly used for tracing, there’s &lt;a href=&#34;https://www.asafcidon.com/uploads/5/9/7/0/59701649/xrp.pdf&#34;&gt;research&lt;/a&gt; about pushing complex data functions like B-Tree lookups entirely in the kernel, as close as possible to NVMe devices. What if SQLite could take advantage of that, and also be unbeatable in workloads that don’t fit in memory?&lt;/p&gt; &#xA;&lt;h2&gt;Could SQLite support WASM user-defined functions?&lt;/h2&gt; &#xA;&lt;p&gt;SQLite does support &lt;a href=&#34;http://www.sqlite.org/c3ref/create_function.html&#34;&gt;user-defined functions&lt;/a&gt;. But there are two big problems with how they are approached: first, functions are written in C, which is increasingly becoming a tall ask for most developers with safety in mind. WASM is growing in popularity, allowing developers to write functions in their preferred language and be safely executed.&lt;/p&gt; &#xA;&lt;p&gt;Second, once a function proves itself generally useful, the “not Open Contribution” policy makes it difficult for it to be included in the standard distribution of SQLite.&lt;/p&gt; &#xA;&lt;h2&gt;Could you be a part of the team that makes these possible?&lt;/h2&gt; &#xA;&lt;p&gt;We’ve decided that now is the time to take SQLite to the places where the community wants to be. Are you interested in building the future of SQLite? We’re kicking off our efforts on GitHub, and you can find us on Discord.&lt;/p&gt; &#xA;&lt;h1&gt;Our plan&lt;/h1&gt; &#xA;&lt;h2&gt;Start with a fork of SQLite&lt;/h2&gt; &#xA;&lt;p&gt;There is nothing to be gained in reinventing greatness, so we will simply build upon that with a fork of core SQLite. Unlike SQLite, this fork will be both fully open source (MIT) and open to community contributions.&lt;/p&gt; &#xA;&lt;h2&gt;Preserve compatibility&lt;/h2&gt; &#xA;&lt;p&gt;We are committed to preserving compatibility with everything that was previously written for SQLite. All of your favorite tools and libraries will continue to work as-is. Preserve stability SQLite is a very well-tested piece of software. We admire that, and commit to preserving the existing test suite while expanding it for the new code we add.&lt;/p&gt; &#xA;&lt;h2&gt;Use Rust for new features&lt;/h2&gt; &#xA;&lt;p&gt;We intend to add Rust to implement new capabilities, but not exclusively so. The existing C codebase already serves as a great foundation for interoperability with other languages and systems, and we don’t intend to change that.&lt;/p&gt; &#xA;&lt;h2&gt;Rejoin core SQLite if its policy changes&lt;/h2&gt; &#xA;&lt;p&gt;We are strong believers in open source that is also open to community contributions. If and when SQLite changes its policy to accept contributions, we will gladly merge our work back into the core product and continue in that space.&lt;/p&gt; &#xA;&lt;h2&gt;Adhere to a code of conduct&lt;/h2&gt; &#xA;&lt;p&gt;We take our code of conduct seriously, and unlike SQLite, we do not substitute it with an &lt;a href=&#34;https://sqlite.org/codeofethics.html&#34;&gt;unclear alternative&lt;/a&gt;. We strive to foster a community that values diversity, equity, and inclusion. We encourage others to speak up if they feel uncomfortable.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>twitter/pelikan</title>
    <updated>2022-10-07T01:32:37Z</updated>
    <id>tag:github.com,2022-10-07:/twitter/pelikan</id>
    <link href="https://github.com/twitter/pelikan" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pelikan is Twitter&#39;s unified cache backend&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pelikan&lt;/h1&gt; &#xA;&lt;p&gt;Pelikan is Twitter&#39;s framework for developing cache services. It is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Fast&lt;/strong&gt;: Pelikan provides high-throughput and low-latency caching solutions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Reliable&lt;/strong&gt;: Pelikan is designed for large-scale deployment and the implementation is informed by our operational experiences.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Modular&lt;/strong&gt;: Pelikan is a framework for rapidly developing new caching solutions by focusing on the inherent architectural similarity between caching services and providing reusable low-level components.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/twitter/pelikan/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License: Apache-2.0&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/twitter/pelikan/actions/workflows/cargo.yml?query=branch%3Amaster+event%3Apush&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/twitter/pelikan/cargo-build/master?label=build&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/twitter/pelikan/actions/workflows/fuzz.yml?query=branch%3Amaster+event%3Apush&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/twitter/pelikan/cargo-fuzz/master?label=fuzz&#34; alt=&#34;Fuzz Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pelikan.zulipchat.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/zulip-join_chat-blue.svg?sanitize=true&#34; alt=&#34;Zulip Chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://pelikan.io&#34;&gt;Website&lt;/a&gt; | &lt;a href=&#34;https://pelikan.zulipchat.com/&#34;&gt;Chat&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Content&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/twitter/pelikan/master/#overview&#34;&gt;Overview&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/twitter/pelikan/master/#products&#34;&gt;Products&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/twitter/pelikan/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/twitter/pelikan/master/#building-pelikan&#34;&gt;Build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/twitter/pelikan/master/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/twitter/pelikan/master/#community&#34;&gt;Community&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/twitter/pelikan/master/#stay-in-touch&#34;&gt;Stay in touch&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/twitter/pelikan/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/twitter/pelikan/master/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/twitter/pelikan/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Overview&lt;/h1&gt; &#xA;&lt;p&gt;After years of using and working on various cache services, we built a common framework that reveals the inherent architectural similarity among them.&lt;/p&gt; &#xA;&lt;p&gt;By creating well-defined modules, most of the low-level functionalities are reused as we create different binaries. The implementation learns from our operational experiences to improve performance and reliability, and leads to software designed for large-scale deployment.&lt;/p&gt; &#xA;&lt;p&gt;The framework approach allows us to develop new features and protocols quickly.&lt;/p&gt; &#xA;&lt;h2&gt;Products&lt;/h2&gt; &#xA;&lt;p&gt;Pelikan contains the following products:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;pelikan_segcache_rs&lt;/code&gt;: a Memcached-like server with extremely high memory efficiency and excellent core scalability. See our &lt;a href=&#34;https://www.usenix.org/conference/nsdi21/presentation/yang-juncheng&#34;&gt;NSDI&#39;21 paper&lt;/a&gt; for design and evaluation details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pelikan_pingserver_rs&lt;/code&gt;: an over-engineered, production-ready ping server useful as a tutorial and for measuring baseline RPC performance&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/twitter/pelikan/master/src/proxy/momento/README.md&#34;&gt;&lt;code&gt;momento_proxy&lt;/code&gt;&lt;/a&gt;: a proxy which allows existing applications to use Momento instead of a Memcache-compatible cache backend.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Legacy&lt;/h2&gt; &#xA;&lt;p&gt;Pelikan legacy codebase can be found within the &lt;code&gt;legacy&lt;/code&gt; folder of this project. It is composed of the original C codebase and backend implementations. It remains as a reference, but is not recommended for production deployments.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;runtime separation of control and data plane&lt;/li&gt; &#xA; &lt;li&gt;predictably low latencies via lockless data structures, worker never blocks&lt;/li&gt; &#xA; &lt;li&gt;per-module config options and metrics that can be composed easily&lt;/li&gt; &#xA; &lt;li&gt;multiple storage and protocol implementations, easy to further extend&lt;/li&gt; &#xA; &lt;li&gt;low-overhead command logger for hotkey and other important data analysis&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Building Pelikan&lt;/h1&gt; &#xA;&lt;h2&gt;Requirement&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rust &lt;a href=&#34;https://www.rust-lang.org/learn/get-started&#34;&gt;stable toolchain&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;C toolchain: &lt;code&gt;llvm/clang (&amp;gt;= 7.0)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build tools: &lt;code&gt;cmake (&amp;gt;= 3.2)&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/twitter/pelikan.git&#xA;cd pelikan&#xA;cargo build --release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tests&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cargo test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;Using &lt;code&gt;pelikan_segcache_rs&lt;/code&gt; as an example, other executables are highly similar.&lt;/p&gt; &#xA;&lt;p&gt;To get info of the service, including usage format and options, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;target/release/pelikan_segcache_rs --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To launch the service with default settings, simply run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;target/release/pelikan_segcache_rs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To launch the service with the sample config file, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;target/release/pelikan_segcache_rs config/segcache.toml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should be able to try out the server using an existing memcached client, or simply with &lt;code&gt;telnet&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ telnet localhost 12321&#xA;Trying 127.0.0.1...&#xA;Connected to localhost.&#xA;Escape character is &#39;^]&#39;.&#xA;set foo 0 0 3&#xA;bar&#xA;STORED&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Attention&lt;/strong&gt;: use &lt;code&gt;admin&lt;/code&gt; port for all non-data commands.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ telnet localhost 9999&#xA;Trying 127.0.0.1...&#xA;Connected to localhost.&#xA;Escape character is &#39;^]&#39;.&#xA;version&#xA;VERSION 0.1.0&#xA;stats&#xA;STAT pid 54937&#xA;STAT time 1459634909&#xA;STAT uptime 22&#xA;STAT version 100&#xA;STAT ru_stime 0.019172&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Pelikan is file-first when it comes to configurations, and currently is config-file only. You can create a new config file following the examples included under the &lt;code&gt;config&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h1&gt;Community&lt;/h1&gt; &#xA;&lt;h2&gt;Stay in touch&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join our project chat on &lt;a href=&#34;https://pelikan.zulipchat.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/zulip-join_chat-blue.svg?sanitize=true&#34; alt=&#34;Zulip&#34;&gt;&lt;/a&gt; for questions and discussions&lt;/li&gt; &#xA; &lt;li&gt;Follow us on Twitter: &lt;a href=&#34;https://twitter.com/pelikan_cache&#34;&gt;@pelikan_cache&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;http://pelikan.io&#34;&gt;http://pelikan.io&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please take a look at our &lt;a href=&#34;https://github.com/twitter/pelikan/raw/master/docs/manifesto.rst&#34;&gt;community manifesto&lt;/a&gt; and &lt;a href=&#34;https://github.com/twitter/pelikan/raw/master/docs/coding_style.rst&#34;&gt;coding style guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to submit a patch, please follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;create a new issue&lt;/li&gt; &#xA; &lt;li&gt;fork on github &amp;amp; clone your fork&lt;/li&gt; &#xA; &lt;li&gt;create a feature branch on your fork&lt;/li&gt; &#xA; &lt;li&gt;push your feature branch&lt;/li&gt; &#xA; &lt;li&gt;create a pull request linked to the issue&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;We have made progress and are actively working on documentation, and will put it on our website. Meanwhile, check out the current material under &lt;code&gt;docs/&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This software is licensed under the Apache 2.0 license, see &lt;a href=&#34;https://raw.githubusercontent.com/twitter/pelikan/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MrAnonymous09/hacktoberfest-solutions-submissions</title>
    <updated>2022-10-07T01:32:37Z</updated>
    <id>tag:github.com,2022-10-07:/MrAnonymous09/hacktoberfest-solutions-submissions</id>
    <link href="https://github.com/MrAnonymous09/hacktoberfest-solutions-submissions" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Get ready to submit your 1st contribution on open source. HACKTOBERFEST IS FOR EVERYONE.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hacktoberfest Submit Solutions to problems&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;img width=&#34;650&#34; src=&#34;https://codothon.com/wp-content/uploads/2022/10/Hacktoberfest-Time-to-Hack-Codothon.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; &lt;a href=&#34;https://hacktoberfest.com/&#34;&gt; Join Hacktoberfest 2021 From Here &lt;/a&gt; &lt;/h3&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;Support open source throughout October!&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Hacktoberfest encourages participation in the open source community, which grow&lt;/p&gt; &#xA;&lt;h1&gt;PARTICIPATION&lt;/h1&gt; &#xA;&lt;section id=&#34;values&#34; class=&#34;section__StyledSection-sc-1cz1z8m-0 cxNnGP&#34;&gt; &#xA; &lt;div class=&#34;contents sub_content&#34;&gt; &#xA;  &lt;h2&gt;VALUES&lt;/h2&gt; EVERYONE IS WELCOME &#xA;  &lt;p&gt;QUANTITY IS FUN, QUALITY IS KEY&lt;/p&gt; &#xA;  &lt;p&gt;SHORT-TERM ACTION, LONG-TERM IMPACT&lt;/p&gt; &#xA; &lt;/div&gt; &#xA; &lt;h2 dir=&#34;auto&#34;&gt;Rules To Contribute To This Repo&lt;/h2&gt; &#xA; &lt;ul dir=&#34;auto&#34;&gt; &#xA;  &lt;li&gt;You need to contribute a solution for any open source (Any Language) Question. The question may be from CodeChef, Hakerrank, HackerEarth, or any competition (Contests).&lt;/li&gt; &#xA;  &lt;li&gt;The solution should be real and not copied from any source.&lt;/li&gt; &#xA;  &lt;li&gt;You need to submit both Questions &amp;amp; answers with examples.&lt;/li&gt; &#xA;  &lt;li&gt;To know about the Hacktoberfest Event visit the website below (End).&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h2 dir=&#34;auto&#34;&gt;Steps For Contribution&lt;/h2&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;Fork this repo&lt;/li&gt; &#xA;  &lt;li&gt;Star this repo&lt;/li&gt; &#xA;  &lt;li&gt;Add a folder or go to your respective folder (Language)&lt;/li&gt; &#xA;  &lt;li&gt;Create a folder with the question title&lt;/li&gt; &#xA;  &lt;li&gt;Submit your solution with your question&lt;/li&gt; &#xA;  &lt;li&gt;Make your 1st successful pull request&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/72184293/193462051-2ad7f0f5-74a4-4750-b2c8-efd843764f86.png&#34;&gt;&lt;/p&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/72184293/193463088-76155e81-b986-4b86-8c51-5a6137eb6ca2.png&#34;&gt;&lt;/p&gt; &#xA; &lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/72184293/193463115-48e05a71-89dd-4c2f-a341-8768278a2866.png&#34;&gt;&lt;/p&gt; &#xA; &lt;div&gt; &#xA;  &lt;div class=&#34;content__StyledDiv-sc-1ncwaz-0 kdaPkt&#34;&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Visit the website to know about the terms &amp;amp; conditions, rules, how, when, where, and all.&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/section&gt;&#xA;&lt;section id=&#34;contributors&#34; class=&#34;section__StyledSection-sc-1cz1z8m-0 cxNnGP&#34;&gt; &#xA; &lt;div class=&#34;contents sub_content&#34;&gt; &#xA;  &lt;div class=&#34;divider__StyledDiv-sc-sule6r-0 divider__DividerWrapper-sc-sule6r-1 kpoPfL DqQhk&#34;&gt; &#xA;   &lt;div class=&#34;garnish_wrapper&#34;&gt; &#xA;    &lt;div class=&#34;garnish short&#34;&gt;&#xA;     &lt;a href=&#34;https://codothon.com/hacktoberfest-time-to-hack-codothon/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img class=&#34;alignleft wp-image-9678 size-medium&#34; src=&#34;https://www.factsprime.com/wp-content/uploads/2022/09/codothon-300x94.png&#34; alt=&#34;&#34; width=&#34;300&#34; height=&#34;94&#34;&gt;&lt;/a&gt;&#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;garnish short&#34;&gt;&lt;/div&gt; &#xA;    &lt;div class=&#34;garnish long&#34;&gt;&lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/section&gt;</summary>
  </entry>
</feed>