<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-20T01:32:46Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Rubberduckycooly/Sonic-Mania-Decompilation</title>
    <updated>2022-08-20T01:32:46Z</updated>
    <id>tag:github.com,2022-08-20:/Rubberduckycooly/Sonic-Mania-Decompilation</id>
    <link href="https://github.com/Rubberduckycooly/Sonic-Mania-Decompilation" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A complete decompilation of Sonic Mania (2017)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;strong&gt;SUPPORT THE OFFICIAL RELEASE OF SONIC MANIA (PLUS)&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Without assets from the official releases, this decompilation will not run.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can get the official release of Sonic Mania (Plus) from:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[Windows] &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://store.steampowered.com/app/584400/Sonic_Mania/&#34;&gt;Via Steam&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.epicgames.com/store/en-US/p/sonic-mania&#34;&gt;Via The Epic Games Store&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.origin.com/aus/en-us/store/sonic-the-hedgehog/sonic-mania&#34;&gt;Via Origin&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.nintendo.com/games/detail/sonic-mania-switch/&#34;&gt;Switch, via the eShop&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://store.playstation.com/en-us/product/UP0177-CUSA07023_00-SONICMANIA000000&#34;&gt;PS4, via the Store&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.xbox.com/en-US/games/store/sonic-mania/BXH46NQT9W4Q/0001&#34;&gt;Xbox One, via the Store&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Even if your platform isn&#39;t supported by the official releases, you &lt;strong&gt;must&lt;/strong&gt; buy or officially download it for the assets.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;strong&gt;DO NOT USE THIS DECOMPILATION PROJECT AS A MEANS TO PIRATE SONIC MANIA.&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;We do not condone using this project as a means for piracy in any form. This project was made with love and care for the source material and was created for purely educational purposes, and would not exist without the work of Sega, Headcannon, and Evening Star.&lt;/p&gt; &#xA;&lt;p&gt;If you want to transfer your save from the official PC versions, you can just copy your savedata into the folder containing the decompilation!&lt;/p&gt; &#xA;&lt;h1&gt;Additional Tweaks&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added a built-in mod loader and API calls to enable a much smoother modding experience.&lt;/li&gt; &#xA; &lt;li&gt;Added support for targeting RSDKv5U rather than standalone RSDKv5&lt;/li&gt; &#xA; &lt;li&gt;Added all content from all released versions of the game. Including: 1.00 (Console initial release), 1.03 (PC initial release) &amp;amp; 1.06 (Plus update)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;How to Build&lt;/h1&gt; &#xA;&lt;p&gt;Most platforms will heavily encourage you to build it in conjunction with RSDKv5. However, there are some options available for some platforms if you wish to build separately.&lt;/p&gt; &#xA;&lt;h2&gt;Windows&lt;/h2&gt; &#xA;&lt;p&gt;Open SonicMania.sln and build the project you wish to build.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Projects ending with &lt;code&gt;All&lt;/code&gt; use the generated &lt;code&gt;All.c&lt;/code&gt; file in-place of compiling each object seperately. Use for faster compilation speed. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Adversely, projects without &lt;code&gt;All&lt;/code&gt; compile each object using their separate source files. Use for JIT-compiling.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;The version you choose &lt;strong&gt;must match up&lt;/strong&gt; with the RSDKv5 version you run. A v5U executable cannot run a v5 Mania, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Linux/Make-like systems&lt;/h2&gt; &#xA;&lt;p&gt;The makefile is a trimmed down version of the RSDKv5 makefile that only supports game compilation. By default, unlike the RSDK makefile, this will look for the default game name of &lt;code&gt;SonicMania&lt;/code&gt; and use it as source and compile as such. Pass &lt;code&gt;GAME_NAME&lt;/code&gt; to the makefile to change it/&lt;/p&gt; &#xA;&lt;h3&gt;Other platforms&lt;/h3&gt; &#xA;&lt;p&gt;The only directly supported platforms are those listed above. Since Mania is very easy to build, requiring no dependencies, virtually any platform that can run RSDKv5 can compile Mania easily.&lt;/p&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;h3&gt;Q: I found a bug/I have a feature request!&lt;/h3&gt; &#xA;&lt;p&gt;A: Submit an issue in the issues tab and we &lt;em&gt;might&lt;/em&gt; fix it in the main branch. Don&#39;t expect any major future releases, however.&lt;/p&gt; &#xA;&lt;h3&gt;Q: Will you do a decompilation for Sonic CD (2011) and/or Sonic 1/2 (2013)?&lt;/h3&gt; &#xA;&lt;p&gt;A: I already have! You can find Sonic CD &lt;a href=&#34;https://github.com/Rubberduckycooly/Sonic-CD-11-Decompilation&#34;&gt;here&lt;/a&gt; and Sonic 1/2 &lt;a href=&#34;https://github.com/Rubberduckycooly/Sonic-1-2-2013-Decompilation&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Q: Will there be a decompilation for Sonic Origins/Sonic 3?&lt;/h3&gt; &#xA;&lt;p&gt;A: No. This is the last decompilation from us. This project took about 1.5 years to do, and doing Sonic 3 would take equally as long, if not longer, as Sonic 3 is not only larger in scope, but Origins&#39; hybrid codebase makes it harder to read. We would also like to expand our horizons beyond sonic going forward, and we don&#39;t wish to spend forever just playing catchup with Sega&#39;s official releases.&lt;/p&gt; &#xA;&lt;h3&gt;Q: Are there anymore decompilation projects in the works?&lt;/h3&gt; &#xA;&lt;p&gt;A: Absolutely not. Between the last two and this one, we&#39;re done with decompiling, at least for the time being. Please do not expect any more decompilations from us, Sonic or otherwise!&lt;/p&gt; &#xA;&lt;h1&gt;Special Thanks&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MGRich&#34;&gt;Chuli&lt;/a&gt; for general decompilation assistance, helping me fix bugs, tweaking up my sometimes sloppy code and generally being really helpful and fun to work with on this project&lt;/li&gt; &#xA; &lt;li&gt;The Weigman for creating the header you see up here along with similar assets&lt;/li&gt; &#xA; &lt;li&gt;Everyone in the &lt;a href=&#34;https://dc.railgun.works/retroengine&#34;&gt;Retro Engine Modding Server&lt;/a&gt; for being supportive of me and for giving me a place to show off these things that I&#39;ve found&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contact:&lt;/h1&gt; &#xA;&lt;p&gt;Join the &lt;a href=&#34;https://dc.railgun.works/retroengine&#34;&gt;Retro Engine Modding Discord Server&lt;/a&gt; for any extra questions you may need to know about the decompilation or modding it.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>edenhill/kcat</title>
    <updated>2022-08-20T01:32:46Z</updated>
    <id>tag:github.com,2022-08-20:/edenhill/kcat</id>
    <link href="https://github.com/edenhill/kcat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Generic command line non-JVM Apache Kafka producer and consumer&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/edenhill/kcat/master/resources/kcat_small.png&#34; alt=&#34;logo by @dtrapezoid&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;kcat&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;kcat is the project formerly known as as kafkacat&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;kcat and kafkacat are Copyright (c) 2014-2021 Magnus Edenhill&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/edenhill/kcat&#34;&gt;https://github.com/edenhill/kcat&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;kcat logo by &lt;a href=&#34;https://twitter.com/dtrapezoid&#34;&gt;@dtrapezoid&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is kcat&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;kcat&lt;/strong&gt; is a generic non-JVM producer and consumer for Apache Kafka &amp;gt;=0.8, think of it as a netcat for Kafka.&lt;/p&gt; &#xA;&lt;p&gt;In &lt;strong&gt;producer&lt;/strong&gt; mode kcat reads messages from stdin, delimited with a configurable delimiter (-D, defaults to newline), and produces them to the provided Kafka cluster (-b), topic (-t) and partition (-p).&lt;/p&gt; &#xA;&lt;p&gt;In &lt;strong&gt;consumer&lt;/strong&gt; mode kcat reads messages from a topic and partition and prints them to stdout using the configured message delimiter.&lt;/p&gt; &#xA;&lt;p&gt;There&#39;s also support for the Kafka &amp;gt;=0.9 high-level balanced consumer, use the &lt;code&gt;-G &amp;lt;group&amp;gt;&lt;/code&gt; switch and provide a list of topics to join the group.&lt;/p&gt; &#xA;&lt;p&gt;kcat also features a Metadata list (-L) mode to display the current state of the Kafka cluster and its topics and partitions.&lt;/p&gt; &#xA;&lt;p&gt;Supports Avro message deserialization using the Confluent Schema-Registry, and generic primitive deserializers (see examples below).&lt;/p&gt; &#xA;&lt;p&gt;kcat is fast and lightweight; statically linked it is no more than 150Kb.&lt;/p&gt; &#xA;&lt;h2&gt;What happened to kafkacat?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;kcat is kafkacat&lt;/strong&gt;. The kafkacat project was renamed to kcat in August 2021 to adhere to the Apache Software Foundation&#39;s (ASF) trademark policies. Apart from the name, nothing else was changed.&lt;/p&gt; &#xA;&lt;h2&gt;Try it out with docker&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# List brokers and topics in cluster&#xA;$ docker run -it --network=host edenhill/kcat:1.7.1 -b YOUR_BROKER -L&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/edenhill/kcat/master/#examples&#34;&gt;Examples&lt;/a&gt; for usage options, and &lt;a href=&#34;https://raw.githubusercontent.com/edenhill/kcat/master/#running-in-docker&#34;&gt;Running in Docker&lt;/a&gt; for more information on how to properly run docker-based clients with Kafka.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;h3&gt;On recent enough Debian systems:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;apt-get install kafkacat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On recent openSUSE systems:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;zypper addrepo https://download.opensuse.org/repositories/network:utilities/openSUSE_Factory/network:utilities.repo&#xA;zypper refresh&#xA;zypper install kafkacat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(see &lt;a href=&#34;https://software.opensuse.org/download/package?package=kafkacat&amp;amp;project=network%3Autilities&#34;&gt;this page&lt;/a&gt; for instructions to install with openSUSE LEAP)&lt;/p&gt; &#xA;&lt;h3&gt;On Mac OS X with homebrew installed:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install kcat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;On Fedora&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;# dnf copr enable bvn13/kcat&#xA;# dnf update&#xA;# dnf install kafkacat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://rmoff.net/2020/04/20/how-to-install-kafkacat-on-fedora/&#34;&gt;this blog&lt;/a&gt; for how to build from sources and install kafkacat/kcat on recent Fedora systems.&lt;/p&gt; &#xA;&lt;h3&gt;Otherwise follow directions below&lt;/h3&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;librdkafka - &lt;a href=&#34;https://github.com/edenhill/librdkafka&#34;&gt;https://github.com/edenhill/librdkafka&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;libyajl (for JSON support, optional)&lt;/li&gt; &#xA; &lt;li&gt;libavro-c and libserdes (for Avro support, optional. See &lt;a href=&#34;https://github.com/confluentinc/libserdes&#34;&gt;https://github.com/confluentinc/libserdes&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On Ubuntu or Debian: &lt;code&gt;sudo apt-get install librdkafka-dev libyajl-dev&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;./configure &amp;lt;usual-configure-options&amp;gt;&#xA;make&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build for Windows&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd win32&#xA;nuget restore&#xA;msbuild&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Requires &lt;code&gt;Build Tools for Visual Studio 2017&lt;/code&gt; with components &lt;code&gt;Windows 8.1 SDK&lt;/code&gt; and &lt;code&gt;VC++ 2015.3 v14.00 (v140) toolset&lt;/code&gt; to be installed.&lt;/p&gt; &#xA;&lt;h2&gt;Quick build&lt;/h2&gt; &#xA;&lt;p&gt;The bootstrap.sh build script will download and build the required dependencies, providing a quick and easy means of building kcat. Internet connectivity and wget/curl is required by this script. The resulting kcat binary will be linked statically to avoid runtime dependencies. &lt;strong&gt;NOTE&lt;/strong&gt;: Requires &lt;code&gt;curl&lt;/code&gt; and &lt;code&gt;cmake&lt;/code&gt; (for yajl) to be installed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./bootstrap.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Any librdkafka &lt;a href=&#34;https://github.com/edenhill/librdkafka/raw/master/CONFIGURATION.md&#34;&gt;configuration&lt;/a&gt; property can be set on the command line using &lt;code&gt;-X property=value&lt;/code&gt;, or in a configuration file specified by &lt;code&gt;-F &amp;lt;config-file&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If no configuration file was specified with &lt;code&gt;-F ..&lt;/code&gt; on the command line, kcat will try the &lt;code&gt;$KCAT_CONFIG&lt;/code&gt; or (deprecated) &lt;code&gt;$KAFKACAT_CONFIG&lt;/code&gt; environment variable, and then the default configuration file &lt;code&gt;~/.config/kcat.conf&lt;/code&gt; or the (deprecated) &lt;code&gt;~/.config/kafkacat.conf&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Configuration files are optional.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;High-level balanced KafkaConsumer: subscribe to topic1 and topic2 (requires broker &amp;gt;=0.9.0 and librdkafka version &amp;gt;=0.9.1)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kcat -b mybroker -G mygroup topic1 topic2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Read messages from stdin, produce to &#39;syslog&#39; topic with snappy compression&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ tail -f /var/log/syslog | kcat -b mybroker -t syslog -z snappy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Read messages from Kafka &#39;syslog&#39; topic, print to stdout&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kcat -b mybroker -t syslog&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Produce messages from file (one file is one message)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kcat -P -b mybroker -t filedrop -p 0 myfile1.bin /etc/motd thirdfile.tgz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Produce messages transactionally (one single transaction for all messages):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kcat -P -b mybroker -t mytopic -X transactional.id=myproducerapp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Read the last 2000 messages from &#39;syslog&#39; topic, then exit&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kcat -C -b mybroker -t syslog -p 0 -o -2000 -e&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Consume from all partitions from &#39;syslog&#39; topic&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kcat -C -b mybroker -t syslog&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output consumed messages in JSON envelope:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kcat -b mybroker -t syslog -J&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Decode Avro key (&lt;code&gt;-s key=avro&lt;/code&gt;), value (&lt;code&gt;-s value=avro&lt;/code&gt;) or both (&lt;code&gt;-s avro&lt;/code&gt;) to JSON using schema from the Schema-Registry:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kcat -b mybroker -t ledger -s avro -r http://schema-registry-url:8080&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Decode Avro message value and extract Avro record&#39;s &#34;age&#34; field:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kcat -b mybroker -t ledger -s value=avro -r http://schema-registry-url:8080 | jq .payload.age&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Decode key as 32-bit signed integer and value as 16-bit signed integer followed by an unsigned byte followed by string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kcat -b mybroker -t mytopic -s key=&#39;i$&#39; -s value=&#39;hB s&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Hint: see &lt;code&gt;kcat -h&lt;/code&gt; for all available deserializer options.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Output consumed messages according to format string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kcat -b mybroker -t syslog -f &#39;Topic %t[%p], offset: %o, key: %k, payload: %S bytes: %s\n&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Read the last 100 messages from topic &#39;syslog&#39; with librdkafka configuration parameter &#39;broker.version.fallback&#39; set to &#39;0.8.2.1&#39; :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kcat -C -b mybroker -X broker.version.fallback=0.8.2.1 -t syslog -p 0 -o -100 -e&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Produce a tombstone (a &#34;delete&#34; for compacted topics) for key &#34;abc&#34; by providing an empty message value which &lt;code&gt;-Z&lt;/code&gt; interpretes as NULL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ echo &#34;abc:&#34; | kcat -b mybroker -t mytopic -Z -K:&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Produce with headers:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ echo &#34;hello there&#34; | kcat -b mybroker -P -t mytopic -H &#34;header1=header value&#34; -H &#34;nullheader&#34; -H &#34;emptyheader=&#34; -H &#34;header1=duplicateIsOk&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Print headers in consumer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kcat -b mybroker -C -t mytopic -f &#39;Headers: %h: Message value: %s\n&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Enable the idempotent producer, providing exactly-once and strict-ordering &lt;strong&gt;producer&lt;/strong&gt; guarantees:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kcat -b mybroker -X enable.idempotence=true -P -t mytopic ....&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Connect to cluster using SSL and SASL PLAIN authentication:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kcat -b mybroker -X security.protocol=SASL_SSL -X sasl.mechanism=PLAIN -X sasl.username=myapikey -X sasl.password=myapisecret ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Metadata listing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kcat -L -b mybroker&#xA;Metadata for all topics (from broker 1: mybroker:9092/1):&#xA; 3 brokers:&#xA;  broker 1 at mybroker:9092&#xA;  broker 2 at mybrokertoo:9092&#xA;  broker 3 at thirdbroker:9092&#xA; 16 topics:&#xA;  topic &#34;syslog&#34; with 3 partitions:&#xA;    partition 0, leader 3, replicas: 1,2,3, isrs: 1,2,3&#xA;    partition 1, leader 1, replicas: 1,2,3, isrs: 1,2,3&#xA;    partition 2, leader 1, replicas: 1,2, isrs: 1,2&#xA;  topic &#34;rdkafkatest1_auto_49f744a4327b1b1e&#34; with 2 partitions:&#xA;    partition 0, leader 3, replicas: 3, isrs: 3&#xA;    partition 1, leader 1, replicas: 1, isrs: 1&#xA;  topic &#34;rdkafkatest1_auto_e02f58f2c581cba&#34; with 2 partitions:&#xA;    partition 0, leader 3, replicas: 3, isrs: 3&#xA;    partition 1, leader 1, replicas: 1, isrs: 1&#xA;  ....&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;JSON metadata listing&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kcat -b mybroker -L -J&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pretty-printed JSON metadata listing&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kcat -b mybroker -L -J | jq .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Query offset(s) by timestamp(s)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kcat -b mybroker -Q -t mytopic:3:2389238523 -t mytopic2:0:18921841&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Consume messages between two timestamps&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ kcat -b mybroker -C -t mytopic -o s@1568276612443 -o e@1568276617901&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running in Docker&lt;/h2&gt; &#xA;&lt;p&gt;The latest kcat docker image is &lt;code&gt;edenhill/kcat:1.7.1&lt;/code&gt;, there&#39;s also &lt;a href=&#34;https://hub.docker.com/r/confluentinc/cp-kafkacat/&#34;&gt;Confluent&#39;s kafkacat docker images on Docker Hub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are connecting to Kafka brokers also running on Docker you should specify the network name as part of the &lt;code&gt;docker run&lt;/code&gt; command using the &lt;code&gt;--network&lt;/code&gt; parameter. For more details of networking with Kafka and Docker &lt;a href=&#34;https://rmoff.net/2018/08/02/kafka-listeners-explained/&#34;&gt;see this post&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here are two short examples of using kcat from Docker. See the &lt;a href=&#34;https://hub.docker.com/r/confluentinc/cp-kafkacat/&#34;&gt;Docker Hub listing&lt;/a&gt; and &lt;a href=&#34;https://docs.confluent.io/current/app-development/kafkacat-usage.html&#34;&gt;kafkacat docs&lt;/a&gt; for more details:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Send messages using &lt;a href=&#34;http://tldp.org/LDP/abs/html/here-docs.html&#34;&gt;here doc&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it --rm \&#xA;        edenhill/kcat \&#xA;                -b kafka-broker:9092 \&#xA;                -t test \&#xA;                -K: \&#xA;                -P &amp;lt;&amp;lt;EOF&#xA;&#xA;1:{&#34;order_id&#34;:1,&#34;order_ts&#34;:1534772501276,&#34;total_amount&#34;:10.50,&#34;customer_name&#34;:&#34;Bob Smith&#34;}&#xA;2:{&#34;order_id&#34;:2,&#34;order_ts&#34;:1534772605276,&#34;total_amount&#34;:3.32,&#34;customer_name&#34;:&#34;Sarah Black&#34;}&#xA;3:{&#34;order_id&#34;:3,&#34;order_ts&#34;:1534772742276,&#34;total_amount&#34;:21.00,&#34;customer_name&#34;:&#34;Emma Turner&#34;}&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Consume messages:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it --rm \&#xA;        edenhill/kcat \&#xA;           -b kafka-broker:9092 \&#xA;           -C \&#xA;           -f &#39;\nKey (%K bytes): %k\t\nValue (%S bytes): %s\n\Partition: %p\tOffset: %o\n--\n&#39; \&#xA;           -t test&#xA;&#xA;Key (1 bytes): 1&#xA;Value (88 bytes): {&#34;order_id&#34;:1,&#34;order_ts&#34;:1534772501276,&#34;total_amount&#34;:10.50,&#34;customer_name&#34;:&#34;Bob Smith&#34;}&#xA;Partition: 0    Offset: 0&#xA;--&#xA;&#xA;Key (1 bytes): 2&#xA;Value (89 bytes): {&#34;order_id&#34;:2,&#34;order_ts&#34;:1534772605276,&#34;total_amount&#34;:3.32,&#34;customer_name&#34;:&#34;Sarah Black&#34;}&#xA;Partition: 0    Offset: 1&#xA;--&#xA;&#xA;Key (1 bytes): 3&#xA;Value (90 bytes): {&#34;order_id&#34;:3,&#34;order_ts&#34;:1534772742276,&#34;total_amount&#34;:21.00,&#34;customer_name&#34;:&#34;Emma Turner&#34;}&#xA;Partition: 0    Offset: 2&#xA;--&#xA;% Reached end of topic test [0] at offset 3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Run a mock Kafka cluster&lt;/h2&gt; &#xA;&lt;p&gt;With kcat you can spin up an ephemeral in-memory mock Kafka cluster that you you can connect your Kafka applications to for quick testing. The mock cluster supports a reasonable subset of the Kafka protocol, such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Producer&lt;/li&gt; &#xA; &lt;li&gt;Idempotent Producer&lt;/li&gt; &#xA; &lt;li&gt;Transactional Producer&lt;/li&gt; &#xA; &lt;li&gt;Low-level consumer&lt;/li&gt; &#xA; &lt;li&gt;High-level balanced consumer groups with offset commits&lt;/li&gt; &#xA; &lt;li&gt;Topic Metadata and auto creation&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Spin the cluster by running kcat in the &lt;code&gt;-M&lt;/code&gt; (for mock) mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&#xA;# Create mock cluster with 3 brokers&#xA;$ kcat -M 3&#xA;...&#xA;BROKERS=localhost:12345,localhost:46346,localhost:23599&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;While kcat runs, let your Kafka applications connect to the mock cluster by configuring them with the &lt;code&gt;bootstrap.servers&lt;/code&gt; emitted in the &lt;code&gt;BROKERS&lt;/code&gt; line above.&lt;/p&gt; &#xA;&lt;p&gt;Let kcat run for as long as you need the cluster, then terminate it by pressing &lt;code&gt;Ctrl-D&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Since the cluster runs all in memory, with no disk IO, it is quite suitable for performance testing.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>madler/zlib</title>
    <updated>2022-08-20T01:32:46Z</updated>
    <id>tag:github.com,2022-08-20:/madler/zlib</id>
    <link href="https://github.com/madler/zlib" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A massively spiffy yet delicately unobtrusive compression library.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;ZLIB DATA COMPRESSION LIBRARY&lt;/p&gt; &#xA;&lt;p&gt;zlib 1.2.12 is a general purpose data compression library. All the code is thread safe. The data format used by the zlib library is described by RFCs (Request for Comments) 1950 to 1952 in the files &lt;a href=&#34;http://tools.ietf.org/html/rfc1950&#34;&gt;http://tools.ietf.org/html/rfc1950&lt;/a&gt; (zlib format), rfc1951 (deflate format) and rfc1952 (gzip format).&lt;/p&gt; &#xA;&lt;p&gt;All functions of the compression library are documented in the file zlib.h (volunteer to write man pages welcome, contact &lt;a href=&#34;mailto:zlib@gzip.org&#34;&gt;zlib@gzip.org&lt;/a&gt;). A usage example of the library is given in the file test/example.c which also tests that the library is working correctly. Another example is given in the file test/minigzip.c. The compression library itself is composed of all source files in the root directory.&lt;/p&gt; &#xA;&lt;p&gt;To compile all files and run the test program, follow the instructions given at the top of Makefile.in. In short &#34;./configure; make test&#34;, and if that goes well, &#34;make install&#34; should work for most flavors of Unix. For Windows, use one of the special makefiles in win32/ or contrib/vstudio/ . For VMS, use make_vms.com.&lt;/p&gt; &#xA;&lt;p&gt;Questions about zlib should be sent to &lt;a href=&#34;mailto:zlib@gzip.org&#34;&gt;zlib@gzip.org&lt;/a&gt;, or to Gilles Vollant &lt;a href=&#34;mailto:info@winimage.com&#34;&gt;info@winimage.com&lt;/a&gt; for the Windows DLL version. The zlib home page is &lt;a href=&#34;http://zlib.net/&#34;&gt;http://zlib.net/&lt;/a&gt; . Before reporting a problem, please check this site to verify that you have the latest version of zlib; otherwise get the latest version and check whether the problem still exists or not.&lt;/p&gt; &#xA;&lt;p&gt;PLEASE read the zlib FAQ &lt;a href=&#34;http://zlib.net/zlib_faq.html&#34;&gt;http://zlib.net/zlib_faq.html&lt;/a&gt; before asking for help.&lt;/p&gt; &#xA;&lt;p&gt;Mark Nelson &lt;a href=&#34;mailto:markn@ieee.org&#34;&gt;markn@ieee.org&lt;/a&gt; wrote an article about zlib for the Jan. 1997 issue of Dr. Dobb&#39;s Journal; a copy of the article is available at &lt;a href=&#34;http://marknelson.us/1997/01/01/zlib-engine/&#34;&gt;http://marknelson.us/1997/01/01/zlib-engine/&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;p&gt;The changes made in version 1.2.12 are documented in the file ChangeLog.&lt;/p&gt; &#xA;&lt;p&gt;Unsupported third party contributions are provided in directory contrib/ .&lt;/p&gt; &#xA;&lt;p&gt;zlib is available in Java using the java.util.zip package, documented at &lt;a href=&#34;http://java.sun.com/developer/technicalArticles/Programming/compression/&#34;&gt;http://java.sun.com/developer/technicalArticles/Programming/compression/&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;p&gt;A Perl interface to zlib written by Paul Marquess &lt;a href=&#34;mailto:pmqs@cpan.org&#34;&gt;pmqs@cpan.org&lt;/a&gt; is available at CPAN (Comprehensive Perl Archive Network) sites, including &lt;a href=&#34;http://search.cpan.org/~pmqs/IO-Compress-Zlib/&#34;&gt;http://search.cpan.org/~pmqs/IO-Compress-Zlib/&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;p&gt;A Python interface to zlib written by A.M. Kuchling &lt;a href=&#34;mailto:amk@amk.ca&#34;&gt;amk@amk.ca&lt;/a&gt; is available in Python 1.5 and later versions, see &lt;a href=&#34;http://docs.python.org/library/zlib.html&#34;&gt;http://docs.python.org/library/zlib.html&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;p&gt;zlib is built into tcl: &lt;a href=&#34;http://wiki.tcl.tk/4610&#34;&gt;http://wiki.tcl.tk/4610&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;p&gt;An experimental package to read and write files in .zip format, written on top of zlib by Gilles Vollant &lt;a href=&#34;mailto:info@winimage.com&#34;&gt;info@winimage.com&lt;/a&gt;, is available in the contrib/minizip directory of zlib.&lt;/p&gt; &#xA;&lt;p&gt;Notes for some targets:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;For Windows DLL versions, please see win32/DLL_FAQ.txt&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For 64-bit Irix, deflate.c must be compiled without any optimization. With -O, one libpng test fails. The test works in 32 bit mode (with the -n32 compiler flag). The compiler bug has been reported to SGI.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;zlib doesn&#39;t work with gcc 2.6.3 on a DEC 3000/300LX under OSF/1 2.1 it works when compiled with cc.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;On Digital Unix 4.0D (formely OSF/1) on AlphaServer, the cc option -std1 is necessary to get gzprintf working correctly. This is done by configure.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;zlib doesn&#39;t work on HP-UX 9.05 with some versions of /bin/cc. It works with other compilers. Use &#34;make test&#34; to check your compiler.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;gzdopen is not supported on RISCOS or BEOS.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For PalmOs, see &lt;a href=&#34;http://palmzlib.sourceforge.net/&#34;&gt;http://palmzlib.sourceforge.net/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Acknowledgments:&lt;/p&gt; &#xA;&lt;p&gt;The deflate format used by zlib was defined by Phil Katz. The deflate and zlib specifications were written by L. Peter Deutsch. Thanks to all the people who reported problems and suggested various improvements in zlib; they are too numerous to cite here.&lt;/p&gt; &#xA;&lt;p&gt;Copyright notice:&lt;/p&gt; &#xA;&lt;p&gt;(C) 1995-2022 Jean-loup Gailly and Mark Adler&lt;/p&gt; &#xA;&lt;p&gt;This software is provided &#39;as-is&#39;, without any express or implied warranty. In no event will the authors be held liable for any damages arising from the use of this software.&lt;/p&gt; &#xA;&lt;p&gt;Permission is granted to anyone to use this software for any purpose, including commercial applications, and to alter it and redistribute it freely, subject to the following restrictions:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.&lt;/li&gt; &#xA; &lt;li&gt;Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.&lt;/li&gt; &#xA; &lt;li&gt;This notice may not be removed or altered from any source distribution.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Jean-loup Gailly Mark Adler &lt;a href=&#34;mailto:jloup@gzip.org&#34;&gt;jloup@gzip.org&lt;/a&gt; &lt;a href=&#34;mailto:madler@alumni.caltech.edu&#34;&gt;madler@alumni.caltech.edu&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you use the zlib library in a product, we would appreciate &lt;em&gt;not&lt;/em&gt; receiving lengthy legal documents to sign. The sources are provided for free but without warranty of any kind. The library has been entirely written by Jean-loup Gailly and Mark Adler; it does not include third-party code. We make all contributions to and distributions of this project solely in our personal capacity, and are not conveying any rights to any intellectual property of any third parties.&lt;/p&gt; &#xA;&lt;p&gt;If you redistribute modified sources, we would appreciate that you include in the file ChangeLog history information documenting your changes. Please read the FAQ for more information on the distribution of modified source versions.&lt;/p&gt;</summary>
  </entry>
</feed>