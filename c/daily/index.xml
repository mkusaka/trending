<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-14T01:31:18Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SoftEtherVPN/SoftEtherVPN</title>
    <updated>2022-11-14T01:31:18Z</updated>
    <id>tag:github.com,2022-11-14:/SoftEtherVPN/SoftEtherVPN</id>
    <link href="https://github.com/SoftEtherVPN/SoftEtherVPN" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cross-platform multi-protocol VPN software. Pull requests are welcome. The stable version is available at https://github.com/SoftEtherVPN/SoftEtherVPN_Stable.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SoftEther VPN&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Badges&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AppVeyor&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ci.appveyor.com/project/softethervpn/softethervpn&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/github/softethervpn/softethervpn?branch=master&amp;amp;svg=true&#34; alt=&#34;AppVeyor build status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GitLab CI&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gitlab.com/SoftEther/SoftEtherVPN/pipelines&#34;&gt;&lt;img src=&#34;https://gitlab.com/SoftEther/SoftEtherVPN/badges/master/pipeline.svg?sanitize=true&#34; alt=&#34;GitLab CI build status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Coverity Scan&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://scan.coverity.com/projects/softethervpn-softethervpn&#34;&gt;&lt;img src=&#34;https://scan.coverity.com/projects/16304/badge.svg?sanitize=true&#34; alt=&#34;Coverity Scan build status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Azure Pipelines&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dev.azure.com/SoftEther-VPN/SoftEther%20VPN/_build?definitionId=6&#34;&gt;&lt;img src=&#34;https://dev.azure.com/SoftEther-VPN/SoftEther%20VPN/_apis/build/status/6?api-version=6.0-preview.1&#34; alt=&#34;Azure Pipelines build status for Nightly&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cirrus CI&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://cirrus-ci.com/github/SoftEtherVPN/SoftEtherVPN&#34;&gt;&lt;img src=&#34;https://api.cirrus-ci.com/github/SoftEtherVPN/SoftEtherVPN.svg?sanitize=true&#34; alt=&#34;Cirrus CI build status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SoftEtherVPN/SoftEtherVPN/master/#softether-vpn&#34;&gt;SoftEther VPN&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SoftEtherVPN/SoftEtherVPN/master/#board-members-of-this-repository&#34;&gt;BOARD MEMBERS OF THIS REPOSITORY&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SoftEtherVPN/SoftEtherVPN/master/#softether-vpn-advantages&#34;&gt;SOFTETHER VPN ADVANTAGES&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SoftEtherVPN/SoftEtherVPN/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SoftEtherVPN/SoftEtherVPN/master/#for-freebsd&#34;&gt;For FreeBSD&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SoftEtherVPN/SoftEtherVPN/master/#for-windows&#34;&gt;For Windows&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SoftEtherVPN/SoftEtherVPN/master/#from-binary-installers-stable-channel&#34;&gt;From binary installers (stable channel)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SoftEtherVPN/SoftEtherVPN/master/#build-from-source-code&#34;&gt;Build from Source code&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SoftEtherVPN/SoftEtherVPN/master/#about-html5-based-modern-admin-console-and-json-rpc-api-suite&#34;&gt;About HTML5-based Modern Admin Console and JSON-RPC API Suite&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SoftEtherVPN/SoftEtherVPN/master/#built-in-softether-vpn-server-html5-ajax-based-web-administration-console&#34;&gt;Built-in SoftEther VPN Server HTML5 Ajax-based Web Administration Console&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SoftEtherVPN/SoftEtherVPN/master/#built-in-softether-server-vpn-json-rpc-api-suite&#34;&gt;Built-in SoftEther Server VPN JSON-RPC API Suite&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SoftEtherVPN/SoftEtherVPN/master/#to-circumvent-your-governments-firewall-restriction&#34;&gt;TO CIRCUMVENT YOUR GOVERNMENT&#39;S FIREWALL RESTRICTION&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SoftEtherVPN/SoftEtherVPN/master/#source-code-contribution&#34;&gt;SOURCE CODE CONTRIBUTION&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SoftEtherVPN/SoftEtherVPN/master/#dear-security-experts&#34;&gt;DEAR SECURITY EXPERTS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;SoftEther VPN (Developer Edition Master Repository)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An Open-Source Cross-platform Multi-protocol VPN Program &lt;a href=&#34;https://www.softether.org/&#34;&gt;https://www.softether.org/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This repository has experimental codes. Pull requests are welcome.&lt;/p&gt; &#xA;&lt;p&gt;Stable Edition is available on &lt;a href=&#34;https://github.com/SoftEtherVPN/SoftEtherVPN_Stable&#34;&gt;https://github.com/SoftEtherVPN/SoftEtherVPN_Stable&lt;/a&gt; which the non-developer user can stable use.&lt;/p&gt; &#xA;&lt;p&gt;Please note that &lt;a href=&#34;https://raw.githubusercontent.com/SoftEtherVPN/SoftEtherVPN/master/#comparison-with-stable-edition&#34;&gt;some features&lt;/a&gt; are not available in Stable Edition.&lt;/p&gt; &#xA;&lt;p&gt;Source code packages (.zip and .tar.gz) and binary files of Stable Edition are also available:&lt;br&gt; &lt;a href=&#34;https://www.softether-download.com/&#34;&gt;https://www.softether-download.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) all contributors on SoftEther VPN project in GitHub. Copyright (c) Daiyuu Nobori, SoftEther Project at University of Tsukuba, and SoftEther Corporation.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;The development of SoftEther VPN was supported by the MITOH Project, a research and development project by Japanese Government, subsidized by Ministry of Economy, Trade and Industry of Japan, administrated by Information Promotion Agency. &lt;a href=&#34;https://www.ipa.go.jp/english/humandev/&#34;&gt;https://www.ipa.go.jp/english/humandev/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SoftEtherVPN/SoftEtherVPN/master/resources/icons8.png&#34; alt=&#34;https://icons8.com&#34; title=&#34;Icons8&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://icons8.com&#34;&gt;Icons8&lt;/a&gt; kindly supported the project by gifting a license which allows to edit and redistribute their icons.&lt;/p&gt; &#xA;&lt;p&gt;Please note that you are not allowed to redistribute those icons outside of this repository.&lt;/p&gt; &#xA;&lt;p&gt;The developers of SoftEther VPN love Icons8&#39;s work and kindly ask the users to support them as much as possible.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;SoftEther VPN (&#34;SoftEther&#34; means &#34;Software Ethernet&#34;) is one of the world&#39;s most powerful and easy-to-use multi-protocol VPN software.&lt;/p&gt; &#xA;&lt;p&gt;SoftEther VPN runs on Windows, Linux, Mac, FreeBSD and Solaris.&lt;/p&gt; &#xA;&lt;p&gt;SoftEther VPN supports most of widely-used VPN protocols including SSL-VPN, WireGuard, OpenVPN, IPsec, L2TP, MS-SSTP, L2TPv3 and EtherIP by the single SoftEther VPN Server program.&lt;/p&gt; &#xA;&lt;p&gt;More details on &lt;a href=&#34;https://www.softether.org/&#34;&gt;https://www.softether.org/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;BOARD MEMBERS OF THIS REPOSITORY&lt;/h1&gt; &#xA;&lt;p&gt;Daiyuu Nobori (Since Jan 2, 2014) &lt;a href=&#34;https://github.com/dnobori&#34;&gt;https://github.com/dnobori&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Moataz Elmasry (Since Nov 6, 2017) &lt;a href=&#34;https://github.com/moatazelmasry2&#34;&gt;https://github.com/moatazelmasry2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Zulyandri Zardi (Since Nov 6, 2017) &lt;a href=&#34;https://github.com/zulzardi&#34;&gt;https://github.com/zulzardi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alex Maslakov (Since Nov 6, 2017) &lt;a href=&#34;https://github.com/GildedHonour&#34;&gt;https://github.com/GildedHonour&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Davide Beatrici (Since Jul 21, 2018) &lt;a href=&#34;https://github.com/davidebeatrici&#34;&gt;https://github.com/davidebeatrici&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ilya Shipitsin (Since Jul 21, 2018) &lt;a href=&#34;https://github.com/chipitsine&#34;&gt;https://github.com/chipitsine&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Yihong Wu (Since Jul 16, 2021) &lt;a href=&#34;https://github.com/domosekai&#34;&gt;https://github.com/domosekai&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;SOFTETHER VPN ADVANTAGES&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supporting all popular VPN protocols by the single VPN server: SSL-VPN (HTTPS) WireGuard OpenVPN IPsec L2TP MS-SSTP L2TPv3 EtherIP&lt;/li&gt; &#xA; &lt;li&gt;Free and open-source software.&lt;/li&gt; &#xA; &lt;li&gt;Easy to establish both remote-access and site-to-site VPN.&lt;/li&gt; &#xA; &lt;li&gt;SSL-VPN Tunneling on HTTPS to pass through NATs and firewalls.&lt;/li&gt; &#xA; &lt;li&gt;Revolutionary VPN over ICMP and VPN over DNS features.&lt;/li&gt; &#xA; &lt;li&gt;Resistance to highly-restricted firewall.&lt;/li&gt; &#xA; &lt;li&gt;Ethernet-bridging (L2) and IP-routing (L3) over VPN.&lt;/li&gt; &#xA; &lt;li&gt;Embedded dynamic-DNS and NAT-traversal so that no static nor fixed IP address is required.&lt;/li&gt; &#xA; &lt;li&gt;AES 256-bit and RSA 4096-bit encryptions.&lt;/li&gt; &#xA; &lt;li&gt;Sufficient security features such as logging and firewall inner VPN tunnel.&lt;/li&gt; &#xA; &lt;li&gt;User authentication with RADIUS and NT domain controllers.&lt;/li&gt; &#xA; &lt;li&gt;User authentication with X.509 client certificate.&lt;/li&gt; &#xA; &lt;li&gt;Packet logging.&lt;/li&gt; &#xA; &lt;li&gt;1Gbps-class high-speed throughput performance with low memory and CPU usage.&lt;/li&gt; &#xA; &lt;li&gt;Windows, Linux, Mac, Android, iPhone, iPad and Windows Phone are supported.&lt;/li&gt; &#xA; &lt;li&gt;The OpenVPN clone function supports legacy OpenVPN clients.&lt;/li&gt; &#xA; &lt;li&gt;IPv4 / IPv6 dual-stack.&lt;/li&gt; &#xA; &lt;li&gt;The VPN server runs on Windows, Linux, FreeBSD, Solaris and Mac OS X.&lt;/li&gt; &#xA; &lt;li&gt;Configure All settings on GUI.&lt;/li&gt; &#xA; &lt;li&gt;Multi-languages (English, Japanese and Simplified-Chinese).&lt;/li&gt; &#xA; &lt;li&gt;No memory leaks. High quality stable codes, intended for long-term runs. We always verify that there are no memory or resource leaks before releasing the build.&lt;/li&gt; &#xA; &lt;li&gt;More details at &lt;a href=&#34;https://www.softether.org/&#34;&gt;https://www.softether.org/&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Comparison with Stable Edition&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Protocol&lt;/th&gt; &#xA;   &lt;th&gt;Stable Edition (SE)&lt;/th&gt; &#xA;   &lt;th&gt;Developer Edition (DE)&lt;/th&gt; &#xA;   &lt;th&gt;Comment&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SSL-VPN&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OpenVPN&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;AEAD mode is supported in DE only.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IPsec&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;L2TP&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MS-SSTP&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;L2TPv3&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EtherIP&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WireGuard&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IKEv2&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;Stable Edition (SE)&lt;/th&gt; &#xA;   &lt;th&gt;Developer Edition (DE)&lt;/th&gt; &#xA;   &lt;th&gt;Comment&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Password Authentication&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RADIUS / NT Authentication&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Certificate Authentication&lt;/td&gt; &#xA;   &lt;td&gt;⚠️&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;SE supports the feature in SSL-VPN only.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IPv6-capable VPN Tunnel&lt;/td&gt; &#xA;   &lt;td&gt;⚠️&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;SE supports IPv6 in L2 VPN tunnels only.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IPv4 Route Management&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Windows clients only&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IPv6 Route Management&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Windows clients only&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TLS Server Verification&lt;/td&gt; &#xA;   &lt;td&gt;⚠️&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;In SE you need to specify the exact certificate or CA to verify. DE can perform standard TLS verification and use the system CA store.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dual-stack Name Resolution&lt;/td&gt; &#xA;   &lt;td&gt;⚠️&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;SE attempts in IPv6 only after IPv4 has failed.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ECDSA Certificates Import&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Runs on Windows XP and Earlier&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Compatible with SoftEther VPN 1.0&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;For FreeBSD&lt;/h2&gt; &#xA;&lt;p&gt;SoftEther VPN in FreeBSD Ports Collection is maintained by &lt;a href=&#34;https://people.FreeBSD.org/~meta/&#34;&gt;Koichiro Iwao&lt;/a&gt; (&lt;a href=&#34;https://github.com/metalefty&#34;&gt;@metalefty&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Binary package can be installed by pkg:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pkg install softether5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, it can be built &amp;amp; installed by ports:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make install -C /usr/ports/security/softether5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run SoftEther VPN Server:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;service softether_server start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To configure SoftEther VPN Server startup on boot:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sysrc softether_server_enable=yes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also SoftEther VPN &lt;a href=&#34;https://www.freshports.org/security/softether-devel/&#34;&gt;Stable Edition&lt;/a&gt; and &lt;a href=&#34;https://www.freshports.org/security/softether/&#34;&gt;RTM version&lt;/a&gt; are available on FreeBSD.&lt;/p&gt; &#xA;&lt;h2&gt;For Windows&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/SoftEther-VPN/SoftEther%20VPN/_build?definitionId=6&#34;&gt;Nightly builds&lt;/a&gt; (choose appropriate platform, then find binaries or installers as artifacts)&lt;/p&gt; &#xA;&lt;h2&gt;From binary installers (stable channel)&lt;/h2&gt; &#xA;&lt;p&gt;Those can be found under &lt;a href=&#34;https://www.softether-download.com/&#34;&gt;https://www.softether-download.com/&lt;/a&gt; There you can also find SoftEtherVPN source code in zip and tar formats.&lt;/p&gt; &#xA;&lt;h2&gt;Build from Source code&lt;/h2&gt; &#xA;&lt;p&gt;see &lt;a href=&#34;https://raw.githubusercontent.com/SoftEtherVPN/SoftEtherVPN/master/src/BUILD_UNIX.md&#34;&gt;BUILD_UNIX&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/SoftEtherVPN/SoftEtherVPN/master/src/BUILD_WINDOWS.md&#34;&gt;BUILD_WINDOWS&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;There are two flavours of SoftEtherVPN source code:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Unstable. Found under &lt;a href=&#34;https://github.com/SoftEtherVPN/SoftEtherVPN&#34;&gt;https://github.com/SoftEtherVPN/SoftEtherVPN&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stable. Found under &lt;a href=&#34;https://github.com/SoftEtherVPN/SoftEtherVPN_Stable&#34;&gt;https://github.com/SoftEtherVPN/SoftEtherVPN_Stable&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;About HTML5-based Modern Admin Console and JSON-RPC API Suite&lt;/h1&gt; &#xA;&lt;h2&gt;Built-in SoftEther VPN Server HTML5 Ajax-based Web Administration Console&lt;/h2&gt; &#xA;&lt;p&gt;We are developing the HTML5 Ajax-based Web Administration Console (currently very limited, under construction) in the embedded HTTPS server on the SoftEther VPN Server.&lt;/p&gt; &#xA;&lt;p&gt;Access to the following URL from your favorite web browser.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://&amp;lt;vpn_server_hostname&amp;gt;:&amp;lt;port&amp;gt;/admin/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For example if your VPN Server is running as the port 5555 on the host at 192.168.0.1, you can access to the web console by:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://192.168.0.1:5555/admin/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: Your HTML5 development contribution is very appreciated. The current HTML5 pages are written by Daiyuu Nobori (the core developer of SoftEther VPN). He is obviously lack of HTML5 development ability. Please kindly consider to contribute for SoftEther VPN&#39;s development on GitHub. Your code will help every people running SoftEther VPN Server.&lt;/p&gt; &#xA;&lt;h2&gt;Built-in SoftEther Server VPN JSON-RPC API Suite&lt;/h2&gt; &#xA;&lt;p&gt;The API Suite allows you to easily develop your original SoftEther VPN Server management application to control the VPN Server (e.g. creating users, adding Virtual Hubs, disconnecting a specified VPN sessions).&lt;/p&gt; &#xA;&lt;p&gt;You can access to the &lt;a href=&#34;https://github.com/SoftEtherVPN/SoftEtherVPN/tree/master/developer_tools/vpnserver-jsonrpc-clients/&#34;&gt;latest SoftEther VPN Server JSON-RPC Document on GitHub.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Almost all control APIs, which the VPN Server provides, are available as JSON-RPC API. You can write your own VPN Server management application in your favorite languages (JavaScript, TypeScript, Java, Python, Ruby, C#, ... etc.)&lt;/li&gt; &#xA; &lt;li&gt;If you are planning to develop your own VPN cloud service, the JSON-RPC API is the best choice to realize the automated operations for the VPN Server.&lt;/li&gt; &#xA; &lt;li&gt;No need to use any specific API client library since all APIs are provided on the JSON-RPC 2.0 Specification. You can use your favorite JSON and HTTPS client library to call any of all APIs in your pure runtime environment.&lt;/li&gt; &#xA; &lt;li&gt;Also, the SoftEther VPN Project provides high-quality JSON-RPC client stub libraries which define all of the API client stub codes. These libraries are written in C#, JavaScript and TypeScript. The Node.js Client Library for VPN Server RPC (vpnrpc) package is also available.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;TO CIRCUMVENT YOUR GOVERNMENT&#39;S FIREWALL RESTRICTION&lt;/h1&gt; &#xA;&lt;p&gt;Because SoftEther VPN is overly strong tool to build a VPN tunnel, some censorship governments want to block your access to the source code of SoftEther VPN, by abusing their censorship firewalls.&lt;/p&gt; &#xA;&lt;p&gt;To circumvent your censor&#39;s unjust restriction, SoftEther VPN Project distributes the up-to-date source code on all the following open-source repositories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;GitHub &lt;a href=&#34;https://github.com/SoftEtherVPN/SoftEtherVPN&#34;&gt;https://github.com/SoftEtherVPN/SoftEtherVPN&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ git clone https://github.com/SoftEtherVPN/SoftEtherVPN.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;GitLab (mirrored from GitHub) &lt;a href=&#34;https://gitlab.com/SoftEther/VPN&#34;&gt;https://gitlab.com/SoftEther/VPN&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ git clone https://gitlab.com/SoftEther/VPN.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;OneDev (mirrored from GitHub) &lt;a href=&#34;https://code.onedev.io/projects/497&#34;&gt;https://code.onedev.io/projects/497&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ git clone https://code.onedev.io/SoftEther/VPN.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We hope that you can reach one of the above URLs at least!&lt;/p&gt; &#xA;&lt;h1&gt;SOURCE CODE CONTRIBUTION&lt;/h1&gt; &#xA;&lt;p&gt;Your contribution to SoftEther VPN Project is much appreciated. Please send patches to us through GitHub.&lt;/p&gt; &#xA;&lt;h1&gt;DEAR SECURITY EXPERTS&lt;/h1&gt; &#xA;&lt;p&gt;If you find a bug or a security vulnerability please kindly inform us about the problem immediately so that we can fix the security problem to protect a lot of users around the world as soon as possible.&lt;/p&gt; &#xA;&lt;p&gt;Our e-mail address for security reports is: &lt;strong&gt;softether-vpn-security at softether.org&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please note that the above e-mail address is not a technical support inquiry address. If you need technical assistance, please visit &lt;a href=&#34;https://www.softether.org/&#34;&gt;https://www.softether.org/&lt;/a&gt; and ask your question on the users forum.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>albfan/miraclecast</title>
    <updated>2022-11-14T01:31:18Z</updated>
    <id>tag:github.com,2022-11-14:/albfan/miraclecast</id>
    <link href="https://github.com/albfan/miraclecast" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Connect external monitors to your system via Wifi-Display specification also known as Miracast&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MiracleCast - Wifi-Display/Miracast Implementation&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/albfan/miraclecast?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/albfan/miraclecast.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/albfan/miraclecast&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://albfan.semaphoreci.com/projects/miraclecast&#34;&gt;&lt;img src=&#34;https://albfan.semaphoreci.com/badges/miraclecast/branches/master.svg?style=shields&#34; alt=&#34;Semaphore CI Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/albfan/miraclecast&#34;&gt;&lt;img src=&#34;https://travis-ci.org/albfan/miraclecast.svg?branch=master&#34; alt=&#34;Travis CI Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/albfan/miraclecast?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/albfan/miraclecast/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The MiracleCast project provides software to connect external monitors to your system via Wi-Fi. It is compatible to the Wifi-Display specification also known as Miracast. MiracleCast implements the Display-Source as well as Display-Sink side.&lt;/p&gt; &#xA;&lt;p&gt;The Display-Source side allows you to connect external displays to your system and stream local content to the device. A lot of effort is put into making this as easy as connecting external displays via HDMI. &lt;em&gt;Note: This is not implemented yet. Please see &lt;a href=&#34;https://raw.githubusercontent.com/albfan/issues/4&#34;&gt;#4&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;On the other hand, the Display-Sink side allows you to create wifi-capable external displays yourself. You can use it on your embedded devices or even on full desktops to allow other systems to use your device as external display.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;The MiracleCast projects requires the following software to be installed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;systemd&lt;/strong&gt;: A system management daemon. It is used for device-management (udev), dbus management (sd-bus) and service management. Systemd &amp;gt;= 221 will work out of the box. For earlier versions systemd must be compiled with --enable-kdbus, even though kdbus isn&#39;t used, but only the independent, experimental sd-libraries. &lt;em&gt;required&lt;/em&gt;: &amp;gt;=systemd-213&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;glib&lt;/strong&gt;: A utility library. Used by the current DHCP implementation. Will be removed once sd-dns gains DHCP-server capabilities. &lt;em&gt;required&lt;/em&gt;: ~=glib2-2.38 (might work with older releases, untested..)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;gstreamer&lt;/strong&gt;: MiracleCast rely on gstreamer to show cast its output. You can test if all needed is installed launching &lt;a href=&#34;https://github.com/albfan/miraclecast/raw/master/res/test-viewer.sh&#34;&gt;res/test-viewer.sh&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;wpa_supplicant&lt;/strong&gt;: MiracleCast spawns wpa_supplicant with a custom config.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;P2P Wi-Fi device&lt;/strong&gt; Although widespread these days, there are some devices not compatible with &lt;a href=&#34;http://en.wikipedia.org/wiki/Wi-Fi_Direct&#34;&gt;Wi-Fi Direct&lt;/a&gt; (prior know as Wi-Fi P2P). Test yours with &lt;a href=&#34;https://github.com/albfan/miraclecast/raw/master/res/test-hardware-capabilities.sh&#34;&gt;res/test-hardware-capabilities.sh&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;check&lt;/strong&gt;: Test-suite for C programs. Used for optional tests of the MiracleCast code base. &lt;em&gt;optional&lt;/em&gt;: ~=check-0.9.11 (might work with older releases, untested..)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;copy the dbus policy &lt;strong&gt;res/org.freedesktop.miracle.conf&lt;/strong&gt; to &lt;code&gt;/etc/dbus-1/system.d/&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build and install&lt;/h2&gt; &#xA;&lt;p&gt;To compile MiracleCast, you can choose from:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/GNU_build_system&#34;&gt;autotools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/CMake&#34;&gt;cmake&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mesonbuild.com/&#34;&gt;meson&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See more info on wiki &lt;a href=&#34;https://github.com/albfan/miraclecast/wiki/Building&#34;&gt;Building&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Automatic interface selection with udev&lt;/h2&gt; &#xA;&lt;p&gt;If you want to select the interface to start miraclecast with, add a udev rule with the script &lt;a href=&#34;https://github.com/albfan/miraclecast/raw/master/res/write-udev-rule.sh&#34;&gt;res/write-udev-rule.sh&lt;/a&gt; and configure miraclecast with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ../configure --enable-rely-udev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also choose the interface with &lt;code&gt;--interface&lt;/code&gt; option for miracle-wifid.&lt;/p&gt; &#xA;&lt;h2&gt;Linux Flavours and general compilation instructions&lt;/h2&gt; &#xA;&lt;h3&gt;Ubuntu&lt;/h3&gt; &#xA;&lt;p&gt;Check your systemd version with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ systemctl --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are on 221 or above your systemd has kdbus enabled.&lt;/p&gt; &#xA;&lt;p&gt;If you are below 221, an alternative repo was created to install systemd with dbus&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/albfan/systemd-ubuntu-with-dbus&#34;&gt;https://github.com/albfan/systemd-ubuntu-with-dbus&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See there was interface changes on systemd 219, if you are below that version, use branch &lt;a href=&#34;https://github.com/albfan/miraclecast/tree/systemd-219&#34;&gt;systemd-219&lt;/a&gt; to compile miraclecast&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;See specific instructions on that repo&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Arch linux&lt;/h3&gt; &#xA;&lt;p&gt;Use existing &lt;a href=&#34;https://aur.archlinux.org/packages/miraclecast-git/&#34;&gt;AUR package&lt;/a&gt;. Remember to enable kdbus to systemd-git dependency if you are below 221 systemd.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ export _systemd_git_kdbus=--enable-kdbus&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can achieve installation using &lt;a href=&#34;https://wiki.archlinux.org/index.php/Yaourt&#34;&gt;yaourt&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Other flavours&lt;/h3&gt; &#xA;&lt;p&gt;If you feel confidence enough (since systemd is the entrypoint for an OS) extract instructions from arch linux AUR PKGBUILD:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=systemd-kdbus&#34;&gt;systemd-kdbus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=miraclecast&#34;&gt;miraclecast&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;h3&gt;Steps to use it as sink&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;shutdown wpa_supplicant and NetworkManager&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ systemctl stop NetworkManager.service&#xA;$ systemctl stop wpa_supplicant.service &#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;launch wifi daemon&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ sudo miracle-wifid &amp;amp;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;launch sink control (your network card will be detected. here 3)&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ sudo miracle-sinkctl&#xA;[ADD]  Link: 3&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;run WiFi Display on link:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;gt; run 3&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pair your machine with other miracast device (mirroring)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;See your screen device on this machine&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Steps to use it as peer&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Repeat steps 1 and 2 from &#34;use as sink&#34;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;launch wifi control&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ sudo miracle-wifictl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enable visibility for other devices&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Locate them using scanning&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;gt; p2p-scan&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Apart from list, or show info with peer &amp;lt;mac&amp;gt; there&#39;s nothing useful here by now. For a Q&amp;amp;D see &lt;a href=&#34;https://github.com/albfan/miraclecast/issues/4&#34;&gt;Using as peer&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;UIBC&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The User Input Back Channel (UIBC) is an optional WFD feature that when implemented facilitates communication of user inputs to a User Interface, present at the WFD Sink, to the WFD Source.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To use it just add &lt;code&gt;--uibc&lt;/code&gt; on &lt;code&gt;miracle-sinkctl&lt;/code&gt; startup. Single mouse events and key events are implemented.&lt;/p&gt; &#xA;&lt;h2&gt;Autocompletion&lt;/h2&gt; &#xA;&lt;p&gt;Source &lt;a href=&#34;https://github.com/albfan/miraclecast/raw/master/res/miraclecast-completion&#34;&gt;res/miraclecast-completion&lt;/a&gt; for autocompletion&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This software is licensed under the terms of the GNU-LGPL license. Please see ./COPYING for further information.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This software is originally maintained by: David Herrmann &lt;a href=&#34;mailto:dh.herrmann@gmail.com&#34;&gt;dh.herrmann@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This fork is maintained by: Alberto Fanjul &lt;a href=&#34;mailto:albertofanjul@gmail.com&#34;&gt;albertofanjul@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have any questions, do not hesitate to contact one of the maintainers.&lt;/p&gt; &#xA;&lt;h2&gt;Additional urls&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Website: &lt;a href=&#34;http://www.freedesktop.org/wiki/Software/miracle&#34;&gt;http://www.freedesktop.org/wiki/Software/miracle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Original repo: git://people.freedesktop.org/~dvdhrm/miracle&lt;/li&gt; &#xA; &lt;li&gt;Fork repo: &lt;a href=&#34;https://github.com/albfan/miraclecast&#34;&gt;https://github.com/albfan/miraclecast&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Technical spec: &lt;a href=&#34;https://www.wi-fi.org/file/wi-fi-display-technical-specification-v11&#34;&gt;https://www.wi-fi.org/file/wi-fi-display-technical-specification-v11&lt;/a&gt; (free registration required)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Mange/rtl8192eu-linux-driver</title>
    <updated>2022-11-14T01:31:18Z</updated>
    <id>tag:github.com,2022-11-14:/Mange/rtl8192eu-linux-driver</id>
    <link href="https://github.com/Mange/rtl8192eu-linux-driver" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Drivers for the rtl8192eu chipset for wireless adapters (D-Link DWA-131 rev E1 included!)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;rtl8192eu linux drivers&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This branch is based on Realtek&#39;s driver versioned 4.4.1. &lt;code&gt;master&lt;/code&gt; is based on 4.3.1.1 originally.&lt;/p&gt; &#xA;&lt;p&gt;The official drivers for D-Link DWA-131 Rev E, with patches to keep it working on newer kernels. Also works on Rosewill RNX-N180UBE v2 N300 Wireless Adapter and TP-Link TL-WN821N V6.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This is just a &#34;mirror&#34;. I have no knowledge about this code or how it works. Expect no support from me or any contributors here. I just think GitHub is a nicer way of keeping track of this than random forum posts and precompiled binaries being sent by email. I don&#39;t want someone else to have to spend 5 days of googling and compiling with random patches until it works.&lt;/p&gt; &#xA;&lt;h2&gt;Source for the official drivers&lt;/h2&gt; &#xA;&lt;p&gt;Official drivers were downloaded from D-Link Australia. D-Link USA and the european countries I checked only lists revision A and B. Australia lists all three.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://support.dlink.com.au/Download/download.aspx?product=DWA-131&#34;&gt;Download page for DWA-131&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;ftp://files.dlink.com.au/products/DWA-131/REV_E/Drivers/DWA-131_Linux_driver_v4.3.1.1.zip&#34;&gt;Direct download link for Linux drivers&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;GitHub will not link to the &lt;code&gt;ftp://&lt;/code&gt; schema. Raw link contents:&lt;/p&gt; &lt;p&gt;&lt;code&gt;ftp://files.dlink.com.au/products/DWA-131/REV_E/Drivers/DWA-131_Linux_driver_v4.3.1.1.zip&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In addition, you can find the contents of this version in the initial commit of this repo: &lt;a href=&#34;https://github.com/Mange/rtl8192eu-linux-driver/commit/1387cf623d54bc2caec533e72ee18ef3b6a1db29&#34;&gt;1387cf623d54bc2caec533e72ee18ef3b6a1db29&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Patches&lt;/h2&gt; &#xA;&lt;p&gt;You can see the applied patches, their sources and/or motivation by looking at the commits. The &lt;code&gt;master&lt;/code&gt; branch will mostly be kept clean with a single commit per patch, except for Pull Requests. You can review commit by commit and then record the SHA in order to get a safe reference to use. As long as the SHA stays the same you know that what you get has been reviewed by you.&lt;/p&gt; &#xA;&lt;p&gt;Note that updates to this README will show up as separate commits. I will not mix changes to this file with changes to the code in case you want to mirror this without the README.&lt;/p&gt; &#xA;&lt;h2&gt;Building and installing using DKMS&lt;/h2&gt; &#xA;&lt;p&gt;This tree supports Dynamic Kernel Module Support (DKMS), a system for generating kernel modules from out-of-tree kernel sources. It can be used to install/uninstall kernel modules, and the module will be automatically rebuilt from source when the kernel is upgraded (for example using your package manager).&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install DKMS and other required tools&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;for normal Linux systems&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt-get install git linux-headers-generic build-essential dkms&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;for Raspberry Pi&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt-get install git raspberrypi-kernel-headers build-essential dkms&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone this repository and change your directory to cloned path.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/Mange/rtl8192eu-linux-driver&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd rtl8192eu-linux-driver&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The Makefile is preconfigured to handle most x86/PC versions. However, if you are compiling for something other than an intel x86 architecture, you need to first select the platform.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;for the Raspberry Pi, you need to set the I386 to n and the ARM_RPI to y:&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;...&#xA;CONFIG_PLATFORM_I386_PC = n&#xA;...&#xA;CONFIG_PLATFORM_ARM_RPI = y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;for arm64 devices (e.g. Orange Pi PC 2):&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;...&#xA;CONFIG_PLATFORM_I386_PC = n&#xA;...&#xA;CONFIG_PLATFORM_ARM_AARCH64 = y&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add the driver to DKMS. This will copy the source to a system directory so that it can used to rebuild the module on kernel upgrades.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo dkms add .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build and install the driver.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo dkms install rtl8192eu/1.0&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Distributions based on Debian &amp;amp; Ubuntu have RTL8XXXU driver present &amp;amp; running in kernelspace. To use our RTL8192EU driver, we need to blacklist RTL8XXXU.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;echo &#34;blacklist rtl8xxxu&#34; | sudo tee /etc/modprobe.d/rtl8xxxu.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Force RTL8192EU Driver to be active from boot.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;echo -e &#34;8192eu\n\nloop&#34; | sudo tee /etc/modules&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Newer versions of Ubuntu has weird plugging/replugging issue (Check #94). This includes weird idling issues, To fix this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;echo &#34;options 8192eu rtw_power_mgnt=0 rtw_enusbss=0&#34; | sudo tee /etc/modprobe.d/8192eu.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Update changes to Grub &amp;amp; initramfs&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo update-grub; sudo update-initramfs -u&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Reboot system to load new changes from newly generated initramfs.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;systemctl reboot -i&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Check that your kernel has loaded the right module:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo lshw -c network&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You should see the line &lt;code&gt;driver=8192eu&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you wish to uninstall the driver at a later point, use &lt;em&gt;sudo dkms uninstall rtl8192eu/1.0&lt;/em&gt;. To completely remove the driver from DKMS use &lt;em&gt;sudo dkms remove rtl8192eu/1.0 --all&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Using as AP&lt;/h2&gt; &#xA;&lt;p&gt;Reference: Intelbras IWA 3001 USB WiFi Adapter&lt;br&gt; Devices using the 8192eu chip can serve as decent access points, with speeds up to ~50Mbps.&lt;/p&gt; &#xA;&lt;p&gt;Using hostapd to manage your AP, set the proper ht-capab field for this device, which is:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;HT_CAPAB=[RX-STBC1][SHORT-GI-40][SHORT-GI-20][DSSS_CCK-40][MAX-AMSDU-7935]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Optionally enable wideband, if you don&#39;t have neighbours:&lt;br&gt; Note that while this will result in a increase in network throughput it may cause clients further away to fail connecting.&lt;br&gt; It may also make the device work better with repeaters repeating its signal.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;HT_CAPAB=[HT40+][RX-STBC1][SHORT-GI-40][SHORT-GI-20][DSSS_CCK-40][MAX-AMSDU-7935]&lt;/code&gt; (for channels 1-7), or&lt;br&gt; &lt;code&gt;HT_CAPAB=[HT40-][RX-STBC1][SHORT-GI-40][SHORT-GI-20][DSSS_CCK-40][MAX-AMSDU-7935]&lt;/code&gt; (for channels 5-13)&lt;/p&gt; &#xA;&lt;h2&gt;Changing transmit power&lt;/h2&gt; &#xA;&lt;p&gt;Currently there is no way to change transmit power in the driver with iw or iwconfig tools, as you would with other wireless devices.&lt;br&gt; The values returned by these tools are purely fictional on this driver. However, you can still manually change the transmit power at compile time by editing the file &lt;code&gt;hal/rl8192e/rtl8192e_phycfg.c&lt;/code&gt; and changing the lines below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/* Manual Transmit Power Control &#xA;   The following options take values from 0 to 63, where:&#xA;   0 - disable&#xA;   1 - lowest transmit power the device can do&#xA;   63 - highest transmit power the device can do&#xA;   Note that these options may override your country&#39;s regulations about transmit power.&#xA;   Setting the device to work at higher transmit powers most of the time may cause premature &#xA;   failure or damage by overheating. Make sure the device has enough airflow before you increase this.&#xA;   It is currently unknown what these values translate to in dBm.&#xA;*/&#xA;&#xA;&#xA;// Transmit Power Boost&#xA;// This value is added to the device&#39;s calculation of transmit power index.&#xA;// Useful if you want to keep power usage low while still boosting/decreasing transmit power.&#xA;// Can take a negative value as well to reduce power.&#xA;// Zero disables it. Default: 2, for a tiny boost.&#xA;int transmit_power_boost = 2;&#xA;// (ADVANCED) To know what transmit powers this device decides to use dynamically, see:&#xA;// https://github.com/lwfinger/rtl8192ee/blob/42ad92dcc71cb15a62f8c39e50debe3a28566b5f/hal/phydm/rtl8192e/halhwimg8192e_rf.c#L1310&#xA;&#xA;&#xA;// Transmit Power Override&#xA;// This value completely overrides the driver&#39;s calculations and uses only one value for all transmissions.&#xA;// Zero disables it. Default: 0&#xA;int transmit_power_override = 0;&#xA;&#xA;&#xA;/* Manual Transmit Power Control */&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Submitting patches&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork repo&lt;/li&gt; &#xA; &lt;li&gt;Do your patch in a topic branch&lt;/li&gt; &#xA; &lt;li&gt;Open a pull request on GH, or send it by email to &lt;code&gt;Magnus Bergmark &amp;lt;magnus.bergmark@gmail.com&amp;gt;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;I&#39;ll squash your commits when everything checks out and add it to &lt;code&gt;master&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Copyright and licenses&lt;/h2&gt; &#xA;&lt;p&gt;The original code is copyrighted, but I don&#39;t know by whom. The driver download does not contain license information; please open an issue if you are the copyright holder.&lt;/p&gt; &#xA;&lt;p&gt;Most C files are licensed under GNU General Public License (GPL), version 2.&lt;/p&gt;</summary>
  </entry>
</feed>