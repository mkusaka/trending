<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-01T01:32:20Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wh1te4ever/TrollDecryptor</title>
    <updated>2023-12-01T01:32:20Z</updated>
    <id>tag:github.com,2023-12-01:/wh1te4ever/TrollDecryptor</id>
    <link href="https://github.com/wh1te4ever/TrollDecryptor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Decrypt iOS apps for TrollStore&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TrollDecryptor&lt;/h1&gt; &#xA;&lt;p&gt;Decrypt appstore apps for TrollStore&lt;/p&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download and install TrollDecryptor from &lt;a href=&#34;https://github.com/wh1te4ever/TrollDecryptor/releases&#34;&gt;Release&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run appstore&#39;s app that you want to decrypt.&lt;/li&gt; &#xA; &lt;li&gt;Enter app pid (You can get app pid from CocoaTop) and click Decrypt.&lt;/li&gt; &#xA; &lt;li&gt;You can get decrypted-app.ipa from /var/mobile/Containers/Data/Application/(trolldecryptor uuid)/Documents&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to build&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Theos Development Kit.&lt;/li&gt; &#xA; &lt;li&gt;Run below command and you can get TrollDecryptor.ipa&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ make package&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Credit / Thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stefanesser/dumpdecrypted&#34;&gt;dumpdecrypted&lt;/a&gt; by Stefan Esser&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BishopFox/bfdecrypt&#34;&gt;bfdecrypt&lt;/a&gt; by BishopFox&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>pvvx/ZigbeeTLc</title>
    <updated>2023-12-01T01:32:20Z</updated>
    <id>tag:github.com,2023-12-01:/pvvx/ZigbeeTLc</id>
    <link href="https://github.com/pvvx/ZigbeeTLc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Custom firmware for Zigbee 3.0 IoT devices on the TLSR825x chip&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Custom firmware for Zigbee 3.0 IoT devices on the TLSR825x chip&lt;/h1&gt; &#xA;&lt;p&gt;Currently supported devices: &lt;a href=&#34;https://pvvx.github.io/ATC_MiThermometer/&#34;&gt;LYWSD03MMC&lt;/a&gt;, &lt;a href=&#34;https://pvvx.github.io/CGDK2/&#34;&gt;CGDK2&lt;/a&gt;, &lt;a href=&#34;https://pvvx.github.io/MHO_C122&#34;&gt;MHO-C122&lt;/a&gt;, &lt;a href=&#34;https://pvvx.github.io/MHO_C401N&#34;&gt;MHO-C401N&lt;/a&gt;, &lt;a href=&#34;https://pvvx.github.io/TS0201_TZ3000/&#34;&gt;TS0201_TZ3000&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In developing: &lt;a href=&#34;https://pvvx.github.io/MHO_C401&#34;&gt;MHO-C401(old)&lt;/a&gt;, &lt;a href=&#34;https://pvvx.github.io/MJWSD05MMC&#34;&gt;MJWSD05MMC&lt;/a&gt;, &lt;a href=&#34;https://pvvx.github.io/CGG1&#34;&gt;CGG1-M&lt;/a&gt;, &lt;a href=&#34;https://pvvx.github.io/TS0202_TZ3000&#34;&gt;TS0202_TZ3000&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Firmware readiness level - Beta versions 0.1.x.x. Stable from version 0.1.1.0, but additional tests are required&lt;/p&gt; &#xA;&lt;h2&gt;To flash the Zigbee firmware, use a Google Chrome, Microsoft Edge or Opera Browser.*&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to the&amp;nbsp;&lt;a href=&#34;https://pvvx.github.io/ATC_MiThermometer/TelinkMiFlasher.html&#34;&gt;Over-the-air Webupdater Page&amp;nbsp;TelinkMiFlasher.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;If using Android, Windows, Linux: Ensure you enabled &#34;experimental web platform features&#34;. Therefore copy the according link (i.e.&amp;nbsp;chrome://flags/#enable-experimental-web-platform-features&amp;nbsp;for Chrome), open a new browser tab, paste the copied URL. Now sten the&amp;nbsp;&lt;em&gt;Experimental Web Platform features&lt;/em&gt;&amp;nbsp;flag to&amp;nbsp;&lt;em&gt;Enabled&lt;/em&gt;. Then&amp;nbsp;restart the browser.&lt;/li&gt; &#xA; &lt;li&gt;In the Telink Flasher Page: Press&amp;nbsp;&lt;code&gt;Connect:&lt;/code&gt;. The browser should open a popup with visible Bluetooth devices. Choose the according target device (i.e.&amp;nbsp;LYWSD03MMC) to pair.&lt;/li&gt; &#xA; &lt;li&gt;After connection is established a&amp;nbsp;&lt;em&gt;Do Acivation&lt;/em&gt;&amp;nbsp;button appears. Press this button to start the decryption key process.&lt;/li&gt; &#xA; &lt;li&gt;Now you can press the&amp;nbsp;Zigbee Firmware&amp;nbsp;button to directly flash the &lt;code&gt;Zigbee Firmware&lt;/code&gt;:&lt;br&gt;Alternatively you can choose a specific firmware binary (i.e. the original firmware) via the file chooser. Example: in the file name field paste &#34;&lt;a href=&#34;https://github.com/devbis/z03mmc/releases/download/1.0.6/1141-0203-10063001-z03mmc.zigbee&#34;&gt;https://github.com/devbis/z03mmc/releases/download/1.0.6/1141-0203-10063001-z03mmc.zigbee&lt;/a&gt;&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Press&amp;nbsp;Start Flashing. Wait for the firmware to finish.&lt;/li&gt; &#xA; &lt;li&gt;The device should now show up in your Zigbee bridge (If joining is enabled, of course). If this does not happen, reinsert the battery and/or short-circuit the RESET and GND pins on the LYWSD03MMC board, and on sensors with a button, press the button and hold it for 3 seconds.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;In the future, you can update &lt;a href=&#34;https://github.com/devbis/z03mmc&#34;&gt;Zigbee LYWSD03MMC firmware to the version from devbis&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Action of the button&lt;/h2&gt; &#xA;&lt;p&gt;Action of the button (or contact &#34;reset&#34; to &#34;gnd&#34; for LYWSD03MMC):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Short press - send temperature, humidity and battery data.&lt;/li&gt; &#xA; &lt;li&gt;Hold for 2 seconds - Switches temperature between Celsius and Fahrenheit.&lt;/li&gt; &#xA; &lt;li&gt;Hold for 7 seconds - reset the binding and restart.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Zigbee OTA&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pvvx/ZigbeeTLc/issues/7&#34;&gt;OTA update in ZHA&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Before flashing the firmware, check the compliance of the “Manufacturer Code” and “Image Type” between the OTA file and those issued by the Zigbee device.&lt;/p&gt; &#xA;&lt;p&gt;Sample: &#34;1141-020a-01103001-Z03MMC.zigbee&#34;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Manufacturer Code&lt;/th&gt; &#xA;   &lt;th&gt;Image Type&lt;/th&gt; &#xA;   &lt;th&gt;File Version&lt;/th&gt; &#xA;   &lt;th&gt;Stack Version&lt;/th&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Ext OTA&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1141&lt;/td&gt; &#xA;   &lt;td&gt;020a&lt;/td&gt; &#xA;   &lt;td&gt;0110&lt;/td&gt; &#xA;   &lt;td&gt;3001&lt;/td&gt; &#xA;   &lt;td&gt;Z03MMC&lt;/td&gt; &#xA;   &lt;td&gt;zigbee&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0x1141 - Telink&lt;/td&gt; &#xA;   &lt;td&gt;0x02 - TLSR825x, 0x0a - Xiaomi LYWSD03MMC&lt;/td&gt; &#xA;   &lt;td&gt;App release 0.1, App build 1.0&lt;/td&gt; &#xA;   &lt;td&gt;Zigbee v3.0, Release 0.1&lt;/td&gt; &#xA;   &lt;td&gt;Z03MMC&lt;/td&gt; &#xA;   &lt;td&gt;OTA&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Image Type&lt;/th&gt; &#xA;   &lt;th&gt;Device, note&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0x0201&lt;/td&gt; &#xA;   &lt;td&gt;MHO-C401 (old version)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0x0202&lt;/td&gt; &#xA;   &lt;td&gt;CGG1 (old version)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0x0203&lt;/td&gt; &#xA;   &lt;td&gt;LYWSD03MMC ver &lt;a href=&#34;https://github.com/devbis/z03mmc&#34;&gt;https://github.com/devbis/z03mmc&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0x0204&lt;/td&gt; &#xA;   &lt;td&gt;WATERMETER ver &lt;a href=&#34;https://github.com/slacky1965/watermeter_zed&#34;&gt;https://github.com/slacky1965/watermeter_zed&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0x0206&lt;/td&gt; &#xA;   &lt;td&gt;CGDK2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0x0207&lt;/td&gt; &#xA;   &lt;td&gt;CGG1 (new version)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0x0208&lt;/td&gt; &#xA;   &lt;td&gt;MHO-C401 (new version)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0x0209&lt;/td&gt; &#xA;   &lt;td&gt;MJWSD05MMC&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0x020A&lt;/td&gt; &#xA;   &lt;td&gt;LYWSD03MMC ver &lt;a href=&#34;https://github.com/pvvx/ZigbeeTLc&#34;&gt;https://github.com/pvvx/ZigbeeTLc&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0x020B&lt;/td&gt; &#xA;   &lt;td&gt;MHO-C122&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0x0210&lt;/td&gt; &#xA;   &lt;td&gt;Water Tank sensors&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0x0211&lt;/td&gt; &#xA;   &lt;td&gt;TS0201-TZ3000&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;0x0212&lt;/td&gt; &#xA;   &lt;td&gt;TS0202-TZ3000&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;To restore to BLE, use the Zigbee OTA file with the same number device from: &lt;a href=&#34;https://github.com/pvvx/ATC_MiThermometer/tree/master/zigbee_ota&#34;&gt;https://github.com/pvvx/ATC_MiThermometer/tree/master/zigbee_ota&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Zigbee OTA for 128 KB firmware takes 677 seconds with an average consumption of about 1 mA. This is an energy consumption of 5.4 mAh from the battery.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Display decimal places for temperature, humidity and battery charge in ZHA.&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pvvx/ZigbeeTLc/issues/6&#34;&gt;ZHA patch for more precision display of data for all Zigbee devices.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Indication on LCD screen&lt;/h2&gt; &#xA;&lt;p&gt;A solid &#34;BT&#34; icon indicates a connection loss or the thermometer is not registered with the Zigbee network.&lt;/p&gt; &#xA;&lt;p&gt;The flashing &#34;BT&#34; icon is called by the &#34;identify&#34; command.&lt;/p&gt; &#xA;&lt;h2&gt;Current additions&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Added project assembly using &#39;make&#39; (Windows/linux) and the ability to import &#39;Existing Project&#39; into &#34;&lt;a href=&#34;http://wiki.telink-semi.cn/wiki/IDE-and-Tools/Telink_IoT_Studio/&#34;&gt;Telink IoT Studio&lt;/a&gt;&#34;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Default intervals for temperature and humidity reporting are set to 30-120 (min-max) seconds, reportableChanged to 0.1C and 0.5%.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Consumption has been optimized when the coordinator is disconnected or connection is lost. When performing &lt;em&gt;rejoin&lt;/em&gt;, if the connection is broken, the thermometer consumes quite a lot. Monitor the work of your network coordinator - Zigbee does not like (almost cannot tolerate) coordinator outages.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Consumption has been optimized when polling the reset button or contact.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Additional adjustments to consumption consumption and correction of the report transmission functions algorithm.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Correspondence of transmitted and displayed measurements (correct rounding).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Reducing firmware size: removing unnecessary code from SDK, reorganization of battery voltage measurement (ADC), ...&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Averaging battery level measurements (eliminates clutter on charts)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Switch temperature between Celsius and Fahrenheit (ClusterID: 0x0204, Attr: 0x0000, ENUM8 = 1 in C, = 2 in F)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Adding button actions (ver 0.1.1.1)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Added Poll Control Cluster (ver 0.1.1.2)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Make&lt;/h2&gt; &#xA;&lt;p&gt;Для сборки под Linux выполнить:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/pvvx/ZigbeeTLc&#xA;make install&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Out log:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;===================================================================&#xA; Section|          Description| Start (hex)|   End (hex)|Used space&#xA;-------------------------------------------------------------------&#xA; ramcode|   Resident Code SRAM|           0|        1360|    4960&#xA;    text|           Code Flash|        1360|       1E028|  117960&#xA;  rodata| Read Only Data Flash|           0|           0|       0&#xA; cusdata|          Custom SRAM|      844FD8|      844FD8|       0&#xA;      nc|   Wasteful Area SRAM|      841360|      841400|     160&#xA;   ictag|     Cache Table SRAM|      841400|      841500|     256&#xA;  icdata|      Cache Data SRAM|      841500|      841D00|    2048&#xA;    data|       Init Data SRAM|      841D00|      841E94|     404&#xA;     bss|        BSS Data SRAM|      841EA0|      844FD8|   12600&#xA; irq_stk|        BSS Data SRAM|      841EA0|      8420A0|     512&#xA;    cbss| Custom BSS Data SRAM|      844FD8|      844FD8|       0&#xA;   stack|       CPU Stack SRAM|      844FD8|      850000|   45096&#xA;   flash|       Bin Size Flash|           0|       1E1BC|  123324&#xA;-------------------------------------------------------------------&#xA;Start Load SRAM : 0 (ICtag: 0x0)&#xA;Total Used SRAM : 20440 from 65536&#xA;Total Free SRAM : 160 + stack[45096] = 45256&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Под Window, после скачивания проекта, выполнить “make install”:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/pvvx/ZigbeeTLc&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;и произвести импорт проекта в ‘Telink IoT Studio’ как описано в &#39;Telink_IoT_Studio_User_Guide.pdf&#39;, глава &#34;6 Import and build projects&#34;.&lt;/p&gt; &#xA;&lt;p&gt;В Windows возможно включить многопоточную сборку для сборки всего проекта с нуля за 2..3 сек (make -j -&amp;gt; 3 сек на 12-ти ядрах/24 потока).&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;The start of the project with Zigbee on TLSR825x was inspired by the following original works:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/slacky1965/watermeter_zed&#34;&gt;https://github.com/slacky1965/watermeter_zed&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/devbis/z03mmc&#34;&gt;https://github.com/devbis/z03mmc&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;BLE firmware for &lt;a href=&#34;https://github.com/pvvx/BLE_THSensor&#34;&gt;TS0201_TZ3000&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt;</summary>
  </entry>
</feed>