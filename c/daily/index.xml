<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-02T01:24:47Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>libfuse/sshfs</title>
    <updated>2023-11-02T01:24:47Z</updated>
    <id>tag:github.com,2023-11-02:/libfuse/sshfs</id>
    <link href="https://github.com/libfuse/sshfs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A network filesystem client to connect to SSH servers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SSHFS&lt;/h1&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;SSHFS allows you to mount a remote filesystem using SFTP. Most SSH servers support and enable this SFTP access by default, so SSHFS is very simple to use - there&#39;s nothing to do on the server-side.&lt;/p&gt; &#xA;&lt;h2&gt;Development Status&lt;/h2&gt; &#xA;&lt;p&gt;SSHFS is shipped by all major Linux distributions and has been in production use across a wide range of systems for many years. However, at present SSHFS does not have any active, regular contributors, and there are a number of known issues (see the &lt;a href=&#34;https://github.com/libfuse/sshfs/issues&#34;&gt;bugtracker&lt;/a&gt;).&lt;br&gt; The current maintainer continues to apply pull requests and makes regular releases, but unfortunately has no capacity to do any development beyond addressing high-impact issues. When reporting bugs, please understand that unless you are including a pull request or are reporting a critical issue, you will probably not get a response.&lt;/p&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;p&gt;Once sshfs is installed (see next section) running it is very simple:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sshfs [user@]hostname:[directory] mountpoint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is recommended to run SSHFS as regular user (not as root). For this to work the mountpoint must be owned by the user. If username is omitted SSHFS will use the local username. If the directory is omitted, SSHFS will mount the (remote) home directory. If you need to enter a password sshfs will ask for it (actually it just runs ssh which asks for the password if needed).&lt;/p&gt; &#xA;&lt;p&gt;Also many ssh options can be specified (see the manual pages for &lt;em&gt;sftp(1)&lt;/em&gt; and &lt;em&gt;ssh_config(5)&lt;/em&gt;), including the remote port number (&lt;code&gt;-oport=PORT&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;To unmount the filesystem:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;fusermount -u mountpoint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On BSD and macOS, to unmount the filesystem:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;umount mountpoint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;First, download the latest SSHFS release from &lt;a href=&#34;https://github.com/libfuse/sshfs/releases&#34;&gt;https://github.com/libfuse/sshfs/releases&lt;/a&gt;. You also need &lt;a href=&#34;http://github.com/libfuse/libfuse&#34;&gt;libfuse&lt;/a&gt; 3.1.0 or newer (or a similar library that provides a libfuse3 compatible interface for your operating system). Finally, you need the &lt;a href=&#34;https://developer.gnome.org/glib/stable/&#34;&gt;Glib&lt;/a&gt; library with development headers (which should be available from your operating system&#39;s package manager).&lt;/p&gt; &#xA;&lt;p&gt;To build and install, we recommend to use &lt;a href=&#34;http://mesonbuild.com/&#34;&gt;Meson&lt;/a&gt; (version 0.38 or newer) and &lt;a href=&#34;https://ninja-build.org/&#34;&gt;Ninja&lt;/a&gt;. After extracting the sshfs tarball, create a (temporary) build directory and run Meson:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mkdir build; cd build&#xA;$ meson ..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Normally, the default build options will work fine. If you nevertheless want to adjust them, you can do so with the &lt;em&gt;mesonconf&lt;/em&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mesonconf                  # list options&#xA;$ mesonconf -D strip=true    # set an option&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build, test and install SSHFS, you then use Ninja (running the tests requires the &lt;a href=&#34;http://www.pytest.org/&#34;&gt;py.test&lt;/a&gt; Python module):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ninja&#xA;$ python3 -m pytest test/    # optional, but recommended&#xA;$ sudo ninja install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;p&gt;If you need help, please ask on the &lt;a href=&#34;mailto:fuse-sshfs@lists.sourceforge.net&#34;&gt;fuse-sshfs@lists.sourceforge.net&lt;/a&gt; mailing list (subscribe at &lt;a href=&#34;https://lists.sourceforge.net/lists/listinfo/fuse-sshfs&#34;&gt;https://lists.sourceforge.net/lists/listinfo/fuse-sshfs&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Please report any bugs on the GitHub issue tracker at &lt;a href=&#34;https://github.com/libfuse/sshfs/issues&#34;&gt;https://github.com/libfuse/sshfs/issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Packaging Status&lt;/h2&gt; &#xA;&lt;a href=&#34;https://repology.org/project/fusefs:sshfs/versions&#34;&gt; &lt;img src=&#34;https://repology.org/badge/vertical-allrepos/fusefs:sshfs.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>c-ares/c-ares</title>
    <updated>2023-11-02T01:24:47Z</updated>
    <id>tag:github.com,2023-11-02:/c-ares/c-ares</id>
    <link href="https://github.com/c-ares/c-ares" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A C library for asynchronous DNS requests&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;c-ares&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cirrus-ci.com/github/c-ares/c-ares&#34;&gt;&lt;img src=&#34;https://api.cirrus-ci.com/github/c-ares/c-ares.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/c-ares/c-ares/branch/master&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/aevgc5914tm72pvs/branch/master?svg=true&#34; alt=&#34;Windows Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/c-ares/c-ares&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/c-ares/c-ares/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/291&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/291/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:c-ares&#34;&gt;&lt;img src=&#34;https://oss-fuzz-build-logs.storage.googleapis.com/badges/c-ares.svg?sanitize=true&#34; alt=&#34;Fuzzing Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is c-ares, an asynchronous resolver library. It is intended for applications which need to perform DNS queries without blocking, or need to perform multiple DNS queries in parallel. The primary examples of such applications are servers which communicate with multiple clients and programs with graphical user interfaces.&lt;/p&gt; &#xA;&lt;p&gt;The full source code is available in the &lt;a href=&#34;https://c-ares.org/download/&#34;&gt;&#39;c-ares&#39; release archives&lt;/a&gt;, and in a git repository: &lt;a href=&#34;https://github.com/c-ares/c-ares&#34;&gt;https://github.com/c-ares/c-ares&lt;/a&gt;. See the &lt;a href=&#34;https://raw.githubusercontent.com/c-ares/c-ares/main/INSTALL.md&#34;&gt;INSTALL.md&lt;/a&gt; file for build information.&lt;/p&gt; &#xA;&lt;p&gt;If you find bugs, correct flaws, have questions or have comments in general in regard to c-ares (or by all means the original ares too), get in touch with us on the c-ares mailing list: &lt;a href=&#34;https://lists.haxx.se/listinfo/c-ares&#34;&gt;https://lists.haxx.se/listinfo/c-ares&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;c-ares is distributed under the MIT license.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll find all c-ares details and news here: &lt;a href=&#34;https://c-ares.org/&#34;&gt;https://c-ares.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Notes for c-ares hackers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The distributed &lt;code&gt;ares_build.h&lt;/code&gt; file is only intended to be used on systems which can not run the also distributed configure script.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The distributed &lt;code&gt;ares_build.h&lt;/code&gt; file is generated as a copy of &lt;code&gt;ares_build.h.dist&lt;/code&gt; when the c-ares source code distribution archive file is originally created.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you check out from git on a non-configure platform, you must run the appropriate &lt;code&gt;buildconf*&lt;/code&gt; script to set up &lt;code&gt;ares_build.h&lt;/code&gt; and other local files before being able to compile the library.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;On systems capable of running the &lt;code&gt;configure&lt;/code&gt; script, the &lt;code&gt;configure&lt;/code&gt; process will overwrite the distributed &lt;code&gt;ares_build.h&lt;/code&gt; file with one that is suitable and specific to the library being configured and built, this new file is generated from the &lt;code&gt;ares_build.h.in&lt;/code&gt; template file.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you intend to distribute an already compiled c-ares library you &lt;strong&gt;MUST&lt;/strong&gt; also distribute along with it the generated &lt;code&gt;ares_build.h&lt;/code&gt; which has been used to compile it. Otherwise the library will be of no use for the users of the library that you have built. It is &lt;strong&gt;your&lt;/strong&gt; responsibility to provide this file. No one at the c-ares project can know how you have built the library.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;File &lt;code&gt;ares_build.h&lt;/code&gt; includes platform and configuration dependent info, and must not be modified by anyone. Configure script generates it for you.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;We cannot assume anything else but very basic compiler features being present. While c-ares requires an ANSI C compiler to build, some of the earlier ANSI compilers clearly can&#39;t deal with some preprocessor operators.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Newlines must remain unix-style for older compilers&#39; sake.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Comments must be written in the old-style /* unnested C-fashion */&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Try to keep line lengths below 80 columns.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>