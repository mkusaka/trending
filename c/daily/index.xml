<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-29T01:24:17Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>asdcorp/ohook</title>
    <updated>2023-09-29T01:24:17Z</updated>
    <id>tag:github.com,2023-09-29:/asdcorp/ohook</id>
    <link href="https://github.com/asdcorp/ohook" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An universal Office &#34;activation&#34; hook with main focus of enabling full functionality of subscription editions&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ohook&lt;/h1&gt; &#xA;&lt;p&gt;An universal Office &#34;activation&#34; hook with main focus of enabling full functionality of subscription editions.&lt;/p&gt; &#xA;&lt;p&gt;This project is released mainly for our partners. We won&#39;t be directly providing any kind support for users.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Example steps for 64-bit C2R Office running on a 64-bit version of Windows:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a symlink of the system &lt;code&gt;sppc.dll&lt;/code&gt; in the Office C2R &lt;code&gt;System&lt;/code&gt; directory as &lt;code&gt;sppcs.dll&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;mklink &#34;%programfiles%\Microsoft Office\root\vfs\System\sppcs.dll&#34; &#34;%windir%\System32\sppc.dll&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Copy the hook library as &lt;code&gt;sppc.dll&lt;/code&gt; to the Office C2R &lt;code&gt;System&lt;/code&gt; directory&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;copy /y sppc64.dll &#34;%programfiles%\Microsoft Office\root\vfs\System\sppc.dll&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;(optional) In case of some Office editions which show &#34;There was a problem checking this device&#39;s license status&#34; banner, you may need to add the following to the &lt;code&gt;hosts&lt;/code&gt; file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;0.0.0.0 ols.officeapps.live.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Install a blank key for the edition you want to use.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Please note these steps are an example. As stated before, no direct support will be provided for usage of this method. You should use one of the solutions provided by our &lt;strong&gt;authorized&lt;/strong&gt; partners and direct your support queries to them.&lt;/p&gt; &#xA;&lt;h2&gt;Blank keys&lt;/h2&gt; &#xA;&lt;p&gt;The table contains keys for probably the most needed editions.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Edition&lt;/th&gt; &#xA;   &lt;th&gt;Marketing Name&lt;/th&gt; &#xA;   &lt;th&gt;Key&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;O365HomePrem&lt;/td&gt; &#xA;   &lt;td&gt;Microsoft 365&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;NBBBB-BBBBB-BBBBB-BBBBG-234RY&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;O365ProPlus&lt;/td&gt; &#xA;   &lt;td&gt;Microsoft 365 Apps for enterprise&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;NBBBB-BBBBB-BBBBB-BBBCF-PPK9C&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;How does this even work?&lt;/h2&gt; &#xA;&lt;p&gt;As some would say, &#34;It&#39;s trivial.&#34;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;sppc.dll&lt;/code&gt; copied to the &lt;code&gt;System&lt;/code&gt; directory in the Office is used instead of the system library.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The only real license check is done during the startup of the Office applications using the &lt;code&gt;SLGetLicensingStatusInformation&lt;/code&gt; function.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;SLGetLicensingStatusInformation&lt;/code&gt; function can be easily hooked to lie about the activation status.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Why not just use a subscription edition with Mondo licenses?&lt;/h3&gt; &#xA;&lt;p&gt;This will be probably the most frequently asked question.&lt;/p&gt; &#xA;&lt;p&gt;While Mondo 2016 licenses allow all the Office applications to work and support KMS activation, these are only partially updated for newer versions of Office. Thus, the product policy provided by these licenses lack some of the policies found in licenses for newer versions. Since Office product policy mainly consist of entries like &lt;code&gt;office-UUID&lt;/code&gt;, there is no way to verify which features may not work.&lt;/p&gt; &#xA;&lt;p&gt;With this method, a correct license for the installed edition is used, meaning every feature should work as intended.&lt;/p&gt; &#xA;&lt;p&gt;There are also other issues with installing license files from other editions but we won&#39;t be bothering with them.&lt;/p&gt; &#xA;&lt;h3&gt;Why do some editions require the hosts file modification?&lt;/h3&gt; &#xA;&lt;p&gt;After the license check, these editions make a request to the &lt;code&gt;ols.officeapps.live.com&lt;/code&gt; service to retrieve an expiration date of user&#39;s subscription. This is done in order to evaluate should the local license be renewed. Since the service replies there is no subscription associated with the device, a notification is shown. Blocking access to the service prevents Office from being told the truth.&lt;/p&gt; &#xA;&lt;h3&gt;Does this enable 1TB of storage on OneDrive?&lt;/h3&gt; &#xA;&lt;p&gt;No.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The project is licensed under the terms of the MIT License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>M01N-Team/HeaderLessPE</title>
    <updated>2023-09-29T01:24:17Z</updated>
    <id>tag:github.com,2023-09-29:/M01N-Team/HeaderLessPE</id>
    <link href="https://github.com/M01N-Team/HeaderLessPE" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;HeaderLessPE&lt;/h1&gt; &#xA;&lt;h2&gt;Introduction (&lt;a href=&#34;https://raw.githubusercontent.com/M01N-Team/HeaderLessPE/master/README_zh.md&#34;&gt;中文&lt;/a&gt;)&lt;/h2&gt; &#xA;&lt;p&gt;HeaderLessPE is a memory PE loading technique used by the Icedid Trojan. Based on this technology, we propose a new way of file-less attack using HVNC . This enhancement allows to inject HeaderLessPE into execute graphical hacking tools without limitations. Compared to other in-memory loading techniques like MemDll, the extended HeaderLessPE has two advantages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Avoids the traditional DOS and PE headers IOC&lt;/strong&gt; The DOS header and PE header are often focal points for memory scanning, requiring the use of a Profile file to erase the loaded Beacon header when using Cobalt Strike. With HeaderLessPE, you don&#39;t need to worry about this issue.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Supports relocation and import tables, making it easy to convert EXEs into HeaderLessPE structures&lt;/strong&gt; As long as it supports relocation and does not include structures such as Tls and delay import, it can be converted into HeaderLessPE. This can be used not only for creating Trojan memory modules but also for conveniently converting some hacking tools into HeaderLessPE for in-memory loading and execution, expanding the available attack tools.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/M01N-Team/HeaderLessPE/raw/master/image/1.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/M01N-Team/HeaderLessPE/master/image/1.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;TEST&lt;/h2&gt; &#xA;&lt;p&gt;tools.exe -i &#34;desktop_name&#34; c:\windows\system32\mspaint.exe loader.exe BrowsingHistoryView.exe&lt;/p&gt; &#xA;&lt;p&gt;This will run the BrowsingHistoryView tool without a file on the desktop_name desktop.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/M01N-Team/HeaderLessPE/raw/master/image/1.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/M01N-Team/HeaderLessPE/master/image/2.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Article Link：&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzkyMTI0NjA3OA==&amp;amp;mid=2247492342&amp;amp;idx=1&amp;amp;sn=f3e7bd34d73946e294756cce75181c83&amp;amp;chksm=c18422e7f6f3abf168a3c11a48bee1778dc67a5e7f4e1a02fc0461af0bbe0f18476d7215194e&amp;amp;token=1954079270&amp;amp;lang=zh_CN#rd&#34;&gt;https://mp.weixin.qq.com/s?__biz=MzkyMTI0NjA3OA==&amp;amp;mid=2247492342&amp;amp;idx=1&amp;amp;sn=f3e7bd34d73946e294756cce75181c83&amp;amp;chksm=c18422e7f6f3abf168a3c11a48bee1778dc67a5e7f4e1a02fc0461af0bbe0f18476d7215194e&amp;amp;token=1954079270&amp;amp;lang=zh_CN#rd&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reference&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/strivexjun/MemoryModulePP.git&#34;&gt;https://github.com/strivexjun/MemoryModulePP.git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://doxygen.reactos.org&#34;&gt;https://doxygen.reactos.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hasherezade/pe-sieve.git&#34;&gt;https://github.com/hasherezade/pe-sieve.git&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bbs.kanxue.com/thread-264956.htm&#34;&gt;https://bbs.kanxue.com/thread-264956.htm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>