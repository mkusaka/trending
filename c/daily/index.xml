<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-27T01:32:07Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>esnet/iperf</title>
    <updated>2022-08-27T01:32:07Z</updated>
    <id>tag:github.com,2022-08-27:/esnet/iperf</id>
    <link href="https://github.com/esnet/iperf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;iperf3: A TCP, UDP, and SCTP network bandwidth measurement tool&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;iperf3: A TCP, UDP, and SCTP network bandwidth measurement tool&lt;/h1&gt; &#xA;&lt;h2&gt;Summary&lt;/h2&gt; &#xA;&lt;p&gt;iperf is a tool for active measurements of the maximum achievable bandwidth on IP networks. It supports tuning of various parameters related to timing, protocols, and buffers. For each test it reports the measured throughput / bitrate, loss, and other parameters.&lt;/p&gt; &#xA;&lt;p&gt;This version, sometimes referred to as iperf3, is a redesign of an original version developed at NLANR/DAST. iperf3 is a new implementation from scratch, with the goal of a smaller, simpler code base, and a library version of the functionality that can be used in other programs. iperf3 also has a number of features found in other tools such as nuttcp and netperf, but were missing from the original iperf. These include, for example, a zero-copy mode and optional JSON output. Note that iperf3 is &lt;em&gt;not&lt;/em&gt; backwards compatible with the original iperf.&lt;/p&gt; &#xA;&lt;p&gt;Primary development for iperf3 takes place on CentOS Linux, FreeBSD, and macOS. At this time, these are the only officially supported platforms, however there have been some reports of success with OpenBSD, NetBSD, Android, Solaris, and other Linux distributions.&lt;/p&gt; &#xA;&lt;p&gt;iperf3 is principally developed by ESnet / Lawrence Berkeley National Laboratory. It is released under a three-clause BSD license.&lt;/p&gt; &#xA;&lt;p&gt;For more information see: &lt;a href=&#34;https://software.es.net/iperf&#34;&gt;https://software.es.net/iperf&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Source code and issue tracker: &lt;a href=&#34;https://github.com/esnet/iperf&#34;&gt;https://github.com/esnet/iperf&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Discussion forums: &lt;a href=&#34;https://github.com/esnet/iperf/discussions&#34;&gt;https://github.com/esnet/iperf/discussions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Obtaining iperf3&lt;/h2&gt; &#xA;&lt;p&gt;Downloads of iperf3 are available at:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://downloads.es.net/pub/iperf/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To check out the most recent code, clone the git repository at:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://github.com/esnet/iperf.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building iperf3&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites:&lt;/h3&gt; &#xA;&lt;p&gt;None.&lt;/p&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;./configure; make; make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(Note: If configure fails, try running &lt;code&gt;./bootstrap.sh&lt;/code&gt; first)&lt;/p&gt; &#xA;&lt;h2&gt;Invoking iperf3&lt;/h2&gt; &#xA;&lt;p&gt;iperf3 includes a manual page listing all of the command-line options. The manual page is the most up-to-date reference to the various flags and parameters.&lt;/p&gt; &#xA;&lt;p&gt;For sample command line usage, see:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://fasterdata.es.net/performance-testing/network-troubleshooting-tools/iperf/&#34;&gt;https://fasterdata.es.net/performance-testing/network-troubleshooting-tools/iperf/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Using the default options, iperf is meant to show typical well designed application performance. &#34;Typical well designed application&#34; means avoiding artificial enhancements that work only for testing (such as splice()&#39;ing the data to /dev/null). iperf does also have flags for &#34;extreme best case&#34; optimizations, but they must be explicitly activated.&lt;/p&gt; &#xA;&lt;p&gt;These flags include:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-Z, --zerocopy            use a &#39;zero copy&#39; sendfile() method of sending data&#xA;-A, --affinity n/n,m      set CPU affinity&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Bug Reports&lt;/h2&gt; &#xA;&lt;p&gt;Before submitting a bug report, please make sure you&#39;re running the latest version of the code, and confirm that your issue has not already been fixed. Then submit to the iperf3 issue tracker on GitHub:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/esnet/iperf/issues&#34;&gt;https://github.com/esnet/iperf/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In your issue submission, please indicate the version of iperf3 and what platform you&#39;re trying to run on (provide the platform information even if you&#39;re not using a supported platform, we &lt;em&gt;might&lt;/em&gt; be able to help anyway). Exact command-line arguments will help us recreate your problem. If you&#39;re getting error messages, please include them verbatim if possible, but remember to sanitize any sensitive information.&lt;/p&gt; &#xA;&lt;p&gt;If you have a question about usage or about the code, please do &lt;em&gt;not&lt;/em&gt; submit an issue. Please use one of the mailing lists for that.&lt;/p&gt; &#xA;&lt;h2&gt;Relation to iperf 2.x&lt;/h2&gt; &#xA;&lt;p&gt;Although iperf2 and iperf3 both measure network performance, they are not compatible with each other. The projects (as of mid-2021) are in active, but separate, development. The continuing iperf2 development project can be found at &lt;a href=&#34;https://sourceforge.net/projects/iperf2/&#34;&gt;https://sourceforge.net/projects/iperf2/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;iperf3 contains a number of options and functions not present in iperf2. In addition, some flags are changed from their iperf2 counterparts:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-C, --linux-congestion    set congestion control algorithm (Linux only)&#xA;                          (-Z in iperf2)&#xA;--bidir                   bidirectional testing mode&#xA;                          (-d in iperf2)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some iperf2 options are not available in iperf3:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-r, --tradeoff           Do a bidirectional test individually&#xA;-T, --ttl                time-to-live, for multicast (default 1)&#xA;-x, --reportexclude [CDMSV]   exclude C(connection) D(data) M(multicast)&#xA;                              S(settings) V(server) reports&#xA;-y, --reportstyle C      report as a Comma-Separated Values&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also removed is the ability to set the options via environment variables.&lt;/p&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;p&gt;A set of known issues is maintained on the iperf3 Web pages:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://software.es.net/iperf/dev.html#known-issues&#34;&gt;https://software.es.net/iperf/dev.html#known-issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;p&gt;This section lists links to user-contributed Web pages regarding iperf3. ESnet and Lawrence Berkeley National Laboratory bear no responsibility for the content of these pages.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Installation instructions for Debian Linux (by Cameron Camp &lt;a href=&#34;mailto:cameron@ivdatacenter.com&#34;&gt;cameron@ivdatacenter.com&lt;/a&gt;):&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://cheatsheet.logicalwebhost.com/iperf-network-testing/&#34;&gt;http://cheatsheet.logicalwebhost.com/iperf-network-testing/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;iperf, Copyright (c) 2014-2022, The Regents of the University of California, through Lawrence Berkeley National Laboratory (subject to receipt of any required approvals from the U.S. Dept. of Energy). All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;If you have questions about your rights to use or distribute this software, please contact Berkeley Lab&#39;s Technology Transfer Department at &lt;a href=&#34;mailto:TTD@lbl.gov&#34;&gt;TTD@lbl.gov&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;NOTICE. This software is owned by the U.S. Department of Energy. As such, the U.S. Government has been granted for itself and others acting on its behalf a paid-up, nonexclusive, irrevocable, worldwide license in the Software to reproduce, prepare derivative works, and perform publicly and display publicly. Beginning five (5) years after the date permission to assert copyright is obtained from the U.S. Department of Energy, and subject to any subsequent five (5) year renewals, the U.S. Government is granted for itself and others acting on its behalf a paid-up, nonexclusive, irrevocable, worldwide license in the Software to reproduce, prepare derivative works, distribute copies to the public, perform publicly and display publicly, and to permit others to do so.&lt;/p&gt; &#xA;&lt;p&gt;This code is distributed under a BSD style license, see the LICENSE file for complete information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>thesourcerer8/hddsuperclone</title>
    <updated>2022-08-27T01:32:07Z</updated>
    <id>tag:github.com,2022-08-27:/thesourcerer8/hddsuperclone</id>
    <link href="https://github.com/thesourcerer8/hddsuperclone" rel="alternate"></link>
    <summary type="html">&lt;p&gt;HDDSuperClone, HDDSuperTool&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;hddsuperclone&lt;/h1&gt; &#xA;&lt;p&gt;HDDSuperClone, HDDSuperTool&lt;/p&gt; &#xA;&lt;p&gt;This repository continues the work on HDDSuperClone that was originally developed by (C) 2015-2022 Scott Dwyer and released under the GPL2 in 2022. You can find the original website and more information here: &lt;a href=&#34;http://www.hddsuperclone.com/&#34;&gt;http://www.hddsuperclone.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Other software that is used:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SMTP Client: &lt;a href=&#34;https://github.com/somnisoft/smtp-client&#34;&gt;https://github.com/somnisoft/smtp-client&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GLADE: &lt;a href=&#34;https://glade.gnome.org/&#34;&gt;https://glade.gnome.org/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The Live-CD is using the following software:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GNU ddrescue &lt;a href=&#34;https://www.gnu.org/software/ddrescue/&#34;&gt;https://www.gnu.org/software/ddrescue/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ddrescueview: &lt;a href=&#34;https://sourceforge.net/p/ddrescueview&#34;&gt;https://sourceforge.net/p/ddrescueview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ddrutility: &lt;a href=&#34;https://sourceforge.net/projects/ddrutility/&#34;&gt;https://sourceforge.net/projects/ddrutility/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;DMDE: &lt;a href=&#34;https://dmde.com/&#34;&gt;https://dmde.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;hddscviewer: &lt;a href=&#34;https://www.sdcomputingservice.com/hddscviewer&#34;&gt;https://www.sdcomputingservice.com/hddscviewer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;hdparm: &lt;a href=&#34;https://sourceforge.net/projects/hdparm/&#34;&gt;https://sourceforge.net/projects/hdparm/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;isolinux: &lt;a href=&#34;https://wiki.syslinux.org/wiki/index.php?title=ISOLINUX&#34;&gt;https://wiki.syslinux.org/wiki/index.php?title=ISOLINUX&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Building:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;git clone github.com/thesourcerer8/hddsuperclone&lt;/li&gt; &#xA; &lt;li&gt;cd hddsuperclone&lt;/li&gt; &#xA; &lt;li&gt;make&lt;/li&gt; &#xA; &lt;li&gt;sudo ./hddsuperclone&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>stephane/libmodbus</title>
    <updated>2022-08-27T01:32:07Z</updated>
    <id>tag:github.com,2022-08-27:/stephane/libmodbus</id>
    <link href="https://github.com/stephane/libmodbus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Modbus library for Linux, Mac OS, FreeBSD and Windows&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;A groovy modbus library&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/stephane/libmodbus/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;libmodbus is a free software library to send/receive data with a device which respects the Modbus protocol. This library can use a serial port or an Ethernet connection.&lt;/p&gt; &#xA;&lt;p&gt;The functions included in the library have been derived from the Modicon Modbus Protocol Reference Guide which can be obtained from &lt;a href=&#34;http://www.modbus.org&#34;&gt;www.modbus.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The license of libmodbus is &lt;em&gt;LGPL v2.1 or later&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The official website is &lt;a href=&#34;http://www.libmodbus.org&#34;&gt;www.libmodbus.org&lt;/a&gt;. The website contains the latest version of the documentation.&lt;/p&gt; &#xA;&lt;p&gt;The library is written in C and designed to run on Linux, Mac OS X, FreeBSD, Embox, QNX and Windows.&lt;/p&gt; &#xA;&lt;p&gt;You can use the library on MCUs with Embox RTOS.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You will only need to install automake, autoconf, libtool and a C compiler (gcc or clang) to compile the library and asciidoc and xmlto to generate the documentation (optional).&lt;/p&gt; &#xA;&lt;p&gt;To install, just run the usual dance, &lt;code&gt;./configure &amp;amp;&amp;amp; make install&lt;/code&gt;. Run &lt;code&gt;./autogen.sh&lt;/code&gt; first to generate the &lt;code&gt;configure&lt;/code&gt; script if required.&lt;/p&gt; &#xA;&lt;p&gt;You can change installation directory with prefix option, eg. &lt;code&gt;./configure --prefix=/usr/local/&lt;/code&gt;. You have to check that the installation library path is properly set up on your system (&lt;em&gt;/etc/ld.so.conf.d&lt;/em&gt;) and library cache is up to date (run &lt;code&gt;ldconfig&lt;/code&gt; as root if required).&lt;/p&gt; &#xA;&lt;p&gt;The library provides a &lt;em&gt;libmodbus.pc&lt;/em&gt; file to use with &lt;code&gt;pkg-config&lt;/code&gt; to ease your program compilation and linking.&lt;/p&gt; &#xA;&lt;p&gt;If you want to compile with Microsoft Visual Studio, you need to install &lt;a href=&#34;https://github.com/chemeris/msinttypes&#34;&gt;https://github.com/chemeris/msinttypes&lt;/a&gt; to fill the absence of stdint.h.&lt;/p&gt; &#xA;&lt;p&gt;To compile under Windows, install &lt;a href=&#34;http://www.mingw.org/&#34;&gt;MinGW&lt;/a&gt; and MSYS then select the common packages (gcc, automake, libtool, etc). The directory &lt;em&gt;./src/win32/&lt;/em&gt; contains a Visual C project.&lt;/p&gt; &#xA;&lt;p&gt;To compile under OS X with &lt;a href=&#34;http://mxcl.github.com/homebrew/&#34;&gt;homebrew&lt;/a&gt;, you will need to install the following dependencies first: &lt;code&gt;brew install autoconf automake libtool&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To build under Embox, you have to use its build system.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;Some tests are provided in &lt;em&gt;tests&lt;/em&gt; directory, you can freely edit the source code to fit your needs (it&#39;s Free Software :).&lt;/p&gt; &#xA;&lt;p&gt;See &lt;em&gt;tests/README&lt;/em&gt; for a description of each program.&lt;/p&gt; &#xA;&lt;p&gt;For a quick test of libmodbus, you can run the following programs in two shells:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;./unit-test-server&lt;/li&gt; &#xA; &lt;li&gt;./unit-test-client&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;By default, all TCP unit tests will be executed (see --help for options).&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s also possible to run the unit tests with &lt;code&gt;make check&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;To report a bug or to contribute&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/stephane/libmodbus/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; document.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can serve the local documentation with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pip install mkdocs-material&#xA;mkdocs serve&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>