<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-28T01:28:19Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>rhboot/shim</title>
    <updated>2024-01-28T01:28:19Z</updated>
    <id>tag:github.com,2024-01-28:/rhboot/shim</id>
    <link href="https://github.com/rhboot/shim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;UEFI shim loader&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;shim, a first-stage UEFI bootloader&lt;/h1&gt; &#xA;&lt;p&gt;shim is a trivial EFI application that, when run, attempts to open and execute another application. It will initially attempt to do this via the standard EFI &lt;code&gt;LoadImage()&lt;/code&gt; and &lt;code&gt;StartImage()&lt;/code&gt; calls. If these fail (because Secure Boot is enabled and the binary is not signed with an appropriate key, for instance) it will then validate the binary against a built-in certificate. If this succeeds and if the binary or signing key are not forbidden then shim will relocate and execute the binary.&lt;/p&gt; &#xA;&lt;p&gt;shim will also install a protocol which permits the second-stage bootloader to perform similar binary validation. This protocol has a GUID as described in the shim.h header file and provides a single entry point. On 64-bit systems this entry point expects to be called with SysV ABI rather than MSABI, so calls to it should not be wrapped.&lt;/p&gt; &#xA;&lt;p&gt;On systems with a TPM chip enabled and supported by the system firmware, shim will extend various PCRs with the digests of the targets it is loading. A full list is in the file &lt;a href=&#34;https://raw.githubusercontent.com/rhboot/shim/main/README.tpm&#34;&gt;README.tpm&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;p&gt;To use shim, simply place a DER-encoded public certificate in a file such as pub.cer and build with &lt;code&gt;make VENDOR_CERT_FILE=pub.cer&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There are a couple of build options, and a couple of ways to customize the build, described in &lt;a href=&#34;https://raw.githubusercontent.com/rhboot/shim/main/BUILDING&#34;&gt;BUILDING&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/rhboot/shim/main/testplan.txt&#34;&gt;test plan&lt;/a&gt;, and file a ticket if anything fails!&lt;/p&gt; &#xA;&lt;p&gt;In the event that the developers need to be contacted related to a security incident or vulnerability, please mail &lt;a href=&#34;mailto:secalert@redhat.com&#34;&gt;secalert@redhat.com&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>