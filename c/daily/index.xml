<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-18T01:24:57Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>UnknownShadow200/ClassiCube</title>
    <updated>2023-09-18T01:24:57Z</updated>
    <id>tag:github.com,2023-09-18:/UnknownShadow200/ClassiCube</id>
    <link href="https://github.com/UnknownShadow200/ClassiCube" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Custom Minecraft Classic / ClassiCube client written in C from scratch (formerly ClassicalSharp in C#)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;ClassiCube is a custom Minecraft Classic compatible client written in C from scratch.&lt;br&gt; &lt;strong&gt;It is not affiliated with (or supported by) Mojang AB, Minecraft, or Microsoft in any way.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://i.imgur.com/FCiwl27.png&#34; alt=&#34;screenshot_n&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Supported systems&lt;/h3&gt; &#xA;&lt;p&gt;ClassiCube runs on:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows - 95 and later&lt;/li&gt; &#xA; &lt;li&gt;macOS - 10.5 or later (but can be compiled to work with 10.3/10.4 though)&lt;/li&gt; &#xA; &lt;li&gt;Linux - needs &lt;code&gt;libcurl&lt;/code&gt; and &lt;code&gt;libopenal&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Android - 2.3 or later&lt;/li&gt; &#xA; &lt;li&gt;iOS - 10.3 or later&lt;/li&gt; &#xA; &lt;li&gt;Most web browsers (even runs on IE11)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;And also runs on:&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; Raspberry Pi - needs &lt;code&gt;libcurl&lt;/code&gt; and &lt;code&gt;libopenal&lt;/code&gt; &lt;/li&gt; &#xA;  &lt;li&gt; FreeBSD - needs &lt;code&gt;libexecinfo&lt;/code&gt;, &lt;code&gt;curl&lt;/code&gt; and &lt;code&gt;openal-soft&lt;/code&gt; packages &lt;/li&gt; &#xA;  &lt;li&gt; NetBSD - needs &lt;code&gt;libexecinfo&lt;/code&gt;, &lt;code&gt;curl&lt;/code&gt; and &lt;code&gt;openal-soft&lt;/code&gt; packages &lt;/li&gt; &#xA;  &lt;li&gt; OpenBSD - needs &lt;code&gt;libexecinfo&lt;/code&gt;, &lt;code&gt;curl&lt;/code&gt; and &lt;code&gt;openal&lt;/code&gt; packages &lt;/li&gt; &#xA;  &lt;li&gt; Solaris - needs &lt;code&gt;curl&lt;/code&gt; and &lt;code&gt;openal&lt;/code&gt; packages &lt;/li&gt; &#xA;  &lt;li&gt; Haiku - needs &lt;code&gt;openal&lt;/code&gt; package &lt;/li&gt; &#xA;  &lt;li&gt; BeOS - untested on actual hardware &lt;/li&gt; &#xA;  &lt;li&gt; IRIX - needs &lt;code&gt;curl&lt;/code&gt; and &lt;code&gt;openal&lt;/code&gt; packages &lt;/li&gt; &#xA;  &lt;li&gt; SerenityOS - needs &lt;code&gt;SDL2&lt;/code&gt; &lt;/li&gt; &#xA;  &lt;li&gt; 3DS - unfinished, but &lt;a href=&#34;https://github.com/UnknownShadow200/ClassiCube/actions/workflows/build_3ds.yml&#34;&gt;usable&lt;/a&gt; &lt;/li&gt; &#xA;  &lt;li&gt; Wii - unfinished, but &lt;a href=&#34;https://github.com/UnknownShadow200/ClassiCube/actions/workflows/build_wiigc.yml&#34;&gt;usable&lt;/a&gt; &lt;/li&gt; &#xA;  &lt;li&gt; GameCube - unfinished, but &lt;a href=&#34;https://github.com/UnknownShadow200/ClassiCube/actions/workflows/build_wiigc.yml&#34;&gt;usable&lt;/a&gt; &lt;/li&gt; &#xA;  &lt;li&gt; PSP - unfinished, rendering issues &lt;/li&gt; &#xA;  &lt;li&gt; Dreamcast - unfinished, but renders &lt;/li&gt; &#xA;  &lt;li&gt; PS Vita - majorly unfinished &lt;/li&gt; &#xA;  &lt;li&gt; Xbox - majorly unfinished &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;You can download ClassiCube &lt;a href=&#34;https://www.classicube.net/download/&#34;&gt;from here&lt;/a&gt; and the very latest builds &lt;a href=&#34;https://www.classicube.net/nightlies/&#34;&gt;from here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;We need your help&lt;/h3&gt; &#xA;&lt;p&gt;ClassiCube strives to support providing an experience identical to the original Minecraft Classic by &lt;strong&gt;strictly following a &lt;a href=&#34;https://en.wikipedia.org/wiki/Clean_room_design&#34;&gt;clean room&lt;/a&gt; reverse engineering approach&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re interested in documenting or verifying the behaviour of the original Minecraft Classic, please get in contact with me. (&lt;code&gt;unknownshadow200&lt;/code&gt; on Discord)&lt;/p&gt; &#xA;&lt;h2&gt;Information&lt;/h2&gt; &#xA;&lt;h4&gt;What ClassiCube is&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A complete re-implementation of Minecraft Classic 0.30, with &lt;strong&gt;optional&lt;/strong&gt; additions&lt;/li&gt; &#xA; &lt;li&gt;Partially supports some features of Minecraft Classic versions before 0.30&lt;/li&gt; &#xA; &lt;li&gt;Lightweight, minimal memory usage compared to original Minecraft Classic&lt;/li&gt; &#xA; &lt;li&gt;Much better performance than original Minecraft Classic&lt;/li&gt; &#xA; &lt;li&gt;Works with effectively all graphics cards that support OpenGL or Direct3D 9&lt;/li&gt; &#xA; &lt;li&gt;Runs on Windows, macOS, Linux, Android, iOS, and in a web browser&lt;/li&gt; &#xA; &lt;li&gt;Also runs on OpenBSD, FreeBSD, NetBSD, Solaris, Haiku, IRIX, SerenityOS&lt;/li&gt; &#xA; &lt;li&gt;Although still work in progresses, also runs on various consoles&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;What ClassiCube isn&#39;t&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It does not work with Minecraft Java or Bedrock edition servers&lt;/li&gt; &#xA; &lt;li&gt;It does not have a survival mode (nor will such a mode be added)&lt;/li&gt; &#xA; &lt;li&gt;It does not support logging in with Mojang/Minecraft accounts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; When running from within VirtualBox, disable Mouse Integration, otherwise the camera will not work properly&lt;/p&gt; &#xA;&lt;h4&gt;Instructions&lt;/h4&gt; &#xA;&lt;p&gt;Initially, you will need to run ClassiCube.exe to download the required assets from minecraft.net and classicube.net.&lt;br&gt; Just click &#39;OK&#39; to the dialog menu that appears when you start the launcher.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Singleplayer&lt;/strong&gt; Run ClassiCube.exe, then click Singleplayer at the main menu.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Multiplayer&lt;/strong&gt; Run ClassiCube.exe. You can connect to LAN/locally hosted servers, and classicube.net servers if you have a &lt;a href=&#34;https://www.classicube.net/&#34;&gt;ClassiCube account&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;&lt;em&gt;Stuck on OpenGL 1.1?&lt;/em&gt;&lt;/h5&gt; &#xA;&lt;p&gt;The most common reason for being stuck on OpenGL 1.1 is non-working GPU drivers - so if possible, you should try either installing or updating the drivers for your GPU.&lt;/p&gt; &#xA;&lt;p&gt;Otherwise:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On Windows, you can still run the OpenGL build of ClassiCube anyways. (You can try downloading and using the MESA software renderer from &lt;a href=&#34;http://download.qt.io/development_releases/prebuilt/llvmpipe/windows/&#34;&gt;here&lt;/a&gt; for slightly better performance though)&lt;/li&gt; &#xA; &lt;li&gt;On other operating systems, you will have to &lt;a href=&#34;https://raw.githubusercontent.com/UnknownShadow200/ClassiCube/master/#Compiling&#34;&gt;compile the game yourself&lt;/a&gt;. Don&#39;t forget to add &lt;code&gt;-DCC_BUILD_GL11&lt;/code&gt; to the compilation command line so that the compiled game supports OpenGL 1.1.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Compiling&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: The various instructions below automatically compile ClassiCube with the recommended defaults for the platform. &lt;br&gt; If you (not recommended) want to override the defaults (e.g. to compile OpenGL build on Windows), see &lt;a href=&#34;https://raw.githubusercontent.com/UnknownShadow200/ClassiCube/master/doc/overriding-defaults.md&#34;&gt;here&lt;/a&gt; for details.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Compiling - Windows&lt;/h2&gt; &#xA;&lt;h5&gt;Using Visual Studio&lt;/h5&gt; &#xA;&lt;p&gt;Open ClassiCube.sln &lt;em&gt;(File -&amp;gt; Open -&amp;gt; Project/Solution)&lt;/em&gt; and compile it &lt;em&gt;(Build -&amp;gt; Build Solution)&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you get a &lt;code&gt;The Windows SDK version 5.1 was not found&lt;/code&gt; compilation error, &lt;a href=&#34;https://raw.githubusercontent.com/UnknownShadow200/ClassiCube/master/doc/compile-fixes.md#visual-studio-unsupported-platform-toolset&#34;&gt;see here for how to fix&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Using Visual Studio (command line)&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use &#39;Developer Tools for Visual Studio&#39; from Start Menu&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the directory with ClassiCube&#39;s source code&lt;/li&gt; &#xA; &lt;li&gt;Enter &lt;code&gt;cl.exe *.c /link user32.lib gdi32.lib winmm.lib dbghelp.lib shell32.lib comdlg32.lib /out:ClassiCube.exe&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h5&gt;Using MinGW-w64&lt;/h5&gt; &#xA;&lt;p&gt;I am assuming you used the installer from &lt;a href=&#34;https://sourceforge.net/projects/mingw-w64/&#34;&gt;https://sourceforge.net/projects/mingw-w64/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install MinGW-W64&lt;/li&gt; &#xA; &lt;li&gt;Use either &lt;em&gt;Run Terminal&lt;/em&gt; from Start Menu or run &lt;em&gt;mingw-w64.bat&lt;/em&gt; in the installation folder&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the directory with ClassiCube&#39;s source code&lt;/li&gt; &#xA; &lt;li&gt;Enter &lt;code&gt;gcc *.c -o ClassiCube.exe -mwindows -lwinmm -limagehlp&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h5&gt;Using MinGW&lt;/h5&gt; &#xA;&lt;p&gt;I am assuming you used the installer from &lt;a href=&#34;https://osdn.net/projects/mingw/&#34;&gt;https://osdn.net/projects/mingw/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install MinGW. You need mingw32-base-bin and msys-base-bin packages.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;em&gt;msys.bat&lt;/em&gt; in the &lt;em&gt;C:\MinGW\msys\1.0&lt;/em&gt; folder.&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the directory with ClassiCube&#39;s source code&lt;/li&gt; &#xA; &lt;li&gt;Enter &lt;code&gt;gcc *.c -o ClassiCube.exe -mwindows -lwinmm -limagehlp&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h5&gt;Using TCC (Tiny C Compiler)&lt;/h5&gt; &#xA;&lt;p&gt;I am assuming you used &lt;code&gt;tcc-0.9.27-win64-bin.zip&lt;/code&gt; from &lt;a href=&#34;https://bellard.org/tcc/&#34;&gt;https://bellard.org/tcc/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Extract the .zip file&lt;/li&gt; &#xA; &lt;li&gt;In TCC&#39;s &lt;code&gt;lib/kernel32.def&lt;/code&gt;, add missing &lt;code&gt;RtlCaptureContext&lt;/code&gt; at line 554 (In between &lt;code&gt;RtlAddFunctionTable&lt;/code&gt; and &lt;code&gt;RtlDeleteFunctionTable&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Copy &lt;code&gt;winapi&lt;/code&gt; folder and &lt;code&gt;_mingw_dxhelper.h&lt;/code&gt; from &lt;code&gt;winapi-full-for-0.9.27.zip&lt;/code&gt; into TCC&#39;s &lt;code&gt;include&lt;/code&gt; folder&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the directory with ClassiCube&#39;s source code&lt;/li&gt; &#xA; &lt;li&gt;In &lt;code&gt;ExtMath.c&lt;/code&gt;, change &lt;code&gt;fabsf&lt;/code&gt; to &lt;code&gt;fabs&lt;/code&gt; and &lt;code&gt;sqrtf&lt;/code&gt; to &lt;code&gt;sqrtf&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enter &lt;code&gt;tcc.exe -o ClassiCube.exe *.c -lwinmm -limagehlp -lgdi32 -luser32 -lcomdlg32 -lshell32&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Compiling - Linux&lt;/h2&gt; &#xA;&lt;h5&gt;Using gcc/clang&lt;/h5&gt; &#xA;&lt;p&gt;Install appropriate libs as required. For ubuntu these are: libx11-dev, libxi-dev and libgl1-mesa-dev&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;gcc *.c -o ClassiCube -rdynamic -lm -lpthread -lX11 -lXi -lGL -ldl&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Cross compiling for Windows (32 bit):&lt;/h5&gt; &#xA;&lt;p&gt;&lt;code&gt;i686-w64-mingw32-gcc *.c -o ClassiCube.exe -mwindows -lwinmm -limagehlp&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Cross compiling for Windows (64 bit):&lt;/h5&gt; &#xA;&lt;p&gt;&lt;code&gt;x86_64-w64-mingw32-gcc *.c -o ClassiCube.exe -mwindows -lwinmm -limagehlp&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Raspberry Pi&lt;/h5&gt; &#xA;&lt;p&gt;Although the regular linux compiliation flags will work fine, to take full advantage of the hardware:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;gcc *.c -o ClassiCube -DCC_BUILD_RPI -rdynamic -lm -lpthread -lX11 -lXi -lEGL -lGLESv2 -ldl&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Compiling - macOS&lt;/h2&gt; &#xA;&lt;h5&gt;Using gcc/clang (32 bit)&lt;/h5&gt; &#xA;&lt;p&gt;&lt;code&gt;cc *.c -o ClassiCube -framework Carbon -framework AGL -framework OpenGL -framework IOKit&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Using gcc/clang (64 bit)&lt;/h5&gt; &#xA;&lt;p&gt;&lt;code&gt;cc *.c interop_cocoa.m -o ClassiCube -framework Cocoa -framework OpenGL -framework IOKit -lobjc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Compiling - for Android&lt;/h2&gt; &#xA;&lt;p&gt;NOTE: If you are distributing a modified version, please change the package ID from &lt;code&gt;com.classicube.android.client&lt;/code&gt; to something else - otherwise Android users won&#39;t be able to have both ClassiCube and your modified version installed at the same time on their Android device&lt;/p&gt; &#xA;&lt;h5&gt;Using Android Studio GUI&lt;/h5&gt; &#xA;&lt;p&gt;Open &lt;code&gt;android&lt;/code&gt; folder in Android Studio (TODO explain more detailed)&lt;/p&gt; &#xA;&lt;h5&gt;Using command line (gradle)&lt;/h5&gt; &#xA;&lt;p&gt;Run &lt;code&gt;gradlew&lt;/code&gt; in android folder (TODO explain more detailed)&lt;/p&gt; &#xA;&lt;h2&gt;Compiling - for iOS&lt;/h2&gt; &#xA;&lt;p&gt;iOS version will have issues as it&#39;s incomplete and only tested in iOS Simulator&lt;/p&gt; &#xA;&lt;p&gt;NOTE: If you are distributing a modified version, please change the bundle ID from &lt;code&gt;com.classicube.ios.client&lt;/code&gt; to something else - otherwise iOS users won&#39;t be able to have both ClassiCube and your modified version installed at the same time on their iOS device&lt;/p&gt; &#xA;&lt;h5&gt;Using Xcode GUI&lt;/h5&gt; &#xA;&lt;p&gt;Import &lt;code&gt;ios/CCIOS.xcodeproj&lt;/code&gt; project into Xcode (TODO explain more detailed)&lt;/p&gt; &#xA;&lt;h5&gt;Using command line (Xcode)&lt;/h5&gt; &#xA;&lt;p&gt;&lt;code&gt;xcodebuild -sdk iphoneos -configuration Debug&lt;/code&gt; (TODO explain more detailed)&lt;/p&gt; &#xA;&lt;h2&gt;Compiling - other desktop OSes&lt;/h2&gt; &#xA;&lt;h4&gt;FreeBSD&lt;/h4&gt; &#xA;&lt;p&gt;Install libxi, libexecinfo, curl and openal-soft package if needed&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cc *.c -o ClassiCube -I /usr/local/include -L /usr/local/lib -lm -lpthread -lX11 -lXi -lGL -lexecinfo&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;OpenBSD&lt;/h4&gt; &#xA;&lt;p&gt;Install libexecinfo, curl and openal package if needed&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cc *.c -o ClassiCube -I /usr/X11R6/include -I /usr/local/include -L /usr/X11R6/lib -L /usr/local/lib -lm -lpthread -lX11 -lXi -lGL -lexecinfo&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;NetBSD&lt;/h4&gt; &#xA;&lt;p&gt;Install libexecinfo, curl and openal-soft package if needed&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cc *.c -o ClassiCube -I /usr/X11R7/include -I /usr/pkg/include -L /usr/X11R7/lib -L /usr/pkg/lib -lpthread -lX11 -lXi -lGL -lexecinfo&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;DragonflyBSD&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;cc *.c -o ClassiCube -I /usr/local/include -L /usr/local/lib -lm -lpthread -lX11 -lXi -lGL -lexecinfo&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Solaris&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;gcc *.c -o ClassiCube -lm -lsocket -lX11 -lXi -lGL&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Haiku&lt;/h4&gt; &#xA;&lt;p&gt;Install openal_devel package if needed&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cc *.c interop_BeOS.cpp -o ClassiCube -lm -lGL -lnetwork -lstdc++ -lbe -lgame -ltracker&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;BeOS&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;cc *.c interop_BeOS.cpp -o ClassiCube -lm -lGL -lbe -lgame -ltracker&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;IRIX&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;gcc -lGL -lX11 -lXi -lm -lpthread -ldl&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;SerenityOS&lt;/h4&gt; &#xA;&lt;p&gt;Install SDL2 port if needed&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;cc *.c -o ClassiCube -lgl -lSDL2&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Compiling - other&lt;/h2&gt; &#xA;&lt;h4&gt;Web&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;emcc *.c -s ALLOW_MEMORY_GROWTH=1 --js-library interop_web.js&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The generated javascript file has some issues. &lt;a href=&#34;https://raw.githubusercontent.com/UnknownShadow200/ClassiCube/master/doc/compile-fixes.md#webclient-patches&#34;&gt;See here for how to fix&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;3DS&lt;/h4&gt; &#xA;&lt;p&gt;Run &lt;code&gt;make 3ds&lt;/code&gt;. You&#39;ll need &lt;a href=&#34;https://github.com/devkitPro/libctru&#34;&gt;libctru&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE: It is highly recommended that you install the precompiled devkitpro packages from &lt;a href=&#34;https://devkitpro.org/wiki/Getting_Started&#34;&gt;here&lt;/a&gt; - you need the &lt;code&gt;3ds-dev&lt;/code&gt; group)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The 3DS port needs assistance from someone experienced with 3DS homebrew development - if you&#39;re interested, please get in contact with me. (&lt;code&gt;unknownshadow200&lt;/code&gt; on Discord)&lt;/p&gt; &#xA;&lt;h4&gt;Wii&lt;/h4&gt; &#xA;&lt;p&gt;Run &lt;code&gt;make wii&lt;/code&gt;. You&#39;ll need &lt;a href=&#34;https://github.com/devkitPro/libogc&#34;&gt;libogc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE: It is highly recommended that you install the precompiled devkitpro packages from &lt;a href=&#34;https://devkitpro.org/wiki/Getting_Started&#34;&gt;here&lt;/a&gt; - you need the &lt;code&gt;wii-dev&lt;/code&gt; group)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Wii port needs assistance from someone experienced with Wii homebrew development - if you&#39;re interested, please get in contact with me. (&lt;code&gt;unknownshadow200&lt;/code&gt; on Discord)&lt;/p&gt; &#xA;&lt;h4&gt;GameCube&lt;/h4&gt; &#xA;&lt;p&gt;Run &lt;code&gt;make gamecube&lt;/code&gt;. You&#39;ll need &lt;a href=&#34;https://github.com/devkitPro/libogc&#34;&gt;libogc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE: It is highly recommended that you install the precompiled devkitpro packages from &lt;a href=&#34;https://devkitpro.org/wiki/Getting_Started&#34;&gt;here&lt;/a&gt; - you need the &lt;code&gt;gamecube-dev&lt;/code&gt; group)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The GC port needs assistance from someone experienced with GameCube homebrew development - if you&#39;re interested, please get in contact with me. (&lt;code&gt;unknownshadow200&lt;/code&gt; on Discord)&lt;/p&gt; &#xA;&lt;h4&gt;PlayStation Portable&lt;/h4&gt; &#xA;&lt;p&gt;Run &lt;code&gt;make psp&lt;/code&gt;. You&#39;ll need &lt;a href=&#34;https://github.com/pspdev/pspsdk&#34;&gt;pspsdk&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE: It is recommended that you install the precompiled pspsdk version from &lt;a href=&#34;https://github.com/pspdev/pspdev/releases&#34;&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The PSP port needs assistance from someone experienced with PSP homebrew development - if you&#39;re interested, please get in contact with me. (&lt;code&gt;unknownshadow200&lt;/code&gt; on Discord)&lt;/p&gt; &#xA;&lt;h4&gt;PlayStation Vita&lt;/h4&gt; &#xA;&lt;p&gt;Run &lt;code&gt;make vita&lt;/code&gt;. You&#39;ll need &lt;a href=&#34;https://vitasdk.org/&#34;&gt;vitasdk&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Vita port needs assistance from someone experienced with Vita homebrew development - if you&#39;re interested, please get in contact with me. (&lt;code&gt;unknownshadow200&lt;/code&gt; on Discord)&lt;/p&gt; &#xA;&lt;h4&gt;PlayStation 3&lt;/h4&gt; &#xA;&lt;p&gt;Run &lt;code&gt;make ps3&lt;/code&gt;. You&#39;ll need &lt;a href=&#34;https://github.com/ps3dev/PSL1GHT&#34;&gt;PSL1GHT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The PS3 port needs assistance from someone experienced with PS3 homebrew development - if you&#39;re interested, please get in contact with me. (&lt;code&gt;unknownshadow200&lt;/code&gt; on Discord)&lt;/p&gt; &#xA;&lt;h4&gt;Xbox&lt;/h4&gt; &#xA;&lt;p&gt;Run &lt;code&gt;make xbox&lt;/code&gt;. You&#39;ll need &lt;a href=&#34;https://github.com/XboxDev/nxdk&#34;&gt;nxdk&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Xbox port needs assistance from someone experienced with Xbox homebrew development - if you&#39;re interested, please get in contact with me. (&lt;code&gt;unknownshadow200&lt;/code&gt; on Discord)&lt;/p&gt; &#xA;&lt;h4&gt;Dreamcast&lt;/h4&gt; &#xA;&lt;p&gt;Run &lt;code&gt;make dreamcast&lt;/code&gt;. You&#39;ll need &lt;a href=&#34;https://github.com/KallistiOS/KallistiOS&#34;&gt;KallistiOS&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Dreamcast port needs assistance from someone experienced with Dreamcast homebrew development - if you&#39;re interested, please get in contact with me. (&lt;code&gt;unknownshadow200&lt;/code&gt; on Discord)&lt;/p&gt; &#xA;&lt;h5&gt;Other&lt;/h5&gt; &#xA;&lt;p&gt;You&#39;ll have to write the necessary code. You should read portability.md in doc folder.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Functions and variables in .h files are mostly documented.&lt;/p&gt; &#xA;&lt;p&gt;Further information (e.g. style) for ClassiCube&#39;s source code can be found in the doc and misc folders.&lt;/p&gt; &#xA;&lt;h4&gt;Known compilation errors&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/UnknownShadow200/ClassiCube/master/doc/compile-fixes.md#common-compilation-errors&#34;&gt;Fixes for compilation errors when using musl or old glibc for C standard library&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Tips&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Press escape (after joining a world) or pause to switch to the pause menu.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pause menu -&amp;gt; Options -&amp;gt; Controls lists all of the key combinations used by the client.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Note that toggling &#39;vsync&#39; to on will minimise CPU usage, while off will maximimise chunk loading speed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Press F to cycle view distance. A smaller number of visible chunks can improve performance.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If the server has disabled hacks, key combinations such as fly and speed will not do anything.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To see the list of built in commands, type &lt;code&gt;/client&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To see help for a given built in command, type &lt;code&gt;/client help &amp;lt;command name&amp;gt;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Open source technologies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://curl.se/&#34;&gt;curl&lt;/a&gt; - HTTP/HTTPS for linux and macOS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.freetype.org/&#34;&gt;FreeType&lt;/a&gt; - Font handling for all platforms&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gcc.gnu.org/&#34;&gt;GCC&lt;/a&gt; - Compiles client for linux&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://mingw-w64.org/doku.php&#34;&gt;MinGW-w64&lt;/a&gt; - Compiles client for windows&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://clang.llvm.org/&#34;&gt;Clang&lt;/a&gt; - Compiles client for macOS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://emscripten.org/&#34;&gt;Emscripten&lt;/a&gt; - Compiles client for web&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://renderdoc.org/&#34;&gt;RenderDoc&lt;/a&gt; - Graphics debugging&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bearssl.org/&#34;&gt;BearSSL&lt;/a&gt; - SSL/TLS support on consoles&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devkitPro/libctru&#34;&gt;libctru&lt;/a&gt; - Backend for 3DS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devkitPro/citro3d&#34;&gt;citro3D&lt;/a&gt; - Rendering backend for 3DS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/citra-emu/citra&#34;&gt;Citra&lt;/a&gt; - Emulator used to test 3DS port&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pspdev/pspsdk&#34;&gt;pspsdk&lt;/a&gt; - Backend for PSP&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrydgard/ppsspp&#34;&gt;PPSSPP&lt;/a&gt; - Emulator used to test PSP port&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vitasdk&#34;&gt;vitasdk&lt;/a&gt; - Backend for PS Vita&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Vita3K/Vita3K&#34;&gt;Vita3K&lt;/a&gt; - Emulator used to test Vita port&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ps3dev/PSL1GHT&#34;&gt;PSL1GHT&lt;/a&gt; - Backend for PS3&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RPCS3/rpcs3&#34;&gt;RPCS3&lt;/a&gt; - Emulator used to test PS3 port&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devkitPro/libogc&#34;&gt;libogc&lt;/a&gt; - Backend for Wii and GameCube&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devkitPro/libfat&#34;&gt;libfat&lt;/a&gt; - Filesystem backend for Wii/GC&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dolphin-emu/dolphin&#34;&gt;Dolphin&lt;/a&gt; - Emulator used to test Wii/GC port&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KallistiOS/KallistiOS&#34;&gt;KallistiOS&lt;/a&gt; - Backend for Dreamcast&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Kazade/GLdc&#34;&gt;GLdc&lt;/a&gt; - Basis of rendering backend for Dreamcast&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/skmp/nulldc&#34;&gt;nullDC&lt;/a&gt; - Emulator used to test Dreamcast port&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/flyinghead/flycast&#34;&gt;flycast&lt;/a&gt; - Emulator used to test Dreamcast port&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/XboxDev/nxdk&#34;&gt;nxdk&lt;/a&gt; - Backend for Xbox&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xemu-project/xemu&#34;&gt;xemu&lt;/a&gt; - Emulator used to test Xbox port&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Cxbx-Reloaded/Cxbx-Reloaded&#34;&gt;cxbx-reloaded&lt;/a&gt; - Emulator used to test Xbox port&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sound Credits&lt;/h2&gt; &#xA;&lt;p&gt;ClassiCube uses sounds from &lt;a href=&#34;https://freesound.org&#34;&gt;Freesound.org&lt;/a&gt;&lt;br&gt; Full credits are listed in &lt;a href=&#34;https://raw.githubusercontent.com/UnknownShadow200/ClassiCube/master/doc/sound-credits.md&#34;&gt;doc/sound-credits.md&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tsoding/nobuild</title>
    <updated>2023-09-18T01:24:57Z</updated>
    <id>tag:github.com,2023-09-18:/tsoding/nobuild</id>
    <link href="https://github.com/tsoding/nobuild" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Header only library for writing build recipes in C.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;nobuild&lt;/h1&gt; &#xA;&lt;p&gt;Header only library for writing build recipes in C.&lt;/p&gt; &#xA;&lt;h2&gt;Main idea&lt;/h2&gt; &#xA;&lt;p&gt;The idea is that you should not need anything but a C compiler to build a C project. No make, no cmake, no shell, no cmd, no PowerShell etc. Only C compiler. So with the C compiler you bootstrap your build system and then you use the build system to build everything else.&lt;/p&gt; &#xA;&lt;p&gt;Try it out right here:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ cc ./nobuild.c -o nobuild&#xA;$ ./nobuild&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Explore &lt;a href=&#34;https://raw.githubusercontent.com/tsoding/nobuild/master/nobuild.c&#34;&gt;nobuild.c&lt;/a&gt; file and the &lt;a href=&#34;https://raw.githubusercontent.com/tsoding/nobuild/master/examples&#34;&gt;examples&lt;/a&gt; folder to learn more.&lt;/p&gt; &#xA;&lt;h2&gt;This is an Experimental Project&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;m not sure if this is even a good idea myself. This is why I&#39;m implementing it. This is a research project. I&#39;m not making any claims about suitability of this approach to any project.&lt;/p&gt; &#xA;&lt;p&gt;Right now I&#39;m actively using nobuild only in &lt;a href=&#34;https://github.com/tsoding/bm&#34;&gt;bm&lt;/a&gt;. It works quite well for me there.&lt;/p&gt; &#xA;&lt;h2&gt;It&#39;s likely Not Suitable for Your Project&lt;/h2&gt; &#xA;&lt;p&gt;If you are using &lt;a href=&#34;https://cmake.org/&#34;&gt;cmake&lt;/a&gt; with tons of modules to manage and find tons of dependencies you probably don&#39;t want to use this tool. nobuild is more like writting shell scripts but in C.&lt;/p&gt; &#xA;&lt;h2&gt;Advantages of nobuild&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Extremely portable builds across variety of systems including (but not limited to) Linux, MacOS, Windows, FreeBSD, etc. This is achieved by reducing the amount of dependencies to just a C compiler, which exists pretty much for any platform these days.&lt;/li&gt; &#xA; &lt;li&gt;You end up using the same language for developing and building your project. Which may enable some interesting code reusage strategies. The build system can use the code of the project itself directly and the project can use the code of the build system also directly.&lt;/li&gt; &#xA; &lt;li&gt;You get to use C more.&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disadvantages of nobuild&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You need to be comfortable with C and implementing things yourself. As mentioned above this is like writing shell scripts but in C.&lt;/li&gt; &#xA; &lt;li&gt;It probably does not make any sense outside of C/C++ projects.&lt;/li&gt; &#xA; &lt;li&gt;You get to use C more.&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why is it called &#34;nobuild&#34; when it&#39;s clearly a build tool?&lt;/h2&gt; &#xA;&lt;p&gt;You know all these BS movements that supposedly remove the root cause of your problems? Things like &lt;a href=&#34;https://en.wikipedia.org/wiki/NoSQL&#34;&gt;NoSQL&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/No-code_development_platform&#34;&gt;No-code&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Serverless_computing&#34;&gt;Serverless&lt;/a&gt;, etc. This is the same logic. I had too many problems with the process of building C projects. So there is nobuild anymore.&lt;/p&gt; &#xA;&lt;h2&gt;How to use the library in your own project&lt;/h2&gt; &#xA;&lt;p&gt;Keep in mind that &lt;a href=&#34;https://raw.githubusercontent.com/tsoding/nobuild/master/nobuild.h&#34;&gt;nobuild.h&lt;/a&gt; is an &lt;a href=&#34;https://github.com/nothings/stb/raw/master/docs/stb_howto.txt&#34;&gt;stb-style&lt;/a&gt; header-only library. That means that just including it does not include the implementations of the functions. You have to &lt;code&gt;#define NOBUILD_IMPLEMENTATION&lt;/code&gt; before the include. See our &lt;a href=&#34;https://raw.githubusercontent.com/tsoding/nobuild/master/nobuild.c&#34;&gt;nobuild.c&lt;/a&gt; for an example.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Copy &lt;a href=&#34;https://raw.githubusercontent.com/tsoding/nobuild/master/nobuild.h&#34;&gt;nobuild.h&lt;/a&gt; to your project&lt;/li&gt; &#xA; &lt;li&gt;Create &lt;code&gt;nobuild.c&lt;/code&gt; in your project with the build recipe. See our &lt;a href=&#34;https://raw.githubusercontent.com/tsoding/nobuild/master/nobuild.c&#34;&gt;nobuild.c&lt;/a&gt; for an example.&lt;/li&gt; &#xA; &lt;li&gt;Bootstrap the &lt;code&gt;nobuild&lt;/code&gt; executable: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;$ cc nobuild.c -o nobuild&lt;/code&gt; on POSIX systems&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;$ cl.exe nobuild.c&lt;/code&gt; on Windows with MSVC&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Run the build: &lt;code&gt;$ ./nobuild&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you enable the &lt;a href=&#34;https://github.com/tsoding/nobuild/raw/d2bd711f0e2bcff0651850cd795509ab104ad9d4/nobuild.h#L218-L239&#34;&gt;Go Rebuild Urself™&lt;/a&gt; Technology the &lt;code&gt;nobuild&lt;/code&gt; executable will try to rebootstrap itself every time you modify its source code.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>premake/premake-core</title>
    <updated>2023-09-18T01:24:57Z</updated>
    <id>tag:github.com,2023-09-18:/premake/premake-core</id>
    <link href="https://github.com/premake/premake-core" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Premake&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://premake.github.io/&#34; target=&#34;blank&#34;&gt;&lt;img src=&#34;https://premake.github.io/img/premake-logo.png&#34; height=&#34;200&#34; width=&#34;200&#34; alt=&#34;Premake&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release/premake/premake-core/all.svg?sanitize=true&#34; alt=&#34;Latest release&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release-date-pre/premake/premake-core.svg?sanitize=true&#34; alt=&#34;Release date&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/commits-since/premake/premake-core/v5.0.0-beta1.svg?sanitize=true&#34; alt=&#34;Commits&#34;&gt; &lt;a href=&#34;https://opensource.org/licenses/BSD-3-Clause&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/premake/premake-core&#34; alt=&#34;BSD 3-Clause&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://travis-ci.org/premake/premake-core&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/travis/premake/premake-core/master.svg?label=linux&#34; alt=&#34;Linux&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/PremakeOrganization/premake-core&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/appveyor/ci/PremakeOrganization/premake-core?label=windows&#34; alt=&#34;Windows&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/premake/premake-core/graphs/contributors&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/premake/premake-core?label=code+contributors&#34; alt=&#34;Contributors&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://opencollective.com/premake&#34; _target=&#34;blank&#34;&gt; &lt;img src=&#34;https://opencollective.com/premake/all/badge.svg?label=financial+contributors&#34; alt=&#34;Contributors&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/premakeapp&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/premakeapp.svg?style=social&amp;amp;label=Follow&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Welcome to Premake&lt;/h1&gt; &#xA;&lt;p&gt;Premake is a command line utility which reads a scripted definition of a software project, then uses it to perform build configuration tasks or generate project files for toolsets like Visual Studio, Xcode, and GNU Make. Premake&#39;s scripts are little &lt;a href=&#34;http://www.lua.org/&#34;&gt;Lua&lt;/a&gt; programs, so the sky&#39;s the limit!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;workspace &#34;MyWorkspace&#34;&#xA;    configurations { &#34;Debug&#34;, &#34;Release&#34; }&#xA;&#xA;project &#34;MyProject&#34;&#xA;    kind &#34;ConsoleApp&#34;&#xA;    language &#34;C++&#34;&#xA;    files { &#34;**.h&#34;, &#34;**.cpp&#34; }&#xA;&#xA;    filter { &#34;configurations:Debug&#34; }&#xA;        defines { &#34;DEBUG&#34; }&#xA;        symbols &#34;On&#34;&#xA;&#xA;    filter { &#34;configurations:Release&#34; }&#xA;        defines { &#34;NDEBUG&#34; }&#xA;        optimize &#34;On&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://premake.github.io/docs/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/premake/premake-core/raw/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/premake/premake-core/issues&#34;&gt;Issue Tracker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Premake is a BSD-licensed open source project. Our many thanks to these fine people who help us spend more time adding features and supporting the community. &lt;span&gt;🎉&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;Want to join them? &lt;a href=&#34;https://opencollective.com/premake&#34;&gt;Learn more here&lt;/a&gt;. Use Premake at work? Ask your manager or marketing team about contributing too; your company logo will appear on our &lt;a href=&#34;https://premake.github.io/&#34;&gt;website&lt;/a&gt; and README, as well as all of our &lt;a href=&#34;https://github.com/premake/premake-core/releases&#34;&gt;release pages&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Organizations&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/premake#sponsors&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/premake/sponsors.svg?width=890&amp;amp;avatarHeight=92&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Individuals&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/premake#backers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/premake/backers.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We love getting &lt;a href=&#34;https://www.quora.com/GitHub-What-is-a-pull-request&#34;&gt;pull requests&lt;/a&gt; and rely heavily on the contributions of our community to keep Premake healthy and growing. If you&#39;re new to the project, &lt;a href=&#34;https://github.com/premake/premake-core/raw/master/CONTRIBUTING.md&#34;&gt;our Contributing Guide is here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A great big thank you to all of you who have already contributed your time and know-how!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/premake/premake-core/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/premake/contributors.svg?width=890&amp;amp;avatarHeight=32&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stay in touch&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Website - &lt;a href=&#34;https://premake.github.io&#34;&gt;https://premake.github.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter - &lt;a href=&#34;https://twitter.com/premakeapp&#34;&gt;@premakeapp&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/BSD-3-Clause&#34;&gt;BSD 3-Clause&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Lua language and runtime library is © TeCGraf, PUC-Rio. See their website at &lt;a href=&#34;http://www.lua.org/&#34;&gt;http://www.lua.org/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>