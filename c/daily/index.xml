<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-21T03:10:28Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>yoshisuga/MAME4iOS</title>
    <updated>2024-04-21T03:10:28Z</updated>
    <id>tag:github.com,2024-04-21:/yoshisuga/MAME4iOS</id>
    <link href="https://github.com/yoshisuga/MAME4iOS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Multiple Arcade Machine Emulator for iOS, iPadOS, tvOS, macOS (Catalyst)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MAME4iOS&lt;/h1&gt; &#xA;&lt;p&gt;Original Author: David Valdeita (Seleuco)&lt;/p&gt; &#xA;&lt;p&gt;This is a port of MAME for iOS, iPadOS, tvOS and macOS. MAME4iOS is designed to run for modern iOS and macOS platforms, including support for the latest Apple technology platform enhancments such as Metal graphics and the M1 processor.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/yoshisuga/MAME4iOS/releases&#34;&gt;Download IPAs for iOS and tvOS here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/ZC6wkmU&#34;&gt;Chat on Discord!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yoshisuga/MAME4iOS/master/WHATSNEW.md&#34;&gt;See what&#39;s new&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yoshisuga/MAME4iOS/master/README.images/screenshot-iphone-small.jpg&#34; alt=&#34;iPhone Screenshot&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/yoshisuga/MAME4iOS/master/README.images/screenshot-atv-small.png&#34; alt=&#34;AppleTV Screenshot&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/yoshisuga/MAME4iOS/master/README.images/screenshot-mac.png&#34; alt=&#34;macOS Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Summary&lt;/h2&gt; &#xA;&lt;p&gt;MAME stands for Multi Arcade Machine Emulator, and lets you play arcade games from the past 30+ years on a device that fits in your pocket! My teenage self from decades ago would be replaying that &lt;a href=&#34;https://media0.giphy.com/media/xT0xeJpnrWC4XWblEk/giphy.gif&#34;&gt;&#34;mind blown GIF&#34;&lt;/a&gt; over and over again, but that GIF did not exist back then.&lt;/p&gt; &#xA;&lt;p&gt;More than 2000 games are supported, and the currently supported romsets are 0.238 (November 2021) and 0.139u1 (September 2010). Note that there are separate apps for the latest MAME and the classic 0.139u1 versions. This is done because the supported romsets differ greatly between the the MAME versions.&lt;/p&gt; &#xA;&lt;p&gt;It has been updated to compile and runs on the latest Xcode by &lt;a href=&#34;http://www.lesbird.com/iMame4All/iMame4All_Xcode.html&#34;&gt;Les Bird&lt;/a&gt;, and he has graciously added support for MFI Controllers.&lt;/p&gt; &#xA;&lt;p&gt;Since then, a large number of features have been added:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;64-bit binary to run on modern and future iOS and macOS devices, including Macs using the M1 series of processors&lt;/li&gt; &#xA; &lt;li&gt;Supports modern device screen sizes for iPhone and iPad&lt;/li&gt; &#xA; &lt;li&gt;tvOS support (new in 2019!)&lt;/li&gt; &#xA; &lt;li&gt;Multiple MFI controllers (up to 4 with dual analog support - @DarrenBranford)&lt;/li&gt; &#xA; &lt;li&gt;Supports using the touch screen as a lightgun&lt;/li&gt; &#xA; &lt;li&gt;Turbo mode toggle for buttons&lt;/li&gt; &#xA; &lt;li&gt;Touch analog for games like Arkanoid&lt;/li&gt; &#xA; &lt;li&gt;An in-app web server to transfer files from your computer (new in 2019!)&lt;/li&gt; &#xA; &lt;li&gt;A native iOS/iPadOS/tvOS frontend (by @ToddLa, new in 2020!)&lt;/li&gt; &#xA; &lt;li&gt;A native Metal rendering engine (by @ToddLa, new in 2020!)&lt;/li&gt; &#xA; &lt;li&gt;Transfer ROMs, Artwork, and ROMSETs via AirDrop or iOS File Sharing (new in 2020!)&lt;/li&gt; &#xA; &lt;li&gt;Builds in the latest Xcode&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building / Installation / Sideloading&lt;/h2&gt; &#xA;&lt;h3&gt;Xcode&lt;/h3&gt; &#xA;&lt;p&gt;Requirements: iOS 13.4 or higher, tvOS 13.4 or higher, or Mac 10.15.5 (Catalina) or higher to run.&lt;/p&gt; &#xA;&lt;p&gt;Requirements: Mac 10.13.6 with Xcode 11.4 or above to bulid.&lt;/p&gt; &#xA;&lt;p&gt;Even if you are not in the paid Apple Developer Program, you can sideload the app using a Mac with Xcode.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Open the Xcode project in &lt;code&gt;MAME4iOS.xcodeproj&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set the Organization and Team Identifer in &lt;code&gt;MAME4iOS.xcconfig&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;ORG_IDENTIFIER   = com.example    // CHANGE this to your Organization Identifier.&#xA;DEVELOPMENT_TEAM = ABC8675309     // CHANGE this to your Team ID. (or select in Xcode project editor)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The &lt;code&gt;ORG_IDENTIFIER&lt;/code&gt; is a reverse DNS string that uniquely identifies your organization.&lt;/li&gt; &#xA;   &lt;li&gt;You can also set the Development Team via the drop down in the Xcode project editor, for each Target.&lt;/li&gt; &#xA;   &lt;li&gt;You can find your TeamID &lt;a href=&#34;https://developer.apple.com/account/#/membership&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enable entitlements in &lt;code&gt;MAME4iOS.xcconfig&lt;/code&gt; (optional, only if you have a developer account)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;entitlements are required for tvOS TopShelf and iCloud Import/Export/Sync.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Select the MAME binary to link to, in &lt;code&gt;MAME4iOS.xcconfig&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;139u1 or latest &lt;code&gt;MAME 2xx&lt;/code&gt; version.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Choose the appropriate build target in Xcode:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;MAME4iOS Release&lt;/code&gt; (iPhone/iPad/macOS)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MAME tvOS Release&lt;/code&gt; (AppleTV)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;If you are a developer: Build and &lt;code&gt;▶︎&lt;/code&gt; Run on your device. &lt;em&gt;Done.&lt;/em&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;em&gt;NOTE&lt;/em&gt; first time build may take a long time.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;If you are not a developer… &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;&lt;code&gt;Xcode&lt;/code&gt; → &lt;code&gt;Preferences&lt;/code&gt; add your Apple ID, select your Personal Team, and create an iOS Development Profile.&lt;/li&gt; &#xA;     &lt;li&gt;Select the project name on the left pane and make sure your personal team is selected&lt;/li&gt; &#xA;     &lt;li&gt;Hit the &lt;code&gt;▶︎&lt;/code&gt; Run button to install on your device. &lt;em&gt;Done.&lt;/em&gt;&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to build latest version of &lt;code&gt;MAME&lt;/code&gt; (optional)&lt;/h2&gt; &#xA;&lt;p&gt;By default &lt;code&gt;MAME4iOS&lt;/code&gt; will use pre-combiled libraries for the latest MAME, if you need a Simulator build, or just want to build &lt;code&gt;MAME&lt;/code&gt;, you need to...&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;clone &lt;a href=&#34;https://github.com/ToddLa/mame&#34;&gt;this fork&lt;/a&gt; of &lt;code&gt;MAME&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;./make-ios.sh [ios | tvos | ios-simulator | tvos-simulator | macOS]&lt;/code&gt; in the forked &lt;code&gt;MAME&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;go watch &lt;a href=&#34;https://www.imdb.com/title/tt3748528/&#34;&gt;this&lt;/a&gt; then &lt;a href=&#34;https://en.wikipedia.org/wiki/Star_Wars_Trilogy&#34;&gt;this&lt;/a&gt; while you wait for &lt;code&gt;MAME&lt;/code&gt; to build.&lt;/li&gt; &#xA; &lt;li&gt;now switch directories to your &lt;code&gt;MAME4iOS&lt;/code&gt; project&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;./get-libmame.sh ios &amp;lt;path to your MAME clone&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;edit &lt;code&gt;xcode/MAME4iOS/MAME4iOS.xcconfig&lt;/code&gt; to select the &lt;code&gt;libmame&lt;/code&gt; library.&lt;/li&gt; &#xA; &lt;li&gt;build and run in Xcode.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Issues running latest &lt;code&gt;MAME&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;most &lt;code&gt;MAME&lt;/code&gt; 139 ROMs dont work on 2xx, but that is just normal life in &lt;code&gt;MAME&lt;/code&gt; world, see &lt;a href=&#34;https://raw.githubusercontent.com/yoshisuga/MAME4iOS/master/#mixing-139-and-2xx-roms&#34;&gt;this&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;if you run a &lt;code&gt;Computer&lt;/code&gt; machine, and you use a USB keyboard, ⌘+DELETE is is the ui_mode_key.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MAME&lt;/code&gt; Configure menu has a &lt;code&gt;Add To Favorites&lt;/code&gt; and &lt;code&gt;Select New Machine&lt;/code&gt; that dont interact with the &lt;code&gt;MAME4iOS&lt;/code&gt; Ux.&lt;/li&gt; &#xA; &lt;li&gt;Games that use DRC (like NFL Blitz....) will not work correctly and may crash hang, if &lt;code&gt;Use DRC&lt;/code&gt; is enabled, This is an issue with the arm64 support in &lt;code&gt;MAME&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mixing 139 and 2xx ROMs&lt;/h2&gt; &#xA;&lt;p&gt;Some &lt;code&gt;romsets&lt;/code&gt; are not compatible between MAME 139 and newer versions, the best way to use both &lt;code&gt;romsets&lt;/code&gt; at the same time is to make sure the newer ones are stored in the &lt;code&gt;7z&lt;/code&gt; format and the 139 ones in the &lt;code&gt;zip&lt;/code&gt; format. This way both files can co-exist.&lt;/p&gt; &#xA;&lt;h2&gt;tvOS&lt;/h2&gt; &#xA;&lt;p&gt;MAME for tvOS support was added in early 2019, and it currently can run games has full native UI support and MFI controller support with most notably:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MFI controllers, Xbox One, PS4 DualShock, and Siri Remote support.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Using MAME&lt;/h2&gt; &#xA;&lt;p&gt;When you start MAME4iOS, you are now presented with an updated and native iOS/tvOS MAME UI&lt;/p&gt; &#xA;&lt;h3&gt;MAME UI Controls&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Onscreen D-Pad or MFI Controller D-Pad: Move through the menu&lt;/li&gt; &#xA; &lt;li&gt;A Button: Start Game&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;In-Game&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Coin: &lt;code&gt;SELECT/COIN&lt;/code&gt; for Player 1&lt;/li&gt; &#xA; &lt;li&gt;Start: &lt;code&gt;START&lt;/code&gt; for Player 1&lt;/li&gt; &#xA; &lt;li&gt;Menu: Open the MAME4iOS menu&lt;/li&gt; &#xA; &lt;li&gt;Exit: Exit the game&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Adding ROMs to MAME4iOS&lt;/h2&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;p&gt;For iOS users, you can download ROMs using Safari and save them to the &lt;code&gt;roms&lt;/code&gt; directory by choosing the &#34;Save to Files&#34; (go to &#34;On My iPhone&#34; -&amp;gt; MAME4iOS) option after downloading a ROM.&lt;/p&gt; &#xA;&lt;p&gt;You can also use the &#34;Start Server&#34; option in the menu to start the webserver, and enter the address shown on the web browser on your computer.&lt;/p&gt; &#xA;&lt;p&gt;You can also use the &#34;Import ROMs&#34; option to open up the native iOS file browser and load files that are saved locally or that exist on iCloud.&lt;/p&gt; &#xA;&lt;p&gt;You can use &#34;Import from iCloud&#34; to download ROMs previously uploaded to iCloud.&lt;/p&gt; &#xA;&lt;h3&gt;tvOS&lt;/h3&gt; &#xA;&lt;p&gt;on tvOS the only options are to copy ROMs via &#34;Start Server&#34; or downloading via &#34;Import from iCloud&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;Adding Softare to MAME4iOS&lt;/h2&gt; &#xA;&lt;p&gt;MAME4iOS supports two types of Software&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Software List (aka MESS) based software, installed via ZIP files into &lt;code&gt;roms&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Single file based image (cart, flop, dsk, ...), installed into &lt;code&gt;software&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;ROMless Machines&lt;/h2&gt; &#xA;&lt;p&gt;MAME4iOS includes a set of Machines/Systems that dont need any ROMs installed to run, and can be used &#34;out of the box&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;ROMless Arcade Machines&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pongf&lt;/td&gt; &#xA;   &lt;td&gt;Pong (Rev E) [TTL]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pongd&lt;/td&gt; &#xA;   &lt;td&gt;Pong Doubles [TTL]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;rebound&lt;/td&gt; &#xA;   &lt;td&gt;Rebound (Rev B) [TTL]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;breakout&lt;/td&gt; &#xA;   &lt;td&gt;Breakout [TTL]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;ROMless Console Machines&lt;/h2&gt; &#xA;&lt;p&gt;The following is a list of &lt;em&gt;some&lt;/em&gt; of the Consoles and file types supported by MAME4iOS &#34;out of the box&#34;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Media File Types&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;a2600&lt;/td&gt; &#xA;   &lt;td&gt;Atari 2600 (NTSC)&lt;/td&gt; &#xA;   &lt;td&gt;a26, bin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;a2600p&lt;/td&gt; &#xA;   &lt;td&gt;Atari 2600 (PAL)&lt;/td&gt; &#xA;   &lt;td&gt;a26, bin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gen_nomd&lt;/td&gt; &#xA;   &lt;td&gt;Genesis Nomad (USA Genesis handheld)&lt;/td&gt; &#xA;   &lt;td&gt;md, smd, bin, gen&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;genesis&lt;/td&gt; &#xA;   &lt;td&gt;Genesis (USA, NTSC)&lt;/td&gt; &#xA;   &lt;td&gt;cmd, smd, bin, gen&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;megadrij&lt;/td&gt; &#xA;   &lt;td&gt;Mega Drive (Japan, NTSC)&lt;/td&gt; &#xA;   &lt;td&gt;md, smd, bin, gen&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;megadriv&lt;/td&gt; &#xA;   &lt;td&gt;Mega Drive (Europe, PAL)&lt;/td&gt; &#xA;   &lt;td&gt;md, smd, bin, gen&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;megajet&lt;/td&gt; &#xA;   &lt;td&gt;Mega Jet (Japan Mega Drive handheld)&lt;/td&gt; &#xA;   &lt;td&gt;md, smd, bin, gen&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nes&lt;/td&gt; &#xA;   &lt;td&gt;Nintendo Entertainment System / Famicom (NTSC)&lt;/td&gt; &#xA;   &lt;td&gt;unif, nes, unf&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nespal&lt;/td&gt; &#xA;   &lt;td&gt;Nintendo Entertainment System (PAL)&lt;/td&gt; &#xA;   &lt;td&gt;unif, nes, unf&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1292apvs&lt;/td&gt; &#xA;   &lt;td&gt;1292 Advanced Programmable Video System&lt;/td&gt; &#xA;   &lt;td&gt;rom, tvc, bin, pgm&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1392apvs&lt;/td&gt; &#xA;   &lt;td&gt;1392 Advanced Programmable Video System&lt;/td&gt; &#xA;   &lt;td&gt;rom, tvc, bin, pgm&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pico&lt;/td&gt; &#xA;   &lt;td&gt;Pico (Europe, PAL)&lt;/td&gt; &#xA;   &lt;td&gt;md, bin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;picoj&lt;/td&gt; &#xA;   &lt;td&gt;Pico (Japan, NTSC)&lt;/td&gt; &#xA;   &lt;td&gt;md, bin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;picou&lt;/td&gt; &#xA;   &lt;td&gt;Pico (USA, NTSC)&lt;/td&gt; &#xA;   &lt;td&gt;md, bin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;vboy&lt;/td&gt; &#xA;   &lt;td&gt;Virtual Boy&lt;/td&gt; &#xA;   &lt;td&gt;vb, bin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sgx&lt;/td&gt; &#xA;   &lt;td&gt;SuperGrafx&lt;/td&gt; &#xA;   &lt;td&gt;cue, gdi, toc, chd, bin, cdr, nrg, pce, iso&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pce&lt;/td&gt; &#xA;   &lt;td&gt;PC Engine&lt;/td&gt; &#xA;   &lt;td&gt;cue, gdi, toc, chd, bin, cdr, nrg, pce, iso&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tg16&lt;/td&gt; &#xA;   &lt;td&gt;TurboGrafx 16&lt;/td&gt; &#xA;   &lt;td&gt;cue, gdi, toc, chd, bin, cdr, nrg, pce, iso&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Console Machines and Computers (that require BIOS)&lt;/h2&gt; &#xA;&lt;p&gt;The following is a list of &lt;em&gt;some&lt;/em&gt; of the Consoles, Computers, and file types supported by MAME4iOS, but BIOS files must be installed first.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Media File Types&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;a5200&lt;/td&gt; &#xA;   &lt;td&gt;Atari 5200&lt;/td&gt; &#xA;   &lt;td&gt;rom, a52, bin, car&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;a800&lt;/td&gt; &#xA;   &lt;td&gt;Atari 800 (NTSC)&lt;/td&gt; &#xA;   &lt;td&gt;rom, xfd, atr, dsk, bin, car&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;a7800&lt;/td&gt; &#xA;   &lt;td&gt;Atari 7800 (NTSC)&lt;/td&gt; &#xA;   &lt;td&gt;a78&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;famicom&lt;/td&gt; &#xA;   &lt;td&gt;Famicom&lt;/td&gt; &#xA;   &lt;td&gt;unif, nes, unf&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fds&lt;/td&gt; &#xA;   &lt;td&gt;Famicom (w/ Disk System add-on)&lt;/td&gt; &#xA;   &lt;td&gt;fds&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;snes&lt;/td&gt; &#xA;   &lt;td&gt;Super Nintendo Entertainment System / Super Famicom (NTSC)&lt;/td&gt; &#xA;   &lt;td&gt;sfc&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;snespal&lt;/td&gt; &#xA;   &lt;td&gt;Super Nintendo Entertainment System (PAL)&lt;/td&gt; &#xA;   &lt;td&gt;sfc&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;32x&lt;/td&gt; &#xA;   &lt;td&gt;Genesis with 32X (USA, NTSC)&lt;/td&gt; &#xA;   &lt;td&gt;32x, bin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;32xe&lt;/td&gt; &#xA;   &lt;td&gt;Mega Drive with 32X (Europe, PAL)&lt;/td&gt; &#xA;   &lt;td&gt;32x, bin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;32xj&lt;/td&gt; &#xA;   &lt;td&gt;Mega Drive with 32X (Japan, NTSC)&lt;/td&gt; &#xA;   &lt;td&gt;32x, bin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;neogeo&lt;/td&gt; &#xA;   &lt;td&gt;Neo-Geo MV-6F&lt;/td&gt; &#xA;   &lt;td&gt;neo, bin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;n64&lt;/td&gt; &#xA;   &lt;td&gt;Nintendo 64&lt;/td&gt; &#xA;   &lt;td&gt;rom, v64, n64, z64, bin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;n64dd&lt;/td&gt; &#xA;   &lt;td&gt;Nintendo 64DD&lt;/td&gt; &#xA;   &lt;td&gt;bin, 2mg, rom, n64, z64, hdv, hd, v64, chd, hdi&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;c64gs&lt;/td&gt; &#xA;   &lt;td&gt;Commodore 64 Games System (PAL)&lt;/td&gt; &#xA;   &lt;td&gt;a0, 80, prg, t64, e0, p00, crt&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;c64&lt;/td&gt; &#xA;   &lt;td&gt;Commodore 64 (NTSC)&lt;/td&gt; &#xA;   &lt;td&gt;d64, tap, prg, a0, g64, 80, g41, g71, wav, p00, mfi, dfi, t64, e0, crt&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;apple1&lt;/td&gt; &#xA;   &lt;td&gt;Apple I&lt;/td&gt; &#xA;   &lt;td&gt;wav, snp&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;apple2&lt;/td&gt; &#xA;   &lt;td&gt;Apple ][&lt;/td&gt; &#xA;   &lt;td&gt;do, mfi, dsk, rti, edd, wav, woz, nib, dfi, po&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;apple2gs&lt;/td&gt; &#xA;   &lt;td&gt;Apple IIgs (ROM03)&lt;/td&gt; &#xA;   &lt;td&gt;mfi, edd, mfm, td0, 360, img, do, nib, imd, dc42, hfe, rti, ima, po, d77, ufi, woz, dsk, 2mg, cqi, dfi, cqm, d88, 1dd&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mac128k&lt;/td&gt; &#xA;   &lt;td&gt;Macintosh 128k&lt;/td&gt; &#xA;   &lt;td&gt;d88, dsk, cqm, d77, img, dc42, mfm, 2mg, 1dd, cqi, imd, dfi, mfi, woz, td0, ufi, 360, ima, hfe&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ibm5150&lt;/td&gt; &#xA;   &lt;td&gt;IBM PC 5150&lt;/td&gt; &#xA;   &lt;td&gt;mfi, td0, mfm, wav, hdv, 360, img, hd, xdf, imd, hfe, 2mg, ima, hdi, d77, ufi, dsk, chd, cqi, dfi, cqm, d88, 1dd&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;bbca&lt;/td&gt; &#xA;   &lt;td&gt;BBC Micro Model A&lt;/td&gt; &#xA;   &lt;td&gt;wav, uef, rom, bin, csw&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;bbcb&lt;/td&gt; &#xA;   &lt;td&gt;BBC Micro Model B&lt;/td&gt; &#xA;   &lt;td&gt;adf, mfi, fsd, td0, mfm, wav, 360, ads, csw, img, rom, prn, adl, imd, bin, bbc, hfe, adm, ima, d77, dsk, ufi, uef, ssd, cqi, dfi, dsd, cqm, d88, 1dd&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;tvOS&lt;/h3&gt; &#xA;&lt;p&gt;You can upload ROMs to MAME on your AppleTV using a computer. After MAME starts, you&#39;ll be shown a welcome screen with the address of the AppleTV that you can enter in your web browser. Add MAME ROMs to the &lt;code&gt;roms&lt;/code&gt; directory using the provided web uploader.&lt;/p&gt; &#xA;&lt;h2&gt;Game Controller Support&lt;/h2&gt; &#xA;&lt;p&gt;Pair your MFi, Xbox, or Dual Shock controller with your iOS device, and it should &#39;just work&#39;. Up to 4 controllers are supported.&lt;/p&gt; &#xA;&lt;h3&gt;Hotkey combinations (while in-game)&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MENU&lt;/td&gt; &#xA;   &lt;td&gt;Open MAME4iOS MENU&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MENU+L1&lt;/td&gt; &#xA;   &lt;td&gt;Player Coin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MENU+R1&lt;/td&gt; &#xA;   &lt;td&gt;Player Start&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MENU+L2&lt;/td&gt; &#xA;   &lt;td&gt;Player 2 Coin&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MENU+R2&lt;/td&gt; &#xA;   &lt;td&gt;Player 2 Start&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MENU+A&lt;/td&gt; &#xA;   &lt;td&gt;Speed 2x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MENU+B&lt;/td&gt; &#xA;   &lt;td&gt;Pause MAME&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MENU+X&lt;/td&gt; &#xA;   &lt;td&gt;Exit Game&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MENU+Y&lt;/td&gt; &#xA;   &lt;td&gt;Open MAME menu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MENU+DOWN&lt;/td&gt; &#xA;   &lt;td&gt;Save State ①&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MENU+UP&lt;/td&gt; &#xA;   &lt;td&gt;Load State ①&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MENU+LEFT&lt;/td&gt; &#xA;   &lt;td&gt;Save State ②&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MENU+RIGHT&lt;/td&gt; &#xA;   &lt;td&gt;Load State ②&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Hotkey combinations (while in choose game UX)&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MENU&lt;/td&gt; &#xA;   &lt;td&gt;Game Context Menu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OPTION&lt;/td&gt; &#xA;   &lt;td&gt;MAME4iOS Settings&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;A&lt;/td&gt; &#xA;   &lt;td&gt;Play&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Dual analog support&lt;/h3&gt; &#xA;&lt;p&gt;The right stick on the extended controller profile is fully supported, with support for 4 players (thank you @DarrenBranford!)&lt;/p&gt; &#xA;&lt;h3&gt;Trigger buttons&lt;/h3&gt; &#xA;&lt;p&gt;The trigger buttons are mapped to analog controls and should be useful in assigning for pedal controls, for example.&lt;/p&gt; &#xA;&lt;h2&gt;Siri Remote&lt;/h2&gt; &#xA;&lt;p&gt;MAME4iOS is now usable on a AppleTV using only the stock Siri Remote. You can only play games that use only the A and B buttons.&lt;/p&gt; &#xA;&lt;p&gt;to start playing a game, hit MENU and select &#34;Coin + Start&#34; from the list.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;TRACKPAD MOVE   - emulate a dpad or joystick&#xA;TRAKPAD CLICK   - A button&#xA;PLAY            - B button&#xA;MENU            - bring up the MAME4iOS menu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Touch Screen Lightgun Support (new in 2018, iOS only)&lt;/h2&gt; &#xA;&lt;p&gt;You can now use the touch screen for lightgun games like Operation Wolf and Lethal Enforcers. Holding down your finger simulates holding down the trigger, which is mapped to the &#34;X&#34; button. Tap with 2 fingers for the secondary fire, or the &#34;B&#34; button.&lt;/p&gt; &#xA;&lt;p&gt;In full screen landscape mode, you can hide the onscreen controls using the &#34;D-Pad&#34; button at the top of the screen. When using a game controller, the top button of the screen opens the menu to load/save state or access settings.&lt;/p&gt; &#xA;&lt;p&gt;Touch Lightgun setup is in Settings -&amp;gt; Input -&amp;gt; Touch Lightgun, where you can disable it altogether, or use tapping the bottom of the screen to simulate shooting offscreen (for game that make you reload like Lethal Enforcers).&lt;/p&gt; &#xA;&lt;h4&gt;Shortcuts while in Touch Screen Lightgun mode&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Touch with 2 fingers: secondary fire (&#34;B&#34; button)&lt;/li&gt; &#xA; &lt;li&gt;Touch with 3 fingers: press start button&lt;/li&gt; &#xA; &lt;li&gt;Touch with 4 fingers: insert coin&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Turbo Mode Toggle for Buttons (new in 2018)&lt;/h2&gt; &#xA;&lt;p&gt;Under Settings -&amp;gt; Game Input, there&#39;s a section called &#34;Turbo Mode Toggle&#34;, that lets you turn on turbo firing for individual buttons. Holding down the button causes the button to fire in turbo mode.&lt;/p&gt; &#xA;&lt;h2&gt;Touch Analog Mode (new in 2019, iOS only)&lt;/h2&gt; &#xA;&lt;p&gt;Also in Settings -&amp;gt; Game Input, you&#39;ll find a section called &#34;Touch Analog&#34; and &#34;Touch Directional Input&#34;. &#34;Touch Analog&#34; lets you use your touchscreen as an analog device for games using input controls such as trackballs and knobs. These include games like Arkanoid or Crystal Castles. You can adjust the sensitivity of the analog controls, and also choose to hide the d-pad/analog stick in this mode.&lt;/p&gt; &#xA;&lt;p&gt;&#34;Touch Directional Input&#34; is rather experimental and is for vertical shooters so you can move around using your finger. It still needs some work so just a word of caution :)&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MAME4iOS is distributed under the terms of the GNU General Public License, 2 (GPL-2.0).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fgkeepalive/AndroidKeepAlive</title>
    <updated>2024-04-21T03:10:28Z</updated>
    <id>tag:github.com,2024-04-21:/fgkeepalive/AndroidKeepAlive</id>
    <link href="https://github.com/fgkeepalive/AndroidKeepAlive" rel="alternate"></link>
    <summary type="html">&lt;p&gt;2024年最新 Android 高可用黑科技应用保活，实现终极目标，最高适配Android 14 小米 华为 Oppo vivo 等最新机型 拒绝强杀 开机自启动&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&amp;gt;&amp;gt;&amp;gt;持续更新维护中&amp;gt;&amp;gt;&amp;gt; [2024年4月11日 下午7:44:44]&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;更新日志&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;2024年03月29日 更新：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;新增一些弹出方案，13-14兼容性提升&lt;/li&gt; &#xA; &lt;li&gt;支持关闭退出保活&lt;/li&gt; &#xA; &lt;li&gt;解决安全补丁带来的影响&lt;/li&gt; &#xA; &lt;li&gt;去特征化加强&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;2024年01月23日 更新：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Android 14 支持,API变更维护,崩溃修复&lt;/li&gt; &#xA; &lt;li&gt;厂商兼容性升级,覆盖率提升&lt;/li&gt; &#xA; &lt;li&gt;优化内存占用,提升低端机器效果&lt;/li&gt; &#xA; &lt;li&gt;误判报毒修复,更换demo包名&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;2023年08月04日 更新：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;核心代码全部进入独立加密的自定义java虚拟机中执行，可以完全规避代码审核，完美过google play代码扫描。再也不用担心google代码审查带来的风险。保护核心代码安全。&lt;/li&gt; &#xA; &lt;li&gt;混淆升级，保证每次的打包代码结构都是独一无二的。&lt;/li&gt; &#xA; &lt;li&gt;后台隐藏功能升级，页面图标，后台服务，任务栏，通知栏，均可隐藏。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;2023年07月17日 更新：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;防止应用进入深度休眠&lt;/li&gt; &#xA; &lt;li&gt;增加监听其他App启动功能，可以在其他app启动或者切换页面的时候监听到时机。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;2023年6月26日 更新:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;保活再次升级,特别针对小米等机型优化。&lt;/li&gt; &#xA; &lt;li&gt;减小demo体积&lt;/li&gt; &#xA; &lt;li&gt;省电优化&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;2023年5月8日 更新：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;新增弹出方案,利用 binder驱动实现直接打开页面,弹出能力大幅度提升.&lt;/li&gt; &#xA; &lt;li&gt;保活能力提升,支持省电模式,节约耗电,demo默认是非省电模式.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;2023年1月22日 更新： 解决由于 google play 新更新的开发者政策导致的下架问题。可稳定上架运行。&lt;/p&gt; &#xA;&lt;p&gt;2022年7月11日更新： 支持小米 miui 12 设备&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Demo 下载 &amp;gt;&amp;gt;&amp;gt; &lt;a href=&#34;https://raw.githubusercontent.com/fgkeepalive/AndroidKeepAlive/main/Demo.apk&#34;&gt;点这里&lt;/a&gt; &amp;lt;&amp;lt;&amp;lt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fgkeepalive/AndroidKeepAlive/main/code.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;简介&lt;/h2&gt; &#xA;&lt;p&gt;2023年了，Android还有可用的保活技术吗？有，最强Android 保活方案分享！&lt;/p&gt; &#xA;&lt;p&gt;区别于常规一像素，后台音乐等方案，本方案即使用户&lt;strong&gt;点击强制停止&lt;/strong&gt;也&lt;strong&gt;无法杀死应用&lt;/strong&gt;，它是基于Linux特性实现的一套&lt;strong&gt;黑科技保活技术&lt;/strong&gt;，直达Android 保活尽头。实现&lt;strong&gt;App永生&lt;/strong&gt;。&lt;strong&gt;耗电低&lt;/strong&gt;，不占用CPU，保活持续时间理论上不卸载&lt;strong&gt;可达永久&lt;/strong&gt;。即使手机关机也无法阻止！！！&lt;/p&gt; &#xA;&lt;p&gt;支持Google play（应用市场）上架。&lt;/p&gt; &#xA;&lt;h2&gt;&lt;strong&gt;演示录屏&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;三星 S21 Android 13&lt;/th&gt; &#xA;   &lt;th&gt;小米 11 Android 12&lt;/th&gt; &#xA;   &lt;th&gt;Google Pixel 6 Pro Android 12&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fgkeepalive/AndroidKeepAlive/main/GIF/sanxing.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fgkeepalive/AndroidKeepAlive/main/GIF/xiaomi.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fgkeepalive/AndroidKeepAlive/main/GIF/google.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;其他没录屏的机型：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;机型&lt;/th&gt; &#xA;   &lt;th&gt;Android版本&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;华为 p40&lt;/td&gt; &#xA;   &lt;td&gt;鸿蒙 2.0 Android 10&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;小米10 Pro&lt;/td&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;XIAOMI 红米 7&lt;/td&gt; &#xA;   &lt;td&gt;9（miui 11.0.1）&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;vivo VIVO Y3 (V1901A)&lt;/td&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;oppo R11s&lt;/td&gt; &#xA;   &lt;td&gt;8.1.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HUAWEI 荣 耀30s (CDY- AN90)&lt;/td&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;功能&lt;/h2&gt; &#xA;&lt;p&gt;可以提供以下功能：均不依赖任何安卓权限授权&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;应用保活，拒绝应用强杀，拒绝后台任务栏清理杀死，拒绝清除缓存杀死。&lt;/li&gt; &#xA; &lt;li&gt;自启动 &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;首次安装自启动&lt;/li&gt; &#xA;   &lt;li&gt;固定时间间隔自启动&lt;/li&gt; &#xA;   &lt;li&gt;安装卸载其他应用自启动&lt;/li&gt; &#xA;   &lt;li&gt;开关机自启动&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;后台持续保持活跃，对抗系统休眠。省电策略，可自由选择关闭。&lt;/li&gt; &#xA; &lt;li&gt;不依赖权限的后台弹框，弹出页面，activity，dialog，成功率达到 90 %。&lt;/li&gt; &#xA; &lt;li&gt;隐藏后台通知栏。隐藏通知。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;使用要求&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;利用Android系统特性实现，均&lt;strong&gt;不依赖任何 Android 权限&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;支持Android 4 - &lt;strong&gt;Android 14（最新）&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;对各品牌定制化 rom 有&lt;strong&gt;针对性的优化&lt;/strong&gt;，确保达到最好效果。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;一行代码&lt;/strong&gt;即可&lt;strong&gt;接入&lt;/strong&gt;，无需复杂调整，代码侵入低。&lt;/li&gt; &#xA; &lt;li&gt;支持代码&lt;strong&gt;加固&lt;/strong&gt;，混淆。&lt;/li&gt; &#xA; &lt;li&gt;不可用于违法用途。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;DEMO获取&amp;amp;联系&lt;/h2&gt; &#xA;&lt;p&gt;请注明来意，根据以下联系方式获取：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fgkeepalive/AndroidKeepAlive/main/wx.jpg&#34; alt=&#34;weixin&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;邮箱：&lt;a href=&#34;mailto:fgkeepalive@gmail.com&#34;&gt;fgkeepalive@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;telegram(需要科学上网)：&lt;a href=&#34;https://t.me/androidkeepalive&#34;&gt;https://t.me/androidkeepalive&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>loopj/short-stack</title>
    <updated>2024-04-21T03:10:28Z</updated>
    <id>tag:github.com,2024-04-21:/loopj/short-stack</id>
    <link href="https://github.com/loopj/short-stack" rel="alternate"></link>
    <summary type="html">&lt;p&gt;World&#39;s Smallest Nintendo Wii, using a trimmed motherboard and custom stacked PCBs&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt; &lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/logo-black.svg#gh-light-mode-only&#34; alt=&#34;Short Stack&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/logo-white.svg#gh-dark-mode-only&#34; alt=&#34;Short Stack&#34;&gt; &lt;/h1&gt; &#xA; &lt;h4&gt;World&#39;s Smallest Nintendo Wii, using a trimmed motherboard and custom stacked PCBs&lt;/h4&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/#features&#34;&gt;Features&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/#size--scale&#34;&gt;Size &amp;amp; Scale&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/#components&#34;&gt;Components&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/#build-guide&#34;&gt;Build Guide&lt;/a&gt; · &lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/#special-thanks&#34;&gt;Special Thanks&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/render-blue.jpg&#34; alt=&#34;Short Stack Render&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;World&#39;s smallest &#34;to scale&#34; Wii console&lt;/li&gt; &#xA; &lt;li&gt;Powered by USB-C&lt;/li&gt; &#xA; &lt;li&gt;HDMI for lossless digital audio and video (powered by &lt;a href=&#34;https://github.com/ikorb/gcvideo&#34;&gt;GCVideo&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Bluetooth for Wii remotes and accessories&lt;/li&gt; &#xA; &lt;li&gt;MicroSD card stores games and saves, instead of disc drive &amp;amp; memory cards&lt;/li&gt; &#xA; &lt;li&gt;4 GameCube controller ports&lt;/li&gt; &#xA; &lt;li&gt;Power, reset, and sync buttons&lt;/li&gt; &#xA; &lt;li&gt;Power indicator LED and iconic blue glowing disc slot&lt;/li&gt; &#xA; &lt;li&gt;Soft shutdown, power on/off via Wiimote&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Size &amp;amp; Scale&lt;/h2&gt; &#xA;&lt;p&gt;This is a &lt;strong&gt;1:2.38 scale&lt;/strong&gt; model of an original Nintendo Wii console, but since that is hard to visualize here are some other stats:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Same size as a typical deck of playing cards&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;7.4% the volume&lt;/strong&gt; of an original Wii console&lt;/li&gt; &#xA; &lt;li&gt;You could fit &lt;strong&gt;13.5&lt;/strong&gt; of these inside an original Wii&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/deck-of-cards.jpg&#34; width=&#34;48%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/size-comparison.png&#34; width=&#34;48%&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;I&#39;m pretty sure this sets the record for the smallest functional scale-model Wii console, but let me know if I&#39;m wrong!&lt;/p&gt; &#xA;&lt;h3&gt;Could we go smaller?&lt;/h3&gt; &#xA;&lt;p&gt;Yes! It is definitely possible to go smaller than this. My &lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/trim.png&#34;&gt;version of the Omega trim&lt;/a&gt; keeps all four main mounting holes, which makes it around 7mm wider than a classic Omega trim. Additionally &lt;a href=&#34;https://twitter.com/Weskmods&#34;&gt;Wesk&lt;/a&gt; has managed to get a Wii motherboard down to 52x52mm on his final destination trim, which is a a full 10mm narrower than my trim. I estimate you could reduce the volume by a further 25-30% without losing any functionality, but it would be an incredibly tight fit and tricky to assemble.&lt;/p&gt; &#xA;&lt;h2&gt;Components&lt;/h2&gt; &#xA;&lt;p&gt;As the name implies, &lt;em&gt;Short Stack&lt;/em&gt; is built from a stack of custom PCBs, and a custom heatsink, that are all designed to fit together in a compact and modular way.&lt;/p&gt; &#xA;&lt;h3&gt;A modular motherboard&lt;/h3&gt; &#xA;&lt;p&gt;Making a tiny build like this is made possible by trimming the Wii motherboard down to the bare essentials. The result is a board which is just &lt;em&gt;62x62mm&lt;/em&gt;, but still contains the CPU, GPU, RAM and flash memory.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/motherboard-front.jpg&#34; width=&#34;48%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/motherboard-back.jpg&#34; width=&#34;48%&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Since we removed the original power circuitry and trimmed off the USB, Bluetooth, and GameCube connectors, we need to provide power and data to the board another way. I designed a couple of boards which solder directly to the front of a trimmed Wii motherboard to provide power and data, which help avoid a tangled mess of wires.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/loopj/wii-power-strip&#34;&gt;Wii Power Strip&lt;/a&gt; supplies power to the Wii motherboards using a Molex Pico-Lock connector, and additionally has footprints to help relocate of a couple of capacitors which are typically removed when trimming a Wii.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/loopj/periphlex&#34;&gt;Periphlex&lt;/a&gt; is a flex PCB which breaks out the Bluetooth, USB and GameCube controller data lines, as well as the power, shutdown, and reset GPIOs. These are then made available via a 14-pin FFC connector. This approach replaces 11 magnet wires with a single, removable ribbon cable.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/periphlex-render.png&#34; alt=&#34;Periphlex&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;On the back of the motherboard, I&#39;m using two open-source boards designed by the very talented &lt;a href=&#34;https://github.com/mackieks&#34;&gt;YveltalGriffin&lt;/a&gt;. &lt;a href=&#34;https://github.com/mackieks/fujiflex&#34;&gt;fujiflex&lt;/a&gt; provides digital A/V output using GCVideo, and &lt;a href=&#34;https://github.com/mackieks/nandFlex&#34;&gt;nandFlex&lt;/a&gt; relocates the Wii&#39;s NAND memory chip, to enable the tight trim.&lt;/p&gt; &#xA;&lt;h3&gt;Custom PCBs&lt;/h3&gt; &#xA;&lt;p&gt;In addition to the modular boards on the motherboard, I designed two PCBs specific to Short Stack which provide the rest of the functionality for the console.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;em&gt;main board&lt;/em&gt; PCB hosts the power regulators, USB to microSD logic, HDMI connector, GameCube ports, and a microcontroller for power management. A 14-pin ribbon cable connects this board to the Wii motherboard via &lt;em&gt;Periphlex&lt;/em&gt;, and a power cable delivers power to the &lt;em&gt;Power Strip&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/main-board.jpg&#34; alt=&#34;Main Board&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The &lt;em&gt;front panel&lt;/em&gt; PCB hosts the power, reset, and sync buttons, as well as the power LED and disc slot LEDs. This board connects to the main board via a short 8-pin ribbon cable.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/front-panel.jpg&#34; alt=&#34;Front Panel Board&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Since the GameCube controller connectors on the original Wii wouldn&#39;t fit cleanly on a build of this size, I use TRRS headphone connectors instead. This is the exact same approach used on the amazing &lt;a href=&#34;https://bitbuilt.net/forums/index.php?threads/gc-nano-the-worlds-smallest-gamecube.5697/&#34;&gt;GC Nano&lt;/a&gt; and in fact I made sure the dongles are pinout compatible!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/gamecube-dongle.jpg&#34; alt=&#34;GameCube dongle&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Cooling&lt;/h3&gt; &#xA;&lt;p&gt;The final part of the &#34;stack&#34; is a custom heatsink which is designed to be as low profile as possible, while still providing adequate cooling for the Wii&#39;s CPU and GPU. The heatsink is designed to be machined from aluminum or copper, and incorporates mounting holes which align with those on the Wii motherboard.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/heatsink.jpg&#34; alt=&#34;Heatsink&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;I managed to find a tiny 5V blower fan (&lt;a href=&#34;https://catalog.pelonistechnologies.com/item/air-g-series-micro-fans-and-micro-blowers/micro-fans-and-micro-blowers/agb208n&#34;&gt;Pelonis AGB208N&lt;/a&gt;) which measures just 20x20x8mm and somehow puts out 0.84 CFM of air. This blows air through the heatsink fins, out the side of the case.&lt;/p&gt; &#xA;&lt;h3&gt;Case&lt;/h3&gt; &#xA;&lt;p&gt;The stack is housed in a custom 3D printed case, secured with four M2.5 screws and spacers. The rest of case is assembled using self-tapping M1.2 screws. The screw locations and fan vents are positioned to match the original Wii case as closely as possible, to minimize visible screws.&lt;/p&gt; &#xA;&lt;p&gt;You can access files on the SD card by connecting the console to a computer via USB, but I also included an access panel on the front of the case where the original Wii SD card slot is found. This panel is held in place by magnets and can be removed to access the SD card without opening the case. Shout out to Wesk for the magnet idea!&lt;/p&gt; &#xA;&lt;p&gt;To keep the clean aesthetic of the original Wii I wanted to hide the GameCube controller ports behind a panel. I always hated the hinged design of the original, and it is quite difficult to replicate at this scale, so I redesigned this panel to be a sliding panel.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/gamecube-ports.png&#34; alt=&#34;GameCube Ports&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Wii&#39;s iconic disc slot lights are recreated using a 1.5mm thick custom cut acrylic light diffuser, which is illuminated by two side-mounted addressable LEDs on the front panel board. The power, reset, and sync buttons are all also 3D printed, and the power button hosts a tiny light pipe to allow the power LED to shine through.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/front-assembly.png&#34; alt=&#34;Front assembly&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;I FDM printed the case on a Voron 2.4 in ABS using a 0.4mm nozzle at 0.1mm layer height, but it should print fine in PLA or PETG on a well-tuned printer. At this scale, dimensional accuracy is important. In theory it should be possible to print this on an SLA printer, but I haven&#39;t tried it.&lt;/p&gt; &#xA;&lt;h2&gt;Build Guide&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!CAUTION] This is not a beginner project! This build requires performing a challenging motherboard trim, fine pitch soldering, and PCB assembly. If you are not comfortable with these tasks, I would recommend starting with a simpler project and working your way up - check out the &lt;a href=&#34;https://bitbuilt.net&#34;&gt;BitBuilt forums&lt;/a&gt; for some awesome project worklogs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;What you&#39;ll need&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;4-layer Wii motherboard&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mackieks/nandFlex&#34;&gt;nandFlex&lt;/a&gt; board (or &lt;a href=&#34;https://4layertech.com/products/rvl-nand-flex-board-pack-of-2&#34;&gt;4Layer Technologies RVL-NAND&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Assembled &lt;a href=&#34;https://github.com/mackieks/fujiflex&#34;&gt;fujiflex&lt;/a&gt; (or &lt;a href=&#34;https://electron-shepherd.com/products/electronave-kit&#34;&gt;ElectronAVE&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Assembled &lt;a href=&#34;https://github.com/loopj/wii-power-strip/tree/r1&#34;&gt;Wii Power Strip&lt;/a&gt; - &lt;strong&gt;must be revision 1!&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Assembled &lt;a href=&#34;https://github.com/loopj/periphlex&#34;&gt;Periphlex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/main-board/KiCad&#34;&gt;Short Stack main board&lt;/a&gt; - 1.2mm thickness, stencil recommended&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/front-panel/KiCad&#34;&gt;Short Stack front panel&lt;/a&gt; - 0.8mm thickness, black soldermask, stencil recommended&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/case/heatsink.step&#34;&gt;Heatsink&lt;/a&gt; - machined from aluminum or copper&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/case/disc-light-diffuser.dxf&#34;&gt;Light diffuser&lt;/a&gt; - cut from 1.5mm thick acrylic&lt;/li&gt; &#xA; &lt;li&gt;The components and hardware from the &lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/full-bom.xlsx&#34;&gt;bill of materials&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Assembly&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/case-assembly.gif&#34; alt=&#34;Case Exploded&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Assemble main board and front panel PCBs &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;I recommend using a solder stencil and a hot plate or reflow oven&lt;/li&gt; &#xA;   &lt;li&gt;If using a hot plate, hand solder the headphone connectors after reflowing the rest of the components&lt;/li&gt; &#xA;   &lt;li&gt;Secure two 3 x 1mm magnets inside the holes on the front panel board using a dab of CA glue&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Flash the &lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/main-board/firmware&#34;&gt;main board firmware&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Prepare and trim the Wii motherboard &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Relocate the NAND, test it still boots&lt;/li&gt; &#xA;   &lt;li&gt;Perform a wireless U10 relocation, test it still boots - you may wish to wire a magnet wire to the &lt;a href=&#34;https://bitbuilt.net/forums/index.php?threads/soft-shutdown-power-on-via-bluetooth.6239/&#34;&gt;&lt;code&gt;SHUTDOWN&lt;/code&gt; via&lt;/a&gt; first&lt;/li&gt; &#xA;   &lt;li&gt;Install fujiflex, and test digital A/V output works&lt;/li&gt; &#xA;   &lt;li&gt;Trim the motherboard (see &lt;a href=&#34;https://raw.githubusercontent.com/loopj/short-stack/main/images/trim.png&#34;&gt;trim dimensions&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Assemble and install &lt;em&gt;Power Strip&lt;/em&gt; (&lt;a href=&#34;https://github.com/loopj/wii-power-strip/tree/r1#installation&#34;&gt;see instructions&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Assemble and install &lt;em&gt;Periphlex&lt;/em&gt; (&lt;a href=&#34;https://github.com/loopj/periphlex#installation&#34;&gt;see instructions&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Connect the boards &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Connect the main board to the motherboard via a 14-pin FFC cable to &lt;em&gt;Periphlex&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Connect the main board to the motherboard via a 5-pin Molex Pico-Lock cable to &lt;em&gt;Power Strip&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Connect the front panel board to the main board via an 8-pin FFC cable&lt;/li&gt; &#xA;   &lt;li&gt;Connect the fan to the main board&lt;/li&gt; &#xA;   &lt;li&gt;Apply thermal paste to the CPU and GPU&lt;/li&gt; &#xA;   &lt;li&gt;Stack the components: heatsink, motherboard, M2.5 x 3mm spacers, main board&lt;/li&gt; &#xA;   &lt;li&gt;Install the stack to the case bottom using M2.5 x 12mm wafer head screws&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Secure the top of the case to the bottom using four M1.2 x 4mm screws&lt;/li&gt; &#xA; &lt;li&gt;Secure the front panel PCB to the front of the case using two M1.2 x 3mm screws&lt;/li&gt; &#xA; &lt;li&gt;Secure the front of the case to the bottom of the case using two M1.2 x 4mm screws&lt;/li&gt; &#xA; &lt;li&gt;Press-fit two 3 x 1mm magnets into the holes on the sd card cover, make sure they match polarity with the magnets on the front panel PCB&lt;/li&gt; &#xA; &lt;li&gt;Slide the side panel into the case&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Special Thanks&lt;/h2&gt; &#xA;&lt;p&gt;This project would not be possible without the amazing &lt;a href=&#34;https://bitbuilt.net&#34;&gt;BitBuilt community&lt;/a&gt;, I&#39;m truly standing on the shoulders of giants here.&lt;/p&gt; &#xA;&lt;p&gt;In particular, I&#39;d like to thank:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/Weskmods&#34;&gt;Wesk&lt;/a&gt; for setting the bar so high with renders, for the suggestion of using magnets in the case assembly, and for the inspirational GC Nano&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/aureliomannara&#34;&gt;Aurelio&lt;/a&gt; for pointing me in the right direction to help figure the soft shutdown and power on via Wiimote.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/YveltalGriffin&#34;&gt;YveltalGriffin&lt;/a&gt; for PCB design feedback, helping me when I was documenting the bluetooth module, and of course for fujiflex and nandFlex&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/crazygadgetmods&#34;&gt;CrazyGadget&lt;/a&gt; for helping me fix my GL823K on the first revision of my boards, and for the inspirational GC Nano&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/y2k_x38&#34;&gt;Y2K&lt;/a&gt; and supertazon for joining the PCB assembly live stream and being super supportive&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Permissively released under the Solderpad Hardware License v2.1&lt;/p&gt;</summary>
  </entry>
</feed>