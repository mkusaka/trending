<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-03T01:26:34Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fastfetch-cli/fastfetch</title>
    <updated>2024-01-03T01:26:34Z</updated>
    <id>tag:github.com,2024-01-03:/fastfetch-cli/fastfetch</id>
    <link href="https://github.com/fastfetch-cli/fastfetch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Like neofetch, but much faster because written mostly in C.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fastfetch&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/fastfetch-cli/fastfetch/ci.yml&#34; alt=&#34;GitHub Workflow Status (with event)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/raw/dev/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/fastfetch-cli/fastfetch&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/fastfetch-cli/fastfetch&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/raw/dev/CMakeLists.txt#L5&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/languages/top/fastfetch-cli/fastfetch?logo=c&amp;amp;label=&#34; alt=&#34;GitHub top language&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/commits&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/fastfetch-cli/fastfetch&#34; alt=&#34;GitHub commit activity (branch)&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://formulae.brew.sh/formula/fastfetch#default&#34;&gt;&lt;img src=&#34;https://img.shields.io/homebrew/installs/dm/fastfetch?logo=homebrew&#34; alt=&#34;homebrew downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/fastfetch-cli/fastfetch/total?logo=github&#34; alt=&#34;GitHub all releases&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/fastfetch-cli/fastfetch?logo=github&#34; alt=&#34;GitHub release (with filter)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://repology.org/project/fastfetch/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/latest-versions/fastfetch.svg?sanitize=true&#34; alt=&#34;latest packaged version(s)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://repology.org/project/fastfetch/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/tiny-repos/fastfetch.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Fastfetch is a &lt;a href=&#34;https://github.com/dylanaraps/neofetch&#34;&gt;neofetch&lt;/a&gt;-like tool for fetching system information and displaying them in a pretty way. It is written mainly in C, with performance and customizability in mind. Currently, Linux, Android, FreeBSD, MacOS and Windows 7+ are supported.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/fastfetch-cli/fastfetch/dev/screenshots/example1.png&#34; width=&#34;49%&#34; align=&#34;left&#34;&gt; &#xA;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/2/24/Transparent_Square_Tiles_Texture.png&#34; width=&#34;49%&#34; height=&#34;16px&#34; align=&#34;left&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/fastfetch-cli/fastfetch/dev/screenshots/example4.png&#34; width=&#34;49%&#34; align=&#34;left&#34;&gt; &#xA;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/2/24/Transparent_Square_Tiles_Texture.png&#34; width=&#34;49%&#34; height=&#34;16px&#34; align=&#34;left&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/fastfetch-cli/fastfetch/dev/screenshots/example2.png&#34; width=&#34;48%&#34; align=&#34;top&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/fastfetch-cli/fastfetch/dev/screenshots/example3.png&#34; width=&#34;48%&#34; align=&#34;top&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/fastfetch-cli/fastfetch/dev/screenshots/example5.png&#34; height=&#34;15%&#34; align=&#34;top&#34;&gt; &#xA;&lt;p&gt;There are &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/wiki&#34;&gt;screenshots on different platforms&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Debian / Ubuntu: Download &lt;code&gt;fastfetch-&amp;lt;version&amp;gt;-Linux.deb&lt;/code&gt; from &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/releases/latest&#34;&gt;Github release page&lt;/a&gt; and &lt;code&gt;dpkg -i fastfetch-&amp;lt;version&amp;gt;-Linux.deb&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Arch Linux: &lt;code&gt;sudo pacman -S fastfetch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fedora: &lt;code&gt;sudo dnf install fastfetch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gentoo: &lt;code&gt;sudo emerge --ask app-misc/fastfetch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;NixOS: &lt;code&gt;sudo nix-shell -p fastfetch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;openSUSE: &lt;code&gt;sudo zypper install fastfetch&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Replace sudo with doas depending on what you use.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fastfetch-cli/fastfetch/dev/#Packaging&#34;&gt;See also if fastfetch has been packaged for your favorite Linux distro&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;brew install fastfetch&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;scoop install fastfetch&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You may also download it directly from &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/releases/latest&#34;&gt;GitHub releases page&lt;/a&gt; and extract the archive.&lt;/p&gt; &#xA;&lt;h3&gt;FreeBSD&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;pkg install fastfetch&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Android (Termux)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;pkg install fastfetch&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build from source&lt;/h2&gt; &#xA;&lt;p&gt;See Wiki: &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/wiki/Building&#34;&gt;https://github.com/fastfetch-cli/fastfetch/wiki/Building&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run it with default configuration: &lt;code&gt;fastfetch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run it with &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/wiki/Support+Status#available-modules&#34;&gt;all supported modules&lt;/a&gt; and find what you interest: &lt;code&gt;fastfetch -c all.jsonc&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Find all data that fastfetch detects: &lt;code&gt;fastfetch -s &amp;lt;module&amp;gt; --format json&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Display help messages: &lt;code&gt;fastfetch --help&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Generate config file based on command line arguments: &lt;code&gt;fastfetch --arg1 --arg2 --gen-config&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Customization&lt;/h2&gt; &#xA;&lt;p&gt;Fastfetch uses the JSONC (or JSON with comments) for configuration. &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/wiki/Configuration&#34;&gt;See Wiki for detail&lt;/a&gt;. There are some premade config files in &lt;a href=&#34;https://raw.githubusercontent.com/fastfetch-cli/fastfetch/dev/presets&#34;&gt;&lt;code&gt;presets&lt;/code&gt;&lt;/a&gt;, including the ones used for the screenshots above. You can load them using &lt;code&gt;-c &amp;lt;filename&amp;gt;&lt;/code&gt;. They may also serve as a good example for format arguments.&lt;/p&gt; &#xA;&lt;p&gt;Logos can be heavily customized too; see the &lt;a href=&#34;https://github.com/fastfetch-cli/fastfetch/wiki/Logo-options&#34;&gt;logo documentation&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Packaging&lt;/h2&gt; &#xA;&lt;h3&gt;Repositories&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/fastfetch/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/fastfetch.svg?header=&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Manual&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DEB / RPM package: &lt;code&gt;cmake --build . --target package&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install directly: &lt;code&gt;cmake --install . --prefix /usr/local&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;Q: Why do you need a very performant version of neofetch?&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;I like putting neofetch in my ~/.bashrc to have a system overview whenever I use the terminal, but the slow speed annoyed me, so I created this. Also neofetch didn&#39;t output everything correctly (e.g Font is displayed as &#34;[Plasma], Noto Sans, 10 [GTK2/3]&#34;) and writing my own tool gave me the possibility to fine tune it to run perfectly on at least my configuration.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Q: It does not display [*] correctly for me, what can I do?&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This is most likely because your system is not implemented (yet). At the moment I am focusing more on making the core app better, than adding more configurations. Feel free to open a pull request if you want to add support for your configuration&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;p&gt;Give it a star to support us!&lt;/p&gt; &#xA;&lt;a href=&#34;https://star-history.com/#fastfetch-cli/fastfetch&amp;amp;Date&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=fastfetch-cli/fastfetch&amp;amp;type=Date&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=fastfetch-cli/fastfetch&amp;amp;type=Date&#34;&gt; &#xA;  &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=fastfetch-cli/fastfetch&amp;amp;type=Date&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>hackerhouse-opensource/Artillery</title>
    <updated>2024-01-03T01:26:34Z</updated>
    <id>tag:github.com,2024-01-03:/hackerhouse-opensource/Artillery</id>
    <link href="https://github.com/hackerhouse-opensource/Artillery" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CIA UAC bypass implementation that utilizes elevated COM object to write to System32 and an auto-elevated process to execute as administrator.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Artillery&lt;/h1&gt; &#xA;&lt;p&gt;Artillery is a UAC bypass method described by the Central Intelligence Agency (CIA) Applied Engineering Department (AED) in the &#34;Fine Dining&#34; toolkit, which are modular components used to create malware. This module is part of the Privilege Escalation collection and is combined with other modules and payloads. The purpose is to bypass UAC and a second attack is used to obtain persistence on a host. Artillery utilizes elevated COM object to write to System32 and an auto-elevated process to execute as administrator, it can then be combined with a FAX DLL injection for explorer.exe for persistence on a host. This UAC bypass and persistence has been tested on Windows 7.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;These files are available under a Attribution-NonCommercial-NoDerivatives 4.0 International license.&lt;/p&gt;</summary>
  </entry>
</feed>