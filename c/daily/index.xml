<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-31T01:29:05Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Spooks4576/Ghost_ESP</title>
    <updated>2024-10-31T01:29:05Z</updated>
    <id>tag:github.com,2024-10-31:/Spooks4576/Ghost_ESP</id>
    <link href="https://github.com/Spooks4576/Ghost_ESP" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ghost ESP is a ESP32 Firmware that Revolutionizes the way we use ESP32 devices in a Pen Testing aspect&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ghost ESP Firmware: Empowering Wireless Testing with ESP32&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to &lt;strong&gt;Ghost ESP&lt;/strong&gt;, a robust and feature-rich firmware designed for your ESP32 microcontroller, enabling advanced wireless network exploration and security testing. With Ghost ESP installed, you can leverage the power of your ESP32 device to conduct in-depth WiFi and Bluetooth Low Energy (BLE) analysis, launch strategic wireless attacks, and explore a wide range of wireless environments.&lt;/p&gt; &#xA;&lt;h2&gt;Notice: Beta Version (ESP-IDF)&lt;/h2&gt; &#xA;&lt;p&gt;Please note that this version of Ghost ESP firmware, built on the ESP-IDF framework, is currently in &lt;strong&gt;beta&lt;/strong&gt;. Some features, such as &lt;strong&gt;BLE spam&lt;/strong&gt; and &lt;strong&gt;screen support&lt;/strong&gt;, are still under development and will be introduced in future updates as we approach the full release.&lt;/p&gt; &#xA;&lt;p&gt;We appreciate your patience and feedback as we continue to refine and expand the functionality of Ghost ESP.&lt;/p&gt; &#xA;&lt;h2&gt;Key Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;WiFi Access Point (AP) Scanning:&lt;/strong&gt; Detect and display all nearby WiFi networks, providing detailed visibility into wireless environments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Station Scanning:&lt;/strong&gt; Identify and monitor WiFi stations (clients) connected to local networks, providing insight into active devices.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Beacon Spam:&lt;/strong&gt; Deploy SSID beacons with customizable modes to simulate or disrupt network environments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;BLE Scanning&lt;/strong&gt; Scan for BLE devices, including specialized modes for detecting devices like AirTags and Flipper Zeros.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Deauthentication Attacks:&lt;/strong&gt; Launch deauthentication attacks to disconnect clients from WiFi networks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;WiFi Capture:&lt;/strong&gt; Capture probe requests, beacon frames, deauthentication packets, and raw wireless data for analysis (requires an SD card or external storage device).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Evil Portal:&lt;/strong&gt; Set up a fake WiFi portal with a custom SSID and domain, enabling targeted network testing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;RGB LED Modes:&lt;/strong&gt; Customize the RGB lighting of your ESP32 device with various modes such as Stealth, Normal, and Rainbow, creating visual feedback for different tasks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;BLE Detectors:&lt;/strong&gt; Specialized scanning modes for identifying elusive BLE devices, such as AirTags and Flipper Zeros, or scanning for raw BLE packets in real-time (planned for future versions).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;DIAL &amp;amp; Chromecast V2 Support:&lt;/strong&gt; Interact with DIAL-enabled devices like Roku or Chromecast for seamless media control and playback.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Compatible ESP32 Boards&lt;/h2&gt; &#xA;&lt;p&gt;Ghost ESP supports the following ESP32 models:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;ESP32 Wroom&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ESP32 S2&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ESP32 C3&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ESP32 S3&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ESP32 C6&lt;/strong&gt; (Note: Partial support; BLE advertising not fully functional)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Important Considerations&lt;/h2&gt; &#xA;&lt;p&gt;Ghost ESP offers powerful BLE and WiFi functionalities, including spam and scanning capabilities. However, certain ESP32 models, such as the ESP32 Wroom, may experience performance limitations when running resource-intensive operations like BLE spam (once available), which could result in system crashes.&lt;/p&gt; &#xA;&lt;p&gt;Use these features responsibly and ensure that you operate within the legal boundaries of wireless testing and security research.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Ready to unlock the full potential of your ESP32 device with Ghost ESP? Follow our comprehensive flashing tutorial to install and configure the firmware:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Spooks4576/Ghost_ESP/raw/main/docs/HOWTOFLASH.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Tutorial-Flashing-blue&#34; alt=&#34;Flashing Tutorial&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;p&gt;We owe the success of Ghost ESP to the contributions and inspiration from the following open-source projects and their developers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/justcallmekoko/ESP32Marauder&#34;&gt;JustCallMeKoKo&lt;/a&gt;:&lt;/strong&gt; For laying the groundwork of ESP32 development and tools.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/thibauts/node-castv2-client&#34;&gt;thibauts&lt;/a&gt;:&lt;/strong&gt; For offering crucial insights into the CastV2 protocol, aiding media integration.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/MarcoLucidi01/ytcast/tree/master/dial&#34;&gt;MarcoLucidi01&lt;/a&gt;:&lt;/strong&gt; For spearheading the development of DIAL protocol integration on ESP32 platforms.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We express our deepest gratitude to these innovators for their invaluable contributions, which helped shape the Ghost ESP project.&lt;/p&gt; &#xA;&lt;h2&gt;Legal Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Ghost ESP is intended for educational purposes and ethical security research only. Unauthorized use or deployment of this firmware for malicious purposes, such as disrupting legitimate network services, is illegal and punishable under applicable laws. Always obtain proper authorization before conducting wireless security tests.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Unleash the true potential of your ESP32 device with Ghost ESPâ€”your ultimate tool for wireless network exploration and testing.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>imbushuo/mac-precision-touchpad</title>
    <updated>2024-10-31T01:29:05Z</updated>
    <id>tag:github.com,2024-10-31:/imbushuo/mac-precision-touchpad</id>
    <link href="https://github.com/imbushuo/mac-precision-touchpad" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Windows Precision Touchpad Driver Implementation for Apple MacBook / Magic Trackpad&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Windows Precision Touchpad Implementation for Apple MacBook family/Magic Trackpad 2&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ligstd.visualstudio.com/Apple%20PTP%20Trackpad/_build?definitionId=22&#34;&gt;&lt;img src=&#34;https://ligstd.visualstudio.com/_apis/public/build/definitions/7694e0d0-94e3-4fd2-b39a-ecd261e1ba2e/22/badge&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project implements Windows Precision Touchpad Protocol for Apple MacBook family/Magic Trackpad 2 on Windows 10. Both USB (traditional and T2), SPI and Bluetooth trackpads are supported.&lt;/p&gt; &#xA;&lt;h2&gt;Donation?&lt;/h2&gt; &#xA;&lt;p&gt;A few people asked me why I removed donation. My current financial situation doesn&#39;t require me to accept donation for the budget of future development. If you are considering donation, please consider other meaningful projects and foundations, such as &lt;a href=&#34;https://www.eff.org/&#34;&gt;Electronic Frontier Foundation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Official Driver?&lt;/h2&gt; &#xA;&lt;p&gt;Bootcamp 6.1.5 offers official driver for T2-based model and Magic Trackpad 2. You can also consider using the official driver if you have such Mac. If you have an older model (e.g. MacBooks before 2018/2019), this is the only implementation for these models (yet).&lt;/p&gt; &#xA;&lt;h2&gt;Future Plans and feature tracking&lt;/h2&gt; &#xA;&lt;p&gt;Use the &lt;a href=&#34;https://ligstd.visualstudio.com/Apple%20PTP%20Trackpad/_workitems/&#34;&gt;Azure DevOps Board&lt;/a&gt; to track feature and device support plans. Bug reports should go to Github issues.&lt;/p&gt; &#xA;&lt;h2&gt;See it in action (YouTube video)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/-GWlfw7omdo&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/-GWlfw7omdo/hqdefault.jpg&#34; alt=&#34;Watch the video&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Converged Installation Guide&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; Given changes in Microsoft driver code signing policy, and the compliance need of EV certificate, CI auto builds beyond 2021/01/06 04:00AM EST will not be automatically signed with normal code signing certificate. These builds are still supposed via TestSigning, but not recommended for normal users. Proper WHQL and EV dual-signed packages will be released manually, which can be downloaded from the release page.&lt;/p&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;Make sure you uninstalled &lt;code&gt;Trackpad++&lt;/code&gt; completely if you have previously does so&lt;/li&gt; &#xA; &lt;li&gt;Go to the release tab in Github and download the newest version for your architecture&lt;/li&gt; &#xA; &lt;li&gt;Right click &lt;code&gt;AmtPtpDevice.inf&lt;/code&gt; and install it&lt;/li&gt; &#xA; &lt;li&gt;If you have a Magic Trackpad 2 and want to use it in Bluetooth mode: manaully pair it in PC Settings.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note: it is unnecessary to enable test signing, or install the certificate manually. Doing so may cause problems in installation. See &lt;a href=&#34;https://github.com/imbushuo/mac-precision-touchpad/issues/228#issuecomment-538689587&#34;&gt;this issue&lt;/a&gt; for detailed explanation.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Also Uninstallation (extremely important for reinstallation &lt;code&gt;Trackpad++&lt;/code&gt; and such)&lt;/h2&gt; &#xA;&lt;p&gt;See also &lt;a href=&#34;https://magicutilities.net/magic-trackpad/help/mac-precision-touchpad-driver-installed&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to device manager&lt;/li&gt; &#xA; &lt;li&gt;Find the &#34;Apple Precision Touch Device&#34;, &#34;Apple Multi-touch Trackpad HID filter&#34; and &#34;Apple Multi-touch Auxiliary Services&#34;&lt;/li&gt; &#xA; &lt;li&gt;Right click &#34;remove the device&#34; and also check &#34;uninstall driver&#34;&lt;/li&gt; &#xA; &lt;li&gt;Rescan devices&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Installation with Chocolatey&lt;/h2&gt; &#xA;&lt;p&gt;The drivers are available as a &lt;a href=&#34;https://chocolatey.org/packages/mac-precision-touchpad/&#34;&gt;Chocolatey package&lt;/a&gt;. To install using &lt;a href=&#34;https://chocolatey.org&#34;&gt;Chocolatey&lt;/a&gt; run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;choco install mac-precision-touchpad&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;For developers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SPI/T2 version is kernel-mode driver, using KMDF Framework v1.23. Bluetooth driver uses KMDF Framework 1.15. Windows 10 Driver Development Kit Version 2004 or higher is required for development and testing.&lt;/li&gt; &#xA; &lt;li&gt;USB version is a user-mode driver, using UMDF Framework v2.15. Windows 10 Driver Development Kit Version 2004 or higher is required for development and testing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ReleaseSigned&lt;/code&gt; configuration is reserved for production build only, and it will be rendered as unsigned if you attempt to build using that configuration. (Historically it&#39;s signed, but due to EV certificate&#39;s requirements, the process has changed.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Device support&lt;/h2&gt; &#xA;&lt;p&gt;There is a bring-up issue for certain MacBook Pro and MacBook Air. I am looking into it. If you have such device with Windows installed, please contact me so I can look into the issue remotely (as I don&#39;t have many devices).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Non-Retina MacBook&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Some non-Retina MacBook Pro (2011 and 2012)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; MacBook Pro with Retina Display (MacBookPro 10,1, MacBookPro10,2 &amp;amp; MacBookPro11,1)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; All recent MacBook Air (Please report if your model is not supported)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; MacBook Pro with Retina Display (2013, 2014, 2015, 13-inch &amp;amp; 15-inch)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; New MacBook (12-inch)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; MacBook Pro 2015, 2016, 2017 (a few SPI devices are in work-in-progress state)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; T2-based devices: MacBook Air 2018, MacBook Pro 2017/2018/2019/2020: Use default fallback, experience might not be optimal. Open a issue if you encountered dead touch regions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Magic Trackpad 2 &amp;amp; 3 (USB)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Magic Trackpad 2 &amp;amp; 3 (Bluetooth connection)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Touchpad Device Power Management&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Touchpad Protocol Stack Implementation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Touchpad Raw Input Output (in Driver Trace)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; HID Protocol Implementation (PTP Touch)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; HID Protocol Implementation (Configuration)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Device Test (Magic Trackpad 2)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Refine input experience (tip switch detection and pressure)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Refine input experience (gesture experience)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; More Models&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; SPI&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; KM Driver cross-cert&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Bluetooth&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Defuzz&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Input sensitivity configuration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;UPDATE 2021/05&lt;/strong&gt;: She got an M1 Mac now.&lt;/p&gt; &#xA;&lt;p&gt;People familiar with me know that I don&#39;t use Apple MacBook (so development work of this driver occurs on a Surface Pro 4). People probably think it doesn&#39;t make sense that I started this project. The motivation behind this project origin from complaints from my girlfriend. Hearing about frequent complains about Dell XPS 13&#39;s touchpad (though it passed Precision Touchpad certification), I decided to start this project, so by the time she switches to MacBook Pro, she will have excellent touchpad experience out-of-box, even on Windows. This driver is made for you, but also for everyone.&lt;/p&gt; &#xA;&lt;p&gt;I would like to thank projects like &lt;a href=&#34;https://github.com/robbi5/magictrackpad2-dkms&#34;&gt;magictrackpad2-dkms&lt;/a&gt; and &lt;a href=&#34;https://github.com/cb22/macbook12-spi-driver&#34;&gt;macbook12-spi-driver&lt;/a&gt; that inspire me. I would also like to thank my friends for providing me immense help on devices and testing.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;USB driver is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/imbushuo/mac-precision-touchpad/master/LICENSE-GPL.md&#34;&gt;GPLv2&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;SPI driver is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/imbushuo/mac-precision-touchpad/master/LICENSE-MIT.md&#34;&gt;MIT&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>