<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-28T01:22:34Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ttttupup/wxhelper</title>
    <updated>2023-10-28T01:22:34Z</updated>
    <id>tag:github.com,2023-10-28:/ttttupup/wxhelper</id>
    <link href="https://github.com/ttttupup/wxhelper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hook WeChat / 微信逆向&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;wxhelper&lt;/h1&gt; &#xA;&lt;p&gt;wechat hook 。PC端微信逆向学习。支持3.8.0.41，3.8.1.26, 3.9.0.28, 3.9.2.23,3.9.2.26版本。&lt;/p&gt; &#xA;&lt;h4&gt;免责声明:&lt;/h4&gt; &#xA;&lt;p&gt;本仓库发布的内容，仅用于学习研究，请勿用于非法用途和商业用途！如因此产生任何法律纠纷，均与作者无关！&lt;/p&gt; &#xA;&lt;h4&gt;项目说明：&lt;/h4&gt; &#xA;&lt;p&gt;&lt;font color=&#34;#dd0000&#34;&gt;本项目是逆向练习项目，可能会造成封号等后果。请自行承担风险。仅用于学习研究，请勿于非法用途。&lt;/font&gt;&lt;/p&gt; &#xA;&lt;h4&gt;实现原理：&lt;/h4&gt; &#xA;&lt;p&gt;逆向分析PC端微信客户端，定位相关功能关键Call，编写dll调用关键Call。然后将该dll文件注入到微信进程。&lt;br&gt; dll在注入成功时，创建了一个默认端口为19088的http服务端，然后所有的功能直接可以通过http协议调用。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;                                      |----------------&#xA;--------------------------    注入    |  WeChat.exe    |&#xA;| ConsoleApplication.exe  |————————&amp;gt;  |----------------           --------------    访问      ---------&#xA;|                         |           | wxhelper.dll   |————————&amp;gt;| 启动http服务  | &amp;lt;----------| clent |&#xA;|--------------------------           |-----------------          --------------              --------    &#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;使用说明：&lt;/h4&gt; &#xA;&lt;p&gt;支持的版本3.8.0.41、3.8.1.26、3.9.0.28、3.9.2.23、3.9.2.26 、3.9.5.81。&lt;br&gt; 源码和主要实现在相应的分支内。&lt;br&gt; src:主要的dll代码&lt;br&gt; tool：简单的注入工具，一个是控制台，一个是图形界面。&lt;br&gt; python: tcpserver.py: 简单的服务器，用以接收消息内容。decrpty.py: 微信数据库解密工具。 http_server.py：http server端。&lt;br&gt; source: 简单的命令行远程注入源码。&lt;br&gt; 其他目录：热心作者提供的一些客户端。&lt;/p&gt; &#xA;&lt;h4&gt;0.首先安装对应的版本的微信，分支名称即代表的是微信对应的版本。dll的前缀都会带有微信版本。&lt;/h4&gt; &#xA;&lt;h4&gt;1.使用注入工具注入wxhelper.dll,注入成功后，即可通过postman直接调用对应的接口。&lt;/h4&gt; &#xA;&lt;h4&gt;2.可以使用python/clent.py进行简单测试。&lt;/h4&gt; &#xA;&lt;h5&gt;特别注意：&lt;/h5&gt; &#xA;&lt;h5&gt;1.hook相关的接口都需要先调用对应的hook接口，server端才会收到相应消息。&lt;/h5&gt; &#xA;&lt;h5&gt;2.注意个别接口在一些版本没有实现，功能预览里没有的功能就是没有实现。&lt;/h5&gt; &#xA;&lt;h5&gt;3.如果注入不成功，请先检查注入工具，或者使用其他注入工具。&lt;/h5&gt; &#xA;&lt;h5&gt;4.相关功能只在win11环境下进行简单测试，其他环境无法保证。&lt;/h5&gt; &#xA;&lt;h4&gt;参与项目&lt;/h4&gt; &#xA;&lt;p&gt;个人精力和水平有限，项目还有许多不足，欢迎提出 issues 或 pr。期待你的贡献。&lt;/p&gt; &#xA;&lt;h4&gt;问题讨论&lt;/h4&gt; &#xA;&lt;p&gt;个人常用的方法，请参考&lt;a href=&#34;https://github.com/ttttupup/wxhelper/wiki&#34;&gt;https://github.com/ttttupup/wxhelper/wiki&lt;/a&gt;&lt;br&gt; 使用上的问题，可查询&lt;a href=&#34;https://github.com/ttttupup/wxhelper/discussions&#34;&gt;https://github.com/ttttupup/wxhelper/discussions&lt;/a&gt;&lt;br&gt; 数据库解密，请参考&lt;a href=&#34;https://github.com/ttttupup/wxhelper/wiki&#34;&gt;https://github.com/ttttupup/wxhelper/wiki&lt;/a&gt;&lt;br&gt; 个人精力有限，只维护最新版本，旧版本的bug会在新版本中修复，不维护旧版本。&lt;/p&gt; &#xA;&lt;h4&gt;编译环境&lt;/h4&gt; &#xA;&lt;p&gt;Visual Studio 2022(x86)&lt;/p&gt; &#xA;&lt;p&gt;Visual Studio code&lt;/p&gt; &#xA;&lt;p&gt;cmake&lt;/p&gt; &#xA;&lt;p&gt;vcpkg&lt;/p&gt; &#xA;&lt;h4&gt;编译构建&lt;/h4&gt; &#xA;&lt;p&gt;先准备好编译环境。&lt;/p&gt; &#xA;&lt;h4&gt;&lt;font color=&#34;#dd0000&#34;&gt; 以下是x86环境构建，3.9.5.81是x64环境，具体参考对应分支。&lt;/font&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd wxhelper  &#xA;mkdir build  &#xA;cd build  &#xA;cmake -DCMAKE_C_COMPILER=cl.exe  \&#xA;-DCMAKE_CXX_COMPILER=cl.exe \&#xA;-DCMAKE_BUILD_TYPE=Debug \&#xA;-DCMAKE_INSTALL_PREFIX=C:/other/codeSource/windows/wxhelper/out/install/x86-debug \&#xA;-DCMAKE_TOOLCHAIN_FILE:FILEPATH=C:/vcpkg/scripts/buildsystems/vcpkg.cmake \&#xA;-SC:/wxhelper \&#xA;-BC:/wxhelper/build/x86-debug\&#xA;-G Ninja&#xA;&#xA;cmake --build ..  &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;以下是在vscode中操作，vs中的操作类似。&lt;br&gt; 1.安装vcpkg，cmake，vscode&lt;/p&gt; &#xA;&lt;p&gt;2.安装相应的库，如果安装的版本不同，则根据vcpkg安装成功后提示的find_package修改CMakeLists.txt内容即可。或者自己编译。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    vcpkg  install mongoose  &#xA;    vcpkg  install nlohmann-json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;3.vscode 配置CMakePresets.json,主要设置CMAKE_C_COMPILER 和CMAKE_CXX_COMPILER 为cl.exe.参考如下&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; {&#xA;            &#34;name&#34;: &#34;x86-release&#34;,&#xA;            &#34;displayName&#34;: &#34;x86-release&#34;,&#xA;            &#34;description&#34;: &#34;Sets Ninja generator, build and install directory&#34;,&#xA;            &#34;generator&#34;: &#34;Ninja&#34;,&#xA;            &#34;binaryDir&#34;: &#34;${sourceDir}/out/build/${presetName}&#34;,&#xA;            &#34;architecture&#34;:{&#xA;                &#34;value&#34;: &#34;x86&#34;,&#xA;                &#34;strategy&#34;: &#34;external&#34;&#xA;            },&#xA;            &#34;cacheVariables&#34;: {&#xA;                &#34;CMAKE_C_COMPILER&#34;: &#34;cl.exe&#34;,&#xA;                &#34;CMAKE_CXX_COMPILER&#34;: &#34;cl.exe&#34;,&#xA;                &#34;CMAKE_BUILD_TYPE&#34;: &#34;Release&#34;,&#xA;                &#34;CMAKE_INSTALL_PREFIX&#34;: &#34;${sourceDir}/out/install/${presetName}&#34;,&#xA;                &#34;CMAKE_TOOLCHAIN_FILE&#34;: {&#xA;                    &#34;value&#34;: &#34;C:/soft/vcpkg/scripts/buildsystems/vcpkg.cmake&#34;,&#xA;                     &#34;type&#34;: &#34;FILEPATH&#34;&#xA;                  }&#xA;            },&#xA;            &#34;environment&#34;: {&#xA;&#xA;            }&#xA;          &#xA;        }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;4.执行cmake build vscode中右键configure all projects,在Terminal中点击Run Task，如没有先配置build任务，然后运行即可&lt;/p&gt; &#xA;&lt;p&gt;5.命令行注入工具，注入命令&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;    //-i  注入程序名   -p 注入dll路径   &#xA;    // -u 卸载程序名   -d 卸载dll名称&#xA;    // -m pid  关闭微信互斥体，多开微信&#xA;    // -P port 指定http端口，需要使用 specify-port 分支的生成的dll&#xA;    // -I 注入程序的pid&#xA;    //注入  &#xA;    ConsoleInject.exe  -i demo.exe -p E:\testInject.dll&#xA;    //卸载 &#xA;    ConsoleInject.exe  -u demo.exe -d  testInject.dll&#xA;    //多开&#xA;    ConsoleInject.exe  -m 1222&#xA;    // 注入并指定http端口&#xA;    ConsoleInject.exe  -i demo.exe -p E:\testInject.dll  -P  18888   &#xA;    // 注入指定pid并关闭多开限制&#xA;    ConsoleInject.exe  -I 15048 -p E:\testInject.dll  -m 15048  &#xA;  &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;6.如果想改变端口，可以在微信目录下创建config.ini配置文件,修改端口即可。不创建则默认端口19088。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;[config]&#xA;port=19099&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;更新说明&lt;/h4&gt; &#xA;&lt;p&gt;2022-12-26 ： 增加3.8.1.26版本支持。&lt;/p&gt; &#xA;&lt;p&gt;2022-12-29 ： 新增提取文字功能。&lt;/p&gt; &#xA;&lt;p&gt;2023-01-02 ： 退出微信登录。&lt;/p&gt; &#xA;&lt;p&gt;2023-01-31 ： 新增修改群昵称（仅支持3.8.1.26）。&lt;/p&gt; &#xA;&lt;p&gt;2023-02-01 ： 新增拍一拍（仅支持3.8.1.26）。&lt;/p&gt; &#xA;&lt;p&gt;2023-02-04 ： 新增群消息置顶和取消置顶。&lt;/p&gt; &#xA;&lt;p&gt;2023-02-06 ： 新增确认收款。&lt;/p&gt; &#xA;&lt;p&gt;2023-02-08 ： 新增朋友圈消息。&lt;/p&gt; &#xA;&lt;p&gt;2023-02-09 ： 新增3.9.0.28版本基础功能。&lt;/p&gt; &#xA;&lt;p&gt;2023-02-13 ： 新增群昵称和微信名称。&lt;/p&gt; &#xA;&lt;p&gt;2023-02-17 : 新增通过wxid添加好友,搜索查找微信。&lt;/p&gt; &#xA;&lt;p&gt;2023-03-02 ： 新增发送@消息&lt;/p&gt; &#xA;&lt;p&gt;2023-03-04 ： 新增消息附件下载&lt;/p&gt; &#xA;&lt;p&gt;2023-03-21 ： 新增hook语音&lt;/p&gt; &#xA;&lt;p&gt;2023-03-30 ： 新增获取语音文件(推荐使用这个非hook接口)&lt;/p&gt; &#xA;&lt;p&gt;2023-04-08 : 3.9.2.23版本功能更新&lt;/p&gt; &#xA;&lt;p&gt;2023-06-05 ：3.9.2.26版本更新&lt;/p&gt; &#xA;&lt;p&gt;2023-07-07 ：3.9.5.81版本更新&lt;/p&gt; &#xA;&lt;h4&gt;功能预览：&lt;/h4&gt; &#xA;&lt;p&gt;0.检查是否登录&lt;br&gt; 1.获取登录微信信息&lt;br&gt; 2.发送文本&lt;br&gt; 3.发送@文本&lt;br&gt; 5.发送图片&lt;br&gt; 6.发送文件&lt;br&gt; 9.hook消息&lt;br&gt; 10.取消hook消息&lt;br&gt; 11.hook图片&lt;br&gt; 12.取消hook图片&lt;br&gt; 13.hook语音&lt;br&gt; 14.取消hook语音&lt;br&gt; 17.删除好友&lt;br&gt; 19.通过手机或qq查找微信&lt;br&gt; 20.通过wxid添加好友&lt;br&gt; 23.通过好友申请&lt;br&gt; 25.获取群成员&lt;br&gt; 26.获取群成员昵称&lt;br&gt; 27.删除群成员&lt;br&gt; 28.增加群成员&lt;br&gt; 31.修改群昵称&lt;br&gt; 32.获取数据库句柄&lt;br&gt; 34.查询数据库&lt;br&gt; 35.hook日志&lt;br&gt; 36.取消hook日志&lt;br&gt; 40.转发消息&lt;br&gt; 44.退出登录&lt;br&gt; 45.确认收款&lt;br&gt; 46.联系人列表&lt;br&gt; 47.获取群详情&lt;br&gt; 48.获取解密图片&lt;br&gt; 49.图片提取文字ocr&lt;br&gt; 50.拍一拍&lt;br&gt; 51.群消息置顶消息&lt;br&gt; 52.群消息取消置顶&lt;br&gt; 53.朋友圈首页&lt;br&gt; 54.朋友圈下一页&lt;br&gt; 55.获取联系人或者群名称&lt;br&gt; 56.获取消息附件（图片，视频，文件）&lt;br&gt; 57.获取语音文件(silk3格式)&lt;br&gt; 58.登录二维码&lt;br&gt; 59.邀请入群&lt;br&gt; 60.获取群/群成员详情&lt;br&gt; 61.撤回消息&lt;br&gt; 62.发送公众号消息&lt;br&gt; 63.转发公众号消息&lt;br&gt; 64.发送小程序&lt;br&gt; 65.退款&lt;br&gt; 66.下载头像(勿用,没什么用)&lt;/p&gt; &#xA;&lt;h4&gt;感谢&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ljc545w/ComWeChatRobot&#34;&gt;https://github.com/ljc545w/ComWeChatRobot&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/NationalSecurityAgency/ghidra&#34;&gt;https://github.com/NationalSecurityAgency/ghidra&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/x64dbg/x64dbg&#34;&gt;https://github.com/x64dbg/x64dbg&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;讨论组&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/+LmvAauweyUpjYzJl&#34;&gt;https://t.me/+LmvAauweyUpjYzJl&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>