<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-08T01:32:04Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jdah/doomenstein-3d</title>
    <updated>2023-03-08T01:32:04Z</updated>
    <id>tag:github.com,2023-03-08:/jdah/doomenstein-3d</id>
    <link href="https://github.com/jdah/doomenstein-3d" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Wolfenstein/DOOM style software renderers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Wolfenstein/DOOM style software renderers&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jdah/doomenstein-3d/main/screen/image.png&#34; alt=&#34;project screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;src/main_doom.c&lt;/code&gt;: a DOOM-style software renderer&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;src/main_wolf.c&lt;/code&gt;: a Wolfenstein 3D-style software renderer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building &amp;amp; Running&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;$ make doom|wolf|all&lt;/code&gt;, binaries are &lt;code&gt;bin/doom&lt;/code&gt; and &lt;code&gt;bin/wolf&lt;/code&gt; respectively&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>baidu/dperf</title>
    <updated>2023-03-08T01:32:04Z</updated>
    <id>tag:github.com,2023-03-08:/baidu/dperf</id>
    <link href="https://github.com/baidu/dperf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;dperf is a DPDK based 100Gbps network performance and load testing software.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dperf &lt;a href=&#34;https://github.com/baidu/dperf/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%20V2-blue.svg?sanitize=true&#34; alt=&#34;Apache V2 License&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/baidu/dperf/main/README-CN.md&#34;&gt;中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;dperf is a DPDK based 100Gbps network performance and load testing software.&lt;/p&gt; &#xA;&lt;h2&gt;Advantage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;High performance： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Based on DPDK, dperf can generate huge traffic with a single x86 server: tens of millions of HTTP CPS，hundreds of Gbps throughput and billions of concurrent connections.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Detailed statistics： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Provides detailed statistics and identify every packet loss.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Support multiple scenarios： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Load testing and stability testing for Layer 4 Load Balancer and other Layer 4 gateways&lt;/li&gt; &#xA;   &lt;li&gt;Network performance testing for servers on cloud&lt;/li&gt; &#xA;   &lt;li&gt;Performance test of network package processing capability for NIC and CPU&lt;/li&gt; &#xA;   &lt;li&gt;Can be used as a high performance HTTP server or client for load testing&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Performance&lt;/h2&gt; &#xA;&lt;h3&gt;HTTP Connections per Second&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Client Cores&lt;/th&gt; &#xA;   &lt;th&gt;Server Cores&lt;/th&gt; &#xA;   &lt;th&gt;HTTP CPS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;2,101,044&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;4,000,423&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;7,010,743&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;10,027,172&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;HTTP Throughput per Second&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Client Cores&lt;/th&gt; &#xA;   &lt;th&gt;Server Cores&lt;/th&gt; &#xA;   &lt;th&gt;RX(Gbps)&lt;/th&gt; &#xA;   &lt;th&gt;TX(Gbps)&lt;/th&gt; &#xA;   &lt;th&gt;Client CPU Usage(%)&lt;/th&gt; &#xA;   &lt;th&gt;Server CPU Usage(%)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;18&lt;/td&gt; &#xA;   &lt;td&gt;18&lt;/td&gt; &#xA;   &lt;td&gt;60&lt;/td&gt; &#xA;   &lt;td&gt;59&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;35&lt;/td&gt; &#xA;   &lt;td&gt;35&lt;/td&gt; &#xA;   &lt;td&gt;60&lt;/td&gt; &#xA;   &lt;td&gt;59&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;46&lt;/td&gt; &#xA;   &lt;td&gt;46&lt;/td&gt; &#xA;   &lt;td&gt;43&lt;/td&gt; &#xA;   &lt;td&gt;43&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;HTTP Current Connections&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Client Cores&lt;/th&gt; &#xA;   &lt;th&gt;Server Cores&lt;/th&gt; &#xA;   &lt;th&gt;Current Connections&lt;/th&gt; &#xA;   &lt;th&gt;Client CPU Usage(%)&lt;/th&gt; &#xA;   &lt;th&gt;Server CPU Usage(%)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;100,000,000&lt;/td&gt; &#xA;   &lt;td&gt;34&lt;/td&gt; &#xA;   &lt;td&gt;39&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;200,000,000&lt;/td&gt; &#xA;   &lt;td&gt;36&lt;/td&gt; &#xA;   &lt;td&gt;39&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;400,000,000&lt;/td&gt; &#xA;   &lt;td&gt;40&lt;/td&gt; &#xA;   &lt;td&gt;41&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;UDP TX PPS&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Client Cores&lt;/th&gt; &#xA;   &lt;th&gt;TX MPPS&lt;/th&gt; &#xA;   &lt;th&gt;Client CPU Usage(%)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;15.96&lt;/td&gt; &#xA;   &lt;td&gt;95&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;29.95&lt;/td&gt; &#xA;   &lt;td&gt;95&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;34.92&lt;/td&gt; &#xA;   &lt;td&gt;67&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;35.92&lt;/td&gt; &#xA;   &lt;td&gt;54&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;37.12&lt;/td&gt; &#xA;   &lt;td&gt;22&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note: this test is under one 25Gbps Mellanox CX4&lt;/p&gt; &#xA;&lt;h3&gt;Client &amp;amp; Server Configuration&lt;/h3&gt; &#xA;&lt;p&gt;Above performance is obtained with below configurations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MEM: 512GB(hugepage 100GB)&lt;/li&gt; &#xA; &lt;li&gt;NIC: Mellanox MT27710 25Gbps * 2&lt;/li&gt; &#xA; &lt;li&gt;Kernel: 4.19.90&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Statistics&lt;/h2&gt; &#xA;&lt;p&gt;dperf outputs various statistics every second：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TPS, CPS, various PPS&lt;/li&gt; &#xA; &lt;li&gt;Errors of TCP/Socket/HTTP&lt;/li&gt; &#xA; &lt;li&gt;Packets loss/drop&lt;/li&gt; &#xA; &lt;li&gt;Retransmissions of TCP Flags&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;seconds 22                 cpuUsage 52&#xA;pktRx   3,001,058          pktTx    3,001,025          bitsRx   2,272,799,040      bitsTx  1,920,657,600      dropTx  0&#xA;arpRx   0                  arpTx    0                  icmpRx   0                  icmpTx  0                  otherRx 0          badRx 0&#xA;synRx   1,000,345          synTx    1,000,330          finRx    1,000,350          finTx   1,000,350          rstRx   0          rstTx 0&#xA;synRt   0                  finRt    0                  ackRt    0                  pushRt  0                  tcpDrop 0&#xA;skOpen  1,000,330          skClose  1,000,363          skCon    230                skErr   0&#xA;httpGet 1,000,345          http2XX  1,000,350          httpErr  0&#xA;ierrors 0                  oerrors  0                  imissed  0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Set hugepages&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;#edit &#39;/boot/grub2/grub.cfg&#39; like this, and reboot the OS&#xA;linux16 /vmlinuz-... nopku transparent_hugepage=never default_hugepagesz=1G hugepagesz=1G hugepages=8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build DPDK&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;#edit &#39;config/common_base&#39; to enable PMDs&#xA;#Mellanox CX4/CX5 requires &#39;CONFIG_RTE_LIBRTE_MLX5_PMD=y&#39;&#xA;#HNS3 requires &#39;CONFIG_RTE_LIBRTE_HNS3_PMD=y&#39;&#xA;#VMXNET3 requires &#39;CONFIG_RTE_LIBRTE_VMXNET3_PMD=y&#39;&#xA;&#xA;TARGET=x86_64-native-linuxapp-gcc #or arm64-armv8a-linuxapp-gcc&#xA;&#xA;cd /root/dpdk/dpdk-stable-19.11.10&#xA;make install T=$TARGET -j16&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build dperf&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd dperf&#xA;make -j8 RTE_SDK=/root/dpdk/dpdk-stable-19.11.10 RTE_TARGET=$TARGET&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Bind interface&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;#Mellanox NIC skip this step!&#xA;#Suppose your PCI number is 0000:1b:00.0&#xA;&#xA;modprobe uio&#xA;modprobe uio_pci_generic&#xA;/root/dpdk/dpdk-stable-19.11.10/usertools/dpdk-devbind.py -b uio_pci_generic 0000:1b:00.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Start dperf server&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;#dperf server bind at 6.6.241.27:80,  gateway is 6.6.241.1&#xA;./build/dperf -c test/http/server-cps.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Send request from a client&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;#the client IP must be in the range of &#39;client&#39; in the configuration file&#xA;ping 6.6.241.27&#xA;curl http://6.6.241.27/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running the tests&lt;/h2&gt; &#xA;&lt;p&gt;Below example will start a HTTP CPS stress test.&lt;br&gt; #run dperf server ./build/dperf -c test/http/server-cps.conf&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;#from another host, run dperf client&#xA;./build/dperf -c test/http/client-cps.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/baidu/dperf/main/docs/configuration.md&#34;&gt;configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/baidu/dperf/main/docs/design.md&#34;&gt;design&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/baidu/dperf/main/docs/build.md&#34;&gt;build&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/baidu/dperf/main/docs/statistics.md&#34;&gt;statistics&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Limitation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;dperf requires that the HTTP message is in one packet, which is not suitable for the test of layer 7 load balancer;&lt;/li&gt; &#xA; &lt;li&gt;dperf requires exclusive use of the network interfaces.&lt;/li&gt; &#xA; &lt;li&gt;dperf does not have routing capability. It is recommended to build a test environment with a switch.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Related Articles&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/561093951&#34;&gt;dperf FAQ(zh)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://metonymical.hatenablog.com/entry/2022/02/11/234927&#34;&gt;How to set up dperf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/baidu/dperf/main/test/performance/bandwidth/README.md&#34;&gt;Using dperf to test network bandwidth&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/iqiyi/dpvs/raw/master/test/release/v1.9.2/performance.md&#34;&gt;DPVS v1.9.2 Performance Tests by dperf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/601137162&#34;&gt;Using dperf to test 100Gbps bandwidth(zh)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/digger-yu/blog/raw/main/how%20to%20install%20dperf%20on%20ubuntu.md&#34;&gt;How to install dperf on ubuntu(zh)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;dperf welcomes your contribution. See the &lt;a href=&#34;https://raw.githubusercontent.com/baidu/dperf/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; file for details. Welcome to the development team, please contact &lt;a href=&#34;https://github.com/pengjianzhang&#34;&gt;Jianzhang Peng&lt;/a&gt; to add you to the developer mailing list.&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Jianzhang Peng - &lt;em&gt;Initial work&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;dperf is distributed under the &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>