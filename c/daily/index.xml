<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-06T01:39:50Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ventoy/Ventoy</title>
    <updated>2022-06-06T01:39:50Z</updated>
    <id>tag:github.com,2022-06-06:/ventoy/Ventoy</id>
    <link href="https://github.com/ventoy/Ventoy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A new bootable USB solution.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.ventoy.net/&#34;&gt;Ventoy&lt;/a&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release/ventoy/Ventoy.svg?style=for-the-badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/ventoy/Ventoy?style=for-the-badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/ventoy/Ventoy?style=for-the-badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/ventoy/Ventoy/total.svg?style=for-the-badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/workflow/status/ventoy/Ventoy/Ventoy%20CI?label=actions&amp;amp;logo=github&amp;amp;style=for-the-badge&#34;&gt; &lt;/p&gt; &#xA;&lt;h4 align=&#34;left&#34;&gt; Ventoy is an open source tool to create bootable USB drive for ISO/WIM/IMG/VHD(x)/EFI files. &lt;br&gt; With ventoy, you don&#39;t need to format the disk over and over, you just need to copy the image files to the USB drive and boot it. You can copy many image files at a time and ventoy will give you a boot menu to select them. &lt;br&gt; You can also browse ISO/WIM/IMG/VHD(x)/EFI files in local disk and boot them.&lt;br&gt; x86 Legacy BIOS, IA32 UEFI, x86_64 UEFI, ARM64 UEFI and MIPS64EL UEFI are supported in the same way.&lt;br&gt; Both MBR and GPT partition style are supported in the same way.&lt;br&gt; Most type of OS supported(Windows/WinPE/Linux/Unix/ChromeOS/Vmware/Xen...) &lt;br&gt; 880+ ISO files are tested (&lt;a href=&#34;https://www.ventoy.net/en/isolist.html&#34;&gt;List&lt;/a&gt;). 90%+ distros in &lt;a href=&#34;https://distrowatch.com/&#34;&gt;distrowatch.com&lt;/a&gt; supported (&lt;a href=&#34;https://www.ventoy.net/en/distrowatch.html&#34;&gt;Details&lt;/a&gt;). &lt;br&gt; &lt;br&gt;Official Website: &lt;a href=&#34;https://www.ventoy.net&#34;&gt;https://www.ventoy.net&lt;/a&gt; &lt;/h4&gt; &#xA;&lt;h1&gt;Tested OS&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;br&gt; Windows 7, Windows 8, Windows 8.1, Windows 10, Windows 11, Windows Server 2012, Windows Server 2012 R2, Windows Server 2016, Windows Server 2019, Windows Server 2022, WinPE&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;br&gt; Debian, Ubuntu, CentOS, RHEL, Deepin, Fedora, Rocky Linux, SLES, openSUSE, MX Linux, Manjaro, Linux Mint, Endless OS, openEuler, Elementary OS, Solus, Linx, Zorin, antiX, PClinuxOS, Arch, ArcoLinux, ArchLabs, BlackArch, Obarun, Artix Linux, Puppy Linux, Tails, Slax, MiniOS, Kali, Mageia, Slackware, Q4OS, Archman, Gentoo, Pentoo, NixOS, Ubuntu Kylin, Lubuntu, Xubuntu, Kubuntu, Ubuntu MATE, Ubuntu Budgie, Ubuntu Studio, Bluestar, OpenMandriva, ExTiX, Netrunner, ALT Linux, Nitrux, Peppermint, KDE neon, Linux Lite, Parrot OS, Qubes, Pop OS, ROSA, Void Linux, Star Linux, EndeavourOS, MakuluLinux, Voyager, Feren, ArchBang, LXLE, Knoppix, Robolinux, Calculate Linux, Clear Linux, Pure OS, Oracle Linux, Trident, Septor, Porteus, Devuan, GoboLinux, 4MLinux, Simplicity Linux, Zeroshell, Android-x86, netboot.xyz, Slitaz, SuperGrub2Disk, Proxmox VE, Kaspersky Rescue, SystemRescueCD, MemTest86, MiniTool Partition Wizard, Parted Magic, veket, Sabayon, Scientific, alpine, ClearOS, CloneZilla, Berry Linux, Trisquel, Ataraxia Linux, Minimal Linux Live, BackBox Linux, Emmabuntüs, ESET SysRescue Live,Nova Linux, AV Linux, RoboLinux, NuTyX, IPFire, SELKS, ZStack, Enso Linux, Security Onion, Network Security Toolkit, Absolute Linux, TinyCore, Springdale Linux, Frost Linux, Shark Linux, LinuxFX, Snail Linux, Astra Linux, Namib Linux, Resilient Linux, Virage Linux, Blackweb Security OS, R-DriveImage, O-O.DiskImage, Macrium, ToOpPy LINUX, GNU Guix, YunoHost, foxclone, siduction, Adelie Linux, Elive, Pardus, CDlinux, AcademiX, Austrumi, Zenwalk, Anarchy, DuZeru, BigLinux, OpenMediaVault, Ubuntu DP, Exe GNU/Linux, 3CX Phone System, KANOTIX, Grml, Karoshi, PrimTux, ArchStrike, CAELinux, Refracta, Cucumber, Fatdog, ForLEx, Hanthana, Kwort, MiniNo, Redcore, Runtu, Asianux, Clu Linux Live, Uruk, OB2D, BlueOnyx, Finnix, HamoniKR, Parabola, LinHES, LinuxConsole, BEE free, Untangle, Pearl, Thinstation, TurnKey, tuxtrans, Neptune, HefftorLinux, GeckoLinux, Mabox Linux, Zentyal, Maui, Reborn OS, SereneLinux , SkyWave Linux, Kaisen Linux, Regata OS, TROM-Jaro, DRBL Linux, Chalet OS, Chapeau, Desa OS, BlankOn, OpenMamba, Frugalware, Kibojoe Linux, Revenge OS, Tsurugi Linux, Drauger OS, Hash Linux, gNewSense, Ikki Boot, SteamOS, Hyperbola, VyOS, EasyNAS, SuperGamer, Live Raizo, Swift Linux, RebeccaBlackOS, Daphile, CRUX, Univention, Ufficio Zero, Rescuezilla, Phoenix OS, Garuda Linux, Mll, NethServer, OSGeoLive, Easy OS, Volumio, FreedomBox, paldo, UBOS, Recalbox, batocera, Lakka, LibreELEC, Pardus Topluluk, Pinguy, KolibriOS, Elastix, Arya, Omoikane, Omarine, Endian Firewall, Hamara, Rocks Cluster, MorpheusArch, Redo, Slackel, SME Server, APODIO, Smoothwall, Dragora, Linspire, Secure-K OS, Peach OSI, Photon, Plamo, SuperX, Bicom, Ploplinux, HP SPP, LliureX, Freespire, DietPi, BOSS, Webconverger, Lunar, TENS, Source Mage, RancherOS, T2, Vine, Pisi, blackPanther, mAid, Acronis, Active.Boot, AOMEI, Boot.Repair, CAINE, DaRT, EasyUEFI, R-Drive, PrimeOS, Avira Rescue System, bitdefender, Checkra1n Linux, Lenovo Diagnostics, Clover, Bliss-OS, Lenovo BIOS Update, Arcabit Rescue Disk, MiyoLinux, TeLOS, Kerio Control, RED OS, OpenWrt, MocaccinoOS, EasyStartup, Pyabr, Refracta, Eset SysRescue, Linpack Xtreme, Archcraft, ......&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Unix&lt;/strong&gt;&lt;br&gt; DragonFly FreeBSD pfSense GhostBSD FreeNAS TrueNAS XigmaNAS FuryBSD OPNsense HardenedBSD MidnightBSD ClonOS EmergencyBootKit&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ChromeOS&lt;/strong&gt;&lt;br&gt; FydeOS, CloudReady&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Other&lt;/strong&gt;&lt;br&gt; VMware ESXi, Citrix XenServer, Xen XCP-ng&lt;/p&gt; &#xA;&lt;h1&gt;Subscription Service&lt;/h1&gt; &#xA;&lt;p&gt;Ventoy is an open source software under GPLv3 license. But Ventoy project need to pay for the server hosting, domain name, bandwidth, many USB sticks for test, large capacity of HDD (for downloading ISO files) and so on.&lt;br&gt; For the better and sustainable development of Ventoy, I provide the &lt;a href=&#34;https://www.ventoy.net/en/doc_subscription.html&#34;&gt;【subscription service】&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Tested Image Report&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ventoy/Ventoy/issues/1195&#34;&gt;【How to report a successfully tested image file】&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Ventoy Browser&lt;/h1&gt; &#xA;&lt;p&gt;With Ventoy, you can also browse ISO/WIM/IMG/VHD(x)/EFI files in local disk and boot them. &lt;a href=&#34;https://www.ventoy.net/en/doc_browser.html&#34;&gt;Notes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;VentoyPlugson&lt;/h1&gt; &#xA;&lt;p&gt;A GUI Ventoy plugin configurator. &lt;a href=&#34;https://www.ventoy.net/en/plugin_plugson.html&#34;&gt;VentoyPlugson&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;100% open source&lt;/li&gt; &#xA; &lt;li&gt;Simple to use&lt;/li&gt; &#xA; &lt;li&gt;Fast (limited only by the speed of copying iso file)&lt;/li&gt; &#xA; &lt;li&gt;Can be installed in USB/Local Disk/SSD/NVMe/SD Card&lt;/li&gt; &#xA; &lt;li&gt;Directly boot from ISO/WIM/IMG/VHD(x)/EFI files, no extraction needed&lt;/li&gt; &#xA; &lt;li&gt;Support to browse and boot ISO/WIM/IMG/VHD(x)/EFI files in local disk&lt;/li&gt; &#xA; &lt;li&gt;No need to be continuous in disk for ISO/WIM/IMG/VHD(x)/EFI files&lt;/li&gt; &#xA; &lt;li&gt;MBR and GPT partition style supported (1.0.15+)&lt;/li&gt; &#xA; &lt;li&gt;x86 Legacy BIOS, IA32 UEFI, x86_64 UEFI, ARM64 UEFI, MIPS64EL UEFI supported&lt;/li&gt; &#xA; &lt;li&gt;IA32/x86_64 UEFI Secure Boot supported (1.0.07+)&lt;/li&gt; &#xA; &lt;li&gt;Persistence supported (1.0.11+)&lt;/li&gt; &#xA; &lt;li&gt;Windows auto installation supported (1.0.09+)&lt;/li&gt; &#xA; &lt;li&gt;RHEL7/8/CentOS/7/8/SUSE/Ubuntu Server/Debian ... auto installation supported (1.0.09+)&lt;/li&gt; &#xA; &lt;li&gt;FAT32/exFAT/NTFS/UDF/XFS/Ext2(3)(4) supported for main partition&lt;/li&gt; &#xA; &lt;li&gt;ISO files larger than 4GB supported&lt;/li&gt; &#xA; &lt;li&gt;Native boot menu style for Legacy &amp;amp; UEFI&lt;/li&gt; &#xA; &lt;li&gt;Most types of OS supported, 880+ iso files tested&lt;/li&gt; &#xA; &lt;li&gt;Linux vDisk boot supported&lt;/li&gt; &#xA; &lt;li&gt;Not only boot but also complete installation process&lt;/li&gt; &#xA; &lt;li&gt;Menu dynamically switchable between List/TreeView mode&lt;/li&gt; &#xA; &lt;li&gt;&#34;Ventoy Compatible&#34; concept&lt;/li&gt; &#xA; &lt;li&gt;Plugin Framework and GUI plugin configurator&lt;/li&gt; &#xA; &lt;li&gt;Injection files to runtime environment&lt;/li&gt; &#xA; &lt;li&gt;Boot configuration file dynamically replacement&lt;/li&gt; &#xA; &lt;li&gt;Highly customizable theme and menu&lt;/li&gt; &#xA; &lt;li&gt;USB drive write-protected support&lt;/li&gt; &#xA; &lt;li&gt;USB normal use unaffected&lt;/li&gt; &#xA; &lt;li&gt;Data nondestructive during version upgrade&lt;/li&gt; &#xA; &lt;li&gt;No need to update Ventoy when a new distro is released&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://www.ventoy.net/static/img/screen/screen_uefi.png&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installation Instructions&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://www.ventoy.net/en/doc_start.html&#34;&gt;https://www.ventoy.net/en/doc_start.html&lt;/a&gt; for detailed instructions.&lt;/p&gt; &#xA;&lt;h1&gt;Compile Instructions&lt;/h1&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/ventoy/Ventoy/master/DOC/BuildVentoyFromSource.txt&#34;&gt;BuildVentoyFromSource.txt&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Document&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Title&lt;/th&gt; &#xA;   &lt;th&gt;Link&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Install &amp;amp; Update&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ventoy.net/en/doc_start.html&#34;&gt;https://www.ventoy.net/en/doc_start.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Secure Boot&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ventoy.net/en/doc_secure.html&#34;&gt;https://www.ventoy.net/en/doc_secure.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Customize Theme&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ventoy.net/en/plugin_theme.html&#34;&gt;https://www.ventoy.net/en/plugin_theme.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Global Control&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ventoy.net/en/plugin_control.html&#34;&gt;https://www.ventoy.net/en/plugin_control.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Image List&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ventoy.net/en/plugin_imagelist.html&#34;&gt;https://www.ventoy.net/en/plugin_imagelist.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Auto Installation&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ventoy.net/en/plugin_autoinstall.html&#34;&gt;https://www.ventoy.net/en/plugin_autoinstall.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Injection Plugin&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ventoy.net/en/plugin_injection.html&#34;&gt;https://www.ventoy.net/en/plugin_injection.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Persistence Support&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ventoy.net/en/plugin_persistence.html&#34;&gt;https://www.ventoy.net/en/plugin_persistence.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Boot WIM file&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ventoy.net/en/plugin_wimboot.html&#34;&gt;https://www.ventoy.net/en/plugin_wimboot.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Windows VHD Boot&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ventoy.net/en/plugin_vhdboot.html&#34;&gt;https://www.ventoy.net/en/plugin_vhdboot.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Linux vDisk Boot&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ventoy.net/en/plugin_vtoyboot.html&#34;&gt;https://www.ventoy.net/en/plugin_vtoyboot.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DUD Plugin&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ventoy.net/en/plugin_dud.html&#34;&gt;https://www.ventoy.net/en/plugin_dud.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Password Plugin&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ventoy.net/en/plugin_password.html&#34;&gt;https://www.ventoy.net/en/plugin_password.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Conf Replace Plugin&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ventoy.net/en/plugin_bootconf_replace.html&#34;&gt;https://www.ventoy.net/en/plugin_bootconf_replace.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Menu Class&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ventoy.net/en/plugin_menuclass.html&#34;&gt;https://www.ventoy.net/en/plugin_menuclass.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Menu Alias&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ventoy.net/en/plugin_menualias.html&#34;&gt;https://www.ventoy.net/en/plugin_menualias.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Menu Extension&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ventoy.net/en/plugin_grubmenu.html&#34;&gt;https://www.ventoy.net/en/plugin_grubmenu.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Memdisk Mode&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ventoy.net/en/doc_memdisk.html&#34;&gt;https://www.ventoy.net/en/doc_memdisk.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;TreeView Mode&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ventoy.net/en/doc_treeview.html&#34;&gt;https://www.ventoy.net/en/doc_treeview.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Disk Layout MBR&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ventoy.net/en/doc_disk_layout.html&#34;&gt;https://www.ventoy.net/en/doc_disk_layout.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Disk Layout GPT&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ventoy.net/en/doc_disk_layout_gpt.html&#34;&gt;https://www.ventoy.net/en/doc_disk_layout_gpt.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Search Configuration&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.ventoy.net/en/doc_search_path.html&#34;&gt;https://www.ventoy.net/en/doc_search_path.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;FAQ&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://www.ventoy.net/en/faq.html&#34;&gt;https://www.ventoy.net/en/faq.html&lt;/a&gt; for detail&lt;/p&gt; &#xA;&lt;h1&gt;Forum&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://forums.ventoy.net&#34;&gt;https://forums.ventoy.net&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Donation&lt;/h1&gt; &#xA;&lt;p&gt;It would be much appreciated if you want to make a small donation to support my work!&lt;br&gt; Alipay, WeChat Pay, PayPal and Bitcoin are available for donation. You can choose any of them.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Alipay&lt;/th&gt; &#xA;   &lt;th&gt;WeChat Pay&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://www.ventoy.net/static/img/AliPay.png&#34; width=&#34;250&#34; height=&#34;250&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://www.ventoy.net/static/img/WeChatPay.png&#34; width=&#34;250&#34; height=&#34;250&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;PayPal&lt;/strong&gt;&lt;br&gt; You can transfer to my paypal account &lt;code&gt;admin@ventoy.net&lt;/code&gt; or just click &lt;a href=&#34;https://www.paypal.me/ventoy&#34;&gt;https://www.paypal.me/ventoy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Bitcoin&lt;/strong&gt;&lt;br&gt; Bitcoin Address &lt;code&gt;19mZDWzZgzkHCi9YX9H3fYCUuCHq3W6wfT&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>xmrig/xmrig</title>
    <updated>2022-06-06T01:39:50Z</updated>
    <id>tag:github.com,2022-06-06:/xmrig/xmrig</id>
    <link href="https://github.com/xmrig/xmrig" rel="alternate"></link>
    <summary type="html">&lt;p&gt;RandomX, KawPow, CryptoNight, AstroBWT and GhostRider unified CPU/GPU miner and RandomX benchmark&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;XMRig&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/xmrig/xmrig/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/xmrig/xmrig/total.svg?sanitize=true&#34; alt=&#34;Github All Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xmrig/xmrig/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/xmrig/xmrig/all.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xmrig/xmrig/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release-date/xmrig/xmrig.svg?sanitize=true&#34; alt=&#34;GitHub Release Date&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xmrig/xmrig/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/xmrig/xmrig.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xmrig/xmrig/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/xmrig/xmrig.svg?sanitize=true&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xmrig/xmrig/network&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/xmrig/xmrig.svg?sanitize=true&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;XMRig is a high performance, open source, cross platform RandomX, KawPow, CryptoNight, AstroBWT and &lt;a href=&#34;https://github.com/xmrig/xmrig/tree/master/src/crypto/ghostrider#readme&#34;&gt;GhostRider&lt;/a&gt; unified CPU/GPU miner and &lt;a href=&#34;https://xmrig.com/benchmark&#34;&gt;RandomX benchmark&lt;/a&gt;. Official binaries are available for Windows, Linux, macOS and FreeBSD.&lt;/p&gt; &#xA;&lt;h2&gt;Mining backends&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;CPU&lt;/strong&gt; (x64/ARMv7/ARMv8)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OpenCL&lt;/strong&gt; for AMD GPUs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;CUDA&lt;/strong&gt; for NVIDIA GPUs via external &lt;a href=&#34;https://github.com/xmrig/xmrig-cuda&#34;&gt;CUDA plugin&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/xmrig/xmrig/releases&#34;&gt;Binary releases&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://xmrig.com/docs/miner/build&#34;&gt;Build from source&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The preferred way to configure the miner is the &lt;a href=&#34;https://xmrig.com/docs/miner/config&#34;&gt;JSON config file&lt;/a&gt; as it is more flexible and human friendly. The &lt;a href=&#34;https://xmrig.com/docs/miner/command-line-options&#34;&gt;command line interface&lt;/a&gt; does not cover all features, such as mining profiles for different algorithms. Important options can be changed during runtime without miner restart by editing the config file or executing &lt;a href=&#34;https://xmrig.com/docs/miner/api&#34;&gt;API&lt;/a&gt; calls.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://xmrig.com/wizard&#34;&gt;Wizard&lt;/a&gt;&lt;/strong&gt; helps you create initial configuration for the miner.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;http://workers.xmrig.info&#34;&gt;Workers&lt;/a&gt;&lt;/strong&gt; helps manage your miners via HTTP API.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Default donation 1% (1 minute in 100 minutes) can be increased via option &lt;code&gt;donate-level&lt;/code&gt; or disabled in source code.&lt;/li&gt; &#xA; &lt;li&gt;XMR: &lt;code&gt;48edfHu7V9Z84YzzMa6fUueoELZ9ZRXq9VetWzYGzKt52XU5xvqgzYnDK9URnRoJMk1j8nLwEVsaSWJ4fhdUyZijBGUicoD&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/xmrig&#34;&gt;xmrig&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/SChernykh&#34;&gt;sech1&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contacts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:support@xmrig.com&#34;&gt;support@xmrig.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/user/XMRig/&#34;&gt;reddit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/xmrig_dev&#34;&gt;twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>glfw/glfw</title>
    <updated>2022-06-06T01:39:50Z</updated>
    <id>tag:github.com,2022-06-06:/glfw/glfw</id>
    <link href="https://github.com/glfw/glfw" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A multi-platform library for OpenGL, OpenGL ES, Vulkan, window and input&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GLFW&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/glfw/glfw/actions&#34;&gt;&lt;img src=&#34;https://github.com/glfw/glfw/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/elmindreda/glfw&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/0kf0ct9831i5l6sp/branch/master?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://scan.coverity.com/projects/glfw-glfw&#34;&gt;&lt;img src=&#34;https://scan.coverity.com/projects/4884/badge.svg?sanitize=true&#34; alt=&#34;Coverity Scan&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;GLFW is an Open Source, multi-platform library for OpenGL, OpenGL ES and Vulkan application development. It provides a simple, platform-independent API for creating windows, contexts and surfaces, reading input, handling events, etc.&lt;/p&gt; &#xA;&lt;p&gt;GLFW natively supports Windows, macOS and Linux and other Unix-like systems. On Linux both X11 and Wayland are supported.&lt;/p&gt; &#xA;&lt;p&gt;GLFW is licensed under the &lt;a href=&#34;https://www.glfw.org/license.html&#34;&gt;zlib/libpng license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can &lt;a href=&#34;https://www.glfw.org/download.html&#34;&gt;download&lt;/a&gt; the latest stable release as source or Windows binaries, or fetch the &lt;code&gt;latest&lt;/code&gt; branch from GitHub. Each release starting with 3.0 also has a corresponding &lt;a href=&#34;https://github.com/glfw/glfw/releases&#34;&gt;annotated tag&lt;/a&gt; with source and binary archives.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.glfw.org/docs/latest/&#34;&gt;documentation&lt;/a&gt; is available online and is included in all source and binary archives. See the &lt;a href=&#34;https://www.glfw.org/docs/latest/news.html&#34;&gt;release notes&lt;/a&gt; for new features, caveats and deprecations in the latest release. For more details see the &lt;a href=&#34;https://www.glfw.org/changelog.html&#34;&gt;version history&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;master&lt;/code&gt; branch is the stable integration branch and &lt;em&gt;should&lt;/em&gt; always compile and run on all supported platforms, although details of newly added features may change until they have been included in a release. New features and many bug fixes live in &lt;a href=&#34;https://github.com/glfw/glfw/branches/all&#34;&gt;other branches&lt;/a&gt; until they are stable enough to merge.&lt;/p&gt; &#xA;&lt;p&gt;If you are new to GLFW, you may find the &lt;a href=&#34;https://www.glfw.org/docs/latest/quick.html&#34;&gt;tutorial&lt;/a&gt; for GLFW 3 useful. If you have used GLFW 2 in the past, there is a &lt;a href=&#34;https://www.glfw.org/docs/latest/moving.html&#34;&gt;transition guide&lt;/a&gt; for moving to the GLFW 3 API.&lt;/p&gt; &#xA;&lt;p&gt;GLFW exists because of the contributions of &lt;a href=&#34;https://raw.githubusercontent.com/glfw/glfw/master/CONTRIBUTORS.md&#34;&gt;many people&lt;/a&gt; around the world, whether by reporting bugs, providing community support, adding features, reviewing or testing code, debugging, proofreading docs, suggesting features or fixing bugs.&lt;/p&gt; &#xA;&lt;h2&gt;Compiling GLFW&lt;/h2&gt; &#xA;&lt;p&gt;GLFW itself requires only the headers and libraries for your OS and window system. It does not need the headers for any context creation API (WGL, GLX, EGL, NSGL, OSMesa) or rendering API (OpenGL, OpenGL ES, Vulkan) to enable support for them.&lt;/p&gt; &#xA;&lt;p&gt;GLFW supports compilation on Windows with Visual C++ 2010 and later, MinGW and MinGW-w64, on macOS with Clang and on Linux and other Unix-like systems with GCC and Clang. It will likely compile in other environments as well, but this is not regularly tested.&lt;/p&gt; &#xA;&lt;p&gt;There are &lt;a href=&#34;https://www.glfw.org/download.html&#34;&gt;pre-compiled Windows binaries&lt;/a&gt; available for all supported compilers.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://www.glfw.org/docs/latest/compile.html&#34;&gt;compilation guide&lt;/a&gt; for more information about how to compile GLFW yourself.&lt;/p&gt; &#xA;&lt;h2&gt;Using GLFW&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://www.glfw.org/docs/latest/&#34;&gt;documentation&lt;/a&gt; for tutorials, guides and the API reference.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to GLFW&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/glfw/glfw/raw/master/docs/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;System requirements&lt;/h2&gt; &#xA;&lt;p&gt;GLFW supports Windows XP and later and macOS 10.8 and later. Linux and other Unix-like systems running the X Window System are supported even without a desktop environment or modern extensions, although some features require a running window or clipboard manager. The OSMesa backend requires Mesa 6.3.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://www.glfw.org/docs/latest/compat.html&#34;&gt;compatibility guide&lt;/a&gt; in the documentation for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;GLFW itself needs only CMake 3.1 or later and the headers and libraries for your OS and window system.&lt;/p&gt; &#xA;&lt;p&gt;The examples and test programs depend on a number of tiny libraries. These are located in the &lt;code&gt;deps/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kimgr/getopt_port/&#34;&gt;getopt_port&lt;/a&gt; for examples with command-line options&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tinycthread/tinycthread&#34;&gt;TinyCThread&lt;/a&gt; for threaded examples&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Dav1dde/glad&#34;&gt;glad2&lt;/a&gt; for loading OpenGL and Vulkan functions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/datenwolf/linmath.h&#34;&gt;linmath.h&lt;/a&gt; for linear algebra in examples&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Immediate-Mode-UI/Nuklear&#34;&gt;Nuklear&lt;/a&gt; for test and example UI&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nothings/stb&#34;&gt;stb_image_write&lt;/a&gt; for writing images to disk&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The documentation is generated with &lt;a href=&#34;https://doxygen.org/&#34;&gt;Doxygen&lt;/a&gt; if CMake can find that tool.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting bugs&lt;/h2&gt; &#xA;&lt;p&gt;Bugs are reported to our &lt;a href=&#34;https://github.com/glfw/glfw/issues&#34;&gt;issue tracker&lt;/a&gt;. Please check the &lt;a href=&#34;https://github.com/glfw/glfw/raw/master/docs/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt; for information on what to include when reporting a bug.&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added &lt;code&gt;GLFW_PLATFORM&lt;/code&gt; init hint for runtime platform selection (#1958)&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;GLFW_ANY_PLATFORM&lt;/code&gt;, &lt;code&gt;GLFW_PLATFORM_WIN32&lt;/code&gt;, &lt;code&gt;GLFW_PLATFORM_COCOA&lt;/code&gt;, &lt;code&gt;GLFW_PLATFORM_WAYLAND&lt;/code&gt;, &lt;code&gt;GLFW_PLATFORM_X11&lt;/code&gt; and &lt;code&gt;GLFW_PLATFORM_NULL&lt;/code&gt; symbols to specify the desired platform (#1958)&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;glfwGetPlatform&lt;/code&gt; function to query what platform was selected (#1655,#1958)&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;glfwPlatformSupported&lt;/code&gt; function to query if a platform is supported (#1655,#1958)&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;glfwInitAllocator&lt;/code&gt; for setting a custom memory allocator (#544,#1628,#1947)&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;GLFWallocator&lt;/code&gt; struct and &lt;code&gt;GLFWallocatefun&lt;/code&gt;, &lt;code&gt;GLFWreallocatefun&lt;/code&gt; and &lt;code&gt;GLFWdeallocatefun&lt;/code&gt; types (#544,#1628,#1947)&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;glfwInitVulkanLoader&lt;/code&gt; for using a non-default Vulkan loader (#1374,#1890)&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;GLFW_RESIZE_NWSE_CURSOR&lt;/code&gt;, &lt;code&gt;GLFW_RESIZE_NESW_CURSOR&lt;/code&gt;, &lt;code&gt;GLFW_RESIZE_ALL_CURSOR&lt;/code&gt; and &lt;code&gt;GLFW_NOT_ALLOWED_CURSOR&lt;/code&gt; cursor shapes (#427)&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;GLFW_RESIZE_EW_CURSOR&lt;/code&gt; alias for &lt;code&gt;GLFW_HRESIZE_CURSOR&lt;/code&gt; (#427)&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;GLFW_RESIZE_NS_CURSOR&lt;/code&gt; alias for &lt;code&gt;GLFW_VRESIZE_CURSOR&lt;/code&gt; (#427)&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;GLFW_POINTING_HAND_CURSOR&lt;/code&gt; alias for &lt;code&gt;GLFW_HAND_CURSOR&lt;/code&gt; (#427)&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;GLFW_MOUSE_PASSTHROUGH&lt;/code&gt; window hint for letting mouse input pass through the window (#1236,#1568)&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;GLFW_PLATFORM_UNAVAILABLE&lt;/code&gt; error for platform detection failures (#1958)&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;GLFW_FEATURE_UNAVAILABLE&lt;/code&gt; error for platform limitations (#1692)&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;GLFW_FEATURE_UNIMPLEMENTED&lt;/code&gt; error for incomplete backends (#1692)&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;GLFW_ANGLE_PLATFORM_TYPE&lt;/code&gt; init hint and &lt;code&gt;GLFW_ANGLE_PLATFORM_TYPE_*&lt;/code&gt; values to select ANGLE backend (#1380)&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;GLFW_X11_XCB_VULKAN_SURFACE&lt;/code&gt; init hint for selecting X11 Vulkan surface extension (#1793)&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;GLFW_BUILD_WIN32&lt;/code&gt; CMake option for enabling Win32 support (#1958)&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;GLFW_BUILD_COCOA&lt;/code&gt; CMake option for enabling Cocoa support (#1958)&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;GLFW_BUILD_X11&lt;/code&gt; CMake option for enabling X11 support (#1958)&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;GLFW_LIBRARY_TYPE&lt;/code&gt; CMake variable for overriding the library type (#279,#1307,#1497,#1574,#1928)&lt;/li&gt; &#xA; &lt;li&gt;Added &lt;code&gt;GLFW_PKG_CONFIG_REQUIRES_PRIVATE&lt;/code&gt; and &lt;code&gt;GLFW_PKG_CONFIG_LIBS_PRIVATE&lt;/code&gt; CMake variables exposing pkg-config dependencies (#1307)&lt;/li&gt; &#xA; &lt;li&gt;Made joystick subsystem initialize at first use (#1284,#1646)&lt;/li&gt; &#xA; &lt;li&gt;Made &lt;code&gt;GLFW_DOUBLEBUFFER&lt;/code&gt; a read-only window attribute&lt;/li&gt; &#xA; &lt;li&gt;Updated the minimum required CMake version to 3.1&lt;/li&gt; &#xA; &lt;li&gt;Updated gamepad mappings from upstream&lt;/li&gt; &#xA; &lt;li&gt;Disabled tests and examples by default when built as a CMake subdirectory&lt;/li&gt; &#xA; &lt;li&gt;Renamed &lt;code&gt;GLFW_USE_WAYLAND&lt;/code&gt; CMake option to &lt;code&gt;GLFW_BUILD_WAYLAND&lt;/code&gt; (#1958)&lt;/li&gt; &#xA; &lt;li&gt;Removed &lt;code&gt;GLFW_USE_OSMESA&lt;/code&gt; CMake option enabling the Null platform (#1958)&lt;/li&gt; &#xA; &lt;li&gt;Removed CMake generated configuration header&lt;/li&gt; &#xA; &lt;li&gt;Bugfix: The CMake config-file package used an absolute path and was not relocatable (#1470)&lt;/li&gt; &#xA; &lt;li&gt;Bugfix: Video modes with a duplicate screen area were discarded (#1555,#1556)&lt;/li&gt; &#xA; &lt;li&gt;Bugfix: Compiling with -Wextra-semi caused warnings (#1440)&lt;/li&gt; &#xA; &lt;li&gt;Bugfix: Built-in mappings failed because some OEMs re-used VID/PID (#1583)&lt;/li&gt; &#xA; &lt;li&gt;Bugfix: Some extension loader headers did not prevent default OpenGL header inclusion (#1695)&lt;/li&gt; &#xA; &lt;li&gt;Bugfix: Buffers were swapped at creation on single-buffered windows (#1873)&lt;/li&gt; &#xA; &lt;li&gt;Bugfix: Gamepad mapping updates could spam &lt;code&gt;GLFW_INVALID_VALUE&lt;/code&gt; due to incompatible controllers sharing hardware ID (#1763)&lt;/li&gt; &#xA; &lt;li&gt;Bugfix: Native access functions for context handles did not check that the API matched&lt;/li&gt; &#xA; &lt;li&gt;Bugfix: &lt;code&gt;glfwMakeContextCurrent&lt;/code&gt; would access TLS slot before initialization&lt;/li&gt; &#xA; &lt;li&gt;Bugfix: &lt;code&gt;glfwSetGammaRamp&lt;/code&gt; could emit &lt;code&gt;GLFW_INVALID_VALUE&lt;/code&gt; before initialization&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Added the &lt;code&gt;GLFW_WIN32_KEYBOARD_MENU&lt;/code&gt; window hint for enabling access to the window menu&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Added a version info resource to the GLFW DLL&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Disabled framebuffer transparency on Windows 7 when DWM windows are opaque (#1512)&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: &lt;code&gt;GLFW_INCLUDE_VULKAN&lt;/code&gt; plus &lt;code&gt;VK_USE_PLATFORM_WIN32_KHR&lt;/code&gt; caused symbol redefinition (#1524)&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: The cursor position event was emitted before its cursor enter event (#1490)&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: The window hint &lt;code&gt;GLFW_MAXIMIZED&lt;/code&gt; did not move or resize the window (#1499)&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: Disabled cursor mode interfered with some non-client actions&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: Super key was not released after Win+V hotkey (#1622)&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: &lt;code&gt;glfwGetKeyName&lt;/code&gt; could access out of bounds and return an invalid pointer&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: Some synthetic key events were reported as &lt;code&gt;GLFW_KEY_UNKNOWN&lt;/code&gt; (#1623)&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: Non-BMP Unicode codepoint input was reported as UTF-16&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: Monitor functions could return invalid values after configuration change (#1761)&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: Initialization would segfault on Windows 8 (not 8.1) (#1775)&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: Duplicate size events were not filtered (#1610)&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: Full screen windows were incorrectly resized by DPI changes (#1582)&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: &lt;code&gt;GLFW_SCALE_TO_MONITOR&lt;/code&gt; had no effect on systems older than Windows 10 version 1703 (#1511)&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: &lt;code&gt;USE_MSVC_RUNTIME_LIBRARY_DLL&lt;/code&gt; had no effect on CMake 3.15 or later (#1783,#1796)&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: Compilation with LLVM for Windows failed (#1807,#1824,#1874)&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: The foreground lock timeout was overridden, ignoring the user&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: Content scale queries could fail silently (#1615)&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: Content scales could have garbage values if monitor was recently disconnected (#1615)&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: A window created maximized and undecorated would cover the whole monitor (#1806)&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: The default restored window position was lost when creating a maximized window&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: &lt;code&gt;glfwMaximizeWindow&lt;/code&gt; would make a hidden window visible&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: &lt;code&gt;Alt+PrtSc&lt;/code&gt; would emit &lt;code&gt;GLFW_KEY_UNKNOWN&lt;/code&gt; and a different scancode than &lt;code&gt;PrtSc&lt;/code&gt; (#1993)&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: &lt;code&gt;GLFW_KEY_PAUSE&lt;/code&gt; scancode from &lt;code&gt;glfwGetKeyScancode&lt;/code&gt; did not match event scancode (#1993)&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: Instance-local operations used executable instance (#469,#1296,#1395)&lt;/li&gt; &#xA; &lt;li&gt;[Win32] Bugfix: The OSMesa library was not unloaded on termination&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Added support for &lt;code&gt;VK_EXT_metal_surface&lt;/code&gt; (#1619)&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Added locating the Vulkan loader at runtime in an application bundle&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Moved main menu creation to GLFW initialization time (#1649)&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Changed &lt;code&gt;EGLNativeWindowType&lt;/code&gt; from &lt;code&gt;NSView&lt;/code&gt; to &lt;code&gt;CALayer&lt;/code&gt; (#1169)&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Changed F13 key to report Print Screen for cross-platform consistency (#1786)&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Removed dependency on the CoreVideo framework&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Bugfix: &lt;code&gt;glfwSetWindowSize&lt;/code&gt; used a bottom-left anchor point (#1553)&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Bugfix: Window remained on screen after destruction until event poll (#1412)&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Bugfix: Event processing before window creation would assert (#1543)&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Bugfix: Undecorated windows could not be iconified on recent macOS&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Bugfix: Touching event queue from secondary thread before main thread would abort (#1649)&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Bugfix: Non-BMP Unicode codepoint input was reported as UTF-16 (#1635)&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Bugfix: Failing to retrieve the refresh rate of built-in displays could leak memory&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Bugfix: Objective-C files were compiled as C with CMake 3.19 (#1787)&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Bugfix: Duplicate video modes were not filtered out (#1830)&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Bugfix: Menu bar was not clickable on macOS 10.15+ until it lost and regained focus (#1648,#1802)&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Bugfix: Monitor name query could segfault on macOS 11 (#1809,#1833)&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Bugfix: The install name of the installed dylib was relative (#1504)&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Bugfix: The MoltenVK layer contents scale was updated only after related events were emitted&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Bugfix: Moving the cursor programmatically would freeze it for a fraction of a second (#1962)&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Bugfix: &lt;code&gt;kIOMasterPortDefault&lt;/code&gt; was deprecated in macOS 12.0 (#1980)&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Bugfix: &lt;code&gt;kUTTypeURL&lt;/code&gt; was deprecated in macOS 12.0 (#2003)&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Bugfix: A connected Apple AirPlay would emit a useless error (#1791)&lt;/li&gt; &#xA; &lt;li&gt;[Cocoa] Bugfix: The EGL and OSMesa libraries were not unloaded on termination&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: The CMake files did not check for the XInput headers (#1480)&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: Key names were not updated when the keyboard layout changed (#1462,#1528)&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: Decorations could not be enabled after window creation (#1566)&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: Content scale fallback value could be inconsistent (#1578)&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: &lt;code&gt;glfwMaximizeWindow&lt;/code&gt; had no effect on hidden windows&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: Clearing &lt;code&gt;GLFW_FLOATING&lt;/code&gt; on a hidden window caused invalid read&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: Changing &lt;code&gt;GLFW_FLOATING&lt;/code&gt; on a hidden window could silently fail&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: Disabled cursor mode was interrupted by indicator windows&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: Monitor physical dimensions could be reported as zero mm&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: Window position events were not emitted during resizing (#1613)&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: &lt;code&gt;glfwFocusWindow&lt;/code&gt; could terminate on older WMs or without a WM&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: Querying a disconnected monitor could segfault (#1602)&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: IME input of CJK was broken for &#34;C&#34; locale (#1587,#1636)&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: Termination would segfault if the IM had been destroyed&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: Any IM started after initialization would not be detected&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: Xlib errors caused by other parts of the application could be reported as GLFW errors&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: A handle race condition could cause a &lt;code&gt;BadWindow&lt;/code&gt; error (#1633)&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: XKB path used keysyms instead of physical locations for non-printable keys (#1598)&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: Function keys were mapped to &lt;code&gt;GLFW_KEY_UNKNOWN&lt;/code&gt; for some layout combinations (#1598)&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: Keys pressed simultaneously with others were not always reported (#1112,#1415,#1472,#1616)&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: Some window attributes were not applied on leaving fullscreen (#1863)&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: Changing &lt;code&gt;GLFW_FLOATING&lt;/code&gt; could leak memory&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: Icon pixel format conversion worked only by accident, relying on undefined behavior (#1986)&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: Dynamic loading on OpenBSD failed due to soname differences&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: Waiting for events would fail if file descriptor was too large (#2024)&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: Joystick events could lead to busy-waiting (#1872)&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: &lt;code&gt;glfwWaitEvents*&lt;/code&gt; did not continue for joystick events&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: &lt;code&gt;glfwPostEmptyEvent&lt;/code&gt; could be ignored due to race condition (#379,#1281,#1285,#2033)&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: Dynamic loading on NetBSD failed due to soname differences&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: Left shift of int constant relied on undefined behavior (#1951)&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: The OSMesa libray was not unloaded on termination&lt;/li&gt; &#xA; &lt;li&gt;[X11] Bugfix: A malformed response during selection transfer could cause a segfault&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Added dynamic loading of all Wayland libraries&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Added support for key names via xkbcommon&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Added support for file path drop events (#2040)&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Removed support for &lt;code&gt;wl_shell&lt;/code&gt; (#1443)&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: The &lt;code&gt;GLFW_HAND_CURSOR&lt;/code&gt; shape used the wrong image (#1432)&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: &lt;code&gt;CLOCK_MONOTONIC&lt;/code&gt; was not correctly enabled&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: Repeated keys could be reported with &lt;code&gt;NULL&lt;/code&gt; window (#1704)&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: Retrieving partial framebuffer size would segfault&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: Scrolling offsets were inverted compared to other platforms (#1463)&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: Client-Side Decorations were destroyed in the wrong order (#1798)&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: Monitors physical size could report zero (#1784,#1792)&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: Some keys were not repeating in Wayland (#1908)&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: Non-arrow cursors are offset from the hotspot (#1706,#1899)&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: The &lt;code&gt;O_CLOEXEC&lt;/code&gt; flag was not defined on FreeBSD&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: Key repeat could lead to a race condition (#1710)&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: Activating a window would emit two input focus events&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: Disable key repeat mechanism when window loses input focus&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: Window hiding and showing did not work (#1492,#1731)&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: A key being repeated was not released when window lost focus&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: Showing a hidden window did not emit a window refresh event&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: Full screen window creation did not ignore &lt;code&gt;GLFW_VISIBLE&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: Some keys were reported as wrong key or &lt;code&gt;GLFW_KEY_UNKNOWN&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: Text input did not repeat along with key repeat&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: &lt;code&gt;glfwPostEmptyEvent&lt;/code&gt; sometimes had no effect (#1520,#1521)&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: &lt;code&gt;glfwSetClipboardString&lt;/code&gt; would fail if set to result of &lt;code&gt;glfwGetClipboardString&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: Data source creation error would cause double free at termination&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: Partial writes of clipboard string would cause beginning to repeat&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: Some errors would cause clipboard string transfer to hang&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: Drag and drop data was misinterpreted as clipboard string&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: MIME type matching was not performed for clipboard string&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: The OSMesa library was not unloaded on termination&lt;/li&gt; &#xA; &lt;li&gt;[Wayland] Bugfix: &lt;code&gt;glfwCreateWindow&lt;/code&gt; could emit &lt;code&gt;GLFW_FEATURE_UNAVAILABLE&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;[POSIX] Removed use of deprecated function &lt;code&gt;gettimeofday&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;[POSIX] Bugfix: &lt;code&gt;CLOCK_MONOTONIC&lt;/code&gt; was not correctly tested for or enabled&lt;/li&gt; &#xA; &lt;li&gt;[WGL] Disabled the DWM swap interval hack for Windows 8 and later (#1072)&lt;/li&gt; &#xA; &lt;li&gt;[NSGL] Removed enforcement of forward-compatible flag for core contexts&lt;/li&gt; &#xA; &lt;li&gt;[NSGL] Bugfix: &lt;code&gt;GLFW_COCOA_RETINA_FRAMEBUFFER&lt;/code&gt; had no effect on newer macOS versions (#1442)&lt;/li&gt; &#xA; &lt;li&gt;[NSGL] Bugfix: Workaround for swap interval on 10.14 broke on 10.12 (#1483)&lt;/li&gt; &#xA; &lt;li&gt;[NSGL] Bugfix: Defining &lt;code&gt;GL_SILENCE_DEPRECATION&lt;/code&gt; externally caused a duplicate definition warning (#1840)&lt;/li&gt; &#xA; &lt;li&gt;[EGL] Added platform selection via the &lt;code&gt;EGL_EXT_platform_base&lt;/code&gt; extension (#442)&lt;/li&gt; &#xA; &lt;li&gt;[EGL] Added ANGLE backend selection via &lt;code&gt;EGL_ANGLE_platform_angle&lt;/code&gt; extension (#1380)&lt;/li&gt; &#xA; &lt;li&gt;[EGL] Bugfix: The &lt;code&gt;GLFW_DOUBLEBUFFER&lt;/code&gt; context attribute was ignored (#1843)&lt;/li&gt; &#xA; &lt;li&gt;[GLX] Bugfix: Context creation failed if GLX 1.4 was not exported by GLX library&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;On &lt;a href=&#34;https://www.glfw.org/&#34;&gt;glfw.org&lt;/a&gt; you can find the latest version of GLFW, as well as news, documentation and other information about the project.&lt;/p&gt; &#xA;&lt;p&gt;If you have questions related to the use of GLFW, we have a &lt;a href=&#34;https://discourse.glfw.org/&#34;&gt;forum&lt;/a&gt;, and the &lt;code&gt;#glfw&lt;/code&gt; IRC channel on &lt;a href=&#34;https://libera.chat/&#34;&gt;Libera.Chat&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have a bug to report, a patch to submit or a feature you&#39;d like to request, please file it in the &lt;a href=&#34;https://github.com/glfw/glfw/issues&#34;&gt;issue tracker&lt;/a&gt; on GitHub.&lt;/p&gt; &#xA;&lt;p&gt;Finally, if you&#39;re interested in helping out with the development of GLFW or porting it to your favorite platform, join us on the forum, GitHub or IRC.&lt;/p&gt;</summary>
  </entry>
</feed>