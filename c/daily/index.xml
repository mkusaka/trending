<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-23T01:32:52Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pymumu/smartdns</title>
    <updated>2022-08-23T01:32:52Z</updated>
    <id>tag:github.com,2022-08-23:/pymumu/smartdns</id>
    <link href="https://github.com/pymumu/smartdns" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A local DNS server to obtain the fastest website IP for the best Internet experience， 一个本地DNS服务器，获取最快的网站IP，获得最佳上网体验。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SmartDNS&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/ReadMe_en.md&#34;&gt;English&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/doc/smartdns-banner.png&#34; alt=&#34;SmartDNS&#34;&gt; SmartDNS 是一个运行在本地的 DNS 服务器，它接受来自本地客户端的 DNS 查询请求，然后从多个上游 DNS 服务器获取 DNS 查询结果，并将访问速度最快的结果返回给客户端，以此提高网络访问速度。 SmartDNS 同时支持指定特定域名 IP 地址，并高性匹配，可达到过滤广告的效果。&lt;br&gt; 与 DNSmasq 的 all-servers 不同，SmartDNS 返回的是访问速度最快的解析结果。详细差异请看&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98&#34;&gt;常见问题&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;支持树莓派、OpenWrt、华硕路由器原生固件和 Windows 系统等。&lt;/p&gt; &#xA;&lt;h2&gt;目录&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#smartdns&#34;&gt;SmartDNS&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E7%9B%AE%E5%BD%95&#34;&gt;目录&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E8%BD%AF%E4%BB%B6%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA&#34;&gt;软件效果展示&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E7%89%B9%E6%80%A7&#34;&gt;特性&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E6%9E%B6%E6%9E%84&#34;&gt;架构&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E4%B8%8B%E8%BD%BD&#34;&gt;下载&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8&#34;&gt;安装和使用&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E6%A0%87%E5%87%86-linux-%E7%B3%BB%E7%BB%9F--%E6%A0%91%E8%8E%93%E6%B4%BE&#34;&gt;标准 Linux 系统 / 树莓派&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#openwrt&#34;&gt;OpenWrt&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E5%8D%8E%E7%A1%95%E8%B7%AF%E7%94%B1%E5%99%A8%E5%8E%9F%E7%94%9F%E5%9B%BA%E4%BB%B6--%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6&#34;&gt;华硕路由器原生固件 / 梅林固件&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#optware--entware&#34;&gt;Optware / Entware&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#wsl&#34;&gt;WSL&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E&#34;&gt;配置文件说明&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98&#34;&gt;常见问题&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E7%BC%96%E8%AF%91&#34;&gt;编译&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E6%8D%90%E8%B5%A0&#34;&gt;捐赠&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#paypal-%E8%B4%9D%E5%AE%9D&#34;&gt;PayPal 贝宝&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#alipay-%E6%94%AF%E4%BB%98%E5%AE%9D&#34;&gt;AliPay 支付宝&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#wechat-pay-%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98&#34;&gt;WeChat Pay 微信支付&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E5%BC%80%E6%BA%90%E5%A3%B0%E6%98%8E&#34;&gt;开源声明&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;软件效果展示&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;阿里 DNS&lt;/strong&gt;&lt;br&gt; 使用阿里 DNS 查询百度IP，并检测结果。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nslookup www.baidu.com 223.5.5.5&#xA;Server:         223.5.5.5&#xA;Address:        223.5.5.5#53&#xA;&#xA;Non-authoritative answer:&#xA;www.baidu.com   canonical name = www.a.shifen.com.&#xA;Name:   www.a.shifen.com&#xA;Address: 180.97.33.108&#xA;Name:   www.a.shifen.com&#xA;Address: 180.97.33.107&#xA;&#xA;$ ping 180.97.33.107 -c 2&#xA;PING 180.97.33.107 (180.97.33.107) 56(84) bytes of data.&#xA;64 bytes from 180.97.33.107: icmp_seq=1 ttl=55 time=24.3 ms&#xA;64 bytes from 180.97.33.107: icmp_seq=2 ttl=55 time=24.2 ms&#xA;&#xA;--- 180.97.33.107 ping statistics ---&#xA;2 packets transmitted, 2 received, 0% packet loss, time 1001ms&#xA;rtt min/avg/max/mdev = 24.275/24.327/24.380/0.164 ms&#xA;pi@raspberrypi:~/code/smartdns_build $ ping 180.97.33.108 -c 2&#xA;PING 180.97.33.108 (180.97.33.108) 56(84) bytes of data.&#xA;64 bytes from 180.97.33.108: icmp_seq=1 ttl=55 time=31.1 ms&#xA;64 bytes from 180.97.33.108: icmp_seq=2 ttl=55 time=31.0 ms&#xA;&#xA;--- 180.97.33.108 ping statistics ---&#xA;2 packets transmitted, 2 received, 0% packet loss, time 1001ms&#xA;rtt min/avg/max/mdev = 31.014/31.094/31.175/0.193 ms&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;SmartDNS&lt;/strong&gt;&lt;br&gt; 使用 SmartDNS 查询百度 IP，并检测结果。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nslookup www.baidu.com&#xA;Server:         192.168.1.1&#xA;Address:        192.168.1.1#53&#xA;&#xA;Non-authoritative answer:&#xA;www.baidu.com   canonical name = www.a.shifen.com.&#xA;Name:   www.a.shifen.com&#xA;Address: 14.215.177.39&#xA;&#xA;$ ping 14.215.177.39 -c 2&#xA;PING 14.215.177.39 (14.215.177.39) 56(84) bytes of data.&#xA;64 bytes from 14.215.177.39: icmp_seq=1 ttl=56 time=6.31 ms&#xA;64 bytes from 14.215.177.39: icmp_seq=2 ttl=56 time=5.95 ms&#xA;&#xA;--- 14.215.177.39 ping statistics ---&#xA;2 packets transmitted, 2 received, 0% packet loss, time 1001ms&#xA;rtt min/avg/max/mdev = 5.954/6.133/6.313/0.195 ms&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;从对比看出，SmartDNS 找到了访问 &lt;a href=&#34;http://www.baidu.com&#34;&gt;www.baidu.com&lt;/a&gt; 最快的 IP 地址，比阿里 DNS 速度快了 5 倍。&lt;/p&gt; &#xA;&lt;h2&gt;特性&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;多 DNS 上游服务器&lt;/strong&gt;&lt;br&gt; 支持配置多个上游 DNS 服务器，并同时进行查询，即使其中有 DNS 服务器异常，也不会影响查询。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;返回最快 IP 地址&lt;/strong&gt;&lt;br&gt; 支持从域名所属 IP 地址列表中查找到访问速度最快的 IP 地址，并返回给客户端，提高网络访问速度。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;支持多种查询协议&lt;/strong&gt;&lt;br&gt; 支持 UDP、TCP、TLS 和 HTTPS 查询，以及非 53 端口查询。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;特定域名 IP 地址指定&lt;/strong&gt;&lt;br&gt; 支持指定域名的 IP 地址，达到广告过滤效果、避免恶意网站的效果。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;域名高性能后缀匹配&lt;/strong&gt;&lt;br&gt; 支持域名后缀匹配模式，简化过滤配置，过滤 20 万条记录时间 &amp;lt; 1ms。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;域名分流&lt;/strong&gt;&lt;br&gt; 支持域名分流，不同类型的域名向不同的 DNS 服务器查询。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Windows / Linux 多平台支持&lt;/strong&gt;&lt;br&gt; 支持标准 Linux 系统（树莓派）、OpenWrt 系统各种固件和华硕路由器原生固件。同时还支持 WSL（Windows Subsystem for Linux，适用于 Linux 的 Windows 子系统）。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;支持 IPv4、IPv6 双栈&lt;/strong&gt;&lt;br&gt; 支持 IPv4 和 IPV 6网络，支持查询 A 和 AAAA 记录，支持双栈 IP 速度优化，并支持完全禁用 IPv6 AAAA 解析。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;高性能、占用资源少&lt;/strong&gt;&lt;br&gt; 多线程异步 IO 模式，cache 缓存查询结果。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;架构&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/pymumu/test/releases/download/blob/architecture.png&#34; alt=&#34;Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;SmartDNS 接收本地网络设备的DNS 查询请求，如 PC、手机的查询请求；&lt;/li&gt; &#xA; &lt;li&gt;然后将查询请求发送到多个上游 DNS 服务器，可支持 UDP 标准端口或非标准端口查询，以及 TCP 查询；&lt;/li&gt; &#xA; &lt;li&gt;上游 DNS 服务器返回域名对应的服务器 IP 地址列表，SmartDNS 则会检测从本地网络访问速度最快的服务器 IP；&lt;/li&gt; &#xA; &lt;li&gt;最后将访问速度最快的服务器 IP 返回给本地客户端。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;下载&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;下载对应系统或固件版本的 SmartDNS 安装包，对应关系如下。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;支持系统（架构）&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;安装包&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;支持说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;标准 Linux 系统（ARM）&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns.1.yyyy.MM.dd-REL.arm-debian-all.deb&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ARM 的树莓派 Raspbian Stretch 和 Debian 9 系统&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;标准 Linux 系统（ARM64）&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns.1.yyyy.MM.dd-REL.aarch64-debian-all.deb&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ARM64 的 Debian Stretch 和 Debian 9 系统&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;标准 Linux 系统（x86_64）&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns.1.yyyy.MM.dd-REL.x86_64-linux-all.tar.gz&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;64 位 Linux 系统&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;标准 Linux 系统（x86）&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns.1.yyyy.MM.dd-REL.x86-linux-all.tar.gz&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;32 位 Linux 系统&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;WSL&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns.1.yyyy.MM.dd-REL.x86_64-linux-all.tar.gz&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;WSL&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Optware&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns.1.yyyy.MM.dd-REL.mips-optware-all.ipk&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MIPS 大端架构的 Optware 系统&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Optware（MIPS Little Endian）&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns.1.yyyy.MM.dd-REL.mipsel-optware-all.ipk&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MIPS 小端架构的 Optware 系统&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Optware（ARM）&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns.1.yyyy.MM.dd-REL.arm-optware-all.ipk&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ARM 小端架构的 Optware 系统&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OpenWrt（MIPS）&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns.1.yyyy.MM.dd-REL.mips-openwrt-all.ipk&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MIPS 大端架构的 OpenWrt 系统&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OpenWrt（MIPS Little Endian）&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns.1.yyyy.MM.dd-REL.mipsel-openwrt-all.ipk&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MIPS 小端架构的 OpenWrt 系统&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OpenWrt（ARM）&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;smartdns.1.yyyy.MM.dd-REL.arm-openwrt-all.ipk&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ARM 小端架构的 OpenWrt 系统&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OpenWrt LuCI&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;luci-app-smartdns.1.yyyy.MM.dd-REL.all.ipk&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OpenWrt 管理界面&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OpenWrt LuCI&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;luci-app-smartdns.1.yyyy.MM.dd-REL.all-luci-compat-all.ipk&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;OpenWrt 管理界面、OpenWrt 18.xx 及之前版本&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/pymumu/smartdns/releases&#34;&gt;前往 Release 页面下载&lt;/a&gt;。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;请注意：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Release 释出的软件包采取静态编译，无外部依赖，但体积大。若需要小体积软件包，请自行编译或从 OpenWrt / Entware 仓库获取。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;静态编译的软件包未强制判断 CPU 架构，安装不正确的软件包将会导致服务无法启动，请确保正确安装对应的版本。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;安装和使用&lt;/h2&gt; &#xA;&lt;h3&gt;标准 Linux 系统 / 树莓派&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;安装&lt;/p&gt; &lt;p&gt;下载配套安装包，并上传到 Linux 系统中。&lt;/p&gt; &lt;p&gt;标准 Linux 系统（X86 / X86_64）请执行如下命令安装：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ tar zxf smartdns.1.yyyy.MM.dd-REL.x86_64-linux-all.tar.gz&#xA;$ cd smartdns&#xA;$ chmod +x ./install&#xA;$ ./install -i&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;树莓派或其他 Debian 系系统（ARM / ARM64）请执行如下命令安装：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# dpkg -i smartdns.1.yyyy.MM.dd-REL.arm-debian-all.deb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;修改配置&lt;/p&gt; &lt;p&gt;安装完成后，可配置 SmartDNS 的上游服务器信息。&lt;/p&gt; &lt;p&gt;一般情况下，只需要增加 &lt;code&gt;server &lt;/code&gt;[&lt;code&gt;IP&lt;/code&gt;]&lt;code&gt;:port&lt;/code&gt; 和 &lt;code&gt;server-tcp &lt;/code&gt;[&lt;code&gt;IP&lt;/code&gt;]&lt;code&gt;:port&lt;/code&gt; 配置项。&lt;/p&gt; &lt;p&gt;请尽可能配置多个上游 DNS 服务器，包括国内外的服务器。&lt;/p&gt; &lt;p&gt;具体配置参数请参考&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E&#34;&gt;配置文件说明&lt;/a&gt;。&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# vi /etc/smartdns/smartdns.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;启动服务&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# systemctl enable smartdns&#xA;# systemctl start smartdns&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;将 DNS 请求转发到 SmartDNS 解析&lt;/p&gt; &lt;p&gt;修改本地路由器的 DNS 服务器，将 DNS 服务器配置为 SmartDNS。&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;登录到本地网络的路由器中，配置树莓派，分配其静态 IP 地址。&lt;/li&gt; &#xA;   &lt;li&gt;修改 WAN 口或者 DHCP DNS 为树莓派 IP 地址。 &lt;strong&gt;注意：&lt;/strong&gt; I. 每款路由器配置方法不尽相同，请在网络上搜索对应配置方法。 II. 华为等路由器可能不支持配置 DNS 为本地 IP，可修改电脑端或手机端的 DNS 服务器为树莓派 IP。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;检测服务是否配置成功&lt;/p&gt; &lt;p&gt;执行&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nslookup -querytype=ptr smartdns&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;查看命令结果中的 &lt;code&gt;name&lt;/code&gt; 是否为 &lt;code&gt;smartdns&lt;/code&gt; 或你的主机名，如果是则表示生效&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nslookup -querytype=ptr smartdns&#xA;Server:         192.168.1.1&#xA;Address:        192.168.1.1#53&#xA;&#xA;Non-authoritative answer:&#xA;smartdns        name = smartdns.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;OpenWrt&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;安装&lt;/p&gt; &lt;p&gt;将软件包（使用 WinSCP 等）上传到路由器的 &lt;code&gt;/root&lt;/code&gt; 目录，执行如下命令安装&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# opkg install smartdns.1.yyyy.MM.dd-REL.xxxx.ipk&#xA;# opkg install luci-app-smartdns.1.yyyy.MM.dd-REL.all.ipk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;注意：&lt;/strong&gt; 19.07 之前的版本，请务必安装 &lt;code&gt;luci-app-smartdns.1.yyyy.MM.dd-REL.all-luci-compat-all.ipk&lt;/code&gt;。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;修改配置&lt;/p&gt; &lt;p&gt;登录 OpenWrt 管理页面，打开 &lt;code&gt;Services&lt;/code&gt; -&amp;gt; &lt;code&gt;SmartDNS&lt;/code&gt; 进行配置。&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;在 &lt;code&gt;Upstream Servers&lt;/code&gt; 增加上游 DNS 服务器配置，建议配置多个国内外 DNS 服务器。&lt;/li&gt; &#xA;   &lt;li&gt;在 &lt;code&gt;Domain Address&lt;/code&gt; 指定特定域名的 IP 地址，可用于广告屏蔽。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;启用服务&lt;/p&gt; &lt;p&gt;SmartDNS 服务生效方法有两种，一种是&lt;strong&gt;直接作为主 DNS 服务&lt;/strong&gt;，另一种是&lt;strong&gt;作为 DNSmasq 的上游&lt;/strong&gt;。 默认情况下，SmartDNS 采用第一种方式。如下两种方式根据需求选择即可。&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;方法一：作为主 DNS 服务（默认方案）&lt;/strong&gt;&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;启用 SmartDNS 的 53 端口重定向&lt;/p&gt; &lt;p&gt;登录 OpenWrt 管理界面，点击 &lt;code&gt;Services&lt;/code&gt; -&amp;gt; &lt;code&gt;SmartDNS&lt;/code&gt; -&amp;gt; &lt;code&gt;redirect&lt;/code&gt;，选择 &lt;code&gt;重定向 53 端口到 SmartDNS &lt;/code&gt;启用 53 端口转发。&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;检测转发服务是否配置成功&lt;/p&gt; &lt;p&gt;执行&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nslookup -querytype=ptr smartdns&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;查看命令结果中的 &lt;code&gt;name&lt;/code&gt; 是否为 &lt;code&gt;smartdns&lt;/code&gt; 或你的主机名，如果是则表示生效&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nslookup -querytype=ptr smartdns&#xA;Server:         192.168.1.1&#xA;Address:        192.168.1.1#53&#xA;&#xA;Non-authoritative answer:&#xA;smartdns        name = smartdns.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;界面提示重定向失败&lt;/p&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt; &lt;p&gt;检查 &lt;code&gt;iptables&lt;/code&gt; 和/或 &lt;code&gt;ip6tables&lt;/code&gt; 命令是否正确安装。&lt;/p&gt; &lt;/li&gt; &#xA;       &lt;li&gt; &lt;p&gt;OpenWrt 15.01 系统不支持 IPv6 重定向，如网络需要支持 IPv6，请将 DNSmasq 上游改为 SmartDNS，或者将 SmartDNS 的端口改为53，并停用 DNSmasq。&lt;/p&gt; &lt;/li&gt; &#xA;       &lt;li&gt; &lt;p&gt;LEDE 系统请安装 IPv6 的 NAT 转发驱动。点击 &lt;code&gt;System&lt;/code&gt; -&amp;gt; &lt;code&gt;Software&lt;/code&gt;，点击 &lt;code&gt;Update lists&lt;/code&gt; 更新软件列表后，安装 &lt;code&gt;ip6tables-mod-nat&lt;/code&gt;。&lt;/p&gt; &lt;/li&gt; &#xA;       &lt;li&gt; &lt;p&gt;使用如下命令检查路由规则是否生效&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;iptables -t nat -L PREROUTING | grep REDIRECT&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;       &lt;li&gt; &lt;p&gt;如转发功能不正常，请使用&lt;strong&gt;方法二：作为 DNSmasq 的上游&lt;/strong&gt;。&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;方法二：作为 DNSmasq 的上游&lt;/strong&gt;&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;strong&gt;将 DNSmasq 的请求发送到 SmartDNS&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;登录 OpenWrt 管理界面，点击 &lt;code&gt;Services&lt;/code&gt; -&amp;gt; &lt;code&gt;SmartDNS&lt;/code&gt; -&amp;gt; &lt;code&gt;Redirect&lt;/code&gt;，选择&lt;code&gt;作为 DNSmasq 的上游服务器&lt;/code&gt;，设置 DNSmasq 的上游服务器为 SmartDNS。&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;strong&gt;检测上游服务是否配置成功&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;执行&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nslookup -querytype=ptr smartdns&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;查看命令结果中的 &lt;code&gt;name&lt;/code&gt; 是否为 &lt;code&gt;smartdns&lt;/code&gt; 或你的主机名，如果是则表示生效&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nslookup -querytype=ptr smartdns&#xA;Server:         192.168.1.1&#xA;Address:        192.168.1.1#53&#xA;&#xA;Non-authoritative answer:&#xA;smartdns        name = smartdns.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;或执行&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nslookup smartdns&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;查看命令结果是否有解析出路由器的IP地址，如果是则表示生效。&lt;/p&gt; &lt;p&gt;或执行&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;ping smartdns.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;检测ping是否解析对应主机的IP地址。&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;启动服务&lt;/p&gt; &lt;p&gt;勾选配置页面中的 &lt;code&gt;Enable（启用）&lt;/code&gt;来启动 SmartDNS。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;如已经安装 ChinaDNS，建议将 ChinaDNS 的上游配置为 SmartDNS。&lt;/li&gt; &#xA;   &lt;li&gt;SmartDNS 默认情况下将 53 端口的请求转发到 SmartDNS的 本地端口，此行为由 &lt;code&gt;Redirect&lt;/code&gt; 配置选项控制。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;华硕路由器原生固件 / 梅林固件&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt; 梅林固件派生自华硕固件，理论上可以直接使用华硕配套的安装包使用。但目前未经验证，如有问题，请提交 Issue。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;准备&lt;/p&gt; &lt;p&gt;在使用此软件时，需要确认路由器是否支持 U 盘，并准备好 U 盘一个。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;启用 SSH 登录&lt;/p&gt; &lt;p&gt;登录管理界面，点击 &lt;code&gt;系统管理&lt;/code&gt; -&amp;gt; &lt;code&gt;系统设置&lt;/code&gt;，配置 &lt;code&gt;Enable SSH&lt;/code&gt; 为 &lt;code&gt;Lan Only&lt;/code&gt;。&lt;br&gt; SSH 登录用户名密码与管理界面相同。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;下载 &lt;code&gt;Download Master&lt;/code&gt;&lt;/p&gt; &lt;p&gt;在管理界面点击 &lt;code&gt;USB 相关应用&lt;/code&gt; -&amp;gt; &lt;code&gt;Download Master&lt;/code&gt; 下载。&lt;br&gt; 下载完成后，启用 &lt;code&gt;Download Master&lt;/code&gt;，如果不需要下载功能，此时可以卸载 &lt;code&gt;Download Master&lt;/code&gt;，但要保证卸载前 &lt;code&gt;Download Master&lt;/code&gt; 是启用的。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安装 SmartDNS&lt;/p&gt; &lt;p&gt;将软件包（使用 WinSCP 等）上传到路由器的 &lt;code&gt;/tmp/mnt/sda1&lt;/code&gt; 目录（或网上邻居复制到 sda1 共享目录），执行如下命令安装&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# ipkg install smartdns.1.yyyy.MM.dd-REL.mipsbig.ipk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;重启路由器使服务生效&lt;/p&gt; &lt;p&gt;待路由器启动后， 执行&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nslookup -querytype=ptr smartdns&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;查看命令结果中的 &lt;code&gt;name&lt;/code&gt; 是否为 &lt;code&gt;smartdns&lt;/code&gt; 或你的主机名，如果是则表示生效&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nslookup -querytype=ptr smartdns&#xA;Server:         192.168.1.1&#xA;Address:        192.168.1.1#53&#xA;&#xA;Non-authoritative answer:&#xA;smartdns        name = smartdns.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;额外说明&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;上述过程，SmartDNS 将安装到 U 盘根目录，采用 Optware 的模式运行。 其目录结构如下（此处仅列出 SmartDNS 相关文件）：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;U 盘&#xA;└── asusware.mipsbig&#xA;        ├── bin&#xA;        ├── etc&#xA;        |    ├── smartdns&#xA;        |    |     └── smartdns.conf&#xA;        |    └── init.d&#xA;        |          └── S50smartdns&#xA;        ├── lib&#xA;        ├── sbin&#xA;        ├── usr&#xA;        |    └── sbin&#xA;        |          └── smartdns&#xA;        ....&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;如要修改配置，可以 SSH 登录路由器，使用 vi 命令修改&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# vi /opt/etc/smartdns/smartdns.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;也可以通过网上邻居修改，网上邻居共享目录 &lt;code&gt;sda1&lt;/code&gt; 看不到 &lt;code&gt;asusware.mipsbig&lt;/code&gt; 目录，但可以直接在&lt;code&gt;文件管理器&lt;/code&gt;中输入 &lt;code&gt;asusware.mipsbig\etc\init.d&lt;/code&gt; 访问&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;\\192.168.1.1\sda1\asusware.mipsbig\etc\init.d&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Optware / Entware&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;准备&lt;/p&gt; &lt;p&gt;在使用此软件时，需要确认路由器是否支持 U 盘，并准备好 U 盘一个。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安装 SmartDNS&lt;/p&gt; &lt;p&gt;将软件（使用 WinSCP 等）上传到路由器的 &lt;code&gt;/tmp&lt;/code&gt; 目录，执行如下命令安装&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# ipkg install smartdns.1.yyyy.MM.dd-REL.mipsbig.ipk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;修改 SmartDNS 配置&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# vi /opt/etc/smartdns/smartdns.conf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;另外，如需支持 IPv6，可设置工作模式为 &lt;code&gt;2&lt;/code&gt;，将 DNSmasq 的 DNS 服务禁用，设置 SmartDNS 为主用 DNS 服务器。将文件 &lt;code&gt;/opt/etc/smartdns/smartdns-opt.conf&lt;/code&gt; 中的 &lt;code&gt;SMARTDNS_WORKMODE&lt;/code&gt; 的值修改为 &lt;code&gt;2&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;SMARTDNS_WORKMODE=&#34;2&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;重启路由器使服务生效&lt;/p&gt; &lt;p&gt;待路由器启动后， 执行&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nslookup -querytype=ptr smartdns&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;查看命令结果中的 &lt;code&gt;name&lt;/code&gt; 是否为 &lt;code&gt;smartdns&lt;/code&gt; 或你的主机名，如果是则表示生效&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nslookup -querytype=ptr smartdns&#xA;Server:         192.168.1.1&#xA;Address:        192.168.1.1#53&#xA;&#xA;Non-authoritative answer:&#xA;smartdns        name = smartdns.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; 若服务没有自动启动，则需要设置 Optware / Entware 自动启动，具体方法请参考 Optware/Entware 的文档。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;WSL&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;安装 WSL&lt;/p&gt; &lt;p&gt;安装 WSL 运行环境，发行版本选择 Ubuntu 系统为例。安装步骤请参考 &lt;a href=&#34;https://docs.microsoft.com/zh-CN/windows/wsl/install&#34;&gt;WSL 安装说明&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安装 SmartDNS&lt;/p&gt; &lt;p&gt;下载适用于 WSL 的安装包，并解压到如 D 盘根目录。解压后目录如下：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;D:\SMARTDNS&#xA;├─etc&#xA;│  ├─default&#xA;│  ├─init.d&#xA;│  └─smartdns&#xA;├─package&#xA;│  └─windows&#xA;├─src&#xA;└─systemd&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;双击 &lt;code&gt;D:\smartdns\package\windows&lt;/code&gt; 目录下的 &lt;code&gt;install.bat&lt;/code&gt; 进行安装。要求输入密码时，请输入 &lt;code&gt;WLS ubuntu&lt;/code&gt; 的密码。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;修改配置&lt;/p&gt; &lt;p&gt;用记事本等打开 &lt;code&gt;D:\smartdns\etc\smartdns&lt;/code&gt; 目录中的 &lt;code&gt;smartdns.conf&lt;/code&gt; 配置文件配置 SmartDNS。&lt;/p&gt; &lt;p&gt;一般情况下，只需要增加 &lt;code&gt;server [IP]:port&lt;/code&gt; 和 &lt;code&gt;server-tcp [IP]:port&lt;/code&gt; 配置项， 尽可能配置多个上游DNS服务器，包括国内外的服务器。&lt;/p&gt; &lt;p&gt;具体配置请参考&lt;a href=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E&#34;&gt;配置文件说明&lt;/a&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;重新加载配置&lt;/p&gt; &lt;p&gt;双击 &lt;code&gt;D:\smartdns\package\windows&lt;/code&gt; 目录下的 &lt;code&gt;reload.bat&lt;/code&gt; 进行重新加载。要求输入密码时，请输入 &lt;code&gt;WLS ubuntu&lt;/code&gt; 的密码。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;将 DNS 请求转发到 SmartDNS 解析&lt;/p&gt; &lt;p&gt;将 Windows 的默认 DNS 服务器修改为 &lt;code&gt;127.0.0.1&lt;/code&gt;，具体步骤参考 Windows &lt;a href=&#34;https://support.microsoft.com/zh-cn/help/15089/windows-change-tcp-ip-settings&#34;&gt;更改 TCP/IP 设置&lt;/a&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;检测服务是否配置成功&lt;/p&gt; &lt;p&gt;执行&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nslookup -querytype=ptr smartdns&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;查看命令结果中的 &lt;code&gt;name&lt;/code&gt; 是否为 &lt;code&gt;smartdns&lt;/code&gt; 或你的主机名，如果是则表示生效&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nslookup -querytype=ptr smartdns&#xA;Server:         192.168.1.1&#xA;Address:        192.168.1.1#53&#xA;&#xA;Non-authoritative answer:&#xA;smartdns        name = smartdns.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;配置文件说明&lt;/h2&gt; &#xA;&lt;p&gt;配置建议：&lt;strong&gt;smartdns默认已设置为最优模式，适合大部分场景的DNS查询体验改善，一般情况只需要增加上游服务器地址即可，无需做其他配置修改；如有其他配置修改，请务必了解其用途，避免修改后起到反作用。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;键名&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;功能说明&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;默认值&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;可用值/要求&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;举例&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;server-name&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;DNS 服务器名称&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;操作系统主机名 / smartdns&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;符合主机名规格的字符串&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;server-name smartdns&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;bind&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;DNS 监听端口号&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[::]:53&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;可绑定多个端口。&lt;br&gt;IP:PORT: 服务器 IP:端口号&lt;br&gt;[-group]: 请求时使用的 DNS 服务器组&lt;br&gt;[-no-rule-addr]：跳过 address 规则&lt;br&gt;[-no-rule-nameserver]：跳过 Nameserver 规则&lt;br&gt;[-no-rule-ipset]：跳过 ipset 规则&lt;br&gt;[-no-rule-soa]：跳过 SOA(#) 规则&lt;br&gt;[-no-dualstack-selection]：停用双栈测速&lt;br&gt;[-no-speed-check]：停用测速&lt;br&gt;[-no-cache]：停止缓存&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;bind :53&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;bind-tcp&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;DNS TCP 监听端口号&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[::]:53&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;可绑定多个端口。&lt;br&gt;IP:PORT: 服务器 IP:端口号&lt;br&gt;[-group]: 请求时使用的 DNS 服务器组&lt;br&gt;[-no-rule-addr]：跳过 address 规则&lt;br&gt;[-no-rule-nameserver]：跳过 nameserver 规则&lt;br&gt;[-no-rule-ipset]：跳过 ipset 规则。&lt;br&gt;[-no-rule-soa]：跳过 SOA(#) 规则&lt;br&gt;[-no-dualstack-selection]：停用双栈测速&lt;br&gt;[-no-speed-check]：停用测速&lt;br&gt;[-no-cache]：停止缓存&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;bind-tcp :53&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;cache-size&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;域名结果缓存个数&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;512&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;大于等于 0 的数字&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;cache-size 512&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;cache-persist&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;是否持久化缓存&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;自动。&lt;br&gt;当 cache-file 所在的位置有超过 128 MB 的可用空间时启用，否则禁用。&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[yes|no]&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;cache-persist yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;cache-file&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;缓存持久化文件路径&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;/tmp/smartdns.cache&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;合法路径字符串&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;cache-file /tmp/smartdns.cache&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;tcp-idle-time&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;TCP 链接空闲超时时间&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;120&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;大于等于 0 的数字&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;tcp-idle-time 120&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rr-ttl&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;域名结果 TTL&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;远程查询结果&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;大于 0 的数字&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rr-ttl 600&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rr-ttl-min&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;允许的最小 TTL 值&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;远程查询结果&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;大于 0 的数字&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rr-ttl-min 60&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rr-ttl-max&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;允许的最大 TTL 值&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;远程查询结果&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;大于 0 的数字&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rr-ttl-max 600&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rr-ttl-reply-max&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;允许返回给客户端的最大 TTL 值&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;远程查询结果&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;大于 0 的数字&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rr-ttl-reply-max 60&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;local-ttl&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;本地HOST，address的TTL值&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rr-ttl-min&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;大于 0 的数字&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;local-ttl 60&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;max-reply-ip-num&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;允许返回给客户的最大IP数量&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;IP数量&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;大于 0 的数字&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;max-reply-ip-num 1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;log-level&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;设置日志级别&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;error&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;fatal、error、warn、notice、info 或 debug&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;log-level error&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;log-file&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;日志文件路径&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;/var/log/smartdns/smartdns.log&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;合法路径字符串&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;log-file /var/log/smartdns/smartdns.log&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;log-size&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;日志大小&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;128K&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;数字 + K、M 或 G&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;log-size 128K&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;log-num&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;日志归档个数&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;大于等于 0 的数字&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;log-num 2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;audit-enable&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;设置审计启用&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;no&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[yes|no]&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;audit-enable yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;audit-file&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;审计文件路径&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;/var/log/smartdns/smartdns-audit.log&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;合法路径字符串&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;audit-file /var/log/smartdns/smartdns-audit.log&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;audit-size&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;审计大小&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;128K&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;数字 + K、M 或 G&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;audit-size 128K&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;audit-num&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;审计归档个数&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;大于等于 0 的数字&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;audit-num 2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;conf-file&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;附加配置文件&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;合法路径字符串&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;conf-file /etc/smartdns/smartdns.more.conf&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;server&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;上游 UDP DNS&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;可重复。&lt;br&gt;[ip][:port]：服务器 IP:端口（可选）&lt;br&gt;[-blacklist-ip]：配置 IP 过滤结果。&lt;br&gt;[-whitelist-ip]：指定仅接受参数中配置的 IP 范围&lt;br&gt;[-group [group] ...]：DNS 服务器所属组，比如 office 和 foreign，和 nameserver 配套使用&lt;br&gt;[-exclude-default-group]：将 DNS 服务器从默认组中排除&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;server 8.8.8.8:53 -blacklist-ip -group g1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;server-tcp&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;上游 TCP DNS&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;可重复。&lt;br&gt;[ip][:port]：服务器 IP:端口（可选）&lt;br&gt;[-blacklist-ip]：配置 IP 过滤结果&lt;br&gt;[-whitelist-ip]：指定仅接受参数中配置的 IP 范围。&lt;br&gt;[-group [group] ...]：DNS 服务器所属组，比如 office 和 foreign，和 nameserver 配套使用&lt;br&gt;[-exclude-default-group]：将 DNS 服务器从默认组中排除&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;server-tcp 8.8.8.8:53&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;server-tls&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;上游 TLS DNS&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;可重复。&lt;br&gt;[ip][:port]：服务器 IP:端口（可选)&lt;br&gt;[-spki-pin [sha256-pin]]：TLS 合法性校验 SPKI 值，base64 编码的 sha256 SPKI pin 值&lt;br&gt;[-host-name]：TLS SNI 名称&lt;br&gt;[-tls-host-verify]：TLS 证书主机名校验&lt;br&gt; [-no-check-certificate]：跳过证书校验&lt;br&gt;[-blacklist-ip]：配置 IP 过滤结果&lt;br&gt;[-whitelist-ip]：仅接受参数中配置的 IP 范围&lt;br&gt;[-group [group] ...]：DNS 服务器所属组，比如 office 和 foreign，和 nameserver 配套使用&lt;br&gt;[-exclude-default-group]：将 DNS 服务器从默认组中排除&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;server-tls 8.8.8.8:853&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;server-https&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;上游 HTTPS DNS&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;可重复。&lt;br&gt;https://[host][:port]/path：服务器 IP:端口（可选）&lt;br&gt;[-spki-pin [sha256-pin]]：TLS 合法性校验 SPKI 值，base64 编码的 sha256 SPKI pin 值&lt;br&gt;[-host-name]：TLS SNI 名称&lt;br&gt;[-http-host]：http 协议头主机名&lt;br&gt;[-tls-host-verify]：TLS 证书主机名校验&lt;br&gt; [-no-check-certificate]：跳过证书校验&lt;br&gt;[-blacklist-ip]：配置 IP 过滤结果&lt;br&gt;[-whitelist-ip]：仅接受参数中配置的 IP 范围。&lt;br&gt;[-group [group] ...]：DNS 服务器所属组，比如 office 和 foreign，和 nameserver 配套使用&lt;br&gt;[-exclude-default-group]：将 DNS 服务器从默认组中排除&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;server-https &lt;a href=&#34;https://cloudflare-dns.com/dns-query&#34;&gt;https://cloudflare-dns.com/dns-query&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;speed-check-mode&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;测速模式选择&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[ping|tcp:[80]|none]&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;speed-check-mode ping,tcp:80,tcp:443&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;response-mode&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;首次查询响应模式&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;first-ping&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;模式：[fisrt-ping|fastest-ip|fastest-response]&lt;br&gt; [first-ping]: 最快ping响应地址模式，DNS上游最快查询时延+ping时延最短，查询等待与链接体验最佳;&lt;br&gt;[fastest-ip]: 最快IP地址模式，查询到的所有IP地址中ping最短的IP。需等待IP测速; &lt;br&gt;[fastest-response]: 最快响应的DNS结果，DNS查询等待时间最短，返回的IP地址可能不是最快。&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;response-mode first-ping&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;address&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;指定域名 IP 地址&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;address /domain/[ip|-|-4|-6|#|#4|#6] &lt;br&gt;- 表示忽略 &lt;br&gt;# 表示返回 SOA &lt;br&gt;4 表示 IPv4 &lt;br&gt;6 表示 IPv6&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;address /www.example.com/1.2.3.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nameserver&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;指定域名使用 server 组解析&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nameserver /domain/[group|-], group 为组名，- 表示忽略此规则，配套 server 中的 -group 参数使用&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nameserver /www.example.com/office&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ipset&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;域名 ipset&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ipset /domain/[ipset|-|#[4|6]:[ipset|-][,#[4|6]:[ipset|-]]]，-表示忽略&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ipset /www.example.com/#4:dns4,#6:-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ipset-timeout&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;设置 ipset 超时功能启用&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;自动&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[yes]&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ipset-timeout yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;domain-rules&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;设置域名规则&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;domain-rules /domain/ [-rules...]&lt;br&gt;[-c|-speed-check-mode]：测速模式，参考 speed-check-mode 配置&lt;br&gt;[-a|-address]：参考 address 配置&lt;br&gt;[-n|-nameserver]：参考 nameserver 配置&lt;br&gt;[-p|-ipset]：参考ipset配置&lt;br&gt;[-d|-dualstack-ip-selection]：参考 dualstack-ip-selection&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;domain-rules /www.example.com/ -speed-check-mode none&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;bogus-nxdomain&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;假冒 IP 地址过滤&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[ip/subnet]，可重复&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;bogus-nxdomain 1.2.3.4/16&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ignore-ip&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;忽略 IP 地址&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[ip/subnet]，可重复&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ignore-ip 1.2.3.4/16&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;whitelist-ip&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;白名单 IP 地址&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[ip/subnet]，可重复&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;whitelist-ip 1.2.3.4/16&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;blacklist-ip&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;黑名单 IP 地址&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[ip/subnet]，可重复&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;blacklist-ip 1.2.3.4/16&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;force-AAAA-SOA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;强制 AAAA 地址返回 SOA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;no&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[yes|no]&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;force-AAAA-SOA yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;force-qtype-SOA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;强制指定 qtype 返回 SOA&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;qtype id&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[&#xA;    &lt;qtypeid&gt;&#xA;      | ...]&#xA;    &lt;/qtypeid&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;force-qtype-SOA 65 28&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;prefetch-domain&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;域名预先获取功能&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;no&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[yes|no]&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;prefetch-domain yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dnsmasq-lease-file&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;支持读取dnsmasq dhcp文件解析本地主机名功能&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;无&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dnsmasq dhcp lease文件路径&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dnsmasq-lease-file /var/lib/misc/dnsmasq.leases&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;serve-expired&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;过期缓存服务功能&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[yes|no]，开启此功能后，如果有请求时尝试回应 TTL 为 0 的过期记录，并发查询记录，以避免查询等待&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;serve-expired-ttl&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;过期缓存服务最长超时时间&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;0&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;秒，0 表示停用超时，大于 0 表示指定的超时的秒数&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;serve-expired-ttl 0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;serve-expired-reply-ttl&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;回应的过期缓存 TTL&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;5&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;秒，0 表示停用超时，大于 0 表示指定的超时的秒数&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;serve-expired-reply-ttl 30&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dualstack-ip-selection&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;双栈 IP 优选&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;[yes|no]&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dualstack-ip-selection yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dualstack-ip-selection-threshold&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;双栈 IP 优选阈值&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;15ms&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;单位为毫秒（ms）&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dualstack-ip-selection-threshold [0-1000]&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;user&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;进程运行用户&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;root&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;user [username]&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;user nobody&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ca-file&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;证书文件&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;/etc/ssl/certs/ca-certificates.crt&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;合法路径字符串&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ca-file /etc/ssl/certs/ca-certificates.crt&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ca-path&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;证书文件路径&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;/etc/ssl/certs&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;合法路径字符串&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ca-path /etc/ssl/certs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;常见问题&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;SmartDNS 和 DNSmasq 有什么区别？&lt;/p&gt; &lt;p&gt;SmartDNS 在设计上并不是 DNSmasq 的替代品，它的主要功能集中在 DNS 解析增强上，增强部分有：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;多上游服务器并发请求，对结果进行测速后，返回最佳结果；&lt;/li&gt; &#xA;   &lt;li&gt;address、ipset 域名匹配采用高效算法，查询匹配更加快速，即使是路由器设备也依然高效；&lt;/li&gt; &#xA;   &lt;li&gt;域名匹配支持忽略特定域名，可单独匹配 IPv4 和 IPv6，支持多样化定制；&lt;/li&gt; &#xA;   &lt;li&gt;针对广告屏蔽功能做增强，返回 SOA，屏蔽广告效果更佳；&lt;/li&gt; &#xA;   &lt;li&gt;IPv4、IPv6 双栈 IP 优选机制，在双网情况下，选择最快的网络通讯；&lt;/li&gt; &#xA;   &lt;li&gt;支持最新的 TLS 和 HTTPS 协议，提供安全的 DNS 查询能力；&lt;/li&gt; &#xA;   &lt;li&gt;ECS 支持，使查询结果更佳准确；&lt;/li&gt; &#xA;   &lt;li&gt;IP 黑名单和忽略 IP 机制，使域名查询更佳准确；&lt;/li&gt; &#xA;   &lt;li&gt;域名预查询，访问常用网站更加快速；&lt;/li&gt; &#xA;   &lt;li&gt;域名 TTL 可指定，使访问更快速；&lt;/li&gt; &#xA;   &lt;li&gt;高速缓存机制，使访问更快速；&lt;/li&gt; &#xA;   &lt;li&gt;异步日志，审计机制，在记录信息的同时不影响 DNS 查询性能；&lt;/li&gt; &#xA;   &lt;li&gt;域名组（group）机制，特定域名使用特定上游服务器组查询，避免隐私泄漏；&lt;/li&gt; &#xA;   &lt;li&gt;第二 DNS 支持自定义更多行为。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如何配置上游服务器最佳？&lt;/p&gt; &lt;p&gt;SmartDNS 有测速机制，在配置上游服务器时，建议配置多个上游 DNS 服务器，包含多个不同区域的服务器，但总数建议在 10 个左右。推荐搭配&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;运营商 DNS。&lt;/li&gt; &#xA;   &lt;li&gt;国内公共 DNS，如 &lt;code&gt;119.29.29.29&lt;/code&gt;, &lt;code&gt;223.5.5.5&lt;/code&gt;。&lt;/li&gt; &#xA;   &lt;li&gt;国外公共 DNS，如 &lt;code&gt;8.8.8.8&lt;/code&gt;, &lt;code&gt;8.8.4.4&lt;/code&gt;。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如何启用审计日志？&lt;/p&gt; &lt;p&gt;审计日志记录客户端请求的域名，记录信息包括，请求时间，请求 IP，请求域名，请求类型，如果要启用审计日志，在配置界面配置 &lt;code&gt;audit-enable yes&lt;/code&gt; 启用，&lt;code&gt;audit-size&lt;/code&gt;、 &lt;code&gt;audit-file&lt;/code&gt;、&lt;code&gt;audit-num&lt;/code&gt; 分别配置审计日志文件大小，审计日志文件路径，和审计日志文件个数。审计日志文件将会压缩存储以节省空间。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如何避免隐私泄漏？&lt;/p&gt; &lt;p&gt;默认情况下，SmartDNS 会将请求发送到所有配置的DNS服务器，若上游 DNS 服务器使用DNS，或记录日志，将会导致隐私泄漏。为避免隐私泄漏，请尽量：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;配置使用可信的DNS服务器。&lt;/li&gt; &#xA;   &lt;li&gt;优先使用 TLS 查询。&lt;/li&gt; &#xA;   &lt;li&gt;设置上游 DNS 服务器组。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如何屏蔽广告？&lt;/p&gt; &lt;p&gt;SmartDNS 具备高性能域名匹配算法，通过域名方式过滤广告非常高效，如要屏蔽广告，只需要配置类似如下记录即可，如，屏蔽 &lt;code&gt;*.ad.com&lt;/code&gt;，则配置：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;address /ad.com/#&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;域名的使后缀模式，过滤 &lt;code&gt;*.ad.com&lt;/code&gt;，&lt;code&gt;#&lt;/code&gt; 表示返回 SOA，使屏蔽广告更加高效，如果要单独屏蔽 IPv4 或 IPv6， 在 &lt;code&gt;#&lt;/code&gt; 后面增加数字，如 &lt;code&gt;#4&lt;/code&gt; 表示对 IPv4 生效。若想忽略特定子域名的屏蔽，如忽略 &lt;code&gt;pass.ad.com&lt;/code&gt;，可配置如下：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;address /pass.ad.com/-&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如何使用 DNS 查询分流？&lt;/p&gt; &lt;p&gt;某些情况下，需要将有些域名使用特定的 DNS 服务器来查询来做到 DNS 分流。比如&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;.home -&amp;gt; 192.168.1.1 # .home 结尾的域名发送到 192.168.1.1 解析&#xA;.office -&amp;gt; 10.0.0.1  # .office 结尾的域名发送到 10.0.0.1 解析&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;其他域名采用默认的模式解析。 这种情况的分流配置如下：&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# 配置上游，用 -group 指定组名，用 -exclude-default-group 将服务器从默认组中排除。&#xA;server 192.168.1.1 -group home -exclude-default-group&#xA;server 10.0.0.1 -group office -exclude-default-group&#xA;server 8.8.8.8&#xA;&#xA;# 配置解析的域名&#xA;nameserver /.home/home&#xA;nameserver /.office/office&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;通过上述配置即可实现 DNS 解析分流，如果需要实现按请求端端口分流，可以配置第二 DNS 服务器，&lt;code&gt;bind&lt;/code&gt; 配置增加 &lt;code&gt;--group&lt;/code&gt; 参数指定分流名称。&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;bind :7053 -group office&#xA;bind :8053 -group home&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;IPv4、IPv6 双栈 IP 优选功能如何使用？&lt;/p&gt; &lt;p&gt;目前 IPv6 已经开始普及，但 IPv6 网络在速度上，某些情况下还不如 IPv4。为在双栈网络下获得较好的体验，SmartDNS 提供来双栈IP优选机制，同一个域名，若 IPv4 的速度远快与 IPv6，那么 SmartDNS 就会阻止IPv6的解析、使用 IPv4 访问。可在配置文件中通过设置 &lt;code&gt;dualstack-ip-selection yes&lt;/code&gt; 启用此功能，通过 &lt;code&gt;dualstack-ip-selection-threshold [time]&lt;/code&gt; 来修改阈值。如果要完全禁止 IPv6 AAAA记录解析，可设置 &lt;code&gt;force-AAAA-SOA yes&lt;/code&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如何提高缓存效率，加快访问速度？&lt;/p&gt; &lt;p&gt;SmartDNS 提供了域名缓存机制，对查询的域名，进行缓存，缓存时间符合 DNS TTL 规范。为提高缓存命中率，可采用如下措施：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;适当增大缓存的记录数&lt;/p&gt; &lt;p&gt;通过 &lt;code&gt;cache-size&lt;/code&gt; 来设置缓存记录数。&lt;/p&gt; &lt;p&gt;查询压力大的环境下，并且有内存大的机器的情况下，可适当调大。&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;适当设置最小 TTL 值&lt;/p&gt; &lt;p&gt;通过 &lt;code&gt;rr-ttl-min&lt;/code&gt; 将最低 DNS TTL 时间设置为一个合理值，延长缓存时间。&lt;/p&gt; &lt;p&gt;建议是超时时间设置在 10～30 分钟，避免服务器域名变化时，查询到失效域名。&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;开启域名预获取功能&lt;/p&gt; &lt;p&gt;通过 &lt;code&gt;prefetch-domain yes&lt;/code&gt; 来启用域名预先获取功能，提高查询命中率。&lt;/p&gt; &lt;p&gt;配合上述 TTL 超时时间，SmartDNS 将在域名 TTL 即将超时时，再次发送查询请求，并缓存查询结果供后续使用。频繁访问的域名将会持续缓存。此功能将在空闲时消耗更多的 CPU。&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;过期缓存服务功能&lt;/p&gt; &lt;p&gt;通过 &lt;code&gt;serve-expired&lt;/code&gt; 来启用过期缓存服务功能，可提高缓存命中率的同时，降低CPU占用。&lt;/p&gt; &lt;p&gt;此功能会在TTL超时后，将返回 TTL=0 给客户端，并且同时再次发送查询请求，并缓存新的结果给后续使用。&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;第二 DNS 如何自定义更多行为？&lt;/p&gt; &lt;p&gt;第二 DNS 可以作为其他 DNS 服务器的上游，提供更多的查询行为，通过 bind 配置支持可以绑定多个端口，不同端口可设置不同的标志，实现不同的功能，如&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# 绑定 6053 端口，6053 端口的请求将采用配置 office 组的上游查询，且不对结果进行测速，忽略 address 的配置地址&#xA;bind [::]:6053 -no-speed-check -group office -no-rule-addr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;DoT 的 SPKI 如何获取？ SPKI 可以通过 DNS 服务商发布的页面获取，如果没有发布，可以通过如下命令获取，其中将对应IP地址更换为要获取 SPKI 的 IP 地址。&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ echo | openssl s_client -connect &#39;1.0.0.1:853&#39; 2&amp;gt;/dev/null | openssl x509 -pubkey -noout | openssl pkey -pubin -outform der | openssl dgst -sha256 -binary | openssl enc -base64&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;iOS系统解析缓慢问题怎么解决？&lt;br&gt; IOS14开始，苹果支持了DNS HTTPS(TYPE65)记录的解析，此功能用于快速DNS查询和解决HTTPS链接相关的问题，但当前还是草案，另外会导致广告屏蔽等功能失效，建议通过如下配置关闭TYPE65记录查询。&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;force-qtype-SOA 65&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如何解析本地主机名称？&lt;br&gt; smartdns可以配合DNSMASQ的dhcp lease文件支持本地主机名-&amp;gt;IP地址的解析，可以配置smartdns读取dnsmasq的lease文件，并支持解析。具体配置参数如下，（注意，DNSMASQ lease文件每个系统可能不一样，需要按实际情况配置）&lt;/p&gt; &lt;pre&gt;&lt;code&gt;dnsmasq-lease-file /var/lib/misc/dnsmasq.leases&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;配置完成后，可以直接使用主机名连接对应的机器。但需要注意：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Windows系统默认使用mDNS解析地址，如需要在windows下用使用smartdns解析，则需要在主机名后面增加&lt;code&gt;.&lt;/code&gt;，表示使用DNS解析。如&lt;code&gt;ping smartdns.&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;编译&lt;/h2&gt; &#xA;&lt;p&gt;SmartDNS 提供了编译软件包的脚本（&lt;code&gt;package/build-pkg.sh&lt;/code&gt;），支持编译 LuCI、Debian、OpenWrt 和 Optware 安装包。&lt;/p&gt; &#xA;&lt;h2&gt;捐赠&lt;/h2&gt; &#xA;&lt;p&gt;如果你觉得此项目对你有帮助，请捐助我们，使项目能持续发展和更加完善。&lt;/p&gt; &#xA;&lt;h3&gt;PayPal 贝宝&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://paypal.me/PengNick/&#34;&gt;&lt;img src=&#34;https://cdn.rawgit.com/twolfson/paypal-github-button/1.0.0/dist/button.svg?sanitize=true&#34; alt=&#34;Support via PayPal&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;AliPay 支付宝&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/doc/alipay_donate.jpg&#34; alt=&#34;alipay&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;WeChat Pay 微信支付&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/pymumu/smartdns/master/doc/wechat_donate.jpg&#34; alt=&#34;wechat&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;开源声明&lt;/h2&gt; &#xA;&lt;p&gt;SmartDNS 基于 GPL V3 协议开源。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>earlephilhower/arduino-pico</title>
    <updated>2022-08-23T01:32:52Z</updated>
    <id>tag:github.com,2022-08-23:/earlephilhower/arduino-pico</id>
    <link href="https://github.com/earlephilhower/arduino-pico" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Raspberry Pi Pico Arduino core, for all RP2040 boards&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Arduino-Pico&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/earlephilhower/arduino-pico/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/earlephilhower/arduino-pico?style=plastic&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/arduino-pico/community&#34;&gt;&lt;img src=&#34;https://img.shields.io/gitter/room/earlephilhower/arduino-pico?style=plastic&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Raspberry Pi Pico Arduino core, for all RP2040 boards&lt;/p&gt; &#xA;&lt;p&gt;This is a port of the RP2040 (Raspberry Pi Pico processor) to the Arduino ecosystem. It uses the bare Raspberry Pi Pico SDK and a custom GCC 10.3/Newlib 4.0 toolchain.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://arduino-pico.readthedocs.io/en/latest/&#34;&gt;https://arduino-pico.readthedocs.io/en/latest/&lt;/a&gt; along with the examples for more detailed usage information.&lt;/p&gt; &#xA;&lt;h1&gt;Supported Boards&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Raspberry Pi Pico&lt;/li&gt; &#xA; &lt;li&gt;Raspberry Pi Pico W&lt;/li&gt; &#xA; &lt;li&gt;Adafruit Feather RP2040&lt;/li&gt; &#xA; &lt;li&gt;Adafruit ItsyBitsy RP2040&lt;/li&gt; &#xA; &lt;li&gt;Adafruit KB2040&lt;/li&gt; &#xA; &lt;li&gt;Adafruit Macropad RP2040&lt;/li&gt; &#xA; &lt;li&gt;Adafruit QTPy RP2040&lt;/li&gt; &#xA; &lt;li&gt;Adafruit STEMMA Friend RP2040&lt;/li&gt; &#xA; &lt;li&gt;Adafruit Trinkey RP2040 QT&lt;/li&gt; &#xA; &lt;li&gt;Arduino Nano RP2040 Connect&lt;/li&gt; &#xA; &lt;li&gt;Cytron Maker Pi RP2040&lt;/li&gt; &#xA; &lt;li&gt;Cytron Maker Nano RP2040&lt;/li&gt; &#xA; &lt;li&gt;DeRuiLab FlyBoard2040 Core&lt;/li&gt; &#xA; &lt;li&gt;DFRobot Beetle RP2040&lt;/li&gt; &#xA; &lt;li&gt;ElectronicCats Hunter Cat NFC&lt;/li&gt; &#xA; &lt;li&gt;Invector Labs Challenger RP2040 WiFi&lt;/li&gt; &#xA; &lt;li&gt;Invector Labs Challenger RP2040 WiFi/BLE&lt;/li&gt; &#xA; &lt;li&gt;Invector Labs Challenger NB RP2040 WiFi&lt;/li&gt; &#xA; &lt;li&gt;Invector Labs Challenger RP2040 LTE&lt;/li&gt; &#xA; &lt;li&gt;Invector Labs Challenger RP2040 LoRa&lt;/li&gt; &#xA; &lt;li&gt;Invector Labs Challenger RP2040 SubGHz&lt;/li&gt; &#xA; &lt;li&gt;Invector Labs Challenger RP2040 SD/RTC&lt;/li&gt; &#xA; &lt;li&gt;Invector Labs RPICO32&lt;/li&gt; &#xA; &lt;li&gt;Melopero Shake RP2040&lt;/li&gt; &#xA; &lt;li&gt;Seeed XIAO RP2040&lt;/li&gt; &#xA; &lt;li&gt;Solder Party RP2040 Stamp&lt;/li&gt; &#xA; &lt;li&gt;SparkFun ProMicro RP2040&lt;/li&gt; &#xA; &lt;li&gt;SparkFun Thing Plus RP2040&lt;/li&gt; &#xA; &lt;li&gt;uPesy RP2040 DevKit&lt;/li&gt; &#xA; &lt;li&gt;WIZnet W5100S-EVB-Pico&lt;/li&gt; &#xA; &lt;li&gt;WIZnet W5500-EVB-Pico&lt;/li&gt; &#xA; &lt;li&gt;WIZnet WizFi360-EVB-Pico&lt;/li&gt; &#xA; &lt;li&gt;Generic (configurable flash, I/O pins)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installing via Arduino Boards Manager&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Windows Users&lt;/strong&gt;: Please do not use the Windows Store version of the actual Arduino application because it has issues detecting attached Pico boards. Use the &#34;Windows ZIP&#34; or plain &#34;Windows&#34; executable (EXE) download direct from &lt;a href=&#34;https://arduino.cc&#34;&gt;https://arduino.cc&lt;/a&gt;. and allow it to install any device drivers it suggests. Otherwise the Pico board may not be detected. Also, if trying out the 2.0 beta Arduino please install the release 1.8 version beforehand to ensure needed device drivers are present. (See #20 for more details.)&lt;/p&gt; &#xA;&lt;p&gt;Open up the Arduino IDE and go to File-&amp;gt;Preferences.&lt;/p&gt; &#xA;&lt;p&gt;In the dialog that pops up, enter the following URL in the &#34;Additional Boards Manager URLs&#34; field:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/earlephilhower/arduino-pico/releases/download/global/package_rp2040_index.json&#34;&gt;https://github.com/earlephilhower/arduino-pico/releases/download/global/package_rp2040_index.json&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/11875/111917251-3c57f400-8a3c-11eb-8120-810a8328ab3f.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Hit OK to close the dialog.&lt;/p&gt; &#xA;&lt;p&gt;Go to Tools-&amp;gt;Boards-&amp;gt;Board Manager in the IDE&lt;/p&gt; &#xA;&lt;p&gt;Type &#34;pico&#34; in the search box and select &#34;Add&#34;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/11875/111917223-12063680-8a3c-11eb-8884-4f32b8f0feb1.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installing via GIT&lt;/h1&gt; &#xA;&lt;p&gt;To install via GIT (for latest and greatest versions):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir -p ~/Arduino/hardware/pico&#xA;git clone https://github.com/earlephilhower/arduino-pico.git ~/Arduino/hardware/pico/rp2040&#xA;cd ~/Arduino/hardware/pico/rp2040&#xA;git submodule update --init&#xA;cd pico-sdk&#xA;git submodule update --init&#xA;cd ../tools&#xA;python3 ./get.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Installing both Arduino and CMake&lt;/h1&gt; &#xA;&lt;p&gt;Tom&#39;s Hardware presented a very nice writeup on installing &lt;code&gt;arduino-pico&lt;/code&gt; on both Windows and Linux, available at &lt;a href=&#34;https://www.tomshardware.com/how-to/program-raspberry-pi-pico-with-arduino-ide&#34;&gt;https://www.tomshardware.com/how-to/program-raspberry-pi-pico-with-arduino-ide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you follow Les&#39; step-by-step you will also have a fully functional &lt;code&gt;CMake&lt;/code&gt;-based environment to build Pico apps on if you outgrow the Arduino ecosystem.&lt;/p&gt; &#xA;&lt;h1&gt;Uploading Sketches&lt;/h1&gt; &#xA;&lt;p&gt;To upload your first sketch, you will need to hold the BOOTSEL button down while plugging in the Pico to your computer. Then hit the upload button and the sketch should be transferred and start to run.&lt;/p&gt; &#xA;&lt;p&gt;After the first upload, this should not be necessary as the &lt;code&gt;arduino-pico&lt;/code&gt; core has auto-reset support. Select the appropriate serial port shown in the Arduino Tools-&amp;gt;Port-&amp;gt;Serial Port menu once (this setting will stick and does not need to be touched for multiple uploads). This selection allows the auto-reset tool to identify the proper device to reset. Them hit the upload button and your sketch should upload and run.&lt;/p&gt; &#xA;&lt;p&gt;In some cases the Pico will encounter a hard hang and its USB port will not respond to the auto-reset request. Should this happen, just follow the initial procedure of holding the BOOTSEL button down while plugging in the Pico to enter the ROM bootloader.&lt;/p&gt; &#xA;&lt;h1&gt;Uploading Filesystem Images&lt;/h1&gt; &#xA;&lt;p&gt;The onboard flash filesystem for the Pico, LittleFS, lets you upload a filesystem image from the sketch directory for your sketch to use. Download the needed plugin from&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/earlephilhower/arduino-pico-littlefs-plugin/releases&#34;&gt;https://github.com/earlephilhower/arduino-pico-littlefs-plugin/releases&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To install, follow the directions in&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/earlephilhower/arduino-pico-littlefs-plugin/raw/master/README.md&#34;&gt;https://github.com/earlephilhower/arduino-pico-littlefs-plugin/blob/master/README.md&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For detailed usage information, please check the ESP8266 repo documentation (ignore SPIFFS related notes) available at&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arduino-esp8266.readthedocs.io/en/latest/filesystem.html&#34;&gt;https://arduino-esp8266.readthedocs.io/en/latest/filesystem.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Uploading Sketches with Picoprobe&lt;/h1&gt; &#xA;&lt;p&gt;If you have built a Raspberry Pi Picoprobe, you can use OpenOCD to handle your sketch uploads and for debugging with GDB.&lt;/p&gt; &#xA;&lt;p&gt;Under Windows a local admin user should be able to access the Picoprobe port automatically, but under Linux &lt;code&gt;udev&lt;/code&gt; must be told about the device and to allow normal users access.&lt;/p&gt; &#xA;&lt;p&gt;To set up user-level access to Picoprobes on Ubuntu (and other OSes which use &lt;code&gt;udev&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;echo &#39;SUBSYSTEMS==&#34;usb&#34;, ATTRS{idVendor}==&#34;2e8a&#34;, ATTRS{idProduct}==&#34;0004&#34;, GROUP=&#34;users&#34;, MODE=&#34;0666&#34;&#39; | sudo tee -a /etc/udev/rules.d/98-PicoProbe.rules&#xA;sudo udevadm control --reload&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The first line creates a file with the USB vendor and ID of the Picoprobe and tells UDEV to give users full access to it. The second causes &lt;code&gt;udev&lt;/code&gt; to load this new rule. Note that you will need to unplug and re-plug in your device the first time you create this file, to allow udev to make the device node properly.&lt;/p&gt; &#xA;&lt;p&gt;Once Picoprobe permissions are set up properly, then select the board &#34;Raspberry Pi Pico (Picoprobe)&#34; in the Tools menu and upload as normal.&lt;/p&gt; &#xA;&lt;h1&gt;Uploading Sketches with pico-debug&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/majbthrd/pico-debug/&#34;&gt;pico-debug&lt;/a&gt; differs from Picoprobe in that pico-debug is a virtual debug pod that runs side-by-side on the same RP2040 that you run your code on; so, you only need one RP2040 board instead of two. pico-debug also differs from Picoprobe in that pico-debug is standards-based; it uses the CMSIS-DAP protocol, which means even software not specially written for the Raspberry Pi Pico can support it. pico-debug uses OpenOCD to handle your sketch uploads, and debugging can be accomplished with CMSIS-DAP capable debuggers including GDB.&lt;/p&gt; &#xA;&lt;p&gt;Under Windows and macOS, any user should be able to access pico-debug automatically, but under Linux &lt;code&gt;udev&lt;/code&gt; must be told about the device and to allow normal users access.&lt;/p&gt; &#xA;&lt;p&gt;To set up user-level access to all CMSIS-DAP adapters on Ubuntu (and other OSes which use &lt;code&gt;udev&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;echo &#39;ATTRS{product}==&#34;*CMSIS-DAP*&#34;, MODE=&#34;664&#34;, GROUP=&#34;plugdev&#34;&#39; | sudo tee -a /etc/udev/rules.d/98-CMSIS-DAP.rules&#xA;sudo udevadm control --reload&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The first line creates a file that recognizes all CMSIS-DAP adapters and tells UDEV to give users full access to it. The second causes &lt;code&gt;udev&lt;/code&gt; to load this new rule. Note that you will need to unplug and re-plug in your device the first time you create this file, to allow udev to make the device node properly.&lt;/p&gt; &#xA;&lt;p&gt;Once CMSIS-DAP permissions are set up properly, then select the board &#34;Raspberry Pi Pico (pico-debug)&#34; in the Tools menu.&lt;/p&gt; &#xA;&lt;p&gt;When first connecting the USB port to your PC, you must copy &lt;a href=&#34;https://github.com/majbthrd/pico-debug/releases/&#34;&gt;pico-debug-gimmecache.uf2&lt;/a&gt; to the Pi Pico to load pico-debug into RAM; after this, upload as normal.&lt;/p&gt; &#xA;&lt;h1&gt;Debugging with Picoprobe/pico-debug, OpenOCD, and GDB&lt;/h1&gt; &#xA;&lt;p&gt;The installed tools include a version of OpenOCD (in the pqt-openocd directory) and GDB (in the pqt-gcc directory). These may be used to run GDB in an interactive window as documented in the Pico Getting Started manuals from the Raspberry Pi Foundation. For &lt;a href=&#34;https://github.com/majbthrd/pico-debug/&#34;&gt;pico-debug&lt;/a&gt;, replace the raspberrypi-swd and picoprobe example OpenOCD arguments of &#34;-f interface/raspberrypi-swd.cfg -f target/rp2040.cfg&#34; or &#34;-f interface/picoprobe.cfg -f target/rp2040.cfg&#34; respectively in the Pico Getting Started manual with &#34;-f board/pico-debug.cfg&#34;.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Adafruit TinyUSB Arduino (USB mouse, keyboard, flash drive, generic HID, CDC Serial, MIDI, WebUSB, others)&lt;/li&gt; &#xA; &lt;li&gt;Generic Arduino USB Serial, Keyboard, and Mouse emulation&lt;/li&gt; &#xA; &lt;li&gt;WiFi (Pico W)&lt;/li&gt; &#xA; &lt;li&gt;Over-the-Air (OTA) upgrades&lt;/li&gt; &#xA; &lt;li&gt;Filesystems (LittleFS and SD/SDFS)&lt;/li&gt; &#xA; &lt;li&gt;Multicore support (setup1() and loop1())&lt;/li&gt; &#xA; &lt;li&gt;FreeRTOS SMP support&lt;/li&gt; &#xA; &lt;li&gt;Overclocking and underclocking from the menus&lt;/li&gt; &#xA; &lt;li&gt;digitalWrite/Read, shiftIn/Out, tone, analogWrite(PWM)/Read, temperature&lt;/li&gt; &#xA; &lt;li&gt;Peripherals: SPI master, Wire(I2C) master/slave, dual UART, emulated EEPROM, I2S audio input, I2S audio output, Servo&lt;/li&gt; &#xA; &lt;li&gt;printf (i.e. debug) output over USB serial&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The RP2040 PIO state machines (SMs) are used to generate jitter-free:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Servos&lt;/li&gt; &#xA; &lt;li&gt;Tones&lt;/li&gt; &#xA; &lt;li&gt;I2S Input&lt;/li&gt; &#xA; &lt;li&gt;I2S Output&lt;/li&gt; &#xA; &lt;li&gt;Software UARTs (Serial ports)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Tutorials from Across the Web&lt;/h1&gt; &#xA;&lt;p&gt;Here are some links to coverage and additional tutorials for using &lt;code&gt;arduino-pico&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The File:: class is taken from the ESP8266. See &lt;a href=&#34;https://arduino-esp8266.readthedocs.io/en/latest/filesystem.html&#34;&gt;https://arduino-esp8266.readthedocs.io/en/latest/filesystem.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Arduino Support for the Pi Pico available! And how fast is the Pico? - &lt;a href=&#34;https://youtu.be/-XHh17cuH5E&#34;&gt;https://youtu.be/-XHh17cuH5E&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pre-release Adafruit QT Py RP2040 - &lt;a href=&#34;https://www.youtube.com/watch?v=sfC1msqXX0I&#34;&gt;https://www.youtube.com/watch?v=sfC1msqXX0I&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Adafruit Feather RP2040 running LCD + TMP117 - &lt;a href=&#34;https://www.youtube.com/watch?v=fKDeqZiIwHg&#34;&gt;https://www.youtube.com/watch?v=fKDeqZiIwHg&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Demonstration of Servos and I2C in Korean - &lt;a href=&#34;https://cafe.naver.com/arduinoshield/1201&#34;&gt;https://cafe.naver.com/arduinoshield/1201&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;If you want to contribute or have bugfixes, drop me a note at &lt;a href=&#34;mailto:earlephilhower@yahoo.com&#34;&gt;earlephilhower@yahoo.com&lt;/a&gt; or open an issue/PR here.&lt;/p&gt; &#xA;&lt;h1&gt;Licensing and Credits&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://arduino.cc&#34;&gt;Arduino IDE and ArduinoCore-API&lt;/a&gt; are developed and maintained by the Arduino team. The IDE is licensed under GPL.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://github.com/earlephilhower/pico-quick-toolchain&#34;&gt;RP2040 GCC-based toolchain&lt;/a&gt; is licensed under under the GPL.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://github.com/raspberrypi/pico-sdk&#34;&gt;Pico-SDK&lt;/a&gt; is by Raspberry Pi (Trading) Ltd and licensed under the BSD 3-Clause license.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/earlephilhower/arduino-pico&#34;&gt;Arduino-Pico&lt;/a&gt; core files are licensed under the LGPL.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ARMmbed/littlefs&#34;&gt;LittleFS&lt;/a&gt; library written by ARM Limited and released under the &lt;a href=&#34;https://github.com/ARMmbed/littlefs/raw/master/LICENSE.md&#34;&gt;BSD 3-clause license&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/uf2&#34;&gt;UF2CONV.PY&lt;/a&gt; is by Microsoft Corporation and licensed under the MIT license.&lt;/li&gt; &#xA; &lt;li&gt;Networking and filesystem code taken from the &lt;a href=&#34;https://github.com/esp8266/Arduino&#34;&gt;ESP8266 Arduino Core&lt;/a&gt; and licensed under the LGPL.&lt;/li&gt; &#xA; &lt;li&gt;DHCP server for AP host mode from the &lt;a href=&#34;https://micropython.org&#34;&gt;Micropython Project&lt;/a&gt;, distributed under the MIT License.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://freertos.org&#34;&gt;FreeRTOS&lt;/a&gt; is Copyright Amazon.com, Inc. or its affiliates, and distributed under the MIT license.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://savannah.nongnu.org/projects/lwip/&#34;&gt;lwIP&lt;/a&gt; is (c) the Swedish Institute of Computer Science and licenced under the BSD license.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bearssl.org&#34;&gt;BearSSL&lt;/a&gt; library written by Thomas Pornin, is distributed under the &lt;a href=&#34;https://bearssl.org/#legal-details&#34;&gt;MIT License&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pfalcon/uzlib&#34;&gt;UZLib&lt;/a&gt; is copyright (c) 2003 Joergen Ibsen and distributed under the zlib license.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LaborEtArs/ESP8266mDNS&#34;&gt;LEAmDMS&lt;/a&gt; is copyright multiple authors and distributed under the MIT license.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;-Earle F. Philhower, III&lt;br&gt; &lt;a href=&#34;mailto:earlephilhower@yahoo.com&#34;&gt;earlephilhower@yahoo.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>edk2-porting/edk2-sdm845</title>
    <updated>2022-08-23T01:32:52Z</updated>
    <id>tag:github.com,2022-08-23:/edk2-porting/edk2-sdm845</id>
    <link href="https://github.com/edk2-porting/edk2-sdm845" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Broken edk2 port for sdm845 xD&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;EDK2 UEFI Firmware For Snapdragon 845 (sdm845)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/edk2-porting/edk2-sdm845/total&#34; alt=&#34;Github&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/edk2-porting/edk2-sdm845?include_prereleases&#34; alt=&#34;Github&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;EDK2 implementation for Snapdragon 845 platform.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/edk2-porting/edk2-sdm845/raw/master/README.zh.md&#34;&gt;Chinese version (中文版)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/joinchat/MNjTmBqHIokjweeN0SpoyA&#34;&gt;Telegram group&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/XXBWfag&#34;&gt;Discord server&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;QQ chinese group:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=JbOy29zv&#34;&gt;697666196 (Renegade-Project OffTopic 1)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=16xaDJnU&#34;&gt;996450026 (Renegade-Project OffTopic 2)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=KsQdNXl6&#34;&gt;737223105 (Renegade-Project Linux/edk2)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/edk2-porting/WOA-Drivers&#34;&gt;Windows Drivers&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://renegade-project.org/&#34;&gt;Project website&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://forum.renegade-project.org/&#34;&gt;Project forum&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;WARNING&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;IT IS STRICTLY PROHIBITED TO USE THIS REPOSITORY FOR ANY COMMERCIAL PURPOSES&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you want to redistribute, you need to ensure that users can get updates&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;DO NOT EVER TRY TO PORT IT TO &lt;em&gt;SONY&lt;/em&gt; and &lt;em&gt;GOOGLE&lt;/em&gt; DEVICES&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;YOUR UFS WILL BE WIPED CLEAN!!!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported devices&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://renegade-project.org/#/en/windows/state-frame.html&#34;&gt;Windows Status Matrix&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;For Windows/MacOS/Other Linux distributions:&lt;/p&gt; &#xA;&lt;p&gt;Install Docker manually or use an Ubuntu virtual machine&lt;/p&gt; &#xA;&lt;p&gt;For Ubuntu 20.04:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt update&#xA;sudo apt upgrade&#xA;sudo apt install build-essential uuid-dev iasl git nasm gcc-aarch64-linux-gnu python3-distutils python3-pil python3-git gettext&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using GCC 11+, modify &lt;code&gt;edk2/BaseTools/Source/C/Makefiles/header.makefile&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;diff --git a/BaseTools/Source/C/Makefiles/header.makefile b/BaseTools/Source/C/Makefiles/header.makefile&#xA;index 0df728f..247c917 100644&#xA;--- a/BaseTools/Source/C/Makefiles/header.makefile&#xA;+++ b/BaseTools/Source/C/Makefiles/header.makefile&#xA;@@ -92,7 +92,7 @@ BUILD_CFLAGS = -MD -fshort-wchar -fno-strict-aliasing -fwrapv \&#xA; -Wno-unused-result -nostdlib -g&#xA; else&#xA; BUILD_CFLAGS = -MD -fshort-wchar -fno-strict-aliasing -fwrapv \&#xA;--fno-delete-null-pointer-checks -Wall -Werror \&#xA;+-fno-delete-null-pointer-checks -Wall \^M&#xA; -Wno-deprecated-declarations -Wno-stringop-truncation -Wno-restrict \&#xA; -Wno-unused-result -nostdlib -g&#xA; endif&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;1.Clone this project&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/edk2-porting/edk2-sdm845.git --depth=1&#xA;cd edk2-sdm845&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2.1 Build this project (only on linux)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash build.sh --device DEVICE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2.2 For Macos/Windows (you can use docker)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose run edk2 ./build.sh -d DEVICE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;3.Boot the image&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;fastboot boot boot_DEVICE.img&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(DEVICE is the codename of your phone.)&lt;/p&gt; &#xA;&lt;p&gt;Additionally, you can flash the image to recovery to achieve dual-boot.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;fastboot flash recovery boot_DEVICE.img&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;fxsheep&lt;/code&gt; for his original &lt;code&gt;edk2-sagit&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;strongtz&lt;/code&gt; for maintaining Renegade Project&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;BigfootACA&lt;/code&gt; for build script&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Lemon_Ice&lt;/code&gt; and &lt;code&gt;NTAuthority&lt;/code&gt; for guidance and some blobs&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;@Freak2112&lt;/code&gt;, &lt;code&gt;TAO_Croatia&lt;/code&gt; and &lt;code&gt;废物&lt;/code&gt; for working hard on testing and debugging&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;NekokeCore&lt;/code&gt; for fixing MemoryMap&lt;/p&gt;</summary>
  </entry>
</feed>