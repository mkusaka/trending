<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-09T01:35:29Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lionsoul2014/ip2region</title>
    <updated>2022-07-09T01:35:29Z</updated>
    <id>tag:github.com,2022-07-09:/lionsoul2014/ip2region</id>
    <link href="https://github.com/lionsoul2014/ip2region" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ip2region (2.0 - xdb) is a offline IP address manager framework and locator, support billions of data segments, ten microsecond searching performance. xdb engine implementation for many programming languages&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ip2region 是什么&lt;/h1&gt; &#xA;&lt;p&gt;ip2region v2.0 - 是一个离线IP地址定位库和IP定位数据管理框架，10微秒级别的查询效率，提供了众多主流编程语言的 &lt;code&gt;xdb&lt;/code&gt; 数据生成和查询客户端实现。v1.0 旧版本: &lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/v1.0&#34;&gt;v1.0版本入口&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Ip2region 特性&lt;/h1&gt; &#xA;&lt;h3&gt;1、标准化的数据格式&lt;/h3&gt; &#xA;&lt;p&gt;每个 ip 数据段的 region 信息都固定了格式：&lt;code&gt;国家|区域|省份|城市|ISP&lt;/code&gt;，只有中国的数据绝大部分精确到了城市，其他国家部分数据只能定位到国家，后前的选项全部是0。&lt;/p&gt; &#xA;&lt;h3&gt;2、数据去重和压缩&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;xdb&lt;/code&gt; 格式生成程序会自动去重和压缩部分数据，默认的全部 IP 数据，生成的 ip2region.xdb 数据库是 11MiB，随着数据的详细度增加数据库的大小也慢慢增大。&lt;/p&gt; &#xA;&lt;h3&gt;3、极速查询响应&lt;/h3&gt; &#xA;&lt;p&gt;即使是完全基于 &lt;code&gt;xdb&lt;/code&gt; 文件的查询，单次查询响应时间在十微秒级别，可通过如下两种方式开启内存加速查询：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;vIndex&lt;/code&gt; 索引缓存 ：使用固定的 &lt;code&gt;512KiB&lt;/code&gt; 的内存空间缓存 vector index 数据，减少一次 IO 磁盘操作，保持平均查询效率稳定在10-20微秒之间。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;xdb&lt;/code&gt; 整个文件缓存：将整个 &lt;code&gt;xdb&lt;/code&gt; 文件全部加载到内存，内存占用等同于 &lt;code&gt;xdb&lt;/code&gt; 文件大小，无磁盘 IO 操作，保持微秒级别的查询效率。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;4、IP 数据管理框架&lt;/h3&gt; &#xA;&lt;p&gt;v2.0 格式的 &lt;code&gt;xdb&lt;/code&gt; 支持亿级别的 IP 数据段行数，region 信息也可以完全自定义，例如：你可以在 region 中追加特定业务需求的数据，例如：GPS信息/国际统一地域信息编码/邮编等。也就是你完全可以使用 ip2region 来管理你自己的 IP 定位数据。&lt;/p&gt; &#xA;&lt;h1&gt;&lt;code&gt;xdb&lt;/code&gt; 数据查询&lt;/h1&gt; &#xA;&lt;p&gt;API 介绍，使用文档和测试程序请参考对应 &lt;code&gt;searcher&lt;/code&gt; 查询客户端下的 ReadMe 介绍，全部查询 binding 实现情况如下：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;编程语言&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;开发状态&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;贡献者&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/golang&#34;&gt;golang&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;golang 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/php&#34;&gt;php&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;php 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/java&#34;&gt;java&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;java 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/lua&#34;&gt;lua&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;lua 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/c&#34;&gt;c&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ANSC c 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/lua_c&#34;&gt;lua_c&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;lua 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/rust&#34;&gt;rust&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rust 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;开发中...&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/python&#34;&gt;python&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;python 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待开始&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待确定&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/nodejs&#34;&gt;nodejs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nodejs 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待开始&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待确定&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/php5_ext&#34;&gt;php5_ext&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;php5 c 扩展查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待开始&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待确定&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/php7_ext&#34;&gt;php7_ext&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;php7 c 扩展查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待开始&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待确定&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/nginx&#34;&gt;nginx&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;nginx的扩展查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待开始&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待确定&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/binding/csharp&#34;&gt;csharp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;c# 查询客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待开始&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;待确定&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;&lt;code&gt;xdb&lt;/code&gt; 数据生成&lt;/h1&gt; &#xA;&lt;p&gt;API 介绍，使用文档和测试程序请参考对应 &lt;code&gt;maker&lt;/code&gt; 生成程序下的 ReadMe 介绍，全部生成 maker 实现情况如下：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;编程语言&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;开发状态&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;贡献者&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/golang&#34;&gt;golang&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;golang xdb 生成程序实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;已完成&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/java&#34;&gt;java&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;java xdb 生成程序实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;开发中...&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lionsoul2014/ip2region/master/maker/c&#34;&gt;c&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ANSC c xdb 生成客户端实现&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;开发中...&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/lionsoul2014&#34;&gt;Lion&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;并发查询必读&lt;/h1&gt; &#xA;&lt;p&gt;全部查询客户端的 search 接口都 &lt;b&gt;不是&lt;/b&gt; 并发安全的实现，不同进程/线程/协程需要通过创建不同的查询对象来安全使用，并发量很大的情况下，基于文件查询的方式可能会导致打开文件数过多的错误，请修改内核的最大允许打开文件数(fs.file-max=一个更高的值)，或者将整个xdb加载到内存进行安全并发使用。&lt;/p&gt; &#xA;&lt;h1&gt;相关备注&lt;/h1&gt; &#xA;&lt;h3&gt;1、使用声明&lt;/h3&gt; &#xA;&lt;p&gt;ip2region 重点在于&lt;b&gt;研究 IP 定位数据的存储设计和各种语言的查询实现&lt;/b&gt;，并没有原始 IP 数据的支撑，本项目不保证及时的数据更新，没有也不会有商用版本，你可以使用自定义的数据导入 ip2region 进行管理。&lt;/p&gt; &#xA;&lt;h3&gt;2、技术交流&lt;/h3&gt; &#xA;&lt;p&gt;ip2region 微信交流群，请先加微信：lionsoul2014 (请备注 ip2region)&lt;/p&gt; &#xA;&lt;h3&gt;3、数据更新&lt;/h3&gt; &#xA;&lt;p&gt;基于检测算法的数据更新方式视频分享：&lt;a href=&#34;https://www.bilibili.com/video/BV1934y1E7Q5/&#34;&gt;数据更新实现视频分享 - part1&lt;/a&gt;，&lt;a href=&#34;https://www.bilibili.com/video/BV1pF411j7Aw/&#34;&gt;数据更新实现视频分享 - part2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;4、数据结构&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;v1.0数据库文件的结构和原理 blog：&lt;a href=&#34;https://github.com/dongyado/dongyado.github.io/raw/master/_posts/2016-08-18-structure-of-ip2region-database-file.md&#34;&gt;“ip2region 数据库文件的结构和原理”&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;v1.0素据库文件的结构和原理 视频：&lt;a href=&#34;https://www.bilibili.com/video/BV1wv4y1N7SD&#34;&gt;ip2region 数据结构设计和实现视频分享&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>unicorn-engine/unicorn</title>
    <updated>2022-07-09T01:35:29Z</updated>
    <id>tag:github.com,2022-07-09:/unicorn-engine/unicorn</id>
    <link href="https://github.com/unicorn-engine/unicorn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Unicorn CPU emulator framework (ARM, AArch64, M68K, Mips, Sparc, PowerPC, RiscV, S390x, TriCore, X86)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Unicorn Engine&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pepy.tech/project/unicorn&#34;&gt;&lt;img src=&#34;https://pepy.tech/badge/unicorn&#34; alt=&#34;pypi downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:unicorn&#34;&gt;&lt;img src=&#34;https://oss-fuzz-build-logs.storage.googleapis.com/badges/unicorn.svg?sanitize=true&#34; alt=&#34;Fuzzing Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;250&#34; src=&#34;https://raw.githubusercontent.com/unicorn-engine/unicorn/master/docs/unicorn-logo.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Unicorn is a lightweight, multi-platform, multi-architecture CPU emulator framework, based on &lt;a href=&#34;http://qemu.org&#34;&gt;QEMU&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Unicorn offers some unparalleled features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Multi-architecture: ARM, ARM64 (ARMv8), M68K, MIPS, PowerPC, RISCV, SPARC, S390X, TriCore and X86 (16, 32, 64-bit)&lt;/li&gt; &#xA; &lt;li&gt;Clean/simple/lightweight/intuitive architecture-neutral API&lt;/li&gt; &#xA; &lt;li&gt;Implemented in pure C language, with bindings for Crystal, Clojure, Visual Basic, Perl, Rust, Ruby, Python, Java, .NET, Go, Delphi/Free Pascal, Haskell, Pharo, and Lua.&lt;/li&gt; &#xA; &lt;li&gt;Native support for Windows &amp;amp; *nix (with Mac OSX, Linux, Android, *BSD &amp;amp; Solaris confirmed)&lt;/li&gt; &#xA; &lt;li&gt;High performance via Just-In-Time compilation&lt;/li&gt; &#xA; &lt;li&gt;Support for fine-grained instrumentation at various levels&lt;/li&gt; &#xA; &lt;li&gt;Thread-safety by design&lt;/li&gt; &#xA; &lt;li&gt;Distributed under free software license GPLv2&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Further information is available at &lt;a href=&#34;http://www.unicorn-engine.org&#34;&gt;http://www.unicorn-engine.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is released under the &lt;a href=&#34;https://raw.githubusercontent.com/unicorn-engine/unicorn/master/COPYING&#34;&gt;GPL license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Compilation &amp;amp; Docs&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/unicorn-engine/unicorn/master/docs/COMPILE.md&#34;&gt;docs/COMPILE.md&lt;/a&gt; file for how to compile and install Unicorn.&lt;/p&gt; &#xA;&lt;p&gt;More documentation is available in &lt;a href=&#34;https://raw.githubusercontent.com/unicorn-engine/unicorn/master/docs/README.md&#34;&gt;docs/README.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.unicorn-engine.org/contact/&#34;&gt;Contact us&lt;/a&gt; via mailing list, email or twitter for any questions.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;If you want to contribute, please pick up something from our &lt;a href=&#34;https://github.com/unicorn-engine/unicorn/issues&#34;&gt;Github issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We also maintain a list of more challenged problems in &lt;a href=&#34;https://github.com/unicorn-engine/unicorn/milestones&#34;&gt;milestones&lt;/a&gt; for our regular release.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/unicorn-engine/unicorn/master/CREDITS.TXT&#34;&gt;CREDITS.TXT&lt;/a&gt; records important contributors of our project.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wagiminator/ATtiny412-PocketRadio</title>
    <updated>2022-07-09T01:35:29Z</updated>
    <id>tag:github.com,2022-07-09:/wagiminator/ATtiny412-PocketRadio</id>
    <link href="https://github.com/wagiminator/ATtiny412-PocketRadio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Small FM Radio with RDS and OLED&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FM Pocket Radio based on ATtiny402/412&lt;/h1&gt; &#xA;&lt;p&gt;PocketRadio is an ATtiny402/412 controlled FM radio with RDS (RDA5807MP), an integrated audio amplifier (TC8871 or XPT8871), a LiPo battery charger (MCP73831 or TP4054), an OLED display (SSD1306) and three buttons. You can directly connect a protected 3.7V LiPo battery, a 3W / 4Ω speaker and an FM antenna.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Project Video (YouTube): &lt;a href=&#34;https://youtu.be/-taygMlm8Ls&#34;&gt;https://youtu.be/-taygMlm8Ls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Design Files (EasyEDA): &lt;a href=&#34;https://easyeda.com/wagiminator/attiny412-pocket-radio&#34;&gt;https://easyeda.com/wagiminator/attiny412-pocket-radio&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wagiminator/ATtiny412-PocketRadio/main/documentation/PocketRadio_pic2.jpg&#34; alt=&#34;pic2.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Hardware&lt;/h1&gt; &#xA;&lt;h2&gt;Schematic&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wagiminator/ATtiny412-PocketRadio/main/documentation/PocketRadio_wiring.png&#34; alt=&#34;wiring.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;RDA5807MP FM Radio Tuner IC&lt;/h2&gt; &#xA;&lt;p&gt;The low-cost RDA5807MP is a single-chip broadcast FM stereo radio tuner with fully integrated synthesizer, IF selectivity, RDS/RBDS and MPX decoder. The tuner uses the CMOS process, support multi-interface and require the least external component. All these make it very suitable for portable devices. The RDA5807MP is controlled by the ATtiny via I²C.&lt;/p&gt; &#xA;&lt;h2&gt;TC8871 Audio Amplifier IC&lt;/h2&gt; &#xA;&lt;p&gt;The TC8871 is an FM-free, Class AB/Class D selectable power amplifier. When the working voltage is 5V, the maximum driving power is 5W (2Ω, BTL load, THD&amp;gt;10%). The application circuit of TC8871 is simple, only a few peripheral devices are needed, and the feedback resistor is integrated; the output does not need an external coupling capacitor or a power-up capacity and buffer network. The amplification can be selected via the value of the resistors R3 and R4 (Gain = 2 * 100kΩ / (10kΩ + R3), R4 respectively), which determines the maximum volume. Keep in mind that the resistors together with the coupling capacitors C3 and C4 form a high-pass filter whose cut-off frequency is determined using the following formula: f = 1 / (2 * π * R3 * C3), R4 and C4 respectively.&lt;/p&gt; &#xA;&lt;h2&gt;MCP73831 Li-Ion Battery Charger IC&lt;/h2&gt; &#xA;&lt;p&gt;For battery charging the MCP73831 is used. The MCP73831 is a highly advanced linear charge management controller for use in space-limited, cost-sensitive applications. It employs a constant-current/constant-voltage charge algorithm with selectable preconditioning and charge termination. The constant current value is set with one external resistor (I = 1000V / R6). Charging is done via the built-in USB-C connector. The MCP73831 can be replaced by the much cheaper TP4054.&lt;/p&gt; &#xA;&lt;h2&gt;ME6209 Voltage Regulator&lt;/h2&gt; &#xA;&lt;p&gt;The ME6209A33 is a 3.3V positive voltage output, three–pin regulator, that provides a high current (up to 250mA) even when the input/output voltage differential is small. Low power consumption (3µA) and high accuracy (+/-2%) is achieved through CMOS technology. It allows input voltages as high as 18V with a dropout voltage around 80mV@40mA.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wagiminator/ATtiny412-PocketRadio/main/documentation/PocketRadio_pic6.jpg&#34; alt=&#34;pic6.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Software&lt;/h1&gt; &#xA;&lt;h2&gt;Controlling the RDA5807&lt;/h2&gt; &#xA;&lt;p&gt;The FM tuner IC RDA5807MP is controlled via I²C by the ATtiny. It has six writable 16-bit registers (addresses 0x02 - 0x07) and six readable 16-bit registers (addresses 0x0A - 0x0F). The RDA5807 has two methods of write access, a sequential one in which the registers are always written starting from address 0x02 and an indexed method in which the register address is transferred first and then the content. Both methods are determined by different I²C addresses. To transfer the 16-bit register content, the high byte is sent first. The RDA5807 is controlled by setting or clearing certain bits in the respective registers. The details of the meanings of the individual registers can be found in the data sheet. The current register contents are saved in the RDA_regs arrays. The RDA implementation is based on the work of &lt;a href=&#34;https://hackaday.io/project/9009-arduino-radio-with-rds&#34;&gt;Maarten Janssen&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Compiling and Uploading the Firmware&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Connect your &lt;a href=&#34;https://github.com/wagiminator/AVR-Programmer&#34;&gt;UPDI programmer&lt;/a&gt; to your PC and to the UPDI header on the board. Set your programmer to work at 3.3V!&lt;/li&gt; &#xA; &lt;li&gt;Use one of the following methods to compile and upload the firmware:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;If using the Arduino IDE&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open your Arduino IDE.&lt;/li&gt; &#xA; &lt;li&gt;Make sure you have installed &lt;a href=&#34;https://github.com/SpenceKonde/megaTinyCore&#34;&gt;megaTinyCore&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;strong&gt;Tools -&amp;gt; Board -&amp;gt; megaTinyCore&lt;/strong&gt; and select &lt;strong&gt;ATtiny412/402/212/202&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;strong&gt;Tools&lt;/strong&gt; and choose the following board options: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Chip:&lt;/strong&gt; ATtiny402 or 412&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Clock:&lt;/strong&gt; 1 MHz internal&lt;/li&gt; &#xA;   &lt;li&gt;Leave the rest at the default settings.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;strong&gt;Tools -&amp;gt; Programmer&lt;/strong&gt; and select your UPDI programmer.&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;strong&gt;Tools -&amp;gt; Burn Bootloader&lt;/strong&gt; to burn the fuses.&lt;/li&gt; &#xA; &lt;li&gt;Open the sketch and click &lt;strong&gt;Upload&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;If using the makefile (Linux/Mac)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download &lt;a href=&#34;https://www.microchip.com/mplab/avr-support/avr-and-arm-toolchains-c-compilers&#34;&gt;AVR 8-bit Toolchain&lt;/a&gt; and extract the sub-folders (avr, bin, include, ...) to /software/tools/avr-gcc. To do this, you have to register for free with Microchip on the download site.&lt;/li&gt; &#xA; &lt;li&gt;Open a terminal.&lt;/li&gt; &#xA; &lt;li&gt;Navigate to the folder with the makefile and the sketch.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;DEVICE=attiny412 PROGRMR=serialupdi PORT=/dev/ttyUSB0 make install&lt;/code&gt; to compile, burn the fuses and upload the firmware (change DEVICE, PROGRMR and PORT accordingly).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Building Instructions&lt;/h1&gt; &#xA;&lt;p&gt;Solder all components to the PCB. Place the 40mm speaker in the corresponding cutout on the board. Glue the speaker in place with hot glue. Make sure that the glue is airtight all around to achieve good sound quality. Solder the connection cables between speaker and board. Solder the wire antenna to the corresponding pad on the board. A 75cm (30&#34; = λ / 4) long 28AWG flexible silicone insulated wire works very well.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wagiminator/ATtiny412-PocketRadio/main/documentation/PocketRadio_pic7.jpg&#34; alt=&#34;pic7.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;3D print the case. Cases with different heights are available in the &#34;3dprint&#34; folder. Choose the case that matches the height of your battery and speaker. Glue the battery into the case with double-sided tape. Thread the wire antenna through the small hole in the housing. To improve the sound quality, you can pack a foam mat between the battery and the PCB inside the case. This should fit snugly against the outer walls of the housing.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wagiminator/ATtiny412-PocketRadio/main/documentation/PocketRadio_pic8.jpg&#34; alt=&#34;pic8.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Connect the battery to the JST connector on the board. Pay attention to the correct polarity, unfortunately there is no standard here! At the latest now you should upload the firmware (see above). Use the UPDI pads on the board for this. Place the board on the case and screw it with four M2x5mm self-tapping screws.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wagiminator/ATtiny412-PocketRadio/main/documentation/PocketRadio_pic4.jpg&#34; alt=&#34;pic4.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;There are different loudspeakers with 40mm diameter. The flatter ones allow the radio to be built more compactly, while the taller ones have better sound quality.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wagiminator/ATtiny412-PocketRadio/main/documentation/PocketRadio_pic9.jpg&#34; alt=&#34;pic9.jpg&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/wagiminator/ATtiny412-PocketRadio/main/documentation/PocketRadio_pic10.jpg&#34; alt=&#34;pic10.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The size of the battery also affects the size of the radio. In operation, the radio consumes around 100mA - 125mA at 3.7V and medium volume. So a battery with a capacity of 1200mAh should provide around 10 hours of playtime.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wagiminator/ATtiny412-PocketRadio/main/documentation/PocketRadio_pic11.jpg&#34; alt=&#34;pic11.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Operating Instructions&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure that the wire antenna is laid as straight as possible horizontally or vertically.&lt;/li&gt; &#xA; &lt;li&gt;Turn on the radio using the power switch.&lt;/li&gt; &#xA; &lt;li&gt;The radio should automatically tune to the last station scanned and volume used.&lt;/li&gt; &#xA; &lt;li&gt;Use the volume buttons to select the volume from 0 to 15.&lt;/li&gt; &#xA; &lt;li&gt;The next station is searched for with the &#34;CH+&#34; button.&lt;/li&gt; &#xA; &lt;li&gt;When the OLED shows &#34;Bat: weak&#34;, you should soon recharge the battery via the USB-C port.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wagiminator/ATtiny412-PocketRadio/main/documentation/PocketRadio_pic1.jpg&#34; alt=&#34;pic1.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;References, Links and Notes&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ww1.microchip.com/downloads/aemDocuments/documents/MCU08/ProductDocuments/DataSheets/ATtiny212-214-412-414-416-DataSheet-DS40002287A.pdf&#34;&gt;ATtiny412 Datasheet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://datasheet.lcsc.com/lcsc/1806121226_RDA-Microelectronics-RDA5807MP_C167245.pdf&#34;&gt;RDA5807MP Datasheet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://datasheet.lcsc.com/lcsc/2202252130_Shenzhen-Fuman-Elec-TC8871_C89482.pdf&#34;&gt;TC8871 Datasheet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://datasheet.lcsc.com/lcsc/1809191822_Microchip-Tech-MCP73831T-2ATI-OT_C14879.pdf&#34;&gt;MCP73831 Datasheet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://datasheet.lcsc.com/lcsc/1811081822_MICRONE-Nanjing-Micro-One-Elec-ME6209A33M3G_C83508.pdf&#34;&gt;ME6209 Datasheet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cdn-shop.adafruit.com/datasheets/SSD1306.pdf&#34;&gt;SSD1306 Datasheet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wagiminator/ATtiny13-TinyPocketRadio&#34;&gt;ATtiny13A TinyPocketRadio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wagiminator/ATtiny85-TinyFMRadio&#34;&gt;ATtiny85 TinyFMRadio&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wagiminator/ATtiny412-PocketRadio/main/documentation/PocketRadio_pic3.jpg&#34; alt=&#34;pic3.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.creativecommons.org/l/by-sa/3.0/88x31.png&#34; alt=&#34;license.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This work is licensed under Creative Commons Attribution-ShareAlike 3.0 Unported License. (&lt;a href=&#34;http://creativecommons.org/licenses/by-sa/3.0/&#34;&gt;http://creativecommons.org/licenses/by-sa/3.0/&lt;/a&gt;)&lt;/p&gt;</summary>
  </entry>
</feed>