<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-29T01:20:57Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MaJerle/stm32f429</title>
    <updated>2023-12-29T01:20:57Z</updated>
    <id>tag:github.com,2023-12-29:/MaJerle/stm32f429</id>
    <link href="https://github.com/MaJerle/stm32f429" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Keil projects and libraries for STM32F4xx devices&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;STM32F4&lt;/h1&gt; &#xA;&lt;h2&gt;Libraries and projects&lt;/h2&gt; &#xA;&lt;p&gt;Here are listed all libraries for STM32F4 devices. Libraries are designed to work with STM32F4xx series of MCU. Every project here is created with Keil uVision, but tested with GCC compiler too (Coocox). Each project includes 4 targets:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;STM32F429-Discovery board (STM32F429ZI, 180MHz)&lt;/li&gt; &#xA; &lt;li&gt;STM32F4-Discovery board (STM32F407VG, 168MHz)&lt;/li&gt; &#xA; &lt;li&gt;STM32F401-Discovery (STM32F401, 84MHz)&lt;/li&gt; &#xA; &lt;li&gt;STM32F411C-Discovery (STM32F411, 100MHz)&lt;/li&gt; &#xA; &lt;li&gt;Nucleo F411-RE (STM32F411RE, 100MHz)&lt;/li&gt; &#xA; &lt;li&gt;Nucleo F401-RE (STM32F401RE, 84MHz)&lt;/li&gt; &#xA; &lt;li&gt;STM32F446xx (180MHz)&lt;/li&gt; &#xA; &lt;li&gt;STM32439-Eval (STM32F439NI, 180MHz)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;When you download repository and open project, you have to set correct your target, for device you use. If you use other device in your project, then set your project and copy settings there from target options.&lt;/p&gt; &#xA;&lt;p&gt;More information below &lt;a href=&#34;https://stm32f4-discovery.net&#34;&gt;https://stm32f4-discovery.net&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;First time with Discovery board? &lt;a href=&#34;https://stm32f4-discovery.net&#34;&gt;https://stm32f4-discovery.net&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Current librarires:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All libraries listed at one place for easy editing them from one place and use them for all projects&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Two default projects are included&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/04/stm32f429-discovery-gpio-tutorial-with-onboard-leds-and-button/&#34;&gt;LED_BUTTON - Project example for STM32F4/29 Discovery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/04/03-stm32f429-discovery-system-clock-and-pretty-precise-delays/&#34;&gt;DELAY - Delay library for STM32F4/29&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/04/04-connect-stm32f429-discovery-to-computer-with-usart/&#34;&gt;USART - USART library for STM32F4/29&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/04/05-stm32f429-discovery-spi-library/&#34;&gt;SPI - SPI library for STM32F4/29&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/04/06-ad-converter-on-stm32f429/&#34;&gt;ADC - ADC library for STM32F4/29&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/04/07-da-converter-on-stm32f429/&#34;&gt;DAC - DAC library for STM32F4/29&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/04/08-ili9341-lcd-on-stm32f429-discovery-board/&#34;&gt;ILI9341 LCD - STM32F429 Discovery ILI9341 LCD library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/05/09-i2c-library-for-stm32f429/&#34;&gt;I2C - I2C library for STM32F4/29&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/05/10-stmpe811-touch-screen-driver-for-stm32f429-discovery-board/&#34;&gt;STMPE811 touch driver for STM32F4/29 Discovery board&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/05/11-button-library-for-ili9341-lcd-and-stmpe811-touch-controller-on-stm32f429-discovery-board/&#34;&gt;ILI9341 Button - Button library for ILI9341 LCD and STMPE811 Touch driver on STM32F429&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/05/12-onewire-library-for-stm32f429-discovery/&#34;&gt;ONEWIRE - OneWire library for STM32F4/29&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/05/13-reading-temperature-with-dallas-ds18b20-on-stm32f429-discovery-board/&#34;&gt;DS18B20 - DS18B20 OneWire temperature sensor library for STM32F4/29&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/05/14-working-with-sdram-on-stm32f429-discovery/&#34;&gt;SDRAM - ISSI 8MByte SDRAM on STM32F429 Discovery board&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/05/library-15-ds1307-real-time-clock-for-stm32f429-discovery/&#34;&gt;DS1307 - DS1307 RTC modeule for STM32F429 Discovery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/06/library-16-interfacing-hd44780-lcd-controller-with-stm32f429-discovery/&#34;&gt;HD44780 - HD44780 Alpha numeric LCD driver for STM32F429 discovery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/06/library-17-nrf24l01-stm32f4xx/&#34;&gt;NRF24L01+ - NRF24L01+ 2.4 GHz transceiver library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/06/library-18-ili9341-ltdc-stm32f429-discovery/&#34;&gt;ILI8341 LTDC - ILI9341 LCD with LTDC hardware only for STM32F429&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/07/library-19-of-internal-rtc-on-stm32f4xx-devices/&#34;&gt;Internal RTC - Library for internal RTC on STM32F4xx devices&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/07/library-20-independent-watchdog-timer-stm32f4xx/&#34;&gt;Independent watchdog - Library for watchdog on STM32F4xx devices&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/07/library-21-read-sd-card-fatfs-stm32f4xx-devices/&#34;&gt;FATFS - Read SDcard with STM32F4xx using SDIO or SPI communication&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/07/library-22-true-random-number-generator-stm32f4xx/&#34;&gt;RNG - Use of True random number generator peripheral on STM32F4xx devices&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/07/library-23-read-rfid-tag-mfrc522-stm32f4xx-devices/&#34;&gt;MFRC522 - Read RFID Cards with STM32F4xx devices&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/08/library-24-virtual-com-port-vcp-stm32f4xx/&#34;&gt;USB VCP - Use STM32F4xx as USB VCP device (Virtual COM Port)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/08/library-25-am2301-dht21-sensor-stm32f4xx/&#34;&gt;AM2301 - AM2301 (DHT21) temperature and humidity sensor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/08/library-26-rotary-encoder-stm32f4/&#34;&gt;ROTARY ENCODER - Connect Rotary Encoder to STM32F4xx device&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/08/library-27-gps-stm32f4-devices/&#34;&gt;GPS - Read GPS data on STM32F4xx devices&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/08/library-28-l3gd20-3-axis-gyroscope/&#34;&gt;L3GD20 - Measure rotation of all 3 axis with L3GD20 gyro sensor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/08/library-29-usb-msc-host-usb-flash-drive-stm32f4xx-devices/&#34;&gt;USB MSC HOST - Read USB flash drive with STM32F4xx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/08/library-30-measure-distance-hc-sr04-stm32f4xx/&#34;&gt;HC-SR04 - Measure distance with ultrasonic sensor on STM32F4xx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/08/library-31-usb-hid-host-for-stm32f4xx-devices/&#34;&gt;USB HID HOST - Read USB mouse and keyboard on STM32F4xx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/09/library-32-matrix-keypad-stm32f4xx/&#34;&gt;4x4 KEYPAD - Read matrix keypad up to 4x4 with STM32F4xx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/09/library-33-pwm-stm32f4xx/&#34;&gt;PWM - Use PWM on all possible timers for STM32F4xx device&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/09/library-34-stm32f4-usb-hid-device/&#34;&gt;USB HID Device - Turn STM32F4 into USB HID Device&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/09/library-35-lis302dl-or-lis3dsh-accelerometer/&#34;&gt;LIS302DL/LIS3DSH - Accelerometers on STM32F4-Discovery board. Also can be used with any STM32F4 device&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/09/library-36-dac-signal-generator-stm32f4/&#34;&gt;DAC SIGNAL - Output predefined signals with STM32F4 using DAC, DMA and TIM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/09/library-37-bmp180-pressure-sensor-stm32f4/&#34;&gt;BMP180 - Read atmosferic pressure on STM32F4 device&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/10/library-38-external-interrupts-stm32f4/&#34;&gt;EXTI - Use external interrupts with STM32F4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/10/library-39-power-consumption-modes-for-stm32f4/&#34;&gt;LOW POWER - Power consumption modes for STM32F4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/10/library-40-output-clocks-stm32f4/&#34;&gt;MCO OUTPUT - Output different clocks from STM32F4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/10/library-41-stdio-implementation-for-stm32f4/&#34;&gt;STDIO - Use printf and fprintf/vfprintf on STM32F4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/10/library-42-control-rc-servo-stm32f4/&#34;&gt;SERVO - Control RC servo with STM32F4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/10/library-43-mpu-6050-6-axes-gyro-accelerometer-stm32f4/&#34;&gt;MPU-6050 - Read accelerometer and gyroscope data with STM32F4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/12/library-44-stm32f4-unique-id-and-flash-size/&#34;&gt;Identification - Read identification bytes and 96-bits long UNIQUE ID from STM32F4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/12/library-45-interface-backup-sram-on-stm32f4/&#34;&gt;BKPSRAM - Interface backup SRAM on STM32F4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/12/library-46-debug-stm32f4-device-swo-feature/&#34;&gt;SWO DEBUG - Debug STM32F4 using SWO output&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2014/12/library-47-crc-module-stm32f4/&#34;&gt;CRC - STM32F4 CRC Hardware module&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2015/01/library-48-measure-pwm-input-signal-stm32f4/&#34;&gt;PWM IN - Measure input PWM signal on STM32F4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2015/01/library-49-one-time-programmable-otp-bytes-stm32f4xx/&#34;&gt;OTP - One-time programmable memory on STM32F4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2015/01/library-50-stemwin-stm32f429-discovery/&#34;&gt;STemWin - STemWin implementation for STM32F429-Discovery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2015/01/library-51-chrom-art-accelerator-dma2d-graphic-library-on-stm32f429-discovery/&#34;&gt;DMA2D GRAPHIC- Chrom-ART Accelerator on STM32F429-Discovery board&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2015/02/library-52-ethernet-peripheral-on-stm32f4xx/&#34;&gt;ETHERNET - Connect ethernet to STM32F4xx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2015/03/library-53-gpio-for-stm32f4/&#34;&gt;GPIO - GPIO pins on STM32F4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2015/03/library-54-general-library-for-stm32f4xx-devices/&#34;&gt;GENERAL - General library for STM32F4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2015/04/library-55-extend-usart-with-tx-dma/&#34;&gt;USART DMA - Extend USART with DMA TX functionality&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2015/04/library-56-extend-spi-with-dma-for-stm32f4xx/&#34;&gt;SPI DMA - Extend SPI with DMA functionality&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2015/04/library-57-buttons-for-stm32f4xx/&#34;&gt;BUTTON - Use buttons with STM32F4xx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2015/05/library-58-dynamic-strings-on-stm32f4xx/&#34;&gt;STRING - Dynamic string allocation for STM32F4xx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2015/05/library-59-change-pll-settings-while-stm32f4xx-is-running/&#34;&gt;RCC - Dynamic PLL settings for STM32F4xx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2015/05/library-60-cpu-load-monitor-for-stm32f4xx-devices/&#34;&gt;CPU LOAD - CPU load monitoring for STM32F4xx&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2015/05/library-61-ssd1306-oled-i2c-lcd-for-stm32f4xx/&#34;&gt;SSD1306 - Use OLED LCD with STM32F4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2015/05/library-62-fast-fourier-transform-fft-for-stm32f4xx/&#34;&gt;FFT - FFT Library for STM32F4xx devices&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/2015/06/library-63-dma-for-stm32f4xx/&#34;&gt;DMA - DMA library for STM32F4xx&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;General library&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stm32f4-discovery.net/pcd8544-nokia-33105110-lcd-stm32f429-discovery-library/&#34;&gt;PCD8544 LCD (Nokia 5110/3310) - Library for LCD&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>netero1010/EDRSilencer</title>
    <updated>2023-12-29T01:20:57Z</updated>
    <id>tag:github.com,2023-12-29:/netero1010/EDRSilencer</id>
    <link href="https://github.com/netero1010/EDRSilencer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A tool uses Windows Filtering Platform (WFP) to block Endpoint Detection and Response (EDR) agents from reporting security events to the server.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;EDRSilencer&lt;/h1&gt; &#xA;&lt;p&gt;Inspired by the closed source FireBlock tool &lt;a href=&#34;https://www.mdsec.co.uk/2023/09/nighthawk-0-2-6-three-wise-monkeys/&#34;&gt;FireBlock&lt;/a&gt; from MdSec NightHawk, I decided to create my own version and this tool was created with the aim of blocking the outbound traffic of running EDR processes using Windows Filtering Platform (WFP) APIs.&lt;/p&gt; &#xA;&lt;p&gt;This tool offers the following features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Search known running EDR processes and add WFP filter to block its outbound traffic&lt;/li&gt; &#xA; &lt;li&gt;Add WFP filter for a specific process&lt;/li&gt; &#xA; &lt;li&gt;Remove all WFP filters created by this tool&lt;/li&gt; &#xA; &lt;li&gt;Remove a specific WFP filter by filter id&lt;/li&gt; &#xA; &lt;li&gt;Support to run in C2 with in-memory PE execution module (e.g., &lt;code&gt;BruteRatel&#39;s memexec&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;The current EDR process block list (edrProcess) includes only a limited number of EDR solutions (e.g., MDE, Elastic EDR). It would be appreciated if someone could assist in expanding the process list in &lt;code&gt;EDRSilencer.c&lt;/code&gt; to encompass a broader range of other EDR solutions.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Testing Environment&lt;/h2&gt; &#xA;&lt;p&gt;Tested in Windows 10 and Windows Server 2016&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: EDRSilencer.exe &amp;lt;blockedr/block/unblockall/unblock&amp;gt;&#xA;- Add WFP filters to block the IPv4 and IPv6 outbound traffic of all detected EDR processes:&#xA;  EDRSilencer.exe blockedr&#xA;&#xA;- Add WFP filters to block the IPv4 and IPv6 outbound traffic of a specific process (full path is required):&#xA;  EDRSilencer.exe block &#34;C:\Windows\System32\curl.exe&#34;&#xA;&#xA;- Remove all WFP filters applied by this tool:&#xA;  EDRSilencer.exe unblockall&#xA;&#xA;- Remove a specific WFP filter based on filter id:&#xA;  EDRSilencer.exe unblock &amp;lt;filter id&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Compile&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;x86_64-w64-mingw32-gcc EDRSilencer.c -o EDRSilencer.exe -lfwpuclnt utils.c&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;h3&gt;Detect and block the outbound traffic of running EDR processes&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;EDRSilencer.exe blockedr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/netero1010/EDRSilencer/raw/main/example.png&#34; alt=&#34;HowTo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.mdsec.co.uk/2023/09/nighthawk-0-2-6-three-wise-monkeys/&#34;&gt;https://www.mdsec.co.uk/2023/09/nighthawk-0-2-6-three-wise-monkeys/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>hrvach/deskhop</title>
    <updated>2023-12-29T01:20:57Z</updated>
    <id>tag:github.com,2023-12-29:/hrvach/deskhop</id>
    <link href="https://github.com/hrvach/deskhop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fast Desktop Switching Device&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DeskHop - Fast Desktop Switching&lt;/h1&gt; &#xA;&lt;p&gt;Did you ever notice how, in the crazy world of tech, there&#39;s always that one quirky little project trying to solve a problem so niche that its only competitors might be a left-handed screwdriver and a self-hiding alarm clock?&lt;/p&gt; &#xA;&lt;p&gt;I use two different computers in my daily workflow and share a single keyboard/mouse pair between them. Trying several USB switching boxes found on Amazon made me realize they all suffer from similar issues - it takes a while to switch, the process is quite clumsy when trying to find the button and frankly, it just doesn&#39;t get any better with time.&lt;/p&gt; &#xA;&lt;p&gt;All I wanted was a way to use a keyboard shortcut to quickly switch outputs, paired with the ability to do the same by magically moving the mouse pointer between monitors. This project enables you to do both, even if your computers run different operating systems!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hrvach/deskhop/main/img/case_and_board_s.png&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Completely &lt;strong&gt;free and open source&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;No noticeable delay when switching&lt;/li&gt; &#xA; &lt;li&gt;Simply drag the mouse pointer between computers&lt;/li&gt; &#xA; &lt;li&gt;No software installed&lt;/li&gt; &#xA; &lt;li&gt;Affordable and obtainable components (&amp;lt;15€)&lt;/li&gt; &#xA; &lt;li&gt;3D printable snap-fit case&lt;/li&gt; &#xA; &lt;li&gt;Full Galvanic isolation between your outputs&lt;/li&gt; &#xA; &lt;li&gt;Works with Linux, macOS and Windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;The device acts as an intermediary between your keyboard/mouse and the computer, establishing and maintaining connections with both computers at once. Then it chooses where to forward your mouse and keystrokes to, depending on your selection. Keyboard follows the mouse and vice versa, so just dragging the mouse to the other desktop will switch both.&lt;/p&gt; &#xA;&lt;h2&gt;Mouse&lt;/h2&gt; &#xA;&lt;p&gt;To get the mouse cursor to magically jump across, the mouse hid report descriptor was changed to use absolute coordinates and then the mouse reports (that still come in relative movements) accumulate internally, keeping the accurate tally on the position.&lt;/p&gt; &#xA;&lt;p&gt;When you try to leave the monitor area in the direction of the other monitor, it keeps the Y coordinate and swaps the maximum X for a minimum X, then flips the outputs. This ensures that the cursor seamlessly appears at the same height on the other monitor, enhancing the perception of a smooth transition.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hrvach/deskhop/main/img/deskhop-demo.gif&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Dragging the mouse from Mac to Linux automatically switches outputs. &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;The actual switch happens at the very moment when one arrow stops moving and the other one starts.&lt;/p&gt; &#xA;&lt;h2&gt;Keyboard&lt;/h2&gt; &#xA;&lt;p&gt;Acting as a USB Host and querying your keyboard periodically, it looks for a preconfigured hotkey in the hid report (usually Caps Lock for me). When found, it will forward all subsequent characters to the other output.&lt;/p&gt; &#xA;&lt;p&gt;To have a visual indication which output you are using at any given moment, you can repurpose keyboard LEDs and have them provide the necessary feedback.&lt;/p&gt; &#xA;&lt;p&gt;It also remembers the LED state for each computer, so you can pick up exactly how you left it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hrvach/deskhop/main/img/demo-typing.gif&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to build&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir build&#xA;cd build&#xA;PICO_BOARD=pico PICO_SDK_PATH=/your/sdk/path cmake ..&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using pre-built images&lt;/h2&gt; &#xA;&lt;p&gt;Alternatively, you can use the &lt;a href=&#34;https://raw.githubusercontent.com/hrvach/deskhop/main/binaries/&#34;&gt;pre-built images&lt;/a&gt;. Take the Pico board that goes to slot A on the PCB and hold the on-board button while connecting the cable.&lt;/p&gt; &#xA;&lt;p&gt;It should appear as a USB drive on your system. Copy the corresponding board_A.uf2 file there and repeat the same with B.&lt;/p&gt; &#xA;&lt;h2&gt;Upgrading firmware&lt;/h2&gt; &#xA;&lt;p&gt;Option 1 - Open the case, hold the button while connecting each Pico and copy the right uf2 to it.&lt;/p&gt; &#xA;&lt;p&gt;Option 2 - Switch both Picos to BOOTSEL mode by using a special key combination (&lt;strong&gt;hold down&lt;/strong&gt; all of these keys): &lt;code&gt;Right Shift, P, H, X, Left Shift&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;This will make the Picos enter the bootloader upgrade mode and act as USB flash drives. Now you can drag-and-drop the .uf2 files to them (you might need to plug in your mouse directly).&lt;/p&gt; &#xA;&lt;h2&gt;Misc features&lt;/h2&gt; &#xA;&lt;p&gt;Ever tried to move that YT video slider to a specific position but your mouse moves too jumpy and suddenly you are moving your hand super-carefully like you&#39;re 5 and playing &#34;Operation&#34; all over again?&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Holding right ALT&lt;/strong&gt; while moving the mouse will slow it down considerably, enabling you to get the finer precision work done and still have your mouse moving quickly otherwise.&lt;/p&gt; &#xA;&lt;h2&gt;Hardware&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hrvach/deskhop/main/schematics/DeskHop.pdf&#34;&gt;The circuit&lt;/a&gt; is based on two Raspberry Pi Pico boards, chosen because they are cheap (4.10 € / pc), can be hand soldered and most suppliers have them in stock.&lt;/p&gt; &#xA;&lt;p&gt;The Picos are connected using UART and separated by an Analog Devices ADuM1201 dual-channel digital isolator (~3€).&lt;/p&gt; &#xA;&lt;p&gt;While they normally don&#39;t have support for dual USB, thanks to an &lt;a href=&#34;https://github.com/sekigon-gonnoc/Pico-PIO-USB&#34;&gt;amazing project&lt;/a&gt; where USB is implemented using the programmable IO wizardry found in RP2040, there is support for it to act both as an USB host and device.&lt;/p&gt; &#xA;&lt;h2&gt;PCB&lt;/h2&gt; &#xA;&lt;p&gt;To keep things as simple as possible for DIY builds, the traces were kept on one side and the number of parts kept to a theoretical minimum.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hrvach/deskhop/main/img/pcb_render_s.png&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;USB D+/D- differential lines should be identical in length, but they are slightly asymmetrical on purpose to counter the length difference on the corresponding GPIO traces PICO PCB itself, so the overall lengths should match.&lt;/p&gt; &#xA;&lt;p&gt;Zd (differential impedance) is aimed as 90 ohm (managed to get ~107, close enough :)).&lt;/p&gt; &#xA;&lt;p&gt;The thickness is designed to be 1.6 mm for snap-fit to work as expected.&lt;/p&gt; &#xA;&lt;p&gt;Planned changes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add 15 ohm resistors for D+ / D- lines&lt;/li&gt; &#xA; &lt;li&gt;Add decoupling capacitance near VBUS line on USB-A connector (~100 uF)&lt;/li&gt; &#xA; &lt;li&gt;Add an ESD protection device near the USB connector&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Case&lt;/h2&gt; &#xA;&lt;p&gt;Since I&#39;m not very good with 3d, the case is &lt;a href=&#34;https://raw.githubusercontent.com/hrvach/deskhop/main/case/&#34;&gt;simple and basic&lt;/a&gt; but does the job. It should be easy to print, uses ~33g of filament and takes a couple of hours.&lt;/p&gt; &#xA;&lt;p&gt;Horizontal PCB movements are countered by pegs sliding through holes and vertical movements by snap-fit lugs on the side - no screws required.&lt;/p&gt; &#xA;&lt;p&gt;Micro USB connectors on both boards are offset from the side of the case, so slightly larger holes should allow for cables to reach in.&lt;/p&gt; &#xA;&lt;p&gt;The lid is of a snap-fit design, with a screwdriver slot for opening. The markings on top are recessed and can be finished with e.g. crayons to give better contrast (or simply left as-is).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hrvach/deskhop/main/img/deskhop-case.gif&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Bill of materials&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Component&lt;/th&gt; &#xA;   &lt;th&gt;Qty&lt;/th&gt; &#xA;   &lt;th&gt;Unit Price / €&lt;/th&gt; &#xA;   &lt;th&gt;Price / €&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Raspberry Pi Pico&lt;/td&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;4.10&lt;/td&gt; &#xA;   &lt;td&gt;8.20&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ADuM1201BRZ&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;2.59&lt;/td&gt; &#xA;   &lt;td&gt;2.59&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cap 1206 SMD 100nF&lt;/td&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;0.09&lt;/td&gt; &#xA;   &lt;td&gt;0.18&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;USB-A PCB conn.&lt;/td&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;0.20&lt;/td&gt; &#xA;   &lt;td&gt;0.40&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Headers 2.54 1x03&lt;/td&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;0.08&lt;/td&gt; &#xA;   &lt;td&gt;0.16&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Total&lt;/td&gt; &#xA;   &lt;td&gt;11.53&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;USB-A connector can be Molex MX-67643-0910 or a cheaper/budget one that shares the same dimensions.&lt;/p&gt; &#xA;&lt;p&gt;Additional steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;making the PCB (&lt;a href=&#34;https://raw.githubusercontent.com/hrvach/deskhop/main/pcb/&#34;&gt;Gerber provided&lt;/a&gt;, JLC does it for a few bucks, choose 1.6 mm thickness)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;3d printing the case (&lt;a href=&#34;https://raw.githubusercontent.com/hrvach/deskhop/main/case/&#34;&gt;stl files provided&lt;/a&gt;, ~33g filament)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;I just have two Picos, can I do without a PCB and isolator?&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;Sure. Having an isolator is recommended but it should work without it.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;What happens if I have two different resolutions on my monitors?&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;The mouse movement is done in abstract coordinate space and your computer figures out how that corresponds with the physical screen, so it should just work.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Where can I buy it?&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;I&#39;m not selling anything, this is just a personal, non-commercial hobby project.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;When the active screen is changed via the mouse, does the keyboard follow (and vice versa)?&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Yes, the idea was to make it behave like it was one single computer.&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Will this work with keyboard/mouse combo dongles, like the Logitech Unifying receiver?&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Not with the current version, as it assumes the mouse is plugged in the other port. I&#39;d have to investigate how Logitech Unifying receiver behaves and try to implement support for it. If I get my hands on one, I&#39;ll try it.&lt;/p&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Will this work with wireless mice and keyboards that have separate wireless receivers (one for the mouse, another for the keyboard)?&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;It wasn&#39;t tested with those, so surprises are always possible but in theory it should work out of the box.&lt;/p&gt; &#xA;&lt;h2&gt;Shortcomings&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;NOTE: Both computers need to be connected and powered on for this to work (as each board gets powered by the computer it plugs into).&lt;/li&gt; &#xA; &lt;li&gt;Code needs cleanup, some refactoring etc.&lt;/li&gt; &#xA; &lt;li&gt;Occasional bugs and weird behavior.&lt;/li&gt; &#xA; &lt;li&gt;Not tested with a wide variety of devices, I don&#39;t know how it will work with your hardware.&lt;/li&gt; &#xA; &lt;li&gt;Pico-PIO-USB was patched to support controlling keyboard LEDs, normally this would be handled by TinyUSB in host mode.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;I kindly request that anyone attempting to build this project understands and acknowledges that I am not liable for any injuries, damages, or other consequences. Your safety is important, and I encourage you to approach this project carefully, taking necessary precautions and assuming personal responsibility for your well-being throughout the process. Please don&#39;t get electrocuted, burned, stressed or angry. Have fun and enjoy!&lt;/p&gt; &#xA;&lt;p&gt;Happy switchin&#39;!&lt;/p&gt;</summary>
  </entry>
</feed>