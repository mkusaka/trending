<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-29T01:35:27Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>wuzhouhui/misc</title>
    <updated>2022-07-29T01:35:27Z</updated>
    <id>tag:github.com,2022-07-29:/wuzhouhui/misc</id>
    <link href="https://github.com/wuzhouhui/misc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;学习与工作中收集的一些资料&lt;/p&gt;&lt;hr&gt;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;64-ia-32-architectures-software-developer-manual-325462.pdf Intel 64 and IA-32 Architectures Software Developer&#39;s Manual, Combined Volumes: 1, 2A, 2B, 2C, 2D, 3A, 3B, 3C and 3D&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;BeginningLinuxProgramming3thEdition.pdf Beginning Linux Programming, 3rd Edition, Neil Matthew, Richard Stones&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;BeginningLinuxProgramming4thEdition.pdf Beginning Linux Programming, 4rd Edition, Neil Matthew, Richard Stones&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;BeginningLinuxProgramming4thEditionSrcCode.zip The source code appeared in Beginning Linux Programming, 4rd Edition, Neil Matthew, Richard Stones&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Bruce.Eckel.Thinking.In.Java.4th.Edition.Dec.2007.eBook-BBL.pdf Thinking in Java, 4rd Edition, Bruce Eckel&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;C_Programming.pdf C Programming, en.wikibooks.org&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clib_2_0.zip The source code appeared in The Standard C Library, P.J. Plauger&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;CodingInterview.pdf Some Java solution of Leetcode problem&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Debug.Hacks 深入调试的技术和工具 中文版.pdf Debug Hacks 中文版, 深入调试的技术和工具, 吉岡弘隆, 大和一洋 等&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;EffectiveawkProgramming4thEdition.pdf Effective awk Programming, Arnold Robbins&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;FC任天堂红白机中文模拟器+500经典游戏大集合.rar&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;GrowingObject-OrientedSoftwareGuidedbyTests.pdf Growing Object-Oriented Software, Guided by Tests, Steve Freeman, Nat Pryce&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Hacking Vim 7.2.pdf Hacking Vim 7.2, Kim Schulz&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;How-Google-Tests-Software.pdf How Google Tests Software, James Whittaker, Jason Arbon, Jeff Carollo&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;LaTeX.pdf LaTex, wikibooks.org&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;LaTeX入门 刘海洋.pdf LaTeX 入门, 刘海洋&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Learning R.pdf Learning R, Richard Cotton&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;LibreOfficeWriterGuide.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Linux.Command.Line.and.Shell.Scripting.Bible.May.2008.pdf Linux Command Line and Shell Scripting Bible, Richard Blum&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Linux.Kernel.in.a.Nutshell.pdf Linux Kernel in a Nutshell, Greg Kroah-Hartman&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;LinuxKernelDevelopment3rdEdition.pdf Linux Kernel Development, 3rd Edition, Robert Love&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Managing Projects with GNU Make, 3rd Edition.pdf Managing Projects with GNU Make, 3rd Edition, Robert Mecklenburg&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Minix_src_code.pdf The source code of Minix operating system&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Nginx Module Extension.pdf Nginx Module Extension, Usama Dar&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;O&#39;Reilly - sed &amp;amp; awk 2nd Edition.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;OReilly - Unix Power Tools.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Peopleware.Productive.Projects.and.Teams.3rd.2013.6.pdf Peopleware, 3rd Edition, Tom DeMarco, Timothy Lister&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Practical.Subversion.2nd.Edition.Nov.2006.pdf Practical Subversion, 2nd Edition, Daniel Berlin, Garrett Rooney&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pragmatic Guide to Subversion.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pro Vim.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Programming Pearls2ed.pdf Programming Pearls, 2nd Edition&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Programming_pearls1ed.pdf Programming Pearls, 1st Edition&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;PythonCookbook3rd.pdf Python Cook Book, 3rd Edition, David Beazley, Brian K. Jones&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;R in Action.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Red_Hat_Enterprise_Linux-5-Deployment_Guide-en-US.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Red_Hat_Enterprise_Linux-6-Deployment_Guide-en-US.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Red_Hat_Enterprise_Linux-6-Developer_Guide-en-US.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Red_Hat_Enterprise_Linux-6-Installation_Guide-en-US.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Red_Hat_Enterprise_Linux-6-Logical_Volume_Manager_Administration-en-US.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Red_Hat_Enterprise_Linux-6-Resource_Management_Guide-en-US.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Red_Hat_Enterprise_Linux-6-Storage_Administration_Guide-en-US.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Red_Hat_Enterprise_Linux-6-SystemTap_Beginners_Guide-en-US.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Red_Hat_Enterprise_Linux-6-SystemTap_Tapset_Reference-en-US.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Red_Hat_Enterprise_Linux-6-Virtualization_Administration_Guide-en-US.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Red_Hat_Enterprise_Linux-6-Virtualization_Getting_Started_Guide-en-US.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Red_Hat_Enterprise_Linux-6-Virtualization_Host_Configuration_and_Guest_Installation_Guide-en-US.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Red_Hat_Enterprise_Linux-7-Desktop_Migration_and_Administration_Guide-en-US.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Red_Hat_Enterprise_Linux-7-Developer_Guide-en-US.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Red_Hat_Enterprise_Linux-7-Kernel_Crash_Dump_Guide-en-US.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Red_Hat_Enterprise_Linux-7-Networking_Guide-en-US.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Red_Hat_Enterprise_Linux-7-System_Administrators_Guide-en-US.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Red_Hat_OpenStack_Platform-8-Command-Line_Interface_Reference_Guide-en-US.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Red_Hat_OpenStack_Platform-8-Instances_and_Images_Guide-en-US.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Red_Hat_OpenStack_Platform-8-Networking_Guide-en-US.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Red_Hat_OpenStack_Platform-8-Red_Hat_OpenStack_Platform_Operational_Tools-en-US.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;TCP.IP.Illustrated.Volume.1.The.Protocols.pdf TCP/IP Illustrated, Volume 1: The Protocols, 2nd Edition&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The Complete FreeBSD, 4th Edition.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The Linux Programming Interface.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The.Art.of.UNIX.Programming.pdf The Art of Unix Programming&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The.Art.of.Unit.Testing.pdf The Art of Unit Testing, 2nd Edition&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The.Linux.Programming.Interface.2010.10.pdf The Linux Programming Interface&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;TheCompleteFreeBSD.pdf The Complete FreeBSD, 4th Edition, Tenth anniversary version, 24 February 2006, Greg Lehey&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;TheGoProgrammingLanguage.pdf The Go Programming Language&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;TheProductiveProgrammer.pdf The Productive Programmer, Neal Ford&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;UNIX Network Programming, Volume 1, Third Edition, The Sockets Networking API.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;UNIX Power Tools (3rd Edition).pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;UnderStandingKernel3ed.pdf Understanding the Linux Kernel, 3rd Edition&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;UnixTextProcessing.pdf Unix Text Processing&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Unix内核源码剖析.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Vim7.2用户手册中文版.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;WritingEfficientPrograms.pdf Writing Efficient Programs, Jon Bentley&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;WritingSolidCode.pdf Writing Solid Code&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;advancedlinuxprogram.pdf Advanced Linux Programming, Mark Mitchell, Jeffrey Oldham, and Alex Samuel&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;anAwkPrimer.pdf An Awk Primer&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;appendixB The source code of Minix operating system&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;apue Exercise of Advanced Programming in the UNIX Environment&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;apue-src.3e.tar.gz The source code appeared in Advanced Programming in the UNIX Environment, 3rd Edition&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;apue3rd.pdf Advanced Programming in the UNIX Environment, 3rd Edition&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;arplbaosong2gbklt.ttf Font&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;awkcode.awk The source code appeared in The AWK Programming Lauguage&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;c.pdf The C Programming Lauguage, 2nd Edition&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;clib.pdf The Standard C Library, P.J. Plauger&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;everyBodyLearnVim.pdf 大家來學 Vim, 李果正 Edward G.J. Lee&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;examples_of_latex_入门.zip The source code appeared in Latex 入门&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;expertCprogrammingDeepCsecrets.pdf Expert C Programming, Deep Csecrets, Peter van der Linden&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;fandol.zip Font&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;gawk.pdf GAWK: Effective AWK Programming, A User’s Guide for GNU Awk, 4.1 Edition&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;git 中文版本.pdf Pro Git 中文版&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;grap.pdf Grap — A Language for Typesetting Graphs Tutorial and User Manual&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;grepPocket Reference.pdf Grep Pocket Reference&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;intel80386programmer_manual.pdf INTEL 80386 PROGRAMMER&#39;S REFERENCE MANUAL, 1986&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;kanbanInAction.pdf Kanban In Action&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;latex Exercise when reading LaTeX 入门&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;latex-symbols-letter.pdf The Comprehensive LATEX Symbol List&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;leetcode-cpp.pdf Some C++ solution of Leetcode problem&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;leetcode-solution.pdf Some solution of Leetcode problem&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;linux-0.11 The source code of Linux v0.11&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;linux-0.11-commented.rar The commented source code of Linux v0.11&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;linux-0.11-devel-050518.zip&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;linux-0.11-devel-060625.zip&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;linux-0.11-gdb-rh9-050619.tar.gz&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;linux-0.11.tar.gz&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;linux-0.11_with_tool.tgz&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;linux-0.11内核完全注释v1.9.5.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;linux-0.11内核完全注释v3.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;linux-0.11内核完全注释v3_part1.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;linux-0.11内核完全注释v3_part2.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;linux-0.11内核完全注释v3_part3.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;linux-0.12.tar.gz&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;linux_driver_devel_3rd_en.tar.bz2&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;listings.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;makefile.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;mdframed.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;mednafen.cfg&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;minted.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;minted_v2.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;nvme_tutorial.pdf An NVM Express Tutorial&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;osDesignImplementation3ed.pdf Operating Systems Design and Implementation, 3rd Edition&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;os_design_and_implementation_appendixB.tar.bz2&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;practice_of_pgramming.pdf The Practice of Programming&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Vim实用技巧.pdf Vim 实用技巧&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;quilt.pdf Quilt Tutorial of Quilt&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;rhel_5_6_7_cheatsheet_a4_1114_jcs.pdf RED HAT ENTERPRISE LINUX 5, 6, AND 7 Common administrative commands&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;sqlite_tutorial.pdf SQLite Tutorial&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ssh.tar&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;subversion-version-control.pdf Subversion Version Control, Using The Subversion Version Control System in Development Projects&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;svn_tutorial.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;svnrpm.txt&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;tapl-master.zip&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;theAwkProgrammingLanguage.pdf The AWK Programming Language&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;theAwkProgrammngLanguage.djvu The AWK Programming Language&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;the_mythical_man-month.pdf The Mythical Man-month&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;troff_tutorial.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;trofftut.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ubuntuServerGuide.pdf Ubuntu Server Guide&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;understandingKernel1ed.pdf Understanding the Linux Kernel&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;unpv13e.tar.gz The source code appeared in Unix Network Programming, Volumes 1, 3rd Edition&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;vbird.tgz 鸟哥的 Linux 私房菜&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;version_control_by_example.pdf Version Control by Example&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;vim.note Notes when learning Vim&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;vim7.4UserManual.pdf Vim 7.4 User Manual&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;vim7.4中文参考手册.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;vim7.4中文用户手册.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;vim72manual_latex_src.zip The LaTeX source code of Vim 7.2 manual&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;vimrc Personal Vim configuration&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;vim文书编译器.odt&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;xUnitTestPatternsRefactoringTestCode.pdf xUnit Test Patterns Refactoring Test Code&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;学习敏捷_构建高效团队.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;链接器与加载器.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Autotools.2nd.Edition.2019.11.pdf Autotools, 2nd Edition&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;How.Computers.Really.Work.2020.12.pdf How Computers Really Work&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Refactoring.Improving.the.Design.of.Existing.Code.2nd.Edition.2018.11.pdf Refactoring, Improving the Design of Existing Code, 2nd Edition&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;TheRustProgrammingLanguage.pdf The Rust Programming Lauguage&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;UNIX_A_History_And_A_Memoir.pdf UNIX, A History And A Memoir&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;code-complete-2nd-edition-v413hav.pdf Code Complete, 2nd Edition&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;docbook5_the_definitive_guide.pdf Docbook5, the definitive guide&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;git_for_teams.pdf Git for Teams&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;git_for_teams_zh_CN.pdf Git 团队协作&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;openSourceReleaseMismanagement.pdf Subversion 1.5: A Case Study in Open Source Release Mismanagement&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;AWP.Algorithms.Part.I.4th.2014.2.pdf Algorithms, Part I, 4th Edition&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;AWP.Algorithms.Part.II.4th.2014.2.pdf Algorithms, Part II, 4th Edition&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Algorithms.in.C.Part.5.3rd.Edition.2001.8.pdf Algorithms in C, Part 5, 3rd Edition&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Algorithms.in.C.Parts.1-4.3rd.Edition.1997.9.pdf Algorithms in C, Part 1-4, 3rd Edition&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;BPF.Performance.Tools.2019.12.pdf BPF Performance Tools&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Effective.Debugging.2016.7.pdf Effective Debugging&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Manning.Unit.Testing.Principles.Practices.and.Patterns.2020.1.pdf Unit Testing: Principles, Practices, and Patterns&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;OReilly.Debugging.Teams.2015.10.pdf Debugging Teams&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;OReilly.Software.Engineering.at.Google.2020.3.pdf Software Engineering at Google&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Practical.Binary.Analysis.2018.12.pdf Practical Binary Analysis&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Systems.Performance.Enterprise.and.the.Cloud.2013.10.pdf Systems Performance: Enterprise and the Cloud&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Systems.Performance.Enterprise.and.the.Cloud.2nd.Edition.2020.12.pdf Systems Performance: Enterprise and the Cloud, 2nd Edition&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;TheDevOpsHandbook.pdf The DevOps Handbook, How to Create Work-Class Agility, Reliability, and Security in Technology Organizations&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The.Rust.Programming.Language.(Covers.Rust.2018).2019.8.pdf The Rust Programming Language, Covers Rust 2018&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[Effective.Unit.Testing(2013.2)].Lasse.Koskela.pdf Effective Unit Testing&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[Linux.Device.Drivers(3rd,2005.2)].Jonathan.Corbet.pdf Linux Device Drivers, 3rd Edition&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[Linux.System.Programming(2nd,2013.5)].Robert.Love.pdf Linux System Programming, 2nd Edition&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[Linux.in.a.Nutshell(6th,2009.9)].Ellen.Siever.pdf Linux in a Nutshell&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[The.Art.of.Readable.Code(2011.11)].Dustin.Boswell.pdf The Art of Readable Code&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[The.Art.of.Unit.Testing(2nd,2013.11)].Roy.Osherove.pdf The Art of Unit Testing&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A Bug Hunter 039 s Diary A Guided Tour Through the Wilds of Software Security.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Continuous Delivery Reliable Software Releases through Build, Test, and Deployment Automation by Jez Humble, David Farley (z-lib.org).pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;OReilly.Learning.Perl.8th.Edition.2021.8.pdf Learning Perl, 8th Edition&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Apress-Beginning Ruby - From Novice to Professional.pdf Beginning Ruby, From Novice to Professional&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Apress-Practical Ruby Gems.pdf Practical Ruby Gems&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Beginning Ubuntu Linux - From Novice To Professional (2006).pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Best of Ruby Quiz.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Code Complete 2nd edition 2004.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create Your Own Programming Languages.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Effective.AWK.programming.3rd.edition.2001.Arnold.Robbins.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;From Bash to Z Shell.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Jump Start Sinatra V413HAV.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Linux Shell Scripting with Bash.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Linux Smart Homes For Dummies.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Maintainable JavaScript.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Making Use of Ruby.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Manning Node.js in Practice (2015).pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Metaprogramming Ruby Program Like the Ruby Pros (2010) (Elements).pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Migrating-to-CouchDB.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;MongoDB.The.Definitive.Guide.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;OReilly - SSH,,The Secure Shell - The Definitive Guide.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;OReilly.Learning.the.vi.and.Vim.Editors.7th.Edition.Jul.2008.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;OReilly.PostgreSQL.Up.and.Running.Jul.2012.RETAIL.eBook-ELOHiM.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Oreilly - Grep Pocket Reference.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Packtpub.Puppet.2.7.Cookbook.Oct.2011.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Practical Ruby Projects, Apress (2008).pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pragmatic.CoffeeScript.Jul.2011.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pragmatic_Programmers-Everyday_Scripting_with_Ruby_Jan.2007.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pragmatic_Programmers-Programming_Ruby.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Prentice Hall The Official Ubuntu Server Book 2nd Edition Jul 2010.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pro Linux System Administration.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Professional XMPP Programming.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Programming Interactivity.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Programming Ruby - The Pragmatic Programmer&#39;s Guide, 2Ed.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Programming in Lua, Second Edition-2010kaiser.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pulling Strings with Puppet.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ruby Developer&#39;s Guide.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ruby Pocket Reference, 2007.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ruby Under a Microscope- Learning Ruby Internals Through Experiment - Pat Shaughnessy-signed.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ruby by Example - Concepts and Code, No Starch Press (2007).pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ruby for System Administration, 2007.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Scaling CouchDB.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Seven Languages in Seven Weeks A Pragmatic Guide to Learning Programming Languages.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Sinatra Up and Running.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The Definitive Guide to CentOS.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The Manga Guide to Databases.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The Pragmatic Programmer, From Journeyman To Master - Andrew Hunt, David Thomas - Addison Wesley - 1999.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The_Joy_of_Clojure.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ubuntu Linux - Bible [2007].pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ubuntu for Non-Geeks (2nd Ed).pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Vi_IMproved_Book.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Why&#39;s (Poignant) Guide to Ruby.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Working with TCP Sockets.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;linux - Advanced Bash Shell Scripting Guide.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;mongodb_qrc_queries.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;professional_javascript_for_web_developers_3rd_edition.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Advanced.Git.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;BinaryHacks.jp.pdf&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Hacking The Art of Exploitation by Jon Erickson.pdf Hacking, The Art of Exploitation&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;WorkingEffectivelyWithLegacyCode Working Effectively With Legacy Code&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;WritingSolidCode.djvu Writing Solid Code&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>meetecho/janus-gateway</title>
    <updated>2022-07-29T01:35:27Z</updated>
    <id>tag:github.com,2022-07-29:/meetecho/janus-gateway</id>
    <link href="https://github.com/meetecho/janus-gateway" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Janus WebRTC Server&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Janus WebRTC Server&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/meetecho/janus-gateway/master/COPYING&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-GPLv3-brightgreen.svg?sanitize=true&#34; alt=&#34;License: GPL v3&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/meetecho/janus-gateway/workflows/janus-ci/badge.svg?sanitize=true&#34; alt=&#34;janus-ci&#34;&gt; &lt;a href=&#34;https://scan.coverity.com/projects/meetecho-janus-gateway&#34;&gt;&lt;img src=&#34;https://scan.coverity.com/projects/13265/badge.svg?sanitize=true&#34; alt=&#34;Coverity Scan Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:janus-gateway&#34;&gt;&lt;img src=&#34;https://oss-fuzz-build-logs.storage.googleapis.com/badges/janus-gateway.svg?sanitize=true&#34; alt=&#34;Fuzzing Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Janus is an open source, general purpose, WebRTC server designed and developed by &lt;a href=&#34;https://www.meetecho.com&#34;&gt;Meetecho&lt;/a&gt;. This version of the server is tailored for Linux systems, although it can be compiled for, and installed on, MacOS machines as well. Windows is not supported, but if that&#39;s a requirement, Janus is known to work in the &#34;Windows Subsystem for Linux&#34; on Windows 10: do &lt;strong&gt;NOT&lt;/strong&gt; trust repos that provide .exe builds of Janus, they are not official and will not be supported.&lt;/p&gt; &#xA;&lt;p&gt;For some online demos and documentations, make sure you pay the &lt;a href=&#34;https://janus.conf.meetecho.com/&#34;&gt;project website&lt;/a&gt; a visit!&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note well:&lt;/strong&gt; this is the main branch for the &lt;code&gt;multistream&lt;/code&gt; version of Janus, which is the new version. If you want to check the legacy version of Janus instead (i.e., &lt;code&gt;0.x&lt;/code&gt;, a.k.a. &#34;legacy&#34;) click &lt;a href=&#34;https://github.com/meetecho/janus-gateway/tree/0.x&#34;&gt;here&lt;/a&gt; instead.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you have questions on Janus, or wish to discuss Janus with us and other users, please join our &lt;a href=&#34;https://groups.google.com/forum/#!forum/meetecho-janus&#34;&gt;meetecho-janus&lt;/a&gt; Google Group. If you encounter bugs, please submit an issue on &lt;a href=&#34;https://github.com/meetecho/janus-gateway/issues&#34;&gt;GitHub&lt;/a&gt;: make sure you read the &lt;a href=&#34;https://raw.githubusercontent.com/meetecho/janus-gateway/master/.github/CONTRIBUTING.md&#34;&gt;guidelines&lt;/a&gt; before opening an issue or a pull request, though.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;To install it, you&#39;ll need to satisfy the following dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.digip.org/jansson/&#34;&gt;Jansson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hyperrealm.github.io/libconfig/&#34;&gt;libconfig&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://libnice.freedesktop.org/&#34;&gt;libnice&lt;/a&gt; (at least v0.1.16 suggested, v0.1.18 recommended)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.openssl.org/&#34;&gt;OpenSSL&lt;/a&gt; (at least v1.0.1e)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cisco/libsrtp&#34;&gt;libsrtp&lt;/a&gt; (at least v2.x suggested)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sctplab/usrsctp&#34;&gt;usrsctp&lt;/a&gt; (only needed if you are interested in Data Channels)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.gnu.org/software/libmicrohttpd/&#34;&gt;libmicrohttpd&lt;/a&gt; (at least v0.9.59; only needed if you are interested in REST support for the Janus API)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://libwebsockets.org/&#34;&gt;libwebsockets&lt;/a&gt; (only needed if you are interested in WebSockets support for the Janus API)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cmake.org/&#34;&gt;cmake&lt;/a&gt; (only needed if you are interested in WebSockets and/or BoringSSL support, as they make use of it)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alanxz/rabbitmq-c&#34;&gt;rabbitmq-c&lt;/a&gt; (only needed if you are interested in RabbitMQ support for the Janus API or events)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eclipse.org/paho/clients/c&#34;&gt;paho.mqtt.c&lt;/a&gt; (only needed if you are interested in MQTT support for the Janus API or events)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nanomsg.org/&#34;&gt;nanomsg&lt;/a&gt; (only needed if you are interested in Nanomsg support for the Janus API)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://curl.haxx.se/libcurl/&#34;&gt;libcurl&lt;/a&gt; (only needed if you are interested in the TURN REST API support)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A couple of plugins depend on a few more libraries:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://sofia-sip.sourceforge.net/&#34;&gt;Sofia-SIP&lt;/a&gt; (only needed for the SIP plugin)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://opus-codec.org/&#34;&gt;libopus&lt;/a&gt; (only needed for the AudioBridge plugin)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://xiph.org/ogg/&#34;&gt;libogg&lt;/a&gt; (needed for the VoiceMail plugin and/or post-processor, and optionally AudioBridge and Streaming plugins)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://curl.haxx.se/libcurl/&#34;&gt;libcurl&lt;/a&gt; (only needed if you are interested in RTSP support in the Streaming plugin or in the sample Event Handler plugin)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.lua.org/download.html&#34;&gt;Lua&lt;/a&gt; (only needed for the Lua plugin)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://duktape.org/&#34;&gt;Duktape&lt;/a&gt; (only needed for the Duktape plugin)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additionally, you&#39;ll need the following libraries and tools:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://library.gnome.org/devel/glib/&#34;&gt;GLib&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zlib.net/&#34;&gt;zlib&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.freedesktop.org/wiki/Software/pkg-config/&#34;&gt;pkg-config&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All of those libraries are usually available on most of the most common distributions. Installing these libraries on a recent Fedora, for instance, is very simple:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yum install libmicrohttpd-devel jansson-devel \&#xA;   openssl-devel libsrtp-devel sofia-sip-devel glib2-devel \&#xA;   opus-devel libogg-devel libcurl-devel pkgconfig \&#xA;   libconfig-devel libtool autoconf automake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Notice that you may have to &lt;code&gt;yum install epel-release&lt;/code&gt; as well if you&#39;re attempting an installation on a CentOS machine instead.&lt;/p&gt; &#xA;&lt;p&gt;On Ubuntu or Debian, it would require something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;aptitude install libmicrohttpd-dev libjansson-dev \&#xA;&#x9;libssl-dev libsrtp-dev libsofia-sip-ua-dev libglib2.0-dev \&#xA;&#x9;libopus-dev libogg-dev libcurl4-openssl-dev liblua5.3-dev \&#xA;&#x9;libconfig-dev pkg-config libtool automake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; please notice that libopus may not be available out of the box on your distro. In that case, you&#39;ll have to &lt;a href=&#34;http://www.opus-codec.org&#34;&gt;install it manually&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;While &lt;code&gt;libnice&lt;/code&gt; is typically available in most distros as a package, the version available out of the box in Ubuntu is known to cause problems. As such, we always recommend manually compiling and installing the master version of libnice. To build libnice, you need Python 3, Meson and Ninja:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://gitlab.freedesktop.org/libnice/libnice&#xA;cd libnice&#xA;meson --prefix=/usr build &amp;amp;&amp;amp; ninja -C build &amp;amp;&amp;amp; sudo ninja -C build install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; Make sure you remove the distro version first, or you&#39;ll cause conflicts between the installations. In case you want to keep both for some reason, for custom installations of libnice you can also run &lt;code&gt;pkg-config --cflags --libs nice&lt;/code&gt; to make sure Janus can find the right installation. If that fails, you may need to set the &lt;code&gt;PKG_CONFIG_PATH&lt;/code&gt; environment variable prior to compiling Janus, e.g., &lt;code&gt;export PKG_CONFIG_PATH=/path/to/libnice/lib/pkgconfig&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In case you&#39;re interested in compiling the sample Event Handler plugin, you&#39;ll need to install the development version of libcurl as well (usually &lt;code&gt;libcurl-devel&lt;/code&gt; on Fedora/CentOS, &lt;code&gt;libcurl4-openssl-dev&lt;/code&gt; on Ubuntu/Debian).&lt;/p&gt; &#xA;&lt;p&gt;If your distro ships a pre-1.5 version of libsrtp, you&#39;ll have to uninstall that version and &lt;a href=&#34;https://github.com/cisco/libsrtp/releases&#34;&gt;install 1.5.x, 1.6.x or 2.x manually&lt;/a&gt;. In fact, 1.4.x is known to cause several issues with WebRTC. While 1.5.x is supported, we recommend installing 2.x instead Notice that the following steps are for version 2.2.0, but there may be more recent versions available:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget https://github.com/cisco/libsrtp/archive/v2.2.0.tar.gz&#xA;tar xfv v2.2.0.tar.gz&#xA;cd libsrtp-2.2.0&#xA;./configure --prefix=/usr --enable-openssl&#xA;make shared_library &amp;amp;&amp;amp; sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Notice that the &lt;code&gt;--enable-openssl&lt;/code&gt; part is &lt;em&gt;important&lt;/em&gt;, as it&#39;s needed for AES-GCM support. As an alternative, you can also pass &lt;code&gt;--enable-nss&lt;/code&gt; to have libsrtp use NSS instead of OpenSSL. A failure to configure libsrtp with either might cause undefined references when starting Janus, as we&#39;d be trying to use methods that aren&#39;t there.&lt;/p&gt; &#xA;&lt;p&gt;The Janus configure script autodetects which one you have installed and links to the correct library automatically, choosing 2.x if both are installed. If you want 1.5 or 1.6 to be picked (which is NOT recommended), pass &lt;code&gt;--disable-libsrtp2&lt;/code&gt; when configuring Janus to force it to use the older version instead.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; when installing libsrtp, no matter which version, you may need to pass &lt;code&gt;--libdir=/usr/lib64&lt;/code&gt; to the configure script if you&#39;re installing on a x86_64 distribution.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want to make use of BoringSSL instead of OpenSSL (e.g., because you want to take advantage of &lt;code&gt;--enable-dtls-settimeout&lt;/code&gt;), you&#39;ll have to manually install it to a specific location. Use the following steps:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://boringssl.googlesource.com/boringssl&#xA;cd boringssl&#xA;# Don&#39;t barf on errors&#xA;sed -i s/&#34; -Werror&#34;//g CMakeLists.txt&#xA;# Build&#xA;mkdir -p build&#xA;cd build&#xA;cmake -DCMAKE_CXX_FLAGS=&#34;-lrt&#34; ..&#xA;make&#xA;cd ..&#xA;# Install&#xA;sudo mkdir -p /opt/boringssl&#xA;sudo cp -R include /opt/boringssl/&#xA;sudo mkdir -p /opt/boringssl/lib&#xA;sudo cp build/ssl/libssl.a /opt/boringssl/lib/&#xA;sudo cp build/crypto/libcrypto.a /opt/boringssl/lib/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once the library is installed, you&#39;ll have to pass an additional &lt;code&gt;--enable-boringssl&lt;/code&gt; flag to the configure script, as by default Janus will be built assuming OpenSSL will be used. By default, Janus expects BoringSSL to be installed in &lt;code&gt;/opt/boringssl&lt;/code&gt; -- if it&#39;s installed in another location, pass the path to the configure script as such: &lt;code&gt;--enable-boringssl=/path/to/boringssl&lt;/code&gt; If you were using OpenSSL and want to switch to BoringSSL, make sure you also do a &lt;code&gt;make clean&lt;/code&gt; in the Janus folder before compiling with the new BoringSSL support. If you enabled BoringSSL support and also want Janus to detect and react to DTLS timeouts with faster retransmissions, then pass &lt;code&gt;--enable-dtls-settimeout&lt;/code&gt; to the configure script too.&lt;/p&gt; &#xA;&lt;p&gt;For what concerns usrsctp, which is needed for Data Channels support, it is usually not available in repositories, so if you&#39;re interested in them (support is optional) you&#39;ll have to install it manually. It is a pretty easy and standard process:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/sctplab/usrsctp&#xA;cd usrsctp&#xA;./bootstrap&#xA;./configure --prefix=/usr --disable-programs --disable-inet --disable-inet6&#xA;make &amp;amp;&amp;amp; sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; you may need to pass &lt;code&gt;--libdir=/usr/lib64&lt;/code&gt; to the configure script if you&#39;re installing on a x86_64 distribution.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The same applies for libwebsockets, which is needed for the optional WebSockets support. If you&#39;re interested in supporting WebSockets to control Janus, as an alternative (or replacement) to the default plain HTTP REST API, you&#39;ll have to install it manually:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://libwebsockets.org/repo/libwebsockets&#xA;cd libwebsockets&#xA;# If you want the stable version of libwebsockets, uncomment the next line&#xA;# git checkout v3.2-stable&#xA;mkdir build&#xA;cd build&#xA;# See https://github.com/meetecho/janus-gateway/issues/732 re: LWS_MAX_SMP&#xA;# See https://github.com/meetecho/janus-gateway/issues/2476 re: LWS_WITHOUT_EXTENSIONS&#xA;cmake -DLWS_MAX_SMP=1 -DLWS_WITHOUT_EXTENSIONS=0 -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_C_FLAGS=&#34;-fpic&#34; ..&#xA;make &amp;amp;&amp;amp; sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; if libwebsockets.org is unreachable for any reason, replace the first line with this:&lt;/p&gt; &lt;p&gt;git clone &lt;a href=&#34;https://github.com/warmcat/libwebsockets.git&#34;&gt;https://github.com/warmcat/libwebsockets.git&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The same applies for Eclipse Paho MQTT C client library, which is needed for the optional MQTT support. If you&#39;re interested in integrating MQTT channels as an alternative (or replacement) to HTTP and/or WebSockets to control Janus, or as a carrier of Janus Events, you can install the latest version with the following steps:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/eclipse/paho.mqtt.c.git&#xA;cd paho.mqtt.c&#xA;make &amp;amp;&amp;amp; sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; you may want to set up a different install path for the library, to achieve that, replace the last command by &#39;sudo prefix=/usr make install&#39;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In case you&#39;re interested in Nanomsg support, you&#39;ll need to install the related C library. It is usually available as an easily installable package in pretty much all repositories. The following is an example on how to install it on Ubuntu:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;aptitude install libnanomsg-dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, the same can be said for rabbitmq-c as well, which is needed for the optional RabbitMQ support. In fact, several different versions of the library can be found, and the versions usually available in most distribution repositories are not up-do-date with respect to the current state of the development. As such, if you&#39;re interested in integrating RabbitMQ queues as an alternative (or replacement) to HTTP and/or WebSockets to control Janus, you can install the latest version with the following steps:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/alanxz/rabbitmq-c&#xA;cd rabbitmq-c&#xA;git submodule init&#xA;git submodule update&#xA;mkdir build &amp;amp;&amp;amp; cd build&#xA;cmake -DCMAKE_INSTALL_PREFIX=/usr ..&#xA;make &amp;amp;&amp;amp; sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; you may need to pass &lt;code&gt;--libdir=/usr/lib64&lt;/code&gt; to the configure script if you&#39;re installing on a x86_64 distribution.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To conclude, should you be interested in building the Janus documentation as well, you&#39;ll need some additional tools too:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.doxygen.org&#34;&gt;Doxygen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.graphviz.org/&#34;&gt;Graphviz&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On Fedora:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;yum install doxygen graphviz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Ubuntu/Debian:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;aptitude install doxygen graphviz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Compile&lt;/h2&gt; &#xA;&lt;p&gt;Once you have installed all the dependencies, get the code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/meetecho/janus-gateway.git&#xA;cd janus-gateway&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then just use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sh autogen.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to generate the configure file. After that, configure and compile as usual to start the whole compilation process:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./configure --prefix=/opt/janus&#xA;make&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Since Janus requires configuration files for both the core and its modules in order to work, you&#39;ll probably also want to install the default configuration files to use, which you can do this way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make configs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Remember to only do this once, or otherwise a subsequent &lt;code&gt;make configs&lt;/code&gt; will overwrite any configuration file you may have modified in the meanwhile.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;ve installed the above libraries but are not interested, for instance, in Data Channels, WebSockets, MQTT and/or RabbitMQ, you can disable them when configuring:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./configure --disable-websockets --disable-data-channels --disable-rabbitmq --disable-mqtt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are configuration flags for pretty much all external modules and many of the features, so you may want to issue a &lt;code&gt;./configure --help&lt;/code&gt; to dig through the available options. A summary of what&#39;s going to be built will always appear after you do a configure, allowing you to double check if what you need and don&#39;t need is there.&lt;/p&gt; &#xA;&lt;p&gt;If Doxygen and graphviz are available, the process can also build the documentation for you. By default the compilation process will not try to build the documentation, so if you instead prefer to build it, use the &lt;code&gt;--enable-docs&lt;/code&gt; configuration option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./configure --enable-docs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also selectively enable/disable other features (e.g., specific plugins you don&#39;t care about, or whether or not you want to build the recordings post-processor). Use the --help option when configuring for more info.&lt;/p&gt; &#xA;&lt;h3&gt;Building on FreeBSD&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;em&gt;Note&lt;/em&gt;: rtp_forward of streams only works streaming to IPv6, because of #2051 and thus the feature is not supported on FreeBSD at the moment.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When building on FreeBSD you can install the depencencies from ports or packages, here only pkg method is used. You also need to use &lt;code&gt;gmake&lt;/code&gt; instead of &lt;code&gt;make&lt;/code&gt;, since it is a GNU makefile. &lt;code&gt;./configure&lt;/code&gt; can be run without arguments since the default prefix is &lt;code&gt;/usr/local&lt;/code&gt; which is your default &lt;code&gt;LOCALBASE&lt;/code&gt;. Note that the &lt;code&gt;configure.ac&lt;/code&gt; is coded to use openssl in base. If you wish to use openssl from ports or any other ssl you must change &lt;code&gt;configure.ac&lt;/code&gt; accordingly.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pkg install libsrtp2 libusrsctp jansson libnice libmicrohttpd libwebsockets curl opus sofia-sip libogg jansson libnice libconfig \&#xA;    libtool gmake autoconf autoconf-wrapper glib&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building on MacOS&lt;/h3&gt; &#xA;&lt;p&gt;While most of the above instructions will work when compiling Janus on MacOS as well, there are a few aspects to highlight when doing that.&lt;/p&gt; &#xA;&lt;p&gt;First of all, you can use &lt;code&gt;brew&lt;/code&gt; to install most of the dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install jansson libnice openssl srtp libusrsctp libmicrohttpd \&#xA;&#x9;libwebsockets cmake rabbitmq-c sofia-sip opus libogg curl glib \&#xA;&#x9;libconfig pkg-config autoconf automake libtool&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For what concerns libwebsockets, though, make sure that the installed version is higher than &lt;code&gt;2.4.1&lt;/code&gt;, or you might encounter the problems described in &lt;a href=&#34;https://groups.google.com/forum/#!topic/meetecho-janus/HsFaEXBz4Cg&#34;&gt;this post&lt;/a&gt;. If &lt;code&gt;brew&lt;/code&gt; doesn&#39;t provide a more recent version, you&#39;ll have to install the library manually.&lt;/p&gt; &#xA;&lt;p&gt;Notice that you may need to provide a custom &lt;code&gt;prefix&lt;/code&gt; and &lt;code&gt;PKG_CONFIG_PATH&lt;/code&gt; when configuring Janus as well, e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./configure --prefix=/usr/local/janus PKG_CONFIG_PATH=/usr/local/opt/openssl/lib/pkgconfig&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Everything else works exactly the same way as on Linux.&lt;/p&gt; &#xA;&lt;h2&gt;Configure and start&lt;/h2&gt; &#xA;&lt;p&gt;To start the server, you can use the &lt;code&gt;janus&lt;/code&gt; executable. There are several things you can configure, either in a configuration file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;installdir&amp;gt;/etc/janus/janus.jcfg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or on the command line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;installdir&amp;gt;/bin/janus --help&#xA;&#xA;Usage: janus [OPTIONS]...&#xA;&#xA;-h, --help                    Print help and exit&#xA;-V, --version                 Print version and exit&#xA;-b, --daemon                  Launch Janus in background as a daemon&#xA;                              (default=off)&#xA;-p, --pid-file=path           Open the specified PID file when starting Janus&#xA;                              (default=none)&#xA;-N, --disable-stdout          Disable stdout based logging  (default=off)&#xA;-L, --log-file=path           Log to the specified file (default=stdout only)&#xA;-H  --cwd-path                Working directory for Janus daemon process&#xA;                              (default=/)&#xA;-i, --interface=ipaddress     Interface to use (will be the public IP)&#xA;-P, --plugins-folder=path     Plugins folder (default=./plugins)&#xA;-C, --config=filename         Configuration file to use&#xA;-F, --configs-folder=path     Configuration files folder (default=./conf)&#xA;-c, --cert-pem=filename       DTLS certificate&#xA;-k, --cert-key=filename       DTLS certificate key&#xA;-K, --cert-pwd=text           DTLS certificate key passphrase (if needed)&#xA;-S, --stun-server=address:port&#xA;                              STUN server(:port) to use, if needed (e.g.,&#xA;                              Janus behind NAT, default=none)&#xA;-1, --nat-1-1=ip              Public IP to put in all host candidates,&#xA;                              assuming a 1:1 NAT is in place (e.g., Amazon&#xA;                              EC2 instances, default=none)&#xA;-2, --keep-private-host       When nat-1-1 is used (e.g., Amazon EC2&#xA;                              instances), don&#39;t remove the private host,&#xA;                              but keep both to simulate STUN  (default=off)&#xA;-E, --ice-enforce-list=list   Comma-separated list of the only interfaces to&#xA;                              use for ICE gathering; partial strings are&#xA;                              supported (e.g., eth0 or eno1,wlan0,&#xA;                              default=none)&#xA;-X, --ice-ignore-list=list    Comma-separated list of interfaces or IP&#xA;                              addresses to ignore for ICE gathering;&#xA;                              partial strings are supported (e.g.,&#xA;                              vmnet8,192.168.0.1,10.0.0.1 or&#xA;                              vmnet,192.168., default=vmnet)&#xA;-6, --ipv6-candidates         Whether to enable IPv6 candidates or not&#xA;                              (experimental)  (default=off)&#xA;-O, --ipv6-link-local         Whether IPv6 link-local candidates should be&#xA;                              gathered as well  (default=off)&#xA;-l, --libnice-debug           Whether to enable libnice debugging or not&#xA;                              (default=off)&#xA;-f, --full-trickle            Do full-trickle instead of half-trickle&#xA;                              (default=off)&#xA;-I, --ice-lite                Whether to enable the ICE Lite mode or not&#xA;                              (default=off)&#xA;-T, --ice-tcp                 Whether to enable ICE-TCP or not (warning: only&#xA;                              works with ICE Lite)&#xA;                              (default=off)&#xA;-Q, --min-nack-queue=number   Minimum size of the NACK queue (in ms) per user&#xA;                              for retransmissions, no matter the RTT&#xA;-t, --no-media-timer=number   Time (in s) that should pass with no media&#xA;                              (audio or video) being received before Janus&#xA;                              notifies you about this&#xA;-W, --slowlink-threshold=number&#xA;                              Number of lost packets (per s) that should&#xA;                              trigger a &#39;slowlink&#39; Janus API event to users&#xA;                              (default=0, feature disabled)&#xA;-r, --rtp-port-range=min-max  Port range to use for RTP/RTCP (only available&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  if the installed libnice supports it)&#xA;-B, --twcc-period=number      How often (in ms) to send TWCC feedback back to&#xA;                              senders, if negotiated (default=200ms)&#xA;-n, --server-name=name        Public name of this Janus instance&#xA;                              (default=MyJanusInstance)&#xA;-s, --session-timeout=number  Session timeout value, in seconds (default=60)&#xA;-m, --reclaim-session-timeout=number&#xA;                              Reclaim session timeout value, in seconds&#xA;                              (default=0)&#xA;-d, --debug-level=1-7         Debug/logging level (0=disable debugging,&#xA;                              7=maximum debug level; default=4)&#xA;-D, --debug-timestamps        Enable debug/logging timestamps  (default=off)&#xA;-o, --disable-colors          Disable color in the logging  (default=off)&#xA;-M, --debug-locks             Enable debugging of locks/mutexes (very&#xA;                              verbose!)  (default=off)&#xA;-a, --apisecret=randomstring  API secret all requests need to pass in order&#xA;                              to be accepted by Janus (useful when wrapping&#xA;                              Janus API requests in a server, none by&#xA;                              default)&#xA;-A, --token-auth              Enable token-based authentication for all&#xA;                              requests  (default=off)&#xA;-e, --event-handlers          Enable event handlers  (default=off)&#xA;-w, --no-webrtc-encryption    Disable WebRTC encryption, so no DTLS or SRTP&#xA;                              (only for debugging!)  (default=off)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Options passed through the command line have the precedence on those specified in the configuration file. To start the server, simply run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;installdir&amp;gt;/bin/janus&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will start the server, and have it look at the configuration file.&lt;/p&gt; &#xA;&lt;p&gt;Make sure you have a look at all of the configuration files, to tailor Janus to your specific needs: each configuration file is documented, so it shouldn&#39;t be hard to make changes according to your requirements. The repo comes with some defaults (assuming you issues &lt;code&gt;make configs&lt;/code&gt; after installing the server) that tend to make sense for generic deployments, and also includes some sample configurations for all the plugins (e.g., web servers to listen on, conference rooms to create, streaming mountpoints to make available at startup, etc.).&lt;/p&gt; &#xA;&lt;p&gt;To test whether it&#39;s working correctly, you can use the demos provided with this package in the &lt;code&gt;html&lt;/code&gt; folder: these are exactly the same demos available online on the &lt;a href=&#34;https://janus.conf.meetecho.com/&#34;&gt;project website&lt;/a&gt;. Just copy the file it contains in a webserver, or use a userspace webserver to serve the files in the &lt;code&gt;html&lt;/code&gt; folder (e.g., with php or python), and open the &lt;code&gt;index.html&lt;/code&gt; page in either Chrome or Firefox. A list of demo pages exploiting the different plugins will be available. Remember to edit the transport/port details in the demo JavaScript files if you changed any transport-related configuration from its defaults. Besides, the demos refer to the pre-configured plugin resources, so if you add some new resources (e.g., a new videoconference) you may have to tweak the demo pages to actually use them.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Janus is thoroughly documented. You can find the current documentation, automatically generated with Doxygen, on the &lt;a href=&#34;https://janus.conf.meetecho.com/docs/&#34;&gt;project website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Help us!&lt;/h2&gt; &#xA;&lt;p&gt;Any thought, feedback or (hopefully not!) insult is welcome!&lt;/p&gt; &#xA;&lt;p&gt;Developed by &lt;a href=&#34;https://github.com/meetecho&#34;&gt;@meetecho&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>util-linux/util-linux</title>
    <updated>2022-07-29T01:35:27Z</updated>
    <id>tag:github.com,2022-07-29:/util-linux/util-linux</id>
    <link href="https://github.com/util-linux/util-linux" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;pre&gt;&lt;code&gt;&#x9;&#x9;&#x9;  util-linux&#xA;&#xA;&#x9;util-linux is a random collection of Linux utilities&#xA;&#xA; Note: for the years 2006-2010 this project was named &#34;util-linux-ng&#34;.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;COMPILE &amp;amp; INSTALL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  See Documentation/howto-compilation.txt.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;MAILING LIST:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  E-MAIL:  util-linux@vger.kernel.org&#xA;  URL:     http://vger.kernel.org/vger-lists.html#util-linux&#xA;  ARCHIVE: https://lore.kernel.org/util-linux/&#xA;&#xA;  The mailing list will reject email messages that contain:&#xA;   - more than 100K characters&#xA;   - html&#xA;   - spam phrases/keywords&#xA;  See: http://vger.kernel.org/majordomo-info.html#taboo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;IRC CHANNEL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  #util-linux at libera.chat:&#xA;&#xA;  irc://irc.libera.chat/util-linux&#xA;&#xA;  The IRC channel and Mailing list are for developers and project&#xA;  maintainers. For end users it is recommended to utilize the&#xA;  distribution&#39;s support system.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;BUG REPORTING:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  E-MAIL: util-linux@vger.kernel.org&#xA;  Web:    https://github.com/util-linux/util-linux/issues&#xA;&#xA;  Bug reports with sensitive or private information: Karel Zak &amp;lt;kzak@redhat.com&amp;gt;&#xA;&#xA;  This project has no resources to provide support for distribution specific&#xA;  issues. For end users it is recommended to utilize the distribution&#39;s&#xA;  support system.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NLS (PO TRANSLATIONS):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  PO files are maintained by:&#xA;  http://translationproject.org/domain/util-linux.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;VERSION SCHEMA:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  Standard releases:&#xA;  &amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;[.&amp;lt;maint&amp;gt;]&#xA;     major = fatal and deep changes&#xA;     minor = typical release with new features&#xA;     maint = maintenance releases; bug fixes only&#xA;&#xA;  Development releases:&#xA; &amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;-rc&amp;lt;N&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;SOURCE CODE:&lt;/p&gt; &#xA;&lt;p&gt;Download archive: &lt;a href=&#34;https://www.kernel.org/pub/linux/utils/util-linux/&#34;&gt;https://www.kernel.org/pub/linux/utils/util-linux/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See also: Documentation/howto-contribute.txt Documentation/howto-build-sys.txt Documentation/howto-pull-request.txt&lt;/p&gt; &#xA;&lt;p&gt;SCM (Source Code Management) Repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Primary repository:&#xA;  git clone git://git.kernel.org/pub/scm/utils/util-linux/util-linux.git&#xA;&#xA;Backup repository:&#xA;  git clone git://github.com/util-linux/util-linux.git&#xA;&#xA;Web interfaces:&#xA;  http://git.kernel.org/cgit/utils/util-linux/util-linux.git&#xA;  https://github.com/util-linux/util-linux&#xA;&#xA;  Note: the GitHub repository may contain temporary development branches too.&#xA;&#xA;  The kernel.org repository contains master (current development) and stable/*&#xA;  (maintenance) branches only. All master or stable/* changes are always pushed&#xA;  to both repositories at the same time.&#xA;&#xA;Repository Branches: &#39;git branch -a&#39;&#xA;  master branch&#xA;   - current development&#xA;   - the source for stable releases when deemed ready.&#xA;   - day-to-day status is: &#39;it works for me&#39;. This means that its&#xA;     normal state is useful but not well tested.&#xA;   - long-term development or invasive changes in active development are&#xA;     forked into separate &#39;topic&#39; branches from the tip of &#39;master&#39;.&#xA;&#xA;  stable/ branches&#xA;   - public releases&#xA;   - branch name: stable/v&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;.&#xA;   - created from the &#39;master&#39; branch after two or more release&#xA;     candidates and the final public release. This means that the stable&#xA;     releases are committed, tagged, and reachable in &#39;master&#39;.&#xA;   - these branches then become forked development branches. This means&#xA;     that any changes made to them diverge from the &#39;master&#39; branch.&#xA;   - maintenance releases are part of, and belong to, their respective&#xA;     stable branch. As such, they are tags(&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;.&amp;lt;maint&amp;gt;) and&#xA;     not branches of their own. They are not part of, visible in, or&#xA;     have anything to do with the &#39;master&#39; development branch. In git&#xA;     terminology: maintenance releases are not reachable from &#39;master&#39;.&#xA;   - when initially cloned (as with the &#39;git clone&#39; command given above)&#xA;     these branches are created as &#39;remote tracking branches&#39; and are&#xA;     only visible by using the -a or -r options to &#39;git branch&#39;. To&#xA;     create a local branch use the desired tag with this command:&#xA;     &#39;git checkout -b v2.29.2 v2.29.2&#39;&#xA;&#xA;Tags: &#39;git tag&#39;&#xA;   - a new tag object is created for every release.&#xA;   - tag name: v&amp;lt;version&amp;gt;.&#xA;   - all tags are signed by the maintainer&#39;s PGP key.&#xA;&#xA;Known Bugs:&#xA;- don&#39;t use tag v2.13.1 (created and published by mistake),&#xA;  use v2.13.1-REAL instead.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;WORKFLOW EXAMPLE:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;development (branch: &#xA;   &lt;master&gt;&#xA;    )&#xA;   &lt;/master&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;master release (tags: v2.29-rc1, v2.29-rc2, v2.29, branch: &#xA;   &lt;master&gt;&#xA;    )&#xA;   &lt;/master&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;development (work on v2.30, branch: &#xA;   &lt;master&gt;&#xA;    )&#xA;   &lt;/master&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;fork -- create a new branch &amp;lt;stable/v2.29&amp;gt; based on tag v2.29&lt;/p&gt; &lt;p&gt;4a) new patches or cherry-pick patches from &#xA;   &lt;master&gt;&#xA;     (branch: &amp;lt;stable/v2.29&amp;gt;)&#xA;   &lt;/master&gt;&lt;/p&gt; &lt;p&gt;4b) stable release (tag: v2.29.1, branch: &amp;lt;stable/v2.29&amp;gt;)&lt;/p&gt; &lt;p&gt;4c) more patches; another release (tag: v2.29.2, branch: &amp;lt;stable/v2.29&amp;gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;master release v2.30 (branch: &#xA;   &lt;master&gt;&#xA;    ) ...&#xA;   &lt;/master&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;where 3) and 4) happen simultaneously.&lt;/p&gt;</summary>
  </entry>
</feed>