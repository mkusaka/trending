<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-15T01:23:57Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>PojavLauncherTeam/PojavLauncher</title>
    <updated>2023-08-15T01:23:57Z</updated>
    <id>tag:github.com,2023-08-15:/PojavLauncherTeam/PojavLauncher</id>
    <link href="https://github.com/PojavLauncherTeam/PojavLauncher" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Minecraft: Java Edition Launcher for Android and iOS based on Boardwalk. This repository contains source code for Android platform.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;PojavLauncher&lt;/h1&gt; &#xA;&lt;img src=&#34;https://github.com/PojavLauncherTeam/PojavLauncher/raw/v3_openjdk/app_pojavlauncher/src/main/assets/pojavlauncher.png&#34; align=&#34;left&#34; width=&#34;130&#34; height=&#34;150&#34; alt=&#34;PojavLauncher logo&#34;&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/PojavLauncherTeam/PojavLauncher/actions&#34;&gt;&lt;img src=&#34;https://github.com/PojavLauncherTeam/PojavLauncher/workflows/Android%20CI/badge.svg?sanitize=true&#34; alt=&#34;Android CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PojavLauncherTeam/PojavLauncher/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/PojavLauncherTeam/PojavLauncher&#34; alt=&#34;GitHub commit activity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crowdin.com/project/pojavlauncher&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/pojavlauncher/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/6RpEJda&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/724163890803638273.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/PLaunchTeam&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/plaunchteam?color=blue&amp;amp;style=flat-square&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;From &lt;a href=&#34;https://github.com/zhuowei/Boardwalk&#34;&gt;Boardwalk&lt;/a&gt;&#39;s ashes here comes PojavLauncher!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;PojavLauncher is a launcher that allows you to play Minecraft: Java Edition on your Android device!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;It can run almost every version of the Minecraft, allowing you to use .jar only installers to install modloaders such as &lt;a href=&#34;https://files.minecraftforge.net/&#34;&gt;Forge&lt;/a&gt; and &lt;a href=&#34;http://fabricmc.net/&#34;&gt;Fabric&lt;/a&gt;, mods like &lt;a href=&#34;https://optifine.net&#34;&gt;OptiFine&lt;/a&gt; and &lt;a href=&#34;https://www.labymod.net/en&#34;&gt;LabyMod&lt;/a&gt;, as well as hack clients like &lt;a href=&#34;https://www.wurstclient.net/&#34;&gt;Wurst&lt;/a&gt;, and much more!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For more details &lt;a href=&#34;https://github.com/PojavLauncherTeam/PojavLauncher/wiki&#34;&gt;check out our wiki&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Some notes to start with&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We do not have an official TikTok account. No one from the dev team makes TikTok videos.&lt;/li&gt; &#xA; &lt;li&gt;The official Twitter for PojavLauncher is &lt;a href=&#34;https://twitter.com/PLaunchTeam&#34;&gt;@PLaunchTeam&lt;/a&gt;. Any others (most notably @PojavLauncher) are fake, please report them to Twitter&#39;s moderation team.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Navigation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PojavLauncherTeam/PojavLauncher/v3_openjdk/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PojavLauncherTeam/PojavLauncher/v3_openjdk/#getting-pojavlauncher&#34;&gt;Getting PojavLauncher&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PojavLauncherTeam/PojavLauncher/v3_openjdk/#building&#34;&gt;Building&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PojavLauncherTeam/PojavLauncher/v3_openjdk/#current-status&#34;&gt;Current status&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PojavLauncherTeam/PojavLauncher/v3_openjdk/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PojavLauncherTeam/PojavLauncher/v3_openjdk/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PojavLauncherTeam/PojavLauncher/v3_openjdk/#credits--third-party-components-and-their-licenses-if-available&#34;&gt;Credits &amp;amp; Third party components and their licenses&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PojavLauncher is a Minecraft: Java Edition launcher for Android and iOS based on &lt;a href=&#34;https://github.com/zhuowei/Boardwalk&#34;&gt;Boardwalk&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;This launcher can launch almost all available Minecraft versions ranging from rd-132211 to 1.19 snapshots (including Combat Test versions).&lt;/li&gt; &#xA; &lt;li&gt;Modding via Forge and Fabric are also supported.&lt;/li&gt; &#xA; &lt;li&gt;This repository contains source code for Android.&lt;/li&gt; &#xA; &lt;li&gt;For iOS/iPadOS, check out &lt;a href=&#34;https://github.com/PojavLauncherTeam/PojavLauncher_iOS&#34;&gt;PojavLauncher_iOS&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting PojavLauncher&lt;/h2&gt; &#xA;&lt;p&gt;You can get PojavLauncher via three methods:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;You can get the prebuilt app from &lt;a href=&#34;https://github.com/PojavLauncherTeam/PojavLauncher/releases&#34;&gt;stable releases&lt;/a&gt; or &lt;a href=&#34;https://github.com/PojavLauncherTeam/PojavLauncher/actions&#34;&gt;automatic builds&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can get it from Google Play by clicking on this badge: &lt;a href=&#34;https://play.google.com/store/apps/details?id=net.kdt.pojavlaunch&#34;&gt;&lt;img src=&#34;https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png&#34; alt=&#34;Google Play&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can &lt;a href=&#34;https://raw.githubusercontent.com/PojavLauncherTeam/PojavLauncher/v3_openjdk/#building&#34;&gt;build&lt;/a&gt; from source.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;If you want to build from source code, follow the steps below.&lt;/p&gt; &#xA;&lt;h3&gt;Java Runtime Environment (JRE)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;JRE for Android is &lt;a href=&#34;https://github.com/PojavLauncherTeam/openjdk-multiarch-jdk8u&#34;&gt;here&lt;/a&gt;, and the build script is &lt;a href=&#34;https://github.com/PojavLauncherTeam/android-openjdk-build-multiarch&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Follow build instruction on build script &lt;a href=&#34;https://github.com/PojavLauncherTeam/android-openjdk-build-multiarch/raw/buildjre8/README.md&#34;&gt;README.md&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You can also get &lt;a href=&#34;https://github.com/PojavLauncherTeam/android-openjdk-build-multiarch/actions&#34;&gt;CI auto builds&lt;/a&gt; if you are lazy or are failing to build it for some reason.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Either get the &lt;code&gt;jre8-pojav&lt;/code&gt; artifact from auto builds, or split all artifacts by yourself:&lt;br&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Get JREs for all of 4 supported architectures (arm, arm64, x86, x86_64) &lt;br&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Split JRE into parts:&lt;br&gt; Platform-independent: .jar files, libraries, configs, etc...&lt;br&gt; Platform-dependent: .so files, etc...&lt;br&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;Create:&lt;br&gt; A file named &lt;code&gt;universal.tar.xz&lt;/code&gt; with all platform-independent files&lt;br&gt; 4 files named &lt;code&gt;bin-&amp;lt;arch&amp;gt;.tar.xz&lt;/code&gt; with all platform-dependent files per-architecture&lt;br&gt;&lt;/li&gt; &#xA;       &lt;li&gt;Put these in the &lt;code&gt;assets/components/jre/&lt;/code&gt; folder&lt;br&gt;&lt;/li&gt; &#xA;       &lt;li&gt;(If needed) update the Version file with the current date&lt;br&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;LWJGL&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Coming soon&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;The Launcher&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Because languages are auto-added by Crowdin, you need to run the language list generator before building. In the project directory, run:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On Linux, Mac OS:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;chmod +x scripts/languagelist_updater.sh&#xA;bash scripts/languagelist_updater.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On Windows:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;scripts\languagelist_updater.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, run these commands &lt;del&gt;or build using Android Studio&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build GLFW stub:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew :jre_lwjgl3glfw:build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build the launcher&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew :app_pojavlauncher:assembleDebug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(Replace &lt;code&gt;gradlew&lt;/code&gt; with &lt;code&gt;gradlew.bat&lt;/code&gt; if you are building on Windows).&lt;/p&gt; &#xA;&lt;h2&gt;Current status&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;del&gt;OpenJDK 9 Mobile port: ARM32, ARM64, x86, x86_64.&lt;/del&gt; Replaced by JRE8.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; OpenJDK 8 Mobile port: ARM32, ARM64, x86, x86_64&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; OpenJDK 17 Mobile port: ARM32, ARM64, x86, x86_64&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Headless mod installer&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Mod installer with GUI. Used &lt;code&gt;Caciocavallo&lt;/code&gt; project for AWT without X11.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; OpenGL in OpenJDK environment&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; OpenAL (works on most devices)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support for Minecraft 1.12.2 and below. Used &lt;a href=&#34;https://github.com/PojavLauncherTeam/lwjglx&#34;&gt;lwjglx&lt;/a&gt;, a LWJGL2 compatibility layer for LWJGL3.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support for Minecraft 1.13 and above. Used &lt;a href=&#34;https://github.com/PojavLauncherTeam/lwjgl3-glfw-java&#34;&gt;GLFW stub&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support for Minecraft 1.17 (22w13a to be exact) and above. Used &lt;a href=&#34;https://github.com/PojavLauncherTeam/gl4es-114-extra&#34;&gt;Holy GL4ES&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Game surface zooming.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; New input pipe rewritten to native code to boost performance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Rewritten entire controls system (thanks to @Mathias-Boulay)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; More to come!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Controller mods aren&#39;t working.&lt;/li&gt; &#xA; &lt;li&gt;Random crashes could happen very often on Android 5.x when loading the game or joining a world.&lt;/li&gt; &#xA; &lt;li&gt;With big modpacks textures could be messed up&lt;/li&gt; &#xA; &lt;li&gt;Probably more, that&#39;s why we have a bug tracker ;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PojavLauncher is licensed under &lt;a href=&#34;https://github.com/khanhduytran0/PojavLauncher/raw/master/LICENSE&#34;&gt;GNU GPLv3&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! We welcome any type of contribution, not only code. For example, you can help the wiki shape up. You can help the &lt;a href=&#34;https://crowdin.com/project/pojavlauncher&#34;&gt;translation&lt;/a&gt; too!&lt;/p&gt; &#xA;&lt;p&gt;Any code change to this repository (or iOS) should be submitted as a pull request. The description should explain what the code does and give steps to execute it.&lt;/p&gt; &#xA;&lt;h2&gt;Credits &amp;amp; Third party components and their licenses (if available)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zhuowei/Boardwalk&#34;&gt;Boardwalk&lt;/a&gt; (JVM Launcher): Unknown License/&lt;a href=&#34;https://github.com/zhuowei/Boardwalk/raw/master/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt; or GNU GPLv2.&lt;/li&gt; &#xA; &lt;li&gt;Android Support Libraries: &lt;a href=&#34;https://android.googlesource.com/platform/prebuilts/maven_repo/android/+/master/NOTICE.txt&#34;&gt;Apache License 2.0&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PojavLauncherTeam/gl4es&#34;&gt;GL4ES&lt;/a&gt;: &lt;a href=&#34;https://github.com/ptitSeb/gl4es/raw/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;.&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PojavLauncherTeam/openjdk-multiarch-jdk8u&#34;&gt;OpenJDK&lt;/a&gt;: &lt;a href=&#34;https://openjdk.java.net/legal/gplv2+ce.html&#34;&gt;GNU GPLv2 License&lt;/a&gt;.&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PojavLauncherTeam/lwjgl3&#34;&gt;LWJGL3&lt;/a&gt;: &lt;a href=&#34;https://github.com/LWJGL/lwjgl3/raw/master/LICENSE.md&#34;&gt;BSD-3 License&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PojavLauncherTeam/lwjglx&#34;&gt;LWJGLX&lt;/a&gt; (LWJGL2 API compatibility layer for LWJGL3): unknown license.&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.freedesktop.org/mesa/mesa&#34;&gt;Mesa 3D Graphics Library&lt;/a&gt;: &lt;a href=&#34;https://docs.mesa3d.org/license.html&#34;&gt;MIT License&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pro-grade/pro-grade&#34;&gt;pro-grade&lt;/a&gt; (Java sandboxing security manager): &lt;a href=&#34;https://github.com/pro-grade/pro-grade/raw/master/LICENSE.txt&#34;&gt;Apache License 2.0&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/iqiyi/xHook&#34;&gt;xHook&lt;/a&gt; (Used for exit code trapping): &lt;a href=&#34;https://github.com/iqiyi/xHook/raw/master/LICENSE&#34;&gt;MIT and BSD-style licenses&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anholt/libepoxy&#34;&gt;libepoxy&lt;/a&gt;: &lt;a href=&#34;https://github.com/anholt/libepoxy/raw/master/COPYING&#34;&gt;MIT License&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PojavLauncherTeam/virglrenderer&#34;&gt;virglrenderer&lt;/a&gt;: &lt;a href=&#34;https://gitlab.freedesktop.org/virgl/virglrenderer/-/blob/master/COPYING&#34;&gt;MIT License&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Thanks to &lt;a href=&#34;https://mc-heads.net&#34;&gt;MCHeads&lt;/a&gt; for providing Minecraft avatars.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>id-Software/Quake-2</title>
    <updated>2023-08-15T01:23:57Z</updated>
    <id>tag:github.com,2023-08-15:/id-Software/Quake-2</id>
    <link href="https://github.com/id-Software/Quake-2" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Quake 2 GPL Source Release&lt;/p&gt;&lt;hr&gt;&lt;p&gt;This is the complete source code for Quake 2, version 3.19, buildable with visual C++ 6.0. The linux version should be buildable, but we haven&#39;t tested it for the release.&lt;/p&gt; &#xA;&lt;p&gt;The code is all licensed under the terms of the GPL (gnu public license).&lt;br&gt; You should read the entire license, but the gist of it is that you can do anything you want with the code, including sell your new version. The catch is that if you distribute new binary versions, you are required to make the entire source code available for free to everyone.&lt;/p&gt; &#xA;&lt;p&gt;The primary intent of this release is for entertainment and educational purposes, but the GPL does allow commercial exploitation if you obey the full license. If you want to do something commercial and you just can&#39;t bear to have your source changes released, we could still negotiate a separate license agreement (for $$$), but I would encourage you to just live with the GPL.&lt;/p&gt; &#xA;&lt;p&gt;All of the Q2 data files remain copyrighted and licensed under the original terms, so you cannot redistribute data from the original game, but if you do a true total conversion, you can create a standalone game based on this code.&lt;/p&gt; &#xA;&lt;p&gt;Thanks to Robert Duffy for doing the grunt work of building this release.&lt;/p&gt; &#xA;&lt;p&gt;John Carmack Id Software&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>VirtualAlllocEx/DEFCON-31-Syscalls-Workshop</title>
    <updated>2023-08-15T01:23:57Z</updated>
    <id>tag:github.com,2023-08-15:/VirtualAlllocEx/DEFCON-31-Syscalls-Workshop</id>
    <link href="https://github.com/VirtualAlllocEx/DEFCON-31-Syscalls-Workshop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Contains all the material from the DEF CON 31 workshop &#34;(In)direct Syscalls: A Journey from High to Low&#34;.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;700&#34; alt=&#34;image&#34; src=&#34;https://github.com/VirtualAlllocEx/DEFCON-31-Syscalls-Workshop/assets/50073731/8bdac03d-74ad-4f58-88b9-7380ff25fa97&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;(In)direct Syscalls: A journey from high to low&lt;/h1&gt; &#xA;&lt;h2&gt;RedOps | Red Team Village | DEF CON 31&lt;/h2&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Ready to rock! The last few months have definitely been a journey from high to low for me. I have challenged myself once again by creating this workshop or project for the &lt;strong&gt;Red Team Village&lt;/strong&gt; at &lt;strong&gt;DEF CON 31&lt;/strong&gt; and presenting or sharing my biggest project yet to the infosec community. I hope it is useful and a good reference/source of mostly free material for community members to learn or teach others about syscalls, direct syscalls, indirect syscalls.&lt;/p&gt; &#xA;&lt;p&gt;All the &lt;strong&gt;theory&lt;/strong&gt; and &lt;strong&gt;playbooks for the exercises&lt;/strong&gt; can be found in the &lt;a href=&#34;https://github.com/VirtualAlllocEx/DEFCON-31-Syscalls-Workshop/wiki&#34;&gt;&lt;strong&gt;wiki&lt;/strong&gt;&lt;/a&gt;, which together with the prepared POCs is the heart of this project. The &lt;strong&gt;POCs&lt;/strong&gt; for the &lt;strong&gt;exercises&lt;/strong&gt; can be found here on the &lt;strong&gt;main page&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Happy Learning!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Daniel Feichter &lt;a href=&#34;https://twitter.com/VirtualAllocEx&#34;&gt;&lt;strong&gt;@VirtualAllocEx&lt;/strong&gt;&lt;/a&gt;, Founder &lt;a href=&#34;https://redops.at/en/&#34;&gt;&lt;strong&gt;@RedOps&lt;/strong&gt;&lt;/a&gt; Information Security&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;First of all, &lt;strong&gt;many thanks&lt;/strong&gt; to my girlfriend, who has supported me in everything I do for over 10 years now! Without her support and backing none of my projects in the last 10 years would have been possible.&lt;/p&gt; &#xA;&lt;p&gt;Thanks also to my good friend Andreas Clementi of &lt;a href=&#34;https://www.av-comparatives.org/&#34;&gt;&lt;strong&gt;AV-Comparatives&lt;/strong&gt;&lt;/a&gt;, who has been supporting me since we first met. Also thanks to my friend Jonas Kemmner (who is an excellent Red Teamer) for supporting me and reading all my blog posts in advance. I am very grateful to have crossed paths with all these amazing people.&lt;/p&gt; &#xA;&lt;p&gt;The content and all code examples in this repository are for educational and research purposes only and should only be used in an ethical context! The code examples are not new and I do not claim them to be. Most of the code or the basis comes, as so often, from &lt;a href=&#34;https://www.ired.team/&#34;&gt;&lt;strong&gt;ired.team&lt;/strong&gt;&lt;/a&gt;, thank you &lt;a href=&#34;https://twitter.com/spotheplanet&#34;&gt;&lt;strong&gt;@spotheplanet&lt;/strong&gt;&lt;/a&gt; for your brilliant work and sharing it with us all. Also many thanks to &lt;a href=&#34;https://twitter.com/mrexodia&#34;&gt;&lt;strong&gt;@mrexodia&lt;/strong&gt;&lt;/a&gt; for your awesome tool &lt;a href=&#34;https://twitter.com/x64dbg&#34;&gt;&lt;strong&gt;x64dbg&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Furthermore, and very importantly, this workshop is &lt;strong&gt;not a silver bullet&lt;/strong&gt; in the context of EDR evasion, but it &lt;strong&gt;should help to understand&lt;/strong&gt; the basics of &lt;code&gt;Win32 APIs&lt;/code&gt;, &lt;code&gt;Native APIs&lt;/code&gt;, &lt;code&gt;direct syscalls&lt;/code&gt; and &lt;code&gt;indirect syscalls&lt;/code&gt; and a bit about &lt;code&gt;call stacks&lt;/code&gt; in context of shellcode execution and EDR evasion, no more and no less. The aim of this workshop is not to show the most stealthy options or the most complex POCs for direct and indirect syscalls, instead I will focus on teaching the basics.This means using as few tools as possible and doing as much work manually as possible.&lt;/p&gt; &#xA;&lt;p&gt;I would like to &lt;strong&gt;thank all those members&lt;/strong&gt; of the infosec community who have researched, shaped and continue to research the topic of syscalls, direct system calls and indirect syscalls etc.&lt;/p&gt; &#xA;&lt;p&gt;Special thanks to &lt;strong&gt;Cornelis de Plaa&lt;/strong&gt; (@Cneelis) from &lt;strong&gt;Outflank&lt;/strong&gt; for his blog post &#34;Combining Direct System Calls and sRDI to bypass AV/EDR&#34; in 2019, which sparked my interest in system calls, direct syscalls, etc., and also marked the starting point of my journey to learn about the Windows Internals.&lt;/p&gt; &#xA;&lt;h2&gt;Creds and References&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Twitter Handle&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Contribution and Research&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/Cneelis&#34;&gt;@Cneelis&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://outflank.nl/blog/2019/06/19/red-team-tactics-combining-direct-system-calls-and-srdi-to-bypass-av-edr/&#34;&gt;https://outflank.nl/blog/2019/06/19/red-team-tactics-combining-direct-system-calls-and-srdi-to-bypass-av-edr/&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/outflanknl/Dumpert&#34;&gt;https://github.com/outflanknl/Dumpert&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/spotheplanet&#34;&gt;@spotheplanet&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;His whole awesome blog and research &lt;br&gt; &lt;a href=&#34;https://www.ired.team/&#34;&gt;https://www.ired.team/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/NinjaParanoid&#34;&gt;@NinjaParanoid&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;For his blogs, research, courses and always answering my questions. &lt;br&gt; &lt;a href=&#34;https://0xdarkvortex.dev/hiding-in-plainsight/&#34;&gt;https://0xdarkvortex.dev/hiding-in-plainsight/&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://0xdarkvortex.dev/proxying-dll-loads-for-hiding-etwti-stack-tracing/&#34;&gt;https://0xdarkvortex.dev/proxying-dll-loads-for-hiding-etwti-stack-tracing/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/ShitSecure&#34;&gt;@ShitSecure&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;For his research, his blog &lt;a href=&#34;https://s3cur3th1ssh1t.github.io/&#34;&gt;https://s3cur3th1ssh1t.github.io/&lt;/a&gt; and for the great discussion about EDRs, syscalls, etc.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/alicecliment?lang=de&#34;&gt;@AliceCliment&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;For her blog, research and the discussions about EDRs, syscalls etc. &lt;br&gt; &lt;a href=&#34;https://alice.climent-pommeret.red/posts/how-and-why-to-unhook-the-import-address-table/&#34;&gt;https://alice.climent-pommeret.red/posts/how-and-why-to-unhook-the-import-address-table/&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://alice.climent-pommeret.red/posts/a-syscall-journey-in-the-windows-kernel/&#34;&gt;https://alice.climent-pommeret.red/posts/a-syscall-journey-in-the-windows-kernel/&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://alice.climent-pommeret.red/posts/direct-syscalls-hells-halos-syswhispers2/&#34;&gt;https://alice.climent-pommeret.red/posts/direct-syscalls-hells-halos-syswhispers2/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/0xBoku&#34;&gt;@0xBoku&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;For his overall research, and contributions to infosec, helping new community members, and the continued advancement of infosec &lt;br&gt; &lt;a href=&#34;https://0xboku.com/&#34;&gt;https://0xboku.com/&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/boku7/AsmHalosGate&#34;&gt;https://github.com/boku7/AsmHalosGate&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/boku7/HellsGatePPID&#34;&gt;https://github.com/boku7/HellsGatePPID&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/boku7/halosgate-ps&#34;&gt;https://github.com/boku7/halosgate-ps&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/Jackson_T&#34;&gt;@Jackson_T&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;For his research and tools SysWhispers and SysWhispers2 &lt;br&gt; &lt;a href=&#34;https://github.com/jthuraisamy/SysWhispers&#34;&gt;https://github.com/jthuraisamy/SysWhispers&lt;/a&gt;) &lt;br&gt; &lt;a href=&#34;https://github.com/jthuraisamy/SysWhispers2&#34;&gt;https://github.com/jthuraisamy/SysWhispers2&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/KlezVirus&#34;&gt;@KlezVirus&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;For his blog, research, great discussions about EDRs, syscalls, etc. and SysWhispers3 &lt;br&gt; &lt;a href=&#34;https://github.com/klezVirus/SysWhispers3&#34;&gt;https://github.com/klezVirus/SysWhispers3&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://klezvirus.github.io/RedTeaming/AV_Evasion/NoSysWhisper/&#34;&gt;https://klezvirus.github.io/RedTeaming/AV_Evasion/NoSysWhisper/&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/klezVirus/SilentMoonwalk&#34;&gt;https://github.com/klezVirus/SilentMoonwalk&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/j00ru&#34;&gt;@j00ru&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://j00ru.vexillium.org/syscalls/nt/64/&#34;&gt;https://j00ru.vexillium.org/syscalls/nt/64/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/modexpblog&#34;&gt;@modexpblog&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.mdsec.co.uk/2020/12/bypassing-user-mode-hooks-and-direct-invocation-of-system-calls-for-red-teams/&#34;&gt;https://www.mdsec.co.uk/2020/12/bypassing-user-mode-hooks-and-direct-invocation-of-system-calls-for-red-teams/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/netero_1010&#34;&gt;@netero_1010&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.netero1010-securitylab.com/evasion/indirect-syscall-in-csharp&#34;&gt;https://www.netero1010-securitylab.com/evasion/indirect-syscall-in-csharp&lt;/a&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://captmeelo.com/redteam/maldev/2021/11/18/av-evasion-syswhisper.html&#34;&gt;@CaptMeelo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://captmeelo.com/redteam/maldev/2021/11/18/av-evasion-syswhisper.html&#34;&gt;https://captmeelo.com/redteam/maldev/2021/11/18/av-evasion-syswhisper.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Paul Laîné &lt;a href=&#34;https://twitter.com/am0nsec&#34;&gt;@am0nsec&lt;/a&gt; and smelly__vx @RtlMateusz&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/am0nsec/HellsGate/tree/master&#34;&gt;https://github.com/am0nsec/HellsGate/tree/master&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/mrd0x&#34;&gt;@mrd0x&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Maldev-Academy/HellHall&#34;&gt;https://github.com/Maldev-Academy/HellHall&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/SEKTOR7net&#34;&gt;@SEKTOR7net&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://blog.sektor7.net/#!res/2021/halosgate.md&#34;&gt;https://blog.sektor7.net/#!res/2021/halosgate.md&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/D1rkMtr&#34;&gt;@D1rkMtr&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/TheD1rkMtr/D1rkLdr&#34;&gt;https://github.com/TheD1rkMtr/D1rkLdr&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/trickster012&#34;&gt;@trickster012&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/trickster0/TartarusGate&#34;&gt;https://github.com/trickster0/TartarusGate&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/thefLinkk&#34;&gt;@thefLinkk&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/thefLink/RecycledGate&#34;&gt;https://github.com/thefLink/RecycledGate&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://twitter.com/ElephantSe4l&#34;&gt;@ElephantSe4l&lt;/a&gt; and MarioBartolome&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/crummie5/FreshyCalls&#34;&gt;https://github.com/crummie5/FreshyCalls&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Further resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows Internals, Part 1: System architecture, processes, threads, memory management, and more (7th Edition) by Pavel Yosifovich, David A. Solomon, and Alex Ionescu&lt;/li&gt; &#xA; &lt;li&gt;Windows Internals, Part 2 (7th Edition) by Pavel Yosifovich, David A. Solomon, and Alex Ionescu&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://offensivecraft.wordpress.com/2022/12/08/the-stack-series-return-address-spoofing-on-x64/&#34;&gt;https://offensivecraft.wordpress.com/2022/12/08/the-stack-series-return-address-spoofing-on-x64/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://offensivecraft.wordpress.com/2023/02/11/the-stack-series-the-x64-stack/&#34;&gt;https://offensivecraft.wordpress.com/2023/02/11/the-stack-series-the-x64-stack/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://winternl.com/detecting-manual-syscalls-from-user-mode/&#34;&gt;https://winternl.com/detecting-manual-syscalls-from-user-mode/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsorship&lt;/h2&gt; &#xA;&lt;p&gt;If you are interested in supporting my work in general and/or would like to learn more about how to improve your indirect syscalls shellcode loader step by step, and would like access to the learning materials or playbooks from the three bonus chapters, you can get access via a &lt;strong&gt;one-time&lt;/strong&gt; &lt;a href=&#34;https://github.com/sponsors/VirtualAlllocEx&#34;&gt;GitHub sponsorship&lt;/a&gt; (Individual student or Corporate students).&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Chapter Nr.&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Chapter Name&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Chapter Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Bonus Chapter 1&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Dynamic SSN retrieval via APIs&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;We want to improve our indirect syscall shellcode loader and implement dynamic SSN retrieval via the &lt;code&gt;GetModuleHandleA&lt;/code&gt; and &lt;code&gt;GetProcAddress&lt;/code&gt; APIs.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Bonus Chapter 2&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Dynamically Retrieving SSN via PEB/EAT&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;We want to further improve our indirect syscall shellcode loader and implement dynamic SSN retrieval via the PEB walk and EAT parsing&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Bonus Chapter 3&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Indirect Syscalls and hooked APIs&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;We want to further improve our indirect syscall loader and implement the Halos Gate approach to dynamically retrieve SSNs via PEB/EAT parsing, even if the four used APIs in our loader are hooked by an EDR.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
</feed>