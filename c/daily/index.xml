<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-16T01:29:29Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>LuckfoxTECH/luckfox-pico</title>
    <updated>2024-12-16T01:29:29Z</updated>
    <id>tag:github.com,2024-12-16:/LuckfoxTECH/luckfox-pico</id>
    <link href="https://github.com/LuckfoxTECH/luckfox-pico" rel="alternate"></link>
    <summary type="html">&lt;p&gt;luckfox-pico sdk&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/LuckfoxTECH/luckfox-pico/assets/144299491/cec5c4a5-22b9-4a9a-abb1-704b11651e88&#34; alt=&#34;luckfox&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Luckfox Pico SDK&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LuckfoxTECH/luckfox-pico/main/README_CN.md&#34;&gt;中文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;This SDK is modified based on the SDK provided by Rockchip&lt;/li&gt; &#xA; &lt;li&gt;It provides a customized SDK specifically for Luckfox Pico series development boards&amp;nbsp;&lt;/li&gt; &#xA; &lt;li&gt;Aimed at providing developers with a better programming experience&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;SDK Updatelog&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Current Version: V1.4&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Updated U-Boot to support fast boot for RV1106 using SPI NAND and eMMC.&lt;/li&gt; &#xA; &lt;li&gt;Optimized U-Boot compatibility with SD cards, reducing the likelihood of SD card recognition failures.&lt;/li&gt; &#xA; &lt;li&gt;Updated the kernel version to 5.10.160, increasing the NPU frequency for RV1106G3.&lt;/li&gt; &#xA; &lt;li&gt;Updated the Buildroot mirror source for more stable package downloads.&lt;/li&gt; &#xA; &lt;li&gt;Added support for custom file systems.&lt;/li&gt; &#xA; &lt;li&gt;Partial bug fixes&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;SDK Usage Instructions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;recommended operating system : Ubuntu 22.04&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installing Dependencies&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt-get install -y git ssh make gcc gcc-multilib g++-multilib module-assistant expect g++ gawk texinfo libssl-dev bison flex fakeroot cmake unzip gperf autoconf device-tree-compiler libncurses5-dev pkg-config bc python-is-python3 passwd openssl openssh-server openssh-client vim file cpio rsync&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Get SDK&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/LuckfoxTECH/luckfox-pico.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Environment Variables&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The cross-compilation toolchain needs to be set Environment Variables&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd {SDK_PATH}/tools/linux/toolchain/arm-rockchip830-linux-uclibcgnueabihf/&#xA;source env_install_toolchain.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Get the SDK&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GitHub &lt;pre&gt;&lt;code&gt;git clone &amp;lt;https://github.com/LuckfoxTECH/luckfox-pico.git&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Gitee &lt;pre&gt;&lt;code&gt;git clone &amp;lt;https://gitee.com/LuckfoxTECH/luckfox-pico.git&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you need to compile the Ubuntu system and use the Gitee source&lt;/li&gt; &#xA;   &lt;li&gt;Please modify the corresponding board mk file LF_SUBMODULES_BY to gitee, for example &lt;pre&gt;&lt;code&gt;LF_SUBMODULES_BY=gitee&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Instructions for build.sh&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The build.sh script is used to automate the compilation process.&lt;/li&gt; &#xA; &lt;li&gt;Most of the compilation operations can be completed automatically through build.sh.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Options for build.sh&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Usage: build.sh [OPTIONS]&#xA;Available options:&#xA;lunch              -Select Board Configure&#xA;env                -build env&#xA;meta               -build meta (optional)&#xA;uboot              -build uboot&#xA;kernel             -build kernel&#xA;rootfs             -build rootfs&#xA;driver             -build kernel&#39;s drivers&#xA;sysdrv             -build uboot, kernel, rootfs&#xA;media              -build rockchip media libraries&#xA;app                -build app&#xA;recovery           -build recovery&#xA;tool               -build tool&#xA;updateimg          -build update image&#xA;unpackimg          -unpack update image&#xA;factory            -build factory image&#xA;all                -build uboot, kernel, rootfs, recovery image&#xA;allsave            -build all &amp;amp; firmware &amp;amp; save&#xA;&#xA;clean              -clean all&#xA;clean uboot        -clean uboot&#xA;clean kernel       -clean kernel&#xA;clean driver       -clean driver&#xA;clean rootfs       -clean rootfs&#xA;clean sysdrv       -clean uboot/kernel/rootfs&#xA;clean media        -clean rockchip media libraries&#xA;clean app          -clean app&#xA;clean recovery     -clean recovery&#xA;&#xA;firmware           -pack all the image we need to boot up system&#xA;ota                -pack update_ota.tar&#xA;save               -save images, patches, commands used to debug&#xA;check              -check the environment of building&#xA;info               -see the current board building information&#xA;&#xA;buildrootconfig    -config buildroot and save defconfig&#34;&#xA;kernelconfig       -config kernel and save defconfig&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Select the referenced board configuration&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./build.sh lunch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Output the corresponding Luckfox-pico hardware model. Enter the corresponding number to proceed to the storage media options (press Enter to select option [0] directly). &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;You&#39;re building on Linux&#xA;  Lunch menu...pick the Luckfox Pico hardware version:&#xA;  选择 Luckfox Pico 硬件版本:&#xA;                [0] RV1103_Luckfox_Pico&#xA;                [1] RV1103_Luckfox_Pico_Mini_A&#xA;                [2] RV1103_Luckfox_Pico_Mini_B&#xA;                [3] RV1103_Luckfox_Pico_Plus&#xA;                [4] RV1106_Luckfox_Pico_Pro_Max&#xA;                [5] RV1106_Luckfox_Pico_Ultra&#xA;                [6] RV1106_Luckfox_Pico_Ultra_W&#xA;                [7] custom&#xA;Which would you like? [0~7][default:0]:&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Output the supported storage media for the corresponding Luckfox-pico hardware model. Enter the corresponding number to proceed to the root filesystem options (press Enter to select option [0] directly).For example, Luckfox Pico Plus. &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;  Lunch menu...pick the boot medium:&#xA;  选择启动媒介:&#xA;                [0] SD_CARD&#xA;                [1] SPI_NAND&#xA;&#xA;Which would you like? [0~1][default:0]:&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Output the supported root filesystem types for the corresponding Luckfox-pico hardware model. Enter the corresponding number to complete the configuration (press Enter to select option [0] directly). &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;  Lunch menu...pick the system version:&#xA;  选择系统版本:&#xA;                [0] Buildroot(Support Rockchip official features)&#xA;                [1] Ubuntu(Support for the apt package management tool)&#xA;&#xA;Which would you like? [0~1][default:0]:&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;If you need to use the old configuration method or a custom board support file, select the &#34;[7]custom&#34; option when configuring the Luckfox-pico hardware model. &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;You&#39;re building on Linux&#xA;  Lunch menu...pick the Luckfox Pico hardware version:&#xA;  选择 Luckfox Pico 硬件版本:&#xA;                [0] RV1103_Luckfox_Pico&#xA;                [1] RV1103_Luckfox_Pico_Mini_A&#xA;                [2] RV1103_Luckfox_Pico_Mini_B&#xA;                [3] RV1103_Luckfox_Pico_Plus&#xA;                [4] RV1106_Luckfox_Pico_Pro_Max&#xA;                [5] RV1106_Luckfox_Pico_Ultra&#xA;                [6] RV1106_Luckfox_Pico_Ultra_W&#xA;                [7] custom&#xA;Which would you like? [0~7][default:0]: 7&#xA;----------------------------------------------------------------&#xA;0. BoardConfig_IPC/BoardConfig-EMMC-Buildroot-RV1106_Luckfox_Pico_Ultra-IPC.mk&#xA;                            boot medium(启动介质): EMMC&#xA;                          system version(系统版本): Buildroot&#xA;                        hardware version(硬件版本): RV1106_Luckfox_Pico_Ultra&#xA;                              applicaton(应用场景): IPC&#xA;----------------------------------------------------------------&#xA;&#xA;----------------------------------------------------------------&#xA;1. BoardConfig_IPC/BoardConfig-EMMC-Buildroot-RV1106_Luckfox_Pico_Ultra_W-IPC.mk&#xA;                            boot medium(启动介质): EMMC&#xA;                          system version(系统版本): Buildroot&#xA;                        hardware version(硬件版本): RV1106_Luckfox_Pico_Ultra_W&#xA;                              applicaton(应用场景): IPC&#xA;----------------------------------------------------------------&#xA;&#xA;----------------------------------------------------------------&#xA;2. BoardConfig_IPC/BoardConfig-EMMC-Ubuntu-RV1106_Luckfox_Pico_Ultra-IPC.mk&#xA;                            boot medium(启动介质): EMMC&#xA;                          system version(系统版本): Ubuntu&#xA;                        hardware version(硬件版本): RV1106_Luckfox_Pico_Ultra&#xA;                              applicaton(应用场景): IPC&#xA;----------------------------------------------------------------&#xA;&#xA;----------------------------------------------------------------&#xA;3. BoardConfig_IPC/BoardConfig-EMMC-Ubuntu-RV1106_Luckfox_Pico_Ultra_W-IPC.mk&#xA;                            boot medium(启动介质): EMMC&#xA;                          system version(系统版本): Ubuntu&#xA;                        hardware version(硬件版本): RV1106_Luckfox_Pico_Ultra_W&#xA;                              applicaton(应用场景): IPC&#xA;----------------------------------------------------------------&#xA;&#xA;----------------------------------------------------------------&#xA;4. BoardConfig_IPC/BoardConfig-SD_CARD-Buildroot-RV1103_Luckfox_Pico-IPC.mk&#xA;                            boot medium(启动介质): SD_CARD&#xA;                          system version(系统版本): Buildroot&#xA;                        hardware version(硬件版本): RV1103_Luckfox_Pico&#xA;                              applicaton(应用场景): IPC&#xA;----------------------------------------------------------------&#xA;&#xA;----------------------------------------------------------------&#xA;5. BoardConfig_IPC/BoardConfig-SD_CARD-Buildroot-RV1103_Luckfox_Pico_Mini_A-IPC.mk&#xA;                            boot medium(启动介质): SD_CARD&#xA;                          system version(系统版本): Buildroot&#xA;                        hardware version(硬件版本): RV1103_Luckfox_Pico_Mini_A&#xA;                              applicaton(应用场景): IPC&#xA;----------------------------------------------------------------&#xA;&#xA;----------------------------------------------------------------&#xA;6. BoardConfig_IPC/BoardConfig-SD_CARD-Buildroot-RV1103_Luckfox_Pico_Mini_B-IPC.mk&#xA;                            boot medium(启动介质): SD_CARD&#xA;                          system version(系统版本): Buildroot&#xA;                        hardware version(硬件版本): RV1103_Luckfox_Pico_Mini_B&#xA;                              applicaton(应用场景): IPC&#xA;----------------------------------------------------------------&#xA;&#xA;----------------------------------------------------------------&#xA;7. BoardConfig_IPC/BoardConfig-SD_CARD-Buildroot-RV1103_Luckfox_Pico_Plus-IPC.mk&#xA;                            boot medium(启动介质): SD_CARD&#xA;                          system version(系统版本): Buildroot&#xA;                        hardware version(硬件版本): RV1103_Luckfox_Pico_Plus&#xA;                              applicaton(应用场景): IPC&#xA;----------------------------------------------------------------&#xA;&#xA;----------------------------------------------------------------&#xA;8. BoardConfig_IPC/BoardConfig-SD_CARD-Buildroot-RV1106_Luckfox_Pico_Pro_Max-IPC.mk&#xA;                            boot medium(启动介质): SD_CARD&#xA;                          system version(系统版本): Buildroot&#xA;                        hardware version(硬件版本): RV1106_Luckfox_Pico_Pro_Max&#xA;                              applicaton(应用场景): IPC&#xA;----------------------------------------------------------------&#xA;&#xA;----------------------------------------------------------------&#xA;9. BoardConfig_IPC/BoardConfig-SD_CARD-Ubuntu-RV1103_Luckfox_Pico-IPC.mk&#xA;                            boot medium(启动介质): SD_CARD&#xA;                          system version(系统版本): Ubuntu&#xA;                        hardware version(硬件版本): RV1103_Luckfox_Pico&#xA;                              applicaton(应用场景): IPC&#xA;----------------------------------------------------------------&#xA;&#xA;----------------------------------------------------------------&#xA;10. BoardConfig_IPC/BoardConfig-SD_CARD-Ubuntu-RV1103_Luckfox_Pico_Mini_A-IPC.mk&#xA;                            boot medium(启动介质): SD_CARD&#xA;                          system version(系统版本): Ubuntu&#xA;                        hardware version(硬件版本): RV1103_Luckfox_Pico_Mini_A&#xA;                              applicaton(应用场景): IPC&#xA;----------------------------------------------------------------&#xA;&#xA;----------------------------------------------------------------&#xA;11. BoardConfig_IPC/BoardConfig-SD_CARD-Ubuntu-RV1103_Luckfox_Pico_Mini_B-IPC.mk&#xA;                            boot medium(启动介质): SD_CARD&#xA;                          system version(系统版本): Ubuntu&#xA;                        hardware version(硬件版本): RV1103_Luckfox_Pico_Mini_B&#xA;                              applicaton(应用场景): IPC&#xA;----------------------------------------------------------------&#xA;&#xA;----------------------------------------------------------------&#xA;12. BoardConfig_IPC/BoardConfig-SD_CARD-Ubuntu-RV1103_Luckfox_Pico_Plus-IPC.mk&#xA;                            boot medium(启动介质): SD_CARD&#xA;                          system version(系统版本): Ubuntu&#xA;                        hardware version(硬件版本): RV1103_Luckfox_Pico_Plus&#xA;                              applicaton(应用场景): IPC&#xA;----------------------------------------------------------------&#xA;&#xA;----------------------------------------------------------------&#xA;13. BoardConfig_IPC/BoardConfig-SD_CARD-Ubuntu-RV1106_Luckfox_Pico_Pro_Max-IPC.mk&#xA;                            boot medium(启动介质): SD_CARD&#xA;                          system version(系统版本): Ubuntu&#xA;                        hardware version(硬件版本): RV1106_Luckfox_Pico_Pro_Max&#xA;                              applicaton(应用场景): IPC&#xA;----------------------------------------------------------------&#xA;&#xA;----------------------------------------------------------------&#xA;14. BoardConfig_IPC/BoardConfig-SPI_NAND-Buildroot-RV1103_Luckfox_Pico_Mini_B-IPC.mk&#xA;                            boot medium(启动介质): SPI_NAND&#xA;                          system version(系统版本): Buildroot&#xA;                        hardware version(硬件版本): RV1103_Luckfox_Pico_Mini_B&#xA;                              applicaton(应用场景): IPC&#xA;----------------------------------------------------------------&#xA;&#xA;----------------------------------------------------------------&#xA;15. BoardConfig_IPC/BoardConfig-SPI_NAND-Buildroot-RV1103_Luckfox_Pico_Plus-IPC.mk&#xA;                            boot medium(启动介质): SPI_NAND&#xA;                          system version(系统版本): Buildroot&#xA;                        hardware version(硬件版本): RV1103_Luckfox_Pico_Plus&#xA;                              applicaton(应用场景): IPC&#xA;----------------------------------------------------------------&#xA;&#xA;----------------------------------------------------------------&#xA;16. BoardConfig_IPC/BoardConfig-SPI_NAND-Buildroot-RV1106_Luckfox_Pico_Pro_Max-IPC.mk&#xA;                            boot medium(启动介质): SPI_NAND&#xA;                          system version(系统版本): Buildroot&#xA;                        hardware version(硬件版本): RV1106_Luckfox_Pico_Pro_Max&#xA;                              applicaton(应用场景): IPC&#xA;----------------------------------------------------------------&#xA;&#xA;Which would you like? [default:0]:&#xA;&lt;/code&gt;&lt;/pre&gt; Enter the corresponding board support file number to complete the configuration.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Set Buildroot System Default WIFI Configuration&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Navigate to the board-level configuration directory &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd {SDK_PATH}/project/cfg/BoardConfig_IPC/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Open the corresponding board-level configuration file&lt;/li&gt; &#xA; &lt;li&gt;Modify the parameters LF_WIFI_PASSWD and LF_WIFI_SSID &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export LF_WIFI_SSID=&#34;Your wifi ssid&#34;&#xA;export LF_WIFI_PSK=&#34;Your wifi password&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;One-click Automatic Compilation&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./build.sh lunch   # Select the reference board configuration&#xA;./build.sh         # One-click automatic compilation&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compile busybox/buildroot &lt;pre&gt;&lt;code&gt;./build.sh lunch   # Select the reference board&#xA;./build.sh         # One-click automatic compilation  &#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Compile Ubuntu &lt;pre&gt;&lt;code&gt;sudo ./build.sh lunch   # Select the reference board&#xA;sudo ./build.sh         # One-click automatic compilation  &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Note that when compiling Ubuntu, make sure to use sudo, otherwise it may cause file system errors&lt;/li&gt; &#xA;   &lt;li&gt;The following text will not distinguish between the two sets of instructions, please choose accordingly based on the situation&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Build U-Boot&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./build.sh clean uboot&#xA;./build.sh uboot&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The path of the generated files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;output/image/MiniLoaderAll.bin&#xA;output/image/uboot.img&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Build kernel&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./build.sh clean kernel&#xA;./build.sh kernel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The path of the generated files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;output/image/boot.img&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Build rootfs&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./build.sh clean rootfs&#xA;./build.sh rootfs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Note : After compilation, use the command ./build.sh firmware to repackage.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Build media&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./build.sh clean media&#xA;./build.sh media&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The path of the generated files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;output/out/media_out&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Note : After compilation, use the command ./build.sh firmware to repackage.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Build Reference Applications&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./build.sh clean app&#xA;./build.sh app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Note 1: The app depends on media.&lt;/li&gt; &#xA; &lt;li&gt;Note 2: After compilation, use the command ./build.sh firmware to repackage.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Firmware Packaging&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./build.sh firmware&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The path of the generated files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;output/image&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Kernel Config&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./build.sh kernelconfig&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open the menuconfig interface for the kernel.&lt;/p&gt; &#xA;&lt;h4&gt;Buildroot Config&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./build.sh buildrootconfig&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open the menuconfig interface for buildroot.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Note: This is only applicable when selecting buildroot as the root file system.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Notices&lt;/h2&gt; &#xA;&lt;p&gt;When copying the source code package under Windows, the executable file under Linux may become a non-executable file, or the soft link fails and cannot be compiled and used. Therefore, please be careful not to copy the source code package under Windows.&lt;/p&gt;</summary>
  </entry>
</feed>