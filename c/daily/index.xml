<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-08T01:35:58Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>remzi-arpacidusseau/ostep-code</title>
    <updated>2022-09-08T01:35:58Z</updated>
    <id>tag:github.com,2022-09-08:/remzi-arpacidusseau/ostep-code</id>
    <link href="https://github.com/remzi-arpacidusseau/ostep-code" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Code from various chapters in OSTEP (http://www.ostep.org)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ostep-code&lt;/h1&gt; &#xA;&lt;p&gt;Code from various chapters in OSTEP (&lt;a href=&#34;http://www.ostep.org&#34;&gt;http://www.ostep.org&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-code/master/intro&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Virtualization&lt;/h2&gt; &#xA;&lt;p&gt;CPU Virtualization Chapters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Processes&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-code/master/cpu-api&#34;&gt;Process API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Direct Execution&lt;/li&gt; &#xA; &lt;li&gt;CPU Scheduling&lt;/li&gt; &#xA; &lt;li&gt;Multi-level Feedback&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-code/master/cpu-sched-lottery&#34;&gt;Lottery Scheduling&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Multi-CPU Scheduling&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Memory Virtualization Chapters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-code/master/vm-intro&#34;&gt;Address Spaces&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Memory API&lt;/li&gt; &#xA; &lt;li&gt;Address Translation&lt;/li&gt; &#xA; &lt;li&gt;Segmentation&lt;/li&gt; &#xA; &lt;li&gt;Free Space Management&lt;/li&gt; &#xA; &lt;li&gt;Introduction to Paging&lt;/li&gt; &#xA; &lt;li&gt;Translation Lookaside Buffers&lt;/li&gt; &#xA; &lt;li&gt;Advanced Page Tables&lt;/li&gt; &#xA; &lt;li&gt;Swapping: Mechanisms&lt;/li&gt; &#xA; &lt;li&gt;Swapping: Policies&lt;/li&gt; &#xA; &lt;li&gt;Complete VM Systems&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Concurrency&lt;/h2&gt; &#xA;&lt;p&gt;Concurrency Chapters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-code/master/threads-intro&#34;&gt;Concurrency and Threads&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-code/master/threads-api&#34;&gt;Threads API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-code/master/threads-locks&#34;&gt;Locks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Locked Data Structures&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-code/master/threads-cv&#34;&gt;Condition Variables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-code/master/threads-sema&#34;&gt;Semaphores&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-code/master/threads-bugs&#34;&gt;Concurrency Bugs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Event-based Concurrency&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Persistence&lt;/h2&gt; &#xA;&lt;p&gt;Persistence Chapters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I/O Devices&lt;/li&gt; &#xA; &lt;li&gt;Hard Disk Drives&lt;/li&gt; &#xA; &lt;li&gt;Redundant Disk Arrays (RAID)&lt;/li&gt; &#xA; &lt;li&gt;Files and Directories&lt;/li&gt; &#xA; &lt;li&gt;File System Implementation&lt;/li&gt; &#xA; &lt;li&gt;Fast File System (FFS)&lt;/li&gt; &#xA; &lt;li&gt;FSCK and Journaling&lt;/li&gt; &#xA; &lt;li&gt;Log-structured File System (LFS)&lt;/li&gt; &#xA; &lt;li&gt;Flash-based SSDs&lt;/li&gt; &#xA; &lt;li&gt;Data Integrity and Protection&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/remzi-arpacidusseau/ostep-code/master/dist-intro&#34;&gt;Distributed Systems&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Network File System (NFS)&lt;/li&gt; &#xA; &lt;li&gt;Andrew File System (AFS)&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>git/git</title>
    <updated>2022-09-08T01:35:58Z</updated>
    <id>tag:github.com,2022-09-08:/git/git</id>
    <link href="https://github.com/git/git" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Git Source Code Mirror - This is a publish-only repository but pull requests can be turned into patches to the mailing list via GitGitGadget (https://gitgitgadget.github.io/). Please follow Documentation/SubmittingPatches procedure for any of your improvements.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/git/git/actions?query=branch%3Amaster+event%3Apush&#34;&gt;&lt;img src=&#34;https://github.com/git/git/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Git - fast, scalable, distributed revision control system&lt;/h1&gt; &#xA;&lt;p&gt;Git is a fast, scalable, distributed revision control system with an unusually rich command set that provides both high-level operations and full access to internals.&lt;/p&gt; &#xA;&lt;p&gt;Git is an Open Source project covered by the GNU General Public License version 2 (some parts of it are under different licenses, compatible with the GPLv2). It was originally written by Linus Torvalds with help of a group of hackers around the net.&lt;/p&gt; &#xA;&lt;p&gt;Please read the file &lt;a href=&#34;https://raw.githubusercontent.com/git/git/master/INSTALL&#34;&gt;INSTALL&lt;/a&gt; for installation instructions.&lt;/p&gt; &#xA;&lt;p&gt;Many Git online resources are accessible from &lt;a href=&#34;https://git-scm.com/&#34;&gt;https://git-scm.com/&lt;/a&gt; including full documentation and Git related tools.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/git/git/master/Documentation/gittutorial.txt&#34;&gt;Documentation/gittutorial.txt&lt;/a&gt; to get started, then see &lt;a href=&#34;https://raw.githubusercontent.com/git/git/master/Documentation/giteveryday.txt&#34;&gt;Documentation/giteveryday.txt&lt;/a&gt; for a useful minimum set of commands, and &lt;code&gt;Documentation/git-&amp;lt;commandname&amp;gt;.txt&lt;/code&gt; for documentation of each command. If git has been correctly installed, then the tutorial can also be read with &lt;code&gt;man gittutorial&lt;/code&gt; or &lt;code&gt;git help tutorial&lt;/code&gt;, and the documentation of each command with &lt;code&gt;man git-&amp;lt;commandname&amp;gt;&lt;/code&gt; or &lt;code&gt;git help &amp;lt;commandname&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;CVS users may also want to read &lt;a href=&#34;https://raw.githubusercontent.com/git/git/master/Documentation/gitcvs-migration.txt&#34;&gt;Documentation/gitcvs-migration.txt&lt;/a&gt; (&lt;code&gt;man gitcvs-migration&lt;/code&gt; or &lt;code&gt;git help cvs-migration&lt;/code&gt; if git is installed).&lt;/p&gt; &#xA;&lt;p&gt;The user discussion and development of Git take place on the Git mailing list -- everyone is welcome to post bug reports, feature requests, comments and patches to &lt;a href=&#34;mailto:git@vger.kernel.org&#34;&gt;git@vger.kernel.org&lt;/a&gt; (read &lt;a href=&#34;https://raw.githubusercontent.com/git/git/master/Documentation/SubmittingPatches&#34;&gt;Documentation/SubmittingPatches&lt;/a&gt; for instructions on patch submission and &lt;a href=&#34;https://raw.githubusercontent.com/git/git/master/Documentation/CodingGuidelines&#34;&gt;Documentation/CodingGuidelines&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Those wishing to help with error message, usage and informational message string translations (localization l10) should see &lt;a href=&#34;https://raw.githubusercontent.com/git/git/master/po/README.md&#34;&gt;po/README.md&lt;/a&gt; (a &lt;code&gt;po&lt;/code&gt; file is a Portable Object file that holds the translations).&lt;/p&gt; &#xA;&lt;p&gt;To subscribe to the list, send an email with just &#34;subscribe git&#34; in the body to &lt;a href=&#34;mailto:majordomo@vger.kernel.org&#34;&gt;majordomo@vger.kernel.org&lt;/a&gt; (not the Git list). The mailing list archives are available at &lt;a href=&#34;https://lore.kernel.org/git/&#34;&gt;https://lore.kernel.org/git/&lt;/a&gt;, &lt;a href=&#34;http://marc.info/?l=git&#34;&gt;http://marc.info/?l=git&lt;/a&gt; and other archival sites.&lt;/p&gt; &#xA;&lt;p&gt;Issues which are security relevant should be disclosed privately to the Git Security mailing list &lt;a href=&#34;mailto:git-security@googlegroups.com&#34;&gt;git-security@googlegroups.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The maintainer frequently sends the &#34;What&#39;s cooking&#34; reports that list the current status of various development topics to the mailing list. The discussion following them give a good reference for project status, development direction and remaining tasks.&lt;/p&gt; &#xA;&lt;p&gt;The name &#34;git&#34; was given by Linus Torvalds when he wrote the very first version. He described the tool as &#34;the stupid content tracker&#34; and the name as (depending on your mood):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;random three-letter combination that is pronounceable, and not actually used by any common UNIX command. The fact that it is a mispronunciation of &#34;get&#34; may or may not be relevant.&lt;/li&gt; &#xA; &lt;li&gt;stupid. contemptible and despicable. simple. Take your pick from the dictionary of slang.&lt;/li&gt; &#xA; &lt;li&gt;&#34;global information tracker&#34;: you&#39;re in a good mood, and it actually works for you. Angels sing, and a light suddenly fills the room.&lt;/li&gt; &#xA; &lt;li&gt;&#34;goddamn idiotic truckload of sh*t&#34;: when it breaks&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>coturn/coturn</title>
    <updated>2022-09-08T01:35:58Z</updated>
    <id>tag:github.com,2022-09-08:/coturn/coturn</id>
    <link href="https://github.com/coturn/coturn" rel="alternate"></link>
    <summary type="html">&lt;p&gt;coturn TURN server project&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;This project evolved from rfc5766-turn-server project (&lt;a href=&#34;https://code.google.com/p/rfc5766-turn-server/&#34;&gt;https://code.google.com/p/rfc5766-turn-server/&lt;/a&gt;). There are many new advanced TURN specs which are going far beyond the original RFC 5766 document. This project takes the code of rfc5766-turn-server as the starter, and adds new advanced features to it.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/coturn/coturn/wiki/Downloads&#34;&gt;Downloads page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/coturn/coturn/tree/master/docker/coturn&#34;&gt;Docker image&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/coturn/coturn/wiki/&#34;&gt;Wiki pages&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Free open source implementation of TURN and STUN Server&lt;/h1&gt; &#xA;&lt;p&gt;The TURN Server is a VoIP media traffic NAT traversal server and gateway. It can be used as a general-purpose network traffic TURN server and gateway, too.&lt;/p&gt; &#xA;&lt;p&gt;On-line management interface (over telnet or over HTTPS) for the TURN server is available.&lt;/p&gt; &#xA;&lt;p&gt;The implementation also includes some extra experimental features.&lt;/p&gt; &#xA;&lt;p&gt;Supported RFCs:&lt;/p&gt; &#xA;&lt;p&gt;TURN specs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RFC 5766 - base TURN specs&lt;/li&gt; &#xA; &lt;li&gt;RFC 6062 - TCP relaying TURN extension&lt;/li&gt; &#xA; &lt;li&gt;RFC 6156 - IPv6 extension for TURN&lt;/li&gt; &#xA; &lt;li&gt;RFC 7443 - ALPN support for STUN &amp;amp; TURN&lt;/li&gt; &#xA; &lt;li&gt;RFC 7635 - oAuth third-party TURN/STUN authorization&lt;/li&gt; &#xA; &lt;li&gt;DTLS support (&lt;a href=&#34;http://tools.ietf.org/html/draft-petithuguenin-tram-turn-dtls-00&#34;&gt;http://tools.ietf.org/html/draft-petithuguenin-tram-turn-dtls-00&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Mobile ICE (MICE) support (&lt;a href=&#34;http://tools.ietf.org/html/draft-wing-tram-turn-mobility-02&#34;&gt;http://tools.ietf.org/html/draft-wing-tram-turn-mobility-02&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;TURN REST API (&lt;a href=&#34;http://tools.ietf.org/html/draft-uberti-behave-turn-rest-00&#34;&gt;http://tools.ietf.org/html/draft-uberti-behave-turn-rest-00&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Origin field in TURN (Multi-tenant TURN Server) (&lt;a href=&#34;https://tools.ietf.org/html/draft-ietf-tram-stun-origin-06&#34;&gt;https://tools.ietf.org/html/draft-ietf-tram-stun-origin-06&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;TURN Bandwidth draft specs (&lt;a href=&#34;http://tools.ietf.org/html/draft-thomson-tram-turn-bandwidth-01&#34;&gt;http://tools.ietf.org/html/draft-thomson-tram-turn-bandwidth-01&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;TURN-bis (with dual allocation) draft specs (&lt;a href=&#34;http://tools.ietf.org/html/draft-ietf-tram-turnbis-04&#34;&gt;http://tools.ietf.org/html/draft-ietf-tram-turnbis-04&lt;/a&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;STUN specs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RFC 3489 - &#34;classic&#34; STUN&lt;/li&gt; &#xA; &lt;li&gt;RFC 5389 - base &#34;new&#34; STUN specs&lt;/li&gt; &#xA; &lt;li&gt;RFC 5769 - test vectors for STUN protocol testing&lt;/li&gt; &#xA; &lt;li&gt;RFC 5780 - NAT behavior discovery support&lt;/li&gt; &#xA; &lt;li&gt;RFC 7443 - ALPN support for STUN &amp;amp; TURN&lt;/li&gt; &#xA; &lt;li&gt;RFC 7635 - oAuth third-party TURN/STUN authorization&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Supported ICE and related specs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;RFC 5245 - ICE&lt;/li&gt; &#xA; &lt;li&gt;RFC 5768 – ICE–SIP&lt;/li&gt; &#xA; &lt;li&gt;RFC 6336 – ICE–IANA Registry&lt;/li&gt; &#xA; &lt;li&gt;RFC 6544 – ICE–TCP&lt;/li&gt; &#xA; &lt;li&gt;RFC 5928 - TURN Resolution Mechanism&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The implementation fully supports the following client-to-TURN-server protocols:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;UDP (per RFC 5766)&lt;/li&gt; &#xA; &lt;li&gt;TCP (per RFC 5766 and RFC 6062)&lt;/li&gt; &#xA; &lt;li&gt;TLS (per RFC 5766 and RFC 6062): TLS1.0/TLS1.1/TLS1.2; ECDHE is supported.&lt;/li&gt; &#xA; &lt;li&gt;DTLS (&lt;a href=&#34;http://tools.ietf.org/html/draft-petithuguenin-tram-turn-dtls-00&#34;&gt;http://tools.ietf.org/html/draft-petithuguenin-tram-turn-dtls-00&lt;/a&gt;): DTLS versions 1.0 and 1.2.&lt;/li&gt; &#xA; &lt;li&gt;SCTP (experimental implementation).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Supported relay protocols:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;UDP (per RFC 5766)&lt;/li&gt; &#xA; &lt;li&gt;TCP (per RFC 6062)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Supported user databases (for user repository, with passwords or keys, if authentication is required):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SQLite&lt;/li&gt; &#xA; &lt;li&gt;MySQL&lt;/li&gt; &#xA; &lt;li&gt;PostgreSQL&lt;/li&gt; &#xA; &lt;li&gt;Redis&lt;/li&gt; &#xA; &lt;li&gt;MongoDB&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Redis can also be used for status and statistics storage and notification.&lt;/p&gt; &#xA;&lt;p&gt;By default a &lt;a href=&#34;https://prometheus.io/&#34;&gt;prometheus&lt;/a&gt; exporter endpoint is disabled, if it is enabled it will listen on port 9641 under path /metrics&lt;/p&gt; &#xA;&lt;p&gt;Supported message integrity digest algorithms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;HMAC-SHA1, with MD5-hashed keys (as required by STUN and TURN standards)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Supported TURN authentication mechanisms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&#39;classic&#39; long-term credentials mechanism;&lt;/li&gt; &#xA; &lt;li&gt;TURN REST API (a modification of the long-term mechanism, for time-limited secret-based authentication, for WebRTC applications: &lt;a href=&#34;http://tools.ietf.org/html/draft-uberti-behave-turn-rest-00&#34;&gt;http://tools.ietf.org/html/draft-uberti-behave-turn-rest-00&lt;/a&gt;);&lt;/li&gt; &#xA; &lt;li&gt;experimental third-party oAuth-based client authorization option;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When used as a part of an ICE solution, for VoIP connectivity, this TURN server can handle thousands simultaneous calls per CPU (when TURN protocol is used) or tens of thousands calls when only STUN protocol is used. For virtually unlimited scalability a load balancing scheme can be used. The load balancing can be implemented with the following tools (either one or a combination of them):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DNS SRV based load balancing;&lt;/li&gt; &#xA; &lt;li&gt;built-in 300 ALTERNATE-SERVER mechanism (requires 300 response support by the TURN client);&lt;/li&gt; &#xA; &lt;li&gt;network load-balancer server.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Traffic bandwidth limitation and congestion avoidance algorithms implemented.&lt;/p&gt; &#xA;&lt;p&gt;The supported project target platforms are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Linux (Debian, Ubuntu, Mint, CentOS, Fedora, Redhat, Amazon Linux, Arch Linux, OpenSUSE)&lt;/li&gt; &#xA; &lt;li&gt;BSD (FreeBSD, NetBSD, OpenBSD, DragonFlyBSD)&lt;/li&gt; &#xA; &lt;li&gt;Solaris 11&lt;/li&gt; &#xA; &lt;li&gt;Mac OS X&lt;/li&gt; &#xA; &lt;li&gt;Cygwin (for non-production R&amp;amp;D purposes)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Other server platforms can be supported by request.&lt;/p&gt; &#xA;&lt;p&gt;Any client platform is supported, including Android, iOS, Linux, OS X, Windows, and Windows Phone.&lt;/p&gt; &#xA;&lt;p&gt;This project can be successfully used on other &lt;code&gt;*NIX&lt;/code&gt; platforms, too, but that is not officially supported.&lt;/p&gt; &#xA;&lt;p&gt;The implementation is supposed to be simple, easy to install and configure. The project focuses on performance, scalability and simplicity. The aim is to provide an enterprise-grade TURN solution.&lt;/p&gt; &#xA;&lt;p&gt;To achieve high performance and scalability, the TURN server is implemented with the following features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;High-performance industrial-strength Network IO engine libevent2 is used&lt;/li&gt; &#xA; &lt;li&gt;Configurable multi-threading model implemented to allow full usage of available CPU resources (if OS allows multi-threading)&lt;/li&gt; &#xA; &lt;li&gt;Multiple listening and relay addresses can be configured&lt;/li&gt; &#xA; &lt;li&gt;Efficient memory model used&lt;/li&gt; &#xA; &lt;li&gt;The TURN project code can be used in a custom proprietary networking environment. In the TURN server code, an abstract networking API is used. Only couple files in the project have to be re-written to plug-in the TURN server into a proprietary environment. With this project, only implementation for standard UNIX Networking/IO API is provided, but the user can implement any other environment. The TURN server code was originally developed for a high-performance proprietary corporate environment, then adopted for UNIX Networking API&lt;/li&gt; &#xA; &lt;li&gt;The TURN server works as a user space process, without imposing any special requirements on the system&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To download the TURN Server software, the client messaging library and the test programs, click the tab &#34;Downloads&#34;.&lt;/p&gt; &#xA;&lt;p&gt;Contact information:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/turn-server-project-rfc5766-turn-server&#34;&gt;https://groups.google.com/forum/#!forum/turn-server-project-rfc5766-turn-server&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;email:&lt;a href=&#34;mailto:misi@majd.eu&#34;&gt;misi@majd.eu&lt;/a&gt; &lt;a href=&#34;mailto:mom040267@gmail.com&#34;&gt;mom040267@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Feedback is very welcome (bugs, issues, suggestions, stories, questions).&lt;/h3&gt; &#xA;&lt;h3&gt;Volunteers are welcome, too.&lt;/h3&gt;</summary>
  </entry>
</feed>