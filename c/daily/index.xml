<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-09T01:34:26Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>manna-harbour/miryoku_zmk</title>
    <updated>2022-06-09T01:34:26Z</updated>
    <id>tag:github.com,2022-06-09:/manna-harbour/miryoku_zmk</id>
    <link href="https://github.com/manna-harbour/miryoku_zmk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Miryoku is an ergonomic, minimal, orthogonal, and universal keyboard layout. Miryoku ZMK is the Miryoku implementation for ZMK.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Copyright 2022 Manna Harbour&lt;/h1&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/manna-harbour/miryoku&#34;&gt;https://github.com/manna-harbour/miryoku&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Miryoku ZMK [[https://raw.githubusercontent.com/manna-harbour/miryoku/master/data/logos/miryoku-roa-32.png]]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;[[https://raw.githubusercontent.com/manna-harbour/miryoku/master/data/cover/miryoku-kle-cover-miryoku_zmk.png]]&lt;/p&gt; &#xA;&lt;p&gt;[[https://github.com/manna-harbour/miryoku/][Miryoku]] is an ergonomic, minimal, orthogonal, and universal keyboard layout. [[https://github.com/manna-harbour/miryoku_zmk][Miryoku ZMK]] is the Miryoku implementation for [[https://zmkfirmware.dev/][ZMK]].&lt;/p&gt; &#xA;&lt;p&gt;This document describes Miryoku ZMK only. For Miryoku documentation, implementations, and discussions and support, see [[https://github.com/manna-harbour/miryoku/][Miryoku]].&lt;/p&gt; &#xA;&lt;p&gt;See the [[docs/quickstart][Miryoku ZMK Quickstart Guide]] to have a personalised build running on your keyboard in a few minutes without installing any software or editing any files.&lt;/p&gt; &#xA;&lt;p&gt;** Overview&lt;/p&gt; &#xA;&lt;p&gt;[[#building][Building]] can be performed [[#local-builds][locally]], or via GitHub Actions [[#workflow-builds][workflows]] without use of a local build environment. Many keyboards are [[#supported-keyboards][supported]], and building out-of-tree keyboards is automatically supported by the workflows.&lt;/p&gt; &#xA;&lt;p&gt;Workflow builds can be customised by copying and editing one of the [[#build-examples][example workflows]] or by filling out a [[#build-inputs][form]], and specifying [[#options][options]]. Local and workflow builds can be customised by editing a [[#config-file][config file]], and an [[#example-config-file][example]] is included.&lt;/p&gt; &#xA;&lt;p&gt;The [[#keyboard-keymaps][keyboard keymaps]] are composed of the config file, a [[#mapping-macros][mapping]] for the physical layout, and the [[#miryoku-keymap][Miryoku keymap]].&lt;/p&gt; &#xA;&lt;p&gt;[[#additional-and-experimental-features][Additional and Experimental Features]] include [[#caps-word][caps word]], [[#customisation][customisation]], [[#key-emulation-combos][key emulation combos]] and [[#mouse-keys][mouse keys]].&lt;/p&gt; &#xA;&lt;p&gt;** Building&lt;/p&gt; &#xA;&lt;p&gt;*** Local Builds&lt;/p&gt; &#xA;&lt;p&gt;First [[https://zmk.dev/docs/development/setup][set up the ZMK build environment]] and [[https://zmk.dev/docs/development/build-flash][build and flash the default keymap for your keyboard]].&lt;/p&gt; &#xA;&lt;p&gt;Clone this repository and set [[https://zmk.dev/docs/development/build-flash#building-from-zmk-config-folder][ZMK_CONFIG]] to the absolute path of the [[config]] subdirectory. Use the [[#config-file][config file]] to select alternative layout and mapping options.&lt;/p&gt; &#xA;&lt;p&gt;*** Workflow Builds&lt;/p&gt; &#xA;&lt;p&gt;Firmware can be built via GitHub Actions workflows without use of a local build environment.&lt;/p&gt; &#xA;&lt;p&gt;First log in to GitHub, fork the Miryoku ZMK repository, and enable workflows.&lt;/p&gt; &#xA;&lt;p&gt;To access a workflow, visit the Actions tab and select the workflow. To download the firmware from a workflow run, select the workflow, select the workflow run, select the desired Artifacts, and unzip the downloaded zip file.&lt;/p&gt; &#xA;&lt;p&gt;See the [[docs/quickstart][Miryoku ZMK Quickstart Guide]] for step by step instructions.&lt;/p&gt; &#xA;&lt;p&gt;Workflow files are in [[.github/workflows]].&lt;/p&gt; &#xA;&lt;p&gt;To enable Miryoku ZMK workflow debugging, set the following [[https://docs.github.com/en/actions/security-guides/encrypted-secrets#creating-encrypted-secrets-for-a-repository][secret]] in the repository: &lt;del&gt;MIRYOKU_DEBUG&lt;/del&gt; to &lt;del&gt;MIRYOKU_DEBUG_TRUE&lt;/del&gt;. Optionally also [[https://docs.github.com/en/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging][enable step debugging]].&lt;/p&gt; &#xA;&lt;p&gt;**** Build Examples&lt;/p&gt; &#xA;&lt;p&gt;Copy one of the included Build Example workflow files, edit the &lt;del&gt;name&lt;/del&gt; value, edit and add options and values as desired, and push changes. Access the workflow, select Run workflow, select the Branch if desired, and activate Run workflow.&lt;/p&gt; &#xA;&lt;p&gt;Options are specified in the &lt;del&gt;with&lt;/del&gt; section and are of the following form. : option: &#39;[&#34;value&#34;]&#39;&lt;/p&gt; &#xA;&lt;p&gt;For multiple values per option use the following form, and a matrix build will be performed for each combination of values across all options. : option: &#39;[&#34;value1&#34;,&#34;value2&#34;]&#39;&lt;/p&gt; &#xA;&lt;p&gt;See [[#fields--options][Options]] below for a description of each option.&lt;/p&gt; &#xA;&lt;p&gt;**** Build Inputs&lt;/p&gt; &#xA;&lt;p&gt;The Build Inputs workflow can be used without editing workflow files. Access the workflow, Select Run workflow, select the Branch and fill out the form as desired, and activate Run workflow.&lt;/p&gt; &#xA;&lt;p&gt;Options are specified by entering values directly in the corresponding field. Multiple comma separated values can be entered per option and a matrix build will be performed for each combination of values across all options.&lt;/p&gt; &#xA;&lt;p&gt;See [[#fields--options][Options]] below for a description of each option.&lt;/p&gt; &#xA;&lt;p&gt;**** Options&lt;/p&gt; &#xA;&lt;p&gt;All [[#workflow-builds][workflow]] options are described below.&lt;/p&gt; &#xA;&lt;p&gt;The [[#board][board]] option is required and all others are optional.&lt;/p&gt; &#xA;&lt;p&gt;***** Keyboard Selection&lt;/p&gt; &#xA;&lt;p&gt;See [[#supported-keyboards][Supported Keyboards]] for details of supported keyboards.&lt;/p&gt; &#xA;&lt;p&gt;****** board&lt;/p&gt; &#xA;&lt;p&gt;Specifies the ZMK board.&lt;/p&gt; &#xA;&lt;p&gt;For onboard controller keyboards (keyboards with an integrated controller), enter the keyboard name, e.g. &lt;del&gt;ahokore&lt;/del&gt;, &lt;del&gt;ble_chiffre&lt;/del&gt;, &lt;del&gt;technikable&lt;/del&gt;, &lt;del&gt;zaphod&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For split onboard controller keyboards (keyboards with an integrated controller on each side), enter the keyboard side name, e.g. &lt;del&gt;corne-ish_zen_left&lt;/del&gt;, &lt;del&gt;corne-ish_zen_right&lt;/del&gt;. To build both sides in the same run, enter both keyboard side names separated by a comma, e.g. &lt;del&gt;corne-ish_zen_left,corne-ish_zen_right&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For composite keyboards (keyboards with a separate controller), enter the controller name, e.g. &lt;del&gt;nice_nano&lt;/del&gt;, &lt;del&gt;nice_nano_v2&lt;/del&gt;, &lt;del&gt;seeeduino_xiao&lt;/del&gt;, &lt;del&gt;seeeduino_xiao_ble&lt;/del&gt;. Also specify the [[#shield][shield]].&lt;/p&gt; &#xA;&lt;p&gt;****** shield&lt;/p&gt; &#xA;&lt;p&gt;Specifies the ZMK shield.&lt;/p&gt; &#xA;&lt;p&gt;For onboard controller keyboards (keyboards with an integrated controller), leave as &lt;del&gt;default&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For composite keyboards (keyboards with a separate controller), enter the keyboard name, e.g. &lt;del&gt;absolem&lt;/del&gt;, &lt;del&gt;chocv&lt;/del&gt;, &lt;del&gt;eek&lt;/del&gt;, &lt;del&gt;osprette&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For split composite keyboards (keyboards with a separate controller on each side), enter the keyboard side name, e.g. &lt;del&gt;corne_left&lt;/del&gt;, &lt;del&gt;corne_right&lt;/del&gt;, &lt;del&gt;cradio_left&lt;/del&gt;, &lt;del&gt;cradio_right&lt;/del&gt;. To build both sides in the same run, enter both keyboard side names separated by a comma, e.g. &lt;del&gt;corne_left,corne_right&lt;/del&gt;, &lt;del&gt;cradio_left,cradio_right&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;***** Miryoku Alternative Layout and Mapping Options&lt;/p&gt; &#xA;&lt;p&gt;The &lt;del&gt;alphas&lt;/del&gt;, &lt;del&gt;nav&lt;/del&gt;, &lt;del&gt;clipboard&lt;/del&gt;, and &lt;del&gt;layers&lt;/del&gt; options correspond to the Miryoku alternative layout options. See the [[https://github.com/manna-harbour/miryoku/tree/master/docs/reference#layers][default layers]] and [[https://github.com/manna-harbour/miryoku/tree/master/docs/reference#alternative-layouts][alternative layouts]] documentation for details. See the [[.github/workflows/test-all-configs.yml][Test All Configs]] workflow file for a list of all supported values.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;del&gt;mapping&lt;/del&gt; option corresponds to the alternative [[#mapping-macros][mapping]] options.&lt;/p&gt; &#xA;&lt;p&gt;Alternative layout and mapping options are given in the documentation in the form &lt;del&gt;MIRYOKU_OPTION=VALUE&lt;/del&gt;, e.g. &lt;del&gt;MIRYOKU_ALPHAS=QWERTY&lt;/del&gt;. To use here, use the value with the corresponding option. Use &lt;del&gt;default&lt;/del&gt; to represent the default value. Values for these five options are case-insensitive.&lt;/p&gt; &#xA;&lt;p&gt;****** alphas&lt;/p&gt; &#xA;&lt;p&gt;Select an alternative alphas layout, e.g. &lt;del&gt;colemak&lt;/del&gt;, &lt;del&gt;dvorak&lt;/del&gt;, &lt;del&gt;halmak&lt;/del&gt;, &lt;del&gt;qwerty&lt;/del&gt;. For Colemak Mod-DH, leave as &lt;del&gt;default&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;****** nav&lt;/p&gt; &#xA;&lt;p&gt;Select an alternative Nav layout, e.g. &lt;del&gt;invertedt&lt;/del&gt;, &lt;del&gt;vi&lt;/del&gt;. For home position line nav, leave as &lt;del&gt;default&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;****** clipboard&lt;/p&gt; &#xA;&lt;p&gt;Select an alternative clipboard type, e.g. &lt;del&gt;mac&lt;/del&gt;, &lt;del&gt;win&lt;/del&gt;. For CUA bindings, leave as &lt;del&gt;default&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;****** layers&lt;/p&gt; &#xA;&lt;p&gt;Select an alternative layers layout, e.g. &lt;del&gt;flip&lt;/del&gt;. For right hand Nav, leave as &lt;del&gt;default&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;****** mapping&lt;/p&gt; &#xA;&lt;p&gt;Select an alternative mapping, e.g. &lt;del&gt;extended_thumbs&lt;/del&gt;, &lt;del&gt;pinkie_stagger&lt;/del&gt;. For the default mapping, leave as &lt;del&gt;default&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;***** custom_config&lt;/p&gt; &#xA;&lt;p&gt;Appends to the [[#config-file][config]] file. Join multiple lines with &lt;del&gt;\n&lt;/del&gt;. For no additional config, leave as &lt;del&gt;default&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;***** ZMK Options&lt;/p&gt; &#xA;&lt;p&gt;****** kconfig&lt;/p&gt; &#xA;&lt;p&gt;Appends to [[#kconfig-configuration][Kconfig configuration]]. Join multiple lines with &lt;del&gt;\n&lt;/del&gt;. For no additional config, leave as &lt;del&gt;default&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;****** branches&lt;/p&gt; &#xA;&lt;p&gt;Used to select an alternative ZMK branch for building, and to merge branches into ZMK at build time.&lt;/p&gt; &#xA;&lt;p&gt;Branches are specified in the form &lt;del&gt;&#xA;  &lt;user&gt;&#xA;   /&#xA;   &lt;repo&gt;&#xA;    /&#xA;    &lt;branch&gt;&lt;/branch&gt;&#xA;   &lt;/repo&gt;&#xA;  &lt;/user&gt;&lt;/del&gt;. E.g. the default ZMK branch would be specified as &lt;del&gt;zmkfirmware/zmk/main&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Multiple space separated branches can be specified. The first branch specified is used as an alternative ZMK branch for building. Any additional branches will be merged.&lt;/p&gt; &#xA;&lt;p&gt;For no changes, leave as &lt;del&gt;default&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;** Supported Keyboards&lt;/p&gt; &#xA;&lt;p&gt;In-tree keyboards are maintained as part of ZMK. See the [[https://zmk.dev/docs/hardware/][ZMK Supported Hardware]] documentation for details.&lt;/p&gt; &#xA;&lt;p&gt;Supporting an in-tree keyboard in Miryoku ZMK requires only adding the [[#keyboard-keymaps][keyboard keymap]] and [[#mapping-macros][mapping]] files.&lt;/p&gt; &#xA;&lt;p&gt;Out-of-tree keyboards are &lt;em&gt;not&lt;/em&gt; maintained as part of ZMK or Miryoku ZMK. Keyboard definitions for out-of-tree keyboards are located in separate repositories. Some keyboards also require a fork of ZMK. Keyboard definitions and ZMK forks are maintained by the maintainers of those repositories.&lt;/p&gt; &#xA;&lt;p&gt;To build an out-of-tree keyboard the repositories need be checked out and used appropriately. For [[#local-builds][local builds]] these steps must be performed manually. For [[#workflow-builds][workflow builds]] the Miryoku ZMK build workflows perform these steps automatically at build time.&lt;/p&gt; &#xA;&lt;p&gt;Supporting an out-of-tree keyboard in Miryoku ZMK requires adding the keymap and mapping files, and references to the repositories for use by workflow builds.&lt;/p&gt; &#xA;&lt;p&gt;See the Test All Controllers, Boards, and Shields [[#workflow-builds][workflow files]] for lists of supported keyboards.&lt;/p&gt; &#xA;&lt;p&gt;See [[.github/workflows/outboards]] for details of supported out-of-tree keyboards.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/manna-harbour/miryoku/discussions/81&#34;&gt;https://github.com/manna-harbour/miryoku/discussions/81&lt;/a&gt; for available and supported in-tree and out-of-tree keyboards and current maintenance status.&lt;/p&gt; &#xA;&lt;p&gt;** Config File&lt;/p&gt; &#xA;&lt;p&gt;The config file is used to specify [[https://github.com/manna-harbour/miryoku/tree/master/docs/reference#alternative-layouts][alternative layout]] and [[#mapping-macros][mapping]] options for [[#Local-Builds][local builds]]. Options are given in the documentation in the form &lt;del&gt;MIRYOKU_OPTION=VALUE&lt;/del&gt;. Convert to the form &lt;del&gt;#define MIRYOKU_OPTION_VALUE&lt;/del&gt; and add to the config file.&lt;/p&gt; &#xA;&lt;p&gt;The config file can also be used to set default alternative layout and mapping options for [[#workflow-builds][workflow builds]], as an alternative to using the corresponding [[#miryoku-alternative-layout-and-mapping-options][alternative layout and mapping workflow options]]. In this case setting different values for the same option in the config file and in the workflow options may lead to undefined behaviour.&lt;/p&gt; &#xA;&lt;p&gt;The config file can also be used to set other Miryoku ZMK configuration options for local and workflow builds.&lt;/p&gt; &#xA;&lt;p&gt;Config file entries can also be specified in the [[#custom_config][custom_config]] option for workflow builds.&lt;/p&gt; &#xA;&lt;p&gt;The file is [[miryoku/custom_config.h]]. See the [[#example-config-file][example config file]]. The config file is included into the keyboard&#39;s keymap file before the mapping with:&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC C :tangle no #include &#34;../miryoku/custom_config.h&#34; #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;*** Example Config File&lt;/p&gt; &#xA;&lt;p&gt;Below is an example [[#config-file][config file]] with the following alternative layout and mapping options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;MIRYOKU_ALPHAS=QWERTY&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;MIRYOKU_NAV=INVERTEDT&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;MIRYOKU_CLIPBOARD=WIN&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;MIRYOKU_LAYERS=FLIP&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;MIRYOKU_MAPPING=EXTENDED_THUMBS&lt;/del&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;#+BEGIN_SRC C :tangle no // Copyright 2021 Manna Harbour // &lt;a href=&#34;https://github.com/manna-harbour/miryoku&#34;&gt;https://github.com/manna-harbour/miryoku&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;#define MIRYOKU_ALPHAS_QWERTY #define MIRYOKU_NAV_INVERTEDT #define MIRYOKU_CLIPBOARD_WIN #define MIRYOKU_LAYERS_FLIP #define MIRYOKU_MAPPING_EXTENDED_THUMBS #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;** Miryoku Keymap&lt;/p&gt; &#xA;&lt;p&gt;The Miryoku keymap is a ZMK DT keymap file using C preprocessor macros for [[#config-file][configuration options]] and to abstract the physical layout. The Miryoku keymap file is [[miryoku/miryoku.dtsi]]. The file is included into the [[#keyboard-keymaps][keyboard&#39;s keymap]] after the config file and mapping with:&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC C :tangle no #include &#34;../miryoku/miryoku.dtsi&#34; #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;Macros are included from [[miryoku/miryoku.h]]. Layer data is generated by [[https://github.com/manna-harbour/miryoku_babel][Miryoku Babel]] and is included from files in the [[miryoku/miryoku_babel]] directory.&lt;/p&gt; &#xA;&lt;p&gt;** Mapping Macros&lt;/p&gt; &#xA;&lt;p&gt;The keymap is mapped onto keyboards with different physical layouts. The keymap is specified in terms of the &lt;del&gt;MIRYOKU_MAPPING&lt;/del&gt; macro. The macro is defined in a C header file for each physical layout. Unused keys are mapped to &lt;del&gt;&amp;amp;none&lt;/del&gt;. The files are below [[miryoku/mapping/]]. The mapping file is included into the [[#keyboard-keymaps][keyboard keymap]] file before the [[#miryoku-keymap][Miryoku keymap]] with e.g.&lt;/p&gt; &#xA;&lt;p&gt;#+BEGIN_SRC C :tangle no #include &#34;../miryoku/mapping/36/minidox.h&#34; #+END_SRC&lt;/p&gt; &#xA;&lt;p&gt;On each hand, only the main alpha block of 3 rows by 5 columns and the 3 most appropriate thumb keys are used.&lt;/p&gt; &#xA;&lt;p&gt;*** Notes&lt;/p&gt; &#xA;&lt;p&gt;Notes or diagrams are provided below where the selection of keys is not obvious or where alternatives are provided via mapping configuration options.&lt;/p&gt; &#xA;&lt;p&gt;**** 32/hummingbird&lt;/p&gt; &#xA;&lt;p&gt;[[#bottom-row-combos][Bottom row combos]] and [[#thumb-combos][thumb combos]] are enabled.&lt;/p&gt; &#xA;&lt;p&gt;**** 34/ferris&lt;/p&gt; &#xA;&lt;p&gt;[[#thumb-combos][Thumb combos]] are enabled.&lt;/p&gt; &#xA;&lt;p&gt;**** 44/technikable&lt;/p&gt; &#xA;&lt;p&gt;The middle 2 columns are unused.&lt;/p&gt; &#xA;&lt;p&gt;***** Default&lt;/p&gt; &#xA;&lt;p&gt;Supports ortho and MIT configurations.&lt;/p&gt; &#xA;&lt;p&gt;***** 2x2u&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;MIRYOKU_MAPPING=2X2U&lt;/del&gt;&lt;/p&gt; &#xA;&lt;p&gt;Supports 2x2u configuration.&lt;/p&gt; &#xA;&lt;p&gt;***** Extended Thumbs&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;MIRYOKU_MAPPING=EXTENDED_THUMBS&lt;/del&gt;&lt;/p&gt; &#xA;&lt;p&gt;The thumb keys are moved 1u to extend the thumbs. Supports ortho configuration.&lt;/p&gt; &#xA;&lt;p&gt;**** 48/planck&lt;/p&gt; &#xA;&lt;p&gt;***** Default&lt;/p&gt; &#xA;&lt;p&gt;[[https://raw.githubusercontent.com/manna-harbour/miryoku/master/data/mapping/miryoku-kle-mapping-ortho_4x12.png]]&lt;/p&gt; &#xA;&lt;p&gt;***** Extended Thumbs&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;MIRYOKU_MAPPING=EXTENDED_THUMBS&lt;/del&gt;&lt;/p&gt; &#xA;&lt;p&gt;[[https://raw.githubusercontent.com/manna-harbour/miryoku/master/data/mapping/miryoku-kle-mapping-ortho_4x12-extended_thumbs.png]]&lt;/p&gt; &#xA;&lt;p&gt;**** 48/lets_split&lt;/p&gt; &#xA;&lt;p&gt;***** Default&lt;/p&gt; &#xA;&lt;p&gt;[[https://raw.githubusercontent.com/manna-harbour/miryoku/master/data/mapping/miryoku-kle-mapping-ortho_4x12-extended_thumbs.png]]&lt;/p&gt; &#xA;&lt;p&gt;***** Pinkie Stagger&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;MIRYOKU_MAPPING=PINKIE_STAGGER&lt;/del&gt;&lt;/p&gt; &#xA;&lt;p&gt;[[https://raw.githubusercontent.com/manna-harbour/miryoku/master/data/mapping/miryoku-kle-mapping-ortho_4x12-split.png]]&lt;/p&gt; &#xA;&lt;p&gt;**** 50/kyria&lt;/p&gt; &#xA;&lt;p&gt;***** Default&lt;/p&gt; &#xA;&lt;p&gt;[[https://raw.githubusercontent.com/manna-harbour/miryoku/master/data/mapping/miryoku-kle-mapping-kyria.png]]&lt;/p&gt; &#xA;&lt;p&gt;***** Extend Thumbs&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;MIRYOKU_MAPPING=EXTENDED_THUMBS&lt;/del&gt;&lt;/p&gt; &#xA;&lt;p&gt;[[https://raw.githubusercontent.com/manna-harbour/miryoku/master/data/mapping/miryoku-kle-mapping-kyria-extended_thumbs.png]]&lt;/p&gt; &#xA;&lt;p&gt;**** 61/60_ansi&lt;/p&gt; &#xA;&lt;p&gt;***** Default&lt;/p&gt; &#xA;&lt;p&gt;An angled ortho split layout is mapped onto the row-staggered keyboard. The rows are moved up to better position the thumb keys, the hands are separated as much as possible, and the left hand column angle is reversed to reduce ulnar deviation of the wrists.&lt;/p&gt; &#xA;&lt;p&gt;[[https://raw.githubusercontent.com/manna-harbour/miryoku/master/data/mapping/miryoku-kle-mapping-60_ansi.png]]&lt;/p&gt; &#xA;&lt;p&gt;***** No Reverse Angle&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;MIRYOKU_MAPPING=NOREVERSEANGLE&lt;/del&gt;&lt;/p&gt; &#xA;&lt;p&gt;An alternative subset mapping is also provided without reverse column angle.&lt;/p&gt; &#xA;&lt;p&gt;[[https://raw.githubusercontent.com/manna-harbour/miryoku/master/data/mapping/miryoku-kle-mapping-60_ansi-noreverseangle.png]]&lt;/p&gt; &#xA;&lt;p&gt;***** Lite&lt;/p&gt; &#xA;&lt;p&gt;&lt;del&gt;MIRYOKU_MAPPING=LITE&lt;/del&gt;&lt;/p&gt; &#xA;&lt;p&gt;Another alternative subset mapping is provided mapping only the 3x10 alphas, plus spacebar for space / Nav, with the remainder being the default keymap with semicolon in place of quote.&lt;/p&gt; &#xA;&lt;p&gt;** Keyboard Keymaps&lt;/p&gt; &#xA;&lt;p&gt;The keyboard keymaps include the [[#config-file][config file]], a [[#mapping-macros][mapping]] for the physical layout, and the [[#miryoku-keymap][Miryoku keymap]]. Keyboard keymap files are in [[config]].&lt;/p&gt; &#xA;&lt;p&gt;** Kconfig Configuration&lt;/p&gt; &#xA;&lt;p&gt;Kconfig keyboard configuration options can be set in &lt;del&gt;config/&#xA;  &lt;keyboard&gt;&#xA;   .conf&#xA;  &lt;/keyboard&gt;&lt;/del&gt; for [[#local-builds][local]] and [[#workflow-builds][workflow]] builds.&lt;/p&gt; &#xA;&lt;p&gt;Kconfig configuration can also be specified in the [[#kconfig][kconfig option]] for workflow builds.&lt;/p&gt; &#xA;&lt;p&gt;Examples include &lt;del&gt;CONFIG_ZMK_SLEEP=y&lt;/del&gt;, &lt;del&gt;CONFIG_ZMK_DISPLAY=y&lt;/del&gt;, &lt;del&gt;CONFIG_BT_CTLR_TX_PWR_PLUS_8=y&lt;/del&gt;. Additional documentation is available at [[https://deploy-preview-722--zmk.netlify.app/docs/config/index/]]. Also see the default &lt;del&gt;&#xA;  &lt;keyboard&gt;&#xA;   .conf&#xA;  &lt;/keyboard&gt;&lt;/del&gt; included in the keyboard definition, e.g. [[https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/corne/corne.conf][corne.conf]].&lt;/p&gt; &#xA;&lt;p&gt;** Additional and Experimental Features&lt;/p&gt; &#xA;&lt;p&gt;*** Caps Word&lt;/p&gt; &#xA;&lt;p&gt;[[https://zmk.dev/docs/behaviors/caps-word][Caps word]] is used in place of &lt;del&gt;Caps Lock&lt;/del&gt;. Combine with &lt;del&gt;Shift&lt;/del&gt; for &lt;del&gt;Caps Lock&lt;/del&gt;.&lt;/p&gt; &#xA;&lt;p&gt;*** Customisation&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/manna-harbour/miryoku/discussions/85&#34;&gt;https://github.com/manna-harbour/miryoku/discussions/85&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;*** Key Emulation Combos&lt;/p&gt; &#xA;&lt;p&gt;Emulate a key with a combo of two other keys. Enabled automatically on keyboards with a missing key. Can be enabled on other keyboards for use with hard to reach keys, or for compatibility.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/manna-harbour/miryoku/issues/56&#34;&gt;https://github.com/manna-harbour/miryoku/issues/56&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;**** Top Row Combos&lt;/p&gt; &#xA;&lt;p&gt;On the top row on each hand, combo the ring and middle finger keys to emulate the pinkie key, and combo the middle and index finger keys to emulate the inner index key.&lt;/p&gt; &#xA;&lt;p&gt;Requires &lt;del&gt;CONFIG_ZMK_COMBO_MAX_COMBOS_PER_KEY=16&lt;/del&gt; [[#kconfig-configuration][Kconfig configuration]].&lt;/p&gt; &#xA;&lt;p&gt;**** Bottom Row Combos&lt;/p&gt; &#xA;&lt;p&gt;On the bottom row on each hand, combo the ring and middle finger keys to emulate the pinkie key, and combo the middle and index finger keys to emulate the inner index key.&lt;/p&gt; &#xA;&lt;p&gt;Requires &lt;del&gt;CONFIG_ZMK_COMBO_MAX_COMBOS_PER_KEY=16&lt;/del&gt; [[#kconfig-configuration][Kconfig configuration]].&lt;/p&gt; &#xA;&lt;p&gt;**** Thumb Combos&lt;/p&gt; &#xA;&lt;p&gt;On each hand, combo the primary and secondary thumb keys to emulate the tertiary thumb key. Requires suitable keycaps to enable the thumb to press both keys simultaneously.&lt;/p&gt; &#xA;&lt;p&gt;*** Mouse Keys&lt;/p&gt; &#xA;&lt;p&gt;**** Mouse Keys on Host&lt;/p&gt; &#xA;&lt;p&gt;The Mouse and Button layers use [[https://en.wikipedia.org/wiki/Mouse_keys][mouse keys on the host]]. Scroll is not supported.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[[https://linuxreviews.org/HOWTO_use_the_numeric_keyboard_keys_as_mouse_in_XOrg][X11]]&lt;/li&gt; &#xA; &lt;li&gt;[[https://support.apple.com/en-au/guide/mac-help/mh27469/mac][Mac]]&lt;/li&gt; &#xA; &lt;li&gt;[[https://support.microsoft.com/en-us/windows/use-mouse-keys-to-move-the-mouse-pointer-9e0c72c8-b882-7918-8e7b-391fd62adf33][Windows]]&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;**** Mousekeys PR&lt;/p&gt; &#xA;&lt;p&gt;Support for &lt;a href=&#34;https://github.com/zmkfirmware/zmk/pull/778&#34;&gt;https://github.com/zmkfirmware/zmk/pull/778&lt;/a&gt; is also included.&lt;/p&gt; &#xA;&lt;p&gt;Add &lt;del&gt;#define MIRYOKU_KLUDGE_MOUSEKEYSPR&lt;/del&gt; to the [[#config-file][config file]].&lt;/p&gt; &#xA;&lt;p&gt;Add &lt;del&gt;CONFIG_ZMK_MOUSE=y&lt;/del&gt; to the [[#kconfig-configuration][Kconfig configuration]].&lt;/p&gt; &#xA;&lt;p&gt;Merge the mousekeys PR branch.&lt;/p&gt; &#xA;&lt;p&gt;For [[#workflow-builds][workflow builds]], the [[#build-inputs][Build Inputs]] workflow can be used. To specify the mousekeys PR [[#branches][branch]] use &lt;del&gt;krikun98/zmk/mouse-pr&lt;/del&gt;. For [[#build-examples][Build Example]] workflows see the [[.github/workflows/build-example-mousekeyspr.yml][Build Example mousekeyspr]] workflow. The Build Example workflow also includes suggested branches for when the mousekeys PR branch is out of date. If it is too far out of date it will need to be merged manually.&lt;/p&gt; &#xA;&lt;p&gt;For local builds, make the changes locally.&lt;/p&gt; &#xA;&lt;p&gt;**&lt;/p&gt; &#xA;&lt;p&gt;[[https://github.com/manna-harbour][https://raw.githubusercontent.com/manna-harbour/miryoku/master/data/logos/manna-harbour-boa-32.png]]&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lvgl/lvgl</title>
    <updated>2022-06-09T01:34:26Z</updated>
    <id>tag:github.com,2022-06-09:/lvgl/lvgl</id>
    <link href="https://github.com/lvgl/lvgl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Powerful and easy-to-use embedded GUI library with many widgets, advanced visual effects (opacity, antialiasing, animations) and low memory requirements (16K RAM, 64K Flash).&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; LVGL - Light and Versatile Graphics Library&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://lvgl.io/assets/images/lvgl_widgets_demo.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; LVGL provides everything you need to create an embedded GUI with easy-to-use graphical elements, beautiful visual effects and a low memory footprint. &lt;/p&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt; &lt;a href=&#34;https://lvgl.io&#34;&gt;Website &lt;/a&gt; · &lt;a href=&#34;https://docs.lvgl.io/&#34;&gt;Docs&lt;/a&gt; · &lt;a href=&#34;https://forum.lvgl.io&#34;&gt;Forum&lt;/a&gt; · &lt;a href=&#34;https://lvgl.io/services&#34;&gt;Services&lt;/a&gt; · &lt;a href=&#34;https://docs.lvgl.io/master/examples.html&#34;&gt;Interactive examples&lt;/a&gt; &lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;English&lt;/strong&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/lvgl/lvgl/master/README_zh.md&#34;&gt;中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/lvgl/lvgl/master/README_pt_BR.md&#34;&gt;Português do Brasil&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;Table of content&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lvgl/lvgl/master/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lvgl/lvgl/master/#get-started&#34;&gt;Get started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lvgl/lvgl/master/#examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lvgl/lvgl/master/#services&#34;&gt;Services&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lvgl/lvgl/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Powerful &lt;a href=&#34;https://docs.lvgl.io/master/widgets/index.html&#34;&gt;building blocks&lt;/a&gt;: buttons, charts, lists, sliders, images, etc.&lt;/li&gt; &#xA; &lt;li&gt;Advanced graphics engine: animations, anti-aliasing, opacity, smooth scrolling, blending modes, etc&lt;/li&gt; &#xA; &lt;li&gt;Supports &lt;a href=&#34;https://docs.lvgl.io/master/overview/indev.html&#34;&gt;various input devices&lt;/a&gt;: touchscreen, mouse, keyboard, encoder, buttons, etc.&lt;/li&gt; &#xA; &lt;li&gt;Supports &lt;a href=&#34;https://docs.lvgl.io/master/overview/display.html&#34;&gt;multiple displays&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Hardware independent, can be use with any microcontroller and display&lt;/li&gt; &#xA; &lt;li&gt;Scalable to operate with little memory (64 kB Flash, 16 kB RAM)&lt;/li&gt; &#xA; &lt;li&gt;Multi-language support with UTF-8 handling, CJK, Bidirectional and Arabic script support&lt;/li&gt; &#xA; &lt;li&gt;Fully customizable graphical elements via &lt;a href=&#34;https://docs.lvgl.io/master/overview/style.html&#34;&gt;CSS-like styles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Powerful layouts inspired by CSS: &lt;a href=&#34;https://docs.lvgl.io/master/layouts/flex.html&#34;&gt;Flexbox&lt;/a&gt; and &lt;a href=&#34;https://docs.lvgl.io/master/layouts/grid.html&#34;&gt;Grid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;OS, External memory and GPU are supported but not required. (built in support for STM32 DMA2D, SWM341 DMA2D, and NXP PXP and VGLite)&lt;/li&gt; &#xA; &lt;li&gt;Smooth rendering even with a &lt;a href=&#34;https://docs.lvgl.io/master/porting/display.html&#34;&gt;single frame buffer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Written in C and compatible with C++&lt;/li&gt; &#xA; &lt;li&gt;Micropython Binding exposes &lt;a href=&#34;https://blog.lvgl.io/2019-02-20/micropython-bindings&#34;&gt;LVGL API in Micropython&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.lvgl.io/master/get-started/platforms/pc-simulator.html&#34;&gt;Simulator&lt;/a&gt; to develop on PC without embedded hardware&lt;/li&gt; &#xA; &lt;li&gt;100+ simple &lt;a href=&#34;https://github.com/lvgl/lvgl/tree/master/examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.lvgl.io/&#34;&gt;Documentation&lt;/a&gt; and API references online and in PDF&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;Basically, every modern controller (which is able to drive a display) is suitable to run LVGL. The minimal requirements are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;strong&gt;Name&lt;/strong&gt; &lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Minimal&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Recommended&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Architecture&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;2&#34;&gt;16, 32 or 64 bit microcontroller or processor&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;strong&gt;Clock&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &amp;gt; 16 MHz &lt;/td&gt; &#xA;   &lt;td&gt; &amp;gt; 48 MHz&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;strong&gt;Flash/ROM&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &amp;gt; 64 kB &lt;/td&gt; &#xA;   &lt;td&gt; &amp;gt; 180 kB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;strong&gt;Static RAM&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &amp;gt; 16 kB &lt;/td&gt; &#xA;   &lt;td&gt; &amp;gt; 48 kB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;strong&gt;Draw buffer&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt; &amp;gt; 1 × &lt;em&gt;hor. res.&lt;/em&gt; pixels &lt;/td&gt; &#xA;   &lt;td&gt; &amp;gt; 1/10 screen size &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;strong&gt;Compiler&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td colspan=&#34;2&#34;&gt; C99 or newer &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;Note that the memory usage might vary depending on the architecture, compiler and build options.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Supported platforms&lt;/h3&gt; &#xA;&lt;p&gt;LVGL is completely platform independent and can be used with any MCU that fulfills the requirements. Just to mention some platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;NXP: Kinetis, LPC, iMX, iMX RT&lt;/li&gt; &#xA; &lt;li&gt;STM32F1, STM32F3, STM32F4, STM32F7, STM32L4, STM32L5, STM32H7&lt;/li&gt; &#xA; &lt;li&gt;Microchip dsPIC33, PIC24, PIC32MX, PIC32MZ&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.lvgl.io/2018-01-03/linux_fb&#34;&gt;Linux frame buffer&lt;/a&gt; (/dev/fb)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.vk3erw.com/index.php/16-software/63-raspberry-pi-official-7-touchscreen-and-littlevgl&#34;&gt;Raspberry Pi&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lvgl/lv_port_esp32&#34;&gt;Espressif ESP32&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lvgl/lv_port_aurix&#34;&gt;Infineon Aurix&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Nordic NRF52 Bluetooth modules&lt;/li&gt; &#xA; &lt;li&gt;Quectel modems&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.synwit.cn/&#34;&gt;SYNWIT SWM341&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;LVGL is also available as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.lvgl.io/master/get-started/platforms/arduino.html&#34;&gt;Arduino library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://registry.platformio.org/libraries/lvgl/lvgl&#34;&gt;PlatformIO package&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.zephyrproject.org/latest/reference/kconfig/CONFIG_LVGL.html&#34;&gt;Zephyr library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.lvgl.io/master/get-started/platforms/espressif.html&#34;&gt;ESP32 component&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.nxp.com/design/software/embedded-software/lvgl-open-source-graphics-library:LITTLEVGL-OPEN-SOURCE-GRAPHICS-LIBRARY&#34;&gt;NXP MCUXpresso component&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.lvgl.io/master/get-started/os/nuttx.html&#34;&gt;NuttX library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.lvgl.io/master/get-started/os/rt-thread.html&#34;&gt;RT-Thread RTOS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get started&lt;/h2&gt; &#xA;&lt;p&gt;This list shows the recommended way of learning the library:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Check the &lt;a href=&#34;https://lvgl.io/demos&#34;&gt;Online demos&lt;/a&gt; to see LVGL in action (3 minutes)&lt;/li&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://docs.lvgl.io/master/intro/index.html&#34;&gt;Introduction&lt;/a&gt; page of the documentation (5 minutes)&lt;/li&gt; &#xA; &lt;li&gt;Get familiar with the basics on the &lt;a href=&#34;https://docs.lvgl.io/master/get-started/quick-overview.html&#34;&gt;Quick overview&lt;/a&gt; page (15 minutes)&lt;/li&gt; &#xA; &lt;li&gt;Set up a &lt;a href=&#34;https://docs.lvgl.io/master/get-started/platforms/pc-simulator.html&#34;&gt;Simulator&lt;/a&gt; (10 minutes)&lt;/li&gt; &#xA; &lt;li&gt;Try out some &lt;a href=&#34;https://github.com/lvgl/lvgl/tree/master/examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Port LVGL to a board. See the &lt;a href=&#34;https://docs.lvgl.io/master/porting/index.html&#34;&gt;Porting&lt;/a&gt; guide or check the ready to use &lt;a href=&#34;https://github.com/lvgl?q=lv_port_&#34;&gt;Projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://docs.lvgl.io/master/overview/index.html&#34;&gt;Overview&lt;/a&gt; page to get a better understanding of the library (2-3 hours)&lt;/li&gt; &#xA; &lt;li&gt;Check the documentation of the &lt;a href=&#34;https://docs.lvgl.io/master/widgets/index.html&#34;&gt;Widgets&lt;/a&gt; to see their features and usage&lt;/li&gt; &#xA; &lt;li&gt;If you have questions go to the &lt;a href=&#34;http://forum.lvgl.io/&#34;&gt;Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Read the &lt;a href=&#34;https://docs.lvgl.io/master/CONTRIBUTING.html&#34;&gt;Contributing&lt;/a&gt; guide to see how you can help to improve LVGL (15 minutes)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;For more examples see the &lt;a href=&#34;https://github.com/lvgl/lvgl/tree/master/examples&#34;&gt;examples&lt;/a&gt; folder.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lvgl/lvgl/raw/master/docs/misc/btn_example.png&#34; alt=&#34;LVGL button with label example&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;C&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;lv_obj_t * btn = lv_btn_create(lv_scr_act());                   /*Add a button to the current screen*/&#xA;lv_obj_set_pos(btn, 10, 10);                                    /*Set its position*/&#xA;lv_obj_set_size(btn, 100, 50);                                  /*Set its size*/&#xA;lv_obj_add_event_cb(btn, btn_event_cb, LV_EVENT_CLICKED, NULL); /*Assign a callback to the button*/&#xA;&#xA;lv_obj_t * label = lv_label_create(btn);                        /*Add a label to the button*/&#xA;lv_label_set_text(label, &#34;Button&#34;);                             /*Set the labels text*/&#xA;lv_obj_center(label);                                           /*Align the label to the center*/&#xA;...&#xA;&#xA;void btn_event_cb(lv_event_t * e)&#xA;{&#xA;  printf(&#34;Clicked\n&#34;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Micropython&lt;/h3&gt; &#xA;&lt;p&gt;Learn more about &lt;a href=&#34;https://docs.lvgl.io/master/get-started/bindings/micropython.html&#34;&gt;Micropython&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def btn_event_cb(e):&#xA;  print(&#34;Clicked&#34;)&#xA;&#xA;# Create a Button and a Label&#xA;btn = lv.btn(lv.scr_act())&#xA;btn.set_pos(10, 10)&#xA;btn.set_size(100, 50)&#xA;btn.add_event_cb(btn_event_cb, lv.EVENT.CLICKED, None)&#xA;&#xA;label = lv.label(btn)&#xA;label.set_text(&#34;Button&#34;)&#xA;label.center()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Services&lt;/h2&gt; &#xA;&lt;p&gt;LVGL Kft was established to provide a solid background for LVGL library. We offer several type of services to help you in UI development:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Graphics design&lt;/li&gt; &#xA; &lt;li&gt;UI implementation&lt;/li&gt; &#xA; &lt;li&gt;Consulting/Support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more information see &lt;a href=&#34;https://lvgl.io/services&#34;&gt;https://lvgl.io/services&lt;/a&gt; Feel free to contact us if you have any questions.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;LVGL is an open project and contribution is very welcome. There are many ways to contribute from simply speaking about your project, through writing examples, improving the documentation, fixing bugs to hosting your own project under the LVGL organization.&lt;/p&gt; &#xA;&lt;p&gt;For a detailed description of contribution opportunities visit the &lt;a href=&#34;https://docs.lvgl.io/master/CONTRIBUTING.html&#34;&gt;Contributing&lt;/a&gt; section of the documentation.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jsecu/ElevatedEvents</title>
    <updated>2022-06-09T01:34:26Z</updated>
    <id>tag:github.com,2022-06-09:/jsecu/ElevatedEvents</id>
    <link href="https://github.com/jsecu/ElevatedEvents" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ElevatedEvents&lt;/h1&gt; &#xA;&lt;p&gt;EventViewer UAC bypass via .NET Deserialization discovered by @OrangeTsai made into a Reflective DLL to use with Cobalt Strike.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/55005881/172065755-458f2e01-2867-4d3a-8efd-1304531ab4fb.mp4&#34;&gt;https://user-images.githubusercontent.com/55005881/172065755-458f2e01-2867-4d3a-8efd-1304531ab4fb.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Supports direct execution of executables, and doesn&#39;t rely on spawning cmd.exe through mmc.exe as shown in the original POC. However due to this command agruements are not supported.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;As this UAC bypass is currently detected by Defender, a simple bypass is utilized that renames the file back to the original after its created to avoid detection.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;OPSEC Warning&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Event Viewer will briefly flash on the victim&#39;s screen before being terminated.(Currently working on a way to avoid this behavior)&lt;/li&gt; &#xA; &lt;li&gt;When running this UAC Bypass on a user account that hasn&#39;t run Event Viewer before, you may need to run the tool twice. The first time will run Event Viewer for you and the second time will allow Event Viewer to deserialize the RecentViews file.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Compilation&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For learning how to compile reflective dlls in Visual Studio: &lt;a href=&#34;https://ijustwannared.team/2018/02/13/reflective-dlls-and-you/&#34;&gt;https://ijustwannared.team/2018/02/13/reflective-dlls-and-you/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Credits:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;@OrangeTsai-&lt;a href=&#34;https://twitter.com/orange_8361/status/1518970259868626944&#34;&gt;https://twitter.com/orange_8361/status/1518970259868626944&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ysoserial-&lt;a href=&#34;https://github.com/pwntester/ysoserial.net&#34;&gt;https://github.com/pwntester/ysoserial.net&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>