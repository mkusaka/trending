<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-25T01:32:33Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Provenance-Emu/Provenance</title>
    <updated>2022-10-25T01:32:33Z</updated>
    <id>tag:github.com,2022-10-25:/Provenance-Emu/Provenance</id>
    <link href="https://github.com/Provenance-Emu/Provenance" rel="alternate"></link>
    <summary type="html">&lt;p&gt;iOS &amp; tvOS multi-emulator frontend, supporting various Atari, Bandai, NEC, Nintendo, Sega, SNK and Sony console systems… Get Started: https://wiki.provenance-emu.com |&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34; style=&#34;text-align: center; align: center&#34;&gt; &lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.provenance-emu.com&#34; style=&#34;text-decoration:none;color:inherit;&#34;&gt;Provenance&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34; style=&#34;text-align: center; align: center&#34;&gt;An iOS &amp;amp; tvOS Frontend for Multiple Emulators&lt;/h4&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img height=&#34;512&#34; src=&#34;https://user-images.githubusercontent.com/399864/140426554-fb786580-b36b-492d-b5f9-d806ca377508.jpeg&#34;&gt; &lt;/p&gt; &#xA;&lt;div style=&#34;align:center&#34; align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/provenance-emu/Provenance/network&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/provenance-emu/Provenance.svg?style=flat-square&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/provenance-emu/Provenance/stargazers&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/provenance-emu/Provenance.svg?style=flat-square&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/Provenance-Emu/Provenance/graphs/contributors&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/provenance-emu/Provenance.svg?style=flat-square&#34;&gt; &lt;/a&gt; &#xA; &lt;img alt=&#34;GitHub all releases&#34; src=&#34;https://img.shields.io/github/downloads/provenance-emu/provenance/total?logo=github&amp;amp;style=flat-square&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;img src=&#34;https://img.shields.io/github/languages/count/provenance-emu/provenance.svg?style=flat-square&#34;&gt; &#xA; &lt;img alt=&#34;GitHub top language&#34; src=&#34;https://img.shields.io/github/languages/top/provenance-emu/provenance?style=flat-square&#34;&gt; &#xA; &lt;img alt=&#34;GitHub code size in bytes&#34; src=&#34;https://img.shields.io/github/languages/code-size/provenance-emu/provenance?style=flat-square&#34;&gt; &#xA; &lt;img alt=&#34;Lines of code&#34; src=&#34;https://img.shields.io/tokei/lines/github/provenance-emu/provenance&#34;&gt; &#xA; &lt;img alt=&#34;GitHub commit activity&#34; src=&#34;https://img.shields.io/github/commit-activity/m/Provenance-EMU/Provenance&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.patreon.com/bePatron?u=8537745&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/399864/139607496-983c7220-3aae-46f6-8369-ebd45d4c7f06.png&#34; height=&#34;65&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.amazon.com/hz/wishlist/ls/1VXOGWHIOFVMR?ref_=wl_share&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/399864/140426153-b6797d7d-c82f-4542-89ff-b29a3e70525d.jpg&#34; height=&#34;65&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;div style=&#34;align:center&#34; align=&#34;center&#34;&gt; &#xA; &lt;img alt=&#34;Open Collective backers and sponsors&#34; src=&#34;https://img.shields.io/opencollective/all/provenanceemu?logo=OpenCollective&#34;&gt; &#xA; &lt;img alt=&#34;GitHub Sponsors&#34; src=&#34;https://img.shields.io/github/sponsors/Provenance-EMU?logo=GitHub&amp;amp;style=flat-square&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Release Roadmap&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/release/provenance-emu/provenance.svg?style=flat-square&#34; alt=&#34;GitHub Release&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release-date/provenance-emu/provenance.svg?style=flat-square&#34; alt=&#34;GitHub Release Date&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/commits-since/provenance-emu/provenance/latest.svg?style=flat-square&#34; alt=&#34;Github commits (since latest release)&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/milestones/progress/provenance-emu/provenance/10?style=flat-square&#34; alt=&#34;GitHub milestone&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/provenance-emu/provenance?style=flat-square&#34; alt=&#34;GitHub last commit&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;We track upcoming releases in our GitHub &lt;a href=&#34;https://github.com/Provenance-Emu/Provenance/milestones?direction=asc&amp;amp;sort=title&amp;amp;state=open&#34;&gt;Milestones&lt;/a&gt;. Keep in mind they are subject to change.&lt;/p&gt; &#xA;&lt;h3&gt;Issues&lt;/h3&gt; &#xA;&lt;span&gt; &lt;img alt=&#34;GitHub closed issues&#34; src=&#34;https://img.shields.io/github/issues-closed-raw/provenance-emu/provenance&#34;&gt; &lt;img alt=&#34;GitHub closed pull requests&#34; src=&#34;https://img.shields.io/github/issues-pr-closed-raw/provenance-emu/provenance?style=flat-square&#34;&gt; &lt;img alt=&#34;GitHub issues&#34; src=&#34;https://img.shields.io/github/issues/provenance-emu/provenance?style=flat-square&#34;&gt; &lt;img alt=&#34;GitHub pull requests&#34; src=&#34;https://img.shields.io/github/issues-pr-raw/provenance-emu/provenance?style=flat-square&#34;&gt; &lt;/span&gt; &#xA;&lt;h3&gt;Community&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/4TK7PU5&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/421819941835243520.svg?style=flat-square&#34; alt=&#34;Discord Widget&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.twitch.tv/joe__codes&#34;&gt;&lt;img alt=&#34;Twitch Status&#34; src=&#34;https://img.shields.io/twitch/status/joe__codes?style=flat-square&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/provenanceapp.svg?style=social&amp;amp;logo=twitter&amp;amp;label=Follow&#34; alt=&#34;Twitter Follow&#34;&gt; &lt;img alt=&#34;YouTube Channel Subscribers&#34; src=&#34;https://img.shields.io/youtube/channel/subscribers/UCKeN6unYKdayfgLWulXgB1w?style=social&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;💬 Join us and the rest of the community on the &lt;a href=&#34;https://discord.gg/4TK7PU5&#34;&gt;Provenence-Emu Discord&lt;/a&gt;.&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To get started, please follow the &lt;a href=&#34;https://wiki.provenance-emu.com/installation-and-usage/installing-provenance&#34;&gt;Installation&lt;/a&gt; instructions on the wiki.&lt;/p&gt; &#xA;&lt;p&gt;&lt;sup&gt;If you run into trouble, check the &lt;a href=&#34;https://wiki.provenance-emu.com/faqs&#34;&gt;Frequently Asked Questions&lt;/a&gt; and please read up on our &lt;a href=&#34;https://github.com/Provenance-Emu/Provenance/wiki/Issues-Usage&#34;&gt;Issues Usage&lt;/a&gt; first, before posting any new issues.&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Why &#39;Provenance&#39;?&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;Provenance&lt;/em&gt; is our origin story. The word has a similar meaning to &lt;em&gt;Genesis&lt;/em&gt;, which is actually where the project started: Sega Genesis—our early beginnings as humble emulator on iOS.&lt;/p&gt; &#xA;&lt;p&gt;&lt;sup&gt; prov·e·nance &amp;nbsp; &lt;em&gt;/ˈprävənəns/&lt;/em&gt; &amp;nbsp; n. &lt;/sup&gt;&lt;br&gt; &lt;sup&gt; ¹ place of origin &amp;nbsp; ² the beginning of something&#39;s existence &lt;/sup&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Systems Supported:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Atari &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;2600&lt;/li&gt; &#xA;   &lt;li&gt;5200&lt;/li&gt; &#xA;   &lt;li&gt;7800&lt;/li&gt; &#xA;   &lt;li&gt;Lynx&lt;/li&gt; &#xA;   &lt;li&gt;Jaguar&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Bandai &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;WonderSwan / WonderSwan Color&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;NEC &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;PC Engine / TurboGrafx-16 (PCE/TG16)&lt;/li&gt; &#xA;   &lt;li&gt;PC Engine Super CD-ROM² System / TurboGrafx-CD&lt;/li&gt; &#xA;   &lt;li&gt;PC Engine SuperGrafx&lt;/li&gt; &#xA;   &lt;li&gt;PC-FX&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Nintendo &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Nintendo Entertainment System / Famicom (NES/FC)&lt;/li&gt; &#xA;   &lt;li&gt;Famicom Disk System&lt;/li&gt; &#xA;   &lt;li&gt;Super Nintendo Entertainment System / Super Famicom (SNES/SFC)&lt;/li&gt; &#xA;   &lt;li&gt;Game Boy / Game Boy Color (GB/GBC)&lt;/li&gt; &#xA;   &lt;li&gt;Virtual Boy&lt;/li&gt; &#xA;   &lt;li&gt;Nintendo 64 (N64)&lt;/li&gt; &#xA;   &lt;li&gt;Game Boy Advance (GBA)&lt;/li&gt; &#xA;   &lt;li&gt;Pokémon mini&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Sega &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;SG-1000&lt;/li&gt; &#xA;   &lt;li&gt;Master System&lt;/li&gt; &#xA;   &lt;li&gt;Genesis / Mega Drive&lt;/li&gt; &#xA;   &lt;li&gt;Game Gear&lt;/li&gt; &#xA;   &lt;li&gt;CD / MegaCD&lt;/li&gt; &#xA;   &lt;li&gt;32X&lt;/li&gt; &#xA;   &lt;li&gt;Saturn (mednafen)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;SNK &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Neo Geo Pocket / Neo Geo Pocket Color&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Sony &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;PlayStation (PSX/PS1)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Systems in Development:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Nintendo &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;DS&lt;/li&gt; &#xA;   &lt;li&gt;GameCube (Dolphin)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Sega &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Dreamcast (Flycast)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Sony &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;PSP (ppsspp)&lt;/li&gt; &#xA;   &lt;li&gt;PS2 (Play!)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Upstream projects:&lt;/h2&gt; &#xA;&lt;p&gt;Provenance would be nothing without these projects. Please consider supporting those you love or want to see improved!&lt;/p&gt; &#xA;&lt;h3&gt;Cores&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Atari800 : &lt;a href=&#34;https://atari800.github.io&#34;&gt;https://atari800.github.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CrabEMU : &lt;a href=&#34;http://crabemu.sourceforge.net&#34;&gt;http://crabemu.sourceforge.net&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Desume2015 : &lt;a href=&#34;https://github.com/flyinghead/desmume2015&#34;&gt;https://github.com/flyinghead/desmume2015&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;FCEUX : &lt;a href=&#34;http://sourceforge.net/projects/fceultra/&#34;&gt;http://sourceforge.net/projects/fceultra/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gambatte : &lt;a href=&#34;https://github.com/sinamas/gambatte&#34;&gt;https://github.com/sinamas/gambatte&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GenesisPlusGX : &lt;a href=&#34;https://github.com/ekeeke/Genesis-Plus-GX&#34;&gt;https://github.com/ekeeke/Genesis-Plus-GX&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GLideN64 : &lt;a href=&#34;https://github.com/gonetz/GLideN64&#34;&gt;https://github.com/gonetz/GLideN64&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mednafen : &lt;a href=&#34;https://mednafen.github.io&#34;&gt;https://mednafen.github.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Mupen64Plus : &lt;a href=&#34;https://github.com/mupen64plus&#34;&gt;https://github.com/mupen64plus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;O2EM : &lt;a href=&#34;https://github.com/OpenEmu/O2EM-Core&#34;&gt;https://github.com/OpenEmu/O2EM-Core&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;PicoDrive : &lt;a href=&#34;https://github.com/notaz/picodrive&#34;&gt;https://github.com/notaz/picodrive&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;PokeMini: &lt;a href=&#34;http://sourceforge.net/projects/pokemini/&#34;&gt;http://sourceforge.net/projects/pokemini/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ProSystem : &lt;a href=&#34;https://gstanton.github.io/ProSystem1_3/&#34;&gt;https://gstanton.github.io/ProSystem1_3/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Reicast : &lt;a href=&#34;https://github.com/reicast/reicast-emulator&#34;&gt;https://github.com/reicast/reicast-emulator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SNES9X : &lt;a href=&#34;http://www.snes9x.com&#34;&gt;http://www.snes9x.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stella : &lt;a href=&#34;https://stella-emu.github.io&#34;&gt;https://stella-emu.github.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;VirtualJaguar : &lt;a href=&#34;https://github.com/libretro/virtualjaguar-libretro&#34;&gt;https://github.com/libretro/virtualjaguar-libretro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;VisualBoyAdvance : &lt;a href=&#34;https://sourceforge.net/projects/vba/&#34;&gt;https://sourceforge.net/projects/vba/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Additinal Code&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;libretro : &lt;a href=&#34;https://www.libretro.com&#34;&gt;https://www.libretro.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;OpenEMU : &lt;a href=&#34;https://openemu.org&#34;&gt;https://openemu.org&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;!--WIP | Manufacture  | System | Save States | Cheats | Up-scaling | Extras |&#xA;|---|---|---|---|---|---|&#xA;|Atari| | | | |&#xA;| |2600 | X | | | |&#xA;| |5200 | X | | | |&#xA;| |7800 | X | | | |&#xA;| |Lynx | X | | | |&#xA;| |Jaguar | I | | | |&#xA;|Bandai| | | | |&#xA;| |WonderSwan (&amp;Color) | X | | | |&#xA;|NEC| | | | |&#xA;| |PC Engine / TurboGrafx-16 (PCE/TG16)| | | | | |&#xA;| |PC Engine Super CD-ROM² System / TurboGrafx-CD| | | | | |&#xA;| |PC Engine SuperGrafx| | | | | |&#xA;| |PC-FX| | | | | |&#xA;|Nintendo| | | | |&#xA;| |Nintendo Entertainment System / Famicom (NES/FC)| | | | | |&#xA;| |Famicom Disk System| | | | | |&#xA;| |Super Nintendo Entertainment System / Super Famicom (SNES/SFC)| | | | | |&#xA;| |Game Boy / Game Boy Color (GB/GBC)| | | | | |&#xA;| |Virtual Boy| | | | | |&#xA;| |Nintendo 64 (N64)| | | | | |&#xA;| |Game Boy Advance (GBA)| | | | | |&#xA;| |Pokémon mini| | | | | |&#xA;|Sega| | | | |&#xA;| |SG-1000| X | | | | |&#xA;| |Master System| X | | | | |&#xA;| |Genesis / Mega Drive| X | | | | |&#xA;| |Game Gear| X | | | | |&#xA;| |CD / MegaCD| X | | | | |&#xA;| |32X| X | | | | |&#xA;| |Saturn (mednafen)| X | | | | |&#xA;|SNK| | | | |&#xA;| |Neo Geo Pocket / Neo Geo Pocket Color | X | | | |&#xA;|Sony| | | | |&#xA;| |PlayStation (PSX/PS1)| X | | | | | --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Very Accurate, Full Speed Emulation&lt;/li&gt; &#xA; &lt;li&gt;Stereo Sound&lt;/li&gt; &#xA; &lt;li&gt;Save States (save anywhere/&lt;em&gt;game freezing&lt;/em&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Battery Saves (native game saves)&lt;/li&gt; &#xA; &lt;li&gt;Adjustable Controller Overlay Opacity&lt;/li&gt; &#xA; &lt;li&gt;Controller Support: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://mfigames.com/compare-mfi-controllers/&#34;&gt;MFi Game Controller&lt;/a&gt; Support&lt;/li&gt; &#xA;   &lt;li&gt;iCade Controller Support (&lt;a href=&#34;http://www.8bitdo.com/&#34;&gt;8bitdo&lt;/a&gt;, etc…)&lt;/li&gt; &#xA;   &lt;li&gt;8BitDo M30 Support&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Local Multiplayer via External Controllers&lt;/li&gt; &#xA; &lt;li&gt;Portrait and Landscape Orientation&lt;/li&gt; &#xA; &lt;li&gt;Cheatcode support! Currently for SNES and PSX only&lt;/li&gt; &#xA; &lt;li&gt;Automatic ROM Matching (Game Title, Cover Art, Description, Genre, etc…) via &lt;a href=&#34;https://github.com/OpenVGDB/OpenVGDB&#34;&gt;OpenVGDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;ROM Customizations (Cover Art, Game Titles) (&lt;a href=&#34;https://github.com/Provenance-Emu/Provenance/wiki/Customizing-ROMs&#34;&gt;Instructions&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Multiple Options for Managing ROMs, Game Saves and Cover Art: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://wiki.provenance-emu.com/installation-and-usage/roms/importing-roms&#34;&gt;Import&lt;/a&gt; / &lt;a href=&#34;https://wiki.provenance-emu.com/info/miscellaneous/restoring-files&#34;&gt;Export&lt;/a&gt;: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Uploading &lt;em&gt;(via built-in web server)&lt;/em&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://wiki.provenance-emu.com/installation-and-usage/roms/importing-roms&#34;&gt;Import&lt;/a&gt;: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Downloading &lt;em&gt;(from mobile browsers)&lt;/em&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Copying &lt;em&gt;(from other mobile apps and AirDrop)&lt;/em&gt;&lt;/li&gt; &#xA;     &lt;li&gt;Injecting &lt;em&gt;(with desktop apps)&lt;/em&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Game Library Searching&lt;/li&gt; &#xA; &lt;li&gt;iOS 10+ (iPhone, iPad) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;3D Touch Shortcuts for Recent Games (iPhone 6s and later, except iPhone SE and iPhone Xʀ)&lt;/li&gt; &#xA;   &lt;li&gt;Taptic Engine Button Feedback (iPhone 7 and later)&lt;/li&gt; &#xA;   &lt;li&gt;Spotlight Searching (&lt;a href=&#34;https://wiki.provenance-emu.com/installation-and-usage/installing-provenance/building-from-source#advanced-features&#34;&gt;Setup&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;tvOS 10+ (Apple TV 4+) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[broken for now] TopShelf Support (&lt;a href=&#34;https://wiki.provenance-emu.com/installation-and-usage/installing-provenance/building-from-source#advanced-features&#34;&gt;Setup&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;sub&gt;Feel free to suggest/request features or report bugs by posting an issue, but please read up on our &lt;a href=&#34;https://github.com/Provenance-Emu/Provenance/wiki/Issues-Usage&#34;&gt;Issues Usage&lt;/a&gt; first, before posting.&lt;/sub&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Importing ROMs&lt;/h3&gt; &#xA;&lt;p&gt;Visit our wiki on &lt;a href=&#34;https://wiki.provenance-emu.com/installation-and-usage/roms/importing-roms&#34;&gt;Importing ROMs&lt;/a&gt; to learn how to load ROMs into Provenance.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a id=&#34;contributions-footnote&#34;&gt;&lt;/a&gt;Contributions&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/provenance-emu/Provenance/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/provenance-emu/Provenance.svg?style=flat-square&#34; alt=&#34;GitHub open issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/provenance-emu/Provenance/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-closed-raw/provenance-emu/Provenance.svg?style=flat-square&#34; alt=&#34;GitHub closed issues&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/issues-pr-raw/provenance-emu/provenance.svg?style=flat-square&#34; alt=&#34;GitHub open pull requests&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-pr-closed-raw/provenance-emu/provenance.svg?style=flat-square&#34; alt=&#34;GitHub closed pull requests&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/provenance-emu/provenance.svg?style=flat-square&#34; alt=&#34;GitHub last commit&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/commit-activity/y/provenance-emu/provenance.svg?style=flat-square&#34; alt=&#34;GitHub commit activity the past week, 4 weeks, year&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To contribute to the Provenance project please take look at the &lt;a href=&#34;https://github.com/Provenance-Emu/Provenance/issues&#34;&gt;open issues&lt;/a&gt;. If you see something you can help with: bugfixing, testing, implementation or relevant suggestions, discussion and research.&lt;a href=&#34;https://raw.githubusercontent.com/Provenance-Emu/Provenance/develop/#contributions-footnote&#34;&gt;°&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Before posting new issues, we ask you to please read up on &lt;a href=&#34;https://github.com/Provenance-Emu/Provenance/wiki/Issues-Usage&#34;&gt;Issues Usage&lt;/a&gt;. If you just want to give us a a shout out, twitter: &lt;a href=&#34;https://twitter.com/provenanceapp&#34;&gt;@provenanceapp&lt;/a&gt;, and of course, new GitHub contributors are always welcome. &lt;em&gt;Thank you.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;sup&gt;° Please note that Issues &lt;em&gt;is not&lt;/em&gt; a discussion board &lt;em&gt;nor&lt;/em&gt; a help desk. Please help us keep it focused on improving Provenance. &lt;/sup&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Attributions&lt;/h3&gt; &#xA;&lt;p&gt;Provenance would not be possible without the great work of those who came before us and the ongoing develeopment of open-source projects that makeup the foundations of our emulation cores.&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;Atari 2600: &lt;a href=&#34;http://stella.sourceforge.net/&#34;&gt;Stella&lt;/a&gt; | Atari 5200: &lt;a href=&#34;http://atari800.sourceforge.net&#34;&gt;Atari 800&lt;/a&gt; | Atari 7800: &lt;a href=&#34;http://gstanton.github.io/ProSystem1_3/&#34;&gt;ProSystem&lt;/a&gt; | Atari Jaguar: &lt;a href=&#34;https://icculus.org/virtualjaguar/&#34;&gt;Virtual Jaguar&lt;/a&gt; | Nintendo Entertainment System/Famicom (NES/FC), Famicom Disk System (FDS): &lt;a href=&#34;http://www.fceux.com/web/home.html&#34;&gt;FCEUX&lt;/a&gt; | Super Nintendo Entertainment System/Super Famicom (SNES/SFC): &lt;a href=&#34;http://www.snes9x.com&#34;&gt;SNES9x&lt;/a&gt; | Game Boy / Game Boy Color: &lt;a href=&#34;http://gambatte.sourceforge.net/&#34;&gt;Gambatte&lt;/a&gt; | Nintendo 64 (N64): &lt;a href=&#34;https://github.com/mupen64plus&#34;&gt;Mupen64Plus&lt;/a&gt; | Game Boy Advance (GBA): &lt;a href=&#34;http://sourceforge.net/projects/vba/&#34;&gt;VisualBoyAdvance&lt;/a&gt; | Pokémon mini: &lt;a href=&#34;https://sourceforge.net/projects/pokemini/&#34;&gt;PokiMini&lt;/a&gt; | Sega Master System, Game Gear, Genesis/MegaDrive, SG-1000: &lt;a href=&#34;https://bitbucket.org/eke/genesis-plus-gx/&#34;&gt;Genesis Plus GX&lt;/a&gt; | Sega 32X: &lt;a href=&#34;https://github.com/notaz/picodrive&#34;&gt;PicoDrive&lt;/a&gt; | Atari Lynx, Bandai WonderSwan + WonderSwan Color, NEC TurboGrafx-16/PC Engine / TurboGrafx-CD/Super CD-ROM² System / SuperGrafx / PC-FX, Nintendo Entertainment System/Famicom (NES/FC) / Game Boy / Game Boy Color / Game Boy Advance / Super Nintendo Entertainment System/Super Famicom (SNES/SFC) / VirtualBoy, SNK Neo Geo Pocket / Neo Geo Pocket Color, Sony PlayStation: &lt;a href=&#34;https://mednafen.github.io&#34;&gt;Mednafen&lt;/a&gt;&lt;/sub&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;The specific implementations used in Provenance are loosely based on some of the work done by &lt;a href=&#34;http://openemu.org&#34;&gt;OpenEmu&lt;/a&gt; &lt;a href=&#34;http://github.com/OpenEmu&#34;&gt;(source)&lt;/a&gt; and &lt;a href=&#34;http://www.libretro.com&#34;&gt;RetroArch&lt;/a&gt; &lt;a href=&#34;https://github.com/libretro/RetroArch&#34;&gt;(source)&lt;/a&gt;.&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Collaborators&lt;/h3&gt; &#xA;&lt;!-- readme: collaborators -start --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/jasarien&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/104444?v=4&#34; width=&#34;100;&#34; alt=&#34;jasarien&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;James Addyman&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/JoeMatt&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/399864?v=4&#34; width=&#34;100;&#34; alt=&#34;JoeMatt&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Joe Mattiello&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/sevdestruct&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/3118097?v=4&#34; width=&#34;100;&#34; alt=&#34;sevdestruct&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Sev&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/mrjschulte&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/30782821?v=4&#34; width=&#34;100;&#34; alt=&#34;mrjschulte&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;MrJs&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- readme: collaborators -end --&gt; &#xA;&lt;h3&gt;Contributors&lt;/h3&gt; &#xA;&lt;!-- readme: JoeMatt/-,jasarien/-,sevdestruct/-,mrjschulte/-,contributors -start --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/JoeMatt&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/399864?v=4&#34; width=&#34;100;&#34; alt=&#34;JoeMatt&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Joe Mattiello&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/jasarien&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/104444?v=4&#34; width=&#34;100;&#34; alt=&#34;jasarien&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;James Addyman&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/sevdestruct&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/3118097?v=4&#34; width=&#34;100;&#34; alt=&#34;sevdestruct&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Sev&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/dnicolson&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/2276355?v=4&#34; width=&#34;100;&#34; alt=&#34;dnicolson&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Dave Nicolson&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/mrjschulte&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/30782821?v=4&#34; width=&#34;100;&#34; alt=&#34;mrjschulte&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;MrJs&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/cheif&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/678919?v=4&#34; width=&#34;100;&#34; alt=&#34;cheif&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Dan Berglund&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/braindx&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/2925848?v=4&#34; width=&#34;100;&#34; alt=&#34;braindx&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Jay Mattis&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/marcelvoss&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/5435925?v=4&#34; width=&#34;100;&#34; alt=&#34;marcelvoss&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Marcel Voss&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/josejulio&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/3845764?v=4&#34; width=&#34;100;&#34; alt=&#34;josejulio&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Josejulio Martínez&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/davidmuzi&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/1058176?v=4&#34; width=&#34;100;&#34; alt=&#34;davidmuzi&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;David Muzi&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/rafcabezas&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/1199743?v=4&#34; width=&#34;100;&#34; alt=&#34;rafcabezas&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Raf Cabezas&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/leolobato&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/134285?v=4&#34; width=&#34;100;&#34; alt=&#34;leolobato&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Leo Lobato&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/willco007&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/4294739?v=4&#34; width=&#34;100;&#34; alt=&#34;willco007&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Will Cosgrove&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/apexad&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/1437332?v=4&#34; width=&#34;100;&#34; alt=&#34;apexad&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Alex Martin&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/error404-na&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/1178084?v=4&#34; width=&#34;100;&#34; alt=&#34;error404-na&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Error404-na&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/zydeco&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/158216?v=4&#34; width=&#34;100;&#34; alt=&#34;zydeco&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Jesús A. Álvarez&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/DanielFontes&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/3082083?v=4&#34; width=&#34;100;&#34; alt=&#34;DanielFontes&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Daniel Fontes&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/stuartjmoore&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/642708?v=4&#34; width=&#34;100;&#34; alt=&#34;stuartjmoore&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Stuart Moore&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/yoshisuga&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/564774?v=4&#34; width=&#34;100;&#34; alt=&#34;yoshisuga&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Yoshisuga&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/cplr&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/10874576?v=4&#34; width=&#34;100;&#34; alt=&#34;cplr&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Cplr&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/SteveBarnegren&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/6288713?v=4&#34; width=&#34;100;&#34; alt=&#34;SteveBarnegren&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Steve Barnegren&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/jabwd&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/160014?v=4&#34; width=&#34;100;&#34; alt=&#34;jabwd&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Antwan Van Houdt&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/james-richards-privitar&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/61580341?v=4&#34; width=&#34;100;&#34; alt=&#34;james-richards-privitar&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;James Richards&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/drakkhen&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/1428488?v=4&#34; width=&#34;100;&#34; alt=&#34;drakkhen&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Drakkhen&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/thales17&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/782602?v=4&#34; width=&#34;100;&#34; alt=&#34;thales17&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Adam Richardson&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/stefz&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/573472?v=4&#34; width=&#34;100;&#34; alt=&#34;stefz&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Stefano Zanetti&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/thedrick&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/796488?v=4&#34; width=&#34;100;&#34; alt=&#34;thedrick&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Tyler Hedrick&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/entourloop&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/1938273?v=4&#34; width=&#34;100;&#34; alt=&#34;entourloop&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Entourloop&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/getaaron&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/789577?v=4&#34; width=&#34;100;&#34; alt=&#34;getaaron&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Aaron Brager&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/kckd-geocaching&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/18198902?v=4&#34; width=&#34;100;&#34; alt=&#34;kckd-geocaching&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Kckd-geocaching&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- readme: JoeMatt/-,jasarien/-,sevdestruct/-,mrjschulte/-,contributors -end --&gt; &#xA;&lt;h3&gt;Sponsors&lt;/h3&gt; &#xA;&lt;!-- readme: sponsors -start --&gt; &#xA;&lt;table&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- readme: sponsors -end --&gt; &#xA;&lt;h3&gt;Bots&lt;/h3&gt; &#xA;&lt;!-- readme: bots -start --&gt; &#xA;&lt;table&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- readme: bots -end --&gt; &#xA;&lt;hr&gt; &#xA;&lt;h4&gt;Provenance License&lt;/h4&gt; &#xA;&lt;p&gt;&lt;sub&gt;Copyright © 2021, Provenance-Emu Team. All rights reserved.&lt;/sub&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;&lt;strong&gt;Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:&lt;/strong&gt;&lt;br&gt; 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer • 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. • 3. Neither the name of the Provenance project nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.&lt;/sub&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;THIS SOFTWARE IS PROVIDED BY PROVENANCE-EMU &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL PROVENANCE-EMU OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. &lt;/sub&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt; The views and conclusions contained in the software and documentation are those of the authors and should not be interpreted as representing official policies, either expressed or implied, of Provenance-Emu Team.&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;h4&gt;OpenEmu License&lt;/h4&gt; &#xA;&lt;p&gt;&lt;sub&gt;Copyright © 2016, OpenEmu Team&lt;/sub&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;&lt;strong&gt;Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:&lt;/strong&gt;&lt;br&gt; 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. • 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. • 3. Neither the name of the OpenEmu Team nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.&lt;/sub&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;THIS SOFTWARE IS PROVIDED BY OpenEmu Team &#39;&#39;AS IS&#39;&#39; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL OpenEmu Team BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/sub&gt;&lt;br&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>xmake-io/xmake</title>
    <updated>2022-10-25T01:32:33Z</updated>
    <id>tag:github.com,2022-10-25:/xmake-io/xmake</id>
    <link href="https://github.com/xmake-io/xmake" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔥 A cross-platform build utility based on Lua&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://xmake.io&#34;&gt; &lt;img width=&#34;160&#34; heigth=&#34;160&#34; src=&#34;https://tboox.org/static/img/xmake/logo256c.png&#34;&gt; &lt;/a&gt; &#xA; &lt;h1&gt;xmake&lt;/h1&gt; &#xA; &lt;div&gt; &#xA;  &lt;a href=&#34;https://github.com/xmake-io/xmake/actions?query=workflow%3AWindows&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/workflow/status/xmake-io/xmake/Windows/master.svg?style=flat-square&amp;amp;logo=windows&#34; alt=&#34;github-ci&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://github.com/xmake-io/xmake/actions?query=workflow%3ALinux&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/workflow/status/xmake-io/xmake/Linux/master.svg?style=flat-square&amp;amp;logo=linux&#34; alt=&#34;github-ci&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://github.com/xmake-io/xmake/actions?query=workflow%3AmacOS&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/workflow/status/xmake-io/xmake/macOS/master.svg?style=flat-square&amp;amp;logo=apple&#34; alt=&#34;github-ci&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://github.com/xmake-io/xmake/releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/release/xmake-io/xmake.svg?style=flat-square&#34; alt=&#34;Github All Releases&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://aur.archlinux.org/packages/xmake&#34;&gt; &lt;img src=&#34;https://img.shields.io/aur/votes/xmake.svg?style=flat-square&#34; alt=&#34;AUR votes&#34;&gt; &lt;/a&gt; &#xA; &lt;/div&gt; &#xA; &lt;div&gt; &#xA;  &lt;a href=&#34;https://github.com/xmake-io/xmake/raw/master/LICENSE.md&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/xmake-io/xmake.svg?colorB=f48041&amp;amp;style=flat-square&#34; alt=&#34;license&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://www.reddit.com/r/xmake/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/chat-on%20reddit-ff3f34.svg?style=flat-square&#34; alt=&#34;Reddit&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://gitter.im/xmake-io/xmake?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/gitter/room/xmake-io/xmake.svg?style=flat-square&amp;amp;colorB=96c312&#34; alt=&#34;Gitter&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://t.me/tbooxorg&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/chat-on%20telegram-blue.svg?style=flat-square&#34; alt=&#34;Telegram&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=5hpwWFv&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/chat-on%20QQ-ff69b4.svg?style=flat-square&#34; alt=&#34;QQ&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://discord.gg/xmake&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/chat-on%20discord-7289da.svg?style=flat-square&#34; alt=&#34;Discord&#34;&gt; &lt;/a&gt; &#xA;  &lt;a href=&#34;https://xmake.io/#/sponsor&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/donate-us-orange.svg?style=flat-square&#34; alt=&#34;Donate&#34;&gt; &lt;/a&gt; &#xA; &lt;/div&gt; &#xA; &lt;p&gt;&lt;b&gt;A cross-platform build utility based on Lua&lt;/b&gt;&lt;br&gt; &lt;i&gt;Modern C/C++ build tool: Simple, Fast, Powerful dependency package integration&lt;/i&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Support this project&lt;/h2&gt; &#xA;&lt;p&gt;Support this project by &lt;a href=&#34;https://xmake.io/#/about/sponsor&#34;&gt;becoming a sponsor&lt;/a&gt;. Your logo will show up here with a link to your website. 🙏&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/xmake#sponsors&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/xmake/sponsors.svg?width=890&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/xmake#backers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/xmake/backers.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Technical Support&lt;/h2&gt; &#xA;&lt;p&gt;You can also consider sponsoring us to get extra technical support services via the &lt;a href=&#34;https://github.com/sponsors/waruqi&#34;&gt;Github sponsor program&lt;/a&gt;, This gives you access to the &lt;a href=&#34;https://github.com/xmake-io/technical-support&#34;&gt;xmake-io/technical-support&lt;/a&gt; repository, where you can get more information on consulting.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Handling Issues with higher priority&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; One-to-one technical consulting service&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Review your xmake.lua and provide suggestions for improvement&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction (&lt;a href=&#34;https://raw.githubusercontent.com/xmake-io/xmake/master/README_zh.md&#34;&gt;中文&lt;/a&gt;)&lt;/h2&gt; &#xA;&lt;p&gt;Xmake is a lightweight, cross-platform build utility based on Lua.&lt;/p&gt; &#xA;&lt;p&gt;It is very lightweight and has no dependencies due to the integration of the Lua runtime.&lt;/p&gt; &#xA;&lt;p&gt;It uses xmake.lua to maintain project builds with a very simple and readable syntax.&lt;/p&gt; &#xA;&lt;p&gt;We can use it to build projects directly like Make/Ninja or generate project files like CMake/Meson. It also has a built-in package management system to help users integrate C/C++ dependencies.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Xmake = Build backend + Project Generator + Package Manager + [Remote|Distributed] Build + Cache&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Although not very precise, we can still understand Xmake in the following way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Xmake ~= Make/Ninja + CMake/Meson + Vcpkg/Conan + distcc + ccache/sccache&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to know more, please refer to: &lt;a href=&#34;https://xmake.io/#/getting_started&#34;&gt;Documents&lt;/a&gt;, &lt;a href=&#34;https://github.com/xmake-io/xmake&#34;&gt;Github&lt;/a&gt; and &lt;a href=&#34;https://gitee.com/tboox/xmake&#34;&gt;Gitee&lt;/a&gt;. You are also welcome to join our &lt;a href=&#34;https://xmake.io/#/about/contact&#34;&gt;community&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://xmake.io/assets/img/index/xmake-basic-render.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h4&gt;via curl&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash &amp;lt;(curl -fsSL https://xmake.io/shget.text)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;via wget&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash &amp;lt;(wget https://xmake.io/shget.text -O -)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;via powershell&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Invoke-Expression (Invoke-Webrequest &#39;https://xmake.io/psget.text&#39; -UseBasicParsing).Content&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Other installation methods&lt;/h4&gt; &#xA;&lt;p&gt;If you don&#39;t want to use the script to install xmake, see &lt;a href=&#34;https://xmake.io/#/guide/installation&#34;&gt;Installation Guide&lt;/a&gt; for other installation methods.&lt;/p&gt; &#xA;&lt;h2&gt;Simple description&lt;/h2&gt; &#xA;&lt;img src=&#34;https://xmake.io/assets/img/index/showcode1.png&#34; width=&#34;340px&#34;&gt; &#xA;&lt;h2&gt;Package dependences&lt;/h2&gt; &#xA;&lt;img src=&#34;https://xmake.io/assets/img/index/add_require.png&#34; width=&#34;600px&#34;&gt; &#xA;&lt;p&gt;An official xmake package repository exists at: &lt;a href=&#34;https://github.com/xmake-io/xmake-repo&#34;&gt;xmake-repo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://xmake.io/assets/img/index/package.gif&#34; width=&#34;650px&#34;&gt; &#xA;&lt;h2&gt;Create project&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ xmake create hello&#xA;$ cd hello&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Build project&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ xmake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Run target&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ xmake run console&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Debug target&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ xmake run -d console&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configure platform&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ xmake f -p [windows|linux|macosx|android|iphoneos ..] -a [x86|arm64 ..] -m [debug|release]&#xA;$ xmake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Menu configuration&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ xmake f --menu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://xmake.io/assets/img/index/menuconf.png&#34; width=&#34;650px&#34;&gt; &#xA;&lt;h2&gt;Build as fast as ninja&lt;/h2&gt; &#xA;&lt;p&gt;The test project: &lt;a href=&#34;https://github.com/xmake-io/xmake/tree/master/core&#34;&gt;xmake-core&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Multi-task parallel compilation&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;buildsystem&lt;/th&gt; &#xA;   &lt;th&gt;Termux (8core/-j12)&lt;/th&gt; &#xA;   &lt;th&gt;buildsystem&lt;/th&gt; &#xA;   &lt;th&gt;MacOS (8core/-j12)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;xmake&lt;/td&gt; &#xA;   &lt;td&gt;24.890s&lt;/td&gt; &#xA;   &lt;td&gt;xmake&lt;/td&gt; &#xA;   &lt;td&gt;12.264s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ninja&lt;/td&gt; &#xA;   &lt;td&gt;25.682s&lt;/td&gt; &#xA;   &lt;td&gt;ninja&lt;/td&gt; &#xA;   &lt;td&gt;11.327s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cmake(gen+make)&lt;/td&gt; &#xA;   &lt;td&gt;5.416s+28.473s&lt;/td&gt; &#xA;   &lt;td&gt;cmake(gen+make)&lt;/td&gt; &#xA;   &lt;td&gt;1.203s+14.030s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cmake(gen+ninja)&lt;/td&gt; &#xA;   &lt;td&gt;4.458s+24.842s&lt;/td&gt; &#xA;   &lt;td&gt;cmake(gen+ninja)&lt;/td&gt; &#xA;   &lt;td&gt;0.988s+11.644s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Single task compilation&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;buildsystem&lt;/th&gt; &#xA;   &lt;th&gt;Termux (-j1)&lt;/th&gt; &#xA;   &lt;th&gt;buildsystem&lt;/th&gt; &#xA;   &lt;th&gt;MacOS (-j1)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;xmake&lt;/td&gt; &#xA;   &lt;td&gt;1m57.707s&lt;/td&gt; &#xA;   &lt;td&gt;xmake&lt;/td&gt; &#xA;   &lt;td&gt;39.937s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ninja&lt;/td&gt; &#xA;   &lt;td&gt;1m52.845s&lt;/td&gt; &#xA;   &lt;td&gt;ninja&lt;/td&gt; &#xA;   &lt;td&gt;38.995s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cmake(gen+make)&lt;/td&gt; &#xA;   &lt;td&gt;5.416s+2m10.539s&lt;/td&gt; &#xA;   &lt;td&gt;cmake(gen+make)&lt;/td&gt; &#xA;   &lt;td&gt;1.203s+41.737s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cmake(gen+ninja)&lt;/td&gt; &#xA;   &lt;td&gt;4.458s+1m54.868s&lt;/td&gt; &#xA;   &lt;td&gt;cmake(gen+ninja)&lt;/td&gt; &#xA;   &lt;td&gt;0.988s+38.022s&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Package management&lt;/h2&gt; &#xA;&lt;h3&gt;Processing architecture&lt;/h3&gt; &#xA;&lt;img src=&#34;https://xmake.io/assets/img/index/package_arch.png&#34; width=&#34;650px&#34;&gt; &#xA;&lt;h3&gt;Supported package repositories&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Official package repository &lt;a href=&#34;https://github.com/xmake-io/xmake-repo&#34;&gt;xmake-repo&lt;/a&gt; (tbox &amp;gt;1.6.1)&lt;/li&gt; &#xA; &lt;li&gt;Official package manager &lt;a href=&#34;https://github.com/xmake-io/xrepo&#34;&gt;Xrepo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://xmake.io/#/package/remote_package?id=using-self-built-private-package-repository&#34;&gt;User-built repositories&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Conan (conan::openssl/1.1.1g)&lt;/li&gt; &#xA; &lt;li&gt;Conda (conda::libpng 1.3.67)&lt;/li&gt; &#xA; &lt;li&gt;Vcpkg (vcpkg::ffmpeg)&lt;/li&gt; &#xA; &lt;li&gt;Homebrew/Linuxbrew (brew::pcre2/libpcre2-8)&lt;/li&gt; &#xA; &lt;li&gt;Pacman on archlinux/msys2 (pacman::libcurl)&lt;/li&gt; &#xA; &lt;li&gt;Apt on ubuntu/debian (apt::zlib1g-dev)&lt;/li&gt; &#xA; &lt;li&gt;Clib (clib::clibs/bytes@0.0.4)&lt;/li&gt; &#xA; &lt;li&gt;Dub (dub::log 0.4.3)&lt;/li&gt; &#xA; &lt;li&gt;Portage on Gentoo/Linux (portage::libhandy)&lt;/li&gt; &#xA; &lt;li&gt;Nimble for nimlang (nimble::zip &amp;gt;1.3)&lt;/li&gt; &#xA; &lt;li&gt;Cargo for rust (cargo::base64 0.13.0)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Package management features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The official repository provides nearly 500+ packages with one-click compilation on all platforms&lt;/li&gt; &#xA; &lt;li&gt;Full platform package support, support for cross-compiled dependent packages&lt;/li&gt; &#xA; &lt;li&gt;Support package virtual environment using &lt;code&gt;xrepo env shell&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Precompiled package acceleration for Windows&lt;/li&gt; &#xA; &lt;li&gt;Support self-built package repositories and private repository deployment&lt;/li&gt; &#xA; &lt;li&gt;Third-party package repository support for repositories such as: vcpkg, conan, conda, etc.&lt;/li&gt; &#xA; &lt;li&gt;Supports automatic pulling of remote toolchains&lt;/li&gt; &#xA; &lt;li&gt;Supports dependency version locking&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported platforms&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Windows (x86, x64)&lt;/li&gt; &#xA; &lt;li&gt;macOS (i386, x86_64, arm64)&lt;/li&gt; &#xA; &lt;li&gt;Linux (i386, x86_64, cross-toolchains ..)&lt;/li&gt; &#xA; &lt;li&gt;*BSD (i386, x86_64)&lt;/li&gt; &#xA; &lt;li&gt;Android (x86, x86_64, armeabi, armeabi-v7a, arm64-v8a)&lt;/li&gt; &#xA; &lt;li&gt;iOS (armv7, armv7s, arm64, i386, x86_64)&lt;/li&gt; &#xA; &lt;li&gt;WatchOS (armv7k, i386)&lt;/li&gt; &#xA; &lt;li&gt;AppleTVOS (armv7, arm64, i386, x86_64)&lt;/li&gt; &#xA; &lt;li&gt;MSYS (i386, x86_64)&lt;/li&gt; &#xA; &lt;li&gt;MinGW (i386, x86_64, arm, arm64)&lt;/li&gt; &#xA; &lt;li&gt;Cygwin (i386, x86_64)&lt;/li&gt; &#xA; &lt;li&gt;Wasm (wasm32)&lt;/li&gt; &#xA; &lt;li&gt;Cross (cross-toolchains ..)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported toolchains&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ xmake show -l toolchains&#xA;xcode         Xcode IDE&#xA;msvc          Microsoft Visual C/C++ Compiler&#xA;clang-cl      LLVM Clang C/C++ Compiler compatible with msvc&#xA;yasm          The Yasm Modular Assembler&#xA;clang         A C language family frontend for LLVM&#xA;go            Go Programming Language Compiler&#xA;dlang         D Programming Language Compiler&#xA;gfortran      GNU Fortran Programming Language Compiler&#xA;zig           Zig Programming Language Compiler&#xA;sdcc          Small Device C Compiler&#xA;cuda          CUDA Toolkit (nvcc, nvc, nvc++, nvfortran)&#xA;ndk           Android NDK&#xA;rust          Rust Programming Language Compiler&#xA;swift         Swift Programming Language Compiler&#xA;llvm          A collection of modular and reusable compiler and toolchain technologies&#xA;cross         Common cross compilation toolchain&#xA;nasm          NASM Assembler&#xA;gcc           GNU Compiler Collection&#xA;mingw         Minimalist GNU for Windows&#xA;gnu-rm        GNU Arm Embedded Toolchain&#xA;envs          Environment variables toolchain&#xA;fasm          Flat Assembler&#xA;tinycc        Tiny C Compiler&#xA;emcc          A toolchain for compiling to asm.js and WebAssembly&#xA;icc           Intel C/C++ Compiler&#xA;ifort         Intel Fortran Compiler&#xA;muslcc        The musl-based cross-compilation toolchain&#xA;fpc           Free Pascal Programming Language Compiler&#xA;wasi          WASI-enabled WebAssembly C/C++ toolchain&#xA;nim           Nim Programming Language Compiler&#xA;circle        A new C++20 compiler&#xA;armcc         ARM Compiler Version 5 of Keil MDK&#xA;armclang      ARM Compiler Version 6 of Keil MDK&#xA;c51           Keil development tools for the 8051 Microcontroller Architecture&#xA;icx           Intel LLVM C/C++ Compiler&#xA;dpcpp         Intel LLVM C++ Compiler for data parallel programming model based on Khronos SYCL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Supported Languages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;C&lt;/li&gt; &#xA; &lt;li&gt;C++&lt;/li&gt; &#xA; &lt;li&gt;Objective-C and Objective-C++&lt;/li&gt; &#xA; &lt;li&gt;Swift&lt;/li&gt; &#xA; &lt;li&gt;Assembly&lt;/li&gt; &#xA; &lt;li&gt;Golang&lt;/li&gt; &#xA; &lt;li&gt;Rust&lt;/li&gt; &#xA; &lt;li&gt;Dlang&lt;/li&gt; &#xA; &lt;li&gt;Fortran&lt;/li&gt; &#xA; &lt;li&gt;Cuda&lt;/li&gt; &#xA; &lt;li&gt;Zig&lt;/li&gt; &#xA; &lt;li&gt;Vala&lt;/li&gt; &#xA; &lt;li&gt;Pascal&lt;/li&gt; &#xA; &lt;li&gt;Nim&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The configuration grammar is simple and easy to use&lt;/li&gt; &#xA; &lt;li&gt;Quick, dependency-free installation&lt;/li&gt; &#xA; &lt;li&gt;One-click compilation for all platforms&lt;/li&gt; &#xA; &lt;li&gt;Supports cross compilation with intelligent analysis of cross toolchain information&lt;/li&gt; &#xA; &lt;li&gt;Extremely fast parallel compilation support&lt;/li&gt; &#xA; &lt;li&gt;C++20 module support&lt;/li&gt; &#xA; &lt;li&gt;Supports cross-platform C/C++ dependencies with built-in package manager&lt;/li&gt; &#xA; &lt;li&gt;Multi-language compilation support including mixed-language projects.&lt;/li&gt; &#xA; &lt;li&gt;Rich plug-in support with various project generators (ex. vs/makefile/cmakelists/compile_commands)&lt;/li&gt; &#xA; &lt;li&gt;REPL interactive execution support&lt;/li&gt; &#xA; &lt;li&gt;Incremental compilation support with automatic analysis of header files&lt;/li&gt; &#xA; &lt;li&gt;Quick toolchain management&lt;/li&gt; &#xA; &lt;li&gt;A large number of expansion modules&lt;/li&gt; &#xA; &lt;li&gt;Remote compilation support&lt;/li&gt; &#xA; &lt;li&gt;Distributed compilation support&lt;/li&gt; &#xA; &lt;li&gt;Local and remote build cache support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Static Library&lt;/li&gt; &#xA; &lt;li&gt;Shared Library&lt;/li&gt; &#xA; &lt;li&gt;Console&lt;/li&gt; &#xA; &lt;li&gt;Cuda Program&lt;/li&gt; &#xA; &lt;li&gt;Qt Application&lt;/li&gt; &#xA; &lt;li&gt;WDK Driver (umdf/kmdf/wdm)&lt;/li&gt; &#xA; &lt;li&gt;WinSDK Application&lt;/li&gt; &#xA; &lt;li&gt;MFC Application&lt;/li&gt; &#xA; &lt;li&gt;iOS/MacOS Application (Support .metal)&lt;/li&gt; &#xA; &lt;li&gt;Framework and Bundle Program (iOS/MacOS)&lt;/li&gt; &#xA; &lt;li&gt;SWIG Modules (Lua, python, ...)&lt;/li&gt; &#xA; &lt;li&gt;Luarocks Modules&lt;/li&gt; &#xA; &lt;li&gt;Protobuf Program&lt;/li&gt; &#xA; &lt;li&gt;Lex/yacc program&lt;/li&gt; &#xA; &lt;li&gt;C++20 Modules&lt;/li&gt; &#xA; &lt;li&gt;Linux Kernel Driver Modules&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Distributed Compilation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Cross-platform support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support for msvc, clang, gcc and cross-compilation toolchain&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support for building android, ios, linux, win, macOS programs&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; No dependencies other than the compilation toolchain&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support for build server load balancing scheduling&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support for real time compressed transfer of large files (lz4)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Almost zero configuration cost, no shared filesystem required, more convenience and security&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;About distributed compilation and build cache, you can see:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://xmake.io/#/features/distcc_build&#34;&gt;Distributed Compilation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://xmake.io/#/features/build_cache&#34;&gt;Build Cache&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Remote Compilation&lt;/h2&gt; &#xA;&lt;p&gt;For more details see: &lt;a href=&#34;https://xmake.io/#/features/remote_build&#34;&gt;Remote Compilation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;More Examples&lt;/h2&gt; &#xA;&lt;h4&gt;Debug and release profiles&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;add_rules(&#34;mode.debug&#34;, &#34;mode.release&#34;)&#xA;&#xA;target(&#34;console&#34;)&#xA;    set_kind(&#34;binary&#34;)&#xA;    add_files(&#34;src/*.c&#34;)&#xA;    if is_mode(&#34;debug&#34;) then&#xA;        add_defines(&#34;DEBUG&#34;)&#xA;    end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Custom scripts&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;target(&#34;test&#34;)&#xA;    set_kind(&#34;binary&#34;)&#xA;    add_files(&#34;src/*.c&#34;)&#xA;    after_build(function (target)&#xA;        print(&#34;hello: %s&#34;, target:name())&#xA;        os.exec(&#34;echo %s&#34;, target:targetfile())&#xA;    end)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Automatic integration of dependent packages&lt;/h4&gt; &#xA;&lt;p&gt;Download and use packages in &lt;a href=&#34;https://github.com/xmake-io/xmake-repo&#34;&gt;xmake-repo&lt;/a&gt; or third-party repositories:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;add_requires(&#34;tbox &amp;gt;1.6.1&#34;, &#34;libuv master&#34;, &#34;vcpkg::ffmpeg&#34;, &#34;brew::pcre2/libpcre2-8&#34;)&#xA;add_requires(&#34;conan::openssl/1.1.1g&#34;, {alias = &#34;openssl&#34;, optional = true, debug = true})&#xA;target(&#34;test&#34;)&#xA;    set_kind(&#34;binary&#34;)&#xA;    add_files(&#34;src/*.c&#34;)&#xA;    add_packages(&#34;tbox&#34;, &#34;libuv&#34;, &#34;vcpkg::ffmpeg&#34;, &#34;brew::pcre2/libpcre2-8&#34;, &#34;openssl&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In addition, we can also use the &lt;a href=&#34;https://github.com/xmake-io/xrepo&#34;&gt;xrepo&lt;/a&gt; command to quickly install dependencies.&lt;/p&gt; &#xA;&lt;h4&gt;Qt QuickApp Program&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;target(&#34;test&#34;)&#xA;    add_rules(&#34;qt.quickapp&#34;)&#xA;    add_files(&#34;src/*.cpp&#34;)&#xA;    add_files(&#34;src/qml.qrc&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Cuda Program&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;target(&#34;test&#34;)&#xA;    set_kind(&#34;binary&#34;)&#xA;    add_files(&#34;src/*.cu&#34;)&#xA;    add_cugencodes(&#34;native&#34;)&#xA;    add_cugencodes(&#34;compute_35&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;WDK/UMDF Driver Program&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;target(&#34;echo&#34;)&#xA;    add_rules(&#34;wdk.driver&#34;, &#34;wdk.env.umdf&#34;)&#xA;    add_files(&#34;driver/*.c&#34;)&#xA;    add_files(&#34;driver/*.inx&#34;)&#xA;    add_includedirs(&#34;exe&#34;)&#xA;&#xA;target(&#34;app&#34;)&#xA;    add_rules(&#34;wdk.binary&#34;, &#34;wdk.env.umdf&#34;)&#xA;    add_files(&#34;exe/*.cpp&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More wdk driver program examples exist (umdf/kmdf/wdm), please see &lt;a href=&#34;https://xmake.io/#/guide/project_examples?id=wdk-driver-program&#34;&gt;WDK Program Examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;iOS/MacOS Application&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;target(&#34;test&#34;)&#xA;    add_rules(&#34;xcode.application&#34;)&#xA;    add_files(&#34;src/*.m&#34;, &#34;src/**.storyboard&#34;, &#34;src/*.xcassets&#34;)&#xA;    add_files(&#34;src/Info.plist&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Framework and Bundle Program (iOS/MacOS)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;target(&#34;test&#34;)&#xA;    add_rules(&#34;xcode.framework&#34;) -- or xcode.bundle&#xA;    add_files(&#34;src/*.m&#34;)&#xA;    add_files(&#34;src/Info.plist&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;OpenMP Program&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;add_requires(&#34;libomp&#34;, {optional = true})&#xA;target(&#34;loop&#34;)&#xA;    set_kind(&#34;binary&#34;)&#xA;    add_files(&#34;src/*.cpp&#34;)&#xA;    add_rules(&#34;c++.openmp&#34;)&#xA;    add_packages(&#34;libomp&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Zig Program&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;target(&#34;test&#34;)&#xA;    set_kind(&#34;binary&#34;)&#xA;    add_files(&#34;src/main.zig&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Automatically fetch remote toolchain&lt;/h3&gt; &#xA;&lt;h4&gt;fetch a special version of llvm&lt;/h4&gt; &#xA;&lt;p&gt;We use Clang in &lt;code&gt;llvm-10&lt;/code&gt; to compile the project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;add_requires(&#34;llvm 10.x&#34;, {alias = &#34;llvm-10&#34;})&#xA;target(&#34;test&#34;)&#xA;    set_kind(&#34;binary&#34;)&#xA;    add_files(&#34;src/*.c&#34;)&#xA;    set_toolchains(&#34;llvm@llvm-10&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Fetch cross-compilation toolchain&lt;/h4&gt; &#xA;&lt;p&gt;We can also pull a specified cross-compilation toolchain to compile the project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;add_requires(&#34;muslcc&#34;)&#xA;target(&#34;test&#34;)&#xA;    set_kind(&#34;binary&#34;)&#xA;    add_files(&#34;src/*.c&#34;)&#xA;    set_toolchains(&#34;@muslcc&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Fetch toolchain and packages&lt;/h4&gt; &#xA;&lt;p&gt;We can also use the specified &lt;code&gt;muslcc&lt;/code&gt; cross-compilation toolchain to compile and integrate all dependent packages&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;add_requires(&#34;muslcc&#34;)&#xA;add_requires(&#34;zlib&#34;, &#34;libogg&#34;, {system = false})&#xA;&#xA;set_toolchains(&#34;@muslcc&#34;)&#xA;&#xA;target(&#34;test&#34;)&#xA;    set_kind(&#34;binary&#34;)&#xA;    add_files(&#34;src/*.c&#34;)&#xA;    add_packages(&#34;zlib&#34;, &#34;libogg&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;h4&gt;Generate IDE project file plugin（makefile, vs2002 - vs2022 .. ）&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ xmake project -k vsxmake -m &#34;debug,release&#34; # New vsproj generator (Recommended)&#xA;$ xmake project -k vs -m &#34;debug,release&#34;&#xA;$ xmake project -k cmake&#xA;$ xmake project -k ninja&#xA;$ xmake project -k compile_commands&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Run a custom lua script plugin&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ xmake l ./test.lua&#xA;$ xmake l -c &#34;print(&#39;hello xmake!&#39;)&#34;&#xA;$ xmake l lib.detect.find_tool gcc&#xA;$ xmake l&#xA;&amp;gt; print(&#34;hello xmake!&#34;)&#xA;&amp;gt; {1, 2, 3}&#xA;&amp;lt; {&#xA;    1,&#xA;    2,&#xA;    3&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More builtin plugins exist, please see: &lt;a href=&#34;https://xmake.io/#/plugin/builtin_plugins&#34;&gt;Builtin plugins&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please download and install other plugins from the plugins repository &lt;a href=&#34;https://github.com/xmake-io/xmake-plugins&#34;&gt;xmake-plugins&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;IDE/Editor Integration&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xmake-io/xmake-vscode&#34;&gt;xmake-vscode&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/xmake-io/xmake-vscode/master/res/problem.gif&#34; width=&#34;650px&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xmake-io/xmake-sublime&#34;&gt;xmake-sublime&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/xmake-io/xmake-sublime/master/res/problem.gif&#34; width=&#34;650px&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xmake-io/xmake-idea&#34;&gt;xmake-idea&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/xmake-io/xmake-idea/master/res/problem.gif&#34; width=&#34;650px&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/luzhlon/xmake.vim&#34;&gt;xmake.vim&lt;/a&gt; (third-party, thanks &lt;a href=&#34;https://github.com/luzhlon&#34;&gt;@luzhlon&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/HelloWorld886/xmake-visualstudio&#34;&gt;xmake-visualstudio&lt;/a&gt; (third-party, thanks &lt;a href=&#34;https://github.com/HelloWorld886&#34;&gt;@HelloWorld886&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Arthapz/xmake-project-manager&#34;&gt;xmake-qtcreator&lt;/a&gt; (third-party, thanks &lt;a href=&#34;https://github.com/Arthapz&#34;&gt;@Arthapz&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;XMake Gradle Plugin (JNI)&lt;/h3&gt; &#xA;&lt;p&gt;We can use the &lt;a href=&#34;https://github.com/xmake-io/xmake-gradle&#34;&gt;xmake-gradle&lt;/a&gt; plugin to compile JNI libraries via gradle.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;plugins {&#xA;  id &#39;org.tboox.gradle-xmake-plugin&#39; version &#39;1.1.5&#39;&#xA;}&#xA;&#xA;android {&#xA;    externalNativeBuild {&#xA;        xmake {&#xA;            path &#34;jni/xmake.lua&#34;&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;xmakeBuild&lt;/code&gt; task will be injected into the &lt;code&gt;assemble&lt;/code&gt; task automatically if the &lt;code&gt;gradle-xmake-plugin&lt;/code&gt; has been applied.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ ./gradlew app:assembleDebug&#xA;&amp;gt; Task :nativelib:xmakeConfigureForArm64&#xA;&amp;gt; Task :nativelib:xmakeBuildForArm64&#xA;&amp;gt;&amp;gt; xmake build&#xA;[ 50%]: ccache compiling.debug nativelib.cc&#xA;[ 75%]: linking.debug libnativelib.so&#xA;[100%]: build ok!&#xA;&amp;gt;&amp;gt; install artifacts to /Users/ruki/projects/personal/xmake-gradle/nativelib/libs/arm64-v8a&#xA;&amp;gt; Task :nativelib:xmakeConfigureForArmv7&#xA;&amp;gt; Task :nativelib:xmakeBuildForArmv7&#xA;&amp;gt;&amp;gt; xmake build&#xA;[ 50%]: ccache compiling.debug nativelib.cc&#xA;[ 75%]: linking.debug libnativelib.so&#xA;[100%]: build ok!&#xA;&amp;gt;&amp;gt; install artifacts to /Users/ruki/projects/personal/xmake-gradle/nativelib/libs/armeabi-v7a&#xA;&amp;gt; Task :nativelib:preBuild&#xA;&amp;gt; Task :nativelib:assemble&#xA;&amp;gt; Task :app:assembleDebug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;CI Integration&lt;/h2&gt; &#xA;&lt;h3&gt;GitHub Action&lt;/h3&gt; &#xA;&lt;p&gt;We can use &lt;a href=&#34;https://github.com/xmake-io/github-action-setup-xmake&#34;&gt;github-action-setup-xmake&lt;/a&gt; to setup Xmake in Github Actions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;uses: xmake-io/github-action-setup-xmake@v1&#xA;with:&#xA;  xmake-version: latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Who is using Xmake?&lt;/h2&gt; &#xA;&lt;p&gt;The user list is available &lt;a href=&#34;https://xmake.io/#/about/who_is_using_xmake&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are using xmake, you are welcome to submit your information to the above list through a PR, so that others can know how many users are using it.&lt;/p&gt; &#xA;&lt;p&gt;This also let users use xmake more confidently and give us motivation to continue to maintain it. This will help the xmake project and it&#39;s community to grow stronger.&lt;/p&gt; &#xA;&lt;h2&gt;Contacts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Email：&lt;a href=&#34;mailto:waruqi@gmail.com&#34;&gt;waruqi@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Homepage：&lt;a href=&#34;https://xmake.io&#34;&gt;xmake.io&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Community &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/xmake/&#34;&gt;Chat on reddit&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://t.me/tbooxorg&#34;&gt;Chat on telegram&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://gitter.im/xmake-io/xmake?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;Chat on gitter&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://discord.gg/xmake&#34;&gt;Chat on discord&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Chat on QQ Group: 343118190, 662147501&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Source Code：&lt;a href=&#34;https://github.com/xmake-io/xmake&#34;&gt;Github&lt;/a&gt;, &lt;a href=&#34;https://gitee.com/tboox/xmake&#34;&gt;Gitee&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Wechat Public: tboox-os&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;This project exists thanks to all the people who have &lt;a href=&#34;https://raw.githubusercontent.com/xmake-io/xmake/master/CONTRIBUTING.md&#34;&gt;contributed&lt;/a&gt;: &lt;a href=&#34;https://github.com/xmake-io/xmake/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/xmake/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TitanSnow&#34;&gt;TitanSnow&lt;/a&gt;: provide the xmake &lt;a href=&#34;https://github.com/TitanSnow/ts-xmake-logo&#34;&gt;logo&lt;/a&gt; and install scripts&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uael&#34;&gt;uael&lt;/a&gt;: provide the semantic versioning library &lt;a href=&#34;https://github.com/uael/sv&#34;&gt;sv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/OpportunityLiu&#34;&gt;OpportunityLiu&lt;/a&gt;: improve cuda, tests and ci&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/xq114&#34;&gt;xq144&lt;/a&gt;: Improve &lt;code&gt;xrepo env shell&lt;/code&gt;, and contribute a lot of packages to the &lt;a href=&#34;https://github.com/xmake-io/xmake-repo&#34;&gt;xmake-repo&lt;/a&gt; repository.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;enderger&lt;/code&gt;: Helped smooth out the edges on the English translation of the README&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Dav1dde/glad</title>
    <updated>2022-10-25T01:32:33Z</updated>
    <id>tag:github.com,2022-10-25:/Dav1dde/glad</id>
    <link href="https://github.com/Dav1dde/glad" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Multi-Language Vulkan/GL/GLES/EGL/GLX/WGL Loader-Generator based on the official specs.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;glad&lt;/h1&gt; &#xA;&lt;p&gt;Vulkan/GL/GLES/EGL/GLX/WGL Loader-Generator based on the official specifications for multiple languages.&lt;/p&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://glad.sh&#34;&gt;webservice for glad2&lt;/a&gt; to generate the files you need!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This is the 2.0 branch, which adds more functionality but changes the API.&lt;/p&gt; &#xA;&lt;p&gt;Some languages are only available in the &lt;a href=&#34;https://glad.dav1d.de&#34;&gt;glad1 generator&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;#include &amp;lt;glad/gl.h&amp;gt;&#xA;// GLFW (include after glad)&#xA;#include &amp;lt;GLFW/glfw3.h&amp;gt;&#xA;&#xA;&#xA;int main() {&#xA;    // -- snip --&#xA;&#xA;    GLFWwindow* window = glfwCreateWindow(WIDTH, HEIGHT, &#34;LearnOpenGL&#34;, NULL, NULL);&#xA;    glfwMakeContextCurrent(window);&#xA;&#xA;    int version = gladLoadGL(glfwGetProcAddress);&#xA;    if (version == 0) {&#xA;        printf(&#34;Failed to initialize OpenGL context\n&#34;);&#xA;        return -1;&#xA;    }&#xA;&#xA;    // Successfully loaded OpenGL&#xA;    printf(&#34;Loaded OpenGL %d.%d\n&#34;, GLAD_VERSION_MAJOR(version), GLAD_VERSION_MINOR(version));&#xA;&#xA;    // -- snip --&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The full code: &lt;a href=&#34;https://raw.githubusercontent.com/Dav1dde/glad/glad2/example/c++/hellowindow2.cpp&#34;&gt;hellowindow2.cpp&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;More examples in the &lt;a href=&#34;https://raw.githubusercontent.com/Dav1dde/glad/glad2/example/&#34;&gt;examples directory&lt;/a&gt; of this repository.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The documentation can be found in the &lt;a href=&#34;https://github.com/Dav1dde/glad/wiki&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Examples can be found &lt;a href=&#34;https://raw.githubusercontent.com/Dav1dde/glad/glad2/example&#34;&gt;in the example directory&lt;/a&gt;. Some examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;C/C++ &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Dav1dde/glad/glad2/example/c/gl_glfw.c&#34;&gt;GL GLFW&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Dav1dde/glad/glad2/example/c/gl_glfw_on_demand.c&#34;&gt;GL GLFW On-Demand loading&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Dav1dde/glad/glad2/example/c++/multiwin_mx/&#34;&gt;GL GLFW Multiple Windows/Contexts&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Dav1dde/glad/glad2/example/c/gl_sdl2.c&#34;&gt;GL SDL2&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Dav1dde/glad/glad2/example/c/vulkan_tri_glfw/&#34;&gt;Vulkan GLFW&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Dav1dde/glad/glad2/example/c/glx.c&#34;&gt;GLX&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Dav1dde/glad/glad2/example/c/glx_modern.c&#34;&gt;GLX Modern&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Dav1dde/glad/glad2/example/c/wgl.c&#34;&gt;WGL&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Dav1dde/glad/glad2/example/c/egl_x11/&#34;&gt;EGL X11&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Rust &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Dav1dde/glad/glad2/example/rust/gl-glfw/&#34;&gt;GL GLFW&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Dav1dde/glad/glad2/example/rust/gl-glfw-mx/&#34;&gt;GL GLFW Multiple Windows/Contexts&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;For the source code and various Khronos files see &lt;a href=&#34;https://raw.githubusercontent.com/Dav1dde/glad/glad2/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The generated code from glad is any of Public Domain, WTFPL or CC0. Now Khronos has some of their specifications under Apache Version 2.0 license which may have an impact on the generated code, &lt;a href=&#34;https://github.com/KhronosGroup/OpenGL-Registry/issues/376#issuecomment-596187053&#34;&gt;see this clarifying comment&lt;/a&gt; on the Khronos / OpenGL-Specification issue tracker.&lt;/p&gt;</summary>
  </entry>
</feed>