<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-05T01:29:20Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>StuckAtPrototype/Racer</title>
    <updated>2025-02-05T01:29:20Z</updated>
    <id>tag:github.com,2025-02-05:/StuckAtPrototype/Racer</id>
    <link href="https://github.com/StuckAtPrototype/Racer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Micro Racer Car - StuckAtPrototype&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;thank you for the overwhelmingly positve support!! such an inspiration to keep making fun open source content!&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Youtube Video&lt;/h2&gt; &#xA;&lt;p&gt;A bit of a back-story of how this project came to be.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=6jzG-BMannc&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/6jzG-BMannc/0.jpg&#34; alt=&#34;My Kickstarter failed, so I open sourced it&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Sub if you like what you see.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Some pictures of the project&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/StuckAtPrototype/Racer/master/project_pictures/242A0548.png&#34; alt=&#34;Picture of PCB car&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/StuckAtPrototype/Racer/master/project_pictures/242A1274.png&#34; alt=&#34;Picture of PCB car&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Hardware Remote for this car&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/StuckAtPrototype/Thumbtroller&#34;&gt;https://github.com/StuckAtPrototype/Thumbtroller&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Project Structure&lt;/h2&gt; &#xA;&lt;p&gt;The project consists of&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Firmware&lt;/li&gt; &#xA; &lt;li&gt;Hardware&lt;/li&gt; &#xA; &lt;li&gt;Mechanical&lt;/li&gt; &#xA; &lt;li&gt;Scripts&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;These are structured into their own files. I could have used submodules, but decided against it.&lt;/p&gt; &#xA;&lt;h3&gt;1. Firmware&lt;/h3&gt; &#xA;&lt;p&gt;Code for the little car. This lives on the ESP32&lt;/p&gt; &#xA;&lt;h4&gt;Requirements&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ESP32 IDF version 5.3.1&lt;/li&gt; &#xA; &lt;li&gt;USB to Serial dongle&lt;/li&gt; &#xA; &lt;li&gt;Target set to ESP32-H2&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2. Hardware&lt;/h3&gt; &#xA;&lt;h4&gt;Schematic&lt;/h4&gt; &#xA;&lt;p&gt;PDF schematic included for your viewing pleasure.&lt;/p&gt; &#xA;&lt;h4&gt;PCBs&lt;/h4&gt; &#xA;&lt;p&gt;All the gerber files you&#39;d need to send to a fab house.&lt;/p&gt; &#xA;&lt;h4&gt;Kicad&lt;/h4&gt; &#xA;&lt;p&gt;All the files you&#39;d need to expand and work on this further. If you&#39;d like.&lt;/p&gt; &#xA;&lt;h3&gt;3. Mechanical&lt;/h3&gt; &#xA;&lt;h4&gt;Enclosure&lt;/h4&gt; &#xA;&lt;p&gt;All the step files you need to make one of these. Extrusion printer works well for this part.&lt;/p&gt; &#xA;&lt;h4&gt;Wheels&lt;/h4&gt; &#xA;&lt;p&gt;A bit of caution on this one.. you&#39;ll need an SLA printer.&lt;/p&gt; &#xA;&lt;h3&gt;4. Scripts&lt;/h3&gt; &#xA;&lt;p&gt;Did anyone say neural networks?&lt;/p&gt; &#xA;&lt;p&gt;This folder has all the python code you&#39;d need to train up your own neural network for the car. It also consists scripts that let you drive it using a keyboard -- just in case you dont want to make a physical controller.&lt;/p&gt; &#xA;&lt;h4&gt;Requirements&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3&lt;/li&gt; &#xA; &lt;li&gt;You&#39;ll need to install a bunch of pip modules&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Training the neural network&lt;/h4&gt; &#xA;&lt;p&gt;Training the neural network is as simple as running the training script with the data in the &lt;code&gt;color_data.txt&lt;/code&gt; file. For data format see the sample data in the file. You need to stick to the formatting.&lt;/p&gt; &#xA;&lt;p&gt;To train run &lt;code&gt;python trainer.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Keyboard controller&lt;/h4&gt; &#xA;&lt;p&gt;To run the script &lt;code&gt;python controller.py&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use &lt;code&gt;w&lt;/code&gt; &lt;code&gt;s&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; &lt;code&gt;d&lt;/code&gt; for control. Modify the script for different speeds, etc&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Protocol for motor control&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;60,1,60,1,5 -- translates to:&lt;/p&gt; &#xA;&lt;p&gt;motor side A: speed 60, direction forward&lt;/p&gt; &#xA;&lt;p&gt;motor side B: speed 60, direction forward&lt;/p&gt; &#xA;&lt;p&gt;500 miliseconds run time&lt;/p&gt; &#xA;&lt;p&gt;See firmware file &lt;code&gt;motor.c&lt;/code&gt; if you need more details&lt;/p&gt; &#xA;&lt;h2&gt;What the project could use&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Cleanup, but thats true for almost anything out there&lt;/li&gt; &#xA; &lt;li&gt;Some fun code that makes the little car drive using the color sensor -- think very fancy line follower&lt;/li&gt; &#xA; &lt;li&gt;LLM integration -- ChatGPT driving a physical little robot? anyone? :)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;If you take it further&lt;/h2&gt; &#xA;&lt;p&gt;Let me know if you ever make one of these, I&#39;d love to see it. Seriously, that&#39;d be exciting and inspiring to keep making my projects open source!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;h3&gt;Apache 2.0 -- i.e. use as you&#39;d like&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Special Thanks&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to Michael Angerer for his open sourced &lt;code&gt;esp32_ble_ota&lt;/code&gt; project. I used it to get BLE running in this project. His blog post and github repo are a great resource. Check it out. &lt;a href=&#34;https://github.com/michael-angerer/esp32_ble_ota&#34;&gt;https://github.com/michael-angerer/esp32_ble_ota&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>