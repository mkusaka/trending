<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-16T01:29:38Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>KhronosGroup/Vulkan-Loader</title>
    <updated>2024-06-16T01:29:38Z</updated>
    <id>tag:github.com,2024-06-16:/KhronosGroup/Vulkan-Loader</id>
    <link href="https://github.com/KhronosGroup/Vulkan-Loader" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Vulkan Loader&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Vulkan Loader&lt;/h1&gt; &#xA;&lt;p&gt;This project provides the Khronos official Vulkan Loader for all platforms except &lt;a href=&#34;https://android.googlesource.com/platform/frameworks/native/+/master/vulkan/&#34;&gt;Android&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Vulkan is an explicit API, enabling direct control over how GPUs actually work. As such, Vulkan supports systems that have multiple GPUs, each running with a different driver, or ICD (Installable Client Driver). Vulkan also supports multiple global contexts (instances, in Vulkan terminology). The ICD loader is a library that is placed between a Vulkan application and any number of Vulkan drivers, in order to support multiple drivers and the instance-level functionality that works across these drivers. Additionally, the loader manages inserting Vulkan layer libraries, such as validation layers, between an application and the drivers.&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the Vulkan loader that is used for Linux, Windows, MacOS, and iOS. There is also a separate loader, maintained by Google, which is used on Android.&lt;/p&gt; &#xA;&lt;p&gt;The following components are available in this repository:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/KhronosGroup/Vulkan-Loader/main/loader/&#34;&gt;ICD Loader&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/KhronosGroup/Vulkan-Loader/main/docs/LoaderInterfaceArchitecture.md&#34;&gt;Loader Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/KhronosGroup/Vulkan-Loader/main/tests/&#34;&gt;Tests&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contact Information&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:charles@lunarg.com&#34;&gt;Charles Giessen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:marky@lunarg.com&#34;&gt;Mark Young&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Information for Developing or Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://raw.githubusercontent.com/KhronosGroup/Vulkan-Loader/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; file in this repository for more details. Please see the &lt;a href=&#34;https://raw.githubusercontent.com/KhronosGroup/Vulkan-Loader/main/GOVERNANCE.md&#34;&gt;GOVERNANCE.md&lt;/a&gt; file in this repository for repository management details.&lt;/p&gt; &#xA;&lt;h2&gt;How to Build and Run&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/KhronosGroup/Vulkan-Loader/main/BUILD.md&#34;&gt;BUILD.md&lt;/a&gt; includes directions for building all components.&lt;/p&gt; &#xA;&lt;p&gt;Architecture and interface information for the loader is in &lt;a href=&#34;https://raw.githubusercontent.com/KhronosGroup/Vulkan-Loader/main/docs/LoaderInterfaceArchitecture.md&#34;&gt;docs/LoaderInterfaceArchitecture.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Version Tagging Scheme&lt;/h2&gt; &#xA;&lt;p&gt;Updates to this repository which correspond to a new Vulkan specification release are tagged using the following format: &lt;code&gt;v&amp;lt;&lt;/code&gt;&lt;em&gt;&lt;code&gt;version&lt;/code&gt;&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; (e.g., &lt;code&gt;v1.3.266&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Marked version releases have undergone thorough testing but do not imply the same quality level as SDK tags. SDK tags follow the &lt;code&gt;vulkan-sdk-&amp;lt;&lt;/code&gt;&lt;em&gt;&lt;code&gt;version&lt;/code&gt;&lt;/em&gt;&lt;code&gt;&amp;gt;.&amp;lt;&lt;/code&gt;&lt;em&gt;&lt;code&gt;patch&lt;/code&gt;&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; format (e.g., &lt;code&gt;vulkan-sdk-1.3.266.0&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;This scheme was adopted following the &lt;code&gt;1.3.266&lt;/code&gt; Vulkan specification release.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This work is released as open source under a Apache-style license from Khronos including a Khronos copyright.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;While this project has been developed primarily by LunarG, Inc., there are many other companies and individuals making this possible: Valve Corporation, funding project development; Khronos providing oversight and hosting of the project.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>a0rtega/pafish</title>
    <updated>2024-06-16T01:29:38Z</updated>
    <id>tag:github.com,2024-06-16:/a0rtega/pafish</id>
    <link href="https://github.com/a0rtega/pafish" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pafish is a testing tool that uses different techniques to detect virtual machines and malware analysis environments in the same way that malware families do&lt;/p&gt;&lt;hr&gt;&lt;img alt=&#34;pafish-logo&#34; src=&#34;https://raw.githubusercontent.com/a0rtega/pafish/master/pafish/pafish.ico&#34; align=&#34;left&#34; width=&#34;64px&#34;&gt; &#xA;&lt;h1&gt;Pafish&lt;/h1&gt; &#xA;&lt;p&gt;Pafish is a testing tool that uses different techniques to detect virtual machines and malware analysis environments in the same way that malware families do.&lt;/p&gt; &#xA;&lt;p&gt;The project is free and open source; the code of all the anti-analysis techniques is publicly available. Pafish executables for Windows (x86 32-bit and 64-bit) can be downloaded from the &lt;a href=&#34;https://github.com/a0rtega/pafish/releases&#34;&gt;releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/a0rtega/pafish/raw/dev/screenshots/v06/pafish_native_win10.png&#34; alt=&#34;pafish screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Scope&lt;/h1&gt; &#xA;&lt;p&gt;The goal of this project is to collect techniques commonly observed in malware samples to evade analysis systems. This allows analysts to study them and test whether the analysis environments are properly implemented.&lt;/p&gt; &#xA;&lt;h1&gt;Building Pafish&lt;/h1&gt; &#xA;&lt;p&gt;Pafish is written in C and can be built with &lt;code&gt;Mingw-w64&lt;/code&gt; and &lt;code&gt;make&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The wiki page &#34;&lt;a href=&#34;https://github.com/a0rtega/pafish/wiki/How-to-build&#34;&gt;How to build&lt;/a&gt;&#34; contains detailed instructions.&lt;/p&gt; &#xA;&lt;h1&gt;Author&lt;/h1&gt; &#xA;&lt;p&gt;Alberto Ortega and many awesome &lt;a href=&#34;https://github.com/a0rtega/pafish/graphs/contributors&#34;&gt;contributors&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/a0rtega/pafish/master/LICENSE.txt&#34;&gt;GPL-3.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>