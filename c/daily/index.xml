<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub C Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-06T01:31:28Z</updated>
  <subtitle>Daily Trending of C in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Forairaaaaa/Chappie-II</title>
    <updated>2023-04-06T01:31:28Z</updated>
    <id>tag:github.com,2023-04-06:/Forairaaaaa/Chappie-II</id>
    <link href="https://github.com/Forairaaaaa/Chappie-II" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Update of Chappie-Core&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chappie-II&lt;/h1&gt; &#xA;&lt;p&gt;基于ESP32的简易掌上终端~&lt;/p&gt; &#xA;&lt;p&gt;视频介绍：&lt;a href=&#34;https://www.bilibili.com/video/BV1QL411S7jo&#34;&gt;https://www.bilibili.com/video/BV1QL411S7jo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;硬件开源链接：&lt;a href=&#34;https://oshwhub.com/eedadada/chappie2&#34;&gt;https://oshwhub.com/eedadada/chappie2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Forairaaaaa/Chappie-II/raw/main/Pics/Chappie-II_Cover_43.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Forairaaaaa/Chappie-II/raw/main/Pics/captrue1.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Forairaaaaa/Chappie-II/raw/main/Pics/captrue2.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Forairaaaaa/Chappie-II/raw/main/Pics/captrue3.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Forairaaaaa/Chappie-II/raw/main/Pics/captrue4.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>system76/firmware-open</title>
    <updated>2023-04-06T01:31:28Z</updated>
    <id>tag:github.com,2023-04-06:/system76/firmware-open</id>
    <link href="https://github.com/system76/firmware-open" rel="alternate"></link>
    <summary type="html">&lt;p&gt;System76 Open Firmware&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;System76 Open Firmware&lt;/h1&gt; &#xA;&lt;p&gt;An open source distribution of firmware utilizing coreboot, EDK2, and System76 firmware applications.&lt;/p&gt; &#xA;&lt;h2&gt;Supported models&lt;/h2&gt; &#xA;&lt;p&gt;These models are supported and will receive updates through the firmware manager:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;addw2&lt;/li&gt; &#xA; &lt;li&gt;bonw14&lt;/li&gt; &#xA; &lt;li&gt;darp6&lt;/li&gt; &#xA; &lt;li&gt;darp7&lt;/li&gt; &#xA; &lt;li&gt;darp8&lt;/li&gt; &#xA; &lt;li&gt;galp4&lt;/li&gt; &#xA; &lt;li&gt;galp5&lt;/li&gt; &#xA; &lt;li&gt;galp6&lt;/li&gt; &#xA; &lt;li&gt;gaze15&lt;/li&gt; &#xA; &lt;li&gt;gaze16-3050&lt;/li&gt; &#xA; &lt;li&gt;gaze16-3060&lt;/li&gt; &#xA; &lt;li&gt;gaze16-3060-b&lt;/li&gt; &#xA; &lt;li&gt;gaze17-3050&lt;/li&gt; &#xA; &lt;li&gt;gaze17-3060-b&lt;/li&gt; &#xA; &lt;li&gt;lemp9&lt;/li&gt; &#xA; &lt;li&gt;lemp10&lt;/li&gt; &#xA; &lt;li&gt;lemp11&lt;/li&gt; &#xA; &lt;li&gt;oryp6&lt;/li&gt; &#xA; &lt;li&gt;oryp7&lt;/li&gt; &#xA; &lt;li&gt;oryp8&lt;/li&gt; &#xA; &lt;li&gt;oryp9&lt;/li&gt; &#xA; &lt;li&gt;oryp10&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Other models may be in development or available without support, and can be seen in the &lt;code&gt;models/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;If the device becomes bricked it will require restoring the current firmware using an external programmer. See &lt;a href=&#34;https://raw.githubusercontent.com/system76/firmware-open/master/docs/flashing.md&#34;&gt;flashing&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h3&gt;Schematics&lt;/h3&gt; &#xA;&lt;p&gt;System76 customers may request board schematics for their system by sending an email to &lt;a href=&#34;mailto:firmware@system76.com&#34;&gt;firmware@system76.com&lt;/a&gt; with the subject line &#34;Schematics for &lt;em&gt;model&lt;/em&gt;&#34;, where &lt;em&gt;model&lt;/em&gt; is one of the supported models listed above. Please include the serial number of your system for verification.&lt;/p&gt; &#xA;&lt;p&gt;You may not share these without explicit permission from System76.&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;For a list of important changes please see the &lt;a href=&#34;https://raw.githubusercontent.com/system76/firmware-open/master/CHANGELOG.md&#34;&gt;changelog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Dependencies can be installed with the provided script.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./scripts/deps.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If rustup was installed for the first time, it will be required to source the environment file it installed to use the correct Rust toolchain.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;source ~/.cargo/env&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A script is provided to build the firmware. The available targets for building are the model folders in &lt;code&gt;models/&lt;/code&gt;. For example, to build for QEMU:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./scripts/build.sh qemu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once built, the firmware must be flashed to use. Several scripts are available to flash the new firmware, depending on how it is going to be written.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;scripts/qemu.sh&lt;/code&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/system76/firmware-open/master/docs/debugging.md#using-qemu&#34;&gt;Run the firmware in QEMU&lt;/a&gt; (specific to the QEMU model)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;scripts/flash.sh&lt;/code&gt;: Flash using the internal flasher&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;scripts/ch341a-flash.sh&lt;/code&gt;: Flash using a CH341A programmer&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;scripts/spipi-flash.sh&lt;/code&gt;: Flash using a Raspberry Pi&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/system76/firmware-open/master/docs/flashing.md&#34;&gt;Flashing firmware&lt;/a&gt; for more details.&lt;/p&gt;</summary>
  </entry>
</feed>